

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Aug 16 01:27:54 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=3
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=3
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=3
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=3
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=3
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=3
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=3
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    89                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    90                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    91                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    92                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    93                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    94  0000                     
    95                           ; Version 2.20
    96                           ; Generated 05/05/2020 GMT
    97                           ; 
    98                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    99                           ; All rights reserved.
   100                           ; 
   101                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   102                           ; 
   103                           ; Redistribution and use in source and binary forms, with or without modification, are
   104                           ; permitted provided that the following conditions are met:
   105                           ; 
   106                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   107                           ;        conditions and the following disclaimer.
   108                           ; 
   109                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   110                           ;        of conditions and the following disclaimer in the documentation and/or other
   111                           ;        materials provided with the distribution.
   112                           ; 
   113                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   114                           ;        software without specific prior written permission.
   115                           ; 
   116                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   117                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   118                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   119                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   120                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   121                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   122                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   123                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   124                           ; 
   125                           ; 
   126                           ; Code-generator required, PIC18F45K22 Definitions
   127                           ; 
   128                           ; SFR Addresses
   129  0000                     
   130                           	psect	eeprom_data
   131  F00000  1E 0A 04 00 00 00 00 00 	db	30,10,4,0,0,0,0,0	;# 
   132  0000                     
   133                           	psect	idataBANK1
   134  005CE2                     __pidataBANK1:
   135                           	callstack 0
   136                           
   137                           ;initializer for _KD@fs_speed_controller$F1845
   138  005CE2  0000               	dw	0
   139  005CE4  3F80               	dw	16256
   140                           
   141                           ;initializer for _KP@fs_speed_controller$F1844
   142  005CE6  CCCD               	dw	52429
   143  005CE8  3E4C               	dw	15948
   144                           
   145                           ;initializer for _KD@fs_speed_controller$F1641
   146  005CEA  0000               	dw	0
   147  005CEC  3F80               	dw	16256
   148                           
   149                           ;initializer for _KP@fs_speed_controller$F1640
   150  005CEE  CCCD               	dw	52429
   151  005CF0  3E4C               	dw	15948
   152                           
   153                           ;initializer for _KD@fs_speed_controller$F1185
   154  005CF2  0000               	dw	0
   155  005CF4  3F80               	dw	16256
   156                           
   157                           ;initializer for _KP@fs_speed_controller$F1184
   158  005CF6  CCCD               	dw	52429
   159  005CF8  3E4C               	dw	15948
   160                           
   161                           ;initializer for _KD
   162  005CFA  0000               	dw	0
   163  005CFC  3F80               	dw	16256
   164                           
   165                           ;initializer for _KP
   166  005CFE  CCCD               	dw	52429
   167  005D00  3E4C               	dw	15948
   168  0000                     _ANSELCbits	set	3898
   169  0000                     _ANSELBbits	set	3897
   170  0000                     _ANSELDbits	set	3899
   171  0000                     _ANSELEbits	set	3900
   172  0000                     _ANSELAbits	set	3896
   173  0000                     _T0CON	set	4053
   174  0000                     _TMR0L	set	4054
   175  0000                     _TMR0H	set	4055
   176  0000                     _INTCONbits	set	4082
   177  0000                     _CCPR2L	set	3943
   178  0000                     _CCPR1L	set	4030
   179  0000                     _PR2	set	4027
   180  0000                     _TMR2	set	4028
   181  0000                     _T2CONbits	set	4026
   182  0000                     _CCP2CON	set	3942
   183  0000                     _CCP1CON	set	4029
   184  0000                     _LATCbits	set	3979
   185  0000                     _LATDbits	set	3980
   186  0000                     _TRISCbits	set	3988
   187  0000                     _OSCTUNEbits	set	3995
   188  0000                     _OSCCONbits	set	4051
   189  0000                     _TRISBbits	set	3987
   190  0000                     _TRISDbits	set	3989
   191  0000                     _PORTDbits	set	3971
   192  0000                     _PORTBbits	set	3969
   193  0000                     _PIR2bits	set	4001
   194  0000                     _EECON2	set	4007
   195  0000                     _EEDATA	set	4008
   196  0000                     _EECON1bits	set	4006
   197  0000                     _EEADR	set	4009
   198  0000                     _ADCON2bits	set	4032
   199  0000                     _ADCON1	set	4033
   200  0000                     _ADCON0	set	4034
   201  0000                     _TRISEbits	set	3990
   202  0000                     _TRISAbits	set	3986
   203  0000                     _ADRESL	set	4035
   204  0000                     _ADRESH	set	4036
   205  0000                     _ADCON0bits	set	4034
   206                           
   207                           	psect	smallconst
   208  000600                     __psmallconst:
   209                           	callstack 0
   210  000600  00                 	db	0
   211  000601                     STR_12:
   212  000601  25                 	db	37
   213  000602  64                 	db	100	;'d'
   214  000603  20                 	db	32
   215  000604  20                 	db	32
   216  000605  20                 	db	32
   217  000606  20                 	db	32
   218  000607  20                 	db	32
   219  000608  20                 	db	32
   220  000609  20                 	db	32
   221  00060A  20                 	db	32
   222  00060B  20                 	db	32
   223  00060C  20                 	db	32
   224  00060D  20                 	db	32
   225  00060E  20                 	db	32
   226  00060F  20                 	db	32
   227  000610  20                 	db	32
   228  000611  20                 	db	32
   229  000612  00                 	db	0
   230  000613                     STR_7:
   231  000613  50                 	db	80	;'P'
   232  000614  49                 	db	73	;'I'
   233  000615  44                 	db	68	;'D'
   234  000616  20                 	db	32
   235  000617  50                 	db	80	;'P'
   236  000618  41                 	db	65	;'A'
   237  000619  52                 	db	82	;'R'
   238  00061A  41                 	db	65	;'A'
   239  00061B  4D                 	db	77	;'M'
   240  00061C  20                 	db	32
   241  00061D  20                 	db	32
   242  00061E  20                 	db	32
   243  00061F  20                 	db	32
   244  000620  20                 	db	32
   245  000621  20                 	db	32
   246  000622  20                 	db	32
   247  000623  00                 	db	0
   248  000624                     STR_11:
   249  000624  48                 	db	72	;'H'
   250  000625  49                 	db	73	;'I'
   251  000626  5A                 	db	90	;'Z'
   252  000627  20                 	db	32
   253  000628  4C                 	db	76	;'L'
   254  000629  69                 	db	105	;'i'
   255  00062A  4D                 	db	77	;'M'
   256  00062B  69                 	db	105	;'i'
   257  00062C  54                 	db	84	;'T'
   258  00062D  69                 	db	105	;'i'
   259  00062E  20                 	db	32
   260  00062F  20                 	db	32
   261  000630  20                 	db	32
   262  000631  20                 	db	32
   263  000632  20                 	db	32
   264  000633  20                 	db	32
   265  000634  00                 	db	0
   266  000635                     STR_1:
   267  000635  4B                 	db	75	;'K'
   268  000636  41                 	db	65	;'A'
   269  000637  4C                 	db	76	;'L'
   270  000638  41                 	db	65	;'A'
   271  000639  4E                 	db	78	;'N'
   272  00063A  20                 	db	32
   273  00063B  5A                 	db	90	;'Z'
   274  00063C  41                 	db	65	;'A'
   275  00063D  4D                 	db	77	;'M'
   276  00063E  41                 	db	65	;'A'
   277  00063F  4E                 	db	78	;'N'
   278  000640  20                 	db	32
   279  000641  20                 	db	32
   280  000642  20                 	db	32
   281  000643  20                 	db	32
   282  000644  20                 	db	32
   283  000645  00                 	db	0
   284  000646                     STR_3:
   285  000646  5A                 	db	90	;'Z'
   286  000647  41                 	db	65	;'A'
   287  000648  4D                 	db	77	;'M'
   288  000649  41                 	db	65	;'A'
   289  00064A  4E                 	db	78	;'N'
   290  00064B  20                 	db	32
   291  00064C  44                 	db	68	;'D'
   292  00064D  4F                 	db	79	;'O'
   293  00064E  4C                 	db	76	;'L'
   294  00064F  44                 	db	68	;'D'
   295  000650  55                 	db	85	;'U'
   296  000651  20                 	db	32
   297  000652  20                 	db	32
   298  000653  20                 	db	32
   299  000654  20                 	db	32
   300  000655  20                 	db	32
   301  000656  00                 	db	0
   302  000657                     STR_5:
   303  000657  48                 	db	72	;'H'
   304  000658  41                 	db	65	;'A'
   305  000659  52                 	db	82	;'R'
   306  00065A  45                 	db	69	;'E'
   307  00065B  4B                 	db	75	;'K'
   308  00065C  45                 	db	69	;'E'
   309  00065D  54                 	db	84	;'T'
   310  00065E  20                 	db	32
   311  00065F  44                 	db	68	;'D'
   312  000660  55                 	db	85	;'U'
   313  000661  52                 	db	82	;'R'
   314  000662  44                 	db	68	;'D'
   315  000663  55                 	db	85	;'U'
   316  000664  20                 	db	32
   317  000665  20                 	db	32
   318  000666  20                 	db	32
   319  000667  00                 	db	0
   320  000668                     STR_15:
   321  000668  48                 	db	72	;'H'
   322  000669  41                 	db	65	;'A'
   323  00066A  52                 	db	82	;'R'
   324  00066B  45                 	db	69	;'E'
   325  00066C  4B                 	db	75	;'K'
   326  00066D  54                 	db	84	;'T'
   327  00066E  20                 	db	32
   328  00066F  5A                 	db	90	;'Z'
   329  000670  41                 	db	65	;'A'
   330  000671  4D                 	db	77	;'M'
   331  000672  41                 	db	65	;'A'
   332  000673  4E                 	db	78	;'N'
   333  000674  49                 	db	73	;'I'
   334  000675  20                 	db	32
   335  000676  64                 	db	100	;'d'
   336  000677  6B                 	db	107	;'k'
   337  000678  00                 	db	0
   338  000679                     STR_13:
   339  000679  44                 	db	68	;'D'
   340  00067A  55                 	db	85	;'U'
   341  00067B  52                 	db	82	;'R'
   342  00067C  4D                 	db	77	;'M'
   343  00067D  41                 	db	65	;'A'
   344  00067E  20                 	db	32
   345  00067F  5A                 	db	90	;'Z'
   346  000680  41                 	db	65	;'A'
   347  000681  4D                 	db	77	;'M'
   348  000682  41                 	db	65	;'A'
   349  000683  4E                 	db	78	;'N'
   350  000684  49                 	db	73	;'I'
   351  000685  20                 	db	32
   352  000686  20                 	db	32
   353  000687  6D                 	db	109	;'m'
   354  000688  73                 	db	115	;'s'
   355  000689  00                 	db	0
   356  00068A                     STR_14:
   357  00068A  25                 	db	37
   358  00068B  64                 	db	100	;'d'
   359  00068C  20                 	db	32
   360  00068D  20                 	db	32
   361  00068E  20                 	db	32
   362  00068F  20                 	db	32
   363  000690  20                 	db	32
   364  000691  20                 	db	32
   365  000692  20                 	db	32
   366  000693  20                 	db	32
   367  000694  20                 	db	32
   368  000695  20                 	db	32
   369  000696  20                 	db	32
   370  000697  20                 	db	32
   371  000698  20                 	db	32
   372  000699  00                 	db	0
   373  00069A                     STR_4:
   374  00069A  20                 	db	32
   375  00069B  20                 	db	32
   376  00069C  20                 	db	32
   377  00069D  20                 	db	32
   378  00069E  20                 	db	32
   379  00069F  20                 	db	32
   380  0006A0  25                 	db	37
   381  0006A1  64                 	db	100	;'d'
   382  0006A2  3A                 	db	58	;':'
   383  0006A3  25                 	db	37
   384  0006A4  64                 	db	100	;'d'
   385  0006A5  20                 	db	32
   386  0006A6  20                 	db	32
   387  0006A7  20                 	db	32
   388  0006A8  20                 	db	32
   389  0006A9  00                 	db	0
   390  0006AA                     STR_2:
   391  0006AA  20                 	db	32
   392  0006AB  20                 	db	32
   393  0006AC  20                 	db	32
   394  0006AD  20                 	db	32
   395  0006AE  20                 	db	32
   396  0006AF  20                 	db	32
   397  0006B0  25                 	db	37
   398  0006B1  64                 	db	100	;'d'
   399  0006B2  3A                 	db	58	;':'
   400  0006B3  25                 	db	37
   401  0006B4  64                 	db	100	;'d'
   402  0006B5  20                 	db	32
   403  0006B6  20                 	db	32
   404  0006B7  20                 	db	32
   405  0006B8  00                 	db	0
   406  0006B9                     STR_8:
   407  0006B9  4B                 	db	75	;'K'
   408  0006BA  70                 	db	112	;'p'
   409  0006BB  3A                 	db	58	;':'
   410  0006BC  25                 	db	37
   411  0006BD  35                 	db	53	;'5'
   412  0006BE  2E                 	db	46
   413  0006BF  31                 	db	49	;'1'
   414  0006C0  66                 	db	102	;'f'
   415  0006C1  20                 	db	32
   416  0006C2  20                 	db	32
   417  0006C3  20                 	db	32
   418  0006C4  20                 	db	32
   419  0006C5  20                 	db	32
   420  0006C6  00                 	db	0
   421  0006C7                     STR_10:
   422  0006C7  4B                 	db	75	;'K'
   423  0006C8  64                 	db	100	;'d'
   424  0006C9  3A                 	db	58	;':'
   425  0006CA  25                 	db	37
   426  0006CB  35                 	db	53	;'5'
   427  0006CC  2E                 	db	46
   428  0006CD  31                 	db	49	;'1'
   429  0006CE  66                 	db	102	;'f'
   430  0006CF  20                 	db	32
   431  0006D0  20                 	db	32
   432  0006D1  20                 	db	32
   433  0006D2  20                 	db	32
   434  0006D3  00                 	db	0
   435  0006D4                     STR_17:
   436  0006D4  49                 	db	73	;'I'
   437  0006D5  4E                 	db	78	;'N'
   438  0006D6  46                 	db	70	;'F'
   439  0006D7  00                 	db	0
   440  0006D8                     STR_21:
   441  0006D8  4E                 	db	78	;'N'
   442  0006D9  41                 	db	65	;'A'
   443  0006DA  4E                 	db	78	;'N'
   444  0006DB  00                 	db	0
   445  0006DC                     STR_18:
   446  0006DC  69                 	db	105	;'i'
   447  0006DD  6E                 	db	110	;'n'
   448  0006DE  66                 	db	102	;'f'
   449  0006DF  00                 	db	0
   450  0006E0                     STR_22:
   451  0006E0  6E                 	db	110	;'n'
   452  0006E1  61                 	db	97	;'a'
   453  0006E2  6E                 	db	110	;'n'
   454  0006E3  00                 	db	0
   455  0006E4                     STR_25:
   456  0006E4  6C                 	db	108	;'l'
   457  0006E5  66                 	db	102	;'f'
   458  0006E6  00                 	db	0
   459  0006E7  00                 	db	0	; dummy byte at the end
   460  0000                     
   461                           ; #config settings
   462                           
   463                           	psect	cinit
   464  005842                     __pcinit:
   465                           	callstack 0
   466  005842                     start_initialization:
   467                           	callstack 0
   468  005842                     __initialization:
   469                           	callstack 0
   470                           
   471                           ; Initialize objects allocated to BANK1 (32 bytes)
   472                           ; load TBLPTR registers with __pidataBANK1
   473  005842  0EE2               	movlw	low __pidataBANK1
   474  005844  6EF6               	movwf	tblptrl,c
   475  005846  0E5C               	movlw	high __pidataBANK1
   476  005848  6EF7               	movwf	tblptrh,c
   477  00584A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   478  00584C  6EF8               	movwf	tblptru,c
   479  00584E  EE01  F0D3         	lfsr	0,__pdataBANK1
   480  005852  EE10 F020          	lfsr	1,32
   481  005856                     copy_data0:
   482  005856  0009               	tblrd		*+
   483  005858  CFF5 FFEE          	movff	tablat,postinc0
   484  00585C  50E5               	movf	postdec1,w,c
   485  00585E  50E1               	movf	fsr1l,w,c
   486  005860  E1FA               	bnz	copy_data0
   487                           
   488                           ; Clear objects allocated to BANK2 (144 bytes)
   489  005862  EE02  F000         	lfsr	0,__pbssBANK2
   490  005866  0E90               	movlw	144
   491  005868                     clear_0:
   492  005868  6AEE               	clrf	postinc0,c
   493  00586A  06E8               	decf	wreg,f,c
   494  00586C  E1FD               	bnz	clear_0
   495                           
   496                           ; Clear objects allocated to BANK1 (211 bytes)
   497  00586E  EE01  F000         	lfsr	0,__pbssBANK1
   498  005872  0ED3               	movlw	211
   499  005874                     clear_1:
   500  005874  6AEE               	clrf	postinc0,c
   501  005876  06E8               	decf	wreg,f,c
   502  005878  E1FD               	bnz	clear_1
   503                           
   504                           ; Clear objects allocated to BANK0 (13 bytes)
   505  00587A  EE00  F0F3         	lfsr	0,__pbssBANK0
   506  00587E  0E0D               	movlw	13
   507  005880                     clear_2:
   508  005880  6AEE               	clrf	postinc0,c
   509  005882  06E8               	decf	wreg,f,c
   510  005884  E1FD               	bnz	clear_2
   511  005886                     end_of_initialization:
   512                           	callstack 0
   513  005886                     __end_of__initialization:
   514                           	callstack 0
   515  005886  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   516  005888  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   517  00588A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   518  00588C  6EF8               	movwf	tblptru,c
   519  00588E  0100               	movlb	0
   520  005890  EF67  F026         	goto	_main	;jump to C main() function
   521                           
   522                           	psect	bssBANK0
   523  0000F3                     __pbssBANK0:
   524                           	callstack 0
   525  0000F3                     _menu_value:
   526                           	callstack 0
   527  0000F3                     	ds	3
   528  0000F6                     _prec:
   529                           	callstack 0
   530  0000F6                     	ds	2
   531  0000F8                     _flags:
   532                           	callstack 0
   533  0000F8                     	ds	2
   534  0000FA                     _menu_selected:
   535                           	callstack 0
   536  0000FA                     	ds	1
   537  0000FB                     _secretMenuCounter:
   538                           	callstack 0
   539  0000FB                     	ds	1
   540  0000FC                     _stopIsClick:
   541                           	callstack 0
   542  0000FC                     	ds	1
   543  0000FD                     _startIsClick:
   544                           	callstack 0
   545  0000FD                     	ds	1
   546  0000FE                     _pauseIsClick:
   547                           	callstack 0
   548  0000FE                     	ds	1
   549  0000FF                     _timer_counter_flag:
   550                           	callstack 0
   551  0000FF                     	ds	1
   552                           
   553                           	psect	bssBANK1
   554  000100                     __pbssBANK1:
   555                           	callstack 0
   556  000100                     _convert_data:
   557                           	callstack 0
   558  000100                     	ds	48
   559  000130                     _procces_data:
   560                           	callstack 0
   561  000130                     	ds	32
   562  000150                     _controller:
   563                           	callstack 0
   564  000150                     	ds	19
   565  000163                     	ds	16
   566  000173                     	ds	16
   567  000183                     	ds	16
   568  000193                     _adc_raw_data:
   569                           	callstack 0
   570  000193                     	ds	16
   571  0001A3                     _driver_limit:
   572                           	callstack 0
   573  0001A3                     	ds	12
   574  0001AF                     _timer_value:
   575                           	callstack 0
   576  0001AF                     	ds	8
   577  0001B7                     _menu_flags:
   578                           	callstack 0
   579  0001B7                     	ds	6
   580  0001BD                     _button_bounce_controller:
   581                           	callstack 0
   582  0001BD                     	ds	6
   583  0001C3                     floorf@F524:
   584                           	callstack 0
   585  0001C3                     	ds	4
   586  0001C7                     ___fpclassifyf@F463:
   587                           	callstack 0
   588  0001C7                     	ds	4
   589  0001CB                     fabsf@F463:
   590                           	callstack 0
   591  0001CB                     	ds	4
   592  0001CF                     _nout:
   593                           	callstack 0
   594  0001CF                     	ds	2
   595  0001D1                     _width:
   596                           	callstack 0
   597  0001D1                     	ds	2
   598                           
   599                           	psect	dataBANK1
   600  0001D3                     __pdataBANK1:
   601                           	callstack 0
   602  0001D3                     	ds	4
   603  0001D7                     	ds	4
   604  0001DB                     _KD@fs_speed_controller$F1641:
   605                           	callstack 0
   606  0001DB                     	ds	4
   607  0001DF                     _KP@fs_speed_controller$F1640:
   608                           	callstack 0
   609  0001DF                     	ds	4
   610  0001E3                     	ds	4
   611  0001E7                     	ds	4
   612  0001EB                     	ds	4
   613  0001EF                     	ds	4
   614                           
   615                           	psect	bssBANK2
   616  000200                     __pbssBANK2:
   617                           	callstack 0
   618  000200                     	ds	16
   619  000210                     	ds	16
   620  000220                     	ds	16
   621  000230                     	ds	16
   622  000240                     _dbuf:
   623                           	callstack 0
   624  000240                     	ds	80
   625                           
   626                           	psect	cstackBANK0
   627  000060                     __pcstackBANK0:
   628                           	callstack 0
   629  000060                     floorf@m:
   630                           	callstack 0
   631                           
   632                           ; 4 bytes @ 0x0
   633  000060                     	ds	4
   634  000064                     floorf@e:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x4
   638  000064                     	ds	2
   639  000066                     floorf@u:
   640                           	callstack 0
   641                           
   642                           ; 4 bytes @ 0x6
   643  000066                     	ds	4
   644  00006A                     ??_efgtoa:
   645                           
   646                           ; 1 bytes @ 0xA
   647  00006A                     	ds	5
   648  00006F                     efgtoa@ou:
   649                           	callstack 0
   650                           
   651                           ; 4 bytes @ 0xF
   652  00006F                     	ds	4
   653  000073                     _efgtoa$2569:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x13
   657  000073                     	ds	2
   658  000075                     _efgtoa$2570:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x15
   662  000075                     	ds	2
   663  000077                     _efgtoa$2574:
   664                           	callstack 0
   665                           
   666                           ; 2 bytes @ 0x17
   667  000077                     	ds	2
   668  000079                     _efgtoa$2578:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x19
   672  000079                     	ds	2
   673  00007B                     _efgtoa$2579:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x1B
   677  00007B                     	ds	2
   678  00007D                     _efgtoa$2580:
   679                           	callstack 0
   680                           
   681                           ; 2 bytes @ 0x1D
   682  00007D                     	ds	2
   683  00007F                     efgtoa@t:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x1F
   687  00007F                     	ds	2
   688  000081                     efgtoa@pp:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x21
   692  000081                     	ds	2
   693  000083                     efgtoa@m:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0x23
   697  000083                     	ds	2
   698  000085                     efgtoa@ne:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0x25
   702  000085                     	ds	2
   703  000087                     efgtoa@d:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x27
   707  000087                     	ds	2
   708  000089                     efgtoa@sign:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x29
   712  000089                     	ds	2
   713  00008B                     efgtoa@p:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x2B
   717  00008B                     	ds	2
   718  00008D                     efgtoa@nmode:
   719                           	callstack 0
   720                           
   721                           ; 1 bytes @ 0x2D
   722  00008D                     	ds	1
   723  00008E                     efgtoa@w:
   724                           	callstack 0
   725                           
   726                           ; 2 bytes @ 0x2E
   727  00008E                     	ds	2
   728  000090                     efgtoa@mode:
   729                           	callstack 0
   730                           
   731                           ; 1 bytes @ 0x30
   732  000090                     	ds	1
   733  000091                     efgtoa@h:
   734                           	callstack 0
   735                           
   736                           ; 4 bytes @ 0x31
   737  000091                     	ds	4
   738  000095                     efgtoa@l:
   739                           	callstack 0
   740                           
   741                           ; 4 bytes @ 0x35
   742  000095                     	ds	4
   743  000099                     efgtoa@i:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0x39
   747  000099                     	ds	2
   748  00009B                     efgtoa@g:
   749                           	callstack 0
   750                           
   751                           ; 4 bytes @ 0x3B
   752  00009B                     	ds	4
   753  00009F                     efgtoa@e:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0x3F
   757  00009F                     	ds	2
   758  0000A1                     efgtoa@n:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0x41
   762  0000A1                     	ds	2
   763  0000A3                     efgtoa@u:
   764                           	callstack 0
   765                           
   766                           ; 4 bytes @ 0x43
   767  0000A3                     	ds	4
   768  0000A7                     ?_vfpfcnvrt:
   769                           	callstack 0
   770  0000A7                     vfpfcnvrt@fp:
   771                           	callstack 0
   772                           
   773                           ; 2 bytes @ 0x47
   774  0000A7                     	ds	2
   775  0000A9                     vfpfcnvrt@fmt:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0x49
   779  0000A9                     	ds	2
   780  0000AB                     vfpfcnvrt@ap:
   781                           	callstack 0
   782                           
   783                           ; 2 bytes @ 0x4B
   784  0000AB                     	ds	2
   785  0000AD                     ??_vfpfcnvrt:
   786                           
   787                           ; 1 bytes @ 0x4D
   788  0000AD                     	ds	4
   789  0000B1                     vfpfcnvrt@ll:
   790                           	callstack 0
   791                           
   792                           ; 8 bytes @ 0x51
   793  0000B1                     	ds	8
   794  0000B9                     _vfpfcnvrt$2594:
   795                           	callstack 0
   796                           
   797                           ; 2 bytes @ 0x59
   798  0000B9                     	ds	2
   799  0000BB                     _vfpfcnvrt$2595:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x5B
   803  0000BB                     	ds	2
   804  0000BD                     _vfpfcnvrt$2600:
   805                           	callstack 0
   806                           
   807                           ; 2 bytes @ 0x5D
   808  0000BD                     	ds	2
   809  0000BF                     vfpfcnvrt@f:
   810                           	callstack 0
   811                           
   812                           ; 4 bytes @ 0x5F
   813  0000BF                     	ds	4
   814  0000C3                     vfpfcnvrt@ct:
   815                           	callstack 0
   816                           
   817                           ; 3 bytes @ 0x63
   818  0000C3                     	ds	3
   819  0000C6                     vfpfcnvrt@c:
   820                           	callstack 0
   821                           
   822                           ; 1 bytes @ 0x66
   823  0000C6                     	ds	1
   824  0000C7                     ?_vfprintf:
   825                           	callstack 0
   826  0000C7                     vfprintf@fp:
   827                           	callstack 0
   828                           
   829                           ; 2 bytes @ 0x67
   830  0000C7                     	ds	2
   831  0000C9                     vfprintf@fmt:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0x69
   835  0000C9                     	ds	2
   836  0000CB                     vfprintf@ap:
   837                           	callstack 0
   838                           
   839                           ; 2 bytes @ 0x6B
   840  0000CB                     	ds	2
   841  0000CD                     vfprintf@cfmt:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0x6D
   845  0000CD                     	ds	2
   846  0000CF                     ?_sprintf:
   847                           	callstack 0
   848  0000CF                     sprintf@s:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x6F
   852  0000CF                     	ds	2
   853  0000D1                     sprintf@fmt:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0x71
   857  0000D1                     	ds	8
   858  0000D9                     sprintf@ap:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x79
   862  0000D9                     	ds	2
   863  0000DB                     sprintf@f:
   864                           	callstack 0
   865                           
   866                           ; 6 bytes @ 0x7B
   867  0000DB                     	ds	6
   868  0000E1                     mainMenu@textCursor2:
   869                           	callstack 0
   870  0000E1                     stopMenu@textCursor2:
   871                           	callstack 0
   872  0000E1                     pauseMenu@textCursor2:
   873                           	callstack 0
   874  0000E1                     secretMenu@textCursor2:
   875                           	callstack 0
   876  0000E1                     speedLimitSettingMenu@textCursor2:
   877                           	callstack 0
   878  0000E1                     stopTimeSettingMenu@textCursor2:
   879                           	callstack 0
   880  0000E1                     driverTimeSettingMenu@textCursor2:
   881                           	callstack 0
   882                           
   883                           ; 16 bytes @ 0x81
   884  0000E1                     	ds	16
   885  0000F1                     ??_stateMachine:
   886                           
   887                           ; 1 bytes @ 0x91
   888  0000F1                     	ds	2
   889                           
   890                           	psect	cstackCOMRAM
   891  000001                     __pcstackCOMRAM:
   892                           	callstack 0
   893  000001                     ?_strlen:
   894                           	callstack 0
   895  000001                     ?___fpclassifyf:
   896                           	callstack 0
   897  000001                     ?_isupper:
   898                           	callstack 0
   899  000001                     ?_isdigit:
   900                           	callstack 0
   901  000001                     ?_strncmp:
   902                           	callstack 0
   903  000001                     ?_isspace:
   904                           	callstack 0
   905  000001                     ?_readAdcValue:
   906                           	callstack 0
   907  000001                     ?___wmul:
   908                           	callstack 0
   909  000001                     ?___awdiv:
   910                           	callstack 0
   911  000001                     ?___awmod:
   912                           	callstack 0
   913  000001                     ?___lmul:
   914                           	callstack 0
   915  000001                     ?___lldiv:
   916                           	callstack 0
   917  000001                     ?___flneg:
   918                           	callstack 0
   919  000001                     ?___aodiv:
   920                           	callstack 0
   921  000001                     ?___aomod:
   922                           	callstack 0
   923  000001                     eepromRead@address:
   924                           	callstack 0
   925  000001                     eepromWrite@data:
   926                           	callstack 0
   927  000001                     Lcd_Port@a:
   928                           	callstack 0
   929  000001                     ___wmul@multiplier:
   930                           	callstack 0
   931  000001                     ___awdiv@dividend:
   932                           	callstack 0
   933  000001                     ___awmod@dividend:
   934                           	callstack 0
   935  000001                     isdigit@c:
   936                           	callstack 0
   937  000001                     isspace@c:
   938                           	callstack 0
   939  000001                     isupper@c:
   940                           	callstack 0
   941  000001                     fputc@c:
   942                           	callstack 0
   943  000001                     strcpy@dest:
   944                           	callstack 0
   945  000001                     strlen@s:
   946                           	callstack 0
   947  000001                     strncmp@_l:
   948                           	callstack 0
   949  000001                     ___lmul@multiplier:
   950                           	callstack 0
   951  000001                     ___lldiv@dividend:
   952                           	callstack 0
   953  000001                     ___fleq@ff1:
   954                           	callstack 0
   955  000001                     ___flneg@f1:
   956                           	callstack 0
   957  000001                     ___fpclassifyf@x:
   958                           	callstack 0
   959  000001                     ___aodiv@dividend:
   960                           	callstack 0
   961  000001                     ___aomod@dividend:
   962                           	callstack 0
   963                           
   964                           ; 8 bytes @ 0x0
   965  000001                     	ds	1
   966  000002                     ??_system_init:
   967  000002                     ??_Lcd_Cmd:
   968  000002                     eepromWrite@address:
   969                           	callstack 0
   970  000002                     Lcd_Write_Char@temp:
   971                           	callstack 0
   972                           
   973                           ; 1 bytes @ 0x1
   974  000002                     	ds	1
   975  000003                     ??_isupper:
   976  000003                     ??_isdigit:
   977  000003                     ??_isspace:
   978  000003                     ??_readAdcValue:
   979  000003                     Lcd_Cmd@a:
   980                           	callstack 0
   981  000003                     Lcd_Write_Char@y:
   982                           	callstack 0
   983  000003                     ___wmul@multiplicand:
   984                           	callstack 0
   985  000003                     ___awdiv@divisor:
   986                           	callstack 0
   987  000003                     ___awmod@divisor:
   988                           	callstack 0
   989  000003                     fputc@fp:
   990                           	callstack 0
   991  000003                     strcpy@src:
   992                           	callstack 0
   993  000003                     strlen@a:
   994                           	callstack 0
   995  000003                     strncmp@_r:
   996                           	callstack 0
   997                           
   998                           ; 2 bytes @ 0x2
   999  000003                     	ds	1
  1000  000004                     ??_lcd_init:
  1001  000004                     Lcd_Set_Cursor@b:
  1002                           	callstack 0
  1003  000004                     Lcd_Write_Char@a:
  1004                           	callstack 0
  1005                           
  1006                           ; 1 bytes @ 0x3
  1007  000004                     	ds	1
  1008  000005                     ??_fputc:
  1009  000005                     ??___fpclassifyf:
  1010  000005                     ??_strcpy:
  1011  000005                     readAdcValue@adcChannel:
  1012                           	callstack 0
  1013  000005                     Lcd_Set_Cursor@a:
  1014                           	callstack 0
  1015  000005                     ___awdiv@counter:
  1016                           	callstack 0
  1017  000005                     ___awmod@counter:
  1018                           	callstack 0
  1019  000005                     Lcd_Write_String@a:
  1020                           	callstack 0
  1021  000005                     ___wmul@product:
  1022                           	callstack 0
  1023  000005                     strncmp@n:
  1024                           	callstack 0
  1025  000005                     ___lmul@multiplicand:
  1026                           	callstack 0
  1027  000005                     ___lldiv@divisor:
  1028                           	callstack 0
  1029  000005                     ___fleq@ff2:
  1030                           	callstack 0
  1031                           
  1032                           ; 4 bytes @ 0x4
  1033  000005                     	ds	1
  1034  000006                     Lcd_Set_Cursor@z:
  1035                           	callstack 0
  1036  000006                     ___awdiv@sign:
  1037                           	callstack 0
  1038  000006                     ___awmod@sign:
  1039                           	callstack 0
  1040  000006                     readAdcValue@adcValue:
  1041                           	callstack 0
  1042                           
  1043                           ; 2 bytes @ 0x5
  1044  000006                     	ds	1
  1045  000007                     ??_strncmp:
  1046  000007                     ??_Lcd_Write_String:
  1047  000007                     ?_tolower:
  1048                           	callstack 0
  1049  000007                     Lcd_Set_Cursor@y:
  1050                           	callstack 0
  1051  000007                     _isspace$2667:
  1052                           	callstack 0
  1053  000007                     ___awdiv@quotient:
  1054                           	callstack 0
  1055  000007                     strcpy@s:
  1056                           	callstack 0
  1057  000007                     tolower@c:
  1058                           	callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x6
  1061  000007                     	ds	1
  1062  000008                     ?_atoi:
  1063                           	callstack 0
  1064  000008                     Lcd_Set_Cursor@temp:
  1065                           	callstack 0
  1066  000008                     atoi@s:
  1067                           	callstack 0
  1068  000008                     strncmp@l:
  1069                           	callstack 0
  1070                           
  1071                           ; 2 bytes @ 0x7
  1072  000008                     	ds	1
  1073  000009                     ??_tolower:
  1074  000009                     ??___fleq:
  1075  000009                     Lcd_Write_String@i:
  1076                           	callstack 0
  1077  000009                     ___fpclassifyf@e:
  1078                           	callstack 0
  1079  000009                     strcpy@d:
  1080                           	callstack 0
  1081  000009                     ___lmul@product:
  1082                           	callstack 0
  1083  000009                     ___lldiv@quotient:
  1084                           	callstack 0
  1085  000009                     ___aodiv@divisor:
  1086                           	callstack 0
  1087  000009                     ___aomod@divisor:
  1088                           	callstack 0
  1089                           
  1090                           ; 8 bytes @ 0x8
  1091  000009                     	ds	1
  1092  00000A                     ??_atoi:
  1093  00000A                     fputs@s:
  1094                           	callstack 0
  1095  00000A                     strncmp@r:
  1096                           	callstack 0
  1097                           
  1098                           ; 2 bytes @ 0x9
  1099  00000A                     	ds	1
  1100  00000B                     ___fpclassifyf@u:
  1101                           	callstack 0
  1102                           
  1103                           ; 4 bytes @ 0xA
  1104  00000B                     	ds	1
  1105  00000C                     fputs@fp:
  1106                           	callstack 0
  1107                           
  1108                           ; 2 bytes @ 0xB
  1109  00000C                     	ds	1
  1110  00000D                     ___lldiv@counter:
  1111                           	callstack 0
  1112  00000D                     _tolower$2731:
  1113                           	callstack 0
  1114                           
  1115                           ; 2 bytes @ 0xC
  1116  00000D                     	ds	1
  1117  00000E                     ?___xxtofl:
  1118                           	callstack 0
  1119  00000E                     fputs@c:
  1120                           	callstack 0
  1121  00000E                     atoi@neg:
  1122                           	callstack 0
  1123  00000E                     ___xxtofl@val:
  1124                           	callstack 0
  1125                           
  1126                           ; 4 bytes @ 0xD
  1127  00000E                     	ds	1
  1128  00000F                     fputs@i:
  1129                           	callstack 0
  1130                           
  1131                           ; 2 bytes @ 0xE
  1132  00000F                     	ds	1
  1133  000010                     _atoi$2636:
  1134                           	callstack 0
  1135                           
  1136                           ; 2 bytes @ 0xF
  1137  000010                     	ds	1
  1138  000011                     ?_pad:
  1139                           	callstack 0
  1140  000011                     ___aodiv@counter:
  1141                           	callstack 0
  1142  000011                     ___aomod@counter:
  1143                           	callstack 0
  1144  000011                     pad@fp:
  1145                           	callstack 0
  1146                           
  1147                           ; 2 bytes @ 0x10
  1148  000011                     	ds	1
  1149  000012                     ??___xxtofl:
  1150  000012                     ___aodiv@sign:
  1151                           	callstack 0
  1152  000012                     ___aomod@sign:
  1153                           	callstack 0
  1154  000012                     _atoi$2638:
  1155                           	callstack 0
  1156                           
  1157                           ; 2 bytes @ 0x11
  1158  000012                     	ds	1
  1159  000013                     ?_abs:
  1160                           	callstack 0
  1161  000013                     pad@buf:
  1162                           	callstack 0
  1163  000013                     abs@a:
  1164                           	callstack 0
  1165  000013                     ___aodiv@quotient:
  1166                           	callstack 0
  1167                           
  1168                           ; 8 bytes @ 0x12
  1169  000013                     	ds	1
  1170  000014                     _atoi$2637:
  1171                           	callstack 0
  1172                           
  1173                           ; 1 bytes @ 0x13
  1174  000014                     	ds	1
  1175  000015                     ??_abs:
  1176  000015                     pad@p:
  1177                           	callstack 0
  1178  000015                     atoi@n:
  1179                           	callstack 0
  1180                           
  1181                           ; 2 bytes @ 0x14
  1182  000015                     	ds	1
  1183  000016                     ___xxtofl@sign:
  1184                           	callstack 0
  1185                           
  1186                           ; 1 bytes @ 0x15
  1187  000016                     	ds	1
  1188  000017                     ??_pad:
  1189  000017                     ___xxtofl@exp:
  1190                           	callstack 0
  1191                           
  1192                           ; 1 bytes @ 0x16
  1193  000017                     	ds	1
  1194  000018                     pad@i:
  1195                           	callstack 0
  1196  000018                     ___xxtofl@arg:
  1197                           	callstack 0
  1198                           
  1199                           ; 4 bytes @ 0x17
  1200  000018                     	ds	2
  1201  00001A                     pad@w:
  1202                           	callstack 0
  1203                           
  1204                           ; 2 bytes @ 0x19
  1205  00001A                     	ds	2
  1206  00001C                     ??_calculatedAverageValue:
  1207  00001C                     ?_dtoa:
  1208                           	callstack 0
  1209  00001C                     ?_fabsf:
  1210                           	callstack 0
  1211  00001C                     ?___flmul:
  1212                           	callstack 0
  1213  00001C                     dtoa@fp:
  1214                           	callstack 0
  1215  00001C                     ___flmul@b:
  1216                           	callstack 0
  1217  00001C                     fabsf@x:
  1218                           	callstack 0
  1219                           
  1220                           ; 4 bytes @ 0x1B
  1221  00001C                     	ds	2
  1222  00001E                     dtoa@d:
  1223                           	callstack 0
  1224                           
  1225                           ; 8 bytes @ 0x1D
  1226  00001E                     	ds	2
  1227  000020                     ___flmul@a:
  1228                           	callstack 0
  1229  000020                     fabsf@u:
  1230                           	callstack 0
  1231                           
  1232                           ; 4 bytes @ 0x1F
  1233  000020                     	ds	4
  1234  000024                     ??___flmul:
  1235                           
  1236                           ; 1 bytes @ 0x23
  1237  000024                     	ds	2
  1238  000026                     ??_dtoa:
  1239                           
  1240                           ; 1 bytes @ 0x25
  1241  000026                     	ds	2
  1242  000028                     ___flmul@sign:
  1243                           	callstack 0
  1244                           
  1245                           ; 1 bytes @ 0x27
  1246  000028                     	ds	1
  1247  000029                     ___flmul@grs:
  1248                           	callstack 0
  1249                           
  1250                           ; 4 bytes @ 0x28
  1251  000029                     	ds	4
  1252  00002D                     ___flmul@aexp:
  1253                           	callstack 0
  1254                           
  1255                           ; 1 bytes @ 0x2C
  1256  00002D                     	ds	1
  1257  00002E                     ___flmul@bexp:
  1258                           	callstack 0
  1259  00002E                     _dtoa$2545:
  1260                           	callstack 0
  1261                           
  1262                           ; 2 bytes @ 0x2D
  1263  00002E                     	ds	1
  1264  00002F                     ___flmul@prod:
  1265                           	callstack 0
  1266                           
  1267                           ; 4 bytes @ 0x2E
  1268  00002F                     	ds	1
  1269  000030                     dtoa@p:
  1270                           	callstack 0
  1271                           
  1272                           ; 2 bytes @ 0x2F
  1273  000030                     	ds	2
  1274  000032                     dtoa@w:
  1275                           	callstack 0
  1276                           
  1277                           ; 2 bytes @ 0x31
  1278  000032                     	ds	1
  1279  000033                     ___flmul@temp:
  1280                           	callstack 0
  1281                           
  1282                           ; 2 bytes @ 0x32
  1283  000033                     	ds	1
  1284  000034                     dtoa@s:
  1285                           	callstack 0
  1286                           
  1287                           ; 2 bytes @ 0x33
  1288  000034                     	ds	1
  1289  000035                     ?___fladd:
  1290                           	callstack 0
  1291  000035                     ?___fldiv:
  1292                           	callstack 0
  1293  000035                     ___flge@ff1:
  1294                           	callstack 0
  1295  000035                     ___fladd@b:
  1296                           	callstack 0
  1297  000035                     ___fldiv@b:
  1298                           	callstack 0
  1299                           
  1300                           ; 4 bytes @ 0x34
  1301  000035                     	ds	1
  1302  000036                     dtoa@n:
  1303                           	callstack 0
  1304                           
  1305                           ; 8 bytes @ 0x35
  1306  000036                     	ds	3
  1307  000039                     ___flge@ff2:
  1308                           	callstack 0
  1309  000039                     ___fladd@a:
  1310                           	callstack 0
  1311  000039                     ___fldiv@a:
  1312                           	callstack 0
  1313                           
  1314                           ; 4 bytes @ 0x38
  1315  000039                     	ds	4
  1316  00003D                     ??___fladd:
  1317  00003D                     ??___fldiv:
  1318  00003D                     ??___flge:
  1319                           
  1320                           ; 1 bytes @ 0x3C
  1321  00003D                     	ds	1
  1322  00003E                     dtoa@i:
  1323                           	callstack 0
  1324                           
  1325                           ; 2 bytes @ 0x3D
  1326  00003E                     	ds	3
  1327  000041                     ___fladd@signs:
  1328                           	callstack 0
  1329  000041                     ___fldiv@rem:
  1330                           	callstack 0
  1331                           
  1332                           ; 4 bytes @ 0x40
  1333  000041                     	ds	1
  1334  000042                     ___fladd@aexp:
  1335                           	callstack 0
  1336                           
  1337                           ; 1 bytes @ 0x41
  1338  000042                     	ds	1
  1339  000043                     ___fladd@bexp:
  1340                           	callstack 0
  1341                           
  1342                           ; 1 bytes @ 0x42
  1343  000043                     	ds	1
  1344  000044                     ___fladd@grs:
  1345                           	callstack 0
  1346                           
  1347                           ; 1 bytes @ 0x43
  1348  000044                     	ds	1
  1349  000045                     ?___flsub:
  1350                           	callstack 0
  1351  000045                     ___fldiv@sign:
  1352                           	callstack 0
  1353  000045                     ___flsub@b:
  1354                           	callstack 0
  1355                           
  1356                           ; 4 bytes @ 0x44
  1357  000045                     	ds	1
  1358  000046                     ___fldiv@new_exp:
  1359                           	callstack 0
  1360                           
  1361                           ; 2 bytes @ 0x45
  1362  000046                     	ds	2
  1363  000048                     ___fldiv@grs:
  1364                           	callstack 0
  1365                           
  1366                           ; 4 bytes @ 0x47
  1367  000048                     	ds	1
  1368  000049                     ___flsub@a:
  1369                           	callstack 0
  1370                           
  1371                           ; 4 bytes @ 0x48
  1372  000049                     	ds	3
  1373  00004C                     ___fldiv@bexp:
  1374                           	callstack 0
  1375                           
  1376                           ; 1 bytes @ 0x4B
  1377  00004C                     	ds	1
  1378  00004D                     ___fldiv@aexp:
  1379                           	callstack 0
  1380                           
  1381                           ; 1 bytes @ 0x4C
  1382  00004D                     	ds	1
  1383  00004E                     ?_floorf:
  1384                           	callstack 0
  1385  00004E                     ?___fltol:
  1386                           	callstack 0
  1387  00004E                     ___fltol@f1:
  1388                           	callstack 0
  1389  00004E                     floorf@x:
  1390                           	callstack 0
  1391                           
  1392                           ; 4 bytes @ 0x4D
  1393  00004E                     	ds	4
  1394  000052                     ??_floorf:
  1395  000052                     ??___fltol:
  1396                           
  1397                           ; 1 bytes @ 0x51
  1398  000052                     	ds	4
  1399  000056                     ___fltol@sign1:
  1400                           	callstack 0
  1401                           
  1402                           ; 1 bytes @ 0x55
  1403  000056                     	ds	1
  1404  000057                     ___fltol@exp1:
  1405                           	callstack 0
  1406                           
  1407                           ; 1 bytes @ 0x56
  1408  000057                     	ds	1
  1409  000058                     ??_scanAdcConversion:
  1410  000058                     ?_efgtoa:
  1411                           	callstack 0
  1412  000058                     PWM1_setDC@dutycycle:
  1413                           	callstack 0
  1414  000058                     PWM2_setDC@dutycycle:
  1415                           	callstack 0
  1416  000058                     efgtoa@fp:
  1417                           	callstack 0
  1418  000058                     speedControl@position:
  1419                           	callstack 0
  1420                           
  1421                           ; 4 bytes @ 0x57
  1422  000058                     	ds	2
  1423  00005A                     ??_PWM1_setDC:
  1424  00005A                     ??_PWM2_setDC:
  1425  00005A                     efgtoa@f:
  1426                           	callstack 0
  1427                           
  1428                           ; 4 bytes @ 0x59
  1429  00005A                     	ds	2
  1430  00005C                     ??_speedControl:
  1431  00005C                     PWM1_setDC@duty:
  1432                           	callstack 0
  1433  00005C                     PWM2_setDC@duty:
  1434                           	callstack 0
  1435                           
  1436                           ; 2 bytes @ 0x5B
  1437  00005C                     	ds	2
  1438  00005E                     efgtoa@c:
  1439                           	callstack 0
  1440                           
  1441                           ; 1 bytes @ 0x5D
  1442  00005E                     	ds	1
  1443  00005F                     
  1444                           ; 1 bytes @ 0x5E
  1445 ;;
  1446 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1447 ;;
  1448 ;; *************** function _main *****************
  1449 ;; Defined at:
  1450 ;;		line 40 in file "fs_main.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;		None
  1453 ;; Auto vars:     Size  Location     Type
  1454 ;;		None
  1455 ;; Return value:  Size  Location     Type
  1456 ;;                  1    wreg      void 
  1457 ;; Registers used:
  1458 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1459 ;; Tracked objects:
  1460 ;;		On entry : 0/0
  1461 ;;		On exit  : 0/0
  1462 ;;		Unchanged: 0/0
  1463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1464 ;;      Params:         0       0       0       0       0       0       0
  1465 ;;      Locals:         0       0       0       0       0       0       0
  1466 ;;      Temps:          0       0       0       0       0       0       0
  1467 ;;      Totals:         0       0       0       0       0       0       0
  1468 ;;Total ram usage:        0 bytes
  1469 ;; Hardware stack levels required when called:   12
  1470 ;; This function calls:
  1471 ;;		_Lcd_Clear
  1472 ;;		_PWM1_setDC
  1473 ;;		_PWM2_setDC
  1474 ;;		_PWM_Init
  1475 ;;		_adcInit
  1476 ;;		_lcd_init
  1477 ;;		_mcu_init
  1478 ;;		_menuControl
  1479 ;;		_menuInitialize
  1480 ;;		_system_init
  1481 ;;		_timer_0_init
  1482 ;; This function is called by:
  1483 ;;		Startup code after reset
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           
  1487                           	psect	text0
  1488  004CCE                     __ptext0:
  1489                           	callstack 0
  1490  004CCE                     _main:
  1491                           	callstack 19
  1492  004CCE                     
  1493                           ;fs_main.c: 42:     mcu_init();
  1494  004CCE  ECAC  F02E         	call	_mcu_init	;wreg free
  1495  004CD2                     
  1496                           ;fs_main.c: 43:     menuInitialize();
  1497  004CD2  EC36  F02E         	call	_menuInitialize	;wreg free
  1498  004CD6                     
  1499                           ;fs_main.c: 45:     adcInit();
  1500  004CD6  EC22  F02D         	call	_adcInit	;wreg free
  1501  004CDA                     
  1502                           ;fs_main.c: 47:     timer_0_init();
  1503  004CDA  ECB7  F02E         	call	_timer_0_init	;wreg free
  1504  004CDE                     
  1505                           ;fs_main.c: 48:     lcd_init();
  1506  004CDE  ECB9  F029         	call	_lcd_init	;wreg free
  1507  004CE2                     
  1508                           ;fs_main.c: 49:     system_init();
  1509  004CE2  ECE2  F022         	call	_system_init	;wreg free
  1510  004CE6                     
  1511                           ;fs_main.c: 50:     Lcd_Clear();
  1512  004CE6  ECC0  F02E         	call	_Lcd_Clear	;wreg free
  1513  004CEA                     
  1514                           ;fs_main.c: 52:     PWM_Init();
  1515  004CEA  EC4A  F02E         	call	_PWM_Init	;wreg free
  1516  004CEE                     
  1517                           ;fs_main.c: 53:     PWM1_setDC(0);
  1518  004CEE  0E00               	movlw	0
  1519  004CF0  6E59               	movwf	(PWM1_setDC@dutycycle+1)^0,c
  1520  004CF2  0E00               	movlw	0
  1521  004CF4  6E58               	movwf	PWM1_setDC@dutycycle^0,c
  1522  004CF6  EC80  F02A         	call	_PWM1_setDC	;wreg free
  1523  004CFA                     
  1524                           ;fs_main.c: 54:     PWM2_setDC(0);
  1525  004CFA  0E00               	movlw	0
  1526  004CFC  6E59               	movwf	(PWM2_setDC@dutycycle+1)^0,c
  1527  004CFE  0E00               	movlw	0
  1528  004D00  6E58               	movwf	PWM2_setDC@dutycycle^0,c
  1529  004D02  EC43  F02A         	call	_PWM2_setDC	;wreg free
  1530  004D06                     l6323:
  1531                           
  1532                           ;fs_main.c: 57: {;fs_main.c: 58:     if (timer_counter_flag.one_second_flag == 1)
  1533  004D06  0100               	movlb	0	; () banked
  1534  004D08  A1FF               	btfss	_timer_counter_flag& (0+255),0,b
  1535  004D0A  EF89  F026         	goto	u7841
  1536  004D0E  EF8B  F026         	goto	u7840
  1537  004D12                     u7841:
  1538  004D12  EFCA  F026         	goto	l6349
  1539  004D16                     u7840:
  1540  004D16                     
  1541                           ; BSR set to: 0
  1542                           ;fs_main.c: 59:     {;fs_main.c: 60:         timer_counter_flag.one_second_flag = 0;
  1543  004D16  91FF               	bcf	_timer_counter_flag& (0+255),0,b
  1544  004D18                     
  1545                           ; BSR set to: 0
  1546                           ;fs_main.c: 62:         if ( (startIsClick == 1) && (pauseIsClick == 0) && (stopIsClick 
      +                          == 0) && (menu_selected == MAIN_MENU) )
  1547  004D18  05FD               	decf	_startIsClick& (0+255),w,b
  1548  004D1A  A4D8               	btfss	status,2,c
  1549  004D1C  EF92  F026         	goto	u7851
  1550  004D20  EF94  F026         	goto	u7850
  1551  004D24                     u7851:
  1552  004D24  EFCA  F026         	goto	l6349
  1553  004D28                     u7850:
  1554  004D28                     
  1555                           ; BSR set to: 0
  1556  004D28  51FE               	movf	_pauseIsClick& (0+255),w,b
  1557  004D2A  A4D8               	btfss	status,2,c
  1558  004D2C  EF9A  F026         	goto	u7861
  1559  004D30  EF9C  F026         	goto	u7860
  1560  004D34                     u7861:
  1561  004D34  EFCA  F026         	goto	l6349
  1562  004D38                     u7860:
  1563  004D38                     
  1564                           ; BSR set to: 0
  1565  004D38  51FC               	movf	_stopIsClick& (0+255),w,b
  1566  004D3A  A4D8               	btfss	status,2,c
  1567  004D3C  EFA2  F026         	goto	u7871
  1568  004D40  EFA4  F026         	goto	u7870
  1569  004D44                     u7871:
  1570  004D44  EFCA  F026         	goto	l6349
  1571  004D48                     u7870:
  1572  004D48                     
  1573                           ; BSR set to: 0
  1574  004D48  51FA               	movf	_menu_selected& (0+255),w,b
  1575  004D4A  A4D8               	btfss	status,2,c
  1576  004D4C  EFAA  F026         	goto	u7881
  1577  004D50  EFAC  F026         	goto	u7880
  1578  004D54                     u7881:
  1579  004D54  EFCA  F026         	goto	l6349
  1580  004D58                     u7880:
  1581  004D58                     
  1582                           ; BSR set to: 0
  1583                           ;fs_main.c: 63:         {;fs_main.c: 64:             timer_value.second++;
  1584  004D58  0101               	movlb	1	; () banked
  1585  004D5A  2BAF               	incf	_timer_value& (0+255),f,b
  1586  004D5C                     
  1587                           ; BSR set to: 1
  1588                           ;fs_main.c: 65:             timer_value.remainingSecond = (uint8_t)60 - timer_value.seco
      +                          nd;
  1589  004D5C  51AF               	movf	_timer_value& (0+255),w,b
  1590  004D5E  083C               	sublw	60
  1591  004D60  6FB1               	movwf	(_timer_value+2)& (0+255),b
  1592  004D62                     
  1593                           ; BSR set to: 1
  1594                           ;fs_main.c: 67:             if (timer_value.remainingSecond == 59 )
  1595  004D62  0E3B               	movlw	59
  1596  004D64  19B1               	xorwf	(_timer_value+2)& (0+255),w,b
  1597  004D66  A4D8               	btfss	status,2,c
  1598  004D68  EFB8  F026         	goto	u7891
  1599  004D6C  EFBA  F026         	goto	u7890
  1600  004D70                     u7891:
  1601  004D70  EFC0  F026         	goto	l6345
  1602  004D74                     u7890:
  1603  004D74                     
  1604                           ; BSR set to: 1
  1605                           ;fs_main.c: 68:             {;fs_main.c: 69:                 timer_value.minute++;
  1606  004D74  2BB0               	incf	(_timer_value+1)& (0+255),f,b
  1607  004D76                     
  1608                           ; BSR set to: 1
  1609                           ;fs_main.c: 70:                 timer_value.remainingMinute = (int8_t)menu_value.driver_
      +                          time - timer_value.minute;
  1610  004D76  51B0               	movf	(_timer_value+1)& (0+255),w,b
  1611  004D78  0100               	movlb	0	; () banked
  1612  004D7A  5DF3               	subwf	_menu_value& (0+255),w,b
  1613  004D7C  0101               	movlb	1	; () banked
  1614  004D7E  6FB2               	movwf	(_timer_value+3)& (0+255),b
  1615  004D80                     l6345:
  1616                           
  1617                           ; BSR set to: 1
  1618                           ;fs_main.c: 73:             if (timer_value.second > 59)
  1619  004D80  0E3B               	movlw	59
  1620  004D82  65AF               	cpfsgt	_timer_value& (0+255),b
  1621  004D84  EFC6  F026         	goto	u7901
  1622  004D88  EFC8  F026         	goto	u7900
  1623  004D8C                     u7901:
  1624  004D8C  EFCA  F026         	goto	l6349
  1625  004D90                     u7900:
  1626  004D90                     
  1627                           ; BSR set to: 1
  1628                           ;fs_main.c: 74:             {;fs_main.c: 75:                 timer_value.second = 0;
  1629  004D90  0E00               	movlw	0
  1630  004D92  6FAF               	movwf	_timer_value& (0+255),b
  1631  004D94                     l6349:
  1632                           
  1633                           ;fs_main.c: 80:     menuControl();
  1634  004D94  ECBD  F02A         	call	_menuControl	;wreg free
  1635  004D98  EF83  F026         	goto	l6323
  1636  004D9C  EF4D  F000         	goto	start
  1637  004DA0                     __end_of_main:
  1638                           	callstack 0
  1639                           
  1640 ;; *************** function _timer_0_init *****************
  1641 ;; Defined at:
  1642 ;;		line 72 in file "fs_timer.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;		None
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;		None
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  1    wreg      void 
  1649 ;; Registers used:
  1650 ;;		wreg, status,2
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1656 ;;      Params:         0       0       0       0       0       0       0
  1657 ;;      Locals:         0       0       0       0       0       0       0
  1658 ;;      Temps:          0       0       0       0       0       0       0
  1659 ;;      Totals:         0       0       0       0       0       0       0
  1660 ;;Total ram usage:        0 bytes
  1661 ;; Hardware stack levels used:    1
  1662 ;; Hardware stack levels required when called:    1
  1663 ;; This function calls:
  1664 ;;		Nothing
  1665 ;; This function is called by:
  1666 ;;		_main
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669                           
  1670                           	psect	text1
  1671  005D6E                     __ptext1:
  1672                           	callstack 0
  1673  005D6E                     _timer_0_init:
  1674                           	callstack 29
  1675  005D6E                     
  1676                           ;fs_timer.c: 74:   T0CON = 0x81;
  1677  005D6E  0E81               	movlw	129
  1678  005D70  6ED5               	movwf	213,c	;volatile
  1679                           
  1680                           ;fs_timer.c: 75:   TMR0H = 0x63;
  1681  005D72  0E63               	movlw	99
  1682  005D74  6ED7               	movwf	215,c	;volatile
  1683                           
  1684                           ;fs_timer.c: 76:   TMR0L = 0xC0;
  1685  005D76  0EC0               	movlw	192
  1686  005D78  6ED6               	movwf	214,c	;volatile
  1687  005D7A                     
  1688                           ;fs_timer.c: 77:   INTCONbits.GIE = 1;
  1689  005D7A  8EF2               	bsf	242,7,c	;volatile
  1690  005D7C                     
  1691                           ;fs_timer.c: 78:   INTCONbits.TMR0IE = 1;
  1692  005D7C  8AF2               	bsf	242,5,c	;volatile
  1693  005D7E  0012               	return		;funcret
  1694  005D80                     __end_of_timer_0_init:
  1695                           	callstack 0
  1696                           
  1697 ;; *************** function _system_init *****************
  1698 ;; Defined at:
  1699 ;;		line 56 in file "fs_mcu.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;		None
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;		None
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      void 
  1706 ;; Registers used:
  1707 ;;		wreg, status,2, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1713 ;;      Params:         0       0       0       0       0       0       0
  1714 ;;      Locals:         0       0       0       0       0       0       0
  1715 ;;      Temps:          2       0       0       0       0       0       0
  1716 ;;      Totals:         2       0       0       0       0       0       0
  1717 ;;Total ram usage:        2 bytes
  1718 ;; Hardware stack levels used:    1
  1719 ;; Hardware stack levels required when called:    2
  1720 ;; This function calls:
  1721 ;;		_eepromRead
  1722 ;; This function is called by:
  1723 ;;		_main
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           	psect	text2
  1728  0045C4                     __ptext2:
  1729                           	callstack 0
  1730  0045C4                     _system_init:
  1731                           	callstack 28
  1732  0045C4                     
  1733                           ;fs_mcu.c: 58:     driver_limit.pay = 0;
  1734  0045C4  0E00               	movlw	0
  1735  0045C6  0101               	movlb	1	; () banked
  1736  0045C8  6FA3               	movwf	_driver_limit& (0+255),b
  1737  0045CA  0E00               	movlw	0
  1738  0045CC  6FA4               	movwf	(_driver_limit+1)& (0+255),b
  1739  0045CE  0E00               	movlw	0
  1740  0045D0  6FA5               	movwf	(_driver_limit+2)& (0+255),b
  1741  0045D2  0E00               	movlw	0
  1742  0045D4  6FA6               	movwf	(_driver_limit+3)& (0+255),b
  1743                           
  1744                           ;fs_mcu.c: 59:     driver_limit.payda = 0;
  1745  0045D6  0E00               	movlw	0
  1746  0045D8  6FA7               	movwf	(_driver_limit+4)& (0+255),b
  1747  0045DA  0E00               	movlw	0
  1748  0045DC  6FA8               	movwf	(_driver_limit+5)& (0+255),b
  1749  0045DE  0E00               	movlw	0
  1750  0045E0  6FA9               	movwf	(_driver_limit+6)& (0+255),b
  1751  0045E2  0E00               	movlw	0
  1752  0045E4  6FAA               	movwf	(_driver_limit+7)& (0+255),b
  1753                           
  1754                           ;fs_mcu.c: 60:     driver_limit.ortalama = 0;
  1755  0045E6  0E00               	movlw	0
  1756  0045E8  6FAB               	movwf	(_driver_limit+8)& (0+255),b
  1757  0045EA  0E00               	movlw	0
  1758  0045EC  6FAC               	movwf	(_driver_limit+9)& (0+255),b
  1759  0045EE  0E00               	movlw	0
  1760  0045F0  6FAD               	movwf	(_driver_limit+10)& (0+255),b
  1761  0045F2  0E00               	movlw	0
  1762  0045F4  6FAE               	movwf	(_driver_limit+11)& (0+255),b
  1763                           
  1764                           ;fs_mcu.c: 61:     convert_data.convert_channel_0 = 0;
  1765  0045F6  0E00               	movlw	0
  1766  0045F8  6F00               	movwf	_convert_data& (0+255),b
  1767  0045FA  0E00               	movlw	0
  1768  0045FC  6F01               	movwf	(_convert_data+1)& (0+255),b
  1769  0045FE  0E00               	movlw	0
  1770  004600  6F02               	movwf	(_convert_data+2)& (0+255),b
  1771  004602  0E00               	movlw	0
  1772  004604  6F03               	movwf	(_convert_data+3)& (0+255),b
  1773                           
  1774                           ;fs_mcu.c: 62:     convert_data.convert_channel_1 = 0;
  1775  004606  0E00               	movlw	0
  1776  004608  6F04               	movwf	(_convert_data+4)& (0+255),b
  1777  00460A  0E00               	movlw	0
  1778  00460C  6F05               	movwf	(_convert_data+5)& (0+255),b
  1779  00460E  0E00               	movlw	0
  1780  004610  6F06               	movwf	(_convert_data+6)& (0+255),b
  1781  004612  0E00               	movlw	0
  1782  004614  6F07               	movwf	(_convert_data+7)& (0+255),b
  1783                           
  1784                           ;fs_mcu.c: 63:     convert_data.convert_channel_2 = 0;
  1785  004616  0E00               	movlw	0
  1786  004618  6F08               	movwf	(_convert_data+8)& (0+255),b
  1787  00461A  0E00               	movlw	0
  1788  00461C  6F09               	movwf	(_convert_data+9)& (0+255),b
  1789  00461E  0E00               	movlw	0
  1790  004620  6F0A               	movwf	(_convert_data+10)& (0+255),b
  1791  004622  0E00               	movlw	0
  1792  004624  6F0B               	movwf	(_convert_data+11)& (0+255),b
  1793                           
  1794                           ;fs_mcu.c: 64:     convert_data.convert_channel_3 = 0;
  1795  004626  0E00               	movlw	0
  1796  004628  6F0C               	movwf	(_convert_data+12)& (0+255),b
  1797  00462A  0E00               	movlw	0
  1798  00462C  6F0D               	movwf	(_convert_data+13)& (0+255),b
  1799  00462E  0E00               	movlw	0
  1800  004630  6F0E               	movwf	(_convert_data+14)& (0+255),b
  1801  004632  0E00               	movlw	0
  1802  004634  6F0F               	movwf	(_convert_data+15)& (0+255),b
  1803                           
  1804                           ;fs_mcu.c: 65:     convert_data.convert_channel_4 = 0;
  1805  004636  0E00               	movlw	0
  1806  004638  6F10               	movwf	(_convert_data+16)& (0+255),b
  1807  00463A  0E00               	movlw	0
  1808  00463C  6F11               	movwf	(_convert_data+17)& (0+255),b
  1809  00463E  0E00               	movlw	0
  1810  004640  6F12               	movwf	(_convert_data+18)& (0+255),b
  1811  004642  0E00               	movlw	0
  1812  004644  6F13               	movwf	(_convert_data+19)& (0+255),b
  1813                           
  1814                           ;fs_mcu.c: 66:     convert_data.convert_channel_5 = 0;
  1815  004646  0E00               	movlw	0
  1816  004648  6F14               	movwf	(_convert_data+20)& (0+255),b
  1817  00464A  0E00               	movlw	0
  1818  00464C  6F15               	movwf	(_convert_data+21)& (0+255),b
  1819  00464E  0E00               	movlw	0
  1820  004650  6F16               	movwf	(_convert_data+22)& (0+255),b
  1821  004652  0E00               	movlw	0
  1822  004654  6F17               	movwf	(_convert_data+23)& (0+255),b
  1823                           
  1824                           ;fs_mcu.c: 67:     convert_data.convert_channel_6 = 0;
  1825  004656  0E00               	movlw	0
  1826  004658  6F18               	movwf	(_convert_data+24)& (0+255),b
  1827  00465A  0E00               	movlw	0
  1828  00465C  6F19               	movwf	(_convert_data+25)& (0+255),b
  1829  00465E  0E00               	movlw	0
  1830  004660  6F1A               	movwf	(_convert_data+26)& (0+255),b
  1831  004662  0E00               	movlw	0
  1832  004664  6F1B               	movwf	(_convert_data+27)& (0+255),b
  1833                           
  1834                           ;fs_mcu.c: 68:     convert_data.convert_channel_7 = 0;
  1835  004666  0E00               	movlw	0
  1836  004668  6F1C               	movwf	(_convert_data+28)& (0+255),b
  1837  00466A  0E00               	movlw	0
  1838  00466C  6F1D               	movwf	(_convert_data+29)& (0+255),b
  1839  00466E  0E00               	movlw	0
  1840  004670  6F1E               	movwf	(_convert_data+30)& (0+255),b
  1841  004672  0E00               	movlw	0
  1842  004674  6F1F               	movwf	(_convert_data+31)& (0+255),b
  1843                           
  1844                           ;fs_mcu.c: 69:     controller.leftMotorSpeed = 0;
  1845  004676  0E00               	movlw	0
  1846  004678  6F57               	movwf	(_controller+7)& (0+255),b
  1847  00467A  0E00               	movlw	0
  1848  00467C  6F56               	movwf	(_controller+6)& (0+255),b
  1849                           
  1850                           ;fs_mcu.c: 70:     controller.rightMotorSpeed = 0;
  1851  00467E  0E00               	movlw	0
  1852  004680  6F59               	movwf	(_controller+9)& (0+255),b
  1853  004682  0E00               	movlw	0
  1854  004684  6F58               	movwf	(_controller+8)& (0+255),b
  1855                           
  1856                           ;fs_mcu.c: 71:     timer_value.adc_conversion_time = 0;
  1857  004686  0E00               	movlw	0
  1858  004688  6FB4               	movwf	(_timer_value+5)& (0+255),b
  1859                           
  1860                           ;fs_mcu.c: 72:     controller.error = 0;
  1861  00468A  0E00               	movlw	0
  1862  00468C  6F51               	movwf	(_controller+1)& (0+255),b
  1863  00468E  0E00               	movlw	0
  1864  004690  6F50               	movwf	_controller& (0+255),b
  1865                           
  1866                           ;fs_mcu.c: 74:     button_bounce_controller.menu = 0;
  1867  004692  0E00               	movlw	0
  1868  004694  6FBD               	movwf	_button_bounce_controller& (0+255),b
  1869                           
  1870                           ;fs_mcu.c: 75:     button_bounce_controller.pause = 0;
  1871  004696  0E00               	movlw	0
  1872  004698  6FC0               	movwf	(_button_bounce_controller+3)& (0+255),b
  1873                           
  1874                           ;fs_mcu.c: 76:     button_bounce_controller.start = 0;
  1875  00469A  0E00               	movlw	0
  1876  00469C  6FBE               	movwf	(_button_bounce_controller+1)& (0+255),b
  1877                           
  1878                           ;fs_mcu.c: 77:     button_bounce_controller.stop = 0;
  1879  00469E  0E00               	movlw	0
  1880  0046A0  6FBF               	movwf	(_button_bounce_controller+2)& (0+255),b
  1881  0046A2                     
  1882                           ; BSR set to: 1
  1883                           ;fs_mcu.c: 78:     menu_value.driver_time = (uint8_t)eepromRead(0x00);
  1884  0046A2  0E00               	movlw	0
  1885  0046A4  EC81  F02E         	call	_eepromRead
  1886  0046A8  0100               	movlb	0	; () banked
  1887  0046AA  6FF3               	movwf	_menu_value& (0+255),b
  1888  0046AC                     
  1889                           ; BSR set to: 0
  1890                           ;fs_mcu.c: 79:     menu_value.stop_time = (uint8_t)eepromRead(0x01);
  1891  0046AC  0E01               	movlw	1
  1892  0046AE  EC81  F02E         	call	_eepromRead
  1893  0046B2  0100               	movlb	0	; () banked
  1894  0046B4  6FF4               	movwf	(_menu_value+1)& (0+255),b
  1895  0046B6                     
  1896                           ; BSR set to: 0
  1897                           ;fs_mcu.c: 80:     menu_value.speed_limit = (uint8_t)eepromRead(0x02);
  1898  0046B6  0E02               	movlw	2
  1899  0046B8  EC81  F02E         	call	_eepromRead
  1900  0046BC  0100               	movlb	0	; () banked
  1901  0046BE  6FF5               	movwf	(_menu_value+2)& (0+255),b
  1902  0046C0                     
  1903                           ; BSR set to: 0
  1904                           ;fs_mcu.c: 82:     _delay((unsigned long)((700)*(64000000UL/4000.0)));
  1905  0046C0  0E39               	movlw	57
  1906  0046C2  6E03               	movwf	(??_system_init+1)^0,c
  1907  0046C4  0ED2               	movlw	210
  1908  0046C6  6E02               	movwf	??_system_init^0,c
  1909  0046C8  0E4C               	movlw	76
  1910  0046CA                     u7977:
  1911  0046CA  2EE8               	decfsz	wreg,f,c
  1912  0046CC  D7FE               	bra	u7977
  1913  0046CE  2E02               	decfsz	??_system_init^0,f,c
  1914  0046D0  D7FC               	bra	u7977
  1915  0046D2  2E03               	decfsz	(??_system_init+1)^0,f,c
  1916  0046D4  D7FA               	bra	u7977
  1917  0046D6  D000               	nop2	
  1918  0046D8                     
  1919                           ;fs_mcu.c: 83:     timer_value.remainingMinute = menu_value.driver_time;
  1920  0046D8  C0F3  F1B2         	movff	_menu_value,_timer_value+3
  1921  0046DC                     
  1922                           ;fs_mcu.c: 84:     timer_value.remainingSecond = 0;
  1923  0046DC  0E00               	movlw	0
  1924  0046DE  0101               	movlb	1	; () banked
  1925  0046E0  6FB1               	movwf	(_timer_value+2)& (0+255),b
  1926  0046E2                     
  1927                           ; BSR set to: 1
  1928  0046E2  0012               	return		;funcret
  1929  0046E4                     __end_of_system_init:
  1930                           	callstack 0
  1931                           
  1932 ;; *************** function _eepromRead *****************
  1933 ;; Defined at:
  1934 ;;		line 36 in file "fs_eeprom.c"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;  address         1    wreg     unsigned char 
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;  address         1    0[COMRAM] unsigned char 
  1939 ;; Return value:  Size  Location     Type
  1940 ;;                  1    wreg      unsigned char 
  1941 ;; Registers used:
  1942 ;;		wreg, status,2
  1943 ;; Tracked objects:
  1944 ;;		On entry : 0/0
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1948 ;;      Params:         0       0       0       0       0       0       0
  1949 ;;      Locals:         1       0       0       0       0       0       0
  1950 ;;      Temps:          0       0       0       0       0       0       0
  1951 ;;      Totals:         1       0       0       0       0       0       0
  1952 ;;Total ram usage:        1 bytes
  1953 ;; Hardware stack levels used:    1
  1954 ;; Hardware stack levels required when called:    1
  1955 ;; This function calls:
  1956 ;;		Nothing
  1957 ;; This function is called by:
  1958 ;;		_system_init
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962                           	psect	text3
  1963  005D02                     __ptext3:
  1964                           	callstack 0
  1965  005D02                     _eepromRead:
  1966                           	callstack 28
  1967                           
  1968                           ; BSR set to: 1
  1969                           ;incstack = 0
  1970                           ;eepromRead@address stored from wreg
  1971  005D02  6E01               	movwf	eepromRead@address^0,c
  1972  005D04                     
  1973                           ;fs_eeprom.c: 36: uint8_t eepromRead(uint8_t address);fs_eeprom.c: 37: {;fs_eeprom.c: 41
      +                          :     EEADR = (uint8_t)address;
  1974  005D04  C001  FFA9         	movff	eepromRead@address,4009	;volatile
  1975  005D08                     
  1976                           ;fs_eeprom.c: 43:     EECON1bits.EEPGD = 0;
  1977  005D08  9EA6               	bcf	166,7,c	;volsfr
  1978  005D0A                     
  1979                           ;fs_eeprom.c: 44:     EECON1bits.CFGS = 0;
  1980  005D0A  9CA6               	bcf	166,6,c	;volsfr
  1981  005D0C                     
  1982                           ;fs_eeprom.c: 45:     EECON1bits.RD = 1;
  1983  005D0C  80A6               	bsf	166,0,c	;volsfr
  1984  005D0E                     l70:
  1985  005D0E  B0A6               	btfsc	166,0,c	;volsfr
  1986  005D10  EF8C  F02E         	goto	u7551
  1987  005D14  EF8E  F02E         	goto	u7550
  1988  005D18                     u7551:
  1989  005D18  EF87  F02E         	goto	l70
  1990  005D1C                     u7550:
  1991  005D1C                     
  1992                           ;fs_eeprom.c: 51:     return EEDATA;
  1993  005D1C  50A8               	movf	168,w,c	;volatile
  1994  005D1E  0012               	return		;funcret
  1995  005D20                     __end_of_eepromRead:
  1996                           	callstack 0
  1997                           
  1998 ;; *************** function _menuInitialize *****************
  1999 ;; Defined at:
  2000 ;;		line 38 in file "fs_menu_controller.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;		None
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;		None
  2005 ;; Return value:  Size  Location     Type
  2006 ;;                  1    wreg      void 
  2007 ;; Registers used:
  2008 ;;		None
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2014 ;;      Params:         0       0       0       0       0       0       0
  2015 ;;      Locals:         0       0       0       0       0       0       0
  2016 ;;      Temps:          0       0       0       0       0       0       0
  2017 ;;      Totals:         0       0       0       0       0       0       0
  2018 ;;Total ram usage:        0 bytes
  2019 ;; Hardware stack levels used:    1
  2020 ;; Hardware stack levels required when called:    1
  2021 ;; This function calls:
  2022 ;;		Nothing
  2023 ;; This function is called by:
  2024 ;;		_main
  2025 ;; This function uses a non-reentrant model
  2026 ;;
  2027                           
  2028                           	psect	text4
  2029  005C6C                     __ptext4:
  2030                           	callstack 0
  2031  005C6C                     _menuInitialize:
  2032                           	callstack 29
  2033  005C6C                     
  2034                           ;fs_menu_controller.c: 41:     TRISBbits.RB6 = 1;
  2035  005C6C  8C93               	bsf	147,6,c	;volatile
  2036                           
  2037                           ;fs_menu_controller.c: 44:     TRISBbits.RB7 = 1;
  2038  005C6E  8E93               	bsf	147,7,c	;volatile
  2039                           
  2040                           ;fs_menu_controller.c: 46:     ANSELDbits.ANSD4 = 0;
  2041  005C70  010F               	movlb	15	; () banked
  2042  005C72  993B               	bcf	59,4,b	;volatile
  2043                           
  2044                           ;fs_menu_controller.c: 47:     TRISDbits.RD4 = 1;
  2045  005C74  8895               	bsf	149,4,c	;volatile
  2046                           
  2047                           ;fs_menu_controller.c: 49:     ANSELDbits.ANSD0 = 0;
  2048  005C76  913B               	bcf	59,0,b	;volatile
  2049                           
  2050                           ;fs_menu_controller.c: 50:     TRISDbits.RD0 = 1;
  2051  005C78  8095               	bsf	149,0,c	;volatile
  2052                           
  2053                           ;fs_menu_controller.c: 52:     ANSELDbits.ANSD1 = 0;
  2054  005C7A  933B               	bcf	59,1,b	;volatile
  2055                           
  2056                           ;fs_menu_controller.c: 53:     TRISDbits.RD1 = 1;
  2057  005C7C  8295               	bsf	149,1,c	;volatile
  2058                           
  2059                           ;fs_menu_controller.c: 55:     ANSELDbits.ANSD2 = 0;
  2060  005C7E  953B               	bcf	59,2,b	;volatile
  2061                           
  2062                           ;fs_menu_controller.c: 56:     TRISDbits.RD2 = 1;
  2063  005C80  8495               	bsf	149,2,c	;volatile
  2064                           
  2065                           ;fs_menu_controller.c: 58:     ANSELDbits.ANSD3 = 0;
  2066  005C82  973B               	bcf	59,3,b	;volatile
  2067                           
  2068                           ;fs_menu_controller.c: 59:     TRISDbits.RD3 = 1;
  2069  005C84  8695               	bsf	149,3,c	;volatile
  2070                           
  2071                           ;fs_menu_controller.c: 61:     ANSELDbits.ANSD5 = 0;
  2072  005C86  9B3B               	bcf	59,5,b	;volatile
  2073                           
  2074                           ;fs_menu_controller.c: 62:     TRISDbits.RD5 = 0;
  2075  005C88  9A95               	bcf	149,5,c	;volatile
  2076                           
  2077                           ;fs_menu_controller.c: 64:     ANSELCbits.ANSC5 = 0;
  2078  005C8A  9B3A               	bcf	58,5,b	;volatile
  2079                           
  2080                           ;fs_menu_controller.c: 65:     TRISCbits.RC5 = 0;
  2081  005C8C  9A94               	bcf	148,5,c	;volatile
  2082                           
  2083                           ;fs_menu_controller.c: 67:     ANSELCbits.ANSC4 = 0;
  2084  005C8E  993A               	bcf	58,4,b	;volatile
  2085                           
  2086                           ;fs_menu_controller.c: 68:     TRISCbits.RC4 = 0;
  2087  005C90  9894               	bcf	148,4,c	;volatile
  2088  005C92                     
  2089                           ; BSR set to: 15
  2090  005C92  0012               	return		;funcret
  2091  005C94                     __end_of_menuInitialize:
  2092                           	callstack 0
  2093                           
  2094 ;; *************** function _menuControl *****************
  2095 ;; Defined at:
  2096 ;;		line 162 in file "fs_menu_controller.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;		None
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;		None
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  1    wreg      void 
  2103 ;; Registers used:
  2104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2110 ;;      Params:         0       0       0       0       0       0       0
  2111 ;;      Locals:         0       0       0       0       0       0       0
  2112 ;;      Temps:          0       0       0       0       0       0       0
  2113 ;;      Totals:         0       0       0       0       0       0       0
  2114 ;;Total ram usage:        0 bytes
  2115 ;; Hardware stack levels used:    1
  2116 ;; Hardware stack levels required when called:   11
  2117 ;; This function calls:
  2118 ;;		_buttonControlFlags
  2119 ;;		_stateMachine
  2120 ;; This function is called by:
  2121 ;;		_main
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           	psect	text5
  2126  00557A                     __ptext5:
  2127                           	callstack 0
  2128  00557A                     _menuControl:
  2129                           	callstack 19
  2130  00557A                     
  2131                           ;fs_menu_controller.c: 164:     buttonControlFlags();
  2132  00557A  EC0A  F01C         	call	_buttonControlFlags	;wreg free
  2133  00557E                     
  2134                           ;fs_menu_controller.c: 165:     stateMachine();
  2135  00557E  EC61  F028         	call	_stateMachine	;wreg free
  2136  005582                     
  2137                           ;fs_menu_controller.c: 167:     if (menu_flags.menu_start_flag == 1)
  2138  005582  0101               	movlb	1	; () banked
  2139  005584  05B8               	decf	(_menu_flags+1)& (0+255),w,b
  2140  005586  A4D8               	btfss	status,2,c
  2141  005588  EFC8  F02A         	goto	u7811
  2142  00558C  EFCA  F02A         	goto	u7810
  2143  005590                     u7811:
  2144  005590  EFD3  F02A         	goto	l6291
  2145  005594                     u7810:
  2146  005594                     
  2147                           ; BSR set to: 1
  2148                           ;fs_menu_controller.c: 168:     {;fs_menu_controller.c: 169:         menu_flags.menu_sta
      +                          rt_flag = 0;
  2149  005594  0E00               	movlw	0
  2150  005596  6FB8               	movwf	(_menu_flags+1)& (0+255),b
  2151                           
  2152                           ;fs_menu_controller.c: 170:         startIsClick = 1;
  2153  005598  0E01               	movlw	1
  2154  00559A  0100               	movlb	0	; () banked
  2155  00559C  6FFD               	movwf	_startIsClick& (0+255),b
  2156                           
  2157                           ;fs_menu_controller.c: 171:         pauseIsClick = 0;
  2158  00559E  0E00               	movlw	0
  2159  0055A0  6FFE               	movwf	_pauseIsClick& (0+255),b
  2160                           
  2161                           ;fs_menu_controller.c: 172:         stopIsClick = 0;
  2162  0055A2  0E00               	movlw	0
  2163  0055A4  6FFC               	movwf	_stopIsClick& (0+255),b
  2164  0055A6                     l6291:
  2165                           
  2166                           ;fs_menu_controller.c: 175:     if (menu_flags.menu_pause_flag == 1)
  2167  0055A6  0101               	movlb	1	; () banked
  2168  0055A8  05BA               	decf	(_menu_flags+3)& (0+255),w,b
  2169  0055AA  A4D8               	btfss	status,2,c
  2170  0055AC  EFDA  F02A         	goto	u7821
  2171  0055B0  EFDC  F02A         	goto	u7820
  2172  0055B4                     u7821:
  2173  0055B4  EFE5  F02A         	goto	l6295
  2174  0055B8                     u7820:
  2175  0055B8                     
  2176                           ; BSR set to: 1
  2177                           ;fs_menu_controller.c: 176:     {;fs_menu_controller.c: 177:         menu_flags.menu_pau
      +                          se_flag = 0;
  2178  0055B8  0E00               	movlw	0
  2179  0055BA  6FBA               	movwf	(_menu_flags+3)& (0+255),b
  2180                           
  2181                           ;fs_menu_controller.c: 178:         pauseIsClick = 1;
  2182  0055BC  0E01               	movlw	1
  2183  0055BE  0100               	movlb	0	; () banked
  2184  0055C0  6FFE               	movwf	_pauseIsClick& (0+255),b
  2185                           
  2186                           ;fs_menu_controller.c: 179:         startIsClick = 0;
  2187  0055C2  0E00               	movlw	0
  2188  0055C4  6FFD               	movwf	_startIsClick& (0+255),b
  2189                           
  2190                           ;fs_menu_controller.c: 180:         stopIsClick = 0;
  2191  0055C6  0E00               	movlw	0
  2192  0055C8  6FFC               	movwf	_stopIsClick& (0+255),b
  2193  0055CA                     l6295:
  2194                           
  2195                           ;fs_menu_controller.c: 183:     if (menu_flags.menu_stop_flag == 1)
  2196  0055CA  0101               	movlb	1	; () banked
  2197  0055CC  05B9               	decf	(_menu_flags+2)& (0+255),w,b
  2198  0055CE  A4D8               	btfss	status,2,c
  2199  0055D0  EFEC  F02A         	goto	u7831
  2200  0055D4  EFEE  F02A         	goto	u7830
  2201  0055D8                     u7831:
  2202  0055D8  EFF7  F02A         	goto	l353
  2203  0055DC                     u7830:
  2204  0055DC                     
  2205                           ; BSR set to: 1
  2206                           ;fs_menu_controller.c: 184:     {;fs_menu_controller.c: 185:         menu_flags.menu_sto
      +                          p_flag = 0;
  2207  0055DC  0E00               	movlw	0
  2208  0055DE  6FB9               	movwf	(_menu_flags+2)& (0+255),b
  2209                           
  2210                           ;fs_menu_controller.c: 186:         pauseIsClick = 0;
  2211  0055E0  0E00               	movlw	0
  2212  0055E2  0100               	movlb	0	; () banked
  2213  0055E4  6FFE               	movwf	_pauseIsClick& (0+255),b
  2214                           
  2215                           ;fs_menu_controller.c: 187:         startIsClick = 0;
  2216  0055E6  0E00               	movlw	0
  2217  0055E8  6FFD               	movwf	_startIsClick& (0+255),b
  2218                           
  2219                           ;fs_menu_controller.c: 188:         stopIsClick = 1;
  2220  0055EA  0E01               	movlw	1
  2221  0055EC  6FFC               	movwf	_stopIsClick& (0+255),b
  2222  0055EE                     l353:
  2223  0055EE  0012               	return		;funcret
  2224  0055F0                     __end_of_menuControl:
  2225                           	callstack 0
  2226                           
  2227 ;; *************** function _stateMachine *****************
  2228 ;; Defined at:
  2229 ;;		line 199 in file "fs_menu_controller.c"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;		None
  2232 ;; Auto vars:     Size  Location     Type
  2233 ;;		None
  2234 ;; Return value:  Size  Location     Type
  2235 ;;                  1    wreg      void 
  2236 ;; Registers used:
  2237 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2243 ;;      Params:         0       0       0       0       0       0       0
  2244 ;;      Locals:         0       0       0       0       0       0       0
  2245 ;;      Temps:          0       2       0       0       0       0       0
  2246 ;;      Totals:         0       2       0       0       0       0       0
  2247 ;;Total ram usage:        2 bytes
  2248 ;; Hardware stack levels used:    1
  2249 ;; Hardware stack levels required when called:   10
  2250 ;; This function calls:
  2251 ;;		_driverTimeSettingMenu
  2252 ;;		_exitLine
  2253 ;;		_mainMenu
  2254 ;;		_pauseMenu
  2255 ;;		_secretMenu
  2256 ;;		_speedLimitSettingMenu
  2257 ;;		_startMenu
  2258 ;;		_stopMenu
  2259 ;;		_stopTimeSettingMenu
  2260 ;; This function is called by:
  2261 ;;		_menuControl
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           	psect	text6
  2266  0050C2                     __ptext6:
  2267                           	callstack 0
  2268  0050C2                     _stateMachine:
  2269                           	callstack 19
  2270  0050C2                     
  2271                           ;fs_menu_controller.c: 201:     switch (menu_selected)
  2272  0050C2  EF87  F028         	goto	l6207
  2273  0050C6                     l6187:
  2274                           
  2275                           ; BSR set to: 0
  2276                           ;fs_menu_controller.c: 204:             mainMenu();
  2277  0050C6  ECA9  F01E         	call	_mainMenu	;wreg free
  2278                           
  2279                           ;fs_menu_controller.c: 205:         break;
  2280  0050CA  EFB9  F028         	goto	l367
  2281  0050CE                     l6189:
  2282                           
  2283                           ; BSR set to: 0
  2284                           ;fs_menu_controller.c: 208:             driverTimeSettingMenu();
  2285  0050CE  EC4E  F022         	call	_driverTimeSettingMenu	;wreg free
  2286                           
  2287                           ;fs_menu_controller.c: 209:         break;
  2288  0050D2  EFB9  F028         	goto	l367
  2289  0050D6                     l6191:
  2290                           
  2291                           ; BSR set to: 0
  2292                           ;fs_menu_controller.c: 212:             stopTimeSettingMenu();
  2293  0050D6  EC72  F023         	call	_stopTimeSettingMenu	;wreg free
  2294                           
  2295                           ;fs_menu_controller.c: 213:         break;
  2296  0050DA  EFB9  F028         	goto	l367
  2297  0050DE                     l6193:
  2298                           
  2299                           ; BSR set to: 0
  2300                           ;fs_menu_controller.c: 216:             speedLimitSettingMenu();
  2301  0050DE  EC79  F024         	call	_speedLimitSettingMenu	;wreg free
  2302                           
  2303                           ;fs_menu_controller.c: 217:         break;
  2304  0050E2  EFB9  F028         	goto	l367
  2305  0050E6                     l6195:
  2306                           
  2307                           ; BSR set to: 0
  2308                           ;fs_menu_controller.c: 220:             stopMenu();
  2309  0050E6  ECD0  F026         	call	_stopMenu	;wreg free
  2310                           
  2311                           ;fs_menu_controller.c: 221:         break;
  2312  0050EA  EFB9  F028         	goto	l367
  2313  0050EE                     l6197:
  2314                           
  2315                           ; BSR set to: 0
  2316                           ;fs_menu_controller.c: 224:             startMenu();
  2317  0050EE  EC9F  F02E         	call	_startMenu	;wreg free
  2318                           
  2319                           ;fs_menu_controller.c: 225:         break;
  2320  0050F2  EFB9  F028         	goto	l367
  2321  0050F6                     l6199:
  2322                           
  2323                           ; BSR set to: 0
  2324                           ;fs_menu_controller.c: 228:             pauseMenu();
  2325  0050F6  ECB3  F021         	call	_pauseMenu	;wreg free
  2326                           
  2327                           ;fs_menu_controller.c: 229:         break;
  2328  0050FA  EFB9  F028         	goto	l367
  2329  0050FE                     l6201:
  2330                           
  2331                           ; BSR set to: 0
  2332                           ;fs_menu_controller.c: 232:             exitLine();
  2333  0050FE  ECC7  F02E         	call	_exitLine	;wreg free
  2334                           
  2335                           ;fs_menu_controller.c: 233:         break;
  2336  005102  EFB9  F028         	goto	l367
  2337  005106                     l6203:
  2338                           
  2339                           ; BSR set to: 0
  2340                           ;fs_menu_controller.c: 236:             secretMenu();
  2341  005106  EC95  F019         	call	_secretMenu	;wreg free
  2342                           
  2343                           ;fs_menu_controller.c: 237:         break;
  2344  00510A  EFB9  F028         	goto	l367
  2345  00510E                     l6207:
  2346  00510E  0100               	movlb	0	; () banked
  2347  005110  51FA               	movf	_menu_selected& (0+255),w,b
  2348  005112  6FF1               	movwf	??_stateMachine& (0+255),b
  2349  005114  6BF2               	clrf	(??_stateMachine+1)& (0+255),b
  2350                           
  2351                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2352                           ; Switch size 1, requested type "simple"
  2353                           ; Number of cases is 1, Range of values is 0 to 0
  2354                           ; switch strategies available:
  2355                           ; Name         Instructions Cycles
  2356                           ; simple_byte            4     3 (average)
  2357                           ;	Chosen strategy is simple_byte
  2358  005116  51F2               	movf	(??_stateMachine+1)& (0+255),w,b
  2359  005118  0A00               	xorlw	0	; case 0
  2360  00511A  B4D8               	btfsc	status,2,c
  2361  00511C  EF92  F028         	goto	l6449
  2362  005120  EFB9  F028         	goto	l367
  2363  005124                     l6449:
  2364                           
  2365                           ; BSR set to: 0
  2366                           ; Switch size 1, requested type "simple"
  2367                           ; Number of cases is 9, Range of values is 0 to 8
  2368                           ; switch strategies available:
  2369                           ; Name         Instructions Cycles
  2370                           ; simple_byte           28    15 (average)
  2371                           ;	Chosen strategy is simple_byte
  2372  005124  51F1               	movf	??_stateMachine& (0+255),w,b
  2373  005126  0A00               	xorlw	0	; case 0
  2374  005128  B4D8               	btfsc	status,2,c
  2375  00512A  EF63  F028         	goto	l6187
  2376  00512E  0A01               	xorlw	1	; case 1
  2377  005130  B4D8               	btfsc	status,2,c
  2378  005132  EF67  F028         	goto	l6189
  2379  005136  0A03               	xorlw	3	; case 2
  2380  005138  B4D8               	btfsc	status,2,c
  2381  00513A  EF6B  F028         	goto	l6191
  2382  00513E  0A01               	xorlw	1	; case 3
  2383  005140  B4D8               	btfsc	status,2,c
  2384  005142  EF6F  F028         	goto	l6193
  2385  005146  0A07               	xorlw	7	; case 4
  2386  005148  B4D8               	btfsc	status,2,c
  2387  00514A  EF73  F028         	goto	l6195
  2388  00514E  0A01               	xorlw	1	; case 5
  2389  005150  B4D8               	btfsc	status,2,c
  2390  005152  EF77  F028         	goto	l6197
  2391  005156  0A03               	xorlw	3	; case 6
  2392  005158  B4D8               	btfsc	status,2,c
  2393  00515A  EF7B  F028         	goto	l6199
  2394  00515E  0A01               	xorlw	1	; case 7
  2395  005160  B4D8               	btfsc	status,2,c
  2396  005162  EF7F  F028         	goto	l6201
  2397  005166  0A0F               	xorlw	15	; case 8
  2398  005168  B4D8               	btfsc	status,2,c
  2399  00516A  EF83  F028         	goto	l6203
  2400  00516E  EFB9  F028         	goto	l367
  2401  005172                     l367:
  2402  005172  0012               	return		;funcret
  2403  005174                     __end_of_stateMachine:
  2404                           	callstack 0
  2405                           
  2406 ;; *************** function _stopTimeSettingMenu *****************
  2407 ;; Defined at:
  2408 ;;		line 534 in file "fs_menu_controller.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;		None
  2411 ;; Auto vars:     Size  Location     Type
  2412 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  2413 ;; Return value:  Size  Location     Type
  2414 ;;                  1    wreg      void 
  2415 ;; Registers used:
  2416 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2417 ;; Tracked objects:
  2418 ;;		On entry : 0/0
  2419 ;;		On exit  : 0/0
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2422 ;;      Params:         0       0       0       0       0       0       0
  2423 ;;      Locals:         0      16       0       0       0       0       0
  2424 ;;      Temps:          0       0       0       0       0       0       0
  2425 ;;      Totals:         0      16       0       0       0       0       0
  2426 ;;Total ram usage:       16 bytes
  2427 ;; Hardware stack levels used:    1
  2428 ;; Hardware stack levels required when called:    9
  2429 ;; This function calls:
  2430 ;;		_Lcd_Set_Cursor
  2431 ;;		_Lcd_Write_String
  2432 ;;		_eepromWrite
  2433 ;;		_sprintf
  2434 ;;		_stopMotor
  2435 ;; This function is called by:
  2436 ;;		_stateMachine
  2437 ;; This function uses a non-reentrant model
  2438 ;;
  2439                           
  2440                           	psect	text7
  2441  0046E4                     __ptext7:
  2442                           	callstack 0
  2443  0046E4                     _stopTimeSettingMenu:
  2444                           	callstack 19
  2445  0046E4                     
  2446                           ;fs_menu_controller.c: 536:     char textCursor2[16] = {0};
  2447  0046E4  EE20  F0E1         	lfsr	2,stopTimeSettingMenu@textCursor2
  2448  0046E8  0E0F               	movlw	15
  2449  0046EA                     u7151:
  2450  0046EA  6ADE               	clrf	postinc2,c
  2451  0046EC  06E8               	decf	wreg,f,c
  2452  0046EE  E2FD               	bc	u7151
  2453  0046F0                     
  2454                           ;fs_menu_controller.c: 538:     stopMotor();
  2455  0046F0  EC41  F02D         	call	_stopMotor	;wreg free
  2456  0046F4                     
  2457                           ;fs_menu_controller.c: 540:     if (menu_flags.menu_input_flag == 1)
  2458  0046F4  0101               	movlb	1	; () banked
  2459  0046F6  05B7               	decf	_menu_flags& (0+255),w,b
  2460  0046F8  A4D8               	btfss	status,2,c
  2461  0046FA  EF81  F023         	goto	u7161
  2462  0046FE  EF83  F023         	goto	u7160
  2463  004702                     u7161:
  2464  004702  EF88  F023         	goto	l5891
  2465  004706                     u7160:
  2466  004706                     
  2467                           ; BSR set to: 1
  2468                           ;fs_menu_controller.c: 541:     {;fs_menu_controller.c: 542:         menu_flags.menu_inp
      +                          ut_flag = 0;
  2469  004706  0E00               	movlw	0
  2470  004708  6FB7               	movwf	_menu_flags& (0+255),b
  2471                           
  2472                           ;fs_menu_controller.c: 543:         menu_selected = SPEED_LIMIT_SETTING;
  2473  00470A  0E03               	movlw	3
  2474  00470C  0100               	movlb	0	; () banked
  2475  00470E  6FFA               	movwf	_menu_selected& (0+255),b
  2476  004710                     l5891:
  2477                           
  2478                           ;fs_menu_controller.c: 546:     if ((menu_flags.menu_increase_flag == 1) && (menu_value.
      +                          stop_time < 250))
  2479  004710  0101               	movlb	1	; () banked
  2480  004712  05BB               	decf	(_menu_flags+4)& (0+255),w,b
  2481  004714  A4D8               	btfss	status,2,c
  2482  004716  EF8F  F023         	goto	u7171
  2483  00471A  EF91  F023         	goto	u7170
  2484  00471E                     u7171:
  2485  00471E  EFA5  F023         	goto	l5901
  2486  004722                     u7170:
  2487  004722                     
  2488                           ; BSR set to: 1
  2489  004722  0EFA               	movlw	250
  2490  004724  0100               	movlb	0	; () banked
  2491  004726  61F4               	cpfslt	(_menu_value+1)& (0+255),b
  2492  004728  EF98  F023         	goto	u7181
  2493  00472C  EF9A  F023         	goto	u7180
  2494  004730                     u7181:
  2495  004730  EFA5  F023         	goto	l5901
  2496  004734                     u7180:
  2497  004734                     
  2498                           ; BSR set to: 0
  2499                           ;fs_menu_controller.c: 547:     {;fs_menu_controller.c: 548:         menu_flags.menu_inc
      +                          rease_flag = 0;
  2500  004734  0E00               	movlw	0
  2501  004736  0101               	movlb	1	; () banked
  2502  004738  6FBB               	movwf	(_menu_flags+4)& (0+255),b
  2503  00473A                     
  2504                           ; BSR set to: 1
  2505                           ;fs_menu_controller.c: 549:         menu_value.stop_time += 10;
  2506  00473A  0E0A               	movlw	10
  2507  00473C  0100               	movlb	0	; () banked
  2508  00473E  27F4               	addwf	(_menu_value+1)& (0+255),f,b
  2509  004740                     
  2510                           ; BSR set to: 0
  2511                           ;fs_menu_controller.c: 550:         eepromWrite(0x01,(uint8_t)menu_value.stop_time);
  2512  004740  C0F4  F001         	movff	_menu_value+1,eepromWrite@data
  2513  004744  0E01               	movlw	1
  2514  004746  EC1F  F02E         	call	_eepromWrite
  2515  00474A                     l5901:
  2516                           
  2517                           ;fs_menu_controller.c: 553:     if ((menu_flags.menu_decrease_flag == 1) && (menu_value.
      +                          stop_time > 10))
  2518  00474A  0101               	movlb	1	; () banked
  2519  00474C  05BC               	decf	(_menu_flags+5)& (0+255),w,b
  2520  00474E  A4D8               	btfss	status,2,c
  2521  004750  EFAC  F023         	goto	u7191
  2522  004754  EFAE  F023         	goto	u7190
  2523  004758                     u7191:
  2524  004758  EFC2  F023         	goto	l426
  2525  00475C                     u7190:
  2526  00475C                     
  2527                           ; BSR set to: 1
  2528  00475C  0E0A               	movlw	10
  2529  00475E  0100               	movlb	0	; () banked
  2530  004760  65F4               	cpfsgt	(_menu_value+1)& (0+255),b
  2531  004762  EFB5  F023         	goto	u7201
  2532  004766  EFB7  F023         	goto	u7200
  2533  00476A                     u7201:
  2534  00476A  EFC2  F023         	goto	l426
  2535  00476E                     u7200:
  2536  00476E                     
  2537                           ; BSR set to: 0
  2538                           ;fs_menu_controller.c: 554:     {;fs_menu_controller.c: 555:          menu_flags.menu_de
      +                          crease_flag = 0;
  2539  00476E  0E00               	movlw	0
  2540  004770  0101               	movlb	1	; () banked
  2541  004772  6FBC               	movwf	(_menu_flags+5)& (0+255),b
  2542  004774                     
  2543                           ; BSR set to: 1
  2544                           ;fs_menu_controller.c: 556:          menu_value.stop_time -= 10;
  2545  004774  0E0A               	movlw	10
  2546  004776  0100               	movlb	0	; () banked
  2547  004778  5FF4               	subwf	(_menu_value+1)& (0+255),f,b
  2548  00477A                     
  2549                           ; BSR set to: 0
  2550                           ;fs_menu_controller.c: 557:          eepromWrite(0x01,(uint8_t)menu_value.stop_time);
  2551  00477A  C0F4  F001         	movff	_menu_value+1,eepromWrite@data
  2552  00477E  0E01               	movlw	1
  2553  004780  EC1F  F02E         	call	_eepromWrite
  2554  004784                     l426:
  2555                           
  2556                           ;fs_menu_controller.c: 559:     Lcd_Set_Cursor(1,1);
  2557  004784  0E01               	movlw	1
  2558  004786  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2559  004788  0E01               	movlw	1
  2560  00478A  EC62  F02B         	call	_Lcd_Set_Cursor
  2561  00478E                     
  2562                           ;fs_menu_controller.c: 560:     Lcd_Write_String("DURMA ZAMANI  ms");
  2563  00478E  0E79               	movlw	low STR_13
  2564  004790  6E05               	movwf	Lcd_Write_String@a^0,c
  2565  004792  0E06               	movlw	high STR_13
  2566  004794  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2567  004796  EC04  F02A         	call	_Lcd_Write_String	;wreg free
  2568  00479A                     
  2569                           ;fs_menu_controller.c: 561:     Lcd_Set_Cursor(2,1);
  2570  00479A  0E01               	movlw	1
  2571  00479C  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2572  00479E  0E02               	movlw	2
  2573  0047A0  EC62  F02B         	call	_Lcd_Set_Cursor
  2574  0047A4                     
  2575                           ;fs_menu_controller.c: 562:     sprintf(textCursor2,"%d             ",menu_value.stop_ti
      +                          me);
  2576  0047A4  0EE1               	movlw	low stopTimeSettingMenu@textCursor2
  2577  0047A6  0100               	movlb	0	; () banked
  2578  0047A8  6FCF               	movwf	sprintf@s& (0+255),b
  2579  0047AA  0E00               	movlw	high stopTimeSettingMenu@textCursor2
  2580  0047AC  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2581  0047AE  0E8A               	movlw	low STR_14
  2582  0047B0  6FD1               	movwf	sprintf@fmt& (0+255),b
  2583  0047B2  0E06               	movlw	high STR_14
  2584  0047B4  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2585  0047B6  C0F4  F0D3         	movff	_menu_value+1,?_sprintf+4
  2586  0047BA  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  2587  0047BC  EC4A  F02C         	call	_sprintf	;wreg free
  2588  0047C0                     
  2589                           ;fs_menu_controller.c: 563:     Lcd_Write_String(textCursor2);
  2590  0047C0  0EE1               	movlw	low stopTimeSettingMenu@textCursor2
  2591  0047C2  6E05               	movwf	Lcd_Write_String@a^0,c
  2592  0047C4  0E00               	movlw	high stopTimeSettingMenu@textCursor2
  2593  0047C6  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2594  0047C8  EC04  F02A         	call	_Lcd_Write_String	;wreg free
  2595  0047CC                     
  2596                           ;fs_menu_controller.c: 565:     if(timer_value.menu_login_delay == 100)
  2597  0047CC  0E64               	movlw	100
  2598  0047CE  0101               	movlb	1	; () banked
  2599  0047D0  19B3               	xorwf	(_timer_value+4)& (0+255),w,b
  2600  0047D2  A4D8               	btfss	status,2,c
  2601  0047D4  EFEE  F023         	goto	u7211
  2602  0047D8  EFF0  F023         	goto	u7210
  2603  0047DC                     u7211:
  2604  0047DC  EFF5  F023         	goto	l428
  2605  0047E0                     u7210:
  2606  0047E0                     
  2607                           ; BSR set to: 1
  2608                           ;fs_menu_controller.c: 566:     {;fs_menu_controller.c: 567:         timer_value.menu_lo
      +                          gin_delay = 0;
  2609  0047E0  0E00               	movlw	0
  2610  0047E2  6FB3               	movwf	(_timer_value+4)& (0+255),b
  2611                           
  2612                           ;fs_menu_controller.c: 568:         menu_selected = PAUSE_MENU;
  2613  0047E4  0E06               	movlw	6
  2614  0047E6  0100               	movlb	0	; () banked
  2615  0047E8  6FFA               	movwf	_menu_selected& (0+255),b
  2616  0047EA                     l428:
  2617  0047EA  0012               	return		;funcret
  2618  0047EC                     __end_of_stopTimeSettingMenu:
  2619                           	callstack 0
  2620                           
  2621 ;; *************** function _stopMenu *****************
  2622 ;; Defined at:
  2623 ;;		line 306 in file "fs_menu_controller.c"
  2624 ;; Parameters:    Size  Location     Type
  2625 ;;		None
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  2628 ;; Return value:  Size  Location     Type
  2629 ;;                  1    wreg      void 
  2630 ;; Registers used:
  2631 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2632 ;; Tracked objects:
  2633 ;;		On entry : 0/0
  2634 ;;		On exit  : 0/0
  2635 ;;		Unchanged: 0/0
  2636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2637 ;;      Params:         0       0       0       0       0       0       0
  2638 ;;      Locals:         0      16       0       0       0       0       0
  2639 ;;      Temps:          0       0       0       0       0       0       0
  2640 ;;      Totals:         0      16       0       0       0       0       0
  2641 ;;Total ram usage:       16 bytes
  2642 ;; Hardware stack levels used:    1
  2643 ;; Hardware stack levels required when called:    9
  2644 ;; This function calls:
  2645 ;;		_Lcd_Set_Cursor
  2646 ;;		_Lcd_Write_String
  2647 ;;		_sprintf
  2648 ;;		_stopMotor
  2649 ;; This function is called by:
  2650 ;;		_stateMachine
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654                           	psect	text8
  2655  004DA0                     __ptext8:
  2656                           	callstack 0
  2657  004DA0                     _stopMenu:
  2658                           	callstack 19
  2659  004DA0                     
  2660                           ;fs_menu_controller.c: 308:     char textCursor2[16] = {0};
  2661  004DA0  EE20  F0E1         	lfsr	2,stopMenu@textCursor2
  2662  004DA4  0E0F               	movlw	15
  2663  004DA6                     u7291:
  2664  004DA6  6ADE               	clrf	postinc2,c
  2665  004DA8  06E8               	decf	wreg,f,c
  2666  004DAA  E2FD               	bc	u7291
  2667  004DAC                     
  2668                           ;fs_menu_controller.c: 310:     startIsClick = 0;
  2669  004DAC  0E00               	movlw	0
  2670  004DAE  0100               	movlb	0	; () banked
  2671  004DB0  6FFD               	movwf	_startIsClick& (0+255),b
  2672  004DB2                     
  2673                           ; BSR set to: 0
  2674                           ;fs_menu_controller.c: 311:     pauseIsClick = 0;
  2675  004DB2  0E00               	movlw	0
  2676  004DB4  6FFE               	movwf	_pauseIsClick& (0+255),b
  2677  004DB6                     
  2678                           ; BSR set to: 0
  2679                           ;fs_menu_controller.c: 312:     stopIsClick = 1;
  2680  004DB6  0E01               	movlw	1
  2681  004DB8  6FFC               	movwf	_stopIsClick& (0+255),b
  2682  004DBA                     
  2683                           ; BSR set to: 0
  2684                           ;fs_menu_controller.c: 314:     Lcd_Set_Cursor(1,1);
  2685  004DBA  0E01               	movlw	1
  2686  004DBC  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2687  004DBE  0E01               	movlw	1
  2688  004DC0  EC62  F02B         	call	_Lcd_Set_Cursor
  2689  004DC4                     
  2690                           ;fs_menu_controller.c: 315:     Lcd_Write_String("ZAMAN DOLDU     ");
  2691  004DC4  0E46               	movlw	low STR_3
  2692  004DC6  6E05               	movwf	Lcd_Write_String@a^0,c
  2693  004DC8  0E06               	movlw	high STR_3
  2694  004DCA  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2695  004DCC  EC04  F02A         	call	_Lcd_Write_String	;wreg free
  2696  004DD0                     
  2697                           ;fs_menu_controller.c: 317:     timer_value.remainingSecond = 0;
  2698  004DD0  0E00               	movlw	0
  2699  004DD2  0101               	movlb	1	; () banked
  2700  004DD4  6FB1               	movwf	(_timer_value+2)& (0+255),b
  2701  004DD6                     
  2702                           ; BSR set to: 1
  2703                           ;fs_menu_controller.c: 318:     timer_value.remainingMinute = 0;
  2704  004DD6  0E00               	movlw	0
  2705  004DD8  6FB2               	movwf	(_timer_value+3)& (0+255),b
  2706  004DDA                     
  2707                           ; BSR set to: 1
  2708                           ;fs_menu_controller.c: 320:     Lcd_Set_Cursor(2,1);
  2709  004DDA  0E01               	movlw	1
  2710  004DDC  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2711  004DDE  0E02               	movlw	2
  2712  004DE0  EC62  F02B         	call	_Lcd_Set_Cursor
  2713  004DE4                     
  2714                           ;fs_menu_controller.c: 321:     sprintf(textCursor2,"      %d:%d    ",timer_value.remain
      +                          ingMinute,timer_value.remainingSecond);
  2715  004DE4  0EE1               	movlw	low stopMenu@textCursor2
  2716  004DE6  0100               	movlb	0	; () banked
  2717  004DE8  6FCF               	movwf	sprintf@s& (0+255),b
  2718  004DEA  0E00               	movlw	high stopMenu@textCursor2
  2719  004DEC  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2720  004DEE  0E9A               	movlw	low STR_4
  2721  004DF0  6FD1               	movwf	sprintf@fmt& (0+255),b
  2722  004DF2  0E06               	movlw	high STR_4
  2723  004DF4  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2724  004DF6  0101               	movlb	1	; () banked
  2725  004DF8  51B2               	movf	(_timer_value+3)& (0+255),w,b
  2726  004DFA  0100               	movlb	0	; () banked
  2727  004DFC  6FD3               	movwf	(?_sprintf+4)& (0+255),b
  2728  004DFE  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  2729  004E00  BFD3               	btfsc	(?_sprintf+4)& (0+255),7,b
  2730  004E02  07D4               	decf	(?_sprintf+5)& (0+255),f,b
  2731  004E04  C1B1  F0D5         	movff	_timer_value+2,?_sprintf+6
  2732  004E08  6BD6               	clrf	(?_sprintf+7)& (0+255),b
  2733  004E0A  EC4A  F02C         	call	_sprintf	;wreg free
  2734  004E0E                     
  2735                           ;fs_menu_controller.c: 322:     Lcd_Write_String(textCursor2);
  2736  004E0E  0EE1               	movlw	low stopMenu@textCursor2
  2737  004E10  6E05               	movwf	Lcd_Write_String@a^0,c
  2738  004E12  0E00               	movlw	high stopMenu@textCursor2
  2739  004E14  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2740  004E16  EC04  F02A         	call	_Lcd_Write_String	;wreg free
  2741  004E1A                     
  2742                           ;fs_menu_controller.c: 324:     if (menu_flags.menu_start_flag == 1)
  2743  004E1A  0101               	movlb	1	; () banked
  2744  004E1C  05B8               	decf	(_menu_flags+1)& (0+255),w,b
  2745  004E1E  A4D8               	btfss	status,2,c
  2746  004E20  EF14  F027         	goto	u7301
  2747  004E24  EF16  F027         	goto	u7300
  2748  004E28                     u7301:
  2749  004E28  EF26  F027         	goto	l5991
  2750  004E2C                     u7300:
  2751  004E2C                     
  2752                           ; BSR set to: 1
  2753                           ;fs_menu_controller.c: 325:     {;fs_menu_controller.c: 326:         menu_flags.menu_sta
      +                          rt_flag = 0;
  2754  004E2C  0E00               	movlw	0
  2755  004E2E  6FB8               	movwf	(_menu_flags+1)& (0+255),b
  2756                           
  2757                           ;fs_menu_controller.c: 327:         menu_selected = START_MENU;
  2758  004E30  0E05               	movlw	5
  2759  004E32  0100               	movlb	0	; () banked
  2760  004E34  6FFA               	movwf	_menu_selected& (0+255),b
  2761                           
  2762                           ;fs_menu_controller.c: 329:         startIsClick = 1;
  2763  004E36  0E01               	movlw	1
  2764  004E38  6FFD               	movwf	_startIsClick& (0+255),b
  2765                           
  2766                           ;fs_menu_controller.c: 330:         pauseIsClick = 0;
  2767  004E3A  0E00               	movlw	0
  2768  004E3C  6FFE               	movwf	_pauseIsClick& (0+255),b
  2769                           
  2770                           ;fs_menu_controller.c: 331:         stopIsClick = 0;
  2771  004E3E  0E00               	movlw	0
  2772  004E40  6FFC               	movwf	_stopIsClick& (0+255),b
  2773                           
  2774                           ;fs_menu_controller.c: 332:         timer_value.second = 0;
  2775  004E42  0E00               	movlw	0
  2776  004E44  0101               	movlb	1	; () banked
  2777  004E46  6FAF               	movwf	_timer_value& (0+255),b
  2778                           
  2779                           ;fs_menu_controller.c: 333:         timer_value.minute = 0;
  2780  004E48  0E00               	movlw	0
  2781  004E4A  6FB0               	movwf	(_timer_value+1)& (0+255),b
  2782  004E4C                     l5991:
  2783                           
  2784                           ; BSR set to: 1
  2785                           ;fs_menu_controller.c: 336:     if ( timer_value.menu_login_delay == 100)
  2786  004E4C  0E64               	movlw	100
  2787  004E4E  19B3               	xorwf	(_timer_value+4)& (0+255),w,b
  2788  004E50  A4D8               	btfss	status,2,c
  2789  004E52  EF2D  F027         	goto	u7311
  2790  004E56  EF2F  F027         	goto	u7310
  2791  004E5A                     u7311:
  2792  004E5A  EF34  F027         	goto	l5995
  2793  004E5E                     u7310:
  2794  004E5E                     
  2795                           ; BSR set to: 1
  2796                           ;fs_menu_controller.c: 337:     {;fs_menu_controller.c: 338:         timer_value.menu_lo
      +                          gin_delay = 0;
  2797  004E5E  0E00               	movlw	0
  2798  004E60  6FB3               	movwf	(_timer_value+4)& (0+255),b
  2799                           
  2800                           ;fs_menu_controller.c: 339:         menu_selected = DRIVER_TIME_SETTING;
  2801  004E62  0E01               	movlw	1
  2802  004E64  0100               	movlb	0	; () banked
  2803  004E66  6FFA               	movwf	_menu_selected& (0+255),b
  2804  004E68                     l5995:
  2805                           
  2806                           ;fs_menu_controller.c: 341: stopMotor();
  2807  004E68  EC41  F02D         	call	_stopMotor	;wreg free
  2808  004E6C  0012               	return		;funcret
  2809  004E6E                     __end_of_stopMenu:
  2810                           	callstack 0
  2811                           
  2812 ;; *************** function _startMenu *****************
  2813 ;; Defined at:
  2814 ;;		line 404 in file "fs_menu_controller.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;		None
  2817 ;; Auto vars:     Size  Location     Type
  2818 ;;		None
  2819 ;; Return value:  Size  Location     Type
  2820 ;;                  1    wreg      void 
  2821 ;; Registers used:
  2822 ;;		wreg, status,2
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/0
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2828 ;;      Params:         0       0       0       0       0       0       0
  2829 ;;      Locals:         0       0       0       0       0       0       0
  2830 ;;      Temps:          0       0       0       0       0       0       0
  2831 ;;      Totals:         0       0       0       0       0       0       0
  2832 ;;Total ram usage:        0 bytes
  2833 ;; Hardware stack levels used:    1
  2834 ;; Hardware stack levels required when called:    1
  2835 ;; This function calls:
  2836 ;;		Nothing
  2837 ;; This function is called by:
  2838 ;;		_stateMachine
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           	psect	text9
  2843  005D3E                     __ptext9:
  2844                           	callstack 0
  2845  005D3E                     _startMenu:
  2846                           	callstack 27
  2847  005D3E                     
  2848                           ;fs_menu_controller.c: 406:     timer_value.remainingMinute = menu_value.driver_time;
  2849  005D3E  C0F3  F1B2         	movff	_menu_value,_timer_value+3
  2850  005D42                     
  2851                           ;fs_menu_controller.c: 407:     timer_value.remainingSecond = 0;
  2852  005D42  0E00               	movlw	0
  2853  005D44  0101               	movlb	1	; () banked
  2854  005D46  6FB1               	movwf	(_timer_value+2)& (0+255),b
  2855                           
  2856                           ;fs_menu_controller.c: 408:     startIsClick = 1;
  2857  005D48  0E01               	movlw	1
  2858  005D4A  0100               	movlb	0	; () banked
  2859  005D4C  6FFD               	movwf	_startIsClick& (0+255),b
  2860                           
  2861                           ;fs_menu_controller.c: 409:     stopIsClick = 0;
  2862  005D4E  0E00               	movlw	0
  2863  005D50  6FFC               	movwf	_stopIsClick& (0+255),b
  2864                           
  2865                           ;fs_menu_controller.c: 410:     menu_selected = MAIN_MENU;
  2866  005D52  0E00               	movlw	0
  2867  005D54  6FFA               	movwf	_menu_selected& (0+255),b
  2868  005D56                     
  2869                           ; BSR set to: 0
  2870  005D56  0012               	return		;funcret
  2871  005D58                     __end_of_startMenu:
  2872                           	callstack 0
  2873                           
  2874 ;; *************** function _speedLimitSettingMenu *****************
  2875 ;; Defined at:
  2876 ;;		line 491 in file "fs_menu_controller.c"
  2877 ;; Parameters:    Size  Location     Type
  2878 ;;		None
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  2881 ;; Return value:  Size  Location     Type
  2882 ;;                  1    wreg      void 
  2883 ;; Registers used:
  2884 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2885 ;; Tracked objects:
  2886 ;;		On entry : 0/0
  2887 ;;		On exit  : 0/0
  2888 ;;		Unchanged: 0/0
  2889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2890 ;;      Params:         0       0       0       0       0       0       0
  2891 ;;      Locals:         0      16       0       0       0       0       0
  2892 ;;      Temps:          0       0       0       0       0       0       0
  2893 ;;      Totals:         0      16       0       0       0       0       0
  2894 ;;Total ram usage:       16 bytes
  2895 ;; Hardware stack levels used:    1
  2896 ;; Hardware stack levels required when called:    9
  2897 ;; This function calls:
  2898 ;;		_Lcd_Set_Cursor
  2899 ;;		_Lcd_Write_String
  2900 ;;		_eepromWrite
  2901 ;;		_sprintf
  2902 ;;		_stopMotor
  2903 ;; This function is called by:
  2904 ;;		_stateMachine
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           	psect	text10
  2909  0048F2                     __ptext10:
  2910                           	callstack 0
  2911  0048F2                     _speedLimitSettingMenu:
  2912                           	callstack 19
  2913  0048F2                     
  2914                           ;fs_menu_controller.c: 493:     char textCursor2[16] = {0};
  2915  0048F2  EE20  F0E1         	lfsr	2,speedLimitSettingMenu@textCursor2
  2916  0048F6  0E0F               	movlw	15
  2917  0048F8                     u7221:
  2918  0048F8  6ADE               	clrf	postinc2,c
  2919  0048FA  06E8               	decf	wreg,f,c
  2920  0048FC  E2FD               	bc	u7221
  2921  0048FE                     
  2922                           ;fs_menu_controller.c: 494:     stopMotor();
  2923  0048FE  EC41  F02D         	call	_stopMotor	;wreg free
  2924  004902                     
  2925                           ;fs_menu_controller.c: 496:     if (menu_flags.menu_input_flag == 1)
  2926  004902  0101               	movlb	1	; () banked
  2927  004904  05B7               	decf	_menu_flags& (0+255),w,b
  2928  004906  A4D8               	btfss	status,2,c
  2929  004908  EF88  F024         	goto	u7231
  2930  00490C  EF8A  F024         	goto	u7230
  2931  004910                     u7231:
  2932  004910  EF8F  F024         	goto	l5931
  2933  004914                     u7230:
  2934  004914                     
  2935                           ; BSR set to: 1
  2936                           ;fs_menu_controller.c: 497:     {;fs_menu_controller.c: 498:         menu_flags.menu_inp
      +                          ut_flag = 0;
  2937  004914  0E00               	movlw	0
  2938  004916  6FB7               	movwf	_menu_flags& (0+255),b
  2939                           
  2940                           ;fs_menu_controller.c: 499:         menu_selected = DRIVER_TIME_SETTING;
  2941  004918  0E01               	movlw	1
  2942  00491A  0100               	movlb	0	; () banked
  2943  00491C  6FFA               	movwf	_menu_selected& (0+255),b
  2944  00491E                     l5931:
  2945                           
  2946                           ;fs_menu_controller.c: 502:     if ((menu_flags.menu_increase_flag == 1) && (menu_value.
      +                          speed_limit < 5))
  2947  00491E  0101               	movlb	1	; () banked
  2948  004920  05BB               	decf	(_menu_flags+4)& (0+255),w,b
  2949  004922  A4D8               	btfss	status,2,c
  2950  004924  EF96  F024         	goto	u7241
  2951  004928  EF98  F024         	goto	u7240
  2952  00492C                     u7241:
  2953  00492C  EFAB  F024         	goto	l5941
  2954  004930                     u7240:
  2955  004930                     
  2956                           ; BSR set to: 1
  2957  004930  0E05               	movlw	5
  2958  004932  0100               	movlb	0	; () banked
  2959  004934  61F5               	cpfslt	(_menu_value+2)& (0+255),b
  2960  004936  EF9F  F024         	goto	u7251
  2961  00493A  EFA1  F024         	goto	u7250
  2962  00493E                     u7251:
  2963  00493E  EFAB  F024         	goto	l5941
  2964  004942                     u7250:
  2965  004942                     
  2966                           ; BSR set to: 0
  2967                           ;fs_menu_controller.c: 503:     {;fs_menu_controller.c: 504:         menu_flags.menu_inc
      +                          rease_flag = 0;
  2968  004942  0E00               	movlw	0
  2969  004944  0101               	movlb	1	; () banked
  2970  004946  6FBB               	movwf	(_menu_flags+4)& (0+255),b
  2971  004948                     
  2972                           ; BSR set to: 1
  2973                           ;fs_menu_controller.c: 505:         menu_value.speed_limit += 1;
  2974  004948  0100               	movlb	0	; () banked
  2975  00494A  2BF5               	incf	(_menu_value+2)& (0+255),f,b
  2976  00494C                     
  2977                           ; BSR set to: 0
  2978                           ;fs_menu_controller.c: 506:         eepromWrite(0x02,menu_value.speed_limit);
  2979  00494C  C0F5  F001         	movff	_menu_value+2,eepromWrite@data
  2980  004950  0E02               	movlw	2
  2981  004952  EC1F  F02E         	call	_eepromWrite
  2982  004956                     l5941:
  2983                           
  2984                           ;fs_menu_controller.c: 509:     if ((menu_flags.menu_decrease_flag == 1) && (menu_value.
      +                          speed_limit > 1))
  2985  004956  0101               	movlb	1	; () banked
  2986  004958  05BC               	decf	(_menu_flags+5)& (0+255),w,b
  2987  00495A  A4D8               	btfss	status,2,c
  2988  00495C  EFB2  F024         	goto	u7261
  2989  004960  EFB4  F024         	goto	u7260
  2990  004964                     u7261:
  2991  004964  EFC7  F024         	goto	l5951
  2992  004968                     u7260:
  2993  004968                     
  2994                           ; BSR set to: 1
  2995  004968  0E01               	movlw	1
  2996  00496A  0100               	movlb	0	; () banked
  2997  00496C  65F5               	cpfsgt	(_menu_value+2)& (0+255),b
  2998  00496E  EFBB  F024         	goto	u7271
  2999  004972  EFBD  F024         	goto	u7270
  3000  004976                     u7271:
  3001  004976  EFC7  F024         	goto	l5951
  3002  00497A                     u7270:
  3003  00497A                     
  3004                           ; BSR set to: 0
  3005                           ;fs_menu_controller.c: 510:     {;fs_menu_controller.c: 511:          menu_flags.menu_de
      +                          crease_flag = 0;
  3006  00497A  0E00               	movlw	0
  3007  00497C  0101               	movlb	1	; () banked
  3008  00497E  6FBC               	movwf	(_menu_flags+5)& (0+255),b
  3009  004980                     
  3010                           ; BSR set to: 1
  3011                           ;fs_menu_controller.c: 512:          menu_value.speed_limit -= 1;
  3012  004980  0100               	movlb	0	; () banked
  3013  004982  07F5               	decf	(_menu_value+2)& (0+255),f,b
  3014  004984                     
  3015                           ; BSR set to: 0
  3016                           ;fs_menu_controller.c: 513:          eepromWrite(0x02,menu_value.speed_limit);
  3017  004984  C0F5  F001         	movff	_menu_value+2,eepromWrite@data
  3018  004988  0E02               	movlw	2
  3019  00498A  EC1F  F02E         	call	_eepromWrite
  3020  00498E                     l5951:
  3021                           
  3022                           ;fs_menu_controller.c: 515:     Lcd_Set_Cursor(1,1);
  3023  00498E  0E01               	movlw	1
  3024  004990  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3025  004992  0E01               	movlw	1
  3026  004994  EC62  F02B         	call	_Lcd_Set_Cursor
  3027  004998                     
  3028                           ;fs_menu_controller.c: 516:     Lcd_Write_String("HIZ LiMiTi      ");
  3029  004998  0E24               	movlw	low STR_11
  3030  00499A  6E05               	movwf	Lcd_Write_String@a^0,c
  3031  00499C  0E06               	movlw	high STR_11
  3032  00499E  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3033  0049A0  EC04  F02A         	call	_Lcd_Write_String	;wreg free
  3034  0049A4                     
  3035                           ;fs_menu_controller.c: 517:     Lcd_Set_Cursor(2,1);
  3036  0049A4  0E01               	movlw	1
  3037  0049A6  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3038  0049A8  0E02               	movlw	2
  3039  0049AA  EC62  F02B         	call	_Lcd_Set_Cursor
  3040  0049AE                     
  3041                           ;fs_menu_controller.c: 518:     sprintf(textCursor2,"%d               ",menu_value.speed
      +                          _limit);
  3042  0049AE  0EE1               	movlw	low speedLimitSettingMenu@textCursor2
  3043  0049B0  0100               	movlb	0	; () banked
  3044  0049B2  6FCF               	movwf	sprintf@s& (0+255),b
  3045  0049B4  0E00               	movlw	high speedLimitSettingMenu@textCursor2
  3046  0049B6  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3047  0049B8  0E01               	movlw	low STR_12
  3048  0049BA  6FD1               	movwf	sprintf@fmt& (0+255),b
  3049  0049BC  0E06               	movlw	high STR_12
  3050  0049BE  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3051  0049C0  C0F5  F0D3         	movff	_menu_value+2,?_sprintf+4
  3052  0049C4  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  3053  0049C6  EC4A  F02C         	call	_sprintf	;wreg free
  3054  0049CA                     
  3055                           ;fs_menu_controller.c: 519:     Lcd_Write_String(textCursor2);
  3056  0049CA  0EE1               	movlw	low speedLimitSettingMenu@textCursor2
  3057  0049CC  6E05               	movwf	Lcd_Write_String@a^0,c
  3058  0049CE  0E00               	movlw	high speedLimitSettingMenu@textCursor2
  3059  0049D0  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3060  0049D2  EC04  F02A         	call	_Lcd_Write_String	;wreg free
  3061  0049D6                     
  3062                           ;fs_menu_controller.c: 521:     if(timer_value.menu_login_delay == 100)
  3063  0049D6  0E64               	movlw	100
  3064  0049D8  0101               	movlb	1	; () banked
  3065  0049DA  19B3               	xorwf	(_timer_value+4)& (0+255),w,b
  3066  0049DC  A4D8               	btfss	status,2,c
  3067  0049DE  EFF3  F024         	goto	u7281
  3068  0049E2  EFF5  F024         	goto	u7280
  3069  0049E6                     u7281:
  3070  0049E6  EFFA  F024         	goto	l419
  3071  0049EA                     u7280:
  3072  0049EA                     
  3073                           ; BSR set to: 1
  3074                           ;fs_menu_controller.c: 522:     {;fs_menu_controller.c: 523:         timer_value.menu_lo
      +                          gin_delay = 0;
  3075  0049EA  0E00               	movlw	0
  3076  0049EC  6FB3               	movwf	(_timer_value+4)& (0+255),b
  3077                           
  3078                           ;fs_menu_controller.c: 524:         menu_selected = PAUSE_MENU;
  3079  0049EE  0E06               	movlw	6
  3080  0049F0  0100               	movlb	0	; () banked
  3081  0049F2  6FFA               	movwf	_menu_selected& (0+255),b
  3082  0049F4                     l419:
  3083  0049F4  0012               	return		;funcret
  3084  0049F6                     __end_of_speedLimitSettingMenu:
  3085                           	callstack 0
  3086                           
  3087 ;; *************** function _secretMenu *****************
  3088 ;; Defined at:
  3089 ;;		line 419 in file "fs_menu_controller.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;		None
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  1    wreg      void 
  3096 ;; Registers used:
  3097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3103 ;;      Params:         0       0       0       0       0       0       0
  3104 ;;      Locals:         0      16       0       0       0       0       0
  3105 ;;      Temps:          0       0       0       0       0       0       0
  3106 ;;      Totals:         0      16       0       0       0       0       0
  3107 ;;Total ram usage:       16 bytes
  3108 ;; Hardware stack levels used:    1
  3109 ;; Hardware stack levels required when called:    9
  3110 ;; This function calls:
  3111 ;;		_Lcd_Set_Cursor
  3112 ;;		_Lcd_Write_String
  3113 ;;		___fladd
  3114 ;;		___flge
  3115 ;;		___flsub
  3116 ;;		_sprintf
  3117 ;;		_stopMotor
  3118 ;; This function is called by:
  3119 ;;		_stateMachine
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123                           	psect	text11
  3124  00332A                     __ptext11:
  3125                           	callstack 0
  3126  00332A                     _secretMenu:
  3127                           	callstack 19
  3128  00332A                     
  3129                           ;fs_menu_controller.c: 421:     char textCursor2[16] = {0};
  3130  00332A  EE20  F0E1         	lfsr	2,secretMenu@textCursor2
  3131  00332E  0E0F               	movlw	15
  3132  003330                     u7411:
  3133  003330  6ADE               	clrf	postinc2,c
  3134  003332  06E8               	decf	wreg,f,c
  3135  003334  E2FD               	bc	u7411
  3136  003336                     
  3137                           ;fs_menu_controller.c: 423:     stopMotor();
  3138  003336  EC41  F02D         	call	_stopMotor	;wreg free
  3139  00333A                     
  3140                           ;fs_menu_controller.c: 425:     if (menu_flags.menu_input_flag == 1)
  3141  00333A  0101               	movlb	1	; () banked
  3142  00333C  05B7               	decf	_menu_flags& (0+255),w,b
  3143  00333E  A4D8               	btfss	status,2,c
  3144  003340  EFA4  F019         	goto	u7421
  3145  003344  EFA6  F019         	goto	u7420
  3146  003348                     u7421:
  3147  003348  EFB4  F019         	goto	l6055
  3148  00334C                     u7420:
  3149  00334C                     
  3150                           ; BSR set to: 1
  3151                           ;fs_menu_controller.c: 426:     {;fs_menu_controller.c: 427:         menu_flags.menu_inp
      +                          ut_flag = 0;
  3152  00334C  0E00               	movlw	0
  3153  00334E  6FB7               	movwf	_menu_flags& (0+255),b
  3154  003350                     
  3155                           ; BSR set to: 1
  3156                           ;fs_menu_controller.c: 428:         secretMenuCounter++;
  3157  003350  0100               	movlb	0	; () banked
  3158  003352  2BFB               	incf	_secretMenuCounter& (0+255),f,b
  3159  003354                     
  3160                           ; BSR set to: 0
  3161                           ;fs_menu_controller.c: 430:         if (secretMenuCounter >2)
  3162  003354  0E02               	movlw	2
  3163  003356  65FB               	cpfsgt	_secretMenuCounter& (0+255),b
  3164  003358  EFB0  F019         	goto	u7431
  3165  00335C  EFB2  F019         	goto	u7430
  3166  003360                     u7431:
  3167  003360  EFB4  F019         	goto	l6055
  3168  003364                     u7430:
  3169  003364                     
  3170                           ; BSR set to: 0
  3171                           ;fs_menu_controller.c: 431:         {;fs_menu_controller.c: 432:             secretMenuC
      +                          ounter = 1;
  3172  003364  0E01               	movlw	1
  3173  003366  6FFB               	movwf	_secretMenuCounter& (0+255),b
  3174  003368                     l6055:
  3175                           
  3176                           ;fs_menu_controller.c: 436:     if (secretMenuCounter == 1)
  3177  003368  0100               	movlb	0	; () banked
  3178  00336A  05FB               	decf	_secretMenuCounter& (0+255),w,b
  3179  00336C  A4D8               	btfss	status,2,c
  3180  00336E  EFBB  F019         	goto	u7441
  3181  003372  EFBD  F019         	goto	u7440
  3182  003376                     u7441:
  3183  003376  EF51  F01A         	goto	l6083
  3184  00337A                     u7440:
  3185  00337A                     
  3186                           ; BSR set to: 0
  3187                           ;fs_menu_controller.c: 437:     {;fs_menu_controller.c: 438:         Lcd_Set_Cursor(1,1)
      +                          ;
  3188  00337A  0E01               	movlw	1
  3189  00337C  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3190  00337E  0E01               	movlw	1
  3191  003380  EC62  F02B         	call	_Lcd_Set_Cursor
  3192  003384                     
  3193                           ;fs_menu_controller.c: 439:         Lcd_Write_String("PID PARAM       ");
  3194  003384  0E13               	movlw	low STR_7
  3195  003386  6E05               	movwf	Lcd_Write_String@a^0,c
  3196  003388  0E06               	movlw	high STR_7
  3197  00338A  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3198  00338C  EC04  F02A         	call	_Lcd_Write_String	;wreg free
  3199  003390                     
  3200                           ;fs_menu_controller.c: 440:         Lcd_Set_Cursor(2,1);
  3201  003390  0E01               	movlw	1
  3202  003392  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3203  003394  0E02               	movlw	2
  3204  003396  EC62  F02B         	call	_Lcd_Set_Cursor
  3205  00339A                     
  3206                           ;fs_menu_controller.c: 441:         sprintf(textCursor2,"Kp:%5.1f     ",KP);
  3207  00339A  0EE1               	movlw	low secretMenu@textCursor2
  3208  00339C  0100               	movlb	0	; () banked
  3209  00339E  6FCF               	movwf	sprintf@s& (0+255),b
  3210  0033A0  0E00               	movlw	high secretMenu@textCursor2
  3211  0033A2  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3212  0033A4  0EB9               	movlw	low STR_8
  3213  0033A6  6FD1               	movwf	sprintf@fmt& (0+255),b
  3214  0033A8  0E06               	movlw	high STR_8
  3215  0033AA  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3216  0033AC  C1DF  F0D3         	movff	_KP@fs_speed_controller$F1640,?_sprintf+4
  3217  0033B0  C1E0  F0D4         	movff	_KP@fs_speed_controller$F1640+1,?_sprintf+5
  3218  0033B4  C1E1  F0D5         	movff	_KP@fs_speed_controller$F1640+2,?_sprintf+6
  3219  0033B8  C1E2  F0D6         	movff	_KP@fs_speed_controller$F1640+3,?_sprintf+7
  3220  0033BC  EC4A  F02C         	call	_sprintf	;wreg free
  3221  0033C0                     
  3222                           ;fs_menu_controller.c: 442:         Lcd_Write_String(textCursor2);
  3223  0033C0  0EE1               	movlw	low secretMenu@textCursor2
  3224  0033C2  6E05               	movwf	Lcd_Write_String@a^0,c
  3225  0033C4  0E00               	movlw	high secretMenu@textCursor2
  3226  0033C6  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3227  0033C8  EC04  F02A         	call	_Lcd_Write_String	;wreg free
  3228  0033CC                     
  3229                           ;fs_menu_controller.c: 444:         if ((menu_flags.menu_increase_flag == 1) && (KP < 2.
      +                          5))
  3230  0033CC  0101               	movlb	1	; () banked
  3231  0033CE  05BB               	decf	(_menu_flags+4)& (0+255),w,b
  3232  0033D0  A4D8               	btfss	status,2,c
  3233  0033D2  EFED  F019         	goto	u7451
  3234  0033D6  EFEF  F019         	goto	u7450
  3235  0033DA                     u7451:
  3236  0033DA  EF25  F01A         	goto	l6075
  3237  0033DE                     u7450:
  3238  0033DE                     
  3239                           ; BSR set to: 1
  3240  0033DE  C1DF  F035         	movff	_KP@fs_speed_controller$F1640,___flge@ff1
  3241  0033E2  C1E0  F036         	movff	_KP@fs_speed_controller$F1640+1,___flge@ff1+1
  3242  0033E6  C1E1  F037         	movff	_KP@fs_speed_controller$F1640+2,___flge@ff1+2
  3243  0033EA  C1E2  F038         	movff	_KP@fs_speed_controller$F1640+3,___flge@ff1+3
  3244  0033EE  0E00               	movlw	0
  3245  0033F0  6E39               	movwf	___flge@ff2^0,c
  3246  0033F2  0E00               	movlw	0
  3247  0033F4  6E3A               	movwf	(___flge@ff2+1)^0,c
  3248  0033F6  0E20               	movlw	32
  3249  0033F8  6E3B               	movwf	(___flge@ff2+2)^0,c
  3250  0033FA  0E40               	movlw	64
  3251  0033FC  6E3C               	movwf	(___flge@ff2+3)^0,c
  3252  0033FE  ECFB  F024         	call	___flge	;wreg free
  3253  003402  B0D8               	btfsc	status,0,c
  3254  003404  EF06  F01A         	goto	u7461
  3255  003408  EF08  F01A         	goto	u7460
  3256  00340C                     u7461:
  3257  00340C  EF25  F01A         	goto	l6075
  3258  003410                     u7460:
  3259  003410                     
  3260                           ;fs_menu_controller.c: 445:         {;fs_menu_controller.c: 446:             menu_flags.
      +                          menu_increase_flag = 0;
  3261  003410  0E00               	movlw	0
  3262  003412  0101               	movlb	1	; () banked
  3263  003414  6FBB               	movwf	(_menu_flags+4)& (0+255),b
  3264  003416                     
  3265                           ; BSR set to: 1
  3266                           ;fs_menu_controller.c: 447:             KP += 0.1;
  3267  003416  C1DF  F035         	movff	_KP@fs_speed_controller$F1640,___fladd@b
  3268  00341A  C1E0  F036         	movff	_KP@fs_speed_controller$F1640+1,___fladd@b+1
  3269  00341E  C1E1  F037         	movff	_KP@fs_speed_controller$F1640+2,___fladd@b+2
  3270  003422  C1E2  F038         	movff	_KP@fs_speed_controller$F1640+3,___fladd@b+3
  3271  003426  0ECD               	movlw	205
  3272  003428  6E39               	movwf	___fladd@a^0,c
  3273  00342A  0ECC               	movlw	204
  3274  00342C  6E3A               	movwf	(___fladd@a+1)^0,c
  3275  00342E  0ECC               	movlw	204
  3276  003430  6E3B               	movwf	(___fladd@a+2)^0,c
  3277  003432  0E3D               	movlw	61
  3278  003434  6E3C               	movwf	(___fladd@a+3)^0,c
  3279  003436  EC6E  F010         	call	___fladd	;wreg free
  3280  00343A  C035  F1DF         	movff	?___fladd,_KP@fs_speed_controller$F1640
  3281  00343E  C036  F1E0         	movff	?___fladd+1,_KP@fs_speed_controller$F1640+1
  3282  003442  C037  F1E1         	movff	?___fladd+2,_KP@fs_speed_controller$F1640+2
  3283  003446  C038  F1E2         	movff	?___fladd+3,_KP@fs_speed_controller$F1640+3
  3284  00344A                     l6075:
  3285                           
  3286                           ;fs_menu_controller.c: 450:         if ((menu_flags.menu_decrease_flag == 1) && (KP >= 0
      +                          ))
  3287  00344A  0101               	movlb	1	; () banked
  3288  00344C  05BC               	decf	(_menu_flags+5)& (0+255),w,b
  3289  00344E  A4D8               	btfss	status,2,c
  3290  003450  EF2C  F01A         	goto	u7471
  3291  003454  EF2E  F01A         	goto	u7470
  3292  003458                     u7471:
  3293  003458  EF51  F01A         	goto	l6083
  3294  00345C                     u7470:
  3295  00345C                     
  3296                           ; BSR set to: 1
  3297  00345C  BFE2               	btfsc	(_KP@fs_speed_controller$F1640+3)& (0+255),7,b
  3298  00345E  EF33  F01A         	goto	u7481
  3299  003462  EF35  F01A         	goto	u7480
  3300  003466                     u7481:
  3301  003466  EF51  F01A         	goto	l6083
  3302  00346A                     u7480:
  3303  00346A                     
  3304                           ; BSR set to: 1
  3305                           ;fs_menu_controller.c: 451:         {;fs_menu_controller.c: 452:             menu_flags.
      +                          menu_decrease_flag = 0;
  3306  00346A  0E00               	movlw	0
  3307  00346C  6FBC               	movwf	(_menu_flags+5)& (0+255),b
  3308  00346E                     
  3309                           ; BSR set to: 1
  3310                           ;fs_menu_controller.c: 453:              KP -= 0.1;
  3311  00346E  C1DF  F045         	movff	_KP@fs_speed_controller$F1640,___flsub@b
  3312  003472  C1E0  F046         	movff	_KP@fs_speed_controller$F1640+1,___flsub@b+1
  3313  003476  C1E1  F047         	movff	_KP@fs_speed_controller$F1640+2,___flsub@b+2
  3314  00347A  C1E2  F048         	movff	_KP@fs_speed_controller$F1640+3,___flsub@b+3
  3315  00347E  0ECD               	movlw	205
  3316  003480  6E49               	movwf	___flsub@a^0,c
  3317  003482  0ECC               	movlw	204
  3318  003484  6E4A               	movwf	(___flsub@a+1)^0,c
  3319  003486  0ECC               	movlw	204
  3320  003488  6E4B               	movwf	(___flsub@a+2)^0,c
  3321  00348A  0E3D               	movlw	61
  3322  00348C  6E4C               	movwf	(___flsub@a+3)^0,c
  3323  00348E  EC9C  F02C         	call	___flsub	;wreg free
  3324  003492  C045  F1DF         	movff	?___flsub,_KP@fs_speed_controller$F1640
  3325  003496  C046  F1E0         	movff	?___flsub+1,_KP@fs_speed_controller$F1640+1
  3326  00349A  C047  F1E1         	movff	?___flsub+2,_KP@fs_speed_controller$F1640+2
  3327  00349E  C048  F1E2         	movff	?___flsub+3,_KP@fs_speed_controller$F1640+3
  3328  0034A2                     l6083:
  3329                           
  3330                           ;fs_menu_controller.c: 457:     if (secretMenuCounter == 2)
  3331  0034A2  0E02               	movlw	2
  3332  0034A4  0100               	movlb	0	; () banked
  3333  0034A6  19FB               	xorwf	_secretMenuCounter& (0+255),w,b
  3334  0034A8  A4D8               	btfss	status,2,c
  3335  0034AA  EF59  F01A         	goto	u7491
  3336  0034AE  EF5B  F01A         	goto	u7490
  3337  0034B2                     u7491:
  3338  0034B2  EFEF  F01A         	goto	l6111
  3339  0034B6                     u7490:
  3340  0034B6                     
  3341                           ; BSR set to: 0
  3342                           ;fs_menu_controller.c: 458:     {;fs_menu_controller.c: 459:         Lcd_Set_Cursor(1,1)
      +                          ;
  3343  0034B6  0E01               	movlw	1
  3344  0034B8  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3345  0034BA  0E01               	movlw	1
  3346  0034BC  EC62  F02B         	call	_Lcd_Set_Cursor
  3347  0034C0                     
  3348                           ;fs_menu_controller.c: 460:         Lcd_Write_String("PID PARAM       ");
  3349  0034C0  0E13               	movlw	low STR_7
  3350  0034C2  6E05               	movwf	Lcd_Write_String@a^0,c
  3351  0034C4  0E06               	movlw	high STR_7
  3352  0034C6  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3353  0034C8  EC04  F02A         	call	_Lcd_Write_String	;wreg free
  3354  0034CC                     
  3355                           ;fs_menu_controller.c: 461:         Lcd_Set_Cursor(2,1);
  3356  0034CC  0E01               	movlw	1
  3357  0034CE  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3358  0034D0  0E02               	movlw	2
  3359  0034D2  EC62  F02B         	call	_Lcd_Set_Cursor
  3360  0034D6                     
  3361                           ;fs_menu_controller.c: 462:         sprintf(textCursor2,"Kd:%5.1f    ",KD);
  3362  0034D6  0EE1               	movlw	low secretMenu@textCursor2
  3363  0034D8  0100               	movlb	0	; () banked
  3364  0034DA  6FCF               	movwf	sprintf@s& (0+255),b
  3365  0034DC  0E00               	movlw	high secretMenu@textCursor2
  3366  0034DE  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3367  0034E0  0EC7               	movlw	low STR_10
  3368  0034E2  6FD1               	movwf	sprintf@fmt& (0+255),b
  3369  0034E4  0E06               	movlw	high STR_10
  3370  0034E6  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3371  0034E8  C1DB  F0D3         	movff	_KD@fs_speed_controller$F1641,?_sprintf+4
  3372  0034EC  C1DC  F0D4         	movff	_KD@fs_speed_controller$F1641+1,?_sprintf+5
  3373  0034F0  C1DD  F0D5         	movff	_KD@fs_speed_controller$F1641+2,?_sprintf+6
  3374  0034F4  C1DE  F0D6         	movff	_KD@fs_speed_controller$F1641+3,?_sprintf+7
  3375  0034F8  EC4A  F02C         	call	_sprintf	;wreg free
  3376  0034FC                     
  3377                           ;fs_menu_controller.c: 463:         Lcd_Write_String(textCursor2);
  3378  0034FC  0EE1               	movlw	low secretMenu@textCursor2
  3379  0034FE  6E05               	movwf	Lcd_Write_String@a^0,c
  3380  003500  0E00               	movlw	high secretMenu@textCursor2
  3381  003502  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3382  003504  EC04  F02A         	call	_Lcd_Write_String	;wreg free
  3383  003508                     
  3384                           ;fs_menu_controller.c: 465:         if ((menu_flags.menu_increase_flag == 1) && (KD < 2.
      +                          5))
  3385  003508  0101               	movlb	1	; () banked
  3386  00350A  05BB               	decf	(_menu_flags+4)& (0+255),w,b
  3387  00350C  A4D8               	btfss	status,2,c
  3388  00350E  EF8B  F01A         	goto	u7501
  3389  003512  EF8D  F01A         	goto	u7500
  3390  003516                     u7501:
  3391  003516  EFC3  F01A         	goto	l6103
  3392  00351A                     u7500:
  3393  00351A                     
  3394                           ; BSR set to: 1
  3395  00351A  C1DB  F035         	movff	_KD@fs_speed_controller$F1641,___flge@ff1
  3396  00351E  C1DC  F036         	movff	_KD@fs_speed_controller$F1641+1,___flge@ff1+1
  3397  003522  C1DD  F037         	movff	_KD@fs_speed_controller$F1641+2,___flge@ff1+2
  3398  003526  C1DE  F038         	movff	_KD@fs_speed_controller$F1641+3,___flge@ff1+3
  3399  00352A  0E00               	movlw	0
  3400  00352C  6E39               	movwf	___flge@ff2^0,c
  3401  00352E  0E00               	movlw	0
  3402  003530  6E3A               	movwf	(___flge@ff2+1)^0,c
  3403  003532  0E20               	movlw	32
  3404  003534  6E3B               	movwf	(___flge@ff2+2)^0,c
  3405  003536  0E40               	movlw	64
  3406  003538  6E3C               	movwf	(___flge@ff2+3)^0,c
  3407  00353A  ECFB  F024         	call	___flge	;wreg free
  3408  00353E  B0D8               	btfsc	status,0,c
  3409  003540  EFA4  F01A         	goto	u7511
  3410  003544  EFA6  F01A         	goto	u7510
  3411  003548                     u7511:
  3412  003548  EFC3  F01A         	goto	l6103
  3413  00354C                     u7510:
  3414  00354C                     
  3415                           ;fs_menu_controller.c: 466:         {;fs_menu_controller.c: 467:             menu_flags.
      +                          menu_increase_flag = 0;
  3416  00354C  0E00               	movlw	0
  3417  00354E  0101               	movlb	1	; () banked
  3418  003550  6FBB               	movwf	(_menu_flags+4)& (0+255),b
  3419  003552                     
  3420                           ; BSR set to: 1
  3421                           ;fs_menu_controller.c: 468:             KD += 0.1;
  3422  003552  C1DB  F035         	movff	_KD@fs_speed_controller$F1641,___fladd@b
  3423  003556  C1DC  F036         	movff	_KD@fs_speed_controller$F1641+1,___fladd@b+1
  3424  00355A  C1DD  F037         	movff	_KD@fs_speed_controller$F1641+2,___fladd@b+2
  3425  00355E  C1DE  F038         	movff	_KD@fs_speed_controller$F1641+3,___fladd@b+3
  3426  003562  0ECD               	movlw	205
  3427  003564  6E39               	movwf	___fladd@a^0,c
  3428  003566  0ECC               	movlw	204
  3429  003568  6E3A               	movwf	(___fladd@a+1)^0,c
  3430  00356A  0ECC               	movlw	204
  3431  00356C  6E3B               	movwf	(___fladd@a+2)^0,c
  3432  00356E  0E3D               	movlw	61
  3433  003570  6E3C               	movwf	(___fladd@a+3)^0,c
  3434  003572  EC6E  F010         	call	___fladd	;wreg free
  3435  003576  C035  F1DB         	movff	?___fladd,_KD@fs_speed_controller$F1641
  3436  00357A  C036  F1DC         	movff	?___fladd+1,_KD@fs_speed_controller$F1641+1
  3437  00357E  C037  F1DD         	movff	?___fladd+2,_KD@fs_speed_controller$F1641+2
  3438  003582  C038  F1DE         	movff	?___fladd+3,_KD@fs_speed_controller$F1641+3
  3439  003586                     l6103:
  3440                           
  3441                           ;fs_menu_controller.c: 471:         if ((menu_flags.menu_decrease_flag == 1) && (KD >= 0
      +                          ))
  3442  003586  0101               	movlb	1	; () banked
  3443  003588  05BC               	decf	(_menu_flags+5)& (0+255),w,b
  3444  00358A  A4D8               	btfss	status,2,c
  3445  00358C  EFCA  F01A         	goto	u7521
  3446  003590  EFCC  F01A         	goto	u7520
  3447  003594                     u7521:
  3448  003594  EFEF  F01A         	goto	l6111
  3449  003598                     u7520:
  3450  003598                     
  3451                           ; BSR set to: 1
  3452  003598  BFDE               	btfsc	(_KD@fs_speed_controller$F1641+3)& (0+255),7,b
  3453  00359A  EFD1  F01A         	goto	u7531
  3454  00359E  EFD3  F01A         	goto	u7530
  3455  0035A2                     u7531:
  3456  0035A2  EFEF  F01A         	goto	l6111
  3457  0035A6                     u7530:
  3458  0035A6                     
  3459                           ; BSR set to: 1
  3460                           ;fs_menu_controller.c: 472:         {;fs_menu_controller.c: 473:             menu_flags.
      +                          menu_decrease_flag = 0;
  3461  0035A6  0E00               	movlw	0
  3462  0035A8  6FBC               	movwf	(_menu_flags+5)& (0+255),b
  3463  0035AA                     
  3464                           ; BSR set to: 1
  3465                           ;fs_menu_controller.c: 474:              KD -= 0.1;
  3466  0035AA  C1DB  F045         	movff	_KD@fs_speed_controller$F1641,___flsub@b
  3467  0035AE  C1DC  F046         	movff	_KD@fs_speed_controller$F1641+1,___flsub@b+1
  3468  0035B2  C1DD  F047         	movff	_KD@fs_speed_controller$F1641+2,___flsub@b+2
  3469  0035B6  C1DE  F048         	movff	_KD@fs_speed_controller$F1641+3,___flsub@b+3
  3470  0035BA  0ECD               	movlw	205
  3471  0035BC  6E49               	movwf	___flsub@a^0,c
  3472  0035BE  0ECC               	movlw	204
  3473  0035C0  6E4A               	movwf	(___flsub@a+1)^0,c
  3474  0035C2  0ECC               	movlw	204
  3475  0035C4  6E4B               	movwf	(___flsub@a+2)^0,c
  3476  0035C6  0E3D               	movlw	61
  3477  0035C8  6E4C               	movwf	(___flsub@a+3)^0,c
  3478  0035CA  EC9C  F02C         	call	___flsub	;wreg free
  3479  0035CE  C045  F1DB         	movff	?___flsub,_KD@fs_speed_controller$F1641
  3480  0035D2  C046  F1DC         	movff	?___flsub+1,_KD@fs_speed_controller$F1641+1
  3481  0035D6  C047  F1DD         	movff	?___flsub+2,_KD@fs_speed_controller$F1641+2
  3482  0035DA  C048  F1DE         	movff	?___flsub+3,_KD@fs_speed_controller$F1641+3
  3483  0035DE                     l6111:
  3484                           
  3485                           ;fs_menu_controller.c: 478:     if ( timer_value.menu_login_delay == 100)
  3486  0035DE  0E64               	movlw	100
  3487  0035E0  0101               	movlb	1	; () banked
  3488  0035E2  19B3               	xorwf	(_timer_value+4)& (0+255),w,b
  3489  0035E4  A4D8               	btfss	status,2,c
  3490  0035E6  EFF7  F01A         	goto	u7541
  3491  0035EA  EFF9  F01A         	goto	u7540
  3492  0035EE                     u7541:
  3493  0035EE  EFFE  F01A         	goto	l410
  3494  0035F2                     u7540:
  3495  0035F2                     
  3496                           ; BSR set to: 1
  3497                           ;fs_menu_controller.c: 479:     {;fs_menu_controller.c: 480:         timer_value.menu_lo
      +                          gin_delay = 0;
  3498  0035F2  0E00               	movlw	0
  3499  0035F4  6FB3               	movwf	(_timer_value+4)& (0+255),b
  3500                           
  3501                           ;fs_menu_controller.c: 481:         menu_selected = PAUSE_MENU;
  3502  0035F6  0E06               	movlw	6
  3503  0035F8  0100               	movlb	0	; () banked
  3504  0035FA  6FFA               	movwf	_menu_selected& (0+255),b
  3505  0035FC                     l410:
  3506  0035FC  0012               	return		;funcret
  3507  0035FE                     __end_of_secretMenu:
  3508                           	callstack 0
  3509                           
  3510 ;; *************** function _pauseMenu *****************
  3511 ;; Defined at:
  3512 ;;		line 351 in file "fs_menu_controller.c"
  3513 ;; Parameters:    Size  Location     Type
  3514 ;;		None
  3515 ;; Auto vars:     Size  Location     Type
  3516 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  3517 ;; Return value:  Size  Location     Type
  3518 ;;                  1    wreg      void 
  3519 ;; Registers used:
  3520 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3521 ;; Tracked objects:
  3522 ;;		On entry : 0/0
  3523 ;;		On exit  : 0/0
  3524 ;;		Unchanged: 0/0
  3525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3526 ;;      Params:         0       0       0       0       0       0       0
  3527 ;;      Locals:         0      16       0       0       0       0       0
  3528 ;;      Temps:          0       0       0       0       0       0       0
  3529 ;;      Totals:         0      16       0       0       0       0       0
  3530 ;;Total ram usage:       16 bytes
  3531 ;; Hardware stack levels used:    1
  3532 ;; Hardware stack levels required when called:    9
  3533 ;; This function calls:
  3534 ;;		_Lcd_Set_Cursor
  3535 ;;		_Lcd_Write_String
  3536 ;;		_sprintf
  3537 ;;		_stopMotor
  3538 ;; This function is called by:
  3539 ;;		_stateMachine
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542                           
  3543                           	psect	text12
  3544  004366                     __ptext12:
  3545                           	callstack 0
  3546  004366                     _pauseMenu:
  3547                           	callstack 19
  3548  004366                     
  3549                           ;fs_menu_controller.c: 353:     char textCursor2[16] = {0};
  3550  004366  EE20  F0E1         	lfsr	2,pauseMenu@textCursor2
  3551  00436A  0E0F               	movlw	15
  3552  00436C                     u7321:
  3553  00436C  6ADE               	clrf	postinc2,c
  3554  00436E  06E8               	decf	wreg,f,c
  3555  004370  E2FD               	bc	u7321
  3556  004372                     
  3557                           ;fs_menu_controller.c: 355:     startIsClick = 0;
  3558  004372  0E00               	movlw	0
  3559  004374  0100               	movlb	0	; () banked
  3560  004376  6FFD               	movwf	_startIsClick& (0+255),b
  3561  004378                     
  3562                           ; BSR set to: 0
  3563                           ;fs_menu_controller.c: 359:     Lcd_Set_Cursor(1,1);
  3564  004378  0E01               	movlw	1
  3565  00437A  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3566  00437C  0E01               	movlw	1
  3567  00437E  EC62  F02B         	call	_Lcd_Set_Cursor
  3568  004382                     
  3569                           ;fs_menu_controller.c: 360:     Lcd_Write_String("HAREKET DURDU   ");
  3570  004382  0E57               	movlw	low STR_5
  3571  004384  6E05               	movwf	Lcd_Write_String@a^0,c
  3572  004386  0E06               	movlw	high STR_5
  3573  004388  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3574  00438A  EC04  F02A         	call	_Lcd_Write_String	;wreg free
  3575  00438E                     
  3576                           ;fs_menu_controller.c: 361:     Lcd_Set_Cursor(2,1);
  3577  00438E  0E01               	movlw	1
  3578  004390  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3579  004392  0E02               	movlw	2
  3580  004394  EC62  F02B         	call	_Lcd_Set_Cursor
  3581  004398                     
  3582                           ;fs_menu_controller.c: 362:     sprintf(textCursor2,"      %d:%d    ",timer_value.remain
      +                          ingMinute,timer_value.remainingSecond);
  3583  004398  0EE1               	movlw	low pauseMenu@textCursor2
  3584  00439A  0100               	movlb	0	; () banked
  3585  00439C  6FCF               	movwf	sprintf@s& (0+255),b
  3586  00439E  0E00               	movlw	high pauseMenu@textCursor2
  3587  0043A0  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3588  0043A2  0E9A               	movlw	low STR_4
  3589  0043A4  6FD1               	movwf	sprintf@fmt& (0+255),b
  3590  0043A6  0E06               	movlw	high STR_4
  3591  0043A8  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3592  0043AA  0101               	movlb	1	; () banked
  3593  0043AC  51B2               	movf	(_timer_value+3)& (0+255),w,b
  3594  0043AE  0100               	movlb	0	; () banked
  3595  0043B0  6FD3               	movwf	(?_sprintf+4)& (0+255),b
  3596  0043B2  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  3597  0043B4  BFD3               	btfsc	(?_sprintf+4)& (0+255),7,b
  3598  0043B6  07D4               	decf	(?_sprintf+5)& (0+255),f,b
  3599  0043B8  C1B1  F0D5         	movff	_timer_value+2,?_sprintf+6
  3600  0043BC  6BD6               	clrf	(?_sprintf+7)& (0+255),b
  3601  0043BE  EC4A  F02C         	call	_sprintf	;wreg free
  3602  0043C2                     
  3603                           ;fs_menu_controller.c: 363:     Lcd_Write_String(textCursor2);
  3604  0043C2  0EE1               	movlw	low pauseMenu@textCursor2
  3605  0043C4  6E05               	movwf	Lcd_Write_String@a^0,c
  3606  0043C6  0E00               	movlw	high pauseMenu@textCursor2
  3607  0043C8  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3608  0043CA  EC04  F02A         	call	_Lcd_Write_String	;wreg free
  3609  0043CE                     
  3610                           ;fs_menu_controller.c: 365:     if (menu_flags.menu_start_flag == 1)
  3611  0043CE  0101               	movlb	1	; () banked
  3612  0043D0  05B8               	decf	(_menu_flags+1)& (0+255),w,b
  3613  0043D2  A4D8               	btfss	status,2,c
  3614  0043D4  EFEE  F021         	goto	u7331
  3615  0043D8  EFF0  F021         	goto	u7330
  3616  0043DC                     u7331:
  3617  0043DC  EFFB  F021         	goto	l389
  3618  0043E0                     u7330:
  3619  0043E0                     
  3620                           ; BSR set to: 1
  3621                           ;fs_menu_controller.c: 366:     {;fs_menu_controller.c: 367:         menu_flags.menu_sta
      +                          rt_flag = 0;
  3622  0043E0  0E00               	movlw	0
  3623  0043E2  6FB8               	movwf	(_menu_flags+1)& (0+255),b
  3624                           
  3625                           ;fs_menu_controller.c: 368:         menu_selected = MAIN_MENU;
  3626  0043E4  0E00               	movlw	0
  3627  0043E6  0100               	movlb	0	; () banked
  3628  0043E8  6FFA               	movwf	_menu_selected& (0+255),b
  3629                           
  3630                           ;fs_menu_controller.c: 370:         startIsClick = 1;
  3631  0043EA  0E01               	movlw	1
  3632  0043EC  6FFD               	movwf	_startIsClick& (0+255),b
  3633                           
  3634                           ;fs_menu_controller.c: 371:         pauseIsClick = 0;
  3635  0043EE  0E00               	movlw	0
  3636  0043F0  6FFE               	movwf	_pauseIsClick& (0+255),b
  3637                           
  3638                           ;fs_menu_controller.c: 372:         stopIsClick = 0;
  3639  0043F2  0E00               	movlw	0
  3640  0043F4  6FFC               	movwf	_stopIsClick& (0+255),b
  3641  0043F6                     l389:
  3642                           
  3643                           ;fs_menu_controller.c: 375:     if ( (startIsClick == 0) && (pauseIsClick == 0) && (stop
      +                          IsClick == 1) && (menu_selected == PAUSE_MENU))
  3644  0043F6  0100               	movlb	0	; () banked
  3645  0043F8  51FD               	movf	_startIsClick& (0+255),w,b
  3646  0043FA  A4D8               	btfss	status,2,c
  3647  0043FC  EF02  F022         	goto	u7341
  3648  004400  EF04  F022         	goto	u7340
  3649  004404                     u7341:
  3650  004404  EF26  F022         	goto	l6029
  3651  004408                     u7340:
  3652  004408                     
  3653                           ; BSR set to: 0
  3654  004408  51FE               	movf	_pauseIsClick& (0+255),w,b
  3655  00440A  A4D8               	btfss	status,2,c
  3656  00440C  EF0A  F022         	goto	u7351
  3657  004410  EF0C  F022         	goto	u7350
  3658  004414                     u7351:
  3659  004414  EF26  F022         	goto	l6029
  3660  004418                     u7350:
  3661  004418                     
  3662                           ; BSR set to: 0
  3663  004418  05FC               	decf	_stopIsClick& (0+255),w,b
  3664  00441A  A4D8               	btfss	status,2,c
  3665  00441C  EF12  F022         	goto	u7361
  3666  004420  EF14  F022         	goto	u7360
  3667  004424                     u7361:
  3668  004424  EF26  F022         	goto	l6029
  3669  004428                     u7360:
  3670  004428                     
  3671                           ; BSR set to: 0
  3672  004428  0E06               	movlw	6
  3673  00442A  19FA               	xorwf	_menu_selected& (0+255),w,b
  3674  00442C  A4D8               	btfss	status,2,c
  3675  00442E  EF1B  F022         	goto	u7371
  3676  004432  EF1D  F022         	goto	u7370
  3677  004436                     u7371:
  3678  004436  EF26  F022         	goto	l6029
  3679  00443A                     u7370:
  3680  00443A                     
  3681                           ; BSR set to: 0
  3682                           ;fs_menu_controller.c: 376:     {;fs_menu_controller.c: 377:          timer_value.remain
      +                          ingMinute = menu_value.driver_time;
  3683  00443A  C0F3  F1B2         	movff	_menu_value,_timer_value+3
  3684  00443E                     
  3685                           ; BSR set to: 0
  3686                           ;fs_menu_controller.c: 378:          timer_value.remainingSecond = 0;
  3687  00443E  0E00               	movlw	0
  3688  004440  0101               	movlb	1	; () banked
  3689  004442  6FB1               	movwf	(_timer_value+2)& (0+255),b
  3690                           
  3691                           ;fs_menu_controller.c: 379:          timer_value.second = 0;
  3692  004444  0E00               	movlw	0
  3693  004446  6FAF               	movwf	_timer_value& (0+255),b
  3694                           
  3695                           ;fs_menu_controller.c: 380:          timer_value.minute = 0;
  3696  004448  0E00               	movlw	0
  3697  00444A  6FB0               	movwf	(_timer_value+1)& (0+255),b
  3698  00444C                     l6029:
  3699                           
  3700                           ;fs_menu_controller.c: 383:     if ( timer_value.menu_login_delay == 100)
  3701  00444C  0E64               	movlw	100
  3702  00444E  0101               	movlb	1	; () banked
  3703  004450  19B3               	xorwf	(_timer_value+4)& (0+255),w,b
  3704  004452  A4D8               	btfss	status,2,c
  3705  004454  EF2E  F022         	goto	u7381
  3706  004458  EF30  F022         	goto	u7380
  3707  00445C                     u7381:
  3708  00445C  EF35  F022         	goto	l6033
  3709  004460                     u7380:
  3710  004460                     
  3711                           ; BSR set to: 1
  3712                           ;fs_menu_controller.c: 384:     {;fs_menu_controller.c: 385:         timer_value.menu_lo
      +                          gin_delay = 0;
  3713  004460  0E00               	movlw	0
  3714  004462  6FB3               	movwf	(_timer_value+4)& (0+255),b
  3715                           
  3716                           ;fs_menu_controller.c: 386:         menu_selected = DRIVER_TIME_SETTING;
  3717  004464  0E01               	movlw	1
  3718  004466  0100               	movlb	0	; () banked
  3719  004468  6FFA               	movwf	_menu_selected& (0+255),b
  3720  00446A                     l6033:
  3721                           
  3722                           ;fs_menu_controller.c: 389:     if ((menu_flags.menu_increase_flag == 1) && (menu_flags.
      +                          menu_decrease_flag == 1))
  3723  00446A  0101               	movlb	1	; () banked
  3724  00446C  05BB               	decf	(_menu_flags+4)& (0+255),w,b
  3725  00446E  A4D8               	btfss	status,2,c
  3726  004470  EF3C  F022         	goto	u7391
  3727  004474  EF3E  F022         	goto	u7390
  3728  004478                     u7391:
  3729  004478  EF4B  F022         	goto	l6039
  3730  00447C                     u7390:
  3731  00447C                     
  3732                           ; BSR set to: 1
  3733  00447C  05BC               	decf	(_menu_flags+5)& (0+255),w,b
  3734  00447E  A4D8               	btfss	status,2,c
  3735  004480  EF44  F022         	goto	u7401
  3736  004484  EF46  F022         	goto	u7400
  3737  004488                     u7401:
  3738  004488  EF4B  F022         	goto	l6039
  3739  00448C                     u7400:
  3740  00448C                     
  3741                           ; BSR set to: 1
  3742                           ;fs_menu_controller.c: 390:     {;fs_menu_controller.c: 391:         menu_selected = SEC
      +                          RET_MENU;
  3743  00448C  0E08               	movlw	8
  3744  00448E  0100               	movlb	0	; () banked
  3745  004490  6FFA               	movwf	_menu_selected& (0+255),b
  3746                           
  3747                           ;fs_menu_controller.c: 392:         secretMenuCounter = 1;
  3748  004492  0E01               	movlw	1
  3749  004494  6FFB               	movwf	_secretMenuCounter& (0+255),b
  3750  004496                     l6039:
  3751                           
  3752                           ;fs_menu_controller.c: 394:     stopMotor();
  3753  004496  EC41  F02D         	call	_stopMotor	;wreg free
  3754  00449A  0012               	return		;funcret
  3755  00449C                     __end_of_pauseMenu:
  3756                           	callstack 0
  3757                           
  3758 ;; *************** function _mainMenu *****************
  3759 ;; Defined at:
  3760 ;;		line 248 in file "fs_menu_controller.c"
  3761 ;; Parameters:    Size  Location     Type
  3762 ;;		None
  3763 ;; Auto vars:     Size  Location     Type
  3764 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  3765 ;; Return value:  Size  Location     Type
  3766 ;;                  1    wreg      void 
  3767 ;; Registers used:
  3768 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3769 ;; Tracked objects:
  3770 ;;		On entry : 0/0
  3771 ;;		On exit  : 0/0
  3772 ;;		Unchanged: 0/0
  3773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3774 ;;      Params:         0       0       0       0       0       0       0
  3775 ;;      Locals:         0      16       0       0       0       0       0
  3776 ;;      Temps:          0       0       0       0       0       0       0
  3777 ;;      Totals:         0      16       0       0       0       0       0
  3778 ;;Total ram usage:       16 bytes
  3779 ;; Hardware stack levels used:    1
  3780 ;; Hardware stack levels required when called:    9
  3781 ;; This function calls:
  3782 ;;		_Lcd_Set_Cursor
  3783 ;;		_Lcd_Write_String
  3784 ;;		_sprintf
  3785 ;;		_startMotor
  3786 ;; This function is called by:
  3787 ;;		_stateMachine
  3788 ;; This function uses a non-reentrant model
  3789 ;;
  3790                           
  3791                           	psect	text13
  3792  003D52                     __ptext13:
  3793                           	callstack 0
  3794  003D52                     _mainMenu:
  3795                           	callstack 19
  3796  003D52                     
  3797                           ;fs_menu_controller.c: 250:     char textCursor2[16] = {0};
  3798  003D52  EE20  F0E1         	lfsr	2,mainMenu@textCursor2
  3799  003D56  0E0F               	movlw	15
  3800  003D58                     u6931:
  3801  003D58  6ADE               	clrf	postinc2,c
  3802  003D5A  06E8               	decf	wreg,f,c
  3803  003D5C  E2FD               	bc	u6931
  3804  003D5E                     
  3805                           ;fs_menu_controller.c: 252:     Lcd_Set_Cursor(1,1);
  3806  003D5E  0E01               	movlw	1
  3807  003D60  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3808  003D62  0E01               	movlw	1
  3809  003D64  EC62  F02B         	call	_Lcd_Set_Cursor
  3810  003D68                     
  3811                           ;fs_menu_controller.c: 253:     Lcd_Write_String("KALAN ZAMAN     ");
  3812  003D68  0E35               	movlw	low STR_1
  3813  003D6A  6E05               	movwf	Lcd_Write_String@a^0,c
  3814  003D6C  0E06               	movlw	high STR_1
  3815  003D6E  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3816  003D70  EC04  F02A         	call	_Lcd_Write_String	;wreg free
  3817  003D74                     
  3818                           ;fs_menu_controller.c: 254:     Lcd_Set_Cursor(2,1);
  3819  003D74  0E01               	movlw	1
  3820  003D76  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3821  003D78  0E02               	movlw	2
  3822  003D7A  EC62  F02B         	call	_Lcd_Set_Cursor
  3823  003D7E                     
  3824                           ;fs_menu_controller.c: 255:     sprintf(textCursor2,"      %d:%d   ",timer_value.remaini
      +                          ngMinute,timer_value.remainingSecond);
  3825  003D7E  0EE1               	movlw	low mainMenu@textCursor2
  3826  003D80  0100               	movlb	0	; () banked
  3827  003D82  6FCF               	movwf	sprintf@s& (0+255),b
  3828  003D84  0E00               	movlw	high mainMenu@textCursor2
  3829  003D86  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3830  003D88  0EAA               	movlw	low STR_2
  3831  003D8A  6FD1               	movwf	sprintf@fmt& (0+255),b
  3832  003D8C  0E06               	movlw	high STR_2
  3833  003D8E  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3834  003D90  0101               	movlb	1	; () banked
  3835  003D92  51B2               	movf	(_timer_value+3)& (0+255),w,b
  3836  003D94  0100               	movlb	0	; () banked
  3837  003D96  6FD3               	movwf	(?_sprintf+4)& (0+255),b
  3838  003D98  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  3839  003D9A  BFD3               	btfsc	(?_sprintf+4)& (0+255),7,b
  3840  003D9C  07D4               	decf	(?_sprintf+5)& (0+255),f,b
  3841  003D9E  C1B1  F0D5         	movff	_timer_value+2,?_sprintf+6
  3842  003DA2  6BD6               	clrf	(?_sprintf+7)& (0+255),b
  3843  003DA4  EC4A  F02C         	call	_sprintf	;wreg free
  3844  003DA8                     
  3845                           ;fs_menu_controller.c: 256:     Lcd_Write_String(textCursor2);
  3846  003DA8  0EE1               	movlw	low mainMenu@textCursor2
  3847  003DAA  6E05               	movwf	Lcd_Write_String@a^0,c
  3848  003DAC  0E00               	movlw	high mainMenu@textCursor2
  3849  003DAE  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3850  003DB0  EC04  F02A         	call	_Lcd_Write_String	;wreg free
  3851  003DB4                     
  3852                           ;fs_menu_controller.c: 258:     if ( timer_value.menu_login_delay == 100)
  3853  003DB4  0E64               	movlw	100
  3854  003DB6  0101               	movlb	1	; () banked
  3855  003DB8  19B3               	xorwf	(_timer_value+4)& (0+255),w,b
  3856  003DBA  A4D8               	btfss	status,2,c
  3857  003DBC  EFE2  F01E         	goto	u6941
  3858  003DC0  EFE4  F01E         	goto	u6940
  3859  003DC4                     u6941:
  3860  003DC4  EFE9  F01E         	goto	l5775
  3861  003DC8                     u6940:
  3862  003DC8                     
  3863                           ; BSR set to: 1
  3864                           ;fs_menu_controller.c: 259:     {;fs_menu_controller.c: 260:         timer_value.menu_lo
      +                          gin_delay = 0;
  3865  003DC8  0E00               	movlw	0
  3866  003DCA  6FB3               	movwf	(_timer_value+4)& (0+255),b
  3867                           
  3868                           ;fs_menu_controller.c: 261:         menu_selected = DRIVER_TIME_SETTING;
  3869  003DCC  0E01               	movlw	1
  3870  003DCE  0100               	movlb	0	; () banked
  3871  003DD0  6FFA               	movwf	_menu_selected& (0+255),b
  3872  003DD2                     l5775:
  3873                           
  3874                           ;fs_menu_controller.c: 264:     if ((timer_value.remainingMinute <= 0) && (timer_value.r
      +                          emainingSecond == 0) )
  3875  003DD2  0101               	movlb	1	; () banked
  3876  003DD4  51B2               	movf	(_timer_value+3)& (0+255),w,b
  3877  003DD6  0A80               	xorlw	128
  3878  003DD8  0F7F               	addlw	-129
  3879  003DDA  B0D8               	btfsc	status,0,c
  3880  003DDC  EFF2  F01E         	goto	u6951
  3881  003DE0  EFF4  F01E         	goto	u6950
  3882  003DE4                     u6951:
  3883  003DE4  EF02  F01F         	goto	l373
  3884  003DE8                     u6950:
  3885  003DE8                     
  3886                           ; BSR set to: 1
  3887  003DE8  51B1               	movf	(_timer_value+2)& (0+255),w,b
  3888  003DEA  A4D8               	btfss	status,2,c
  3889  003DEC  EFFA  F01E         	goto	u6961
  3890  003DF0  EFFC  F01E         	goto	u6960
  3891  003DF4                     u6961:
  3892  003DF4  EF02  F01F         	goto	l373
  3893  003DF8                     u6960:
  3894  003DF8                     
  3895                           ; BSR set to: 1
  3896                           ;fs_menu_controller.c: 265:     {;fs_menu_controller.c: 266:             menu_selected =
      +                           STOP_MENU;
  3897  003DF8  0E04               	movlw	4
  3898  003DFA  0100               	movlb	0	; () banked
  3899  003DFC  6FFA               	movwf	_menu_selected& (0+255),b
  3900                           
  3901                           ;fs_menu_controller.c: 267:             timer_value.minute = 0;
  3902  003DFE  0E00               	movlw	0
  3903  003E00  0101               	movlb	1	; () banked
  3904  003E02  6FB0               	movwf	(_timer_value+1)& (0+255),b
  3905  003E04                     l373:
  3906                           
  3907                           ; BSR set to: 1
  3908                           ;fs_menu_controller.c: 270:     if ( (startIsClick == 0) && (pauseIsClick == 1) && (stop
      +                          IsClick == 0) && (menu_selected == MAIN_MENU))
  3909  003E04  0100               	movlb	0	; () banked
  3910  003E06  51FD               	movf	_startIsClick& (0+255),w,b
  3911  003E08  A4D8               	btfss	status,2,c
  3912  003E0A  EF09  F01F         	goto	u6971
  3913  003E0E  EF0B  F01F         	goto	u6970
  3914  003E12                     u6971:
  3915  003E12  EF2A  F01F         	goto	l374
  3916  003E16                     u6970:
  3917  003E16                     
  3918                           ; BSR set to: 0
  3919  003E16  05FE               	decf	_pauseIsClick& (0+255),w,b
  3920  003E18  A4D8               	btfss	status,2,c
  3921  003E1A  EF11  F01F         	goto	u6981
  3922  003E1E  EF13  F01F         	goto	u6980
  3923  003E22                     u6981:
  3924  003E22  EF2A  F01F         	goto	l374
  3925  003E26                     u6980:
  3926  003E26                     
  3927                           ; BSR set to: 0
  3928  003E26  51FC               	movf	_stopIsClick& (0+255),w,b
  3929  003E28  A4D8               	btfss	status,2,c
  3930  003E2A  EF19  F01F         	goto	u6991
  3931  003E2E  EF1B  F01F         	goto	u6990
  3932  003E32                     u6991:
  3933  003E32  EF2A  F01F         	goto	l374
  3934  003E36                     u6990:
  3935  003E36                     
  3936                           ; BSR set to: 0
  3937  003E36  51FA               	movf	_menu_selected& (0+255),w,b
  3938  003E38  A4D8               	btfss	status,2,c
  3939  003E3A  EF21  F01F         	goto	u7001
  3940  003E3E  EF23  F01F         	goto	u7000
  3941  003E42                     u7001:
  3942  003E42  EF2A  F01F         	goto	l374
  3943  003E46                     u7000:
  3944  003E46                     
  3945                           ; BSR set to: 0
  3946                           ;fs_menu_controller.c: 271:     {;fs_menu_controller.c: 272:         menu_selected = PAU
      +                          SE_MENU;
  3947  003E46  0E06               	movlw	6
  3948  003E48  6FFA               	movwf	_menu_selected& (0+255),b
  3949  003E4A                     
  3950                           ; BSR set to: 0
  3951                           ;fs_menu_controller.c: 273:         LATDbits.LATD5 = 0;
  3952  003E4A  9A8C               	bcf	140,5,c	;volatile
  3953  003E4C                     
  3954                           ; BSR set to: 0
  3955                           ;fs_menu_controller.c: 274:         LATCbits.LATC5 = 0;
  3956  003E4C  9A8B               	bcf	139,5,c	;volatile
  3957  003E4E                     
  3958                           ; BSR set to: 0
  3959                           ;fs_menu_controller.c: 275:         LATCbits.LATC4 = 0;
  3960  003E4E  988B               	bcf	139,4,c	;volatile
  3961                           
  3962                           ;fs_menu_controller.c: 276:         startIsClick = 0;
  3963  003E50  0E00               	movlw	0
  3964  003E52  6FFD               	movwf	_startIsClick& (0+255),b
  3965  003E54                     l374:
  3966                           
  3967                           ; BSR set to: 0
  3968                           ;fs_menu_controller.c: 279:     if ( (startIsClick == 0) && (pauseIsClick == 0) && (stop
      +                          IsClick == 1) && (menu_selected == MAIN_MENU) )
  3969  003E54  51FD               	movf	_startIsClick& (0+255),w,b
  3970  003E56  A4D8               	btfss	status,2,c
  3971  003E58  EF30  F01F         	goto	u7011
  3972  003E5C  EF32  F01F         	goto	u7010
  3973  003E60                     u7011:
  3974  003E60  EF56  F01F         	goto	l5811
  3975  003E64                     u7010:
  3976  003E64                     
  3977                           ; BSR set to: 0
  3978  003E64  51FE               	movf	_pauseIsClick& (0+255),w,b
  3979  003E66  A4D8               	btfss	status,2,c
  3980  003E68  EF38  F01F         	goto	u7021
  3981  003E6C  EF3A  F01F         	goto	u7020
  3982  003E70                     u7021:
  3983  003E70  EF56  F01F         	goto	l5811
  3984  003E74                     u7020:
  3985  003E74                     
  3986                           ; BSR set to: 0
  3987  003E74  05FC               	decf	_stopIsClick& (0+255),w,b
  3988  003E76  A4D8               	btfss	status,2,c
  3989  003E78  EF40  F01F         	goto	u7031
  3990  003E7C  EF42  F01F         	goto	u7030
  3991  003E80                     u7031:
  3992  003E80  EF56  F01F         	goto	l5811
  3993  003E84                     u7030:
  3994  003E84                     
  3995                           ; BSR set to: 0
  3996  003E84  51FA               	movf	_menu_selected& (0+255),w,b
  3997  003E86  A4D8               	btfss	status,2,c
  3998  003E88  EF48  F01F         	goto	u7041
  3999  003E8C  EF4A  F01F         	goto	u7040
  4000  003E90                     u7041:
  4001  003E90  EF56  F01F         	goto	l5811
  4002  003E94                     u7040:
  4003  003E94                     
  4004                           ; BSR set to: 0
  4005                           ;fs_menu_controller.c: 280:     {;fs_menu_controller.c: 281:          timer_value.remain
      +                          ingMinute = menu_value.driver_time;
  4006  003E94  C0F3  F1B2         	movff	_menu_value,_timer_value+3
  4007  003E98                     
  4008                           ; BSR set to: 0
  4009                           ;fs_menu_controller.c: 282:          timer_value.remainingSecond = 0;
  4010  003E98  0E00               	movlw	0
  4011  003E9A  0101               	movlb	1	; () banked
  4012  003E9C  6FB1               	movwf	(_timer_value+2)& (0+255),b
  4013                           
  4014                           ;fs_menu_controller.c: 283:          timer_value.second = 0;
  4015  003E9E  0E00               	movlw	0
  4016  003EA0  6FAF               	movwf	_timer_value& (0+255),b
  4017                           
  4018                           ;fs_menu_controller.c: 284:          timer_value.minute = 0;
  4019  003EA2  0E00               	movlw	0
  4020  003EA4  6FB0               	movwf	(_timer_value+1)& (0+255),b
  4021  003EA6                     
  4022                           ; BSR set to: 1
  4023                           ;fs_menu_controller.c: 285:          LATDbits.LATD5 = 0;
  4024  003EA6  9A8C               	bcf	140,5,c	;volatile
  4025  003EA8                     
  4026                           ; BSR set to: 1
  4027                           ;fs_menu_controller.c: 286:          LATCbits.LATC5 = 0;
  4028  003EA8  9A8B               	bcf	139,5,c	;volatile
  4029  003EAA                     
  4030                           ; BSR set to: 1
  4031                           ;fs_menu_controller.c: 287:          LATCbits.LATC4 = 0;
  4032  003EAA  988B               	bcf	139,4,c	;volatile
  4033  003EAC                     l5811:
  4034                           
  4035                           ;fs_menu_controller.c: 290:     if ( (startIsClick == 1) && (pauseIsClick == 0) && (stop
      +                          IsClick == 0) )
  4036  003EAC  0100               	movlb	0	; () banked
  4037  003EAE  05FD               	decf	_startIsClick& (0+255),w,b
  4038  003EB0  A4D8               	btfss	status,2,c
  4039  003EB2  EF5D  F01F         	goto	u7051
  4040  003EB6  EF5F  F01F         	goto	u7050
  4041  003EBA                     u7051:
  4042  003EBA  EF74  F01F         	goto	l377
  4043  003EBE                     u7050:
  4044  003EBE                     
  4045                           ; BSR set to: 0
  4046  003EBE  51FE               	movf	_pauseIsClick& (0+255),w,b
  4047  003EC0  A4D8               	btfss	status,2,c
  4048  003EC2  EF65  F01F         	goto	u7061
  4049  003EC6  EF67  F01F         	goto	u7060
  4050  003ECA                     u7061:
  4051  003ECA  EF74  F01F         	goto	l377
  4052  003ECE                     u7060:
  4053  003ECE                     
  4054                           ; BSR set to: 0
  4055  003ECE  51FC               	movf	_stopIsClick& (0+255),w,b
  4056  003ED0  A4D8               	btfss	status,2,c
  4057  003ED2  EF6D  F01F         	goto	u7071
  4058  003ED6  EF6F  F01F         	goto	u7070
  4059  003EDA                     u7071:
  4060  003EDA  EF74  F01F         	goto	l377
  4061  003EDE                     u7070:
  4062  003EDE                     
  4063                           ; BSR set to: 0
  4064                           ;fs_menu_controller.c: 291:     {;fs_menu_controller.c: 292:         startMotor();
  4065  003EDE  ECCF  F02D         	call	_startMotor	;wreg free
  4066  003EE2                     
  4067                           ;fs_menu_controller.c: 293:         LATDbits.LATD5 = 1;
  4068  003EE2  8A8C               	bsf	140,5,c	;volatile
  4069  003EE4                     
  4070                           ;fs_menu_controller.c: 294:         LATCbits.LATC5 = 1;
  4071  003EE4  8A8B               	bsf	139,5,c	;volatile
  4072  003EE6                     
  4073                           ;fs_menu_controller.c: 295:         LATCbits.LATC4 = 1;
  4074  003EE6  888B               	bsf	139,4,c	;volatile
  4075  003EE8                     l377:
  4076  003EE8  0012               	return		;funcret
  4077  003EEA                     __end_of_mainMenu:
  4078                           	callstack 0
  4079                           
  4080 ;; *************** function _startMotor *****************
  4081 ;; Defined at:
  4082 ;;		line 95 in file "fs_speed_controller.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;		None
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;		None
  4087 ;; Return value:  Size  Location     Type
  4088 ;;                  1    wreg      void 
  4089 ;; Registers used:
  4090 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4091 ;; Tracked objects:
  4092 ;;		On entry : 0/0
  4093 ;;		On exit  : 0/0
  4094 ;;		Unchanged: 0/0
  4095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4096 ;;      Params:         0       0       0       0       0       0       0
  4097 ;;      Locals:         0       0       0       0       0       0       0
  4098 ;;      Temps:          0       0       0       0       0       0       0
  4099 ;;      Totals:         0       0       0       0       0       0       0
  4100 ;;Total ram usage:        0 bytes
  4101 ;; Hardware stack levels used:    1
  4102 ;; Hardware stack levels required when called:    3
  4103 ;; This function calls:
  4104 ;;		_PWM1_setDC
  4105 ;;		_PWM2_setDC
  4106 ;;		_calculatedAverageValue
  4107 ;;		_scanAdcConversion
  4108 ;;		_speedControl
  4109 ;; This function is called by:
  4110 ;;		_mainMenu
  4111 ;; This function uses a non-reentrant model
  4112 ;;
  4113                           
  4114                           	psect	text14
  4115  005B9E                     __ptext14:
  4116                           	callstack 0
  4117  005B9E                     _startMotor:
  4118                           	callstack 24
  4119  005B9E                     
  4120                           ;fs_speed_controller.c: 97:         scanAdcConversion();
  4121  005B9E  EC4C  F009         	call	_scanAdcConversion	;wreg free
  4122  005BA2                     
  4123                           ;fs_speed_controller.c: 98:         calculatedAverageValue();
  4124  005BA2  ECB0  F016         	call	_calculatedAverageValue	;wreg free
  4125  005BA6                     
  4126                           ;fs_speed_controller.c: 99:         speedControl(driver_limit.ortalama);
  4127  005BA6  C1AB  F058         	movff	_driver_limit+8,speedControl@position
  4128  005BAA  C1AC  F059         	movff	_driver_limit+9,speedControl@position+1
  4129  005BAE  C1AD  F05A         	movff	_driver_limit+10,speedControl@position+2
  4130  005BB2  C1AE  F05B         	movff	_driver_limit+11,speedControl@position+3
  4131  005BB6  ECF0  F01C         	call	_speedControl	;wreg free
  4132                           
  4133                           ;fs_speed_controller.c: 100:         PWM1_setDC(controller.leftMotorSpeed);
  4134  005BBA  C156  F058         	movff	_controller+6,PWM1_setDC@dutycycle
  4135  005BBE  C157  F059         	movff	_controller+7,PWM1_setDC@dutycycle+1
  4136  005BC2  EC80  F02A         	call	_PWM1_setDC	;wreg free
  4137                           
  4138                           ;fs_speed_controller.c: 101:         PWM2_setDC(controller.rightMotorSpeed);
  4139  005BC6  C158  F058         	movff	_controller+8,PWM2_setDC@dutycycle
  4140  005BCA  C159  F059         	movff	_controller+9,PWM2_setDC@dutycycle+1
  4141  005BCE  EC43  F02A         	call	_PWM2_setDC	;wreg free
  4142  005BD2  0012               	return		;funcret
  4143  005BD4                     __end_of_startMotor:
  4144                           	callstack 0
  4145                           
  4146 ;; *************** function _speedControl *****************
  4147 ;; Defined at:
  4148 ;;		line 38 in file "fs_speed_controller.c"
  4149 ;; Parameters:    Size  Location     Type
  4150 ;;  position        4   87[COMRAM] float 
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;  pos             4    0        float 
  4153 ;; Return value:  Size  Location     Type
  4154 ;;                  1    wreg      void 
  4155 ;; Registers used:
  4156 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4157 ;; Tracked objects:
  4158 ;;		On entry : 0/0
  4159 ;;		On exit  : 0/0
  4160 ;;		Unchanged: 0/0
  4161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4162 ;;      Params:         4       0       0       0       0       0       0
  4163 ;;      Locals:         0       4       0       0       0       0       0
  4164 ;;      Temps:          2       0       0       0       0       0       0
  4165 ;;      Totals:         6       4       0       0       0       0       0
  4166 ;;Total ram usage:       10 bytes
  4167 ;; Hardware stack levels used:    1
  4168 ;; Hardware stack levels required when called:    2
  4169 ;; This function calls:
  4170 ;;		___fladd
  4171 ;;		___flmul
  4172 ;;		___fltol
  4173 ;;		___xxtofl
  4174 ;; This function is called by:
  4175 ;;		_startMotor
  4176 ;; This function uses a non-reentrant model
  4177 ;;
  4178                           
  4179                           	psect	text15
  4180  0039E0                     __ptext15:
  4181                           	callstack 0
  4182  0039E0                     _speedControl:
  4183                           	callstack 24
  4184  0039E0                     
  4185                           ;fs_speed_controller.c: 44:     controller.error = (int16_t)(position - 3400.0);
  4186  0039E0  0E00               	movlw	0
  4187  0039E2  6E39               	movwf	___fladd@a^0,c
  4188  0039E4  0E80               	movlw	128
  4189  0039E6  6E3A               	movwf	(___fladd@a+1)^0,c
  4190  0039E8  0E54               	movlw	84
  4191  0039EA  6E3B               	movwf	(___fladd@a+2)^0,c
  4192  0039EC  0EC5               	movlw	197
  4193  0039EE  6E3C               	movwf	(___fladd@a+3)^0,c
  4194  0039F0  C058  F035         	movff	speedControl@position,___fladd@b
  4195  0039F4  C059  F036         	movff	speedControl@position+1,___fladd@b+1
  4196  0039F8  C05A  F037         	movff	speedControl@position+2,___fladd@b+2
  4197  0039FC  C05B  F038         	movff	speedControl@position+3,___fladd@b+3
  4198  003A00  EC6E  F010         	call	___fladd	;wreg free
  4199  003A04  C035  F04E         	movff	?___fladd,___fltol@f1
  4200  003A08  C036  F04F         	movff	?___fladd+1,___fltol@f1+1
  4201  003A0C  C037  F050         	movff	?___fladd+2,___fltol@f1+2
  4202  003A10  C038  F051         	movff	?___fladd+3,___fltol@f1+3
  4203  003A14  ECF6  F023         	call	___fltol	;wreg free
  4204  003A18  C04E  F150         	movff	?___fltol,_controller
  4205  003A1C  C04F  F151         	movff	?___fltol+1,_controller+1
  4206  003A20  0E00               	movlw	0
  4207  003A22  6E20               	movwf	___flmul@a^0,c
  4208  003A24  0E00               	movlw	0
  4209  003A26  6E21               	movwf	(___flmul@a+1)^0,c
  4210  003A28  0E80               	movlw	128
  4211  003A2A  6E22               	movwf	(___flmul@a+2)^0,c
  4212  003A2C  0E3F               	movlw	63
  4213  003A2E  6E23               	movwf	(___flmul@a+3)^0,c
  4214  003A30  0101               	movlb	1	; () banked
  4215  003A32  5152               	movf	(_controller+2)& (0+255),w,b
  4216  003A34  5D50               	subwf	_controller& (0+255),w,b
  4217  003A36  6E5C               	movwf	??_speedControl^0,c
  4218  003A38  5153               	movf	(_controller+3)& (0+255),w,b
  4219  003A3A  5951               	subwfb	(_controller+1)& (0+255),w,b
  4220  003A3C  6E5D               	movwf	(??_speedControl+1)^0,c
  4221  003A3E  C05C  F00E         	movff	??_speedControl,___xxtofl@val
  4222  003A42  C05D  F00F         	movff	??_speedControl+1,___xxtofl@val+1
  4223  003A46  0E00               	movlw	0
  4224  003A48  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  4225  003A4A  0EFF               	movlw	-1
  4226  003A4C  6E10               	movwf	(___xxtofl@val+2)^0,c
  4227  003A4E  6E11               	movwf	(___xxtofl@val+3)^0,c
  4228  003A50  0E01               	movlw	1
  4229  003A52  ECCF  F01D         	call	___xxtofl
  4230  003A56  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4231  003A5A  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4232  003A5E  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4233  003A62  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4234  003A66  ECCE  F012         	call	___flmul	;wreg free
  4235  003A6A  C01C  F039         	movff	?___flmul,___fladd@a
  4236  003A6E  C01D  F03A         	movff	?___flmul+1,___fladd@a+1
  4237  003A72  C01E  F03B         	movff	?___flmul+2,___fladd@a+2
  4238  003A76  C01F  F03C         	movff	?___flmul+3,___fladd@a+3
  4239  003A7A  0ECD               	movlw	205
  4240  003A7C  6E20               	movwf	___flmul@a^0,c
  4241  003A7E  0ECC               	movlw	204
  4242  003A80  6E21               	movwf	(___flmul@a+1)^0,c
  4243  003A82  0E4C               	movlw	76
  4244  003A84  6E22               	movwf	(___flmul@a+2)^0,c
  4245  003A86  0E3E               	movlw	62
  4246  003A88  6E23               	movwf	(___flmul@a+3)^0,c
  4247  003A8A  C150  F00E         	movff	_controller,___xxtofl@val
  4248  003A8E  C151  F00F         	movff	_controller+1,___xxtofl@val+1
  4249  003A92  0E00               	movlw	0
  4250  003A94  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  4251  003A96  0EFF               	movlw	-1
  4252  003A98  6E10               	movwf	(___xxtofl@val+2)^0,c
  4253  003A9A  6E11               	movwf	(___xxtofl@val+3)^0,c
  4254  003A9C  0E01               	movlw	1
  4255  003A9E  ECCF  F01D         	call	___xxtofl
  4256  003AA2  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4257  003AA6  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4258  003AAA  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4259  003AAE  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4260  003AB2  ECCE  F012         	call	___flmul	;wreg free
  4261  003AB6  C01C  F035         	movff	?___flmul,___fladd@b
  4262  003ABA  C01D  F036         	movff	?___flmul+1,___fladd@b+1
  4263  003ABE  C01E  F037         	movff	?___flmul+2,___fladd@b+2
  4264  003AC2  C01F  F038         	movff	?___flmul+3,___fladd@b+3
  4265  003AC6  EC6E  F010         	call	___fladd	;wreg free
  4266  003ACA  C035  F04E         	movff	?___fladd,___fltol@f1
  4267  003ACE  C036  F04F         	movff	?___fladd+1,___fltol@f1+1
  4268  003AD2  C037  F050         	movff	?___fladd+2,___fltol@f1+2
  4269  003AD6  C038  F051         	movff	?___fladd+3,___fltol@f1+3
  4270  003ADA  ECF6  F023         	call	___fltol	;wreg free
  4271  003ADE  C04E  F154         	movff	?___fltol,_controller+4
  4272  003AE2  C04F  F155         	movff	?___fltol+1,_controller+5
  4273  003AE6                     
  4274                           ;fs_speed_controller.c: 46:     controller.lastError = controller.error;
  4275  003AE6  C150  F152         	movff	_controller,_controller+2
  4276  003AEA  C151  F153         	movff	_controller+1,_controller+3
  4277  003AEE                     
  4278                           ;fs_speed_controller.c: 48:    controller.leftMotorSpeed =(int16_t) (200 + controller.mo
      +                          torSpeed + 70);
  4279  003AEE  0E0E               	movlw	14
  4280  003AF0  0101               	movlb	1	; () banked
  4281  003AF2  2554               	addwf	(_controller+4)& (0+255),w,b
  4282  003AF4  6F56               	movwf	(_controller+6)& (0+255),b
  4283  003AF6  0E01               	movlw	1
  4284  003AF8  2155               	addwfc	(_controller+5)& (0+255),w,b
  4285  003AFA  6F57               	movwf	(_controller+7)& (0+255),b
  4286  003AFC                     
  4287                           ; BSR set to: 1
  4288                           ;fs_speed_controller.c: 49:    controller.rightMotorSpeed =(int16_t) (200 - controller.m
      +                          otorSpeed);
  4289  003AFC  5154               	movf	(_controller+4)& (0+255),w,b
  4290  003AFE  08C8               	sublw	200
  4291  003B00  6F58               	movwf	(_controller+8)& (0+255),b
  4292  003B02  5155               	movf	(_controller+5)& (0+255),w,b
  4293  003B04  A0D8               	btfss	status,0,c
  4294  003B06  2AE8               	incf	wreg,f,c
  4295  003B08  0800               	sublw	0
  4296  003B0A  6F59               	movwf	(_controller+9)& (0+255),b
  4297  003B0C                     
  4298                           ; BSR set to: 1
  4299                           ;fs_speed_controller.c: 51:     if (controller.leftMotorSpeed < 50)
  4300  003B0C  BF57               	btfsc	(_controller+7)& (0+255),7,b
  4301  003B0E  EF94  F01D         	goto	u6820
  4302  003B12  5157               	movf	(_controller+7)& (0+255),w,b
  4303  003B14  E107               	bnz	u6821
  4304  003B16  0E32               	movlw	50
  4305  003B18  5D56               	subwf	(_controller+6)& (0+255),w,b
  4306  003B1A  B0D8               	btfsc	status,0,c
  4307  003B1C  EF92  F01D         	goto	u6821
  4308  003B20  EF94  F01D         	goto	u6820
  4309  003B24                     u6821:
  4310  003B24  EF98  F01D         	goto	l5675
  4311  003B28                     u6820:
  4312  003B28                     
  4313                           ; BSR set to: 1
  4314                           ;fs_speed_controller.c: 52:     {;fs_speed_controller.c: 53:         controller.leftMoto
      +                          rSpeed = 50;
  4315  003B28  0E00               	movlw	0
  4316  003B2A  6F57               	movwf	(_controller+7)& (0+255),b
  4317  003B2C  0E32               	movlw	50
  4318  003B2E  6F56               	movwf	(_controller+6)& (0+255),b
  4319  003B30                     l5675:
  4320                           
  4321                           ; BSR set to: 1
  4322                           ;fs_speed_controller.c: 56:     if (controller.rightMotorSpeed < 50)
  4323  003B30  BF59               	btfsc	(_controller+9)& (0+255),7,b
  4324  003B32  EFA6  F01D         	goto	u6830
  4325  003B36  5159               	movf	(_controller+9)& (0+255),w,b
  4326  003B38  E107               	bnz	u6831
  4327  003B3A  0E32               	movlw	50
  4328  003B3C  5D58               	subwf	(_controller+8)& (0+255),w,b
  4329  003B3E  B0D8               	btfsc	status,0,c
  4330  003B40  EFA4  F01D         	goto	u6831
  4331  003B44  EFA6  F01D         	goto	u6830
  4332  003B48                     u6831:
  4333  003B48  EFAA  F01D         	goto	l5679
  4334  003B4C                     u6830:
  4335  003B4C                     
  4336                           ; BSR set to: 1
  4337                           ;fs_speed_controller.c: 57:     {;fs_speed_controller.c: 58:       controller.rightMotor
      +                          Speed = 50;
  4338  003B4C  0E00               	movlw	0
  4339  003B4E  6F59               	movwf	(_controller+9)& (0+255),b
  4340  003B50  0E32               	movlw	50
  4341  003B52  6F58               	movwf	(_controller+8)& (0+255),b
  4342  003B54                     l5679:
  4343                           
  4344                           ; BSR set to: 1
  4345                           ;fs_speed_controller.c: 61:     if (controller.leftMotorSpeed > 350)
  4346  003B54  BF57               	btfsc	(_controller+7)& (0+255),7,b
  4347  003B56  EFB6  F01D         	goto	u6841
  4348  003B5A  0E5F               	movlw	95
  4349  003B5C  5D56               	subwf	(_controller+6)& (0+255),w,b
  4350  003B5E  0E01               	movlw	1
  4351  003B60  5957               	subwfb	(_controller+7)& (0+255),w,b
  4352  003B62  A0D8               	btfss	status,0,c
  4353  003B64  EFB6  F01D         	goto	u6841
  4354  003B68  EFB8  F01D         	goto	u6840
  4355  003B6C                     u6841:
  4356  003B6C  EFBC  F01D         	goto	l5683
  4357  003B70                     u6840:
  4358  003B70                     
  4359                           ; BSR set to: 1
  4360                           ;fs_speed_controller.c: 62:    {;fs_speed_controller.c: 63:         controller.leftMotor
      +                          Speed = 350;
  4361  003B70  0E01               	movlw	1
  4362  003B72  6F57               	movwf	(_controller+7)& (0+255),b
  4363  003B74  0E5E               	movlw	94
  4364  003B76  6F56               	movwf	(_controller+6)& (0+255),b
  4365  003B78                     l5683:
  4366                           
  4367                           ; BSR set to: 1
  4368                           ;fs_speed_controller.c: 66:     if (controller.rightMotorSpeed > 350)
  4369  003B78  BF59               	btfsc	(_controller+9)& (0+255),7,b
  4370  003B7A  EFC8  F01D         	goto	u6851
  4371  003B7E  0E5F               	movlw	95
  4372  003B80  5D58               	subwf	(_controller+8)& (0+255),w,b
  4373  003B82  0E01               	movlw	1
  4374  003B84  5959               	subwfb	(_controller+9)& (0+255),w,b
  4375  003B86  A0D8               	btfss	status,0,c
  4376  003B88  EFC8  F01D         	goto	u6851
  4377  003B8C  EFCA  F01D         	goto	u6850
  4378  003B90                     u6851:
  4379  003B90  EFCE  F01D         	goto	l498
  4380  003B94                     u6850:
  4381  003B94                     
  4382                           ; BSR set to: 1
  4383                           ;fs_speed_controller.c: 67:     {;fs_speed_controller.c: 68:         controller.rightMot
      +                          orSpeed = 350;
  4384  003B94  0E01               	movlw	1
  4385  003B96  6F59               	movwf	(_controller+9)& (0+255),b
  4386  003B98  0E5E               	movlw	94
  4387  003B9A  6F58               	movwf	(_controller+8)& (0+255),b
  4388  003B9C                     l498:
  4389                           
  4390                           ; BSR set to: 1
  4391  003B9C  0012               	return		;funcret
  4392  003B9E                     __end_of_speedControl:
  4393                           	callstack 0
  4394                           
  4395 ;; *************** function _scanAdcConversion *****************
  4396 ;; Defined at:
  4397 ;;		line 93 in file "fs_adc.c"
  4398 ;; Parameters:    Size  Location     Type
  4399 ;;		None
  4400 ;; Auto vars:     Size  Location     Type
  4401 ;;		None
  4402 ;; Return value:  Size  Location     Type
  4403 ;;                  1    wreg      void 
  4404 ;; Registers used:
  4405 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4406 ;; Tracked objects:
  4407 ;;		On entry : 0/0
  4408 ;;		On exit  : 0/0
  4409 ;;		Unchanged: 0/0
  4410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4411 ;;      Params:         0       0       0       0       0       0       0
  4412 ;;      Locals:         0       0       0       0       0       0       0
  4413 ;;      Temps:          2       0       0       0       0       0       0
  4414 ;;      Totals:         2       0       0       0       0       0       0
  4415 ;;Total ram usage:        2 bytes
  4416 ;; Hardware stack levels used:    1
  4417 ;; Hardware stack levels required when called:    2
  4418 ;; This function calls:
  4419 ;;		___fldiv
  4420 ;;		___flmul
  4421 ;;		___fltol
  4422 ;;		___xxtofl
  4423 ;;		_readAdcValue
  4424 ;; This function is called by:
  4425 ;;		_startMotor
  4426 ;; This function uses a non-reentrant model
  4427 ;;
  4428                           
  4429                           	psect	text16
  4430  001298                     __ptext16:
  4431                           	callstack 0
  4432  001298                     _scanAdcConversion:
  4433                           	callstack 24
  4434  001298                     
  4435                           ;fs_adc.c: 95:     switch(timer_value.adc_conversion_time)
  4436  001298  EF20  F00D         	goto	l5593
  4437  00129C                     l5541:
  4438                           
  4439                           ; BSR set to: 1
  4440                           ;fs_adc.c: 98:             adc_raw_data.channel_0 = readAdcValue(0);
  4441  00129C  0E00               	movlw	0
  4442  00129E  ECE1  F02C         	call	_readAdcValue
  4443  0012A2  C001  F193         	movff	?_readAdcValue,_adc_raw_data
  4444  0012A6  C002  F194         	movff	?_readAdcValue+1,_adc_raw_data+1
  4445  0012AA                     
  4446                           ;fs_adc.c: 99:             procces_data.channel_0 = (float)((adc_raw_data.channel_0*5.0)
      +                          /1024.0);
  4447  0012AA  0E00               	movlw	0
  4448  0012AC  6E20               	movwf	___flmul@a^0,c
  4449  0012AE  0E00               	movlw	0
  4450  0012B0  6E21               	movwf	(___flmul@a+1)^0,c
  4451  0012B2  0EA0               	movlw	160
  4452  0012B4  6E22               	movwf	(___flmul@a+2)^0,c
  4453  0012B6  0E40               	movlw	64
  4454  0012B8  6E23               	movwf	(___flmul@a+3)^0,c
  4455  0012BA  C193  F00E         	movff	_adc_raw_data,___xxtofl@val
  4456  0012BE  C194  F00F         	movff	_adc_raw_data+1,___xxtofl@val+1
  4457  0012C2  6A10               	clrf	(___xxtofl@val+2)^0,c
  4458  0012C4  6A11               	clrf	(___xxtofl@val+3)^0,c
  4459  0012C6  0E00               	movlw	0
  4460  0012C8  ECCF  F01D         	call	___xxtofl
  4461  0012CC  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4462  0012D0  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4463  0012D4  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4464  0012D8  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4465  0012DC  ECCE  F012         	call	___flmul	;wreg free
  4466  0012E0  C01C  F035         	movff	?___flmul,___fldiv@b
  4467  0012E4  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4468  0012E8  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4469  0012EC  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4470  0012F0  0E00               	movlw	0
  4471  0012F2  6E39               	movwf	___fldiv@a^0,c
  4472  0012F4  0E00               	movlw	0
  4473  0012F6  6E3A               	movwf	(___fldiv@a+1)^0,c
  4474  0012F8  0E80               	movlw	128
  4475  0012FA  6E3B               	movwf	(___fldiv@a+2)^0,c
  4476  0012FC  0E44               	movlw	68
  4477  0012FE  6E3C               	movwf	(___fldiv@a+3)^0,c
  4478  001300  ECE3  F014         	call	___fldiv	;wreg free
  4479  001304  C035  F130         	movff	?___fldiv,_procces_data
  4480  001308  C036  F131         	movff	?___fldiv+1,_procces_data+1
  4481  00130C  C037  F132         	movff	?___fldiv+2,_procces_data+2
  4482  001310  C038  F133         	movff	?___fldiv+3,_procces_data+3
  4483  001314                     
  4484                           ;fs_adc.c: 100:             convert_data.convert_channel_0 = (uint32_t)((procces_data.ch
      +                          annel_0*999)/5);
  4485  001314  0E00               	movlw	0
  4486  001316  6E39               	movwf	___fldiv@a^0,c
  4487  001318  0E00               	movlw	0
  4488  00131A  6E3A               	movwf	(___fldiv@a+1)^0,c
  4489  00131C  0EA0               	movlw	160
  4490  00131E  6E3B               	movwf	(___fldiv@a+2)^0,c
  4491  001320  0E40               	movlw	64
  4492  001322  6E3C               	movwf	(___fldiv@a+3)^0,c
  4493  001324  0E00               	movlw	0
  4494  001326  6E20               	movwf	___flmul@a^0,c
  4495  001328  0EC0               	movlw	192
  4496  00132A  6E21               	movwf	(___flmul@a+1)^0,c
  4497  00132C  0E79               	movlw	121
  4498  00132E  6E22               	movwf	(___flmul@a+2)^0,c
  4499  001330  0E44               	movlw	68
  4500  001332  6E23               	movwf	(___flmul@a+3)^0,c
  4501  001334  C130  F01C         	movff	_procces_data,___flmul@b
  4502  001338  C131  F01D         	movff	_procces_data+1,___flmul@b+1
  4503  00133C  C132  F01E         	movff	_procces_data+2,___flmul@b+2
  4504  001340  C133  F01F         	movff	_procces_data+3,___flmul@b+3
  4505  001344  ECCE  F012         	call	___flmul	;wreg free
  4506  001348  C01C  F035         	movff	?___flmul,___fldiv@b
  4507  00134C  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4508  001350  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4509  001354  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4510  001358  ECE3  F014         	call	___fldiv	;wreg free
  4511  00135C  C035  F04E         	movff	?___fldiv,___fltol@f1
  4512  001360  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4513  001364  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4514  001368  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4515  00136C  ECF6  F023         	call	___fltol	;wreg free
  4516  001370  C04E  F100         	movff	?___fltol,_convert_data
  4517  001374  C04F  F101         	movff	?___fltol+1,_convert_data+1
  4518  001378  C050  F102         	movff	?___fltol+2,_convert_data+2
  4519  00137C  C051  F103         	movff	?___fltol+3,_convert_data+3
  4520                           
  4521                           ;fs_adc.c: 101:         break;
  4522  001380  EF4E  F00D         	goto	l54
  4523  001384                     l5547:
  4524                           
  4525                           ; BSR set to: 1
  4526                           ;fs_adc.c: 104:             adc_raw_data.channel_1 = readAdcValue(1);
  4527  001384  0E01               	movlw	1
  4528  001386  ECE1  F02C         	call	_readAdcValue
  4529  00138A  C001  F195         	movff	?_readAdcValue,_adc_raw_data+2
  4530  00138E  C002  F196         	movff	?_readAdcValue+1,_adc_raw_data+3
  4531  001392                     
  4532                           ;fs_adc.c: 105:             procces_data.channel_1 = (float)((adc_raw_data.channel_1*5.0
      +                          )/1024.0);
  4533  001392  0E00               	movlw	0
  4534  001394  6E20               	movwf	___flmul@a^0,c
  4535  001396  0E00               	movlw	0
  4536  001398  6E21               	movwf	(___flmul@a+1)^0,c
  4537  00139A  0EA0               	movlw	160
  4538  00139C  6E22               	movwf	(___flmul@a+2)^0,c
  4539  00139E  0E40               	movlw	64
  4540  0013A0  6E23               	movwf	(___flmul@a+3)^0,c
  4541  0013A2  C195  F00E         	movff	_adc_raw_data+2,___xxtofl@val
  4542  0013A6  C196  F00F         	movff	_adc_raw_data+3,___xxtofl@val+1
  4543  0013AA  6A10               	clrf	(___xxtofl@val+2)^0,c
  4544  0013AC  6A11               	clrf	(___xxtofl@val+3)^0,c
  4545  0013AE  0E00               	movlw	0
  4546  0013B0  ECCF  F01D         	call	___xxtofl
  4547  0013B4  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4548  0013B8  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4549  0013BC  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4550  0013C0  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4551  0013C4  ECCE  F012         	call	___flmul	;wreg free
  4552  0013C8  C01C  F035         	movff	?___flmul,___fldiv@b
  4553  0013CC  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4554  0013D0  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4555  0013D4  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4556  0013D8  0E00               	movlw	0
  4557  0013DA  6E39               	movwf	___fldiv@a^0,c
  4558  0013DC  0E00               	movlw	0
  4559  0013DE  6E3A               	movwf	(___fldiv@a+1)^0,c
  4560  0013E0  0E80               	movlw	128
  4561  0013E2  6E3B               	movwf	(___fldiv@a+2)^0,c
  4562  0013E4  0E44               	movlw	68
  4563  0013E6  6E3C               	movwf	(___fldiv@a+3)^0,c
  4564  0013E8  ECE3  F014         	call	___fldiv	;wreg free
  4565  0013EC  C035  F134         	movff	?___fldiv,_procces_data+4
  4566  0013F0  C036  F135         	movff	?___fldiv+1,_procces_data+5
  4567  0013F4  C037  F136         	movff	?___fldiv+2,_procces_data+6
  4568  0013F8  C038  F137         	movff	?___fldiv+3,_procces_data+7
  4569  0013FC                     
  4570                           ;fs_adc.c: 106:             convert_data.convert_channel_1 = (uint32_t)((procces_data.ch
      +                          annel_1*999)/5);
  4571  0013FC  0E00               	movlw	0
  4572  0013FE  6E39               	movwf	___fldiv@a^0,c
  4573  001400  0E00               	movlw	0
  4574  001402  6E3A               	movwf	(___fldiv@a+1)^0,c
  4575  001404  0EA0               	movlw	160
  4576  001406  6E3B               	movwf	(___fldiv@a+2)^0,c
  4577  001408  0E40               	movlw	64
  4578  00140A  6E3C               	movwf	(___fldiv@a+3)^0,c
  4579  00140C  0E00               	movlw	0
  4580  00140E  6E20               	movwf	___flmul@a^0,c
  4581  001410  0EC0               	movlw	192
  4582  001412  6E21               	movwf	(___flmul@a+1)^0,c
  4583  001414  0E79               	movlw	121
  4584  001416  6E22               	movwf	(___flmul@a+2)^0,c
  4585  001418  0E44               	movlw	68
  4586  00141A  6E23               	movwf	(___flmul@a+3)^0,c
  4587  00141C  C134  F01C         	movff	_procces_data+4,___flmul@b
  4588  001420  C135  F01D         	movff	_procces_data+5,___flmul@b+1
  4589  001424  C136  F01E         	movff	_procces_data+6,___flmul@b+2
  4590  001428  C137  F01F         	movff	_procces_data+7,___flmul@b+3
  4591  00142C  ECCE  F012         	call	___flmul	;wreg free
  4592  001430  C01C  F035         	movff	?___flmul,___fldiv@b
  4593  001434  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4594  001438  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4595  00143C  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4596  001440  ECE3  F014         	call	___fldiv	;wreg free
  4597  001444  C035  F04E         	movff	?___fldiv,___fltol@f1
  4598  001448  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4599  00144C  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4600  001450  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4601  001454  ECF6  F023         	call	___fltol	;wreg free
  4602  001458  C04E  F104         	movff	?___fltol,_convert_data+4
  4603  00145C  C04F  F105         	movff	?___fltol+1,_convert_data+5
  4604  001460  C050  F106         	movff	?___fltol+2,_convert_data+6
  4605  001464  C051  F107         	movff	?___fltol+3,_convert_data+7
  4606                           
  4607                           ;fs_adc.c: 107:         break;
  4608  001468  EF4E  F00D         	goto	l54
  4609  00146C                     l5553:
  4610                           
  4611                           ; BSR set to: 1
  4612                           ;fs_adc.c: 110:             adc_raw_data.channel_2 = readAdcValue(2);
  4613  00146C  0E02               	movlw	2
  4614  00146E  ECE1  F02C         	call	_readAdcValue
  4615  001472  C001  F197         	movff	?_readAdcValue,_adc_raw_data+4
  4616  001476  C002  F198         	movff	?_readAdcValue+1,_adc_raw_data+5
  4617  00147A                     
  4618                           ;fs_adc.c: 111:             procces_data.channel_2 = (float)((adc_raw_data.channel_2*5.0
      +                          )/1024.0);
  4619  00147A  0E00               	movlw	0
  4620  00147C  6E20               	movwf	___flmul@a^0,c
  4621  00147E  0E00               	movlw	0
  4622  001480  6E21               	movwf	(___flmul@a+1)^0,c
  4623  001482  0EA0               	movlw	160
  4624  001484  6E22               	movwf	(___flmul@a+2)^0,c
  4625  001486  0E40               	movlw	64
  4626  001488  6E23               	movwf	(___flmul@a+3)^0,c
  4627  00148A  C197  F00E         	movff	_adc_raw_data+4,___xxtofl@val
  4628  00148E  C198  F00F         	movff	_adc_raw_data+5,___xxtofl@val+1
  4629  001492  6A10               	clrf	(___xxtofl@val+2)^0,c
  4630  001494  6A11               	clrf	(___xxtofl@val+3)^0,c
  4631  001496  0E00               	movlw	0
  4632  001498  ECCF  F01D         	call	___xxtofl
  4633  00149C  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4634  0014A0  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4635  0014A4  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4636  0014A8  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4637  0014AC  ECCE  F012         	call	___flmul	;wreg free
  4638  0014B0  C01C  F035         	movff	?___flmul,___fldiv@b
  4639  0014B4  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4640  0014B8  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4641  0014BC  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4642  0014C0  0E00               	movlw	0
  4643  0014C2  6E39               	movwf	___fldiv@a^0,c
  4644  0014C4  0E00               	movlw	0
  4645  0014C6  6E3A               	movwf	(___fldiv@a+1)^0,c
  4646  0014C8  0E80               	movlw	128
  4647  0014CA  6E3B               	movwf	(___fldiv@a+2)^0,c
  4648  0014CC  0E44               	movlw	68
  4649  0014CE  6E3C               	movwf	(___fldiv@a+3)^0,c
  4650  0014D0  ECE3  F014         	call	___fldiv	;wreg free
  4651  0014D4  C035  F138         	movff	?___fldiv,_procces_data+8
  4652  0014D8  C036  F139         	movff	?___fldiv+1,_procces_data+9
  4653  0014DC  C037  F13A         	movff	?___fldiv+2,_procces_data+10
  4654  0014E0  C038  F13B         	movff	?___fldiv+3,_procces_data+11
  4655  0014E4                     
  4656                           ;fs_adc.c: 112:             convert_data.convert_channel_2 = (uint32_t)((procces_data.ch
      +                          annel_2*999)/5);
  4657  0014E4  0E00               	movlw	0
  4658  0014E6  6E39               	movwf	___fldiv@a^0,c
  4659  0014E8  0E00               	movlw	0
  4660  0014EA  6E3A               	movwf	(___fldiv@a+1)^0,c
  4661  0014EC  0EA0               	movlw	160
  4662  0014EE  6E3B               	movwf	(___fldiv@a+2)^0,c
  4663  0014F0  0E40               	movlw	64
  4664  0014F2  6E3C               	movwf	(___fldiv@a+3)^0,c
  4665  0014F4  0E00               	movlw	0
  4666  0014F6  6E20               	movwf	___flmul@a^0,c
  4667  0014F8  0EC0               	movlw	192
  4668  0014FA  6E21               	movwf	(___flmul@a+1)^0,c
  4669  0014FC  0E79               	movlw	121
  4670  0014FE  6E22               	movwf	(___flmul@a+2)^0,c
  4671  001500  0E44               	movlw	68
  4672  001502  6E23               	movwf	(___flmul@a+3)^0,c
  4673  001504  C138  F01C         	movff	_procces_data+8,___flmul@b
  4674  001508  C139  F01D         	movff	_procces_data+9,___flmul@b+1
  4675  00150C  C13A  F01E         	movff	_procces_data+10,___flmul@b+2
  4676  001510  C13B  F01F         	movff	_procces_data+11,___flmul@b+3
  4677  001514  ECCE  F012         	call	___flmul	;wreg free
  4678  001518  C01C  F035         	movff	?___flmul,___fldiv@b
  4679  00151C  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4680  001520  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4681  001524  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4682  001528  ECE3  F014         	call	___fldiv	;wreg free
  4683  00152C  C035  F04E         	movff	?___fldiv,___fltol@f1
  4684  001530  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4685  001534  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4686  001538  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4687  00153C  ECF6  F023         	call	___fltol	;wreg free
  4688  001540  C04E  F108         	movff	?___fltol,_convert_data+8
  4689  001544  C04F  F109         	movff	?___fltol+1,_convert_data+9
  4690  001548  C050  F10A         	movff	?___fltol+2,_convert_data+10
  4691  00154C  C051  F10B         	movff	?___fltol+3,_convert_data+11
  4692  001550                     
  4693                           ;fs_adc.c: 113:             convert_data.convert_channel_2_f = (uint16_t)((procces_data.
      +                          channel_2*999)/5);
  4694  001550  0E00               	movlw	0
  4695  001552  6E39               	movwf	___fldiv@a^0,c
  4696  001554  0E00               	movlw	0
  4697  001556  6E3A               	movwf	(___fldiv@a+1)^0,c
  4698  001558  0EA0               	movlw	160
  4699  00155A  6E3B               	movwf	(___fldiv@a+2)^0,c
  4700  00155C  0E40               	movlw	64
  4701  00155E  6E3C               	movwf	(___fldiv@a+3)^0,c
  4702  001560  0E00               	movlw	0
  4703  001562  6E20               	movwf	___flmul@a^0,c
  4704  001564  0EC0               	movlw	192
  4705  001566  6E21               	movwf	(___flmul@a+1)^0,c
  4706  001568  0E79               	movlw	121
  4707  00156A  6E22               	movwf	(___flmul@a+2)^0,c
  4708  00156C  0E44               	movlw	68
  4709  00156E  6E23               	movwf	(___flmul@a+3)^0,c
  4710  001570  C138  F01C         	movff	_procces_data+8,___flmul@b
  4711  001574  C139  F01D         	movff	_procces_data+9,___flmul@b+1
  4712  001578  C13A  F01E         	movff	_procces_data+10,___flmul@b+2
  4713  00157C  C13B  F01F         	movff	_procces_data+11,___flmul@b+3
  4714  001580  ECCE  F012         	call	___flmul	;wreg free
  4715  001584  C01C  F035         	movff	?___flmul,___fldiv@b
  4716  001588  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4717  00158C  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4718  001590  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4719  001594  ECE3  F014         	call	___fldiv	;wreg free
  4720  001598  C035  F04E         	movff	?___fldiv,___fltol@f1
  4721  00159C  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4722  0015A0  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4723  0015A4  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4724  0015A8  ECF6  F023         	call	___fltol	;wreg free
  4725  0015AC  C04E  F124         	movff	?___fltol,_convert_data+36
  4726  0015B0  C04F  F125         	movff	?___fltol+1,_convert_data+37
  4727                           
  4728                           ;fs_adc.c: 114:         break;
  4729  0015B4  EF4E  F00D         	goto	l54
  4730  0015B8                     l5561:
  4731                           
  4732                           ; BSR set to: 1
  4733                           ;fs_adc.c: 117:             adc_raw_data.channel_3 = readAdcValue(3);
  4734  0015B8  0E03               	movlw	3
  4735  0015BA  ECE1  F02C         	call	_readAdcValue
  4736  0015BE  C001  F199         	movff	?_readAdcValue,_adc_raw_data+6
  4737  0015C2  C002  F19A         	movff	?_readAdcValue+1,_adc_raw_data+7
  4738  0015C6                     
  4739                           ;fs_adc.c: 118:             procces_data.channel_3 = (float)((adc_raw_data.channel_3*5.0
      +                          )/1024.0);
  4740  0015C6  0E00               	movlw	0
  4741  0015C8  6E20               	movwf	___flmul@a^0,c
  4742  0015CA  0E00               	movlw	0
  4743  0015CC  6E21               	movwf	(___flmul@a+1)^0,c
  4744  0015CE  0EA0               	movlw	160
  4745  0015D0  6E22               	movwf	(___flmul@a+2)^0,c
  4746  0015D2  0E40               	movlw	64
  4747  0015D4  6E23               	movwf	(___flmul@a+3)^0,c
  4748  0015D6  C199  F00E         	movff	_adc_raw_data+6,___xxtofl@val
  4749  0015DA  C19A  F00F         	movff	_adc_raw_data+7,___xxtofl@val+1
  4750  0015DE  6A10               	clrf	(___xxtofl@val+2)^0,c
  4751  0015E0  6A11               	clrf	(___xxtofl@val+3)^0,c
  4752  0015E2  0E00               	movlw	0
  4753  0015E4  ECCF  F01D         	call	___xxtofl
  4754  0015E8  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4755  0015EC  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4756  0015F0  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4757  0015F4  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4758  0015F8  ECCE  F012         	call	___flmul	;wreg free
  4759  0015FC  C01C  F035         	movff	?___flmul,___fldiv@b
  4760  001600  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4761  001604  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4762  001608  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4763  00160C  0E00               	movlw	0
  4764  00160E  6E39               	movwf	___fldiv@a^0,c
  4765  001610  0E00               	movlw	0
  4766  001612  6E3A               	movwf	(___fldiv@a+1)^0,c
  4767  001614  0E80               	movlw	128
  4768  001616  6E3B               	movwf	(___fldiv@a+2)^0,c
  4769  001618  0E44               	movlw	68
  4770  00161A  6E3C               	movwf	(___fldiv@a+3)^0,c
  4771  00161C  ECE3  F014         	call	___fldiv	;wreg free
  4772  001620  C035  F13C         	movff	?___fldiv,_procces_data+12
  4773  001624  C036  F13D         	movff	?___fldiv+1,_procces_data+13
  4774  001628  C037  F13E         	movff	?___fldiv+2,_procces_data+14
  4775  00162C  C038  F13F         	movff	?___fldiv+3,_procces_data+15
  4776  001630                     
  4777                           ;fs_adc.c: 119:             convert_data.convert_channel_3 = (uint32_t)((procces_data.ch
      +                          annel_3*999)/5);
  4778  001630  0E00               	movlw	0
  4779  001632  6E39               	movwf	___fldiv@a^0,c
  4780  001634  0E00               	movlw	0
  4781  001636  6E3A               	movwf	(___fldiv@a+1)^0,c
  4782  001638  0EA0               	movlw	160
  4783  00163A  6E3B               	movwf	(___fldiv@a+2)^0,c
  4784  00163C  0E40               	movlw	64
  4785  00163E  6E3C               	movwf	(___fldiv@a+3)^0,c
  4786  001640  0E00               	movlw	0
  4787  001642  6E20               	movwf	___flmul@a^0,c
  4788  001644  0EC0               	movlw	192
  4789  001646  6E21               	movwf	(___flmul@a+1)^0,c
  4790  001648  0E79               	movlw	121
  4791  00164A  6E22               	movwf	(___flmul@a+2)^0,c
  4792  00164C  0E44               	movlw	68
  4793  00164E  6E23               	movwf	(___flmul@a+3)^0,c
  4794  001650  C13C  F01C         	movff	_procces_data+12,___flmul@b
  4795  001654  C13D  F01D         	movff	_procces_data+13,___flmul@b+1
  4796  001658  C13E  F01E         	movff	_procces_data+14,___flmul@b+2
  4797  00165C  C13F  F01F         	movff	_procces_data+15,___flmul@b+3
  4798  001660  ECCE  F012         	call	___flmul	;wreg free
  4799  001664  C01C  F035         	movff	?___flmul,___fldiv@b
  4800  001668  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4801  00166C  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4802  001670  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4803  001674  ECE3  F014         	call	___fldiv	;wreg free
  4804  001678  C035  F04E         	movff	?___fldiv,___fltol@f1
  4805  00167C  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4806  001680  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4807  001684  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4808  001688  ECF6  F023         	call	___fltol	;wreg free
  4809  00168C  C04E  F10C         	movff	?___fltol,_convert_data+12
  4810  001690  C04F  F10D         	movff	?___fltol+1,_convert_data+13
  4811  001694  C050  F10E         	movff	?___fltol+2,_convert_data+14
  4812  001698  C051  F10F         	movff	?___fltol+3,_convert_data+15
  4813                           
  4814                           ;fs_adc.c: 120:         break;
  4815  00169C  EF4E  F00D         	goto	l54
  4816  0016A0                     l5567:
  4817                           
  4818                           ; BSR set to: 1
  4819                           ;fs_adc.c: 123:             adc_raw_data.channel_4 = readAdcValue(4);
  4820  0016A0  0E04               	movlw	4
  4821  0016A2  ECE1  F02C         	call	_readAdcValue
  4822  0016A6  C001  F19B         	movff	?_readAdcValue,_adc_raw_data+8
  4823  0016AA  C002  F19C         	movff	?_readAdcValue+1,_adc_raw_data+9
  4824  0016AE                     
  4825                           ;fs_adc.c: 124:             procces_data.channel_4 = (float)((adc_raw_data.channel_4*5.0
      +                          )/1024.0);
  4826  0016AE  0E00               	movlw	0
  4827  0016B0  6E20               	movwf	___flmul@a^0,c
  4828  0016B2  0E00               	movlw	0
  4829  0016B4  6E21               	movwf	(___flmul@a+1)^0,c
  4830  0016B6  0EA0               	movlw	160
  4831  0016B8  6E22               	movwf	(___flmul@a+2)^0,c
  4832  0016BA  0E40               	movlw	64
  4833  0016BC  6E23               	movwf	(___flmul@a+3)^0,c
  4834  0016BE  C19B  F00E         	movff	_adc_raw_data+8,___xxtofl@val
  4835  0016C2  C19C  F00F         	movff	_adc_raw_data+9,___xxtofl@val+1
  4836  0016C6  6A10               	clrf	(___xxtofl@val+2)^0,c
  4837  0016C8  6A11               	clrf	(___xxtofl@val+3)^0,c
  4838  0016CA  0E00               	movlw	0
  4839  0016CC  ECCF  F01D         	call	___xxtofl
  4840  0016D0  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4841  0016D4  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4842  0016D8  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4843  0016DC  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4844  0016E0  ECCE  F012         	call	___flmul	;wreg free
  4845  0016E4  C01C  F035         	movff	?___flmul,___fldiv@b
  4846  0016E8  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4847  0016EC  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4848  0016F0  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4849  0016F4  0E00               	movlw	0
  4850  0016F6  6E39               	movwf	___fldiv@a^0,c
  4851  0016F8  0E00               	movlw	0
  4852  0016FA  6E3A               	movwf	(___fldiv@a+1)^0,c
  4853  0016FC  0E80               	movlw	128
  4854  0016FE  6E3B               	movwf	(___fldiv@a+2)^0,c
  4855  001700  0E44               	movlw	68
  4856  001702  6E3C               	movwf	(___fldiv@a+3)^0,c
  4857  001704  ECE3  F014         	call	___fldiv	;wreg free
  4858  001708  C035  F140         	movff	?___fldiv,_procces_data+16
  4859  00170C  C036  F141         	movff	?___fldiv+1,_procces_data+17
  4860  001710  C037  F142         	movff	?___fldiv+2,_procces_data+18
  4861  001714  C038  F143         	movff	?___fldiv+3,_procces_data+19
  4862  001718                     
  4863                           ;fs_adc.c: 125:             convert_data.convert_channel_4 = (uint32_t)((procces_data.ch
      +                          annel_4*999)/5);
  4864  001718  0E00               	movlw	0
  4865  00171A  6E39               	movwf	___fldiv@a^0,c
  4866  00171C  0E00               	movlw	0
  4867  00171E  6E3A               	movwf	(___fldiv@a+1)^0,c
  4868  001720  0EA0               	movlw	160
  4869  001722  6E3B               	movwf	(___fldiv@a+2)^0,c
  4870  001724  0E40               	movlw	64
  4871  001726  6E3C               	movwf	(___fldiv@a+3)^0,c
  4872  001728  0E00               	movlw	0
  4873  00172A  6E20               	movwf	___flmul@a^0,c
  4874  00172C  0EC0               	movlw	192
  4875  00172E  6E21               	movwf	(___flmul@a+1)^0,c
  4876  001730  0E79               	movlw	121
  4877  001732  6E22               	movwf	(___flmul@a+2)^0,c
  4878  001734  0E44               	movlw	68
  4879  001736  6E23               	movwf	(___flmul@a+3)^0,c
  4880  001738  C140  F01C         	movff	_procces_data+16,___flmul@b
  4881  00173C  C141  F01D         	movff	_procces_data+17,___flmul@b+1
  4882  001740  C142  F01E         	movff	_procces_data+18,___flmul@b+2
  4883  001744  C143  F01F         	movff	_procces_data+19,___flmul@b+3
  4884  001748  ECCE  F012         	call	___flmul	;wreg free
  4885  00174C  C01C  F035         	movff	?___flmul,___fldiv@b
  4886  001750  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4887  001754  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4888  001758  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4889  00175C  ECE3  F014         	call	___fldiv	;wreg free
  4890  001760  C035  F04E         	movff	?___fldiv,___fltol@f1
  4891  001764  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4892  001768  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4893  00176C  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4894  001770  ECF6  F023         	call	___fltol	;wreg free
  4895  001774  C04E  F110         	movff	?___fltol,_convert_data+16
  4896  001778  C04F  F111         	movff	?___fltol+1,_convert_data+17
  4897  00177C  C050  F112         	movff	?___fltol+2,_convert_data+18
  4898  001780  C051  F113         	movff	?___fltol+3,_convert_data+19
  4899                           
  4900                           ;fs_adc.c: 126:         break;
  4901  001784  EF4E  F00D         	goto	l54
  4902  001788                     l5573:
  4903                           
  4904                           ; BSR set to: 1
  4905                           ;fs_adc.c: 129:            adc_raw_data.channel_5 = readAdcValue(5);
  4906  001788  0E05               	movlw	5
  4907  00178A  ECE1  F02C         	call	_readAdcValue
  4908  00178E  C001  F19D         	movff	?_readAdcValue,_adc_raw_data+10
  4909  001792  C002  F19E         	movff	?_readAdcValue+1,_adc_raw_data+11
  4910  001796                     
  4911                           ;fs_adc.c: 130:            procces_data.channel_5 = (float)((adc_raw_data.channel_5*5.0)
      +                          /1024.0);
  4912  001796  0E00               	movlw	0
  4913  001798  6E20               	movwf	___flmul@a^0,c
  4914  00179A  0E00               	movlw	0
  4915  00179C  6E21               	movwf	(___flmul@a+1)^0,c
  4916  00179E  0EA0               	movlw	160
  4917  0017A0  6E22               	movwf	(___flmul@a+2)^0,c
  4918  0017A2  0E40               	movlw	64
  4919  0017A4  6E23               	movwf	(___flmul@a+3)^0,c
  4920  0017A6  C19D  F00E         	movff	_adc_raw_data+10,___xxtofl@val
  4921  0017AA  C19E  F00F         	movff	_adc_raw_data+11,___xxtofl@val+1
  4922  0017AE  6A10               	clrf	(___xxtofl@val+2)^0,c
  4923  0017B0  6A11               	clrf	(___xxtofl@val+3)^0,c
  4924  0017B2  0E00               	movlw	0
  4925  0017B4  ECCF  F01D         	call	___xxtofl
  4926  0017B8  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4927  0017BC  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4928  0017C0  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4929  0017C4  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4930  0017C8  ECCE  F012         	call	___flmul	;wreg free
  4931  0017CC  C01C  F035         	movff	?___flmul,___fldiv@b
  4932  0017D0  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4933  0017D4  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4934  0017D8  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4935  0017DC  0E00               	movlw	0
  4936  0017DE  6E39               	movwf	___fldiv@a^0,c
  4937  0017E0  0E00               	movlw	0
  4938  0017E2  6E3A               	movwf	(___fldiv@a+1)^0,c
  4939  0017E4  0E80               	movlw	128
  4940  0017E6  6E3B               	movwf	(___fldiv@a+2)^0,c
  4941  0017E8  0E44               	movlw	68
  4942  0017EA  6E3C               	movwf	(___fldiv@a+3)^0,c
  4943  0017EC  ECE3  F014         	call	___fldiv	;wreg free
  4944  0017F0  C035  F144         	movff	?___fldiv,_procces_data+20
  4945  0017F4  C036  F145         	movff	?___fldiv+1,_procces_data+21
  4946  0017F8  C037  F146         	movff	?___fldiv+2,_procces_data+22
  4947  0017FC  C038  F147         	movff	?___fldiv+3,_procces_data+23
  4948  001800                     
  4949                           ;fs_adc.c: 131:            convert_data.convert_channel_5 = (uint32_t)((procces_data.cha
      +                          nnel_5*999)/5);
  4950  001800  0E00               	movlw	0
  4951  001802  6E39               	movwf	___fldiv@a^0,c
  4952  001804  0E00               	movlw	0
  4953  001806  6E3A               	movwf	(___fldiv@a+1)^0,c
  4954  001808  0EA0               	movlw	160
  4955  00180A  6E3B               	movwf	(___fldiv@a+2)^0,c
  4956  00180C  0E40               	movlw	64
  4957  00180E  6E3C               	movwf	(___fldiv@a+3)^0,c
  4958  001810  0E00               	movlw	0
  4959  001812  6E20               	movwf	___flmul@a^0,c
  4960  001814  0EC0               	movlw	192
  4961  001816  6E21               	movwf	(___flmul@a+1)^0,c
  4962  001818  0E79               	movlw	121
  4963  00181A  6E22               	movwf	(___flmul@a+2)^0,c
  4964  00181C  0E44               	movlw	68
  4965  00181E  6E23               	movwf	(___flmul@a+3)^0,c
  4966  001820  C144  F01C         	movff	_procces_data+20,___flmul@b
  4967  001824  C145  F01D         	movff	_procces_data+21,___flmul@b+1
  4968  001828  C146  F01E         	movff	_procces_data+22,___flmul@b+2
  4969  00182C  C147  F01F         	movff	_procces_data+23,___flmul@b+3
  4970  001830  ECCE  F012         	call	___flmul	;wreg free
  4971  001834  C01C  F035         	movff	?___flmul,___fldiv@b
  4972  001838  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4973  00183C  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4974  001840  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4975  001844  ECE3  F014         	call	___fldiv	;wreg free
  4976  001848  C035  F04E         	movff	?___fldiv,___fltol@f1
  4977  00184C  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4978  001850  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4979  001854  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4980  001858  ECF6  F023         	call	___fltol	;wreg free
  4981  00185C  C04E  F114         	movff	?___fltol,_convert_data+20
  4982  001860  C04F  F115         	movff	?___fltol+1,_convert_data+21
  4983  001864  C050  F116         	movff	?___fltol+2,_convert_data+22
  4984  001868  C051  F117         	movff	?___fltol+3,_convert_data+23
  4985                           
  4986                           ;fs_adc.c: 132:         break;
  4987  00186C  EF4E  F00D         	goto	l54
  4988  001870                     l5579:
  4989                           
  4990                           ; BSR set to: 1
  4991                           ;fs_adc.c: 135:             adc_raw_data.channel_6 = readAdcValue(6);
  4992  001870  0E06               	movlw	6
  4993  001872  ECE1  F02C         	call	_readAdcValue
  4994  001876  C001  F19F         	movff	?_readAdcValue,_adc_raw_data+12
  4995  00187A  C002  F1A0         	movff	?_readAdcValue+1,_adc_raw_data+13
  4996  00187E                     
  4997                           ;fs_adc.c: 136:             procces_data.channel_6 = (float)((adc_raw_data.channel_6*5.0
      +                          )/1024.0);
  4998  00187E  0E00               	movlw	0
  4999  001880  6E20               	movwf	___flmul@a^0,c
  5000  001882  0E00               	movlw	0
  5001  001884  6E21               	movwf	(___flmul@a+1)^0,c
  5002  001886  0EA0               	movlw	160
  5003  001888  6E22               	movwf	(___flmul@a+2)^0,c
  5004  00188A  0E40               	movlw	64
  5005  00188C  6E23               	movwf	(___flmul@a+3)^0,c
  5006  00188E  C19F  F00E         	movff	_adc_raw_data+12,___xxtofl@val
  5007  001892  C1A0  F00F         	movff	_adc_raw_data+13,___xxtofl@val+1
  5008  001896  6A10               	clrf	(___xxtofl@val+2)^0,c
  5009  001898  6A11               	clrf	(___xxtofl@val+3)^0,c
  5010  00189A  0E00               	movlw	0
  5011  00189C  ECCF  F01D         	call	___xxtofl
  5012  0018A0  C00E  F01C         	movff	?___xxtofl,___flmul@b
  5013  0018A4  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  5014  0018A8  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  5015  0018AC  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  5016  0018B0  ECCE  F012         	call	___flmul	;wreg free
  5017  0018B4  C01C  F035         	movff	?___flmul,___fldiv@b
  5018  0018B8  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  5019  0018BC  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  5020  0018C0  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  5021  0018C4  0E00               	movlw	0
  5022  0018C6  6E39               	movwf	___fldiv@a^0,c
  5023  0018C8  0E00               	movlw	0
  5024  0018CA  6E3A               	movwf	(___fldiv@a+1)^0,c
  5025  0018CC  0E80               	movlw	128
  5026  0018CE  6E3B               	movwf	(___fldiv@a+2)^0,c
  5027  0018D0  0E44               	movlw	68
  5028  0018D2  6E3C               	movwf	(___fldiv@a+3)^0,c
  5029  0018D4  ECE3  F014         	call	___fldiv	;wreg free
  5030  0018D8  C035  F148         	movff	?___fldiv,_procces_data+24
  5031  0018DC  C036  F149         	movff	?___fldiv+1,_procces_data+25
  5032  0018E0  C037  F14A         	movff	?___fldiv+2,_procces_data+26
  5033  0018E4  C038  F14B         	movff	?___fldiv+3,_procces_data+27
  5034  0018E8                     
  5035                           ;fs_adc.c: 137:             convert_data.convert_channel_6 = (uint32_t)((procces_data.ch
      +                          annel_6*999)/5);
  5036  0018E8  0E00               	movlw	0
  5037  0018EA  6E39               	movwf	___fldiv@a^0,c
  5038  0018EC  0E00               	movlw	0
  5039  0018EE  6E3A               	movwf	(___fldiv@a+1)^0,c
  5040  0018F0  0EA0               	movlw	160
  5041  0018F2  6E3B               	movwf	(___fldiv@a+2)^0,c
  5042  0018F4  0E40               	movlw	64
  5043  0018F6  6E3C               	movwf	(___fldiv@a+3)^0,c
  5044  0018F8  0E00               	movlw	0
  5045  0018FA  6E20               	movwf	___flmul@a^0,c
  5046  0018FC  0EC0               	movlw	192
  5047  0018FE  6E21               	movwf	(___flmul@a+1)^0,c
  5048  001900  0E79               	movlw	121
  5049  001902  6E22               	movwf	(___flmul@a+2)^0,c
  5050  001904  0E44               	movlw	68
  5051  001906  6E23               	movwf	(___flmul@a+3)^0,c
  5052  001908  C148  F01C         	movff	_procces_data+24,___flmul@b
  5053  00190C  C149  F01D         	movff	_procces_data+25,___flmul@b+1
  5054  001910  C14A  F01E         	movff	_procces_data+26,___flmul@b+2
  5055  001914  C14B  F01F         	movff	_procces_data+27,___flmul@b+3
  5056  001918  ECCE  F012         	call	___flmul	;wreg free
  5057  00191C  C01C  F035         	movff	?___flmul,___fldiv@b
  5058  001920  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  5059  001924  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  5060  001928  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  5061  00192C  ECE3  F014         	call	___fldiv	;wreg free
  5062  001930  C035  F04E         	movff	?___fldiv,___fltol@f1
  5063  001934  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  5064  001938  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  5065  00193C  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  5066  001940  ECF6  F023         	call	___fltol	;wreg free
  5067  001944  C04E  F118         	movff	?___fltol,_convert_data+24
  5068  001948  C04F  F119         	movff	?___fltol+1,_convert_data+25
  5069  00194C  C050  F11A         	movff	?___fltol+2,_convert_data+26
  5070  001950  C051  F11B         	movff	?___fltol+3,_convert_data+27
  5071                           
  5072                           ;fs_adc.c: 138:         break;
  5073  001954  EF4E  F00D         	goto	l54
  5074  001958                     l5585:
  5075                           
  5076                           ; BSR set to: 1
  5077                           ;fs_adc.c: 141:             adc_raw_data.channel_7 = readAdcValue(7);
  5078  001958  0E07               	movlw	7
  5079  00195A  ECE1  F02C         	call	_readAdcValue
  5080  00195E  C001  F1A1         	movff	?_readAdcValue,_adc_raw_data+14
  5081  001962  C002  F1A2         	movff	?_readAdcValue+1,_adc_raw_data+15
  5082  001966                     
  5083                           ;fs_adc.c: 142:             procces_data.channel_7 = (float)((adc_raw_data.channel_7*5.0
      +                          )/1024.0);
  5084  001966  0E00               	movlw	0
  5085  001968  6E20               	movwf	___flmul@a^0,c
  5086  00196A  0E00               	movlw	0
  5087  00196C  6E21               	movwf	(___flmul@a+1)^0,c
  5088  00196E  0EA0               	movlw	160
  5089  001970  6E22               	movwf	(___flmul@a+2)^0,c
  5090  001972  0E40               	movlw	64
  5091  001974  6E23               	movwf	(___flmul@a+3)^0,c
  5092  001976  C1A1  F00E         	movff	_adc_raw_data+14,___xxtofl@val
  5093  00197A  C1A2  F00F         	movff	_adc_raw_data+15,___xxtofl@val+1
  5094  00197E  6A10               	clrf	(___xxtofl@val+2)^0,c
  5095  001980  6A11               	clrf	(___xxtofl@val+3)^0,c
  5096  001982  0E00               	movlw	0
  5097  001984  ECCF  F01D         	call	___xxtofl
  5098  001988  C00E  F01C         	movff	?___xxtofl,___flmul@b
  5099  00198C  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  5100  001990  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  5101  001994  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  5102  001998  ECCE  F012         	call	___flmul	;wreg free
  5103  00199C  C01C  F035         	movff	?___flmul,___fldiv@b
  5104  0019A0  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  5105  0019A4  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  5106  0019A8  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  5107  0019AC  0E00               	movlw	0
  5108  0019AE  6E39               	movwf	___fldiv@a^0,c
  5109  0019B0  0E00               	movlw	0
  5110  0019B2  6E3A               	movwf	(___fldiv@a+1)^0,c
  5111  0019B4  0E80               	movlw	128
  5112  0019B6  6E3B               	movwf	(___fldiv@a+2)^0,c
  5113  0019B8  0E44               	movlw	68
  5114  0019BA  6E3C               	movwf	(___fldiv@a+3)^0,c
  5115  0019BC  ECE3  F014         	call	___fldiv	;wreg free
  5116  0019C0  C035  F14C         	movff	?___fldiv,_procces_data+28
  5117  0019C4  C036  F14D         	movff	?___fldiv+1,_procces_data+29
  5118  0019C8  C037  F14E         	movff	?___fldiv+2,_procces_data+30
  5119  0019CC  C038  F14F         	movff	?___fldiv+3,_procces_data+31
  5120  0019D0                     
  5121                           ;fs_adc.c: 143:             convert_data.convert_channel_7 = (uint32_t)((procces_data.ch
      +                          annel_7*999)/5);
  5122  0019D0  0E00               	movlw	0
  5123  0019D2  6E39               	movwf	___fldiv@a^0,c
  5124  0019D4  0E00               	movlw	0
  5125  0019D6  6E3A               	movwf	(___fldiv@a+1)^0,c
  5126  0019D8  0EA0               	movlw	160
  5127  0019DA  6E3B               	movwf	(___fldiv@a+2)^0,c
  5128  0019DC  0E40               	movlw	64
  5129  0019DE  6E3C               	movwf	(___fldiv@a+3)^0,c
  5130  0019E0  0E00               	movlw	0
  5131  0019E2  6E20               	movwf	___flmul@a^0,c
  5132  0019E4  0EC0               	movlw	192
  5133  0019E6  6E21               	movwf	(___flmul@a+1)^0,c
  5134  0019E8  0E79               	movlw	121
  5135  0019EA  6E22               	movwf	(___flmul@a+2)^0,c
  5136  0019EC  0E44               	movlw	68
  5137  0019EE  6E23               	movwf	(___flmul@a+3)^0,c
  5138  0019F0  C14C  F01C         	movff	_procces_data+28,___flmul@b
  5139  0019F4  C14D  F01D         	movff	_procces_data+29,___flmul@b+1
  5140  0019F8  C14E  F01E         	movff	_procces_data+30,___flmul@b+2
  5141  0019FC  C14F  F01F         	movff	_procces_data+31,___flmul@b+3
  5142  001A00  ECCE  F012         	call	___flmul	;wreg free
  5143  001A04  C01C  F035         	movff	?___flmul,___fldiv@b
  5144  001A08  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  5145  001A0C  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  5146  001A10  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  5147  001A14  ECE3  F014         	call	___fldiv	;wreg free
  5148  001A18  C035  F04E         	movff	?___fldiv,___fltol@f1
  5149  001A1C  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  5150  001A20  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  5151  001A24  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  5152  001A28  ECF6  F023         	call	___fltol	;wreg free
  5153  001A2C  C04E  F11C         	movff	?___fltol,_convert_data+28
  5154  001A30  C04F  F11D         	movff	?___fltol+1,_convert_data+29
  5155  001A34  C050  F11E         	movff	?___fltol+2,_convert_data+30
  5156  001A38  C051  F11F         	movff	?___fltol+3,_convert_data+31
  5157                           
  5158                           ;fs_adc.c: 144:         break;
  5159  001A3C  EF4E  F00D         	goto	l54
  5160  001A40                     l5593:
  5161  001A40  0101               	movlb	1	; () banked
  5162  001A42  51B4               	movf	(_timer_value+5)& (0+255),w,b
  5163  001A44  6E58               	movwf	??_scanAdcConversion^0,c
  5164  001A46  6A59               	clrf	(??_scanAdcConversion+1)^0,c
  5165                           
  5166                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5167                           ; Switch size 1, requested type "simple"
  5168                           ; Number of cases is 1, Range of values is 0 to 0
  5169                           ; switch strategies available:
  5170                           ; Name         Instructions Cycles
  5171                           ; simple_byte            4     3 (average)
  5172                           ;	Chosen strategy is simple_byte
  5173  001A48  5059               	movf	(??_scanAdcConversion+1)^0,w,c
  5174  001A4A  0A00               	xorlw	0	; case 0
  5175  001A4C  B4D8               	btfsc	status,2,c
  5176  001A4E  EF2B  F00D         	goto	l6451
  5177  001A52  EF4E  F00D         	goto	l54
  5178  001A56                     l6451:
  5179                           
  5180                           ; BSR set to: 1
  5181                           ; Switch size 1, requested type "simple"
  5182                           ; Number of cases is 8, Range of values is 1 to 8
  5183                           ; switch strategies available:
  5184                           ; Name         Instructions Cycles
  5185                           ; simple_byte           25    13 (average)
  5186                           ;	Chosen strategy is simple_byte
  5187  001A56  5058               	movf	??_scanAdcConversion^0,w,c
  5188  001A58  0A01               	xorlw	1	; case 1
  5189  001A5A  B4D8               	btfsc	status,2,c
  5190  001A5C  EF4E  F009         	goto	l5541
  5191  001A60  0A03               	xorlw	3	; case 2
  5192  001A62  B4D8               	btfsc	status,2,c
  5193  001A64  EFC2  F009         	goto	l5547
  5194  001A68  0A01               	xorlw	1	; case 3
  5195  001A6A  B4D8               	btfsc	status,2,c
  5196  001A6C  EF36  F00A         	goto	l5553
  5197  001A70  0A07               	xorlw	7	; case 4
  5198  001A72  B4D8               	btfsc	status,2,c
  5199  001A74  EFDC  F00A         	goto	l5561
  5200  001A78  0A01               	xorlw	1	; case 5
  5201  001A7A  B4D8               	btfsc	status,2,c
  5202  001A7C  EF50  F00B         	goto	l5567
  5203  001A80  0A03               	xorlw	3	; case 6
  5204  001A82  B4D8               	btfsc	status,2,c
  5205  001A84  EFC4  F00B         	goto	l5573
  5206  001A88  0A01               	xorlw	1	; case 7
  5207  001A8A  B4D8               	btfsc	status,2,c
  5208  001A8C  EF38  F00C         	goto	l5579
  5209  001A90  0A0F               	xorlw	15	; case 8
  5210  001A92  B4D8               	btfsc	status,2,c
  5211  001A94  EFAC  F00C         	goto	l5585
  5212  001A98  EF4E  F00D         	goto	l54
  5213  001A9C                     l54:
  5214  001A9C  0012               	return		;funcret
  5215  001A9E                     __end_of_scanAdcConversion:
  5216                           	callstack 0
  5217                           
  5218 ;; *************** function _readAdcValue *****************
  5219 ;; Defined at:
  5220 ;;		line 34 in file "fs_adc.c"
  5221 ;; Parameters:    Size  Location     Type
  5222 ;;  adcChannel      1    wreg     unsigned char 
  5223 ;; Auto vars:     Size  Location     Type
  5224 ;;  adcChannel      1    4[COMRAM] unsigned char 
  5225 ;;  adcValue        2    5[COMRAM] unsigned short 
  5226 ;; Return value:  Size  Location     Type
  5227 ;;                  2    0[COMRAM] unsigned short 
  5228 ;; Registers used:
  5229 ;;		wreg, status,2, status,0
  5230 ;; Tracked objects:
  5231 ;;		On entry : 0/0
  5232 ;;		On exit  : 0/0
  5233 ;;		Unchanged: 0/0
  5234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5235 ;;      Params:         2       0       0       0       0       0       0
  5236 ;;      Locals:         3       0       0       0       0       0       0
  5237 ;;      Temps:          2       0       0       0       0       0       0
  5238 ;;      Totals:         7       0       0       0       0       0       0
  5239 ;;Total ram usage:        7 bytes
  5240 ;; Hardware stack levels used:    1
  5241 ;; Hardware stack levels required when called:    1
  5242 ;; This function calls:
  5243 ;;		Nothing
  5244 ;; This function is called by:
  5245 ;;		_scanAdcConversion
  5246 ;; This function uses a non-reentrant model
  5247 ;;
  5248                           
  5249                           	psect	text17
  5250  0059C2                     __ptext17:
  5251                           	callstack 0
  5252  0059C2                     _readAdcValue:
  5253                           	callstack 24
  5254                           
  5255                           ;incstack = 0
  5256                           ;readAdcValue@adcChannel stored from wreg
  5257  0059C2  6E05               	movwf	readAdcValue@adcChannel^0,c
  5258  0059C4                     
  5259                           ;fs_adc.c: 38:  ADCON0bits.CHS = adcChannel;
  5260  0059C4  C005  F003         	movff	readAdcValue@adcChannel,??_readAdcValue
  5261  0059C8  4603               	rlncf	??_readAdcValue^0,f,c
  5262  0059CA  4603               	rlncf	??_readAdcValue^0,f,c
  5263  0059CC  50C2               	movf	194,w,c	;volatile
  5264  0059CE  1803               	xorwf	??_readAdcValue^0,w,c
  5265  0059D0  0B83               	andlw	-125
  5266  0059D2  1803               	xorwf	??_readAdcValue^0,w,c
  5267  0059D4  6EC2               	movwf	194,c	;volatile
  5268  0059D6                     
  5269                           ;fs_adc.c: 39:  ADCON0bits.ADON = 1;
  5270  0059D6  80C2               	bsf	194,0,c	;volatile
  5271  0059D8                     
  5272                           ;fs_adc.c: 40:  ADCON0bits.GO_nDONE = 1;
  5273  0059D8  82C2               	bsf	194,1,c	;volatile
  5274  0059DA                     l35:
  5275  0059DA  B2C2               	btfsc	194,1,c	;volatile
  5276  0059DC  EFF2  F02C         	goto	u6391
  5277  0059E0  EFF4  F02C         	goto	u6390
  5278  0059E4                     u6391:
  5279  0059E4  EFED  F02C         	goto	l35
  5280  0059E8                     u6390:
  5281  0059E8                     
  5282                           ;fs_adc.c: 42:  adcValue = (uint16_t)((ADRESH << 8) + ADRESL);
  5283  0059E8  50C4               	movf	196,w,c	;volatile
  5284  0059EA  6E04               	movwf	(??_readAdcValue+1)^0,c
  5285  0059EC  6A03               	clrf	??_readAdcValue^0,c
  5286  0059EE  50C3               	movf	195,w,c	;volatile
  5287  0059F0  2403               	addwf	??_readAdcValue^0,w,c
  5288  0059F2  6E06               	movwf	readAdcValue@adcValue^0,c
  5289  0059F4  0E00               	movlw	0
  5290  0059F6  2004               	addwfc	(??_readAdcValue+1)^0,w,c
  5291  0059F8  6E07               	movwf	(readAdcValue@adcValue+1)^0,c
  5292  0059FA                     
  5293                           ;fs_adc.c: 43:     return adcValue;
  5294  0059FA  C006  F001         	movff	readAdcValue@adcValue,?_readAdcValue
  5295  0059FE  C007  F002         	movff	readAdcValue@adcValue+1,?_readAdcValue+1
  5296  005A02  0012               	return		;funcret
  5297  005A04                     __end_of_readAdcValue:
  5298                           	callstack 0
  5299                           
  5300 ;; *************** function _calculatedAverageValue *****************
  5301 ;; Defined at:
  5302 ;;		line 154 in file "fs_adc.c"
  5303 ;; Parameters:    Size  Location     Type
  5304 ;;		None
  5305 ;; Auto vars:     Size  Location     Type
  5306 ;;		None
  5307 ;; Return value:  Size  Location     Type
  5308 ;;                  1    wreg      void 
  5309 ;; Registers used:
  5310 ;;		wreg, status,2, status,0, cstack
  5311 ;; Tracked objects:
  5312 ;;		On entry : 0/0
  5313 ;;		On exit  : 0/0
  5314 ;;		Unchanged: 0/0
  5315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5316 ;;      Params:         0       0       0       0       0       0       0
  5317 ;;      Locals:         0       0       0       0       0       0       0
  5318 ;;      Temps:         24       0       0       0       0       0       0
  5319 ;;      Totals:        24       0       0       0       0       0       0
  5320 ;;Total ram usage:       24 bytes
  5321 ;; Hardware stack levels used:    1
  5322 ;; Hardware stack levels required when called:    2
  5323 ;; This function calls:
  5324 ;;		___lldiv
  5325 ;;		___lmul
  5326 ;;		___xxtofl
  5327 ;; This function is called by:
  5328 ;;		_startMotor
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           
  5332                           	psect	text18
  5333  002D60                     __ptext18:
  5334                           	callstack 0
  5335  002D60                     _calculatedAverageValue:
  5336                           	callstack 24
  5337  002D60                     
  5338                           ;fs_adc.c: 156:     driver_limit.pay = 0;
  5339  002D60  0E00               	movlw	0
  5340  002D62  0101               	movlb	1	; () banked
  5341  002D64  6FA3               	movwf	_driver_limit& (0+255),b
  5342  002D66  0E00               	movlw	0
  5343  002D68  6FA4               	movwf	(_driver_limit+1)& (0+255),b
  5344  002D6A  0E00               	movlw	0
  5345  002D6C  6FA5               	movwf	(_driver_limit+2)& (0+255),b
  5346  002D6E  0E00               	movlw	0
  5347  002D70  6FA6               	movwf	(_driver_limit+3)& (0+255),b
  5348                           
  5349                           ;fs_adc.c: 157:     driver_limit.payda = 0;
  5350  002D72  0E00               	movlw	0
  5351  002D74  6FA7               	movwf	(_driver_limit+4)& (0+255),b
  5352  002D76  0E00               	movlw	0
  5353  002D78  6FA8               	movwf	(_driver_limit+5)& (0+255),b
  5354  002D7A  0E00               	movlw	0
  5355  002D7C  6FA9               	movwf	(_driver_limit+6)& (0+255),b
  5356  002D7E  0E00               	movlw	0
  5357  002D80  6FAA               	movwf	(_driver_limit+7)& (0+255),b
  5358                           
  5359                           ;fs_adc.c: 158:     driver_limit.ortalama = 0;
  5360  002D82  0E00               	movlw	0
  5361  002D84  6FAB               	movwf	(_driver_limit+8)& (0+255),b
  5362  002D86  0E00               	movlw	0
  5363  002D88  6FAC               	movwf	(_driver_limit+9)& (0+255),b
  5364  002D8A  0E00               	movlw	0
  5365  002D8C  6FAD               	movwf	(_driver_limit+10)& (0+255),b
  5366  002D8E  0E00               	movlw	0
  5367  002D90  6FAE               	movwf	(_driver_limit+11)& (0+255),b
  5368  002D92                     
  5369                           ; BSR set to: 1
  5370                           ;fs_adc.c: 161:    driver_limit.pay =(uint32_t) ( (convert_data.convert_channel_0 *1) +
  5371  002D92  C10C  F001         	movff	_convert_data+12,___lmul@multiplier
  5372  002D96  C10D  F002         	movff	_convert_data+13,___lmul@multiplier+1
  5373  002D9A  C10E  F003         	movff	_convert_data+14,___lmul@multiplier+2
  5374  002D9E  C10F  F004         	movff	_convert_data+15,___lmul@multiplier+3
  5375  002DA2  0EB8               	movlw	184
  5376  002DA4  6E05               	movwf	___lmul@multiplicand^0,c
  5377  002DA6  0E0B               	movlw	11
  5378  002DA8  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5379  002DAA  0E00               	movlw	0
  5380  002DAC  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5381  002DAE  0E00               	movlw	0
  5382  002DB0  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5383  002DB2  ECF8  F02A         	call	___lmul	;wreg free
  5384  002DB6  C001  F01C         	movff	?___lmul,??_calculatedAverageValue
  5385  002DBA  C002  F01D         	movff	?___lmul+1,??_calculatedAverageValue+1
  5386  002DBE  C003  F01E         	movff	?___lmul+2,??_calculatedAverageValue+2
  5387  002DC2  C004  F01F         	movff	?___lmul+3,??_calculatedAverageValue+3
  5388  002DC6  C108  F001         	movff	_convert_data+8,___lmul@multiplier
  5389  002DCA  C109  F002         	movff	_convert_data+9,___lmul@multiplier+1
  5390  002DCE  C10A  F003         	movff	_convert_data+10,___lmul@multiplier+2
  5391  002DD2  C10B  F004         	movff	_convert_data+11,___lmul@multiplier+3
  5392  002DD6  0ED0               	movlw	208
  5393  002DD8  6E05               	movwf	___lmul@multiplicand^0,c
  5394  002DDA  0E07               	movlw	7
  5395  002DDC  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5396  002DDE  0E00               	movlw	0
  5397  002DE0  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5398  002DE2  0E00               	movlw	0
  5399  002DE4  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5400  002DE6  ECF8  F02A         	call	___lmul	;wreg free
  5401  002DEA  5001               	movf	?___lmul^0,w,c
  5402  002DEC  241C               	addwf	??_calculatedAverageValue^0,w,c
  5403  002DEE  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5404  002DF0  5002               	movf	(?___lmul+1)^0,w,c
  5405  002DF2  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5406  002DF4  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5407  002DF6  5003               	movf	(?___lmul+2)^0,w,c
  5408  002DF8  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5409  002DFA  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5410  002DFC  5004               	movf	(?___lmul+3)^0,w,c
  5411  002DFE  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5412  002E00  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5413  002E02  C104  F001         	movff	_convert_data+4,___lmul@multiplier
  5414  002E06  C105  F002         	movff	_convert_data+5,___lmul@multiplier+1
  5415  002E0A  C106  F003         	movff	_convert_data+6,___lmul@multiplier+2
  5416  002E0E  C107  F004         	movff	_convert_data+7,___lmul@multiplier+3
  5417  002E12  0EE8               	movlw	232
  5418  002E14  6E05               	movwf	___lmul@multiplicand^0,c
  5419  002E16  0E03               	movlw	3
  5420  002E18  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5421  002E1A  0E00               	movlw	0
  5422  002E1C  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5423  002E1E  0E00               	movlw	0
  5424  002E20  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5425  002E22  ECF8  F02A         	call	___lmul	;wreg free
  5426  002E26  5001               	movf	?___lmul^0,w,c
  5427  002E28  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5428  002E2A  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5429  002E2C  5002               	movf	(?___lmul+1)^0,w,c
  5430  002E2E  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5431  002E30  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5432  002E32  5003               	movf	(?___lmul+2)^0,w,c
  5433  002E34  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5434  002E36  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5435  002E38  5004               	movf	(?___lmul+3)^0,w,c
  5436  002E3A  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5437  002E3C  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5438  002E3E  0101               	movlb	1	; () banked
  5439  002E40  5100               	movf	_convert_data& (0+255),w,b
  5440  002E42  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5441  002E44  6FA3               	movwf	_driver_limit& (0+255),b
  5442  002E46  5101               	movf	(_convert_data+1)& (0+255),w,b
  5443  002E48  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5444  002E4A  6FA4               	movwf	(_driver_limit+1)& (0+255),b
  5445  002E4C  5102               	movf	(_convert_data+2)& (0+255),w,b
  5446  002E4E  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5447  002E50  6FA5               	movwf	(_driver_limit+2)& (0+255),b
  5448  002E52  5103               	movf	(_convert_data+3)& (0+255),w,b
  5449  002E54  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5450  002E56  6FA6               	movwf	(_driver_limit+3)& (0+255),b
  5451  002E58                     
  5452                           ; BSR set to: 1
  5453                           ;fs_adc.c: 166:    driver_limit.pay += (uint32_t)( (convert_data.convert_channel_4 * 400
      +                          0) +
  5454  002E58  C11C  F001         	movff	_convert_data+28,___lmul@multiplier
  5455  002E5C  C11D  F002         	movff	_convert_data+29,___lmul@multiplier+1
  5456  002E60  C11E  F003         	movff	_convert_data+30,___lmul@multiplier+2
  5457  002E64  C11F  F004         	movff	_convert_data+31,___lmul@multiplier+3
  5458  002E68  0E58               	movlw	88
  5459  002E6A  6E05               	movwf	___lmul@multiplicand^0,c
  5460  002E6C  0E1B               	movlw	27
  5461  002E6E  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5462  002E70  0E00               	movlw	0
  5463  002E72  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5464  002E74  0E00               	movlw	0
  5465  002E76  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5466  002E78  ECF8  F02A         	call	___lmul	;wreg free
  5467  002E7C  C001  F01C         	movff	?___lmul,??_calculatedAverageValue
  5468  002E80  C002  F01D         	movff	?___lmul+1,??_calculatedAverageValue+1
  5469  002E84  C003  F01E         	movff	?___lmul+2,??_calculatedAverageValue+2
  5470  002E88  C004  F01F         	movff	?___lmul+3,??_calculatedAverageValue+3
  5471  002E8C  C118  F001         	movff	_convert_data+24,___lmul@multiplier
  5472  002E90  C119  F002         	movff	_convert_data+25,___lmul@multiplier+1
  5473  002E94  C11A  F003         	movff	_convert_data+26,___lmul@multiplier+2
  5474  002E98  C11B  F004         	movff	_convert_data+27,___lmul@multiplier+3
  5475  002E9C  0E70               	movlw	112
  5476  002E9E  6E05               	movwf	___lmul@multiplicand^0,c
  5477  002EA0  0E17               	movlw	23
  5478  002EA2  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5479  002EA4  0E00               	movlw	0
  5480  002EA6  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5481  002EA8  0E00               	movlw	0
  5482  002EAA  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5483  002EAC  ECF8  F02A         	call	___lmul	;wreg free
  5484  002EB0  5001               	movf	?___lmul^0,w,c
  5485  002EB2  241C               	addwf	??_calculatedAverageValue^0,w,c
  5486  002EB4  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5487  002EB6  5002               	movf	(?___lmul+1)^0,w,c
  5488  002EB8  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5489  002EBA  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5490  002EBC  5003               	movf	(?___lmul+2)^0,w,c
  5491  002EBE  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5492  002EC0  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5493  002EC2  5004               	movf	(?___lmul+3)^0,w,c
  5494  002EC4  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5495  002EC6  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5496  002EC8  C114  F001         	movff	_convert_data+20,___lmul@multiplier
  5497  002ECC  C115  F002         	movff	_convert_data+21,___lmul@multiplier+1
  5498  002ED0  C116  F003         	movff	_convert_data+22,___lmul@multiplier+2
  5499  002ED4  C117  F004         	movff	_convert_data+23,___lmul@multiplier+3
  5500  002ED8  0E88               	movlw	136
  5501  002EDA  6E05               	movwf	___lmul@multiplicand^0,c
  5502  002EDC  0E13               	movlw	19
  5503  002EDE  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5504  002EE0  0E00               	movlw	0
  5505  002EE2  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5506  002EE4  0E00               	movlw	0
  5507  002EE6  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5508  002EE8  ECF8  F02A         	call	___lmul	;wreg free
  5509  002EEC  5001               	movf	?___lmul^0,w,c
  5510  002EEE  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5511  002EF0  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5512  002EF2  5002               	movf	(?___lmul+1)^0,w,c
  5513  002EF4  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5514  002EF6  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5515  002EF8  5003               	movf	(?___lmul+2)^0,w,c
  5516  002EFA  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5517  002EFC  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5518  002EFE  5004               	movf	(?___lmul+3)^0,w,c
  5519  002F00  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5520  002F02  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5521  002F04  C110  F001         	movff	_convert_data+16,___lmul@multiplier
  5522  002F08  C111  F002         	movff	_convert_data+17,___lmul@multiplier+1
  5523  002F0C  C112  F003         	movff	_convert_data+18,___lmul@multiplier+2
  5524  002F10  C113  F004         	movff	_convert_data+19,___lmul@multiplier+3
  5525  002F14  0EA0               	movlw	160
  5526  002F16  6E05               	movwf	___lmul@multiplicand^0,c
  5527  002F18  0E0F               	movlw	15
  5528  002F1A  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5529  002F1C  0E00               	movlw	0
  5530  002F1E  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5531  002F20  0E00               	movlw	0
  5532  002F22  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5533  002F24  ECF8  F02A         	call	___lmul	;wreg free
  5534  002F28  5001               	movf	?___lmul^0,w,c
  5535  002F2A  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5536  002F2C  6E28               	movwf	(??_calculatedAverageValue+12)^0,c
  5537  002F2E  5002               	movf	(?___lmul+1)^0,w,c
  5538  002F30  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5539  002F32  6E29               	movwf	(??_calculatedAverageValue+13)^0,c
  5540  002F34  5003               	movf	(?___lmul+2)^0,w,c
  5541  002F36  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5542  002F38  6E2A               	movwf	(??_calculatedAverageValue+14)^0,c
  5543  002F3A  5004               	movf	(?___lmul+3)^0,w,c
  5544  002F3C  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5545  002F3E  6E2B               	movwf	(??_calculatedAverageValue+15)^0,c
  5546  002F40  5028               	movf	(??_calculatedAverageValue+12)^0,w,c
  5547  002F42  0101               	movlb	1	; () banked
  5548  002F44  27A3               	addwf	_driver_limit& (0+255),f,b
  5549  002F46  5029               	movf	(??_calculatedAverageValue+13)^0,w,c
  5550  002F48  23A4               	addwfc	(_driver_limit+1)& (0+255),f,b
  5551  002F4A  502A               	movf	(??_calculatedAverageValue+14)^0,w,c
  5552  002F4C  23A5               	addwfc	(_driver_limit+2)& (0+255),f,b
  5553  002F4E  502B               	movf	(??_calculatedAverageValue+15)^0,w,c
  5554  002F50  23A6               	addwfc	(_driver_limit+3)& (0+255),f,b
  5555  002F52                     
  5556                           ; BSR set to: 1
  5557                           ;fs_adc.c: 171:     driver_limit.payda = (uint32_t) (convert_data.convert_channel_0 + co
      +                          nvert_data.convert_channel_1 +
  5558  002F52  5108               	movf	(_convert_data+8)& (0+255),w,b
  5559  002F54  2504               	addwf	(_convert_data+4)& (0+255),w,b
  5560  002F56  6E1C               	movwf	??_calculatedAverageValue^0,c
  5561  002F58  5109               	movf	(_convert_data+9)& (0+255),w,b
  5562  002F5A  2105               	addwfc	(_convert_data+5)& (0+255),w,b
  5563  002F5C  6E1D               	movwf	(??_calculatedAverageValue+1)^0,c
  5564  002F5E  510A               	movf	(_convert_data+10)& (0+255),w,b
  5565  002F60  2106               	addwfc	(_convert_data+6)& (0+255),w,b
  5566  002F62  6E1E               	movwf	(??_calculatedAverageValue+2)^0,c
  5567  002F64  510B               	movf	(_convert_data+11)& (0+255),w,b
  5568  002F66  2107               	addwfc	(_convert_data+7)& (0+255),w,b
  5569  002F68  6E1F               	movwf	(??_calculatedAverageValue+3)^0,c
  5570  002F6A  510C               	movf	(_convert_data+12)& (0+255),w,b
  5571  002F6C  241C               	addwf	??_calculatedAverageValue^0,w,c
  5572  002F6E  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5573  002F70  510D               	movf	(_convert_data+13)& (0+255),w,b
  5574  002F72  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5575  002F74  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5576  002F76  510E               	movf	(_convert_data+14)& (0+255),w,b
  5577  002F78  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5578  002F7A  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5579  002F7C  510F               	movf	(_convert_data+15)& (0+255),w,b
  5580  002F7E  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5581  002F80  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5582  002F82  5110               	movf	(_convert_data+16)& (0+255),w,b
  5583  002F84  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5584  002F86  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5585  002F88  5111               	movf	(_convert_data+17)& (0+255),w,b
  5586  002F8A  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5587  002F8C  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5588  002F8E  5112               	movf	(_convert_data+18)& (0+255),w,b
  5589  002F90  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5590  002F92  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5591  002F94  5113               	movf	(_convert_data+19)& (0+255),w,b
  5592  002F96  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5593  002F98  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5594  002F9A  5114               	movf	(_convert_data+20)& (0+255),w,b
  5595  002F9C  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5596  002F9E  6E28               	movwf	(??_calculatedAverageValue+12)^0,c
  5597  002FA0  5115               	movf	(_convert_data+21)& (0+255),w,b
  5598  002FA2  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5599  002FA4  6E29               	movwf	(??_calculatedAverageValue+13)^0,c
  5600  002FA6  5116               	movf	(_convert_data+22)& (0+255),w,b
  5601  002FA8  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5602  002FAA  6E2A               	movwf	(??_calculatedAverageValue+14)^0,c
  5603  002FAC  5117               	movf	(_convert_data+23)& (0+255),w,b
  5604  002FAE  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5605  002FB0  6E2B               	movwf	(??_calculatedAverageValue+15)^0,c
  5606  002FB2  5118               	movf	(_convert_data+24)& (0+255),w,b
  5607  002FB4  2428               	addwf	(??_calculatedAverageValue+12)^0,w,c
  5608  002FB6  6E2C               	movwf	(??_calculatedAverageValue+16)^0,c
  5609  002FB8  5119               	movf	(_convert_data+25)& (0+255),w,b
  5610  002FBA  2029               	addwfc	(??_calculatedAverageValue+13)^0,w,c
  5611  002FBC  6E2D               	movwf	(??_calculatedAverageValue+17)^0,c
  5612  002FBE  511A               	movf	(_convert_data+26)& (0+255),w,b
  5613  002FC0  202A               	addwfc	(??_calculatedAverageValue+14)^0,w,c
  5614  002FC2  6E2E               	movwf	(??_calculatedAverageValue+18)^0,c
  5615  002FC4  511B               	movf	(_convert_data+27)& (0+255),w,b
  5616  002FC6  202B               	addwfc	(??_calculatedAverageValue+15)^0,w,c
  5617  002FC8  6E2F               	movwf	(??_calculatedAverageValue+19)^0,c
  5618  002FCA  511C               	movf	(_convert_data+28)& (0+255),w,b
  5619  002FCC  242C               	addwf	(??_calculatedAverageValue+16)^0,w,c
  5620  002FCE  6E30               	movwf	(??_calculatedAverageValue+20)^0,c
  5621  002FD0  511D               	movf	(_convert_data+29)& (0+255),w,b
  5622  002FD2  202D               	addwfc	(??_calculatedAverageValue+17)^0,w,c
  5623  002FD4  6E31               	movwf	(??_calculatedAverageValue+21)^0,c
  5624  002FD6  511E               	movf	(_convert_data+30)& (0+255),w,b
  5625  002FD8  202E               	addwfc	(??_calculatedAverageValue+18)^0,w,c
  5626  002FDA  6E32               	movwf	(??_calculatedAverageValue+22)^0,c
  5627  002FDC  511F               	movf	(_convert_data+31)& (0+255),w,b
  5628  002FDE  202F               	addwfc	(??_calculatedAverageValue+19)^0,w,c
  5629  002FE0  6E33               	movwf	(??_calculatedAverageValue+23)^0,c
  5630  002FE2  5100               	movf	_convert_data& (0+255),w,b
  5631  002FE4  2430               	addwf	(??_calculatedAverageValue+20)^0,w,c
  5632  002FE6  6FA7               	movwf	(_driver_limit+4)& (0+255),b
  5633  002FE8  5101               	movf	(_convert_data+1)& (0+255),w,b
  5634  002FEA  2031               	addwfc	(??_calculatedAverageValue+21)^0,w,c
  5635  002FEC  6FA8               	movwf	(_driver_limit+5)& (0+255),b
  5636  002FEE  5102               	movf	(_convert_data+2)& (0+255),w,b
  5637  002FF0  2032               	addwfc	(??_calculatedAverageValue+22)^0,w,c
  5638  002FF2  6FA9               	movwf	(_driver_limit+6)& (0+255),b
  5639  002FF4  5103               	movf	(_convert_data+3)& (0+255),w,b
  5640  002FF6  2033               	addwfc	(??_calculatedAverageValue+23)^0,w,c
  5641  002FF8  6FAA               	movwf	(_driver_limit+7)& (0+255),b
  5642  002FFA                     
  5643                           ; BSR set to: 1
  5644                           ;fs_adc.c: 176:     driver_limit.ortalama = (float)(driver_limit.pay/driver_limit.payda)
      +                          ;
  5645  002FFA  C1A7  F005         	movff	_driver_limit+4,___lldiv@divisor
  5646  002FFE  C1A8  F006         	movff	_driver_limit+5,___lldiv@divisor+1
  5647  003002  C1A9  F007         	movff	_driver_limit+6,___lldiv@divisor+2
  5648  003006  C1AA  F008         	movff	_driver_limit+7,___lldiv@divisor+3
  5649  00300A  C1A3  F001         	movff	_driver_limit,___lldiv@dividend
  5650  00300E  C1A4  F002         	movff	_driver_limit+1,___lldiv@dividend+1
  5651  003012  C1A5  F003         	movff	_driver_limit+2,___lldiv@dividend+2
  5652  003016  C1A6  F004         	movff	_driver_limit+3,___lldiv@dividend+3
  5653  00301A  EC67  F029         	call	___lldiv	;wreg free
  5654  00301E  C001  F00E         	movff	?___lldiv,___xxtofl@val
  5655  003022  C002  F00F         	movff	?___lldiv+1,___xxtofl@val+1
  5656  003026  C003  F010         	movff	?___lldiv+2,___xxtofl@val+2
  5657  00302A  C004  F011         	movff	?___lldiv+3,___xxtofl@val+3
  5658  00302E  0E00               	movlw	0
  5659  003030  ECCF  F01D         	call	___xxtofl
  5660  003034  C00E  F1AB         	movff	?___xxtofl,_driver_limit+8
  5661  003038  C00F  F1AC         	movff	?___xxtofl+1,_driver_limit+9
  5662  00303C  C010  F1AD         	movff	?___xxtofl+2,_driver_limit+10
  5663  003040  C011  F1AE         	movff	?___xxtofl+3,_driver_limit+11
  5664  003044  0012               	return		;funcret
  5665  003046                     __end_of_calculatedAverageValue:
  5666                           	callstack 0
  5667                           
  5668 ;; *************** function ___lmul *****************
  5669 ;; Defined at:
  5670 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul32.c"
  5671 ;; Parameters:    Size  Location     Type
  5672 ;;  multiplier      4    0[COMRAM] unsigned long 
  5673 ;;  multiplicand    4    4[COMRAM] unsigned long 
  5674 ;; Auto vars:     Size  Location     Type
  5675 ;;  product         4    8[COMRAM] unsigned long 
  5676 ;; Return value:  Size  Location     Type
  5677 ;;                  4    0[COMRAM] unsigned long 
  5678 ;; Registers used:
  5679 ;;		wreg, status,2, status,0
  5680 ;; Tracked objects:
  5681 ;;		On entry : 0/0
  5682 ;;		On exit  : 0/0
  5683 ;;		Unchanged: 0/0
  5684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5685 ;;      Params:         8       0       0       0       0       0       0
  5686 ;;      Locals:         4       0       0       0       0       0       0
  5687 ;;      Temps:          0       0       0       0       0       0       0
  5688 ;;      Totals:        12       0       0       0       0       0       0
  5689 ;;Total ram usage:       12 bytes
  5690 ;; Hardware stack levels used:    1
  5691 ;; Hardware stack levels required when called:    1
  5692 ;; This function calls:
  5693 ;;		Nothing
  5694 ;; This function is called by:
  5695 ;;		_calculatedAverageValue
  5696 ;; This function uses a non-reentrant model
  5697 ;;
  5698                           
  5699                           	psect	text19
  5700  0055F0                     __ptext19:
  5701                           	callstack 0
  5702  0055F0                     ___lmul:
  5703                           	callstack 24
  5704  0055F0  0E00               	movlw	0
  5705  0055F2  6E09               	movwf	___lmul@product^0,c
  5706  0055F4  0E00               	movlw	0
  5707  0055F6  6E0A               	movwf	(___lmul@product+1)^0,c
  5708  0055F8  0E00               	movlw	0
  5709  0055FA  6E0B               	movwf	(___lmul@product+2)^0,c
  5710  0055FC  0E00               	movlw	0
  5711  0055FE  6E0C               	movwf	(___lmul@product+3)^0,c
  5712  005600                     l5345:
  5713  005600  A001               	btfss	___lmul@multiplier^0,0,c
  5714  005602  EF05  F02B         	goto	u6441
  5715  005606  EF07  F02B         	goto	u6440
  5716  00560A                     u6441:
  5717  00560A  EF0F  F02B         	goto	l5349
  5718  00560E                     u6440:
  5719  00560E  5005               	movf	___lmul@multiplicand^0,w,c
  5720  005610  2609               	addwf	___lmul@product^0,f,c
  5721  005612  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  5722  005614  220A               	addwfc	(___lmul@product+1)^0,f,c
  5723  005616  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  5724  005618  220B               	addwfc	(___lmul@product+2)^0,f,c
  5725  00561A  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  5726  00561C  220C               	addwfc	(___lmul@product+3)^0,f,c
  5727  00561E                     l5349:
  5728  00561E  90D8               	bcf	status,0,c
  5729  005620  3605               	rlcf	___lmul@multiplicand^0,f,c
  5730  005622  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  5731  005624  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  5732  005626  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  5733  005628  90D8               	bcf	status,0,c
  5734  00562A  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  5735  00562C  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  5736  00562E  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  5737  005630  3201               	rrcf	___lmul@multiplier^0,f,c
  5738  005632  5001               	movf	___lmul@multiplier^0,w,c
  5739  005634  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  5740  005636  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  5741  005638  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  5742  00563A  A4D8               	btfss	status,2,c
  5743  00563C  EF22  F02B         	goto	u6451
  5744  005640  EF24  F02B         	goto	u6450
  5745  005644                     u6451:
  5746  005644  EF00  F02B         	goto	l5345
  5747  005648                     u6450:
  5748  005648  C009  F001         	movff	___lmul@product,?___lmul
  5749  00564C  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  5750  005650  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  5751  005654  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  5752  005658  0012               	return		;funcret
  5753  00565A                     __end_of___lmul:
  5754                           	callstack 0
  5755                           
  5756 ;; *************** function ___lldiv *****************
  5757 ;; Defined at:
  5758 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__lldiv.c"
  5759 ;; Parameters:    Size  Location     Type
  5760 ;;  dividend        4    0[COMRAM] unsigned long 
  5761 ;;  divisor         4    4[COMRAM] unsigned long 
  5762 ;; Auto vars:     Size  Location     Type
  5763 ;;  quotient        4    8[COMRAM] unsigned long 
  5764 ;;  counter         1   12[COMRAM] unsigned char 
  5765 ;; Return value:  Size  Location     Type
  5766 ;;                  4    0[COMRAM] unsigned long 
  5767 ;; Registers used:
  5768 ;;		wreg, status,2, status,0
  5769 ;; Tracked objects:
  5770 ;;		On entry : 0/0
  5771 ;;		On exit  : 0/0
  5772 ;;		Unchanged: 0/0
  5773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5774 ;;      Params:         8       0       0       0       0       0       0
  5775 ;;      Locals:         5       0       0       0       0       0       0
  5776 ;;      Temps:          0       0       0       0       0       0       0
  5777 ;;      Totals:        13       0       0       0       0       0       0
  5778 ;;Total ram usage:       13 bytes
  5779 ;; Hardware stack levels used:    1
  5780 ;; Hardware stack levels required when called:    1
  5781 ;; This function calls:
  5782 ;;		Nothing
  5783 ;; This function is called by:
  5784 ;;		_calculatedAverageValue
  5785 ;; This function uses a non-reentrant model
  5786 ;;
  5787                           
  5788                           	psect	text20
  5789  0052CE                     __ptext20:
  5790                           	callstack 0
  5791  0052CE                     ___lldiv:
  5792                           	callstack 24
  5793  0052CE  0E00               	movlw	0
  5794  0052D0  6E09               	movwf	___lldiv@quotient^0,c
  5795  0052D2  0E00               	movlw	0
  5796  0052D4  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  5797  0052D6  0E00               	movlw	0
  5798  0052D8  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  5799  0052DA  0E00               	movlw	0
  5800  0052DC  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  5801  0052DE  5005               	movf	___lldiv@divisor^0,w,c
  5802  0052E0  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  5803  0052E2  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  5804  0052E4  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  5805  0052E6  B4D8               	btfsc	status,2,c
  5806  0052E8  EF78  F029         	goto	u6461
  5807  0052EC  EF7A  F029         	goto	u6460
  5808  0052F0                     u6461:
  5809  0052F0  EFB0  F029         	goto	l575
  5810  0052F4                     u6460:
  5811  0052F4  0E01               	movlw	1
  5812  0052F6  6E0D               	movwf	___lldiv@counter^0,c
  5813  0052F8  EF84  F029         	goto	l5361
  5814  0052FC                     l5359:
  5815  0052FC  90D8               	bcf	status,0,c
  5816  0052FE  3605               	rlcf	___lldiv@divisor^0,f,c
  5817  005300  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  5818  005302  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  5819  005304  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  5820  005306  2A0D               	incf	___lldiv@counter^0,f,c
  5821  005308                     l5361:
  5822  005308  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  5823  00530A  EF89  F029         	goto	u6471
  5824  00530E  EF8B  F029         	goto	u6470
  5825  005312                     u6471:
  5826  005312  EF7E  F029         	goto	l5359
  5827  005316                     u6470:
  5828  005316                     l5363:
  5829  005316  90D8               	bcf	status,0,c
  5830  005318  3609               	rlcf	___lldiv@quotient^0,f,c
  5831  00531A  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  5832  00531C  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  5833  00531E  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  5834  005320  5005               	movf	___lldiv@divisor^0,w,c
  5835  005322  5C01               	subwf	___lldiv@dividend^0,w,c
  5836  005324  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5837  005326  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  5838  005328  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5839  00532A  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  5840  00532C  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5841  00532E  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  5842  005330  A0D8               	btfss	status,0,c
  5843  005332  EF9D  F029         	goto	u6481
  5844  005336  EF9F  F029         	goto	u6480
  5845  00533A                     u6481:
  5846  00533A  EFA8  F029         	goto	l5371
  5847  00533E                     u6480:
  5848  00533E  5005               	movf	___lldiv@divisor^0,w,c
  5849  005340  5E01               	subwf	___lldiv@dividend^0,f,c
  5850  005342  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5851  005344  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  5852  005346  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5853  005348  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  5854  00534A  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5855  00534C  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  5856  00534E  8009               	bsf	___lldiv@quotient^0,0,c
  5857  005350                     l5371:
  5858  005350  90D8               	bcf	status,0,c
  5859  005352  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  5860  005354  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  5861  005356  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  5862  005358  3205               	rrcf	___lldiv@divisor^0,f,c
  5863  00535A  2E0D               	decfsz	___lldiv@counter^0,f,c
  5864  00535C  EF8B  F029         	goto	l5363
  5865  005360                     l575:
  5866  005360  C009  F001         	movff	___lldiv@quotient,?___lldiv
  5867  005364  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  5868  005368  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  5869  00536C  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  5870  005370  0012               	return		;funcret
  5871  005372                     __end_of___lldiv:
  5872                           	callstack 0
  5873                           
  5874 ;; *************** function _exitLine *****************
  5875 ;; Defined at:
  5876 ;;		line 632 in file "fs_menu_controller.c"
  5877 ;; Parameters:    Size  Location     Type
  5878 ;;		None
  5879 ;; Auto vars:     Size  Location     Type
  5880 ;;		None
  5881 ;; Return value:  Size  Location     Type
  5882 ;;                  1    wreg      void 
  5883 ;; Registers used:
  5884 ;;		None
  5885 ;; Tracked objects:
  5886 ;;		On entry : 0/0
  5887 ;;		On exit  : 0/0
  5888 ;;		Unchanged: 0/0
  5889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5890 ;;      Params:         0       0       0       0       0       0       0
  5891 ;;      Locals:         0       0       0       0       0       0       0
  5892 ;;      Temps:          0       0       0       0       0       0       0
  5893 ;;      Totals:         0       0       0       0       0       0       0
  5894 ;;Total ram usage:        0 bytes
  5895 ;; Hardware stack levels used:    1
  5896 ;; Hardware stack levels required when called:    1
  5897 ;; This function calls:
  5898 ;;		Nothing
  5899 ;; This function is called by:
  5900 ;;		_stateMachine
  5901 ;; This function uses a non-reentrant model
  5902 ;;
  5903                           
  5904                           	psect	text21
  5905  005D8E                     __ptext21:
  5906                           	callstack 0
  5907  005D8E                     _exitLine:
  5908                           	callstack 27
  5909  005D8E  0012               	return		;funcret
  5910  005D90                     __end_of_exitLine:
  5911                           	callstack 0
  5912                           
  5913 ;; *************** function _driverTimeSettingMenu *****************
  5914 ;; Defined at:
  5915 ;;		line 579 in file "fs_menu_controller.c"
  5916 ;; Parameters:    Size  Location     Type
  5917 ;;		None
  5918 ;; Auto vars:     Size  Location     Type
  5919 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  5920 ;; Return value:  Size  Location     Type
  5921 ;;                  1    wreg      void 
  5922 ;; Registers used:
  5923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5924 ;; Tracked objects:
  5925 ;;		On entry : 0/0
  5926 ;;		On exit  : 0/0
  5927 ;;		Unchanged: 0/0
  5928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5929 ;;      Params:         0       0       0       0       0       0       0
  5930 ;;      Locals:         0      16       0       0       0       0       0
  5931 ;;      Temps:          0       0       0       0       0       0       0
  5932 ;;      Totals:         0      16       0       0       0       0       0
  5933 ;;Total ram usage:       16 bytes
  5934 ;; Hardware stack levels used:    1
  5935 ;; Hardware stack levels required when called:    9
  5936 ;; This function calls:
  5937 ;;		_Lcd_Set_Cursor
  5938 ;;		_Lcd_Write_String
  5939 ;;		_eepromWrite
  5940 ;;		_sprintf
  5941 ;;		_stopMotor
  5942 ;; This function is called by:
  5943 ;;		_stateMachine
  5944 ;; This function uses a non-reentrant model
  5945 ;;
  5946                           
  5947                           	psect	text22
  5948  00449C                     __ptext22:
  5949                           	callstack 0
  5950  00449C                     _driverTimeSettingMenu:
  5951                           	callstack 19
  5952  00449C                     
  5953                           ;fs_menu_controller.c: 581:     char textCursor2[16] = {0};
  5954  00449C  EE20  F0E1         	lfsr	2,driverTimeSettingMenu@textCursor2
  5955  0044A0  0E0F               	movlw	15
  5956  0044A2                     u7081:
  5957  0044A2  6ADE               	clrf	postinc2,c
  5958  0044A4  06E8               	decf	wreg,f,c
  5959  0044A6  E2FD               	bc	u7081
  5960  0044A8                     
  5961                           ;fs_menu_controller.c: 583:     stopMotor();
  5962  0044A8  EC41  F02D         	call	_stopMotor	;wreg free
  5963  0044AC                     
  5964                           ;fs_menu_controller.c: 585:     if (menu_flags.menu_input_flag == 1)
  5965  0044AC  0101               	movlb	1	; () banked
  5966  0044AE  05B7               	decf	_menu_flags& (0+255),w,b
  5967  0044B0  A4D8               	btfss	status,2,c
  5968  0044B2  EF5D  F022         	goto	u7091
  5969  0044B6  EF5F  F022         	goto	u7090
  5970  0044BA                     u7091:
  5971  0044BA  EF64  F022         	goto	l5833
  5972  0044BE                     u7090:
  5973  0044BE                     
  5974                           ; BSR set to: 1
  5975                           ;fs_menu_controller.c: 586:     {;fs_menu_controller.c: 587:         menu_flags.menu_inp
      +                          ut_flag = 0;
  5976  0044BE  0E00               	movlw	0
  5977  0044C0  6FB7               	movwf	_menu_flags& (0+255),b
  5978                           
  5979                           ;fs_menu_controller.c: 588:         menu_selected = STOP_TIME_SETTING;
  5980  0044C2  0E02               	movlw	2
  5981  0044C4  0100               	movlb	0	; () banked
  5982  0044C6  6FFA               	movwf	_menu_selected& (0+255),b
  5983  0044C8                     l5833:
  5984                           
  5985                           ;fs_menu_controller.c: 591:     if ((menu_flags.menu_increase_flag == 1) && (menu_value.
      +                          driver_time < 30))
  5986  0044C8  0101               	movlb	1	; () banked
  5987  0044CA  05BB               	decf	(_menu_flags+4)& (0+255),w,b
  5988  0044CC  A4D8               	btfss	status,2,c
  5989  0044CE  EF6B  F022         	goto	u7101
  5990  0044D2  EF6D  F022         	goto	u7100
  5991  0044D6                     u7101:
  5992  0044D6  EF89  F022         	goto	l5851
  5993  0044DA                     u7100:
  5994  0044DA                     
  5995                           ; BSR set to: 1
  5996  0044DA  0E1E               	movlw	30
  5997  0044DC  0100               	movlb	0	; () banked
  5998  0044DE  61F3               	cpfslt	_menu_value& (0+255),b
  5999  0044E0  EF74  F022         	goto	u7111
  6000  0044E4  EF76  F022         	goto	u7110
  6001  0044E8                     u7111:
  6002  0044E8  EF89  F022         	goto	l5851
  6003  0044EC                     u7110:
  6004  0044EC                     
  6005                           ; BSR set to: 0
  6006                           ;fs_menu_controller.c: 592:     {;fs_menu_controller.c: 593:         menu_flags.menu_inc
      +                          rease_flag = 0;
  6007  0044EC  0E00               	movlw	0
  6008  0044EE  0101               	movlb	1	; () banked
  6009  0044F0  6FBB               	movwf	(_menu_flags+4)& (0+255),b
  6010  0044F2                     
  6011                           ; BSR set to: 1
  6012                           ;fs_menu_controller.c: 594:         menu_value.driver_time++;
  6013  0044F2  0100               	movlb	0	; () banked
  6014  0044F4  2BF3               	incf	_menu_value& (0+255),f,b
  6015  0044F6                     
  6016                           ; BSR set to: 0
  6017                           ;fs_menu_controller.c: 595:         eepromWrite(0x00,(uint8_t)menu_value.driver_time);
  6018  0044F6  C0F3  F001         	movff	_menu_value,eepromWrite@data
  6019  0044FA  0E00               	movlw	0
  6020  0044FC  EC1F  F02E         	call	_eepromWrite
  6021  004500                     
  6022                           ;fs_menu_controller.c: 596:         timer_value.minute =0 ;
  6023  004500  0E00               	movlw	0
  6024  004502  0101               	movlb	1	; () banked
  6025  004504  6FB0               	movwf	(_timer_value+1)& (0+255),b
  6026  004506                     
  6027                           ; BSR set to: 1
  6028                           ;fs_menu_controller.c: 597:         timer_value.second = 0;
  6029  004506  0E00               	movlw	0
  6030  004508  6FAF               	movwf	_timer_value& (0+255),b
  6031  00450A                     
  6032                           ; BSR set to: 1
  6033                           ;fs_menu_controller.c: 598:         timer_value.remainingSecond = 0;
  6034  00450A  0E00               	movlw	0
  6035  00450C  6FB1               	movwf	(_timer_value+2)& (0+255),b
  6036  00450E                     
  6037                           ; BSR set to: 1
  6038                           ;fs_menu_controller.c: 599:         timer_value.remainingMinute = menu_value.driver_time
      +                          ;
  6039  00450E  C0F3  F1B2         	movff	_menu_value,_timer_value+3
  6040  004512                     l5851:
  6041                           
  6042                           ;fs_menu_controller.c: 602:     if ((menu_flags.menu_decrease_flag == 1) && (menu_value.
      +                          driver_time > 0))
  6043  004512  0101               	movlb	1	; () banked
  6044  004514  05BC               	decf	(_menu_flags+5)& (0+255),w,b
  6045  004516  A4D8               	btfss	status,2,c
  6046  004518  EF90  F022         	goto	u7121
  6047  00451C  EF92  F022         	goto	u7120
  6048  004520                     u7121:
  6049  004520  EFAE  F022         	goto	l5869
  6050  004524                     u7120:
  6051  004524                     
  6052                           ; BSR set to: 1
  6053  004524  0100               	movlb	0	; () banked
  6054  004526  51F3               	movf	_menu_value& (0+255),w,b
  6055  004528  B4D8               	btfsc	status,2,c
  6056  00452A  EF99  F022         	goto	u7131
  6057  00452E  EF9B  F022         	goto	u7130
  6058  004532                     u7131:
  6059  004532  EFAE  F022         	goto	l5869
  6060  004536                     u7130:
  6061  004536                     
  6062                           ; BSR set to: 0
  6063                           ;fs_menu_controller.c: 603:     {;fs_menu_controller.c: 604:          menu_flags.menu_de
      +                          crease_flag = 0;
  6064  004536  0E00               	movlw	0
  6065  004538  0101               	movlb	1	; () banked
  6066  00453A  6FBC               	movwf	(_menu_flags+5)& (0+255),b
  6067  00453C                     
  6068                           ; BSR set to: 1
  6069                           ;fs_menu_controller.c: 605:          menu_value.driver_time--;
  6070  00453C  0100               	movlb	0	; () banked
  6071  00453E  07F3               	decf	_menu_value& (0+255),f,b
  6072  004540                     
  6073                           ; BSR set to: 0
  6074                           ;fs_menu_controller.c: 606:          eepromWrite(0x00,(uint8_t)menu_value.driver_time);
  6075  004540  C0F3  F001         	movff	_menu_value,eepromWrite@data
  6076  004544  0E00               	movlw	0
  6077  004546  EC1F  F02E         	call	_eepromWrite
  6078  00454A                     
  6079                           ;fs_menu_controller.c: 607:          timer_value.minute =0 ;
  6080  00454A  0E00               	movlw	0
  6081  00454C  0101               	movlb	1	; () banked
  6082  00454E  6FB0               	movwf	(_timer_value+1)& (0+255),b
  6083  004550                     
  6084                           ; BSR set to: 1
  6085                           ;fs_menu_controller.c: 608:          timer_value.second = 0;
  6086  004550  0E00               	movlw	0
  6087  004552  6FAF               	movwf	_timer_value& (0+255),b
  6088  004554                     
  6089                           ; BSR set to: 1
  6090                           ;fs_menu_controller.c: 609:          timer_value.remainingSecond = 0;
  6091  004554  0E00               	movlw	0
  6092  004556  6FB1               	movwf	(_timer_value+2)& (0+255),b
  6093  004558                     
  6094                           ; BSR set to: 1
  6095                           ;fs_menu_controller.c: 610:          timer_value.remainingMinute = menu_value.driver_tim
      +                          e;
  6096  004558  C0F3  F1B2         	movff	_menu_value,_timer_value+3
  6097  00455C                     l5869:
  6098                           
  6099                           ;fs_menu_controller.c: 612:     Lcd_Set_Cursor(1,1);
  6100  00455C  0E01               	movlw	1
  6101  00455E  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  6102  004560  0E01               	movlw	1
  6103  004562  EC62  F02B         	call	_Lcd_Set_Cursor
  6104  004566                     
  6105                           ;fs_menu_controller.c: 613:     Lcd_Write_String("HAREKT ZAMANI dk");
  6106  004566  0E68               	movlw	low STR_15
  6107  004568  6E05               	movwf	Lcd_Write_String@a^0,c
  6108  00456A  0E06               	movlw	high STR_15
  6109  00456C  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  6110  00456E  EC04  F02A         	call	_Lcd_Write_String	;wreg free
  6111  004572                     
  6112                           ;fs_menu_controller.c: 614:     Lcd_Set_Cursor(2,1);
  6113  004572  0E01               	movlw	1
  6114  004574  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  6115  004576  0E02               	movlw	2
  6116  004578  EC62  F02B         	call	_Lcd_Set_Cursor
  6117  00457C                     
  6118                           ;fs_menu_controller.c: 615:     sprintf(textCursor2,"%d               ",menu_value.drive
      +                          r_time);
  6119  00457C  0EE1               	movlw	low driverTimeSettingMenu@textCursor2
  6120  00457E  0100               	movlb	0	; () banked
  6121  004580  6FCF               	movwf	sprintf@s& (0+255),b
  6122  004582  0E00               	movlw	high driverTimeSettingMenu@textCursor2
  6123  004584  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  6124  004586  0E01               	movlw	low STR_12
  6125  004588  6FD1               	movwf	sprintf@fmt& (0+255),b
  6126  00458A  0E06               	movlw	high STR_12
  6127  00458C  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  6128  00458E  C0F3  F0D3         	movff	_menu_value,?_sprintf+4
  6129  004592  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  6130  004594  EC4A  F02C         	call	_sprintf	;wreg free
  6131  004598                     
  6132                           ;fs_menu_controller.c: 616:     Lcd_Write_String(textCursor2);
  6133  004598  0EE1               	movlw	low driverTimeSettingMenu@textCursor2
  6134  00459A  6E05               	movwf	Lcd_Write_String@a^0,c
  6135  00459C  0E00               	movlw	high driverTimeSettingMenu@textCursor2
  6136  00459E  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  6137  0045A0  EC04  F02A         	call	_Lcd_Write_String	;wreg free
  6138  0045A4                     
  6139                           ;fs_menu_controller.c: 618:     if(timer_value.menu_login_delay == 100)
  6140  0045A4  0E64               	movlw	100
  6141  0045A6  0101               	movlb	1	; () banked
  6142  0045A8  19B3               	xorwf	(_timer_value+4)& (0+255),w,b
  6143  0045AA  A4D8               	btfss	status,2,c
  6144  0045AC  EFDA  F022         	goto	u7141
  6145  0045B0  EFDC  F022         	goto	u7140
  6146  0045B4                     u7141:
  6147  0045B4  EFE1  F022         	goto	l437
  6148  0045B8                     u7140:
  6149  0045B8                     
  6150                           ; BSR set to: 1
  6151                           ;fs_menu_controller.c: 619:     {;fs_menu_controller.c: 620:         timer_value.menu_lo
      +                          gin_delay = 0;
  6152  0045B8  0E00               	movlw	0
  6153  0045BA  6FB3               	movwf	(_timer_value+4)& (0+255),b
  6154                           
  6155                           ;fs_menu_controller.c: 621:         menu_selected = PAUSE_MENU;
  6156  0045BC  0E06               	movlw	6
  6157  0045BE  0100               	movlb	0	; () banked
  6158  0045C0  6FFA               	movwf	_menu_selected& (0+255),b
  6159  0045C2                     l437:
  6160  0045C2  0012               	return		;funcret
  6161  0045C4                     __end_of_driverTimeSettingMenu:
  6162                           	callstack 0
  6163                           
  6164 ;; *************** function _stopMotor *****************
  6165 ;; Defined at:
  6166 ;;		line 79 in file "fs_speed_controller.c"
  6167 ;; Parameters:    Size  Location     Type
  6168 ;;		None
  6169 ;; Auto vars:     Size  Location     Type
  6170 ;;		None
  6171 ;; Return value:  Size  Location     Type
  6172 ;;                  1    wreg      void 
  6173 ;; Registers used:
  6174 ;;		wreg, status,2, status,0, cstack
  6175 ;; Tracked objects:
  6176 ;;		On entry : 0/0
  6177 ;;		On exit  : 0/0
  6178 ;;		Unchanged: 0/0
  6179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6180 ;;      Params:         0       0       0       0       0       0       0
  6181 ;;      Locals:         0       0       0       0       0       0       0
  6182 ;;      Temps:          0       0       0       0       0       0       0
  6183 ;;      Totals:         0       0       0       0       0       0       0
  6184 ;;Total ram usage:        0 bytes
  6185 ;; Hardware stack levels used:    1
  6186 ;; Hardware stack levels required when called:    3
  6187 ;; This function calls:
  6188 ;;		_PWM1_setDC
  6189 ;;		_PWM2_setDC
  6190 ;; This function is called by:
  6191 ;;		_stopMenu
  6192 ;;		_pauseMenu
  6193 ;;		_secretMenu
  6194 ;;		_speedLimitSettingMenu
  6195 ;;		_stopTimeSettingMenu
  6196 ;;		_driverTimeSettingMenu
  6197 ;; This function uses a non-reentrant model
  6198 ;;
  6199                           
  6200                           	psect	text23
  6201  005A82                     __ptext23:
  6202                           	callstack 0
  6203  005A82                     _stopMotor:
  6204                           	callstack 24
  6205  005A82                     
  6206                           ;fs_speed_controller.c: 81:     controller.rightMotorSpeed = 0;
  6207  005A82  0E00               	movlw	0
  6208  005A84  0101               	movlb	1	; () banked
  6209  005A86  6F59               	movwf	(_controller+9)& (0+255),b
  6210  005A88  0E00               	movlw	0
  6211  005A8A  6F58               	movwf	(_controller+8)& (0+255),b
  6212                           
  6213                           ;fs_speed_controller.c: 82:     controller.leftMotorSpeed = 0;
  6214  005A8C  0E00               	movlw	0
  6215  005A8E  6F57               	movwf	(_controller+7)& (0+255),b
  6216  005A90  0E00               	movlw	0
  6217  005A92  6F56               	movwf	(_controller+6)& (0+255),b
  6218                           
  6219                           ;fs_speed_controller.c: 83:     driver_limit.ortalama = 0;
  6220  005A94  0E00               	movlw	0
  6221  005A96  6FAB               	movwf	(_driver_limit+8)& (0+255),b
  6222  005A98  0E00               	movlw	0
  6223  005A9A  6FAC               	movwf	(_driver_limit+9)& (0+255),b
  6224  005A9C  0E00               	movlw	0
  6225  005A9E  6FAD               	movwf	(_driver_limit+10)& (0+255),b
  6226  005AA0  0E00               	movlw	0
  6227  005AA2  6FAE               	movwf	(_driver_limit+11)& (0+255),b
  6228  005AA4                     
  6229                           ; BSR set to: 1
  6230                           ;fs_speed_controller.c: 84:     PWM1_setDC(controller.leftMotorSpeed);
  6231  005AA4  C156  F058         	movff	_controller+6,PWM1_setDC@dutycycle
  6232  005AA8  C157  F059         	movff	_controller+7,PWM1_setDC@dutycycle+1
  6233  005AAC  EC80  F02A         	call	_PWM1_setDC	;wreg free
  6234  005AB0                     
  6235                           ;fs_speed_controller.c: 85:     PWM2_setDC(controller.rightMotorSpeed);
  6236  005AB0  C158  F058         	movff	_controller+8,PWM2_setDC@dutycycle
  6237  005AB4  C159  F059         	movff	_controller+9,PWM2_setDC@dutycycle+1
  6238  005AB8  EC43  F02A         	call	_PWM2_setDC	;wreg free
  6239  005ABC  0012               	return		;funcret
  6240  005ABE                     __end_of_stopMotor:
  6241                           	callstack 0
  6242                           
  6243 ;; *************** function _PWM2_setDC *****************
  6244 ;; Defined at:
  6245 ;;		line 59 in file "fs_pwm.c"
  6246 ;; Parameters:    Size  Location     Type
  6247 ;;  dutycycle       2   87[COMRAM] short 
  6248 ;; Auto vars:     Size  Location     Type
  6249 ;;  duty            2   91[COMRAM] unsigned short 
  6250 ;; Return value:  Size  Location     Type
  6251 ;;                  1    wreg      void 
  6252 ;; Registers used:
  6253 ;;		wreg, status,2, status,0, cstack
  6254 ;; Tracked objects:
  6255 ;;		On entry : 0/0
  6256 ;;		On exit  : 0/0
  6257 ;;		Unchanged: 0/0
  6258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6259 ;;      Params:         2       0       0       0       0       0       0
  6260 ;;      Locals:         2       0       0       0       0       0       0
  6261 ;;      Temps:          2       0       0       0       0       0       0
  6262 ;;      Totals:         6       0       0       0       0       0       0
  6263 ;;Total ram usage:        6 bytes
  6264 ;; Hardware stack levels used:    1
  6265 ;; Hardware stack levels required when called:    2
  6266 ;; This function calls:
  6267 ;;		___fltol
  6268 ;;		___xxtofl
  6269 ;;		_fabsf
  6270 ;; This function is called by:
  6271 ;;		_main
  6272 ;;		_stopMotor
  6273 ;;		_startMotor
  6274 ;; This function uses a non-reentrant model
  6275 ;;
  6276                           
  6277                           	psect	text24
  6278  005486                     __ptext24:
  6279                           	callstack 0
  6280  005486                     _PWM2_setDC:
  6281                           	callstack 24
  6282  005486                     
  6283                           ;fs_pwm.c: 63:     if (dutycycle <= 1023)
  6284  005486  BE59               	btfsc	(PWM2_setDC@dutycycle+1)^0,7,c
  6285  005488  EF4F  F02A         	goto	u6810
  6286  00548C  0E04               	movlw	4
  6287  00548E  5C59               	subwf	(PWM2_setDC@dutycycle+1)^0,w,c
  6288  005490  B0D8               	btfsc	status,0,c
  6289  005492  EF4D  F02A         	goto	u6811
  6290  005496  EF4F  F02A         	goto	u6810
  6291  00549A                     u6811:
  6292  00549A  EF7F  F02A         	goto	l469
  6293  00549E                     u6810:
  6294  00549E                     
  6295                           ;fs_pwm.c: 64:     {;fs_pwm.c: 65:         duty = (uint16_t) fabsf(dutycycle);
  6296  00549E  C058  F00E         	movff	PWM2_setDC@dutycycle,___xxtofl@val
  6297  0054A2  C059  F00F         	movff	PWM2_setDC@dutycycle+1,___xxtofl@val+1
  6298  0054A6  0E00               	movlw	0
  6299  0054A8  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  6300  0054AA  0EFF               	movlw	-1
  6301  0054AC  6E10               	movwf	(___xxtofl@val+2)^0,c
  6302  0054AE  6E11               	movwf	(___xxtofl@val+3)^0,c
  6303  0054B0  0E01               	movlw	1
  6304  0054B2  ECCF  F01D         	call	___xxtofl
  6305  0054B6  C00E  F01C         	movff	?___xxtofl,fabsf@x
  6306  0054BA  C00F  F01D         	movff	?___xxtofl+1,fabsf@x+1
  6307  0054BE  C010  F01E         	movff	?___xxtofl+2,fabsf@x+2
  6308  0054C2  C011  F01F         	movff	?___xxtofl+3,fabsf@x+3
  6309  0054C6  EC05  F02E         	call	_fabsf	;wreg free
  6310  0054CA  C01C  F04E         	movff	?_fabsf,___fltol@f1
  6311  0054CE  C01D  F04F         	movff	?_fabsf+1,___fltol@f1+1
  6312  0054D2  C01E  F050         	movff	?_fabsf+2,___fltol@f1+2
  6313  0054D6  C01F  F051         	movff	?_fabsf+3,___fltol@f1+3
  6314  0054DA  ECF6  F023         	call	___fltol	;wreg free
  6315  0054DE  C04E  F05C         	movff	?___fltol,PWM2_setDC@duty
  6316  0054E2  C04F  F05D         	movff	?___fltol+1,PWM2_setDC@duty+1
  6317  0054E6                     
  6318                           ;fs_pwm.c: 66:         CCPR2L = duty>>2;
  6319  0054E6  C05C  F05A         	movff	PWM2_setDC@duty,??_PWM2_setDC
  6320  0054EA  C05D  F05B         	movff	PWM2_setDC@duty+1,??_PWM2_setDC+1
  6321  0054EE  90D8               	bcf	status,0,c
  6322  0054F0  325B               	rrcf	(??_PWM2_setDC+1)^0,f,c
  6323  0054F2  325A               	rrcf	??_PWM2_setDC^0,f,c
  6324  0054F4  90D8               	bcf	status,0,c
  6325  0054F6  325B               	rrcf	(??_PWM2_setDC+1)^0,f,c
  6326  0054F8  325A               	rrcf	??_PWM2_setDC^0,f,c
  6327  0054FA  505A               	movf	??_PWM2_setDC^0,w,c
  6328  0054FC  6E67               	movwf	103,c	;volatile
  6329  0054FE                     l469:
  6330  0054FE  0012               	return		;funcret
  6331  005500                     __end_of_PWM2_setDC:
  6332                           	callstack 0
  6333                           
  6334 ;; *************** function _PWM1_setDC *****************
  6335 ;; Defined at:
  6336 ;;		line 43 in file "fs_pwm.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;  dutycycle       2   87[COMRAM] short 
  6339 ;; Auto vars:     Size  Location     Type
  6340 ;;  duty            2   91[COMRAM] unsigned short 
  6341 ;; Return value:  Size  Location     Type
  6342 ;;                  1    wreg      void 
  6343 ;; Registers used:
  6344 ;;		wreg, status,2, status,0, cstack
  6345 ;; Tracked objects:
  6346 ;;		On entry : 0/0
  6347 ;;		On exit  : 0/0
  6348 ;;		Unchanged: 0/0
  6349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6350 ;;      Params:         2       0       0       0       0       0       0
  6351 ;;      Locals:         2       0       0       0       0       0       0
  6352 ;;      Temps:          2       0       0       0       0       0       0
  6353 ;;      Totals:         6       0       0       0       0       0       0
  6354 ;;Total ram usage:        6 bytes
  6355 ;; Hardware stack levels used:    1
  6356 ;; Hardware stack levels required when called:    2
  6357 ;; This function calls:
  6358 ;;		___fltol
  6359 ;;		___xxtofl
  6360 ;;		_fabsf
  6361 ;; This function is called by:
  6362 ;;		_main
  6363 ;;		_stopMotor
  6364 ;;		_startMotor
  6365 ;; This function uses a non-reentrant model
  6366 ;;
  6367                           
  6368                           	psect	text25
  6369  005500                     __ptext25:
  6370                           	callstack 0
  6371  005500                     _PWM1_setDC:
  6372                           	callstack 24
  6373  005500                     
  6374                           ;fs_pwm.c: 47:     if (dutycycle <= 1023)
  6375  005500  BE59               	btfsc	(PWM1_setDC@dutycycle+1)^0,7,c
  6376  005502  EF8C  F02A         	goto	u6800
  6377  005506  0E04               	movlw	4
  6378  005508  5C59               	subwf	(PWM1_setDC@dutycycle+1)^0,w,c
  6379  00550A  B0D8               	btfsc	status,0,c
  6380  00550C  EF8A  F02A         	goto	u6801
  6381  005510  EF8C  F02A         	goto	u6800
  6382  005514                     u6801:
  6383  005514  EFBC  F02A         	goto	l465
  6384  005518                     u6800:
  6385  005518                     
  6386                           ;fs_pwm.c: 48:     {;fs_pwm.c: 49:         duty = (uint16_t) fabsf(dutycycle);
  6387  005518  C058  F00E         	movff	PWM1_setDC@dutycycle,___xxtofl@val
  6388  00551C  C059  F00F         	movff	PWM1_setDC@dutycycle+1,___xxtofl@val+1
  6389  005520  0E00               	movlw	0
  6390  005522  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  6391  005524  0EFF               	movlw	-1
  6392  005526  6E10               	movwf	(___xxtofl@val+2)^0,c
  6393  005528  6E11               	movwf	(___xxtofl@val+3)^0,c
  6394  00552A  0E01               	movlw	1
  6395  00552C  ECCF  F01D         	call	___xxtofl
  6396  005530  C00E  F01C         	movff	?___xxtofl,fabsf@x
  6397  005534  C00F  F01D         	movff	?___xxtofl+1,fabsf@x+1
  6398  005538  C010  F01E         	movff	?___xxtofl+2,fabsf@x+2
  6399  00553C  C011  F01F         	movff	?___xxtofl+3,fabsf@x+3
  6400  005540  EC05  F02E         	call	_fabsf	;wreg free
  6401  005544  C01C  F04E         	movff	?_fabsf,___fltol@f1
  6402  005548  C01D  F04F         	movff	?_fabsf+1,___fltol@f1+1
  6403  00554C  C01E  F050         	movff	?_fabsf+2,___fltol@f1+2
  6404  005550  C01F  F051         	movff	?_fabsf+3,___fltol@f1+3
  6405  005554  ECF6  F023         	call	___fltol	;wreg free
  6406  005558  C04E  F05C         	movff	?___fltol,PWM1_setDC@duty
  6407  00555C  C04F  F05D         	movff	?___fltol+1,PWM1_setDC@duty+1
  6408  005560                     
  6409                           ;fs_pwm.c: 50:         CCPR1L = duty>>2;
  6410  005560  C05C  F05A         	movff	PWM1_setDC@duty,??_PWM1_setDC
  6411  005564  C05D  F05B         	movff	PWM1_setDC@duty+1,??_PWM1_setDC+1
  6412  005568  90D8               	bcf	status,0,c
  6413  00556A  325B               	rrcf	(??_PWM1_setDC+1)^0,f,c
  6414  00556C  325A               	rrcf	??_PWM1_setDC^0,f,c
  6415  00556E  90D8               	bcf	status,0,c
  6416  005570  325B               	rrcf	(??_PWM1_setDC+1)^0,f,c
  6417  005572  325A               	rrcf	??_PWM1_setDC^0,f,c
  6418  005574  505A               	movf	??_PWM1_setDC^0,w,c
  6419  005576  6EBE               	movwf	190,c	;volatile
  6420  005578                     l465:
  6421  005578  0012               	return		;funcret
  6422  00557A                     __end_of_PWM1_setDC:
  6423                           	callstack 0
  6424                           
  6425 ;; *************** function _fabsf *****************
  6426 ;; Defined at:
  6427 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fabsf.c"
  6428 ;; Parameters:    Size  Location     Type
  6429 ;;  x               4   27[COMRAM] float 
  6430 ;; Auto vars:     Size  Location     Type
  6431 ;;  u               4   31[COMRAM] struct .
  6432 ;; Return value:  Size  Location     Type
  6433 ;;                  4   27[COMRAM] float 
  6434 ;; Registers used:
  6435 ;;		status,2, status,0
  6436 ;; Tracked objects:
  6437 ;;		On entry : 0/0
  6438 ;;		On exit  : 0/0
  6439 ;;		Unchanged: 0/0
  6440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6441 ;;      Params:         4       0       0       0       0       0       0
  6442 ;;      Locals:         4       0       0       0       0       0       0
  6443 ;;      Temps:          0       0       0       0       0       0       0
  6444 ;;      Totals:         8       0       0       0       0       0       0
  6445 ;;Total ram usage:        8 bytes
  6446 ;; Hardware stack levels used:    1
  6447 ;; Hardware stack levels required when called:    1
  6448 ;; This function calls:
  6449 ;;		Nothing
  6450 ;; This function is called by:
  6451 ;;		_PWM1_setDC
  6452 ;;		_PWM2_setDC
  6453 ;; This function uses a non-reentrant model
  6454 ;;
  6455                           
  6456                           	psect	text26
  6457  005C0A                     __ptext26:
  6458                           	callstack 0
  6459  005C0A                     _fabsf:
  6460                           	callstack 24
  6461  005C0A  C1CB  F020         	movff	fabsf@F463,fabsf@u
  6462  005C0E  C1CC  F021         	movff	fabsf@F463+1,fabsf@u+1
  6463  005C12  C1CD  F022         	movff	fabsf@F463+2,fabsf@u+2
  6464  005C16  C1CE  F023         	movff	fabsf@F463+3,fabsf@u+3
  6465  005C1A  C01C  F020         	movff	fabsf@x,fabsf@u
  6466  005C1E  C01D  F021         	movff	fabsf@x+1,fabsf@u+1
  6467  005C22  C01E  F022         	movff	fabsf@x+2,fabsf@u+2
  6468  005C26  C01F  F023         	movff	fabsf@x+3,fabsf@u+3
  6469  005C2A  9E23               	bcf	(fabsf@u+3)^0,7,c
  6470  005C2C  C020  F01C         	movff	fabsf@u,?_fabsf
  6471  005C30  C021  F01D         	movff	fabsf@u+1,?_fabsf+1
  6472  005C34  C022  F01E         	movff	fabsf@u+2,?_fabsf+2
  6473  005C38  C023  F01F         	movff	fabsf@u+3,?_fabsf+3
  6474  005C3C  0012               	return		;funcret
  6475  005C3E                     __end_of_fabsf:
  6476                           	callstack 0
  6477                           
  6478 ;; *************** function ___xxtofl *****************
  6479 ;; Defined at:
  6480 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
  6481 ;; Parameters:    Size  Location     Type
  6482 ;;  sign            1    wreg     unsigned char 
  6483 ;;  val             4   13[COMRAM] long 
  6484 ;; Auto vars:     Size  Location     Type
  6485 ;;  sign            1   21[COMRAM] unsigned char 
  6486 ;;  arg             4   23[COMRAM] unsigned long 
  6487 ;;  exp             1   22[COMRAM] unsigned char 
  6488 ;; Return value:  Size  Location     Type
  6489 ;;                  4   13[COMRAM] unsigned char 
  6490 ;; Registers used:
  6491 ;;		wreg, status,2, status,0
  6492 ;; Tracked objects:
  6493 ;;		On entry : 0/0
  6494 ;;		On exit  : 0/0
  6495 ;;		Unchanged: 0/0
  6496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6497 ;;      Params:         4       0       0       0       0       0       0
  6498 ;;      Locals:         6       0       0       0       0       0       0
  6499 ;;      Temps:          4       0       0       0       0       0       0
  6500 ;;      Totals:        14       0       0       0       0       0       0
  6501 ;;Total ram usage:       14 bytes
  6502 ;; Hardware stack levels used:    1
  6503 ;; Hardware stack levels required when called:    1
  6504 ;; This function calls:
  6505 ;;		Nothing
  6506 ;; This function is called by:
  6507 ;;		_scanAdcConversion
  6508 ;;		_calculatedAverageValue
  6509 ;;		_PWM1_setDC
  6510 ;;		_PWM2_setDC
  6511 ;;		_speedControl
  6512 ;; This function uses a non-reentrant model
  6513 ;;
  6514                           
  6515                           	psect	text27
  6516  003B9E                     __ptext27:
  6517                           	callstack 0
  6518  003B9E                     ___xxtofl:
  6519                           	callstack 24
  6520                           
  6521                           ;incstack = 0
  6522                           ;___xxtofl@sign stored from wreg
  6523  003B9E  6E16               	movwf	___xxtofl@sign^0,c
  6524  003BA0  5016               	movf	___xxtofl@sign^0,w,c
  6525  003BA2  B4D8               	btfsc	status,2,c
  6526  003BA4  EFD6  F01D         	goto	u6491
  6527  003BA8  EFD8  F01D         	goto	u6490
  6528  003BAC                     u6491:
  6529  003BAC  EFFA  F01D         	goto	l1203
  6530  003BB0                     u6490:
  6531  003BB0  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
  6532  003BB2  EFDF  F01D         	goto	u6500
  6533  003BB6  EFDD  F01D         	goto	u6501
  6534  003BBA                     u6501:
  6535  003BBA  EFFA  F01D         	goto	l1203
  6536  003BBE                     u6500:
  6537  003BBE  C00E  F012         	movff	___xxtofl@val,??___xxtofl
  6538  003BC2  C00F  F013         	movff	___xxtofl@val+1,??___xxtofl+1
  6539  003BC6  C010  F014         	movff	___xxtofl@val+2,??___xxtofl+2
  6540  003BCA  C011  F015         	movff	___xxtofl@val+3,??___xxtofl+3
  6541  003BCE  1E12               	comf	??___xxtofl^0,f,c
  6542  003BD0  1E13               	comf	(??___xxtofl+1)^0,f,c
  6543  003BD2  1E14               	comf	(??___xxtofl+2)^0,f,c
  6544  003BD4  1E15               	comf	(??___xxtofl+3)^0,f,c
  6545  003BD6  2A12               	incf	??___xxtofl^0,f,c
  6546  003BD8  0E00               	movlw	0
  6547  003BDA  2213               	addwfc	(??___xxtofl+1)^0,f,c
  6548  003BDC  2214               	addwfc	(??___xxtofl+2)^0,f,c
  6549  003BDE  2215               	addwfc	(??___xxtofl+3)^0,f,c
  6550  003BE0  C012  F018         	movff	??___xxtofl,___xxtofl@arg
  6551  003BE4  C013  F019         	movff	??___xxtofl+1,___xxtofl@arg+1
  6552  003BE8  C014  F01A         	movff	??___xxtofl+2,___xxtofl@arg+2
  6553  003BEC  C015  F01B         	movff	??___xxtofl+3,___xxtofl@arg+3
  6554  003BF0  EF02  F01E         	goto	l5381
  6555  003BF4                     l1203:
  6556  003BF4  C00E  F018         	movff	___xxtofl@val,___xxtofl@arg
  6557  003BF8  C00F  F019         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6558  003BFC  C010  F01A         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6559  003C00  C011  F01B         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6560  003C04                     l5381:
  6561  003C04  500E               	movf	___xxtofl@val^0,w,c
  6562  003C06  100F               	iorwf	(___xxtofl@val+1)^0,w,c
  6563  003C08  1010               	iorwf	(___xxtofl@val+2)^0,w,c
  6564  003C0A  1011               	iorwf	(___xxtofl@val+3)^0,w,c
  6565  003C0C  A4D8               	btfss	status,2,c
  6566  003C0E  EF0B  F01E         	goto	u6511
  6567  003C12  EF0D  F01E         	goto	u6510
  6568  003C16                     u6511:
  6569  003C16  EF17  F01E         	goto	l5387
  6570  003C1A                     u6510:
  6571  003C1A  0E00               	movlw	0
  6572  003C1C  6E0E               	movwf	?___xxtofl^0,c
  6573  003C1E  0E00               	movlw	0
  6574  003C20  6E0F               	movwf	(?___xxtofl+1)^0,c
  6575  003C22  0E00               	movlw	0
  6576  003C24  6E10               	movwf	(?___xxtofl+2)^0,c
  6577  003C26  0E00               	movlw	0
  6578  003C28  6E11               	movwf	(?___xxtofl+3)^0,c
  6579  003C2A  EFA8  F01E         	goto	l1206
  6580  003C2E                     l5387:
  6581  003C2E  0E96               	movlw	150
  6582  003C30  6E17               	movwf	___xxtofl@exp^0,c
  6583  003C32  EF21  F01E         	goto	l5391
  6584  003C36                     l5389:
  6585  003C36  2A17               	incf	___xxtofl@exp^0,f,c
  6586  003C38  90D8               	bcf	status,0,c
  6587  003C3A  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
  6588  003C3C  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
  6589  003C3E  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
  6590  003C40  3218               	rrcf	___xxtofl@arg^0,f,c
  6591  003C42                     l5391:
  6592  003C42  0E00               	movlw	0
  6593  003C44  1418               	andwf	___xxtofl@arg^0,w,c
  6594  003C46  6E12               	movwf	??___xxtofl^0,c
  6595  003C48  0E00               	movlw	0
  6596  003C4A  1419               	andwf	(___xxtofl@arg+1)^0,w,c
  6597  003C4C  6E13               	movwf	(??___xxtofl+1)^0,c
  6598  003C4E  0E00               	movlw	0
  6599  003C50  141A               	andwf	(___xxtofl@arg+2)^0,w,c
  6600  003C52  6E14               	movwf	(??___xxtofl+2)^0,c
  6601  003C54  0EFE               	movlw	254
  6602  003C56  141B               	andwf	(___xxtofl@arg+3)^0,w,c
  6603  003C58  6E15               	movwf	(??___xxtofl+3)^0,c
  6604  003C5A  5012               	movf	??___xxtofl^0,w,c
  6605  003C5C  1013               	iorwf	(??___xxtofl+1)^0,w,c
  6606  003C5E  1014               	iorwf	(??___xxtofl+2)^0,w,c
  6607  003C60  1015               	iorwf	(??___xxtofl+3)^0,w,c
  6608  003C62  A4D8               	btfss	status,2,c
  6609  003C64  EF36  F01E         	goto	u6521
  6610  003C68  EF38  F01E         	goto	u6520
  6611  003C6C                     u6521:
  6612  003C6C  EF1B  F01E         	goto	l5389
  6613  003C70                     u6520:
  6614  003C70  EF46  F01E         	goto	l1210
  6615  003C74                     l5393:
  6616  003C74  2A17               	incf	___xxtofl@exp^0,f,c
  6617  003C76  0E01               	movlw	1
  6618  003C78  2618               	addwf	___xxtofl@arg^0,f,c
  6619  003C7A  0E00               	movlw	0
  6620  003C7C  2219               	addwfc	(___xxtofl@arg+1)^0,f,c
  6621  003C7E  221A               	addwfc	(___xxtofl@arg+2)^0,f,c
  6622  003C80  221B               	addwfc	(___xxtofl@arg+3)^0,f,c
  6623  003C82  90D8               	bcf	status,0,c
  6624  003C84  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
  6625  003C86  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
  6626  003C88  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
  6627  003C8A  3218               	rrcf	___xxtofl@arg^0,f,c
  6628  003C8C                     l1210:
  6629  003C8C  0E00               	movlw	0
  6630  003C8E  1418               	andwf	___xxtofl@arg^0,w,c
  6631  003C90  6E12               	movwf	??___xxtofl^0,c
  6632  003C92  0E00               	movlw	0
  6633  003C94  1419               	andwf	(___xxtofl@arg+1)^0,w,c
  6634  003C96  6E13               	movwf	(??___xxtofl+1)^0,c
  6635  003C98  0E00               	movlw	0
  6636  003C9A  141A               	andwf	(___xxtofl@arg+2)^0,w,c
  6637  003C9C  6E14               	movwf	(??___xxtofl+2)^0,c
  6638  003C9E  0EFF               	movlw	255
  6639  003CA0  141B               	andwf	(___xxtofl@arg+3)^0,w,c
  6640  003CA2  6E15               	movwf	(??___xxtofl+3)^0,c
  6641  003CA4  5012               	movf	??___xxtofl^0,w,c
  6642  003CA6  1013               	iorwf	(??___xxtofl+1)^0,w,c
  6643  003CA8  1014               	iorwf	(??___xxtofl+2)^0,w,c
  6644  003CAA  1015               	iorwf	(??___xxtofl+3)^0,w,c
  6645  003CAC  A4D8               	btfss	status,2,c
  6646  003CAE  EF5B  F01E         	goto	u6531
  6647  003CB2  EF5D  F01E         	goto	u6530
  6648  003CB6                     u6531:
  6649  003CB6  EF3A  F01E         	goto	l5393
  6650  003CBA                     u6530:
  6651  003CBA  EF65  F01E         	goto	l5401
  6652  003CBE                     l5399:
  6653  003CBE  0617               	decf	___xxtofl@exp^0,f,c
  6654  003CC0  90D8               	bcf	status,0,c
  6655  003CC2  3618               	rlcf	___xxtofl@arg^0,f,c
  6656  003CC4  3619               	rlcf	(___xxtofl@arg+1)^0,f,c
  6657  003CC6  361A               	rlcf	(___xxtofl@arg+2)^0,f,c
  6658  003CC8  361B               	rlcf	(___xxtofl@arg+3)^0,f,c
  6659  003CCA                     l5401:
  6660  003CCA  BE1A               	btfsc	(___xxtofl@arg+2)^0,7,c
  6661  003CCC  EF6A  F01E         	goto	u6541
  6662  003CD0  EF6C  F01E         	goto	u6540
  6663  003CD4                     u6541:
  6664  003CD4  EF74  F01E         	goto	l1217
  6665  003CD8                     u6540:
  6666  003CD8  0E02               	movlw	2
  6667  003CDA  6017               	cpfslt	___xxtofl@exp^0,c
  6668  003CDC  EF72  F01E         	goto	u6551
  6669  003CE0  EF74  F01E         	goto	u6550
  6670  003CE4                     u6551:
  6671  003CE4  EF5F  F01E         	goto	l5399
  6672  003CE8                     u6550:
  6673  003CE8                     l1217:
  6674  003CE8  B017               	btfsc	___xxtofl@exp^0,0,c
  6675  003CEA  EF79  F01E         	goto	u6561
  6676  003CEE  EF7B  F01E         	goto	u6560
  6677  003CF2                     u6561:
  6678  003CF2  EF7C  F01E         	goto	l5407
  6679  003CF6                     u6560:
  6680  003CF6  9E1A               	bcf	(___xxtofl@arg+2)^0,7,c
  6681  003CF8                     l5407:
  6682  003CF8  90D8               	bcf	status,0,c
  6683  003CFA  3217               	rrcf	___xxtofl@exp^0,f,c
  6684  003CFC  C017  F012         	movff	___xxtofl@exp,??___xxtofl
  6685  003D00  6A13               	clrf	(??___xxtofl+1)^0,c
  6686  003D02  6A14               	clrf	(??___xxtofl+2)^0,c
  6687  003D04  6A15               	clrf	(??___xxtofl+3)^0,c
  6688  003D06  C012  F015         	movff	??___xxtofl,??___xxtofl+3
  6689  003D0A  6A14               	clrf	(??___xxtofl+2)^0,c
  6690  003D0C  6A13               	clrf	(??___xxtofl+1)^0,c
  6691  003D0E  6A12               	clrf	??___xxtofl^0,c
  6692  003D10  5012               	movf	??___xxtofl^0,w,c
  6693  003D12  1218               	iorwf	___xxtofl@arg^0,f,c
  6694  003D14  5013               	movf	(??___xxtofl+1)^0,w,c
  6695  003D16  1219               	iorwf	(___xxtofl@arg+1)^0,f,c
  6696  003D18  5014               	movf	(??___xxtofl+2)^0,w,c
  6697  003D1A  121A               	iorwf	(___xxtofl@arg+2)^0,f,c
  6698  003D1C  5015               	movf	(??___xxtofl+3)^0,w,c
  6699  003D1E  121B               	iorwf	(___xxtofl@arg+3)^0,f,c
  6700  003D20  5016               	movf	___xxtofl@sign^0,w,c
  6701  003D22  B4D8               	btfsc	status,2,c
  6702  003D24  EF96  F01E         	goto	u6571
  6703  003D28  EF98  F01E         	goto	u6570
  6704  003D2C                     u6571:
  6705  003D2C  EFA0  F01E         	goto	l5417
  6706  003D30                     u6570:
  6707  003D30  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
  6708  003D32  EF9F  F01E         	goto	u6580
  6709  003D36  EF9D  F01E         	goto	u6581
  6710  003D3A                     u6581:
  6711  003D3A  EFA0  F01E         	goto	l5417
  6712  003D3E                     u6580:
  6713  003D3E  8E1B               	bsf	(___xxtofl@arg+3)^0,7,c
  6714  003D40                     l5417:
  6715  003D40  C018  F00E         	movff	___xxtofl@arg,?___xxtofl
  6716  003D44  C019  F00F         	movff	___xxtofl@arg+1,?___xxtofl+1
  6717  003D48  C01A  F010         	movff	___xxtofl@arg+2,?___xxtofl+2
  6718  003D4C  C01B  F011         	movff	___xxtofl@arg+3,?___xxtofl+3
  6719  003D50                     l1206:
  6720  003D50  0012               	return		;funcret
  6721  003D52                     __end_of___xxtofl:
  6722                           	callstack 0
  6723                           
  6724 ;; *************** function _sprintf *****************
  6725 ;; Defined at:
  6726 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  6727 ;; Parameters:    Size  Location     Type
  6728 ;;  s               2  111[BANK0 ] PTR unsigned char 
  6729 ;;		 -> driverTimeSettingMenu@textCursor2(16), stopTimeSettingMenu@textCursor2(16), speedLimitSettingMenu@textCursor2(16
      +), secretMenu@textCursor2(16), 
  6730 ;;		 -> pauseMenu@textCursor2(16), stopMenu@textCursor2(16), mainMenu@textCursor2(16), 
  6731 ;;  fmt             2  113[BANK0 ] PTR const unsigned char 
  6732 ;;		 -> STR_16(18), STR_14(16), STR_12(18), STR_10(13), 
  6733 ;;		 -> STR_8(14), STR_6(16), STR_4(16), STR_2(15), 
  6734 ;; Auto vars:     Size  Location     Type
  6735 ;;  f               6  123[BANK0 ] struct _IO_FILE
  6736 ;;  ap              2  121[BANK0 ] PTR void [1]
  6737 ;;		 -> ?_sprintf(2), 
  6738 ;;  ret             2    0        int 
  6739 ;; Return value:  Size  Location     Type
  6740 ;;                  2  111[BANK0 ] int 
  6741 ;; Registers used:
  6742 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6743 ;; Tracked objects:
  6744 ;;		On entry : 0/0
  6745 ;;		On exit  : 0/0
  6746 ;;		Unchanged: 0/0
  6747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6748 ;;      Params:         0       8       0       0       0       0       0
  6749 ;;      Locals:         0      10       0       0       0       0       0
  6750 ;;      Temps:          0       0       0       0       0       0       0
  6751 ;;      Totals:         0      18       0       0       0       0       0
  6752 ;;Total ram usage:       18 bytes
  6753 ;; Hardware stack levels used:    1
  6754 ;; Hardware stack levels required when called:    8
  6755 ;; This function calls:
  6756 ;;		_vfprintf
  6757 ;; This function is called by:
  6758 ;;		_mainMenu
  6759 ;;		_stopMenu
  6760 ;;		_pauseMenu
  6761 ;;		_secretMenu
  6762 ;;		_speedLimitSettingMenu
  6763 ;;		_stopTimeSettingMenu
  6764 ;;		_driverTimeSettingMenu
  6765 ;; This function uses a non-reentrant model
  6766 ;;
  6767                           
  6768                           	psect	text28
  6769  005894                     __ptext28:
  6770                           	callstack 0
  6771  005894                     _sprintf:
  6772                           	callstack 19
  6773  005894  0ED3               	movlw	low (?_sprintf+4)
  6774  005896  0100               	movlb	0	; () banked
  6775  005898  6FD9               	movwf	sprintf@ap& (0+255),b
  6776  00589A  0E00               	movlw	high (?_sprintf+4)
  6777  00589C  6FDA               	movwf	(sprintf@ap+1)& (0+255),b
  6778  00589E  C0CF  F0DB         	movff	sprintf@s,sprintf@f
  6779  0058A2  C0D0  F0DC         	movff	sprintf@s+1,sprintf@f+1
  6780  0058A6                     
  6781                           ; BSR set to: 0
  6782  0058A6  0E00               	movlw	0
  6783  0058A8  6FDE               	movwf	(sprintf@f+3)& (0+255),b
  6784  0058AA  0E00               	movlw	0
  6785  0058AC  6FDD               	movwf	(sprintf@f+2)& (0+255),b
  6786  0058AE                     
  6787                           ; BSR set to: 0
  6788  0058AE  0E00               	movlw	0
  6789  0058B0  6FE0               	movwf	(sprintf@f+5)& (0+255),b
  6790  0058B2  0E00               	movlw	0
  6791  0058B4  6FDF               	movwf	(sprintf@f+4)& (0+255),b
  6792  0058B6                     
  6793                           ; BSR set to: 0
  6794  0058B6  0EDB               	movlw	low sprintf@f
  6795  0058B8  6FC7               	movwf	vfprintf@fp& (0+255),b
  6796  0058BA  0E00               	movlw	high sprintf@f
  6797  0058BC  6FC8               	movwf	(vfprintf@fp+1)& (0+255),b
  6798  0058BE  C0D1  F0C9         	movff	sprintf@fmt,vfprintf@fmt
  6799  0058C2  C0D2  F0CA         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6800  0058C6  0ED9               	movlw	low sprintf@ap
  6801  0058C8  6FCB               	movwf	vfprintf@ap& (0+255),b
  6802  0058CA  0E00               	movlw	high sprintf@ap
  6803  0058CC  6FCC               	movwf	(vfprintf@ap+1)& (0+255),b
  6804  0058CE  EC2D  F02B         	call	_vfprintf	;wreg free
  6805  0058D2  0100               	movlb	0	; () banked
  6806  0058D4  51DD               	movf	(sprintf@f+2)& (0+255),w,b
  6807  0058D6  25CF               	addwf	sprintf@s& (0+255),w,b
  6808  0058D8  6ED9               	movwf	fsr2l,c
  6809  0058DA  51DE               	movf	(sprintf@f+3)& (0+255),w,b
  6810  0058DC  21D0               	addwfc	(sprintf@s+1)& (0+255),w,b
  6811  0058DE  6EDA               	movwf	fsr2h,c
  6812  0058E0  0E00               	movlw	0
  6813  0058E2  6EDF               	movwf	indf2,c
  6814  0058E4                     
  6815                           ; BSR set to: 0
  6816  0058E4  0012               	return		;funcret
  6817  0058E6                     __end_of_sprintf:
  6818                           	callstack 0
  6819                           
  6820 ;; *************** function _vfprintf *****************
  6821 ;; Defined at:
  6822 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6823 ;; Parameters:    Size  Location     Type
  6824 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  6825 ;;		 -> sprintf@f(6), 
  6826 ;;  fmt             2  105[BANK0 ] PTR const unsigned char 
  6827 ;;		 -> STR_16(18), STR_14(16), STR_12(18), STR_10(13), 
  6828 ;;		 -> STR_8(14), STR_6(16), STR_4(16), STR_2(15), 
  6829 ;;  ap              2  107[BANK0 ] PTR PTR void 
  6830 ;;		 -> sprintf@ap(2), 
  6831 ;; Auto vars:     Size  Location     Type
  6832 ;;  cfmt            2  109[BANK0 ] PTR unsigned char 
  6833 ;;		 -> STR_16(18), STR_14(16), STR_12(18), STR_10(13), 
  6834 ;;		 -> STR_8(14), STR_6(16), STR_4(16), STR_2(15), 
  6835 ;; Return value:  Size  Location     Type
  6836 ;;                  2  103[BANK0 ] int 
  6837 ;; Registers used:
  6838 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6839 ;; Tracked objects:
  6840 ;;		On entry : 0/0
  6841 ;;		On exit  : 0/0
  6842 ;;		Unchanged: 0/0
  6843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6844 ;;      Params:         0       6       0       0       0       0       0
  6845 ;;      Locals:         0       2       0       0       0       0       0
  6846 ;;      Temps:          0       0       0       0       0       0       0
  6847 ;;      Totals:         0       8       0       0       0       0       0
  6848 ;;Total ram usage:        8 bytes
  6849 ;; Hardware stack levels used:    1
  6850 ;; Hardware stack levels required when called:    7
  6851 ;; This function calls:
  6852 ;;		_vfpfcnvrt
  6853 ;; This function is called by:
  6854 ;;		_sprintf
  6855 ;; This function uses a non-reentrant model
  6856 ;;
  6857                           
  6858                           	psect	text29
  6859  00565A                     __ptext29:
  6860                           	callstack 0
  6861  00565A                     _vfprintf:
  6862                           	callstack 19
  6863  00565A                     
  6864                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6865  00565A  C0C9  F0CD         	movff	vfprintf@fmt,vfprintf@cfmt
  6866  00565E  C0CA  F0CE         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6867  005662                     
  6868                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  6869  005662  0E00               	movlw	0
  6870  005664  0101               	movlb	1	; () banked
  6871  005666  6FD0               	movwf	(_nout+1)& (0+255),b
  6872  005668  0E00               	movlw	0
  6873  00566A  6FCF               	movwf	_nout& (0+255),b
  6874                           
  6875                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  6876  00566C  EF4F  F02B         	goto	l5693
  6877  005670                     l5691:
  6878                           
  6879                           ; BSR set to: 1
  6880                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6881  005670  C0C7  F0A7         	movff	vfprintf@fp,vfpfcnvrt@fp
  6882  005674  C0C8  F0A8         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6883  005678  0ECD               	movlw	low vfprintf@cfmt
  6884  00567A  0100               	movlb	0	; () banked
  6885  00567C  6FA9               	movwf	vfpfcnvrt@fmt& (0+255),b
  6886  00567E  0E00               	movlw	high vfprintf@cfmt
  6887  005680  6FAA               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  6888  005682  C0CB  F0AB         	movff	vfprintf@ap,vfpfcnvrt@ap
  6889  005686  C0CC  F0AC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6890  00568A  EC4F  F00D         	call	_vfpfcnvrt	;wreg free
  6891  00568E  0100               	movlb	0	; () banked
  6892  005690  51A7               	movf	?_vfpfcnvrt& (0+255),w,b
  6893  005692  0101               	movlb	1	; () banked
  6894  005694  27CF               	addwf	_nout& (0+255),f,b
  6895  005696  0100               	movlb	0	; () banked
  6896  005698  51A8               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  6897  00569A  0101               	movlb	1	; () banked
  6898  00569C  23D0               	addwfc	(_nout+1)& (0+255),f,b
  6899  00569E                     l5693:
  6900                           
  6901                           ; BSR set to: 1
  6902                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  6903  00569E  C0CD  FFF6         	movff	vfprintf@cfmt,tblptrl
  6904  0056A2  C0CE  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6905  0056A6                     	if	0	;tblptru may be non-zero
  6906  0056A6                     	endif
  6907  0056A6                     	if	0	;tblptru may be non-zero
  6908  0056A6                     	endif
  6909  0056A6  0008               	tblrd		*
  6910  0056A8  50F5               	movf	tablat,w,c
  6911  0056AA  0900               	iorlw	0
  6912  0056AC  A4D8               	btfss	status,2,c
  6913  0056AE  EF5B  F02B         	goto	u6861
  6914  0056B2  EF5D  F02B         	goto	u6860
  6915  0056B6                     u6861:
  6916  0056B6  EF38  F02B         	goto	l5691
  6917  0056BA                     u6860:
  6918  0056BA                     
  6919                           ; BSR set to: 1
  6920                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  6921  0056BA  C1CF  F0C7         	movff	_nout,?_vfprintf
  6922  0056BE  C1D0  F0C8         	movff	_nout+1,?_vfprintf+1
  6923  0056C2                     
  6924                           ; BSR set to: 1
  6925  0056C2  0012               	return		;funcret
  6926  0056C4                     __end_of_vfprintf:
  6927                           	callstack 0
  6928                           
  6929 ;; *************** function _vfpfcnvrt *****************
  6930 ;; Defined at:
  6931 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6932 ;; Parameters:    Size  Location     Type
  6933 ;;  fp              2   71[BANK0 ] PTR struct _IO_FILE
  6934 ;;		 -> sprintf@f(6), 
  6935 ;;  fmt             2   73[BANK0 ] PTR PTR unsigned char 
  6936 ;;		 -> vfprintf@cfmt(2), 
  6937 ;;  ap              2   75[BANK0 ] PTR PTR void 
  6938 ;;		 -> sprintf@ap(2), 
  6939 ;; Auto vars:     Size  Location     Type
  6940 ;;  ll              8   81[BANK0 ] long long 
  6941 ;;  llu             8    0        unsigned long long 
  6942 ;;  f               4   95[BANK0 ] unsigned long long 
  6943 ;;  ct              3   99[BANK0 ] unsigned char [3]
  6944 ;;  vp              3    0        PTR void 
  6945 ;;  cp              3    0        PTR unsigned char 
  6946 ;;  i               2    0        int 
  6947 ;;  done            2    0        int 
  6948 ;;  c               1  102[BANK0 ] unsigned char 
  6949 ;; Return value:  Size  Location     Type
  6950 ;;                  2   71[BANK0 ] int 
  6951 ;; Registers used:
  6952 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6953 ;; Tracked objects:
  6954 ;;		On entry : 0/0
  6955 ;;		On exit  : 0/0
  6956 ;;		Unchanged: 0/0
  6957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6958 ;;      Params:         0       6       0       0       0       0       0
  6959 ;;      Locals:         0      22       0       0       0       0       0
  6960 ;;      Temps:          0       4       0       0       0       0       0
  6961 ;;      Totals:         0      32       0       0       0       0       0
  6962 ;;Total ram usage:       32 bytes
  6963 ;; Hardware stack levels used:    1
  6964 ;; Hardware stack levels required when called:    6
  6965 ;; This function calls:
  6966 ;;		_atoi
  6967 ;;		_dtoa
  6968 ;;		_efgtoa
  6969 ;;		_fputc
  6970 ;;		_isdigit
  6971 ;;		_isupper
  6972 ;;		_strncmp
  6973 ;;		_tolower
  6974 ;; This function is called by:
  6975 ;;		_vfprintf
  6976 ;; This function uses a non-reentrant model
  6977 ;;
  6978                           
  6979                           	psect	text30
  6980  001A9E                     __ptext30:
  6981                           	callstack 0
  6982  001A9E                     _vfpfcnvrt:
  6983                           	callstack 19
  6984  001A9E                     
  6985                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  6986  001A9E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6987  001AA2  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6988  001AA6  CFDE FFF6          	movff	postinc2,tblptrl
  6989  001AAA  CFDD FFF7          	movff	postdec2,tblptrh
  6990  001AAE                     	if	0	;tblptru may be non-zero
  6991  001AAE                     	endif
  6992  001AAE                     	if	0	;tblptru may be non-zero
  6993  001AAE                     	endif
  6994  001AAE  0008               	tblrd		*
  6995  001AB0  50F5               	movf	tablat,w,c
  6996  001AB2  0A25               	xorlw	37
  6997  001AB4  A4D8               	btfss	status,2,c
  6998  001AB6  EF5F  F00D         	goto	u6591
  6999  001ABA  EF61  F00D         	goto	u6590
  7000  001ABE                     u6591:
  7001  001ABE  EF52  F010         	goto	l5531
  7002  001AC2                     u6590:
  7003  001AC2                     
  7004                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  7005  001AC2  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7006  001AC6  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7007  001ACA  2ADE               	incf	postinc2,f,c
  7008  001ACC  0E00               	movlw	0
  7009  001ACE  22DD               	addwfc	postdec2,f,c
  7010  001AD0                     
  7011                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  7012  001AD0  0E00               	movlw	0
  7013  001AD2  0101               	movlb	1	; () banked
  7014  001AD4  6FD2               	movwf	(_width+1)& (0+255),b
  7015  001AD6  0E00               	movlw	0
  7016  001AD8  6FD1               	movwf	_width& (0+255),b
  7017  001ADA  C1D1  F0F8         	movff	_width,_flags
  7018  001ADE  C1D2  F0F9         	movff	_width+1,_flags+1
  7019  001AE2                     
  7020                           ; BSR set to: 1
  7021                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  7022  001AE2  0100               	movlb	0	; () banked
  7023  001AE4  69F6               	setf	_prec& (0+255),b
  7024  001AE6  69F7               	setf	(_prec+1)& (0+255),b
  7025  001AE8                     
  7026                           ; BSR set to: 0
  7027                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  7028  001AE8  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7029  001AEC  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7030  001AF0  CFDE FFF6          	movff	postinc2,tblptrl
  7031  001AF4  CFDD FFF7          	movff	postdec2,tblptrh
  7032  001AF8                     	if	0	;tblptru may be non-zero
  7033  001AF8                     	endif
  7034  001AF8                     	if	0	;tblptru may be non-zero
  7035  001AF8                     	endif
  7036  001AF8  0008               	tblrd		*
  7037  001AFA  50F5               	movf	tablat,w,c
  7038  001AFC  0A2A               	xorlw	42
  7039  001AFE  A4D8               	btfss	status,2,c
  7040  001B00  EF84  F00D         	goto	u6601
  7041  001B04  EF86  F00D         	goto	u6600
  7042  001B08                     u6601:
  7043  001B08  EFB2  F00D         	goto	l5437
  7044  001B0C                     u6600:
  7045  001B0C                     
  7046                           ; BSR set to: 0
  7047                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  7048  001B0C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7049  001B10  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7050  001B14  2ADE               	incf	postinc2,f,c
  7051  001B16  0E00               	movlw	0
  7052  001B18  22DD               	addwfc	postdec2,f,c
  7053                           
  7054                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  7055  001B1A  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7056  001B1E  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7057  001B22  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7058  001B26  0E02               	movlw	2
  7059  001B28  26DE               	addwf	postinc2,f,c
  7060  001B2A  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7061  001B2E  0E00               	movlw	0
  7062  001B30  22DD               	addwfc	postdec2,f,c
  7063  001B32  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7064  001B36  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7065  001B3A  CFDE F1D1          	movff	postinc2,_width
  7066  001B3E  CFDD F1D2          	movff	postdec2,_width+1
  7067  001B42                     
  7068                           ; BSR set to: 0
  7069                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  7070  001B42  0101               	movlb	1	; () banked
  7071  001B44  BFD2               	btfsc	(_width+1)& (0+255),7,b
  7072  001B46  EFA9  F00D         	goto	u6610
  7073  001B4A  EFA7  F00D         	goto	u6611
  7074  001B4E                     u6611:
  7075  001B4E  EFF6  F00D         	goto	l5447
  7076  001B52                     u6610:
  7077  001B52                     
  7078                           ; BSR set to: 1
  7079                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  7080  001B52  0100               	movlb	0	; () banked
  7081  001B54  81F8               	bsf	_flags& (0+255),0,b
  7082                           
  7083                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  7084  001B56  0101               	movlb	1	; () banked
  7085  001B58  6DD1               	negf	_width& (0+255),b
  7086  001B5A  1FD2               	comf	(_width+1)& (0+255),f,b
  7087  001B5C  B0D8               	btfsc	status,0,c
  7088  001B5E  2BD2               	incf	(_width+1)& (0+255),f,b
  7089  001B60  EFF6  F00D         	goto	l5447
  7090  001B64                     l5437:
  7091                           
  7092                           ; BSR set to: 0
  7093                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  7094  001B64  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7095  001B68  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7096  001B6C  CFDE F008          	movff	postinc2,atoi@s
  7097  001B70  CFDD F009          	movff	postdec2,atoi@s+1
  7098  001B74  EC75  F01F         	call	_atoi	;wreg free
  7099  001B78  C008  F1D1         	movff	?_atoi,_width
  7100  001B7C  C009  F1D2         	movff	?_atoi+1,_width+1
  7101                           
  7102                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7103  001B80  EFC9  F00D         	goto	l5441
  7104  001B84                     l5439:
  7105                           
  7106                           ; BSR set to: 0
  7107                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  7108  001B84  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7109  001B88  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7110  001B8C  2ADE               	incf	postinc2,f,c
  7111  001B8E  0E00               	movlw	0
  7112  001B90  22DD               	addwfc	postdec2,f,c
  7113  001B92                     l5441:
  7114  001B92  0ED0               	movlw	208
  7115  001B94  0100               	movlb	0	; () banked
  7116  001B96  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  7117  001B98  0EFF               	movlw	255
  7118  001B9A  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7119  001B9C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7120  001BA0  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7121  001BA4  CFDE FFF6          	movff	postinc2,tblptrl
  7122  001BA8  CFDD FFF7          	movff	postdec2,tblptrh
  7123  001BAC                     	if	0	;tblptru may be non-zero
  7124  001BAC                     	endif
  7125  001BAC                     	if	0	;tblptru may be non-zero
  7126  001BAC                     	endif
  7127  001BAC  0008               	tblrd		*
  7128  001BAE  50F5               	movf	tablat,w,c
  7129  001BB0  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  7130  001BB2  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  7131  001BB4  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  7132  001BB6  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  7133  001BB8  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7134  001BBA  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  7135  001BBC  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  7136  001BBE  E10A               	bnz	u6620
  7137  001BC0  0E0A               	movlw	10
  7138  001BC2  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  7139  001BC4  A0D8               	btfss	status,0,c
  7140  001BC6  EFE7  F00D         	goto	u6621
  7141  001BCA  EFEA  F00D         	goto	u6620
  7142  001BCE                     u6621:
  7143  001BCE  0E01               	movlw	1
  7144  001BD0  EFEB  F00D         	goto	u6630
  7145  001BD4                     u6620:
  7146  001BD4  0E00               	movlw	0
  7147  001BD6                     u6630:
  7148  001BD6  6FB9               	movwf	_vfpfcnvrt$2594& (0+255),b
  7149  001BD8  6BBA               	clrf	(_vfpfcnvrt$2594+1)& (0+255),b
  7150  001BDA                     
  7151                           ; BSR set to: 0
  7152  001BDA  51B9               	movf	_vfpfcnvrt$2594& (0+255),w,b
  7153  001BDC  11BA               	iorwf	(_vfpfcnvrt$2594+1)& (0+255),w,b
  7154  001BDE  A4D8               	btfss	status,2,c
  7155  001BE0  EFF4  F00D         	goto	u6641
  7156  001BE4  EFF6  F00D         	goto	u6640
  7157  001BE8                     u6641:
  7158  001BE8  EFC2  F00D         	goto	l5439
  7159  001BEC                     u6640:
  7160  001BEC                     l5447:
  7161                           
  7162                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  7163  001BEC  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7164  001BF0  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7165  001BF4  CFDE FFF6          	movff	postinc2,tblptrl
  7166  001BF8  CFDD FFF7          	movff	postdec2,tblptrh
  7167  001BFC                     	if	0	;tblptru may be non-zero
  7168  001BFC                     	endif
  7169  001BFC                     	if	0	;tblptru may be non-zero
  7170  001BFC                     	endif
  7171  001BFC  0008               	tblrd		*
  7172  001BFE  50F5               	movf	tablat,w,c
  7173  001C00  0A2E               	xorlw	46
  7174  001C02  A4D8               	btfss	status,2,c
  7175  001C04  EF06  F00E         	goto	u6651
  7176  001C08  EF08  F00E         	goto	u6650
  7177  001C0C                     u6651:
  7178  001C0C  EF87  F00E         	goto	l5467
  7179  001C10                     u6650:
  7180  001C10                     
  7181                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  7182  001C10  0E00               	movlw	0
  7183  001C12  0100               	movlb	0	; () banked
  7184  001C14  6FF7               	movwf	(_prec+1)& (0+255),b
  7185  001C16  0E00               	movlw	0
  7186  001C18  6FF6               	movwf	_prec& (0+255),b
  7187  001C1A                     
  7188                           ; BSR set to: 0
  7189                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  7190  001C1A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7191  001C1E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7192  001C22  2ADE               	incf	postinc2,f,c
  7193  001C24  0E00               	movlw	0
  7194  001C26  22DD               	addwfc	postdec2,f,c
  7195  001C28                     
  7196                           ; BSR set to: 0
  7197                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  7198  001C28  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7199  001C2C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7200  001C30  CFDE FFF6          	movff	postinc2,tblptrl
  7201  001C34  CFDD FFF7          	movff	postdec2,tblptrh
  7202  001C38                     	if	0	;tblptru may be non-zero
  7203  001C38                     	endif
  7204  001C38                     	if	0	;tblptru may be non-zero
  7205  001C38                     	endif
  7206  001C38  0008               	tblrd		*
  7207  001C3A  50F5               	movf	tablat,w,c
  7208  001C3C  0A2A               	xorlw	42
  7209  001C3E  A4D8               	btfss	status,2,c
  7210  001C40  EF24  F00E         	goto	u6661
  7211  001C44  EF26  F00E         	goto	u6660
  7212  001C48                     u6661:
  7213  001C48  EF43  F00E         	goto	l5457
  7214  001C4C                     u6660:
  7215  001C4C                     
  7216                           ; BSR set to: 0
  7217                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  7218  001C4C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7219  001C50  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7220  001C54  2ADE               	incf	postinc2,f,c
  7221  001C56  0E00               	movlw	0
  7222  001C58  22DD               	addwfc	postdec2,f,c
  7223                           
  7224                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  7225  001C5A  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7226  001C5E  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7227  001C62  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7228  001C66  0E02               	movlw	2
  7229  001C68  26DE               	addwf	postinc2,f,c
  7230  001C6A  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7231  001C6E  0E00               	movlw	0
  7232  001C70  22DD               	addwfc	postdec2,f,c
  7233  001C72  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7234  001C76  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7235  001C7A  CFDE F0F6          	movff	postinc2,_prec
  7236  001C7E  CFDD F0F7          	movff	postdec2,_prec+1
  7237                           
  7238                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  7239  001C82  EF87  F00E         	goto	l5467
  7240  001C86                     l5457:
  7241                           
  7242                           ; BSR set to: 0
  7243                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  7244  001C86  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7245  001C8A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7246  001C8E  CFDE F008          	movff	postinc2,atoi@s
  7247  001C92  CFDD F009          	movff	postdec2,atoi@s+1
  7248  001C96  EC75  F01F         	call	_atoi	;wreg free
  7249  001C9A  C008  F0F6         	movff	?_atoi,_prec
  7250  001C9E  C009  F0F7         	movff	?_atoi+1,_prec+1
  7251                           
  7252                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7253  001CA2  EF5A  F00E         	goto	l5461
  7254  001CA6                     l5459:
  7255                           
  7256                           ; BSR set to: 0
  7257                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  7258  001CA6  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7259  001CAA  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7260  001CAE  2ADE               	incf	postinc2,f,c
  7261  001CB0  0E00               	movlw	0
  7262  001CB2  22DD               	addwfc	postdec2,f,c
  7263  001CB4                     l5461:
  7264  001CB4  0ED0               	movlw	208
  7265  001CB6  0100               	movlb	0	; () banked
  7266  001CB8  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  7267  001CBA  0EFF               	movlw	255
  7268  001CBC  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7269  001CBE  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7270  001CC2  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7271  001CC6  CFDE FFF6          	movff	postinc2,tblptrl
  7272  001CCA  CFDD FFF7          	movff	postdec2,tblptrh
  7273  001CCE                     	if	0	;tblptru may be non-zero
  7274  001CCE                     	endif
  7275  001CCE                     	if	0	;tblptru may be non-zero
  7276  001CCE                     	endif
  7277  001CCE  0008               	tblrd		*
  7278  001CD0  50F5               	movf	tablat,w,c
  7279  001CD2  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  7280  001CD4  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  7281  001CD6  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  7282  001CD8  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  7283  001CDA  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7284  001CDC  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  7285  001CDE  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  7286  001CE0  E10A               	bnz	u6670
  7287  001CE2  0E0A               	movlw	10
  7288  001CE4  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  7289  001CE6  A0D8               	btfss	status,0,c
  7290  001CE8  EF78  F00E         	goto	u6671
  7291  001CEC  EF7B  F00E         	goto	u6670
  7292  001CF0                     u6671:
  7293  001CF0  0E01               	movlw	1
  7294  001CF2  EF7C  F00E         	goto	u6680
  7295  001CF6                     u6670:
  7296  001CF6  0E00               	movlw	0
  7297  001CF8                     u6680:
  7298  001CF8  6FBB               	movwf	_vfpfcnvrt$2595& (0+255),b
  7299  001CFA  6BBC               	clrf	(_vfpfcnvrt$2595+1)& (0+255),b
  7300  001CFC                     
  7301                           ; BSR set to: 0
  7302  001CFC  51BB               	movf	_vfpfcnvrt$2595& (0+255),w,b
  7303  001CFE  11BC               	iorwf	(_vfpfcnvrt$2595+1)& (0+255),w,b
  7304  001D00  A4D8               	btfss	status,2,c
  7305  001D02  EF85  F00E         	goto	u6691
  7306  001D06  EF87  F00E         	goto	u6690
  7307  001D0A                     u6691:
  7308  001D0A  EF53  F00E         	goto	l5459
  7309  001D0E                     u6690:
  7310  001D0E                     l5467:
  7311                           
  7312                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0
      +                          ] = tolower((int)(*fmt)[0]);
  7313  001D0E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7314  001D12  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7315  001D16  CFDE FFF6          	movff	postinc2,tblptrl
  7316  001D1A  CFDD FFF7          	movff	postdec2,tblptrh
  7317  001D1E                     	if	0	;tblptru may be non-zero
  7318  001D1E                     	endif
  7319  001D1E                     	if	0	;tblptru may be non-zero
  7320  001D1E                     	endif
  7321  001D1E  0008               	tblrd		*
  7322  001D20  50F5               	movf	tablat,w,c
  7323  001D22  6E07               	movwf	tolower@c^0,c
  7324  001D24  6A08               	clrf	(tolower@c+1)^0,c
  7325  001D26  EC95  F02B         	call	_tolower	;wreg free
  7326  001D2A  5007               	movf	?_tolower^0,w,c
  7327  001D2C  0100               	movlb	0	; () banked
  7328  001D2E  6FC3               	movwf	vfpfcnvrt@ct& (0+255),b
  7329  001D30                     
  7330                           ; BSR set to: 0
  7331                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (
      +                          ct[0]) {
  7332  001D30  51C3               	movf	vfpfcnvrt@ct& (0+255),w,b
  7333  001D32  B4D8               	btfsc	status,2,c
  7334  001D34  EF9E  F00E         	goto	u6701
  7335  001D38  EFA0  F00E         	goto	u6700
  7336  001D3C                     u6701:
  7337  001D3C  EFDA  F00E         	goto	l5477
  7338  001D40                     u6700:
  7339  001D40                     
  7340                           ; BSR set to: 0
  7341                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             
      +                          ct[1] = tolower((int)(*fmt)[1]);
  7342  001D40  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7343  001D44  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7344  001D48  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  7345  001D4C  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  7346  001D50  0E01               	movlw	1
  7347  001D52  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  7348  001D54  0E00               	movlw	0
  7349  001D56  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  7350  001D58  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  7351  001D5C  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  7352  001D60                     	if	0	;tblptru may be non-zero
  7353  001D60                     	endif
  7354  001D60                     	if	0	;tblptru may be non-zero
  7355  001D60                     	endif
  7356  001D60  0008               	tblrd		*
  7357  001D62  50F5               	movf	tablat,w,c
  7358  001D64  6E07               	movwf	tolower@c^0,c
  7359  001D66  6A08               	clrf	(tolower@c+1)^0,c
  7360  001D68  EC95  F02B         	call	_tolower	;wreg free
  7361  001D6C  5007               	movf	?_tolower^0,w,c
  7362  001D6E  0100               	movlb	0	; () banked
  7363  001D70  6FC4               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  7364  001D72                     
  7365                           ; BSR set to: 0
  7366                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             
      +                          if (ct[1]) {
  7367  001D72  51C4               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  7368  001D74  B4D8               	btfsc	status,2,c
  7369  001D76  EFBF  F00E         	goto	u6711
  7370  001D7A  EFC1  F00E         	goto	u6710
  7371  001D7E                     u6711:
  7372  001D7E  EFDA  F00E         	goto	l5477
  7373  001D82                     u6710:
  7374  001D82                     
  7375                           ; BSR set to: 0
  7376                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:             
      +                              ct[2] = tolower((int)(*fmt)[2]);
  7377  001D82  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7378  001D86  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7379  001D8A  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  7380  001D8E  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  7381  001D92  0E02               	movlw	2
  7382  001D94  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  7383  001D96  0E00               	movlw	0
  7384  001D98  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  7385  001D9A  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  7386  001D9E  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  7387  001DA2                     	if	0	;tblptru may be non-zero
  7388  001DA2                     	endif
  7389  001DA2                     	if	0	;tblptru may be non-zero
  7390  001DA2                     	endif
  7391  001DA2  0008               	tblrd		*
  7392  001DA4  50F5               	movf	tablat,w,c
  7393  001DA6  6E07               	movwf	tolower@c^0,c
  7394  001DA8  6A08               	clrf	(tolower@c+1)^0,c
  7395  001DAA  EC95  F02B         	call	_tolower	;wreg free
  7396  001DAE  5007               	movf	?_tolower^0,w,c
  7397  001DB0  0100               	movlb	0	; () banked
  7398  001DB2  6FC5               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  7399  001DB4                     l5477:
  7400                           
  7401                           ; BSR set to: 0
  7402                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  7403  001DB4  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7404  001DB8  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7405  001DBC  CFDE FFF6          	movff	postinc2,tblptrl
  7406  001DC0  CFDD FFF7          	movff	postdec2,tblptrh
  7407  001DC4                     	if	0	;tblptru may be non-zero
  7408  001DC4                     	endif
  7409  001DC4                     	if	0	;tblptru may be non-zero
  7410  001DC4                     	endif
  7411  001DC4  0008               	tblrd		*
  7412  001DC6  50F5               	movf	tablat,w,c
  7413  001DC8  0A64               	xorlw	100
  7414  001DCA  B4D8               	btfsc	status,2,c
  7415  001DCC  EFEA  F00E         	goto	u6721
  7416  001DD0  EFEC  F00E         	goto	u6720
  7417  001DD4                     u6721:
  7418  001DD4  EFFE  F00E         	goto	l5481
  7419  001DD8                     u6720:
  7420  001DD8                     
  7421                           ; BSR set to: 0
  7422  001DD8  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7423  001DDC  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7424  001DE0  CFDE FFF6          	movff	postinc2,tblptrl
  7425  001DE4  CFDD FFF7          	movff	postdec2,tblptrh
  7426  001DE8                     	if	0	;tblptru may be non-zero
  7427  001DE8                     	endif
  7428  001DE8                     	if	0	;tblptru may be non-zero
  7429  001DE8                     	endif
  7430  001DE8  0008               	tblrd		*
  7431  001DEA  50F5               	movf	tablat,w,c
  7432  001DEC  0A69               	xorlw	105
  7433  001DEE  A4D8               	btfss	status,2,c
  7434  001DF0  EFFC  F00E         	goto	u6731
  7435  001DF4  EFFE  F00E         	goto	u6730
  7436  001DF8                     u6731:
  7437  001DF8  EF3E  F00F         	goto	l5487
  7438  001DFC                     u6730:
  7439  001DFC                     l5481:
  7440                           
  7441                           ; BSR set to: 0
  7442                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  7443  001DFC  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7444  001E00  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7445  001E04  2ADE               	incf	postinc2,f,c
  7446  001E06  0E00               	movlw	0
  7447  001E08  22DD               	addwfc	postdec2,f,c
  7448                           
  7449                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  7450  001E0A  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7451  001E0E  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7452  001E12  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7453  001E16  0E02               	movlw	2
  7454  001E18  26DE               	addwf	postinc2,f,c
  7455  001E1A  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7456  001E1E  0E00               	movlw	0
  7457  001E20  22DD               	addwfc	postdec2,f,c
  7458  001E22  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7459  001E26  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7460  001E2A  CFDE F0B1          	movff	postinc2,vfpfcnvrt@ll
  7461  001E2E  CFDD F0B2          	movff	postdec2,vfpfcnvrt@ll+1
  7462  001E32  0E00               	movlw	0
  7463  001E34  BFB2               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  7464  001E36  0EFF               	movlw	-1
  7465  001E38  6FB3               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  7466  001E3A  6FB4               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  7467  001E3C  6FB5               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  7468  001E3E  6FB6               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  7469  001E40  6FB7               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  7470  001E42  6FB8               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  7471  001E44                     
  7472                           ; BSR set to: 0
  7473                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  7474  001E44  C0A7  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  7475  001E48  C0A8  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  7476  001E4C  C0B1  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  7477  001E50  C0B2  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  7478  001E54  C0B3  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  7479  001E58  C0B4  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  7480  001E5C  C0B5  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  7481  001E60  C0B6  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  7482  001E64  C0B7  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  7483  001E68  C0B8  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  7484  001E6C  EC23  F018         	call	_dtoa	;wreg free
  7485  001E70  C01C  F0A7         	movff	?_dtoa,?_vfpfcnvrt
  7486  001E74  C01D  F0A8         	movff	?_dtoa+1,?_vfpfcnvrt+1
  7487  001E78  EF6D  F010         	goto	l1425
  7488  001E7C                     l5487:
  7489                           
  7490                           ; BSR set to: 0
  7491                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (
      +                          ct[0] == 'f') {
  7492  001E7C  0E66               	movlw	102
  7493  001E7E  19C3               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  7494  001E80  A4D8               	btfss	status,2,c
  7495  001E82  EF45  F00F         	goto	u6741
  7496  001E86  EF47  F00F         	goto	u6740
  7497  001E8A                     u6741:
  7498  001E8A  EF87  F00F         	goto	l5499
  7499  001E8E                     u6740:
  7500  001E8E                     
  7501                           ; BSR set to: 0
  7502                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             
      +                          c = (*fmt)[0];
  7503  001E8E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7504  001E92  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7505  001E96  CFDE FFF6          	movff	postinc2,tblptrl
  7506  001E9A  CFDD FFF7          	movff	postdec2,tblptrh
  7507  001E9E                     	if	0	;tblptru may be non-zero
  7508  001E9E                     	endif
  7509  001E9E                     	if	0	;tblptru may be non-zero
  7510  001E9E                     	endif
  7511  001E9E  0008               	tblrd		*
  7512  001EA0  CFF5 F0C6          	movff	tablat,vfpfcnvrt@c
  7513  001EA4                     
  7514                           ; BSR set to: 0
  7515                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             
      +                          ++*fmt;
  7516  001EA4  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7517  001EA8  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7518  001EAC  2ADE               	incf	postinc2,f,c
  7519  001EAE  0E00               	movlw	0
  7520  001EB0  22DD               	addwfc	postdec2,f,c
  7521  001EB2                     
  7522                           ; BSR set to: 0
  7523                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  7524  001EB2  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7525  001EB6  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7526  001EBA  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7527  001EBE  0E04               	movlw	4
  7528  001EC0  26DE               	addwf	postinc2,f,c
  7529  001EC2  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7530  001EC6  0E00               	movlw	0
  7531  001EC8  22DD               	addwfc	postdec2,f,c
  7532  001ECA  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7533  001ECE  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7534  001ED2  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  7535  001ED6  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  7536  001EDA  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  7537  001EDE  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  7538  001EE2                     l5495:
  7539                           
  7540                           ; BSR set to: 0
  7541                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             
      +                          return efgtoa(fp, f, c);
  7542  001EE2  C0A7  F058         	movff	vfpfcnvrt@fp,efgtoa@fp
  7543  001EE6  C0A8  F059         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  7544  001EEA  C0BF  F05A         	movff	vfpfcnvrt@f,efgtoa@f
  7545  001EEE  C0C0  F05B         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  7546  001EF2  C0C1  F05C         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  7547  001EF6  C0C2  F05D         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  7548  001EFA  C0C6  F05E         	movff	vfpfcnvrt@c,efgtoa@c
  7549  001EFE  EC74  F003         	call	_efgtoa	;wreg free
  7550  001F02  C058  F0A7         	movff	?_efgtoa,?_vfpfcnvrt
  7551  001F06  C059  F0A8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  7552  001F0A  EF6D  F010         	goto	l1425
  7553  001F0E                     l5499:
  7554                           
  7555                           ; BSR set to: 0
  7556                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  7557  001F0E  0EC3               	movlw	low vfpfcnvrt@ct
  7558  001F10  6E01               	movwf	strncmp@_l^0,c
  7559  001F12  0E00               	movlw	high vfpfcnvrt@ct
  7560  001F14  6E02               	movwf	(strncmp@_l+1)^0,c
  7561  001F16  0EE4               	movlw	low STR_25
  7562  001F18  6E03               	movwf	strncmp@_r^0,c
  7563  001F1A  0E06               	movlw	high STR_25
  7564  001F1C  6E04               	movwf	(strncmp@_r+1)^0,c
  7565  001F1E  0E00               	movlw	0
  7566  001F20  6E06               	movwf	(strncmp@n+1)^0,c
  7567  001F22  0E02               	movlw	2
  7568  001F24  6E05               	movwf	strncmp@n^0,c
  7569  001F26  ECFC  F025         	call	_strncmp	;wreg free
  7570  001F2A  5001               	movf	?_strncmp^0,w,c
  7571  001F2C  1002               	iorwf	(?_strncmp+1)^0,w,c
  7572  001F2E  A4D8               	btfss	status,2,c
  7573  001F30  EF9C  F00F         	goto	u6751
  7574  001F34  EF9E  F00F         	goto	u6750
  7575  001F38                     u6751:
  7576  001F38  EF1A  F010         	goto	l5515
  7577  001F3C                     u6750:
  7578  001F3C                     
  7579                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  7580  001F3C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7581  001F40  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7582  001F44  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  7583  001F48  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  7584  001F4C  0E01               	movlw	1
  7585  001F4E  0100               	movlb	0	; () banked
  7586  001F50  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  7587  001F52  0E00               	movlw	0
  7588  001F54  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  7589  001F56  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  7590  001F5A  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  7591  001F5E                     	if	0	;tblptru may be non-zero
  7592  001F5E                     	endif
  7593  001F5E                     	if	0	;tblptru may be non-zero
  7594  001F5E                     	endif
  7595  001F5E  0008               	tblrd		*
  7596  001F60  CFF5 F0C6          	movff	tablat,vfpfcnvrt@c
  7597  001F64  0EBF               	movlw	191
  7598  001F66  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  7599  001F68  0EFF               	movlw	255
  7600  001F6A  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7601  001F6C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7602  001F70  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7603  001F74  CFDE FFF6          	movff	postinc2,tblptrl
  7604  001F78  CFDD FFF7          	movff	postdec2,tblptrh
  7605  001F7C                     	if	0	;tblptru may be non-zero
  7606  001F7C                     	endif
  7607  001F7C                     	if	0	;tblptru may be non-zero
  7608  001F7C                     	endif
  7609  001F7C  0008               	tblrd		*
  7610  001F7E  50F5               	movf	tablat,w,c
  7611  001F80  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  7612  001F82  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  7613  001F84  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  7614  001F86  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  7615  001F88  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7616  001F8A  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  7617  001F8C  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  7618  001F8E  E10A               	bnz	u6760
  7619  001F90  0E1A               	movlw	26
  7620  001F92  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  7621  001F94  A0D8               	btfss	status,0,c
  7622  001F96  EFCF  F00F         	goto	u6761
  7623  001F9A  EFD2  F00F         	goto	u6760
  7624  001F9E                     u6761:
  7625  001F9E  0E01               	movlw	1
  7626  001FA0  EFD3  F00F         	goto	u6770
  7627  001FA4                     u6760:
  7628  001FA4  0E00               	movlw	0
  7629  001FA6                     u6770:
  7630  001FA6  6FBD               	movwf	_vfpfcnvrt$2600& (0+255),b
  7631  001FA8  6BBE               	clrf	(_vfpfcnvrt$2600+1)& (0+255),b
  7632  001FAA                     
  7633                           ; BSR set to: 0
  7634  001FAA  51BD               	movf	_vfpfcnvrt$2600& (0+255),w,b
  7635  001FAC  11BE               	iorwf	(_vfpfcnvrt$2600+1)& (0+255),w,b
  7636  001FAE  B4D8               	btfsc	status,2,c
  7637  001FB0  EFDC  F00F         	goto	u6781
  7638  001FB4  EFDE  F00F         	goto	u6780
  7639  001FB8                     u6781:
  7640  001FB8  EFF8  F00F         	goto	l5509
  7641  001FBC                     u6780:
  7642  001FBC                     
  7643                           ; BSR set to: 0
  7644                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  7645  001FBC  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7646  001FC0  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7647  001FC4  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7648  001FC8  0E04               	movlw	4
  7649  001FCA  26DE               	addwf	postinc2,f,c
  7650  001FCC  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7651  001FD0  0E00               	movlw	0
  7652  001FD2  22DD               	addwfc	postdec2,f,c
  7653  001FD4  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7654  001FD8  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7655  001FDC  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  7656  001FE0  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  7657  001FE4  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  7658  001FE8  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  7659                           
  7660                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             
      +                          } else {
  7661  001FEC  EF10  F010         	goto	l1433
  7662  001FF0                     l5509:
  7663                           
  7664                           ; BSR set to: 0
  7665                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  7666  001FF0  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7667  001FF4  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7668  001FF8  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7669  001FFC  0E04               	movlw	4
  7670  001FFE  26DE               	addwf	postinc2,f,c
  7671  002000  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7672  002004  0E00               	movlw	0
  7673  002006  22DD               	addwfc	postdec2,f,c
  7674  002008  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7675  00200C  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7676  002010  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  7677  002014  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  7678  002018  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  7679  00201C  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  7680  002020                     l1433:
  7681                           
  7682                           ; BSR set to: 0
  7683                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  7684  002020  0E02               	movlw	2
  7685  002022  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7686  002026  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7687  00202A  26DE               	addwf	postinc2,f,c
  7688  00202C  0E00               	movlw	0
  7689  00202E  22DD               	addwfc	postdec2,f,c
  7690  002030  EF71  F00F         	goto	l5495
  7691  002034                     l5515:
  7692                           
  7693                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  7694  002034  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7695  002038  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7696  00203C  CFDE FFF6          	movff	postinc2,tblptrl
  7697  002040  CFDD FFF7          	movff	postdec2,tblptrh
  7698  002044                     	if	0	;tblptru may be non-zero
  7699  002044                     	endif
  7700  002044                     	if	0	;tblptru may be non-zero
  7701  002044                     	endif
  7702  002044  0008               	tblrd		*
  7703  002046  50F5               	movf	tablat,w,c
  7704  002048  0A25               	xorlw	37
  7705  00204A  A4D8               	btfss	status,2,c
  7706  00204C  EF2A  F010         	goto	u6791
  7707  002050  EF2C  F010         	goto	u6790
  7708  002054                     u6791:
  7709  002054  EF44  F010         	goto	l5525
  7710  002058                     u6790:
  7711  002058                     
  7712                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  7713  002058  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7714  00205C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7715  002060  2ADE               	incf	postinc2,f,c
  7716  002062  0E00               	movlw	0
  7717  002064  22DD               	addwfc	postdec2,f,c
  7718  002066                     
  7719                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  7720  002066  0E00               	movlw	0
  7721  002068  6E02               	movwf	(fputc@c+1)^0,c
  7722  00206A  0E25               	movlw	37
  7723  00206C  6E01               	movwf	fputc@c^0,c
  7724  00206E  C0A7  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7725  002072  C0A8  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7726  002076  EC37  F027         	call	_fputc	;wreg free
  7727  00207A                     l5521:
  7728                           
  7729                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  7730  00207A  0E00               	movlw	0
  7731  00207C  0100               	movlb	0	; () banked
  7732  00207E  6FA8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7733  002080  0E01               	movlw	1
  7734  002082  6FA7               	movwf	?_vfpfcnvrt& (0+255),b
  7735  002084  EF6D  F010         	goto	l1425
  7736  002088                     l5525:
  7737                           
  7738                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  7739  002088  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7740  00208C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7741  002090  2ADE               	incf	postinc2,f,c
  7742  002092  0E00               	movlw	0
  7743  002094  22DD               	addwfc	postdec2,f,c
  7744  002096                     
  7745                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  7746  002096  0E00               	movlw	0
  7747  002098  0100               	movlb	0	; () banked
  7748  00209A  6FA8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7749  00209C  0E00               	movlw	0
  7750  00209E  6FA7               	movwf	?_vfpfcnvrt& (0+255),b
  7751  0020A0  EF6D  F010         	goto	l1425
  7752  0020A4                     l5531:
  7753                           
  7754                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  7755  0020A4  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7756  0020A8  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7757  0020AC  CFDE FFF6          	movff	postinc2,tblptrl
  7758  0020B0  CFDD FFF7          	movff	postdec2,tblptrh
  7759  0020B4                     	if	0	;tblptru may be non-zero
  7760  0020B4                     	endif
  7761  0020B4                     	if	0	;tblptru may be non-zero
  7762  0020B4                     	endif
  7763  0020B4  0008               	tblrd		*
  7764  0020B6  50F5               	movf	tablat,w,c
  7765  0020B8  6E01               	movwf	fputc@c^0,c
  7766  0020BA  6A02               	clrf	(fputc@c+1)^0,c
  7767  0020BC  C0A7  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7768  0020C0  C0A8  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7769  0020C4  EC37  F027         	call	_fputc	;wreg free
  7770  0020C8                     
  7771                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  7772  0020C8  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7773  0020CC  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7774  0020D0  2ADE               	incf	postinc2,f,c
  7775  0020D2  0E00               	movlw	0
  7776  0020D4  22DD               	addwfc	postdec2,f,c
  7777  0020D6  EF3D  F010         	goto	l5521
  7778  0020DA                     l1425:
  7779  0020DA  0012               	return		;funcret
  7780  0020DC                     __end_of_vfpfcnvrt:
  7781                           	callstack 0
  7782                           
  7783 ;; *************** function _strncmp *****************
  7784 ;; Defined at:
  7785 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  7786 ;; Parameters:    Size  Location     Type
  7787 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  7788 ;;		 -> vfpfcnvrt@ct(3), 
  7789 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  7790 ;;		 -> STR_27(3), 
  7791 ;;  n               2    4[COMRAM] unsigned int 
  7792 ;; Auto vars:     Size  Location     Type
  7793 ;;  r               2    9[COMRAM] PTR const unsigned char 
  7794 ;;		 -> STR_27(3), 
  7795 ;;  l               2    7[COMRAM] PTR const unsigned char 
  7796 ;;		 -> vfpfcnvrt@ct(3), 
  7797 ;; Return value:  Size  Location     Type
  7798 ;;                  2    0[COMRAM] int 
  7799 ;; Registers used:
  7800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7801 ;; Tracked objects:
  7802 ;;		On entry : 0/0
  7803 ;;		On exit  : 0/0
  7804 ;;		Unchanged: 0/0
  7805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7806 ;;      Params:         6       0       0       0       0       0       0
  7807 ;;      Locals:         4       0       0       0       0       0       0
  7808 ;;      Temps:          1       0       0       0       0       0       0
  7809 ;;      Totals:        11       0       0       0       0       0       0
  7810 ;;Total ram usage:       11 bytes
  7811 ;; Hardware stack levels used:    1
  7812 ;; Hardware stack levels required when called:    1
  7813 ;; This function calls:
  7814 ;;		Nothing
  7815 ;; This function is called by:
  7816 ;;		_vfpfcnvrt
  7817 ;; This function uses a non-reentrant model
  7818 ;;
  7819                           
  7820                           	psect	text31
  7821  004BF8                     __ptext31:
  7822                           	callstack 0
  7823  004BF8                     _strncmp:
  7824                           	callstack 23
  7825  004BF8  C001  F008         	movff	strncmp@_l,strncmp@l
  7826  004BFC  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  7827  004C00  C003  F00A         	movff	strncmp@_r,strncmp@r
  7828  004C04  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  7829  004C08  0605               	decf	strncmp@n^0,f,c
  7830  004C0A  A0D8               	btfss	status,0,c
  7831  004C0C  0606               	decf	(strncmp@n+1)^0,f,c
  7832  004C0E  2805               	incf	strncmp@n^0,w,c
  7833  004C10  E106               	bnz	u6341
  7834  004C12  2806               	incf	(strncmp@n+1)^0,w,c
  7835  004C14  A4D8               	btfss	status,2,c
  7836  004C16  EF0F  F026         	goto	u6341
  7837  004C1A  EF11  F026         	goto	u6340
  7838  004C1E                     u6341:
  7839  004C1E  EF1E  F026         	goto	l5293
  7840  004C22                     u6340:
  7841  004C22  0E00               	movlw	0
  7842  004C24  6E02               	movwf	(?_strncmp+1)^0,c
  7843  004C26  0E00               	movlw	0
  7844  004C28  6E01               	movwf	?_strncmp^0,c
  7845  004C2A  EF66  F026         	goto	l1561
  7846  004C2E                     l5291:
  7847  004C2E  4A08               	infsnz	strncmp@l^0,f,c
  7848  004C30  2A09               	incf	(strncmp@l+1)^0,f,c
  7849  004C32  4A0A               	infsnz	strncmp@r^0,f,c
  7850  004C34  2A0B               	incf	(strncmp@r+1)^0,f,c
  7851  004C36  0605               	decf	strncmp@n^0,f,c
  7852  004C38  A0D8               	btfss	status,0,c
  7853  004C3A  0606               	decf	(strncmp@n+1)^0,f,c
  7854  004C3C                     l5293:
  7855  004C3C  C008  FFD9         	movff	strncmp@l,fsr2l
  7856  004C40  C009  FFDA         	movff	strncmp@l+1,fsr2h
  7857  004C44  50DF               	movf	indf2,w,c
  7858  004C46  B4D8               	btfsc	status,2,c
  7859  004C48  EF28  F026         	goto	u6351
  7860  004C4C  EF2A  F026         	goto	u6350
  7861  004C50                     u6351:
  7862  004C50  EF55  F026         	goto	l5301
  7863  004C54                     u6350:
  7864  004C54  C00A  FFF6         	movff	strncmp@r,tblptrl
  7865  004C58  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7866  004C5C                     	if	0	;tblptru may be non-zero
  7867  004C5C                     	endif
  7868  004C5C                     	if	0	;tblptru may be non-zero
  7869  004C5C                     	endif
  7870  004C5C  0008               	tblrd		*
  7871  004C5E  50F5               	movf	tablat,w,c
  7872  004C60  0900               	iorlw	0
  7873  004C62  B4D8               	btfsc	status,2,c
  7874  004C64  EF36  F026         	goto	u6361
  7875  004C68  EF38  F026         	goto	u6360
  7876  004C6C                     u6361:
  7877  004C6C  EF55  F026         	goto	l5301
  7878  004C70                     u6360:
  7879  004C70  5005               	movf	strncmp@n^0,w,c
  7880  004C72  1006               	iorwf	(strncmp@n+1)^0,w,c
  7881  004C74  B4D8               	btfsc	status,2,c
  7882  004C76  EF3F  F026         	goto	u6371
  7883  004C7A  EF41  F026         	goto	u6370
  7884  004C7E                     u6371:
  7885  004C7E  EF55  F026         	goto	l5301
  7886  004C82                     u6370:
  7887  004C82  C008  FFD9         	movff	strncmp@l,fsr2l
  7888  004C86  C009  FFDA         	movff	strncmp@l+1,fsr2h
  7889  004C8A  50DF               	movf	indf2,w,c
  7890  004C8C  6E07               	movwf	??_strncmp^0,c
  7891  004C8E  C00A  FFF6         	movff	strncmp@r,tblptrl
  7892  004C92  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7893  004C96                     	if	0	;tblptru may be non-zero
  7894  004C96                     	endif
  7895  004C96                     	if	0	;tblptru may be non-zero
  7896  004C96                     	endif
  7897  004C96  0008               	tblrd		*
  7898  004C98  50F5               	movf	tablat,w,c
  7899  004C9A  1807               	xorwf	??_strncmp^0,w,c
  7900  004C9C  B4D8               	btfsc	status,2,c
  7901  004C9E  EF53  F026         	goto	u6381
  7902  004CA2  EF55  F026         	goto	u6380
  7903  004CA6                     u6381:
  7904  004CA6  EF17  F026         	goto	l5291
  7905  004CAA                     u6380:
  7906  004CAA                     l5301:
  7907  004CAA  C008  FFD9         	movff	strncmp@l,fsr2l
  7908  004CAE  C009  FFDA         	movff	strncmp@l+1,fsr2h
  7909  004CB2  50DF               	movf	indf2,w,c
  7910  004CB4  6E07               	movwf	??_strncmp^0,c
  7911  004CB6  C00A  FFF6         	movff	strncmp@r,tblptrl
  7912  004CBA  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7913  004CBE                     	if	0	;tblptru may be non-zero
  7914  004CBE                     	endif
  7915  004CBE                     	if	0	;tblptru may be non-zero
  7916  004CBE                     	endif
  7917  004CBE  0008               	tblrd		*
  7918  004CC0  50F5               	movf	tablat,w,c
  7919  004CC2  5C07               	subwf	??_strncmp^0,w,c
  7920  004CC4  6E01               	movwf	?_strncmp^0,c
  7921  004CC6  6A02               	clrf	(?_strncmp+1)^0,c
  7922  004CC8  A0D8               	btfss	status,0,c
  7923  004CCA  0602               	decf	(?_strncmp+1)^0,f,c
  7924  004CCC                     l1561:
  7925  004CCC  0012               	return		;funcret
  7926  004CCE                     __end_of_strncmp:
  7927                           	callstack 0
  7928                           
  7929 ;; *************** function _efgtoa *****************
  7930 ;; Defined at:
  7931 ;;		line 319 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7932 ;; Parameters:    Size  Location     Type
  7933 ;;  fp              2   87[COMRAM] PTR struct _IO_FILE
  7934 ;;		 -> sprintf@f(6), 
  7935 ;;  f               4   89[COMRAM] PTR struct _IO_FILE
  7936 ;;  c               1   93[COMRAM] unsigned char 
  7937 ;; Auto vars:     Size  Location     Type
  7938 ;;  u               4   67[BANK0 ] unsigned char 
  7939 ;;  g               4   59[BANK0 ] unsigned char 
  7940 ;;  l               4   53[BANK0 ] unsigned char 
  7941 ;;  h               4   49[BANK0 ] unsigned char 
  7942 ;;  ou              4   15[BANK0 ] unsigned char 
  7943 ;;  n               2   65[BANK0 ] int 
  7944 ;;  e               2   63[BANK0 ] int 
  7945 ;;  i               2   57[BANK0 ] int 
  7946 ;;  w               2   46[BANK0 ] int 
  7947 ;;  p               2   43[BANK0 ] int 
  7948 ;;  sign            2   41[BANK0 ] int 
  7949 ;;  d               2   39[BANK0 ] int 
  7950 ;;  ne              2   37[BANK0 ] int 
  7951 ;;  m               2   35[BANK0 ] int 
  7952 ;;  pp              2   33[BANK0 ] int 
  7953 ;;  t               2   31[BANK0 ] int 
  7954 ;;  mode            1   48[BANK0 ] unsigned char 
  7955 ;;  nmode           1   45[BANK0 ] unsigned char 
  7956 ;; Return value:  Size  Location     Type
  7957 ;;                  2   87[COMRAM] int 
  7958 ;; Registers used:
  7959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7960 ;; Tracked objects:
  7961 ;;		On entry : 0/0
  7962 ;;		On exit  : 0/0
  7963 ;;		Unchanged: 0/0
  7964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7965 ;;      Params:         7       0       0       0       0       0       0
  7966 ;;      Locals:         0      56       0       0       0       0       0
  7967 ;;      Temps:          0       5       0       0       0       0       0
  7968 ;;      Totals:         7      61       0       0       0       0       0
  7969 ;;Total ram usage:       68 bytes
  7970 ;; Hardware stack levels used:    1
  7971 ;; Hardware stack levels required when called:    5
  7972 ;; This function calls:
  7973 ;;		___awdiv
  7974 ;;		___awmod
  7975 ;;		___fladd
  7976 ;;		___fldiv
  7977 ;;		___fleq
  7978 ;;		___flge
  7979 ;;		___flmul
  7980 ;;		___flneg
  7981 ;;		___flsub
  7982 ;;		___fltol
  7983 ;;		___fpclassifyf
  7984 ;;		_floorf
  7985 ;;		_isupper
  7986 ;;		_pad
  7987 ;;		_strcpy
  7988 ;;		_tolower
  7989 ;; This function is called by:
  7990 ;;		_vfpfcnvrt
  7991 ;; This function uses a non-reentrant model
  7992 ;;
  7993                           
  7994                           	psect	text32
  7995  0006E8                     __ptext32:
  7996                           	callstack 0
  7997  0006E8                     _efgtoa:
  7998                           	callstack 19
  7999  0006E8                     
  8000                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\
      +                          c99\common\doprnt.c: 320: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\
      +                          doprnt.c: 321:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c9
      +                          9\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;
  8001  0006E8  0E00               	movlw	0
  8002  0006EA  0100               	movlb	0	; () banked
  8003  0006EC  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  8004  0006EE  0E00               	movlw	0
  8005  0006F0  6F89               	movwf	efgtoa@sign& (0+255),b
  8006  0006F2                     
  8007                           ; BSR set to: 0
  8008                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  8009  0006F2  C05A  F09B         	movff	efgtoa@f,efgtoa@g
  8010  0006F6  C05B  F09C         	movff	efgtoa@f+1,efgtoa@g+1
  8011  0006FA  C05C  F09D         	movff	efgtoa@f+2,efgtoa@g+2
  8012  0006FE  C05D  F09E         	movff	efgtoa@f+3,efgtoa@g+3
  8013  000702                     
  8014                           ; BSR set to: 0
  8015                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 
      +                          0.0) {
  8016  000702  BF9E               	btfsc	(efgtoa@g+3)& (0+255),7,b
  8017  000704  EF88  F003         	goto	u5750
  8018  000708  EF86  F003         	goto	u5751
  8019  00070C                     u5751:
  8020  00070C  EF9E  F003         	goto	l4955
  8021  000710                     u5750:
  8022  000710                     
  8023                           ; BSR set to: 0
  8024                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign
      +                           = 1;
  8025  000710  0E00               	movlw	0
  8026  000712  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  8027  000714  0E01               	movlw	1
  8028  000716  6F89               	movwf	efgtoa@sign& (0+255),b
  8029  000718                     
  8030                           ; BSR set to: 0
  8031                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = 
      +                          -g;
  8032  000718  C09B  F001         	movff	efgtoa@g,___flneg@f1
  8033  00071C  C09C  F002         	movff	efgtoa@g+1,___flneg@f1+1
  8034  000720  C09D  F003         	movff	efgtoa@g+2,___flneg@f1+2
  8035  000724  C09E  F004         	movff	efgtoa@g+3,___flneg@f1+3
  8036  000728  EC7B  F02D         	call	___flneg	;wreg free
  8037  00072C  C001  F09B         	movff	?___flneg,efgtoa@g
  8038  000730  C002  F09C         	movff	?___flneg+1,efgtoa@g+1
  8039  000734  C003  F09D         	movff	?___flneg+2,efgtoa@g+2
  8040  000738  C004  F09E         	movff	?___flneg+3,efgtoa@g+3
  8041  00073C                     l4955:
  8042                           
  8043                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  8044  00073C  0E00               	movlw	0
  8045  00073E  0100               	movlb	0	; () banked
  8046  000740  6FA2               	movwf	(efgtoa@n+1)& (0+255),b
  8047  000742  0E00               	movlw	0
  8048  000744  6FA1               	movwf	efgtoa@n& (0+255),b
  8049  000746                     
  8050                           ; BSR set to: 0
  8051                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = widt
      +                          h;
  8052  000746  C1D1  F08E         	movff	_width,efgtoa@w
  8053  00074A  C1D2  F08F         	movff	_width+1,efgtoa@w+1
  8054  00074E                     
  8055                           ; BSR set to: 0
  8056                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign
      +                           || (flags & (1 << 2))) {
  8057  00074E  5189               	movf	efgtoa@sign& (0+255),w,b
  8058  000750  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8059  000752  A4D8               	btfss	status,2,c
  8060  000754  EFAE  F003         	goto	u5761
  8061  000758  EFB0  F003         	goto	u5760
  8062  00075C                     u5761:
  8063  00075C  EFB7  F003         	goto	l4963
  8064  000760                     u5760:
  8065  000760                     
  8066                           ; BSR set to: 0
  8067  000760  A5F8               	btfss	_flags& (0+255),2,b
  8068  000762  EFB5  F003         	goto	u5771
  8069  000766  EFB7  F003         	goto	u5770
  8070  00076A                     u5771:
  8071  00076A  EFD1  F003         	goto	l4975
  8072  00076E                     u5770:
  8073  00076E                     l4963:
  8074                           
  8075                           ; BSR set to: 0
  8076                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf
      +                          [n] = sign ? '-' : '+';
  8077  00076E  5189               	movf	efgtoa@sign& (0+255),w,b
  8078  000770  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8079  000772  A4D8               	btfss	status,2,c
  8080  000774  EFBE  F003         	goto	u5781
  8081  000778  EFC0  F003         	goto	u5780
  8082  00077C                     u5781:
  8083  00077C  EFC6  F003         	goto	l4967
  8084  000780                     u5780:
  8085  000780                     
  8086                           ; BSR set to: 0
  8087  000780  0E00               	movlw	0
  8088  000782  6F74               	movwf	(_efgtoa$2569+1)& (0+255),b
  8089  000784  0E2B               	movlw	43
  8090  000786  6F73               	movwf	_efgtoa$2569& (0+255),b
  8091  000788  EFCA  F003         	goto	l4969
  8092  00078C                     l4967:
  8093                           
  8094                           ; BSR set to: 0
  8095  00078C  0E00               	movlw	0
  8096  00078E  6F74               	movwf	(_efgtoa$2569+1)& (0+255),b
  8097  000790  0E2D               	movlw	45
  8098  000792  6F73               	movwf	_efgtoa$2569& (0+255),b
  8099  000794                     l4969:
  8100                           
  8101                           ; BSR set to: 0
  8102  000794  C073  F240         	movff	_efgtoa$2569,_dbuf
  8103  000798                     
  8104                           ; BSR set to: 0
  8105                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  8106  000798  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8107  00079A  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8108  00079C                     
  8109                           ; BSR set to: 0
  8110                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  8111  00079C  078E               	decf	efgtoa@w& (0+255),f,b
  8112  00079E  A0D8               	btfss	status,0,c
  8113  0007A0  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8114  0007A2                     l4975:
  8115                           
  8116                           ; BSR set to: 0
  8117                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8118  0007A2  C09B  F001         	movff	efgtoa@g,___fpclassifyf@x
  8119  0007A6  C09C  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8120  0007AA  C09D  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8121  0007AE  C09E  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8122  0007B2  EC7D  F025         	call	___fpclassifyf	;wreg free
  8123  0007B6  0401               	decf	?___fpclassifyf^0,w,c
  8124  0007B8  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  8125  0007BA  A4D8               	btfss	status,2,c
  8126  0007BC  EFE2  F003         	goto	u5791
  8127  0007C0  EFE4  F003         	goto	u5790
  8128  0007C4                     u5791:
  8129  0007C4  EF3B  F004         	goto	l4993
  8130  0007C8                     u5790:
  8131  0007C8  0EBF               	movlw	191
  8132  0007CA  0100               	movlb	0	; () banked
  8133  0007CC  6F6A               	movwf	??_efgtoa& (0+255),b
  8134  0007CE  0EFF               	movlw	255
  8135  0007D0  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  8136  0007D2  505E               	movf	efgtoa@c^0,w,c
  8137  0007D4  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  8138  0007D6  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  8139  0007D8  516A               	movf	??_efgtoa& (0+255),w,b
  8140  0007DA  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  8141  0007DC  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  8142  0007DE  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8143  0007E0  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  8144  0007E2  E10A               	bnz	u5800
  8145  0007E4  0E1A               	movlw	26
  8146  0007E6  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  8147  0007E8  A0D8               	btfss	status,0,c
  8148  0007EA  EFF9  F003         	goto	u5801
  8149  0007EE  EFFC  F003         	goto	u5800
  8150  0007F2                     u5801:
  8151  0007F2  0E01               	movlw	1
  8152  0007F4  EFFD  F003         	goto	u5810
  8153  0007F8                     u5800:
  8154  0007F8  0E00               	movlw	0
  8155  0007FA                     u5810:
  8156  0007FA  6F75               	movwf	_efgtoa$2570& (0+255),b
  8157  0007FC  6B76               	clrf	(_efgtoa$2570+1)& (0+255),b
  8158  0007FE                     
  8159                           ; BSR set to: 0
  8160  0007FE  5175               	movf	_efgtoa$2570& (0+255),w,b
  8161  000800  1176               	iorwf	(_efgtoa$2570+1)& (0+255),w,b
  8162  000802  B4D8               	btfsc	status,2,c
  8163  000804  EF06  F004         	goto	u5821
  8164  000808  EF08  F004         	goto	u5820
  8165  00080C                     u5821:
  8166  00080C  EF16  F004         	goto	l4985
  8167  000810                     u5820:
  8168  000810                     
  8169                           ; BSR set to: 0
  8170                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             
      +                          strcpy(&dbuf[n], "INF");
  8171  000810  0E40               	movlw	low _dbuf
  8172  000812  25A1               	addwf	efgtoa@n& (0+255),w,b
  8173  000814  6E01               	movwf	strcpy@dest^0,c
  8174  000816  0E02               	movlw	high _dbuf
  8175  000818  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8176  00081A  6E02               	movwf	(strcpy@dest+1)^0,c
  8177  00081C  0ED4               	movlw	low STR_17
  8178  00081E  6E03               	movwf	strcpy@src^0,c
  8179  000820  0E06               	movlw	high STR_17
  8180  000822  6E04               	movwf	(strcpy@src+1)^0,c
  8181  000824  ECC5  F02B         	call	_strcpy	;wreg free
  8182                           
  8183                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } el
      +                          se {
  8184  000828  EF22  F004         	goto	l4987
  8185  00082C                     l4985:
  8186                           
  8187                           ; BSR set to: 0
  8188                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             
      +                          strcpy(&dbuf[n], "inf");
  8189  00082C  0E40               	movlw	low _dbuf
  8190  00082E  25A1               	addwf	efgtoa@n& (0+255),w,b
  8191  000830  6E01               	movwf	strcpy@dest^0,c
  8192  000832  0E02               	movlw	high _dbuf
  8193  000834  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8194  000836  6E02               	movwf	(strcpy@dest+1)^0,c
  8195  000838  0EDC               	movlw	low STR_18
  8196  00083A  6E03               	movwf	strcpy@src^0,c
  8197  00083C  0E06               	movlw	high STR_18
  8198  00083E  6E04               	movwf	(strcpy@src+1)^0,c
  8199  000840  ECC5  F02B         	call	_strcpy	;wreg free
  8200  000844                     l4987:
  8201                           
  8202                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  8203  000844  0100               	movlb	0	; () banked
  8204  000846  0EFD               	movlw	253
  8205  000848  278E               	addwf	efgtoa@w& (0+255),f,b
  8206  00084A  0EFF               	movlw	255
  8207  00084C  238F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  8208  00084E                     l4989:
  8209                           
  8210                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         retu
      +                          rn pad(fp, &dbuf[0], w);
  8211  00084E  C058  F011         	movff	efgtoa@fp,pad@fp
  8212  000852  C059  F012         	movff	efgtoa@fp+1,pad@fp+1
  8213  000856  0E40               	movlw	low _dbuf
  8214  000858  6E13               	movwf	pad@buf^0,c
  8215  00085A  0E02               	movlw	high _dbuf
  8216  00085C  6E14               	movwf	(pad@buf+1)^0,c
  8217  00085E  C08E  F015         	movff	efgtoa@w,pad@p
  8218  000862  C08F  F016         	movff	efgtoa@w+1,pad@p+1
  8219  000866  EC9C  F027         	call	_pad	;wreg free
  8220  00086A  C011  F058         	movff	?_pad,?_efgtoa
  8221  00086E  C012  F059         	movff	?_pad+1,?_efgtoa+1
  8222  000872  EF4B  F009         	goto	l1323
  8223  000876                     l4993:
  8224                           
  8225                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8226  000876  C09B  F001         	movff	efgtoa@g,___fpclassifyf@x
  8227  00087A  C09C  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8228  00087E  C09D  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8229  000882  C09E  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8230  000886  EC7D  F025         	call	___fpclassifyf	;wreg free
  8231  00088A  5001               	movf	?___fpclassifyf^0,w,c
  8232  00088C  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  8233  00088E  A4D8               	btfss	status,2,c
  8234  000890  EF4C  F004         	goto	u5831
  8235  000894  EF4E  F004         	goto	u5830
  8236  000898                     u5831:
  8237  000898  EF8E  F004         	goto	l5011
  8238  00089C                     u5830:
  8239  00089C  0EBF               	movlw	191
  8240  00089E  0100               	movlb	0	; () banked
  8241  0008A0  6F6A               	movwf	??_efgtoa& (0+255),b
  8242  0008A2  0EFF               	movlw	255
  8243  0008A4  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  8244  0008A6  505E               	movf	efgtoa@c^0,w,c
  8245  0008A8  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  8246  0008AA  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  8247  0008AC  516A               	movf	??_efgtoa& (0+255),w,b
  8248  0008AE  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  8249  0008B0  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  8250  0008B2  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8251  0008B4  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  8252  0008B6  E10A               	bnz	u5840
  8253  0008B8  0E1A               	movlw	26
  8254  0008BA  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  8255  0008BC  A0D8               	btfss	status,0,c
  8256  0008BE  EF63  F004         	goto	u5841
  8257  0008C2  EF66  F004         	goto	u5840
  8258  0008C6                     u5841:
  8259  0008C6  0E01               	movlw	1
  8260  0008C8  EF67  F004         	goto	u5850
  8261  0008CC                     u5840:
  8262  0008CC  0E00               	movlw	0
  8263  0008CE                     u5850:
  8264  0008CE  6F77               	movwf	_efgtoa$2574& (0+255),b
  8265  0008D0  6B78               	clrf	(_efgtoa$2574+1)& (0+255),b
  8266  0008D2                     
  8267                           ; BSR set to: 0
  8268  0008D2  5177               	movf	_efgtoa$2574& (0+255),w,b
  8269  0008D4  1178               	iorwf	(_efgtoa$2574+1)& (0+255),w,b
  8270  0008D6  B4D8               	btfsc	status,2,c
  8271  0008D8  EF70  F004         	goto	u5861
  8272  0008DC  EF72  F004         	goto	u5860
  8273  0008E0                     u5861:
  8274  0008E0  EF80  F004         	goto	l5003
  8275  0008E4                     u5860:
  8276  0008E4                     
  8277                           ; BSR set to: 0
  8278                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             
      +                          strcpy(&dbuf[n], "NAN");
  8279  0008E4  0E40               	movlw	low _dbuf
  8280  0008E6  25A1               	addwf	efgtoa@n& (0+255),w,b
  8281  0008E8  6E01               	movwf	strcpy@dest^0,c
  8282  0008EA  0E02               	movlw	high _dbuf
  8283  0008EC  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8284  0008EE  6E02               	movwf	(strcpy@dest+1)^0,c
  8285  0008F0  0ED8               	movlw	low STR_21
  8286  0008F2  6E03               	movwf	strcpy@src^0,c
  8287  0008F4  0E06               	movlw	high STR_21
  8288  0008F6  6E04               	movwf	(strcpy@src+1)^0,c
  8289  0008F8  ECC5  F02B         	call	_strcpy	;wreg free
  8290                           
  8291                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } el
      +                          se {
  8292  0008FC  EF22  F004         	goto	l4987
  8293  000900                     l5003:
  8294                           
  8295                           ; BSR set to: 0
  8296                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             
      +                          strcpy(&dbuf[n], "nan");
  8297  000900  0E40               	movlw	low _dbuf
  8298  000902  25A1               	addwf	efgtoa@n& (0+255),w,b
  8299  000904  6E01               	movwf	strcpy@dest^0,c
  8300  000906  0E02               	movlw	high _dbuf
  8301  000908  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8302  00090A  6E02               	movwf	(strcpy@dest+1)^0,c
  8303  00090C  0EE0               	movlw	low STR_22
  8304  00090E  6E03               	movwf	strcpy@src^0,c
  8305  000910  0E06               	movlw	high STR_22
  8306  000912  6E04               	movwf	(strcpy@src+1)^0,c
  8307  000914  ECC5  F02B         	call	_strcpy	;wreg free
  8308  000918  EF22  F004         	goto	l4987
  8309  00091C                     l5011:
  8310                           
  8311                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  8312  00091C  0E00               	movlw	0
  8313  00091E  0100               	movlb	0	; () banked
  8314  000920  6FA3               	movwf	efgtoa@u& (0+255),b
  8315  000922  0E00               	movlw	0
  8316  000924  6FA4               	movwf	(efgtoa@u+1)& (0+255),b
  8317  000926  0E80               	movlw	128
  8318  000928  6FA5               	movwf	(efgtoa@u+2)& (0+255),b
  8319  00092A  0E3F               	movlw	63
  8320  00092C  6FA6               	movwf	(efgtoa@u+3)& (0+255),b
  8321                           
  8322                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  8323  00092E  0E00               	movlw	0
  8324  000930  6FA0               	movwf	(efgtoa@e+1)& (0+255),b
  8325  000932  0E00               	movlw	0
  8326  000934  6F9F               	movwf	efgtoa@e& (0+255),b
  8327  000936                     
  8328                           ; BSR set to: 0
  8329                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g 
      +                          == 0.0)) {
  8330  000936  C09B  F001         	movff	efgtoa@g,___fleq@ff1
  8331  00093A  C09C  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  8332  00093E  C09D  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  8333  000942  C09E  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  8334  000946  0E00               	movlw	0
  8335  000948  6E05               	movwf	___fleq@ff2^0,c
  8336  00094A  0E00               	movlw	0
  8337  00094C  6E06               	movwf	(___fleq@ff2+1)^0,c
  8338  00094E  0E00               	movlw	0
  8339  000950  6E07               	movwf	(___fleq@ff2+2)^0,c
  8340  000952  0E00               	movlw	0
  8341  000954  6E08               	movwf	(___fleq@ff2+3)^0,c
  8342  000956  EC12  F029         	call	___fleq	;wreg free
  8343  00095A  B0D8               	btfsc	status,0,c
  8344  00095C  EFB2  F004         	goto	u5871
  8345  000960  EFB4  F004         	goto	u5870
  8346  000964                     u5871:
  8347  000964  EF37  F005         	goto	l5029
  8348  000968                     u5870:
  8349  000968  EFD3  F004         	goto	l5021
  8350  00096C                     l5017:
  8351                           
  8352                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             
      +                          u = u*10.0;
  8353  00096C  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  8354  000970  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  8355  000974  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  8356  000978  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  8357  00097C  0E00               	movlw	0
  8358  00097E  6E20               	movwf	___flmul@a^0,c
  8359  000980  0E00               	movlw	0
  8360  000982  6E21               	movwf	(___flmul@a+1)^0,c
  8361  000984  0E20               	movlw	32
  8362  000986  6E22               	movwf	(___flmul@a+2)^0,c
  8363  000988  0E41               	movlw	65
  8364  00098A  6E23               	movwf	(___flmul@a+3)^0,c
  8365  00098C  ECCE  F012         	call	___flmul	;wreg free
  8366  000990  C01C  F0A3         	movff	?___flmul,efgtoa@u
  8367  000994  C01D  F0A4         	movff	?___flmul+1,efgtoa@u+1
  8368  000998  C01E  F0A5         	movff	?___flmul+2,efgtoa@u+2
  8369  00099C  C01F  F0A6         	movff	?___flmul+3,efgtoa@u+3
  8370  0009A0                     
  8371                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             
      +                          ++e;
  8372  0009A0  0100               	movlb	0	; () banked
  8373  0009A2  4B9F               	infsnz	efgtoa@e& (0+255),f,b
  8374  0009A4  2BA0               	incf	(efgtoa@e+1)& (0+255),f,b
  8375  0009A6                     l5021:
  8376                           
  8377                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         whil
      +                          e (!(g < (u*10.0))) {
  8378  0009A6  C09B  F035         	movff	efgtoa@g,___flge@ff1
  8379  0009AA  C09C  F036         	movff	efgtoa@g+1,___flge@ff1+1
  8380  0009AE  C09D  F037         	movff	efgtoa@g+2,___flge@ff1+2
  8381  0009B2  C09E  F038         	movff	efgtoa@g+3,___flge@ff1+3
  8382  0009B6  0E00               	movlw	0
  8383  0009B8  6E20               	movwf	___flmul@a^0,c
  8384  0009BA  0E00               	movlw	0
  8385  0009BC  6E21               	movwf	(___flmul@a+1)^0,c
  8386  0009BE  0E20               	movlw	32
  8387  0009C0  6E22               	movwf	(___flmul@a+2)^0,c
  8388  0009C2  0E41               	movlw	65
  8389  0009C4  6E23               	movwf	(___flmul@a+3)^0,c
  8390  0009C6  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  8391  0009CA  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  8392  0009CE  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  8393  0009D2  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  8394  0009D6  ECCE  F012         	call	___flmul	;wreg free
  8395  0009DA  C01C  F039         	movff	?___flmul,___flge@ff2
  8396  0009DE  C01D  F03A         	movff	?___flmul+1,___flge@ff2+1
  8397  0009E2  C01E  F03B         	movff	?___flmul+2,___flge@ff2+2
  8398  0009E6  C01F  F03C         	movff	?___flmul+3,___flge@ff2+3
  8399  0009EA  ECFB  F024         	call	___flge	;wreg free
  8400  0009EE  B0D8               	btfsc	status,0,c
  8401  0009F0  EFFC  F004         	goto	u5881
  8402  0009F4  EFFE  F004         	goto	u5880
  8403  0009F8                     u5881:
  8404  0009F8  EFB6  F004         	goto	l5017
  8405  0009FC                     u5880:
  8406  0009FC  EF1E  F005         	goto	l5027
  8407  000A00                     l5023:
  8408                           
  8409                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             
      +                          u = u/10.0;
  8410  000A00  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  8411  000A04  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  8412  000A08  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  8413  000A0C  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  8414  000A10  0E00               	movlw	0
  8415  000A12  6E39               	movwf	___fldiv@a^0,c
  8416  000A14  0E00               	movlw	0
  8417  000A16  6E3A               	movwf	(___fldiv@a+1)^0,c
  8418  000A18  0E20               	movlw	32
  8419  000A1A  6E3B               	movwf	(___fldiv@a+2)^0,c
  8420  000A1C  0E41               	movlw	65
  8421  000A1E  6E3C               	movwf	(___fldiv@a+3)^0,c
  8422  000A20  ECE3  F014         	call	___fldiv	;wreg free
  8423  000A24  C035  F0A3         	movff	?___fldiv,efgtoa@u
  8424  000A28  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  8425  000A2C  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  8426  000A30  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  8427  000A34                     
  8428                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             
      +                          --e;
  8429  000A34  0100               	movlb	0	; () banked
  8430  000A36  079F               	decf	efgtoa@e& (0+255),f,b
  8431  000A38  A0D8               	btfss	status,0,c
  8432  000A3A  07A0               	decf	(efgtoa@e+1)& (0+255),f,b
  8433  000A3C                     l5027:
  8434                           
  8435                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         whil
      +                          e (g < u) {
  8436  000A3C  C09B  F035         	movff	efgtoa@g,___flge@ff1
  8437  000A40  C09C  F036         	movff	efgtoa@g+1,___flge@ff1+1
  8438  000A44  C09D  F037         	movff	efgtoa@g+2,___flge@ff1+2
  8439  000A48  C09E  F038         	movff	efgtoa@g+3,___flge@ff1+3
  8440  000A4C  C0A3  F039         	movff	efgtoa@u,___flge@ff2
  8441  000A50  C0A4  F03A         	movff	efgtoa@u+1,___flge@ff2+1
  8442  000A54  C0A5  F03B         	movff	efgtoa@u+2,___flge@ff2+2
  8443  000A58  C0A6  F03C         	movff	efgtoa@u+3,___flge@ff2+3
  8444  000A5C  ECFB  F024         	call	___flge	;wreg free
  8445  000A60  A0D8               	btfss	status,0,c
  8446  000A62  EF35  F005         	goto	u5891
  8447  000A66  EF37  F005         	goto	u5890
  8448  000A6A                     u5891:
  8449  000A6A  EF00  F005         	goto	l5023
  8450  000A6E                     u5890:
  8451  000A6E                     l5029:
  8452                           
  8453                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = t
      +                          olower((int)c);
  8454  000A6E  C05E  F007         	movff	efgtoa@c,tolower@c
  8455  000A72  6A08               	clrf	(tolower@c+1)^0,c
  8456  000A74  EC95  F02B         	call	_tolower	;wreg free
  8457  000A78  5007               	movf	?_tolower^0,w,c
  8458  000A7A  0100               	movlb	0	; () banked
  8459  000A7C  6F90               	movwf	efgtoa@mode& (0+255),b
  8460  000A7E                     
  8461                           ; BSR set to: 0
  8462                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = 
      +                          mode;
  8463  000A7E  C090  F08D         	movff	efgtoa@mode,efgtoa@nmode
  8464  000A82                     
  8465                           ; BSR set to: 0
  8466                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode
      +                           == 'g') {
  8467  000A82  0E67               	movlw	103
  8468  000A84  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8469  000A86  A4D8               	btfss	status,2,c
  8470  000A88  EF48  F005         	goto	u5901
  8471  000A8C  EF4A  F005         	goto	u5900
  8472  000A90                     u5901:
  8473  000A90  EF70  F005         	goto	l5043
  8474  000A94                     u5900:
  8475  000A94                     
  8476                           ; BSR set to: 0
  8477                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec =
      +                          = 0) {
  8478  000A94  51F6               	movf	_prec& (0+255),w,b
  8479  000A96  11F7               	iorwf	(_prec+1)& (0+255),w,b
  8480  000A98  A4D8               	btfss	status,2,c
  8481  000A9A  EF51  F005         	goto	u5911
  8482  000A9E  EF53  F005         	goto	u5910
  8483  000AA2                     u5911:
  8484  000AA2  EF57  F005         	goto	l5039
  8485  000AA6                     u5910:
  8486  000AA6                     
  8487                           ; BSR set to: 0
  8488                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  8489  000AA6  0E00               	movlw	0
  8490  000AA8  6FF7               	movwf	(_prec+1)& (0+255),b
  8491  000AAA  0E01               	movlw	1
  8492  000AAC  6FF6               	movwf	_prec& (0+255),b
  8493  000AAE                     l5039:
  8494                           
  8495                           ; BSR set to: 0
  8496                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = 
      +                          (0 < prec) ? prec : 6;
  8497  000AAE  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  8498  000AB0  EF64  F005         	goto	u5920
  8499  000AB4  51F7               	movf	(_prec+1)& (0+255),w,b
  8500  000AB6  E106               	bnz	u5921
  8501  000AB8  05F6               	decf	_prec& (0+255),w,b
  8502  000ABA  B0D8               	btfsc	status,0,c
  8503  000ABC  EF62  F005         	goto	u5921
  8504  000AC0  EF64  F005         	goto	u5920
  8505  000AC4                     u5921:
  8506  000AC4  EF6A  F005         	goto	l1341
  8507  000AC8                     u5920:
  8508  000AC8                     l5041:
  8509                           
  8510                           ; BSR set to: 0
  8511  000AC8  0E00               	movlw	0
  8512  000ACA  6F8C               	movwf	(efgtoa@p+1)& (0+255),b
  8513  000ACC  0E06               	movlw	6
  8514  000ACE  6F8B               	movwf	efgtoa@p& (0+255),b
  8515  000AD0  EF79  F005         	goto	l5049
  8516  000AD4                     l1341:
  8517                           
  8518                           ; BSR set to: 0
  8519  000AD4  C0F6  F08B         	movff	_prec,efgtoa@p
  8520  000AD8  C0F7  F08C         	movff	_prec+1,efgtoa@p+1
  8521  000ADC  EF79  F005         	goto	l5049
  8522  000AE0                     l5043:
  8523                           
  8524                           ; BSR set to: 0
  8525                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = 
      +                          (prec < 0) ? 6 : prec;
  8526  000AE0  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  8527  000AE2  EF75  F005         	goto	u5931
  8528  000AE6  EF77  F005         	goto	u5930
  8529  000AEA                     u5931:
  8530  000AEA  EF64  F005         	goto	l5041
  8531  000AEE                     u5930:
  8532  000AEE  EF6A  F005         	goto	l1341
  8533  000AF2                     l5049:
  8534                           
  8535                           ; BSR set to: 0
  8536                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode
      +                           == 'g') {
  8537  000AF2  0E67               	movlw	103
  8538  000AF4  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8539  000AF6  A4D8               	btfss	status,2,c
  8540  000AF8  EF80  F005         	goto	u5941
  8541  000AFC  EF82  F005         	goto	u5940
  8542  000B00                     u5941:
  8543  000B00  EFB1  F005         	goto	l5059
  8544  000B04                     u5940:
  8545  000B04                     
  8546                           ; BSR set to: 0
  8547                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  8548  000B04  AFA0               	btfss	(efgtoa@e+1)& (0+255),7,b
  8549  000B06  EF90  F005         	goto	u5950
  8550  000B0A  0EFC               	movlw	252
  8551  000B0C  5D9F               	subwf	efgtoa@e& (0+255),w,b
  8552  000B0E  0EFF               	movlw	255
  8553  000B10  59A0               	subwfb	(efgtoa@e+1)& (0+255),w,b
  8554  000B12  A0D8               	btfss	status,0,c
  8555  000B14  EF8E  F005         	goto	u5951
  8556  000B18  EF90  F005         	goto	u5950
  8557  000B1C                     u5951:
  8558  000B1C  EFAF  F005         	goto	l5057
  8559  000B20                     u5950:
  8560  000B20                     
  8561                           ; BSR set to: 0
  8562  000B20  0EFF               	movlw	255
  8563  000B22  6F6A               	movwf	??_efgtoa& (0+255),b
  8564  000B24  0EFF               	movlw	255
  8565  000B26  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  8566  000B28  C08B  F06C         	movff	efgtoa@p,??_efgtoa+2
  8567  000B2C  C08C  F06D         	movff	efgtoa@p+1,??_efgtoa+3
  8568  000B30  516A               	movf	??_efgtoa& (0+255),w,b
  8569  000B32  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  8570  000B34  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  8571  000B36  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8572  000B38  519F               	movf	efgtoa@e& (0+255),w,b
  8573  000B3A  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  8574  000B3C  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  8575  000B3E  0A80               	xorlw	128
  8576  000B40  6F6E               	movwf	(??_efgtoa+4)& (0+255),b
  8577  000B42  51A0               	movf	(efgtoa@e+1)& (0+255),w,b
  8578  000B44  0A80               	xorlw	128
  8579  000B46  596E               	subwfb	(??_efgtoa+4)& (0+255),w,b
  8580  000B48  A0D8               	btfss	status,0,c
  8581  000B4A  EFA9  F005         	goto	u5961
  8582  000B4E  EFAB  F005         	goto	u5960
  8583  000B52                     u5961:
  8584  000B52  EFAF  F005         	goto	l5057
  8585  000B56                     u5960:
  8586  000B56                     
  8587                           ; BSR set to: 0
  8588                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             
      +                          nmode = 'f';
  8589  000B56  0E66               	movlw	102
  8590  000B58  6F8D               	movwf	efgtoa@nmode& (0+255),b
  8591                           
  8592                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } el
      +                          se {
  8593  000B5A  EFB1  F005         	goto	l5059
  8594  000B5E                     l5057:
  8595                           
  8596                           ; BSR set to: 0
  8597                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             
      +                          nmode = 'e';
  8598  000B5E  0E65               	movlw	101
  8599  000B60  6F8D               	movwf	efgtoa@nmode& (0+255),b
  8600  000B62                     l5059:
  8601                           
  8602                           ; BSR set to: 0
  8603                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  8604  000B62  C08B  F083         	movff	efgtoa@p,efgtoa@m
  8605  000B66  C08C  F084         	movff	efgtoa@p+1,efgtoa@m+1
  8606  000B6A                     
  8607                           ; BSR set to: 0
  8608                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  8609  000B6A  0E67               	movlw	103
  8610  000B6C  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8611  000B6E  A4D8               	btfss	status,2,c
  8612  000B70  EFBC  F005         	goto	u5971
  8613  000B74  EFBE  F005         	goto	u5970
  8614  000B78                     u5971:
  8615  000B78  EFCE  F005         	goto	l5067
  8616  000B7C                     u5970:
  8617  000B7C                     
  8618                           ; BSR set to: 0
  8619  000B7C  0E66               	movlw	102
  8620  000B7E  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8621  000B80  A4D8               	btfss	status,2,c
  8622  000B82  EFC5  F005         	goto	u5981
  8623  000B86  EFC7  F005         	goto	u5980
  8624  000B8A                     u5981:
  8625  000B8A  EFD0  F005         	goto	l5069
  8626  000B8E                     u5980:
  8627  000B8E                     
  8628                           ; BSR set to: 0
  8629  000B8E  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8630  000B90  EFCE  F005         	goto	u5990
  8631  000B94  EFCC  F005         	goto	u5991
  8632  000B98                     u5991:
  8633  000B98  EFD0  F005         	goto	l5069
  8634  000B9C                     u5990:
  8635  000B9C                     l5067:
  8636                           
  8637                           ; BSR set to: 0
  8638                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  8639  000B9C  4B83               	infsnz	efgtoa@m& (0+255),f,b
  8640  000B9E  2B84               	incf	(efgtoa@m+1)& (0+255),f,b
  8641  000BA0                     l5069:
  8642                           
  8643                           ; BSR set to: 0
  8644                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmod
      +                          e == 'f') {
  8645  000BA0  0E66               	movlw	102
  8646  000BA2  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8647  000BA4  A4D8               	btfss	status,2,c
  8648  000BA6  EFD7  F005         	goto	u6001
  8649  000BAA  EFD9  F005         	goto	u6000
  8650  000BAE                     u6001:
  8651  000BAE  EFF9  F005         	goto	l5079
  8652  000BB2                     u6000:
  8653  000BB2                     
  8654                           ; BSR set to: 0
  8655                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (
      +                          e < 0) {
  8656  000BB2  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8657  000BB4  EFE0  F005         	goto	u6010
  8658  000BB8  EFDE  F005         	goto	u6011
  8659  000BBC                     u6011:
  8660  000BBC  EFEC  F005         	goto	l5075
  8661  000BC0                     u6010:
  8662  000BC0                     
  8663                           ; BSR set to: 0
  8664                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             
      +                          u = 1.0;
  8665  000BC0  0E00               	movlw	0
  8666  000BC2  6FA3               	movwf	efgtoa@u& (0+255),b
  8667  000BC4  0E00               	movlw	0
  8668  000BC6  6FA4               	movwf	(efgtoa@u+1)& (0+255),b
  8669  000BC8  0E80               	movlw	128
  8670  000BCA  6FA5               	movwf	(efgtoa@u+2)& (0+255),b
  8671  000BCC  0E3F               	movlw	63
  8672  000BCE  6FA6               	movwf	(efgtoa@u+3)& (0+255),b
  8673                           
  8674                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             
      +                          e = 0;
  8675  000BD0  0E00               	movlw	0
  8676  000BD2  6FA0               	movwf	(efgtoa@e+1)& (0+255),b
  8677  000BD4  0E00               	movlw	0
  8678  000BD6  6F9F               	movwf	efgtoa@e& (0+255),b
  8679  000BD8                     l5075:
  8680                           
  8681                           ; BSR set to: 0
  8682                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (
      +                          !(mode == 'g')) {
  8683  000BD8  0E67               	movlw	103
  8684  000BDA  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8685  000BDC  B4D8               	btfsc	status,2,c
  8686  000BDE  EFF3  F005         	goto	u6021
  8687  000BE2  EFF5  F005         	goto	u6020
  8688  000BE6                     u6021:
  8689  000BE6  EFF9  F005         	goto	l5079
  8690  000BEA                     u6020:
  8691  000BEA                     
  8692                           ; BSR set to: 0
  8693                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             
      +                          m += e;
  8694  000BEA  519F               	movf	efgtoa@e& (0+255),w,b
  8695  000BEC  2783               	addwf	efgtoa@m& (0+255),f,b
  8696  000BEE  51A0               	movf	(efgtoa@e+1)& (0+255),w,b
  8697  000BF0  2384               	addwfc	(efgtoa@m+1)& (0+255),f,b
  8698  000BF2                     l5079:
  8699                           
  8700                           ; BSR set to: 0
  8701                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  8702  000BF2  0E00               	movlw	0
  8703  000BF4  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  8704  000BF6  0E00               	movlw	0
  8705  000BF8  6F99               	movwf	efgtoa@i& (0+255),b
  8706  000BFA                     
  8707                           ; BSR set to: 0
  8708                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  8709  000BFA  C09B  F091         	movff	efgtoa@g,efgtoa@h
  8710  000BFE  C09C  F092         	movff	efgtoa@g+1,efgtoa@h+1
  8711  000C02  C09D  F093         	movff	efgtoa@g+2,efgtoa@h+2
  8712  000C06  C09E  F094         	movff	efgtoa@g+3,efgtoa@h+3
  8713  000C0A                     
  8714                           ; BSR set to: 0
  8715                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  8716  000C0A  C0A3  F06F         	movff	efgtoa@u,efgtoa@ou
  8717  000C0E  C0A4  F070         	movff	efgtoa@u+1,efgtoa@ou+1
  8718  000C12  C0A5  F071         	movff	efgtoa@u+2,efgtoa@ou+2
  8719  000C16  C0A6  F072         	movff	efgtoa@u+3,efgtoa@ou+3
  8720                           
  8721                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  8722  000C1A  EF8A  F006         	goto	l5093
  8723  000C1E                     l5085:
  8724                           
  8725                           ; BSR set to: 0
  8726                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = 
      +                          floorf(h/u);
  8727  000C1E  C091  F035         	movff	efgtoa@h,___fldiv@b
  8728  000C22  C092  F036         	movff	efgtoa@h+1,___fldiv@b+1
  8729  000C26  C093  F037         	movff	efgtoa@h+2,___fldiv@b+2
  8730  000C2A  C094  F038         	movff	efgtoa@h+3,___fldiv@b+3
  8731  000C2E  C0A3  F039         	movff	efgtoa@u,___fldiv@a
  8732  000C32  C0A4  F03A         	movff	efgtoa@u+1,___fldiv@a+1
  8733  000C36  C0A5  F03B         	movff	efgtoa@u+2,___fldiv@a+2
  8734  000C3A  C0A6  F03C         	movff	efgtoa@u+3,___fldiv@a+3
  8735  000C3E  ECE3  F014         	call	___fldiv	;wreg free
  8736  000C42  C035  F04E         	movff	?___fldiv,floorf@x
  8737  000C46  C036  F04F         	movff	?___fldiv+1,floorf@x+1
  8738  000C4A  C037  F050         	movff	?___fldiv+2,floorf@x+2
  8739  000C4E  C038  F051         	movff	?___fldiv+3,floorf@x+3
  8740  000C52  ECFF  F01A         	call	_floorf	;wreg free
  8741  000C56  C04E  F095         	movff	?_floorf,efgtoa@l
  8742  000C5A  C04F  F096         	movff	?_floorf+1,efgtoa@l+1
  8743  000C5E  C050  F097         	movff	?_floorf+2,efgtoa@l+2
  8744  000C62  C051  F098         	movff	?_floorf+3,efgtoa@l+3
  8745                           
  8746                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = 
      +                          (int)l;
  8747  000C66  C095  F04E         	movff	efgtoa@l,___fltol@f1
  8748  000C6A  C096  F04F         	movff	efgtoa@l+1,___fltol@f1+1
  8749  000C6E  C097  F050         	movff	efgtoa@l+2,___fltol@f1+2
  8750  000C72  C098  F051         	movff	efgtoa@l+3,___fltol@f1+3
  8751  000C76  ECF6  F023         	call	___fltol	;wreg free
  8752  000C7A  C04E  F087         	movff	?___fltol,efgtoa@d
  8753  000C7E  C04F  F088         	movff	?___fltol+1,efgtoa@d+1
  8754  000C82                     
  8755                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -=
      +                           l*u;
  8756  000C82  C091  F045         	movff	efgtoa@h,___flsub@b
  8757  000C86  C092  F046         	movff	efgtoa@h+1,___flsub@b+1
  8758  000C8A  C093  F047         	movff	efgtoa@h+2,___flsub@b+2
  8759  000C8E  C094  F048         	movff	efgtoa@h+3,___flsub@b+3
  8760  000C92  C0A3  F020         	movff	efgtoa@u,___flmul@a
  8761  000C96  C0A4  F021         	movff	efgtoa@u+1,___flmul@a+1
  8762  000C9A  C0A5  F022         	movff	efgtoa@u+2,___flmul@a+2
  8763  000C9E  C0A6  F023         	movff	efgtoa@u+3,___flmul@a+3
  8764  000CA2  C095  F01C         	movff	efgtoa@l,___flmul@b
  8765  000CA6  C096  F01D         	movff	efgtoa@l+1,___flmul@b+1
  8766  000CAA  C097  F01E         	movff	efgtoa@l+2,___flmul@b+2
  8767  000CAE  C098  F01F         	movff	efgtoa@l+3,___flmul@b+3
  8768  000CB2  ECCE  F012         	call	___flmul	;wreg free
  8769  000CB6  C01C  F049         	movff	?___flmul,___flsub@a
  8770  000CBA  C01D  F04A         	movff	?___flmul+1,___flsub@a+1
  8771  000CBE  C01E  F04B         	movff	?___flmul+2,___flsub@a+2
  8772  000CC2  C01F  F04C         	movff	?___flmul+3,___flsub@a+3
  8773  000CC6  EC9C  F02C         	call	___flsub	;wreg free
  8774  000CCA  C045  F091         	movff	?___flsub,efgtoa@h
  8775  000CCE  C046  F092         	movff	?___flsub+1,efgtoa@h+1
  8776  000CD2  C047  F093         	movff	?___flsub+2,efgtoa@h+2
  8777  000CD6  C048  F094         	movff	?___flsub+3,efgtoa@h+3
  8778  000CDA                     
  8779                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = 
      +                          u/10.0;
  8780  000CDA  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  8781  000CDE  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  8782  000CE2  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  8783  000CE6  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  8784  000CEA  0E00               	movlw	0
  8785  000CEC  6E39               	movwf	___fldiv@a^0,c
  8786  000CEE  0E00               	movlw	0
  8787  000CF0  6E3A               	movwf	(___fldiv@a+1)^0,c
  8788  000CF2  0E20               	movlw	32
  8789  000CF4  6E3B               	movwf	(___fldiv@a+2)^0,c
  8790  000CF6  0E41               	movlw	65
  8791  000CF8  6E3C               	movwf	(___fldiv@a+3)^0,c
  8792  000CFA  ECE3  F014         	call	___fldiv	;wreg free
  8793  000CFE  C035  F0A3         	movff	?___fldiv,efgtoa@u
  8794  000D02  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  8795  000D06  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  8796  000D0A  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  8797  000D0E                     
  8798                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  8799  000D0E  0100               	movlb	0	; () banked
  8800  000D10  4B99               	infsnz	efgtoa@i& (0+255),f,b
  8801  000D12  2B9A               	incf	(efgtoa@i+1)& (0+255),f,b
  8802  000D14                     l5093:
  8803                           
  8804                           ; BSR set to: 0
  8805                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  8806  000D14  5183               	movf	efgtoa@m& (0+255),w,b
  8807  000D16  5D99               	subwf	efgtoa@i& (0+255),w,b
  8808  000D18  519A               	movf	(efgtoa@i+1)& (0+255),w,b
  8809  000D1A  0A80               	xorlw	128
  8810  000D1C  6F6A               	movwf	??_efgtoa& (0+255),b
  8811  000D1E  5184               	movf	(efgtoa@m+1)& (0+255),w,b
  8812  000D20  0A80               	xorlw	128
  8813  000D22  596A               	subwfb	??_efgtoa& (0+255),w,b
  8814  000D24  A0D8               	btfss	status,0,c
  8815  000D26  EF97  F006         	goto	u6031
  8816  000D2A  EF99  F006         	goto	u6030
  8817  000D2E                     u6031:
  8818  000D2E  EF0F  F006         	goto	l5085
  8819  000D32                     u6030:
  8820  000D32                     
  8821                           ; BSR set to: 0
  8822                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.
      +                          0;
  8823  000D32  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  8824  000D36  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  8825  000D3A  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  8826  000D3E  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  8827  000D42  0E00               	movlw	0
  8828  000D44  6E20               	movwf	___flmul@a^0,c
  8829  000D46  0E00               	movlw	0
  8830  000D48  6E21               	movwf	(___flmul@a+1)^0,c
  8831  000D4A  0EA0               	movlw	160
  8832  000D4C  6E22               	movwf	(___flmul@a+2)^0,c
  8833  000D4E  0E40               	movlw	64
  8834  000D50  6E23               	movwf	(___flmul@a+3)^0,c
  8835  000D52  ECCE  F012         	call	___flmul	;wreg free
  8836  000D56  C01C  F095         	movff	?___flmul,efgtoa@l
  8837  000D5A  C01D  F096         	movff	?___flmul+1,efgtoa@l+1
  8838  000D5E  C01E  F097         	movff	?___flmul+2,efgtoa@l+2
  8839  000D62  C01F  F098         	movff	?___flmul+3,efgtoa@l+3
  8840  000D66                     
  8841                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < 
      +                          l) {
  8842  000D66  C091  F035         	movff	efgtoa@h,___flge@ff1
  8843  000D6A  C092  F036         	movff	efgtoa@h+1,___flge@ff1+1
  8844  000D6E  C093  F037         	movff	efgtoa@h+2,___flge@ff1+2
  8845  000D72  C094  F038         	movff	efgtoa@h+3,___flge@ff1+3
  8846  000D76  C095  F039         	movff	efgtoa@l,___flge@ff2
  8847  000D7A  C096  F03A         	movff	efgtoa@l+1,___flge@ff2+1
  8848  000D7E  C097  F03B         	movff	efgtoa@l+2,___flge@ff2+2
  8849  000D82  C098  F03C         	movff	efgtoa@l+3,___flge@ff2+3
  8850  000D86  ECFB  F024         	call	___flge	;wreg free
  8851  000D8A  B0D8               	btfsc	status,0,c
  8852  000D8C  EFCA  F006         	goto	u6041
  8853  000D90  EFCC  F006         	goto	u6040
  8854  000D94                     u6041:
  8855  000D94  EFD7  F006         	goto	l5101
  8856  000D98                     u6040:
  8857  000D98                     
  8858                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 
      +                          0.0;
  8859  000D98  0E00               	movlw	0
  8860  000D9A  0100               	movlb	0	; () banked
  8861  000D9C  6F95               	movwf	efgtoa@l& (0+255),b
  8862  000D9E  0E00               	movlw	0
  8863  000DA0  6F96               	movwf	(efgtoa@l+1)& (0+255),b
  8864  000DA2  0E00               	movlw	0
  8865  000DA4  6F97               	movwf	(efgtoa@l+2)& (0+255),b
  8866  000DA6  0E00               	movlw	0
  8867  000DA8  6F98               	movwf	(efgtoa@l+3)& (0+255),b
  8868                           
  8869                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  8870  000DAA  EF00  F007         	goto	l5107
  8871  000DAE                     l5101:
  8872                           
  8873                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if (
      +                          (h == l) && !(d % 2)) {
  8874  000DAE  C091  F001         	movff	efgtoa@h,___fleq@ff1
  8875  000DB2  C092  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  8876  000DB6  C093  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  8877  000DBA  C094  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  8878  000DBE  C095  F005         	movff	efgtoa@l,___fleq@ff2
  8879  000DC2  C096  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  8880  000DC6  C097  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  8881  000DCA  C098  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  8882  000DCE  EC12  F029         	call	___fleq	;wreg free
  8883  000DD2  A0D8               	btfss	status,0,c
  8884  000DD4  EFEE  F006         	goto	u6051
  8885  000DD8  EFF0  F006         	goto	u6050
  8886  000DDC                     u6051:
  8887  000DDC  EF00  F007         	goto	l5107
  8888  000DE0                     u6050:
  8889  000DE0  0100               	movlb	0	; () banked
  8890  000DE2  B187               	btfsc	efgtoa@d& (0+255),0,b
  8891  000DE4  EFF6  F006         	goto	u6061
  8892  000DE8  EFF8  F006         	goto	u6060
  8893  000DEC                     u6061:
  8894  000DEC  EF00  F007         	goto	l5107
  8895  000DF0                     u6060:
  8896  000DF0                     
  8897                           ; BSR set to: 0
  8898                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             
      +                          l = 0.0;
  8899  000DF0  0E00               	movlw	0
  8900  000DF2  6F95               	movwf	efgtoa@l& (0+255),b
  8901  000DF4  0E00               	movlw	0
  8902  000DF6  6F96               	movwf	(efgtoa@l+1)& (0+255),b
  8903  000DF8  0E00               	movlw	0
  8904  000DFA  6F97               	movwf	(efgtoa@l+2)& (0+255),b
  8905  000DFC  0E00               	movlw	0
  8906  000DFE  6F98               	movwf	(efgtoa@l+3)& (0+255),b
  8907  000E00                     l5107:
  8908                           
  8909                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + 
      +                          l;
  8910  000E00  C09B  F035         	movff	efgtoa@g,___fladd@b
  8911  000E04  C09C  F036         	movff	efgtoa@g+1,___fladd@b+1
  8912  000E08  C09D  F037         	movff	efgtoa@g+2,___fladd@b+2
  8913  000E0C  C09E  F038         	movff	efgtoa@g+3,___fladd@b+3
  8914  000E10  C095  F039         	movff	efgtoa@l,___fladd@a
  8915  000E14  C096  F03A         	movff	efgtoa@l+1,___fladd@a+1
  8916  000E18  C097  F03B         	movff	efgtoa@l+2,___fladd@a+2
  8917  000E1C  C098  F03C         	movff	efgtoa@l+3,___fladd@a+3
  8918  000E20  EC6E  F010         	call	___fladd	;wreg free
  8919  000E24  C035  F091         	movff	?___fladd,efgtoa@h
  8920  000E28  C036  F092         	movff	?___fladd+1,efgtoa@h+1
  8921  000E2C  C037  F093         	movff	?___fladd+2,efgtoa@h+2
  8922  000E30  C038  F094         	movff	?___fladd+3,efgtoa@h+3
  8923  000E34                     
  8924                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  8925  000E34  C06F  F0A3         	movff	efgtoa@ou,efgtoa@u
  8926  000E38  C070  F0A4         	movff	efgtoa@ou+1,efgtoa@u+1
  8927  000E3C  C071  F0A5         	movff	efgtoa@ou+2,efgtoa@u+2
  8928  000E40  C072  F0A6         	movff	efgtoa@ou+3,efgtoa@u+3
  8929  000E44                     
  8930                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  8931  000E44  0E65               	movlw	101
  8932  000E46  0100               	movlb	0	; () banked
  8933  000E48  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8934  000E4A  B4D8               	btfsc	status,2,c
  8935  000E4C  EF2A  F007         	goto	u6071
  8936  000E50  EF2C  F007         	goto	u6070
  8937  000E54                     u6071:
  8938  000E54  EF32  F007         	goto	l5115
  8939  000E58                     u6070:
  8940  000E58                     
  8941                           ; BSR set to: 0
  8942  000E58  C09F  F085         	movff	efgtoa@e,efgtoa@ne
  8943  000E5C  C0A0  F086         	movff	efgtoa@e+1,efgtoa@ne+1
  8944  000E60  EF36  F007         	goto	l1367
  8945  000E64                     l5115:
  8946                           
  8947                           ; BSR set to: 0
  8948  000E64  0E00               	movlw	0
  8949  000E66  6F86               	movwf	(efgtoa@ne+1)& (0+255),b
  8950  000E68  0E00               	movlw	0
  8951  000E6A  6F85               	movwf	efgtoa@ne& (0+255),b
  8952  000E6C                     l1367:
  8953                           
  8954                           ; BSR set to: 0
  8955                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  8956  000E6C  0E00               	movlw	0
  8957  000E6E  6F82               	movwf	(efgtoa@pp+1)& (0+255),b
  8958  000E70  0E00               	movlw	0
  8959  000E72  6F81               	movwf	efgtoa@pp& (0+255),b
  8960                           
  8961                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  8962  000E74  0E00               	movlw	0
  8963  000E76  6F80               	movwf	(efgtoa@t+1)& (0+255),b
  8964  000E78  0E00               	movlw	0
  8965  000E7A  6F7F               	movwf	efgtoa@t& (0+255),b
  8966                           
  8967                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  8968  000E7C  0E00               	movlw	0
  8969  000E7E  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  8970  000E80  0E00               	movlw	0
  8971  000E82  6F99               	movwf	efgtoa@i& (0+255),b
  8972                           
  8973                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  8974  000E84  EF31  F008         	goto	l5165
  8975  000E88                     l5117:
  8976                           
  8977                           ; BSR set to: 0
  8978                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = 
      +                          floorf(h/u);
  8979  000E88  C091  F035         	movff	efgtoa@h,___fldiv@b
  8980  000E8C  C092  F036         	movff	efgtoa@h+1,___fldiv@b+1
  8981  000E90  C093  F037         	movff	efgtoa@h+2,___fldiv@b+2
  8982  000E94  C094  F038         	movff	efgtoa@h+3,___fldiv@b+3
  8983  000E98  C0A3  F039         	movff	efgtoa@u,___fldiv@a
  8984  000E9C  C0A4  F03A         	movff	efgtoa@u+1,___fldiv@a+1
  8985  000EA0  C0A5  F03B         	movff	efgtoa@u+2,___fldiv@a+2
  8986  000EA4  C0A6  F03C         	movff	efgtoa@u+3,___fldiv@a+3
  8987  000EA8  ECE3  F014         	call	___fldiv	;wreg free
  8988  000EAC  C035  F04E         	movff	?___fldiv,floorf@x
  8989  000EB0  C036  F04F         	movff	?___fldiv+1,floorf@x+1
  8990  000EB4  C037  F050         	movff	?___fldiv+2,floorf@x+2
  8991  000EB8  C038  F051         	movff	?___fldiv+3,floorf@x+3
  8992  000EBC  ECFF  F01A         	call	_floorf	;wreg free
  8993  000EC0  C04E  F095         	movff	?_floorf,efgtoa@l
  8994  000EC4  C04F  F096         	movff	?_floorf+1,efgtoa@l+1
  8995  000EC8  C050  F097         	movff	?_floorf+2,efgtoa@l+2
  8996  000ECC  C051  F098         	movff	?_floorf+3,efgtoa@l+3
  8997                           
  8998                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = 
      +                          (int)l;
  8999  000ED0  C095  F04E         	movff	efgtoa@l,___fltol@f1
  9000  000ED4  C096  F04F         	movff	efgtoa@l+1,___fltol@f1+1
  9001  000ED8  C097  F050         	movff	efgtoa@l+2,___fltol@f1+2
  9002  000EDC  C098  F051         	movff	efgtoa@l+3,___fltol@f1+3
  9003  000EE0  ECF6  F023         	call	___fltol	;wreg free
  9004  000EE4  C04E  F087         	movff	?___fltol,efgtoa@d
  9005  000EE8  C04F  F088         	movff	?___fltol+1,efgtoa@d+1
  9006  000EEC                     
  9007                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  9008  000EEC  0100               	movlb	0	; () banked
  9009  000EEE  B9F8               	btfsc	_flags& (0+255),4,b
  9010  000EF0  EF7C  F007         	goto	u6081
  9011  000EF4  EF7E  F007         	goto	u6080
  9012  000EF8                     u6081:
  9013  000EF8  EF9B  F007         	goto	l5129
  9014  000EFC                     u6080:
  9015  000EFC                     
  9016                           ; BSR set to: 0
  9017  000EFC  5187               	movf	efgtoa@d& (0+255),w,b
  9018  000EFE  1188               	iorwf	(efgtoa@d+1)& (0+255),w,b
  9019  000F00  A4D8               	btfss	status,2,c
  9020  000F02  EF85  F007         	goto	u6091
  9021  000F06  EF87  F007         	goto	u6090
  9022  000F0A                     u6091:
  9023  000F0A  EF9B  F007         	goto	l5129
  9024  000F0E                     u6090:
  9025  000F0E                     
  9026                           ; BSR set to: 0
  9027  000F0E  0E67               	movlw	103
  9028  000F10  1990               	xorwf	efgtoa@mode& (0+255),w,b
  9029  000F12  A4D8               	btfss	status,2,c
  9030  000F14  EF8E  F007         	goto	u6101
  9031  000F18  EF90  F007         	goto	u6100
  9032  000F1C                     u6101:
  9033  000F1C  EF9B  F007         	goto	l5129
  9034  000F20                     u6100:
  9035  000F20                     
  9036                           ; BSR set to: 0
  9037  000F20  BF86               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  9038  000F22  EF97  F007         	goto	u6110
  9039  000F26  EF95  F007         	goto	u6111
  9040  000F2A                     u6111:
  9041  000F2A  EF9B  F007         	goto	l5129
  9042  000F2E                     u6110:
  9043  000F2E                     
  9044                           ; BSR set to: 0
  9045                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             
      +                          ++t;
  9046  000F2E  4B7F               	infsnz	efgtoa@t& (0+255),f,b
  9047  000F30  2B80               	incf	(efgtoa@t+1)& (0+255),f,b
  9048                           
  9049                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } el
      +                          se {
  9050  000F32  EFE5  F007         	goto	l5157
  9051  000F36                     l5129:
  9052                           
  9053                           ; BSR set to: 0
  9054                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             
      +                          if (!pp && (ne < 0)) {
  9055  000F36  5181               	movf	efgtoa@pp& (0+255),w,b
  9056  000F38  1182               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  9057  000F3A  A4D8               	btfss	status,2,c
  9058  000F3C  EFA2  F007         	goto	u6121
  9059  000F40  EFA4  F007         	goto	u6120
  9060  000F44                     u6121:
  9061  000F44  EFCE  F007         	goto	l5149
  9062  000F48                     u6120:
  9063  000F48                     
  9064                           ; BSR set to: 0
  9065  000F48  BF86               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  9066  000F4A  EFAB  F007         	goto	u6130
  9067  000F4E  EFA9  F007         	goto	u6131
  9068  000F52                     u6131:
  9069  000F52  EFCE  F007         	goto	l5149
  9070  000F56                     u6130:
  9071  000F56                     
  9072                           ; BSR set to: 0
  9073                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:             
      +                              dbuf[n++] = '.';
  9074  000F56  0E40               	movlw	low _dbuf
  9075  000F58  25A1               	addwf	efgtoa@n& (0+255),w,b
  9076  000F5A  6ED9               	movwf	fsr2l,c
  9077  000F5C  0E02               	movlw	high _dbuf
  9078  000F5E  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9079  000F60  6EDA               	movwf	fsr2h,c
  9080  000F62  0E2E               	movlw	46
  9081  000F64  6EDF               	movwf	indf2,c
  9082  000F66                     
  9083                           ; BSR set to: 0
  9084  000F66  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  9085  000F68  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  9086  000F6A                     
  9087                           ; BSR set to: 0
  9088                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:             
      +                              --w;
  9089  000F6A  078E               	decf	efgtoa@w& (0+255),f,b
  9090  000F6C  A0D8               	btfss	status,0,c
  9091  000F6E  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  9092  000F70                     
  9093                           ; BSR set to: 0
  9094                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:             
      +                              pp = 1;
  9095  000F70  0E00               	movlw	0
  9096  000F72  6F82               	movwf	(efgtoa@pp+1)& (0+255),b
  9097  000F74  0E01               	movlw	1
  9098  000F76  6F81               	movwf	efgtoa@pp& (0+255),b
  9099  000F78  EFCE  F007         	goto	l5149
  9100  000F7C                     l5141:
  9101                           
  9102                           ; BSR set to: 0
  9103                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:             
      +                              dbuf[n++] = '0';
  9104  000F7C  0E40               	movlw	low _dbuf
  9105  000F7E  25A1               	addwf	efgtoa@n& (0+255),w,b
  9106  000F80  6ED9               	movwf	fsr2l,c
  9107  000F82  0E02               	movlw	high _dbuf
  9108  000F84  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9109  000F86  6EDA               	movwf	fsr2h,c
  9110  000F88  0E30               	movlw	48
  9111  000F8A  6EDF               	movwf	indf2,c
  9112  000F8C                     
  9113                           ; BSR set to: 0
  9114  000F8C  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  9115  000F8E  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  9116  000F90                     
  9117                           ; BSR set to: 0
  9118                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:             
      +                              --w;
  9119  000F90  078E               	decf	efgtoa@w& (0+255),f,b
  9120  000F92  A0D8               	btfss	status,0,c
  9121  000F94  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  9122  000F96                     
  9123                           ; BSR set to: 0
  9124                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:             
      +                              --t;
  9125  000F96  077F               	decf	efgtoa@t& (0+255),f,b
  9126  000F98  A0D8               	btfss	status,0,c
  9127  000F9A  0780               	decf	(efgtoa@t+1)& (0+255),f,b
  9128  000F9C                     l5149:
  9129                           
  9130                           ; BSR set to: 0
  9131                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             
      +                          while (t) {
  9132  000F9C  517F               	movf	efgtoa@t& (0+255),w,b
  9133  000F9E  1180               	iorwf	(efgtoa@t+1)& (0+255),w,b
  9134  000FA0  A4D8               	btfss	status,2,c
  9135  000FA2  EFD5  F007         	goto	u6141
  9136  000FA6  EFD7  F007         	goto	u6140
  9137  000FAA                     u6141:
  9138  000FAA  EFBE  F007         	goto	l5141
  9139  000FAE                     u6140:
  9140  000FAE                     
  9141                           ; BSR set to: 0
  9142                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             
      +                          dbuf[n++] = '0' + d;
  9143  000FAE  0E40               	movlw	low _dbuf
  9144  000FB0  25A1               	addwf	efgtoa@n& (0+255),w,b
  9145  000FB2  6ED9               	movwf	fsr2l,c
  9146  000FB4  0E02               	movlw	high _dbuf
  9147  000FB6  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9148  000FB8  6EDA               	movwf	fsr2h,c
  9149  000FBA  5187               	movf	efgtoa@d& (0+255),w,b
  9150  000FBC  0F30               	addlw	48
  9151  000FBE  6EDF               	movwf	indf2,c
  9152  000FC0                     
  9153                           ; BSR set to: 0
  9154  000FC0  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  9155  000FC2  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  9156  000FC4                     
  9157                           ; BSR set to: 0
  9158                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             
      +                          --w;
  9159  000FC4  078E               	decf	efgtoa@w& (0+255),f,b
  9160  000FC6  A0D8               	btfss	status,0,c
  9161  000FC8  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  9162  000FCA                     l5157:
  9163                           
  9164                           ; BSR set to: 0
  9165                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -=
      +                           l*u;
  9166  000FCA  C091  F045         	movff	efgtoa@h,___flsub@b
  9167  000FCE  C092  F046         	movff	efgtoa@h+1,___flsub@b+1
  9168  000FD2  C093  F047         	movff	efgtoa@h+2,___flsub@b+2
  9169  000FD6  C094  F048         	movff	efgtoa@h+3,___flsub@b+3
  9170  000FDA  C0A3  F020         	movff	efgtoa@u,___flmul@a
  9171  000FDE  C0A4  F021         	movff	efgtoa@u+1,___flmul@a+1
  9172  000FE2  C0A5  F022         	movff	efgtoa@u+2,___flmul@a+2
  9173  000FE6  C0A6  F023         	movff	efgtoa@u+3,___flmul@a+3
  9174  000FEA  C095  F01C         	movff	efgtoa@l,___flmul@b
  9175  000FEE  C096  F01D         	movff	efgtoa@l+1,___flmul@b+1
  9176  000FF2  C097  F01E         	movff	efgtoa@l+2,___flmul@b+2
  9177  000FF6  C098  F01F         	movff	efgtoa@l+3,___flmul@b+3
  9178  000FFA  ECCE  F012         	call	___flmul	;wreg free
  9179  000FFE  C01C  F049         	movff	?___flmul,___flsub@a
  9180  001002  C01D  F04A         	movff	?___flmul+1,___flsub@a+1
  9181  001006  C01E  F04B         	movff	?___flmul+2,___flsub@a+2
  9182  00100A  C01F  F04C         	movff	?___flmul+3,___flsub@a+3
  9183  00100E  EC9C  F02C         	call	___flsub	;wreg free
  9184  001012  C045  F091         	movff	?___flsub,efgtoa@h
  9185  001016  C046  F092         	movff	?___flsub+1,efgtoa@h+1
  9186  00101A  C047  F093         	movff	?___flsub+2,efgtoa@h+2
  9187  00101E  C048  F094         	movff	?___flsub+3,efgtoa@h+3
  9188  001022                     
  9189                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = 
      +                          u/10.0;
  9190  001022  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  9191  001026  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  9192  00102A  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  9193  00102E  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  9194  001032  0E00               	movlw	0
  9195  001034  6E39               	movwf	___fldiv@a^0,c
  9196  001036  0E00               	movlw	0
  9197  001038  6E3A               	movwf	(___fldiv@a+1)^0,c
  9198  00103A  0E20               	movlw	32
  9199  00103C  6E3B               	movwf	(___fldiv@a+2)^0,c
  9200  00103E  0E41               	movlw	65
  9201  001040  6E3C               	movwf	(___fldiv@a+3)^0,c
  9202  001042  ECE3  F014         	call	___fldiv	;wreg free
  9203  001046  C035  F0A3         	movff	?___fldiv,efgtoa@u
  9204  00104A  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  9205  00104E  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  9206  001052  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  9207  001056                     
  9208                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne
      +                          ;
  9209  001056  0100               	movlb	0	; () banked
  9210  001058  0785               	decf	efgtoa@ne& (0+255),f,b
  9211  00105A  A0D8               	btfss	status,0,c
  9212  00105C  0786               	decf	(efgtoa@ne+1)& (0+255),f,b
  9213  00105E                     
  9214                           ; BSR set to: 0
  9215                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  9216  00105E  4B99               	infsnz	efgtoa@i& (0+255),f,b
  9217  001060  2B9A               	incf	(efgtoa@i+1)& (0+255),f,b
  9218  001062                     l5165:
  9219                           
  9220                           ; BSR set to: 0
  9221                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  9222  001062  5183               	movf	efgtoa@m& (0+255),w,b
  9223  001064  5D99               	subwf	efgtoa@i& (0+255),w,b
  9224  001066  519A               	movf	(efgtoa@i+1)& (0+255),w,b
  9225  001068  0A80               	xorlw	128
  9226  00106A  6F6A               	movwf	??_efgtoa& (0+255),b
  9227  00106C  5184               	movf	(efgtoa@m+1)& (0+255),w,b
  9228  00106E  0A80               	xorlw	128
  9229  001070  596A               	subwfb	??_efgtoa& (0+255),w,b
  9230  001072  B0D8               	btfsc	status,0,c
  9231  001074  EF3E  F008         	goto	u6151
  9232  001078  EF40  F008         	goto	u6150
  9233  00107C                     u6151:
  9234  00107C  EF4E  F008         	goto	l5169
  9235  001080                     u6150:
  9236  001080                     
  9237                           ; BSR set to: 0
  9238  001080  BFA2               	btfsc	(efgtoa@n+1)& (0+255),7,b
  9239  001082  EF4C  F008         	goto	u6161
  9240  001086  51A2               	movf	(efgtoa@n+1)& (0+255),w,b
  9241  001088  E109               	bnz	u6160
  9242  00108A  0E4B               	movlw	75
  9243  00108C  5DA1               	subwf	efgtoa@n& (0+255),w,b
  9244  00108E  A0D8               	btfss	status,0,c
  9245  001090  EF4C  F008         	goto	u6161
  9246  001094  EF4E  F008         	goto	u6160
  9247  001098                     u6161:
  9248  001098  EF44  F007         	goto	l5117
  9249  00109C                     u6160:
  9250  00109C                     l5169:
  9251                           
  9252                           ; BSR set to: 0
  9253                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp 
      +                          && (flags & (1 << 4))) {
  9254  00109C  5181               	movf	efgtoa@pp& (0+255),w,b
  9255  00109E  1182               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  9256  0010A0  A4D8               	btfss	status,2,c
  9257  0010A2  EF55  F008         	goto	u6171
  9258  0010A6  EF57  F008         	goto	u6170
  9259  0010AA                     u6171:
  9260  0010AA  EF68  F008         	goto	l5177
  9261  0010AE                     u6170:
  9262  0010AE                     
  9263                           ; BSR set to: 0
  9264  0010AE  A9F8               	btfss	_flags& (0+255),4,b
  9265  0010B0  EF5C  F008         	goto	u6181
  9266  0010B4  EF5E  F008         	goto	u6180
  9267  0010B8                     u6181:
  9268  0010B8  EF68  F008         	goto	l5177
  9269  0010BC                     u6180:
  9270  0010BC                     
  9271                           ; BSR set to: 0
  9272                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf
      +                          [n++] = '.';
  9273  0010BC  0E40               	movlw	low _dbuf
  9274  0010BE  25A1               	addwf	efgtoa@n& (0+255),w,b
  9275  0010C0  6ED9               	movwf	fsr2l,c
  9276  0010C2  0E02               	movlw	high _dbuf
  9277  0010C4  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9278  0010C6  6EDA               	movwf	fsr2h,c
  9279  0010C8  0E2E               	movlw	46
  9280  0010CA  6EDF               	movwf	indf2,c
  9281  0010CC                     
  9282                           ; BSR set to: 0
  9283  0010CC  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  9284  0010CE  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  9285  0010D0                     l5177:
  9286                           
  9287                           ; BSR set to: 0
  9288                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] 
      +                          = '\0';
  9289  0010D0  0E40               	movlw	low _dbuf
  9290  0010D2  25A1               	addwf	efgtoa@n& (0+255),w,b
  9291  0010D4  6ED9               	movwf	fsr2l,c
  9292  0010D6  0E02               	movlw	high _dbuf
  9293  0010D8  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9294  0010DA  6EDA               	movwf	fsr2h,c
  9295  0010DC  0E00               	movlw	0
  9296  0010DE  6EDF               	movwf	indf2,c
  9297  0010E0                     
  9298                           ; BSR set to: 0
  9299                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmod
      +                          e == 'e') {
  9300  0010E0  0E65               	movlw	101
  9301  0010E2  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  9302  0010E4  A4D8               	btfss	status,2,c
  9303  0010E6  EF77  F008         	goto	u6191
  9304  0010EA  EF79  F008         	goto	u6190
  9305  0010EE                     u6191:
  9306  0010EE  EF27  F004         	goto	l4989
  9307  0010F2                     u6190:
  9308  0010F2                     
  9309                           ; BSR set to: 0
  9310                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = 
      +                          sizeof(dbuf) - 1;
  9311  0010F2  0E00               	movlw	0
  9312  0010F4  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  9313  0010F6  0E4F               	movlw	79
  9314  0010F8  6F99               	movwf	efgtoa@i& (0+255),b
  9315  0010FA                     
  9316                           ; BSR set to: 0
  9317                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf
      +                          [i] = '\0';
  9318  0010FA  0E40               	movlw	low _dbuf
  9319  0010FC  2599               	addwf	efgtoa@i& (0+255),w,b
  9320  0010FE  6ED9               	movwf	fsr2l,c
  9321  001100  0E02               	movlw	high _dbuf
  9322  001102  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9323  001104  6EDA               	movwf	fsr2h,c
  9324  001106  0E00               	movlw	0
  9325  001108  6EDF               	movwf	indf2,c
  9326  00110A                     
  9327                           ; BSR set to: 0
  9328                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign
      +                           = 0;
  9329  00110A  0E00               	movlw	0
  9330  00110C  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  9331  00110E  0E00               	movlw	0
  9332  001110  6F89               	movwf	efgtoa@sign& (0+255),b
  9333  001112                     
  9334                           ; BSR set to: 0
  9335                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (
      +                          e < 0) {
  9336  001112  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9337  001114  EF90  F008         	goto	u6200
  9338  001118  EF8E  F008         	goto	u6201
  9339  00111C                     u6201:
  9340  00111C  EF98  F008         	goto	l5193
  9341  001120                     u6200:
  9342  001120                     
  9343                           ; BSR set to: 0
  9344                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             
      +                          sign = 1;
  9345  001120  0E00               	movlw	0
  9346  001122  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  9347  001124  0E01               	movlw	1
  9348  001126  6F89               	movwf	efgtoa@sign& (0+255),b
  9349  001128                     
  9350                           ; BSR set to: 0
  9351                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             
      +                          e = -e;
  9352  001128  6D9F               	negf	efgtoa@e& (0+255),b
  9353  00112A  1FA0               	comf	(efgtoa@e+1)& (0+255),f,b
  9354  00112C  B0D8               	btfsc	status,0,c
  9355  00112E  2BA0               	incf	(efgtoa@e+1)& (0+255),f,b
  9356  001130                     l5193:
  9357                           
  9358                           ; BSR set to: 0
  9359                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 
      +                          2;
  9360  001130  0E00               	movlw	0
  9361  001132  6F8C               	movwf	(efgtoa@p+1)& (0+255),b
  9362  001134  0E02               	movlw	2
  9363  001136  6F8B               	movwf	efgtoa@p& (0+255),b
  9364                           
  9365                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  9366  001138  EFC9  F008         	goto	l5205
  9367  00113C                     l5195:
  9368                           
  9369                           ; BSR set to: 0
  9370                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             
      +                          --i;
  9371  00113C  0799               	decf	efgtoa@i& (0+255),f,b
  9372  00113E  A0D8               	btfss	status,0,c
  9373  001140  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  9374  001142                     
  9375                           ; BSR set to: 0
  9376                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             
      +                          dbuf[i] = '0' + (e % 10);
  9377  001142  0E40               	movlw	low _dbuf
  9378  001144  2599               	addwf	efgtoa@i& (0+255),w,b
  9379  001146  6ED9               	movwf	fsr2l,c
  9380  001148  0E02               	movlw	high _dbuf
  9381  00114A  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9382  00114C  6EDA               	movwf	fsr2h,c
  9383  00114E  C09F  F001         	movff	efgtoa@e,___awmod@dividend
  9384  001152  C0A0  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  9385  001156  0E00               	movlw	0
  9386  001158  6E04               	movwf	(___awmod@divisor+1)^0,c
  9387  00115A  0E0A               	movlw	10
  9388  00115C  6E03               	movwf	___awmod@divisor^0,c
  9389  00115E  ECBA  F028         	call	___awmod	;wreg free
  9390  001162  5001               	movf	?___awmod^0,w,c
  9391  001164  0F30               	addlw	48
  9392  001166  6EDF               	movwf	indf2,c
  9393  001168                     
  9394                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             
      +                          e = e / 10;
  9395  001168  C09F  F001         	movff	efgtoa@e,___awdiv@dividend
  9396  00116C  C0A0  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  9397  001170  0E00               	movlw	0
  9398  001172  6E04               	movwf	(___awdiv@divisor+1)^0,c
  9399  001174  0E0A               	movlw	10
  9400  001176  6E03               	movwf	___awdiv@divisor^0,c
  9401  001178  ECFF  F027         	call	___awdiv	;wreg free
  9402  00117C  C001  F09F         	movff	?___awdiv,efgtoa@e
  9403  001180  C002  F0A0         	movff	?___awdiv+1,efgtoa@e+1
  9404  001184                     
  9405                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             
      +                          --p;
  9406  001184  0100               	movlb	0	; () banked
  9407  001186  078B               	decf	efgtoa@p& (0+255),f,b
  9408  001188  A0D8               	btfss	status,0,c
  9409  00118A  078C               	decf	(efgtoa@p+1)& (0+255),f,b
  9410  00118C                     
  9411                           ; BSR set to: 0
  9412                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             
      +                          --w;
  9413  00118C  078E               	decf	efgtoa@w& (0+255),f,b
  9414  00118E  A0D8               	btfss	status,0,c
  9415  001190  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  9416  001192                     l5205:
  9417                           
  9418                           ; BSR set to: 0
  9419                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  9420  001192  519F               	movf	efgtoa@e& (0+255),w,b
  9421  001194  11A0               	iorwf	(efgtoa@e+1)& (0+255),w,b
  9422  001196  A4D8               	btfss	status,2,c
  9423  001198  EFD0  F008         	goto	u6211
  9424  00119C  EFD2  F008         	goto	u6210
  9425  0011A0                     u6211:
  9426  0011A0  EF9E  F008         	goto	l5195
  9427  0011A4                     u6210:
  9428  0011A4                     
  9429                           ; BSR set to: 0
  9430  0011A4  BF8C               	btfsc	(efgtoa@p+1)& (0+255),7,b
  9431  0011A6  EFDF  F008         	goto	u6220
  9432  0011AA  518C               	movf	(efgtoa@p+1)& (0+255),w,b
  9433  0011AC  E106               	bnz	u6221
  9434  0011AE  058B               	decf	efgtoa@p& (0+255),w,b
  9435  0011B0  B0D8               	btfsc	status,0,c
  9436  0011B2  EFDD  F008         	goto	u6221
  9437  0011B6  EFDF  F008         	goto	u6220
  9438  0011BA                     u6221:
  9439  0011BA  EF9E  F008         	goto	l5195
  9440  0011BE                     u6220:
  9441  0011BE                     
  9442                           ; BSR set to: 0
  9443                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  9444  0011BE  0799               	decf	efgtoa@i& (0+255),f,b
  9445  0011C0  A0D8               	btfss	status,0,c
  9446  0011C2  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  9447  0011C4                     
  9448                           ; BSR set to: 0
  9449                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [i] = sign ? '-' : '+';
  9450  0011C4  5189               	movf	efgtoa@sign& (0+255),w,b
  9451  0011C6  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  9452  0011C8  A4D8               	btfss	status,2,c
  9453  0011CA  EFE9  F008         	goto	u6231
  9454  0011CE  EFEB  F008         	goto	u6230
  9455  0011D2                     u6231:
  9456  0011D2  EFF1  F008         	goto	l5215
  9457  0011D6                     u6230:
  9458  0011D6                     
  9459                           ; BSR set to: 0
  9460  0011D6  0E00               	movlw	0
  9461  0011D8  6F7A               	movwf	(_efgtoa$2578+1)& (0+255),b
  9462  0011DA  0E2B               	movlw	43
  9463  0011DC  6F79               	movwf	_efgtoa$2578& (0+255),b
  9464  0011DE  EFF5  F008         	goto	l5217
  9465  0011E2                     l5215:
  9466                           
  9467                           ; BSR set to: 0
  9468  0011E2  0E00               	movlw	0
  9469  0011E4  6F7A               	movwf	(_efgtoa$2578+1)& (0+255),b
  9470  0011E6  0E2D               	movlw	45
  9471  0011E8  6F79               	movwf	_efgtoa$2578& (0+255),b
  9472  0011EA                     l5217:
  9473                           
  9474                           ; BSR set to: 0
  9475  0011EA  0E40               	movlw	low _dbuf
  9476  0011EC  2599               	addwf	efgtoa@i& (0+255),w,b
  9477  0011EE  6ED9               	movwf	fsr2l,c
  9478  0011F0  0E02               	movlw	high _dbuf
  9479  0011F2  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9480  0011F4  6EDA               	movwf	fsr2h,c
  9481  0011F6  C079  FFDF         	movff	_efgtoa$2578,indf2
  9482  0011FA                     
  9483                           ; BSR set to: 0
  9484                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  9485  0011FA  078E               	decf	efgtoa@w& (0+255),f,b
  9486  0011FC  A0D8               	btfss	status,0,c
  9487  0011FE  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  9488  001200                     
  9489                           ; BSR set to: 0
  9490                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  9491  001200  0799               	decf	efgtoa@i& (0+255),f,b
  9492  001202  A0D8               	btfss	status,0,c
  9493  001204  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  9494  001206                     
  9495                           ; BSR set to: 0
  9496  001206  0EBF               	movlw	191
  9497  001208  6F6A               	movwf	??_efgtoa& (0+255),b
  9498  00120A  0EFF               	movlw	255
  9499  00120C  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  9500  00120E  505E               	movf	efgtoa@c^0,w,c
  9501  001210  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  9502  001212  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  9503  001214  516A               	movf	??_efgtoa& (0+255),w,b
  9504  001216  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  9505  001218  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  9506  00121A  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  9507  00121C  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  9508  00121E  E10A               	bnz	u6240
  9509  001220  0E1A               	movlw	26
  9510  001222  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  9511  001224  A0D8               	btfss	status,0,c
  9512  001226  EF17  F009         	goto	u6241
  9513  00122A  EF1A  F009         	goto	u6240
  9514  00122E                     u6241:
  9515  00122E  0E01               	movlw	1
  9516  001230  EF1B  F009         	goto	u6250
  9517  001234                     u6240:
  9518  001234  0E00               	movlw	0
  9519  001236                     u6250:
  9520  001236  6F7D               	movwf	_efgtoa$2580& (0+255),b
  9521  001238  6B7E               	clrf	(_efgtoa$2580+1)& (0+255),b
  9522  00123A                     
  9523                           ; BSR set to: 0
  9524  00123A  517D               	movf	_efgtoa$2580& (0+255),w,b
  9525  00123C  117E               	iorwf	(_efgtoa$2580+1)& (0+255),w,b
  9526  00123E  A4D8               	btfss	status,2,c
  9527  001240  EF24  F009         	goto	u6261
  9528  001244  EF26  F009         	goto	u6260
  9529  001248                     u6261:
  9530  001248  EF2C  F009         	goto	l5231
  9531  00124C                     u6260:
  9532  00124C                     
  9533                           ; BSR set to: 0
  9534  00124C  0E00               	movlw	0
  9535  00124E  6F7C               	movwf	(_efgtoa$2579+1)& (0+255),b
  9536  001250  0E65               	movlw	101
  9537  001252  6F7B               	movwf	_efgtoa$2579& (0+255),b
  9538  001254  EF30  F009         	goto	l5233
  9539  001258                     l5231:
  9540                           
  9541                           ; BSR set to: 0
  9542  001258  0E00               	movlw	0
  9543  00125A  6F7C               	movwf	(_efgtoa$2579+1)& (0+255),b
  9544  00125C  0E45               	movlw	69
  9545  00125E  6F7B               	movwf	_efgtoa$2579& (0+255),b
  9546  001260                     l5233:
  9547                           
  9548                           ; BSR set to: 0
  9549  001260  0E40               	movlw	low _dbuf
  9550  001262  2599               	addwf	efgtoa@i& (0+255),w,b
  9551  001264  6ED9               	movwf	fsr2l,c
  9552  001266  0E02               	movlw	high _dbuf
  9553  001268  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9554  00126A  6EDA               	movwf	fsr2h,c
  9555  00126C  C07B  FFDF         	movff	_efgtoa$2579,indf2
  9556  001270                     
  9557                           ; BSR set to: 0
  9558                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  9559  001270  078E               	decf	efgtoa@w& (0+255),f,b
  9560  001272  A0D8               	btfss	status,0,c
  9561  001274  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  9562  001276                     
  9563                           ; BSR set to: 0
  9564                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  9565  001276  0E40               	movlw	low _dbuf
  9566  001278  25A1               	addwf	efgtoa@n& (0+255),w,b
  9567  00127A  6E01               	movwf	strcpy@dest^0,c
  9568  00127C  0E02               	movlw	high _dbuf
  9569  00127E  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9570  001280  6E02               	movwf	(strcpy@dest+1)^0,c
  9571  001282  0E40               	movlw	low _dbuf
  9572  001284  2599               	addwf	efgtoa@i& (0+255),w,b
  9573  001286  6E03               	movwf	strcpy@src^0,c
  9574  001288  0E02               	movlw	high _dbuf
  9575  00128A  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9576  00128C  6E04               	movwf	(strcpy@src+1)^0,c
  9577  00128E  ECC5  F02B         	call	_strcpy	;wreg free
  9578  001292  EF27  F004         	goto	l4989
  9579  001296                     l1323:
  9580  001296  0012               	return		;funcret
  9581  001298                     __end_of_efgtoa:
  9582                           	callstack 0
  9583                           
  9584 ;; *************** function _tolower *****************
  9585 ;; Defined at:
  9586 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\tolower.c"
  9587 ;; Parameters:    Size  Location     Type
  9588 ;;  c               2    6[COMRAM] int 
  9589 ;; Auto vars:     Size  Location     Type
  9590 ;;		None
  9591 ;; Return value:  Size  Location     Type
  9592 ;;                  2    6[COMRAM] int 
  9593 ;; Registers used:
  9594 ;;		wreg, status,2, status,0
  9595 ;; Tracked objects:
  9596 ;;		On entry : 0/0
  9597 ;;		On exit  : 0/0
  9598 ;;		Unchanged: 0/0
  9599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9600 ;;      Params:         2       0       0       0       0       0       0
  9601 ;;      Locals:         2       0       0       0       0       0       0
  9602 ;;      Temps:          4       0       0       0       0       0       0
  9603 ;;      Totals:         8       0       0       0       0       0       0
  9604 ;;Total ram usage:        8 bytes
  9605 ;; Hardware stack levels used:    1
  9606 ;; Hardware stack levels required when called:    2
  9607 ;; This function calls:
  9608 ;;		_isupper
  9609 ;; This function is called by:
  9610 ;;		_efgtoa
  9611 ;;		_vfpfcnvrt
  9612 ;; This function uses a non-reentrant model
  9613 ;;
  9614                           
  9615                           	psect	text33
  9616  00572A                     __ptext33:
  9617                           	callstack 0
  9618  00572A                     _tolower:
  9619                           	callstack 22
  9620  00572A  0EBF               	movlw	191
  9621  00572C  6E09               	movwf	??_tolower^0,c
  9622  00572E  0EFF               	movlw	255
  9623  005730  6E0A               	movwf	(??_tolower+1)^0,c
  9624  005732  C007  F00B         	movff	tolower@c,??_tolower+2
  9625  005736  C008  F00C         	movff	tolower@c+1,??_tolower+3
  9626  00573A  5009               	movf	??_tolower^0,w,c
  9627  00573C  260B               	addwf	(??_tolower+2)^0,f,c
  9628  00573E  500A               	movf	(??_tolower+1)^0,w,c
  9629  005740  220C               	addwfc	(??_tolower+3)^0,f,c
  9630  005742  500C               	movf	(??_tolower+3)^0,w,c
  9631  005744  E10A               	bnz	u5430
  9632  005746  0E1A               	movlw	26
  9633  005748  5C0B               	subwf	(??_tolower+2)^0,w,c
  9634  00574A  A0D8               	btfss	status,0,c
  9635  00574C  EFAA  F02B         	goto	u5431
  9636  005750  EFAD  F02B         	goto	u5430
  9637  005754                     u5431:
  9638  005754  0E01               	movlw	1
  9639  005756  EFAE  F02B         	goto	u5440
  9640  00575A                     u5430:
  9641  00575A  0E00               	movlw	0
  9642  00575C                     u5440:
  9643  00575C  6E0D               	movwf	_tolower$2731^0,c
  9644  00575E  6A0E               	clrf	(_tolower$2731+1)^0,c
  9645  005760  500D               	movf	_tolower$2731^0,w,c
  9646  005762  100E               	iorwf	(_tolower$2731+1)^0,w,c
  9647  005764  B4D8               	btfsc	status,2,c
  9648  005766  EFB7  F02B         	goto	u5451
  9649  00576A  EFB9  F02B         	goto	u5450
  9650  00576E                     u5451:
  9651  00576E  EFC0  F02B         	goto	l1571
  9652  005772                     u5450:
  9653  005772  0E20               	movlw	32
  9654  005774  1007               	iorwf	tolower@c^0,w,c
  9655  005776  6E07               	movwf	?_tolower^0,c
  9656  005778  5008               	movf	(tolower@c+1)^0,w,c
  9657  00577A  6E08               	movwf	(?_tolower+1)^0,c
  9658  00577C  EFC4  F02B         	goto	l1576
  9659  005780                     l1571:
  9660  005780  C007  F007         	movff	tolower@c,?_tolower
  9661  005784  C008  F008         	movff	tolower@c+1,?_tolower+1
  9662  005788                     l1576:
  9663  005788  0012               	return		;funcret
  9664  00578A                     __end_of_tolower:
  9665                           	callstack 0
  9666                           
  9667 ;; *************** function _isupper *****************
  9668 ;; Defined at:
  9669 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  9670 ;; Parameters:    Size  Location     Type
  9671 ;;  c               2    0[COMRAM] int 
  9672 ;; Auto vars:     Size  Location     Type
  9673 ;;		None
  9674 ;; Return value:  Size  Location     Type
  9675 ;;                  2    0[COMRAM] int 
  9676 ;; Registers used:
  9677 ;;		wreg, status,2, status,0
  9678 ;; Tracked objects:
  9679 ;;		On entry : 0/0
  9680 ;;		On exit  : 0/0
  9681 ;;		Unchanged: 0/0
  9682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9683 ;;      Params:         2       0       0       0       0       0       0
  9684 ;;      Locals:         0       0       0       0       0       0       0
  9685 ;;      Temps:          4       0       0       0       0       0       0
  9686 ;;      Totals:         6       0       0       0       0       0       0
  9687 ;;Total ram usage:        6 bytes
  9688 ;; Hardware stack levels used:    1
  9689 ;; Hardware stack levels required when called:    1
  9690 ;; This function calls:
  9691 ;;		Nothing
  9692 ;; This function is called by:
  9693 ;;		_efgtoa
  9694 ;;		_vfpfcnvrt
  9695 ;;		_tolower
  9696 ;; This function uses a non-reentrant model
  9697 ;;
  9698                           
  9699                           	psect	text34
  9700  005ABE                     __ptext34:
  9701                           	callstack 0
  9702  005ABE                     _isupper:
  9703                           	callstack 22
  9704  005ABE  0EBF               	movlw	191
  9705  005AC0  6E03               	movwf	??_isupper^0,c
  9706  005AC2  0EFF               	movlw	255
  9707  005AC4  6E04               	movwf	(??_isupper+1)^0,c
  9708  005AC6  C001  F005         	movff	isupper@c,??_isupper+2
  9709  005ACA  C002  F006         	movff	isupper@c+1,??_isupper+3
  9710  005ACE  5003               	movf	??_isupper^0,w,c
  9711  005AD0  2605               	addwf	(??_isupper+2)^0,f,c
  9712  005AD2  5004               	movf	(??_isupper+1)^0,w,c
  9713  005AD4  2206               	addwfc	(??_isupper+3)^0,f,c
  9714  005AD6  5006               	movf	(??_isupper+3)^0,w,c
  9715  005AD8  E10A               	bnz	u4440
  9716  005ADA  0E1A               	movlw	26
  9717  005ADC  5C05               	subwf	(??_isupper+2)^0,w,c
  9718  005ADE  A0D8               	btfss	status,0,c
  9719  005AE0  EF74  F02D         	goto	u4441
  9720  005AE4  EF77  F02D         	goto	u4440
  9721  005AE8                     u4441:
  9722  005AE8  0E01               	movlw	1
  9723  005AEA  EF78  F02D         	goto	u4450
  9724  005AEE                     u4440:
  9725  005AEE  0E00               	movlw	0
  9726  005AF0                     u4450:
  9727  005AF0  6E01               	movwf	?_isupper^0,c
  9728  005AF2  6A02               	clrf	(?_isupper+1)^0,c
  9729  005AF4  0012               	return		;funcret
  9730  005AF6                     __end_of_isupper:
  9731                           	callstack 0
  9732                           
  9733 ;; *************** function _strcpy *****************
  9734 ;; Defined at:
  9735 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  9736 ;; Parameters:    Size  Location     Type
  9737 ;;  dest            2    0[COMRAM] PTR unsigned char 
  9738 ;;		 -> dbuf(80), 
  9739 ;;  src             2    2[COMRAM] PTR const unsigned char 
  9740 ;;		 -> STR_22(4), STR_21(4), STR_18(4), STR_17(4), 
  9741 ;;		 -> dbuf(80), 
  9742 ;; Auto vars:     Size  Location     Type
  9743 ;;  d               2    8[COMRAM] PTR unsigned char 
  9744 ;;		 -> dbuf(80), 
  9745 ;;  s               2    6[COMRAM] PTR const unsigned char 
  9746 ;;		 -> STR_22(4), STR_21(4), STR_18(4), STR_17(4), 
  9747 ;;		 -> dbuf(80), 
  9748 ;; Return value:  Size  Location     Type
  9749 ;;                  2    0[COMRAM] PTR unsigned char 
  9750 ;; Registers used:
  9751 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9752 ;; Tracked objects:
  9753 ;;		On entry : 0/0
  9754 ;;		On exit  : 0/0
  9755 ;;		Unchanged: 0/0
  9756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9757 ;;      Params:         4       0       0       0       0       0       0
  9758 ;;      Locals:         4       0       0       0       0       0       0
  9759 ;;      Temps:          2       0       0       0       0       0       0
  9760 ;;      Totals:        10       0       0       0       0       0       0
  9761 ;;Total ram usage:       10 bytes
  9762 ;; Hardware stack levels used:    1
  9763 ;; Hardware stack levels required when called:    1
  9764 ;; This function calls:
  9765 ;;		Nothing
  9766 ;; This function is called by:
  9767 ;;		_efgtoa
  9768 ;; This function uses a non-reentrant model
  9769 ;;
  9770                           
  9771                           	psect	text35
  9772  00578A                     __ptext35:
  9773                           	callstack 0
  9774  00578A                     _strcpy:
  9775                           	callstack 22
  9776  00578A  C003  F007         	movff	strcpy@src,strcpy@s
  9777  00578E  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  9778  005792  C001  F009         	movff	strcpy@dest,strcpy@d
  9779  005796  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  9780  00579A                     l4827:
  9781  00579A  5007               	movf	strcpy@s^0,w,c
  9782  00579C  6E05               	movwf	??_strcpy^0,c
  9783  00579E  5008               	movf	(strcpy@s+1)^0,w,c
  9784  0057A0  6E06               	movwf	(??_strcpy+1)^0,c
  9785  0057A2  4A07               	infsnz	strcpy@s^0,f,c
  9786  0057A4  2A08               	incf	(strcpy@s+1)^0,f,c
  9787  0057A6  C005  FFF6         	movff	??_strcpy,tblptrl
  9788  0057AA  C006  FFF7         	movff	??_strcpy+1,tblptrh
  9789  0057AE  6AF8               	clrf	tblptru,c
  9790  0057B0  C009  FFD9         	movff	strcpy@d,fsr2l
  9791  0057B4  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  9792  0057B8  4A09               	infsnz	strcpy@d^0,f,c
  9793  0057BA  2A0A               	incf	(strcpy@d+1)^0,f,c
  9794  0057BC  0E05               	movlw	(high __ramtop+-1)
  9795  0057BE  64F7               	cpfsgt	tblptrh,c
  9796  0057C0  D003               	bra	u5417
  9797  0057C2  0008               	tblrd		*
  9798  0057C4  50F5               	movf	tablat,w,c
  9799  0057C6  D005               	bra	u5410
  9800  0057C8                     u5417:
  9801  0057C8  CFF6 FFE1          	movff	tblptrl,fsr1l
  9802  0057CC  CFF7 FFE2          	movff	tblptrh,fsr1h
  9803  0057D0  50E7               	movf	indf1,w,c
  9804  0057D2                     u5410:
  9805  0057D2  6EDF               	movwf	indf2,c
  9806  0057D4  50DF               	movf	indf2,w,c
  9807  0057D6  A4D8               	btfss	status,2,c
  9808  0057D8  EFF0  F02B         	goto	u5421
  9809  0057DC  EFF2  F02B         	goto	u5420
  9810  0057E0                     u5421:
  9811  0057E0  EFCD  F02B         	goto	l4827
  9812  0057E4                     u5420:
  9813  0057E4  0012               	return		;funcret
  9814  0057E6                     __end_of_strcpy:
  9815                           	callstack 0
  9816                           
  9817 ;; *************** function _floorf *****************
  9818 ;; Defined at:
  9819 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\floorf.c"
  9820 ;; Parameters:    Size  Location     Type
  9821 ;;  x               4   77[COMRAM] float 
  9822 ;; Auto vars:     Size  Location     Type
  9823 ;;  u               4    6[BANK0 ] struct .
  9824 ;;  m               4    0[BANK0 ] unsigned long 
  9825 ;;  e               2    4[BANK0 ] int 
  9826 ;; Return value:  Size  Location     Type
  9827 ;;                  4   77[COMRAM] float 
  9828 ;; Registers used:
  9829 ;;		wreg, status,2, status,0
  9830 ;; Tracked objects:
  9831 ;;		On entry : 0/0
  9832 ;;		On exit  : 0/0
  9833 ;;		Unchanged: 0/0
  9834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9835 ;;      Params:         4       0       0       0       0       0       0
  9836 ;;      Locals:         0      10       0       0       0       0       0
  9837 ;;      Temps:          6       0       0       0       0       0       0
  9838 ;;      Totals:        10      10       0       0       0       0       0
  9839 ;;Total ram usage:       20 bytes
  9840 ;; Hardware stack levels used:    1
  9841 ;; Hardware stack levels required when called:    1
  9842 ;; This function calls:
  9843 ;;		Nothing
  9844 ;; This function is called by:
  9845 ;;		_efgtoa
  9846 ;; This function uses a non-reentrant model
  9847 ;;
  9848                           
  9849                           	psect	text36
  9850  0035FE                     __ptext36:
  9851                           	callstack 0
  9852  0035FE                     _floorf:
  9853                           	callstack 22
  9854  0035FE  C1C3  F066         	movff	floorf@F524,floorf@u
  9855  003602  C1C4  F067         	movff	floorf@F524+1,floorf@u+1
  9856  003606  C1C5  F068         	movff	floorf@F524+2,floorf@u+2
  9857  00360A  C1C6  F069         	movff	floorf@F524+3,floorf@u+3
  9858  00360E  C04E  F066         	movff	floorf@x,floorf@u
  9859  003612  C04F  F067         	movff	floorf@x+1,floorf@u+1
  9860  003616  C050  F068         	movff	floorf@x+2,floorf@u+2
  9861  00361A  C051  F069         	movff	floorf@x+3,floorf@u+3
  9862  00361E  0E81               	movlw	129
  9863  003620  6E52               	movwf	??_floorf^0,c
  9864  003622  0EFF               	movlw	255
  9865  003624  6E53               	movwf	(??_floorf+1)^0,c
  9866  003626  C066  F054         	movff	floorf@u,??_floorf+2
  9867  00362A  C067  F055         	movff	floorf@u+1,??_floorf+3
  9868  00362E  C068  F056         	movff	floorf@u+2,??_floorf+4
  9869  003632  C069  F057         	movff	floorf@u+3,??_floorf+5
  9870  003636  0E18               	movlw	24
  9871  003638  EF23  F01B         	goto	u5460
  9872  00363C                     u5465:
  9873  00363C  90D8               	bcf	status,0,c
  9874  00363E  3257               	rrcf	(??_floorf+5)^0,f,c
  9875  003640  3256               	rrcf	(??_floorf+4)^0,f,c
  9876  003642  3255               	rrcf	(??_floorf+3)^0,f,c
  9877  003644  3254               	rrcf	(??_floorf+2)^0,f,c
  9878  003646                     u5460:
  9879  003646  2EE8               	decfsz	wreg,f,c
  9880  003648  EF1E  F01B         	goto	u5465
  9881  00364C  5054               	movf	(??_floorf+2)^0,w,c
  9882  00364E  2452               	addwf	??_floorf^0,w,c
  9883  003650  0100               	movlb	0	; () banked
  9884  003652  6F64               	movwf	floorf@e& (0+255),b
  9885  003654  0E00               	movlw	0
  9886  003656  2053               	addwfc	(??_floorf+1)^0,w,c
  9887  003658  6F65               	movwf	(floorf@e+1)& (0+255),b
  9888  00365A  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  9889  00365C  EF39  F01B         	goto	u5471
  9890  003660  5165               	movf	(floorf@e+1)& (0+255),w,b
  9891  003662  E109               	bnz	u5470
  9892  003664  0E17               	movlw	23
  9893  003666  5D64               	subwf	floorf@e& (0+255),w,b
  9894  003668  A0D8               	btfss	status,0,c
  9895  00366A  EF39  F01B         	goto	u5471
  9896  00366E  EF3B  F01B         	goto	u5470
  9897  003672                     u5471:
  9898  003672  EF45  F01B         	goto	l4845
  9899  003676                     u5470:
  9900  003676                     l4843:
  9901                           
  9902                           ; BSR set to: 0
  9903  003676  C04E  F04E         	movff	floorf@x,?_floorf
  9904  00367A  C04F  F04F         	movff	floorf@x+1,?_floorf+1
  9905  00367E  C050  F050         	movff	floorf@x+2,?_floorf+2
  9906  003682  C051  F051         	movff	floorf@x+3,?_floorf+3
  9907  003686  EF09  F01C         	goto	l1495
  9908  00368A                     l4845:
  9909                           
  9910                           ; BSR set to: 0
  9911  00368A  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  9912  00368C  EF4A  F01B         	goto	u5481
  9913  003690  EF4C  F01B         	goto	u5480
  9914  003694                     u5481:
  9915  003694  EFBD  F01B         	goto	l4855
  9916  003698                     u5480:
  9917  003698                     
  9918                           ; BSR set to: 0
  9919  003698  C064  F052         	movff	floorf@e,??_floorf
  9920  00369C  0EFF               	movlw	255
  9921  00369E  6E53               	movwf	(??_floorf+1)^0,c
  9922  0036A0  0EFF               	movlw	255
  9923  0036A2  6E54               	movwf	(??_floorf+2)^0,c
  9924  0036A4  0E7F               	movlw	127
  9925  0036A6  6E55               	movwf	(??_floorf+3)^0,c
  9926  0036A8  0E00               	movlw	0
  9927  0036AA  6E56               	movwf	(??_floorf+4)^0,c
  9928  0036AC                     u5495:
  9929  0036AC  6652               	tstfsz	??_floorf^0,c
  9930  0036AE  EF5B  F01B         	goto	u5496
  9931  0036B2  EF63  F01B         	goto	u5497
  9932  0036B6                     u5496:
  9933  0036B6  3456               	rlcf	(??_floorf+4)^0,w,c
  9934  0036B8  3256               	rrcf	(??_floorf+4)^0,f,c
  9935  0036BA  3255               	rrcf	(??_floorf+3)^0,f,c
  9936  0036BC  3254               	rrcf	(??_floorf+2)^0,f,c
  9937  0036BE  3253               	rrcf	(??_floorf+1)^0,f,c
  9938  0036C0  2E52               	decfsz	??_floorf^0,f,c
  9939  0036C2  EF56  F01B         	goto	u5495
  9940  0036C6                     u5497:
  9941  0036C6  C053  F060         	movff	??_floorf+1,floorf@m
  9942  0036CA  C054  F061         	movff	??_floorf+2,floorf@m+1
  9943  0036CE  C055  F062         	movff	??_floorf+3,floorf@m+2
  9944  0036D2  C056  F063         	movff	??_floorf+4,floorf@m+3
  9945  0036D6  0100               	movlb	0	; () banked
  9946  0036D8  5160               	movf	floorf@m& (0+255),w,b
  9947  0036DA  1566               	andwf	floorf@u& (0+255),w,b
  9948  0036DC  6E52               	movwf	??_floorf^0,c
  9949  0036DE  5161               	movf	(floorf@m+1)& (0+255),w,b
  9950  0036E0  1567               	andwf	(floorf@u+1)& (0+255),w,b
  9951  0036E2  6E53               	movwf	(??_floorf+1)^0,c
  9952  0036E4  5162               	movf	(floorf@m+2)& (0+255),w,b
  9953  0036E6  1568               	andwf	(floorf@u+2)& (0+255),w,b
  9954  0036E8  6E54               	movwf	(??_floorf+2)^0,c
  9955  0036EA  5163               	movf	(floorf@m+3)& (0+255),w,b
  9956  0036EC  1569               	andwf	(floorf@u+3)& (0+255),w,b
  9957  0036EE  6E55               	movwf	(??_floorf+3)^0,c
  9958  0036F0  5052               	movf	??_floorf^0,w,c
  9959  0036F2  1053               	iorwf	(??_floorf+1)^0,w,c
  9960  0036F4  1054               	iorwf	(??_floorf+2)^0,w,c
  9961  0036F6  1055               	iorwf	(??_floorf+3)^0,w,c
  9962  0036F8  A4D8               	btfss	status,2,c
  9963  0036FA  EF81  F01B         	goto	u5501
  9964  0036FE  EF83  F01B         	goto	u5500
  9965  003702                     u5501:
  9966  003702  EF85  F01B         	goto	l4851
  9967  003706                     u5500:
  9968  003706  EF3B  F01B         	goto	l4843
  9969  00370A                     l4851:
  9970                           
  9971                           ; BSR set to: 0
  9972  00370A  C066  F052         	movff	floorf@u,??_floorf
  9973  00370E  C067  F053         	movff	floorf@u+1,??_floorf+1
  9974  003712  C068  F054         	movff	floorf@u+2,??_floorf+2
  9975  003716  C069  F055         	movff	floorf@u+3,??_floorf+3
  9976  00371A  0E20               	movlw	32
  9977  00371C  EF95  F01B         	goto	u5510
  9978  003720                     u5515:
  9979  003720  90D8               	bcf	status,0,c
  9980  003722  3255               	rrcf	(??_floorf+3)^0,f,c
  9981  003724  3254               	rrcf	(??_floorf+2)^0,f,c
  9982  003726  3253               	rrcf	(??_floorf+1)^0,f,c
  9983  003728  3252               	rrcf	??_floorf^0,f,c
  9984  00372A                     u5510:
  9985  00372A  2EE8               	decfsz	wreg,f,c
  9986  00372C  EF90  F01B         	goto	u5515
  9987  003730  5052               	movf	??_floorf^0,w,c
  9988  003732  1053               	iorwf	(??_floorf+1)^0,w,c
  9989  003734  1054               	iorwf	(??_floorf+2)^0,w,c
  9990  003736  1055               	iorwf	(??_floorf+3)^0,w,c
  9991  003738  B4D8               	btfsc	status,2,c
  9992  00373A  EFA1  F01B         	goto	u5521
  9993  00373E  EFA3  F01B         	goto	u5520
  9994  003742                     u5521:
  9995  003742  EFAB  F01B         	goto	l1498
  9996  003746                     u5520:
  9997  003746                     
  9998                           ; BSR set to: 0
  9999  003746  5160               	movf	floorf@m& (0+255),w,b
 10000  003748  2766               	addwf	floorf@u& (0+255),f,b
 10001  00374A  5161               	movf	(floorf@m+1)& (0+255),w,b
 10002  00374C  2367               	addwfc	(floorf@u+1)& (0+255),f,b
 10003  00374E  5162               	movf	(floorf@m+2)& (0+255),w,b
 10004  003750  2368               	addwfc	(floorf@u+2)& (0+255),f,b
 10005  003752  5163               	movf	(floorf@m+3)& (0+255),w,b
 10006  003754  2369               	addwfc	(floorf@u+3)& (0+255),f,b
 10007  003756                     l1498:
 10008                           
 10009                           ; BSR set to: 0
 10010  003756  1D60               	comf	floorf@m& (0+255),w,b
 10011  003758  6E52               	movwf	??_floorf^0,c
 10012  00375A  1D61               	comf	(floorf@m+1)& (0+255),w,b
 10013  00375C  6E53               	movwf	(??_floorf+1)^0,c
 10014  00375E  1D62               	comf	(floorf@m+2)& (0+255),w,b
 10015  003760  6E54               	movwf	(??_floorf+2)^0,c
 10016  003762  1D63               	comf	(floorf@m+3)& (0+255),w,b
 10017  003764  6E55               	movwf	(??_floorf+3)^0,c
 10018  003766  5052               	movf	??_floorf^0,w,c
 10019  003768  1766               	andwf	floorf@u& (0+255),f,b
 10020  00376A  5053               	movf	(??_floorf+1)^0,w,c
 10021  00376C  1767               	andwf	(floorf@u+1)& (0+255),f,b
 10022  00376E  5054               	movf	(??_floorf+2)^0,w,c
 10023  003770  1768               	andwf	(floorf@u+2)& (0+255),f,b
 10024  003772  5055               	movf	(??_floorf+3)^0,w,c
 10025  003774  1769               	andwf	(floorf@u+3)& (0+255),f,b
 10026  003776  EF01  F01C         	goto	l4863
 10027  00377A                     l4855:
 10028                           
 10029                           ; BSR set to: 0
 10030  00377A  C066  F052         	movff	floorf@u,??_floorf
 10031  00377E  C067  F053         	movff	floorf@u+1,??_floorf+1
 10032  003782  C068  F054         	movff	floorf@u+2,??_floorf+2
 10033  003786  C069  F055         	movff	floorf@u+3,??_floorf+3
 10034  00378A  0E20               	movlw	32
 10035  00378C  EFCD  F01B         	goto	u5530
 10036  003790                     u5535:
 10037  003790  90D8               	bcf	status,0,c
 10038  003792  3255               	rrcf	(??_floorf+3)^0,f,c
 10039  003794  3254               	rrcf	(??_floorf+2)^0,f,c
 10040  003796  3253               	rrcf	(??_floorf+1)^0,f,c
 10041  003798  3252               	rrcf	??_floorf^0,f,c
 10042  00379A                     u5530:
 10043  00379A  2EE8               	decfsz	wreg,f,c
 10044  00379C  EFC8  F01B         	goto	u5535
 10045  0037A0  5052               	movf	??_floorf^0,w,c
 10046  0037A2  1053               	iorwf	(??_floorf+1)^0,w,c
 10047  0037A4  1054               	iorwf	(??_floorf+2)^0,w,c
 10048  0037A6  1055               	iorwf	(??_floorf+3)^0,w,c
 10049  0037A8  A4D8               	btfss	status,2,c
 10050  0037AA  EFD9  F01B         	goto	u5541
 10051  0037AE  EFDB  F01B         	goto	u5540
 10052  0037B2                     u5541:
 10053  0037B2  EFE5  F01B         	goto	l4859
 10054  0037B6                     u5540:
 10055  0037B6                     
 10056                           ; BSR set to: 0
 10057  0037B6  0E00               	movlw	0
 10058  0037B8  6F66               	movwf	floorf@u& (0+255),b
 10059  0037BA  0E00               	movlw	0
 10060  0037BC  6F67               	movwf	(floorf@u+1)& (0+255),b
 10061  0037BE  0E00               	movlw	0
 10062  0037C0  6F68               	movwf	(floorf@u+2)& (0+255),b
 10063  0037C2  0E00               	movlw	0
 10064  0037C4  6F69               	movwf	(floorf@u+3)& (0+255),b
 10065  0037C6  EF01  F01C         	goto	l4863
 10066  0037CA                     l4859:
 10067                           
 10068                           ; BSR set to: 0
 10069  0037CA  90D8               	bcf	status,0,c
 10070  0037CC  3566               	rlcf	floorf@u& (0+255),w,b
 10071  0037CE  6E52               	movwf	??_floorf^0,c
 10072  0037D0  3567               	rlcf	(floorf@u+1)& (0+255),w,b
 10073  0037D2  6E53               	movwf	(??_floorf+1)^0,c
 10074  0037D4  3568               	rlcf	(floorf@u+2)& (0+255),w,b
 10075  0037D6  6E54               	movwf	(??_floorf+2)^0,c
 10076  0037D8  3569               	rlcf	(floorf@u+3)& (0+255),w,b
 10077  0037DA  6E55               	movwf	(??_floorf+3)^0,c
 10078  0037DC  5052               	movf	??_floorf^0,w,c
 10079  0037DE  1053               	iorwf	(??_floorf+1)^0,w,c
 10080  0037E0  1054               	iorwf	(??_floorf+2)^0,w,c
 10081  0037E2  1055               	iorwf	(??_floorf+3)^0,w,c
 10082  0037E4  B4D8               	btfsc	status,2,c
 10083  0037E6  EFF7  F01B         	goto	u5551
 10084  0037EA  EFF9  F01B         	goto	u5550
 10085  0037EE                     u5551:
 10086  0037EE  EF01  F01C         	goto	l4863
 10087  0037F2                     u5550:
 10088  0037F2                     
 10089                           ; BSR set to: 0
 10090  0037F2  0E00               	movlw	0
 10091  0037F4  6F66               	movwf	floorf@u& (0+255),b
 10092  0037F6  0E00               	movlw	0
 10093  0037F8  6F67               	movwf	(floorf@u+1)& (0+255),b
 10094  0037FA  0E80               	movlw	128
 10095  0037FC  6F68               	movwf	(floorf@u+2)& (0+255),b
 10096  0037FE  0EBF               	movlw	191
 10097  003800  6F69               	movwf	(floorf@u+3)& (0+255),b
 10098  003802                     l4863:
 10099                           
 10100                           ; BSR set to: 0
 10101  003802  C066  F04E         	movff	floorf@u,?_floorf
 10102  003806  C067  F04F         	movff	floorf@u+1,?_floorf+1
 10103  00380A  C068  F050         	movff	floorf@u+2,?_floorf+2
 10104  00380E  C069  F051         	movff	floorf@u+3,?_floorf+3
 10105  003812                     l1495:
 10106                           
 10107                           ; BSR set to: 0
 10108  003812  0012               	return		;funcret
 10109  003814                     __end_of_floorf:
 10110                           	callstack 0
 10111                           
 10112 ;; *************** function ___fpclassifyf *****************
 10113 ;; Defined at:
 10114 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
 10115 ;; Parameters:    Size  Location     Type
 10116 ;;  x               4    0[COMRAM] float 
 10117 ;; Auto vars:     Size  Location     Type
 10118 ;;  u               4   10[COMRAM] struct .
 10119 ;;  e               2    8[COMRAM] int 
 10120 ;; Return value:  Size  Location     Type
 10121 ;;                  2    0[COMRAM] int 
 10122 ;; Registers used:
 10123 ;;		wreg, status,2, status,0
 10124 ;; Tracked objects:
 10125 ;;		On entry : 0/0
 10126 ;;		On exit  : 0/0
 10127 ;;		Unchanged: 0/0
 10128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10129 ;;      Params:         4       0       0       0       0       0       0
 10130 ;;      Locals:         6       0       0       0       0       0       0
 10131 ;;      Temps:          4       0       0       0       0       0       0
 10132 ;;      Totals:        14       0       0       0       0       0       0
 10133 ;;Total ram usage:       14 bytes
 10134 ;; Hardware stack levels used:    1
 10135 ;; Hardware stack levels required when called:    1
 10136 ;; This function calls:
 10137 ;;		Nothing
 10138 ;; This function is called by:
 10139 ;;		_efgtoa
 10140 ;; This function uses a non-reentrant model
 10141 ;;
 10142                           
 10143                           	psect	text37
 10144  004AFA                     __ptext37:
 10145                           	callstack 0
 10146  004AFA                     ___fpclassifyf:
 10147                           	callstack 22
 10148  004AFA  C1C7  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
 10149  004AFE  C1C8  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
 10150  004B02  C1C9  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
 10151  004B06  C1CA  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
 10152  004B0A  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
 10153  004B0E  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 10154  004B12  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 10155  004B16  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 10156  004B1A  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
 10157  004B1E  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 10158  004B22  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 10159  004B26  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 10160  004B2A  0E18               	movlw	24
 10161  004B2C  EF9D  F025         	goto	u5340
 10162  004B30                     u5345:
 10163  004B30  90D8               	bcf	status,0,c
 10164  004B32  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
 10165  004B34  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
 10166  004B36  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
 10167  004B38  3205               	rrcf	??___fpclassifyf^0,f,c
 10168  004B3A                     u5340:
 10169  004B3A  2EE8               	decfsz	wreg,f,c
 10170  004B3C  EF98  F025         	goto	u5345
 10171  004B40  5005               	movf	??___fpclassifyf^0,w,c
 10172  004B42  6E09               	movwf	___fpclassifyf@e^0,c
 10173  004B44  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
 10174  004B46  5009               	movf	___fpclassifyf@e^0,w,c
 10175  004B48  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
 10176  004B4A  A4D8               	btfss	status,2,c
 10177  004B4C  EFAA  F025         	goto	u5351
 10178  004B50  EFAC  F025         	goto	u5350
 10179  004B54                     u5351:
 10180  004B54  EFCC  F025         	goto	l4815
 10181  004B58                     u5350:
 10182  004B58  90D8               	bcf	status,0,c
 10183  004B5A  340B               	rlcf	___fpclassifyf@u^0,w,c
 10184  004B5C  6E05               	movwf	??___fpclassifyf^0,c
 10185  004B5E  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
 10186  004B60  6E06               	movwf	(??___fpclassifyf+1)^0,c
 10187  004B62  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
 10188  004B64  6E07               	movwf	(??___fpclassifyf+2)^0,c
 10189  004B66  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
 10190  004B68  6E08               	movwf	(??___fpclassifyf+3)^0,c
 10191  004B6A  5005               	movf	??___fpclassifyf^0,w,c
 10192  004B6C  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
 10193  004B6E  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
 10194  004B70  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
 10195  004B72  A4D8               	btfss	status,2,c
 10196  004B74  EFBE  F025         	goto	u5361
 10197  004B78  EFC0  F025         	goto	u5360
 10198  004B7C                     u5361:
 10199  004B7C  EFC6  F025         	goto	l4811
 10200  004B80                     u5360:
 10201  004B80  0E00               	movlw	0
 10202  004B82  6E02               	movwf	(?___fpclassifyf+1)^0,c
 10203  004B84  0E02               	movlw	2
 10204  004B86  6E01               	movwf	?___fpclassifyf^0,c
 10205  004B88  EFFB  F025         	goto	l1450
 10206  004B8C                     l4811:
 10207  004B8C  0E00               	movlw	0
 10208  004B8E  6E02               	movwf	(?___fpclassifyf+1)^0,c
 10209  004B90  0E03               	movlw	3
 10210  004B92  6E01               	movwf	?___fpclassifyf^0,c
 10211  004B94  EFFB  F025         	goto	l1450
 10212  004B98                     l4815:
 10213  004B98  2809               	incf	___fpclassifyf@e^0,w,c
 10214  004B9A  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
 10215  004B9C  A4D8               	btfss	status,2,c
 10216  004B9E  EFD3  F025         	goto	u5371
 10217  004BA2  EFD5  F025         	goto	u5370
 10218  004BA6                     u5371:
 10219  004BA6  EFF7  F025         	goto	l4821
 10220  004BAA                     u5370:
 10221  004BAA  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
 10222  004BAE  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 10223  004BB2  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 10224  004BB6  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 10225  004BBA  0E09               	movlw	9
 10226  004BBC                     u5385:
 10227  004BBC  90D8               	bcf	status,0,c
 10228  004BBE  3605               	rlcf	??___fpclassifyf^0,f,c
 10229  004BC0  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
 10230  004BC2  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
 10231  004BC4  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
 10232  004BC6  2EE8               	decfsz	wreg,f,c
 10233  004BC8  EFDE  F025         	goto	u5385
 10234  004BCC  5005               	movf	??___fpclassifyf^0,w,c
 10235  004BCE  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
 10236  004BD0  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
 10237  004BD2  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
 10238  004BD4  B4D8               	btfsc	status,2,c
 10239  004BD6  EFEF  F025         	goto	u5391
 10240  004BDA  EFF2  F025         	goto	u5390
 10241  004BDE                     u5391:
 10242  004BDE  0E01               	movlw	1
 10243  004BE0  EFF3  F025         	goto	u5400
 10244  004BE4                     u5390:
 10245  004BE4  0E00               	movlw	0
 10246  004BE6                     u5400:
 10247  004BE6  6E01               	movwf	?___fpclassifyf^0,c
 10248  004BE8  6A02               	clrf	(?___fpclassifyf+1)^0,c
 10249  004BEA  EFFB  F025         	goto	l1450
 10250  004BEE                     l4821:
 10251  004BEE  0E00               	movlw	0
 10252  004BF0  6E02               	movwf	(?___fpclassifyf+1)^0,c
 10253  004BF2  0E04               	movlw	4
 10254  004BF4  6E01               	movwf	?___fpclassifyf^0,c
 10255  004BF6                     l1450:
 10256  004BF6  0012               	return		;funcret
 10257  004BF8                     __end_of___fpclassifyf:
 10258                           	callstack 0
 10259                           
 10260 ;; *************** function ___fltol *****************
 10261 ;; Defined at:
 10262 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
 10263 ;; Parameters:    Size  Location     Type
 10264 ;;  f1              4   77[COMRAM] int 
 10265 ;; Auto vars:     Size  Location     Type
 10266 ;;  exp1            1   86[COMRAM] unsigned char 
 10267 ;;  sign1           1   85[COMRAM] unsigned char 
 10268 ;; Return value:  Size  Location     Type
 10269 ;;                  4   77[COMRAM] long 
 10270 ;; Registers used:
 10271 ;;		wreg, status,2, status,0
 10272 ;; Tracked objects:
 10273 ;;		On entry : 0/0
 10274 ;;		On exit  : 0/0
 10275 ;;		Unchanged: 0/0
 10276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10277 ;;      Params:         4       0       0       0       0       0       0
 10278 ;;      Locals:         2       0       0       0       0       0       0
 10279 ;;      Temps:          4       0       0       0       0       0       0
 10280 ;;      Totals:        10       0       0       0       0       0       0
 10281 ;;Total ram usage:       10 bytes
 10282 ;; Hardware stack levels used:    1
 10283 ;; Hardware stack levels required when called:    1
 10284 ;; This function calls:
 10285 ;;		Nothing
 10286 ;; This function is called by:
 10287 ;;		_scanAdcConversion
 10288 ;;		_PWM1_setDC
 10289 ;;		_PWM2_setDC
 10290 ;;		_speedControl
 10291 ;;		_efgtoa
 10292 ;; This function uses a non-reentrant model
 10293 ;;
 10294                           
 10295                           	psect	text38
 10296  0047EC                     __ptext38:
 10297                           	callstack 0
 10298  0047EC                     ___fltol:
 10299                           	callstack 24
 10300  0047EC  3450               	rlcf	(___fltol@f1+2)^0,w,c
 10301  0047EE  3451               	rlcf	(___fltol@f1+3)^0,w,c
 10302  0047F0  6E57               	movwf	___fltol@exp1^0,c
 10303  0047F2  5057               	movf	___fltol@exp1^0,w,c
 10304  0047F4  A4D8               	btfss	status,2,c
 10305  0047F6  EFFF  F023         	goto	u5221
 10306  0047FA  EF01  F024         	goto	u5220
 10307  0047FE                     u5221:
 10308  0047FE  EF0B  F024         	goto	l4739
 10309  004802                     u5220:
 10310  004802                     l4735:
 10311  004802  0E00               	movlw	0
 10312  004804  6E4E               	movwf	?___fltol^0,c
 10313  004806  0E00               	movlw	0
 10314  004808  6E4F               	movwf	(?___fltol+1)^0,c
 10315  00480A  0E00               	movlw	0
 10316  00480C  6E50               	movwf	(?___fltol+2)^0,c
 10317  00480E  0E00               	movlw	0
 10318  004810  6E51               	movwf	(?___fltol+3)^0,c
 10319  004812  EF78  F024         	goto	l845
 10320  004816                     l4739:
 10321  004816  C04E  F052         	movff	___fltol@f1,??___fltol
 10322  00481A  C04F  F053         	movff	___fltol@f1+1,??___fltol+1
 10323  00481E  C050  F054         	movff	___fltol@f1+2,??___fltol+2
 10324  004822  C051  F055         	movff	___fltol@f1+3,??___fltol+3
 10325  004826  0E20               	movlw	32
 10326  004828  EF1B  F024         	goto	u5230
 10327  00482C                     u5235:
 10328  00482C  90D8               	bcf	status,0,c
 10329  00482E  3255               	rrcf	(??___fltol+3)^0,f,c
 10330  004830  3254               	rrcf	(??___fltol+2)^0,f,c
 10331  004832  3253               	rrcf	(??___fltol+1)^0,f,c
 10332  004834  3252               	rrcf	??___fltol^0,f,c
 10333  004836                     u5230:
 10334  004836  2EE8               	decfsz	wreg,f,c
 10335  004838  EF16  F024         	goto	u5235
 10336  00483C  5052               	movf	??___fltol^0,w,c
 10337  00483E  6E56               	movwf	___fltol@sign1^0,c
 10338  004840  8E50               	bsf	(___fltol@f1+2)^0,7,c
 10339  004842  0EFF               	movlw	255
 10340  004844  164E               	andwf	___fltol@f1^0,f,c
 10341  004846  0EFF               	movlw	255
 10342  004848  164F               	andwf	(___fltol@f1+1)^0,f,c
 10343  00484A  0EFF               	movlw	255
 10344  00484C  1650               	andwf	(___fltol@f1+2)^0,f,c
 10345  00484E  0E00               	movlw	0
 10346  004850  1651               	andwf	(___fltol@f1+3)^0,f,c
 10347  004852  0E96               	movlw	150
 10348  004854  5E57               	subwf	___fltol@exp1^0,f,c
 10349  004856  BE57               	btfsc	___fltol@exp1^0,7,c
 10350  004858  EF32  F024         	goto	u5240
 10351  00485C  EF30  F024         	goto	u5241
 10352  004860                     u5241:
 10353  004860  EF48  F024         	goto	l4759
 10354  004864                     u5240:
 10355  004864  5057               	movf	___fltol@exp1^0,w,c
 10356  004866  0A80               	xorlw	128
 10357  004868  0F97               	addlw	151
 10358  00486A  B0D8               	btfsc	status,0,c
 10359  00486C  EF3A  F024         	goto	u5251
 10360  004870  EF3C  F024         	goto	u5250
 10361  004874                     u5251:
 10362  004874  EF3E  F024         	goto	l4755
 10363  004878                     u5250:
 10364  004878  EF01  F024         	goto	l4735
 10365  00487C                     l4755:
 10366  00487C  90D8               	bcf	status,0,c
 10367  00487E  3251               	rrcf	(___fltol@f1+3)^0,f,c
 10368  004880  3250               	rrcf	(___fltol@f1+2)^0,f,c
 10369  004882  324F               	rrcf	(___fltol@f1+1)^0,f,c
 10370  004884  324E               	rrcf	___fltol@f1^0,f,c
 10371  004886  3E57               	incfsz	___fltol@exp1^0,f,c
 10372  004888  EF3E  F024         	goto	l4755
 10373  00488C  EF60  F024         	goto	l4769
 10374  004890                     l4759:
 10375  004890  0E1F               	movlw	31
 10376  004892  6457               	cpfsgt	___fltol@exp1^0,c
 10377  004894  EF4E  F024         	goto	u5261
 10378  004898  EF50  F024         	goto	u5260
 10379  00489C                     u5261:
 10380  00489C  EF58  F024         	goto	l4767
 10381  0048A0                     u5260:
 10382  0048A0  EF01  F024         	goto	l4735
 10383  0048A4                     l4765:
 10384  0048A4  90D8               	bcf	status,0,c
 10385  0048A6  364E               	rlcf	___fltol@f1^0,f,c
 10386  0048A8  364F               	rlcf	(___fltol@f1+1)^0,f,c
 10387  0048AA  3650               	rlcf	(___fltol@f1+2)^0,f,c
 10388  0048AC  3651               	rlcf	(___fltol@f1+3)^0,f,c
 10389  0048AE  0657               	decf	___fltol@exp1^0,f,c
 10390  0048B0                     l4767:
 10391  0048B0  5057               	movf	___fltol@exp1^0,w,c
 10392  0048B2  A4D8               	btfss	status,2,c
 10393  0048B4  EF5E  F024         	goto	u5271
 10394  0048B8  EF60  F024         	goto	u5270
 10395  0048BC                     u5271:
 10396  0048BC  EF52  F024         	goto	l4765
 10397  0048C0                     u5270:
 10398  0048C0                     l4769:
 10399  0048C0  5056               	movf	___fltol@sign1^0,w,c
 10400  0048C2  B4D8               	btfsc	status,2,c
 10401  0048C4  EF66  F024         	goto	u5281
 10402  0048C8  EF68  F024         	goto	u5280
 10403  0048CC                     u5281:
 10404  0048CC  EF70  F024         	goto	l4773
 10405  0048D0                     u5280:
 10406  0048D0  1E51               	comf	(___fltol@f1+3)^0,f,c
 10407  0048D2  1E50               	comf	(___fltol@f1+2)^0,f,c
 10408  0048D4  1E4F               	comf	(___fltol@f1+1)^0,f,c
 10409  0048D6  6C4E               	negf	___fltol@f1^0,c
 10410  0048D8  0E00               	movlw	0
 10411  0048DA  224F               	addwfc	(___fltol@f1+1)^0,f,c
 10412  0048DC  2250               	addwfc	(___fltol@f1+2)^0,f,c
 10413  0048DE  2251               	addwfc	(___fltol@f1+3)^0,f,c
 10414  0048E0                     l4773:
 10415  0048E0  C04E  F04E         	movff	___fltol@f1,?___fltol
 10416  0048E4  C04F  F04F         	movff	___fltol@f1+1,?___fltol+1
 10417  0048E8  C050  F050         	movff	___fltol@f1+2,?___fltol+2
 10418  0048EC  C051  F051         	movff	___fltol@f1+3,?___fltol+3
 10419  0048F0                     l845:
 10420  0048F0  0012               	return		;funcret
 10421  0048F2                     __end_of___fltol:
 10422                           	callstack 0
 10423                           
 10424 ;; *************** function ___flsub *****************
 10425 ;; Defined at:
 10426 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
 10427 ;; Parameters:    Size  Location     Type
 10428 ;;  b               4   68[COMRAM] long 
 10429 ;;  a               4   72[COMRAM] long 
 10430 ;; Auto vars:     Size  Location     Type
 10431 ;;		None
 10432 ;; Return value:  Size  Location     Type
 10433 ;;                  4   68[COMRAM] long 
 10434 ;; Registers used:
 10435 ;;		wreg, status,2, status,0, cstack
 10436 ;; Tracked objects:
 10437 ;;		On entry : 0/0
 10438 ;;		On exit  : 0/0
 10439 ;;		Unchanged: 0/0
 10440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10441 ;;      Params:         8       0       0       0       0       0       0
 10442 ;;      Locals:         0       0       0       0       0       0       0
 10443 ;;      Temps:          0       0       0       0       0       0       0
 10444 ;;      Totals:         8       0       0       0       0       0       0
 10445 ;;Total ram usage:        8 bytes
 10446 ;; Hardware stack levels used:    1
 10447 ;; Hardware stack levels required when called:    2
 10448 ;; This function calls:
 10449 ;;		___fladd
 10450 ;; This function is called by:
 10451 ;;		_secretMenu
 10452 ;;		_efgtoa
 10453 ;; This function uses a non-reentrant model
 10454 ;;
 10455                           
 10456                           	psect	text39
 10457  005938                     __ptext39:
 10458                           	callstack 0
 10459  005938                     ___flsub:
 10460                           	callstack 21
 10461  005938  0E00               	movlw	0
 10462  00593A  1A49               	xorwf	___flsub@a^0,f,c
 10463  00593C  0E00               	movlw	0
 10464  00593E  1A4A               	xorwf	(___flsub@a+1)^0,f,c
 10465  005940  0E00               	movlw	0
 10466  005942  1A4B               	xorwf	(___flsub@a+2)^0,f,c
 10467  005944  0E80               	movlw	128
 10468  005946  1A4C               	xorwf	(___flsub@a+3)^0,f,c
 10469  005948  C045  F035         	movff	___flsub@b,___fladd@b
 10470  00594C  C046  F036         	movff	___flsub@b+1,___fladd@b+1
 10471  005950  C047  F037         	movff	___flsub@b+2,___fladd@b+2
 10472  005954  C048  F038         	movff	___flsub@b+3,___fladd@b+3
 10473  005958  C049  F039         	movff	___flsub@a,___fladd@a
 10474  00595C  C04A  F03A         	movff	___flsub@a+1,___fladd@a+1
 10475  005960  C04B  F03B         	movff	___flsub@a+2,___fladd@a+2
 10476  005964  C04C  F03C         	movff	___flsub@a+3,___fladd@a+3
 10477  005968  EC6E  F010         	call	___fladd	;wreg free
 10478  00596C  C035  F045         	movff	?___fladd,?___flsub
 10479  005970  C036  F046         	movff	?___fladd+1,?___flsub+1
 10480  005974  C037  F047         	movff	?___fladd+2,?___flsub+2
 10481  005978  C038  F048         	movff	?___fladd+3,?___flsub+3
 10482  00597C  0012               	return		;funcret
 10483  00597E                     __end_of___flsub:
 10484                           	callstack 0
 10485                           
 10486 ;; *************** function ___fladd *****************
 10487 ;; Defined at:
 10488 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
 10489 ;; Parameters:    Size  Location     Type
 10490 ;;  b               4   52[COMRAM] long 
 10491 ;;  a               4   56[COMRAM] long 
 10492 ;; Auto vars:     Size  Location     Type
 10493 ;;  grs             1   67[COMRAM] unsigned char 
 10494 ;;  bexp            1   66[COMRAM] unsigned char 
 10495 ;;  aexp            1   65[COMRAM] unsigned char 
 10496 ;;  signs           1   64[COMRAM] unsigned char 
 10497 ;; Return value:  Size  Location     Type
 10498 ;;                  4   52[COMRAM] unsigned char 
 10499 ;; Registers used:
 10500 ;;		wreg, status,2, status,0
 10501 ;; Tracked objects:
 10502 ;;		On entry : 0/0
 10503 ;;		On exit  : 0/0
 10504 ;;		Unchanged: 0/0
 10505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10506 ;;      Params:         8       0       0       0       0       0       0
 10507 ;;      Locals:         4       0       0       0       0       0       0
 10508 ;;      Temps:          4       0       0       0       0       0       0
 10509 ;;      Totals:        16       0       0       0       0       0       0
 10510 ;;Total ram usage:       16 bytes
 10511 ;; Hardware stack levels used:    1
 10512 ;; Hardware stack levels required when called:    1
 10513 ;; This function calls:
 10514 ;;		Nothing
 10515 ;; This function is called by:
 10516 ;;		_secretMenu
 10517 ;;		_speedControl
 10518 ;;		___flsub
 10519 ;;		_efgtoa
 10520 ;; This function uses a non-reentrant model
 10521 ;;
 10522                           
 10523                           	psect	text40
 10524  0020DC                     __ptext40:
 10525                           	callstack 0
 10526  0020DC                     ___fladd:
 10527                           	callstack 21
 10528  0020DC  5038               	movf	(___fladd@b+3)^0,w,c
 10529  0020DE  0B80               	andlw	128
 10530  0020E0  6E41               	movwf	___fladd@signs^0,c
 10531  0020E2  5038               	movf	(___fladd@b+3)^0,w,c
 10532  0020E4  2438               	addwf	(___fladd@b+3)^0,w,c
 10533  0020E6  6E43               	movwf	___fladd@bexp^0,c
 10534  0020E8  AE37               	btfss	(___fladd@b+2)^0,7,c
 10535  0020EA  EF79  F010         	goto	u4031
 10536  0020EE  EF7B  F010         	goto	u4030
 10537  0020F2                     u4031:
 10538  0020F2  EF7C  F010         	goto	l4029
 10539  0020F6                     u4030:
 10540  0020F6  8043               	bsf	___fladd@bexp^0,0,c
 10541  0020F8                     l4029:
 10542  0020F8  5043               	movf	___fladd@bexp^0,w,c
 10543  0020FA  B4D8               	btfsc	status,2,c
 10544  0020FC  EF82  F010         	goto	u4041
 10545  002100  EF84  F010         	goto	u4040
 10546  002104                     u4041:
 10547  002104  EF99  F010         	goto	l4039
 10548  002108                     u4040:
 10549  002108  2843               	incf	___fladd@bexp^0,w,c
 10550  00210A  A4D8               	btfss	status,2,c
 10551  00210C  EF8A  F010         	goto	u4051
 10552  002110  EF8C  F010         	goto	u4050
 10553  002114                     u4051:
 10554  002114  EF94  F010         	goto	l4035
 10555  002118                     u4050:
 10556  002118  0E00               	movlw	0
 10557  00211A  6E35               	movwf	___fladd@b^0,c
 10558  00211C  0E00               	movlw	0
 10559  00211E  6E36               	movwf	(___fladd@b+1)^0,c
 10560  002120  0E00               	movlw	0
 10561  002122  6E37               	movwf	(___fladd@b+2)^0,c
 10562  002124  0E00               	movlw	0
 10563  002126  6E38               	movwf	(___fladd@b+3)^0,c
 10564  002128                     l4035:
 10565  002128  8E37               	bsf	(___fladd@b+2)^0,7,c
 10566  00212A  0E00               	movlw	0
 10567  00212C  6E38               	movwf	(___fladd@b+3)^0,c
 10568  00212E  EFA1  F010         	goto	l4041
 10569  002132                     l4039:
 10570  002132  0E00               	movlw	0
 10571  002134  6E35               	movwf	___fladd@b^0,c
 10572  002136  0E00               	movlw	0
 10573  002138  6E36               	movwf	(___fladd@b+1)^0,c
 10574  00213A  0E00               	movlw	0
 10575  00213C  6E37               	movwf	(___fladd@b+2)^0,c
 10576  00213E  0E00               	movlw	0
 10577  002140  6E38               	movwf	(___fladd@b+3)^0,c
 10578  002142                     l4041:
 10579  002142  503C               	movf	(___fladd@a+3)^0,w,c
 10580  002144  0B80               	andlw	128
 10581  002146  6E42               	movwf	___fladd@aexp^0,c
 10582  002148  5041               	movf	___fladd@signs^0,w,c
 10583  00214A  1842               	xorwf	___fladd@aexp^0,w,c
 10584  00214C  B4D8               	btfsc	status,2,c
 10585  00214E  EFAB  F010         	goto	u4061
 10586  002152  EFAD  F010         	goto	u4060
 10587  002156                     u4061:
 10588  002156  EFAE  F010         	goto	l4047
 10589  00215A                     u4060:
 10590  00215A  8C41               	bsf	___fladd@signs^0,6,c
 10591  00215C                     l4047:
 10592  00215C  503C               	movf	(___fladd@a+3)^0,w,c
 10593  00215E  243C               	addwf	(___fladd@a+3)^0,w,c
 10594  002160  6E42               	movwf	___fladd@aexp^0,c
 10595  002162  AE3B               	btfss	(___fladd@a+2)^0,7,c
 10596  002164  EFB6  F010         	goto	u4071
 10597  002168  EFB8  F010         	goto	u4070
 10598  00216C                     u4071:
 10599  00216C  EFB9  F010         	goto	l4053
 10600  002170                     u4070:
 10601  002170  8042               	bsf	___fladd@aexp^0,0,c
 10602  002172                     l4053:
 10603  002172  5042               	movf	___fladd@aexp^0,w,c
 10604  002174  B4D8               	btfsc	status,2,c
 10605  002176  EFBF  F010         	goto	u4081
 10606  00217A  EFC1  F010         	goto	u4080
 10607  00217E                     u4081:
 10608  00217E  EFD6  F010         	goto	l4063
 10609  002182                     u4080:
 10610  002182  2842               	incf	___fladd@aexp^0,w,c
 10611  002184  A4D8               	btfss	status,2,c
 10612  002186  EFC7  F010         	goto	u4091
 10613  00218A  EFC9  F010         	goto	u4090
 10614  00218E                     u4091:
 10615  00218E  EFD1  F010         	goto	l4059
 10616  002192                     u4090:
 10617  002192  0E00               	movlw	0
 10618  002194  6E39               	movwf	___fladd@a^0,c
 10619  002196  0E00               	movlw	0
 10620  002198  6E3A               	movwf	(___fladd@a+1)^0,c
 10621  00219A  0E00               	movlw	0
 10622  00219C  6E3B               	movwf	(___fladd@a+2)^0,c
 10623  00219E  0E00               	movlw	0
 10624  0021A0  6E3C               	movwf	(___fladd@a+3)^0,c
 10625  0021A2                     l4059:
 10626  0021A2  8E3B               	bsf	(___fladd@a+2)^0,7,c
 10627  0021A4  0E00               	movlw	0
 10628  0021A6  6E3C               	movwf	(___fladd@a+3)^0,c
 10629  0021A8  EFDE  F010         	goto	l4065
 10630  0021AC                     l4063:
 10631  0021AC  0E00               	movlw	0
 10632  0021AE  6E39               	movwf	___fladd@a^0,c
 10633  0021B0  0E00               	movlw	0
 10634  0021B2  6E3A               	movwf	(___fladd@a+1)^0,c
 10635  0021B4  0E00               	movlw	0
 10636  0021B6  6E3B               	movwf	(___fladd@a+2)^0,c
 10637  0021B8  0E00               	movlw	0
 10638  0021BA  6E3C               	movwf	(___fladd@a+3)^0,c
 10639  0021BC                     l4065:
 10640  0021BC  5043               	movf	___fladd@bexp^0,w,c
 10641  0021BE  5C42               	subwf	___fladd@aexp^0,w,c
 10642  0021C0  B0D8               	btfsc	status,0,c
 10643  0021C2  EFE5  F010         	goto	u4101
 10644  0021C6  EFE7  F010         	goto	u4100
 10645  0021CA                     u4101:
 10646  0021CA  EF0E  F011         	goto	l4101
 10647  0021CE                     u4100:
 10648  0021CE  AC41               	btfss	___fladd@signs^0,6,c
 10649  0021D0  EFEC  F010         	goto	u4111
 10650  0021D4  EFEE  F010         	goto	u4110
 10651  0021D8                     u4111:
 10652  0021D8  EFF0  F010         	goto	l4071
 10653  0021DC                     u4110:
 10654  0021DC  0E80               	movlw	128
 10655  0021DE  1A41               	xorwf	___fladd@signs^0,f,c
 10656  0021E0                     l4071:
 10657  0021E0  C043  F044         	movff	___fladd@bexp,___fladd@grs
 10658  0021E4  C042  F043         	movff	___fladd@aexp,___fladd@bexp
 10659  0021E8  C044  F042         	movff	___fladd@grs,___fladd@aexp
 10660  0021EC  C035  F044         	movff	___fladd@b,___fladd@grs
 10661  0021F0  C039  F035         	movff	___fladd@a,___fladd@b
 10662  0021F4  C044  F039         	movff	___fladd@grs,___fladd@a
 10663  0021F8  C036  F044         	movff	___fladd@b+1,___fladd@grs
 10664  0021FC  C03A  F036         	movff	___fladd@a+1,___fladd@b+1
 10665  002200  C044  F03A         	movff	___fladd@grs,___fladd@a+1
 10666  002204  C037  F044         	movff	___fladd@b+2,___fladd@grs
 10667  002208  C03B  F037         	movff	___fladd@a+2,___fladd@b+2
 10668  00220C  C044  F03B         	movff	___fladd@grs,___fladd@a+2
 10669  002210  C038  F044         	movff	___fladd@b+3,___fladd@grs
 10670  002214  C03C  F038         	movff	___fladd@a+3,___fladd@b+3
 10671  002218  C044  F03C         	movff	___fladd@grs,___fladd@a+3
 10672  00221C                     l4101:
 10673  00221C  0E00               	movlw	0
 10674  00221E  6E44               	movwf	___fladd@grs^0,c
 10675  002220  5043               	movf	___fladd@bexp^0,w,c
 10676  002222  C042  F03D         	movff	___fladd@aexp,??___fladd
 10677  002226  6A3E               	clrf	(??___fladd+1)^0,c
 10678  002228  5E3D               	subwf	??___fladd^0,f,c
 10679  00222A  0E00               	movlw	0
 10680  00222C  5A3E               	subwfb	(??___fladd+1)^0,f,c
 10681  00222E  BE3E               	btfsc	(??___fladd+1)^0,7,c
 10682  002230  EF23  F011         	goto	u4121
 10683  002234  503E               	movf	(??___fladd+1)^0,w,c
 10684  002236  E109               	bnz	u4120
 10685  002238  0E1A               	movlw	26
 10686  00223A  5C3D               	subwf	??___fladd^0,w,c
 10687  00223C  A0D8               	btfss	status,0,c
 10688  00223E  EF23  F011         	goto	u4121
 10689  002242  EF25  F011         	goto	u4120
 10690  002246                     u4121:
 10691  002246  EF5C  F011         	goto	l1077
 10692  00224A                     u4120:
 10693  00224A  5035               	movf	___fladd@b^0,w,c
 10694  00224C  1036               	iorwf	(___fladd@b+1)^0,w,c
 10695  00224E  1037               	iorwf	(___fladd@b+2)^0,w,c
 10696  002250  1038               	iorwf	(___fladd@b+3)^0,w,c
 10697  002252  A4D8               	btfss	status,2,c
 10698  002254  EF2E  F011         	goto	u4131
 10699  002258  EF31  F011         	goto	u4130
 10700  00225C                     u4131:
 10701  00225C  0E01               	movlw	1
 10702  00225E  EF32  F011         	goto	u4140
 10703  002262                     u4130:
 10704  002262  0E00               	movlw	0
 10705  002264                     u4140:
 10706  002264  6E44               	movwf	___fladd@grs^0,c
 10707  002266  0E00               	movlw	0
 10708  002268  6E35               	movwf	___fladd@b^0,c
 10709  00226A  0E00               	movlw	0
 10710  00226C  6E36               	movwf	(___fladd@b+1)^0,c
 10711  00226E  0E00               	movlw	0
 10712  002270  6E37               	movwf	(___fladd@b+2)^0,c
 10713  002272  0E00               	movlw	0
 10714  002274  6E38               	movwf	(___fladd@b+3)^0,c
 10715  002276  C042  F043         	movff	___fladd@aexp,___fladd@bexp
 10716  00227A  EF65  F011         	goto	l1076
 10717  00227E                     l1078:
 10718  00227E  A044               	btfss	___fladd@grs^0,0,c
 10719  002280  EF44  F011         	goto	u4151
 10720  002284  EF46  F011         	goto	u4150
 10721  002288                     u4151:
 10722  002288  EF4C  F011         	goto	l4113
 10723  00228C                     u4150:
 10724  00228C  90D8               	bcf	status,0,c
 10725  00228E  3044               	rrcf	___fladd@grs^0,w,c
 10726  002290  0901               	iorlw	1
 10727  002292  6E44               	movwf	___fladd@grs^0,c
 10728  002294  EF4E  F011         	goto	l4115
 10729  002298                     l4113:
 10730  002298  90D8               	bcf	status,0,c
 10731  00229A  3244               	rrcf	___fladd@grs^0,f,c
 10732  00229C                     l4115:
 10733  00229C  A035               	btfss	___fladd@b^0,0,c
 10734  00229E  EF53  F011         	goto	u4161
 10735  0022A2  EF55  F011         	goto	u4160
 10736  0022A6                     u4161:
 10737  0022A6  EF56  F011         	goto	l4119
 10738  0022AA                     u4160:
 10739  0022AA  8E44               	bsf	___fladd@grs^0,7,c
 10740  0022AC                     l4119:
 10741  0022AC  3438               	rlcf	(___fladd@b+3)^0,w,c
 10742  0022AE  3238               	rrcf	(___fladd@b+3)^0,f,c
 10743  0022B0  3237               	rrcf	(___fladd@b+2)^0,f,c
 10744  0022B2  3236               	rrcf	(___fladd@b+1)^0,f,c
 10745  0022B4  3235               	rrcf	___fladd@b^0,f,c
 10746  0022B6  2A43               	incf	___fladd@bexp^0,f,c
 10747  0022B8                     l1077:
 10748  0022B8  5042               	movf	___fladd@aexp^0,w,c
 10749  0022BA  5C43               	subwf	___fladd@bexp^0,w,c
 10750  0022BC  A0D8               	btfss	status,0,c
 10751  0022BE  EF63  F011         	goto	u4171
 10752  0022C2  EF65  F011         	goto	u4170
 10753  0022C6                     u4171:
 10754  0022C6  EF3F  F011         	goto	l1078
 10755  0022CA                     u4170:
 10756  0022CA                     l1076:
 10757  0022CA  BC41               	btfsc	___fladd@signs^0,6,c
 10758  0022CC  EF6A  F011         	goto	u4181
 10759  0022D0  EF6C  F011         	goto	u4180
 10760  0022D4                     u4181:
 10761  0022D4  EFAC  F011         	goto	l4147
 10762  0022D8                     u4180:
 10763  0022D8  5043               	movf	___fladd@bexp^0,w,c
 10764  0022DA  A4D8               	btfss	status,2,c
 10765  0022DC  EF72  F011         	goto	u4191
 10766  0022E0  EF74  F011         	goto	u4190
 10767  0022E4                     u4191:
 10768  0022E4  EF7E  F011         	goto	l4129
 10769  0022E8                     u4190:
 10770  0022E8  0E00               	movlw	0
 10771  0022EA  6E35               	movwf	?___fladd^0,c
 10772  0022EC  0E00               	movlw	0
 10773  0022EE  6E36               	movwf	(?___fladd+1)^0,c
 10774  0022F0  0E00               	movlw	0
 10775  0022F2  6E37               	movwf	(?___fladd+2)^0,c
 10776  0022F4  0E00               	movlw	0
 10777  0022F6  6E38               	movwf	(?___fladd+3)^0,c
 10778  0022F8  EFCD  F012         	goto	l1085
 10779  0022FC                     l4129:
 10780  0022FC  5039               	movf	___fladd@a^0,w,c
 10781  0022FE  2635               	addwf	___fladd@b^0,f,c
 10782  002300  503A               	movf	(___fladd@a+1)^0,w,c
 10783  002302  2236               	addwfc	(___fladd@b+1)^0,f,c
 10784  002304  503B               	movf	(___fladd@a+2)^0,w,c
 10785  002306  2237               	addwfc	(___fladd@b+2)^0,f,c
 10786  002308  503C               	movf	(___fladd@a+3)^0,w,c
 10787  00230A  2238               	addwfc	(___fladd@b+3)^0,f,c
 10788  00230C  A038               	btfss	(___fladd@b+3)^0,0,c
 10789  00230E  EF8B  F011         	goto	u4201
 10790  002312  EF8D  F011         	goto	u4200
 10791  002316                     u4201:
 10792  002316  EF39  F012         	goto	l4183
 10793  00231A                     u4200:
 10794  00231A  A044               	btfss	___fladd@grs^0,0,c
 10795  00231C  EF92  F011         	goto	u4211
 10796  002320  EF94  F011         	goto	u4210
 10797  002324                     u4211:
 10798  002324  EF9A  F011         	goto	l4137
 10799  002328                     u4210:
 10800  002328  90D8               	bcf	status,0,c
 10801  00232A  3044               	rrcf	___fladd@grs^0,w,c
 10802  00232C  0901               	iorlw	1
 10803  00232E  6E44               	movwf	___fladd@grs^0,c
 10804  002330  EF9C  F011         	goto	l4139
 10805  002334                     l4137:
 10806  002334  90D8               	bcf	status,0,c
 10807  002336  3244               	rrcf	___fladd@grs^0,f,c
 10808  002338                     l4139:
 10809  002338  A035               	btfss	___fladd@b^0,0,c
 10810  00233A  EFA1  F011         	goto	u4221
 10811  00233E  EFA3  F011         	goto	u4220
 10812  002342                     u4221:
 10813  002342  EFA4  F011         	goto	l4143
 10814  002346                     u4220:
 10815  002346  8E44               	bsf	___fladd@grs^0,7,c
 10816  002348                     l4143:
 10817  002348  3438               	rlcf	(___fladd@b+3)^0,w,c
 10818  00234A  3238               	rrcf	(___fladd@b+3)^0,f,c
 10819  00234C  3237               	rrcf	(___fladd@b+2)^0,f,c
 10820  00234E  3236               	rrcf	(___fladd@b+1)^0,f,c
 10821  002350  3235               	rrcf	___fladd@b^0,f,c
 10822  002352  2A43               	incf	___fladd@bexp^0,f,c
 10823  002354  EF39  F012         	goto	l4183
 10824  002358                     l4147:
 10825  002358  5039               	movf	___fladd@a^0,w,c
 10826  00235A  5C35               	subwf	___fladd@b^0,w,c
 10827  00235C  503A               	movf	(___fladd@a+1)^0,w,c
 10828  00235E  5836               	subwfb	(___fladd@b+1)^0,w,c
 10829  002360  503B               	movf	(___fladd@a+2)^0,w,c
 10830  002362  5837               	subwfb	(___fladd@b+2)^0,w,c
 10831  002364  5038               	movf	(___fladd@b+3)^0,w,c
 10832  002366  0A80               	xorlw	128
 10833  002368  6E3D               	movwf	??___fladd^0,c
 10834  00236A  503C               	movf	(___fladd@a+3)^0,w,c
 10835  00236C  0A80               	xorlw	128
 10836  00236E  583D               	subwfb	??___fladd^0,w,c
 10837  002370  B0D8               	btfsc	status,0,c
 10838  002372  EFBD  F011         	goto	u4231
 10839  002376  EFBF  F011         	goto	u4230
 10840  00237A                     u4231:
 10841  00237A  EFEA  F011         	goto	l4157
 10842  00237E                     u4230:
 10843  00237E  5035               	movf	___fladd@b^0,w,c
 10844  002380  5C39               	subwf	___fladd@a^0,w,c
 10845  002382  6E3D               	movwf	??___fladd^0,c
 10846  002384  5036               	movf	(___fladd@b+1)^0,w,c
 10847  002386  583A               	subwfb	(___fladd@a+1)^0,w,c
 10848  002388  6E3E               	movwf	(??___fladd+1)^0,c
 10849  00238A  5037               	movf	(___fladd@b+2)^0,w,c
 10850  00238C  583B               	subwfb	(___fladd@a+2)^0,w,c
 10851  00238E  6E3F               	movwf	(??___fladd+2)^0,c
 10852  002390  5038               	movf	(___fladd@b+3)^0,w,c
 10853  002392  583C               	subwfb	(___fladd@a+3)^0,w,c
 10854  002394  6E40               	movwf	(??___fladd+3)^0,c
 10855  002396  0EFF               	movlw	255
 10856  002398  243D               	addwf	??___fladd^0,w,c
 10857  00239A  6E35               	movwf	___fladd@b^0,c
 10858  00239C  0EFF               	movlw	255
 10859  00239E  203E               	addwfc	(??___fladd+1)^0,w,c
 10860  0023A0  6E36               	movwf	(___fladd@b+1)^0,c
 10861  0023A2  0EFF               	movlw	255
 10862  0023A4  203F               	addwfc	(??___fladd+2)^0,w,c
 10863  0023A6  6E37               	movwf	(___fladd@b+2)^0,c
 10864  0023A8  0EFF               	movlw	255
 10865  0023AA  2040               	addwfc	(??___fladd+3)^0,w,c
 10866  0023AC  6E38               	movwf	(___fladd@b+3)^0,c
 10867  0023AE  0E80               	movlw	128
 10868  0023B0  1A41               	xorwf	___fladd@signs^0,f,c
 10869  0023B2  6C44               	negf	___fladd@grs^0,c
 10870  0023B4  5044               	movf	___fladd@grs^0,w,c
 10871  0023B6  A4D8               	btfss	status,2,c
 10872  0023B8  EFE0  F011         	goto	u4241
 10873  0023BC  EFE2  F011         	goto	u4240
 10874  0023C0                     u4241:
 10875  0023C0  EFF2  F011         	goto	l1093
 10876  0023C4                     u4240:
 10877  0023C4  0E01               	movlw	1
 10878  0023C6  2635               	addwf	___fladd@b^0,f,c
 10879  0023C8  0E00               	movlw	0
 10880  0023CA  2236               	addwfc	(___fladd@b+1)^0,f,c
 10881  0023CC  2237               	addwfc	(___fladd@b+2)^0,f,c
 10882  0023CE  2238               	addwfc	(___fladd@b+3)^0,f,c
 10883  0023D0  EFF2  F011         	goto	l1093
 10884  0023D4                     l4157:
 10885  0023D4  5039               	movf	___fladd@a^0,w,c
 10886  0023D6  5E35               	subwf	___fladd@b^0,f,c
 10887  0023D8  503A               	movf	(___fladd@a+1)^0,w,c
 10888  0023DA  5A36               	subwfb	(___fladd@b+1)^0,f,c
 10889  0023DC  503B               	movf	(___fladd@a+2)^0,w,c
 10890  0023DE  5A37               	subwfb	(___fladd@b+2)^0,f,c
 10891  0023E0  503C               	movf	(___fladd@a+3)^0,w,c
 10892  0023E2  5A38               	subwfb	(___fladd@b+3)^0,f,c
 10893  0023E4                     l1093:
 10894  0023E4  5035               	movf	___fladd@b^0,w,c
 10895  0023E6  1036               	iorwf	(___fladd@b+1)^0,w,c
 10896  0023E8  1037               	iorwf	(___fladd@b+2)^0,w,c
 10897  0023EA  1038               	iorwf	(___fladd@b+3)^0,w,c
 10898  0023EC  A4D8               	btfss	status,2,c
 10899  0023EE  EFFB  F011         	goto	u4251
 10900  0023F2  EFFD  F011         	goto	u4250
 10901  0023F6                     u4251:
 10902  0023F6  EF32  F012         	goto	l4181
 10903  0023FA                     u4250:
 10904  0023FA  5044               	movf	___fladd@grs^0,w,c
 10905  0023FC  A4D8               	btfss	status,2,c
 10906  0023FE  EF03  F012         	goto	u4261
 10907  002402  EF05  F012         	goto	u4260
 10908  002406                     u4261:
 10909  002406  EF32  F012         	goto	l4181
 10910  00240A                     u4260:
 10911  00240A  0E00               	movlw	0
 10912  00240C  6E35               	movwf	?___fladd^0,c
 10913  00240E  0E00               	movlw	0
 10914  002410  6E36               	movwf	(?___fladd+1)^0,c
 10915  002412  0E00               	movlw	0
 10916  002414  6E37               	movwf	(?___fladd+2)^0,c
 10917  002416  0E00               	movlw	0
 10918  002418  6E38               	movwf	(?___fladd+3)^0,c
 10919  00241A  EFCD  F012         	goto	l1085
 10920  00241E                     l4165:
 10921  00241E  90D8               	bcf	status,0,c
 10922  002420  3635               	rlcf	___fladd@b^0,f,c
 10923  002422  3636               	rlcf	(___fladd@b+1)^0,f,c
 10924  002424  3637               	rlcf	(___fladd@b+2)^0,f,c
 10925  002426  3638               	rlcf	(___fladd@b+3)^0,f,c
 10926  002428  AE44               	btfss	___fladd@grs^0,7,c
 10927  00242A  EF19  F012         	goto	u4271
 10928  00242E  EF1B  F012         	goto	u4270
 10929  002432                     u4271:
 10930  002432  EF1C  F012         	goto	l4171
 10931  002436                     u4270:
 10932  002436  8035               	bsf	___fladd@b^0,0,c
 10933  002438                     l4171:
 10934  002438  A044               	btfss	___fladd@grs^0,0,c
 10935  00243A  EF21  F012         	goto	u4281
 10936  00243E  EF23  F012         	goto	u4280
 10937  002442                     u4281:
 10938  002442  EF27  F012         	goto	l4175
 10939  002446                     u4280:
 10940  002446  80D8               	bsf	status,0,c
 10941  002448  3644               	rlcf	___fladd@grs^0,f,c
 10942  00244A  EF29  F012         	goto	l4177
 10943  00244E                     l4175:
 10944  00244E  90D8               	bcf	status,0,c
 10945  002450  3644               	rlcf	___fladd@grs^0,f,c
 10946  002452                     l4177:
 10947  002452  5043               	movf	___fladd@bexp^0,w,c
 10948  002454  B4D8               	btfsc	status,2,c
 10949  002456  EF2F  F012         	goto	u4291
 10950  00245A  EF31  F012         	goto	u4290
 10951  00245E                     u4291:
 10952  00245E  EF32  F012         	goto	l4181
 10953  002462                     u4290:
 10954  002462  0643               	decf	___fladd@bexp^0,f,c
 10955  002464                     l4181:
 10956  002464  AE37               	btfss	(___fladd@b+2)^0,7,c
 10957  002466  EF37  F012         	goto	u4301
 10958  00246A  EF39  F012         	goto	u4300
 10959  00246E                     u4301:
 10960  00246E  EF0F  F012         	goto	l4165
 10961  002472                     u4300:
 10962  002472                     l4183:
 10963  002472  0E00               	movlw	0
 10964  002474  6E42               	movwf	___fladd@aexp^0,c
 10965  002476  AE44               	btfss	___fladd@grs^0,7,c
 10966  002478  EF40  F012         	goto	u4311
 10967  00247C  EF42  F012         	goto	u4310
 10968  002480                     u4311:
 10969  002480  EF5A  F012         	goto	l1102
 10970  002484                     u4310:
 10971  002484  C044  F03D         	movff	___fladd@grs,??___fladd
 10972  002488  0E7F               	movlw	127
 10973  00248A  163D               	andwf	??___fladd^0,f,c
 10974  00248C  B4D8               	btfsc	status,2,c
 10975  00248E  EF4B  F012         	goto	u4321
 10976  002492  EF4D  F012         	goto	u4320
 10977  002496                     u4321:
 10978  002496  EF51  F012         	goto	l1103
 10979  00249A                     u4320:
 10980  00249A                     l4189:
 10981  00249A  0E01               	movlw	1
 10982  00249C  6E42               	movwf	___fladd@aexp^0,c
 10983  00249E  EF5A  F012         	goto	l1102
 10984  0024A2                     l1103:
 10985  0024A2  A035               	btfss	___fladd@b^0,0,c
 10986  0024A4  EF56  F012         	goto	u4331
 10987  0024A8  EF58  F012         	goto	u4330
 10988  0024AC                     u4331:
 10989  0024AC  EF5A  F012         	goto	l1102
 10990  0024B0                     u4330:
 10991  0024B0  EF4D  F012         	goto	l4189
 10992  0024B4                     l1102:
 10993  0024B4  5042               	movf	___fladd@aexp^0,w,c
 10994  0024B6  B4D8               	btfsc	status,2,c
 10995  0024B8  EF60  F012         	goto	u4341
 10996  0024BC  EF62  F012         	goto	u4340
 10997  0024C0                     u4341:
 10998  0024C0  EF8D  F012         	goto	l4201
 10999  0024C4                     u4340:
 11000  0024C4  0E01               	movlw	1
 11001  0024C6  2635               	addwf	___fladd@b^0,f,c
 11002  0024C8  0E00               	movlw	0
 11003  0024CA  2236               	addwfc	(___fladd@b+1)^0,f,c
 11004  0024CC  2237               	addwfc	(___fladd@b+2)^0,f,c
 11005  0024CE  2238               	addwfc	(___fladd@b+3)^0,f,c
 11006  0024D0  A038               	btfss	(___fladd@b+3)^0,0,c
 11007  0024D2  EF6D  F012         	goto	u4351
 11008  0024D6  EF6F  F012         	goto	u4350
 11009  0024DA                     u4351:
 11010  0024DA  EF8D  F012         	goto	l4201
 11011  0024DE                     u4350:
 11012  0024DE  C035  F03D         	movff	___fladd@b,??___fladd
 11013  0024E2  C036  F03E         	movff	___fladd@b+1,??___fladd+1
 11014  0024E6  C037  F03F         	movff	___fladd@b+2,??___fladd+2
 11015  0024EA  C038  F040         	movff	___fladd@b+3,??___fladd+3
 11016  0024EE  3440               	rlcf	(??___fladd+3)^0,w,c
 11017  0024F0  3240               	rrcf	(??___fladd+3)^0,f,c
 11018  0024F2  323F               	rrcf	(??___fladd+2)^0,f,c
 11019  0024F4  323E               	rrcf	(??___fladd+1)^0,f,c
 11020  0024F6  323D               	rrcf	??___fladd^0,f,c
 11021  0024F8  C03D  F035         	movff	??___fladd,___fladd@b
 11022  0024FC  C03E  F036         	movff	??___fladd+1,___fladd@b+1
 11023  002500  C03F  F037         	movff	??___fladd+2,___fladd@b+2
 11024  002504  C040  F038         	movff	??___fladd+3,___fladd@b+3
 11025  002508  2843               	incf	___fladd@bexp^0,w,c
 11026  00250A  B4D8               	btfsc	status,2,c
 11027  00250C  EF8A  F012         	goto	u4361
 11028  002510  EF8C  F012         	goto	u4360
 11029  002514                     u4361:
 11030  002514  EF8D  F012         	goto	l4201
 11031  002518                     u4360:
 11032  002518  2A43               	incf	___fladd@bexp^0,f,c
 11033  00251A                     l4201:
 11034  00251A  2843               	incf	___fladd@bexp^0,w,c
 11035  00251C  B4D8               	btfsc	status,2,c
 11036  00251E  EF93  F012         	goto	u4371
 11037  002522  EF95  F012         	goto	u4370
 11038  002526                     u4371:
 11039  002526  EF9D  F012         	goto	l4205
 11040  00252A                     u4370:
 11041  00252A  5043               	movf	___fladd@bexp^0,w,c
 11042  00252C  A4D8               	btfss	status,2,c
 11043  00252E  EF9B  F012         	goto	u4381
 11044  002532  EF9D  F012         	goto	u4380
 11045  002536                     u4381:
 11046  002536  EFAF  F012         	goto	l4209
 11047  00253A                     u4380:
 11048  00253A                     l4205:
 11049  00253A  0E00               	movlw	0
 11050  00253C  6E35               	movwf	___fladd@b^0,c
 11051  00253E  0E00               	movlw	0
 11052  002540  6E36               	movwf	(___fladd@b+1)^0,c
 11053  002542  0E00               	movlw	0
 11054  002544  6E37               	movwf	(___fladd@b+2)^0,c
 11055  002546  0E00               	movlw	0
 11056  002548  6E38               	movwf	(___fladd@b+3)^0,c
 11057  00254A  5043               	movf	___fladd@bexp^0,w,c
 11058  00254C  A4D8               	btfss	status,2,c
 11059  00254E  EFAB  F012         	goto	u4391
 11060  002552  EFAD  F012         	goto	u4390
 11061  002556                     u4391:
 11062  002556  EFAF  F012         	goto	l4209
 11063  00255A                     u4390:
 11064  00255A  0E00               	movlw	0
 11065  00255C  6E41               	movwf	___fladd@signs^0,c
 11066  00255E                     l4209:
 11067  00255E  A043               	btfss	___fladd@bexp^0,0,c
 11068  002560  EFB4  F012         	goto	u4401
 11069  002564  EFB6  F012         	goto	u4400
 11070  002568                     u4401:
 11071  002568  EFB9  F012         	goto	l4213
 11072  00256C                     u4400:
 11073  00256C  8E37               	bsf	(___fladd@b+2)^0,7,c
 11074  00256E  EFBA  F012         	goto	l4215
 11075  002572                     l4213:
 11076  002572  9E37               	bcf	(___fladd@b+2)^0,7,c
 11077  002574                     l4215:
 11078  002574  90D8               	bcf	status,0,c
 11079  002576  3043               	rrcf	___fladd@bexp^0,w,c
 11080  002578  6E38               	movwf	(___fladd@b+3)^0,c
 11081  00257A  AE41               	btfss	___fladd@signs^0,7,c
 11082  00257C  EFC2  F012         	goto	u4411
 11083  002580  EFC4  F012         	goto	u4410
 11084  002584                     u4411:
 11085  002584  EFC5  F012         	goto	l4221
 11086  002588                     u4410:
 11087  002588  8E38               	bsf	(___fladd@b+3)^0,7,c
 11088  00258A                     l4221:
 11089  00258A  C035  F035         	movff	___fladd@b,?___fladd
 11090  00258E  C036  F036         	movff	___fladd@b+1,?___fladd+1
 11091  002592  C037  F037         	movff	___fladd@b+2,?___fladd+2
 11092  002596  C038  F038         	movff	___fladd@b+3,?___fladd+3
 11093  00259A                     l1085:
 11094  00259A  0012               	return		;funcret
 11095  00259C                     __end_of___fladd:
 11096                           	callstack 0
 11097                           
 11098 ;; *************** function ___flneg *****************
 11099 ;; Defined at:
 11100 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
 11101 ;; Parameters:    Size  Location     Type
 11102 ;;  f1              4    0[COMRAM] unsigned char 
 11103 ;; Auto vars:     Size  Location     Type
 11104 ;;		None
 11105 ;; Return value:  Size  Location     Type
 11106 ;;                  4    0[COMRAM] unsigned char 
 11107 ;; Registers used:
 11108 ;;		wreg, status,2, status,0
 11109 ;; Tracked objects:
 11110 ;;		On entry : 0/0
 11111 ;;		On exit  : 0/0
 11112 ;;		Unchanged: 0/0
 11113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11114 ;;      Params:         4       0       0       0       0       0       0
 11115 ;;      Locals:         0       0       0       0       0       0       0
 11116 ;;      Temps:          0       0       0       0       0       0       0
 11117 ;;      Totals:         4       0       0       0       0       0       0
 11118 ;;Total ram usage:        4 bytes
 11119 ;; Hardware stack levels used:    1
 11120 ;; Hardware stack levels required when called:    1
 11121 ;; This function calls:
 11122 ;;		Nothing
 11123 ;; This function is called by:
 11124 ;;		_efgtoa
 11125 ;; This function uses a non-reentrant model
 11126 ;;
 11127                           
 11128                           	psect	text41
 11129  005AF6                     __ptext41:
 11130                           	callstack 0
 11131  005AF6                     ___flneg:
 11132                           	callstack 22
 11133  005AF6  5001               	movf	___flneg@f1^0,w,c
 11134  005AF8  1002               	iorwf	(___flneg@f1+1)^0,w,c
 11135  005AFA  1003               	iorwf	(___flneg@f1+2)^0,w,c
 11136  005AFC  1004               	iorwf	(___flneg@f1+3)^0,w,c
 11137  005AFE  B4D8               	btfsc	status,2,c
 11138  005B00  EF84  F02D         	goto	u5211
 11139  005B04  EF86  F02D         	goto	u5210
 11140  005B08                     u5211:
 11141  005B08  EF8E  F02D         	goto	l4729
 11142  005B0C                     u5210:
 11143  005B0C  0E00               	movlw	0
 11144  005B0E  1A01               	xorwf	___flneg@f1^0,f,c
 11145  005B10  0E00               	movlw	0
 11146  005B12  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 11147  005B14  0E00               	movlw	0
 11148  005B16  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 11149  005B18  0E80               	movlw	128
 11150  005B1A  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 11151  005B1C                     l4729:
 11152  005B1C  C001  F001         	movff	___flneg@f1,?___flneg
 11153  005B20  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 11154  005B24  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 11155  005B28  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 11156  005B2C  0012               	return		;funcret
 11157  005B2E                     __end_of___flneg:
 11158                           	callstack 0
 11159                           
 11160 ;; *************** function ___flmul *****************
 11161 ;; Defined at:
 11162 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
 11163 ;; Parameters:    Size  Location     Type
 11164 ;;  b               4   27[COMRAM] unsigned char 
 11165 ;;  a               4   31[COMRAM] unsigned char 
 11166 ;; Auto vars:     Size  Location     Type
 11167 ;;  prod            4   46[COMRAM] struct .
 11168 ;;  grs             4   40[COMRAM] unsigned long 
 11169 ;;  temp            2   50[COMRAM] struct .
 11170 ;;  bexp            1   45[COMRAM] unsigned char 
 11171 ;;  aexp            1   44[COMRAM] unsigned char 
 11172 ;;  sign            1   39[COMRAM] unsigned char 
 11173 ;; Return value:  Size  Location     Type
 11174 ;;                  4   27[COMRAM] unsigned char 
 11175 ;; Registers used:
 11176 ;;		wreg, status,2, status,0, prodl, prodh
 11177 ;; Tracked objects:
 11178 ;;		On entry : 0/0
 11179 ;;		On exit  : 0/0
 11180 ;;		Unchanged: 0/0
 11181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11182 ;;      Params:         8       0       0       0       0       0       0
 11183 ;;      Locals:        13       0       0       0       0       0       0
 11184 ;;      Temps:          4       0       0       0       0       0       0
 11185 ;;      Totals:        25       0       0       0       0       0       0
 11186 ;;Total ram usage:       25 bytes
 11187 ;; Hardware stack levels used:    1
 11188 ;; Hardware stack levels required when called:    1
 11189 ;; This function calls:
 11190 ;;		Nothing
 11191 ;; This function is called by:
 11192 ;;		_scanAdcConversion
 11193 ;;		_speedControl
 11194 ;;		_efgtoa
 11195 ;; This function uses a non-reentrant model
 11196 ;;
 11197                           
 11198                           	psect	text42
 11199  00259C                     __ptext42:
 11200                           	callstack 0
 11201  00259C                     ___flmul:
 11202                           	callstack 22
 11203  00259C  501F               	movf	(___flmul@b+3)^0,w,c
 11204  00259E  0B80               	andlw	128
 11205  0025A0  6E28               	movwf	___flmul@sign^0,c
 11206  0025A2  501F               	movf	(___flmul@b+3)^0,w,c
 11207  0025A4  241F               	addwf	(___flmul@b+3)^0,w,c
 11208  0025A6  6E2E               	movwf	___flmul@bexp^0,c
 11209  0025A8  AE1E               	btfss	(___flmul@b+2)^0,7,c
 11210  0025AA  EFD9  F012         	goto	u4821
 11211  0025AE  EFDB  F012         	goto	u4820
 11212  0025B2                     u4821:
 11213  0025B2  EFDC  F012         	goto	l4477
 11214  0025B6                     u4820:
 11215  0025B6  802E               	bsf	___flmul@bexp^0,0,c
 11216  0025B8                     l4477:
 11217  0025B8  502E               	movf	___flmul@bexp^0,w,c
 11218  0025BA  B4D8               	btfsc	status,2,c
 11219  0025BC  EFE2  F012         	goto	u4831
 11220  0025C0  EFE4  F012         	goto	u4830
 11221  0025C4                     u4831:
 11222  0025C4  EFF7  F012         	goto	l4485
 11223  0025C8                     u4830:
 11224  0025C8  282E               	incf	___flmul@bexp^0,w,c
 11225  0025CA  A4D8               	btfss	status,2,c
 11226  0025CC  EFEA  F012         	goto	u4841
 11227  0025D0  EFEC  F012         	goto	u4840
 11228  0025D4                     u4841:
 11229  0025D4  EFF4  F012         	goto	l4483
 11230  0025D8                     u4840:
 11231  0025D8  0E00               	movlw	0
 11232  0025DA  6E1C               	movwf	___flmul@b^0,c
 11233  0025DC  0E00               	movlw	0
 11234  0025DE  6E1D               	movwf	(___flmul@b+1)^0,c
 11235  0025E0  0E00               	movlw	0
 11236  0025E2  6E1E               	movwf	(___flmul@b+2)^0,c
 11237  0025E4  0E00               	movlw	0
 11238  0025E6  6E1F               	movwf	(___flmul@b+3)^0,c
 11239  0025E8                     l4483:
 11240  0025E8  8E1E               	bsf	(___flmul@b+2)^0,7,c
 11241  0025EA  EFFF  F012         	goto	l4487
 11242  0025EE                     l4485:
 11243  0025EE  0E00               	movlw	0
 11244  0025F0  6E1C               	movwf	___flmul@b^0,c
 11245  0025F2  0E00               	movlw	0
 11246  0025F4  6E1D               	movwf	(___flmul@b+1)^0,c
 11247  0025F6  0E00               	movlw	0
 11248  0025F8  6E1E               	movwf	(___flmul@b+2)^0,c
 11249  0025FA  0E00               	movlw	0
 11250  0025FC  6E1F               	movwf	(___flmul@b+3)^0,c
 11251  0025FE                     l4487:
 11252  0025FE  5023               	movf	(___flmul@a+3)^0,w,c
 11253  002600  0B80               	andlw	128
 11254  002602  1A28               	xorwf	___flmul@sign^0,f,c
 11255  002604  5023               	movf	(___flmul@a+3)^0,w,c
 11256  002606  2423               	addwf	(___flmul@a+3)^0,w,c
 11257  002608  6E2D               	movwf	___flmul@aexp^0,c
 11258  00260A  AE22               	btfss	(___flmul@a+2)^0,7,c
 11259  00260C  EF0A  F013         	goto	u4851
 11260  002610  EF0C  F013         	goto	u4850
 11261  002614                     u4851:
 11262  002614  EF0D  F013         	goto	l4495
 11263  002618                     u4850:
 11264  002618  802D               	bsf	___flmul@aexp^0,0,c
 11265  00261A                     l4495:
 11266  00261A  502D               	movf	___flmul@aexp^0,w,c
 11267  00261C  B4D8               	btfsc	status,2,c
 11268  00261E  EF13  F013         	goto	u4861
 11269  002622  EF15  F013         	goto	u4860
 11270  002626                     u4861:
 11271  002626  EF28  F013         	goto	l4503
 11272  00262A                     u4860:
 11273  00262A  282D               	incf	___flmul@aexp^0,w,c
 11274  00262C  A4D8               	btfss	status,2,c
 11275  00262E  EF1B  F013         	goto	u4871
 11276  002632  EF1D  F013         	goto	u4870
 11277  002636                     u4871:
 11278  002636  EF25  F013         	goto	l4501
 11279  00263A                     u4870:
 11280  00263A  0E00               	movlw	0
 11281  00263C  6E20               	movwf	___flmul@a^0,c
 11282  00263E  0E00               	movlw	0
 11283  002640  6E21               	movwf	(___flmul@a+1)^0,c
 11284  002642  0E00               	movlw	0
 11285  002644  6E22               	movwf	(___flmul@a+2)^0,c
 11286  002646  0E00               	movlw	0
 11287  002648  6E23               	movwf	(___flmul@a+3)^0,c
 11288  00264A                     l4501:
 11289  00264A  8E22               	bsf	(___flmul@a+2)^0,7,c
 11290  00264C  EF30  F013         	goto	l1162
 11291  002650                     l4503:
 11292  002650  0E00               	movlw	0
 11293  002652  6E20               	movwf	___flmul@a^0,c
 11294  002654  0E00               	movlw	0
 11295  002656  6E21               	movwf	(___flmul@a+1)^0,c
 11296  002658  0E00               	movlw	0
 11297  00265A  6E22               	movwf	(___flmul@a+2)^0,c
 11298  00265C  0E00               	movlw	0
 11299  00265E  6E23               	movwf	(___flmul@a+3)^0,c
 11300  002660                     l1162:
 11301  002660  502D               	movf	___flmul@aexp^0,w,c
 11302  002662  B4D8               	btfsc	status,2,c
 11303  002664  EF36  F013         	goto	u4881
 11304  002668  EF38  F013         	goto	u4880
 11305  00266C                     u4881:
 11306  00266C  EF40  F013         	goto	l4507
 11307  002670                     u4880:
 11308  002670  502E               	movf	___flmul@bexp^0,w,c
 11309  002672  A4D8               	btfss	status,2,c
 11310  002674  EF3E  F013         	goto	u4891
 11311  002678  EF40  F013         	goto	u4890
 11312  00267C                     u4891:
 11313  00267C  EF4A  F013         	goto	l4511
 11314  002680                     u4890:
 11315  002680                     l4507:
 11316  002680  0E00               	movlw	0
 11317  002682  6E1C               	movwf	?___flmul^0,c
 11318  002684  0E00               	movlw	0
 11319  002686  6E1D               	movwf	(?___flmul+1)^0,c
 11320  002688  0E00               	movlw	0
 11321  00268A  6E1E               	movwf	(?___flmul+2)^0,c
 11322  00268C  0E00               	movlw	0
 11323  00268E  6E1F               	movwf	(?___flmul+3)^0,c
 11324  002690  EFE2  F014         	goto	l1166
 11325  002694                     l4511:
 11326  002694  5022               	movf	(___flmul@a+2)^0,w,c
 11327  002696  021C               	mulwf	___flmul@b^0,c
 11328  002698  CFF3 F033          	movff	prodl,___flmul@temp
 11329  00269C  CFF4 F034          	movff	prodh,___flmul@temp+1
 11330  0026A0  5033               	movf	___flmul@temp^0,w,c
 11331  0026A2  6E29               	movwf	___flmul@grs^0,c
 11332  0026A4  6A2A               	clrf	(___flmul@grs+1)^0,c
 11333  0026A6  6A2B               	clrf	(___flmul@grs+2)^0,c
 11334  0026A8  6A2C               	clrf	(___flmul@grs+3)^0,c
 11335  0026AA  5034               	movf	(___flmul@temp+1)^0,w,c
 11336  0026AC  6E2F               	movwf	___flmul@prod^0,c
 11337  0026AE  6A30               	clrf	(___flmul@prod+1)^0,c
 11338  0026B0  6A31               	clrf	(___flmul@prod+2)^0,c
 11339  0026B2  6A32               	clrf	(___flmul@prod+3)^0,c
 11340  0026B4  5021               	movf	(___flmul@a+1)^0,w,c
 11341  0026B6  021D               	mulwf	(___flmul@b+1)^0,c
 11342  0026B8  CFF3 F033          	movff	prodl,___flmul@temp
 11343  0026BC  CFF4 F034          	movff	prodh,___flmul@temp+1
 11344  0026C0  5033               	movf	___flmul@temp^0,w,c
 11345  0026C2  2629               	addwf	___flmul@grs^0,f,c
 11346  0026C4  0E00               	movlw	0
 11347  0026C6  222A               	addwfc	(___flmul@grs+1)^0,f,c
 11348  0026C8  222B               	addwfc	(___flmul@grs+2)^0,f,c
 11349  0026CA  222C               	addwfc	(___flmul@grs+3)^0,f,c
 11350  0026CC  5034               	movf	(___flmul@temp+1)^0,w,c
 11351  0026CE  262F               	addwf	___flmul@prod^0,f,c
 11352  0026D0  0E00               	movlw	0
 11353  0026D2  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11354  0026D4  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11355  0026D6  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11356  0026D8  5020               	movf	___flmul@a^0,w,c
 11357  0026DA  021E               	mulwf	(___flmul@b+2)^0,c
 11358  0026DC  CFF3 F033          	movff	prodl,___flmul@temp
 11359  0026E0  CFF4 F034          	movff	prodh,___flmul@temp+1
 11360  0026E4  5033               	movf	___flmul@temp^0,w,c
 11361  0026E6  2629               	addwf	___flmul@grs^0,f,c
 11362  0026E8  0E00               	movlw	0
 11363  0026EA  222A               	addwfc	(___flmul@grs+1)^0,f,c
 11364  0026EC  222B               	addwfc	(___flmul@grs+2)^0,f,c
 11365  0026EE  222C               	addwfc	(___flmul@grs+3)^0,f,c
 11366  0026F0  5034               	movf	(___flmul@temp+1)^0,w,c
 11367  0026F2  262F               	addwf	___flmul@prod^0,f,c
 11368  0026F4  0E00               	movlw	0
 11369  0026F6  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11370  0026F8  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11371  0026FA  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11372  0026FC  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 11373  002700  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 11374  002704  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 11375  002708  6A29               	clrf	___flmul@grs^0,c
 11376  00270A  5020               	movf	___flmul@a^0,w,c
 11377  00270C  021D               	mulwf	(___flmul@b+1)^0,c
 11378  00270E  CFF3 F033          	movff	prodl,___flmul@temp
 11379  002712  CFF4 F034          	movff	prodh,___flmul@temp+1
 11380  002716  5033               	movf	___flmul@temp^0,w,c
 11381  002718  2629               	addwf	___flmul@grs^0,f,c
 11382  00271A  5034               	movf	(___flmul@temp+1)^0,w,c
 11383  00271C  222A               	addwfc	(___flmul@grs+1)^0,f,c
 11384  00271E  0E00               	movlw	0
 11385  002720  222B               	addwfc	(___flmul@grs+2)^0,f,c
 11386  002722  0E00               	movlw	0
 11387  002724  222C               	addwfc	(___flmul@grs+3)^0,f,c
 11388  002726  5021               	movf	(___flmul@a+1)^0,w,c
 11389  002728  021C               	mulwf	___flmul@b^0,c
 11390  00272A  CFF3 F033          	movff	prodl,___flmul@temp
 11391  00272E  CFF4 F034          	movff	prodh,___flmul@temp+1
 11392  002732  5033               	movf	___flmul@temp^0,w,c
 11393  002734  2629               	addwf	___flmul@grs^0,f,c
 11394  002736  5034               	movf	(___flmul@temp+1)^0,w,c
 11395  002738  222A               	addwfc	(___flmul@grs+1)^0,f,c
 11396  00273A  0E00               	movlw	0
 11397  00273C  222B               	addwfc	(___flmul@grs+2)^0,f,c
 11398  00273E  0E00               	movlw	0
 11399  002740  222C               	addwfc	(___flmul@grs+3)^0,f,c
 11400  002742  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 11401  002746  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 11402  00274A  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 11403  00274E  6A29               	clrf	___flmul@grs^0,c
 11404  002750  5020               	movf	___flmul@a^0,w,c
 11405  002752  021C               	mulwf	___flmul@b^0,c
 11406  002754  CFF3 F033          	movff	prodl,___flmul@temp
 11407  002758  CFF4 F034          	movff	prodh,___flmul@temp+1
 11408  00275C  5033               	movf	___flmul@temp^0,w,c
 11409  00275E  2629               	addwf	___flmul@grs^0,f,c
 11410  002760  5034               	movf	(___flmul@temp+1)^0,w,c
 11411  002762  222A               	addwfc	(___flmul@grs+1)^0,f,c
 11412  002764  0E00               	movlw	0
 11413  002766  222B               	addwfc	(___flmul@grs+2)^0,f,c
 11414  002768  0E00               	movlw	0
 11415  00276A  222C               	addwfc	(___flmul@grs+3)^0,f,c
 11416  00276C  5022               	movf	(___flmul@a+2)^0,w,c
 11417  00276E  021D               	mulwf	(___flmul@b+1)^0,c
 11418  002770  CFF3 F033          	movff	prodl,___flmul@temp
 11419  002774  CFF4 F034          	movff	prodh,___flmul@temp+1
 11420  002778  5033               	movf	___flmul@temp^0,w,c
 11421  00277A  262F               	addwf	___flmul@prod^0,f,c
 11422  00277C  5034               	movf	(___flmul@temp+1)^0,w,c
 11423  00277E  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11424  002780  0E00               	movlw	0
 11425  002782  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11426  002784  0E00               	movlw	0
 11427  002786  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11428  002788  5021               	movf	(___flmul@a+1)^0,w,c
 11429  00278A  021E               	mulwf	(___flmul@b+2)^0,c
 11430  00278C  CFF3 F033          	movff	prodl,___flmul@temp
 11431  002790  CFF4 F034          	movff	prodh,___flmul@temp+1
 11432  002794  5033               	movf	___flmul@temp^0,w,c
 11433  002796  262F               	addwf	___flmul@prod^0,f,c
 11434  002798  5034               	movf	(___flmul@temp+1)^0,w,c
 11435  00279A  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11436  00279C  0E00               	movlw	0
 11437  00279E  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11438  0027A0  0E00               	movlw	0
 11439  0027A2  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11440  0027A4  5022               	movf	(___flmul@a+2)^0,w,c
 11441  0027A6  021E               	mulwf	(___flmul@b+2)^0,c
 11442  0027A8  CFF3 F033          	movff	prodl,___flmul@temp
 11443  0027AC  CFF4 F034          	movff	prodh,___flmul@temp+1
 11444  0027B0  5033               	movf	___flmul@temp^0,w,c
 11445  0027B2  6E24               	movwf	??___flmul^0,c
 11446  0027B4  5034               	movf	(___flmul@temp+1)^0,w,c
 11447  0027B6  6E25               	movwf	(??___flmul+1)^0,c
 11448  0027B8  6A26               	clrf	(??___flmul+2)^0,c
 11449  0027BA  6A27               	clrf	(??___flmul+3)^0,c
 11450  0027BC  C026  F027         	movff	??___flmul+2,??___flmul+3
 11451  0027C0  C025  F026         	movff	??___flmul+1,??___flmul+2
 11452  0027C4  C024  F025         	movff	??___flmul,??___flmul+1
 11453  0027C8  6A24               	clrf	??___flmul^0,c
 11454  0027CA  5024               	movf	??___flmul^0,w,c
 11455  0027CC  262F               	addwf	___flmul@prod^0,f,c
 11456  0027CE  5025               	movf	(??___flmul+1)^0,w,c
 11457  0027D0  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11458  0027D2  5026               	movf	(??___flmul+2)^0,w,c
 11459  0027D4  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11460  0027D6  5027               	movf	(??___flmul+3)^0,w,c
 11461  0027D8  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11462  0027DA  C029  F024         	movff	___flmul@grs,??___flmul
 11463  0027DE  C02A  F025         	movff	___flmul@grs+1,??___flmul+1
 11464  0027E2  C02B  F026         	movff	___flmul@grs+2,??___flmul+2
 11465  0027E6  C02C  F027         	movff	___flmul@grs+3,??___flmul+3
 11466  0027EA  0E19               	movlw	25
 11467  0027EC  EFFD  F013         	goto	u4900
 11468  0027F0                     u4905:
 11469  0027F0  90D8               	bcf	status,0,c
 11470  0027F2  3227               	rrcf	(??___flmul+3)^0,f,c
 11471  0027F4  3226               	rrcf	(??___flmul+2)^0,f,c
 11472  0027F6  3225               	rrcf	(??___flmul+1)^0,f,c
 11473  0027F8  3224               	rrcf	??___flmul^0,f,c
 11474  0027FA                     u4900:
 11475  0027FA  2EE8               	decfsz	wreg,f,c
 11476  0027FC  EFF8  F013         	goto	u4905
 11477  002800  5024               	movf	??___flmul^0,w,c
 11478  002802  262F               	addwf	___flmul@prod^0,f,c
 11479  002804  5025               	movf	(??___flmul+1)^0,w,c
 11480  002806  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11481  002808  5026               	movf	(??___flmul+2)^0,w,c
 11482  00280A  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11483  00280C  5027               	movf	(??___flmul+3)^0,w,c
 11484  00280E  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11485  002810  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 11486  002814  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 11487  002818  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 11488  00281C  6A29               	clrf	___flmul@grs^0,c
 11489  00281E  502D               	movf	___flmul@aexp^0,w,c
 11490  002820  C02E  F024         	movff	___flmul@bexp,??___flmul
 11491  002824  6A25               	clrf	(??___flmul+1)^0,c
 11492  002826  2624               	addwf	??___flmul^0,f,c
 11493  002828  0E00               	movlw	0
 11494  00282A  2225               	addwfc	(??___flmul+1)^0,f,c
 11495  00282C  0E82               	movlw	130
 11496  00282E  2424               	addwf	??___flmul^0,w,c
 11497  002830  6E33               	movwf	___flmul@temp^0,c
 11498  002832  0EFF               	movlw	255
 11499  002834  2025               	addwfc	(??___flmul+1)^0,w,c
 11500  002836  6E34               	movwf	(___flmul@temp+1)^0,c
 11501  002838  EF33  F014         	goto	l4559
 11502  00283C                     l4553:
 11503  00283C  90D8               	bcf	status,0,c
 11504  00283E  362F               	rlcf	___flmul@prod^0,f,c
 11505  002840  3630               	rlcf	(___flmul@prod+1)^0,f,c
 11506  002842  3631               	rlcf	(___flmul@prod+2)^0,f,c
 11507  002844  3632               	rlcf	(___flmul@prod+3)^0,f,c
 11508  002846  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 11509  002848  EF28  F014         	goto	u4911
 11510  00284C  EF2A  F014         	goto	u4910
 11511  002850                     u4911:
 11512  002850  EF2B  F014         	goto	l1169
 11513  002854                     u4910:
 11514  002854  802F               	bsf	___flmul@prod^0,0,c
 11515  002856                     l1169:
 11516  002856  90D8               	bcf	status,0,c
 11517  002858  3629               	rlcf	___flmul@grs^0,f,c
 11518  00285A  362A               	rlcf	(___flmul@grs+1)^0,f,c
 11519  00285C  362B               	rlcf	(___flmul@grs+2)^0,f,c
 11520  00285E  362C               	rlcf	(___flmul@grs+3)^0,f,c
 11521  002860  0633               	decf	___flmul@temp^0,f,c
 11522  002862  A0D8               	btfss	status,0,c
 11523  002864  0634               	decf	(___flmul@temp+1)^0,f,c
 11524  002866                     l4559:
 11525  002866  AE31               	btfss	(___flmul@prod+2)^0,7,c
 11526  002868  EF38  F014         	goto	u4921
 11527  00286C  EF3A  F014         	goto	u4920
 11528  002870                     u4921:
 11529  002870  EF1E  F014         	goto	l4553
 11530  002874                     u4920:
 11531  002874  0E00               	movlw	0
 11532  002876  6E2D               	movwf	___flmul@aexp^0,c
 11533  002878  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 11534  00287A  EF41  F014         	goto	u4931
 11535  00287E  EF43  F014         	goto	u4930
 11536  002882                     u4931:
 11537  002882  EF67  F014         	goto	l1171
 11538  002886                     u4930:
 11539  002886  0EFF               	movlw	255
 11540  002888  1429               	andwf	___flmul@grs^0,w,c
 11541  00288A  6E24               	movwf	??___flmul^0,c
 11542  00288C  0EFF               	movlw	255
 11543  00288E  142A               	andwf	(___flmul@grs+1)^0,w,c
 11544  002890  6E25               	movwf	(??___flmul+1)^0,c
 11545  002892  0EFF               	movlw	255
 11546  002894  142B               	andwf	(___flmul@grs+2)^0,w,c
 11547  002896  6E26               	movwf	(??___flmul+2)^0,c
 11548  002898  0E7F               	movlw	127
 11549  00289A  142C               	andwf	(___flmul@grs+3)^0,w,c
 11550  00289C  6E27               	movwf	(??___flmul+3)^0,c
 11551  00289E  5024               	movf	??___flmul^0,w,c
 11552  0028A0  1025               	iorwf	(??___flmul+1)^0,w,c
 11553  0028A2  1026               	iorwf	(??___flmul+2)^0,w,c
 11554  0028A4  1027               	iorwf	(??___flmul+3)^0,w,c
 11555  0028A6  B4D8               	btfsc	status,2,c
 11556  0028A8  EF58  F014         	goto	u4941
 11557  0028AC  EF5A  F014         	goto	u4940
 11558  0028B0                     u4941:
 11559  0028B0  EF5E  F014         	goto	l1172
 11560  0028B4                     u4940:
 11561  0028B4                     l4567:
 11562  0028B4  0E01               	movlw	1
 11563  0028B6  6E2D               	movwf	___flmul@aexp^0,c
 11564  0028B8  EF67  F014         	goto	l1171
 11565  0028BC                     l1172:
 11566  0028BC  A02F               	btfss	___flmul@prod^0,0,c
 11567  0028BE  EF63  F014         	goto	u4951
 11568  0028C2  EF65  F014         	goto	u4950
 11569  0028C6                     u4951:
 11570  0028C6  EF67  F014         	goto	l1171
 11571  0028CA                     u4950:
 11572  0028CA  EF5A  F014         	goto	l4567
 11573  0028CE                     l1171:
 11574  0028CE  502D               	movf	___flmul@aexp^0,w,c
 11575  0028D0  B4D8               	btfsc	status,2,c
 11576  0028D2  EF6D  F014         	goto	u4961
 11577  0028D6  EF6F  F014         	goto	u4960
 11578  0028DA                     u4961:
 11579  0028DA  EF93  F014         	goto	l4579
 11580  0028DE                     u4960:
 11581  0028DE  0E01               	movlw	1
 11582  0028E0  262F               	addwf	___flmul@prod^0,f,c
 11583  0028E2  0E00               	movlw	0
 11584  0028E4  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11585  0028E6  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11586  0028E8  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11587  0028EA  A032               	btfss	(___flmul@prod+3)^0,0,c
 11588  0028EC  EF7A  F014         	goto	u4971
 11589  0028F0  EF7C  F014         	goto	u4970
 11590  0028F4                     u4971:
 11591  0028F4  EF93  F014         	goto	l4579
 11592  0028F8                     u4970:
 11593  0028F8  C02F  F024         	movff	___flmul@prod,??___flmul
 11594  0028FC  C030  F025         	movff	___flmul@prod+1,??___flmul+1
 11595  002900  C031  F026         	movff	___flmul@prod+2,??___flmul+2
 11596  002904  C032  F027         	movff	___flmul@prod+3,??___flmul+3
 11597  002908  3427               	rlcf	(??___flmul+3)^0,w,c
 11598  00290A  3227               	rrcf	(??___flmul+3)^0,f,c
 11599  00290C  3226               	rrcf	(??___flmul+2)^0,f,c
 11600  00290E  3225               	rrcf	(??___flmul+1)^0,f,c
 11601  002910  3224               	rrcf	??___flmul^0,f,c
 11602  002912  C024  F02F         	movff	??___flmul,___flmul@prod
 11603  002916  C025  F030         	movff	??___flmul+1,___flmul@prod+1
 11604  00291A  C026  F031         	movff	??___flmul+2,___flmul@prod+2
 11605  00291E  C027  F032         	movff	??___flmul+3,___flmul@prod+3
 11606  002922  4A33               	infsnz	___flmul@temp^0,f,c
 11607  002924  2A34               	incf	(___flmul@temp+1)^0,f,c
 11608  002926                     l4579:
 11609  002926  BE34               	btfsc	(___flmul@temp+1)^0,7,c
 11610  002928  EF9E  F014         	goto	u4981
 11611  00292C  5034               	movf	(___flmul@temp+1)^0,w,c
 11612  00292E  E108               	bnz	u4980
 11613  002930  2833               	incf	___flmul@temp^0,w,c
 11614  002932  A0D8               	btfss	status,0,c
 11615  002934  EF9E  F014         	goto	u4981
 11616  002938  EFA0  F014         	goto	u4980
 11617  00293C                     u4981:
 11618  00293C  EFAA  F014         	goto	l4583
 11619  002940                     u4980:
 11620  002940  0E00               	movlw	0
 11621  002942  6E2F               	movwf	___flmul@prod^0,c
 11622  002944  0E00               	movlw	0
 11623  002946  6E30               	movwf	(___flmul@prod+1)^0,c
 11624  002948  0E80               	movlw	128
 11625  00294A  6E31               	movwf	(___flmul@prod+2)^0,c
 11626  00294C  0E7F               	movlw	127
 11627  00294E  6E32               	movwf	(___flmul@prod+3)^0,c
 11628  002950  EFD8  F014         	goto	l4595
 11629  002954                     l4583:
 11630  002954  BE34               	btfsc	(___flmul@temp+1)^0,7,c
 11631  002956  EFB7  F014         	goto	u4990
 11632  00295A  5034               	movf	(___flmul@temp+1)^0,w,c
 11633  00295C  E106               	bnz	u4991
 11634  00295E  0433               	decf	___flmul@temp^0,w,c
 11635  002960  B0D8               	btfsc	status,0,c
 11636  002962  EFB5  F014         	goto	u4991
 11637  002966  EFB7  F014         	goto	u4990
 11638  00296A                     u4991:
 11639  00296A  EFC3  F014         	goto	l1179
 11640  00296E                     u4990:
 11641  00296E  0E00               	movlw	0
 11642  002970  6E2F               	movwf	___flmul@prod^0,c
 11643  002972  0E00               	movlw	0
 11644  002974  6E30               	movwf	(___flmul@prod+1)^0,c
 11645  002976  0E00               	movlw	0
 11646  002978  6E31               	movwf	(___flmul@prod+2)^0,c
 11647  00297A  0E00               	movlw	0
 11648  00297C  6E32               	movwf	(___flmul@prod+3)^0,c
 11649  00297E  0E00               	movlw	0
 11650  002980  6E28               	movwf	___flmul@sign^0,c
 11651  002982  EFD8  F014         	goto	l4595
 11652  002986                     l1179:
 11653  002986  C033  F02E         	movff	___flmul@temp,___flmul@bexp
 11654  00298A  0EFF               	movlw	255
 11655  00298C  162F               	andwf	___flmul@prod^0,f,c
 11656  00298E  0EFF               	movlw	255
 11657  002990  1630               	andwf	(___flmul@prod+1)^0,f,c
 11658  002992  0E7F               	movlw	127
 11659  002994  1631               	andwf	(___flmul@prod+2)^0,f,c
 11660  002996  0E00               	movlw	0
 11661  002998  1632               	andwf	(___flmul@prod+3)^0,f,c
 11662  00299A  A02E               	btfss	___flmul@bexp^0,0,c
 11663  00299C  EFD2  F014         	goto	u5001
 11664  0029A0  EFD4  F014         	goto	u5000
 11665  0029A4                     u5001:
 11666  0029A4  EFD5  F014         	goto	l4593
 11667  0029A8                     u5000:
 11668  0029A8  8E31               	bsf	(___flmul@prod+2)^0,7,c
 11669  0029AA                     l4593:
 11670  0029AA  90D8               	bcf	status,0,c
 11671  0029AC  302E               	rrcf	___flmul@bexp^0,w,c
 11672  0029AE  6E32               	movwf	(___flmul@prod+3)^0,c
 11673  0029B0                     l4595:
 11674  0029B0  5028               	movf	___flmul@sign^0,w,c
 11675  0029B2  1232               	iorwf	(___flmul@prod+3)^0,f,c
 11676  0029B4  C02F  F01C         	movff	___flmul@prod,?___flmul
 11677  0029B8  C030  F01D         	movff	___flmul@prod+1,?___flmul+1
 11678  0029BC  C031  F01E         	movff	___flmul@prod+2,?___flmul+2
 11679  0029C0  C032  F01F         	movff	___flmul@prod+3,?___flmul+3
 11680  0029C4                     l1166:
 11681  0029C4  0012               	return		;funcret
 11682  0029C6                     __end_of___flmul:
 11683                           	callstack 0
 11684                           
 11685 ;; *************** function ___flge *****************
 11686 ;; Defined at:
 11687 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
 11688 ;; Parameters:    Size  Location     Type
 11689 ;;  ff1             4   52[COMRAM] unsigned char 
 11690 ;;  ff2             4   56[COMRAM] unsigned char 
 11691 ;; Auto vars:     Size  Location     Type
 11692 ;;		None
 11693 ;; Return value:  Size  Location     Type
 11694 ;;		None               void
 11695 ;; Registers used:
 11696 ;;		wreg, status,2, status,0
 11697 ;; Tracked objects:
 11698 ;;		On entry : 0/0
 11699 ;;		On exit  : 0/0
 11700 ;;		Unchanged: 0/0
 11701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11702 ;;      Params:         8       0       0       0       0       0       0
 11703 ;;      Locals:         0       0       0       0       0       0       0
 11704 ;;      Temps:          4       0       0       0       0       0       0
 11705 ;;      Totals:        12       0       0       0       0       0       0
 11706 ;;Total ram usage:       12 bytes
 11707 ;; Hardware stack levels used:    1
 11708 ;; Hardware stack levels required when called:    1
 11709 ;; This function calls:
 11710 ;;		Nothing
 11711 ;; This function is called by:
 11712 ;;		_secretMenu
 11713 ;;		_efgtoa
 11714 ;; This function uses a non-reentrant model
 11715 ;;
 11716                           
 11717                           	psect	text43
 11718  0049F6                     __ptext43:
 11719                           	callstack 0
 11720  0049F6                     ___flge:
 11721                           	callstack 22
 11722  0049F6  0E00               	movlw	0
 11723  0049F8  1435               	andwf	___flge@ff1^0,w,c
 11724  0049FA  6E3D               	movwf	??___flge^0,c
 11725  0049FC  0E00               	movlw	0
 11726  0049FE  1436               	andwf	(___flge@ff1+1)^0,w,c
 11727  004A00  6E3E               	movwf	(??___flge+1)^0,c
 11728  004A02  0E80               	movlw	128
 11729  004A04  1437               	andwf	(___flge@ff1+2)^0,w,c
 11730  004A06  6E3F               	movwf	(??___flge+2)^0,c
 11731  004A08  0E7F               	movlw	127
 11732  004A0A  1438               	andwf	(___flge@ff1+3)^0,w,c
 11733  004A0C  6E40               	movwf	(??___flge+3)^0,c
 11734  004A0E  503D               	movf	??___flge^0,w,c
 11735  004A10  103E               	iorwf	(??___flge+1)^0,w,c
 11736  004A12  103F               	iorwf	(??___flge+2)^0,w,c
 11737  004A14  1040               	iorwf	(??___flge+3)^0,w,c
 11738  004A16  A4D8               	btfss	status,2,c
 11739  004A18  EF10  F025         	goto	u5161
 11740  004A1C  EF12  F025         	goto	u5160
 11741  004A20                     u5161:
 11742  004A20  EF1A  F025         	goto	l4707
 11743  004A24                     u5160:
 11744  004A24  0E00               	movlw	0
 11745  004A26  6E35               	movwf	___flge@ff1^0,c
 11746  004A28  0E00               	movlw	0
 11747  004A2A  6E36               	movwf	(___flge@ff1+1)^0,c
 11748  004A2C  0E00               	movlw	0
 11749  004A2E  6E37               	movwf	(___flge@ff1+2)^0,c
 11750  004A30  0E00               	movlw	0
 11751  004A32  6E38               	movwf	(___flge@ff1+3)^0,c
 11752  004A34                     l4707:
 11753  004A34  0E00               	movlw	0
 11754  004A36  1439               	andwf	___flge@ff2^0,w,c
 11755  004A38  6E3D               	movwf	??___flge^0,c
 11756  004A3A  0E00               	movlw	0
 11757  004A3C  143A               	andwf	(___flge@ff2+1)^0,w,c
 11758  004A3E  6E3E               	movwf	(??___flge+1)^0,c
 11759  004A40  0E80               	movlw	128
 11760  004A42  143B               	andwf	(___flge@ff2+2)^0,w,c
 11761  004A44  6E3F               	movwf	(??___flge+2)^0,c
 11762  004A46  0E7F               	movlw	127
 11763  004A48  143C               	andwf	(___flge@ff2+3)^0,w,c
 11764  004A4A  6E40               	movwf	(??___flge+3)^0,c
 11765  004A4C  503D               	movf	??___flge^0,w,c
 11766  004A4E  103E               	iorwf	(??___flge+1)^0,w,c
 11767  004A50  103F               	iorwf	(??___flge+2)^0,w,c
 11768  004A52  1040               	iorwf	(??___flge+3)^0,w,c
 11769  004A54  A4D8               	btfss	status,2,c
 11770  004A56  EF2F  F025         	goto	u5171
 11771  004A5A  EF31  F025         	goto	u5170
 11772  004A5E                     u5171:
 11773  004A5E  EF39  F025         	goto	l4711
 11774  004A62                     u5170:
 11775  004A62  0E00               	movlw	0
 11776  004A64  6E39               	movwf	___flge@ff2^0,c
 11777  004A66  0E00               	movlw	0
 11778  004A68  6E3A               	movwf	(___flge@ff2+1)^0,c
 11779  004A6A  0E00               	movlw	0
 11780  004A6C  6E3B               	movwf	(___flge@ff2+2)^0,c
 11781  004A6E  0E00               	movlw	0
 11782  004A70  6E3C               	movwf	(___flge@ff2+3)^0,c
 11783  004A72                     l4711:
 11784  004A72  AE38               	btfss	(___flge@ff1+3)^0,7,c
 11785  004A74  EF3E  F025         	goto	u5181
 11786  004A78  EF40  F025         	goto	u5180
 11787  004A7C                     u5181:
 11788  004A7C  EF49  F025         	goto	l4715
 11789  004A80                     u5180:
 11790  004A80  6C35               	negf	___flge@ff1^0,c
 11791  004A82  1E36               	comf	(___flge@ff1+1)^0,f,c
 11792  004A84  B0D8               	btfsc	status,0,c
 11793  004A86  2A36               	incf	(___flge@ff1+1)^0,f,c
 11794  004A88  1E37               	comf	(___flge@ff1+2)^0,f,c
 11795  004A8A  B0D8               	btfsc	status,0,c
 11796  004A8C  2A37               	incf	(___flge@ff1+2)^0,f,c
 11797  004A8E  0E80               	movlw	128
 11798  004A90  5638               	subfwb	(___flge@ff1+3)^0,f,c
 11799  004A92                     l4715:
 11800  004A92  AE3C               	btfss	(___flge@ff2+3)^0,7,c
 11801  004A94  EF4E  F025         	goto	u5191
 11802  004A98  EF50  F025         	goto	u5190
 11803  004A9C                     u5191:
 11804  004A9C  EF59  F025         	goto	l813
 11805  004AA0                     u5190:
 11806  004AA0  6C39               	negf	___flge@ff2^0,c
 11807  004AA2  1E3A               	comf	(___flge@ff2+1)^0,f,c
 11808  004AA4  B0D8               	btfsc	status,0,c
 11809  004AA6  2A3A               	incf	(___flge@ff2+1)^0,f,c
 11810  004AA8  1E3B               	comf	(___flge@ff2+2)^0,f,c
 11811  004AAA  B0D8               	btfsc	status,0,c
 11812  004AAC  2A3B               	incf	(___flge@ff2+2)^0,f,c
 11813  004AAE  0E80               	movlw	128
 11814  004AB0  563C               	subfwb	(___flge@ff2+3)^0,f,c
 11815  004AB2                     l813:
 11816  004AB2  0E00               	movlw	0
 11817  004AB4  1A35               	xorwf	___flge@ff1^0,f,c
 11818  004AB6  0E00               	movlw	0
 11819  004AB8  1A36               	xorwf	(___flge@ff1+1)^0,f,c
 11820  004ABA  0E00               	movlw	0
 11821  004ABC  1A37               	xorwf	(___flge@ff1+2)^0,f,c
 11822  004ABE  0E80               	movlw	128
 11823  004AC0  1A38               	xorwf	(___flge@ff1+3)^0,f,c
 11824  004AC2  0E00               	movlw	0
 11825  004AC4  1A39               	xorwf	___flge@ff2^0,f,c
 11826  004AC6  0E00               	movlw	0
 11827  004AC8  1A3A               	xorwf	(___flge@ff2+1)^0,f,c
 11828  004ACA  0E00               	movlw	0
 11829  004ACC  1A3B               	xorwf	(___flge@ff2+2)^0,f,c
 11830  004ACE  0E80               	movlw	128
 11831  004AD0  1A3C               	xorwf	(___flge@ff2+3)^0,f,c
 11832  004AD2  5039               	movf	___flge@ff2^0,w,c
 11833  004AD4  5C35               	subwf	___flge@ff1^0,w,c
 11834  004AD6  503A               	movf	(___flge@ff2+1)^0,w,c
 11835  004AD8  5836               	subwfb	(___flge@ff1+1)^0,w,c
 11836  004ADA  503B               	movf	(___flge@ff2+2)^0,w,c
 11837  004ADC  5837               	subwfb	(___flge@ff1+2)^0,w,c
 11838  004ADE  503C               	movf	(___flge@ff2+3)^0,w,c
 11839  004AE0  5838               	subwfb	(___flge@ff1+3)^0,w,c
 11840  004AE2  B0D8               	btfsc	status,0,c
 11841  004AE4  EF76  F025         	goto	u5201
 11842  004AE8  EF78  F025         	goto	u5200
 11843  004AEC                     u5201:
 11844  004AEC  EF7B  F025         	goto	l4721
 11845  004AF0                     u5200:
 11846  004AF0  90D8               	bcf	status,0,c
 11847  004AF2  EF7C  F025         	goto	l818
 11848  004AF6                     l4721:
 11849  004AF6  80D8               	bsf	status,0,c
 11850  004AF8                     l818:
 11851  004AF8  0012               	return		;funcret
 11852  004AFA                     __end_of___flge:
 11853                           	callstack 0
 11854                           
 11855 ;; *************** function ___fleq *****************
 11856 ;; Defined at:
 11857 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fleq.c"
 11858 ;; Parameters:    Size  Location     Type
 11859 ;;  ff1             4    0[COMRAM] unsigned char 
 11860 ;;  ff2             4    4[COMRAM] unsigned char 
 11861 ;; Auto vars:     Size  Location     Type
 11862 ;;		None
 11863 ;; Return value:  Size  Location     Type
 11864 ;;		None               void
 11865 ;; Registers used:
 11866 ;;		wreg, status,2, status,0
 11867 ;; Tracked objects:
 11868 ;;		On entry : 0/0
 11869 ;;		On exit  : 0/0
 11870 ;;		Unchanged: 0/0
 11871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11872 ;;      Params:         8       0       0       0       0       0       0
 11873 ;;      Locals:         0       0       0       0       0       0       0
 11874 ;;      Temps:          4       0       0       0       0       0       0
 11875 ;;      Totals:        12       0       0       0       0       0       0
 11876 ;;Total ram usage:       12 bytes
 11877 ;; Hardware stack levels used:    1
 11878 ;; Hardware stack levels required when called:    1
 11879 ;; This function calls:
 11880 ;;		Nothing
 11881 ;; This function is called by:
 11882 ;;		_efgtoa
 11883 ;; This function uses a non-reentrant model
 11884 ;;
 11885                           
 11886                           	psect	text44
 11887  005224                     __ptext44:
 11888                           	callstack 0
 11889  005224                     ___fleq:
 11890                           	callstack 22
 11891  005224  0E00               	movlw	0
 11892  005226  1401               	andwf	___fleq@ff1^0,w,c
 11893  005228  6E09               	movwf	??___fleq^0,c
 11894  00522A  0E00               	movlw	0
 11895  00522C  1402               	andwf	(___fleq@ff1+1)^0,w,c
 11896  00522E  6E0A               	movwf	(??___fleq+1)^0,c
 11897  005230  0E80               	movlw	128
 11898  005232  1403               	andwf	(___fleq@ff1+2)^0,w,c
 11899  005234  6E0B               	movwf	(??___fleq+2)^0,c
 11900  005236  0E7F               	movlw	127
 11901  005238  1404               	andwf	(___fleq@ff1+3)^0,w,c
 11902  00523A  6E0C               	movwf	(??___fleq+3)^0,c
 11903  00523C  5009               	movf	??___fleq^0,w,c
 11904  00523E  100A               	iorwf	(??___fleq+1)^0,w,c
 11905  005240  100B               	iorwf	(??___fleq+2)^0,w,c
 11906  005242  100C               	iorwf	(??___fleq+3)^0,w,c
 11907  005244  A4D8               	btfss	status,2,c
 11908  005246  EF27  F029         	goto	u5131
 11909  00524A  EF29  F029         	goto	u5130
 11910  00524E                     u5131:
 11911  00524E  EF31  F029         	goto	l4691
 11912  005252                     u5130:
 11913  005252  0E00               	movlw	0
 11914  005254  6E01               	movwf	___fleq@ff1^0,c
 11915  005256  0E00               	movlw	0
 11916  005258  6E02               	movwf	(___fleq@ff1+1)^0,c
 11917  00525A  0E00               	movlw	0
 11918  00525C  6E03               	movwf	(___fleq@ff1+2)^0,c
 11919  00525E  0E00               	movlw	0
 11920  005260  6E04               	movwf	(___fleq@ff1+3)^0,c
 11921  005262                     l4691:
 11922  005262  0E00               	movlw	0
 11923  005264  1405               	andwf	___fleq@ff2^0,w,c
 11924  005266  6E09               	movwf	??___fleq^0,c
 11925  005268  0E00               	movlw	0
 11926  00526A  1406               	andwf	(___fleq@ff2+1)^0,w,c
 11927  00526C  6E0A               	movwf	(??___fleq+1)^0,c
 11928  00526E  0E80               	movlw	128
 11929  005270  1407               	andwf	(___fleq@ff2+2)^0,w,c
 11930  005272  6E0B               	movwf	(??___fleq+2)^0,c
 11931  005274  0E7F               	movlw	127
 11932  005276  1408               	andwf	(___fleq@ff2+3)^0,w,c
 11933  005278  6E0C               	movwf	(??___fleq+3)^0,c
 11934  00527A  5009               	movf	??___fleq^0,w,c
 11935  00527C  100A               	iorwf	(??___fleq+1)^0,w,c
 11936  00527E  100B               	iorwf	(??___fleq+2)^0,w,c
 11937  005280  100C               	iorwf	(??___fleq+3)^0,w,c
 11938  005282  A4D8               	btfss	status,2,c
 11939  005284  EF46  F029         	goto	u5141
 11940  005288  EF48  F029         	goto	u5140
 11941  00528C                     u5141:
 11942  00528C  EF50  F029         	goto	l4695
 11943  005290                     u5140:
 11944  005290  0E00               	movlw	0
 11945  005292  6E05               	movwf	___fleq@ff2^0,c
 11946  005294  0E00               	movlw	0
 11947  005296  6E06               	movwf	(___fleq@ff2+1)^0,c
 11948  005298  0E00               	movlw	0
 11949  00529A  6E07               	movwf	(___fleq@ff2+2)^0,c
 11950  00529C  0E00               	movlw	0
 11951  00529E  6E08               	movwf	(___fleq@ff2+3)^0,c
 11952  0052A0                     l4695:
 11953  0052A0  5005               	movf	___fleq@ff2^0,w,c
 11954  0052A2  1801               	xorwf	___fleq@ff1^0,w,c
 11955  0052A4  E10F               	bnz	u5150
 11956  0052A6  5006               	movf	(___fleq@ff2+1)^0,w,c
 11957  0052A8  1802               	xorwf	(___fleq@ff1+1)^0,w,c
 11958  0052AA  E10C               	bnz	u5150
 11959  0052AC  5007               	movf	(___fleq@ff2+2)^0,w,c
 11960  0052AE  1803               	xorwf	(___fleq@ff1+2)^0,w,c
 11961  0052B0  E109               	bnz	u5150
 11962  0052B2  5008               	movf	(___fleq@ff2+3)^0,w,c
 11963  0052B4  1804               	xorwf	(___fleq@ff1+3)^0,w,c
 11964  0052B6  B4D8               	btfsc	status,2,c
 11965  0052B8  EF60  F029         	goto	u5151
 11966  0052BC  EF62  F029         	goto	u5150
 11967  0052C0                     u5151:
 11968  0052C0  EF65  F029         	goto	l4699
 11969  0052C4                     u5150:
 11970  0052C4  90D8               	bcf	status,0,c
 11971  0052C6  EF66  F029         	goto	l807
 11972  0052CA                     l4699:
 11973  0052CA  80D8               	bsf	status,0,c
 11974  0052CC                     l807:
 11975  0052CC  0012               	return		;funcret
 11976  0052CE                     __end_of___fleq:
 11977                           	callstack 0
 11978                           
 11979 ;; *************** function ___fldiv *****************
 11980 ;; Defined at:
 11981 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
 11982 ;; Parameters:    Size  Location     Type
 11983 ;;  b               4   52[COMRAM] unsigned char 
 11984 ;;  a               4   56[COMRAM] unsigned char 
 11985 ;; Auto vars:     Size  Location     Type
 11986 ;;  grs             4   71[COMRAM] unsigned long 
 11987 ;;  rem             4   64[COMRAM] unsigned long 
 11988 ;;  new_exp         2   69[COMRAM] short 
 11989 ;;  aexp            1   76[COMRAM] unsigned char 
 11990 ;;  bexp            1   75[COMRAM] unsigned char 
 11991 ;;  sign            1   68[COMRAM] unsigned char 
 11992 ;; Return value:  Size  Location     Type
 11993 ;;                  4   52[COMRAM] unsigned char 
 11994 ;; Registers used:
 11995 ;;		wreg, status,2, status,0
 11996 ;; Tracked objects:
 11997 ;;		On entry : 0/0
 11998 ;;		On exit  : 0/0
 11999 ;;		Unchanged: 0/0
 12000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12001 ;;      Params:         8       0       0       0       0       0       0
 12002 ;;      Locals:        13       0       0       0       0       0       0
 12003 ;;      Temps:          4       0       0       0       0       0       0
 12004 ;;      Totals:        25       0       0       0       0       0       0
 12005 ;;Total ram usage:       25 bytes
 12006 ;; Hardware stack levels used:    1
 12007 ;; Hardware stack levels required when called:    1
 12008 ;; This function calls:
 12009 ;;		Nothing
 12010 ;; This function is called by:
 12011 ;;		_scanAdcConversion
 12012 ;;		_efgtoa
 12013 ;; This function uses a non-reentrant model
 12014 ;;
 12015                           
 12016                           	psect	text45
 12017  0029C6                     __ptext45:
 12018                           	callstack 0
 12019  0029C6                     ___fldiv:
 12020                           	callstack 22
 12021  0029C6  5038               	movf	(___fldiv@b+3)^0,w,c
 12022  0029C8  0B80               	andlw	128
 12023  0029CA  6E45               	movwf	___fldiv@sign^0,c
 12024  0029CC  5038               	movf	(___fldiv@b+3)^0,w,c
 12025  0029CE  2438               	addwf	(___fldiv@b+3)^0,w,c
 12026  0029D0  6E4C               	movwf	___fldiv@bexp^0,c
 12027  0029D2  AE37               	btfss	(___fldiv@b+2)^0,7,c
 12028  0029D4  EFEE  F014         	goto	u4591
 12029  0029D8  EFF0  F014         	goto	u4590
 12030  0029DC                     u4591:
 12031  0029DC  EFF1  F014         	goto	l4339
 12032  0029E0                     u4590:
 12033  0029E0  804C               	bsf	___fldiv@bexp^0,0,c
 12034  0029E2                     l4339:
 12035  0029E2  504C               	movf	___fldiv@bexp^0,w,c
 12036  0029E4  B4D8               	btfsc	status,2,c
 12037  0029E6  EFF7  F014         	goto	u4601
 12038  0029EA  EFF9  F014         	goto	u4600
 12039  0029EE                     u4601:
 12040  0029EE  EF0E  F015         	goto	l4349
 12041  0029F2                     u4600:
 12042  0029F2  284C               	incf	___fldiv@bexp^0,w,c
 12043  0029F4  A4D8               	btfss	status,2,c
 12044  0029F6  EFFF  F014         	goto	u4611
 12045  0029FA  EF01  F015         	goto	u4610
 12046  0029FE                     u4611:
 12047  0029FE  EF09  F015         	goto	l4345
 12048  002A02                     u4610:
 12049  002A02  0E00               	movlw	0
 12050  002A04  6E35               	movwf	___fldiv@b^0,c
 12051  002A06  0E00               	movlw	0
 12052  002A08  6E36               	movwf	(___fldiv@b+1)^0,c
 12053  002A0A  0E00               	movlw	0
 12054  002A0C  6E37               	movwf	(___fldiv@b+2)^0,c
 12055  002A0E  0E00               	movlw	0
 12056  002A10  6E38               	movwf	(___fldiv@b+3)^0,c
 12057  002A12                     l4345:
 12058  002A12  8E37               	bsf	(___fldiv@b+2)^0,7,c
 12059  002A14  0E00               	movlw	0
 12060  002A16  6E38               	movwf	(___fldiv@b+3)^0,c
 12061  002A18  EF16  F015         	goto	l4351
 12062  002A1C                     l4349:
 12063  002A1C  0E00               	movlw	0
 12064  002A1E  6E35               	movwf	___fldiv@b^0,c
 12065  002A20  0E00               	movlw	0
 12066  002A22  6E36               	movwf	(___fldiv@b+1)^0,c
 12067  002A24  0E00               	movlw	0
 12068  002A26  6E37               	movwf	(___fldiv@b+2)^0,c
 12069  002A28  0E00               	movlw	0
 12070  002A2A  6E38               	movwf	(___fldiv@b+3)^0,c
 12071  002A2C                     l4351:
 12072  002A2C  503C               	movf	(___fldiv@a+3)^0,w,c
 12073  002A2E  0B80               	andlw	128
 12074  002A30  1A45               	xorwf	___fldiv@sign^0,f,c
 12075  002A32  503C               	movf	(___fldiv@a+3)^0,w,c
 12076  002A34  243C               	addwf	(___fldiv@a+3)^0,w,c
 12077  002A36  6E4D               	movwf	___fldiv@aexp^0,c
 12078  002A38  AE3B               	btfss	(___fldiv@a+2)^0,7,c
 12079  002A3A  EF21  F015         	goto	u4621
 12080  002A3E  EF23  F015         	goto	u4620
 12081  002A42                     u4621:
 12082  002A42  EF24  F015         	goto	l4359
 12083  002A46                     u4620:
 12084  002A46  804D               	bsf	___fldiv@aexp^0,0,c
 12085  002A48                     l4359:
 12086  002A48  504D               	movf	___fldiv@aexp^0,w,c
 12087  002A4A  B4D8               	btfsc	status,2,c
 12088  002A4C  EF2A  F015         	goto	u4631
 12089  002A50  EF2C  F015         	goto	u4630
 12090  002A54                     u4631:
 12091  002A54  EF41  F015         	goto	l4369
 12092  002A58                     u4630:
 12093  002A58  284D               	incf	___fldiv@aexp^0,w,c
 12094  002A5A  A4D8               	btfss	status,2,c
 12095  002A5C  EF32  F015         	goto	u4641
 12096  002A60  EF34  F015         	goto	u4640
 12097  002A64                     u4641:
 12098  002A64  EF3C  F015         	goto	l4365
 12099  002A68                     u4640:
 12100  002A68  0E00               	movlw	0
 12101  002A6A  6E39               	movwf	___fldiv@a^0,c
 12102  002A6C  0E00               	movlw	0
 12103  002A6E  6E3A               	movwf	(___fldiv@a+1)^0,c
 12104  002A70  0E00               	movlw	0
 12105  002A72  6E3B               	movwf	(___fldiv@a+2)^0,c
 12106  002A74  0E00               	movlw	0
 12107  002A76  6E3C               	movwf	(___fldiv@a+3)^0,c
 12108  002A78                     l4365:
 12109  002A78  8E3B               	bsf	(___fldiv@a+2)^0,7,c
 12110  002A7A  0E00               	movlw	0
 12111  002A7C  6E3C               	movwf	(___fldiv@a+3)^0,c
 12112  002A7E  EF49  F015         	goto	l4371
 12113  002A82                     l4369:
 12114  002A82  0E00               	movlw	0
 12115  002A84  6E39               	movwf	___fldiv@a^0,c
 12116  002A86  0E00               	movlw	0
 12117  002A88  6E3A               	movwf	(___fldiv@a+1)^0,c
 12118  002A8A  0E00               	movlw	0
 12119  002A8C  6E3B               	movwf	(___fldiv@a+2)^0,c
 12120  002A8E  0E00               	movlw	0
 12121  002A90  6E3C               	movwf	(___fldiv@a+3)^0,c
 12122  002A92                     l4371:
 12123  002A92  5039               	movf	___fldiv@a^0,w,c
 12124  002A94  103A               	iorwf	(___fldiv@a+1)^0,w,c
 12125  002A96  103B               	iorwf	(___fldiv@a+2)^0,w,c
 12126  002A98  103C               	iorwf	(___fldiv@a+3)^0,w,c
 12127  002A9A  A4D8               	btfss	status,2,c
 12128  002A9C  EF52  F015         	goto	u4651
 12129  002AA0  EF54  F015         	goto	u4650
 12130  002AA4                     u4651:
 12131  002AA4  EF6C  F015         	goto	l4383
 12132  002AA8                     u4650:
 12133  002AA8  0E00               	movlw	0
 12134  002AAA  6E35               	movwf	___fldiv@b^0,c
 12135  002AAC  0E00               	movlw	0
 12136  002AAE  6E36               	movwf	(___fldiv@b+1)^0,c
 12137  002AB0  0E00               	movlw	0
 12138  002AB2  6E37               	movwf	(___fldiv@b+2)^0,c
 12139  002AB4  0E00               	movlw	0
 12140  002AB6  6E38               	movwf	(___fldiv@b+3)^0,c
 12141  002AB8  0E80               	movlw	128
 12142  002ABA  1237               	iorwf	(___fldiv@b+2)^0,f,c
 12143  002ABC  0E7F               	movlw	127
 12144  002ABE  1238               	iorwf	(___fldiv@b+3)^0,f,c
 12145  002AC0                     l4377:
 12146  002AC0  5045               	movf	___fldiv@sign^0,w,c
 12147  002AC2  1238               	iorwf	(___fldiv@b+3)^0,f,c
 12148  002AC4  C035  F035         	movff	___fldiv@b,?___fldiv
 12149  002AC8  C036  F036         	movff	___fldiv@b+1,?___fldiv+1
 12150  002ACC  C037  F037         	movff	___fldiv@b+2,?___fldiv+2
 12151  002AD0  C038  F038         	movff	___fldiv@b+3,?___fldiv+3
 12152  002AD4  EFAF  F016         	goto	l1130
 12153  002AD8                     l4383:
 12154  002AD8  504C               	movf	___fldiv@bexp^0,w,c
 12155  002ADA  A4D8               	btfss	status,2,c
 12156  002ADC  EF72  F015         	goto	u4661
 12157  002AE0  EF74  F015         	goto	u4660
 12158  002AE4                     u4661:
 12159  002AE4  EF7E  F015         	goto	l4391
 12160  002AE8                     u4660:
 12161  002AE8  0E00               	movlw	0
 12162  002AEA  6E35               	movwf	?___fldiv^0,c
 12163  002AEC  0E00               	movlw	0
 12164  002AEE  6E36               	movwf	(?___fldiv+1)^0,c
 12165  002AF0  0E00               	movlw	0
 12166  002AF2  6E37               	movwf	(?___fldiv+2)^0,c
 12167  002AF4  0E00               	movlw	0
 12168  002AF6  6E38               	movwf	(?___fldiv+3)^0,c
 12169  002AF8  EFAF  F016         	goto	l1130
 12170  002AFC                     l4391:
 12171  002AFC  504D               	movf	___fldiv@aexp^0,w,c
 12172  002AFE  C04C  F03D         	movff	___fldiv@bexp,??___fldiv
 12173  002B02  6A3E               	clrf	(??___fldiv+1)^0,c
 12174  002B04  5E3D               	subwf	??___fldiv^0,f,c
 12175  002B06  0E00               	movlw	0
 12176  002B08  5A3E               	subwfb	(??___fldiv+1)^0,f,c
 12177  002B0A  0E7F               	movlw	127
 12178  002B0C  243D               	addwf	??___fldiv^0,w,c
 12179  002B0E  6E46               	movwf	___fldiv@new_exp^0,c
 12180  002B10  0E00               	movlw	0
 12181  002B12  203E               	addwfc	(??___fldiv+1)^0,w,c
 12182  002B14  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 12183  002B16  C035  F041         	movff	___fldiv@b,___fldiv@rem
 12184  002B1A  C036  F042         	movff	___fldiv@b+1,___fldiv@rem+1
 12185  002B1E  C037  F043         	movff	___fldiv@b+2,___fldiv@rem+2
 12186  002B22  C038  F044         	movff	___fldiv@b+3,___fldiv@rem+3
 12187  002B26  0E00               	movlw	0
 12188  002B28  6E35               	movwf	___fldiv@b^0,c
 12189  002B2A  0E00               	movlw	0
 12190  002B2C  6E36               	movwf	(___fldiv@b+1)^0,c
 12191  002B2E  0E00               	movlw	0
 12192  002B30  6E37               	movwf	(___fldiv@b+2)^0,c
 12193  002B32  0E00               	movlw	0
 12194  002B34  6E38               	movwf	(___fldiv@b+3)^0,c
 12195  002B36  0E00               	movlw	0
 12196  002B38  6E48               	movwf	___fldiv@grs^0,c
 12197  002B3A  0E00               	movlw	0
 12198  002B3C  6E49               	movwf	(___fldiv@grs+1)^0,c
 12199  002B3E  0E00               	movlw	0
 12200  002B40  6E4A               	movwf	(___fldiv@grs+2)^0,c
 12201  002B42  0E00               	movlw	0
 12202  002B44  6E4B               	movwf	(___fldiv@grs+3)^0,c
 12203  002B46  0E00               	movlw	0
 12204  002B48  6E4D               	movwf	___fldiv@aexp^0,c
 12205  002B4A  EFDF  F015         	goto	l1132
 12206  002B4E                     l4401:
 12207  002B4E  504D               	movf	___fldiv@aexp^0,w,c
 12208  002B50  B4D8               	btfsc	status,2,c
 12209  002B52  EFAD  F015         	goto	u4671
 12210  002B56  EFAF  F015         	goto	u4670
 12211  002B5A                     u4671:
 12212  002B5A  EFC6  F015         	goto	l4409
 12213  002B5E                     u4670:
 12214  002B5E  90D8               	bcf	status,0,c
 12215  002B60  3641               	rlcf	___fldiv@rem^0,f,c
 12216  002B62  3642               	rlcf	(___fldiv@rem+1)^0,f,c
 12217  002B64  3643               	rlcf	(___fldiv@rem+2)^0,f,c
 12218  002B66  3644               	rlcf	(___fldiv@rem+3)^0,f,c
 12219  002B68  90D8               	bcf	status,0,c
 12220  002B6A  3635               	rlcf	___fldiv@b^0,f,c
 12221  002B6C  3636               	rlcf	(___fldiv@b+1)^0,f,c
 12222  002B6E  3637               	rlcf	(___fldiv@b+2)^0,f,c
 12223  002B70  3638               	rlcf	(___fldiv@b+3)^0,f,c
 12224  002B72  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 12225  002B74  EFBE  F015         	goto	u4681
 12226  002B78  EFC0  F015         	goto	u4680
 12227  002B7C                     u4681:
 12228  002B7C  EFC1  F015         	goto	l1135
 12229  002B80                     u4680:
 12230  002B80  8035               	bsf	___fldiv@b^0,0,c
 12231  002B82                     l1135:
 12232  002B82  90D8               	bcf	status,0,c
 12233  002B84  3648               	rlcf	___fldiv@grs^0,f,c
 12234  002B86  3649               	rlcf	(___fldiv@grs+1)^0,f,c
 12235  002B88  364A               	rlcf	(___fldiv@grs+2)^0,f,c
 12236  002B8A  364B               	rlcf	(___fldiv@grs+3)^0,f,c
 12237  002B8C                     l4409:
 12238  002B8C  5039               	movf	___fldiv@a^0,w,c
 12239  002B8E  5C41               	subwf	___fldiv@rem^0,w,c
 12240  002B90  503A               	movf	(___fldiv@a+1)^0,w,c
 12241  002B92  5842               	subwfb	(___fldiv@rem+1)^0,w,c
 12242  002B94  503B               	movf	(___fldiv@a+2)^0,w,c
 12243  002B96  5843               	subwfb	(___fldiv@rem+2)^0,w,c
 12244  002B98  503C               	movf	(___fldiv@a+3)^0,w,c
 12245  002B9A  5844               	subwfb	(___fldiv@rem+3)^0,w,c
 12246  002B9C  A0D8               	btfss	status,0,c
 12247  002B9E  EFD3  F015         	goto	u4691
 12248  002BA2  EFD5  F015         	goto	u4690
 12249  002BA6                     u4691:
 12250  002BA6  EFDE  F015         	goto	l4415
 12251  002BAA                     u4690:
 12252  002BAA  8C4B               	bsf	(___fldiv@grs+3)^0,6,c
 12253  002BAC  5039               	movf	___fldiv@a^0,w,c
 12254  002BAE  5E41               	subwf	___fldiv@rem^0,f,c
 12255  002BB0  503A               	movf	(___fldiv@a+1)^0,w,c
 12256  002BB2  5A42               	subwfb	(___fldiv@rem+1)^0,f,c
 12257  002BB4  503B               	movf	(___fldiv@a+2)^0,w,c
 12258  002BB6  5A43               	subwfb	(___fldiv@rem+2)^0,f,c
 12259  002BB8  503C               	movf	(___fldiv@a+3)^0,w,c
 12260  002BBA  5A44               	subwfb	(___fldiv@rem+3)^0,f,c
 12261  002BBC                     l4415:
 12262  002BBC  2A4D               	incf	___fldiv@aexp^0,f,c
 12263  002BBE                     l1132:
 12264  002BBE  0E19               	movlw	25
 12265  002BC0  644D               	cpfsgt	___fldiv@aexp^0,c
 12266  002BC2  EFE5  F015         	goto	u4701
 12267  002BC6  EFE7  F015         	goto	u4700
 12268  002BCA                     u4701:
 12269  002BCA  EFA7  F015         	goto	l4401
 12270  002BCE                     u4700:
 12271  002BCE  5041               	movf	___fldiv@rem^0,w,c
 12272  002BD0  1042               	iorwf	(___fldiv@rem+1)^0,w,c
 12273  002BD2  1043               	iorwf	(___fldiv@rem+2)^0,w,c
 12274  002BD4  1044               	iorwf	(___fldiv@rem+3)^0,w,c
 12275  002BD6  B4D8               	btfsc	status,2,c
 12276  002BD8  EFF0  F015         	goto	u4711
 12277  002BDC  EFF2  F015         	goto	u4710
 12278  002BE0                     u4711:
 12279  002BE0  EF0A  F016         	goto	l4427
 12280  002BE4                     u4710:
 12281  002BE4  8048               	bsf	___fldiv@grs^0,0,c
 12282  002BE6  EF0A  F016         	goto	l4427
 12283  002BEA                     l4421:
 12284  002BEA  90D8               	bcf	status,0,c
 12285  002BEC  3635               	rlcf	___fldiv@b^0,f,c
 12286  002BEE  3636               	rlcf	(___fldiv@b+1)^0,f,c
 12287  002BF0  3637               	rlcf	(___fldiv@b+2)^0,f,c
 12288  002BF2  3638               	rlcf	(___fldiv@b+3)^0,f,c
 12289  002BF4  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 12290  002BF6  EFFF  F015         	goto	u4721
 12291  002BFA  EF01  F016         	goto	u4720
 12292  002BFE                     u4721:
 12293  002BFE  EF02  F016         	goto	l1141
 12294  002C02                     u4720:
 12295  002C02  8035               	bsf	___fldiv@b^0,0,c
 12296  002C04                     l1141:
 12297  002C04  90D8               	bcf	status,0,c
 12298  002C06  3648               	rlcf	___fldiv@grs^0,f,c
 12299  002C08  3649               	rlcf	(___fldiv@grs+1)^0,f,c
 12300  002C0A  364A               	rlcf	(___fldiv@grs+2)^0,f,c
 12301  002C0C  364B               	rlcf	(___fldiv@grs+3)^0,f,c
 12302  002C0E  0646               	decf	___fldiv@new_exp^0,f,c
 12303  002C10  A0D8               	btfss	status,0,c
 12304  002C12  0647               	decf	(___fldiv@new_exp+1)^0,f,c
 12305  002C14                     l4427:
 12306  002C14  AE37               	btfss	(___fldiv@b+2)^0,7,c
 12307  002C16  EF0F  F016         	goto	u4731
 12308  002C1A  EF11  F016         	goto	u4730
 12309  002C1E                     u4731:
 12310  002C1E  EFF5  F015         	goto	l4421
 12311  002C22                     u4730:
 12312  002C22  0E00               	movlw	0
 12313  002C24  6E4D               	movwf	___fldiv@aexp^0,c
 12314  002C26  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 12315  002C28  EF18  F016         	goto	u4741
 12316  002C2C  EF1A  F016         	goto	u4740
 12317  002C30                     u4741:
 12318  002C30  EF3E  F016         	goto	l1143
 12319  002C34                     u4740:
 12320  002C34  0EFF               	movlw	255
 12321  002C36  1448               	andwf	___fldiv@grs^0,w,c
 12322  002C38  6E3D               	movwf	??___fldiv^0,c
 12323  002C3A  0EFF               	movlw	255
 12324  002C3C  1449               	andwf	(___fldiv@grs+1)^0,w,c
 12325  002C3E  6E3E               	movwf	(??___fldiv+1)^0,c
 12326  002C40  0EFF               	movlw	255
 12327  002C42  144A               	andwf	(___fldiv@grs+2)^0,w,c
 12328  002C44  6E3F               	movwf	(??___fldiv+2)^0,c
 12329  002C46  0E7F               	movlw	127
 12330  002C48  144B               	andwf	(___fldiv@grs+3)^0,w,c
 12331  002C4A  6E40               	movwf	(??___fldiv+3)^0,c
 12332  002C4C  503D               	movf	??___fldiv^0,w,c
 12333  002C4E  103E               	iorwf	(??___fldiv+1)^0,w,c
 12334  002C50  103F               	iorwf	(??___fldiv+2)^0,w,c
 12335  002C52  1040               	iorwf	(??___fldiv+3)^0,w,c
 12336  002C54  B4D8               	btfsc	status,2,c
 12337  002C56  EF2F  F016         	goto	u4751
 12338  002C5A  EF31  F016         	goto	u4750
 12339  002C5E                     u4751:
 12340  002C5E  EF35  F016         	goto	l1144
 12341  002C62                     u4750:
 12342  002C62                     l4435:
 12343  002C62  0E01               	movlw	1
 12344  002C64  6E4D               	movwf	___fldiv@aexp^0,c
 12345  002C66  EF3E  F016         	goto	l1143
 12346  002C6A                     l1144:
 12347  002C6A  A035               	btfss	___fldiv@b^0,0,c
 12348  002C6C  EF3A  F016         	goto	u4761
 12349  002C70  EF3C  F016         	goto	u4760
 12350  002C74                     u4761:
 12351  002C74  EF3E  F016         	goto	l1143
 12352  002C78                     u4760:
 12353  002C78  EF31  F016         	goto	l4435
 12354  002C7C                     l1143:
 12355  002C7C  504D               	movf	___fldiv@aexp^0,w,c
 12356  002C7E  B4D8               	btfsc	status,2,c
 12357  002C80  EF44  F016         	goto	u4771
 12358  002C84  EF46  F016         	goto	u4770
 12359  002C88                     u4771:
 12360  002C88  EF6A  F016         	goto	l4447
 12361  002C8C                     u4770:
 12362  002C8C  0E01               	movlw	1
 12363  002C8E  2635               	addwf	___fldiv@b^0,f,c
 12364  002C90  0E00               	movlw	0
 12365  002C92  2236               	addwfc	(___fldiv@b+1)^0,f,c
 12366  002C94  2237               	addwfc	(___fldiv@b+2)^0,f,c
 12367  002C96  2238               	addwfc	(___fldiv@b+3)^0,f,c
 12368  002C98  A038               	btfss	(___fldiv@b+3)^0,0,c
 12369  002C9A  EF51  F016         	goto	u4781
 12370  002C9E  EF53  F016         	goto	u4780
 12371  002CA2                     u4781:
 12372  002CA2  EF6A  F016         	goto	l4447
 12373  002CA6                     u4780:
 12374  002CA6  C035  F03D         	movff	___fldiv@b,??___fldiv
 12375  002CAA  C036  F03E         	movff	___fldiv@b+1,??___fldiv+1
 12376  002CAE  C037  F03F         	movff	___fldiv@b+2,??___fldiv+2
 12377  002CB2  C038  F040         	movff	___fldiv@b+3,??___fldiv+3
 12378  002CB6  3440               	rlcf	(??___fldiv+3)^0,w,c
 12379  002CB8  3240               	rrcf	(??___fldiv+3)^0,f,c
 12380  002CBA  323F               	rrcf	(??___fldiv+2)^0,f,c
 12381  002CBC  323E               	rrcf	(??___fldiv+1)^0,f,c
 12382  002CBE  323D               	rrcf	??___fldiv^0,f,c
 12383  002CC0  C03D  F035         	movff	??___fldiv,___fldiv@b
 12384  002CC4  C03E  F036         	movff	??___fldiv+1,___fldiv@b+1
 12385  002CC8  C03F  F037         	movff	??___fldiv+2,___fldiv@b+2
 12386  002CCC  C040  F038         	movff	??___fldiv+3,___fldiv@b+3
 12387  002CD0  4A46               	infsnz	___fldiv@new_exp^0,f,c
 12388  002CD2  2A47               	incf	(___fldiv@new_exp+1)^0,f,c
 12389  002CD4                     l4447:
 12390  002CD4  BE47               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12391  002CD6  EF75  F016         	goto	u4791
 12392  002CDA  5047               	movf	(___fldiv@new_exp+1)^0,w,c
 12393  002CDC  E108               	bnz	u4790
 12394  002CDE  2846               	incf	___fldiv@new_exp^0,w,c
 12395  002CE0  A0D8               	btfss	status,0,c
 12396  002CE2  EF75  F016         	goto	u4791
 12397  002CE6  EF77  F016         	goto	u4790
 12398  002CEA                     u4791:
 12399  002CEA  EF82  F016         	goto	l4451
 12400  002CEE                     u4790:
 12401  002CEE  0E00               	movlw	0
 12402  002CF0  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 12403  002CF2  6846               	setf	___fldiv@new_exp^0,c
 12404  002CF4  0E00               	movlw	0
 12405  002CF6  6E35               	movwf	___fldiv@b^0,c
 12406  002CF8  0E00               	movlw	0
 12407  002CFA  6E36               	movwf	(___fldiv@b+1)^0,c
 12408  002CFC  0E00               	movlw	0
 12409  002CFE  6E37               	movwf	(___fldiv@b+2)^0,c
 12410  002D00  0E00               	movlw	0
 12411  002D02  6E38               	movwf	(___fldiv@b+3)^0,c
 12412  002D04                     l4451:
 12413  002D04  BE47               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12414  002D06  EF8F  F016         	goto	u4800
 12415  002D0A  5047               	movf	(___fldiv@new_exp+1)^0,w,c
 12416  002D0C  E106               	bnz	u4801
 12417  002D0E  0446               	decf	___fldiv@new_exp^0,w,c
 12418  002D10  B0D8               	btfsc	status,0,c
 12419  002D12  EF8D  F016         	goto	u4801
 12420  002D16  EF8F  F016         	goto	u4800
 12421  002D1A                     u4801:
 12422  002D1A  EF9D  F016         	goto	l4455
 12423  002D1E                     u4800:
 12424  002D1E  0E00               	movlw	0
 12425  002D20  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 12426  002D22  0E00               	movlw	0
 12427  002D24  6E46               	movwf	___fldiv@new_exp^0,c
 12428  002D26  0E00               	movlw	0
 12429  002D28  6E35               	movwf	___fldiv@b^0,c
 12430  002D2A  0E00               	movlw	0
 12431  002D2C  6E36               	movwf	(___fldiv@b+1)^0,c
 12432  002D2E  0E00               	movlw	0
 12433  002D30  6E37               	movwf	(___fldiv@b+2)^0,c
 12434  002D32  0E00               	movlw	0
 12435  002D34  6E38               	movwf	(___fldiv@b+3)^0,c
 12436  002D36  0E00               	movlw	0
 12437  002D38  6E45               	movwf	___fldiv@sign^0,c
 12438  002D3A                     l4455:
 12439  002D3A  C046  F04C         	movff	___fldiv@new_exp,___fldiv@bexp
 12440  002D3E  A04C               	btfss	___fldiv@bexp^0,0,c
 12441  002D40  EFA4  F016         	goto	u4811
 12442  002D44  EFA6  F016         	goto	u4810
 12443  002D48                     u4811:
 12444  002D48  EFA9  F016         	goto	l4461
 12445  002D4C                     u4810:
 12446  002D4C  8E37               	bsf	(___fldiv@b+2)^0,7,c
 12447  002D4E  EFAA  F016         	goto	l4463
 12448  002D52                     l4461:
 12449  002D52  9E37               	bcf	(___fldiv@b+2)^0,7,c
 12450  002D54                     l4463:
 12451  002D54  90D8               	bcf	status,0,c
 12452  002D56  304C               	rrcf	___fldiv@bexp^0,w,c
 12453  002D58  6E38               	movwf	(___fldiv@b+3)^0,c
 12454  002D5A  EF60  F015         	goto	l4377
 12455  002D5E                     l1130:
 12456  002D5E  0012               	return		;funcret
 12457  002D60                     __end_of___fldiv:
 12458                           	callstack 0
 12459                           
 12460 ;; *************** function ___awmod *****************
 12461 ;; Defined at:
 12462 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
 12463 ;; Parameters:    Size  Location     Type
 12464 ;;  dividend        2    0[COMRAM] int 
 12465 ;;  divisor         2    2[COMRAM] int 
 12466 ;; Auto vars:     Size  Location     Type
 12467 ;;  sign            1    5[COMRAM] unsigned char 
 12468 ;;  counter         1    4[COMRAM] unsigned char 
 12469 ;; Return value:  Size  Location     Type
 12470 ;;                  2    0[COMRAM] int 
 12471 ;; Registers used:
 12472 ;;		wreg, status,2, status,0
 12473 ;; Tracked objects:
 12474 ;;		On entry : 0/0
 12475 ;;		On exit  : 0/0
 12476 ;;		Unchanged: 0/0
 12477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12478 ;;      Params:         4       0       0       0       0       0       0
 12479 ;;      Locals:         2       0       0       0       0       0       0
 12480 ;;      Temps:          0       0       0       0       0       0       0
 12481 ;;      Totals:         6       0       0       0       0       0       0
 12482 ;;Total ram usage:        6 bytes
 12483 ;; Hardware stack levels used:    1
 12484 ;; Hardware stack levels required when called:    1
 12485 ;; This function calls:
 12486 ;;		Nothing
 12487 ;; This function is called by:
 12488 ;;		_efgtoa
 12489 ;; This function uses a non-reentrant model
 12490 ;;
 12491                           
 12492                           	psect	text46
 12493  005174                     __ptext46:
 12494                           	callstack 0
 12495  005174                     ___awmod:
 12496                           	callstack 22
 12497  005174  0E00               	movlw	0
 12498  005176  6E06               	movwf	___awmod@sign^0,c
 12499  005178  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
 12500  00517A  EFC3  F028         	goto	u5070
 12501  00517E  EFC1  F028         	goto	u5071
 12502  005182                     u5071:
 12503  005182  EFC9  F028         	goto	l4659
 12504  005186                     u5070:
 12505  005186  6C01               	negf	___awmod@dividend^0,c
 12506  005188  1E02               	comf	(___awmod@dividend+1)^0,f,c
 12507  00518A  B0D8               	btfsc	status,0,c
 12508  00518C  2A02               	incf	(___awmod@dividend+1)^0,f,c
 12509  00518E  0E01               	movlw	1
 12510  005190  6E06               	movwf	___awmod@sign^0,c
 12511  005192                     l4659:
 12512  005192  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
 12513  005194  EFD0  F028         	goto	u5080
 12514  005198  EFCE  F028         	goto	u5081
 12515  00519C                     u5081:
 12516  00519C  EFD4  F028         	goto	l4663
 12517  0051A0                     u5080:
 12518  0051A0  6C03               	negf	___awmod@divisor^0,c
 12519  0051A2  1E04               	comf	(___awmod@divisor+1)^0,f,c
 12520  0051A4  B0D8               	btfsc	status,0,c
 12521  0051A6  2A04               	incf	(___awmod@divisor+1)^0,f,c
 12522  0051A8                     l4663:
 12523  0051A8  5003               	movf	___awmod@divisor^0,w,c
 12524  0051AA  1004               	iorwf	(___awmod@divisor+1)^0,w,c
 12525  0051AC  B4D8               	btfsc	status,2,c
 12526  0051AE  EFDB  F028         	goto	u5091
 12527  0051B2  EFDD  F028         	goto	u5090
 12528  0051B6                     u5091:
 12529  0051B6  EF01  F029         	goto	l4679
 12530  0051BA                     u5090:
 12531  0051BA  0E01               	movlw	1
 12532  0051BC  6E05               	movwf	___awmod@counter^0,c
 12533  0051BE  EFE5  F028         	goto	l4669
 12534  0051C2                     l4667:
 12535  0051C2  90D8               	bcf	status,0,c
 12536  0051C4  3603               	rlcf	___awmod@divisor^0,f,c
 12537  0051C6  3604               	rlcf	(___awmod@divisor+1)^0,f,c
 12538  0051C8  2A05               	incf	___awmod@counter^0,f,c
 12539  0051CA                     l4669:
 12540  0051CA  AE04               	btfss	(___awmod@divisor+1)^0,7,c
 12541  0051CC  EFEA  F028         	goto	u5101
 12542  0051D0  EFEC  F028         	goto	u5100
 12543  0051D4                     u5101:
 12544  0051D4  EFE1  F028         	goto	l4667
 12545  0051D8                     u5100:
 12546  0051D8                     l4671:
 12547  0051D8  5003               	movf	___awmod@divisor^0,w,c
 12548  0051DA  5C01               	subwf	___awmod@dividend^0,w,c
 12549  0051DC  5004               	movf	(___awmod@divisor+1)^0,w,c
 12550  0051DE  5802               	subwfb	(___awmod@dividend+1)^0,w,c
 12551  0051E0  A0D8               	btfss	status,0,c
 12552  0051E2  EFF5  F028         	goto	u5111
 12553  0051E6  EFF7  F028         	goto	u5110
 12554  0051EA                     u5111:
 12555  0051EA  EFFB  F028         	goto	l4675
 12556  0051EE                     u5110:
 12557  0051EE  5003               	movf	___awmod@divisor^0,w,c
 12558  0051F0  5E01               	subwf	___awmod@dividend^0,f,c
 12559  0051F2  5004               	movf	(___awmod@divisor+1)^0,w,c
 12560  0051F4  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
 12561  0051F6                     l4675:
 12562  0051F6  90D8               	bcf	status,0,c
 12563  0051F8  3204               	rrcf	(___awmod@divisor+1)^0,f,c
 12564  0051FA  3203               	rrcf	___awmod@divisor^0,f,c
 12565  0051FC  2E05               	decfsz	___awmod@counter^0,f,c
 12566  0051FE  EFEC  F028         	goto	l4671
 12567  005202                     l4679:
 12568  005202  5006               	movf	___awmod@sign^0,w,c
 12569  005204  B4D8               	btfsc	status,2,c
 12570  005206  EF07  F029         	goto	u5121
 12571  00520A  EF09  F029         	goto	u5120
 12572  00520E                     u5121:
 12573  00520E  EF0D  F029         	goto	l4683
 12574  005212                     u5120:
 12575  005212  6C01               	negf	___awmod@dividend^0,c
 12576  005214  1E02               	comf	(___awmod@dividend+1)^0,f,c
 12577  005216  B0D8               	btfsc	status,0,c
 12578  005218  2A02               	incf	(___awmod@dividend+1)^0,f,c
 12579  00521A                     l4683:
 12580  00521A  C001  F001         	movff	___awmod@dividend,?___awmod
 12581  00521E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
 12582  005222  0012               	return		;funcret
 12583  005224                     __end_of___awmod:
 12584                           	callstack 0
 12585                           
 12586 ;; *************** function ___awdiv *****************
 12587 ;; Defined at:
 12588 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
 12589 ;; Parameters:    Size  Location     Type
 12590 ;;  dividend        2    0[COMRAM] int 
 12591 ;;  divisor         2    2[COMRAM] int 
 12592 ;; Auto vars:     Size  Location     Type
 12593 ;;  quotient        2    6[COMRAM] int 
 12594 ;;  sign            1    5[COMRAM] unsigned char 
 12595 ;;  counter         1    4[COMRAM] unsigned char 
 12596 ;; Return value:  Size  Location     Type
 12597 ;;                  2    0[COMRAM] int 
 12598 ;; Registers used:
 12599 ;;		wreg, status,2, status,0
 12600 ;; Tracked objects:
 12601 ;;		On entry : 0/0
 12602 ;;		On exit  : 0/0
 12603 ;;		Unchanged: 0/0
 12604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12605 ;;      Params:         4       0       0       0       0       0       0
 12606 ;;      Locals:         4       0       0       0       0       0       0
 12607 ;;      Temps:          0       0       0       0       0       0       0
 12608 ;;      Totals:         8       0       0       0       0       0       0
 12609 ;;Total ram usage:        8 bytes
 12610 ;; Hardware stack levels used:    1
 12611 ;; Hardware stack levels required when called:    1
 12612 ;; This function calls:
 12613 ;;		Nothing
 12614 ;; This function is called by:
 12615 ;;		_efgtoa
 12616 ;; This function uses a non-reentrant model
 12617 ;;
 12618                           
 12619                           	psect	text47
 12620  004FFE                     __ptext47:
 12621                           	callstack 0
 12622  004FFE                     ___awdiv:
 12623                           	callstack 22
 12624  004FFE  0E00               	movlw	0
 12625  005000  6E06               	movwf	___awdiv@sign^0,c
 12626  005002  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 12627  005004  EF08  F028         	goto	u5010
 12628  005008  EF06  F028         	goto	u5011
 12629  00500C                     u5011:
 12630  00500C  EF0E  F028         	goto	l4615
 12631  005010                     u5010:
 12632  005010  6C03               	negf	___awdiv@divisor^0,c
 12633  005012  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 12634  005014  B0D8               	btfsc	status,0,c
 12635  005016  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 12636  005018  0E01               	movlw	1
 12637  00501A  6E06               	movwf	___awdiv@sign^0,c
 12638  00501C                     l4615:
 12639  00501C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 12640  00501E  EF15  F028         	goto	u5020
 12641  005022  EF13  F028         	goto	u5021
 12642  005026                     u5021:
 12643  005026  EF1B  F028         	goto	l4621
 12644  00502A                     u5020:
 12645  00502A  6C01               	negf	___awdiv@dividend^0,c
 12646  00502C  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 12647  00502E  B0D8               	btfsc	status,0,c
 12648  005030  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 12649  005032  0E01               	movlw	1
 12650  005034  1A06               	xorwf	___awdiv@sign^0,f,c
 12651  005036                     l4621:
 12652  005036  0E00               	movlw	0
 12653  005038  6E08               	movwf	(___awdiv@quotient+1)^0,c
 12654  00503A  0E00               	movlw	0
 12655  00503C  6E07               	movwf	___awdiv@quotient^0,c
 12656  00503E  5003               	movf	___awdiv@divisor^0,w,c
 12657  005040  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 12658  005042  B4D8               	btfsc	status,2,c
 12659  005044  EF26  F028         	goto	u5031
 12660  005048  EF28  F028         	goto	u5030
 12661  00504C                     u5031:
 12662  00504C  EF50  F028         	goto	l4643
 12663  005050                     u5030:
 12664  005050  0E01               	movlw	1
 12665  005052  6E05               	movwf	___awdiv@counter^0,c
 12666  005054  EF30  F028         	goto	l4629
 12667  005058                     l4627:
 12668  005058  90D8               	bcf	status,0,c
 12669  00505A  3603               	rlcf	___awdiv@divisor^0,f,c
 12670  00505C  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 12671  00505E  2A05               	incf	___awdiv@counter^0,f,c
 12672  005060                     l4629:
 12673  005060  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 12674  005062  EF35  F028         	goto	u5041
 12675  005066  EF37  F028         	goto	u5040
 12676  00506A                     u5041:
 12677  00506A  EF2C  F028         	goto	l4627
 12678  00506E                     u5040:
 12679  00506E                     l4631:
 12680  00506E  90D8               	bcf	status,0,c
 12681  005070  3607               	rlcf	___awdiv@quotient^0,f,c
 12682  005072  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 12683  005074  5003               	movf	___awdiv@divisor^0,w,c
 12684  005076  5C01               	subwf	___awdiv@dividend^0,w,c
 12685  005078  5004               	movf	(___awdiv@divisor+1)^0,w,c
 12686  00507A  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 12687  00507C  A0D8               	btfss	status,0,c
 12688  00507E  EF43  F028         	goto	u5051
 12689  005082  EF45  F028         	goto	u5050
 12690  005086                     u5051:
 12691  005086  EF4A  F028         	goto	l4639
 12692  00508A                     u5050:
 12693  00508A  5003               	movf	___awdiv@divisor^0,w,c
 12694  00508C  5E01               	subwf	___awdiv@dividend^0,f,c
 12695  00508E  5004               	movf	(___awdiv@divisor+1)^0,w,c
 12696  005090  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 12697  005092  8007               	bsf	___awdiv@quotient^0,0,c
 12698  005094                     l4639:
 12699  005094  90D8               	bcf	status,0,c
 12700  005096  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 12701  005098  3203               	rrcf	___awdiv@divisor^0,f,c
 12702  00509A  2E05               	decfsz	___awdiv@counter^0,f,c
 12703  00509C  EF37  F028         	goto	l4631
 12704  0050A0                     l4643:
 12705  0050A0  5006               	movf	___awdiv@sign^0,w,c
 12706  0050A2  B4D8               	btfsc	status,2,c
 12707  0050A4  EF56  F028         	goto	u5061
 12708  0050A8  EF58  F028         	goto	u5060
 12709  0050AC                     u5061:
 12710  0050AC  EF5C  F028         	goto	l4647
 12711  0050B0                     u5060:
 12712  0050B0  6C07               	negf	___awdiv@quotient^0,c
 12713  0050B2  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 12714  0050B4  B0D8               	btfsc	status,0,c
 12715  0050B6  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 12716  0050B8                     l4647:
 12717  0050B8  C007  F001         	movff	___awdiv@quotient,?___awdiv
 12718  0050BC  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 12719  0050C0  0012               	return		;funcret
 12720  0050C2                     __end_of___awdiv:
 12721                           	callstack 0
 12722                           
 12723 ;; *************** function _dtoa *****************
 12724 ;; Defined at:
 12725 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 12726 ;; Parameters:    Size  Location     Type
 12727 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
 12728 ;;		 -> sprintf@f(6), 
 12729 ;;  d               8   29[COMRAM] long long 
 12730 ;; Auto vars:     Size  Location     Type
 12731 ;;  n               8   53[COMRAM] long long 
 12732 ;;  i               2   61[COMRAM] int 
 12733 ;;  s               2   51[COMRAM] int 
 12734 ;;  w               2   49[COMRAM] int 
 12735 ;;  p               2   47[COMRAM] int 
 12736 ;; Return value:  Size  Location     Type
 12737 ;;                  2   27[COMRAM] int 
 12738 ;; Registers used:
 12739 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12740 ;; Tracked objects:
 12741 ;;		On entry : 0/0
 12742 ;;		On exit  : 0/0
 12743 ;;		Unchanged: 0/0
 12744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12745 ;;      Params:        10       0       0       0       0       0       0
 12746 ;;      Locals:        18       0       0       0       0       0       0
 12747 ;;      Temps:          8       0       0       0       0       0       0
 12748 ;;      Totals:        36       0       0       0       0       0       0
 12749 ;;Total ram usage:       36 bytes
 12750 ;; Hardware stack levels used:    1
 12751 ;; Hardware stack levels required when called:    5
 12752 ;; This function calls:
 12753 ;;		___aodiv
 12754 ;;		___aomod
 12755 ;;		_abs
 12756 ;;		_pad
 12757 ;; This function is called by:
 12758 ;;		_vfpfcnvrt
 12759 ;; This function uses a non-reentrant model
 12760 ;;
 12761                           
 12762                           	psect	text48
 12763  003046                     __ptext48:
 12764                           	callstack 0
 12765  003046                     _dtoa:
 12766                           	callstack 19
 12767  003046                     
 12768                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
 12769  003046  C01E  F036         	movff	dtoa@d,dtoa@n
 12770  00304A  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
 12771  00304E  C020  F038         	movff	dtoa@d+2,dtoa@n+2
 12772  003052  C021  F039         	movff	dtoa@d+3,dtoa@n+3
 12773  003056  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
 12774  00305A  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
 12775  00305E  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
 12776  003062  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
 12777  003066                     
 12778                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
 12779  003066  BE3D               	btfsc	(dtoa@n+7)^0,7,c
 12780  003068  EF38  F018         	goto	u5601
 12781  00306C  EF3B  F018         	goto	u5600
 12782  003070                     u5601:
 12783  003070  0E01               	movlw	1
 12784  003072  EF3C  F018         	goto	u5610
 12785  003076                     u5600:
 12786  003076  0E00               	movlw	0
 12787  003078                     u5610:
 12788  003078  6E34               	movwf	dtoa@s^0,c
 12789  00307A  6A35               	clrf	(dtoa@s+1)^0,c
 12790                           
 12791                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
 12792  00307C  5034               	movf	dtoa@s^0,w,c
 12793  00307E  1035               	iorwf	(dtoa@s+1)^0,w,c
 12794  003080  B4D8               	btfsc	status,2,c
 12795  003082  EF45  F018         	goto	u5621
 12796  003086  EF47  F018         	goto	u5620
 12797  00308A                     u5621:
 12798  00308A  EF57  F018         	goto	l4889
 12799  00308E                     u5620:
 12800  00308E                     
 12801                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
 12802  00308E  1E3D               	comf	(dtoa@n+7)^0,f,c
 12803  003090  1E3C               	comf	(dtoa@n+6)^0,f,c
 12804  003092  1E3B               	comf	(dtoa@n+5)^0,f,c
 12805  003094  1E3A               	comf	(dtoa@n+4)^0,f,c
 12806  003096  1E39               	comf	(dtoa@n+3)^0,f,c
 12807  003098  1E38               	comf	(dtoa@n+2)^0,f,c
 12808  00309A  1E37               	comf	(dtoa@n+1)^0,f,c
 12809  00309C  6C36               	negf	dtoa@n^0,c
 12810  00309E  0E00               	movlw	0
 12811  0030A0  2237               	addwfc	(dtoa@n+1)^0,f,c
 12812  0030A2  2238               	addwfc	(dtoa@n+2)^0,f,c
 12813  0030A4  2239               	addwfc	(dtoa@n+3)^0,f,c
 12814  0030A6  223A               	addwfc	(dtoa@n+4)^0,f,c
 12815  0030A8  223B               	addwfc	(dtoa@n+5)^0,f,c
 12816  0030AA  223C               	addwfc	(dtoa@n+6)^0,f,c
 12817  0030AC  223D               	addwfc	(dtoa@n+7)^0,f,c
 12818  0030AE                     l4889:
 12819                           
 12820                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
 12821  0030AE  0100               	movlb	0	; () banked
 12822  0030B0  BFF7               	btfsc	(_prec+1)& (0+255),7,b
 12823  0030B2  EF5D  F018         	goto	u5631
 12824  0030B6  EF5F  F018         	goto	u5630
 12825  0030BA                     u5631:
 12826  0030BA  EF60  F018         	goto	l4893
 12827  0030BE                     u5630:
 12828  0030BE                     
 12829                           ; BSR set to: 0
 12830                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
 12831  0030BE  93F8               	bcf	_flags& (0+255),1,b
 12832  0030C0                     l4893:
 12833                           
 12834                           ; BSR set to: 0
 12835                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
 12836  0030C0  BFF7               	btfsc	(_prec+1)& (0+255),7,b
 12837  0030C2  EF6D  F018         	goto	u5640
 12838  0030C6  51F7               	movf	(_prec+1)& (0+255),w,b
 12839  0030C8  E106               	bnz	u5641
 12840  0030CA  05F6               	decf	_prec& (0+255),w,b
 12841  0030CC  B0D8               	btfsc	status,0,c
 12842  0030CE  EF6B  F018         	goto	u5641
 12843  0030D2  EF6D  F018         	goto	u5640
 12844  0030D6                     u5641:
 12845  0030D6  EF73  F018         	goto	l1285
 12846  0030DA                     u5640:
 12847  0030DA                     
 12848                           ; BSR set to: 0
 12849  0030DA  0E00               	movlw	0
 12850  0030DC  6E31               	movwf	(dtoa@p+1)^0,c
 12851  0030DE  0E01               	movlw	1
 12852  0030E0  6E30               	movwf	dtoa@p^0,c
 12853  0030E2  EF77  F018         	goto	l1287
 12854  0030E6                     l1285:
 12855                           
 12856                           ; BSR set to: 0
 12857  0030E6  C0F6  F030         	movff	_prec,dtoa@p
 12858  0030EA  C0F7  F031         	movff	_prec+1,dtoa@p+1
 12859  0030EE                     l1287:
 12860                           
 12861                           ; BSR set to: 0
 12862                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
 12863  0030EE  C1D1  F032         	movff	_width,dtoa@w
 12864  0030F2  C1D2  F033         	movff	_width+1,dtoa@w+1
 12865  0030F6                     
 12866                           ; BSR set to: 0
 12867                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
 12868  0030F6  5034               	movf	dtoa@s^0,w,c
 12869  0030F8  1035               	iorwf	(dtoa@s+1)^0,w,c
 12870  0030FA  A4D8               	btfss	status,2,c
 12871  0030FC  EF82  F018         	goto	u5651
 12872  003100  EF84  F018         	goto	u5650
 12873  003104                     u5651:
 12874  003104  EF8B  F018         	goto	l4901
 12875  003108                     u5650:
 12876  003108                     
 12877                           ; BSR set to: 0
 12878  003108  A5F8               	btfss	_flags& (0+255),2,b
 12879  00310A  EF89  F018         	goto	u5661
 12880  00310E  EF8B  F018         	goto	u5660
 12881  003112                     u5661:
 12882  003112  EF8E  F018         	goto	l4903
 12883  003116                     u5660:
 12884  003116                     l4901:
 12885                           
 12886                           ; BSR set to: 0
 12887                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
 12888  003116  0632               	decf	dtoa@w^0,f,c
 12889  003118  A0D8               	btfss	status,0,c
 12890  00311A  0633               	decf	(dtoa@w+1)^0,f,c
 12891  00311C                     l4903:
 12892                           
 12893                           ; BSR set to: 0
 12894                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
 12895  00311C  0E00               	movlw	0
 12896  00311E  6E3F               	movwf	(dtoa@i+1)^0,c
 12897  003120  0E4F               	movlw	79
 12898  003122  6E3E               	movwf	dtoa@i^0,c
 12899  003124                     
 12900                           ; BSR set to: 0
 12901                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
 12902  003124  0E00               	movlw	0
 12903  003126  0102               	movlb	2	; () banked
 12904  003128  6F8F               	movwf	(_dbuf+79)& (0+255),b
 12905                           
 12906                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12907  00312A  EF13  F019         	goto	l4917
 12908  00312E                     l4907:
 12909                           
 12910                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
 12911  00312E  063E               	decf	dtoa@i^0,f,c
 12912  003130  A0D8               	btfss	status,0,c
 12913  003132  063F               	decf	(dtoa@i+1)^0,f,c
 12914  003134                     
 12915                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
 12916  003134  0E40               	movlw	low _dbuf
 12917  003136  243E               	addwf	dtoa@i^0,w,c
 12918  003138  6ED9               	movwf	fsr2l,c
 12919  00313A  0E02               	movlw	high _dbuf
 12920  00313C  203F               	addwfc	(dtoa@i+1)^0,w,c
 12921  00313E  6EDA               	movwf	fsr2h,c
 12922  003140  C036  F001         	movff	dtoa@n,___aomod@dividend
 12923  003144  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
 12924  003148  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
 12925  00314C  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
 12926  003150  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
 12927  003154  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
 12928  003158  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
 12929  00315C  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
 12930  003160  0E0A               	movlw	10
 12931  003162  6E09               	movwf	___aomod@divisor^0,c
 12932  003164  0E00               	movlw	0
 12933  003166  6E0A               	movwf	(___aomod@divisor+1)^0,c
 12934  003168  0E00               	movlw	0
 12935  00316A  6E0B               	movwf	(___aomod@divisor+2)^0,c
 12936  00316C  0E00               	movlw	0
 12937  00316E  6E0C               	movwf	(___aomod@divisor+3)^0,c
 12938  003170  0E00               	movlw	0
 12939  003172  6E0D               	movwf	(___aomod@divisor+4)^0,c
 12940  003174  0E00               	movlw	0
 12941  003176  6E0E               	movwf	(___aomod@divisor+5)^0,c
 12942  003178  0E00               	movlw	0
 12943  00317A  6E0F               	movwf	(___aomod@divisor+6)^0,c
 12944  00317C  0E00               	movlw	0
 12945  00317E  6E10               	movwf	(___aomod@divisor+7)^0,c
 12946  003180  EC01  F021         	call	___aomod	;wreg free
 12947  003184  C001  F026         	movff	?___aomod,??_dtoa
 12948  003188  C002  F027         	movff	?___aomod+1,??_dtoa+1
 12949  00318C  C003  F028         	movff	?___aomod+2,??_dtoa+2
 12950  003190  C004  F029         	movff	?___aomod+3,??_dtoa+3
 12951  003194  C005  F02A         	movff	?___aomod+4,??_dtoa+4
 12952  003198  C006  F02B         	movff	?___aomod+5,??_dtoa+5
 12953  00319C  C007  F02C         	movff	?___aomod+6,??_dtoa+6
 12954  0031A0  C008  F02D         	movff	?___aomod+7,??_dtoa+7
 12955  0031A4  C026  F013         	movff	??_dtoa,abs@a
 12956  0031A8  C028  F014         	movff	??_dtoa+2,abs@a+1
 12957  0031AC  EC02  F02D         	call	_abs	;wreg free
 12958  0031B0  5013               	movf	?_abs^0,w,c
 12959  0031B2  0F30               	addlw	48
 12960  0031B4  6EDF               	movwf	indf2,c
 12961  0031B6                     
 12962                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
 12963  0031B6  0630               	decf	dtoa@p^0,f,c
 12964  0031B8  A0D8               	btfss	status,0,c
 12965  0031BA  0631               	decf	(dtoa@p+1)^0,f,c
 12966  0031BC                     
 12967                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
 12968  0031BC  0632               	decf	dtoa@w^0,f,c
 12969  0031BE  A0D8               	btfss	status,0,c
 12970  0031C0  0633               	decf	(dtoa@w+1)^0,f,c
 12971  0031C2                     
 12972                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
 12973  0031C2  C036  F001         	movff	dtoa@n,___aodiv@dividend
 12974  0031C6  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
 12975  0031CA  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
 12976  0031CE  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
 12977  0031D2  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
 12978  0031D6  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
 12979  0031DA  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
 12980  0031DE  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
 12981  0031E2  0E0A               	movlw	10
 12982  0031E4  6E09               	movwf	___aodiv@divisor^0,c
 12983  0031E6  0E00               	movlw	0
 12984  0031E8  6E0A               	movwf	(___aodiv@divisor+1)^0,c
 12985  0031EA  0E00               	movlw	0
 12986  0031EC  6E0B               	movwf	(___aodiv@divisor+2)^0,c
 12987  0031EE  0E00               	movlw	0
 12988  0031F0  6E0C               	movwf	(___aodiv@divisor+3)^0,c
 12989  0031F2  0E00               	movlw	0
 12990  0031F4  6E0D               	movwf	(___aodiv@divisor+4)^0,c
 12991  0031F6  0E00               	movlw	0
 12992  0031F8  6E0E               	movwf	(___aodiv@divisor+5)^0,c
 12993  0031FA  0E00               	movlw	0
 12994  0031FC  6E0F               	movwf	(___aodiv@divisor+6)^0,c
 12995  0031FE  0E00               	movlw	0
 12996  003200  6E10               	movwf	(___aodiv@divisor+7)^0,c
 12997  003202  EC3D  F020         	call	___aodiv	;wreg free
 12998  003206  C001  F036         	movff	?___aodiv,dtoa@n
 12999  00320A  C002  F037         	movff	?___aodiv+1,dtoa@n+1
 13000  00320E  C003  F038         	movff	?___aodiv+2,dtoa@n+2
 13001  003212  C004  F039         	movff	?___aodiv+3,dtoa@n+3
 13002  003216  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
 13003  00321A  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
 13004  00321E  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
 13005  003222  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
 13006  003226                     l4917:
 13007                           
 13008                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13009  003226  BE3F               	btfsc	(dtoa@i+1)^0,7,c
 13010  003228  EF1E  F019         	goto	u5671
 13011  00322C  503F               	movf	(dtoa@i+1)^0,w,c
 13012  00322E  E108               	bnz	u5670
 13013  003230  043E               	decf	dtoa@i^0,w,c
 13014  003232  A0D8               	btfss	status,0,c
 13015  003234  EF1E  F019         	goto	u5671
 13016  003238  EF20  F019         	goto	u5670
 13017  00323C                     u5671:
 13018  00323C  EF51  F019         	goto	l4927
 13019  003240                     u5670:
 13020  003240  5036               	movf	dtoa@n^0,w,c
 13021  003242  1037               	iorwf	(dtoa@n+1)^0,w,c
 13022  003244  1038               	iorwf	(dtoa@n+2)^0,w,c
 13023  003246  1039               	iorwf	(dtoa@n+3)^0,w,c
 13024  003248  103A               	iorwf	(dtoa@n+4)^0,w,c
 13025  00324A  103B               	iorwf	(dtoa@n+5)^0,w,c
 13026  00324C  103C               	iorwf	(dtoa@n+6)^0,w,c
 13027  00324E  103D               	iorwf	(dtoa@n+7)^0,w,c
 13028  003250  A4D8               	btfss	status,2,c
 13029  003252  EF2D  F019         	goto	u5681
 13030  003256  EF2F  F019         	goto	u5680
 13031  00325A                     u5681:
 13032  00325A  EF97  F018         	goto	l4907
 13033  00325E                     u5680:
 13034  00325E  BE31               	btfsc	(dtoa@p+1)^0,7,c
 13035  003260  EF3C  F019         	goto	u5690
 13036  003264  5031               	movf	(dtoa@p+1)^0,w,c
 13037  003266  E106               	bnz	u5691
 13038  003268  0430               	decf	dtoa@p^0,w,c
 13039  00326A  B0D8               	btfsc	status,0,c
 13040  00326C  EF3A  F019         	goto	u5691
 13041  003270  EF3C  F019         	goto	u5690
 13042  003274                     u5691:
 13043  003274  EF97  F018         	goto	l4907
 13044  003278                     u5690:
 13045  003278  BE33               	btfsc	(dtoa@w+1)^0,7,c
 13046  00327A  EF47  F019         	goto	u5701
 13047  00327E  5033               	movf	(dtoa@w+1)^0,w,c
 13048  003280  E108               	bnz	u5700
 13049  003282  0432               	decf	dtoa@w^0,w,c
 13050  003284  A0D8               	btfss	status,0,c
 13051  003286  EF47  F019         	goto	u5701
 13052  00328A  EF49  F019         	goto	u5700
 13053  00328E                     u5701:
 13054  00328E  EF51  F019         	goto	l4927
 13055  003292                     u5700:
 13056  003292  0100               	movlb	0	; () banked
 13057  003294  B3F8               	btfsc	_flags& (0+255),1,b
 13058  003296  EF4F  F019         	goto	u5711
 13059  00329A  EF51  F019         	goto	u5710
 13060  00329E                     u5711:
 13061  00329E  EF97  F018         	goto	l4907
 13062  0032A2                     u5710:
 13063  0032A2                     l4927:
 13064                           
 13065                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
 13066  0032A2  5034               	movf	dtoa@s^0,w,c
 13067  0032A4  1035               	iorwf	(dtoa@s+1)^0,w,c
 13068  0032A6  A4D8               	btfss	status,2,c
 13069  0032A8  EF58  F019         	goto	u5721
 13070  0032AC  EF5A  F019         	goto	u5720
 13071  0032B0                     u5721:
 13072  0032B0  EF62  F019         	goto	l4931
 13073  0032B4                     u5720:
 13074  0032B4  0100               	movlb	0	; () banked
 13075  0032B6  A5F8               	btfss	_flags& (0+255),2,b
 13076  0032B8  EF60  F019         	goto	u5731
 13077  0032BC  EF62  F019         	goto	u5730
 13078  0032C0                     u5731:
 13079  0032C0  EF80  F019         	goto	l4941
 13080  0032C4                     u5730:
 13081  0032C4                     l4931:
 13082                           
 13083                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
 13084  0032C4  063E               	decf	dtoa@i^0,f,c
 13085  0032C6  A0D8               	btfss	status,0,c
 13086  0032C8  063F               	decf	(dtoa@i+1)^0,f,c
 13087  0032CA                     
 13088                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
 13089  0032CA  5034               	movf	dtoa@s^0,w,c
 13090  0032CC  1035               	iorwf	(dtoa@s+1)^0,w,c
 13091  0032CE  A4D8               	btfss	status,2,c
 13092  0032D0  EF6C  F019         	goto	u5741
 13093  0032D4  EF6E  F019         	goto	u5740
 13094  0032D8                     u5741:
 13095  0032D8  EF74  F019         	goto	l4937
 13096  0032DC                     u5740:
 13097  0032DC  0E00               	movlw	0
 13098  0032DE  6E2F               	movwf	(_dtoa$2545+1)^0,c
 13099  0032E0  0E2B               	movlw	43
 13100  0032E2  6E2E               	movwf	_dtoa$2545^0,c
 13101  0032E4  EF78  F019         	goto	l4939
 13102  0032E8                     l4937:
 13103  0032E8  0E00               	movlw	0
 13104  0032EA  6E2F               	movwf	(_dtoa$2545+1)^0,c
 13105  0032EC  0E2D               	movlw	45
 13106  0032EE  6E2E               	movwf	_dtoa$2545^0,c
 13107  0032F0                     l4939:
 13108  0032F0  0E40               	movlw	low _dbuf
 13109  0032F2  243E               	addwf	dtoa@i^0,w,c
 13110  0032F4  6ED9               	movwf	fsr2l,c
 13111  0032F6  0E02               	movlw	high _dbuf
 13112  0032F8  203F               	addwfc	(dtoa@i+1)^0,w,c
 13113  0032FA  6EDA               	movwf	fsr2h,c
 13114  0032FC  C02E  FFDF         	movff	_dtoa$2545,indf2
 13115  003300                     l4941:
 13116                           
 13117                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
 13118  003300  C01C  F011         	movff	dtoa@fp,pad@fp
 13119  003304  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
 13120  003308  0E40               	movlw	low _dbuf
 13121  00330A  243E               	addwf	dtoa@i^0,w,c
 13122  00330C  6E13               	movwf	pad@buf^0,c
 13123  00330E  0E02               	movlw	high _dbuf
 13124  003310  203F               	addwfc	(dtoa@i+1)^0,w,c
 13125  003312  6E14               	movwf	(pad@buf+1)^0,c
 13126  003314  C032  F015         	movff	dtoa@w,pad@p
 13127  003318  C033  F016         	movff	dtoa@w+1,pad@p+1
 13128  00331C  EC9C  F027         	call	_pad	;wreg free
 13129  003320  C011  F01C         	movff	?_pad,?_dtoa
 13130  003324  C012  F01D         	movff	?_pad+1,?_dtoa+1
 13131  003328  0012               	return		;funcret
 13132  00332A                     __end_of_dtoa:
 13133                           	callstack 0
 13134                           
 13135 ;; *************** function _pad *****************
 13136 ;; Defined at:
 13137 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 13138 ;; Parameters:    Size  Location     Type
 13139 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 13140 ;;		 -> sprintf@f(6), 
 13141 ;;  buf             2   18[COMRAM] PTR unsigned char 
 13142 ;;		 -> dbuf(80), 
 13143 ;;  p               2   20[COMRAM] int 
 13144 ;; Auto vars:     Size  Location     Type
 13145 ;;  w               2   25[COMRAM] int 
 13146 ;;  i               2   23[COMRAM] int 
 13147 ;; Return value:  Size  Location     Type
 13148 ;;                  2   16[COMRAM] int 
 13149 ;; Registers used:
 13150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13151 ;; Tracked objects:
 13152 ;;		On entry : 0/0
 13153 ;;		On exit  : 0/0
 13154 ;;		Unchanged: 0/0
 13155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13156 ;;      Params:         6       0       0       0       0       0       0
 13157 ;;      Locals:         4       0       0       0       0       0       0
 13158 ;;      Temps:          1       0       0       0       0       0       0
 13159 ;;      Totals:        11       0       0       0       0       0       0
 13160 ;;Total ram usage:       11 bytes
 13161 ;; Hardware stack levels used:    1
 13162 ;; Hardware stack levels required when called:    4
 13163 ;; This function calls:
 13164 ;;		_fputc
 13165 ;;		_fputs
 13166 ;;		_strlen
 13167 ;; This function is called by:
 13168 ;;		_dtoa
 13169 ;;		_efgtoa
 13170 ;; This function uses a non-reentrant model
 13171 ;;
 13172                           
 13173                           	psect	text49
 13174  004F38                     __ptext49:
 13175                           	callstack 0
 13176  004F38                     _pad:
 13177                           	callstack 19
 13178  004F38                     
 13179                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 13180  004F38  0100               	movlb	0	; () banked
 13181  004F3A  A1F8               	btfss	_flags& (0+255),0,b
 13182  004F3C  EFA2  F027         	goto	u5291
 13183  004F40  EFA4  F027         	goto	u5290
 13184  004F44                     u5291:
 13185  004F44  EFAE  F027         	goto	l4781
 13186  004F48                     u5290:
 13187  004F48                     
 13188                           ; BSR set to: 0
 13189                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 13190  004F48  C013  F00A         	movff	pad@buf,fputs@s
 13191  004F4C  C014  F00B         	movff	pad@buf+1,fputs@s+1
 13192  004F50  C011  F00C         	movff	pad@fp,fputs@fp
 13193  004F54  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 13194  004F58  ECBF  F02C         	call	_fputs	;wreg free
 13195  004F5C                     l4781:
 13196                           
 13197                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 13198  004F5C  BE16               	btfsc	(pad@p+1)^0,7,c
 13199  004F5E  EFB3  F027         	goto	u5301
 13200  004F62  EFB5  F027         	goto	u5300
 13201  004F66                     u5301:
 13202  004F66  EFBB  F027         	goto	l4785
 13203  004F6A                     u5300:
 13204  004F6A  C015  F01A         	movff	pad@p,pad@w
 13205  004F6E  C016  F01B         	movff	pad@p+1,pad@w+1
 13206  004F72  EFBF  F027         	goto	l1274
 13207  004F76                     l4785:
 13208  004F76  0E00               	movlw	0
 13209  004F78  6E1B               	movwf	(pad@w+1)^0,c
 13210  004F7A  0E00               	movlw	0
 13211  004F7C  6E1A               	movwf	pad@w^0,c
 13212  004F7E                     l1274:
 13213                           
 13214                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 13215  004F7E  0E00               	movlw	0
 13216  004F80  6E19               	movwf	(pad@i+1)^0,c
 13217  004F82  0E00               	movlw	0
 13218  004F84  6E18               	movwf	pad@i^0,c
 13219                           
 13220                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 13221  004F86  EFD1  F027         	goto	l4791
 13222  004F8A                     l4787:
 13223                           
 13224                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 13225  004F8A  0E00               	movlw	0
 13226  004F8C  6E02               	movwf	(fputc@c+1)^0,c
 13227  004F8E  0E20               	movlw	32
 13228  004F90  6E01               	movwf	fputc@c^0,c
 13229  004F92  C011  F003         	movff	pad@fp,fputc@fp
 13230  004F96  C012  F004         	movff	pad@fp+1,fputc@fp+1
 13231  004F9A  EC37  F027         	call	_fputc	;wreg free
 13232  004F9E                     
 13233                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
 13234  004F9E  4A18               	infsnz	pad@i^0,f,c
 13235  004FA0  2A19               	incf	(pad@i+1)^0,f,c
 13236  004FA2                     l4791:
 13237                           
 13238                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 13239  004FA2  501A               	movf	pad@w^0,w,c
 13240  004FA4  5C18               	subwf	pad@i^0,w,c
 13241  004FA6  5019               	movf	(pad@i+1)^0,w,c
 13242  004FA8  0A80               	xorlw	128
 13243  004FAA  6E17               	movwf	??_pad^0,c
 13244  004FAC  501B               	movf	(pad@w+1)^0,w,c
 13245  004FAE  0A80               	xorlw	128
 13246  004FB0  5817               	subwfb	??_pad^0,w,c
 13247  004FB2  A0D8               	btfss	status,0,c
 13248  004FB4  EFDE  F027         	goto	u5311
 13249  004FB8  EFE0  F027         	goto	u5310
 13250  004FBC                     u5311:
 13251  004FBC  EFC5  F027         	goto	l4787
 13252  004FC0                     u5310:
 13253  004FC0                     
 13254                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 13255  004FC0  0100               	movlb	0	; () banked
 13256  004FC2  B1F8               	btfsc	_flags& (0+255),0,b
 13257  004FC4  EFE6  F027         	goto	u5321
 13258  004FC8  EFE8  F027         	goto	u5320
 13259  004FCC                     u5321:
 13260  004FCC  EFF2  F027         	goto	l4795
 13261  004FD0                     u5320:
 13262  004FD0                     
 13263                           ; BSR set to: 0
 13264                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 13265  004FD0  C013  F00A         	movff	pad@buf,fputs@s
 13266  004FD4  C014  F00B         	movff	pad@buf+1,fputs@s+1
 13267  004FD8  C011  F00C         	movff	pad@fp,fputs@fp
 13268  004FDC  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 13269  004FE0  ECBF  F02C         	call	_fputs	;wreg free
 13270  004FE4                     l4795:
 13271                           
 13272                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
 13273  004FE4  C013  F001         	movff	pad@buf,strlen@s
 13274  004FE8  C014  F002         	movff	pad@buf+1,strlen@s+1
 13275  004FEC  ECEA  F02D         	call	_strlen	;wreg free
 13276  004FF0  501A               	movf	pad@w^0,w,c
 13277  004FF2  2401               	addwf	?_strlen^0,w,c
 13278  004FF4  6E11               	movwf	?_pad^0,c
 13279  004FF6  501B               	movf	(pad@w+1)^0,w,c
 13280  004FF8  2002               	addwfc	(?_strlen+1)^0,w,c
 13281  004FFA  6E12               	movwf	(?_pad+1)^0,c
 13282  004FFC  0012               	return		;funcret
 13283  004FFE                     __end_of_pad:
 13284                           	callstack 0
 13285                           
 13286 ;; *************** function _strlen *****************
 13287 ;; Defined at:
 13288 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
 13289 ;; Parameters:    Size  Location     Type
 13290 ;;  s               2    0[COMRAM] PTR const unsigned char 
 13291 ;;		 -> dbuf(80), 
 13292 ;; Auto vars:     Size  Location     Type
 13293 ;;  a               2    2[COMRAM] PTR const unsigned char 
 13294 ;;		 -> dbuf(80), 
 13295 ;; Return value:  Size  Location     Type
 13296 ;;                  2    0[COMRAM] unsigned int 
 13297 ;; Registers used:
 13298 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13299 ;; Tracked objects:
 13300 ;;		On entry : 0/0
 13301 ;;		On exit  : 0/0
 13302 ;;		Unchanged: 0/0
 13303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13304 ;;      Params:         2       0       0       0       0       0       0
 13305 ;;      Locals:         2       0       0       0       0       0       0
 13306 ;;      Temps:          0       0       0       0       0       0       0
 13307 ;;      Totals:         4       0       0       0       0       0       0
 13308 ;;Total ram usage:        4 bytes
 13309 ;; Hardware stack levels used:    1
 13310 ;; Hardware stack levels required when called:    1
 13311 ;; This function calls:
 13312 ;;		Nothing
 13313 ;; This function is called by:
 13314 ;;		_pad
 13315 ;; This function uses a non-reentrant model
 13316 ;;
 13317                           
 13318                           	psect	text50
 13319  005BD4                     __ptext50:
 13320                           	callstack 0
 13321  005BD4                     _strlen:
 13322                           	callstack 21
 13323  005BD4  C001  F003         	movff	strlen@s,strlen@a
 13324  005BD8  C002  F004         	movff	strlen@s+1,strlen@a+1
 13325  005BDC  EFF2  F02D         	goto	l4237
 13326  005BE0                     l4235:
 13327  005BE0  4A01               	infsnz	strlen@s^0,f,c
 13328  005BE2  2A02               	incf	(strlen@s+1)^0,f,c
 13329  005BE4                     l4237:
 13330  005BE4  C001  FFD9         	movff	strlen@s,fsr2l
 13331  005BE8  C002  FFDA         	movff	strlen@s+1,fsr2h
 13332  005BEC  50DF               	movf	indf2,w,c
 13333  005BEE  A4D8               	btfss	status,2,c
 13334  005BF0  EFFC  F02D         	goto	u4431
 13335  005BF4  EFFE  F02D         	goto	u4430
 13336  005BF8                     u4431:
 13337  005BF8  EFF0  F02D         	goto	l4235
 13338  005BFC                     u4430:
 13339  005BFC  5003               	movf	strlen@a^0,w,c
 13340  005BFE  5C01               	subwf	strlen@s^0,w,c
 13341  005C00  6E01               	movwf	?_strlen^0,c
 13342  005C02  5004               	movf	(strlen@a+1)^0,w,c
 13343  005C04  5802               	subwfb	(strlen@s+1)^0,w,c
 13344  005C06  6E02               	movwf	(?_strlen+1)^0,c
 13345  005C08  0012               	return		;funcret
 13346  005C0A                     __end_of_strlen:
 13347                           	callstack 0
 13348                           
 13349 ;; *************** function _fputs *****************
 13350 ;; Defined at:
 13351 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
 13352 ;; Parameters:    Size  Location     Type
 13353 ;;  s               2    9[COMRAM] PTR const unsigned char 
 13354 ;;		 -> dbuf(80), 
 13355 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 13356 ;;		 -> sprintf@f(6), 
 13357 ;; Auto vars:     Size  Location     Type
 13358 ;;  i               2   14[COMRAM] int 
 13359 ;;  c               1   13[COMRAM] unsigned char 
 13360 ;; Return value:  Size  Location     Type
 13361 ;;                  2    9[COMRAM] int 
 13362 ;; Registers used:
 13363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13364 ;; Tracked objects:
 13365 ;;		On entry : 0/0
 13366 ;;		On exit  : 0/0
 13367 ;;		Unchanged: 0/0
 13368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13369 ;;      Params:         4       0       0       0       0       0       0
 13370 ;;      Locals:         3       0       0       0       0       0       0
 13371 ;;      Temps:          0       0       0       0       0       0       0
 13372 ;;      Totals:         7       0       0       0       0       0       0
 13373 ;;Total ram usage:        7 bytes
 13374 ;; Hardware stack levels used:    1
 13375 ;; Hardware stack levels required when called:    3
 13376 ;; This function calls:
 13377 ;;		_fputc
 13378 ;; This function is called by:
 13379 ;;		_pad
 13380 ;; This function uses a non-reentrant model
 13381 ;;
 13382                           
 13383                           	psect	text51
 13384  00597E                     __ptext51:
 13385                           	callstack 0
 13386  00597E                     _fputs:
 13387                           	callstack 19
 13388  00597E  0E00               	movlw	0
 13389  005980  6E10               	movwf	(fputs@i+1)^0,c
 13390  005982  0E00               	movlw	0
 13391  005984  6E0F               	movwf	fputs@i^0,c
 13392  005986  EFD0  F02C         	goto	l4231
 13393  00598A                     l4227:
 13394  00598A  C00E  F001         	movff	fputs@c,fputc@c
 13395  00598E  6A02               	clrf	(fputc@c+1)^0,c
 13396  005990  C00C  F003         	movff	fputs@fp,fputc@fp
 13397  005994  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
 13398  005998  EC37  F027         	call	_fputc	;wreg free
 13399  00599C  4A0F               	infsnz	fputs@i^0,f,c
 13400  00599E  2A10               	incf	(fputs@i+1)^0,f,c
 13401  0059A0                     l4231:
 13402  0059A0  500F               	movf	fputs@i^0,w,c
 13403  0059A2  240A               	addwf	fputs@s^0,w,c
 13404  0059A4  6ED9               	movwf	fsr2l,c
 13405  0059A6  5010               	movf	(fputs@i+1)^0,w,c
 13406  0059A8  200B               	addwfc	(fputs@s+1)^0,w,c
 13407  0059AA  6EDA               	movwf	fsr2h,c
 13408  0059AC  50DF               	movf	indf2,w,c
 13409  0059AE  6E0E               	movwf	fputs@c^0,c
 13410  0059B0  500E               	movf	fputs@c^0,w,c
 13411  0059B2  A4D8               	btfss	status,2,c
 13412  0059B4  EFDE  F02C         	goto	u4421
 13413  0059B8  EFE0  F02C         	goto	u4420
 13414  0059BC                     u4421:
 13415  0059BC  EFC5  F02C         	goto	l4227
 13416  0059C0                     u4420:
 13417  0059C0  0012               	return		;funcret
 13418  0059C2                     __end_of_fputs:
 13419                           	callstack 0
 13420                           
 13421 ;; *************** function _fputc *****************
 13422 ;; Defined at:
 13423 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
 13424 ;; Parameters:    Size  Location     Type
 13425 ;;  c               2    0[COMRAM] int 
 13426 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 13427 ;;		 -> sprintf@f(6), 
 13428 ;; Auto vars:     Size  Location     Type
 13429 ;;		None
 13430 ;; Return value:  Size  Location     Type
 13431 ;;                  2    0[COMRAM] int 
 13432 ;; Registers used:
 13433 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13434 ;; Tracked objects:
 13435 ;;		On entry : 0/0
 13436 ;;		On exit  : 0/0
 13437 ;;		Unchanged: 0/0
 13438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13439 ;;      Params:         4       0       0       0       0       0       0
 13440 ;;      Locals:         0       0       0       0       0       0       0
 13441 ;;      Temps:          5       0       0       0       0       0       0
 13442 ;;      Totals:         9       0       0       0       0       0       0
 13443 ;;Total ram usage:        9 bytes
 13444 ;; Hardware stack levels used:    1
 13445 ;; Hardware stack levels required when called:    2
 13446 ;; This function calls:
 13447 ;;		_putch
 13448 ;; This function is called by:
 13449 ;;		_pad
 13450 ;;		_vfpfcnvrt
 13451 ;;		_fputs
 13452 ;; This function uses a non-reentrant model
 13453 ;;
 13454                           
 13455                           	psect	text52
 13456  004E6E                     __ptext52:
 13457                           	callstack 0
 13458  004E6E                     _fputc:
 13459                           	callstack 22
 13460  004E6E  5003               	movf	fputc@fp^0,w,c
 13461  004E70  1004               	iorwf	(fputc@fp+1)^0,w,c
 13462  004E72  B4D8               	btfsc	status,2,c
 13463  004E74  EF3E  F027         	goto	u3991
 13464  004E78  EF40  F027         	goto	u3990
 13465  004E7C                     u3991:
 13466  004E7C  EF49  F027         	goto	l4013
 13467  004E80                     u3990:
 13468  004E80  5003               	movf	fputc@fp^0,w,c
 13469  004E82  1004               	iorwf	(fputc@fp+1)^0,w,c
 13470  004E84  A4D8               	btfss	status,2,c
 13471  004E86  EF47  F027         	goto	u4001
 13472  004E8A  EF49  F027         	goto	u4000
 13473  004E8E                     u4001:
 13474  004E8E  EF4E  F027         	goto	l4015
 13475  004E92                     u4000:
 13476  004E92                     l4013:
 13477  004E92  5001               	movf	fputc@c^0,w,c
 13478  004E94  ECC8  F02E         	call	_putch
 13479  004E98  EF9B  F027         	goto	l1534
 13480  004E9C                     l4015:
 13481  004E9C  EE20 F004          	lfsr	2,4
 13482  004EA0  5003               	movf	fputc@fp^0,w,c
 13483  004EA2  26D9               	addwf	fsr2l,f,c
 13484  004EA4  5004               	movf	(fputc@fp+1)^0,w,c
 13485  004EA6  22DA               	addwfc	fsr2h,f,c
 13486  004EA8  50DE               	movf	postinc2,w,c
 13487  004EAA  10DE               	iorwf	postinc2,w,c
 13488  004EAC  B4D8               	btfsc	status,2,c
 13489  004EAE  EF5B  F027         	goto	u4011
 13490  004EB2  EF5D  F027         	goto	u4010
 13491  004EB6                     u4011:
 13492  004EB6  EF78  F027         	goto	l4019
 13493  004EBA                     u4010:
 13494  004EBA  EE20 F004          	lfsr	2,4
 13495  004EBE  5003               	movf	fputc@fp^0,w,c
 13496  004EC0  26D9               	addwf	fsr2l,f,c
 13497  004EC2  5004               	movf	(fputc@fp+1)^0,w,c
 13498  004EC4  22DA               	addwfc	fsr2h,f,c
 13499  004EC6  EE10 F002          	lfsr	1,2
 13500  004ECA  5003               	movf	fputc@fp^0,w,c
 13501  004ECC  26E1               	addwf	fsr1l,f,c
 13502  004ECE  5004               	movf	(fputc@fp+1)^0,w,c
 13503  004ED0  22E2               	addwfc	fsr1h,f,c
 13504  004ED2  50DE               	movf	postinc2,w,c
 13505  004ED4  5CE6               	subwf	postinc1,w,c
 13506  004ED6  50E6               	movf	postinc1,w,c
 13507  004ED8  0A80               	xorlw	128
 13508  004EDA  6E09               	movwf	(??_fputc+4)^0,c
 13509  004EDC  50DE               	movf	postinc2,w,c
 13510  004EDE  0A80               	xorlw	128
 13511  004EE0  5809               	subwfb	(??_fputc+4)^0,w,c
 13512  004EE2  B0D8               	btfsc	status,0,c
 13513  004EE4  EF76  F027         	goto	u4021
 13514  004EE8  EF78  F027         	goto	u4020
 13515  004EEC                     u4021:
 13516  004EEC  EF9B  F027         	goto	l1534
 13517  004EF0                     u4020:
 13518  004EF0                     l4019:
 13519  004EF0  EE20 F002          	lfsr	2,2
 13520  004EF4  5003               	movf	fputc@fp^0,w,c
 13521  004EF6  26D9               	addwf	fsr2l,f,c
 13522  004EF8  5004               	movf	(fputc@fp+1)^0,w,c
 13523  004EFA  22DA               	addwfc	fsr2h,f,c
 13524  004EFC  CFDE F005          	movff	postinc2,??_fputc
 13525  004F00  CFDD F006          	movff	postdec2,??_fputc+1
 13526  004F04  C003  FFD9         	movff	fputc@fp,fsr2l
 13527  004F08  C004  FFDA         	movff	fputc@fp+1,fsr2h
 13528  004F0C  CFDE F007          	movff	postinc2,??_fputc+2
 13529  004F10  CFDD F008          	movff	postdec2,??_fputc+3
 13530  004F14  5005               	movf	??_fputc^0,w,c
 13531  004F16  2407               	addwf	(??_fputc+2)^0,w,c
 13532  004F18  6ED9               	movwf	fsr2l,c
 13533  004F1A  5006               	movf	(??_fputc+1)^0,w,c
 13534  004F1C  2008               	addwfc	(??_fputc+3)^0,w,c
 13535  004F1E  6EDA               	movwf	fsr2h,c
 13536  004F20  C001  FFDF         	movff	fputc@c,indf2
 13537  004F24  EE20 F002          	lfsr	2,2
 13538  004F28  5003               	movf	fputc@fp^0,w,c
 13539  004F2A  26D9               	addwf	fsr2l,f,c
 13540  004F2C  5004               	movf	(fputc@fp+1)^0,w,c
 13541  004F2E  22DA               	addwfc	fsr2h,f,c
 13542  004F30  2ADE               	incf	postinc2,f,c
 13543  004F32  0E00               	movlw	0
 13544  004F34  22DD               	addwfc	postdec2,f,c
 13545  004F36                     l1534:
 13546  004F36  0012               	return		;funcret
 13547  004F38                     __end_of_fputc:
 13548                           	callstack 0
 13549                           
 13550 ;; *************** function _putch *****************
 13551 ;; Defined at:
 13552 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
 13553 ;; Parameters:    Size  Location     Type
 13554 ;;  c               1    wreg     unsigned char 
 13555 ;; Auto vars:     Size  Location     Type
 13556 ;;  c               1    0[COMRAM] unsigned char 
 13557 ;; Return value:  Size  Location     Type
 13558 ;;                  1    wreg      void 
 13559 ;; Registers used:
 13560 ;;		wreg
 13561 ;; Tracked objects:
 13562 ;;		On entry : 0/0
 13563 ;;		On exit  : 0/0
 13564 ;;		Unchanged: 0/0
 13565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13566 ;;      Params:         0       0       0       0       0       0       0
 13567 ;;      Locals:         0       0       0       0       0       0       0
 13568 ;;      Temps:          0       0       0       0       0       0       0
 13569 ;;      Totals:         0       0       0       0       0       0       0
 13570 ;;Total ram usage:        0 bytes
 13571 ;; Hardware stack levels used:    1
 13572 ;; Hardware stack levels required when called:    1
 13573 ;; This function calls:
 13574 ;;		Nothing
 13575 ;; This function is called by:
 13576 ;;		_fputc
 13577 ;; This function uses a non-reentrant model
 13578 ;;
 13579                           
 13580                           	psect	text53
 13581  005D90                     __ptext53:
 13582                           	callstack 0
 13583  005D90                     _putch:
 13584                           	callstack 22
 13585  005D90  0012               	return		;funcret
 13586  005D92                     __end_of_putch:
 13587                           	callstack 0
 13588                           
 13589 ;; *************** function _abs *****************
 13590 ;; Defined at:
 13591 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
 13592 ;; Parameters:    Size  Location     Type
 13593 ;;  a               2   18[COMRAM] int 
 13594 ;; Auto vars:     Size  Location     Type
 13595 ;;		None
 13596 ;; Return value:  Size  Location     Type
 13597 ;;                  2   18[COMRAM] int 
 13598 ;; Registers used:
 13599 ;;		wreg, status,2, status,0
 13600 ;; Tracked objects:
 13601 ;;		On entry : 0/0
 13602 ;;		On exit  : 0/0
 13603 ;;		Unchanged: 0/0
 13604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13605 ;;      Params:         2       0       0       0       0       0       0
 13606 ;;      Locals:         0       0       0       0       0       0       0
 13607 ;;      Temps:          2       0       0       0       0       0       0
 13608 ;;      Totals:         4       0       0       0       0       0       0
 13609 ;;Total ram usage:        4 bytes
 13610 ;; Hardware stack levels used:    1
 13611 ;; Hardware stack levels required when called:    1
 13612 ;; This function calls:
 13613 ;;		Nothing
 13614 ;; This function is called by:
 13615 ;;		_dtoa
 13616 ;; This function uses a non-reentrant model
 13617 ;;
 13618                           
 13619                           	psect	text54
 13620  005A04                     __ptext54:
 13621                           	callstack 0
 13622  005A04                     _abs:
 13623                           	callstack 22
 13624  005A04  BE14               	btfsc	(abs@a+1)^0,7,c
 13625  005A06  EF0F  F02D         	goto	u5330
 13626  005A0A  5014               	movf	(abs@a+1)^0,w,c
 13627  005A0C  E106               	bnz	u5331
 13628  005A0E  0413               	decf	abs@a^0,w,c
 13629  005A10  B0D8               	btfsc	status,0,c
 13630  005A12  EF0D  F02D         	goto	u5331
 13631  005A16  EF0F  F02D         	goto	u5330
 13632  005A1A                     u5331:
 13633  005A1A  EF1D  F02D         	goto	l1455
 13634  005A1E                     u5330:
 13635  005A1E  C013  F015         	movff	abs@a,??_abs
 13636  005A22  C014  F016         	movff	abs@a+1,??_abs+1
 13637  005A26  1E15               	comf	??_abs^0,f,c
 13638  005A28  1E16               	comf	(??_abs+1)^0,f,c
 13639  005A2A  4A15               	infsnz	??_abs^0,f,c
 13640  005A2C  2A16               	incf	(??_abs+1)^0,f,c
 13641  005A2E  C015  F013         	movff	??_abs,?_abs
 13642  005A32  C016  F014         	movff	??_abs+1,?_abs+1
 13643  005A36  EF21  F02D         	goto	l1458
 13644  005A3A                     l1455:
 13645  005A3A  C013  F013         	movff	abs@a,?_abs
 13646  005A3E  C014  F014         	movff	abs@a+1,?_abs+1
 13647  005A42                     l1458:
 13648  005A42  0012               	return		;funcret
 13649  005A44                     __end_of_abs:
 13650                           	callstack 0
 13651                           
 13652 ;; *************** function ___aomod *****************
 13653 ;; Defined at:
 13654 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
 13655 ;; Parameters:    Size  Location     Type
 13656 ;;  dividend        8    0[COMRAM] long long 
 13657 ;;  divisor         8    8[COMRAM] long long 
 13658 ;; Auto vars:     Size  Location     Type
 13659 ;;  sign            1   17[COMRAM] unsigned char 
 13660 ;;  counter         1   16[COMRAM] unsigned char 
 13661 ;; Return value:  Size  Location     Type
 13662 ;;                  8    0[COMRAM] long long 
 13663 ;; Registers used:
 13664 ;;		wreg, status,2, status,0
 13665 ;; Tracked objects:
 13666 ;;		On entry : 0/0
 13667 ;;		On exit  : 0/0
 13668 ;;		Unchanged: 0/0
 13669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13670 ;;      Params:        16       0       0       0       0       0       0
 13671 ;;      Locals:         2       0       0       0       0       0       0
 13672 ;;      Temps:          0       0       0       0       0       0       0
 13673 ;;      Totals:        18       0       0       0       0       0       0
 13674 ;;Total ram usage:       18 bytes
 13675 ;; Hardware stack levels used:    1
 13676 ;; Hardware stack levels required when called:    1
 13677 ;; This function calls:
 13678 ;;		Nothing
 13679 ;; This function is called by:
 13680 ;;		_dtoa
 13681 ;; This function uses a non-reentrant model
 13682 ;;
 13683                           
 13684                           	psect	text55
 13685  004202                     __ptext55:
 13686                           	callstack 0
 13687  004202                     ___aomod:
 13688                           	callstack 22
 13689  004202  0E00               	movlw	0
 13690  004204  6E12               	movwf	___aomod@sign^0,c
 13691  004206  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 13692  004208  EF0A  F021         	goto	u4530
 13693  00420C  EF08  F021         	goto	u4531
 13694  004210                     u4531:
 13695  004210  EF1C  F021         	goto	l4305
 13696  004214                     u4530:
 13697  004214  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13698  004216  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13699  004218  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13700  00421A  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13701  00421C  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13702  00421E  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13703  004220  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13704  004222  6C01               	negf	___aomod@dividend^0,c
 13705  004224  0E00               	movlw	0
 13706  004226  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13707  004228  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13708  00422A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13709  00422C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13710  00422E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13711  004230  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13712  004232  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13713  004234  0E01               	movlw	1
 13714  004236  6E12               	movwf	___aomod@sign^0,c
 13715  004238                     l4305:
 13716  004238  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 13717  00423A  EF23  F021         	goto	u4540
 13718  00423E  EF21  F021         	goto	u4541
 13719  004242                     u4541:
 13720  004242  EF33  F021         	goto	l4309
 13721  004246                     u4540:
 13722  004246  1E10               	comf	(___aomod@divisor+7)^0,f,c
 13723  004248  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 13724  00424A  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 13725  00424C  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 13726  00424E  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 13727  004250  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 13728  004252  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 13729  004254  6C09               	negf	___aomod@divisor^0,c
 13730  004256  0E00               	movlw	0
 13731  004258  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 13732  00425A  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 13733  00425C  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 13734  00425E  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 13735  004260  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 13736  004262  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 13737  004264  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 13738  004266                     l4309:
 13739  004266  5009               	movf	___aomod@divisor^0,w,c
 13740  004268  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 13741  00426A  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 13742  00426C  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 13743  00426E  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 13744  004270  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 13745  004272  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 13746  004274  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 13747  004276  B4D8               	btfsc	status,2,c
 13748  004278  EF40  F021         	goto	u4551
 13749  00427C  EF42  F021         	goto	u4550
 13750  004280                     u4551:
 13751  004280  EF8A  F021         	goto	l4325
 13752  004284                     u4550:
 13753  004284  0E01               	movlw	1
 13754  004286  6E11               	movwf	___aomod@counter^0,c
 13755  004288  EF50  F021         	goto	l4315
 13756  00428C                     l4313:
 13757  00428C  90D8               	bcf	status,0,c
 13758  00428E  3609               	rlcf	___aomod@divisor^0,f,c
 13759  004290  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 13760  004292  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 13761  004294  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 13762  004296  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 13763  004298  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 13764  00429A  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 13765  00429C  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 13766  00429E  2A11               	incf	___aomod@counter^0,f,c
 13767  0042A0                     l4315:
 13768  0042A0  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 13769  0042A2  EF55  F021         	goto	u4561
 13770  0042A6  EF57  F021         	goto	u4560
 13771  0042AA                     u4561:
 13772  0042AA  EF46  F021         	goto	l4313
 13773  0042AE                     u4560:
 13774  0042AE                     l4317:
 13775  0042AE  5009               	movf	___aomod@divisor^0,w,c
 13776  0042B0  5C01               	subwf	___aomod@dividend^0,w,c
 13777  0042B2  500A               	movf	(___aomod@divisor+1)^0,w,c
 13778  0042B4  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 13779  0042B6  500B               	movf	(___aomod@divisor+2)^0,w,c
 13780  0042B8  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 13781  0042BA  500C               	movf	(___aomod@divisor+3)^0,w,c
 13782  0042BC  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 13783  0042BE  500D               	movf	(___aomod@divisor+4)^0,w,c
 13784  0042C0  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 13785  0042C2  500E               	movf	(___aomod@divisor+5)^0,w,c
 13786  0042C4  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 13787  0042C6  500F               	movf	(___aomod@divisor+6)^0,w,c
 13788  0042C8  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 13789  0042CA  5010               	movf	(___aomod@divisor+7)^0,w,c
 13790  0042CC  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 13791  0042CE  A0D8               	btfss	status,0,c
 13792  0042D0  EF6C  F021         	goto	u4571
 13793  0042D4  EF6E  F021         	goto	u4570
 13794  0042D8                     u4571:
 13795  0042D8  EF7E  F021         	goto	l4321
 13796  0042DC                     u4570:
 13797  0042DC  5009               	movf	___aomod@divisor^0,w,c
 13798  0042DE  5E01               	subwf	___aomod@dividend^0,f,c
 13799  0042E0  500A               	movf	(___aomod@divisor+1)^0,w,c
 13800  0042E2  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 13801  0042E4  500B               	movf	(___aomod@divisor+2)^0,w,c
 13802  0042E6  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 13803  0042E8  500C               	movf	(___aomod@divisor+3)^0,w,c
 13804  0042EA  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 13805  0042EC  500D               	movf	(___aomod@divisor+4)^0,w,c
 13806  0042EE  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 13807  0042F0  500E               	movf	(___aomod@divisor+5)^0,w,c
 13808  0042F2  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 13809  0042F4  500F               	movf	(___aomod@divisor+6)^0,w,c
 13810  0042F6  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 13811  0042F8  5010               	movf	(___aomod@divisor+7)^0,w,c
 13812  0042FA  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 13813  0042FC                     l4321:
 13814  0042FC  90D8               	bcf	status,0,c
 13815  0042FE  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 13816  004300  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 13817  004302  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 13818  004304  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 13819  004306  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 13820  004308  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 13821  00430A  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 13822  00430C  3209               	rrcf	___aomod@divisor^0,f,c
 13823  00430E  2E11               	decfsz	___aomod@counter^0,f,c
 13824  004310  EF57  F021         	goto	l4317
 13825  004314                     l4325:
 13826  004314  5012               	movf	___aomod@sign^0,w,c
 13827  004316  B4D8               	btfsc	status,2,c
 13828  004318  EF90  F021         	goto	u4581
 13829  00431C  EF92  F021         	goto	u4580
 13830  004320                     u4581:
 13831  004320  EFA2  F021         	goto	l4329
 13832  004324                     u4580:
 13833  004324  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13834  004326  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13835  004328  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13836  00432A  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13837  00432C  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13838  00432E  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13839  004330  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13840  004332  6C01               	negf	___aomod@dividend^0,c
 13841  004334  0E00               	movlw	0
 13842  004336  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13843  004338  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13844  00433A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13845  00433C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13846  00433E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13847  004340  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13848  004342  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13849  004344                     l4329:
 13850  004344  C001  F001         	movff	___aomod@dividend,?___aomod
 13851  004348  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 13852  00434C  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 13853  004350  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 13854  004354  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 13855  004358  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 13856  00435C  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 13857  004360  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 13858  004364  0012               	return		;funcret
 13859  004366                     __end_of___aomod:
 13860                           	callstack 0
 13861                           
 13862 ;; *************** function ___aodiv *****************
 13863 ;; Defined at:
 13864 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
 13865 ;; Parameters:    Size  Location     Type
 13866 ;;  dividend        8    0[COMRAM] long long 
 13867 ;;  divisor         8    8[COMRAM] long long 
 13868 ;; Auto vars:     Size  Location     Type
 13869 ;;  quotient        8   18[COMRAM] long long 
 13870 ;;  sign            1   17[COMRAM] unsigned char 
 13871 ;;  counter         1   16[COMRAM] unsigned char 
 13872 ;; Return value:  Size  Location     Type
 13873 ;;                  8    0[COMRAM] long long 
 13874 ;; Registers used:
 13875 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13876 ;; Tracked objects:
 13877 ;;		On entry : 0/0
 13878 ;;		On exit  : 0/0
 13879 ;;		Unchanged: 0/0
 13880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13881 ;;      Params:        16       0       0       0       0       0       0
 13882 ;;      Locals:        10       0       0       0       0       0       0
 13883 ;;      Temps:          0       0       0       0       0       0       0
 13884 ;;      Totals:        26       0       0       0       0       0       0
 13885 ;;Total ram usage:       26 bytes
 13886 ;; Hardware stack levels used:    1
 13887 ;; Hardware stack levels required when called:    1
 13888 ;; This function calls:
 13889 ;;		Nothing
 13890 ;; This function is called by:
 13891 ;;		_dtoa
 13892 ;; This function uses a non-reentrant model
 13893 ;;
 13894                           
 13895                           	psect	text56
 13896  00407A                     __ptext56:
 13897                           	callstack 0
 13898  00407A                     ___aodiv:
 13899                           	callstack 22
 13900  00407A  0E00               	movlw	0
 13901  00407C  6E12               	movwf	___aodiv@sign^0,c
 13902  00407E  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 13903  004080  EF46  F020         	goto	u4460
 13904  004084  EF44  F020         	goto	u4461
 13905  004088                     u4461:
 13906  004088  EF58  F020         	goto	l4261
 13907  00408C                     u4460:
 13908  00408C  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 13909  00408E  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 13910  004090  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 13911  004092  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 13912  004094  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 13913  004096  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 13914  004098  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 13915  00409A  6C09               	negf	___aodiv@divisor^0,c
 13916  00409C  0E00               	movlw	0
 13917  00409E  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 13918  0040A0  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 13919  0040A2  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 13920  0040A4  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 13921  0040A6  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 13922  0040A8  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 13923  0040AA  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 13924  0040AC  0E01               	movlw	1
 13925  0040AE  6E12               	movwf	___aodiv@sign^0,c
 13926  0040B0                     l4261:
 13927  0040B0  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 13928  0040B2  EF5F  F020         	goto	u4470
 13929  0040B6  EF5D  F020         	goto	u4471
 13930  0040BA                     u4471:
 13931  0040BA  EF71  F020         	goto	l4267
 13932  0040BE                     u4470:
 13933  0040BE  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 13934  0040C0  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 13935  0040C2  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 13936  0040C4  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 13937  0040C6  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 13938  0040C8  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 13939  0040CA  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 13940  0040CC  6C01               	negf	___aodiv@dividend^0,c
 13941  0040CE  0E00               	movlw	0
 13942  0040D0  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 13943  0040D2  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 13944  0040D4  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 13945  0040D6  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 13946  0040D8  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 13947  0040DA  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 13948  0040DC  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 13949  0040DE  0E01               	movlw	1
 13950  0040E0  1A12               	xorwf	___aodiv@sign^0,f,c
 13951  0040E2                     l4267:
 13952  0040E2  EE20  F013         	lfsr	2,___aodiv@quotient
 13953  0040E6  0E07               	movlw	7
 13954  0040E8                     u4481:
 13955  0040E8  6ADE               	clrf	postinc2,c
 13956  0040EA  06E8               	decf	wreg,f,c
 13957  0040EC  E2FD               	bc	u4481
 13958  0040EE  5009               	movf	___aodiv@divisor^0,w,c
 13959  0040F0  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 13960  0040F2  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 13961  0040F4  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 13962  0040F6  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 13963  0040F8  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 13964  0040FA  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 13965  0040FC  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 13966  0040FE  B4D8               	btfsc	status,2,c
 13967  004100  EF84  F020         	goto	u4491
 13968  004104  EF86  F020         	goto	u4490
 13969  004108                     u4491:
 13970  004108  EFD8  F020         	goto	l4289
 13971  00410C                     u4490:
 13972  00410C  0E01               	movlw	1
 13973  00410E  6E11               	movwf	___aodiv@counter^0,c
 13974  004110  EF94  F020         	goto	l4275
 13975  004114                     l4273:
 13976  004114  90D8               	bcf	status,0,c
 13977  004116  3609               	rlcf	___aodiv@divisor^0,f,c
 13978  004118  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 13979  00411A  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 13980  00411C  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 13981  00411E  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 13982  004120  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 13983  004122  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 13984  004124  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 13985  004126  2A11               	incf	___aodiv@counter^0,f,c
 13986  004128                     l4275:
 13987  004128  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 13988  00412A  EF99  F020         	goto	u4501
 13989  00412E  EF9B  F020         	goto	u4500
 13990  004132                     u4501:
 13991  004132  EF8A  F020         	goto	l4273
 13992  004136                     u4500:
 13993  004136                     l4277:
 13994  004136  90D8               	bcf	status,0,c
 13995  004138  3613               	rlcf	___aodiv@quotient^0,f,c
 13996  00413A  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 13997  00413C  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 13998  00413E  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 13999  004140  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 14000  004142  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 14001  004144  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 14002  004146  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 14003  004148  5009               	movf	___aodiv@divisor^0,w,c
 14004  00414A  5C01               	subwf	___aodiv@dividend^0,w,c
 14005  00414C  500A               	movf	(___aodiv@divisor+1)^0,w,c
 14006  00414E  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 14007  004150  500B               	movf	(___aodiv@divisor+2)^0,w,c
 14008  004152  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 14009  004154  500C               	movf	(___aodiv@divisor+3)^0,w,c
 14010  004156  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 14011  004158  500D               	movf	(___aodiv@divisor+4)^0,w,c
 14012  00415A  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 14013  00415C  500E               	movf	(___aodiv@divisor+5)^0,w,c
 14014  00415E  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 14015  004160  500F               	movf	(___aodiv@divisor+6)^0,w,c
 14016  004162  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 14017  004164  5010               	movf	(___aodiv@divisor+7)^0,w,c
 14018  004166  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 14019  004168  A0D8               	btfss	status,0,c
 14020  00416A  EFB9  F020         	goto	u4511
 14021  00416E  EFBB  F020         	goto	u4510
 14022  004172                     u4511:
 14023  004172  EFCC  F020         	goto	l4285
 14024  004176                     u4510:
 14025  004176  5009               	movf	___aodiv@divisor^0,w,c
 14026  004178  5E01               	subwf	___aodiv@dividend^0,f,c
 14027  00417A  500A               	movf	(___aodiv@divisor+1)^0,w,c
 14028  00417C  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 14029  00417E  500B               	movf	(___aodiv@divisor+2)^0,w,c
 14030  004180  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 14031  004182  500C               	movf	(___aodiv@divisor+3)^0,w,c
 14032  004184  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 14033  004186  500D               	movf	(___aodiv@divisor+4)^0,w,c
 14034  004188  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 14035  00418A  500E               	movf	(___aodiv@divisor+5)^0,w,c
 14036  00418C  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 14037  00418E  500F               	movf	(___aodiv@divisor+6)^0,w,c
 14038  004190  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 14039  004192  5010               	movf	(___aodiv@divisor+7)^0,w,c
 14040  004194  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 14041  004196  8013               	bsf	___aodiv@quotient^0,0,c
 14042  004198                     l4285:
 14043  004198  90D8               	bcf	status,0,c
 14044  00419A  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 14045  00419C  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 14046  00419E  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 14047  0041A0  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 14048  0041A2  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 14049  0041A4  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 14050  0041A6  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 14051  0041A8  3209               	rrcf	___aodiv@divisor^0,f,c
 14052  0041AA  2E11               	decfsz	___aodiv@counter^0,f,c
 14053  0041AC  EF9B  F020         	goto	l4277
 14054  0041B0                     l4289:
 14055  0041B0  5012               	movf	___aodiv@sign^0,w,c
 14056  0041B2  B4D8               	btfsc	status,2,c
 14057  0041B4  EFDE  F020         	goto	u4521
 14058  0041B8  EFE0  F020         	goto	u4520
 14059  0041BC                     u4521:
 14060  0041BC  EFF0  F020         	goto	l4293
 14061  0041C0                     u4520:
 14062  0041C0  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 14063  0041C2  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 14064  0041C4  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 14065  0041C6  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 14066  0041C8  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 14067  0041CA  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 14068  0041CC  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 14069  0041CE  6C13               	negf	___aodiv@quotient^0,c
 14070  0041D0  0E00               	movlw	0
 14071  0041D2  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 14072  0041D4  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 14073  0041D6  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 14074  0041D8  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 14075  0041DA  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 14076  0041DC  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 14077  0041DE  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 14078  0041E0                     l4293:
 14079  0041E0  C013  F001         	movff	___aodiv@quotient,?___aodiv
 14080  0041E4  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 14081  0041E8  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 14082  0041EC  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 14083  0041F0  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 14084  0041F4  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 14085  0041F8  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 14086  0041FC  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 14087  004200  0012               	return		;funcret
 14088  004202                     __end_of___aodiv:
 14089                           	callstack 0
 14090                           
 14091 ;; *************** function _atoi *****************
 14092 ;; Defined at:
 14093 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
 14094 ;; Parameters:    Size  Location     Type
 14095 ;;  s               2    7[COMRAM] PTR const unsigned char 
 14096 ;;		 -> STR_16(18), STR_14(16), STR_12(18), STR_10(13), 
 14097 ;;		 -> STR_8(14), STR_6(16), STR_4(16), STR_2(15), 
 14098 ;; Auto vars:     Size  Location     Type
 14099 ;;  n               2   20[COMRAM] int 
 14100 ;;  neg             2   13[COMRAM] int 
 14101 ;; Return value:  Size  Location     Type
 14102 ;;                  2    7[COMRAM] int 
 14103 ;; Registers used:
 14104 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14105 ;; Tracked objects:
 14106 ;;		On entry : 0/0
 14107 ;;		On exit  : 0/0
 14108 ;;		Unchanged: 0/0
 14109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14110 ;;      Params:         2       0       0       0       0       0       0
 14111 ;;      Locals:         9       0       0       0       0       0       0
 14112 ;;      Temps:          4       0       0       0       0       0       0
 14113 ;;      Totals:        15       0       0       0       0       0       0
 14114 ;;Total ram usage:       15 bytes
 14115 ;; Hardware stack levels used:    1
 14116 ;; Hardware stack levels required when called:    2
 14117 ;; This function calls:
 14118 ;;		___wmul
 14119 ;;		_isdigit
 14120 ;;		_isspace
 14121 ;; This function is called by:
 14122 ;;		_vfpfcnvrt
 14123 ;; This function uses a non-reentrant model
 14124 ;;
 14125                           
 14126                           	psect	text57
 14127  003EEA                     __ptext57:
 14128                           	callstack 0
 14129  003EEA                     _atoi:
 14130                           	callstack 22
 14131  003EEA  0E00               	movlw	0
 14132  003EEC  6E16               	movwf	(atoi@n+1)^0,c
 14133  003EEE  0E00               	movlw	0
 14134  003EF0  6E15               	movwf	atoi@n^0,c
 14135  003EF2  0E00               	movlw	0
 14136  003EF4  6E0F               	movwf	(atoi@neg+1)^0,c
 14137  003EF6  0E00               	movlw	0
 14138  003EF8  6E0E               	movwf	atoi@neg^0,c
 14139  003EFA  EF81  F01F         	goto	l5247
 14140  003EFE                     l5245:
 14141  003EFE  4A08               	infsnz	atoi@s^0,f,c
 14142  003F00  2A09               	incf	(atoi@s+1)^0,f,c
 14143  003F02                     l5247:
 14144  003F02  0E01               	movlw	1
 14145  003F04  6E14               	movwf	_atoi$2637^0,c
 14146  003F06  C008  FFF6         	movff	atoi@s,tblptrl
 14147  003F0A  C009  FFF7         	movff	atoi@s+1,tblptrh
 14148  003F0E                     	if	0	;tblptru may be non-zero
 14149  003F0E                     	endif
 14150  003F0E                     	if	0	;tblptru may be non-zero
 14151  003F0E                     	endif
 14152  003F0E  0008               	tblrd		*
 14153  003F10  50F5               	movf	tablat,w,c
 14154  003F12  0A20               	xorlw	32
 14155  003F14  B4D8               	btfsc	status,2,c
 14156  003F16  EF8F  F01F         	goto	u6271
 14157  003F1A  EF91  F01F         	goto	u6270
 14158  003F1E                     u6271:
 14159  003F1E  EFAE  F01F         	goto	l5255
 14160  003F22                     u6270:
 14161  003F22  0EF7               	movlw	247
 14162  003F24  6E0A               	movwf	??_atoi^0,c
 14163  003F26  0EFF               	movlw	255
 14164  003F28  6E0B               	movwf	(??_atoi+1)^0,c
 14165  003F2A  C008  FFF6         	movff	atoi@s,tblptrl
 14166  003F2E  C009  FFF7         	movff	atoi@s+1,tblptrh
 14167  003F32                     	if	0	;tblptru may be non-zero
 14168  003F32                     	endif
 14169  003F32                     	if	0	;tblptru may be non-zero
 14170  003F32                     	endif
 14171  003F32  0008               	tblrd		*
 14172  003F34  50F5               	movf	tablat,w,c
 14173  003F36  6E0C               	movwf	(??_atoi+2)^0,c
 14174  003F38  6A0D               	clrf	(??_atoi+3)^0,c
 14175  003F3A  500A               	movf	??_atoi^0,w,c
 14176  003F3C  260C               	addwf	(??_atoi+2)^0,f,c
 14177  003F3E  500B               	movf	(??_atoi+1)^0,w,c
 14178  003F40  220D               	addwfc	(??_atoi+3)^0,f,c
 14179  003F42  500D               	movf	(??_atoi+3)^0,w,c
 14180  003F44  E109               	bnz	u6280
 14181  003F46  0E05               	movlw	5
 14182  003F48  5C0C               	subwf	(??_atoi+2)^0,w,c
 14183  003F4A  A0D8               	btfss	status,0,c
 14184  003F4C  EFAA  F01F         	goto	u6281
 14185  003F50  EFAC  F01F         	goto	u6280
 14186  003F54                     u6281:
 14187  003F54  EFAE  F01F         	goto	l5255
 14188  003F58                     u6280:
 14189  003F58  0E00               	movlw	0
 14190  003F5A  6E14               	movwf	_atoi$2637^0,c
 14191  003F5C                     l5255:
 14192  003F5C  C014  F010         	movff	_atoi$2637,_atoi$2636
 14193  003F60  6A11               	clrf	(_atoi$2636+1)^0,c
 14194  003F62  5010               	movf	_atoi$2636^0,w,c
 14195  003F64  1011               	iorwf	(_atoi$2636+1)^0,w,c
 14196  003F66  A4D8               	btfss	status,2,c
 14197  003F68  EFB8  F01F         	goto	u6291
 14198  003F6C  EFBA  F01F         	goto	u6290
 14199  003F70                     u6291:
 14200  003F70  EF7F  F01F         	goto	l5245
 14201  003F74                     u6290:
 14202  003F74  EFC4  F01F         	goto	l5265
 14203  003F78                     l5261:
 14204  003F78  0E00               	movlw	0
 14205  003F7A  6E0F               	movwf	(atoi@neg+1)^0,c
 14206  003F7C  0E01               	movlw	1
 14207  003F7E  6E0E               	movwf	atoi@neg^0,c
 14208  003F80                     l5263:
 14209  003F80  4A08               	infsnz	atoi@s^0,f,c
 14210  003F82  2A09               	incf	(atoi@s+1)^0,f,c
 14211  003F84  EFF9  F01F         	goto	l5271
 14212  003F88                     l5265:
 14213  003F88  C008  FFF6         	movff	atoi@s,tblptrl
 14214  003F8C  C009  FFF7         	movff	atoi@s+1,tblptrh
 14215  003F90                     	if	0	;tblptru may be non-zero
 14216  003F90                     	endif
 14217  003F90                     	if	0	;tblptru may be non-zero
 14218  003F90                     	endif
 14219  003F90  0008               	tblrd		*
 14220  003F92  50F5               	movf	tablat,w,c
 14221  003F94  6E0A               	movwf	??_atoi^0,c
 14222  003F96  6A0B               	clrf	(??_atoi+1)^0,c
 14223                           
 14224                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14225                           ; Switch size 1, requested type "simple"
 14226                           ; Number of cases is 1, Range of values is 0 to 0
 14227                           ; switch strategies available:
 14228                           ; Name         Instructions Cycles
 14229                           ; simple_byte            4     3 (average)
 14230                           ;	Chosen strategy is simple_byte
 14231  003F98  500B               	movf	(??_atoi+1)^0,w,c
 14232  003F9A  0A00               	xorlw	0	; case 0
 14233  003F9C  B4D8               	btfsc	status,2,c
 14234  003F9E  EFD3  F01F         	goto	l6453
 14235  003FA2  EFF9  F01F         	goto	l5271
 14236  003FA6                     l6453:
 14237                           
 14238                           ; Switch size 1, requested type "simple"
 14239                           ; Number of cases is 2, Range of values is 43 to 45
 14240                           ; switch strategies available:
 14241                           ; Name         Instructions Cycles
 14242                           ; simple_byte            7     4 (average)
 14243                           ;	Chosen strategy is simple_byte
 14244  003FA6  500A               	movf	??_atoi^0,w,c
 14245  003FA8  0A2B               	xorlw	43	; case 43
 14246  003FAA  B4D8               	btfsc	status,2,c
 14247  003FAC  EFC0  F01F         	goto	l5263
 14248  003FB0  0A06               	xorlw	6	; case 45
 14249  003FB2  B4D8               	btfsc	status,2,c
 14250  003FB4  EFBC  F01F         	goto	l5261
 14251  003FB8  EFF9  F01F         	goto	l5271
 14252  003FBC                     l5267:
 14253  003FBC  C015  F001         	movff	atoi@n,___wmul@multiplier
 14254  003FC0  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 14255  003FC4  0E00               	movlw	0
 14256  003FC6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 14257  003FC8  0E0A               	movlw	10
 14258  003FCA  6E03               	movwf	___wmul@multiplicand^0,c
 14259  003FCC  EC5E  F02E         	call	___wmul	;wreg free
 14260  003FD0  C008  FFF6         	movff	atoi@s,tblptrl
 14261  003FD4  C009  FFF7         	movff	atoi@s+1,tblptrh
 14262  003FD8                     	if	0	;tblptru may be non-zero
 14263  003FD8                     	endif
 14264  003FD8                     	if	0	;tblptru may be non-zero
 14265  003FD8                     	endif
 14266  003FD8  0008               	tblrd		*
 14267  003FDA  50F5               	movf	tablat,w,c
 14268  003FDC  5E01               	subwf	?___wmul^0,f,c
 14269  003FDE  0E00               	movlw	0
 14270  003FE0  5A02               	subwfb	(?___wmul+1)^0,f,c
 14271  003FE2  0E30               	movlw	48
 14272  003FE4  2401               	addwf	?___wmul^0,w,c
 14273  003FE6  6E15               	movwf	atoi@n^0,c
 14274  003FE8  0E00               	movlw	0
 14275  003FEA  2002               	addwfc	(?___wmul+1)^0,w,c
 14276  003FEC  6E16               	movwf	(atoi@n+1)^0,c
 14277  003FEE  EFC0  F01F         	goto	l5263
 14278  003FF2                     l5271:
 14279  003FF2  0ED0               	movlw	208
 14280  003FF4  6E0A               	movwf	??_atoi^0,c
 14281  003FF6  0EFF               	movlw	255
 14282  003FF8  6E0B               	movwf	(??_atoi+1)^0,c
 14283  003FFA  C008  FFF6         	movff	atoi@s,tblptrl
 14284  003FFE  C009  FFF7         	movff	atoi@s+1,tblptrh
 14285  004002                     	if	0	;tblptru may be non-zero
 14286  004002                     	endif
 14287  004002                     	if	0	;tblptru may be non-zero
 14288  004002                     	endif
 14289  004002  0008               	tblrd		*
 14290  004004  50F5               	movf	tablat,w,c
 14291  004006  6E0C               	movwf	(??_atoi+2)^0,c
 14292  004008  6A0D               	clrf	(??_atoi+3)^0,c
 14293  00400A  500A               	movf	??_atoi^0,w,c
 14294  00400C  260C               	addwf	(??_atoi+2)^0,f,c
 14295  00400E  500B               	movf	(??_atoi+1)^0,w,c
 14296  004010  220D               	addwfc	(??_atoi+3)^0,f,c
 14297  004012  500D               	movf	(??_atoi+3)^0,w,c
 14298  004014  E10A               	bnz	u6300
 14299  004016  0E0A               	movlw	10
 14300  004018  5C0C               	subwf	(??_atoi+2)^0,w,c
 14301  00401A  A0D8               	btfss	status,0,c
 14302  00401C  EF12  F020         	goto	u6301
 14303  004020  EF15  F020         	goto	u6300
 14304  004024                     u6301:
 14305  004024  0E01               	movlw	1
 14306  004026  EF16  F020         	goto	u6310
 14307  00402A                     u6300:
 14308  00402A  0E00               	movlw	0
 14309  00402C                     u6310:
 14310  00402C  6E12               	movwf	_atoi$2638^0,c
 14311  00402E  6A13               	clrf	(_atoi$2638+1)^0,c
 14312  004030  5012               	movf	_atoi$2638^0,w,c
 14313  004032  1013               	iorwf	(_atoi$2638+1)^0,w,c
 14314  004034  A4D8               	btfss	status,2,c
 14315  004036  EF1F  F020         	goto	u6321
 14316  00403A  EF21  F020         	goto	u6320
 14317  00403E                     u6321:
 14318  00403E  EFDE  F01F         	goto	l5267
 14319  004042                     u6320:
 14320  004042  500E               	movf	atoi@neg^0,w,c
 14321  004044  100F               	iorwf	(atoi@neg+1)^0,w,c
 14322  004046  A4D8               	btfss	status,2,c
 14323  004048  EF28  F020         	goto	u6331
 14324  00404C  EF2A  F020         	goto	u6330
 14325  004050                     u6331:
 14326  004050  EF38  F020         	goto	l1486
 14327  004054                     u6330:
 14328  004054  C015  F00A         	movff	atoi@n,??_atoi
 14329  004058  C016  F00B         	movff	atoi@n+1,??_atoi+1
 14330  00405C  1E0A               	comf	??_atoi^0,f,c
 14331  00405E  1E0B               	comf	(??_atoi+1)^0,f,c
 14332  004060  4A0A               	infsnz	??_atoi^0,f,c
 14333  004062  2A0B               	incf	(??_atoi+1)^0,f,c
 14334  004064  C00A  F008         	movff	??_atoi,?_atoi
 14335  004068  C00B  F009         	movff	??_atoi+1,?_atoi+1
 14336  00406C  EF3C  F020         	goto	l1489
 14337  004070                     l1486:
 14338  004070  C015  F008         	movff	atoi@n,?_atoi
 14339  004074  C016  F009         	movff	atoi@n+1,?_atoi+1
 14340  004078                     l1489:
 14341  004078  0012               	return		;funcret
 14342  00407A                     __end_of_atoi:
 14343                           	callstack 0
 14344                           
 14345 ;; *************** function _isspace *****************
 14346 ;; Defined at:
 14347 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
 14348 ;; Parameters:    Size  Location     Type
 14349 ;;  c               2    0[COMRAM] int 
 14350 ;; Auto vars:     Size  Location     Type
 14351 ;;		None
 14352 ;; Return value:  Size  Location     Type
 14353 ;;                  2    0[COMRAM] int 
 14354 ;; Registers used:
 14355 ;;		wreg, status,2, status,0
 14356 ;; Tracked objects:
 14357 ;;		On entry : 0/0
 14358 ;;		On exit  : 0/0
 14359 ;;		Unchanged: 0/0
 14360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14361 ;;      Params:         2       0       0       0       0       0       0
 14362 ;;      Locals:         1       0       0       0       0       0       0
 14363 ;;      Temps:          4       0       0       0       0       0       0
 14364 ;;      Totals:         7       0       0       0       0       0       0
 14365 ;;Total ram usage:        7 bytes
 14366 ;; Hardware stack levels used:    1
 14367 ;; Hardware stack levels required when called:    1
 14368 ;; This function calls:
 14369 ;;		Nothing
 14370 ;; This function is called by:
 14371 ;;		_atoi
 14372 ;; This function uses a non-reentrant model
 14373 ;;
 14374                           
 14375                           	psect	text58
 14376  0058E6                     __ptext58:
 14377                           	callstack 0
 14378  0058E6                     _isspace:
 14379                           	callstack 22
 14380  0058E6  0E01               	movlw	1
 14381  0058E8  6E07               	movwf	_isspace$2667^0,c
 14382  0058EA  0E20               	movlw	32
 14383  0058EC  1801               	xorwf	isspace@c^0,w,c
 14384  0058EE  1002               	iorwf	(isspace@c+1)^0,w,c
 14385  0058F0  B4D8               	btfsc	status,2,c
 14386  0058F2  EF7D  F02C         	goto	u5581
 14387  0058F6  EF7F  F02C         	goto	u5580
 14388  0058FA                     u5581:
 14389  0058FA  EF98  F02C         	goto	l4879
 14390  0058FE                     u5580:
 14391  0058FE  0EF7               	movlw	247
 14392  005900  6E03               	movwf	??_isspace^0,c
 14393  005902  0EFF               	movlw	255
 14394  005904  6E04               	movwf	(??_isspace+1)^0,c
 14395  005906  C001  F005         	movff	isspace@c,??_isspace+2
 14396  00590A  C002  F006         	movff	isspace@c+1,??_isspace+3
 14397  00590E  5003               	movf	??_isspace^0,w,c
 14398  005910  2605               	addwf	(??_isspace+2)^0,f,c
 14399  005912  5004               	movf	(??_isspace+1)^0,w,c
 14400  005914  2206               	addwfc	(??_isspace+3)^0,f,c
 14401  005916  5006               	movf	(??_isspace+3)^0,w,c
 14402  005918  E109               	bnz	u5590
 14403  00591A  0E05               	movlw	5
 14404  00591C  5C05               	subwf	(??_isspace+2)^0,w,c
 14405  00591E  A0D8               	btfss	status,0,c
 14406  005920  EF94  F02C         	goto	u5591
 14407  005924  EF96  F02C         	goto	u5590
 14408  005928                     u5591:
 14409  005928  EF98  F02C         	goto	l4879
 14410  00592C                     u5590:
 14411  00592C  0E00               	movlw	0
 14412  00592E  6E07               	movwf	_isspace$2667^0,c
 14413  005930                     l4879:
 14414  005930  C007  F001         	movff	_isspace$2667,?_isspace
 14415  005934  6A02               	clrf	(?_isspace+1)^0,c
 14416  005936  0012               	return		;funcret
 14417  005938                     __end_of_isspace:
 14418                           	callstack 0
 14419                           
 14420 ;; *************** function _isdigit *****************
 14421 ;; Defined at:
 14422 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
 14423 ;; Parameters:    Size  Location     Type
 14424 ;;  c               2    0[COMRAM] int 
 14425 ;; Auto vars:     Size  Location     Type
 14426 ;;		None
 14427 ;; Return value:  Size  Location     Type
 14428 ;;                  2    0[COMRAM] int 
 14429 ;; Registers used:
 14430 ;;		wreg, status,2, status,0
 14431 ;; Tracked objects:
 14432 ;;		On entry : 0/0
 14433 ;;		On exit  : 0/0
 14434 ;;		Unchanged: 0/0
 14435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14436 ;;      Params:         2       0       0       0       0       0       0
 14437 ;;      Locals:         0       0       0       0       0       0       0
 14438 ;;      Temps:          4       0       0       0       0       0       0
 14439 ;;      Totals:         6       0       0       0       0       0       0
 14440 ;;Total ram usage:        6 bytes
 14441 ;; Hardware stack levels used:    1
 14442 ;; Hardware stack levels required when called:    1
 14443 ;; This function calls:
 14444 ;;		Nothing
 14445 ;; This function is called by:
 14446 ;;		_vfpfcnvrt
 14447 ;;		_atoi
 14448 ;; This function uses a non-reentrant model
 14449 ;;
 14450                           
 14451                           	psect	text59
 14452  005B2E                     __ptext59:
 14453                           	callstack 0
 14454  005B2E                     _isdigit:
 14455                           	callstack 23
 14456  005B2E  0ED0               	movlw	208
 14457  005B30  6E03               	movwf	??_isdigit^0,c
 14458  005B32  0EFF               	movlw	255
 14459  005B34  6E04               	movwf	(??_isdigit+1)^0,c
 14460  005B36  C001  F005         	movff	isdigit@c,??_isdigit+2
 14461  005B3A  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 14462  005B3E  5003               	movf	??_isdigit^0,w,c
 14463  005B40  2605               	addwf	(??_isdigit+2)^0,f,c
 14464  005B42  5004               	movf	(??_isdigit+1)^0,w,c
 14465  005B44  2206               	addwfc	(??_isdigit+3)^0,f,c
 14466  005B46  5006               	movf	(??_isdigit+3)^0,w,c
 14467  005B48  E10A               	bnz	u5560
 14468  005B4A  0E0A               	movlw	10
 14469  005B4C  5C05               	subwf	(??_isdigit+2)^0,w,c
 14470  005B4E  A0D8               	btfss	status,0,c
 14471  005B50  EFAC  F02D         	goto	u5561
 14472  005B54  EFAF  F02D         	goto	u5560
 14473  005B58                     u5561:
 14474  005B58  0E01               	movlw	1
 14475  005B5A  EFB0  F02D         	goto	u5570
 14476  005B5E                     u5560:
 14477  005B5E  0E00               	movlw	0
 14478  005B60                     u5570:
 14479  005B60  6E01               	movwf	?_isdigit^0,c
 14480  005B62  6A02               	clrf	(?_isdigit+1)^0,c
 14481  005B64  0012               	return		;funcret
 14482  005B66                     __end_of_isdigit:
 14483                           	callstack 0
 14484                           
 14485 ;; *************** function ___wmul *****************
 14486 ;; Defined at:
 14487 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
 14488 ;; Parameters:    Size  Location     Type
 14489 ;;  multiplier      2    0[COMRAM] unsigned int 
 14490 ;;  multiplicand    2    2[COMRAM] unsigned int 
 14491 ;; Auto vars:     Size  Location     Type
 14492 ;;  product         2    4[COMRAM] unsigned int 
 14493 ;; Return value:  Size  Location     Type
 14494 ;;                  2    0[COMRAM] unsigned int 
 14495 ;; Registers used:
 14496 ;;		wreg, status,2, status,0, prodl, prodh
 14497 ;; Tracked objects:
 14498 ;;		On entry : 0/0
 14499 ;;		On exit  : 0/0
 14500 ;;		Unchanged: 0/0
 14501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14502 ;;      Params:         4       0       0       0       0       0       0
 14503 ;;      Locals:         2       0       0       0       0       0       0
 14504 ;;      Temps:          0       0       0       0       0       0       0
 14505 ;;      Totals:         6       0       0       0       0       0       0
 14506 ;;Total ram usage:        6 bytes
 14507 ;; Hardware stack levels used:    1
 14508 ;; Hardware stack levels required when called:    1
 14509 ;; This function calls:
 14510 ;;		Nothing
 14511 ;; This function is called by:
 14512 ;;		_atoi
 14513 ;; This function uses a non-reentrant model
 14514 ;;
 14515                           
 14516                           	psect	text60
 14517  005CBC                     __ptext60:
 14518                           	callstack 0
 14519  005CBC                     ___wmul:
 14520                           	callstack 22
 14521  005CBC  5001               	movf	___wmul@multiplier^0,w,c
 14522  005CBE  0203               	mulwf	___wmul@multiplicand^0,c
 14523  005CC0  CFF3 F005          	movff	prodl,___wmul@product
 14524  005CC4  CFF4 F006          	movff	prodh,___wmul@product+1
 14525  005CC8  5001               	movf	___wmul@multiplier^0,w,c
 14526  005CCA  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 14527  005CCC  50F3               	movf	243,w,c
 14528  005CCE  2606               	addwf	(___wmul@product+1)^0,f,c
 14529  005CD0  5002               	movf	(___wmul@multiplier+1)^0,w,c
 14530  005CD2  0203               	mulwf	___wmul@multiplicand^0,c
 14531  005CD4  50F3               	movf	243,w,c
 14532  005CD6  2606               	addwf	(___wmul@product+1)^0,f,c
 14533  005CD8  C005  F001         	movff	___wmul@product,?___wmul
 14534  005CDC  C006  F002         	movff	___wmul@product+1,?___wmul+1
 14535  005CE0  0012               	return		;funcret
 14536  005CE2                     __end_of___wmul:
 14537                           	callstack 0
 14538                           
 14539 ;; *************** function _eepromWrite *****************
 14540 ;; Defined at:
 14541 ;;		line 62 in file "fs_eeprom.c"
 14542 ;; Parameters:    Size  Location     Type
 14543 ;;  address         1    wreg     unsigned char 
 14544 ;;  data            1    0[COMRAM] unsigned char 
 14545 ;; Auto vars:     Size  Location     Type
 14546 ;;  address         1    1[COMRAM] unsigned char 
 14547 ;; Return value:  Size  Location     Type
 14548 ;;                  1    wreg      void 
 14549 ;; Registers used:
 14550 ;;		wreg, status,2
 14551 ;; Tracked objects:
 14552 ;;		On entry : 0/0
 14553 ;;		On exit  : 0/0
 14554 ;;		Unchanged: 0/0
 14555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14556 ;;      Params:         1       0       0       0       0       0       0
 14557 ;;      Locals:         1       0       0       0       0       0       0
 14558 ;;      Temps:          0       0       0       0       0       0       0
 14559 ;;      Totals:         2       0       0       0       0       0       0
 14560 ;;Total ram usage:        2 bytes
 14561 ;; Hardware stack levels used:    1
 14562 ;; Hardware stack levels required when called:    1
 14563 ;; This function calls:
 14564 ;;		Nothing
 14565 ;; This function is called by:
 14566 ;;		_speedLimitSettingMenu
 14567 ;;		_stopTimeSettingMenu
 14568 ;;		_driverTimeSettingMenu
 14569 ;; This function uses a non-reentrant model
 14570 ;;
 14571                           
 14572                           	psect	text61
 14573  005C3E                     __ptext61:
 14574                           	callstack 0
 14575  005C3E                     _eepromWrite:
 14576                           	callstack 26
 14577                           
 14578                           ;incstack = 0
 14579                           ;eepromWrite@address stored from wreg
 14580  005C3E  6E02               	movwf	eepromWrite@address^0,c
 14581  005C40                     
 14582                           ;fs_eeprom.c: 62: void eepromWrite(uint8_t address, uint8_t data);fs_eeprom.c: 63: {;fs_
      +                          eeprom.c: 66:     EEADR = (uint8_t)address;
 14583  005C40  C002  FFA9         	movff	eepromWrite@address,4009	;volatile
 14584  005C44                     
 14585                           ;fs_eeprom.c: 68:     EEDATA = data;
 14586  005C44  C001  FFA8         	movff	eepromWrite@data,4008	;volatile
 14587  005C48                     
 14588                           ;fs_eeprom.c: 69:     EECON1bits.EEPGD = 0;
 14589  005C48  9EA6               	bcf	166,7,c	;volsfr
 14590  005C4A                     
 14591                           ;fs_eeprom.c: 70:     EECON1bits.CFGS = 0;
 14592  005C4A  9CA6               	bcf	166,6,c	;volsfr
 14593  005C4C                     
 14594                           ;fs_eeprom.c: 71:     EECON1bits.WREN = 1;
 14595  005C4C  84A6               	bsf	166,2,c	;volsfr
 14596  005C4E                     
 14597                           ;fs_eeprom.c: 75:     EECON2 = 0x55;
 14598  005C4E  0E55               	movlw	85
 14599  005C50  6EA7               	movwf	167,c	;volsfr
 14600  005C52                     
 14601                           ;fs_eeprom.c: 76:     EECON2 = 0xAA;
 14602  005C52  0EAA               	movlw	170
 14603  005C54  6EA7               	movwf	167,c	;volsfr
 14604  005C56                     
 14605                           ;fs_eeprom.c: 77:     EECON1bits.WR = 1;
 14606  005C56  82A6               	bsf	166,1,c	;volsfr
 14607  005C58                     l76:
 14608                           
 14609                           ;fs_eeprom.c: 80:     while(PIR2bits.EEIF == 0)
 14610  005C58  A8A1               	btfss	161,4,c	;volatile
 14611  005C5A  EF31  F02E         	goto	u6871
 14612  005C5E  EF33  F02E         	goto	u6870
 14613  005C62                     u6871:
 14614  005C62  EF2C  F02E         	goto	l76
 14615  005C66                     u6870:
 14616  005C66                     
 14617                           ;fs_eeprom.c: 85:     PIR2bits.EEIF = 0;
 14618  005C66  98A1               	bcf	161,4,c	;volatile
 14619                           
 14620                           ;fs_eeprom.c: 86:     EECON1bits.WREN = 0;
 14621  005C68  94A6               	bcf	166,2,c	;volsfr
 14622  005C6A  0012               	return		;funcret
 14623  005C6C                     __end_of_eepromWrite:
 14624                           	callstack 0
 14625                           
 14626 ;; *************** function _Lcd_Write_String *****************
 14627 ;; Defined at:
 14628 ;;		line 155 in file "fs_lcd.c"
 14629 ;; Parameters:    Size  Location     Type
 14630 ;;  a               2    4[COMRAM] PTR unsigned char 
 14631 ;;		 -> STR_15(17), driverTimeSettingMenu@textCursor2(16), STR_13(17), stopTimeSettingMenu@textCursor2(16), 
 14632 ;;		 -> STR_11(17), speedLimitSettingMenu@textCursor2(16), STR_9(17), STR_7(17), 
 14633 ;;		 -> secretMenu@textCursor2(16), STR_5(17), pauseMenu@textCursor2(16), STR_3(17), 
 14634 ;;		 -> stopMenu@textCursor2(16), STR_1(17), mainMenu@textCursor2(16), 
 14635 ;; Auto vars:     Size  Location     Type
 14636 ;;  i               2    8[COMRAM] int 
 14637 ;; Return value:  Size  Location     Type
 14638 ;;                  1    wreg      void 
 14639 ;; Registers used:
 14640 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14641 ;; Tracked objects:
 14642 ;;		On entry : 0/0
 14643 ;;		On exit  : 0/0
 14644 ;;		Unchanged: 0/0
 14645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14646 ;;      Params:         2       0       0       0       0       0       0
 14647 ;;      Locals:         2       0       0       0       0       0       0
 14648 ;;      Temps:          2       0       0       0       0       0       0
 14649 ;;      Totals:         6       0       0       0       0       0       0
 14650 ;;Total ram usage:        6 bytes
 14651 ;; Hardware stack levels used:    1
 14652 ;; Hardware stack levels required when called:    3
 14653 ;; This function calls:
 14654 ;;		_Lcd_Write_Char
 14655 ;; This function is called by:
 14656 ;;		_mainMenu
 14657 ;;		_stopMenu
 14658 ;;		_pauseMenu
 14659 ;;		_secretMenu
 14660 ;;		_speedLimitSettingMenu
 14661 ;;		_stopTimeSettingMenu
 14662 ;;		_driverTimeSettingMenu
 14663 ;; This function uses a non-reentrant model
 14664 ;;
 14665                           
 14666                           	psect	text62
 14667  005408                     __ptext62:
 14668                           	callstack 0
 14669  005408                     _Lcd_Write_String:
 14670                           	callstack 24
 14671  005408                     
 14672                           ;fs_lcd.c: 155: void Lcd_Write_String(char *a);fs_lcd.c: 156: {;fs_lcd.c: 157:    int i;
      +                          ;fs_lcd.c: 158:    for(i=0;a[i]!='\0';i++)
 14673  005408  0E00               	movlw	0
 14674  00540A  6E0A               	movwf	(Lcd_Write_String@i+1)^0,c
 14675  00540C  0E00               	movlw	0
 14676  00540E  6E09               	movwf	Lcd_Write_String@i^0,c
 14677  005410  EF24  F02A         	goto	l5733
 14678  005414                     l5729:
 14679                           
 14680                           ;fs_lcd.c: 159:    Lcd_Write_Char(a[i]);
 14681  005414  5009               	movf	Lcd_Write_String@i^0,w,c
 14682  005416  2405               	addwf	Lcd_Write_String@a^0,w,c
 14683  005418  6E07               	movwf	??_Lcd_Write_String^0,c
 14684  00541A  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
 14685  00541C  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 14686  00541E  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
 14687  005420  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
 14688  005424  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 14689  005428  6AF8               	clrf	tblptru,c
 14690  00542A  0E05               	movlw	(high __ramtop+-1)
 14691  00542C  64F7               	cpfsgt	tblptrh,c
 14692  00542E  D003               	bra	u6907
 14693  005430  0008               	tblrd		*
 14694  005432  50F5               	movf	tablat,w,c
 14695  005434  D005               	bra	u6900
 14696  005436                     u6907:
 14697  005436  CFF6 FFE1          	movff	tblptrl,fsr1l
 14698  00543A  CFF7 FFE2          	movff	tblptrh,fsr1h
 14699  00543E  50E7               	movf	indf1,w,c
 14700  005440                     u6900:
 14701  005440  ECB3  F02D         	call	_Lcd_Write_Char
 14702  005444  4A09               	infsnz	Lcd_Write_String@i^0,f,c
 14703  005446  2A0A               	incf	(Lcd_Write_String@i+1)^0,f,c
 14704  005448                     l5733:
 14705  005448  5009               	movf	Lcd_Write_String@i^0,w,c
 14706  00544A  2405               	addwf	Lcd_Write_String@a^0,w,c
 14707  00544C  6E07               	movwf	??_Lcd_Write_String^0,c
 14708  00544E  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
 14709  005450  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 14710  005452  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
 14711  005454  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
 14712  005458  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 14713  00545C  6AF8               	clrf	tblptru,c
 14714  00545E  0E05               	movlw	(high __ramtop+-1)
 14715  005460  64F7               	cpfsgt	tblptrh,c
 14716  005462  D003               	bra	u6917
 14717  005464  0008               	tblrd		*
 14718  005466  50F5               	movf	tablat,w,c
 14719  005468  D005               	bra	u6910
 14720  00546A                     u6917:
 14721  00546A  CFF6 FFE1          	movff	tblptrl,fsr1l
 14722  00546E  CFF7 FFE2          	movff	tblptrh,fsr1h
 14723  005472  50E7               	movf	indf1,w,c
 14724  005474                     u6910:
 14725  005474  0900               	iorlw	0
 14726  005476  A4D8               	btfss	status,2,c
 14727  005478  EF40  F02A         	goto	u6921
 14728  00547C  EF42  F02A         	goto	u6920
 14729  005480                     u6921:
 14730  005480  EF0A  F02A         	goto	l5729
 14731  005484                     u6920:
 14732  005484  0012               	return		;funcret
 14733  005486                     __end_of_Lcd_Write_String:
 14734                           	callstack 0
 14735                           
 14736 ;; *************** function _Lcd_Write_Char *****************
 14737 ;; Defined at:
 14738 ;;		line 132 in file "fs_lcd.c"
 14739 ;; Parameters:    Size  Location     Type
 14740 ;;  a               1    wreg     unsigned char 
 14741 ;; Auto vars:     Size  Location     Type
 14742 ;;  a               1    3[COMRAM] unsigned char 
 14743 ;;  y               1    2[COMRAM] unsigned char 
 14744 ;;  temp            1    1[COMRAM] unsigned char 
 14745 ;; Return value:  Size  Location     Type
 14746 ;;                  1    wreg      void 
 14747 ;; Registers used:
 14748 ;;		wreg, status,2, status,0, cstack
 14749 ;; Tracked objects:
 14750 ;;		On entry : 0/0
 14751 ;;		On exit  : 0/0
 14752 ;;		Unchanged: 0/0
 14753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14754 ;;      Params:         0       0       0       0       0       0       0
 14755 ;;      Locals:         3       0       0       0       0       0       0
 14756 ;;      Temps:          0       0       0       0       0       0       0
 14757 ;;      Totals:         3       0       0       0       0       0       0
 14758 ;;Total ram usage:        3 bytes
 14759 ;; Hardware stack levels used:    1
 14760 ;; Hardware stack levels required when called:    2
 14761 ;; This function calls:
 14762 ;;		_Lcd_Port
 14763 ;; This function is called by:
 14764 ;;		_Lcd_Write_String
 14765 ;; This function uses a non-reentrant model
 14766 ;;
 14767                           
 14768                           	psect	text63
 14769  005B66                     __ptext63:
 14770                           	callstack 0
 14771  005B66                     _Lcd_Write_Char:
 14772                           	callstack 24
 14773                           
 14774                           ;incstack = 0
 14775                           ;Lcd_Write_Char@a stored from wreg
 14776  005B66  6E04               	movwf	Lcd_Write_Char@a^0,c
 14777  005B68                     
 14778                           ;fs_lcd.c: 132: void Lcd_Write_Char(char a);fs_lcd.c: 133: {;fs_lcd.c: 134:    char temp
      +                          ,y;;fs_lcd.c: 135:    temp = a&0x0F;
 14779  005B68  5004               	movf	Lcd_Write_Char@a^0,w,c
 14780  005B6A  0B0F               	andlw	15
 14781  005B6C  6E02               	movwf	Lcd_Write_Char@temp^0,c
 14782                           
 14783                           ;fs_lcd.c: 136:    y = a&0xF0;
 14784  005B6E  5004               	movf	Lcd_Write_Char@a^0,w,c
 14785  005B70  0BF0               	andlw	240
 14786  005B72  6E03               	movwf	Lcd_Write_Char@y^0,c
 14787  005B74                     
 14788                           ;fs_lcd.c: 137:    PORTDbits.RD6 = 1;
 14789  005B74  8C83               	bsf	131,6,c	;volatile
 14790  005B76                     
 14791                           ;fs_lcd.c: 138:    Lcd_Port(y>>4);
 14792  005B76  3803               	swapf	Lcd_Write_Char@y^0,w,c
 14793  005B78  0B0F               	andlw	15
 14794  005B7A  ECF3  F02B         	call	_Lcd_Port
 14795  005B7E                     
 14796                           ;fs_lcd.c: 139:    PORTDbits.RD7 = 1;
 14797  005B7E  8E83               	bsf	131,7,c	;volatile
 14798  005B80                     
 14799                           ;fs_lcd.c: 140:    _delay((unsigned long)((40)*(64000000UL/4000000.0)));
 14800  005B80  0ED5               	movlw	213
 14801  005B82                     u7987:
 14802  005B82  2EE8               	decfsz	wreg,f,c
 14803  005B84  D7FE               	bra	u7987
 14804  005B86  F000               	nop	
 14805  005B88                     
 14806                           ;fs_lcd.c: 141:    PORTDbits.RD7 = 0;
 14807  005B88  9E83               	bcf	131,7,c	;volatile
 14808  005B8A                     
 14809                           ;fs_lcd.c: 142:    Lcd_Port(temp);
 14810  005B8A  5002               	movf	Lcd_Write_Char@temp^0,w,c
 14811  005B8C  ECF3  F02B         	call	_Lcd_Port
 14812  005B90                     
 14813                           ;fs_lcd.c: 143:    PORTDbits.RD7 = 1;
 14814  005B90  8E83               	bsf	131,7,c	;volatile
 14815  005B92                     
 14816                           ;fs_lcd.c: 144:    _delay((unsigned long)((40)*(64000000UL/4000000.0)));
 14817  005B92  0ED5               	movlw	213
 14818  005B94                     u7997:
 14819  005B94  2EE8               	decfsz	wreg,f,c
 14820  005B96  D7FE               	bra	u7997
 14821  005B98  F000               	nop	
 14822  005B9A                     
 14823                           ;fs_lcd.c: 145:    PORTDbits.RD7 = 0;
 14824  005B9A  9E83               	bcf	131,7,c	;volatile
 14825  005B9C  0012               	return		;funcret
 14826  005B9E                     __end_of_Lcd_Write_Char:
 14827                           	callstack 0
 14828                           
 14829 ;; *************** function _Lcd_Set_Cursor *****************
 14830 ;; Defined at:
 14831 ;;		line 62 in file "fs_lcd.c"
 14832 ;; Parameters:    Size  Location     Type
 14833 ;;  a               1    wreg     unsigned char 
 14834 ;;  b               1    3[COMRAM] unsigned char 
 14835 ;; Auto vars:     Size  Location     Type
 14836 ;;  a               1    4[COMRAM] unsigned char 
 14837 ;;  temp            1    7[COMRAM] unsigned char 
 14838 ;;  y               1    6[COMRAM] unsigned char 
 14839 ;;  z               1    5[COMRAM] unsigned char 
 14840 ;; Return value:  Size  Location     Type
 14841 ;;                  1    wreg      void 
 14842 ;; Registers used:
 14843 ;;		wreg, status,2, status,0, cstack
 14844 ;; Tracked objects:
 14845 ;;		On entry : 0/0
 14846 ;;		On exit  : 0/0
 14847 ;;		Unchanged: 0/0
 14848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14849 ;;      Params:         1       0       0       0       0       0       0
 14850 ;;      Locals:         4       0       0       0       0       0       0
 14851 ;;      Temps:          0       0       0       0       0       0       0
 14852 ;;      Totals:         5       0       0       0       0       0       0
 14853 ;;Total ram usage:        5 bytes
 14854 ;; Hardware stack levels used:    1
 14855 ;; Hardware stack levels required when called:    3
 14856 ;; This function calls:
 14857 ;;		_Lcd_Cmd
 14858 ;; This function is called by:
 14859 ;;		_mainMenu
 14860 ;;		_stopMenu
 14861 ;;		_pauseMenu
 14862 ;;		_secretMenu
 14863 ;;		_speedLimitSettingMenu
 14864 ;;		_stopTimeSettingMenu
 14865 ;;		_driverTimeSettingMenu
 14866 ;; This function uses a non-reentrant model
 14867 ;;
 14868                           
 14869                           	psect	text64
 14870  0056C4                     __ptext64:
 14871                           	callstack 0
 14872  0056C4                     _Lcd_Set_Cursor:
 14873                           	callstack 24
 14874                           
 14875                           ;incstack = 0
 14876                           ;Lcd_Set_Cursor@a stored from wreg
 14877  0056C4  6E05               	movwf	Lcd_Set_Cursor@a^0,c
 14878  0056C6                     
 14879                           ;fs_lcd.c: 62: void Lcd_Set_Cursor(char a, char b);fs_lcd.c: 63: {;fs_lcd.c: 64:    char
      +                           temp,z,y;;fs_lcd.c: 65:    if(a == 1)
 14880  0056C6  0405               	decf	Lcd_Set_Cursor@a^0,w,c
 14881  0056C8  A4D8               	btfss	status,2,c
 14882  0056CA  EF69  F02B         	goto	u6881
 14883  0056CE  EF6B  F02B         	goto	u6880
 14884  0056D2                     u6881:
 14885  0056D2  EF7C  F02B         	goto	l5719
 14886  0056D6                     u6880:
 14887  0056D6                     
 14888                           ;fs_lcd.c: 66:    {;fs_lcd.c: 67:      temp = 0x80 + b - 1;
 14889  0056D6  5004               	movf	Lcd_Set_Cursor@b^0,w,c
 14890  0056D8  0F7F               	addlw	127
 14891  0056DA  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
 14892                           
 14893                           ;fs_lcd.c: 68:       z = temp>>4;
 14894  0056DC  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
 14895  0056DE  0B0F               	andlw	15
 14896  0056E0  6E06               	movwf	Lcd_Set_Cursor@z^0,c
 14897                           
 14898                           ;fs_lcd.c: 69:       y = temp & 0x0F;
 14899  0056E2  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
 14900  0056E4  0B0F               	andlw	15
 14901  0056E6  6E07               	movwf	Lcd_Set_Cursor@y^0,c
 14902  0056E8                     
 14903                           ;fs_lcd.c: 70:       Lcd_Cmd(z);
 14904  0056E8  5006               	movf	Lcd_Set_Cursor@z^0,w,c
 14905  0056EA  EC90  F02E         	call	_Lcd_Cmd
 14906  0056EE                     
 14907                           ;fs_lcd.c: 71:       Lcd_Cmd(y);
 14908  0056EE  5007               	movf	Lcd_Set_Cursor@y^0,w,c
 14909  0056F0  EC90  F02E         	call	_Lcd_Cmd
 14910                           
 14911                           ;fs_lcd.c: 72:    }
 14912  0056F4  EF94  F02B         	goto	l116
 14913  0056F8                     l5719:
 14914  0056F8  0E02               	movlw	2
 14915  0056FA  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
 14916  0056FC  A4D8               	btfss	status,2,c
 14917  0056FE  EF83  F02B         	goto	u6891
 14918  005702  EF85  F02B         	goto	u6890
 14919  005706                     u6891:
 14920  005706  EF94  F02B         	goto	l116
 14921  00570A                     u6890:
 14922  00570A                     
 14923                           ;fs_lcd.c: 74:    {;fs_lcd.c: 75:       temp = 0xC0 + b - 1;
 14924  00570A  5004               	movf	Lcd_Set_Cursor@b^0,w,c
 14925  00570C  0FBF               	addlw	191
 14926  00570E  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
 14927                           
 14928                           ;fs_lcd.c: 76:       z = temp>>4;
 14929  005710  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
 14930  005712  0B0F               	andlw	15
 14931  005714  6E06               	movwf	Lcd_Set_Cursor@z^0,c
 14932                           
 14933                           ;fs_lcd.c: 77:       y = temp & 0x0F;
 14934  005716  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
 14935  005718  0B0F               	andlw	15
 14936  00571A  6E07               	movwf	Lcd_Set_Cursor@y^0,c
 14937  00571C                     
 14938                           ;fs_lcd.c: 78:       Lcd_Cmd(z);
 14939  00571C  5006               	movf	Lcd_Set_Cursor@z^0,w,c
 14940  00571E  EC90  F02E         	call	_Lcd_Cmd
 14941  005722                     
 14942                           ;fs_lcd.c: 79:       Lcd_Cmd(y);
 14943  005722  5007               	movf	Lcd_Set_Cursor@y^0,w,c
 14944  005724  EC90  F02E         	call	_Lcd_Cmd
 14945  005728                     l116:
 14946  005728  0012               	return		;funcret
 14947  00572A                     __end_of_Lcd_Set_Cursor:
 14948                           	callstack 0
 14949                           
 14950 ;; *************** function _buttonControlFlags *****************
 14951 ;; Defined at:
 14952 ;;		line 79 in file "fs_menu_controller.c"
 14953 ;; Parameters:    Size  Location     Type
 14954 ;;		None
 14955 ;; Auto vars:     Size  Location     Type
 14956 ;;		None
 14957 ;; Return value:  Size  Location     Type
 14958 ;;                  1    wreg      void 
 14959 ;; Registers used:
 14960 ;;		wreg, status,2, status,0
 14961 ;; Tracked objects:
 14962 ;;		On entry : 0/0
 14963 ;;		On exit  : 0/0
 14964 ;;		Unchanged: 0/0
 14965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14966 ;;      Params:         0       0       0       0       0       0       0
 14967 ;;      Locals:         0       0       0       0       0       0       0
 14968 ;;      Temps:          0       0       0       0       0       0       0
 14969 ;;      Totals:         0       0       0       0       0       0       0
 14970 ;;Total ram usage:        0 bytes
 14971 ;; Hardware stack levels used:    1
 14972 ;; Hardware stack levels required when called:    1
 14973 ;; This function calls:
 14974 ;;		Nothing
 14975 ;; This function is called by:
 14976 ;;		_menuControl
 14977 ;; This function uses a non-reentrant model
 14978 ;;
 14979                           
 14980                           	psect	text65
 14981  003814                     __ptext65:
 14982                           	callstack 0
 14983  003814                     _buttonControlFlags:
 14984                           	callstack 28
 14985  003814                     
 14986                           ;fs_menu_controller.c: 82:     if ((button_bounce_controller.menu == 0) && (PORTBbits.RB
      +                          7 == 0))
 14987  003814  0101               	movlb	1	; () banked
 14988  003816  51BD               	movf	_button_bounce_controller& (0+255),w,b
 14989  003818  A4D8               	btfss	status,2,c
 14990  00381A  EF11  F01C         	goto	u7561
 14991  00381E  EF13  F01C         	goto	u7560
 14992  003822                     u7561:
 14993  003822  EF1E  F01C         	goto	l6129
 14994  003826                     u7560:
 14995  003826                     
 14996                           ; BSR set to: 1
 14997  003826  BE81               	btfsc	129,7,c	;volatile
 14998  003828  EF18  F01C         	goto	u7571
 14999  00382C  EF1A  F01C         	goto	u7570
 15000  003830                     u7571:
 15001  003830  EF1E  F01C         	goto	l6129
 15002  003834                     u7570:
 15003  003834                     
 15004                           ; BSR set to: 1
 15005                           ;fs_menu_controller.c: 83:     {;fs_menu_controller.c: 84:         button_bounce_control
      +                          ler.menu = 1;
 15006  003834  0E01               	movlw	1
 15007  003836  6FBD               	movwf	_button_bounce_controller& (0+255),b
 15008                           
 15009                           ;fs_menu_controller.c: 85:         menu_flags.menu_input_flag = 1;
 15010  003838  0E01               	movlw	1
 15011  00383A  6FB7               	movwf	_menu_flags& (0+255),b
 15012  00383C                     l6129:
 15013                           
 15014                           ; BSR set to: 1
 15015                           ;fs_menu_controller.c: 88:     if ((PORTBbits.RB7 == 1) && (button_bounce_controller.men
      +                          u == 1))
 15016  00383C  AE81               	btfss	129,7,c	;volatile
 15017  00383E  EF23  F01C         	goto	u7581
 15018  003842  EF25  F01C         	goto	u7580
 15019  003846                     u7581:
 15020  003846  EF31  F01C         	goto	l336
 15021  00384A                     u7580:
 15022  00384A                     
 15023                           ; BSR set to: 1
 15024  00384A  05BD               	decf	_button_bounce_controller& (0+255),w,b
 15025  00384C  A4D8               	btfss	status,2,c
 15026  00384E  EF2B  F01C         	goto	u7591
 15027  003852  EF2D  F01C         	goto	u7590
 15028  003856                     u7591:
 15029  003856  EF31  F01C         	goto	l336
 15030  00385A                     u7590:
 15031  00385A                     
 15032                           ; BSR set to: 1
 15033                           ;fs_menu_controller.c: 89:     {;fs_menu_controller.c: 90:         button_bounce_control
      +                          ler.menu = 0;
 15034  00385A  0E00               	movlw	0
 15035  00385C  6FBD               	movwf	_button_bounce_controller& (0+255),b
 15036                           
 15037                           ;fs_menu_controller.c: 91:         menu_flags.menu_input_flag = 0;
 15038  00385E  0E00               	movlw	0
 15039  003860  6FB7               	movwf	_menu_flags& (0+255),b
 15040  003862                     l336:
 15041                           
 15042                           ; BSR set to: 1
 15043                           ;fs_menu_controller.c: 95:     if ((button_bounce_controller.pause == 0) && (PORTDbits.R
      +                          D2 == 0))
 15044  003862  51C0               	movf	(_button_bounce_controller+3)& (0+255),w,b
 15045  003864  A4D8               	btfss	status,2,c
 15046  003866  EF37  F01C         	goto	u7601
 15047  00386A  EF39  F01C         	goto	u7600
 15048  00386E                     u7601:
 15049  00386E  EF44  F01C         	goto	l6139
 15050  003872                     u7600:
 15051  003872                     
 15052                           ; BSR set to: 1
 15053  003872  B483               	btfsc	131,2,c	;volatile
 15054  003874  EF3E  F01C         	goto	u7611
 15055  003878  EF40  F01C         	goto	u7610
 15056  00387C                     u7611:
 15057  00387C  EF44  F01C         	goto	l6139
 15058  003880                     u7610:
 15059  003880                     
 15060                           ; BSR set to: 1
 15061                           ;fs_menu_controller.c: 96:     {;fs_menu_controller.c: 97:         button_bounce_control
      +                          ler.pause = 1;
 15062  003880  0E01               	movlw	1
 15063  003882  6FC0               	movwf	(_button_bounce_controller+3)& (0+255),b
 15064                           
 15065                           ;fs_menu_controller.c: 98:         menu_flags.menu_pause_flag = 1;
 15066  003884  0E01               	movlw	1
 15067  003886  6FBA               	movwf	(_menu_flags+3)& (0+255),b
 15068  003888                     l6139:
 15069                           
 15070                           ; BSR set to: 1
 15071                           ;fs_menu_controller.c: 100:     if ((PORTDbits.RD2 == 1) && (button_bounce_controller.pa
      +                          use == 1))
 15072  003888  A483               	btfss	131,2,c	;volatile
 15073  00388A  EF49  F01C         	goto	u7621
 15074  00388E  EF4B  F01C         	goto	u7620
 15075  003892                     u7621:
 15076  003892  EF57  F01C         	goto	l338
 15077  003896                     u7620:
 15078  003896                     
 15079                           ; BSR set to: 1
 15080  003896  05C0               	decf	(_button_bounce_controller+3)& (0+255),w,b
 15081  003898  A4D8               	btfss	status,2,c
 15082  00389A  EF51  F01C         	goto	u7631
 15083  00389E  EF53  F01C         	goto	u7630
 15084  0038A2                     u7631:
 15085  0038A2  EF57  F01C         	goto	l338
 15086  0038A6                     u7630:
 15087  0038A6                     
 15088                           ; BSR set to: 1
 15089                           ;fs_menu_controller.c: 101:     {;fs_menu_controller.c: 102:         button_bounce_contr
      +                          oller.pause = 0;
 15090  0038A6  0E00               	movlw	0
 15091  0038A8  6FC0               	movwf	(_button_bounce_controller+3)& (0+255),b
 15092                           
 15093                           ;fs_menu_controller.c: 103:         menu_flags.menu_pause_flag = 0;
 15094  0038AA  0E00               	movlw	0
 15095  0038AC  6FBA               	movwf	(_menu_flags+3)& (0+255),b
 15096  0038AE                     l338:
 15097                           
 15098                           ; BSR set to: 1
 15099                           ;fs_menu_controller.c: 107:     if ((button_bounce_controller.start == 0) && (PORTDbits.
      +                          RD0 == 0))
 15100  0038AE  51BE               	movf	(_button_bounce_controller+1)& (0+255),w,b
 15101  0038B0  A4D8               	btfss	status,2,c
 15102  0038B2  EF5D  F01C         	goto	u7641
 15103  0038B6  EF5F  F01C         	goto	u7640
 15104  0038BA                     u7641:
 15105  0038BA  EF6A  F01C         	goto	l6149
 15106  0038BE                     u7640:
 15107  0038BE                     
 15108                           ; BSR set to: 1
 15109  0038BE  B083               	btfsc	131,0,c	;volatile
 15110  0038C0  EF64  F01C         	goto	u7651
 15111  0038C4  EF66  F01C         	goto	u7650
 15112  0038C8                     u7651:
 15113  0038C8  EF6A  F01C         	goto	l6149
 15114  0038CC                     u7650:
 15115  0038CC                     
 15116                           ; BSR set to: 1
 15117                           ;fs_menu_controller.c: 108:     {;fs_menu_controller.c: 109:         button_bounce_contr
      +                          oller.start = 1;
 15118  0038CC  0E01               	movlw	1
 15119  0038CE  6FBE               	movwf	(_button_bounce_controller+1)& (0+255),b
 15120                           
 15121                           ;fs_menu_controller.c: 110:         menu_flags.menu_start_flag = 1;
 15122  0038D0  0E01               	movlw	1
 15123  0038D2  6FB8               	movwf	(_menu_flags+1)& (0+255),b
 15124  0038D4                     l6149:
 15125                           
 15126                           ; BSR set to: 1
 15127                           ;fs_menu_controller.c: 112:     if ((PORTDbits.RD0 == 1) && (button_bounce_controller.st
      +                          art == 1))
 15128  0038D4  A083               	btfss	131,0,c	;volatile
 15129  0038D6  EF6F  F01C         	goto	u7661
 15130  0038DA  EF71  F01C         	goto	u7660
 15131  0038DE                     u7661:
 15132  0038DE  EF7D  F01C         	goto	l340
 15133  0038E2                     u7660:
 15134  0038E2                     
 15135                           ; BSR set to: 1
 15136  0038E2  05BE               	decf	(_button_bounce_controller+1)& (0+255),w,b
 15137  0038E4  A4D8               	btfss	status,2,c
 15138  0038E6  EF77  F01C         	goto	u7671
 15139  0038EA  EF79  F01C         	goto	u7670
 15140  0038EE                     u7671:
 15141  0038EE  EF7D  F01C         	goto	l340
 15142  0038F2                     u7670:
 15143  0038F2                     
 15144                           ; BSR set to: 1
 15145                           ;fs_menu_controller.c: 113:     {;fs_menu_controller.c: 114:         button_bounce_contr
      +                          oller.start = 0;
 15146  0038F2  0E00               	movlw	0
 15147  0038F4  6FBE               	movwf	(_button_bounce_controller+1)& (0+255),b
 15148                           
 15149                           ;fs_menu_controller.c: 115:         menu_flags.menu_start_flag = 0;
 15150  0038F6  0E00               	movlw	0
 15151  0038F8  6FB8               	movwf	(_menu_flags+1)& (0+255),b
 15152  0038FA                     l340:
 15153                           
 15154                           ; BSR set to: 1
 15155                           ;fs_menu_controller.c: 119:     if ((button_bounce_controller.stop == 0) && (PORTDbits.R
      +                          D1 == 0))
 15156  0038FA  51BF               	movf	(_button_bounce_controller+2)& (0+255),w,b
 15157  0038FC  A4D8               	btfss	status,2,c
 15158  0038FE  EF83  F01C         	goto	u7681
 15159  003902  EF85  F01C         	goto	u7680
 15160  003906                     u7681:
 15161  003906  EF90  F01C         	goto	l6159
 15162  00390A                     u7680:
 15163  00390A                     
 15164                           ; BSR set to: 1
 15165  00390A  B283               	btfsc	131,1,c	;volatile
 15166  00390C  EF8A  F01C         	goto	u7691
 15167  003910  EF8C  F01C         	goto	u7690
 15168  003914                     u7691:
 15169  003914  EF90  F01C         	goto	l6159
 15170  003918                     u7690:
 15171  003918                     
 15172                           ; BSR set to: 1
 15173                           ;fs_menu_controller.c: 120:     {;fs_menu_controller.c: 121:         button_bounce_contr
      +                          oller.stop = 1;
 15174  003918  0E01               	movlw	1
 15175  00391A  6FBF               	movwf	(_button_bounce_controller+2)& (0+255),b
 15176                           
 15177                           ;fs_menu_controller.c: 122:         menu_flags.menu_stop_flag = 1;
 15178  00391C  0E01               	movlw	1
 15179  00391E  6FB9               	movwf	(_menu_flags+2)& (0+255),b
 15180  003920                     l6159:
 15181                           
 15182                           ; BSR set to: 1
 15183                           ;fs_menu_controller.c: 124:     if ((PORTDbits.RD1 == 1) && (button_bounce_controller.st
      +                          op == 1))
 15184  003920  A283               	btfss	131,1,c	;volatile
 15185  003922  EF95  F01C         	goto	u7701
 15186  003926  EF97  F01C         	goto	u7700
 15187  00392A                     u7701:
 15188  00392A  EFA3  F01C         	goto	l342
 15189  00392E                     u7700:
 15190  00392E                     
 15191                           ; BSR set to: 1
 15192  00392E  05BF               	decf	(_button_bounce_controller+2)& (0+255),w,b
 15193  003930  A4D8               	btfss	status,2,c
 15194  003932  EF9D  F01C         	goto	u7711
 15195  003936  EF9F  F01C         	goto	u7710
 15196  00393A                     u7711:
 15197  00393A  EFA3  F01C         	goto	l342
 15198  00393E                     u7710:
 15199  00393E                     
 15200                           ; BSR set to: 1
 15201                           ;fs_menu_controller.c: 125:     {;fs_menu_controller.c: 126:         button_bounce_contr
      +                          oller.stop = 0;
 15202  00393E  0E00               	movlw	0
 15203  003940  6FBF               	movwf	(_button_bounce_controller+2)& (0+255),b
 15204                           
 15205                           ;fs_menu_controller.c: 127:         menu_flags.menu_stop_flag = 0;
 15206  003942  0E00               	movlw	0
 15207  003944  6FB9               	movwf	(_menu_flags+2)& (0+255),b
 15208  003946                     l342:
 15209                           
 15210                           ; BSR set to: 1
 15211                           ;fs_menu_controller.c: 131:     if ((button_bounce_controller.increase == 0) && (PORTBbi
      +                          ts.RB6 == 0))
 15212  003946  51C2               	movf	(_button_bounce_controller+5)& (0+255),w,b
 15213  003948  A4D8               	btfss	status,2,c
 15214  00394A  EFA9  F01C         	goto	u7721
 15215  00394E  EFAB  F01C         	goto	u7720
 15216  003952                     u7721:
 15217  003952  EFB6  F01C         	goto	l6169
 15218  003956                     u7720:
 15219  003956                     
 15220                           ; BSR set to: 1
 15221  003956  BC81               	btfsc	129,6,c	;volatile
 15222  003958  EFB0  F01C         	goto	u7731
 15223  00395C  EFB2  F01C         	goto	u7730
 15224  003960                     u7731:
 15225  003960  EFB6  F01C         	goto	l6169
 15226  003964                     u7730:
 15227  003964                     
 15228                           ; BSR set to: 1
 15229                           ;fs_menu_controller.c: 132:     {;fs_menu_controller.c: 133:         button_bounce_contr
      +                          oller.increase = 1;
 15230  003964  0E01               	movlw	1
 15231  003966  6FC2               	movwf	(_button_bounce_controller+5)& (0+255),b
 15232                           
 15233                           ;fs_menu_controller.c: 134:         menu_flags.menu_increase_flag = 1;
 15234  003968  0E01               	movlw	1
 15235  00396A  6FBB               	movwf	(_menu_flags+4)& (0+255),b
 15236  00396C                     l6169:
 15237                           
 15238                           ; BSR set to: 1
 15239                           ;fs_menu_controller.c: 136:     if ((PORTBbits.RB6 == 1) && (button_bounce_controller.in
      +                          crease == 1))
 15240  00396C  AC81               	btfss	129,6,c	;volatile
 15241  00396E  EFBB  F01C         	goto	u7741
 15242  003972  EFBD  F01C         	goto	u7740
 15243  003976                     u7741:
 15244  003976  EFC9  F01C         	goto	l344
 15245  00397A                     u7740:
 15246  00397A                     
 15247                           ; BSR set to: 1
 15248  00397A  05C2               	decf	(_button_bounce_controller+5)& (0+255),w,b
 15249  00397C  A4D8               	btfss	status,2,c
 15250  00397E  EFC3  F01C         	goto	u7751
 15251  003982  EFC5  F01C         	goto	u7750
 15252  003986                     u7751:
 15253  003986  EFC9  F01C         	goto	l344
 15254  00398A                     u7750:
 15255  00398A                     
 15256                           ; BSR set to: 1
 15257                           ;fs_menu_controller.c: 137:     {;fs_menu_controller.c: 138:         button_bounce_contr
      +                          oller.increase = 0;
 15258  00398A  0E00               	movlw	0
 15259  00398C  6FC2               	movwf	(_button_bounce_controller+5)& (0+255),b
 15260                           
 15261                           ;fs_menu_controller.c: 139:         menu_flags.menu_increase_flag = 0;
 15262  00398E  0E00               	movlw	0
 15263  003990  6FBB               	movwf	(_menu_flags+4)& (0+255),b
 15264  003992                     l344:
 15265                           
 15266                           ; BSR set to: 1
 15267                           ;fs_menu_controller.c: 143:     if ((button_bounce_controller.decrease == 0) && (PORTDbi
      +                          ts.RD4 == 0))
 15268  003992  51C1               	movf	(_button_bounce_controller+4)& (0+255),w,b
 15269  003994  A4D8               	btfss	status,2,c
 15270  003996  EFCF  F01C         	goto	u7761
 15271  00399A  EFD1  F01C         	goto	u7760
 15272  00399E                     u7761:
 15273  00399E  EFDC  F01C         	goto	l6179
 15274  0039A2                     u7760:
 15275  0039A2                     
 15276                           ; BSR set to: 1
 15277  0039A2  B883               	btfsc	131,4,c	;volatile
 15278  0039A4  EFD6  F01C         	goto	u7771
 15279  0039A8  EFD8  F01C         	goto	u7770
 15280  0039AC                     u7771:
 15281  0039AC  EFDC  F01C         	goto	l6179
 15282  0039B0                     u7770:
 15283  0039B0                     
 15284                           ; BSR set to: 1
 15285                           ;fs_menu_controller.c: 144:     {;fs_menu_controller.c: 145:         button_bounce_contr
      +                          oller.decrease = 1;
 15286  0039B0  0E01               	movlw	1
 15287  0039B2  6FC1               	movwf	(_button_bounce_controller+4)& (0+255),b
 15288                           
 15289                           ;fs_menu_controller.c: 146:         menu_flags.menu_decrease_flag = 1;
 15290  0039B4  0E01               	movlw	1
 15291  0039B6  6FBC               	movwf	(_menu_flags+5)& (0+255),b
 15292  0039B8                     l6179:
 15293                           
 15294                           ; BSR set to: 1
 15295                           ;fs_menu_controller.c: 148:     if ((PORTDbits.RD4 == 1) && (button_bounce_controller.de
      +                          crease == 1))
 15296  0039B8  A883               	btfss	131,4,c	;volatile
 15297  0039BA  EFE1  F01C         	goto	u7781
 15298  0039BE  EFE3  F01C         	goto	u7780
 15299  0039C2                     u7781:
 15300  0039C2  EFEF  F01C         	goto	l347
 15301  0039C6                     u7780:
 15302  0039C6                     
 15303                           ; BSR set to: 1
 15304  0039C6  05C1               	decf	(_button_bounce_controller+4)& (0+255),w,b
 15305  0039C8  A4D8               	btfss	status,2,c
 15306  0039CA  EFE9  F01C         	goto	u7791
 15307  0039CE  EFEB  F01C         	goto	u7790
 15308  0039D2                     u7791:
 15309  0039D2  EFEF  F01C         	goto	l347
 15310  0039D6                     u7790:
 15311  0039D6                     
 15312                           ; BSR set to: 1
 15313                           ;fs_menu_controller.c: 149:     {;fs_menu_controller.c: 150:         button_bounce_contr
      +                          oller.decrease = 0;
 15314  0039D6  0E00               	movlw	0
 15315  0039D8  6FC1               	movwf	(_button_bounce_controller+4)& (0+255),b
 15316                           
 15317                           ;fs_menu_controller.c: 151:         menu_flags.menu_decrease_flag = 0;
 15318  0039DA  0E00               	movlw	0
 15319  0039DC  6FBC               	movwf	(_menu_flags+5)& (0+255),b
 15320  0039DE                     l347:
 15321                           
 15322                           ; BSR set to: 1
 15323  0039DE  0012               	return		;funcret
 15324  0039E0                     __end_of_buttonControlFlags:
 15325                           	callstack 0
 15326                           
 15327 ;; *************** function _mcu_init *****************
 15328 ;; Defined at:
 15329 ;;		line 42 in file "fs_mcu.c"
 15330 ;; Parameters:    Size  Location     Type
 15331 ;;		None
 15332 ;; Auto vars:     Size  Location     Type
 15333 ;;		None
 15334 ;; Return value:  Size  Location     Type
 15335 ;;                  1    wreg      void 
 15336 ;; Registers used:
 15337 ;;		wreg, status,2
 15338 ;; Tracked objects:
 15339 ;;		On entry : 0/0
 15340 ;;		On exit  : 0/0
 15341 ;;		Unchanged: 0/0
 15342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15343 ;;      Params:         0       0       0       0       0       0       0
 15344 ;;      Locals:         0       0       0       0       0       0       0
 15345 ;;      Temps:          0       0       0       0       0       0       0
 15346 ;;      Totals:         0       0       0       0       0       0       0
 15347 ;;Total ram usage:        0 bytes
 15348 ;; Hardware stack levels used:    1
 15349 ;; Hardware stack levels required when called:    1
 15350 ;; This function calls:
 15351 ;;		Nothing
 15352 ;; This function is called by:
 15353 ;;		_main
 15354 ;; This function uses a non-reentrant model
 15355 ;;
 15356                           
 15357                           	psect	text66
 15358  005D58                     __ptext66:
 15359                           	callstack 0
 15360  005D58                     _mcu_init:
 15361                           	callstack 29
 15362  005D58                     
 15363                           ;fs_mcu.c: 44:    OSCCONbits.IRCF = 0b111;
 15364  005D58  0E70               	movlw	112
 15365  005D5A  12D3               	iorwf	211,f,c	;volatile
 15366  005D5C                     
 15367                           ;fs_mcu.c: 45:    OSCTUNEbits.PLLEN = 0b1;
 15368  005D5C  8C9B               	bsf	155,6,c	;volatile
 15369  005D5E                     l247:
 15370  005D5E  A4D3               	btfss	211,2,c	;volatile
 15371  005D60  EFB4  F02E         	goto	u7801
 15372  005D64  EFB6  F02E         	goto	u7800
 15373  005D68                     u7801:
 15374  005D68  EFAF  F02E         	goto	l247
 15375  005D6C                     u7800:
 15376  005D6C  0012               	return		;funcret
 15377  005D6E                     __end_of_mcu_init:
 15378                           	callstack 0
 15379                           
 15380 ;; *************** function _lcd_init *****************
 15381 ;; Defined at:
 15382 ;;		line 88 in file "fs_lcd.c"
 15383 ;; Parameters:    Size  Location     Type
 15384 ;;		None
 15385 ;; Auto vars:     Size  Location     Type
 15386 ;;		None
 15387 ;; Return value:  Size  Location     Type
 15388 ;;                  1    wreg      void 
 15389 ;; Registers used:
 15390 ;;		wreg, status,2, cstack
 15391 ;; Tracked objects:
 15392 ;;		On entry : 0/0
 15393 ;;		On exit  : 0/0
 15394 ;;		Unchanged: 0/0
 15395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15396 ;;      Params:         0       0       0       0       0       0       0
 15397 ;;      Locals:         0       0       0       0       0       0       0
 15398 ;;      Temps:          2       0       0       0       0       0       0
 15399 ;;      Totals:         2       0       0       0       0       0       0
 15400 ;;Total ram usage:        2 bytes
 15401 ;; Hardware stack levels used:    1
 15402 ;; Hardware stack levels required when called:    3
 15403 ;; This function calls:
 15404 ;;		_Lcd_Cmd
 15405 ;;		_Lcd_Port
 15406 ;; This function is called by:
 15407 ;;		_main
 15408 ;; This function uses a non-reentrant model
 15409 ;;
 15410                           
 15411                           	psect	text67
 15412  005372                     __ptext67:
 15413                           	callstack 0
 15414  005372                     _lcd_init:
 15415                           	callstack 27
 15416  005372                     
 15417                           ;fs_lcd.c: 90:     TRISDbits.RD6 = 0;
 15418  005372  9C95               	bcf	149,6,c	;volatile
 15419                           
 15420                           ;fs_lcd.c: 91:     ANSELDbits.ANSD6 = 0;
 15421  005374  010F               	movlb	15	; () banked
 15422  005376  9D3B               	bcf	59,6,b	;volatile
 15423                           
 15424                           ;fs_lcd.c: 93:     TRISDbits.RD7 = 0;
 15425  005378  9E95               	bcf	149,7,c	;volatile
 15426                           
 15427                           ;fs_lcd.c: 94:     ANSELDbits.ANSD7 = 0;
 15428  00537A  9F3B               	bcf	59,7,b	;volatile
 15429                           
 15430                           ;fs_lcd.c: 96:     TRISBbits.RB0 = 0;
 15431  00537C  9093               	bcf	147,0,c	;volatile
 15432                           
 15433                           ;fs_lcd.c: 97:     ANSELBbits.ANSB0 = 0;
 15434  00537E  9139               	bcf	57,0,b	;volatile
 15435                           
 15436                           ;fs_lcd.c: 99:     TRISBbits.RB1 = 0;
 15437  005380  9293               	bcf	147,1,c	;volatile
 15438                           
 15439                           ;fs_lcd.c: 100:     ANSELBbits.ANSB1 = 0;
 15440  005382  9339               	bcf	57,1,b	;volatile
 15441                           
 15442                           ;fs_lcd.c: 102:     TRISBbits.RB2 = 0;
 15443  005384  9493               	bcf	147,2,c	;volatile
 15444                           
 15445                           ;fs_lcd.c: 103:     ANSELBbits.ANSB2 = 0;
 15446  005386  9539               	bcf	57,2,b	;volatile
 15447                           
 15448                           ;fs_lcd.c: 105:     TRISBbits.RB3 = 0;
 15449  005388  9693               	bcf	147,3,c	;volatile
 15450                           
 15451                           ;fs_lcd.c: 106:     ANSELBbits.ANSB3 = 0;
 15452  00538A  9739               	bcf	57,3,b	;volatile
 15453  00538C                     
 15454                           ; BSR set to: 15
 15455                           ;fs_lcd.c: 109:     Lcd_Port(0x00);
 15456  00538C  0E00               	movlw	0
 15457  00538E  ECF3  F02B         	call	_Lcd_Port
 15458  005392                     
 15459                           ;fs_lcd.c: 110:      _delay((unsigned long)((20)*(64000000UL/4000.0)));
 15460  005392  0E02               	movlw	2
 15461  005394  6E05               	movwf	(??_lcd_init+1)^0,c
 15462  005396  0EA0               	movlw	160
 15463  005398  6E04               	movwf	??_lcd_init^0,c
 15464  00539A  0E92               	movlw	146
 15465  00539C                     u8007:
 15466  00539C  2EE8               	decfsz	wreg,f,c
 15467  00539E  D7FE               	bra	u8007
 15468  0053A0  2E04               	decfsz	??_lcd_init^0,f,c
 15469  0053A2  D7FC               	bra	u8007
 15470  0053A4  2E05               	decfsz	(??_lcd_init+1)^0,f,c
 15471  0053A6  D7FA               	bra	u8007
 15472  0053A8  D000               	nop2	
 15473  0053AA                     
 15474                           ;fs_lcd.c: 111:     Lcd_Cmd(0x03);
 15475  0053AA  0E03               	movlw	3
 15476  0053AC  EC90  F02E         	call	_Lcd_Cmd
 15477  0053B0                     
 15478                           ;fs_lcd.c: 112:      _delay((unsigned long)((5)*(64000000UL/4000.0)));
 15479  0053B0  0E68               	movlw	104
 15480  0053B2  6E04               	movwf	??_lcd_init^0,c
 15481  0053B4  0EE4               	movlw	228
 15482  0053B6                     u8017:
 15483  0053B6  2EE8               	decfsz	wreg,f,c
 15484  0053B8  D7FE               	bra	u8017
 15485  0053BA  2E04               	decfsz	??_lcd_init^0,f,c
 15486  0053BC  D7FC               	bra	u8017
 15487  0053BE  D000               	nop2	
 15488  0053C0                     
 15489                           ;fs_lcd.c: 113:     Lcd_Cmd(0x03);
 15490  0053C0  0E03               	movlw	3
 15491  0053C2  EC90  F02E         	call	_Lcd_Cmd
 15492  0053C6                     
 15493                           ;fs_lcd.c: 114:      _delay((unsigned long)((11)*(64000000UL/4000.0)));
 15494  0053C6  0EE5               	movlw	229
 15495  0053C8  6E04               	movwf	??_lcd_init^0,c
 15496  0053CA  0E91               	movlw	145
 15497  0053CC                     u8027:
 15498  0053CC  2EE8               	decfsz	wreg,f,c
 15499  0053CE  D7FE               	bra	u8027
 15500  0053D0  2E04               	decfsz	??_lcd_init^0,f,c
 15501  0053D2  D7FC               	bra	u8027
 15502  0053D4  F000               	nop	
 15503  0053D6                     
 15504                           ;fs_lcd.c: 115:     Lcd_Cmd(0x03);
 15505  0053D6  0E03               	movlw	3
 15506  0053D8  EC90  F02E         	call	_Lcd_Cmd
 15507  0053DC                     
 15508                           ;fs_lcd.c: 116:     Lcd_Cmd(0x02);
 15509  0053DC  0E02               	movlw	2
 15510  0053DE  EC90  F02E         	call	_Lcd_Cmd
 15511  0053E2                     
 15512                           ;fs_lcd.c: 117:     Lcd_Cmd(0x02);
 15513  0053E2  0E02               	movlw	2
 15514  0053E4  EC90  F02E         	call	_Lcd_Cmd
 15515  0053E8                     
 15516                           ;fs_lcd.c: 118:     Lcd_Cmd(0x08);
 15517  0053E8  0E08               	movlw	8
 15518  0053EA  EC90  F02E         	call	_Lcd_Cmd
 15519  0053EE                     
 15520                           ;fs_lcd.c: 119:     Lcd_Cmd(0x00);
 15521  0053EE  0E00               	movlw	0
 15522  0053F0  EC90  F02E         	call	_Lcd_Cmd
 15523  0053F4                     
 15524                           ;fs_lcd.c: 120:     Lcd_Cmd(0x0C);
 15525  0053F4  0E0C               	movlw	12
 15526  0053F6  EC90  F02E         	call	_Lcd_Cmd
 15527  0053FA                     
 15528                           ;fs_lcd.c: 121:     Lcd_Cmd(0x00);
 15529  0053FA  0E00               	movlw	0
 15530  0053FC  EC90  F02E         	call	_Lcd_Cmd
 15531  005400                     
 15532                           ;fs_lcd.c: 122:     Lcd_Cmd(0x06);
 15533  005400  0E06               	movlw	6
 15534  005402  EC90  F02E         	call	_Lcd_Cmd
 15535  005406  0012               	return		;funcret
 15536  005408                     __end_of_lcd_init:
 15537                           	callstack 0
 15538                           
 15539 ;; *************** function _adcInit *****************
 15540 ;; Defined at:
 15541 ;;		line 53 in file "fs_adc.c"
 15542 ;; Parameters:    Size  Location     Type
 15543 ;;		None
 15544 ;; Auto vars:     Size  Location     Type
 15545 ;;		None
 15546 ;; Return value:  Size  Location     Type
 15547 ;;                  1    wreg      void 
 15548 ;; Registers used:
 15549 ;;		wreg, status,2
 15550 ;; Tracked objects:
 15551 ;;		On entry : 0/0
 15552 ;;		On exit  : 0/0
 15553 ;;		Unchanged: 0/0
 15554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15555 ;;      Params:         0       0       0       0       0       0       0
 15556 ;;      Locals:         0       0       0       0       0       0       0
 15557 ;;      Temps:          0       0       0       0       0       0       0
 15558 ;;      Totals:         0       0       0       0       0       0       0
 15559 ;;Total ram usage:        0 bytes
 15560 ;; Hardware stack levels used:    1
 15561 ;; Hardware stack levels required when called:    1
 15562 ;; This function calls:
 15563 ;;		Nothing
 15564 ;; This function is called by:
 15565 ;;		_main
 15566 ;; This function uses a non-reentrant model
 15567 ;;
 15568                           
 15569                           	psect	text68
 15570  005A44                     __ptext68:
 15571                           	callstack 0
 15572  005A44                     _adcInit:
 15573                           	callstack 29
 15574  005A44                     
 15575                           ;fs_adc.c: 55:     TRISAbits.TRISA0 = 1;
 15576  005A44  8092               	bsf	146,0,c	;volatile
 15577                           
 15578                           ;fs_adc.c: 56:     ANSELAbits.ANSA0 = 1;
 15579  005A46  010F               	movlb	15	; () banked
 15580  005A48  8138               	bsf	56,0,b	;volatile
 15581                           
 15582                           ;fs_adc.c: 58:     TRISAbits.TRISA1 = 1;
 15583  005A4A  8292               	bsf	146,1,c	;volatile
 15584                           
 15585                           ;fs_adc.c: 59:     ANSELAbits.ANSA1 = 1;
 15586  005A4C  8338               	bsf	56,1,b	;volatile
 15587                           
 15588                           ;fs_adc.c: 61:     TRISAbits.TRISA2 = 1;
 15589  005A4E  8492               	bsf	146,2,c	;volatile
 15590                           
 15591                           ;fs_adc.c: 62:     ANSELAbits.ANSA2 = 1;
 15592  005A50  8538               	bsf	56,2,b	;volatile
 15593                           
 15594                           ;fs_adc.c: 64:     TRISAbits.TRISA3 = 1;
 15595  005A52  8692               	bsf	146,3,c	;volatile
 15596                           
 15597                           ;fs_adc.c: 65:     ANSELAbits.ANSA3 = 1;
 15598  005A54  8738               	bsf	56,3,b	;volatile
 15599                           
 15600                           ;fs_adc.c: 67:     TRISAbits.TRISA5 = 1;
 15601  005A56  8A92               	bsf	146,5,c	;volatile
 15602                           
 15603                           ;fs_adc.c: 68:     ANSELAbits.ANSA5 = 1;
 15604  005A58  8B38               	bsf	56,5,b	;volatile
 15605                           
 15606                           ;fs_adc.c: 70:     TRISEbits.TRISE0 = 1;
 15607  005A5A  8096               	bsf	150,0,c	;volatile
 15608                           
 15609                           ;fs_adc.c: 71:     ANSELEbits.ANSE0 = 1;
 15610  005A5C  813C               	bsf	60,0,b	;volatile
 15611                           
 15612                           ;fs_adc.c: 73:     TRISEbits.TRISE1 = 1;
 15613  005A5E  8296               	bsf	150,1,c	;volatile
 15614                           
 15615                           ;fs_adc.c: 74:     ANSELEbits.ANSE1 = 1;
 15616  005A60  833C               	bsf	60,1,b	;volatile
 15617                           
 15618                           ;fs_adc.c: 76:     TRISEbits.TRISE2 = 1;
 15619  005A62  8496               	bsf	150,2,c	;volatile
 15620                           
 15621                           ;fs_adc.c: 77:     ANSELEbits.ANSE2 = 1;
 15622  005A64  853C               	bsf	60,2,b	;volatile
 15623  005A66                     
 15624                           ; BSR set to: 15
 15625                           ;fs_adc.c: 79:     ADCON0 = 0x01;
 15626  005A66  0E01               	movlw	1
 15627  005A68  6EC2               	movwf	194,c	;volatile
 15628                           
 15629                           ;fs_adc.c: 80:     ADCON1=0x00;
 15630  005A6A  0E00               	movlw	0
 15631  005A6C  6EC1               	movwf	193,c	;volatile
 15632  005A6E                     
 15633                           ; BSR set to: 15
 15634                           ;fs_adc.c: 81:  ADCON2bits.ADFM = 1;
 15635  005A6E  8EC0               	bsf	192,7,c	;volatile
 15636                           
 15637                           ;fs_adc.c: 82:     ADCON2bits.ACQT = 0b010;
 15638  005A70  50C0               	movf	192,w,c	;volatile
 15639  005A72  0BC7               	andlw	-57
 15640  005A74  0910               	iorlw	16
 15641  005A76  6EC0               	movwf	192,c	;volatile
 15642                           
 15643                           ;fs_adc.c: 83:     ADCON2bits.ADCS = 0b110;
 15644  005A78  50C0               	movf	192,w,c	;volatile
 15645  005A7A  0BF8               	andlw	-8
 15646  005A7C  0906               	iorlw	6
 15647  005A7E  6EC0               	movwf	192,c	;volatile
 15648  005A80                     
 15649                           ; BSR set to: 15
 15650  005A80  0012               	return		;funcret
 15651  005A82                     __end_of_adcInit:
 15652                           	callstack 0
 15653                           
 15654 ;; *************** function _PWM_Init *****************
 15655 ;; Defined at:
 15656 ;;		line 17 in file "fs_pwm.c"
 15657 ;; Parameters:    Size  Location     Type
 15658 ;;		None
 15659 ;; Auto vars:     Size  Location     Type
 15660 ;;		None
 15661 ;; Return value:  Size  Location     Type
 15662 ;;                  1    wreg      void 
 15663 ;; Registers used:
 15664 ;;		wreg, status,2
 15665 ;; Tracked objects:
 15666 ;;		On entry : 0/0
 15667 ;;		On exit  : 0/0
 15668 ;;		Unchanged: 0/0
 15669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15670 ;;      Params:         0       0       0       0       0       0       0
 15671 ;;      Locals:         0       0       0       0       0       0       0
 15672 ;;      Temps:          0       0       0       0       0       0       0
 15673 ;;      Totals:         0       0       0       0       0       0       0
 15674 ;;Total ram usage:        0 bytes
 15675 ;; Hardware stack levels used:    1
 15676 ;; Hardware stack levels required when called:    1
 15677 ;; This function calls:
 15678 ;;		Nothing
 15679 ;; This function is called by:
 15680 ;;		_main
 15681 ;; This function uses a non-reentrant model
 15682 ;;
 15683                           
 15684                           	psect	text69
 15685  005C94                     __ptext69:
 15686                           	callstack 0
 15687  005C94                     _PWM_Init:
 15688                           	callstack 29
 15689  005C94                     
 15690                           ;fs_pwm.c: 19:     TRISCbits.RC2 = 0;
 15691  005C94  9494               	bcf	148,2,c	;volatile
 15692                           
 15693                           ;fs_pwm.c: 20:     TRISCbits.RC1 = 0;
 15694  005C96  9294               	bcf	148,1,c	;volatile
 15695  005C98                     
 15696                           ;fs_pwm.c: 23:     CCP1CON = 0b00001100;
 15697  005C98  0E0C               	movlw	12
 15698  005C9A  6EBD               	movwf	189,c	;volatile
 15699                           
 15700                           ;fs_pwm.c: 25:     CCP2CON = 0b00001100;
 15701  005C9C  0E0C               	movlw	12
 15702  005C9E  6E66               	movwf	102,c	;volatile
 15703                           
 15704                           ;fs_pwm.c: 29:     T2CONbits.T2CKPS = 0b01;
 15705  005CA0  50BA               	movf	186,w,c	;volatile
 15706  005CA2  0BFC               	andlw	-4
 15707  005CA4  0901               	iorlw	1
 15708  005CA6  6EBA               	movwf	186,c	;volatile
 15709  005CA8                     
 15710                           ;fs_pwm.c: 30:     T2CONbits.TMR2ON = 1;
 15711  005CA8  84BA               	bsf	186,2,c	;volatile
 15712                           
 15713                           ;fs_pwm.c: 32:     TMR2 = 0;
 15714  005CAA  0E00               	movlw	0
 15715  005CAC  6EBC               	movwf	188,c	;volatile
 15716                           
 15717                           ;fs_pwm.c: 33:     PR2 = 199;
 15718  005CAE  0EC7               	movlw	199
 15719  005CB0  6EBB               	movwf	187,c	;volatile
 15720                           
 15721                           ;fs_pwm.c: 34:     CCPR1L = 0;
 15722  005CB2  0E00               	movlw	0
 15723  005CB4  6EBE               	movwf	190,c	;volatile
 15724                           
 15725                           ;fs_pwm.c: 35:     CCPR2L = 0;
 15726  005CB6  0E00               	movlw	0
 15727  005CB8  6E67               	movwf	103,c	;volatile
 15728  005CBA  0012               	return		;funcret
 15729  005CBC                     __end_of_PWM_Init:
 15730                           	callstack 0
 15731                           
 15732 ;; *************** function _Lcd_Clear *****************
 15733 ;; Defined at:
 15734 ;;		line 51 in file "fs_lcd.c"
 15735 ;; Parameters:    Size  Location     Type
 15736 ;;		None
 15737 ;; Auto vars:     Size  Location     Type
 15738 ;;		None
 15739 ;; Return value:  Size  Location     Type
 15740 ;;                  1    wreg      void 
 15741 ;; Registers used:
 15742 ;;		wreg, status,2, cstack
 15743 ;; Tracked objects:
 15744 ;;		On entry : 0/0
 15745 ;;		On exit  : 0/0
 15746 ;;		Unchanged: 0/0
 15747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15748 ;;      Params:         0       0       0       0       0       0       0
 15749 ;;      Locals:         0       0       0       0       0       0       0
 15750 ;;      Temps:          0       0       0       0       0       0       0
 15751 ;;      Totals:         0       0       0       0       0       0       0
 15752 ;;Total ram usage:        0 bytes
 15753 ;; Hardware stack levels used:    1
 15754 ;; Hardware stack levels required when called:    3
 15755 ;; This function calls:
 15756 ;;		_Lcd_Cmd
 15757 ;; This function is called by:
 15758 ;;		_main
 15759 ;; This function uses a non-reentrant model
 15760 ;;
 15761                           
 15762                           	psect	text70
 15763  005D80                     __ptext70:
 15764                           	callstack 0
 15765  005D80                     _Lcd_Clear:
 15766                           	callstack 27
 15767  005D80                     
 15768                           ;fs_lcd.c: 53:    Lcd_Cmd(0);
 15769  005D80  0E00               	movlw	0
 15770  005D82  EC90  F02E         	call	_Lcd_Cmd
 15771                           
 15772                           ;fs_lcd.c: 54:    Lcd_Cmd(1);
 15773  005D86  0E01               	movlw	1
 15774  005D88  EC90  F02E         	call	_Lcd_Cmd
 15775  005D8C  0012               	return		;funcret
 15776  005D8E                     __end_of_Lcd_Clear:
 15777                           	callstack 0
 15778                           
 15779 ;; *************** function _Lcd_Cmd *****************
 15780 ;; Defined at:
 15781 ;;		line 35 in file "fs_lcd.c"
 15782 ;; Parameters:    Size  Location     Type
 15783 ;;  a               1    wreg     unsigned char 
 15784 ;; Auto vars:     Size  Location     Type
 15785 ;;  a               1    2[COMRAM] unsigned char 
 15786 ;; Return value:  Size  Location     Type
 15787 ;;                  1    wreg      void 
 15788 ;; Registers used:
 15789 ;;		wreg, status,2, cstack
 15790 ;; Tracked objects:
 15791 ;;		On entry : 0/0
 15792 ;;		On exit  : 0/0
 15793 ;;		Unchanged: 0/0
 15794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15795 ;;      Params:         0       0       0       0       0       0       0
 15796 ;;      Locals:         1       0       0       0       0       0       0
 15797 ;;      Temps:          1       0       0       0       0       0       0
 15798 ;;      Totals:         2       0       0       0       0       0       0
 15799 ;;Total ram usage:        2 bytes
 15800 ;; Hardware stack levels used:    1
 15801 ;; Hardware stack levels required when called:    2
 15802 ;; This function calls:
 15803 ;;		_Lcd_Port
 15804 ;; This function is called by:
 15805 ;;		_Lcd_Clear
 15806 ;;		_Lcd_Set_Cursor
 15807 ;;		_lcd_init
 15808 ;;		_Lcd_Shift_Right
 15809 ;;		_Lcd_Shift_Left
 15810 ;; This function uses a non-reentrant model
 15811 ;;
 15812                           
 15813                           	psect	text71
 15814  005D20                     __ptext71:
 15815                           	callstack 0
 15816  005D20                     _Lcd_Cmd:
 15817                           	callstack 24
 15818                           
 15819                           ;incstack = 0
 15820                           ;Lcd_Cmd@a stored from wreg
 15821  005D20  6E03               	movwf	Lcd_Cmd@a^0,c
 15822  005D22                     
 15823                           ;fs_lcd.c: 35: void Lcd_Cmd(char a);fs_lcd.c: 36: {;fs_lcd.c: 37:    PORTDbits.RD6 = 0;
 15824  005D22  9C83               	bcf	131,6,c	;volatile
 15825  005D24                     
 15826                           ;fs_lcd.c: 38:    Lcd_Port(a);
 15827  005D24  5003               	movf	Lcd_Cmd@a^0,w,c
 15828  005D26  ECF3  F02B         	call	_Lcd_Port
 15829  005D2A                     
 15830                           ;fs_lcd.c: 39:    PORTDbits.RD7 = 1;
 15831  005D2A  8E83               	bsf	131,7,c	;volatile
 15832  005D2C                     
 15833                           ;fs_lcd.c: 40:    _delay((unsigned long)((2)*(64000000UL/4000.0)));
 15834  005D2C  0E2A               	movlw	42
 15835  005D2E  6E02               	movwf	??_Lcd_Cmd^0,c
 15836  005D30  0E8E               	movlw	142
 15837  005D32                     u8037:
 15838  005D32  2EE8               	decfsz	wreg,f,c
 15839  005D34  D7FE               	bra	u8037
 15840  005D36  2E02               	decfsz	??_Lcd_Cmd^0,f,c
 15841  005D38  D7FC               	bra	u8037
 15842  005D3A                     
 15843                           ;fs_lcd.c: 41:    PORTDbits.RD7 = 0;
 15844  005D3A  9E83               	bcf	131,7,c	;volatile
 15845  005D3C  0012               	return		;funcret
 15846  005D3E                     __end_of_Lcd_Cmd:
 15847                           	callstack 0
 15848                           
 15849 ;; *************** function _Lcd_Port *****************
 15850 ;; Defined at:
 15851 ;;		line 12 in file "fs_lcd.c"
 15852 ;; Parameters:    Size  Location     Type
 15853 ;;  a               1    wreg     unsigned char 
 15854 ;; Auto vars:     Size  Location     Type
 15855 ;;  a               1    0[COMRAM] unsigned char 
 15856 ;; Return value:  Size  Location     Type
 15857 ;;                  1    wreg      void 
 15858 ;; Registers used:
 15859 ;;		wreg
 15860 ;; Tracked objects:
 15861 ;;		On entry : 0/0
 15862 ;;		On exit  : 0/0
 15863 ;;		Unchanged: 0/0
 15864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15865 ;;      Params:         0       0       0       0       0       0       0
 15866 ;;      Locals:         1       0       0       0       0       0       0
 15867 ;;      Temps:          0       0       0       0       0       0       0
 15868 ;;      Totals:         1       0       0       0       0       0       0
 15869 ;;Total ram usage:        1 bytes
 15870 ;; Hardware stack levels used:    1
 15871 ;; Hardware stack levels required when called:    1
 15872 ;; This function calls:
 15873 ;;		Nothing
 15874 ;; This function is called by:
 15875 ;;		_Lcd_Cmd
 15876 ;;		_lcd_init
 15877 ;;		_Lcd_Write_Char
 15878 ;; This function uses a non-reentrant model
 15879 ;;
 15880                           
 15881                           	psect	text72
 15882  0057E6                     __ptext72:
 15883                           	callstack 0
 15884  0057E6                     _Lcd_Port:
 15885                           	callstack 24
 15886                           
 15887                           ;incstack = 0
 15888                           ;Lcd_Port@a stored from wreg
 15889  0057E6  6E01               	movwf	Lcd_Port@a^0,c
 15890  0057E8                     
 15891                           ;fs_lcd.c: 12: void Lcd_Port(char a);fs_lcd.c: 13: {;fs_lcd.c: 14:    if(a & 1) { PORTBb
      +                          its.RB0 = 1;}
 15892  0057E8  A001               	btfss	Lcd_Port@a^0,0,c
 15893  0057EA  EFF9  F02B         	goto	u6401
 15894  0057EE  EFFB  F02B         	goto	u6400
 15895  0057F2                     u6401:
 15896  0057F2  EFFE  F02B         	goto	l96
 15897  0057F6                     u6400:
 15898  0057F6  8081               	bsf	129,0,c	;volatile
 15899  0057F8  EFFF  F02B         	goto	l5323
 15900  0057FC                     l96:
 15901  0057FC  9081               	bcf	129,0,c	;volatile
 15902  0057FE                     l5323:
 15903                           
 15904                           ;fs_lcd.c: 17:    if(a & 2) { PORTBbits.RB1 = 1;}
 15905  0057FE  A201               	btfss	Lcd_Port@a^0,1,c
 15906  005800  EF04  F02C         	goto	u6411
 15907  005804  EF06  F02C         	goto	u6410
 15908  005808                     u6411:
 15909  005808  EF09  F02C         	goto	l98
 15910  00580C                     u6410:
 15911  00580C  8281               	bsf	129,1,c	;volatile
 15912  00580E  EF0A  F02C         	goto	l5327
 15913  005812                     l98:
 15914  005812  9281               	bcf	129,1,c	;volatile
 15915  005814                     l5327:
 15916                           
 15917                           ;fs_lcd.c: 20:    if(a & 4) {PORTBbits.RB2 = 1;}
 15918  005814  A401               	btfss	Lcd_Port@a^0,2,c
 15919  005816  EF0F  F02C         	goto	u6421
 15920  00581A  EF11  F02C         	goto	u6420
 15921  00581E                     u6421:
 15922  00581E  EF14  F02C         	goto	l100
 15923  005822                     u6420:
 15924  005822  8481               	bsf	129,2,c	;volatile
 15925  005824  EF15  F02C         	goto	l5331
 15926  005828                     l100:
 15927  005828  9481               	bcf	129,2,c	;volatile
 15928  00582A                     l5331:
 15929                           
 15930                           ;fs_lcd.c: 23:    if(a & 8) {PORTBbits.RB3 = 1;}
 15931  00582A  A601               	btfss	Lcd_Port@a^0,3,c
 15932  00582C  EF1A  F02C         	goto	u6431
 15933  005830  EF1C  F02C         	goto	u6430
 15934  005834                     u6431:
 15935  005834  EF1F  F02C         	goto	l102
 15936  005838                     u6430:
 15937  005838  8681               	bsf	129,3,c	;volatile
 15938  00583A  EF20  F02C         	goto	l104
 15939  00583E                     l102:
 15940  00583E  9681               	bcf	129,3,c	;volatile
 15941  005840                     l104:
 15942  005840  0012               	return		;funcret
 15943  005842                     __end_of_Lcd_Port:
 15944                           	callstack 0
 15945                           
 15946 ;; *************** function _TIMER0 *****************
 15947 ;; Defined at:
 15948 ;;		line 33 in file "fs_timer.c"
 15949 ;; Parameters:    Size  Location     Type
 15950 ;;		None
 15951 ;; Auto vars:     Size  Location     Type
 15952 ;;		None
 15953 ;; Return value:  Size  Location     Type
 15954 ;;                  1    wreg      void 
 15955 ;; Registers used:
 15956 ;;		wreg, status,2, status,0
 15957 ;; Tracked objects:
 15958 ;;		On entry : 0/0
 15959 ;;		On exit  : 0/0
 15960 ;;		Unchanged: 0/0
 15961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15962 ;;      Params:         0       0       0       0       0       0       0
 15963 ;;      Locals:         0       0       0       0       0       0       0
 15964 ;;      Temps:          0       0       0       0       0       0       0
 15965 ;;      Totals:         0       0       0       0       0       0       0
 15966 ;;Total ram usage:        0 bytes
 15967 ;; Hardware stack levels used:    1
 15968 ;; This function calls:
 15969 ;;		Nothing
 15970 ;; This function is called by:
 15971 ;;		Interrupt level 2
 15972 ;; This function uses a non-reentrant model
 15973 ;;
 15974                           
 15975                           	psect	intcode
 15976  000008                     __pintcode:
 15977                           	callstack 0
 15978  000008                     _TIMER0:
 15979                           	callstack 19
 15980                           
 15981                           ;incstack = 0
 15982  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15983  00000A                     
 15984                           ;fs_timer.c: 35:     if ((INTCONbits.TMR0IF)&&(INTCONbits.TMR0IE))
 15985  00000A  A4F2               	btfss	242,2,c	;volatile
 15986  00000C  EF0A  F000         	goto	i2u791_41
 15987  000010  EF0C  F000         	goto	i2u791_40
 15988  000014                     i2u791_41:
 15989  000014  EF4B  F000         	goto	i2l542
 15990  000018                     i2u791_40:
 15991  000018  AAF2               	btfss	242,5,c	;volatile
 15992  00001A  EF11  F000         	goto	i2u792_41
 15993  00001E  EF13  F000         	goto	i2u792_40
 15994  000022                     i2u792_41:
 15995  000022  EF4B  F000         	goto	i2l542
 15996  000026                     i2u792_40:
 15997  000026                     
 15998                           ;fs_timer.c: 36:     {;fs_timer.c: 37:         INTCONbits.TMR0IF = 0;
 15999  000026  94F2               	bcf	242,2,c	;volatile
 16000  000028                     
 16001                           ;fs_timer.c: 38:         TMR0H = 0x63;
 16002  000028  0E63               	movlw	99
 16003  00002A  6ED7               	movwf	215,c	;volatile
 16004                           
 16005                           ;fs_timer.c: 39:         TMR0L = 0xC0;
 16006  00002C  0EC0               	movlw	192
 16007  00002E  6ED6               	movwf	214,c	;volatile
 16008  000030                     
 16009                           ;fs_timer.c: 41:         timer_value.adc_conversion_time++;
 16010  000030  0101               	movlb	1	; () banked
 16011  000032  2BB4               	incf	(_timer_value+5)& (0+255),f,b
 16012  000034                     
 16013                           ; BSR set to: 1
 16014                           ;fs_timer.c: 43:         if (startIsClick == 1)
 16015  000034  0100               	movlb	0	; () banked
 16016  000036  05FD               	decf	_startIsClick& (0+255),w,b
 16017  000038  A4D8               	btfss	status,2,c
 16018  00003A  EF21  F000         	goto	i2u793_41
 16019  00003E  EF23  F000         	goto	i2u793_40
 16020  000042                     i2u793_41:
 16021  000042  EF26  F000         	goto	i2l6365
 16022  000046                     i2u793_40:
 16023  000046                     
 16024                           ; BSR set to: 0
 16025                           ;fs_timer.c: 44:         {;fs_timer.c: 45:             timer_value.second_counter++;
 16026  000046  0101               	movlb	1	; () banked
 16027  000048  4BB5               	infsnz	(_timer_value+6)& (0+255),f,b
 16028  00004A  2BB6               	incf	(_timer_value+7)& (0+255),f,b
 16029  00004C                     i2l6365:
 16030                           
 16031                           ;fs_timer.c: 48:         if(button_bounce_controller.menu == 1)
 16032  00004C  0101               	movlb	1	; () banked
 16033  00004E  05BD               	decf	_button_bounce_controller& (0+255),w,b
 16034  000050  A4D8               	btfss	status,2,c
 16035  000052  EF2D  F000         	goto	i2u794_41
 16036  000056  EF2F  F000         	goto	i2u794_40
 16037  00005A                     i2u794_41:
 16038  00005A  EF30  F000         	goto	i2l6369
 16039  00005E                     i2u794_40:
 16040  00005E                     
 16041                           ; BSR set to: 1
 16042                           ;fs_timer.c: 49:         {;fs_timer.c: 50:              timer_value.menu_login_delay++;
 16043  00005E  2BB3               	incf	(_timer_value+4)& (0+255),f,b
 16044  000060                     i2l6369:
 16045                           
 16046                           ; BSR set to: 1
 16047                           ;fs_timer.c: 52:         if(button_bounce_controller.menu == 0)
 16048  000060  51BD               	movf	_button_bounce_controller& (0+255),w,b
 16049  000062  A4D8               	btfss	status,2,c
 16050  000064  EF36  F000         	goto	i2u795_41
 16051  000068  EF38  F000         	goto	i2u795_40
 16052  00006C                     i2u795_41:
 16053  00006C  EF3A  F000         	goto	i2l6373
 16054  000070                     i2u795_40:
 16055  000070                     
 16056                           ; BSR set to: 1
 16057                           ;fs_timer.c: 53:         {;fs_timer.c: 54:              timer_value.menu_login_delay = 0
      +                          ;
 16058  000070  0E00               	movlw	0
 16059  000072  6FB3               	movwf	(_timer_value+4)& (0+255),b
 16060  000074                     i2l6373:
 16061                           
 16062                           ; BSR set to: 1
 16063                           ;fs_timer.c: 57:         if (timer_value.second_counter >= 100)
 16064  000074  51B6               	movf	(_timer_value+7)& (0+255),w,b
 16065  000076  E109               	bnz	i2u796_40
 16066  000078  0E64               	movlw	100
 16067  00007A  5DB5               	subwf	(_timer_value+6)& (0+255),w,b
 16068  00007C  A0D8               	btfss	status,0,c
 16069  00007E  EF43  F000         	goto	i2u796_41
 16070  000082  EF45  F000         	goto	i2u796_40
 16071  000086                     i2u796_41:
 16072  000086  EF4B  F000         	goto	i2l542
 16073  00008A                     i2u796_40:
 16074  00008A                     
 16075                           ; BSR set to: 1
 16076                           ;fs_timer.c: 58:         {;fs_timer.c: 59:             timer_value.second_counter = 0;
 16077  00008A  0E00               	movlw	0
 16078  00008C  6FB6               	movwf	(_timer_value+7)& (0+255),b
 16079  00008E  0E00               	movlw	0
 16080  000090  6FB5               	movwf	(_timer_value+6)& (0+255),b
 16081  000092                     
 16082                           ; BSR set to: 1
 16083                           ;fs_timer.c: 60:             timer_counter_flag.one_second_flag = 1;
 16084  000092  0100               	movlb	0	; () banked
 16085  000094  81FF               	bsf	_timer_counter_flag& (0+255),0,b
 16086  000096                     i2l542:
 16087  000096  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 16088  000098  0011               	retfie		f
 16089  00009A                     __end_of_TIMER0:
 16090                           	callstack 0
 16091                           
 16092                           	psect	rparam
 16093  0000                     
 16094                           	psect	temp
 16095  00005F                     btemp:
 16096                           	callstack 0
 16097  00005F                     	ds	1
 16098  0000                     int$flags	set	btemp
 16099  0000                     wtemp8	set	btemp+1
 16100  0000                     ttemp5	set	btemp+1
 16101  0000                     ttemp6	set	btemp+4
 16102  0000                     ttemp7	set	btemp+8
 16103                           
 16104                           	psect	idloc
 16105                           
 16106                           ;Config register IDLOC0 @ 0x200000
 16107                           ;	unspecified, using default values
 16108  200000                     	org	2097152
 16109  200000  FF                 	db	255
 16110                           
 16111                           ;Config register IDLOC1 @ 0x200001
 16112                           ;	unspecified, using default values
 16113  200001                     	org	2097153
 16114  200001  FF                 	db	255
 16115                           
 16116                           ;Config register IDLOC2 @ 0x200002
 16117                           ;	unspecified, using default values
 16118  200002                     	org	2097154
 16119  200002  FF                 	db	255
 16120                           
 16121                           ;Config register IDLOC3 @ 0x200003
 16122                           ;	unspecified, using default values
 16123  200003                     	org	2097155
 16124  200003  FF                 	db	255
 16125                           
 16126                           ;Config register IDLOC4 @ 0x200004
 16127                           ;	unspecified, using default values
 16128  200004                     	org	2097156
 16129  200004  FF                 	db	255
 16130                           
 16131                           ;Config register IDLOC5 @ 0x200005
 16132                           ;	unspecified, using default values
 16133  200005                     	org	2097157
 16134  200005  FF                 	db	255
 16135                           
 16136                           ;Config register IDLOC6 @ 0x200006
 16137                           ;	unspecified, using default values
 16138  200006                     	org	2097158
 16139  200006  FF                 	db	255
 16140                           
 16141                           ;Config register IDLOC7 @ 0x200007
 16142                           ;	unspecified, using default values
 16143  200007                     	org	2097159
 16144  200007  FF                 	db	255
 16145                           
 16146                           	psect	config
 16147                           
 16148                           ; Padding undefined space
 16149  300000                     	org	3145728
 16150  300000  FF                 	db	255
 16151                           
 16152                           ;Config register CONFIG1H @ 0x300001
 16153                           ;	Oscillator Selection bits
 16154                           ;	FOSC = INTIO67, Internal oscillator block
 16155                           ;	4X PLL Enable
 16156                           ;	PLLCFG = ON, Oscillator multiplied by 4
 16157                           ;	Primary clock enable bit
 16158                           ;	PRICLKEN = ON, Primary clock is always enabled
 16159                           ;	Fail-Safe Clock Monitor Enable bit
 16160                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 16161                           ;	Internal/External Oscillator Switchover bit
 16162                           ;	IESO = ON, Oscillator Switchover mode enabled
 16163  300001                     	org	3145729
 16164  300001  B8                 	db	184
 16165                           
 16166                           ;Config register CONFIG2L @ 0x300002
 16167                           ;	Power-up Timer Enable bit
 16168                           ;	PWRTEN = OFF, Power up timer disabled
 16169                           ;	Brown-out Reset Enable bits
 16170                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 16171                           ;	Brown Out Reset Voltage bits
 16172                           ;	BORV = 190, VBOR set to 1.90 V nominal
 16173  300002                     	org	3145730
 16174  300002  1F                 	db	31
 16175                           
 16176                           ;Config register CONFIG2H @ 0x300003
 16177                           ;	Watchdog Timer Enable bits
 16178                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 16179                           ;	Watchdog Timer Postscale Select bits
 16180                           ;	WDTPS = 32768, 1:32768
 16181  300003                     	org	3145731
 16182  300003  3C                 	db	60
 16183                           
 16184                           ; Padding undefined space
 16185  300004                     	org	3145732
 16186  300004  FF                 	db	255
 16187                           
 16188                           ;Config register CONFIG3H @ 0x300005
 16189                           ;	CCP2 MUX bit
 16190                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 16191                           ;	PORTB A/D Enable bit
 16192                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
 16193                           ;	P3A/CCP3 Mux bit
 16194                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 16195                           ;	HFINTOSC Fast Start-up
 16196                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 16197                           ;	Timer3 Clock input mux bit
 16198                           ;	T3CMX = PORTC0, T3CKI is on RC0
 16199                           ;	ECCP2 B output mux bit
 16200                           ;	P2BMX = PORTD2, P2B is on RD2
 16201                           ;	MCLR Pin Enable bit
 16202                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 16203  300005                     	org	3145733
 16204  300005  BD                 	db	189
 16205                           
 16206                           ;Config register CONFIG4L @ 0x300006
 16207                           ;	Stack Full/Underflow Reset Enable bit
 16208                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
 16209                           ;	Single-Supply ICSP Enable bit
 16210                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 16211                           ;	Extended Instruction Set Enable bit
 16212                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 16213                           ;	Background Debug
 16214                           ;	DEBUG = 0x1, unprogrammed default
 16215  300006                     	org	3145734
 16216  300006  84                 	db	132
 16217                           
 16218                           ; Padding undefined space
 16219  300007                     	org	3145735
 16220  300007  FF                 	db	255
 16221                           
 16222                           ;Config register CONFIG5L @ 0x300008
 16223                           ;	Code Protection Block 0
 16224                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 16225                           ;	Code Protection Block 1
 16226                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 16227                           ;	Code Protection Block 2
 16228                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 16229                           ;	Code Protection Block 3
 16230                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 16231  300008                     	org	3145736
 16232  300008  0F                 	db	15
 16233                           
 16234                           ;Config register CONFIG5H @ 0x300009
 16235                           ;	Boot Block Code Protection bit
 16236                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 16237                           ;	Data EEPROM Code Protection bit
 16238                           ;	CPD = OFF, Data EEPROM not code-protected
 16239  300009                     	org	3145737
 16240  300009  C0                 	db	192
 16241                           
 16242                           ;Config register CONFIG6L @ 0x30000A
 16243                           ;	Write Protection Block 0
 16244                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 16245                           ;	Write Protection Block 1
 16246                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 16247                           ;	Write Protection Block 2
 16248                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 16249                           ;	Write Protection Block 3
 16250                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 16251  30000A                     	org	3145738
 16252  30000A  0F                 	db	15
 16253                           
 16254                           ;Config register CONFIG6H @ 0x30000B
 16255                           ;	Configuration Register Write Protection bit
 16256                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 16257                           ;	Boot Block Write Protection bit
 16258                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 16259                           ;	Data EEPROM Write Protection bit
 16260                           ;	WRTD = OFF, Data EEPROM not write-protected
 16261  30000B                     	org	3145739
 16262  30000B  E0                 	db	224
 16263                           
 16264                           ;Config register CONFIG7L @ 0x30000C
 16265                           ;	Table Read Protection Block 0
 16266                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 16267                           ;	Table Read Protection Block 1
 16268                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 16269                           ;	Table Read Protection Block 2
 16270                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 16271                           ;	Table Read Protection Block 3
 16272                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 16273  30000C                     	org	3145740
 16274  30000C  0F                 	db	15
 16275                           
 16276                           ;Config register CONFIG7H @ 0x30000D
 16277                           ;	Boot Block Table Read Protection bit
 16278                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 16279  30000D                     	org	3145741
 16280  30000D  40                 	db	64
 16281                           tosu	equ	0xFFF
 16282                           tosh	equ	0xFFE
 16283                           tosl	equ	0xFFD
 16284                           stkptr	equ	0xFFC
 16285                           pclatu	equ	0xFFB
 16286                           pclath	equ	0xFFA
 16287                           pcl	equ	0xFF9
 16288                           tblptru	equ	0xFF8
 16289                           tblptrh	equ	0xFF7
 16290                           tblptrl	equ	0xFF6
 16291                           tablat	equ	0xFF5
 16292                           prodh	equ	0xFF4
 16293                           prodl	equ	0xFF3
 16294                           indf0	equ	0xFEF
 16295                           postinc0	equ	0xFEE
 16296                           postdec0	equ	0xFED
 16297                           preinc0	equ	0xFEC
 16298                           plusw0	equ	0xFEB
 16299                           fsr0h	equ	0xFEA
 16300                           fsr0l	equ	0xFE9
 16301                           wreg	equ	0xFE8
 16302                           indf1	equ	0xFE7
 16303                           postinc1	equ	0xFE6
 16304                           postdec1	equ	0xFE5
 16305                           preinc1	equ	0xFE4
 16306                           plusw1	equ	0xFE3
 16307                           fsr1h	equ	0xFE2
 16308                           fsr1l	equ	0xFE1
 16309                           bsr	equ	0xFE0
 16310                           indf2	equ	0xFDF
 16311                           postinc2	equ	0xFDE
 16312                           postdec2	equ	0xFDD
 16313                           preinc2	equ	0xFDC
 16314                           plusw2	equ	0xFDB
 16315                           fsr2h	equ	0xFDA
 16316                           fsr2l	equ	0xFD9
 16317                           status	equ	0xFD8

Data Sizes:
    Strings     230
    Constant    0
    Data        32
    BSS         368
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    147     160
    BANK1           256      0     243
    BANK2           256      0     144
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_27(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_27(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_22(CODE[4]), STR_21(CODE[4]), STR_18(CODE[4]), STR_17(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_22(CODE[4]), STR_21(CODE[4]), STR_18(CODE[4]), STR_17(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> driverTimeSettingMenu@textCursor2(BANK0[16]), stopTimeSettingMenu@textCursor2(BANK0[16]), speedLimitSettingMenu@textCursor2(BANK0[16]), secretMenu@textCursor2(BANK0[16]), 
		 -> pauseMenu@textCursor2(BANK0[16]), stopMenu@textCursor2(BANK0[16]), mainMenu@textCursor2(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[18]), STR_14(CODE[16]), STR_12(CODE[18]), STR_10(CODE[13]), 
		 -> STR_8(CODE[14]), STR_6(CODE[16]), STR_4(CODE[16]), STR_2(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[18]), STR_14(CODE[16]), STR_12(CODE[18]), STR_10(CODE[13]), 
		 -> STR_8(CODE[14]), STR_6(CODE[16]), STR_4(CODE[16]), STR_2(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[18]), STR_14(CODE[16]), STR_12(CODE[18]), STR_10(CODE[13]), 
		 -> STR_8(CODE[14]), STR_6(CODE[16]), STR_4(CODE[16]), STR_2(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[18]), STR_14(CODE[16]), STR_12(CODE[18]), STR_10(CODE[13]), 
		 -> STR_8(CODE[14]), STR_6(CODE[16]), STR_4(CODE[16]), STR_2(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> driverTimeSettingMenu@textCursor2(BANK0[16]), stopTimeSettingMenu@textCursor2(BANK0[16]), speedLimitSettingMenu@textCursor2(BANK0[16]), secretMenu@textCursor2(BANK0[16]), 
		 -> pauseMenu@textCursor2(BANK0[16]), stopMenu@textCursor2(BANK0[16]), mainMenu@textCursor2(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2429_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> driverTimeSettingMenu@textCursor2(BANK0[16]), stopTimeSettingMenu@textCursor2(BANK0[16]), speedLimitSettingMenu@textCursor2(BANK0[16]), secretMenu@textCursor2(BANK0[16]), 
		 -> pauseMenu@textCursor2(BANK0[16]), stopMenu@textCursor2(BANK0[16]), mainMenu@textCursor2(BANK0[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> driverTimeSettingMenu@textCursor2(BANK0[16]), stopTimeSettingMenu@textCursor2(BANK0[16]), speedLimitSettingMenu@textCursor2(BANK0[16]), secretMenu@textCursor2(BANK0[16]), 
		 -> pauseMenu@textCursor2(BANK0[16]), stopMenu@textCursor2(BANK0[16]), mainMenu@textCursor2(BANK0[16]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_15(CODE[17]), driverTimeSettingMenu@textCursor2(BANK0[16]), STR_13(CODE[17]), stopTimeSettingMenu@textCursor2(BANK0[16]), 
		 -> STR_11(CODE[17]), speedLimitSettingMenu@textCursor2(BANK0[16]), STR_9(CODE[17]), STR_7(CODE[17]), 
		 -> secretMenu@textCursor2(BANK0[16]), STR_5(CODE[17]), pauseMenu@textCursor2(BANK0[16]), STR_3(CODE[17]), 
		 -> stopMenu@textCursor2(BANK0[16]), STR_1(CODE[17]), mainMenu@textCursor2(BANK0[16]), 


Critical Paths under _main in COMRAM

    _system_init->_eepromRead
    _startMotor->_PWM1_setDC
    _startMotor->_PWM2_setDC
    _startMotor->_speedControl
    _speedControl->___fltol
    _scanAdcConversion->___fltol
    _calculatedAverageValue->___xxtofl
    _stopMotor->_PWM1_setDC
    _stopMotor->_PWM2_setDC
    _PWM2_setDC->___fltol
    _PWM1_setDC->___fltol
    _fabsf->___xxtofl
    ___xxtofl->___lldiv
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___fltol->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _lcd_init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _TIMER0 in COMRAM

    None.

Critical Paths under _main in BANK0

    _menuControl->_stateMachine
    _stateMachine->_driverTimeSettingMenu
    _stateMachine->_mainMenu
    _stateMachine->_pauseMenu
    _stateMachine->_secretMenu
    _stateMachine->_speedLimitSettingMenu
    _stateMachine->_stopMenu
    _stateMachine->_stopTimeSettingMenu
    _stopTimeSettingMenu->_sprintf
    _stopMenu->_sprintf
    _speedLimitSettingMenu->_sprintf
    _secretMenu->_sprintf
    _pauseMenu->_sprintf
    _mainMenu->_sprintf
    _startMotor->_speedControl
    _driverTimeSettingMenu->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _TIMER0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TIMER0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TIMER0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TIMER0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TIMER0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TIMER0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  408703
                          _Lcd_Clear
                         _PWM1_setDC
                         _PWM2_setDC
                           _PWM_Init
                            _adcInit
                           _lcd_init
                           _mcu_init
                        _menuControl
                     _menuInitialize
                        _system_init
                       _timer_0_init
 ---------------------------------------------------------------------------------
 (1) _timer_0_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_init                                          2     2      0      22
                                              1 COMRAM     2     2      0
                         _eepromRead
 ---------------------------------------------------------------------------------
 (2) _eepromRead                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _menuInitialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _menuControl                                          0     0      0  402025
                 _buttonControlFlags
                       _stateMachine
 ---------------------------------------------------------------------------------
 (2) _stateMachine                                         2     2      0  402025
                                            145 BANK0      2     2      0
              _driverTimeSettingMenu
                           _exitLine
                           _mainMenu
                          _pauseMenu
                         _secretMenu
              _speedLimitSettingMenu
                          _startMenu
                           _stopMenu
                _stopTimeSettingMenu
 ---------------------------------------------------------------------------------
 (3) _stopTimeSettingMenu                                 16    16      0   52813
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _eepromWrite
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _stopMenu                                            16    16      0   52313
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _startMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _speedLimitSettingMenu                               16    16      0   52813
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _eepromWrite
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _secretMenu                                          16    16      0   60122
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fladd
                             ___flge
                            ___flsub
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _pauseMenu                                           16    16      0   52313
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _mainMenu                                            16    16      0   78838
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
                         _startMotor
 ---------------------------------------------------------------------------------
 (4) _startMotor                                           0     0      0   32873
                         _PWM1_setDC
                         _PWM2_setDC
             _calculatedAverageValue
                  _scanAdcConversion
                       _speedControl
 ---------------------------------------------------------------------------------
 (5) _speedControl                                        10     6      4   11063
                                             87 COMRAM     6     2      4
                                              0 BANK0      4     4      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) _scanAdcConversion                                    2     2      0   12556
                                             87 COMRAM     2     2      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                       _readAdcValue
 ---------------------------------------------------------------------------------
 (6) _readAdcValue                                         7     5      2      46
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _calculatedAverageValue                              24    24      0    2906
                                             27 COMRAM    24    24      0
                            ___lldiv
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8    1282
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) _exitLine                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _driverTimeSettingMenu                               16    16      0   52813
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _eepromWrite
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (4) _stopMotor                                            0     0      0    6348
                         _PWM1_setDC
                         _PWM2_setDC
 ---------------------------------------------------------------------------------
 (5) _PWM2_setDC                                           6     4      2    3174
                                             87 COMRAM     6     4      2
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (5) _PWM1_setDC                                           6     4      2    3174
                                             87 COMRAM     6     4      2
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (6) _fabsf                                                8     4      4     199
                                             27 COMRAM     8     4      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4    1310
                                             13 COMRAM    14    10      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             18    10      8   42834
                                            111 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   41409
                                            103 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           50    44      6   41025
                                             71 BANK0     32    26      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              68    61      7   30053
                                             87 COMRAM     7     0      7
                                             10 BANK0     61    61      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (8) _floorf                                              20    16      4     490
                                             77 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4    1369
                                             77 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _fabsf (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    3801
                                             68 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             16     8      8    3022
                                             52 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             25    17      8    5240
                                             27 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flge                                              12     4      8     942
                                             52 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             25    17      8    4591
                                             52 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                36    26     10    5042
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (8) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (7) _atoi                                                15    13      2    1396
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _eepromWrite                                          2     1      1     500
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (4) _Lcd_Write_String                                     6     4      2    1484
                                              4 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (5) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Set_Cursor                                       5     4      1    1596
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _buttonControlFlags                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mcu_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     198
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (5) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (6) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TIMER0                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _PWM1_setDC
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
       _fabsf (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
     ___xxtofl
       ___lldiv (ARG)
     _fabsf
       ___xxtofl (ARG)
         ___lldiv (ARG)
   _PWM2_setDC
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
       _fabsf (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
     ___xxtofl
       ___lldiv (ARG)
     _fabsf
       ___xxtofl (ARG)
         ___lldiv (ARG)
   _PWM_Init
   _adcInit
   _lcd_init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _mcu_init
   _menuControl
     _buttonControlFlags
     _stateMachine
       _driverTimeSettingMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         _eepromWrite
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _exitLine
       _mainMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _startMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _calculatedAverageValue
             ___lldiv
             ___lmul
             ___xxtofl
               ___lldiv (ARG)
           _scanAdcConversion
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _readAdcValue
           _speedControl
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
       _pauseMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _secretMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _speedLimitSettingMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         _eepromWrite
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _startMenu
       _stopMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _stopTimeSettingMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         _eepromWrite
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
   _menuInitialize
   _system_init
     _eepromRead
   _timer_0_init

 _TIMER0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      90       8       56.2%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      F3       6       94.9%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     93      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     281       9        0.0%
DATA                 0      0     281      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Aug 16 01:27:54 2020

                    ___fldiv@aexp 004D                      ___fldiv@bexp 004C  
                    ___fldiv@sign 0045                                l41 5A80  
                              l35 59DA                                l38 5A02  
                              l54 1A9C                                l70 5D0E  
                              l72 5D1C                                l57 3044  
                              l73 5D1E                                l76 5C58  
                              l78 5C66                                _KD 01EB  
                              l79 5C6A                                l96 57FC  
                              l98 5812                                _KP 01EF  
                    ___awdiv@sign 0006               ___wmul@multiplicand 0003  
             __end_of_system_init 46E4                               l100 5828  
                             l102 583E                               l110 5D8C  
                             l104 5840          ??_calculatedAverageValue 001C  
                             l122 5B9C                               l107 5D3C  
                             l116 5728                               l119 5406  
                             l128 5484                               l250 5D6C  
                             l410 35FC                               l340 38FA  
                             l332 5C92                               l501 5ABC  
                             l253 46E2                               l342 3946  
                             l247 5D5E                               l344 3992  
                             l336 3862                               l440 5D8E  
                             l504 5BD2                               l353 55EE  
                             l338 38AE                               l426 4784  
                             l347 39DE                               l419 49F4  
                             l428 47EA                               l461 5CBA  
                             l437 45C2                               l373 3E04  
                             l374 3E54                               l367 5172  
                    _startIsClick 00FD                               l560 5658  
                             l384 4E6C                               l465 5578  
                             l377 3EE8                               l393 449A  
                             l545 5D7E                               l548 5CE0  
                             l396 5D56                               l813 4AB2  
                             l469 54FE                               l389 43F6  
                             l662 4200                               l822 5B2C  
                             l582 5370                               l807 52CC  
                             l575 5360                               l559 5648  
                             l818 4AF8                               l498 3B9C  
                             l675 4364                               l845 48F0  
                             l792 5222                               l779 50C0  
                             _PR2 000FBB                               _abs 5A04  
                             _pad 4F38                      ___awmod@sign 0006  
                             wreg 000FE8                      ___flmul@aexp 002D  
                    ___flmul@bexp 002E               stopMenu@textCursor2 00E1  
                    ___flmul@sign 0028                      ___flmul@temp 0033  
                    ___flmul@prod 002F                       _stopIsClick 00FC  
                    ___fltol@exp1 0057                              l1102 24B4  
                            l1103 24A2                              l1130 2D5E  
                            l1210 3C8C                              l1203 3BF4  
                            ?_abs 0013                              l1132 2BBE  
                            l1141 2C04                              l1118 597C  
                            l1206 3D50                              l1143 2C7C  
                            l1135 2B82                              l1231 58E4  
                            l1144 2C6A                              l1224 5C3C  
                            l1305 3328                              l1217 3CE8  
                            l1162 2660                              l1171 28CE  
                            l1323 1296                              l1172 28BC  
                            l1076 22CA                              l1093 23E4  
                            l1085 259A                              l1077 22B8  
                            l1341 0AD4                              l1166 29C4  
                            l1078 227E                              l1440 56C2  
                            l1505 5B64                              l1513 5936  
                            l1169 2856                              l1433 2020  
                            l1425 20DA                              l1274 4F7E  
                            l1450 4BF6                              l4011 4E80  
                            l1179 2986                              l4013 4E92  
                            l1277 4FC0                              l1285 30E6  
                            l4101 221C                              l1534 4F36  
                            l1542 59C0                              l1455 5A3A  
                            l4015 4E9C                              l1279 4FFC  
                            l1287 30EE                              l4111 228C  
                            l4103 2220                              l4031 2108  
                            l4023 20DC                              l1551 57E4  
                            l1519 5AF4                              l1367 0E6C  
                            l1439 56BA                              l1545 5D90  
                            l4017 4EBA                              l4009 4E6E  
                            l4201 251A                              l4121 22B6  
                            l4113 2298                              l4105 224A  
                            l4041 2142                              l4033 2118  
                            l4025 20E8                              l5001 08E4  
                            l1561 4CCC                              l1458 5A42  
                            l4019 4EF0                              l4211 256C  
                            l4203 252A                              l4131 230C  
                            l4123 22D8                              l4115 229C  
                            l4107 2266                              l4051 2170  
                            l4043 2148                              l4035 2128  
                            l4027 20F6                              l1571 5780  
                            l5003 0900                              l5011 091C  
                            l4301 4214                              l1557 5C08  
                            l4221 258A                              l4213 2572  
                            l4205 253A                              l4141 2346  
                            l4133 231A                              l4125 22E8  
                            l4117 22AA                              l4109 2276  
                            l4061 21A4                              l4053 2172  
                            l4045 215A                              l4037 212A  
                            l4029 20F8                              l5101 0DAE  
                            l5021 09A6                              l5013 0936  
                            l1486 4070                              l4311 4284  
                            l4303 4234                              l4231 59A0  
                            l4215 2574                              l4207 255A  
                            l4151 23B2                              l4143 2348  
                            l4135 2328                              l4119 22AC  
                            l4071 21E0                              l4055 2182  
                            l4063 21AC                              l4047 215C  
                            l4039 2132                              l1495 3812  
                            l5111 0E44                              l5103 0DE0  
                            l5031 0A7E                              l5023 0A00  
                            l1576 5788                              l1489 4078  
                            l4321 42FC                              l4313 428C  
                            l4305 4238                              l4225 597E  
                            l4233 5BD4                              l4401 2B4E  
                            l4217 257A                              l4209 255E  
                            l4161 240A                              l4153 23B4  
                            l4145 2352                              l4137 2334  
                            l4129 22FC                              l4081 21F4  
                            l4073 21E4                              l4065 21BC  
                            l4057 2192                              l4049 2162  
                            l5201 1184                              l5121 0EFC  
                            l5113 0E58                              l5105 0DF0  
                            l5041 0AC8                              l5033 0A82  
                            l5025 0A34                              l5017 096C  
                            l6001 4366                              l1498 3756  
                            l4323 430E                              l4315 42A0  
                            l4307 4246                              l4227 598A  
                            l4235 5BE0                              l4411 2BAA  
                            l4403 2B5E                              l4219 2588  
                            l4171 2438                              l4155 23C4  
                            l4139 2338                              l4147 2358  
                            l4091 2208                              l4083 21F8  
                            l4075 21E8                              l4067 21CE  
                            l4059 21A2                              l4243 5ABE  
                            l5211 11C4                              l5203 118C  
                            l5131 0F48                              l5123 0F0E  
                            l5115 0E64                              l5107 0E00  
                            l5051 0B04                              l5035 0A94  
                            l5043 0AE0                              l5027 0A3C  
                            l5019 09A0                              l6011 4398  
                            l6003 4372                              l4261 40B0  
                            l4253 407A                              l4317 42AE  
                            l4325 4314                              l4309 4266  
                            l4229 599C                              l4237 5BE4  
                            l4421 2BEA                              l4413 2BAC  
                            l4405 2B72                              l4341 29F2  
                            l4333 29C6                              l4501 264A  
                            l4173 2446                              l4165 241E  
                            l4181 2464                              l4149 237E  
                            l4157 23D4                              l4093 220C  
                            l4085 21FC                              l4077 21EC  
                            l4069 21DC                              l5221 1200  
                            l5213 11D6                              l5205 1192  
                            l5141 0F7C                              l5133 0F56  
                            l5125 0F20                              l5117 0E88  
                            l5109 0E34                              l5061 0B6A  
                            l5053 0B20                              l5037 0AA6  
                            l5029 0A6E                              l5301 4CAA  
                            l6021 4418                              l6013 43C2  
                            l6005 4378                              l6101 3552  
                            l4247 5CBC                              l4271 410C  
                            l4263 40BE                              l4255 407E  
                            l4327 4324                              l4319 42DC  
                            l4239 5BFC                              l4431 2C26  
                            l4423 2BF4                              l4415 2BBC  
                            l4407 2B80                              l4351 2A2C  
                            l4343 2A02                              l4335 29D2  
                            l4511 2694                              l4503 2650  
                            l4175 244E                              l4167 2428  
                            l4159 23FA                              l4183 2472  
                            l4095 2210                              l4087 2200  
                            l4079 21F0                              l5231 1258  
                            l5223 1206                              l5215 11E2  
                            l5207 11A4                              l5151 0FAE  
                            l5143 0F8C                              l5135 0F66  
                            l5127 0F2E                              l5119 0EEC  
                            l5071 0BB2                              l5063 0B7C  
                            l5055 0B56                              l5039 0AAE  
                            l5311 59D8                              l6031 4460  
                            l6023 4428                              l6015 43CE  
                            l6007 4382                              l6103 3586  
                            l6111 35DE                              l5321 57F6  
                            l4249 5CD8                              l4281 4176  
                            l4273 4114                              l4265 40DE  
                            l4257 408C                              l4329 4344  
                            l4441 2C98                              l4433 2C34  
                            l4425 2C02                              l4417 2BCE  
                            l4409 2B8C                              l4361 2A58  
                            l4353 2A32                              l4345 2A12  
                            l4337 29E0                              l4521 26E4  
                            l4513 26A0                              l4505 2670  
                            l4193 24C4                              l4185 2476  
                            l4177 2452                              l4169 2436  
                            l4097 2214                              l4089 2204  
                            l4601 5938                              l5233 1260  
                            l5217 11EA                              l5209 11BE  
                            l5161 1056                              l5153 0FC0  
                            l5145 0F90                              l5137 0F6A  
                            l5129 0F36                              l5081 0BFA  
                            l5073 0BC0                              l5065 0B8E  
                            l5057 0B5E                              l5049 0AF2  
                            l5401 3CCA                              l5313 59E8  
                            l5305 59C4                              l6033 446A  
                            l6025 443A                              l6017 43E0  
                            l6009 438E                              l6113 35F2  
                            l6105 3598                              l6041 332A  
                            l6201 50FE                              l6121 5D0C  
                            l5331 582A                              l5323 57FE  
                            l6131 384A                              l6123 3814  
                            l5251 3F22                              l5243 3EEA  
                            l4291 41C0                              l4283 4196  
                            l4275 4128                              l4267 40E2  
                            l4259 40AC                              l4611 5010  
                            l4451 2D04                              l4443 2CA6  
                            l4435 2C62                              l4419 2BE4  
                            l4427 2C14                              l4371 2A92  
                            l4363 2A68                              l4355 2A38  
                            l4347 2A14                              l4339 29E2  
                            l4531 2726                              l4523 26F0  
                            l4515 26AA                              l4507 2680  
                            l4195 24D0                              l4187 2484  
                            l4179 2462                              l4099 2218  
                            l4603 5948                              l5235 1270  
                            l5227 123A                              l5219 11FA  
                            l5171 10AE                              l5163 105E  
                            l5155 0FC4                              l5147 0F96  
                            l5139 0F70                              l5091 0D0E  
                            l5083 0C0A                              l5075 0BD8  
                            l5067 0B9C                              l5059 0B62  
                            l5411 3D20                              l5403 3CD8  
                            l5315 59FA                              l5307 59C4  
                            l6035 447C                              l6027 443E  
                            l6019 4408                              l6107 35A6  
                            l6051 3354                              l6043 3336  
                            l6203 5106                              l6115 5D04  
                            l5333 5838                              l5325 580C  
                            l6213 5A44                              l6221 5372  
                            l6141 3896                              l6133 385A  
                            l6125 3826                              l5261 3F78  
                            l5253 3F58                              l5245 3EFE  
                            l4293 41E0                              l4285 4198  
                            l4277 4136                              l4269 40EE  
                            l4621 5036                              l4613 5018  
                            l4461 2D52                              l4453 2D1E  
                            l4445 2CD0                              l4429 2C22  
                            l4373 2AA8                              l4365 2A78  
                            l4357 2A46                              l4349 2A1C  
                            l4541 2788                              l4533 2732  
                            l4525 26FC                              l4517 26C0  
                            l4197 24DE                              l4189 249A  
                            l5237 1276                              l5229 124C  
                            l5181 10F2                              l5173 10BC  
                            l5149 0F9C                              l5157 0FCA  
                            l5165 1062                              l5085 0C1E  
                            l5093 0D14                              l5077 0BEA  
                            l5069 0BA0                              l5501 1F3C  
                            l5421 1A9E                              l5413 3D30  
                            l5405 3CF6                              l5309 59D6  
                            l6037 448C                              l6029 444C  
                            l6109 35AA                              l6061 3390  
                            l6053 3364                              l6045 333A  
                            l6117 5D08                              ?_pad 0011  
                            l5327 5814                              l5319 57E8  
                            l6215 5A66                              l6231 53C0  
                            l6223 538C                              l6151 38E2  
                            l6143 38A6                              l6135 3872  
                            l6127 3834                              l5271 3FF2  
                            l5263 3F80                              l5255 3F5C  
                            l5247 3F02                              l4287 41AA  
                            l4279 4148                              l4631 506E  
                            l4623 503E                              l4615 501C  
                            l4607 4FFE                              l4463 2D54  
                            l4455 2D3A                              l4439 2C8C  
                            l4447 2CD4                              l4391 2AFC  
                            l4375 2AB8                              l4383 2AD8  
                            l4367 2A7A                              l4359 2A48  
                            l4711 4A72                              l4703 49F6  
                            l4551 281E                              l4543 2794  
                            l4535 2742                              l4527 270A  
                            l4519 26CC                              l4471 259C  
                            l4199 2518                              l5191 1128  
                            l5183 10FA                              l5175 10CC  
                            l5167 1080                              l5159 1022  
                            l5095 0D32                              l5087 0C82  
                            l5079 0BF2                              l5431 1B0C  
                            l5423 1AC2                              l5415 3D3E  
                            l5407 3CF8                              l5335 5C0A  
                            l5351 5628                              l5343 55F0  
                            l6039 4496                              l6071 3410  
                            l6063 339A                              l6047 334C  
                            l6055 3368                              l6207 510E  
                            l6119 5D0A                              l6311 4CDE  
                            l6303 4CCE                              l5329 5822  
                            l6217 5A6E                              l6241 53E8  
                            l6233 53C6                              l6225 5392  
                            l6161 392E                              l6153 38F2  
                            l6145 38BE                              l6137 3880  
                            l6129 383C                              l5265 3F88  
                            l5249 3F06                              l4289 41B0  
                            l4297 4202                              l4801 5A1E  
                            l4641 509A                              l4633 5074  
                            l4625 5050                              l4617 502A  
                            l4609 5002                              l4457 2D3E  
                            l4449 2CEE                              l4393 2B16  
                            l4385 2AE8                              l4377 2AC0  
                            l4369 2A82                              l4721 4AF6  
                            l4713 4A80                              l4705 4A24  
                            l4561 2874                              l4553 283C  
                            l4545 27B0                              l4537 275C  
                            l4529 2716                              l4481 25D8  
                            l4473 25A8                              l5193 1130  
                            l5185 110A                              l5177 10D0  
                            l5169 109C                              l5097 0D66  
                            l5089 0CDA                              l5521 207A  
                            l5505 1FAA                              l5441 1B92  
                            l5433 1B42                              l5425 1AD0  
                            l5417 3D40                              l5409 3CFC  
                            l5337 5C2A                              l5361 5308  
                            l5353 52CE                              l5345 5600  
                            l5601 2D60                              l6081 346E  
                            l6073 3416                              l6065 33C0  
                            l6057 337A                              l6049 3350  
                            l6321 4CFA                              l6313 4CE2  
                            l6305 4CD2                              l5611 5D22  
                            l6219 5D80                              l6243 53EE  
                            l6235 53D6                              l6227 53AA  
                            l6251 5D58                              l6171 397A  
                            l6163 393E                              l6155 390A  
                            l6147 38CC                              l6139 3888  
                            l5275 4030                              l5267 3FBC  
                            l5259 3F62                              l4299 4206  
                            l4635 508A                              l4627 5058  
                            l4643 50A0                              l4619 5032  
                            l4651 5174                              l4459 2D4C  
                            l4395 2B26                              l4387 2AE8  
                            l4379 2AC4                              l4715 4A92  
                            l4707 4A34                              l4571 28DE  
                            l4563 2878                              l4555 2846  
                            l4547 27DA                              l4539 276C  
                            l4491 260A                              l4483 25E8  
                            l4475 25B6                              l4811 4B8C  
                            l4803 4AFA                              l5195 113C  
                            l5187 1112                              l5179 10E0  
                            l5099 0D98                              l5291 4C2E  
                            l5507 1FBC                              l5515 2034  
                            l5451 1C1A                              l5435 1B52  
                            l5427 1AE2                              l5531 20A4  
                            l5339 5C2C                              l5371 5350  
                            l5363 5316                              l5355 52DE  
                            l5347 560E                              l5603 2D92  
                            l6091 34D6                              l6075 344A  
                            l6067 33CC                              l6059 3384  
                            l6083 34A2                              l6331 4D38  
                            l6323 4D06                              l6315 4CE6  
                            l6307 4CD6                              l5613 5D24  
                            l6245 53F4                              l6237 53DC  
                            l6229 53B0                              l6253 5D5C  
                            l6181 39C6                              l6173 398A  
                            l6165 3956                              l6157 3918  
                            l6149 38D4                              l5621 5B68  
                            l5701 5C4A                              l5277 4042  
                            l4901 3116                              l4645 50B0  
                            l4637 5092                              l4629 5060  
                            l4661 51A0                              l4653 5178  
                            l4397 2B36                              l4717 4AA0  
                            l4709 4A62                              l4581 2940  
                            l4573 28EA                              l4565 2886  
                            l4557 2854                              l4549 2810  
                            l4493 2618                              l4485 25EE  
                            l4477 25B8                              l4725 5AF6  
                            l4741 4840                              l4733 47EC  
                            l4821 4BEE                              l4805 4B1A  
                            l5197 1142                              l5189 1120  
                            l5293 4C3C                              l5285 4BF8  
                            l5533 20C8                              l5517 2058  
                            l5525 2088                              l5509 1FF0  
                            l5461 1CB4                              l5453 1C28  
                            l5445 1BDA                              l5437 1B64  
                            l5429 1AE8                              l5381 3C04  
                            l5373 535A                              l5365 5320  
                            l5357 52F4                              l5349 561E  
                            l5605 2E58                              l5541 129C  
                            l6093 34FC                              l6085 34B6  
                            l6077 345C                              l6069 33DE  
                            l6261 5D7C                              l6341 4D74  
                            l6333 4D48                              l6325 4D16  
                            l6317 4CEA                              l6309 4CDA  
                            l5615 5D2A                              l6247 53FA  
                            l6239 53E2                              l6183 39D6  
                            l6175 39A2                              l6167 3964  
                            l6159 3920                              l5711 56C6  
                            l5631 5B88                              l5623 5B74  
                            l5703 5C4C                              l5279 4054  
                            l4911 31B6                              l4903 311C  
                            l4647 50B8                              l4639 5094  
                            l4671 51D8                              l4663 51A8  
                            l4655 5186                              l4399 2B46  
                            l4719 4AF0                              l4591 29A8  
                            l4583 2954                              l4575 28F8  
                            l4567 28B4                              l4559 2866  
                            l4495 261A                              l4487 25FE  
                            l4479 25C8                              l4727 5B0C  
                            l4743 4842                              l4735 4802  
                            l4807 4B58                              l4815 4B98  
                            l5199 1168                              l5295 4C54  
                            l5287 4C22                              l5527 2096  
                            l5519 2066                              l5471 1D40  
                            l5455 1C4C                              l5439 1B84  
                            l5447 1BEC                              l5391 3C42  
                            l5383 3C1A                              l5375 3BA0  
                            l5367 533E                              l5359 52FC  
                            l5607 2F52                              l5551 13FC  
                            l5543 12AA                              l6095 3508  
                            l6087 34C0                              l6079 346A  
                            l6191 50D6                              l6255 5C6C  
                            l6271 46C0                              l6263 45C4  
                            l6343 4D76                              l6335 4D58  
                            l6327 4D18                              l6319 4CEE  
                            l5617 5D2C                              l6281 5CA8  
                            l6249 5400                              l6177 39B0  
                            l6169 396C                              l5721 570A  
                            l5713 56D6                              l5633 5B8A  
                            l5625 5B76                              l5705 5C4E  
                            l4921 325E                              l4913 31BC  
                            l4905 3124                              l4681 5212  
                            l4673 51EE                              l4665 51BA  
                            l4657 518E                              l4593 29AA  
                            l4585 296E                              l4577 2922  
                            l4497 262A                              l4489 2604  
                            l4729 5B1C                              l4745 4852  
                            l4817 4BAA                              l4809 4B80  
                            l4841 361E                              l4825 578A  
                            l4833 5760                              l5297 4C70  
                            l5481 1DFC                              l5473 1D72  
                            l5465 1CFC                              l5457 1C86  
                            l5449 1C10                              l5393 3C74  
                            l5377 3BB0                              l5641 5500  
                            l5369 534E                              l5609 2FFA  
                            l5561 15B8                              l5553 146C  
                            l5545 1314                              l5801 3E94  
                            l6097 351A                              l6089 34CC  
                            l6193 50DE                              l6185 50C2  
                            l6273 46D8                              l6265 46A2  
                            l6257 5D6E                              l6345 4D80  
                            l6337 4D5C                              l6329 4D28  
                            l5619 5D3A                              l6179 39B8  
                            l5723 571C                              l5715 56E8  
                            l5635 5B90                              l5627 5B7E  
                            l5731 5444                              l5707 5C52  
                            l4931 32C4                              l4923 3278  
                            l4915 31C2                              l4907 312E  
                            l4683 521A                              l4675 51F6  
                            l4667 51C2                              l4659 5192  
                            l4691 5262                              l4587 298A  
                            l4595 29B0                              l4579 2926  
                            l4499 263A                              l4771 48D0  
                            l4755 487C                              l4747 4856  
                            l4739 4816                              l4851 370A  
                            l4843 3676                              l4827 579A  
                            l4835 5772                              l5299 4C82  
                            l5491 1EA4                              l5483 1E44  
                            l5475 1D82                              l5459 1CA6  
                            l5467 1D0E                              l5395 3C76  
                            l5387 3C2E                              l5379 3BBE  
                            l5643 5500                              l5651 5486  
                            l6451 1A56                              l5571 1718  
                            l5563 15C6                              l5555 147A  
                            l5547 1384                              l5539 1298  
                            l5803 3E98                              l5811 3EAC  
                            l6099 354C                              l6195 50E6  
                            l6187 50C6                              l6291 55A6  
                            l6283 557A                              l6275 46DC  
                            l6267 46AC                              l6259 5D7A  
                            l6347 4D90                              l6339 4D62  
                            l6277 5C94                              l5725 5722  
                            l5717 56EE                              l5637 5B92  
                            l5629 5B80                              l5733 5448  
                            l5709 5C56                              l6453 3FA6  
                            l4781 4F5C                              l4933 32CA  
                            l4941 3300                              l4925 3292  
                            l4909 3134                              l4917 3226  
                            l4677 51FC                              l4669 51CA  
                            l4693 5290                              l4597 29B4  
                            l4589 299A                              l4773 48E0  
                            l4765 48A4                              l4757 4886  
                            l4749 4864                              l4861 37F2  
                            l4853 3746                              l4845 368A  
                            l4829 572A                              l5493 1EB2  
                            l5477 1DB4                              l5469 1D30  
                            l5741 58B6                              l5397 3C82  
                            l5389 3C36                              l5645 5518  
                            l5653 549E                              l5581 187E  
                            l5573 1788                              l5565 1630  
                            l5557 14E4                              l5549 1392  
                            l5661 39E0                              l5821 3EE4  
                            l5813 3EBE                              l5805 3EA6  
                            l5901 474A                              l6197 50EE  
                            l6189 50CE                              l6293 55B8  
                            l6285 557E                              l6269 46B6  
                            l6349 4D94                              l6279 5C98  
                            l5719 56F8                              l5639 5B9A  
                            l5727 5408                              l4871 58E6  
                            l4791 4FA2                              l4783 4F6A  
                            l4935 32DC                              l4919 3240  
                            l4927 32A2                              l4679 5202  
                            l4695 52A0                              l4687 5224  
                            l4767 48B0                              l4759 4890  
                            l4863 3802                              l4847 3698  
                            l4855 377A                              l4839 35FE  
                            l4951 0710                              l5495 1EE2  
                            l5487 1E7C                              l5479 1DD8  
                            l5743 58D2                              l5735 5894  
                            l5399 3CBE                              l5647 5560  
                            l5655 54E6                              l5831 44BE  
                            l5583 18E8                              l5575 1796  
                            l5567 16A0                              l5559 1550  
                            l5671 3B0C                              l5663 3A20  
                            l5751 5BA6                              l5823 3EE6  
                            l5815 3ECE                              l5807 3EA8  
                            l5911 478E                              l5903 475C  
                            l6199 50F6                              l6295 55CA  
                            l6287 5582                              l5729 5414  
                            l4873 58EA                              l4793 4FD0  
                            l4785 4F76                              l4777 4F38  
                            l4937 32E8                              l4929 32B4  
                            l4697 52C4                              l4689 5252  
                            l4769 48C0                              l4857 37B6  
                            l4961 0760                              l4953 0718  
                            l4945 06E8                              l5489 1E8E  
                            l5737 58A6                              l5649 5486  
                            l5753 5A82                              l5841 44F6  
                            l5833 44C8                              l5825 449C  
                            l5585 1958                              l5577 1800  
                            l5569 16AE                              l5593 1A40  
                            l5681 3B70                              l5673 3B28  
                            l5665 3AE6                              l5657 39E0  
                            l5817 3EDE                              l5809 3EAA  
                            l5761 3D5E                              l5921 47E0  
                            l5913 479A                              l5905 476E  
                            l6449 5124                              l6297 55DC  
                            l6289 5594                              l4867 5B2E  
                            l4875 58FE                              l4795 4FE4  
                            l4787 4F8A                              l4779 4F48  
                            l4939 32F0                              l4891 30BE  
                            l4883 3046                              l4699 52CA  
                            l4859 37CA                              l4971 0798  
                            l4963 076E                              l4955 073C  
                            l4947 06F2                              l5499 1F0E  
                            l5691 5670                              l5739 58AE  
                            l5755 5AA4                              l5843 4500  
                            l5835 44DA                              l5851 4512  
                            l5827 44A8                              l5587 1966  
                            l5579 1870                              l5683 3B78  
                            l5675 3B30                              l5667 3AEE  
                            l5659 39E0                              l5747 5B9E  
                            l5819 3EE2                              l5771 3DB4  
                            l5763 3D68                              l5931 491E  
                            l5923 48F2                              l5915 47A4  
                            l5907 4774                              l4877 592C  
                            l4789 4F9E                              l4893 30C0  
                            l4885 3066                              l4981 07FE  
                            l4973 079C                              l4965 0780  
                            l4957 0746                              l4949 0702  
                            l5693 569E                              l5757 5AB0  
                            l5861 454A                              l5853 4524  
                            l5845 4506                              l5837 44EC  
                            l5829 44AC                              l5589 19D0  
                            l5685 3B94                              l5677 3B4C  
                            l5669 3AFC                              l5749 5BA2  
                            l5781 3E16                              l5773 3DC8  
                            l5765 3D74                              l5933 4930  
                            l5941 4956                              l5925 48FE  
                            l5917 47C0                              l5909 477A  
                            l5695 5C40                              l4879 5930  
                            l4799 5A04                              l4895 30DA  
                            l4887 308E                              l4983 0810  
                            l4967 078C                              l4975 07A2  
                            l4959 074E                              l5687 565A  
                            l5871 4566                              l5863 4550  
                            l5855 4536                              l5847 450A  
                            l5839 44F2                              l5679 3B54  
                            l5791 3E4C                              l5783 3E26  
                            l5775 3DD2                              l5767 3D7E  
                            l5759 3D52                              l5943 4968  
                            l5951 498E                              l5935 4942  
                            l5927 4902                              l5919 47CC  
                            l5697 5C44                              l4897 30F6  
                            l4889 30AE                              l4985 082C  
                            l4977 07C8                              l4993 0876  
                            l4969 0794                              l5689 5662  
                            l5881 45B8                              l5873 4572  
                            l5865 4554                              l5857 453C  
                            l5849 450E                              l5793 3E4E  
                            l5785 3E36                              l5777 3DE8  
                            l5769 3DA8                              l5961 49D6  
                            l5953 4998                              l5945 497A  
                            l5937 4948                              l5929 4914  
                            l5699 5C48                              l4899 3108  
                            l4995 089C                              l4987 0844  
                            l5875 457C                              l5867 4558  
                            l5859 4540                              l5795 3E64  
                            l5787 3E46                              l5779 3DF8  
                            l5963 49EA                              l5955 49A4  
                            l5947 4980                              l5939 494C  
                            l5971 4DB6                              l5891 4710  
                            l5883 46E4                              l4989 084E  
                            l5877 4598                              l5869 455C  
                            l5797 3E74                              l5789 3E4A  
                            l5957 49AE                              l5949 4984  
                            l5981 4DDA                              l5973 4DBA  
                            l5965 4DA0                              l5893 4722  
                            l5885 46F0                              l4999 08D2  
                            l5879 45A4                              l5799 3E84  
                            l5959 49CA                              l5991 4E4C  
                            l5983 4DE4                              l5975 4DC4  
                            l5967 4DAC                              l5895 4734  
                            l5887 46F4                              l5993 4E5E  
                            l5985 4E0E                              l5977 4DD0  
                            l5969 4DB2                              l5897 473A  
                            l5889 4706                              l5995 4E68  
                            l5987 4E1A                              l5979 4DD6  
                            l5899 4740                              l5997 5D3E  
                            l5989 4E2C                              l5999 5D42  
                            STR_1 0635                              STR_2 06AA  
                            STR_3 0646                              STR_4 069A  
                            STR_5 0657                              STR_6 069A  
                            STR_7 0613                              STR_8 06B9  
                            STR_9 0613                              u4000 4E92  
                            u4001 4E8E                              u4010 4EBA  
                            u4011 4EB6                              u4020 4EF0  
                            u4100 21CE                              u4021 4EEC  
                            u4101 21CA                              u4110 21DC  
                            u4030 20F6                              u4111 21D8  
                            u4031 20F2                              u5000 29A8  
                            u4200 231A                              u4120 224A  
                            u4040 2108                              u5001 29A4  
                            u4201 2316                              u4121 2246  
                            u4041 2104                              u5010 5010  
                            u4210 2328                              u4130 2262  
                            u4050 2118                              u5011 500C  
                            u4211 2324                              u4131 225C  
                            u4051 2114                              u5020 502A  
                            u5100 51D8                              u4300 2472  
                            u4220 2346                              u4140 2264  
                            u4060 215A                              u5021 5026  
                            u5101 51D4                              u4301 246E  
                            u4221 2342                              u4061 2156  
                            u5030 5050                              u5110 51EE  
                            u4310 2484                              u4230 237E  
                            u4150 228C                              u4070 2170  
                            u5031 504C                              u5111 51EA  
                            u4311 2480                              u4231 237A  
                            u4151 2288                              u4071 216C  
                            u5040 506E                              u5120 5212  
                            u5200 4AF0                              u4400 256C  
                            u4320 249A                              u4240 23C4  
                            u4160 22AA                              u4080 2182  
                            u6000 0BB2                              u5041 506A  
                            u5121 520E                              u5201 4AEC  
                            u4401 2568                              u4321 2496  
                            u4241 23C0                              u4161 22A6  
                            u4081 217E                              u6001 0BAE  
                            u5050 508A                              u5130 5252  
                            u5210 5B0C                              u4410 2588  
                            u4330 24B0                              u4250 23FA  
                            u4170 22CA                              u4090 2192  
                            u6010 0BC0                              u5051 5086  
                            u5131 524E                              u5211 5B08  
                            u4411 2584                              u4331 24AC  
                            u4251 23F6                              u4171 22C6  
                            u4091 218E                              u6011 0BBC  
                            u4500 4136                              u4420 59C0  
                            u5300 4F6A                              u5060 50B0  
                            u5140 5290                              u4340 24C4  
                            u4260 240A                              u4180 22D8  
                            u5220 4802                              u6100 0F20  
                            u6020 0BEA                              u4501 4132  
                            u4421 59BC                              u5301 4F66  
                            u5061 50AC                              u5141 528C  
                            u4341 24C0                              u4261 2406  
                            u4181 22D4                              u5221 47FE  
                            u6101 0F1C                              u6021 0BE6  
                            u4510 4176                              u4430 5BFC  
                            u5310 4FC0                              u5070 5186  
                            u5150 52C4                              u4350 24DE  
                            u4270 2436                              u4190 22E8  
                            u5230 4836                              u6110 0F2E  
                            u6030 0D32                              u4511 4172  
                            u4431 5BF8                              u5311 4FBC  
                            u5071 5182                              u5151 52C0  
                            u4351 24DA                              u4271 2432  
                            u4191 22E4                              u6111 0F2A  
                            u6031 0D2E                              u4520 41C0  
                            u5320 4FD0                              u5080 51A0  
                            u4600 29F2                              u5160 4A24  
                            u4360 2518                              u4280 2446  
                            u5240 4864                              u5400 4BE6  
                            u4440 5AEE                              u6200 1120  
                            u6120 0F48                              u6040 0D98  
                            u7000 3E46                              u4521 41BC  
                            u5321 4FCC                              u5081 519C  
                            u4601 29EE                              u5161 4A20  
                            u4361 2514                              u4281 2442  
                            u5241 4860                              u4441 5AE8  
                            u6201 111C                              u6121 0F44  
                            u6041 0D94                              u7001 3E42  
                            u4530 4214                              u5330 5A1E  
                            u5090 51BA                              u4610 2A02  
                            u5170 4A62                              u4370 252A  
                            u4290 2462                              u5250 4878  
                            u5410 57D2                              u4450 5AF0  
                            u6210 11A4                              u6130 0F56  
                            u6050 0DE0                              u7010 3E64  
                            u4531 4210                              u5331 5A1A  
                            u5091 51B6                              u4611 29FE  
                            u5171 4A5E                              u4371 2526  
                            u4291 245E                              u5251 4874  
                            u5235 482C                              u6211 11A0  
                            u6131 0F52                              u6051 0DDC  
                            u7011 3E60                              u6300 402A  
                            u4460 408C                              u4540 4246  
                            u4700 2BCE                              u4620 2A46  
                            u5180 4A80                              u4380 253A  
                            u5260 48A0                              u5340 4B3A  
                            u5500 3706                              u5420 57E4  
                            u6220 11BE                              u6140 0FAE  
                            u6060 0DF0                              u7100 44DA  
                            u7020 3E74                              u6301 4024  
                            u4461 4088                              u4541 4242  
                            u4701 2BCA                              u4621 2A42  
                            u5181 4A7C                              u4381 2536  
                            u5261 489C                              u5501 3702  
                            u5421 57E0                              u6221 11BA  
                            u6141 0FAA                              u6061 0DEC  
                            u7101 44D6                              u7021 3E70  
                            u6310 402C                              u4470 40BE  
                            u4550 4284                              u4710 2BE4  
                            u4630 2A58                              u5190 4AA0  
                            u4390 255A                              u5270 48C0  
                            u5350 4B58                              u5510 372A  
                            u5430 575A                              u6230 11D6  
                            u6150 1080                              u6070 0E58  
                            u7110 44EC                              u7030 3E84  
                            u4471 40BA                              u4551 4280  
                            u4711 2BE0                              u4631 2A54  
                            u5191 4A9C                              u4391 2556  
                            u5271 48BC                              u5351 4B54  
                            u5431 5754                              u6231 11D2  
                            u6151 107C                              u6071 0E54  
                            u7111 44E8                              u7031 3E80  
                            u6400 57F6                              u6320 4042  
                            u4560 42AE                              u5600 3076  
                            u4800 2D1E                              u4720 2C02  
                            u4640 2A68                              u5280 48D0  
                            u5360 4B80                              u5520 3746  
                            u5440 575C                              u6240 1234  
                            u6160 109C                              u6080 0EFC  
                            u7120 4524                              u7040 3E94  
                            u7200 476E                              u6401 57F2  
                            u6321 403E                              u4481 40E8  
                            u4561 42AA                              u5601 3070  
                            u4801 2D1A                              u4721 2BFE  
                            u4641 2A64                              u5281 48CC  
                            u5361 4B7C                              u5345 4B30  
                            u5521 3742                              u5417 57C8  
                            u6241 122E                              u6161 1098  
                            u6081 0EF8                              u7121 4520  
                            u7041 3E90                              u7201 476A  
                            u6410 580C                              u6330 4054  
                            u4490 410C                              u4570 42DC  
                            u5290 4F48                              u5610 3078  
                            u4810 2D4C                              u4730 2C22  
                            u4650 2AA8                              u5370 4BAA  
                            u5530 379A                              u5450 5772  
                            u6250 1236                              u6170 10AE  
                            u6090 0F0E                              u7130 4536  
                            u7050 3EBE                              u7210 47E0  
                            u6411 5808                              u6331 4050  
                            u4491 4108                              u4571 42D8  
                            u5291 4F44                              u4811 2D48  
                            u4731 2C1E                              u4651 2AA4  
                            u5371 4BA6                              u5515 3720  
                            u5451 576E                              u6171 10AA  
                            u6091 0F0A                              u7131 4532  
                            u7051 3EBA                              u7211 47DC  
                            u6420 5822                              u4580 4324  
                            u5700 3292                              u5620 308E  
                            u4740 2C34                              u4660 2AE8  
                            u4900 27FA                              u4820 25B6  
                            u5540 37B6                              u5460 3646  
                            u6260 124C                              u6180 10BC  
                            u6340 4C22                              u6500 3BBE  
                            u7140 45B8                              u7060 3ECE  
                            u7300 4E2C                              u6421 581E  
                            u4581 4320                              u5701 328E  
                            u5621 308A                              u4741 2C30  
                            u4661 2AE4                              u4821 25B2  
                            u5541 37B2                              u6261 1248  
                            u6181 10B8                              u6341 4C1E  
                            u6501 3BBA                              u7141 45B4  
                            u7061 3ECA                              u7221 48F8  
                            u7301 4E28                              u6430 5838  
                            u6270 3F22                              u5710 32A2  
                            u5630 30BE                              u4750 2C62  
                            u4670 2B5E                              u4590 29E0  
                            u4910 2854                              u4830 25C8  
                            u5390 4BE4                              u5550 37F2  
                            u5470 3676                              u6190 10F2  
                            u6350 4C54                              u6510 3C1A  
                            u7070 3EDE                              u7230 4914  
                            u7310 4E5E                              u6431 5834  
                            u8007 539C                              u6271 3F1E  
                            u5711 329E                              u5631 30BA  
                            u4751 2C5E                              u4671 2B5A  
                            u4591 29DC                              u4911 2850  
                            u4831 25C4                              u5391 4BDE  
                            u5551 37EE                              u5535 3790  
                            u5471 3672                              u6191 10EE  
                            u6351 4C50                              u6511 3C16  
                            u7071 3EDA                              u7231 4910  
                            u7311 4E5A                              u7151 46EA  
                            u5560 5B5E                              u6280 3F58  
                            u5720 32B4                              u5640 30DA  
                            u4760 2C78                              u4680 2B80  
                            u4920 2874                              u4840 25D8  
                            u5480 3698                              u5800 07F8  
                            u6360 4C70                              u6600 1B0C  
                            u6520 3C70                              u6440 560E  
                            u7400 448C                              u7240 4930  
                            u7160 4706                              u8017 53B6  
                            u5561 5B58                              u6281 3F54  
                            u5721 32B0                              u5641 30D6  
                            u4761 2C74                              u4681 2B7C  
                            u4921 2870                              u4905 27F0  
                            u4841 25D4                              u5385 4BBC  
                            u5481 3694                              u5465 363C  
                            u5801 07F2                              u6361 4C6C  
                            u6601 1B08                              u6521 3C6C  
                            u7081 44A2                              u6441 560A  
                            u7401 4488                              u7321 436C  
                            u7241 492C                              u7161 4702  
                            u5570 5B60                              u6290 3F74  
                            u5730 32C4                              u5650 3108  
                            u4770 2C8C                              u4690 2BAA  
                            u4930 2886                              u4850 2618  
                            u5810 07FA                              u6370 4C82  
                            u6610 1B52                              u6530 3CBA  
                            u7090 44BE                              u6450 5648  
                            u7330 43E0                              u7250 4942  
                            u7170 4722                              u8027 53CC  
                            u6291 3F70                              u5731 32C0  
                            u5651 3104                              u4771 2C88  
                            u4691 2BA6                              u4931 2882  
                            u4851 2614                              u6371 4C7E  
                            u6611 1B4E                              u6531 3CB6  
                            u7091 44BA                              u6451 5644  
                            u7331 43DC                              u7411 3330  
                            u7251 493E                              u7171 471E  
                            u5580 58FE                              u5740 32DC  
                            u5660 3116                              u4780 2CA6  
                            u4940 28B4                              u4860 262A  
                            u5900 0A94                              u5820 0810  
                            u6380 4CAA                              u6700 1D40  
                            u6620 1BD4                              u6540 3CD8  
                            u6460 52F4                              u7340 4408  
                            u7500 351A                              u7420 334C  
                            u7260 4968                              u7180 4734  
                            u8037 5D32                              u5581 58FA  
                            u5741 32D8                              u5661 3112  
                            u4781 2CA2                              u4941 28B0  
                            u4861 2626                              u5901 0A90  
                            u5821 080C                              u6381 4CA6  
                            u6701 1D3C                              u6621 1BCE  
                            u6541 3CD4                              u6461 52F0  
                            u7341 4404                              u7501 3516  
                            u7421 3348                              u7261 4964  
                            u7181 4730                              u5590 592C  
                            u3990 4E80                              u5670 3240  
                            u4790 2CEE                              u4950 28CA  
                            u4870 263A                              u5910 0AA6  
                            u5830 089C                              u5750 0710  
                            u6710 1D82                              u6630 1BD6  
                            u6550 3CE8                              u6470 5316  
                            u6390 59E8                              u7350 4418  
                            u7510 354C                              u7430 3364  
                            u7270 497A                              u7190 475C  
                            u5591 5928                              u3991 4E7C  
                            u5671 323C                              u4791 2CEA  
                            u4951 28C6                              u4871 2636  
                            u5495 36AC                              u5911 0AA2  
                            u5831 0898                              u5751 070C  
                            u6711 1D7E                              u6551 3CE4  
                            u6471 5312                              u6391 59E4  
                            u7351 4414                              u7511 3548  
                            u7431 3360                              u7271 4976  
                            u7191 4758                              u7600 3872  
                            u5680 325E                              u4960 28DE  
                            u4880 2670                              u5496 36B6  
                            u5920 0AC8                              u5840 08CC  
                            u5760 0760                              u6720 1DD8  
                            u6640 1BEC                              u6560 3CF6  
                            u6800 5518                              u6480 533E  
                            u7360 4428                              u7520 3598  
                            u7440 337A                              u7280 49EA  
                            u7601 386E                              u5681 325A  
                            u4961 28DA                              u4881 266C  
                            u5497 36C6                              u5921 0AC4  
                            u5841 08C6                              u5761 075C  
                            u6721 1DD4                              u6641 1BE8  
                            u6561 3CF2                              u6801 5514  
                            u6481 533A                              u7361 4424  
                            u7521 3594                              u7441 3376  
                            u7281 49E6                              u7610 3880  
                            u5690 3278                              u4970 28F8  
                            u4890 2680                              u5930 0AEE  
                            u5850 08CE                              u5770 076E  
                            u6730 1DFC                              u6650 1C10  
                            u6570 3D30                              u6490 3BB0  
                            u6810 549E                              u7370 443A  
                            u7530 35A6                              u7450 33DE  
                            u7611 387C                              u5691 3274  
                            u4971 28F4                              u4891 267C  
                            u5931 0AEA                              u5771 076A  
                            u6731 1DF8                              u6651 1C0C  
                            u6571 3D2C                              u6491 3BAC  
                            u6811 549A                              u7371 4436  
                            u7531 35A2                              u7451 33DA  
                            u7291 4DA6                              u7700 392E  
                            u7620 3896                              u6900 5440  
                            u4980 2940                              u5940 0B04  
                            u5860 08E4                              u5780 0780  
                            u6740 1E8E                              u6660 1C4C  
                            u6580 3D3E                              u6820 3B28  
                            u7380 4460                              u7540 35F2  
                            u7460 3410                              u7701 392A  
                            u7621 3892                              u4981 293C  
                            u5941 0B00                              u5861 08E0  
                            u5781 077C                              u6741 1E8A  
                            u6661 1C48                              u6581 3D3A  
                            u6821 3B24                              u7381 445C  
                            u7541 35EE                              u7461 340C  
                            u7710 393E                              u7630 38A6  
                            u6910 5474                              u4990 296E  
                            u5950 0B20                              u5870 0968  
                            u5790 07C8                              u6750 1F3C  
                            u6670 1CF6                              u6590 1AC2  
                            u6830 3B4C                              u7390 447C  
                            u7470 345C                              u7550 5D1C  
                            u7711 393A                              u7631 38A2  
                            u4991 296A                              u5951 0B1C  
                            u5871 0964                              u5791 07C4  
                            u6751 1F38                              u6671 1CF0  
                            u6591 1ABE                              u6831 3B48  
                            u7391 4478                              u7471 3458  
                            u7551 5D18                              u7800 5D6C  
                            u7720 3956                              u7640 38BE  
                            u7560 3826                              u6920 5484  
                            u5960 0B56                              u5880 09FC  
                            u6760 1FA4                              u6680 1CF8  
                            u6840 3B70                              u7480 346A  
                            u7801 5D68                              u7721 3952  
                            u7641 38BA                              u7561 3822  
                            u6921 5480                              u5961 0B52  
                            u5881 09F8                              u6761 1F9E  
                            u6841 3B6C                              u7481 3466  
                            u7730 3964                              u7650 38CC  
                            u7570 3834                              u5970 0B7C  
                            u5890 0A6E                              u6770 1FA6  
                            u6690 1D0E                              u6850 3B94  
                            u7490 34B6                              u7810 5594  
                            u7731 3960                              u7651 38C8  
                            u7571 3830                              u6907 5436  
                            u5971 0B78                              u5891 0A6A  
                            u6691 1D0A                              u6851 3B90  
                            u6931 3D58                              u7491 34B2  
                            u7811 5590                              u7740 397A  
                            u7660 38E2                              u7580 384A  
                            u5980 0B8E                              u6780 1FBC  
                            u6860 56BA                              u6940 3DC8  
                            u7820 55B8                              u7900 4D90  
                            u7741 3976                              u7661 38DE  
                            u7581 3846                              u6917 546A  
                            u5981 0B8A                              u6781 1FB8  
                            u6861 56B6                              u6941 3DC4  
                            u7821 55B4                              u7901 4D8C  
                            u7750 398A                              u7670 38F2  
                            u7590 385A                              u6870 5C66  
                            u5990 0B9C                              u6790 2058  
                            u6950 3DE8                              u7830 55DC  
                            u7751 3986                              u7671 38EE  
                            u7591 3856                              u6871 5C62  
                            u5991 0B98                              u6791 2054  
                            u6951 3DE4                              u7831 55D8  
                            u7760 39A2                              u7680 390A  
                            u6880 56D6                              u6960 3DF8  
                            u7840 4D16                              u7761 399E  
                            u7681 3906                              u6881 56D2  
                            u6961 3DF4                              u7841 4D12  
                            u7770 39B0                              u7690 3918  
                            u6890 570A                              u6970 3E16  
                            u7850 4D28                              u7771 39AC  
                            u7691 3914                              u6891 5706  
                            u6971 3E12                              u7851 4D24  
                            u7780 39C6                              u6980 3E26  
                            u7860 4D38                              u7781 39C2  
                            u6981 3E22                              u7861 4D34  
                            u7790 39D6                              u6990 3E36  
                            u7870 4D48                              u7791 39D2  
                            u6991 3E32                              u7871 4D44  
                            u7880 4D58                              u7881 4D54  
                            u7890 4D74                              u7891 4D70  
                            u7977 46CA                              u7987 5B82  
                            u7997 5B94                              _TMR2 000FBC  
           ??_stopTimeSettingMenu 005F                              abs@a 0013  
               ?_Lcd_Write_String 0005                              _dbuf 0240  
                            _atoi 3EEA                              _main 4CCE  
                            _dtoa 3046                              _prec 00F6  
                            _nout 01CF                              pad@i 0018  
                            pad@p 0015                              fsr1h 000FE2  
                            fsr2h 000FDA                              indf1 000FE7  
                            indf2 000FDF                              fsr1l 000FE1  
                            pad@w 001A                              fsr2l 000FD9  
                            btemp 005F                     ___fpclassifyf 4AFA  
                            prodh 000FF4                              prodl 000FF3  
                            start 009A                ??_Lcd_Write_String 0007  
                 ___fldiv@new_exp 0046                   __end_of_Lcd_Cmd 5D3E  
                    _tolower$2731 000D                      ___param_bank 000000  
         ??_driverTimeSettingMenu 005F                             ??_abs 0015  
                           ??_pad 0017                      ?_menuControl 0001  
speedLimitSettingMenu@textCursor2 00E1                     ___fltol@sign1 0056  
                 __end_of___aodiv 4202                             ?_atoi 0008  
                 __end_of___fladd 259C                             ?_main 0001  
                           ?_dtoa 001C                   __end_of___aomod 4366  
                 __end_of_adcInit 5A82                   __end_of___fldiv 2D60  
                 __end_of___awdiv 50C2                   __end_of___flneg 5B2E  
                           _EEADR 000FA9                             STR_10 06C7  
                           STR_11 0624                             STR_12 0601  
                           STR_21 06D8                             STR_13 0679  
                           STR_22 06E0                             STR_14 068A  
                           STR_15 0668                             STR_16 0601  
                           STR_25 06E4                             STR_17 06D4  
                           STR_18 06DC                             STR_27 06E4  
                 __end_of___awmod 5224                   __end_of___flmul 29C6  
                 __end_of___flsub 597E                   __end_of___fltol 48F2  
                 __end_of___lldiv 5372                             _T0CON 000FD5  
                 ___awdiv@divisor 0003                             i2l542 0096  
                 ___awdiv@counter 0005                      vfpfcnvrt@fmt 00A9  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
         __size_of_Lcd_Set_Cursor 0066               ___lmul@multiplicand 0005  
                           _fabsf 5C0A                             _flags 00F8  
                           _fputc 4E6E                             _fputs 597E  
                 __end_of_isdigit 5B66                       ?_PWM1_setDC 0058  
                    _adc_raw_data 0193                       ?_PWM2_setDC 0058  
                           atoi@n 0015                             pad@fp 0011  
                           atoi@s 0008                             _width 01D1  
                           _putch 5D90                             dtoa@d 001E  
                           dtoa@i 003E                             dtoa@n 0036  
                           dtoa@p 0030                             dtoa@s 0034  
                           dtoa@w 0032                   __end_of_isspace 5938  
                 __end_of_isupper 5AF6                  __end_of_PWM_Init 5CBC  
                           tablat 000FF5                             ttemp5 0060  
                           ttemp6 0063                             ttemp7 0067  
                           status 000FD8            ?_speedLimitSettingMenu 0001  
                           wtemp8 0060                   __end_of_sprintf 58E6  
                  ?___fpclassifyf 0001                   __end_of_tolower 578A  
                 __end_of_strncmp 4CCE                     ?_readAdcValue 0001  
                __end_of_Lcd_Port 5842                   __initialization 5842  
                     _system_init 45C4                      __end_of_atoi 407A  
                    __end_of_main 4DA0                      __end_of_dtoa 332A  
                          ??_atoi 000A                            ??_main 005F  
                          ??_dtoa 0026                __size_of_Lcd_Clear 000E  
                   __activetblptr 000002   __size_of_calculatedAverageValue 02E6  
        stopTimeSettingMenu@F6426 0210                            ?_fabsf 001C  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          ?_fputc 0001                            ?_fputs 000A  
                          _ADRESH 000FC4                            _ADRESL 000FC3  
                          _EEDATA 000FA8                            _CCPR1L 000FBE  
                          _CCPR2L 000F67                            _EECON2 000FA7  
                ___awdiv@dividend 0001                            ?_putch 0001  
                          i2l6351 000A                            i2l6361 0034  
                          i2l6353 0018                            i2l6371 0070  
                          i2l6363 0046                            i2l6355 0026  
                          i2l6373 0074                            i2l6365 004C  
                          i2l6357 0028                            i2l6375 008A  
                          i2l6367 005E                            i2l6359 0030  
                          i2l6377 0092                            i2l6369 0060  
                       ??_Lcd_Cmd 0002                            _TIMER0 0008  
                  ??_readAdcValue 0003           __size_of_Lcd_Write_Char 0038  
                __end_of___xxtofl 3D52                 _scanAdcConversion 1298  
              _timer_counter_flag 00FF                ?_scanAdcConversion 0001  
            __size_of_eepromWrite 002E                      vfprintf@cfmt 00CD  
                __end_of_lcd_init 5408                            ___flge 49F6  
                          ___fleq 5224                  __end_of_mainMenu 3EEA  
                          ___lmul 55F0                         ??___aodiv 0011  
                       ??___fladd 003D                         ??___aomod 0011  
                          ___wmul 5CBC                         ??_adcInit 0001  
                       ??___fldiv 003D                         ??___awdiv 0005  
                       ??___flneg 0005                         ??___awmod 0005  
                       ??___flmul 0024                         ??___flsub 004D  
                       ??___fltol 0052                         ??___lldiv 0009  
                          _efgtoa 06E8                            _floorf 35FE  
             __size_of_PWM1_setDC 007A                            fabsf@u 0020  
                          fabsf@x 001C                  __end_of_mcu_init 5D6E  
                __end_of_exitLine 5D90               __size_of_PWM2_setDC 007A  
               _secretMenuCounter 00FB               ??_scanAdcConversion 0058  
                          clear_0 5868                            clear_1 5874  
                          clear_2 5880                   eepromWrite@data 0001  
                ___awdiv@quotient 0007                   ___awmod@divisor 0003  
                 ___awmod@counter 0005                            pad@buf 0013  
                          dtoa@fp 001C                            _strcpy 578A  
                          _strlen 5BD4                            fputc@c 0001  
            readAdcValue@adcValue 0006                            fputs@c 000E  
                          fputs@i 000F                            fputs@s 000A  
                       ??_isdigit 0003                   ___fpclassifyf@e 0009  
                 ___fpclassifyf@u 000B                   ___fpclassifyf@x 0001  
                    __mediumconst 0000                         ??_isspace 0003  
                          tblptrh 000FF7                         ??_isupper 0003  
                          tblptrl 000FF6                            tblptru 000FF8  
                          putch@c 0001                  __end_of_vfprintf 56C4  
                       ??_sprintf 005F                         ??_tolower 0009  
                __end_of_stopMenu 4E6E                         ??_strncmp 0007  
      __end_of_buttonControlFlags 39E0                   Lcd_Set_Cursor@a 0005  
                 Lcd_Set_Cursor@b 0004                   Lcd_Set_Cursor@y 0007  
                 Lcd_Set_Cursor@z 0006                        ___flge@ff1 0035  
                      ___flge@ff2 0039                   ??___fpclassifyf 0005  
                    ___xxtofl@arg 0018                     mainMenu@F6410 0183  
                    ___xxtofl@exp 0017                      ___xxtofl@val 000E  
                      ___fleq@ff1 0001                        ___fleq@ff2 0005  
       __end_of_scanAdcConversion 1A9E                        __accesstop 0060  
         __end_of__initialization 5886                        ___flneg@f1 0001  
          _calculatedAverageValue 2D60                 __end_of_Lcd_Clear 5D8E  
                   ___rparam_used 000001                        ___fltol@f1 004E  
                  __pcstackCOMRAM 0001                      __pidataBANK1 5CE2  
      driverTimeSettingMenu@F6429 0200                     __end_of_fabsf 5C3E  
                   __end_of_fputc 4F38                     __end_of_fputs 59C2  
                   __end_of_putch 5D92                         ?_PWM_Init 0001  
                  _Lcd_Set_Cursor 56C4      _KP@fs_speed_controller$F1184 01E7  
    _KP@fs_speed_controller$F1640 01DF      _KP@fs_speed_controller$F1844 01D7  
               eepromRead@address 0001              __size_of_menuControl 0076  
                         ??_fabsf 0020                         ?_Lcd_Port 0001  
                         ??_fputc 0005                           ??_fputs 000E  
                         ??_putch 0001                        __pbssBANK0 00F3  
                      __pbssBANK1 0100                        __pbssBANK2 0200  
             PWM1_setDC@dutycycle 0058                           ?_TIMER0 0001  
                         ?___flge 0035                           ?___fleq 0001  
              __size_of_pauseMenu 0136                           ?___lmul 0001  
                         ?___wmul 0001                           ?_efgtoa 0058  
  __size_of_driverTimeSettingMenu 0128                           _CCP1CON 000FBD  
                         _CCP2CON 000F66                           ?_floorf 004E  
   __end_of_driverTimeSettingMenu 45C4                    ___lmul@product 0009  
       __size_of_Lcd_Write_String 007E            __end_of_Lcd_Set_Cursor 572A  
                      ??_PWM_Init 0001                           ?_strcpy 0001  
                         ?_strlen 0001              __end_of_readAdcValue 5A04  
                      _eepromRead 5D02                         ?___xxtofl 000E  
  stopTimeSettingMenu@textCursor2 00E1                __size_of_vfpfcnvrt 063E  
     __end_of_stopTimeSettingMenu 47EC                        ??_Lcd_Port 0001  
              __size_of_startMenu 001A                      ??_PWM1_setDC 005A  
                    ??_PWM2_setDC 005A                         ?_lcd_init 0001  
         __size_of_menuInitialize 0028           ??_speedLimitSettingMenu 005F  
                       ?_mainMenu 0001                     _menu_selected 00FA  
              __size_of_stopMotor 003C        __size_of_scanAdcConversion 0806  
                  _Lcd_Write_Char 5B66                           _Lcd_Cmd 5D20  
                       ?_mcu_init 0001                         ?_exitLine 0001  
                 __size_of_TIMER0 0092                        _controller 0150  
                         __Hparam 0000                           __Lparam 0000  
             PWM2_setDC@dutycycle 0058                      ?_system_init 0001  
                 __size_of___flge 0104                   __size_of___fleq 00AA  
                         ___aodiv 407A                           ___fladd 20DC  
                         ___aomod 4202                           _adcInit 5A44  
                         ___fldiv 29C6                           ___awdiv 4FFE  
                         ___flneg 5AF6                   __size_of___lmul 006A  
                         ___awmod 5174                           ___flmul 259C  
                         ___flsub 5938                           ___fltol 47EC  
                         ___lldiv 52CE                   __size_of___wmul 0026  
                       ?_vfprintf 00C7                      __psmallconst 0600  
                 __size_of_efgtoa 0BB0                         ?_stopMenu 0001  
                 __size_of_floorf 0216                           __pcinit 5842  
              __end_of_PWM1_setDC 557A                           __ramtop 0600  
                 ?_Lcd_Set_Cursor 0004                __end_of_PWM2_setDC 5500  
                         __ptext0 4CCE                           __ptext1 5D6E  
                         __ptext2 45C4                           __ptext3 5D02  
                         __ptext4 5C6C                           __ptext5 557A  
                         __ptext6 50C2                           __ptext7 46E4  
                         __ptext8 4DA0                           __ptext9 5D3E  
                      _menu_flags 01B7                        _menu_value 00F3  
                 __size_of_strcpy 005C                   __size_of_strlen 0036  
                       _T2CONbits 000FBA                      __size_of_abs 0040  
                    __size_of_pad 00C6                           _isdigit 5B2E  
                      ??___xxtofl 0012                  ___awmod@dividend 0001  
                         _isspace 58E6                           _isupper 5ABE  
                         efgtoa@c 005E                           efgtoa@d 0087  
                         efgtoa@e 009F                           efgtoa@f 005A  
                         efgtoa@g 009B                           efgtoa@h 0091  
                         efgtoa@i 0099                           efgtoa@l 0095  
                         efgtoa@m 0083                           efgtoa@n 00A1  
                         efgtoa@p 008B                           efgtoa@t 007F  
                         efgtoa@u 00A3                           efgtoa@w 008E  
                   ?_speedControl 0058                           atoi@neg 000E  
                   ?_timer_0_init 0001                 __end_of_pauseMenu 449C  
                         _sprintf 5894                           _tolower 572A  
                      ??_lcd_init 0004            __end_of_Lcd_Write_Char 5B9E  
                         _strncmp 4BF8              end_of_initialization 5886  
                      ??_mainMenu 005F              speedControl@position 0058  
                         floorf@e 0064                           floorf@m 0060  
                         floorf@u 0066                           floorf@x 004E  
                      _secretMenu 332A                           fputc@fp 0003  
                      ??_mcu_init 0001                        ??_exitLine 0001  
                   __Lmediumconst 0000                           fputs@fp 000C  
                 ___lldiv@divisor 0005                   ___lldiv@counter 000D  
               __end_of_vfpfcnvrt 20DC                        efgtoa@mode 0090  
                      efgtoa@sign 0089                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
                       Lcd_Port@a 0001                 __end_of_startMenu 5D58  
                      ??_vfprintf 005F                        ??_stopMenu 005F  
                         strcpy@d 0009                           strlen@a 0003  
                         strcpy@s 0007                           strlen@s 0001  
               __end_of_stopMotor 5ABE                         _PORTBbits 000F81  
                       _PORTDbits 000F83                       ?_eepromRead 0001  
                     ___fladd@grs 0044                     ___xxtofl@sign 0016  
                  pauseMenu@F6416 0163                         _TRISAbits 000F92  
                  ??_speedControl 005C                         _TRISBbits 000F93  
                       _TRISCbits 000F94                         _TRISDbits 000F95  
                       _TRISEbits 000F96                    ??_timer_0_init 0001  
            pauseMenu@textCursor2 00E1                       ___fldiv@grs 0048  
                     ___fldiv@rem 0041                        _startMotor 5B9E  
                 ?_Lcd_Write_Char 0001           ?_calculatedAverageValue 0001  
               Lcd_Write_String@a 0005                 Lcd_Write_String@i 0009  
                     ___flmul@grs 0029                     ??_eepromWrite 0002  
        _button_bounce_controller 01BD                    __end_of_TIMER0 009A  
             mainMenu@textCursor2 00E1                     ?_stateMachine 0001  
              _buttonControlFlags 3814                         _Lcd_Clear 5D80  
                    _convert_data 0100             __size_of_readAdcValue 0042  
                  __end_of___flge 4AFA                    __end_of___fleq 52CE  
                  __end_of___lmul 565A                       vfpfcnvrt@ap 00AB  
                     vfpfcnvrt@ct 00C3                       vfpfcnvrt@fp 00A7  
                     vfpfcnvrt@ll 00B1                    __end_of___wmul 5CE2  
                _Lcd_Write_String 5408                    __end_of_efgtoa 1298  
             ?_buttonControlFlags 0001                    __end_of_floorf 3814  
                      floorf@F524 01C3                    __end_of_strcpy 57E6  
                  __end_of_strlen 5C0A                 __size_of_PWM_Init 0028  
             start_initialization 5842                       __end_of_abs 5A44  
                     __end_of_pad 4FFE    __end_of_calculatedAverageValue 3046  
                  _menuInitialize 5C6C                      _driver_limit 01A3  
                     ?_secretMenu 0001                 __size_of_Lcd_Port 005C  
            ??_buttonControlFlags 0001                          ??_TIMER0 0001  
                   stopMenu@F6413 0173             __end_of___fpclassifyf 4BF8  
                    _readAdcValue 59C2                    ??_stateMachine 00F1  
             __size_of_eepromRead 001E                       vfprintf@fmt 00C9  
                      ?_Lcd_Clear 0001                          ??___flge 003D  
                        ??___fleq 0009                          ??___lmul 0009  
             __end_of_eepromWrite 5C6C                          ??___wmul 0005  
                        ??_efgtoa 006A                       __pdataBANK1 01D3  
                        ??_floorf 0052              __size_of_system_init 0120  
                 Lcd_Write_Char@a 0004                   Lcd_Write_Char@y 0003  
                   ??_menuControl 005F                          ??_strcpy 0005  
                        ??_strlen 0003                         ___fladd@a 0039  
                       ___fladd@b 0035                         ___fldiv@a 0039  
                       ___fldiv@b 0035                         ___flmul@a 0020  
                       ___flmul@b 001C                         ___flsub@a 0049  
                       ___flsub@b 0045            __end_of_menuInitialize 5C94  
                   __pcstackBANK0 0060                  ___aodiv@dividend 0001  
               __size_of___xxtofl 01B4                       ?_startMotor 0001  
  __size_of_speedLimitSettingMenu 0104     __end_of_speedLimitSettingMenu 49F6  
                        ?_Lcd_Cmd 0001                 __size_of_lcd_init 0096  
               __size_of_mainMenu 0198                         _atoi$2636 0010  
                       _atoi$2637 0014                         _atoi$2638 0012  
                 secretMenu@F6420 0230                 __size_of_mcu_init 0016  
               __size_of_exitLine 0002                       _efgtoa$2570 0075  
                     _efgtoa$2580 007D                       _efgtoa$2574 0077  
                     _efgtoa$2569 0073                       _efgtoa$2578 0079  
                     _efgtoa$2579 007B                         _dtoa$2545 002E  
            __end_of_speedControl 3B9E                  ??_Lcd_Set_Cursor 0005  
                       __pintcode 0008              __end_of_timer_0_init 5D80  
                        ?___aodiv 0001                          ?___fladd 0035  
                        ?___aomod 0001                          ?_adcInit 0001  
                        ?___fldiv 0035                          ?___awdiv 0001  
                ___aodiv@quotient 0013                          ?___flneg 0001  
                        ?___awmod 0001                          ?___flmul 001C  
                        ?___flsub 0045                          ?___fltol 004E  
                        ?___lldiv 0001               __size_of_secretMenu 02D4  
               __size_of_vfprintf 006A             _driverTimeSettingMenu 449C  
               __size_of_stopMenu 00CE                         fabsf@F463 01CB  
                     __smallconst 0600                          ?_isdigit 0001  
                        ?_isspace 0001                   ?_menuInitialize 0001  
                        ?_isupper 0001               __end_of_menuControl 55F0  
                  __size_of_fabsf 0034                          ?_sprintf 00CF  
                        ?_tolower 0007                    __size_of_fputc 00CA  
                  __size_of_fputs 0044                          ?_strncmp 0001  
                  __size_of_putch 0002                eepromWrite@address 0002  
                       _pauseMenu 4366                    ___wmul@product 0005  
    __size_of_stopTimeSettingMenu 0108                          _LATCbits 000F8B  
                        _LATDbits 000F8C                       _eepromWrite 5C3E  
                  PWM1_setDC@duty 005C                          Lcd_Cmd@a 0003  
                        _PIR2bits 000FA1                          i2u791_40 0018  
                        i2u791_41 0014                          i2u792_40 0026  
                        i2u792_41 0022                          i2u793_40 0046  
                        i2u793_41 0042                          i2u794_40 005E  
                        i2u794_41 005A                          i2u795_40 0070  
                        i2u795_41 006C                          i2u796_40 008A  
                        i2u796_41 0086                       ??_Lcd_Clear 0004  
                    _pauseIsClick 00FE               __size_of_startMotor 0036  
                       _vfpfcnvrt 1A9E                        _ADCON0bits 000FC2  
                      _ADCON2bits 000FC0                          _PWM_Init 5C94  
               ___wmul@multiplier 0001                         _startMenu 5D3E  
driverTimeSettingMenu@textCursor2 00E1                      ??_eepromRead 0001  
                ??_Lcd_Write_Char 0002                    PWM2_setDC@duty 005C  
                       _stopMotor 5A82        speedLimitSettingMenu@F6423 0220  
            __end_of_stateMachine 5174                      _isspace$2667 0007  
                        _Lcd_Port 57E6                        vfpfcnvrt@c 00C6  
                      vfpfcnvrt@f 00BF                 ___lmul@multiplier 0001  
                       copy_data0 5856          __end_of_Lcd_Write_String 5486  
                      ?_pauseMenu 0001                  __size_of_Lcd_Cmd 001E  
                      _EECON1bits 000FA6                          __Hrparam 0000  
                      vfprintf@ap 00CB                          __Lrparam 0000  
                      vfprintf@fp 00C7                __end_of_eepromRead 5D20  
                __size_of___aodiv 0188                  __size_of___fladd 04C0  
                __size_of___aomod 0164                  __size_of_adcInit 003E  
                __size_of___fldiv 039A                  __size_of___awdiv 00C4  
                __size_of___flneg 0038                  __size_of___awmod 00B0  
                __size_of___flmul 042A                  __size_of___flsub 0046  
                __size_of___fltol 0106                  __size_of___lldiv 00A4  
                      ?_vfpfcnvrt 00A7            ?_driverTimeSettingMenu 0001  
                     _menuControl 557A                   ___aodiv@divisor 0009  
                 ___aodiv@counter 0011                        ?_startMenu 0001  
                      _ANSELAbits 000F38                        _ANSELBbits 000F39  
                      _ANSELCbits 000F3A                        _ANSELDbits 000F3B  
                      _ANSELEbits 000F3C                ___fpclassifyf@F463 01C7  
                      sprintf@fmt 00D1                          ___xxtofl 3B9E  
                      ?_stopMotor 0001                  __size_of_isdigit 0038  
                __size_of_isspace 0052                          __ptext10 48F2  
                        __ptext11 332A                          __ptext20 52CE  
                        __ptext12 4366                          __ptext21 5D8E  
                        __ptext13 3D52                          __ptext30 1A9E  
                        __ptext22 449C                          __ptext14 5B9E  
                        __ptext31 4BF8                          __ptext23 5A82  
                        __ptext15 39E0                          __ptext40 20DC  
                        __ptext32 06E8                          __ptext24 5486  
                        __ptext16 1298                          __ptext41 5AF6  
                        __ptext33 572A                          __ptext25 5500  
                        __ptext17 59C2                          __ptext50 5BD4  
                        __ptext42 259C                          __ptext34 5ABE  
                        __ptext26 5C0A                          __ptext18 2D60  
                        __ptext51 597E                          __ptext43 49F6  
                        __ptext35 578A                          __ptext27 3B9E  
                        __ptext19 55F0                          __ptext60 5CBC  
                        __ptext52 4E6E                          __ptext44 5224  
                        __ptext36 35FE                          __ptext28 5894  
                        __ptext61 5C3E                          __ptext53 5D90  
                        __ptext45 29C6                          __ptext37 4AFA  
                        __ptext29 565A                          __ptext70 5D80  
                        __ptext62 5408                          __ptext54 5A04  
                        __ptext46 5174                          __ptext38 47EC  
                        __ptext71 5D20                          __ptext63 5B66  
                        __ptext55 4202                          __ptext47 4FFE  
                        __ptext39 5938                          __ptext72 57E6  
                        __ptext64 56C4                          __ptext56 407A  
                        __ptext48 3046                          __ptext65 3814  
                        __ptext57 3EEA                          __ptext49 4F38  
                        __ptext66 5D58                          __ptext58 58E6  
                        __ptext67 5372                          __ptext59 5B2E  
                        __ptext68 5A44                          __ptext69 5C94  
                __size_of_isupper 0038                          _lcd_init 5372  
                        _mainMenu 3D52                  __size_of_sprintf 0052  
                __size_of_tolower 0060                      ??_secretMenu 005F  
                      strcpy@dest 0001                  __size_of_strncmp 00D6  
                        _mcu_init 5D58                          _exitLine 5D8E  
                   __size_of_atoi 0190                     __size_of_main 00D2  
                   __size_of_dtoa 02E4             __size_of_speedControl 01BE  
           __size_of_timer_0_init 0012             secretMenu@textCursor2 00E1  
                        efgtoa@fp 0058                          efgtoa@ne 0085  
                        efgtoa@pp 0081                          efgtoa@ou 006F  
                        int$flags 005F                          _vfprintf 565A  
                        _stopMenu 4DA0            readAdcValue@adcChannel 0005  
                ___aomod@dividend 0001                __end_of_secretMenu 35FE  
                  _vfpfcnvrt$2600 00BD                    _vfpfcnvrt$2594 00B9  
                  _vfpfcnvrt$2595 00BB                       _OSCTUNEbits 000F9B  
                      _INTCONbits 000FF2      _KD@fs_speed_controller$F1185 01E3  
    _KD@fs_speed_controller$F1641 01DB      _KD@fs_speed_controller$F1845 01D3  
                        isdigit@c 0001                      _speedControl 39E0  
                    _timer_0_init 5D6E                      ??_startMotor 005E  
              Lcd_Write_Char@temp 0002                          intlevel2 0000  
                       sprintf@ap 00D9                       ??_pauseMenu 005F  
     __size_of_buttonControlFlags 01CC                          isspace@c 0001  
                ___lldiv@dividend 0001                         strcpy@src 0003  
                        isupper@c 0001                         strncmp@_l 0001  
                       strncmp@_r 0003                        _OSCCONbits 000FD3  
                   ??_system_init 0002                       efgtoa@nmode 008D  
                    _procces_data 0130                   ___aomod@divisor 0009  
                     ??_vfpfcnvrt 00AD                   ___aomod@counter 0011  
              Lcd_Set_Cursor@temp 0008                  ??_menuInitialize 0001  
              __end_of_startMotor 5BD4             __size_of_stateMachine 00B2  
                     ??_startMenu 0001               _stopTimeSettingMenu 46E4  
                        sprintf@f 00DB                          tolower@c 0007  
                        sprintf@s 00CF            __size_of___fpclassifyf 00FE  
                ___lldiv@quotient 0009                       ??_stopMotor 005E  
                        strncmp@l 0008                          strncmp@n 0005  
                        strncmp@r 000A                       _timer_value 01AF  
                   ___fladd@signs 0041                        _PWM1_setDC 5500  
                      _PWM2_setDC 5486                      ___aodiv@sign 0012  
                    ___fladd@aexp 0042                      ___fladd@bexp 0043  
            ?_stopTimeSettingMenu 0001                      ?_eepromWrite 0001  
           _speedLimitSettingMenu 48F2                      ___aomod@sign 0012  
                    _stateMachine 50C2  
