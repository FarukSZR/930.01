

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Aug 11 18:22:22 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    81                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    82                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    83                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    84                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    85  0000                     
    86                           ; Version 2.20
    87                           ; Generated 05/05/2020 GMT
    88                           ; 
    89                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    90                           ; All rights reserved.
    91                           ; 
    92                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    93                           ; 
    94                           ; Redistribution and use in source and binary forms, with or without modification, are
    95                           ; permitted provided that the following conditions are met:
    96                           ; 
    97                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    98                           ;        conditions and the following disclaimer.
    99                           ; 
   100                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   101                           ;        of conditions and the following disclaimer in the documentation and/or other
   102                           ;        materials provided with the distribution.
   103                           ; 
   104                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   105                           ;        software without specific prior written permission.
   106                           ; 
   107                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   108                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   109                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   110                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   111                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   112                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   113                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   114                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   115                           ; 
   116                           ; 
   117                           ; Code-generator required, PIC18F45K22 Definitions
   118                           ; 
   119                           ; SFR Addresses
   120  0000                     
   121                           	psect	eeprom_data
   122  F00000  1E 0A 04 00 00 00 00 00 	db	30,10,4,0,0,0,0,0	;# 
   123  0000                     
   124                           	psect	idataBANK1
   125  005C46                     __pidataBANK1:
   126                           	callstack 0
   127                           
   128                           ;initializer for _KD
   129  005C46  0000               	dw	0
   130  005C48  3F80               	dw	16256
   131                           
   132                           ;initializer for _KP
   133  005C4A  CCCD               	dw	52429
   134  005C4C  3E4C               	dw	15948
   135  0000                     _ANSELCbits	set	3898
   136  0000                     _ANSELBbits	set	3897
   137  0000                     _ANSELDbits	set	3899
   138  0000                     _ANSELEbits	set	3900
   139  0000                     _ANSELAbits	set	3896
   140  0000                     _T0CON	set	4053
   141  0000                     _TMR0L	set	4054
   142  0000                     _TMR0H	set	4055
   143  0000                     _INTCONbits	set	4082
   144  0000                     _CCPR2L	set	3943
   145  0000                     _CCPR1L	set	4030
   146  0000                     _PR2	set	4027
   147  0000                     _TMR2	set	4028
   148  0000                     _T2CONbits	set	4026
   149  0000                     _CCP2CON	set	3942
   150  0000                     _CCP1CON	set	4029
   151  0000                     _LATCbits	set	3979
   152  0000                     _LATDbits	set	3980
   153  0000                     _TRISCbits	set	3988
   154  0000                     _OSCTUNEbits	set	3995
   155  0000                     _OSCCONbits	set	4051
   156  0000                     _TRISBbits	set	3987
   157  0000                     _TRISDbits	set	3989
   158  0000                     _PORTDbits	set	3971
   159  0000                     _PORTBbits	set	3969
   160  0000                     _PIR2bits	set	4001
   161  0000                     _EECON2	set	4007
   162  0000                     _EEDATA	set	4008
   163  0000                     _EECON1bits	set	4006
   164  0000                     _EEADR	set	4009
   165  0000                     _ADCON2bits	set	4032
   166  0000                     _ADCON1	set	4033
   167  0000                     _ADCON0	set	4034
   168  0000                     _TRISEbits	set	3990
   169  0000                     _TRISAbits	set	3986
   170  0000                     _ADRESL	set	4035
   171  0000                     _ADRESH	set	4036
   172  0000                     _ADCON0bits	set	4034
   173                           
   174                           	psect	smallconst
   175  000600                     __psmallconst:
   176                           	callstack 0
   177  000600  00                 	db	0
   178  000601                     STR_4:
   179  000601  25                 	db	37
   180  000602  64                 	db	100	;'d'
   181  000603  20                 	db	32
   182  000604  20                 	db	32
   183  000605  20                 	db	32
   184  000606  20                 	db	32
   185  000607  20                 	db	32
   186  000608  20                 	db	32
   187  000609  20                 	db	32
   188  00060A  20                 	db	32
   189  00060B  20                 	db	32
   190  00060C  20                 	db	32
   191  00060D  20                 	db	32
   192  00060E  20                 	db	32
   193  00060F  20                 	db	32
   194  000610  20                 	db	32
   195  000611  20                 	db	32
   196  000612  00                 	db	0
   197  000613                     STR_13:
   198  000613  50                 	db	80	;'P'
   199  000614  49                 	db	73	;'I'
   200  000615  44                 	db	68	;'D'
   201  000616  20                 	db	32
   202  000617  50                 	db	80	;'P'
   203  000618  41                 	db	65	;'A'
   204  000619  52                 	db	82	;'R'
   205  00061A  41                 	db	65	;'A'
   206  00061B  4D                 	db	77	;'M'
   207  00061C  20                 	db	32
   208  00061D  20                 	db	32
   209  00061E  20                 	db	32
   210  00061F  20                 	db	32
   211  000620  20                 	db	32
   212  000621  20                 	db	32
   213  000622  20                 	db	32
   214  000623  00                 	db	0
   215  000624                     STR_7:
   216  000624  48                 	db	72	;'H'
   217  000625  49                 	db	73	;'I'
   218  000626  5A                 	db	90	;'Z'
   219  000627  20                 	db	32
   220  000628  4C                 	db	76	;'L'
   221  000629  69                 	db	105	;'i'
   222  00062A  4D                 	db	77	;'M'
   223  00062B  69                 	db	105	;'i'
   224  00062C  54                 	db	84	;'T'
   225  00062D  69                 	db	105	;'i'
   226  00062E  20                 	db	32
   227  00062F  20                 	db	32
   228  000630  20                 	db	32
   229  000631  20                 	db	32
   230  000632  20                 	db	32
   231  000633  20                 	db	32
   232  000634  00                 	db	0
   233  000635                     STR_1:
   234  000635  4B                 	db	75	;'K'
   235  000636  41                 	db	65	;'A'
   236  000637  4C                 	db	76	;'L'
   237  000638  41                 	db	65	;'A'
   238  000639  4E                 	db	78	;'N'
   239  00063A  20                 	db	32
   240  00063B  5A                 	db	90	;'Z'
   241  00063C  41                 	db	65	;'A'
   242  00063D  4D                 	db	77	;'M'
   243  00063E  41                 	db	65	;'A'
   244  00063F  4E                 	db	78	;'N'
   245  000640  20                 	db	32
   246  000641  20                 	db	32
   247  000642  20                 	db	32
   248  000643  20                 	db	32
   249  000644  20                 	db	32
   250  000645  00                 	db	0
   251  000646                     STR_9:
   252  000646  5A                 	db	90	;'Z'
   253  000647  41                 	db	65	;'A'
   254  000648  4D                 	db	77	;'M'
   255  000649  41                 	db	65	;'A'
   256  00064A  4E                 	db	78	;'N'
   257  00064B  20                 	db	32
   258  00064C  44                 	db	68	;'D'
   259  00064D  4F                 	db	79	;'O'
   260  00064E  4C                 	db	76	;'L'
   261  00064F  44                 	db	68	;'D'
   262  000650  55                 	db	85	;'U'
   263  000651  20                 	db	32
   264  000652  20                 	db	32
   265  000653  20                 	db	32
   266  000654  20                 	db	32
   267  000655  20                 	db	32
   268  000656  00                 	db	0
   269  000657                     STR_11:
   270  000657  48                 	db	72	;'H'
   271  000658  41                 	db	65	;'A'
   272  000659  52                 	db	82	;'R'
   273  00065A  45                 	db	69	;'E'
   274  00065B  4B                 	db	75	;'K'
   275  00065C  45                 	db	69	;'E'
   276  00065D  54                 	db	84	;'T'
   277  00065E  20                 	db	32
   278  00065F  44                 	db	68	;'D'
   279  000660  55                 	db	85	;'U'
   280  000661  52                 	db	82	;'R'
   281  000662  44                 	db	68	;'D'
   282  000663  55                 	db	85	;'U'
   283  000664  20                 	db	32
   284  000665  20                 	db	32
   285  000666  20                 	db	32
   286  000667  00                 	db	0
   287  000668                     STR_3:
   288  000668  48                 	db	72	;'H'
   289  000669  41                 	db	65	;'A'
   290  00066A  52                 	db	82	;'R'
   291  00066B  45                 	db	69	;'E'
   292  00066C  4B                 	db	75	;'K'
   293  00066D  54                 	db	84	;'T'
   294  00066E  20                 	db	32
   295  00066F  5A                 	db	90	;'Z'
   296  000670  41                 	db	65	;'A'
   297  000671  4D                 	db	77	;'M'
   298  000672  41                 	db	65	;'A'
   299  000673  4E                 	db	78	;'N'
   300  000674  49                 	db	73	;'I'
   301  000675  20                 	db	32
   302  000676  64                 	db	100	;'d'
   303  000677  6B                 	db	107	;'k'
   304  000678  00                 	db	0
   305  000679                     STR_5:
   306  000679  44                 	db	68	;'D'
   307  00067A  55                 	db	85	;'U'
   308  00067B  52                 	db	82	;'R'
   309  00067C  4D                 	db	77	;'M'
   310  00067D  41                 	db	65	;'A'
   311  00067E  20                 	db	32
   312  00067F  5A                 	db	90	;'Z'
   313  000680  41                 	db	65	;'A'
   314  000681  4D                 	db	77	;'M'
   315  000682  41                 	db	65	;'A'
   316  000683  4E                 	db	78	;'N'
   317  000684  49                 	db	73	;'I'
   318  000685  20                 	db	32
   319  000686  20                 	db	32
   320  000687  6D                 	db	109	;'m'
   321  000688  73                 	db	115	;'s'
   322  000689  00                 	db	0
   323  00068A                     STR_10:
   324  00068A  20                 	db	32
   325  00068B  20                 	db	32
   326  00068C  20                 	db	32
   327  00068D  20                 	db	32
   328  00068E  20                 	db	32
   329  00068F  20                 	db	32
   330  000690  25                 	db	37
   331  000691  64                 	db	100	;'d'
   332  000692  3A                 	db	58	;':'
   333  000693  25                 	db	37
   334  000694  64                 	db	100	;'d'
   335  000695  20                 	db	32
   336  000696  20                 	db	32
   337  000697  20                 	db	32
   338  000698  20                 	db	32
   339  000699  00                 	db	0
   340  00069A                     STR_2:
   341  00069A  20                 	db	32
   342  00069B  20                 	db	32
   343  00069C  20                 	db	32
   344  00069D  20                 	db	32
   345  00069E  20                 	db	32
   346  00069F  20                 	db	32
   347  0006A0  25                 	db	37
   348  0006A1  64                 	db	100	;'d'
   349  0006A2  3A                 	db	58	;':'
   350  0006A3  25                 	db	37
   351  0006A4  64                 	db	100	;'d'
   352  0006A5  20                 	db	32
   353  0006A6  20                 	db	32
   354  0006A7  20                 	db	32
   355  0006A8  00                 	db	0
   356  0006A9                     STR_14:
   357  0006A9  4B                 	db	75	;'K'
   358  0006AA  70                 	db	112	;'p'
   359  0006AB  3A                 	db	58	;':'
   360  0006AC  25                 	db	37
   361  0006AD  35                 	db	53	;'5'
   362  0006AE  2E                 	db	46
   363  0006AF  31                 	db	49	;'1'
   364  0006B0  66                 	db	102	;'f'
   365  0006B1  20                 	db	32
   366  0006B2  20                 	db	32
   367  0006B3  20                 	db	32
   368  0006B4  20                 	db	32
   369  0006B5  20                 	db	32
   370  0006B6  00                 	db	0
   371  0006B7                     STR_16:
   372  0006B7  4B                 	db	75	;'K'
   373  0006B8  64                 	db	100	;'d'
   374  0006B9  3A                 	db	58	;':'
   375  0006BA  25                 	db	37
   376  0006BB  35                 	db	53	;'5'
   377  0006BC  2E                 	db	46
   378  0006BD  31                 	db	49	;'1'
   379  0006BE  66                 	db	102	;'f'
   380  0006BF  20                 	db	32
   381  0006C0  20                 	db	32
   382  0006C1  20                 	db	32
   383  0006C2  20                 	db	32
   384  0006C3  00                 	db	0
   385  0006C4                     STR_17:
   386  0006C4  49                 	db	73	;'I'
   387  0006C5  4E                 	db	78	;'N'
   388  0006C6  46                 	db	70	;'F'
   389  0006C7  00                 	db	0
   390  0006C8                     STR_21:
   391  0006C8  4E                 	db	78	;'N'
   392  0006C9  41                 	db	65	;'A'
   393  0006CA  4E                 	db	78	;'N'
   394  0006CB  00                 	db	0
   395  0006CC                     STR_18:
   396  0006CC  69                 	db	105	;'i'
   397  0006CD  6E                 	db	110	;'n'
   398  0006CE  66                 	db	102	;'f'
   399  0006CF  00                 	db	0
   400  0006D0                     STR_22:
   401  0006D0  6E                 	db	110	;'n'
   402  0006D1  61                 	db	97	;'a'
   403  0006D2  6E                 	db	110	;'n'
   404  0006D3  00                 	db	0
   405  0006D4                     STR_25:
   406  0006D4  6C                 	db	108	;'l'
   407  0006D5  66                 	db	102	;'f'
   408  0006D6  00                 	db	0
   409  0006D7  00                 	db	0	; dummy byte at the end
   410  0000                     
   411                           ; #config settings
   412                           
   413                           	psect	cinit
   414  005736                     __pcinit:
   415                           	callstack 0
   416  005736                     start_initialization:
   417                           	callstack 0
   418  005736                     __initialization:
   419                           	callstack 0
   420                           
   421                           ; Initialize objects allocated to BANK1 (8 bytes)
   422                           ; load TBLPTR registers with __pidataBANK1
   423  005736  0E46               	movlw	low __pidataBANK1
   424  005738  6EF6               	movwf	tblptrl,c
   425  00573A  0E5C               	movlw	high __pidataBANK1
   426  00573C  6EF7               	movwf	tblptrh,c
   427  00573E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   428  005740  6EF8               	movwf	tblptru,c
   429  005742  EE01  F0EF         	lfsr	0,__pdataBANK1
   430  005746  EE10 F008          	lfsr	1,8
   431  00574A                     copy_data0:
   432  00574A  0009               	tblrd		*+
   433  00574C  CFF5 FFEE          	movff	tablat,postinc0
   434  005750  50E5               	movf	postdec1,w,c
   435  005752  50E1               	movf	fsr1l,w,c
   436  005754  E1FA               	bnz	copy_data0
   437                           
   438                           ; Clear objects allocated to BANK2 (32 bytes)
   439  005756  EE02  F000         	lfsr	0,__pbssBANK2
   440  00575A  0E20               	movlw	32
   441  00575C                     clear_0:
   442  00575C  6AEE               	clrf	postinc0,c
   443  00575E  06E8               	decf	wreg,f,c
   444  005760  E1FD               	bnz	clear_0
   445                           
   446                           ; Clear objects allocated to BANK1 (239 bytes)
   447  005762  EE01  F000         	lfsr	0,__pbssBANK1
   448  005766  0EEF               	movlw	239
   449  005768                     clear_1:
   450  005768  6AEE               	clrf	postinc0,c
   451  00576A  06E8               	decf	wreg,f,c
   452  00576C  E1FD               	bnz	clear_1
   453                           
   454                           ; Clear objects allocated to BANK0 (13 bytes)
   455  00576E  EE00  F0F3         	lfsr	0,__pbssBANK0
   456  005772  0E0D               	movlw	13
   457  005774                     clear_2:
   458  005774  6AEE               	clrf	postinc0,c
   459  005776  06E8               	decf	wreg,f,c
   460  005778  E1FD               	bnz	clear_2
   461  00577A                     end_of_initialization:
   462                           	callstack 0
   463  00577A                     __end_of__initialization:
   464                           	callstack 0
   465  00577A  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   466  00577C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   467  00577E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   468  005780  6EF8               	movwf	tblptru,c
   469  005782  0100               	movlb	0
   470  005784  EF2A  F026         	goto	_main	;jump to C main() function
   471                           
   472                           	psect	bssBANK0
   473  0000F3                     __pbssBANK0:
   474                           	callstack 0
   475  0000F3                     _timer_value:
   476                           	callstack 0
   477  0000F3                     	ds	10
   478  0000FD                     _menu_flags:
   479                           	callstack 0
   480  0000FD                     	ds	1
   481  0000FE                     _menu_selected:
   482                           	callstack 0
   483  0000FE                     	ds	1
   484  0000FF                     _button_bounce_controller:
   485                           	callstack 0
   486  0000FF                     	ds	1
   487                           
   488                           	psect	bssBANK1
   489  000100                     __pbssBANK1:
   490                           	callstack 0
   491  000100                     _convert_data:
   492                           	callstack 0
   493  000100                     	ds	48
   494  000130                     _procces_data:
   495                           	callstack 0
   496  000130                     	ds	32
   497  000150                     _controller:
   498                           	callstack 0
   499  000150                     	ds	19
   500  000163                     _adc_raw_data:
   501                           	callstack 0
   502  000163                     	ds	16
   503  000173                     _driver_limit:
   504                           	callstack 0
   505  000173                     	ds	12
   506  00017F                     floorf@F524:
   507                           	callstack 0
   508  00017F                     	ds	4
   509  000183                     ___fpclassifyf@F463:
   510                           	callstack 0
   511  000183                     	ds	4
   512  000187                     fabsf@F463:
   513                           	callstack 0
   514  000187                     	ds	4
   515  00018B                     _counter:
   516                           	callstack 0
   517  00018B                     	ds	4
   518  00018F                     _menu_value:
   519                           	callstack 0
   520  00018F                     	ds	3
   521  000192                     _nout:
   522                           	callstack 0
   523  000192                     	ds	2
   524  000194                     _width:
   525                           	callstack 0
   526  000194                     	ds	2
   527  000196                     _prec:
   528                           	callstack 0
   529  000196                     	ds	2
   530  000198                     _flags:
   531                           	callstack 0
   532  000198                     	ds	2
   533  00019A                     stateMachine@secretMenuCounter:
   534                           	callstack 0
   535  00019A                     	ds	1
   536  00019B                     _stopIsClick:
   537                           	callstack 0
   538  00019B                     	ds	1
   539  00019C                     _startIsClick:
   540                           	callstack 0
   541  00019C                     	ds	1
   542  00019D                     _pauseIsClick:
   543                           	callstack 0
   544  00019D                     	ds	1
   545  00019E                     _timer_counter_flag:
   546                           	callstack 0
   547  00019E                     	ds	1
   548  00019F                     _dbuf:
   549                           	callstack 0
   550  00019F                     	ds	80
   551                           
   552                           	psect	dataBANK1
   553  0001EF                     __pdataBANK1:
   554                           	callstack 0
   555  0001EF                     _KD:
   556                           	callstack 0
   557  0001EF                     	ds	4
   558  0001F3                     _KP:
   559                           	callstack 0
   560  0001F3                     	ds	4
   561                           
   562                           	psect	bssBANK2
   563  000200                     __pbssBANK2:
   564                           	callstack 0
   565  000200                     	ds	16
   566  000210                     _textCursor2:
   567                           	callstack 0
   568  000210                     	ds	16
   569                           
   570                           	psect	cstackBANK0
   571  000060                     __pcstackBANK0:
   572                           	callstack 0
   573  000060                     floorf@m:
   574                           	callstack 0
   575                           
   576                           ; 4 bytes @ 0x0
   577  000060                     	ds	4
   578  000064                     floorf@e:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0x4
   582  000064                     	ds	2
   583  000066                     floorf@u:
   584                           	callstack 0
   585                           
   586                           ; 4 bytes @ 0x6
   587  000066                     	ds	4
   588  00006A                     ??_efgtoa:
   589                           
   590                           ; 1 bytes @ 0xA
   591  00006A                     	ds	5
   592  00006F                     efgtoa@ou:
   593                           	callstack 0
   594                           
   595                           ; 4 bytes @ 0xF
   596  00006F                     	ds	4
   597  000073                     _efgtoa$2505:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x13
   601  000073                     	ds	2
   602  000075                     _efgtoa$2506:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x15
   606  000075                     	ds	2
   607  000077                     _efgtoa$2510:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x17
   611  000077                     	ds	2
   612  000079                     _efgtoa$2514:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x19
   616  000079                     	ds	2
   617  00007B                     _efgtoa$2515:
   618                           	callstack 0
   619                           
   620                           ; 2 bytes @ 0x1B
   621  00007B                     	ds	2
   622  00007D                     _efgtoa$2516:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x1D
   626  00007D                     	ds	2
   627  00007F                     efgtoa@t:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x1F
   631  00007F                     	ds	2
   632  000081                     efgtoa@pp:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x21
   636  000081                     	ds	2
   637  000083                     efgtoa@m:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x23
   641  000083                     	ds	2
   642  000085                     efgtoa@ne:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x25
   646  000085                     	ds	2
   647  000087                     efgtoa@d:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x27
   651  000087                     	ds	2
   652  000089                     efgtoa@sign:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x29
   656  000089                     	ds	2
   657  00008B                     efgtoa@p:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x2B
   661  00008B                     	ds	2
   662  00008D                     efgtoa@nmode:
   663                           	callstack 0
   664                           
   665                           ; 1 bytes @ 0x2D
   666  00008D                     	ds	1
   667  00008E                     efgtoa@w:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0x2E
   671  00008E                     	ds	2
   672  000090                     efgtoa@mode:
   673                           	callstack 0
   674                           
   675                           ; 1 bytes @ 0x30
   676  000090                     	ds	1
   677  000091                     efgtoa@h:
   678                           	callstack 0
   679                           
   680                           ; 4 bytes @ 0x31
   681  000091                     	ds	4
   682  000095                     efgtoa@l:
   683                           	callstack 0
   684                           
   685                           ; 4 bytes @ 0x35
   686  000095                     	ds	4
   687  000099                     efgtoa@i:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x39
   691  000099                     	ds	2
   692  00009B                     efgtoa@g:
   693                           	callstack 0
   694                           
   695                           ; 4 bytes @ 0x3B
   696  00009B                     	ds	4
   697  00009F                     efgtoa@e:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x3F
   701  00009F                     	ds	2
   702  0000A1                     efgtoa@n:
   703                           	callstack 0
   704                           
   705                           ; 2 bytes @ 0x41
   706  0000A1                     	ds	2
   707  0000A3                     efgtoa@u:
   708                           	callstack 0
   709                           
   710                           ; 4 bytes @ 0x43
   711  0000A3                     	ds	4
   712  0000A7                     ?_vfpfcnvrt:
   713                           	callstack 0
   714  0000A7                     vfpfcnvrt@fp:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0x47
   718  0000A7                     	ds	2
   719  0000A9                     vfpfcnvrt@fmt:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x49
   723  0000A9                     	ds	2
   724  0000AB                     vfpfcnvrt@ap:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0x4B
   728  0000AB                     	ds	2
   729  0000AD                     ??_vfpfcnvrt:
   730                           
   731                           ; 1 bytes @ 0x4D
   732  0000AD                     	ds	4
   733  0000B1                     vfpfcnvrt@ll:
   734                           	callstack 0
   735                           
   736                           ; 8 bytes @ 0x51
   737  0000B1                     	ds	8
   738  0000B9                     _vfpfcnvrt$2530:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0x59
   742  0000B9                     	ds	2
   743  0000BB                     _vfpfcnvrt$2531:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0x5B
   747  0000BB                     	ds	2
   748  0000BD                     _vfpfcnvrt$2536:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x5D
   752  0000BD                     	ds	2
   753  0000BF                     vfpfcnvrt@f:
   754                           	callstack 0
   755                           
   756                           ; 4 bytes @ 0x5F
   757  0000BF                     	ds	4
   758  0000C3                     vfpfcnvrt@ct:
   759                           	callstack 0
   760                           
   761                           ; 3 bytes @ 0x63
   762  0000C3                     	ds	3
   763  0000C6                     vfpfcnvrt@c:
   764                           	callstack 0
   765                           
   766                           ; 1 bytes @ 0x66
   767  0000C6                     	ds	1
   768  0000C7                     ?_vfprintf:
   769                           	callstack 0
   770  0000C7                     vfprintf@fp:
   771                           	callstack 0
   772                           
   773                           ; 2 bytes @ 0x67
   774  0000C7                     	ds	2
   775  0000C9                     vfprintf@fmt:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0x69
   779  0000C9                     	ds	2
   780  0000CB                     vfprintf@ap:
   781                           	callstack 0
   782                           
   783                           ; 2 bytes @ 0x6B
   784  0000CB                     	ds	2
   785  0000CD                     vfprintf@cfmt:
   786                           	callstack 0
   787                           
   788                           ; 2 bytes @ 0x6D
   789  0000CD                     	ds	2
   790  0000CF                     ?_sprintf:
   791                           	callstack 0
   792  0000CF                     sprintf@s:
   793                           	callstack 0
   794                           
   795                           ; 2 bytes @ 0x6F
   796  0000CF                     	ds	2
   797  0000D1                     sprintf@fmt:
   798                           	callstack 0
   799                           
   800                           ; 2 bytes @ 0x71
   801  0000D1                     	ds	8
   802  0000D9                     sprintf@ap:
   803                           	callstack 0
   804                           
   805                           ; 2 bytes @ 0x79
   806  0000D9                     	ds	2
   807  0000DB                     sprintf@f:
   808                           	callstack 0
   809                           
   810                           ; 6 bytes @ 0x7B
   811  0000DB                     	ds	6
   812  0000E1                     ??_stateMachine:
   813                           
   814                           ; 1 bytes @ 0x81
   815  0000E1                     	ds	2
   816  0000E3                     stateMachine@textCursor2:
   817                           	callstack 0
   818                           
   819                           ; 16 bytes @ 0x83
   820  0000E3                     	ds	16
   821                           
   822                           	psect	cstackCOMRAM
   823  000001                     __pcstackCOMRAM:
   824                           	callstack 0
   825  000001                     ?_strlen:
   826                           	callstack 0
   827  000001                     ?___fpclassifyf:
   828                           	callstack 0
   829  000001                     ?_isupper:
   830                           	callstack 0
   831  000001                     ?_isdigit:
   832                           	callstack 0
   833  000001                     ?_strncmp:
   834                           	callstack 0
   835  000001                     ?_isspace:
   836                           	callstack 0
   837  000001                     ?_readAdcValue:
   838                           	callstack 0
   839  000001                     ?___wmul:
   840                           	callstack 0
   841  000001                     ?___awdiv:
   842                           	callstack 0
   843  000001                     ?___awmod:
   844                           	callstack 0
   845  000001                     ?___lmul:
   846                           	callstack 0
   847  000001                     ?___lldiv:
   848                           	callstack 0
   849  000001                     ?___flneg:
   850                           	callstack 0
   851  000001                     ?___aodiv:
   852                           	callstack 0
   853  000001                     ?___aomod:
   854                           	callstack 0
   855  000001                     eepromRead@address:
   856                           	callstack 0
   857  000001                     eepromWrite@data:
   858                           	callstack 0
   859  000001                     Lcd_Port@a:
   860                           	callstack 0
   861  000001                     ___wmul@multiplier:
   862                           	callstack 0
   863  000001                     ___awdiv@dividend:
   864                           	callstack 0
   865  000001                     ___awmod@dividend:
   866                           	callstack 0
   867  000001                     isdigit@c:
   868                           	callstack 0
   869  000001                     isspace@c:
   870                           	callstack 0
   871  000001                     isupper@c:
   872                           	callstack 0
   873  000001                     fputc@c:
   874                           	callstack 0
   875  000001                     strcpy@dest:
   876                           	callstack 0
   877  000001                     strlen@s:
   878                           	callstack 0
   879  000001                     strncmp@_l:
   880                           	callstack 0
   881  000001                     ___lmul@multiplier:
   882                           	callstack 0
   883  000001                     ___lldiv@dividend:
   884                           	callstack 0
   885  000001                     ___fleq@ff1:
   886                           	callstack 0
   887  000001                     ___flneg@f1:
   888                           	callstack 0
   889  000001                     ___fpclassifyf@x:
   890                           	callstack 0
   891  000001                     ___aodiv@dividend:
   892                           	callstack 0
   893  000001                     ___aomod@dividend:
   894                           	callstack 0
   895                           
   896                           ; 8 bytes @ 0x0
   897  000001                     	ds	1
   898  000002                     ??_system_init:
   899  000002                     ??_Lcd_Cmd:
   900  000002                     eepromWrite@address:
   901                           	callstack 0
   902  000002                     Lcd_Write_Char@temp:
   903                           	callstack 0
   904                           
   905                           ; 1 bytes @ 0x1
   906  000002                     	ds	1
   907  000003                     ??_isupper:
   908  000003                     ??_isdigit:
   909  000003                     ??_isspace:
   910  000003                     ??_readAdcValue:
   911  000003                     Lcd_Cmd@a:
   912                           	callstack 0
   913  000003                     Lcd_Write_Char@y:
   914                           	callstack 0
   915  000003                     ___wmul@multiplicand:
   916                           	callstack 0
   917  000003                     ___awdiv@divisor:
   918                           	callstack 0
   919  000003                     ___awmod@divisor:
   920                           	callstack 0
   921  000003                     fputc@fp:
   922                           	callstack 0
   923  000003                     strcpy@src:
   924                           	callstack 0
   925  000003                     strlen@a:
   926                           	callstack 0
   927  000003                     strncmp@_r:
   928                           	callstack 0
   929                           
   930                           ; 2 bytes @ 0x2
   931  000003                     	ds	1
   932  000004                     ??_lcd_init:
   933  000004                     Lcd_Set_Cursor@b:
   934                           	callstack 0
   935  000004                     Lcd_Write_Char@a:
   936                           	callstack 0
   937                           
   938                           ; 1 bytes @ 0x3
   939  000004                     	ds	1
   940  000005                     ??_fputc:
   941  000005                     ??___fpclassifyf:
   942  000005                     ??_strcpy:
   943  000005                     readAdcValue@adcChannel:
   944                           	callstack 0
   945  000005                     Lcd_Set_Cursor@a:
   946                           	callstack 0
   947  000005                     ___awdiv@counter:
   948                           	callstack 0
   949  000005                     ___awmod@counter:
   950                           	callstack 0
   951  000005                     Lcd_Write_String@a:
   952                           	callstack 0
   953  000005                     ___wmul@product:
   954                           	callstack 0
   955  000005                     strncmp@n:
   956                           	callstack 0
   957  000005                     ___lmul@multiplicand:
   958                           	callstack 0
   959  000005                     ___lldiv@divisor:
   960                           	callstack 0
   961  000005                     ___fleq@ff2:
   962                           	callstack 0
   963                           
   964                           ; 4 bytes @ 0x4
   965  000005                     	ds	1
   966  000006                     Lcd_Set_Cursor@z:
   967                           	callstack 0
   968  000006                     ___awdiv@sign:
   969                           	callstack 0
   970  000006                     ___awmod@sign:
   971                           	callstack 0
   972  000006                     readAdcValue@adcValue:
   973                           	callstack 0
   974                           
   975                           ; 2 bytes @ 0x5
   976  000006                     	ds	1
   977  000007                     ??_strncmp:
   978  000007                     ??_Lcd_Write_String:
   979  000007                     ?_tolower:
   980                           	callstack 0
   981  000007                     Lcd_Set_Cursor@y:
   982                           	callstack 0
   983  000007                     _isspace$2603:
   984                           	callstack 0
   985  000007                     ___awdiv@quotient:
   986                           	callstack 0
   987  000007                     strcpy@s:
   988                           	callstack 0
   989  000007                     tolower@c:
   990                           	callstack 0
   991                           
   992                           ; 2 bytes @ 0x6
   993  000007                     	ds	1
   994  000008                     ?_atoi:
   995                           	callstack 0
   996  000008                     Lcd_Set_Cursor@temp:
   997                           	callstack 0
   998  000008                     atoi@s:
   999                           	callstack 0
  1000  000008                     strncmp@l:
  1001                           	callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x7
  1004  000008                     	ds	1
  1005  000009                     ??_tolower:
  1006  000009                     ??___fleq:
  1007  000009                     Lcd_Write_String@i:
  1008                           	callstack 0
  1009  000009                     ___fpclassifyf@e:
  1010                           	callstack 0
  1011  000009                     strcpy@d:
  1012                           	callstack 0
  1013  000009                     ___lmul@product:
  1014                           	callstack 0
  1015  000009                     ___lldiv@quotient:
  1016                           	callstack 0
  1017  000009                     ___aodiv@divisor:
  1018                           	callstack 0
  1019  000009                     ___aomod@divisor:
  1020                           	callstack 0
  1021                           
  1022                           ; 8 bytes @ 0x8
  1023  000009                     	ds	1
  1024  00000A                     ??_atoi:
  1025  00000A                     fputs@s:
  1026                           	callstack 0
  1027  00000A                     strncmp@r:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x9
  1031  00000A                     	ds	1
  1032  00000B                     ___fpclassifyf@u:
  1033                           	callstack 0
  1034                           
  1035                           ; 4 bytes @ 0xA
  1036  00000B                     	ds	1
  1037  00000C                     fputs@fp:
  1038                           	callstack 0
  1039                           
  1040                           ; 2 bytes @ 0xB
  1041  00000C                     	ds	1
  1042  00000D                     ___lldiv@counter:
  1043                           	callstack 0
  1044  00000D                     _tolower$2667:
  1045                           	callstack 0
  1046                           
  1047                           ; 2 bytes @ 0xC
  1048  00000D                     	ds	1
  1049  00000E                     ?___xxtofl:
  1050                           	callstack 0
  1051  00000E                     fputs@c:
  1052                           	callstack 0
  1053  00000E                     atoi@neg:
  1054                           	callstack 0
  1055  00000E                     ___xxtofl@val:
  1056                           	callstack 0
  1057                           
  1058                           ; 4 bytes @ 0xD
  1059  00000E                     	ds	1
  1060  00000F                     fputs@i:
  1061                           	callstack 0
  1062                           
  1063                           ; 2 bytes @ 0xE
  1064  00000F                     	ds	1
  1065  000010                     _atoi$2572:
  1066                           	callstack 0
  1067                           
  1068                           ; 2 bytes @ 0xF
  1069  000010                     	ds	1
  1070  000011                     ?_pad:
  1071                           	callstack 0
  1072  000011                     ___aodiv@counter:
  1073                           	callstack 0
  1074  000011                     ___aomod@counter:
  1075                           	callstack 0
  1076  000011                     pad@fp:
  1077                           	callstack 0
  1078                           
  1079                           ; 2 bytes @ 0x10
  1080  000011                     	ds	1
  1081  000012                     ??___xxtofl:
  1082  000012                     ___aodiv@sign:
  1083                           	callstack 0
  1084  000012                     ___aomod@sign:
  1085                           	callstack 0
  1086  000012                     _atoi$2574:
  1087                           	callstack 0
  1088                           
  1089                           ; 2 bytes @ 0x11
  1090  000012                     	ds	1
  1091  000013                     ?_abs:
  1092                           	callstack 0
  1093  000013                     pad@buf:
  1094                           	callstack 0
  1095  000013                     abs@a:
  1096                           	callstack 0
  1097  000013                     ___aodiv@quotient:
  1098                           	callstack 0
  1099                           
  1100                           ; 8 bytes @ 0x12
  1101  000013                     	ds	1
  1102  000014                     _atoi$2573:
  1103                           	callstack 0
  1104                           
  1105                           ; 1 bytes @ 0x13
  1106  000014                     	ds	1
  1107  000015                     ??_abs:
  1108  000015                     pad@p:
  1109                           	callstack 0
  1110  000015                     atoi@n:
  1111                           	callstack 0
  1112                           
  1113                           ; 2 bytes @ 0x14
  1114  000015                     	ds	1
  1115  000016                     ___xxtofl@sign:
  1116                           	callstack 0
  1117                           
  1118                           ; 1 bytes @ 0x15
  1119  000016                     	ds	1
  1120  000017                     ??_pad:
  1121  000017                     ___xxtofl@exp:
  1122                           	callstack 0
  1123                           
  1124                           ; 1 bytes @ 0x16
  1125  000017                     	ds	1
  1126  000018                     pad@i:
  1127                           	callstack 0
  1128  000018                     ___xxtofl@arg:
  1129                           	callstack 0
  1130                           
  1131                           ; 4 bytes @ 0x17
  1132  000018                     	ds	2
  1133  00001A                     pad@w:
  1134                           	callstack 0
  1135                           
  1136                           ; 2 bytes @ 0x19
  1137  00001A                     	ds	2
  1138  00001C                     ??_calculatedAverageValue:
  1139  00001C                     ?_dtoa:
  1140                           	callstack 0
  1141  00001C                     ?_fabsf:
  1142                           	callstack 0
  1143  00001C                     ?___flmul:
  1144                           	callstack 0
  1145  00001C                     dtoa@fp:
  1146                           	callstack 0
  1147  00001C                     ___flmul@b:
  1148                           	callstack 0
  1149  00001C                     fabsf@x:
  1150                           	callstack 0
  1151                           
  1152                           ; 4 bytes @ 0x1B
  1153  00001C                     	ds	2
  1154  00001E                     dtoa@d:
  1155                           	callstack 0
  1156                           
  1157                           ; 8 bytes @ 0x1D
  1158  00001E                     	ds	2
  1159  000020                     ___flmul@a:
  1160                           	callstack 0
  1161  000020                     fabsf@u:
  1162                           	callstack 0
  1163                           
  1164                           ; 4 bytes @ 0x1F
  1165  000020                     	ds	4
  1166  000024                     ??___flmul:
  1167                           
  1168                           ; 1 bytes @ 0x23
  1169  000024                     	ds	2
  1170  000026                     ??_dtoa:
  1171                           
  1172                           ; 1 bytes @ 0x25
  1173  000026                     	ds	2
  1174  000028                     ___flmul@sign:
  1175                           	callstack 0
  1176                           
  1177                           ; 1 bytes @ 0x27
  1178  000028                     	ds	1
  1179  000029                     ___flmul@grs:
  1180                           	callstack 0
  1181                           
  1182                           ; 4 bytes @ 0x28
  1183  000029                     	ds	4
  1184  00002D                     ___flmul@aexp:
  1185                           	callstack 0
  1186                           
  1187                           ; 1 bytes @ 0x2C
  1188  00002D                     	ds	1
  1189  00002E                     ___flmul@bexp:
  1190                           	callstack 0
  1191  00002E                     _dtoa$2481:
  1192                           	callstack 0
  1193                           
  1194                           ; 2 bytes @ 0x2D
  1195  00002E                     	ds	1
  1196  00002F                     ___flmul@prod:
  1197                           	callstack 0
  1198                           
  1199                           ; 4 bytes @ 0x2E
  1200  00002F                     	ds	1
  1201  000030                     dtoa@p:
  1202                           	callstack 0
  1203                           
  1204                           ; 2 bytes @ 0x2F
  1205  000030                     	ds	2
  1206  000032                     dtoa@w:
  1207                           	callstack 0
  1208                           
  1209                           ; 2 bytes @ 0x31
  1210  000032                     	ds	1
  1211  000033                     ___flmul@temp:
  1212                           	callstack 0
  1213                           
  1214                           ; 2 bytes @ 0x32
  1215  000033                     	ds	1
  1216  000034                     dtoa@s:
  1217                           	callstack 0
  1218                           
  1219                           ; 2 bytes @ 0x33
  1220  000034                     	ds	1
  1221  000035                     ?___fladd:
  1222                           	callstack 0
  1223  000035                     ?___fldiv:
  1224                           	callstack 0
  1225  000035                     ___flge@ff1:
  1226                           	callstack 0
  1227  000035                     ___fladd@b:
  1228                           	callstack 0
  1229  000035                     ___fldiv@b:
  1230                           	callstack 0
  1231                           
  1232                           ; 4 bytes @ 0x34
  1233  000035                     	ds	1
  1234  000036                     dtoa@n:
  1235                           	callstack 0
  1236                           
  1237                           ; 8 bytes @ 0x35
  1238  000036                     	ds	3
  1239  000039                     ___flge@ff2:
  1240                           	callstack 0
  1241  000039                     ___fladd@a:
  1242                           	callstack 0
  1243  000039                     ___fldiv@a:
  1244                           	callstack 0
  1245                           
  1246                           ; 4 bytes @ 0x38
  1247  000039                     	ds	4
  1248  00003D                     ??___fladd:
  1249  00003D                     ??___fldiv:
  1250  00003D                     ??___flge:
  1251                           
  1252                           ; 1 bytes @ 0x3C
  1253  00003D                     	ds	1
  1254  00003E                     dtoa@i:
  1255                           	callstack 0
  1256                           
  1257                           ; 2 bytes @ 0x3D
  1258  00003E                     	ds	3
  1259  000041                     ___fladd@signs:
  1260                           	callstack 0
  1261  000041                     ___fldiv@rem:
  1262                           	callstack 0
  1263                           
  1264                           ; 4 bytes @ 0x40
  1265  000041                     	ds	1
  1266  000042                     ___fladd@aexp:
  1267                           	callstack 0
  1268                           
  1269                           ; 1 bytes @ 0x41
  1270  000042                     	ds	1
  1271  000043                     ___fladd@bexp:
  1272                           	callstack 0
  1273                           
  1274                           ; 1 bytes @ 0x42
  1275  000043                     	ds	1
  1276  000044                     ___fladd@grs:
  1277                           	callstack 0
  1278                           
  1279                           ; 1 bytes @ 0x43
  1280  000044                     	ds	1
  1281  000045                     ?___flsub:
  1282                           	callstack 0
  1283  000045                     ___fldiv@sign:
  1284                           	callstack 0
  1285  000045                     ___flsub@b:
  1286                           	callstack 0
  1287                           
  1288                           ; 4 bytes @ 0x44
  1289  000045                     	ds	1
  1290  000046                     ___fldiv@new_exp:
  1291                           	callstack 0
  1292                           
  1293                           ; 2 bytes @ 0x45
  1294  000046                     	ds	2
  1295  000048                     ___fldiv@grs:
  1296                           	callstack 0
  1297                           
  1298                           ; 4 bytes @ 0x47
  1299  000048                     	ds	1
  1300  000049                     ___flsub@a:
  1301                           	callstack 0
  1302                           
  1303                           ; 4 bytes @ 0x48
  1304  000049                     	ds	3
  1305  00004C                     ___fldiv@bexp:
  1306                           	callstack 0
  1307                           
  1308                           ; 1 bytes @ 0x4B
  1309  00004C                     	ds	1
  1310  00004D                     ___fldiv@aexp:
  1311                           	callstack 0
  1312                           
  1313                           ; 1 bytes @ 0x4C
  1314  00004D                     	ds	1
  1315  00004E                     ?_floorf:
  1316                           	callstack 0
  1317  00004E                     ?___fltol:
  1318                           	callstack 0
  1319  00004E                     ___fltol@f1:
  1320                           	callstack 0
  1321  00004E                     floorf@x:
  1322                           	callstack 0
  1323                           
  1324                           ; 4 bytes @ 0x4D
  1325  00004E                     	ds	4
  1326  000052                     ??_floorf:
  1327  000052                     ??___fltol:
  1328                           
  1329                           ; 1 bytes @ 0x51
  1330  000052                     	ds	4
  1331  000056                     ___fltol@sign1:
  1332                           	callstack 0
  1333                           
  1334                           ; 1 bytes @ 0x55
  1335  000056                     	ds	1
  1336  000057                     ___fltol@exp1:
  1337                           	callstack 0
  1338                           
  1339                           ; 1 bytes @ 0x56
  1340  000057                     	ds	1
  1341  000058                     ??_scanAdcConversion:
  1342  000058                     ?_efgtoa:
  1343                           	callstack 0
  1344  000058                     PWM1_setDC@dutycycle:
  1345                           	callstack 0
  1346  000058                     PWM2_setDC@dutycycle:
  1347                           	callstack 0
  1348  000058                     efgtoa@fp:
  1349                           	callstack 0
  1350  000058                     speedControl@position:
  1351                           	callstack 0
  1352                           
  1353                           ; 4 bytes @ 0x57
  1354  000058                     	ds	2
  1355  00005A                     ??_PWM1_setDC:
  1356  00005A                     ??_PWM2_setDC:
  1357  00005A                     efgtoa@f:
  1358                           	callstack 0
  1359                           
  1360                           ; 4 bytes @ 0x59
  1361  00005A                     	ds	2
  1362  00005C                     ??_speedControl:
  1363  00005C                     PWM1_setDC@duty:
  1364                           	callstack 0
  1365  00005C                     PWM2_setDC@duty:
  1366                           	callstack 0
  1367                           
  1368                           ; 2 bytes @ 0x5B
  1369  00005C                     	ds	2
  1370  00005E                     efgtoa@c:
  1371                           	callstack 0
  1372                           
  1373                           ; 1 bytes @ 0x5D
  1374  00005E                     	ds	1
  1375  00005F                     
  1376                           ; 1 bytes @ 0x5E
  1377 ;;
  1378 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1379 ;;
  1380 ;; *************** function _main *****************
  1381 ;; Defined at:
  1382 ;;		line 43 in file "fs_main.c"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;		None
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;		None
  1387 ;; Return value:  Size  Location     Type
  1388 ;;                  1    wreg      void 
  1389 ;; Registers used:
  1390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1396 ;;      Params:         0       0       0       0       0       0       0
  1397 ;;      Locals:         0       0       0       0       0       0       0
  1398 ;;      Temps:          0       0       0       0       0       0       0
  1399 ;;      Totals:         0       0       0       0       0       0       0
  1400 ;;Total ram usage:        0 bytes
  1401 ;; Hardware stack levels required when called:   11
  1402 ;; This function calls:
  1403 ;;		_Lcd_Clear
  1404 ;;		_PWM1_setDC
  1405 ;;		_PWM2_setDC
  1406 ;;		_PWM_Init
  1407 ;;		_adcInit
  1408 ;;		_lcd_init
  1409 ;;		_mcu_init
  1410 ;;		_menuControl
  1411 ;;		_menuInitialize
  1412 ;;		_system_init
  1413 ;;		_timer_0_init
  1414 ;; This function is called by:
  1415 ;;		Startup code after reset
  1416 ;; This function uses a non-reentrant model
  1417 ;;
  1418                           
  1419                           	psect	text0
  1420  004C54                     __ptext0:
  1421                           	callstack 0
  1422  004C54                     _main:
  1423                           	callstack 20
  1424  004C54                     
  1425                           ;fs_main.c: 45:     mcu_init();
  1426  004C54  EC08  F02E         	call	_mcu_init	;wreg free
  1427  004C58                     
  1428                           ;fs_main.c: 46:     menuInitialize();
  1429  004C58  ECAF  F02D         	call	_menuInitialize	;wreg free
  1430  004C5C                     
  1431                           ;fs_main.c: 48:     adcInit();
  1432  004C5C  EC9C  F02C         	call	_adcInit	;wreg free
  1433  004C60                     
  1434                           ;fs_main.c: 50:     timer_0_init();
  1435  004C60  EC13  F02E         	call	_timer_0_init	;wreg free
  1436  004C64                     
  1437                           ;fs_main.c: 51:     lcd_init();
  1438  004C64  EC39  F029         	call	_lcd_init	;wreg free
  1439  004C68                     
  1440                           ;fs_main.c: 52:     system_init();
  1441  004C68  EC14  F024         	call	_system_init	;wreg free
  1442  004C6C                     
  1443                           ;fs_main.c: 53:     Lcd_Clear();
  1444  004C6C  EC1C  F02E         	call	_Lcd_Clear	;wreg free
  1445  004C70                     
  1446                           ;fs_main.c: 55:     PWM_Init();
  1447  004C70  ECC3  F02D         	call	_PWM_Init	;wreg free
  1448  004C74                     
  1449                           ;fs_main.c: 56:     PWM1_setDC(0);
  1450  004C74  0E00               	movlw	0
  1451  004C76  6E59               	movwf	(PWM1_setDC@dutycycle+1)^0,c
  1452  004C78  0E00               	movlw	0
  1453  004C7A  6E58               	movwf	PWM1_setDC@dutycycle^0,c
  1454  004C7C  EC00  F02A         	call	_PWM1_setDC	;wreg free
  1455  004C80                     
  1456                           ;fs_main.c: 57:     PWM2_setDC(0);
  1457  004C80  0E00               	movlw	0
  1458  004C82  6E59               	movwf	(PWM2_setDC@dutycycle+1)^0,c
  1459  004C84  0E00               	movlw	0
  1460  004C86  6E58               	movwf	PWM2_setDC@dutycycle^0,c
  1461  004C88  ECC3  F029         	call	_PWM2_setDC	;wreg free
  1462  004C8C                     l6148:
  1463                           
  1464                           ;fs_main.c: 61: {;fs_main.c: 62:     if (timer_counter_flag.one_second_flag == 1)
  1465  004C8C  0101               	movlb	1	; () banked
  1466  004C8E  A19E               	btfss	_timer_counter_flag& (0+255),0,b
  1467  004C90  EF4C  F026         	goto	u7641
  1468  004C94  EF4E  F026         	goto	u7640
  1469  004C98                     u7641:
  1470  004C98  EF9F  F026         	goto	l6174
  1471  004C9C                     u7640:
  1472  004C9C                     
  1473                           ; BSR set to: 1
  1474                           ;fs_main.c: 63:     {;fs_main.c: 64:         timer_counter_flag.one_second_flag = 0;
  1475  004C9C  919E               	bcf	_timer_counter_flag& (0+255),0,b
  1476  004C9E                     
  1477                           ; BSR set to: 1
  1478                           ;fs_main.c: 66:         if ( (startIsClick == 1) && (pauseIsClick == 0) && (stopIsClick 
      +                          == 0) && (menu_selected == MAIN_MENU) )
  1479  004C9E  059C               	decf	_startIsClick& (0+255),w,b
  1480  004CA0  A4D8               	btfss	status,2,c
  1481  004CA2  EF55  F026         	goto	u7651
  1482  004CA6  EF57  F026         	goto	u7650
  1483  004CAA                     u7651:
  1484  004CAA  EF9F  F026         	goto	l6174
  1485  004CAE                     u7650:
  1486  004CAE                     
  1487                           ; BSR set to: 1
  1488  004CAE  519D               	movf	_pauseIsClick& (0+255),w,b
  1489  004CB0  A4D8               	btfss	status,2,c
  1490  004CB2  EF5D  F026         	goto	u7661
  1491  004CB6  EF5F  F026         	goto	u7660
  1492  004CBA                     u7661:
  1493  004CBA  EF9F  F026         	goto	l6174
  1494  004CBE                     u7660:
  1495  004CBE                     
  1496                           ; BSR set to: 1
  1497  004CBE  519B               	movf	_stopIsClick& (0+255),w,b
  1498  004CC0  A4D8               	btfss	status,2,c
  1499  004CC2  EF65  F026         	goto	u7671
  1500  004CC6  EF67  F026         	goto	u7670
  1501  004CCA                     u7671:
  1502  004CCA  EF9F  F026         	goto	l6174
  1503  004CCE                     u7670:
  1504  004CCE                     
  1505                           ; BSR set to: 1
  1506  004CCE  0100               	movlb	0	; () banked
  1507  004CD0  51FE               	movf	_menu_selected& (0+255),w,b
  1508  004CD2  A4D8               	btfss	status,2,c
  1509  004CD4  EF6E  F026         	goto	u7681
  1510  004CD8  EF70  F026         	goto	u7680
  1511  004CDC                     u7681:
  1512  004CDC  EF9F  F026         	goto	l6174
  1513  004CE0                     u7680:
  1514  004CE0                     
  1515                           ; BSR set to: 0
  1516                           ;fs_main.c: 67:         {;fs_main.c: 68:             timer_value.second++;
  1517  004CE0  4BF3               	infsnz	_timer_value& (0+255),f,b
  1518  004CE2  2BF4               	incf	(_timer_value+1)& (0+255),f,b
  1519  004CE4                     
  1520                           ; BSR set to: 0
  1521                           ;fs_main.c: 69:             timer_value.remainingSecond = 60 - timer_value.second;
  1522  004CE4  51F3               	movf	_timer_value& (0+255),w,b
  1523  004CE6  083C               	sublw	60
  1524  004CE8  6FF7               	movwf	(_timer_value+4)& (0+255),b
  1525  004CEA  51F4               	movf	(_timer_value+1)& (0+255),w,b
  1526  004CEC  A0D8               	btfss	status,0,c
  1527  004CEE  2AE8               	incf	wreg,f,c
  1528  004CF0  0800               	sublw	0
  1529  004CF2  6FF8               	movwf	(_timer_value+5)& (0+255),b
  1530  004CF4                     
  1531                           ; BSR set to: 0
  1532                           ;fs_main.c: 71:             if (timer_value.remainingSecond == 59 )
  1533  004CF4  0E3B               	movlw	59
  1534  004CF6  19F7               	xorwf	(_timer_value+4)& (0+255),w,b
  1535  004CF8  11F8               	iorwf	(_timer_value+5)& (0+255),w,b
  1536  004CFA  A4D8               	btfss	status,2,c
  1537  004CFC  EF82  F026         	goto	u7691
  1538  004D00  EF84  F026         	goto	u7690
  1539  004D04                     u7691:
  1540  004D04  EF90  F026         	goto	l6170
  1541  004D08                     u7690:
  1542  004D08                     
  1543                           ; BSR set to: 0
  1544                           ;fs_main.c: 72:             {;fs_main.c: 73:                 timer_value.minute++;
  1545  004D08  4BF5               	infsnz	(_timer_value+2)& (0+255),f,b
  1546  004D0A  2BF6               	incf	(_timer_value+3)& (0+255),f,b
  1547  004D0C                     
  1548                           ; BSR set to: 0
  1549                           ;fs_main.c: 74:                 timer_value.remainingMinute = menu_value.driver_time - t
      +                          imer_value.minute;
  1550  004D0C  51F5               	movf	(_timer_value+2)& (0+255),w,b
  1551  004D0E  0101               	movlb	1	; () banked
  1552  004D10  5D8F               	subwf	_menu_value& (0+255),w,b
  1553  004D12  0100               	movlb	0	; () banked
  1554  004D14  6FF9               	movwf	(_timer_value+6)& (0+255),b
  1555  004D16  51F6               	movf	(_timer_value+3)& (0+255),w,b
  1556  004D18  A0D8               	btfss	status,0,c
  1557  004D1A  29F6               	incf	(_timer_value+3)& (0+255),w,b
  1558  004D1C  6BFA               	clrf	(_timer_value+7)& (0+255),b
  1559  004D1E  5FFA               	subwf	(_timer_value+7)& (0+255),f,b
  1560  004D20                     l6170:
  1561                           
  1562                           ; BSR set to: 0
  1563                           ;fs_main.c: 77:             if (timer_value.second > 59)
  1564  004D20  51F4               	movf	(_timer_value+1)& (0+255),w,b
  1565  004D22  E109               	bnz	u7700
  1566  004D24  0E3C               	movlw	60
  1567  004D26  5DF3               	subwf	_timer_value& (0+255),w,b
  1568  004D28  A0D8               	btfss	status,0,c
  1569  004D2A  EF99  F026         	goto	u7701
  1570  004D2E  EF9B  F026         	goto	u7700
  1571  004D32                     u7701:
  1572  004D32  EF9F  F026         	goto	l6174
  1573  004D36                     u7700:
  1574  004D36                     
  1575                           ; BSR set to: 0
  1576                           ;fs_main.c: 78:             {;fs_main.c: 79:                 timer_value.second = 0;
  1577  004D36  0E00               	movlw	0
  1578  004D38  6FF4               	movwf	(_timer_value+1)& (0+255),b
  1579  004D3A  0E00               	movlw	0
  1580  004D3C  6FF3               	movwf	_timer_value& (0+255),b
  1581  004D3E                     l6174:
  1582                           
  1583                           ;fs_main.c: 84:     menuControl();
  1584  004D3E  EC3D  F02A         	call	_menuControl	;wreg free
  1585  004D42  EF46  F026         	goto	l6148
  1586  004D46  EF34  F000         	goto	start
  1587  004D4A                     __end_of_main:
  1588                           	callstack 0
  1589                           
  1590 ;; *************** function _timer_0_init *****************
  1591 ;; Defined at:
  1592 ;;		line 67 in file "fs_timer.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;		None
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;		None
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  1    wreg      void 
  1599 ;; Registers used:
  1600 ;;		wreg, status,2
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1606 ;;      Params:         0       0       0       0       0       0       0
  1607 ;;      Locals:         0       0       0       0       0       0       0
  1608 ;;      Temps:          0       0       0       0       0       0       0
  1609 ;;      Totals:         0       0       0       0       0       0       0
  1610 ;;Total ram usage:        0 bytes
  1611 ;; Hardware stack levels used:    1
  1612 ;; Hardware stack levels required when called:    1
  1613 ;; This function calls:
  1614 ;;		Nothing
  1615 ;; This function is called by:
  1616 ;;		_main
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620                           	psect	text1
  1621  005C26                     __ptext1:
  1622                           	callstack 0
  1623  005C26                     _timer_0_init:
  1624                           	callstack 29
  1625  005C26                     
  1626                           ;fs_timer.c: 69:   T0CON = 0x81;
  1627  005C26  0E81               	movlw	129
  1628  005C28  6ED5               	movwf	213,c	;volatile
  1629                           
  1630                           ;fs_timer.c: 70:   TMR0H = 0x63;
  1631  005C2A  0E63               	movlw	99
  1632  005C2C  6ED7               	movwf	215,c	;volatile
  1633                           
  1634                           ;fs_timer.c: 71:   TMR0L = 0xC0;
  1635  005C2E  0EC0               	movlw	192
  1636  005C30  6ED6               	movwf	214,c	;volatile
  1637  005C32                     
  1638                           ;fs_timer.c: 72:   INTCONbits.GIE = 1;
  1639  005C32  8EF2               	bsf	242,7,c	;volatile
  1640  005C34                     
  1641                           ;fs_timer.c: 73:   INTCONbits.TMR0IE = 1;
  1642  005C34  8AF2               	bsf	242,5,c	;volatile
  1643  005C36  0012               	return		;funcret
  1644  005C38                     __end_of_timer_0_init:
  1645                           	callstack 0
  1646                           
  1647 ;; *************** function _system_init *****************
  1648 ;; Defined at:
  1649 ;;		line 55 in file "fs_mcu.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;		None
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;		None
  1654 ;; Return value:  Size  Location     Type
  1655 ;;                  1    wreg      void 
  1656 ;; Registers used:
  1657 ;;		wreg, status,2, cstack
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1663 ;;      Params:         0       0       0       0       0       0       0
  1664 ;;      Locals:         0       0       0       0       0       0       0
  1665 ;;      Temps:          2       0       0       0       0       0       0
  1666 ;;      Totals:         2       0       0       0       0       0       0
  1667 ;;Total ram usage:        2 bytes
  1668 ;; Hardware stack levels used:    1
  1669 ;; Hardware stack levels required when called:    2
  1670 ;; This function calls:
  1671 ;;		_eepromRead
  1672 ;; This function is called by:
  1673 ;;		_main
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           	psect	text2
  1678  004828                     __ptext2:
  1679                           	callstack 0
  1680  004828                     _system_init:
  1681                           	callstack 28
  1682  004828                     
  1683                           ;fs_mcu.c: 57:     driver_limit.pay = 0;
  1684  004828  0E00               	movlw	0
  1685  00482A  0101               	movlb	1	; () banked
  1686  00482C  6F73               	movwf	_driver_limit& (0+255),b
  1687  00482E  0E00               	movlw	0
  1688  004830  6F74               	movwf	(_driver_limit+1)& (0+255),b
  1689  004832  0E00               	movlw	0
  1690  004834  6F75               	movwf	(_driver_limit+2)& (0+255),b
  1691  004836  0E00               	movlw	0
  1692  004838  6F76               	movwf	(_driver_limit+3)& (0+255),b
  1693                           
  1694                           ;fs_mcu.c: 58:     driver_limit.payda = 0;
  1695  00483A  0E00               	movlw	0
  1696  00483C  6F77               	movwf	(_driver_limit+4)& (0+255),b
  1697  00483E  0E00               	movlw	0
  1698  004840  6F78               	movwf	(_driver_limit+5)& (0+255),b
  1699  004842  0E00               	movlw	0
  1700  004844  6F79               	movwf	(_driver_limit+6)& (0+255),b
  1701  004846  0E00               	movlw	0
  1702  004848  6F7A               	movwf	(_driver_limit+7)& (0+255),b
  1703                           
  1704                           ;fs_mcu.c: 59:     driver_limit.ortalama = 0;
  1705  00484A  0E00               	movlw	0
  1706  00484C  6F7B               	movwf	(_driver_limit+8)& (0+255),b
  1707  00484E  0E00               	movlw	0
  1708  004850  6F7C               	movwf	(_driver_limit+9)& (0+255),b
  1709  004852  0E00               	movlw	0
  1710  004854  6F7D               	movwf	(_driver_limit+10)& (0+255),b
  1711  004856  0E00               	movlw	0
  1712  004858  6F7E               	movwf	(_driver_limit+11)& (0+255),b
  1713                           
  1714                           ;fs_mcu.c: 60:     convert_data.convert_channel_0 = 0;
  1715  00485A  0E00               	movlw	0
  1716  00485C  6F00               	movwf	_convert_data& (0+255),b
  1717  00485E  0E00               	movlw	0
  1718  004860  6F01               	movwf	(_convert_data+1)& (0+255),b
  1719  004862  0E00               	movlw	0
  1720  004864  6F02               	movwf	(_convert_data+2)& (0+255),b
  1721  004866  0E00               	movlw	0
  1722  004868  6F03               	movwf	(_convert_data+3)& (0+255),b
  1723                           
  1724                           ;fs_mcu.c: 61:     convert_data.convert_channel_1 = 0;
  1725  00486A  0E00               	movlw	0
  1726  00486C  6F04               	movwf	(_convert_data+4)& (0+255),b
  1727  00486E  0E00               	movlw	0
  1728  004870  6F05               	movwf	(_convert_data+5)& (0+255),b
  1729  004872  0E00               	movlw	0
  1730  004874  6F06               	movwf	(_convert_data+6)& (0+255),b
  1731  004876  0E00               	movlw	0
  1732  004878  6F07               	movwf	(_convert_data+7)& (0+255),b
  1733                           
  1734                           ;fs_mcu.c: 62:     convert_data.convert_channel_2 = 0;
  1735  00487A  0E00               	movlw	0
  1736  00487C  6F08               	movwf	(_convert_data+8)& (0+255),b
  1737  00487E  0E00               	movlw	0
  1738  004880  6F09               	movwf	(_convert_data+9)& (0+255),b
  1739  004882  0E00               	movlw	0
  1740  004884  6F0A               	movwf	(_convert_data+10)& (0+255),b
  1741  004886  0E00               	movlw	0
  1742  004888  6F0B               	movwf	(_convert_data+11)& (0+255),b
  1743                           
  1744                           ;fs_mcu.c: 63:     convert_data.convert_channel_3 = 0;
  1745  00488A  0E00               	movlw	0
  1746  00488C  6F0C               	movwf	(_convert_data+12)& (0+255),b
  1747  00488E  0E00               	movlw	0
  1748  004890  6F0D               	movwf	(_convert_data+13)& (0+255),b
  1749  004892  0E00               	movlw	0
  1750  004894  6F0E               	movwf	(_convert_data+14)& (0+255),b
  1751  004896  0E00               	movlw	0
  1752  004898  6F0F               	movwf	(_convert_data+15)& (0+255),b
  1753                           
  1754                           ;fs_mcu.c: 64:     convert_data.convert_channel_4 = 0;
  1755  00489A  0E00               	movlw	0
  1756  00489C  6F10               	movwf	(_convert_data+16)& (0+255),b
  1757  00489E  0E00               	movlw	0
  1758  0048A0  6F11               	movwf	(_convert_data+17)& (0+255),b
  1759  0048A2  0E00               	movlw	0
  1760  0048A4  6F12               	movwf	(_convert_data+18)& (0+255),b
  1761  0048A6  0E00               	movlw	0
  1762  0048A8  6F13               	movwf	(_convert_data+19)& (0+255),b
  1763                           
  1764                           ;fs_mcu.c: 65:     convert_data.convert_channel_5 = 0;
  1765  0048AA  0E00               	movlw	0
  1766  0048AC  6F14               	movwf	(_convert_data+20)& (0+255),b
  1767  0048AE  0E00               	movlw	0
  1768  0048B0  6F15               	movwf	(_convert_data+21)& (0+255),b
  1769  0048B2  0E00               	movlw	0
  1770  0048B4  6F16               	movwf	(_convert_data+22)& (0+255),b
  1771  0048B6  0E00               	movlw	0
  1772  0048B8  6F17               	movwf	(_convert_data+23)& (0+255),b
  1773                           
  1774                           ;fs_mcu.c: 66:     convert_data.convert_channel_6 = 0;
  1775  0048BA  0E00               	movlw	0
  1776  0048BC  6F18               	movwf	(_convert_data+24)& (0+255),b
  1777  0048BE  0E00               	movlw	0
  1778  0048C0  6F19               	movwf	(_convert_data+25)& (0+255),b
  1779  0048C2  0E00               	movlw	0
  1780  0048C4  6F1A               	movwf	(_convert_data+26)& (0+255),b
  1781  0048C6  0E00               	movlw	0
  1782  0048C8  6F1B               	movwf	(_convert_data+27)& (0+255),b
  1783                           
  1784                           ;fs_mcu.c: 67:     convert_data.convert_channel_7 = 0;
  1785  0048CA  0E00               	movlw	0
  1786  0048CC  6F1C               	movwf	(_convert_data+28)& (0+255),b
  1787  0048CE  0E00               	movlw	0
  1788  0048D0  6F1D               	movwf	(_convert_data+29)& (0+255),b
  1789  0048D2  0E00               	movlw	0
  1790  0048D4  6F1E               	movwf	(_convert_data+30)& (0+255),b
  1791  0048D6  0E00               	movlw	0
  1792  0048D8  6F1F               	movwf	(_convert_data+31)& (0+255),b
  1793                           
  1794                           ;fs_mcu.c: 68:     controller.leftMotorSpeed = 0;
  1795  0048DA  0E00               	movlw	0
  1796  0048DC  6F57               	movwf	(_controller+7)& (0+255),b
  1797  0048DE  0E00               	movlw	0
  1798  0048E0  6F56               	movwf	(_controller+6)& (0+255),b
  1799                           
  1800                           ;fs_mcu.c: 69:     controller.rightMotorSpeed = 0;
  1801  0048E2  0E00               	movlw	0
  1802  0048E4  6F59               	movwf	(_controller+9)& (0+255),b
  1803  0048E6  0E00               	movlw	0
  1804  0048E8  6F58               	movwf	(_controller+8)& (0+255),b
  1805                           
  1806                           ;fs_mcu.c: 70:     timer_value.timer_0_counter = 0;
  1807  0048EA  0E00               	movlw	0
  1808  0048EC  0100               	movlb	0	; () banked
  1809  0048EE  6FFC               	movwf	(_timer_value+9)& (0+255),b
  1810                           
  1811                           ;fs_mcu.c: 71:     controller.error = 0;
  1812  0048F0  0E00               	movlw	0
  1813  0048F2  0101               	movlb	1	; () banked
  1814  0048F4  6F51               	movwf	(_controller+1)& (0+255),b
  1815  0048F6  0E00               	movlw	0
  1816  0048F8  6F50               	movwf	_controller& (0+255),b
  1817  0048FA                     
  1818                           ; BSR set to: 1
  1819                           ;fs_mcu.c: 73:     button_bounce_controller.menu = 0;
  1820  0048FA  0100               	movlb	0	; () banked
  1821  0048FC  91FF               	bcf	_button_bounce_controller& (0+255),0,b
  1822  0048FE                     
  1823                           ; BSR set to: 0
  1824                           ;fs_mcu.c: 74:     button_bounce_controller.pause = 0;
  1825  0048FE  97FF               	bcf	_button_bounce_controller& (0+255),3,b
  1826  004900                     
  1827                           ; BSR set to: 0
  1828                           ;fs_mcu.c: 75:     button_bounce_controller.start = 0;
  1829  004900  93FF               	bcf	_button_bounce_controller& (0+255),1,b
  1830  004902                     
  1831                           ; BSR set to: 0
  1832                           ;fs_mcu.c: 76:     button_bounce_controller.stop = 0;
  1833  004902  95FF               	bcf	_button_bounce_controller& (0+255),2,b
  1834  004904                     
  1835                           ; BSR set to: 0
  1836                           ;fs_mcu.c: 77:     menu_value.driver_time = (uint8_t)eepromRead(0x00);
  1837  004904  0E00               	movlw	0
  1838  004906  ECEA  F02D         	call	_eepromRead
  1839  00490A  0101               	movlb	1	; () banked
  1840  00490C  6F8F               	movwf	_menu_value& (0+255),b
  1841  00490E                     
  1842                           ; BSR set to: 1
  1843                           ;fs_mcu.c: 78:     menu_value.stop_time = (uint8_t)eepromRead(0x01);
  1844  00490E  0E01               	movlw	1
  1845  004910  ECEA  F02D         	call	_eepromRead
  1846  004914  0101               	movlb	1	; () banked
  1847  004916  6F90               	movwf	(_menu_value+1)& (0+255),b
  1848  004918                     
  1849                           ; BSR set to: 1
  1850                           ;fs_mcu.c: 79:     menu_value.speed_limit = (uint8_t)eepromRead(0x02);
  1851  004918  0E02               	movlw	2
  1852  00491A  ECEA  F02D         	call	_eepromRead
  1853  00491E  0101               	movlb	1	; () banked
  1854  004920  6F91               	movwf	(_menu_value+2)& (0+255),b
  1855  004922                     
  1856                           ; BSR set to: 1
  1857                           ;fs_mcu.c: 81:     _delay((unsigned long)((700)*(64000000UL/4000.0)));
  1858  004922  0E39               	movlw	57
  1859  004924  6E03               	movwf	(??_system_init+1)^0,c
  1860  004926  0ED2               	movlw	210
  1861  004928  6E02               	movwf	??_system_init^0,c
  1862  00492A  0E4C               	movlw	76
  1863  00492C                     u7757:
  1864  00492C  2EE8               	decfsz	wreg,f,c
  1865  00492E  D7FE               	bra	u7757
  1866  004930  2E02               	decfsz	??_system_init^0,f,c
  1867  004932  D7FC               	bra	u7757
  1868  004934  2E03               	decfsz	(??_system_init+1)^0,f,c
  1869  004936  D7FA               	bra	u7757
  1870  004938  D000               	nop2	
  1871  00493A                     
  1872                           ;fs_mcu.c: 82:     timer_value.remainingMinute = menu_value.driver_time;
  1873  00493A  C18F  F0F9         	movff	_menu_value,_timer_value+6
  1874  00493E  0100               	movlb	0	; () banked
  1875  004940  6BFA               	clrf	(_timer_value+7)& (0+255),b
  1876  004942                     
  1877                           ; BSR set to: 0
  1878                           ;fs_mcu.c: 83:     timer_value.remainingSecond = 0;
  1879  004942  0E00               	movlw	0
  1880  004944  6FF8               	movwf	(_timer_value+5)& (0+255),b
  1881  004946  0E00               	movlw	0
  1882  004948  6FF7               	movwf	(_timer_value+4)& (0+255),b
  1883  00494A                     
  1884                           ; BSR set to: 0
  1885  00494A  0012               	return		;funcret
  1886  00494C                     __end_of_system_init:
  1887                           	callstack 0
  1888                           
  1889 ;; *************** function _eepromRead *****************
  1890 ;; Defined at:
  1891 ;;		line 36 in file "fs_eeprom.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;  address         1    wreg     unsigned char 
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;  address         1    0[COMRAM] unsigned char 
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  1    wreg      unsigned char 
  1898 ;; Registers used:
  1899 ;;		wreg, status,2
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1905 ;;      Params:         0       0       0       0       0       0       0
  1906 ;;      Locals:         1       0       0       0       0       0       0
  1907 ;;      Temps:          0       0       0       0       0       0       0
  1908 ;;      Totals:         1       0       0       0       0       0       0
  1909 ;;Total ram usage:        1 bytes
  1910 ;; Hardware stack levels used:    1
  1911 ;; Hardware stack levels required when called:    1
  1912 ;; This function calls:
  1913 ;;		Nothing
  1914 ;; This function is called by:
  1915 ;;		_system_init
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919                           	psect	text3
  1920  005BD4                     __ptext3:
  1921                           	callstack 0
  1922  005BD4                     _eepromRead:
  1923                           	callstack 28
  1924                           
  1925                           ; BSR set to: 0
  1926                           ;incstack = 0
  1927                           ;eepromRead@address stored from wreg
  1928  005BD4  6E01               	movwf	eepromRead@address^0,c
  1929  005BD6                     
  1930                           ;fs_eeprom.c: 36: uint8_t eepromRead(uint8_t address);fs_eeprom.c: 37: {;fs_eeprom.c: 41
      +                          :     EEADR = (uint8_t)address;
  1931  005BD6  C001  FFA9         	movff	eepromRead@address,4009	;volatile
  1932  005BDA                     
  1933                           ;fs_eeprom.c: 43:     EECON1bits.EEPGD = 0;
  1934  005BDA  9EA6               	bcf	166,7,c	;volsfr
  1935  005BDC                     
  1936                           ;fs_eeprom.c: 44:     EECON1bits.CFGS = 0;
  1937  005BDC  9CA6               	bcf	166,6,c	;volsfr
  1938  005BDE                     
  1939                           ;fs_eeprom.c: 45:     EECON1bits.RD = 1;
  1940  005BDE  80A6               	bsf	166,0,c	;volsfr
  1941  005BE0                     l70:
  1942  005BE0  B0A6               	btfsc	166,0,c	;volsfr
  1943  005BE2  EFF5  F02D         	goto	u6821
  1944  005BE6  EFF7  F02D         	goto	u6820
  1945  005BEA                     u6821:
  1946  005BEA  EFF0  F02D         	goto	l70
  1947  005BEE                     u6820:
  1948  005BEE                     
  1949                           ;fs_eeprom.c: 51:     return EEDATA;
  1950  005BEE  50A8               	movf	168,w,c	;volatile
  1951  005BF0  0012               	return		;funcret
  1952  005BF2                     __end_of_eepromRead:
  1953                           	callstack 0
  1954                           
  1955 ;; *************** function _menuInitialize *****************
  1956 ;; Defined at:
  1957 ;;		line 38 in file "fs_menu_controller.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;		None
  1960 ;; Auto vars:     Size  Location     Type
  1961 ;;		None
  1962 ;; Return value:  Size  Location     Type
  1963 ;;                  1    wreg      void 
  1964 ;; Registers used:
  1965 ;;		None
  1966 ;; Tracked objects:
  1967 ;;		On entry : 0/0
  1968 ;;		On exit  : 0/0
  1969 ;;		Unchanged: 0/0
  1970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1971 ;;      Params:         0       0       0       0       0       0       0
  1972 ;;      Locals:         0       0       0       0       0       0       0
  1973 ;;      Temps:          0       0       0       0       0       0       0
  1974 ;;      Totals:         0       0       0       0       0       0       0
  1975 ;;Total ram usage:        0 bytes
  1976 ;; Hardware stack levels used:    1
  1977 ;; Hardware stack levels required when called:    1
  1978 ;; This function calls:
  1979 ;;		Nothing
  1980 ;; This function is called by:
  1981 ;;		_main
  1982 ;; This function uses a non-reentrant model
  1983 ;;
  1984                           
  1985                           	psect	text4
  1986  005B5E                     __ptext4:
  1987                           	callstack 0
  1988  005B5E                     _menuInitialize:
  1989                           	callstack 29
  1990  005B5E                     
  1991                           ;fs_menu_controller.c: 41:     TRISBbits.RB6 = 1;
  1992  005B5E  8C93               	bsf	147,6,c	;volatile
  1993                           
  1994                           ;fs_menu_controller.c: 44:     TRISBbits.RB7 = 1;
  1995  005B60  8E93               	bsf	147,7,c	;volatile
  1996                           
  1997                           ;fs_menu_controller.c: 46:     ANSELDbits.ANSD4 = 0;
  1998  005B62  010F               	movlb	15	; () banked
  1999  005B64  993B               	bcf	59,4,b	;volatile
  2000                           
  2001                           ;fs_menu_controller.c: 47:     TRISDbits.RD4 = 1;
  2002  005B66  8895               	bsf	149,4,c	;volatile
  2003                           
  2004                           ;fs_menu_controller.c: 49:     ANSELDbits.ANSD0 = 0;
  2005  005B68  913B               	bcf	59,0,b	;volatile
  2006                           
  2007                           ;fs_menu_controller.c: 50:     TRISDbits.RD0 = 1;
  2008  005B6A  8095               	bsf	149,0,c	;volatile
  2009                           
  2010                           ;fs_menu_controller.c: 52:     ANSELDbits.ANSD1 = 0;
  2011  005B6C  933B               	bcf	59,1,b	;volatile
  2012                           
  2013                           ;fs_menu_controller.c: 53:     TRISDbits.RD1 = 1;
  2014  005B6E  8295               	bsf	149,1,c	;volatile
  2015                           
  2016                           ;fs_menu_controller.c: 55:     ANSELDbits.ANSD2 = 0;
  2017  005B70  953B               	bcf	59,2,b	;volatile
  2018                           
  2019                           ;fs_menu_controller.c: 56:     TRISDbits.RD2 = 1;
  2020  005B72  8495               	bsf	149,2,c	;volatile
  2021                           
  2022                           ;fs_menu_controller.c: 58:     ANSELDbits.ANSD3 = 0;
  2023  005B74  973B               	bcf	59,3,b	;volatile
  2024                           
  2025                           ;fs_menu_controller.c: 59:     TRISDbits.RD3 = 1;
  2026  005B76  8695               	bsf	149,3,c	;volatile
  2027                           
  2028                           ;fs_menu_controller.c: 61:     ANSELDbits.ANSD5 = 0;
  2029  005B78  9B3B               	bcf	59,5,b	;volatile
  2030                           
  2031                           ;fs_menu_controller.c: 62:     TRISDbits.RD5 = 0;
  2032  005B7A  9A95               	bcf	149,5,c	;volatile
  2033                           
  2034                           ;fs_menu_controller.c: 64:     ANSELCbits.ANSC5 = 0;
  2035  005B7C  9B3A               	bcf	58,5,b	;volatile
  2036                           
  2037                           ;fs_menu_controller.c: 65:     TRISCbits.RC5 = 0;
  2038  005B7E  9A94               	bcf	148,5,c	;volatile
  2039                           
  2040                           ;fs_menu_controller.c: 67:     ANSELCbits.ANSC4 = 0;
  2041  005B80  993A               	bcf	58,4,b	;volatile
  2042                           
  2043                           ;fs_menu_controller.c: 68:     TRISCbits.RC4 = 0;
  2044  005B82  9894               	bcf	148,4,c	;volatile
  2045  005B84                     
  2046                           ; BSR set to: 15
  2047  005B84  0012               	return		;funcret
  2048  005B86                     __end_of_menuInitialize:
  2049                           	callstack 0
  2050                           
  2051 ;; *************** function _menuControl *****************
  2052 ;; Defined at:
  2053 ;;		line 162 in file "fs_menu_controller.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;		None
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;		None
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  1    wreg      void 
  2060 ;; Registers used:
  2061 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2062 ;; Tracked objects:
  2063 ;;		On entry : 0/0
  2064 ;;		On exit  : 0/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2067 ;;      Params:         0       0       0       0       0       0       0
  2068 ;;      Locals:         0       0       0       0       0       0       0
  2069 ;;      Temps:          0       0       0       0       0       0       0
  2070 ;;      Totals:         0       0       0       0       0       0       0
  2071 ;;Total ram usage:        0 bytes
  2072 ;; Hardware stack levels used:    1
  2073 ;; Hardware stack levels required when called:   10
  2074 ;; This function calls:
  2075 ;;		_buttonControlFlags
  2076 ;;		_stateMachine
  2077 ;; This function is called by:
  2078 ;;		_main
  2079 ;; This function uses a non-reentrant model
  2080 ;;
  2081                           
  2082                           	psect	text5
  2083  00547A                     __ptext5:
  2084                           	callstack 0
  2085  00547A                     _menuControl:
  2086                           	callstack 20
  2087  00547A                     
  2088                           ;fs_menu_controller.c: 164:     buttonControlFlags();
  2089  00547A  ECA0  F022         	call	_buttonControlFlags	;wreg free
  2090  00547E                     
  2091                           ;fs_menu_controller.c: 165:     stateMachine();
  2092  00547E  EC4F  F009         	call	_stateMachine	;wreg free
  2093  005482                     
  2094                           ;fs_menu_controller.c: 167:     if (menu_flags.menu_start_flag == 1)
  2095  005482  0100               	movlb	0	; () banked
  2096  005484  A3FD               	btfss	_menu_flags& (0+255),1,b
  2097  005486  EF47  F02A         	goto	u7611
  2098  00548A  EF49  F02A         	goto	u7610
  2099  00548E                     u7611:
  2100  00548E  EF51  F02A         	goto	l6112
  2101  005492                     u7610:
  2102  005492                     
  2103                           ; BSR set to: 0
  2104                           ;fs_menu_controller.c: 168:     {;fs_menu_controller.c: 169:         menu_flags.menu_sta
      +                          rt_flag = 0;
  2105  005492  93FD               	bcf	_menu_flags& (0+255),1,b
  2106  005494                     
  2107                           ; BSR set to: 0
  2108                           ;fs_menu_controller.c: 170:         startIsClick = 1;
  2109  005494  0E01               	movlw	1
  2110  005496  0101               	movlb	1	; () banked
  2111  005498  6F9C               	movwf	_startIsClick& (0+255),b
  2112                           
  2113                           ;fs_menu_controller.c: 171:         pauseIsClick = 0;
  2114  00549A  0E00               	movlw	0
  2115  00549C  6F9D               	movwf	_pauseIsClick& (0+255),b
  2116                           
  2117                           ;fs_menu_controller.c: 172:         stopIsClick = 0;
  2118  00549E  0E00               	movlw	0
  2119  0054A0  6F9B               	movwf	_stopIsClick& (0+255),b
  2120  0054A2                     l6112:
  2121                           
  2122                           ;fs_menu_controller.c: 176:     if (menu_flags.menu_pause_flag == 1)
  2123  0054A2  0100               	movlb	0	; () banked
  2124  0054A4  A7FD               	btfss	_menu_flags& (0+255),3,b
  2125  0054A6  EF57  F02A         	goto	u7621
  2126  0054AA  EF59  F02A         	goto	u7620
  2127  0054AE                     u7621:
  2128  0054AE  EF61  F02A         	goto	l6118
  2129  0054B2                     u7620:
  2130  0054B2                     
  2131                           ; BSR set to: 0
  2132                           ;fs_menu_controller.c: 177:     {;fs_menu_controller.c: 178:         menu_flags.menu_pau
      +                          se_flag = 0;
  2133  0054B2  97FD               	bcf	_menu_flags& (0+255),3,b
  2134  0054B4                     
  2135                           ; BSR set to: 0
  2136                           ;fs_menu_controller.c: 179:         pauseIsClick = 1;
  2137  0054B4  0E01               	movlw	1
  2138  0054B6  0101               	movlb	1	; () banked
  2139  0054B8  6F9D               	movwf	_pauseIsClick& (0+255),b
  2140                           
  2141                           ;fs_menu_controller.c: 180:         startIsClick = 0;
  2142  0054BA  0E00               	movlw	0
  2143  0054BC  6F9C               	movwf	_startIsClick& (0+255),b
  2144                           
  2145                           ;fs_menu_controller.c: 181:         stopIsClick = 0;
  2146  0054BE  0E00               	movlw	0
  2147  0054C0  6F9B               	movwf	_stopIsClick& (0+255),b
  2148  0054C2                     l6118:
  2149                           
  2150                           ;fs_menu_controller.c: 184:     if (menu_flags.menu_stop_flag == 1)
  2151  0054C2  0100               	movlb	0	; () banked
  2152  0054C4  A5FD               	btfss	_menu_flags& (0+255),2,b
  2153  0054C6  EF67  F02A         	goto	u7631
  2154  0054CA  EF69  F02A         	goto	u7630
  2155  0054CE                     u7631:
  2156  0054CE  EF71  F02A         	goto	l333
  2157  0054D2                     u7630:
  2158  0054D2                     
  2159                           ; BSR set to: 0
  2160                           ;fs_menu_controller.c: 185:     {;fs_menu_controller.c: 186:         menu_flags.menu_sto
      +                          p_flag = 0;
  2161  0054D2  95FD               	bcf	_menu_flags& (0+255),2,b
  2162  0054D4                     
  2163                           ; BSR set to: 0
  2164                           ;fs_menu_controller.c: 187:         pauseIsClick = 0;
  2165  0054D4  0E00               	movlw	0
  2166  0054D6  0101               	movlb	1	; () banked
  2167  0054D8  6F9D               	movwf	_pauseIsClick& (0+255),b
  2168                           
  2169                           ;fs_menu_controller.c: 188:         startIsClick = 0;
  2170  0054DA  0E00               	movlw	0
  2171  0054DC  6F9C               	movwf	_startIsClick& (0+255),b
  2172                           
  2173                           ;fs_menu_controller.c: 189:         stopIsClick = 1;
  2174  0054DE  0E01               	movlw	1
  2175  0054E0  6F9B               	movwf	_stopIsClick& (0+255),b
  2176  0054E2                     l333:
  2177  0054E2  0012               	return		;funcret
  2178  0054E4                     __end_of_menuControl:
  2179                           	callstack 0
  2180                           
  2181 ;; *************** function _stateMachine *****************
  2182 ;; Defined at:
  2183 ;;		line 200 in file "fs_menu_controller.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;		None
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;  textCursor2    16  131[BANK0 ] unsigned char [16]
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  1    wreg      void 
  2190 ;; Registers used:
  2191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2197 ;;      Params:         0       0       0       0       0       0       0
  2198 ;;      Locals:         0      16       0       0       0       0       0
  2199 ;;      Temps:          0       2       0       0       0       0       0
  2200 ;;      Totals:         0      18       0       0       0       0       0
  2201 ;;Total ram usage:       18 bytes
  2202 ;; Hardware stack levels used:    1
  2203 ;; Hardware stack levels required when called:    9
  2204 ;; This function calls:
  2205 ;;		_Lcd_Set_Cursor
  2206 ;;		_Lcd_Write_String
  2207 ;;		___fladd
  2208 ;;		___flge
  2209 ;;		___flsub
  2210 ;;		_eepromWrite
  2211 ;;		_sprintf
  2212 ;;		_startMotor
  2213 ;;		_stopMotor
  2214 ;; This function is called by:
  2215 ;;		_menuControl
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219                           	psect	text6
  2220  00129E                     __ptext6:
  2221                           	callstack 0
  2222  00129E                     _stateMachine:
  2223                           	callstack 20
  2224  00129E                     
  2225                           ;fs_menu_controller.c: 202:     char textCursor2[16] = {0};
  2226  00129E  EE20  F0E3         	lfsr	2,stateMachine@textCursor2
  2227  0012A2  0E0F               	movlw	15
  2228  0012A4                     u7071:
  2229  0012A4  6ADE               	clrf	postinc2,c
  2230  0012A6  06E8               	decf	wreg,f,c
  2231  0012A8  E2FD               	bc	u7071
  2232                           
  2233                           ;fs_menu_controller.c: 203:     static uint8_t secretMenuCounter = 0;;fs_menu_controller
      +                          .c: 205:     switch (menu_selected)
  2234  0012AA  EFD9  F00D         	goto	l6016
  2235  0012AE                     l341:
  2236                           
  2237                           ; BSR set to: 0
  2238                           ;fs_menu_controller.c: 209:             LATDbits.LATD5 = 1;
  2239  0012AE  8A8C               	bsf	140,5,c	;volatile
  2240                           
  2241                           ;fs_menu_controller.c: 210:             LATCbits.LATC5 = 1;
  2242  0012B0  8A8B               	bsf	139,5,c	;volatile
  2243  0012B2                     
  2244                           ; BSR set to: 0
  2245                           ;fs_menu_controller.c: 211:             Lcd_Set_Cursor(1,1);
  2246  0012B2  0E01               	movlw	1
  2247  0012B4  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2248  0012B6  0E01               	movlw	1
  2249  0012B8  ECDC  F02A         	call	_Lcd_Set_Cursor
  2250  0012BC                     
  2251                           ;fs_menu_controller.c: 212:             Lcd_Write_String("KALAN ZAMAN     ");
  2252  0012BC  0E35               	movlw	low STR_1
  2253  0012BE  6E05               	movwf	Lcd_Write_String@a^0,c
  2254  0012C0  0E06               	movlw	high STR_1
  2255  0012C2  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2256  0012C4  EC84  F029         	call	_Lcd_Write_String	;wreg free
  2257  0012C8                     
  2258                           ;fs_menu_controller.c: 213:             Lcd_Set_Cursor(2,1);
  2259  0012C8  0E01               	movlw	1
  2260  0012CA  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2261  0012CC  0E02               	movlw	2
  2262  0012CE  ECDC  F02A         	call	_Lcd_Set_Cursor
  2263  0012D2                     
  2264                           ;fs_menu_controller.c: 214:             sprintf(textCursor2,"      %d:%d   ",timer_value
      +                          .remainingMinute,timer_value.remainingSecond);
  2265  0012D2  0EE3               	movlw	low stateMachine@textCursor2
  2266  0012D4  0100               	movlb	0	; () banked
  2267  0012D6  6FCF               	movwf	sprintf@s& (0+255),b
  2268  0012D8  0E00               	movlw	high stateMachine@textCursor2
  2269  0012DA  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2270  0012DC  0E9A               	movlw	low STR_2
  2271  0012DE  6FD1               	movwf	sprintf@fmt& (0+255),b
  2272  0012E0  0E06               	movlw	high STR_2
  2273  0012E2  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2274  0012E4  C0F9  F0D3         	movff	_timer_value+6,?_sprintf+4
  2275  0012E8  C0FA  F0D4         	movff	_timer_value+7,?_sprintf+5
  2276  0012EC  C0F7  F0D5         	movff	_timer_value+4,?_sprintf+6
  2277  0012F0  C0F8  F0D6         	movff	_timer_value+5,?_sprintf+7
  2278  0012F4  ECC4  F02B         	call	_sprintf	;wreg free
  2279  0012F8                     
  2280                           ;fs_menu_controller.c: 215:             Lcd_Write_String(textCursor2);
  2281  0012F8  0EE3               	movlw	low stateMachine@textCursor2
  2282  0012FA  6E05               	movwf	Lcd_Write_String@a^0,c
  2283  0012FC  0E00               	movlw	high stateMachine@textCursor2
  2284  0012FE  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2285  001300  EC84  F029         	call	_Lcd_Write_String	;wreg free
  2286  001304                     
  2287                           ;fs_menu_controller.c: 217:             if ( timer_value.menu_login_delay == 100)
  2288  001304  0E64               	movlw	100
  2289  001306  0100               	movlb	0	; () banked
  2290  001308  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  2291  00130A  A4D8               	btfss	status,2,c
  2292  00130C  EF8A  F009         	goto	u7081
  2293  001310  EF8C  F009         	goto	u7080
  2294  001314                     u7081:
  2295  001314  EF90  F009         	goto	l5710
  2296  001318                     u7080:
  2297  001318                     
  2298                           ; BSR set to: 0
  2299                           ;fs_menu_controller.c: 218:             {;fs_menu_controller.c: 219:                 tim
      +                          er_value.menu_login_delay = 0;
  2300  001318  0E00               	movlw	0
  2301  00131A  6FFB               	movwf	(_timer_value+8)& (0+255),b
  2302                           
  2303                           ;fs_menu_controller.c: 220:                 menu_selected = DRIVER_TIME_SETTING;
  2304  00131C  0E01               	movlw	1
  2305  00131E  6FFE               	movwf	_menu_selected& (0+255),b
  2306  001320                     l5710:
  2307                           
  2308                           ; BSR set to: 0
  2309                           ;fs_menu_controller.c: 223:             if ((timer_value.remainingMinute <= 0) && (timer
      +                          _value.remainingSecond == 0) )
  2310  001320  BFFA               	btfsc	(_timer_value+7)& (0+255),7,b
  2311  001322  EF9D  F009         	goto	u7090
  2312  001326  51FA               	movf	(_timer_value+7)& (0+255),w,b
  2313  001328  E106               	bnz	u7091
  2314  00132A  05F9               	decf	(_timer_value+6)& (0+255),w,b
  2315  00132C  B0D8               	btfsc	status,0,c
  2316  00132E  EF9B  F009         	goto	u7091
  2317  001332  EF9D  F009         	goto	u7090
  2318  001336                     u7091:
  2319  001336  EFAC  F009         	goto	l343
  2320  00133A                     u7090:
  2321  00133A                     
  2322                           ; BSR set to: 0
  2323  00133A  51F7               	movf	(_timer_value+4)& (0+255),w,b
  2324  00133C  11F8               	iorwf	(_timer_value+5)& (0+255),w,b
  2325  00133E  A4D8               	btfss	status,2,c
  2326  001340  EFA4  F009         	goto	u7101
  2327  001344  EFA6  F009         	goto	u7100
  2328  001348                     u7101:
  2329  001348  EFAC  F009         	goto	l343
  2330  00134C                     u7100:
  2331  00134C                     
  2332                           ; BSR set to: 0
  2333                           ;fs_menu_controller.c: 224:             {;fs_menu_controller.c: 225:                 men
      +                          u_selected = STOP_MENU;
  2334  00134C  0E04               	movlw	4
  2335  00134E  6FFE               	movwf	_menu_selected& (0+255),b
  2336                           
  2337                           ;fs_menu_controller.c: 226:                 timer_value.minute = 0;
  2338  001350  0E00               	movlw	0
  2339  001352  6FF6               	movwf	(_timer_value+3)& (0+255),b
  2340  001354  0E00               	movlw	0
  2341  001356  6FF5               	movwf	(_timer_value+2)& (0+255),b
  2342  001358                     l343:
  2343                           
  2344                           ; BSR set to: 0
  2345                           ;fs_menu_controller.c: 229:             if ( (startIsClick == 0) && (pauseIsClick == 1) 
      +                          && (stopIsClick == 0) && (menu_selected == MAIN_MENU))
  2346  001358  0101               	movlb	1	; () banked
  2347  00135A  519C               	movf	_startIsClick& (0+255),w,b
  2348  00135C  A4D8               	btfss	status,2,c
  2349  00135E  EFB3  F009         	goto	u7111
  2350  001362  EFB5  F009         	goto	u7110
  2351  001366                     u7111:
  2352  001366  EFD0  F009         	goto	l344
  2353  00136A                     u7110:
  2354  00136A                     
  2355                           ; BSR set to: 1
  2356  00136A  059D               	decf	_pauseIsClick& (0+255),w,b
  2357  00136C  A4D8               	btfss	status,2,c
  2358  00136E  EFBB  F009         	goto	u7121
  2359  001372  EFBD  F009         	goto	u7120
  2360  001376                     u7121:
  2361  001376  EFD0  F009         	goto	l344
  2362  00137A                     u7120:
  2363  00137A                     
  2364                           ; BSR set to: 1
  2365  00137A  519B               	movf	_stopIsClick& (0+255),w,b
  2366  00137C  A4D8               	btfss	status,2,c
  2367  00137E  EFC3  F009         	goto	u7131
  2368  001382  EFC5  F009         	goto	u7130
  2369  001386                     u7131:
  2370  001386  EFD0  F009         	goto	l344
  2371  00138A                     u7130:
  2372  00138A                     
  2373                           ; BSR set to: 1
  2374  00138A  0100               	movlb	0	; () banked
  2375  00138C  51FE               	movf	_menu_selected& (0+255),w,b
  2376  00138E  A4D8               	btfss	status,2,c
  2377  001390  EFCC  F009         	goto	u7141
  2378  001394  EFCE  F009         	goto	u7140
  2379  001398                     u7141:
  2380  001398  EFD0  F009         	goto	l344
  2381  00139C                     u7140:
  2382  00139C                     
  2383                           ; BSR set to: 0
  2384                           ;fs_menu_controller.c: 230:             {;fs_menu_controller.c: 231:                 men
      +                          u_selected = PAUSE_MENU;
  2385  00139C  0E06               	movlw	6
  2386  00139E  6FFE               	movwf	_menu_selected& (0+255),b
  2387  0013A0                     l344:
  2388                           
  2389                           ;fs_menu_controller.c: 234:             if ( (startIsClick == 0) && (pauseIsClick == 0) 
      +                          && (stopIsClick == 1) && (menu_selected == MAIN_MENU) )
  2390  0013A0  0101               	movlb	1	; () banked
  2391  0013A2  519C               	movf	_startIsClick& (0+255),w,b
  2392  0013A4  A4D8               	btfss	status,2,c
  2393  0013A6  EFD7  F009         	goto	u7151
  2394  0013AA  EFD9  F009         	goto	u7150
  2395  0013AE                     u7151:
  2396  0013AE  EF0B  F00E         	goto	l382
  2397  0013B2                     u7150:
  2398  0013B2                     
  2399                           ; BSR set to: 1
  2400  0013B2  519D               	movf	_pauseIsClick& (0+255),w,b
  2401  0013B4  A4D8               	btfss	status,2,c
  2402  0013B6  EFDF  F009         	goto	u7161
  2403  0013BA  EFE1  F009         	goto	u7160
  2404  0013BE                     u7161:
  2405  0013BE  EF0B  F00E         	goto	l382
  2406  0013C2                     u7160:
  2407  0013C2                     
  2408                           ; BSR set to: 1
  2409  0013C2  059B               	decf	_stopIsClick& (0+255),w,b
  2410  0013C4  A4D8               	btfss	status,2,c
  2411  0013C6  EFE7  F009         	goto	u7171
  2412  0013CA  EFE9  F009         	goto	u7170
  2413  0013CE                     u7171:
  2414  0013CE  EF0B  F00E         	goto	l382
  2415  0013D2                     u7170:
  2416  0013D2                     
  2417                           ; BSR set to: 1
  2418  0013D2  0100               	movlb	0	; () banked
  2419  0013D4  51FE               	movf	_menu_selected& (0+255),w,b
  2420  0013D6  A4D8               	btfss	status,2,c
  2421  0013D8  EFF0  F009         	goto	u7181
  2422  0013DC  EFF2  F009         	goto	u7180
  2423  0013E0                     u7181:
  2424  0013E0  EF0B  F00E         	goto	l382
  2425  0013E4                     u7180:
  2426  0013E4                     
  2427                           ; BSR set to: 0
  2428                           ;fs_menu_controller.c: 235:             {;fs_menu_controller.c: 236:                  ti
      +                          mer_value.remainingMinute = menu_value.driver_time;
  2429  0013E4  C18F  F0F9         	movff	_menu_value,_timer_value+6
  2430  0013E8  6BFA               	clrf	(_timer_value+7)& (0+255),b
  2431  0013EA                     
  2432                           ; BSR set to: 0
  2433                           ;fs_menu_controller.c: 237:                  timer_value.remainingSecond = 0;
  2434  0013EA  0E00               	movlw	0
  2435  0013EC  6FF8               	movwf	(_timer_value+5)& (0+255),b
  2436  0013EE  0E00               	movlw	0
  2437  0013F0  6FF7               	movwf	(_timer_value+4)& (0+255),b
  2438                           
  2439                           ;fs_menu_controller.c: 238:                  timer_value.second = 0;
  2440  0013F2  0E00               	movlw	0
  2441  0013F4  6FF4               	movwf	(_timer_value+1)& (0+255),b
  2442  0013F6  0E00               	movlw	0
  2443  0013F8  6FF3               	movwf	_timer_value& (0+255),b
  2444                           
  2445                           ;fs_menu_controller.c: 239:                  timer_value.minute = 0;
  2446  0013FA  0E00               	movlw	0
  2447  0013FC  6FF6               	movwf	(_timer_value+3)& (0+255),b
  2448  0013FE  0E00               	movlw	0
  2449  001400  6FF5               	movwf	(_timer_value+2)& (0+255),b
  2450  001402  EF0B  F00E         	goto	l382
  2451  001406                     l347:
  2452                           
  2453                           ; BSR set to: 0
  2454                           ;fs_menu_controller.c: 248:             if (menu_flags.menu_input_flag == 1)
  2455  001406  A1FD               	btfss	_menu_flags& (0+255),0,b
  2456  001408  EF08  F00A         	goto	u7191
  2457  00140C  EF0A  F00A         	goto	u7190
  2458  001410                     u7191:
  2459  001410  EF0D  F00A         	goto	l5738
  2460  001414                     u7190:
  2461  001414                     
  2462                           ; BSR set to: 0
  2463                           ;fs_menu_controller.c: 249:             {;fs_menu_controller.c: 250:                 men
      +                          u_flags.menu_input_flag = 0;
  2464  001414  91FD               	bcf	_menu_flags& (0+255),0,b
  2465  001416                     
  2466                           ; BSR set to: 0
  2467                           ;fs_menu_controller.c: 251:                 menu_selected = STOP_TIME_SETTING;
  2468  001416  0E02               	movlw	2
  2469  001418  6FFE               	movwf	_menu_selected& (0+255),b
  2470  00141A                     l5738:
  2471                           
  2472                           ; BSR set to: 0
  2473                           ;fs_menu_controller.c: 254:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_value.driver_time < 30))
  2474  00141A  A9FD               	btfss	_menu_flags& (0+255),4,b
  2475  00141C  EF12  F00A         	goto	u7201
  2476  001420  EF14  F00A         	goto	u7200
  2477  001424                     u7201:
  2478  001424  EF36  F00A         	goto	l5756
  2479  001428                     u7200:
  2480  001428                     
  2481                           ; BSR set to: 0
  2482  001428  0E1E               	movlw	30
  2483  00142A  0101               	movlb	1	; () banked
  2484  00142C  618F               	cpfslt	_menu_value& (0+255),b
  2485  00142E  EF1B  F00A         	goto	u7211
  2486  001432  EF1D  F00A         	goto	u7210
  2487  001436                     u7211:
  2488  001436  EF36  F00A         	goto	l5756
  2489  00143A                     u7210:
  2490  00143A                     
  2491                           ; BSR set to: 1
  2492                           ;fs_menu_controller.c: 255:             {;fs_menu_controller.c: 256:                 men
      +                          u_flags.menu_increase_flag = 0;
  2493  00143A  0100               	movlb	0	; () banked
  2494  00143C  99FD               	bcf	_menu_flags& (0+255),4,b
  2495  00143E                     
  2496                           ; BSR set to: 0
  2497                           ;fs_menu_controller.c: 257:                 menu_value.driver_time++;
  2498  00143E  0101               	movlb	1	; () banked
  2499  001440  2B8F               	incf	_menu_value& (0+255),f,b
  2500  001442                     
  2501                           ; BSR set to: 1
  2502                           ;fs_menu_controller.c: 258:                 eepromWrite(0x00,(uint8_t)menu_value.driver_
      +                          time);
  2503  001442  C18F  F001         	movff	_menu_value,eepromWrite@data
  2504  001446  0E00               	movlw	0
  2505  001448  EC98  F02D         	call	_eepromWrite
  2506  00144C                     
  2507                           ;fs_menu_controller.c: 259:                 timer_value.minute =0 ;
  2508  00144C  0E00               	movlw	0
  2509  00144E  0100               	movlb	0	; () banked
  2510  001450  6FF6               	movwf	(_timer_value+3)& (0+255),b
  2511  001452  0E00               	movlw	0
  2512  001454  6FF5               	movwf	(_timer_value+2)& (0+255),b
  2513  001456                     
  2514                           ; BSR set to: 0
  2515                           ;fs_menu_controller.c: 260:                 timer_value.second = 0;
  2516  001456  0E00               	movlw	0
  2517  001458  6FF4               	movwf	(_timer_value+1)& (0+255),b
  2518  00145A  0E00               	movlw	0
  2519  00145C  6FF3               	movwf	_timer_value& (0+255),b
  2520  00145E                     
  2521                           ; BSR set to: 0
  2522                           ;fs_menu_controller.c: 261:                 timer_value.remainingSecond = 0;
  2523  00145E  0E00               	movlw	0
  2524  001460  6FF8               	movwf	(_timer_value+5)& (0+255),b
  2525  001462  0E00               	movlw	0
  2526  001464  6FF7               	movwf	(_timer_value+4)& (0+255),b
  2527  001466                     
  2528                           ; BSR set to: 0
  2529                           ;fs_menu_controller.c: 262:                 timer_value.remainingMinute = menu_value.dri
      +                          ver_time;
  2530  001466  C18F  F0F9         	movff	_menu_value,_timer_value+6
  2531  00146A  6BFA               	clrf	(_timer_value+7)& (0+255),b
  2532  00146C                     l5756:
  2533                           
  2534                           ;fs_menu_controller.c: 265:             if ((menu_flags.menu_decrease_flag == 1) && (men
      +                          u_value.driver_time > 1))
  2535  00146C  0100               	movlb	0	; () banked
  2536  00146E  ABFD               	btfss	_menu_flags& (0+255),5,b
  2537  001470  EF3C  F00A         	goto	u7221
  2538  001474  EF3E  F00A         	goto	u7220
  2539  001478                     u7221:
  2540  001478  EF60  F00A         	goto	l5774
  2541  00147C                     u7220:
  2542  00147C                     
  2543                           ; BSR set to: 0
  2544  00147C  0E01               	movlw	1
  2545  00147E  0101               	movlb	1	; () banked
  2546  001480  658F               	cpfsgt	_menu_value& (0+255),b
  2547  001482  EF45  F00A         	goto	u7231
  2548  001486  EF47  F00A         	goto	u7230
  2549  00148A                     u7231:
  2550  00148A  EF60  F00A         	goto	l5774
  2551  00148E                     u7230:
  2552  00148E                     
  2553                           ; BSR set to: 1
  2554                           ;fs_menu_controller.c: 266:             {;fs_menu_controller.c: 267:                  me
      +                          nu_flags.menu_decrease_flag = 0;
  2555  00148E  0100               	movlb	0	; () banked
  2556  001490  9BFD               	bcf	_menu_flags& (0+255),5,b
  2557  001492                     
  2558                           ; BSR set to: 0
  2559                           ;fs_menu_controller.c: 268:                  menu_value.driver_time--;
  2560  001492  0101               	movlb	1	; () banked
  2561  001494  078F               	decf	_menu_value& (0+255),f,b
  2562  001496                     
  2563                           ; BSR set to: 1
  2564                           ;fs_menu_controller.c: 269:                  eepromWrite(0x00,(uint8_t)menu_value.driver
      +                          _time);
  2565  001496  C18F  F001         	movff	_menu_value,eepromWrite@data
  2566  00149A  0E00               	movlw	0
  2567  00149C  EC98  F02D         	call	_eepromWrite
  2568  0014A0                     
  2569                           ;fs_menu_controller.c: 270:                  timer_value.minute =0 ;
  2570  0014A0  0E00               	movlw	0
  2571  0014A2  0100               	movlb	0	; () banked
  2572  0014A4  6FF6               	movwf	(_timer_value+3)& (0+255),b
  2573  0014A6  0E00               	movlw	0
  2574  0014A8  6FF5               	movwf	(_timer_value+2)& (0+255),b
  2575  0014AA                     
  2576                           ; BSR set to: 0
  2577                           ;fs_menu_controller.c: 271:                  timer_value.second = 0;
  2578  0014AA  0E00               	movlw	0
  2579  0014AC  6FF4               	movwf	(_timer_value+1)& (0+255),b
  2580  0014AE  0E00               	movlw	0
  2581  0014B0  6FF3               	movwf	_timer_value& (0+255),b
  2582  0014B2                     
  2583                           ; BSR set to: 0
  2584                           ;fs_menu_controller.c: 272:                  timer_value.remainingSecond = 0;
  2585  0014B2  0E00               	movlw	0
  2586  0014B4  6FF8               	movwf	(_timer_value+5)& (0+255),b
  2587  0014B6  0E00               	movlw	0
  2588  0014B8  6FF7               	movwf	(_timer_value+4)& (0+255),b
  2589  0014BA                     
  2590                           ; BSR set to: 0
  2591                           ;fs_menu_controller.c: 273:                  timer_value.remainingMinute = menu_value.dr
      +                          iver_time;
  2592  0014BA  C18F  F0F9         	movff	_menu_value,_timer_value+6
  2593  0014BE  6BFA               	clrf	(_timer_value+7)& (0+255),b
  2594  0014C0                     l5774:
  2595                           
  2596                           ;fs_menu_controller.c: 277:             Lcd_Set_Cursor(1,1);
  2597  0014C0  0E01               	movlw	1
  2598  0014C2  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2599  0014C4  0E01               	movlw	1
  2600  0014C6  ECDC  F02A         	call	_Lcd_Set_Cursor
  2601  0014CA                     
  2602                           ;fs_menu_controller.c: 278:             Lcd_Write_String("HAREKT ZAMANI dk");
  2603  0014CA  0E68               	movlw	low STR_3
  2604  0014CC  6E05               	movwf	Lcd_Write_String@a^0,c
  2605  0014CE  0E06               	movlw	high STR_3
  2606  0014D0  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2607  0014D2  EC84  F029         	call	_Lcd_Write_String	;wreg free
  2608  0014D6                     
  2609                           ;fs_menu_controller.c: 279:             Lcd_Set_Cursor(2,1);
  2610  0014D6  0E01               	movlw	1
  2611  0014D8  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2612  0014DA  0E02               	movlw	2
  2613  0014DC  ECDC  F02A         	call	_Lcd_Set_Cursor
  2614  0014E0                     
  2615                           ;fs_menu_controller.c: 280:             sprintf(textCursor2,"%d               ",menu_val
      +                          ue.driver_time);
  2616  0014E0  0EE3               	movlw	low stateMachine@textCursor2
  2617  0014E2  0100               	movlb	0	; () banked
  2618  0014E4  6FCF               	movwf	sprintf@s& (0+255),b
  2619  0014E6  0E00               	movlw	high stateMachine@textCursor2
  2620  0014E8  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2621  0014EA  0E01               	movlw	low STR_4
  2622  0014EC  6FD1               	movwf	sprintf@fmt& (0+255),b
  2623  0014EE  0E06               	movlw	high STR_4
  2624  0014F0  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2625  0014F2  C18F  F0D3         	movff	_menu_value,?_sprintf+4
  2626  0014F6  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  2627  0014F8  ECC4  F02B         	call	_sprintf	;wreg free
  2628  0014FC                     
  2629                           ;fs_menu_controller.c: 281:             Lcd_Write_String(textCursor2);
  2630  0014FC  0EE3               	movlw	low stateMachine@textCursor2
  2631  0014FE  6E05               	movwf	Lcd_Write_String@a^0,c
  2632  001500  0E00               	movlw	high stateMachine@textCursor2
  2633  001502  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2634  001504  EC84  F029         	call	_Lcd_Write_String	;wreg free
  2635  001508                     
  2636                           ;fs_menu_controller.c: 283:             if(timer_value.menu_login_delay == 100)
  2637  001508  0E64               	movlw	100
  2638  00150A  0100               	movlb	0	; () banked
  2639  00150C  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  2640  00150E  A4D8               	btfss	status,2,c
  2641  001510  EF8C  F00A         	goto	u7241
  2642  001514  EF8E  F00A         	goto	u7240
  2643  001518                     u7241:
  2644  001518  EF92  F00A         	goto	l5788
  2645  00151C                     u7240:
  2646  00151C                     l5786:
  2647                           
  2648                           ; BSR set to: 0
  2649                           ;fs_menu_controller.c: 284:             {;fs_menu_controller.c: 285:                 tim
      +                          er_value.menu_login_delay = 0;
  2650  00151C  0E00               	movlw	0
  2651  00151E  6FFB               	movwf	(_timer_value+8)& (0+255),b
  2652                           
  2653                           ;fs_menu_controller.c: 286:                 menu_selected = PAUSE_MENU;
  2654  001520  0E06               	movlw	6
  2655  001522  6FFE               	movwf	_menu_selected& (0+255),b
  2656  001524                     l5788:
  2657                           
  2658                           ;fs_menu_controller.c: 289:         stopMotor();
  2659  001524  ECBB  F02C         	call	_stopMotor	;wreg free
  2660                           
  2661                           ;fs_menu_controller.c: 291:         break;
  2662  001528  EF0B  F00E         	goto	l382
  2663  00152C                     l5790:
  2664                           
  2665                           ; BSR set to: 0
  2666                           ;fs_menu_controller.c: 295:             stopMotor();
  2667  00152C  ECBB  F02C         	call	_stopMotor	;wreg free
  2668  001530                     
  2669                           ;fs_menu_controller.c: 297:             if (menu_flags.menu_input_flag == 1)
  2670  001530  0100               	movlb	0	; () banked
  2671  001532  A1FD               	btfss	_menu_flags& (0+255),0,b
  2672  001534  EF9E  F00A         	goto	u7251
  2673  001538  EFA0  F00A         	goto	u7250
  2674  00153C                     u7251:
  2675  00153C  EFA3  F00A         	goto	l5798
  2676  001540                     u7250:
  2677  001540                     
  2678                           ; BSR set to: 0
  2679                           ;fs_menu_controller.c: 298:             {;fs_menu_controller.c: 299:                 men
      +                          u_flags.menu_input_flag = 0;
  2680  001540  91FD               	bcf	_menu_flags& (0+255),0,b
  2681  001542                     
  2682                           ; BSR set to: 0
  2683                           ;fs_menu_controller.c: 300:                 menu_selected = SPEED_LIMIT_SETTING;
  2684  001542  0E03               	movlw	3
  2685  001544  6FFE               	movwf	_menu_selected& (0+255),b
  2686  001546                     l5798:
  2687                           
  2688                           ; BSR set to: 0
  2689                           ;fs_menu_controller.c: 303:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_value.stop_time < 250))
  2690  001546  A9FD               	btfss	_menu_flags& (0+255),4,b
  2691  001548  EFA8  F00A         	goto	u7261
  2692  00154C  EFAA  F00A         	goto	u7260
  2693  001550                     u7261:
  2694  001550  EFBD  F00A         	goto	l5808
  2695  001554                     u7260:
  2696  001554                     
  2697                           ; BSR set to: 0
  2698  001554  0EFA               	movlw	250
  2699  001556  0101               	movlb	1	; () banked
  2700  001558  6190               	cpfslt	(_menu_value+1)& (0+255),b
  2701  00155A  EFB1  F00A         	goto	u7271
  2702  00155E  EFB3  F00A         	goto	u7270
  2703  001562                     u7271:
  2704  001562  EFBD  F00A         	goto	l5808
  2705  001566                     u7270:
  2706  001566                     
  2707                           ; BSR set to: 1
  2708                           ;fs_menu_controller.c: 304:             {;fs_menu_controller.c: 305:                 men
      +                          u_flags.menu_increase_flag = 0;
  2709  001566  0100               	movlb	0	; () banked
  2710  001568  99FD               	bcf	_menu_flags& (0+255),4,b
  2711  00156A                     
  2712                           ; BSR set to: 0
  2713                           ;fs_menu_controller.c: 306:                 menu_value.stop_time += 10;
  2714  00156A  0E0A               	movlw	10
  2715  00156C  0101               	movlb	1	; () banked
  2716  00156E  2790               	addwf	(_menu_value+1)& (0+255),f,b
  2717  001570                     
  2718                           ; BSR set to: 1
  2719                           ;fs_menu_controller.c: 307:                 eepromWrite(0x01,(uint8_t)menu_value.stop_ti
      +                          me);
  2720  001570  C190  F001         	movff	_menu_value+1,eepromWrite@data
  2721  001574  0E01               	movlw	1
  2722  001576  EC98  F02D         	call	_eepromWrite
  2723  00157A                     l5808:
  2724                           
  2725                           ;fs_menu_controller.c: 310:             if ((menu_flags.menu_decrease_flag == 1) && (men
      +                          u_value.stop_time > 10))
  2726  00157A  0100               	movlb	0	; () banked
  2727  00157C  ABFD               	btfss	_menu_flags& (0+255),5,b
  2728  00157E  EFC3  F00A         	goto	u7281
  2729  001582  EFC5  F00A         	goto	u7280
  2730  001586                     u7281:
  2731  001586  EFD8  F00A         	goto	l5818
  2732  00158A                     u7280:
  2733  00158A                     
  2734                           ; BSR set to: 0
  2735  00158A  0E0A               	movlw	10
  2736  00158C  0101               	movlb	1	; () banked
  2737  00158E  6590               	cpfsgt	(_menu_value+1)& (0+255),b
  2738  001590  EFCC  F00A         	goto	u7291
  2739  001594  EFCE  F00A         	goto	u7290
  2740  001598                     u7291:
  2741  001598  EFD8  F00A         	goto	l5818
  2742  00159C                     u7290:
  2743  00159C                     
  2744                           ; BSR set to: 1
  2745                           ;fs_menu_controller.c: 311:             {;fs_menu_controller.c: 312:                  me
      +                          nu_flags.menu_decrease_flag = 0;
  2746  00159C  0100               	movlb	0	; () banked
  2747  00159E  9BFD               	bcf	_menu_flags& (0+255),5,b
  2748  0015A0                     
  2749                           ; BSR set to: 0
  2750                           ;fs_menu_controller.c: 313:                  menu_value.stop_time -= 10;
  2751  0015A0  0E0A               	movlw	10
  2752  0015A2  0101               	movlb	1	; () banked
  2753  0015A4  5F90               	subwf	(_menu_value+1)& (0+255),f,b
  2754  0015A6                     
  2755                           ; BSR set to: 1
  2756                           ;fs_menu_controller.c: 314:                  eepromWrite(0x01,(uint8_t)menu_value.stop_t
      +                          ime);
  2757  0015A6  C190  F001         	movff	_menu_value+1,eepromWrite@data
  2758  0015AA  0E01               	movlw	1
  2759  0015AC  EC98  F02D         	call	_eepromWrite
  2760  0015B0                     l5818:
  2761                           
  2762                           ;fs_menu_controller.c: 316:             Lcd_Set_Cursor(1,1);
  2763  0015B0  0E01               	movlw	1
  2764  0015B2  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2765  0015B4  0E01               	movlw	1
  2766  0015B6  ECDC  F02A         	call	_Lcd_Set_Cursor
  2767  0015BA                     
  2768                           ;fs_menu_controller.c: 317:             Lcd_Write_String("DURMA ZAMANI  ms");
  2769  0015BA  0E79               	movlw	low STR_5
  2770  0015BC  6E05               	movwf	Lcd_Write_String@a^0,c
  2771  0015BE  0E06               	movlw	high STR_5
  2772  0015C0  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2773  0015C2  EC84  F029         	call	_Lcd_Write_String	;wreg free
  2774  0015C6                     
  2775                           ;fs_menu_controller.c: 318:             Lcd_Set_Cursor(2,1);
  2776  0015C6  0E01               	movlw	1
  2777  0015C8  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2778  0015CA  0E02               	movlw	2
  2779  0015CC  ECDC  F02A         	call	_Lcd_Set_Cursor
  2780  0015D0                     
  2781                           ;fs_menu_controller.c: 319:             sprintf(textCursor2,"%d               ",menu_val
      +                          ue.stop_time);
  2782  0015D0  0EE3               	movlw	low stateMachine@textCursor2
  2783  0015D2  0100               	movlb	0	; () banked
  2784  0015D4  6FCF               	movwf	sprintf@s& (0+255),b
  2785  0015D6  0E00               	movlw	high stateMachine@textCursor2
  2786  0015D8  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2787  0015DA  0E01               	movlw	low STR_4
  2788  0015DC  6FD1               	movwf	sprintf@fmt& (0+255),b
  2789  0015DE  0E06               	movlw	high STR_4
  2790  0015E0  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2791  0015E2  C190  F0D3         	movff	_menu_value+1,?_sprintf+4
  2792  0015E6  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  2793  0015E8  ECC4  F02B         	call	_sprintf	;wreg free
  2794  0015EC                     
  2795                           ;fs_menu_controller.c: 320:             Lcd_Write_String(textCursor2);
  2796  0015EC  0EE3               	movlw	low stateMachine@textCursor2
  2797  0015EE  6E05               	movwf	Lcd_Write_String@a^0,c
  2798  0015F0  0E00               	movlw	high stateMachine@textCursor2
  2799  0015F2  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2800  0015F4  EC84  F029         	call	_Lcd_Write_String	;wreg free
  2801  0015F8                     
  2802                           ;fs_menu_controller.c: 322:             if(timer_value.menu_login_delay == 100)
  2803  0015F8  0E64               	movlw	100
  2804  0015FA  0100               	movlb	0	; () banked
  2805  0015FC  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  2806  0015FE  A4D8               	btfss	status,2,c
  2807  001600  EF04  F00B         	goto	u7301
  2808  001604  EF06  F00B         	goto	u7300
  2809  001608                     u7301:
  2810  001608  EF0B  F00E         	goto	l382
  2811  00160C                     u7300:
  2812  00160C                     l5830:
  2813                           
  2814                           ; BSR set to: 0
  2815                           ;fs_menu_controller.c: 323:             {;fs_menu_controller.c: 324:                 tim
      +                          er_value.menu_login_delay = 0;
  2816  00160C  0E00               	movlw	0
  2817  00160E  6FFB               	movwf	(_timer_value+8)& (0+255),b
  2818                           
  2819                           ;fs_menu_controller.c: 325:                 menu_selected = PAUSE_MENU;
  2820  001610  0E06               	movlw	6
  2821  001612  6FFE               	movwf	_menu_selected& (0+255),b
  2822  001614  EF0B  F00E         	goto	l382
  2823  001618                     l357:
  2824                           
  2825                           ; BSR set to: 0
  2826                           ;fs_menu_controller.c: 331:             if (menu_flags.menu_input_flag == 1)
  2827  001618  A1FD               	btfss	_menu_flags& (0+255),0,b
  2828  00161A  EF11  F00B         	goto	u7311
  2829  00161E  EF13  F00B         	goto	u7310
  2830  001622                     u7311:
  2831  001622  EF16  F00B         	goto	l5836
  2832  001626                     u7310:
  2833  001626                     
  2834                           ; BSR set to: 0
  2835                           ;fs_menu_controller.c: 332:             {;fs_menu_controller.c: 333:                 men
      +                          u_flags.menu_input_flag = 0;
  2836  001626  91FD               	bcf	_menu_flags& (0+255),0,b
  2837  001628                     
  2838                           ; BSR set to: 0
  2839                           ;fs_menu_controller.c: 334:                 menu_selected = DRIVER_TIME_SETTING;
  2840  001628  0E01               	movlw	1
  2841  00162A  6FFE               	movwf	_menu_selected& (0+255),b
  2842  00162C                     l5836:
  2843                           
  2844                           ; BSR set to: 0
  2845                           ;fs_menu_controller.c: 337:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_value.speed_limit < 5))
  2846  00162C  A9FD               	btfss	_menu_flags& (0+255),4,b
  2847  00162E  EF1B  F00B         	goto	u7321
  2848  001632  EF1D  F00B         	goto	u7320
  2849  001636                     u7321:
  2850  001636  EF2F  F00B         	goto	l5846
  2851  00163A                     u7320:
  2852  00163A                     
  2853                           ; BSR set to: 0
  2854  00163A  0E05               	movlw	5
  2855  00163C  0101               	movlb	1	; () banked
  2856  00163E  6191               	cpfslt	(_menu_value+2)& (0+255),b
  2857  001640  EF24  F00B         	goto	u7331
  2858  001644  EF26  F00B         	goto	u7330
  2859  001648                     u7331:
  2860  001648  EF2F  F00B         	goto	l5846
  2861  00164C                     u7330:
  2862  00164C                     
  2863                           ; BSR set to: 1
  2864                           ;fs_menu_controller.c: 338:             {;fs_menu_controller.c: 339:                 men
      +                          u_flags.menu_increase_flag = 0;
  2865  00164C  0100               	movlb	0	; () banked
  2866  00164E  99FD               	bcf	_menu_flags& (0+255),4,b
  2867  001650                     
  2868                           ; BSR set to: 0
  2869                           ;fs_menu_controller.c: 340:                 menu_value.speed_limit += 1;
  2870  001650  0101               	movlb	1	; () banked
  2871  001652  2B91               	incf	(_menu_value+2)& (0+255),f,b
  2872  001654                     
  2873                           ; BSR set to: 1
  2874                           ;fs_menu_controller.c: 341:                 eepromWrite(0x02,menu_value.speed_limit);
  2875  001654  C191  F001         	movff	_menu_value+2,eepromWrite@data
  2876  001658  0E02               	movlw	2
  2877  00165A  EC98  F02D         	call	_eepromWrite
  2878  00165E                     l5846:
  2879                           
  2880                           ;fs_menu_controller.c: 344:             if ((menu_flags.menu_decrease_flag == 1) && (men
      +                          u_value.speed_limit > 1))
  2881  00165E  0100               	movlb	0	; () banked
  2882  001660  ABFD               	btfss	_menu_flags& (0+255),5,b
  2883  001662  EF35  F00B         	goto	u7341
  2884  001666  EF37  F00B         	goto	u7340
  2885  00166A                     u7341:
  2886  00166A  EF49  F00B         	goto	l5856
  2887  00166E                     u7340:
  2888  00166E                     
  2889                           ; BSR set to: 0
  2890  00166E  0E01               	movlw	1
  2891  001670  0101               	movlb	1	; () banked
  2892  001672  6591               	cpfsgt	(_menu_value+2)& (0+255),b
  2893  001674  EF3E  F00B         	goto	u7351
  2894  001678  EF40  F00B         	goto	u7350
  2895  00167C                     u7351:
  2896  00167C  EF49  F00B         	goto	l5856
  2897  001680                     u7350:
  2898  001680                     
  2899                           ; BSR set to: 1
  2900                           ;fs_menu_controller.c: 345:             {;fs_menu_controller.c: 346:                  me
      +                          nu_flags.menu_decrease_flag = 0;
  2901  001680  0100               	movlb	0	; () banked
  2902  001682  9BFD               	bcf	_menu_flags& (0+255),5,b
  2903  001684                     
  2904                           ; BSR set to: 0
  2905                           ;fs_menu_controller.c: 347:                  menu_value.speed_limit -= 1;
  2906  001684  0101               	movlb	1	; () banked
  2907  001686  0791               	decf	(_menu_value+2)& (0+255),f,b
  2908  001688                     
  2909                           ; BSR set to: 1
  2910                           ;fs_menu_controller.c: 348:                  eepromWrite(0x02,menu_value.speed_limit);
  2911  001688  C191  F001         	movff	_menu_value+2,eepromWrite@data
  2912  00168C  0E02               	movlw	2
  2913  00168E  EC98  F02D         	call	_eepromWrite
  2914  001692                     l5856:
  2915                           
  2916                           ;fs_menu_controller.c: 350:             Lcd_Set_Cursor(1,1);
  2917  001692  0E01               	movlw	1
  2918  001694  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2919  001696  0E01               	movlw	1
  2920  001698  ECDC  F02A         	call	_Lcd_Set_Cursor
  2921  00169C                     
  2922                           ;fs_menu_controller.c: 351:             Lcd_Write_String("HIZ LiMiTi      ");
  2923  00169C  0E24               	movlw	low STR_7
  2924  00169E  6E05               	movwf	Lcd_Write_String@a^0,c
  2925  0016A0  0E06               	movlw	high STR_7
  2926  0016A2  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2927  0016A4  EC84  F029         	call	_Lcd_Write_String	;wreg free
  2928  0016A8                     
  2929                           ;fs_menu_controller.c: 352:             Lcd_Set_Cursor(2,1);
  2930  0016A8  0E01               	movlw	1
  2931  0016AA  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2932  0016AC  0E02               	movlw	2
  2933  0016AE  ECDC  F02A         	call	_Lcd_Set_Cursor
  2934  0016B2                     
  2935                           ;fs_menu_controller.c: 353:             sprintf(textCursor2,"%d               ",menu_val
      +                          ue.speed_limit);
  2936  0016B2  0EE3               	movlw	low stateMachine@textCursor2
  2937  0016B4  0100               	movlb	0	; () banked
  2938  0016B6  6FCF               	movwf	sprintf@s& (0+255),b
  2939  0016B8  0E00               	movlw	high stateMachine@textCursor2
  2940  0016BA  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2941  0016BC  0E01               	movlw	low STR_4
  2942  0016BE  6FD1               	movwf	sprintf@fmt& (0+255),b
  2943  0016C0  0E06               	movlw	high STR_4
  2944  0016C2  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2945  0016C4  C191  F0D3         	movff	_menu_value+2,?_sprintf+4
  2946  0016C8  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  2947  0016CA  ECC4  F02B         	call	_sprintf	;wreg free
  2948  0016CE                     
  2949                           ;fs_menu_controller.c: 354:             Lcd_Write_String(textCursor2);
  2950  0016CE  0EE3               	movlw	low stateMachine@textCursor2
  2951  0016D0  6E05               	movwf	Lcd_Write_String@a^0,c
  2952  0016D2  0E00               	movlw	high stateMachine@textCursor2
  2953  0016D4  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2954  0016D6  EC84  F029         	call	_Lcd_Write_String	;wreg free
  2955  0016DA                     
  2956                           ;fs_menu_controller.c: 356:             if(timer_value.menu_login_delay == 100)
  2957  0016DA  0E64               	movlw	100
  2958  0016DC  0100               	movlb	0	; () banked
  2959  0016DE  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  2960  0016E0  A4D8               	btfss	status,2,c
  2961  0016E2  EF75  F00B         	goto	u7361
  2962  0016E6  EF77  F00B         	goto	u7360
  2963  0016EA                     u7361:
  2964  0016EA  EF92  F00A         	goto	l5788
  2965  0016EE                     u7360:
  2966  0016EE  EF8E  F00A         	goto	l5786
  2967  0016F2                     l5872:
  2968                           
  2969                           ; BSR set to: 0
  2970                           ;fs_menu_controller.c: 367:             startIsClick = 0;
  2971  0016F2  0E00               	movlw	0
  2972  0016F4  0101               	movlb	1	; () banked
  2973  0016F6  6F9C               	movwf	_startIsClick& (0+255),b
  2974                           
  2975                           ;fs_menu_controller.c: 368:             pauseIsClick = 0;
  2976  0016F8  0E00               	movlw	0
  2977  0016FA  6F9D               	movwf	_pauseIsClick& (0+255),b
  2978                           
  2979                           ;fs_menu_controller.c: 369:             stopIsClick = 1;
  2980  0016FC  0E01               	movlw	1
  2981  0016FE  6F9B               	movwf	_stopIsClick& (0+255),b
  2982  001700                     
  2983                           ; BSR set to: 1
  2984                           ;fs_menu_controller.c: 371:             Lcd_Set_Cursor(1,1);
  2985  001700  0E01               	movlw	1
  2986  001702  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2987  001704  0E01               	movlw	1
  2988  001706  ECDC  F02A         	call	_Lcd_Set_Cursor
  2989  00170A                     
  2990                           ;fs_menu_controller.c: 372:             Lcd_Write_String("ZAMAN DOLDU     ");
  2991  00170A  0E46               	movlw	low STR_9
  2992  00170C  6E05               	movwf	Lcd_Write_String@a^0,c
  2993  00170E  0E06               	movlw	high STR_9
  2994  001710  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2995  001712  EC84  F029         	call	_Lcd_Write_String	;wreg free
  2996  001716                     
  2997                           ;fs_menu_controller.c: 374:             timer_value.remainingSecond = 0;
  2998  001716  0E00               	movlw	0
  2999  001718  0100               	movlb	0	; () banked
  3000  00171A  6FF8               	movwf	(_timer_value+5)& (0+255),b
  3001  00171C  0E00               	movlw	0
  3002  00171E  6FF7               	movwf	(_timer_value+4)& (0+255),b
  3003  001720                     
  3004                           ; BSR set to: 0
  3005                           ;fs_menu_controller.c: 375:             timer_value.remainingMinute = 0;
  3006  001720  0E00               	movlw	0
  3007  001722  6FFA               	movwf	(_timer_value+7)& (0+255),b
  3008  001724  0E00               	movlw	0
  3009  001726  6FF9               	movwf	(_timer_value+6)& (0+255),b
  3010  001728                     
  3011                           ; BSR set to: 0
  3012                           ;fs_menu_controller.c: 376:              Lcd_Set_Cursor(2,1);
  3013  001728  0E01               	movlw	1
  3014  00172A  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3015  00172C  0E02               	movlw	2
  3016  00172E  ECDC  F02A         	call	_Lcd_Set_Cursor
  3017  001732                     
  3018                           ;fs_menu_controller.c: 377:             sprintf(textCursor2,"      %d:%d    ",timer_valu
      +                          e.remainingMinute,timer_value.remainingSecond);
  3019  001732  0EE3               	movlw	low stateMachine@textCursor2
  3020  001734  0100               	movlb	0	; () banked
  3021  001736  6FCF               	movwf	sprintf@s& (0+255),b
  3022  001738  0E00               	movlw	high stateMachine@textCursor2
  3023  00173A  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3024  00173C  0E8A               	movlw	low STR_10
  3025  00173E  6FD1               	movwf	sprintf@fmt& (0+255),b
  3026  001740  0E06               	movlw	high STR_10
  3027  001742  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3028  001744  C0F9  F0D3         	movff	_timer_value+6,?_sprintf+4
  3029  001748  C0FA  F0D4         	movff	_timer_value+7,?_sprintf+5
  3030  00174C  C0F7  F0D5         	movff	_timer_value+4,?_sprintf+6
  3031  001750  C0F8  F0D6         	movff	_timer_value+5,?_sprintf+7
  3032  001754  ECC4  F02B         	call	_sprintf	;wreg free
  3033  001758                     
  3034                           ;fs_menu_controller.c: 378:             Lcd_Write_String(textCursor2);
  3035  001758  0EE3               	movlw	low stateMachine@textCursor2
  3036  00175A  6E05               	movwf	Lcd_Write_String@a^0,c
  3037  00175C  0E00               	movlw	high stateMachine@textCursor2
  3038  00175E  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3039  001760  EC84  F029         	call	_Lcd_Write_String	;wreg free
  3040  001764                     
  3041                           ;fs_menu_controller.c: 380:         if (menu_flags.menu_start_flag == 1)
  3042  001764  0100               	movlb	0	; () banked
  3043  001766  A3FD               	btfss	_menu_flags& (0+255),1,b
  3044  001768  EFB8  F00B         	goto	u7371
  3045  00176C  EFBA  F00B         	goto	u7370
  3046  001770                     u7371:
  3047  001770  EFCD  F00B         	goto	l5894
  3048  001774                     u7370:
  3049  001774                     
  3050                           ; BSR set to: 0
  3051                           ;fs_menu_controller.c: 381:         {;fs_menu_controller.c: 382:             menu_flags.
      +                          menu_start_flag = 0;
  3052  001774  93FD               	bcf	_menu_flags& (0+255),1,b
  3053  001776                     
  3054                           ; BSR set to: 0
  3055                           ;fs_menu_controller.c: 383:             menu_selected = START_MENU;
  3056  001776  0E05               	movlw	5
  3057  001778  6FFE               	movwf	_menu_selected& (0+255),b
  3058                           
  3059                           ;fs_menu_controller.c: 385:             startIsClick = 1;
  3060  00177A  0E01               	movlw	1
  3061  00177C  0101               	movlb	1	; () banked
  3062  00177E  6F9C               	movwf	_startIsClick& (0+255),b
  3063                           
  3064                           ;fs_menu_controller.c: 386:             pauseIsClick = 0;
  3065  001780  0E00               	movlw	0
  3066  001782  6F9D               	movwf	_pauseIsClick& (0+255),b
  3067                           
  3068                           ;fs_menu_controller.c: 387:             stopIsClick = 0;
  3069  001784  0E00               	movlw	0
  3070  001786  6F9B               	movwf	_stopIsClick& (0+255),b
  3071                           
  3072                           ;fs_menu_controller.c: 388:             timer_value.second = 0;
  3073  001788  0E00               	movlw	0
  3074  00178A  0100               	movlb	0	; () banked
  3075  00178C  6FF4               	movwf	(_timer_value+1)& (0+255),b
  3076  00178E  0E00               	movlw	0
  3077  001790  6FF3               	movwf	_timer_value& (0+255),b
  3078                           
  3079                           ;fs_menu_controller.c: 389:             timer_value.minute = 0;
  3080  001792  0E00               	movlw	0
  3081  001794  6FF6               	movwf	(_timer_value+3)& (0+255),b
  3082  001796  0E00               	movlw	0
  3083  001798  6FF5               	movwf	(_timer_value+2)& (0+255),b
  3084  00179A                     l5894:
  3085                           
  3086                           ; BSR set to: 0
  3087                           ;fs_menu_controller.c: 392:         if ( timer_value.menu_login_delay == 100)
  3088  00179A  0E64               	movlw	100
  3089  00179C  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  3090  00179E  A4D8               	btfss	status,2,c
  3091  0017A0  EFD4  F00B         	goto	u7381
  3092  0017A4  EFD6  F00B         	goto	u7380
  3093  0017A8                     u7381:
  3094  0017A8  EF92  F00A         	goto	l5788
  3095  0017AC                     u7380:
  3096  0017AC                     
  3097                           ; BSR set to: 0
  3098                           ;fs_menu_controller.c: 393:         {;fs_menu_controller.c: 394:             timer_value
      +                          .menu_login_delay = 0;
  3099  0017AC  0E00               	movlw	0
  3100  0017AE  6FFB               	movwf	(_timer_value+8)& (0+255),b
  3101                           
  3102                           ;fs_menu_controller.c: 395:             menu_selected = DRIVER_TIME_SETTING;
  3103  0017B0  0E01               	movlw	1
  3104  0017B2  6FFE               	movwf	_menu_selected& (0+255),b
  3105  0017B4  EF92  F00A         	goto	l5788
  3106  0017B8                     l365:
  3107                           
  3108                           ; BSR set to: 0
  3109                           ;fs_menu_controller.c: 403:             timer_value.remainingMinute = menu_value.driver_
      +                          time;
  3110  0017B8  C18F  F0F9         	movff	_menu_value,_timer_value+6
  3111  0017BC  6BFA               	clrf	(_timer_value+7)& (0+255),b
  3112  0017BE                     
  3113                           ; BSR set to: 0
  3114                           ;fs_menu_controller.c: 404:             timer_value.remainingSecond = 0;
  3115  0017BE  0E00               	movlw	0
  3116  0017C0  6FF8               	movwf	(_timer_value+5)& (0+255),b
  3117  0017C2  0E00               	movlw	0
  3118  0017C4  6FF7               	movwf	(_timer_value+4)& (0+255),b
  3119                           
  3120                           ;fs_menu_controller.c: 405:             startIsClick = 1;
  3121  0017C6  0E01               	movlw	1
  3122  0017C8  0101               	movlb	1	; () banked
  3123  0017CA  6F9C               	movwf	_startIsClick& (0+255),b
  3124                           
  3125                           ;fs_menu_controller.c: 406:             stopIsClick = 0;
  3126  0017CC  0E00               	movlw	0
  3127  0017CE  6F9B               	movwf	_stopIsClick& (0+255),b
  3128                           
  3129                           ;fs_menu_controller.c: 407:             menu_selected = MAIN_MENU;
  3130  0017D0  0E00               	movlw	0
  3131  0017D2  0100               	movlb	0	; () banked
  3132  0017D4  6FFE               	movwf	_menu_selected& (0+255),b
  3133  0017D6                     
  3134                           ; BSR set to: 0
  3135                           ;fs_menu_controller.c: 408:             startMotor();
  3136  0017D6  EC2D  F02D         	call	_startMotor	;wreg free
  3137                           
  3138                           ;fs_menu_controller.c: 409:         break;
  3139  0017DA  EF0B  F00E         	goto	l382
  3140  0017DE                     l5904:
  3141                           
  3142                           ; BSR set to: 0
  3143                           ;fs_menu_controller.c: 416:             Lcd_Set_Cursor(1,1);
  3144  0017DE  0E01               	movlw	1
  3145  0017E0  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3146  0017E2  0E01               	movlw	1
  3147  0017E4  ECDC  F02A         	call	_Lcd_Set_Cursor
  3148  0017E8                     
  3149                           ;fs_menu_controller.c: 417:             Lcd_Write_String("HAREKET DURDU   ");
  3150  0017E8  0E57               	movlw	low STR_11
  3151  0017EA  6E05               	movwf	Lcd_Write_String@a^0,c
  3152  0017EC  0E06               	movlw	high STR_11
  3153  0017EE  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3154  0017F0  EC84  F029         	call	_Lcd_Write_String	;wreg free
  3155  0017F4                     
  3156                           ;fs_menu_controller.c: 418:             Lcd_Set_Cursor(2,1);
  3157  0017F4  0E01               	movlw	1
  3158  0017F6  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3159  0017F8  0E02               	movlw	2
  3160  0017FA  ECDC  F02A         	call	_Lcd_Set_Cursor
  3161  0017FE                     
  3162                           ;fs_menu_controller.c: 419:             sprintf(textCursor2,"      %d:%d    ",timer_valu
      +                          e.remainingMinute,timer_value.remainingSecond);
  3163  0017FE  0EE3               	movlw	low stateMachine@textCursor2
  3164  001800  0100               	movlb	0	; () banked
  3165  001802  6FCF               	movwf	sprintf@s& (0+255),b
  3166  001804  0E00               	movlw	high stateMachine@textCursor2
  3167  001806  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3168  001808  0E8A               	movlw	low STR_10
  3169  00180A  6FD1               	movwf	sprintf@fmt& (0+255),b
  3170  00180C  0E06               	movlw	high STR_10
  3171  00180E  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3172  001810  C0F9  F0D3         	movff	_timer_value+6,?_sprintf+4
  3173  001814  C0FA  F0D4         	movff	_timer_value+7,?_sprintf+5
  3174  001818  C0F7  F0D5         	movff	_timer_value+4,?_sprintf+6
  3175  00181C  C0F8  F0D6         	movff	_timer_value+5,?_sprintf+7
  3176  001820  ECC4  F02B         	call	_sprintf	;wreg free
  3177  001824                     
  3178                           ;fs_menu_controller.c: 420:             Lcd_Write_String(textCursor2);
  3179  001824  0EE3               	movlw	low stateMachine@textCursor2
  3180  001826  6E05               	movwf	Lcd_Write_String@a^0,c
  3181  001828  0E00               	movlw	high stateMachine@textCursor2
  3182  00182A  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3183  00182C  EC84  F029         	call	_Lcd_Write_String	;wreg free
  3184  001830                     
  3185                           ;fs_menu_controller.c: 422:             if (menu_flags.menu_start_flag == 1)
  3186  001830  0100               	movlb	0	; () banked
  3187  001832  A3FD               	btfss	_menu_flags& (0+255),1,b
  3188  001834  EF1E  F00C         	goto	u7391
  3189  001838  EF20  F00C         	goto	u7390
  3190  00183C                     u7391:
  3191  00183C  EF2A  F00C         	goto	l367
  3192  001840                     u7390:
  3193  001840                     
  3194                           ; BSR set to: 0
  3195                           ;fs_menu_controller.c: 423:             {;fs_menu_controller.c: 424:                 men
      +                          u_flags.menu_start_flag = 0;
  3196  001840  93FD               	bcf	_menu_flags& (0+255),1,b
  3197  001842                     
  3198                           ; BSR set to: 0
  3199                           ;fs_menu_controller.c: 425:                 menu_selected = MAIN_MENU;
  3200  001842  0E00               	movlw	0
  3201  001844  6FFE               	movwf	_menu_selected& (0+255),b
  3202                           
  3203                           ;fs_menu_controller.c: 427:                 startIsClick = 1;
  3204  001846  0E01               	movlw	1
  3205  001848  0101               	movlb	1	; () banked
  3206  00184A  6F9C               	movwf	_startIsClick& (0+255),b
  3207                           
  3208                           ;fs_menu_controller.c: 428:                 pauseIsClick = 0;
  3209  00184C  0E00               	movlw	0
  3210  00184E  6F9D               	movwf	_pauseIsClick& (0+255),b
  3211                           
  3212                           ;fs_menu_controller.c: 429:                 stopIsClick = 0;
  3213  001850  0E00               	movlw	0
  3214  001852  6F9B               	movwf	_stopIsClick& (0+255),b
  3215  001854                     l367:
  3216                           
  3217                           ;fs_menu_controller.c: 432:             if ( (startIsClick == 0) && (pauseIsClick == 0) 
      +                          && (stopIsClick == 1) && (menu_selected == PAUSE_MENU))
  3218  001854  0101               	movlb	1	; () banked
  3219  001856  519C               	movf	_startIsClick& (0+255),w,b
  3220  001858  A4D8               	btfss	status,2,c
  3221  00185A  EF31  F00C         	goto	u7401
  3222  00185E  EF33  F00C         	goto	u7400
  3223  001862                     u7401:
  3224  001862  EF5C  F00C         	goto	l5930
  3225  001866                     u7400:
  3226  001866                     
  3227                           ; BSR set to: 1
  3228  001866  519D               	movf	_pauseIsClick& (0+255),w,b
  3229  001868  A4D8               	btfss	status,2,c
  3230  00186A  EF39  F00C         	goto	u7411
  3231  00186E  EF3B  F00C         	goto	u7410
  3232  001872                     u7411:
  3233  001872  EF5C  F00C         	goto	l5930
  3234  001876                     u7410:
  3235  001876                     
  3236                           ; BSR set to: 1
  3237  001876  059B               	decf	_stopIsClick& (0+255),w,b
  3238  001878  A4D8               	btfss	status,2,c
  3239  00187A  EF41  F00C         	goto	u7421
  3240  00187E  EF43  F00C         	goto	u7420
  3241  001882                     u7421:
  3242  001882  EF5C  F00C         	goto	l5930
  3243  001886                     u7420:
  3244  001886                     
  3245                           ; BSR set to: 1
  3246  001886  0E06               	movlw	6
  3247  001888  0100               	movlb	0	; () banked
  3248  00188A  19FE               	xorwf	_menu_selected& (0+255),w,b
  3249  00188C  A4D8               	btfss	status,2,c
  3250  00188E  EF4B  F00C         	goto	u7431
  3251  001892  EF4D  F00C         	goto	u7430
  3252  001896                     u7431:
  3253  001896  EF5C  F00C         	goto	l5930
  3254  00189A                     u7430:
  3255  00189A                     
  3256                           ; BSR set to: 0
  3257                           ;fs_menu_controller.c: 433:             {;fs_menu_controller.c: 434:                  ti
      +                          mer_value.remainingMinute = menu_value.driver_time;
  3258  00189A  C18F  F0F9         	movff	_menu_value,_timer_value+6
  3259  00189E  6BFA               	clrf	(_timer_value+7)& (0+255),b
  3260  0018A0                     
  3261                           ; BSR set to: 0
  3262                           ;fs_menu_controller.c: 435:                  timer_value.remainingSecond = 0;
  3263  0018A0  0E00               	movlw	0
  3264  0018A2  6FF8               	movwf	(_timer_value+5)& (0+255),b
  3265  0018A4  0E00               	movlw	0
  3266  0018A6  6FF7               	movwf	(_timer_value+4)& (0+255),b
  3267                           
  3268                           ;fs_menu_controller.c: 436:                  timer_value.second = 0;
  3269  0018A8  0E00               	movlw	0
  3270  0018AA  6FF4               	movwf	(_timer_value+1)& (0+255),b
  3271  0018AC  0E00               	movlw	0
  3272  0018AE  6FF3               	movwf	_timer_value& (0+255),b
  3273                           
  3274                           ;fs_menu_controller.c: 437:                  timer_value.minute = 0;
  3275  0018B0  0E00               	movlw	0
  3276  0018B2  6FF6               	movwf	(_timer_value+3)& (0+255),b
  3277  0018B4  0E00               	movlw	0
  3278  0018B6  6FF5               	movwf	(_timer_value+2)& (0+255),b
  3279  0018B8                     l5930:
  3280                           
  3281                           ;fs_menu_controller.c: 441:             if ( timer_value.menu_login_delay == 100)
  3282  0018B8  0E64               	movlw	100
  3283  0018BA  0100               	movlb	0	; () banked
  3284  0018BC  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  3285  0018BE  A4D8               	btfss	status,2,c
  3286  0018C0  EF64  F00C         	goto	u7441
  3287  0018C4  EF66  F00C         	goto	u7440
  3288  0018C8                     u7441:
  3289  0018C8  EF6A  F00C         	goto	l5934
  3290  0018CC                     u7440:
  3291  0018CC                     
  3292                           ; BSR set to: 0
  3293                           ;fs_menu_controller.c: 442:             {;fs_menu_controller.c: 443:                 tim
      +                          er_value.menu_login_delay = 0;
  3294  0018CC  0E00               	movlw	0
  3295  0018CE  6FFB               	movwf	(_timer_value+8)& (0+255),b
  3296                           
  3297                           ;fs_menu_controller.c: 444:                 menu_selected = DRIVER_TIME_SETTING;
  3298  0018D0  0E01               	movlw	1
  3299  0018D2  6FFE               	movwf	_menu_selected& (0+255),b
  3300  0018D4                     l5934:
  3301                           
  3302                           ; BSR set to: 0
  3303                           ;fs_menu_controller.c: 447:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_flags.menu_decrease_flag == 1))
  3304  0018D4  A9FD               	btfss	_menu_flags& (0+255),4,b
  3305  0018D6  EF6F  F00C         	goto	u7451
  3306  0018DA  EF71  F00C         	goto	u7450
  3307  0018DE                     u7451:
  3308  0018DE  EF92  F00A         	goto	l5788
  3309  0018E2                     u7450:
  3310  0018E2                     
  3311                           ; BSR set to: 0
  3312  0018E2  ABFD               	btfss	_menu_flags& (0+255),5,b
  3313  0018E4  EF76  F00C         	goto	u7461
  3314  0018E8  EF78  F00C         	goto	u7460
  3315  0018EC                     u7461:
  3316  0018EC  EF92  F00A         	goto	l5788
  3317  0018F0                     u7460:
  3318  0018F0                     
  3319                           ; BSR set to: 0
  3320                           ;fs_menu_controller.c: 448:             {;fs_menu_controller.c: 449:                 men
      +                          u_selected = SECRET_MENU;
  3321  0018F0  0E08               	movlw	8
  3322  0018F2  6FFE               	movwf	_menu_selected& (0+255),b
  3323                           
  3324                           ;fs_menu_controller.c: 450:                 secretMenuCounter = 1;
  3325  0018F4  0E01               	movlw	1
  3326  0018F6  0101               	movlb	1	; () banked
  3327  0018F8  6F9A               	movwf	stateMachine@secretMenuCounter& (0+255),b
  3328  0018FA  EF92  F00A         	goto	l5788
  3329  0018FE                     l5942:
  3330                           
  3331                           ; BSR set to: 0
  3332                           ;fs_menu_controller.c: 463:             stopMotor();
  3333  0018FE  ECBB  F02C         	call	_stopMotor	;wreg free
  3334  001902                     
  3335                           ;fs_menu_controller.c: 465:             if (menu_flags.menu_input_flag == 1)
  3336  001902  0100               	movlb	0	; () banked
  3337  001904  A1FD               	btfss	_menu_flags& (0+255),0,b
  3338  001906  EF87  F00C         	goto	u7471
  3339  00190A  EF89  F00C         	goto	u7470
  3340  00190E                     u7471:
  3341  00190E  EF96  F00C         	goto	l5954
  3342  001912                     u7470:
  3343  001912                     
  3344                           ; BSR set to: 0
  3345                           ;fs_menu_controller.c: 466:             {;fs_menu_controller.c: 467:                 men
      +                          u_flags.menu_input_flag = 0;
  3346  001912  91FD               	bcf	_menu_flags& (0+255),0,b
  3347  001914                     
  3348                           ; BSR set to: 0
  3349                           ;fs_menu_controller.c: 468:                 secretMenuCounter++;
  3350  001914  0101               	movlb	1	; () banked
  3351  001916  2B9A               	incf	stateMachine@secretMenuCounter& (0+255),f,b
  3352  001918                     
  3353                           ; BSR set to: 1
  3354                           ;fs_menu_controller.c: 470:                 if (secretMenuCounter >2)
  3355  001918  0E02               	movlw	2
  3356  00191A  659A               	cpfsgt	stateMachine@secretMenuCounter& (0+255),b
  3357  00191C  EF92  F00C         	goto	u7481
  3358  001920  EF94  F00C         	goto	u7480
  3359  001924                     u7481:
  3360  001924  EF96  F00C         	goto	l5954
  3361  001928                     u7480:
  3362  001928                     
  3363                           ; BSR set to: 1
  3364                           ;fs_menu_controller.c: 471:                 {;fs_menu_controller.c: 472:                
      +                               secretMenuCounter = 1;
  3365  001928  0E01               	movlw	1
  3366  00192A  6F9A               	movwf	stateMachine@secretMenuCounter& (0+255),b
  3367  00192C                     l5954:
  3368                           
  3369                           ;fs_menu_controller.c: 476:             if (secretMenuCounter == 1)
  3370  00192C  0101               	movlb	1	; () banked
  3371  00192E  059A               	decf	stateMachine@secretMenuCounter& (0+255),w,b
  3372  001930  A4D8               	btfss	status,2,c
  3373  001932  EF9D  F00C         	goto	u7491
  3374  001936  EF9F  F00C         	goto	u7490
  3375  00193A                     u7491:
  3376  00193A  EF31  F00D         	goto	l5982
  3377  00193E                     u7490:
  3378  00193E                     
  3379                           ; BSR set to: 1
  3380                           ;fs_menu_controller.c: 477:             {;fs_menu_controller.c: 478:                 Lcd
      +                          _Set_Cursor(1,1);
  3381  00193E  0E01               	movlw	1
  3382  001940  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3383  001942  0E01               	movlw	1
  3384  001944  ECDC  F02A         	call	_Lcd_Set_Cursor
  3385  001948                     
  3386                           ;fs_menu_controller.c: 479:                 Lcd_Write_String("PID PARAM       ");
  3387  001948  0E13               	movlw	low STR_13
  3388  00194A  6E05               	movwf	Lcd_Write_String@a^0,c
  3389  00194C  0E06               	movlw	high STR_13
  3390  00194E  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3391  001950  EC84  F029         	call	_Lcd_Write_String	;wreg free
  3392  001954                     
  3393                           ;fs_menu_controller.c: 480:                 Lcd_Set_Cursor(2,1);
  3394  001954  0E01               	movlw	1
  3395  001956  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3396  001958  0E02               	movlw	2
  3397  00195A  ECDC  F02A         	call	_Lcd_Set_Cursor
  3398  00195E                     
  3399                           ;fs_menu_controller.c: 481:                 sprintf(textCursor2,"Kp:%5.1f     ",KP);
  3400  00195E  0EE3               	movlw	low stateMachine@textCursor2
  3401  001960  0100               	movlb	0	; () banked
  3402  001962  6FCF               	movwf	sprintf@s& (0+255),b
  3403  001964  0E00               	movlw	high stateMachine@textCursor2
  3404  001966  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3405  001968  0EA9               	movlw	low STR_14
  3406  00196A  6FD1               	movwf	sprintf@fmt& (0+255),b
  3407  00196C  0E06               	movlw	high STR_14
  3408  00196E  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3409  001970  C1F3  F0D3         	movff	_KP,?_sprintf+4
  3410  001974  C1F4  F0D4         	movff	_KP+1,?_sprintf+5
  3411  001978  C1F5  F0D5         	movff	_KP+2,?_sprintf+6
  3412  00197C  C1F6  F0D6         	movff	_KP+3,?_sprintf+7
  3413  001980  ECC4  F02B         	call	_sprintf	;wreg free
  3414  001984                     
  3415                           ;fs_menu_controller.c: 482:                 Lcd_Write_String(textCursor2);
  3416  001984  0EE3               	movlw	low stateMachine@textCursor2
  3417  001986  6E05               	movwf	Lcd_Write_String@a^0,c
  3418  001988  0E00               	movlw	high stateMachine@textCursor2
  3419  00198A  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3420  00198C  EC84  F029         	call	_Lcd_Write_String	;wreg free
  3421  001990                     
  3422                           ;fs_menu_controller.c: 484:                 if ((menu_flags.menu_increase_flag == 1) && 
      +                          (KP < 2.5))
  3423  001990  0100               	movlb	0	; () banked
  3424  001992  A9FD               	btfss	_menu_flags& (0+255),4,b
  3425  001994  EFCE  F00C         	goto	u7501
  3426  001998  EFD0  F00C         	goto	u7500
  3427  00199C                     u7501:
  3428  00199C  EF05  F00D         	goto	l5974
  3429  0019A0                     u7500:
  3430  0019A0                     
  3431                           ; BSR set to: 0
  3432  0019A0  C1F3  F035         	movff	_KP,___flge@ff1
  3433  0019A4  C1F4  F036         	movff	_KP+1,___flge@ff1+1
  3434  0019A8  C1F5  F037         	movff	_KP+2,___flge@ff1+2
  3435  0019AC  C1F6  F038         	movff	_KP+3,___flge@ff1+3
  3436  0019B0  0E00               	movlw	0
  3437  0019B2  6E39               	movwf	___flge@ff2^0,c
  3438  0019B4  0E00               	movlw	0
  3439  0019B6  6E3A               	movwf	(___flge@ff2+1)^0,c
  3440  0019B8  0E20               	movlw	32
  3441  0019BA  6E3B               	movwf	(___flge@ff2+2)^0,c
  3442  0019BC  0E40               	movlw	64
  3443  0019BE  6E3C               	movwf	(___flge@ff2+3)^0,c
  3444  0019C0  EC29  F025         	call	___flge	;wreg free
  3445  0019C4  B0D8               	btfsc	status,0,c
  3446  0019C6  EFE7  F00C         	goto	u7511
  3447  0019CA  EFE9  F00C         	goto	u7510
  3448  0019CE                     u7511:
  3449  0019CE  EF05  F00D         	goto	l5974
  3450  0019D2                     u7510:
  3451  0019D2                     
  3452                           ;fs_menu_controller.c: 485:                 {;fs_menu_controller.c: 486:                
      +                               menu_flags.menu_increase_flag = 0;
  3453  0019D2  0100               	movlb	0	; () banked
  3454  0019D4  99FD               	bcf	_menu_flags& (0+255),4,b
  3455  0019D6                     
  3456                           ; BSR set to: 0
  3457                           ;fs_menu_controller.c: 487:                     KP += 0.1;
  3458  0019D6  C1F3  F035         	movff	_KP,___fladd@b
  3459  0019DA  C1F4  F036         	movff	_KP+1,___fladd@b+1
  3460  0019DE  C1F5  F037         	movff	_KP+2,___fladd@b+2
  3461  0019E2  C1F6  F038         	movff	_KP+3,___fladd@b+3
  3462  0019E6  0ECD               	movlw	205
  3463  0019E8  6E39               	movwf	___fladd@a^0,c
  3464  0019EA  0ECC               	movlw	204
  3465  0019EC  6E3A               	movwf	(___fladd@a+1)^0,c
  3466  0019EE  0ECC               	movlw	204
  3467  0019F0  6E3B               	movwf	(___fladd@a+2)^0,c
  3468  0019F2  0E3D               	movlw	61
  3469  0019F4  6E3C               	movwf	(___fladd@a+3)^0,c
  3470  0019F6  EC2A  F015         	call	___fladd	;wreg free
  3471  0019FA  C035  F1F3         	movff	?___fladd,_KP
  3472  0019FE  C036  F1F4         	movff	?___fladd+1,_KP+1
  3473  001A02  C037  F1F5         	movff	?___fladd+2,_KP+2
  3474  001A06  C038  F1F6         	movff	?___fladd+3,_KP+3
  3475  001A0A                     l5974:
  3476                           
  3477                           ;fs_menu_controller.c: 490:                 if ((menu_flags.menu_decrease_flag == 1) && 
      +                          (KP >= 0))
  3478  001A0A  0100               	movlb	0	; () banked
  3479  001A0C  ABFD               	btfss	_menu_flags& (0+255),5,b
  3480  001A0E  EF0B  F00D         	goto	u7521
  3481  001A12  EF0D  F00D         	goto	u7520
  3482  001A16                     u7521:
  3483  001A16  EF31  F00D         	goto	l5982
  3484  001A1A                     u7520:
  3485  001A1A                     
  3486                           ; BSR set to: 0
  3487  001A1A  0101               	movlb	1	; () banked
  3488  001A1C  BFF6               	btfsc	(_KP+3)& (0+255),7,b
  3489  001A1E  EF13  F00D         	goto	u7531
  3490  001A22  EF15  F00D         	goto	u7530
  3491  001A26                     u7531:
  3492  001A26  EF31  F00D         	goto	l5982
  3493  001A2A                     u7530:
  3494  001A2A                     
  3495                           ; BSR set to: 1
  3496                           ;fs_menu_controller.c: 491:                 {;fs_menu_controller.c: 492:                
      +                               menu_flags.menu_decrease_flag = 0;
  3497  001A2A  0100               	movlb	0	; () banked
  3498  001A2C  9BFD               	bcf	_menu_flags& (0+255),5,b
  3499  001A2E                     
  3500                           ; BSR set to: 0
  3501                           ;fs_menu_controller.c: 493:                      KP -= 0.1;
  3502  001A2E  C1F3  F045         	movff	_KP,___flsub@b
  3503  001A32  C1F4  F046         	movff	_KP+1,___flsub@b+1
  3504  001A36  C1F5  F047         	movff	_KP+2,___flsub@b+2
  3505  001A3A  C1F6  F048         	movff	_KP+3,___flsub@b+3
  3506  001A3E  0ECD               	movlw	205
  3507  001A40  6E49               	movwf	___flsub@a^0,c
  3508  001A42  0ECC               	movlw	204
  3509  001A44  6E4A               	movwf	(___flsub@a+1)^0,c
  3510  001A46  0ECC               	movlw	204
  3511  001A48  6E4B               	movwf	(___flsub@a+2)^0,c
  3512  001A4A  0E3D               	movlw	61
  3513  001A4C  6E4C               	movwf	(___flsub@a+3)^0,c
  3514  001A4E  EC16  F02C         	call	___flsub	;wreg free
  3515  001A52  C045  F1F3         	movff	?___flsub,_KP
  3516  001A56  C046  F1F4         	movff	?___flsub+1,_KP+1
  3517  001A5A  C047  F1F5         	movff	?___flsub+2,_KP+2
  3518  001A5E  C048  F1F6         	movff	?___flsub+3,_KP+3
  3519  001A62                     l5982:
  3520                           
  3521                           ;fs_menu_controller.c: 497:             if (secretMenuCounter == 2)
  3522  001A62  0E02               	movlw	2
  3523  001A64  0101               	movlb	1	; () banked
  3524  001A66  199A               	xorwf	stateMachine@secretMenuCounter& (0+255),w,b
  3525  001A68  A4D8               	btfss	status,2,c
  3526  001A6A  EF39  F00D         	goto	u7541
  3527  001A6E  EF3B  F00D         	goto	u7540
  3528  001A72                     u7541:
  3529  001A72  EFCD  F00D         	goto	l6010
  3530  001A76                     u7540:
  3531  001A76                     
  3532                           ; BSR set to: 1
  3533                           ;fs_menu_controller.c: 498:             {;fs_menu_controller.c: 499:                 Lcd
      +                          _Set_Cursor(1,1);
  3534  001A76  0E01               	movlw	1
  3535  001A78  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3536  001A7A  0E01               	movlw	1
  3537  001A7C  ECDC  F02A         	call	_Lcd_Set_Cursor
  3538  001A80                     
  3539                           ;fs_menu_controller.c: 500:                 Lcd_Write_String("PID PARAM       ");
  3540  001A80  0E13               	movlw	low STR_13
  3541  001A82  6E05               	movwf	Lcd_Write_String@a^0,c
  3542  001A84  0E06               	movlw	high STR_13
  3543  001A86  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3544  001A88  EC84  F029         	call	_Lcd_Write_String	;wreg free
  3545  001A8C                     
  3546                           ;fs_menu_controller.c: 501:                 Lcd_Set_Cursor(2,1);
  3547  001A8C  0E01               	movlw	1
  3548  001A8E  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3549  001A90  0E02               	movlw	2
  3550  001A92  ECDC  F02A         	call	_Lcd_Set_Cursor
  3551  001A96                     
  3552                           ;fs_menu_controller.c: 502:                 sprintf(textCursor2,"Kd:%5.1f    ",KD);
  3553  001A96  0EE3               	movlw	low stateMachine@textCursor2
  3554  001A98  0100               	movlb	0	; () banked
  3555  001A9A  6FCF               	movwf	sprintf@s& (0+255),b
  3556  001A9C  0E00               	movlw	high stateMachine@textCursor2
  3557  001A9E  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3558  001AA0  0EB7               	movlw	low STR_16
  3559  001AA2  6FD1               	movwf	sprintf@fmt& (0+255),b
  3560  001AA4  0E06               	movlw	high STR_16
  3561  001AA6  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3562  001AA8  C1EF  F0D3         	movff	_KD,?_sprintf+4
  3563  001AAC  C1F0  F0D4         	movff	_KD+1,?_sprintf+5
  3564  001AB0  C1F1  F0D5         	movff	_KD+2,?_sprintf+6
  3565  001AB4  C1F2  F0D6         	movff	_KD+3,?_sprintf+7
  3566  001AB8  ECC4  F02B         	call	_sprintf	;wreg free
  3567  001ABC                     
  3568                           ;fs_menu_controller.c: 503:                 Lcd_Write_String(textCursor2);
  3569  001ABC  0EE3               	movlw	low stateMachine@textCursor2
  3570  001ABE  6E05               	movwf	Lcd_Write_String@a^0,c
  3571  001AC0  0E00               	movlw	high stateMachine@textCursor2
  3572  001AC2  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3573  001AC4  EC84  F029         	call	_Lcd_Write_String	;wreg free
  3574  001AC8                     
  3575                           ;fs_menu_controller.c: 505:                 if ((menu_flags.menu_increase_flag == 1) && 
      +                          (KD < 2.5))
  3576  001AC8  0100               	movlb	0	; () banked
  3577  001ACA  A9FD               	btfss	_menu_flags& (0+255),4,b
  3578  001ACC  EF6A  F00D         	goto	u7551
  3579  001AD0  EF6C  F00D         	goto	u7550
  3580  001AD4                     u7551:
  3581  001AD4  EFA1  F00D         	goto	l6002
  3582  001AD8                     u7550:
  3583  001AD8                     
  3584                           ; BSR set to: 0
  3585  001AD8  C1EF  F035         	movff	_KD,___flge@ff1
  3586  001ADC  C1F0  F036         	movff	_KD+1,___flge@ff1+1
  3587  001AE0  C1F1  F037         	movff	_KD+2,___flge@ff1+2
  3588  001AE4  C1F2  F038         	movff	_KD+3,___flge@ff1+3
  3589  001AE8  0E00               	movlw	0
  3590  001AEA  6E39               	movwf	___flge@ff2^0,c
  3591  001AEC  0E00               	movlw	0
  3592  001AEE  6E3A               	movwf	(___flge@ff2+1)^0,c
  3593  001AF0  0E20               	movlw	32
  3594  001AF2  6E3B               	movwf	(___flge@ff2+2)^0,c
  3595  001AF4  0E40               	movlw	64
  3596  001AF6  6E3C               	movwf	(___flge@ff2+3)^0,c
  3597  001AF8  EC29  F025         	call	___flge	;wreg free
  3598  001AFC  B0D8               	btfsc	status,0,c
  3599  001AFE  EF83  F00D         	goto	u7561
  3600  001B02  EF85  F00D         	goto	u7560
  3601  001B06                     u7561:
  3602  001B06  EFA1  F00D         	goto	l6002
  3603  001B0A                     u7560:
  3604  001B0A                     
  3605                           ;fs_menu_controller.c: 506:                 {;fs_menu_controller.c: 507:                
      +                               menu_flags.menu_increase_flag = 0;
  3606  001B0A  0100               	movlb	0	; () banked
  3607  001B0C  99FD               	bcf	_menu_flags& (0+255),4,b
  3608  001B0E                     
  3609                           ; BSR set to: 0
  3610                           ;fs_menu_controller.c: 508:                     KD += 0.1;
  3611  001B0E  C1EF  F035         	movff	_KD,___fladd@b
  3612  001B12  C1F0  F036         	movff	_KD+1,___fladd@b+1
  3613  001B16  C1F1  F037         	movff	_KD+2,___fladd@b+2
  3614  001B1A  C1F2  F038         	movff	_KD+3,___fladd@b+3
  3615  001B1E  0ECD               	movlw	205
  3616  001B20  6E39               	movwf	___fladd@a^0,c
  3617  001B22  0ECC               	movlw	204
  3618  001B24  6E3A               	movwf	(___fladd@a+1)^0,c
  3619  001B26  0ECC               	movlw	204
  3620  001B28  6E3B               	movwf	(___fladd@a+2)^0,c
  3621  001B2A  0E3D               	movlw	61
  3622  001B2C  6E3C               	movwf	(___fladd@a+3)^0,c
  3623  001B2E  EC2A  F015         	call	___fladd	;wreg free
  3624  001B32  C035  F1EF         	movff	?___fladd,_KD
  3625  001B36  C036  F1F0         	movff	?___fladd+1,_KD+1
  3626  001B3A  C037  F1F1         	movff	?___fladd+2,_KD+2
  3627  001B3E  C038  F1F2         	movff	?___fladd+3,_KD+3
  3628  001B42                     l6002:
  3629                           
  3630                           ;fs_menu_controller.c: 511:                 if ((menu_flags.menu_decrease_flag == 1) && 
      +                          (KD >= 0))
  3631  001B42  0100               	movlb	0	; () banked
  3632  001B44  ABFD               	btfss	_menu_flags& (0+255),5,b
  3633  001B46  EFA7  F00D         	goto	u7571
  3634  001B4A  EFA9  F00D         	goto	u7570
  3635  001B4E                     u7571:
  3636  001B4E  EFCD  F00D         	goto	l6010
  3637  001B52                     u7570:
  3638  001B52                     
  3639                           ; BSR set to: 0
  3640  001B52  0101               	movlb	1	; () banked
  3641  001B54  BFF2               	btfsc	(_KD+3)& (0+255),7,b
  3642  001B56  EFAF  F00D         	goto	u7581
  3643  001B5A  EFB1  F00D         	goto	u7580
  3644  001B5E                     u7581:
  3645  001B5E  EFCD  F00D         	goto	l6010
  3646  001B62                     u7580:
  3647  001B62                     
  3648                           ; BSR set to: 1
  3649                           ;fs_menu_controller.c: 512:                 {;fs_menu_controller.c: 513:                
      +                               menu_flags.menu_decrease_flag = 0;
  3650  001B62  0100               	movlb	0	; () banked
  3651  001B64  9BFD               	bcf	_menu_flags& (0+255),5,b
  3652  001B66                     
  3653                           ; BSR set to: 0
  3654                           ;fs_menu_controller.c: 514:                      KD -= 0.1;
  3655  001B66  C1EF  F045         	movff	_KD,___flsub@b
  3656  001B6A  C1F0  F046         	movff	_KD+1,___flsub@b+1
  3657  001B6E  C1F1  F047         	movff	_KD+2,___flsub@b+2
  3658  001B72  C1F2  F048         	movff	_KD+3,___flsub@b+3
  3659  001B76  0ECD               	movlw	205
  3660  001B78  6E49               	movwf	___flsub@a^0,c
  3661  001B7A  0ECC               	movlw	204
  3662  001B7C  6E4A               	movwf	(___flsub@a+1)^0,c
  3663  001B7E  0ECC               	movlw	204
  3664  001B80  6E4B               	movwf	(___flsub@a+2)^0,c
  3665  001B82  0E3D               	movlw	61
  3666  001B84  6E4C               	movwf	(___flsub@a+3)^0,c
  3667  001B86  EC16  F02C         	call	___flsub	;wreg free
  3668  001B8A  C045  F1EF         	movff	?___flsub,_KD
  3669  001B8E  C046  F1F0         	movff	?___flsub+1,_KD+1
  3670  001B92  C047  F1F1         	movff	?___flsub+2,_KD+2
  3671  001B96  C048  F1F2         	movff	?___flsub+3,_KD+3
  3672  001B9A                     l6010:
  3673                           
  3674                           ;fs_menu_controller.c: 518:             if ( timer_value.menu_login_delay == 100)
  3675  001B9A  0E64               	movlw	100
  3676  001B9C  0100               	movlb	0	; () banked
  3677  001B9E  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  3678  001BA0  A4D8               	btfss	status,2,c
  3679  001BA2  EFD5  F00D         	goto	u7591
  3680  001BA6  EFD7  F00D         	goto	u7590
  3681  001BAA                     u7591:
  3682  001BAA  EF0B  F00E         	goto	l382
  3683  001BAE                     u7590:
  3684  001BAE  EF06  F00B         	goto	l5830
  3685  001BB2                     l6016:
  3686  001BB2  0100               	movlb	0	; () banked
  3687  001BB4  51FE               	movf	_menu_selected& (0+255),w,b
  3688  001BB6  6FE1               	movwf	??_stateMachine& (0+255),b
  3689  001BB8  6BE2               	clrf	(??_stateMachine+1)& (0+255),b
  3690                           
  3691                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3692                           ; Switch size 1, requested type "simple"
  3693                           ; Number of cases is 1, Range of values is 0 to 0
  3694                           ; switch strategies available:
  3695                           ; Name         Instructions Cycles
  3696                           ; simple_byte            4     3 (average)
  3697                           ;	Chosen strategy is simple_byte
  3698  001BBA  51E2               	movf	(??_stateMachine+1)& (0+255),w,b
  3699  001BBC  0A00               	xorlw	0	; case 0
  3700  001BBE  B4D8               	btfsc	status,2,c
  3701  001BC0  EFE4  F00D         	goto	l6268
  3702  001BC4  EF0B  F00E         	goto	l382
  3703  001BC8                     l6268:
  3704                           
  3705                           ; BSR set to: 0
  3706                           ; Switch size 1, requested type "simple"
  3707                           ; Number of cases is 9, Range of values is 0 to 8
  3708                           ; switch strategies available:
  3709                           ; Name         Instructions Cycles
  3710                           ; simple_byte           28    15 (average)
  3711                           ;	Chosen strategy is simple_byte
  3712  001BC8  51E1               	movf	??_stateMachine& (0+255),w,b
  3713  001BCA  0A00               	xorlw	0	; case 0
  3714  001BCC  B4D8               	btfsc	status,2,c
  3715  001BCE  EF57  F009         	goto	l341
  3716  001BD2  0A01               	xorlw	1	; case 1
  3717  001BD4  B4D8               	btfsc	status,2,c
  3718  001BD6  EF03  F00A         	goto	l347
  3719  001BDA  0A03               	xorlw	3	; case 2
  3720  001BDC  B4D8               	btfsc	status,2,c
  3721  001BDE  EF96  F00A         	goto	l5790
  3722  001BE2  0A01               	xorlw	1	; case 3
  3723  001BE4  B4D8               	btfsc	status,2,c
  3724  001BE6  EF0C  F00B         	goto	l357
  3725  001BEA  0A07               	xorlw	7	; case 4
  3726  001BEC  B4D8               	btfsc	status,2,c
  3727  001BEE  EF79  F00B         	goto	l5872
  3728  001BF2  0A01               	xorlw	1	; case 5
  3729  001BF4  B4D8               	btfsc	status,2,c
  3730  001BF6  EFDC  F00B         	goto	l365
  3731  001BFA  0A03               	xorlw	3	; case 6
  3732  001BFC  B4D8               	btfsc	status,2,c
  3733  001BFE  EFEF  F00B         	goto	l5904
  3734  001C02  0A01               	xorlw	1	; case 7
  3735  001C04  B4D8               	btfsc	status,2,c
  3736  001C06  EF0B  F00E         	goto	l382
  3737  001C0A  0A0F               	xorlw	15	; case 8
  3738  001C0C  B4D8               	btfsc	status,2,c
  3739  001C0E  EF7F  F00C         	goto	l5942
  3740  001C12  EF0B  F00E         	goto	l382
  3741  001C16                     l382:
  3742  001C16  0012               	return		;funcret
  3743  001C18                     __end_of_stateMachine:
  3744                           	callstack 0
  3745                           
  3746 ;; *************** function _stopMotor *****************
  3747 ;; Defined at:
  3748 ;;		line 79 in file "fs_speed_controller.c"
  3749 ;; Parameters:    Size  Location     Type
  3750 ;;		None
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;		None
  3753 ;; Return value:  Size  Location     Type
  3754 ;;                  1    wreg      void 
  3755 ;; Registers used:
  3756 ;;		wreg, status,2, status,0, cstack
  3757 ;; Tracked objects:
  3758 ;;		On entry : 0/0
  3759 ;;		On exit  : 0/0
  3760 ;;		Unchanged: 0/0
  3761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3762 ;;      Params:         0       0       0       0       0       0       0
  3763 ;;      Locals:         0       0       0       0       0       0       0
  3764 ;;      Temps:          0       0       0       0       0       0       0
  3765 ;;      Totals:         0       0       0       0       0       0       0
  3766 ;;Total ram usage:        0 bytes
  3767 ;; Hardware stack levels used:    1
  3768 ;; Hardware stack levels required when called:    3
  3769 ;; This function calls:
  3770 ;;		_PWM1_setDC
  3771 ;;		_PWM2_setDC
  3772 ;; This function is called by:
  3773 ;;		_stateMachine
  3774 ;; This function uses a non-reentrant model
  3775 ;;
  3776                           
  3777                           	psect	text7
  3778  005976                     __ptext7:
  3779                           	callstack 0
  3780  005976                     _stopMotor:
  3781                           	callstack 25
  3782  005976                     
  3783                           ;fs_speed_controller.c: 81:     controller.rightMotorSpeed = 0;
  3784  005976  0E00               	movlw	0
  3785  005978  0101               	movlb	1	; () banked
  3786  00597A  6F59               	movwf	(_controller+9)& (0+255),b
  3787  00597C  0E00               	movlw	0
  3788  00597E  6F58               	movwf	(_controller+8)& (0+255),b
  3789                           
  3790                           ;fs_speed_controller.c: 82:     controller.leftMotorSpeed = 0;
  3791  005980  0E00               	movlw	0
  3792  005982  6F57               	movwf	(_controller+7)& (0+255),b
  3793  005984  0E00               	movlw	0
  3794  005986  6F56               	movwf	(_controller+6)& (0+255),b
  3795                           
  3796                           ;fs_speed_controller.c: 83:     driver_limit.ortalama = 0;
  3797  005988  0E00               	movlw	0
  3798  00598A  6F7B               	movwf	(_driver_limit+8)& (0+255),b
  3799  00598C  0E00               	movlw	0
  3800  00598E  6F7C               	movwf	(_driver_limit+9)& (0+255),b
  3801  005990  0E00               	movlw	0
  3802  005992  6F7D               	movwf	(_driver_limit+10)& (0+255),b
  3803  005994  0E00               	movlw	0
  3804  005996  6F7E               	movwf	(_driver_limit+11)& (0+255),b
  3805  005998                     
  3806                           ; BSR set to: 1
  3807                           ;fs_speed_controller.c: 84:     PWM1_setDC(controller.leftMotorSpeed);
  3808  005998  C156  F058         	movff	_controller+6,PWM1_setDC@dutycycle
  3809  00599C  C157  F059         	movff	_controller+7,PWM1_setDC@dutycycle+1
  3810  0059A0  EC00  F02A         	call	_PWM1_setDC	;wreg free
  3811  0059A4                     
  3812                           ;fs_speed_controller.c: 85:     PWM2_setDC(controller.rightMotorSpeed);
  3813  0059A4  C158  F058         	movff	_controller+8,PWM2_setDC@dutycycle
  3814  0059A8  C159  F059         	movff	_controller+9,PWM2_setDC@dutycycle+1
  3815  0059AC  ECC3  F029         	call	_PWM2_setDC	;wreg free
  3816  0059B0  0012               	return		;funcret
  3817  0059B2                     __end_of_stopMotor:
  3818                           	callstack 0
  3819                           
  3820 ;; *************** function _startMotor *****************
  3821 ;; Defined at:
  3822 ;;		line 95 in file "fs_speed_controller.c"
  3823 ;; Parameters:    Size  Location     Type
  3824 ;;		None
  3825 ;; Auto vars:     Size  Location     Type
  3826 ;;		None
  3827 ;; Return value:  Size  Location     Type
  3828 ;;                  1    wreg      void 
  3829 ;; Registers used:
  3830 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3831 ;; Tracked objects:
  3832 ;;		On entry : 0/0
  3833 ;;		On exit  : 0/0
  3834 ;;		Unchanged: 0/0
  3835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3836 ;;      Params:         0       0       0       0       0       0       0
  3837 ;;      Locals:         0       0       0       0       0       0       0
  3838 ;;      Temps:          0       0       0       0       0       0       0
  3839 ;;      Totals:         0       0       0       0       0       0       0
  3840 ;;Total ram usage:        0 bytes
  3841 ;; Hardware stack levels used:    1
  3842 ;; Hardware stack levels required when called:    3
  3843 ;; This function calls:
  3844 ;;		_PWM1_setDC
  3845 ;;		_PWM2_setDC
  3846 ;;		_calculatedAverageValue
  3847 ;;		_scanAdcConversion
  3848 ;;		_speedControl
  3849 ;; This function is called by:
  3850 ;;		_stateMachine
  3851 ;; This function uses a non-reentrant model
  3852 ;;
  3853                           
  3854                           	psect	text8
  3855  005A5A                     __ptext8:
  3856                           	callstack 0
  3857  005A5A                     _startMotor:
  3858                           	callstack 25
  3859  005A5A                     
  3860                           ;fs_speed_controller.c: 97:         scanAdcConversion();
  3861  005A5A  EC0C  F00E         	call	_scanAdcConversion	;wreg free
  3862  005A5E                     
  3863                           ;fs_speed_controller.c: 98:         calculatedAverageValue();
  3864  005A5E  EC6C  F01B         	call	_calculatedAverageValue	;wreg free
  3865  005A62                     
  3866                           ;fs_speed_controller.c: 99:         speedControl(driver_limit.ortalama);
  3867  005A62  C17B  F058         	movff	_driver_limit+8,speedControl@position
  3868  005A66  C17C  F059         	movff	_driver_limit+9,speedControl@position+1
  3869  005A6A  C17D  F05A         	movff	_driver_limit+10,speedControl@position+2
  3870  005A6E  C17E  F05B         	movff	_driver_limit+11,speedControl@position+3
  3871  005A72  EC5B  F01F         	call	_speedControl	;wreg free
  3872                           
  3873                           ;fs_speed_controller.c: 100:         PWM1_setDC(controller.leftMotorSpeed);
  3874  005A76  C156  F058         	movff	_controller+6,PWM1_setDC@dutycycle
  3875  005A7A  C157  F059         	movff	_controller+7,PWM1_setDC@dutycycle+1
  3876  005A7E  EC00  F02A         	call	_PWM1_setDC	;wreg free
  3877                           
  3878                           ;fs_speed_controller.c: 101:         PWM2_setDC(controller.rightMotorSpeed);
  3879  005A82  C158  F058         	movff	_controller+8,PWM2_setDC@dutycycle
  3880  005A86  C159  F059         	movff	_controller+9,PWM2_setDC@dutycycle+1
  3881  005A8A  ECC3  F029         	call	_PWM2_setDC	;wreg free
  3882  005A8E  0012               	return		;funcret
  3883  005A90                     __end_of_startMotor:
  3884                           	callstack 0
  3885                           
  3886 ;; *************** function _speedControl *****************
  3887 ;; Defined at:
  3888 ;;		line 38 in file "fs_speed_controller.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;  position        4   87[COMRAM] float 
  3891 ;; Auto vars:     Size  Location     Type
  3892 ;;  pos             4    0        float 
  3893 ;; Return value:  Size  Location     Type
  3894 ;;                  1    wreg      void 
  3895 ;; Registers used:
  3896 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3897 ;; Tracked objects:
  3898 ;;		On entry : 0/0
  3899 ;;		On exit  : 0/0
  3900 ;;		Unchanged: 0/0
  3901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3902 ;;      Params:         4       0       0       0       0       0       0
  3903 ;;      Locals:         0       4       0       0       0       0       0
  3904 ;;      Temps:          2       0       0       0       0       0       0
  3905 ;;      Totals:         6       4       0       0       0       0       0
  3906 ;;Total ram usage:       10 bytes
  3907 ;; Hardware stack levels used:    1
  3908 ;; Hardware stack levels required when called:    2
  3909 ;; This function calls:
  3910 ;;		___fladd
  3911 ;;		___flmul
  3912 ;;		___fltol
  3913 ;;		___xxtofl
  3914 ;; This function is called by:
  3915 ;;		_startMotor
  3916 ;; This function uses a non-reentrant model
  3917 ;;
  3918                           
  3919                           	psect	text9
  3920  003EB6                     __ptext9:
  3921                           	callstack 0
  3922  003EB6                     _speedControl:
  3923                           	callstack 25
  3924  003EB6                     
  3925                           ;fs_speed_controller.c: 44:     controller.error = (int16_t)(position - 3400.0);
  3926  003EB6  0E00               	movlw	0
  3927  003EB8  6E39               	movwf	___fladd@a^0,c
  3928  003EBA  0E80               	movlw	128
  3929  003EBC  6E3A               	movwf	(___fladd@a+1)^0,c
  3930  003EBE  0E54               	movlw	84
  3931  003EC0  6E3B               	movwf	(___fladd@a+2)^0,c
  3932  003EC2  0EC5               	movlw	197
  3933  003EC4  6E3C               	movwf	(___fladd@a+3)^0,c
  3934  003EC6  C058  F035         	movff	speedControl@position,___fladd@b
  3935  003ECA  C059  F036         	movff	speedControl@position+1,___fladd@b+1
  3936  003ECE  C05A  F037         	movff	speedControl@position+2,___fladd@b+2
  3937  003ED2  C05B  F038         	movff	speedControl@position+3,___fladd@b+3
  3938  003ED6  EC2A  F015         	call	___fladd	;wreg free
  3939  003EDA  C035  F04E         	movff	?___fladd,___fltol@f1
  3940  003EDE  C036  F04F         	movff	?___fladd+1,___fltol@f1+1
  3941  003EE2  C037  F050         	movff	?___fladd+2,___fltol@f1+2
  3942  003EE6  C038  F051         	movff	?___fladd+3,___fltol@f1+3
  3943  003EEA  ECA6  F024         	call	___fltol	;wreg free
  3944  003EEE  C04E  F150         	movff	?___fltol,_controller
  3945  003EF2  C04F  F151         	movff	?___fltol+1,_controller+1
  3946  003EF6                     
  3947                           ;fs_speed_controller.c: 45:     controller.motorSpeed = (int16_t) (KP * controller.error
      +                           + KD * (controller.error - controller.lastError));
  3948  003EF6  C1EF  F020         	movff	_KD,___flmul@a
  3949  003EFA  C1F0  F021         	movff	_KD+1,___flmul@a+1
  3950  003EFE  C1F1  F022         	movff	_KD+2,___flmul@a+2
  3951  003F02  C1F2  F023         	movff	_KD+3,___flmul@a+3
  3952  003F06  0101               	movlb	1	; () banked
  3953  003F08  5152               	movf	(_controller+2)& (0+255),w,b
  3954  003F0A  5D50               	subwf	_controller& (0+255),w,b
  3955  003F0C  6E5C               	movwf	??_speedControl^0,c
  3956  003F0E  5153               	movf	(_controller+3)& (0+255),w,b
  3957  003F10  5951               	subwfb	(_controller+1)& (0+255),w,b
  3958  003F12  6E5D               	movwf	(??_speedControl+1)^0,c
  3959  003F14  C05C  F00E         	movff	??_speedControl,___xxtofl@val
  3960  003F18  C05D  F00F         	movff	??_speedControl+1,___xxtofl@val+1
  3961  003F1C  0E00               	movlw	0
  3962  003F1E  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  3963  003F20  0EFF               	movlw	-1
  3964  003F22  6E10               	movwf	(___xxtofl@val+2)^0,c
  3965  003F24  6E11               	movwf	(___xxtofl@val+3)^0,c
  3966  003F26  0E01               	movlw	1
  3967  003F28  EC3A  F020         	call	___xxtofl
  3968  003F2C  C00E  F01C         	movff	?___xxtofl,___flmul@b
  3969  003F30  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  3970  003F34  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  3971  003F38  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  3972  003F3C  EC8A  F017         	call	___flmul	;wreg free
  3973  003F40  C01C  F039         	movff	?___flmul,___fladd@a
  3974  003F44  C01D  F03A         	movff	?___flmul+1,___fladd@a+1
  3975  003F48  C01E  F03B         	movff	?___flmul+2,___fladd@a+2
  3976  003F4C  C01F  F03C         	movff	?___flmul+3,___fladd@a+3
  3977  003F50  C1F3  F020         	movff	_KP,___flmul@a
  3978  003F54  C1F4  F021         	movff	_KP+1,___flmul@a+1
  3979  003F58  C1F5  F022         	movff	_KP+2,___flmul@a+2
  3980  003F5C  C1F6  F023         	movff	_KP+3,___flmul@a+3
  3981  003F60  C150  F00E         	movff	_controller,___xxtofl@val
  3982  003F64  C151  F00F         	movff	_controller+1,___xxtofl@val+1
  3983  003F68  0E00               	movlw	0
  3984  003F6A  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  3985  003F6C  0EFF               	movlw	-1
  3986  003F6E  6E10               	movwf	(___xxtofl@val+2)^0,c
  3987  003F70  6E11               	movwf	(___xxtofl@val+3)^0,c
  3988  003F72  0E01               	movlw	1
  3989  003F74  EC3A  F020         	call	___xxtofl
  3990  003F78  C00E  F01C         	movff	?___xxtofl,___flmul@b
  3991  003F7C  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  3992  003F80  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  3993  003F84  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  3994  003F88  EC8A  F017         	call	___flmul	;wreg free
  3995  003F8C  C01C  F035         	movff	?___flmul,___fladd@b
  3996  003F90  C01D  F036         	movff	?___flmul+1,___fladd@b+1
  3997  003F94  C01E  F037         	movff	?___flmul+2,___fladd@b+2
  3998  003F98  C01F  F038         	movff	?___flmul+3,___fladd@b+3
  3999  003F9C  EC2A  F015         	call	___fladd	;wreg free
  4000  003FA0  C035  F04E         	movff	?___fladd,___fltol@f1
  4001  003FA4  C036  F04F         	movff	?___fladd+1,___fltol@f1+1
  4002  003FA8  C037  F050         	movff	?___fladd+2,___fltol@f1+2
  4003  003FAC  C038  F051         	movff	?___fladd+3,___fltol@f1+3
  4004  003FB0  ECA6  F024         	call	___fltol	;wreg free
  4005  003FB4  C04E  F154         	movff	?___fltol,_controller+4
  4006  003FB8  C04F  F155         	movff	?___fltol+1,_controller+5
  4007  003FBC                     
  4008                           ;fs_speed_controller.c: 46:     controller.lastError = controller.error;
  4009  003FBC  C150  F152         	movff	_controller,_controller+2
  4010  003FC0  C151  F153         	movff	_controller+1,_controller+3
  4011  003FC4                     
  4012                           ;fs_speed_controller.c: 48:    controller.leftMotorSpeed =(int16_t) (200 + controller.mo
      +                          torSpeed + 70);
  4013  003FC4  0E0E               	movlw	14
  4014  003FC6  0101               	movlb	1	; () banked
  4015  003FC8  2554               	addwf	(_controller+4)& (0+255),w,b
  4016  003FCA  6F56               	movwf	(_controller+6)& (0+255),b
  4017  003FCC  0E01               	movlw	1
  4018  003FCE  2155               	addwfc	(_controller+5)& (0+255),w,b
  4019  003FD0  6F57               	movwf	(_controller+7)& (0+255),b
  4020  003FD2                     
  4021                           ; BSR set to: 1
  4022                           ;fs_speed_controller.c: 49:    controller.rightMotorSpeed =(int16_t) (200 - controller.m
      +                          otorSpeed);
  4023  003FD2  5154               	movf	(_controller+4)& (0+255),w,b
  4024  003FD4  08C8               	sublw	200
  4025  003FD6  6F58               	movwf	(_controller+8)& (0+255),b
  4026  003FD8  5155               	movf	(_controller+5)& (0+255),w,b
  4027  003FDA  A0D8               	btfss	status,0,c
  4028  003FDC  2AE8               	incf	wreg,f,c
  4029  003FDE  0800               	sublw	0
  4030  003FE0  6F59               	movwf	(_controller+9)& (0+255),b
  4031  003FE2                     
  4032                           ; BSR set to: 1
  4033                           ;fs_speed_controller.c: 51:     if (controller.leftMotorSpeed < 50)
  4034  003FE2  BF57               	btfsc	(_controller+7)& (0+255),7,b
  4035  003FE4  EFFF  F01F         	goto	u6710
  4036  003FE8  5157               	movf	(_controller+7)& (0+255),w,b
  4037  003FEA  E107               	bnz	u6711
  4038  003FEC  0E32               	movlw	50
  4039  003FEE  5D56               	subwf	(_controller+6)& (0+255),w,b
  4040  003FF0  B0D8               	btfsc	status,0,c
  4041  003FF2  EFFD  F01F         	goto	u6711
  4042  003FF6  EFFF  F01F         	goto	u6710
  4043  003FFA                     u6711:
  4044  003FFA  EF03  F020         	goto	l5552
  4045  003FFE                     u6710:
  4046  003FFE                     
  4047                           ; BSR set to: 1
  4048                           ;fs_speed_controller.c: 52:     {;fs_speed_controller.c: 53:         controller.leftMoto
      +                          rSpeed = 50;
  4049  003FFE  0E00               	movlw	0
  4050  004000  6F57               	movwf	(_controller+7)& (0+255),b
  4051  004002  0E32               	movlw	50
  4052  004004  6F56               	movwf	(_controller+6)& (0+255),b
  4053  004006                     l5552:
  4054                           
  4055                           ; BSR set to: 1
  4056                           ;fs_speed_controller.c: 56:     if (controller.rightMotorSpeed < 50)
  4057  004006  BF59               	btfsc	(_controller+9)& (0+255),7,b
  4058  004008  EF11  F020         	goto	u6720
  4059  00400C  5159               	movf	(_controller+9)& (0+255),w,b
  4060  00400E  E107               	bnz	u6721
  4061  004010  0E32               	movlw	50
  4062  004012  5D58               	subwf	(_controller+8)& (0+255),w,b
  4063  004014  B0D8               	btfsc	status,0,c
  4064  004016  EF0F  F020         	goto	u6721
  4065  00401A  EF11  F020         	goto	u6720
  4066  00401E                     u6721:
  4067  00401E  EF15  F020         	goto	l5556
  4068  004022                     u6720:
  4069  004022                     
  4070                           ; BSR set to: 1
  4071                           ;fs_speed_controller.c: 57:     {;fs_speed_controller.c: 58:       controller.rightMotor
      +                          Speed = 50;
  4072  004022  0E00               	movlw	0
  4073  004024  6F59               	movwf	(_controller+9)& (0+255),b
  4074  004026  0E32               	movlw	50
  4075  004028  6F58               	movwf	(_controller+8)& (0+255),b
  4076  00402A                     l5556:
  4077                           
  4078                           ; BSR set to: 1
  4079                           ;fs_speed_controller.c: 61:     if (controller.leftMotorSpeed > 350)
  4080  00402A  BF57               	btfsc	(_controller+7)& (0+255),7,b
  4081  00402C  EF21  F020         	goto	u6731
  4082  004030  0E5F               	movlw	95
  4083  004032  5D56               	subwf	(_controller+6)& (0+255),w,b
  4084  004034  0E01               	movlw	1
  4085  004036  5957               	subwfb	(_controller+7)& (0+255),w,b
  4086  004038  A0D8               	btfss	status,0,c
  4087  00403A  EF21  F020         	goto	u6731
  4088  00403E  EF23  F020         	goto	u6730
  4089  004042                     u6731:
  4090  004042  EF27  F020         	goto	l5560
  4091  004046                     u6730:
  4092  004046                     
  4093                           ; BSR set to: 1
  4094                           ;fs_speed_controller.c: 62:    {;fs_speed_controller.c: 63:         controller.leftMotor
      +                          Speed = 350;
  4095  004046  0E01               	movlw	1
  4096  004048  6F57               	movwf	(_controller+7)& (0+255),b
  4097  00404A  0E5E               	movlw	94
  4098  00404C  6F56               	movwf	(_controller+6)& (0+255),b
  4099  00404E                     l5560:
  4100                           
  4101                           ; BSR set to: 1
  4102                           ;fs_speed_controller.c: 66:     if (controller.rightMotorSpeed > 350)
  4103  00404E  BF59               	btfsc	(_controller+9)& (0+255),7,b
  4104  004050  EF33  F020         	goto	u6741
  4105  004054  0E5F               	movlw	95
  4106  004056  5D58               	subwf	(_controller+8)& (0+255),w,b
  4107  004058  0E01               	movlw	1
  4108  00405A  5959               	subwfb	(_controller+9)& (0+255),w,b
  4109  00405C  A0D8               	btfss	status,0,c
  4110  00405E  EF33  F020         	goto	u6741
  4111  004062  EF35  F020         	goto	u6740
  4112  004066                     u6741:
  4113  004066  EF39  F020         	goto	l440
  4114  00406A                     u6740:
  4115  00406A                     
  4116                           ; BSR set to: 1
  4117                           ;fs_speed_controller.c: 67:     {;fs_speed_controller.c: 68:         controller.rightMot
      +                          orSpeed = 350;
  4118  00406A  0E01               	movlw	1
  4119  00406C  6F59               	movwf	(_controller+9)& (0+255),b
  4120  00406E  0E5E               	movlw	94
  4121  004070  6F58               	movwf	(_controller+8)& (0+255),b
  4122  004072                     l440:
  4123                           
  4124                           ; BSR set to: 1
  4125  004072  0012               	return		;funcret
  4126  004074                     __end_of_speedControl:
  4127                           	callstack 0
  4128                           
  4129 ;; *************** function _scanAdcConversion *****************
  4130 ;; Defined at:
  4131 ;;		line 93 in file "fs_adc.c"
  4132 ;; Parameters:    Size  Location     Type
  4133 ;;		None
  4134 ;; Auto vars:     Size  Location     Type
  4135 ;;		None
  4136 ;; Return value:  Size  Location     Type
  4137 ;;                  1    wreg      void 
  4138 ;; Registers used:
  4139 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4140 ;; Tracked objects:
  4141 ;;		On entry : 0/0
  4142 ;;		On exit  : 0/0
  4143 ;;		Unchanged: 0/0
  4144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4145 ;;      Params:         0       0       0       0       0       0       0
  4146 ;;      Locals:         0       0       0       0       0       0       0
  4147 ;;      Temps:          2       0       0       0       0       0       0
  4148 ;;      Totals:         2       0       0       0       0       0       0
  4149 ;;Total ram usage:        2 bytes
  4150 ;; Hardware stack levels used:    1
  4151 ;; Hardware stack levels required when called:    2
  4152 ;; This function calls:
  4153 ;;		___fldiv
  4154 ;;		___flmul
  4155 ;;		___fltol
  4156 ;;		___xxtofl
  4157 ;;		_readAdcValue
  4158 ;; This function is called by:
  4159 ;;		_startMotor
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163                           	psect	text10
  4164  001C18                     __ptext10:
  4165                           	callstack 0
  4166  001C18                     _scanAdcConversion:
  4167                           	callstack 25
  4168  001C18                     
  4169                           ;fs_adc.c: 95:     switch(timer_value.timer_0_counter)
  4170  001C18  EFE0  F011         	goto	l5472
  4171  001C1C                     l5420:
  4172                           
  4173                           ; BSR set to: 0
  4174                           ;fs_adc.c: 98:             adc_raw_data.channel_0 = readAdcValue(0);
  4175  001C1C  0E00               	movlw	0
  4176  001C1E  EC5B  F02C         	call	_readAdcValue
  4177  001C22  C001  F163         	movff	?_readAdcValue,_adc_raw_data
  4178  001C26  C002  F164         	movff	?_readAdcValue+1,_adc_raw_data+1
  4179  001C2A                     
  4180                           ;fs_adc.c: 99:             procces_data.channel_0 = (float)((adc_raw_data.channel_0*5.0)
      +                          /1024.0);
  4181  001C2A  0E00               	movlw	0
  4182  001C2C  6E20               	movwf	___flmul@a^0,c
  4183  001C2E  0E00               	movlw	0
  4184  001C30  6E21               	movwf	(___flmul@a+1)^0,c
  4185  001C32  0EA0               	movlw	160
  4186  001C34  6E22               	movwf	(___flmul@a+2)^0,c
  4187  001C36  0E40               	movlw	64
  4188  001C38  6E23               	movwf	(___flmul@a+3)^0,c
  4189  001C3A  C163  F00E         	movff	_adc_raw_data,___xxtofl@val
  4190  001C3E  C164  F00F         	movff	_adc_raw_data+1,___xxtofl@val+1
  4191  001C42  6A10               	clrf	(___xxtofl@val+2)^0,c
  4192  001C44  6A11               	clrf	(___xxtofl@val+3)^0,c
  4193  001C46  0E00               	movlw	0
  4194  001C48  EC3A  F020         	call	___xxtofl
  4195  001C4C  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4196  001C50  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4197  001C54  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4198  001C58  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4199  001C5C  EC8A  F017         	call	___flmul	;wreg free
  4200  001C60  C01C  F035         	movff	?___flmul,___fldiv@b
  4201  001C64  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4202  001C68  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4203  001C6C  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4204  001C70  0E00               	movlw	0
  4205  001C72  6E39               	movwf	___fldiv@a^0,c
  4206  001C74  0E00               	movlw	0
  4207  001C76  6E3A               	movwf	(___fldiv@a+1)^0,c
  4208  001C78  0E80               	movlw	128
  4209  001C7A  6E3B               	movwf	(___fldiv@a+2)^0,c
  4210  001C7C  0E44               	movlw	68
  4211  001C7E  6E3C               	movwf	(___fldiv@a+3)^0,c
  4212  001C80  EC9F  F019         	call	___fldiv	;wreg free
  4213  001C84  C035  F130         	movff	?___fldiv,_procces_data
  4214  001C88  C036  F131         	movff	?___fldiv+1,_procces_data+1
  4215  001C8C  C037  F132         	movff	?___fldiv+2,_procces_data+2
  4216  001C90  C038  F133         	movff	?___fldiv+3,_procces_data+3
  4217  001C94                     
  4218                           ;fs_adc.c: 100:             convert_data.convert_channel_0 = (uint32_t)((procces_data.ch
      +                          annel_0*999)/5);
  4219  001C94  0E00               	movlw	0
  4220  001C96  6E39               	movwf	___fldiv@a^0,c
  4221  001C98  0E00               	movlw	0
  4222  001C9A  6E3A               	movwf	(___fldiv@a+1)^0,c
  4223  001C9C  0EA0               	movlw	160
  4224  001C9E  6E3B               	movwf	(___fldiv@a+2)^0,c
  4225  001CA0  0E40               	movlw	64
  4226  001CA2  6E3C               	movwf	(___fldiv@a+3)^0,c
  4227  001CA4  0E00               	movlw	0
  4228  001CA6  6E20               	movwf	___flmul@a^0,c
  4229  001CA8  0EC0               	movlw	192
  4230  001CAA  6E21               	movwf	(___flmul@a+1)^0,c
  4231  001CAC  0E79               	movlw	121
  4232  001CAE  6E22               	movwf	(___flmul@a+2)^0,c
  4233  001CB0  0E44               	movlw	68
  4234  001CB2  6E23               	movwf	(___flmul@a+3)^0,c
  4235  001CB4  C130  F01C         	movff	_procces_data,___flmul@b
  4236  001CB8  C131  F01D         	movff	_procces_data+1,___flmul@b+1
  4237  001CBC  C132  F01E         	movff	_procces_data+2,___flmul@b+2
  4238  001CC0  C133  F01F         	movff	_procces_data+3,___flmul@b+3
  4239  001CC4  EC8A  F017         	call	___flmul	;wreg free
  4240  001CC8  C01C  F035         	movff	?___flmul,___fldiv@b
  4241  001CCC  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4242  001CD0  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4243  001CD4  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4244  001CD8  EC9F  F019         	call	___fldiv	;wreg free
  4245  001CDC  C035  F04E         	movff	?___fldiv,___fltol@f1
  4246  001CE0  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4247  001CE4  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4248  001CE8  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4249  001CEC  ECA6  F024         	call	___fltol	;wreg free
  4250  001CF0  C04E  F100         	movff	?___fltol,_convert_data
  4251  001CF4  C04F  F101         	movff	?___fltol+1,_convert_data+1
  4252  001CF8  C050  F102         	movff	?___fltol+2,_convert_data+2
  4253  001CFC  C051  F103         	movff	?___fltol+3,_convert_data+3
  4254                           
  4255                           ;fs_adc.c: 101:         break;
  4256  001D00  EF0E  F012         	goto	l54
  4257  001D04                     l5426:
  4258                           
  4259                           ; BSR set to: 0
  4260                           ;fs_adc.c: 104:             adc_raw_data.channel_1 = readAdcValue(1);
  4261  001D04  0E01               	movlw	1
  4262  001D06  EC5B  F02C         	call	_readAdcValue
  4263  001D0A  C001  F165         	movff	?_readAdcValue,_adc_raw_data+2
  4264  001D0E  C002  F166         	movff	?_readAdcValue+1,_adc_raw_data+3
  4265  001D12                     
  4266                           ;fs_adc.c: 105:             procces_data.channel_1 = (float)((adc_raw_data.channel_1*5.0
      +                          )/1024.0);
  4267  001D12  0E00               	movlw	0
  4268  001D14  6E20               	movwf	___flmul@a^0,c
  4269  001D16  0E00               	movlw	0
  4270  001D18  6E21               	movwf	(___flmul@a+1)^0,c
  4271  001D1A  0EA0               	movlw	160
  4272  001D1C  6E22               	movwf	(___flmul@a+2)^0,c
  4273  001D1E  0E40               	movlw	64
  4274  001D20  6E23               	movwf	(___flmul@a+3)^0,c
  4275  001D22  C165  F00E         	movff	_adc_raw_data+2,___xxtofl@val
  4276  001D26  C166  F00F         	movff	_adc_raw_data+3,___xxtofl@val+1
  4277  001D2A  6A10               	clrf	(___xxtofl@val+2)^0,c
  4278  001D2C  6A11               	clrf	(___xxtofl@val+3)^0,c
  4279  001D2E  0E00               	movlw	0
  4280  001D30  EC3A  F020         	call	___xxtofl
  4281  001D34  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4282  001D38  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4283  001D3C  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4284  001D40  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4285  001D44  EC8A  F017         	call	___flmul	;wreg free
  4286  001D48  C01C  F035         	movff	?___flmul,___fldiv@b
  4287  001D4C  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4288  001D50  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4289  001D54  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4290  001D58  0E00               	movlw	0
  4291  001D5A  6E39               	movwf	___fldiv@a^0,c
  4292  001D5C  0E00               	movlw	0
  4293  001D5E  6E3A               	movwf	(___fldiv@a+1)^0,c
  4294  001D60  0E80               	movlw	128
  4295  001D62  6E3B               	movwf	(___fldiv@a+2)^0,c
  4296  001D64  0E44               	movlw	68
  4297  001D66  6E3C               	movwf	(___fldiv@a+3)^0,c
  4298  001D68  EC9F  F019         	call	___fldiv	;wreg free
  4299  001D6C  C035  F134         	movff	?___fldiv,_procces_data+4
  4300  001D70  C036  F135         	movff	?___fldiv+1,_procces_data+5
  4301  001D74  C037  F136         	movff	?___fldiv+2,_procces_data+6
  4302  001D78  C038  F137         	movff	?___fldiv+3,_procces_data+7
  4303  001D7C                     
  4304                           ;fs_adc.c: 106:             convert_data.convert_channel_1 = (uint32_t)((procces_data.ch
      +                          annel_1*999)/5);
  4305  001D7C  0E00               	movlw	0
  4306  001D7E  6E39               	movwf	___fldiv@a^0,c
  4307  001D80  0E00               	movlw	0
  4308  001D82  6E3A               	movwf	(___fldiv@a+1)^0,c
  4309  001D84  0EA0               	movlw	160
  4310  001D86  6E3B               	movwf	(___fldiv@a+2)^0,c
  4311  001D88  0E40               	movlw	64
  4312  001D8A  6E3C               	movwf	(___fldiv@a+3)^0,c
  4313  001D8C  0E00               	movlw	0
  4314  001D8E  6E20               	movwf	___flmul@a^0,c
  4315  001D90  0EC0               	movlw	192
  4316  001D92  6E21               	movwf	(___flmul@a+1)^0,c
  4317  001D94  0E79               	movlw	121
  4318  001D96  6E22               	movwf	(___flmul@a+2)^0,c
  4319  001D98  0E44               	movlw	68
  4320  001D9A  6E23               	movwf	(___flmul@a+3)^0,c
  4321  001D9C  C134  F01C         	movff	_procces_data+4,___flmul@b
  4322  001DA0  C135  F01D         	movff	_procces_data+5,___flmul@b+1
  4323  001DA4  C136  F01E         	movff	_procces_data+6,___flmul@b+2
  4324  001DA8  C137  F01F         	movff	_procces_data+7,___flmul@b+3
  4325  001DAC  EC8A  F017         	call	___flmul	;wreg free
  4326  001DB0  C01C  F035         	movff	?___flmul,___fldiv@b
  4327  001DB4  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4328  001DB8  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4329  001DBC  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4330  001DC0  EC9F  F019         	call	___fldiv	;wreg free
  4331  001DC4  C035  F04E         	movff	?___fldiv,___fltol@f1
  4332  001DC8  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4333  001DCC  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4334  001DD0  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4335  001DD4  ECA6  F024         	call	___fltol	;wreg free
  4336  001DD8  C04E  F104         	movff	?___fltol,_convert_data+4
  4337  001DDC  C04F  F105         	movff	?___fltol+1,_convert_data+5
  4338  001DE0  C050  F106         	movff	?___fltol+2,_convert_data+6
  4339  001DE4  C051  F107         	movff	?___fltol+3,_convert_data+7
  4340                           
  4341                           ;fs_adc.c: 107:         break;
  4342  001DE8  EF0E  F012         	goto	l54
  4343  001DEC                     l5432:
  4344                           
  4345                           ; BSR set to: 0
  4346                           ;fs_adc.c: 110:             adc_raw_data.channel_2 = readAdcValue(2);
  4347  001DEC  0E02               	movlw	2
  4348  001DEE  EC5B  F02C         	call	_readAdcValue
  4349  001DF2  C001  F167         	movff	?_readAdcValue,_adc_raw_data+4
  4350  001DF6  C002  F168         	movff	?_readAdcValue+1,_adc_raw_data+5
  4351  001DFA                     
  4352                           ;fs_adc.c: 111:             procces_data.channel_2 = (float)((adc_raw_data.channel_2*5.0
      +                          )/1024.0);
  4353  001DFA  0E00               	movlw	0
  4354  001DFC  6E20               	movwf	___flmul@a^0,c
  4355  001DFE  0E00               	movlw	0
  4356  001E00  6E21               	movwf	(___flmul@a+1)^0,c
  4357  001E02  0EA0               	movlw	160
  4358  001E04  6E22               	movwf	(___flmul@a+2)^0,c
  4359  001E06  0E40               	movlw	64
  4360  001E08  6E23               	movwf	(___flmul@a+3)^0,c
  4361  001E0A  C167  F00E         	movff	_adc_raw_data+4,___xxtofl@val
  4362  001E0E  C168  F00F         	movff	_adc_raw_data+5,___xxtofl@val+1
  4363  001E12  6A10               	clrf	(___xxtofl@val+2)^0,c
  4364  001E14  6A11               	clrf	(___xxtofl@val+3)^0,c
  4365  001E16  0E00               	movlw	0
  4366  001E18  EC3A  F020         	call	___xxtofl
  4367  001E1C  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4368  001E20  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4369  001E24  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4370  001E28  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4371  001E2C  EC8A  F017         	call	___flmul	;wreg free
  4372  001E30  C01C  F035         	movff	?___flmul,___fldiv@b
  4373  001E34  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4374  001E38  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4375  001E3C  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4376  001E40  0E00               	movlw	0
  4377  001E42  6E39               	movwf	___fldiv@a^0,c
  4378  001E44  0E00               	movlw	0
  4379  001E46  6E3A               	movwf	(___fldiv@a+1)^0,c
  4380  001E48  0E80               	movlw	128
  4381  001E4A  6E3B               	movwf	(___fldiv@a+2)^0,c
  4382  001E4C  0E44               	movlw	68
  4383  001E4E  6E3C               	movwf	(___fldiv@a+3)^0,c
  4384  001E50  EC9F  F019         	call	___fldiv	;wreg free
  4385  001E54  C035  F138         	movff	?___fldiv,_procces_data+8
  4386  001E58  C036  F139         	movff	?___fldiv+1,_procces_data+9
  4387  001E5C  C037  F13A         	movff	?___fldiv+2,_procces_data+10
  4388  001E60  C038  F13B         	movff	?___fldiv+3,_procces_data+11
  4389  001E64                     
  4390                           ;fs_adc.c: 112:             convert_data.convert_channel_2 = (uint32_t)((procces_data.ch
      +                          annel_2*999)/5);
  4391  001E64  0E00               	movlw	0
  4392  001E66  6E39               	movwf	___fldiv@a^0,c
  4393  001E68  0E00               	movlw	0
  4394  001E6A  6E3A               	movwf	(___fldiv@a+1)^0,c
  4395  001E6C  0EA0               	movlw	160
  4396  001E6E  6E3B               	movwf	(___fldiv@a+2)^0,c
  4397  001E70  0E40               	movlw	64
  4398  001E72  6E3C               	movwf	(___fldiv@a+3)^0,c
  4399  001E74  0E00               	movlw	0
  4400  001E76  6E20               	movwf	___flmul@a^0,c
  4401  001E78  0EC0               	movlw	192
  4402  001E7A  6E21               	movwf	(___flmul@a+1)^0,c
  4403  001E7C  0E79               	movlw	121
  4404  001E7E  6E22               	movwf	(___flmul@a+2)^0,c
  4405  001E80  0E44               	movlw	68
  4406  001E82  6E23               	movwf	(___flmul@a+3)^0,c
  4407  001E84  C138  F01C         	movff	_procces_data+8,___flmul@b
  4408  001E88  C139  F01D         	movff	_procces_data+9,___flmul@b+1
  4409  001E8C  C13A  F01E         	movff	_procces_data+10,___flmul@b+2
  4410  001E90  C13B  F01F         	movff	_procces_data+11,___flmul@b+3
  4411  001E94  EC8A  F017         	call	___flmul	;wreg free
  4412  001E98  C01C  F035         	movff	?___flmul,___fldiv@b
  4413  001E9C  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4414  001EA0  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4415  001EA4  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4416  001EA8  EC9F  F019         	call	___fldiv	;wreg free
  4417  001EAC  C035  F04E         	movff	?___fldiv,___fltol@f1
  4418  001EB0  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4419  001EB4  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4420  001EB8  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4421  001EBC  ECA6  F024         	call	___fltol	;wreg free
  4422  001EC0  C04E  F108         	movff	?___fltol,_convert_data+8
  4423  001EC4  C04F  F109         	movff	?___fltol+1,_convert_data+9
  4424  001EC8  C050  F10A         	movff	?___fltol+2,_convert_data+10
  4425  001ECC  C051  F10B         	movff	?___fltol+3,_convert_data+11
  4426  001ED0                     
  4427                           ;fs_adc.c: 113:             convert_data.convert_channel_2_f = (uint16_t)((procces_data.
      +                          channel_2*999)/5);
  4428  001ED0  0E00               	movlw	0
  4429  001ED2  6E39               	movwf	___fldiv@a^0,c
  4430  001ED4  0E00               	movlw	0
  4431  001ED6  6E3A               	movwf	(___fldiv@a+1)^0,c
  4432  001ED8  0EA0               	movlw	160
  4433  001EDA  6E3B               	movwf	(___fldiv@a+2)^0,c
  4434  001EDC  0E40               	movlw	64
  4435  001EDE  6E3C               	movwf	(___fldiv@a+3)^0,c
  4436  001EE0  0E00               	movlw	0
  4437  001EE2  6E20               	movwf	___flmul@a^0,c
  4438  001EE4  0EC0               	movlw	192
  4439  001EE6  6E21               	movwf	(___flmul@a+1)^0,c
  4440  001EE8  0E79               	movlw	121
  4441  001EEA  6E22               	movwf	(___flmul@a+2)^0,c
  4442  001EEC  0E44               	movlw	68
  4443  001EEE  6E23               	movwf	(___flmul@a+3)^0,c
  4444  001EF0  C138  F01C         	movff	_procces_data+8,___flmul@b
  4445  001EF4  C139  F01D         	movff	_procces_data+9,___flmul@b+1
  4446  001EF8  C13A  F01E         	movff	_procces_data+10,___flmul@b+2
  4447  001EFC  C13B  F01F         	movff	_procces_data+11,___flmul@b+3
  4448  001F00  EC8A  F017         	call	___flmul	;wreg free
  4449  001F04  C01C  F035         	movff	?___flmul,___fldiv@b
  4450  001F08  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4451  001F0C  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4452  001F10  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4453  001F14  EC9F  F019         	call	___fldiv	;wreg free
  4454  001F18  C035  F04E         	movff	?___fldiv,___fltol@f1
  4455  001F1C  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4456  001F20  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4457  001F24  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4458  001F28  ECA6  F024         	call	___fltol	;wreg free
  4459  001F2C  C04E  F124         	movff	?___fltol,_convert_data+36
  4460  001F30  C04F  F125         	movff	?___fltol+1,_convert_data+37
  4461                           
  4462                           ;fs_adc.c: 114:         break;
  4463  001F34  EF0E  F012         	goto	l54
  4464  001F38                     l5440:
  4465                           
  4466                           ; BSR set to: 0
  4467                           ;fs_adc.c: 117:             adc_raw_data.channel_3 = readAdcValue(3);
  4468  001F38  0E03               	movlw	3
  4469  001F3A  EC5B  F02C         	call	_readAdcValue
  4470  001F3E  C001  F169         	movff	?_readAdcValue,_adc_raw_data+6
  4471  001F42  C002  F16A         	movff	?_readAdcValue+1,_adc_raw_data+7
  4472  001F46                     
  4473                           ;fs_adc.c: 118:             procces_data.channel_3 = (float)((adc_raw_data.channel_3*5.0
      +                          )/1024.0);
  4474  001F46  0E00               	movlw	0
  4475  001F48  6E20               	movwf	___flmul@a^0,c
  4476  001F4A  0E00               	movlw	0
  4477  001F4C  6E21               	movwf	(___flmul@a+1)^0,c
  4478  001F4E  0EA0               	movlw	160
  4479  001F50  6E22               	movwf	(___flmul@a+2)^0,c
  4480  001F52  0E40               	movlw	64
  4481  001F54  6E23               	movwf	(___flmul@a+3)^0,c
  4482  001F56  C169  F00E         	movff	_adc_raw_data+6,___xxtofl@val
  4483  001F5A  C16A  F00F         	movff	_adc_raw_data+7,___xxtofl@val+1
  4484  001F5E  6A10               	clrf	(___xxtofl@val+2)^0,c
  4485  001F60  6A11               	clrf	(___xxtofl@val+3)^0,c
  4486  001F62  0E00               	movlw	0
  4487  001F64  EC3A  F020         	call	___xxtofl
  4488  001F68  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4489  001F6C  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4490  001F70  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4491  001F74  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4492  001F78  EC8A  F017         	call	___flmul	;wreg free
  4493  001F7C  C01C  F035         	movff	?___flmul,___fldiv@b
  4494  001F80  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4495  001F84  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4496  001F88  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4497  001F8C  0E00               	movlw	0
  4498  001F8E  6E39               	movwf	___fldiv@a^0,c
  4499  001F90  0E00               	movlw	0
  4500  001F92  6E3A               	movwf	(___fldiv@a+1)^0,c
  4501  001F94  0E80               	movlw	128
  4502  001F96  6E3B               	movwf	(___fldiv@a+2)^0,c
  4503  001F98  0E44               	movlw	68
  4504  001F9A  6E3C               	movwf	(___fldiv@a+3)^0,c
  4505  001F9C  EC9F  F019         	call	___fldiv	;wreg free
  4506  001FA0  C035  F13C         	movff	?___fldiv,_procces_data+12
  4507  001FA4  C036  F13D         	movff	?___fldiv+1,_procces_data+13
  4508  001FA8  C037  F13E         	movff	?___fldiv+2,_procces_data+14
  4509  001FAC  C038  F13F         	movff	?___fldiv+3,_procces_data+15
  4510  001FB0                     
  4511                           ;fs_adc.c: 119:             convert_data.convert_channel_3 = (uint32_t)((procces_data.ch
      +                          annel_3*999)/5);
  4512  001FB0  0E00               	movlw	0
  4513  001FB2  6E39               	movwf	___fldiv@a^0,c
  4514  001FB4  0E00               	movlw	0
  4515  001FB6  6E3A               	movwf	(___fldiv@a+1)^0,c
  4516  001FB8  0EA0               	movlw	160
  4517  001FBA  6E3B               	movwf	(___fldiv@a+2)^0,c
  4518  001FBC  0E40               	movlw	64
  4519  001FBE  6E3C               	movwf	(___fldiv@a+3)^0,c
  4520  001FC0  0E00               	movlw	0
  4521  001FC2  6E20               	movwf	___flmul@a^0,c
  4522  001FC4  0EC0               	movlw	192
  4523  001FC6  6E21               	movwf	(___flmul@a+1)^0,c
  4524  001FC8  0E79               	movlw	121
  4525  001FCA  6E22               	movwf	(___flmul@a+2)^0,c
  4526  001FCC  0E44               	movlw	68
  4527  001FCE  6E23               	movwf	(___flmul@a+3)^0,c
  4528  001FD0  C13C  F01C         	movff	_procces_data+12,___flmul@b
  4529  001FD4  C13D  F01D         	movff	_procces_data+13,___flmul@b+1
  4530  001FD8  C13E  F01E         	movff	_procces_data+14,___flmul@b+2
  4531  001FDC  C13F  F01F         	movff	_procces_data+15,___flmul@b+3
  4532  001FE0  EC8A  F017         	call	___flmul	;wreg free
  4533  001FE4  C01C  F035         	movff	?___flmul,___fldiv@b
  4534  001FE8  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4535  001FEC  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4536  001FF0  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4537  001FF4  EC9F  F019         	call	___fldiv	;wreg free
  4538  001FF8  C035  F04E         	movff	?___fldiv,___fltol@f1
  4539  001FFC  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4540  002000  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4541  002004  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4542  002008  ECA6  F024         	call	___fltol	;wreg free
  4543  00200C  C04E  F10C         	movff	?___fltol,_convert_data+12
  4544  002010  C04F  F10D         	movff	?___fltol+1,_convert_data+13
  4545  002014  C050  F10E         	movff	?___fltol+2,_convert_data+14
  4546  002018  C051  F10F         	movff	?___fltol+3,_convert_data+15
  4547                           
  4548                           ;fs_adc.c: 120:         break;
  4549  00201C  EF0E  F012         	goto	l54
  4550  002020                     l5446:
  4551                           
  4552                           ; BSR set to: 0
  4553                           ;fs_adc.c: 123:             adc_raw_data.channel_4 = readAdcValue(4);
  4554  002020  0E04               	movlw	4
  4555  002022  EC5B  F02C         	call	_readAdcValue
  4556  002026  C001  F16B         	movff	?_readAdcValue,_adc_raw_data+8
  4557  00202A  C002  F16C         	movff	?_readAdcValue+1,_adc_raw_data+9
  4558  00202E                     
  4559                           ;fs_adc.c: 124:             procces_data.channel_4 = (float)((adc_raw_data.channel_4*5.0
      +                          )/1024.0);
  4560  00202E  0E00               	movlw	0
  4561  002030  6E20               	movwf	___flmul@a^0,c
  4562  002032  0E00               	movlw	0
  4563  002034  6E21               	movwf	(___flmul@a+1)^0,c
  4564  002036  0EA0               	movlw	160
  4565  002038  6E22               	movwf	(___flmul@a+2)^0,c
  4566  00203A  0E40               	movlw	64
  4567  00203C  6E23               	movwf	(___flmul@a+3)^0,c
  4568  00203E  C16B  F00E         	movff	_adc_raw_data+8,___xxtofl@val
  4569  002042  C16C  F00F         	movff	_adc_raw_data+9,___xxtofl@val+1
  4570  002046  6A10               	clrf	(___xxtofl@val+2)^0,c
  4571  002048  6A11               	clrf	(___xxtofl@val+3)^0,c
  4572  00204A  0E00               	movlw	0
  4573  00204C  EC3A  F020         	call	___xxtofl
  4574  002050  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4575  002054  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4576  002058  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4577  00205C  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4578  002060  EC8A  F017         	call	___flmul	;wreg free
  4579  002064  C01C  F035         	movff	?___flmul,___fldiv@b
  4580  002068  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4581  00206C  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4582  002070  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4583  002074  0E00               	movlw	0
  4584  002076  6E39               	movwf	___fldiv@a^0,c
  4585  002078  0E00               	movlw	0
  4586  00207A  6E3A               	movwf	(___fldiv@a+1)^0,c
  4587  00207C  0E80               	movlw	128
  4588  00207E  6E3B               	movwf	(___fldiv@a+2)^0,c
  4589  002080  0E44               	movlw	68
  4590  002082  6E3C               	movwf	(___fldiv@a+3)^0,c
  4591  002084  EC9F  F019         	call	___fldiv	;wreg free
  4592  002088  C035  F140         	movff	?___fldiv,_procces_data+16
  4593  00208C  C036  F141         	movff	?___fldiv+1,_procces_data+17
  4594  002090  C037  F142         	movff	?___fldiv+2,_procces_data+18
  4595  002094  C038  F143         	movff	?___fldiv+3,_procces_data+19
  4596  002098                     
  4597                           ;fs_adc.c: 125:             convert_data.convert_channel_4 = (uint32_t)((procces_data.ch
      +                          annel_4*999)/5);
  4598  002098  0E00               	movlw	0
  4599  00209A  6E39               	movwf	___fldiv@a^0,c
  4600  00209C  0E00               	movlw	0
  4601  00209E  6E3A               	movwf	(___fldiv@a+1)^0,c
  4602  0020A0  0EA0               	movlw	160
  4603  0020A2  6E3B               	movwf	(___fldiv@a+2)^0,c
  4604  0020A4  0E40               	movlw	64
  4605  0020A6  6E3C               	movwf	(___fldiv@a+3)^0,c
  4606  0020A8  0E00               	movlw	0
  4607  0020AA  6E20               	movwf	___flmul@a^0,c
  4608  0020AC  0EC0               	movlw	192
  4609  0020AE  6E21               	movwf	(___flmul@a+1)^0,c
  4610  0020B0  0E79               	movlw	121
  4611  0020B2  6E22               	movwf	(___flmul@a+2)^0,c
  4612  0020B4  0E44               	movlw	68
  4613  0020B6  6E23               	movwf	(___flmul@a+3)^0,c
  4614  0020B8  C140  F01C         	movff	_procces_data+16,___flmul@b
  4615  0020BC  C141  F01D         	movff	_procces_data+17,___flmul@b+1
  4616  0020C0  C142  F01E         	movff	_procces_data+18,___flmul@b+2
  4617  0020C4  C143  F01F         	movff	_procces_data+19,___flmul@b+3
  4618  0020C8  EC8A  F017         	call	___flmul	;wreg free
  4619  0020CC  C01C  F035         	movff	?___flmul,___fldiv@b
  4620  0020D0  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4621  0020D4  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4622  0020D8  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4623  0020DC  EC9F  F019         	call	___fldiv	;wreg free
  4624  0020E0  C035  F04E         	movff	?___fldiv,___fltol@f1
  4625  0020E4  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4626  0020E8  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4627  0020EC  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4628  0020F0  ECA6  F024         	call	___fltol	;wreg free
  4629  0020F4  C04E  F110         	movff	?___fltol,_convert_data+16
  4630  0020F8  C04F  F111         	movff	?___fltol+1,_convert_data+17
  4631  0020FC  C050  F112         	movff	?___fltol+2,_convert_data+18
  4632  002100  C051  F113         	movff	?___fltol+3,_convert_data+19
  4633                           
  4634                           ;fs_adc.c: 126:         break;
  4635  002104  EF0E  F012         	goto	l54
  4636  002108                     l5452:
  4637                           
  4638                           ; BSR set to: 0
  4639                           ;fs_adc.c: 129:            adc_raw_data.channel_5 = readAdcValue(5);
  4640  002108  0E05               	movlw	5
  4641  00210A  EC5B  F02C         	call	_readAdcValue
  4642  00210E  C001  F16D         	movff	?_readAdcValue,_adc_raw_data+10
  4643  002112  C002  F16E         	movff	?_readAdcValue+1,_adc_raw_data+11
  4644  002116                     
  4645                           ;fs_adc.c: 130:            procces_data.channel_5 = (float)((adc_raw_data.channel_5*5.0)
      +                          /1024.0);
  4646  002116  0E00               	movlw	0
  4647  002118  6E20               	movwf	___flmul@a^0,c
  4648  00211A  0E00               	movlw	0
  4649  00211C  6E21               	movwf	(___flmul@a+1)^0,c
  4650  00211E  0EA0               	movlw	160
  4651  002120  6E22               	movwf	(___flmul@a+2)^0,c
  4652  002122  0E40               	movlw	64
  4653  002124  6E23               	movwf	(___flmul@a+3)^0,c
  4654  002126  C16D  F00E         	movff	_adc_raw_data+10,___xxtofl@val
  4655  00212A  C16E  F00F         	movff	_adc_raw_data+11,___xxtofl@val+1
  4656  00212E  6A10               	clrf	(___xxtofl@val+2)^0,c
  4657  002130  6A11               	clrf	(___xxtofl@val+3)^0,c
  4658  002132  0E00               	movlw	0
  4659  002134  EC3A  F020         	call	___xxtofl
  4660  002138  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4661  00213C  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4662  002140  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4663  002144  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4664  002148  EC8A  F017         	call	___flmul	;wreg free
  4665  00214C  C01C  F035         	movff	?___flmul,___fldiv@b
  4666  002150  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4667  002154  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4668  002158  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4669  00215C  0E00               	movlw	0
  4670  00215E  6E39               	movwf	___fldiv@a^0,c
  4671  002160  0E00               	movlw	0
  4672  002162  6E3A               	movwf	(___fldiv@a+1)^0,c
  4673  002164  0E80               	movlw	128
  4674  002166  6E3B               	movwf	(___fldiv@a+2)^0,c
  4675  002168  0E44               	movlw	68
  4676  00216A  6E3C               	movwf	(___fldiv@a+3)^0,c
  4677  00216C  EC9F  F019         	call	___fldiv	;wreg free
  4678  002170  C035  F144         	movff	?___fldiv,_procces_data+20
  4679  002174  C036  F145         	movff	?___fldiv+1,_procces_data+21
  4680  002178  C037  F146         	movff	?___fldiv+2,_procces_data+22
  4681  00217C  C038  F147         	movff	?___fldiv+3,_procces_data+23
  4682  002180                     
  4683                           ;fs_adc.c: 131:            convert_data.convert_channel_5 = (uint32_t)((procces_data.cha
      +                          nnel_5*999)/5);
  4684  002180  0E00               	movlw	0
  4685  002182  6E39               	movwf	___fldiv@a^0,c
  4686  002184  0E00               	movlw	0
  4687  002186  6E3A               	movwf	(___fldiv@a+1)^0,c
  4688  002188  0EA0               	movlw	160
  4689  00218A  6E3B               	movwf	(___fldiv@a+2)^0,c
  4690  00218C  0E40               	movlw	64
  4691  00218E  6E3C               	movwf	(___fldiv@a+3)^0,c
  4692  002190  0E00               	movlw	0
  4693  002192  6E20               	movwf	___flmul@a^0,c
  4694  002194  0EC0               	movlw	192
  4695  002196  6E21               	movwf	(___flmul@a+1)^0,c
  4696  002198  0E79               	movlw	121
  4697  00219A  6E22               	movwf	(___flmul@a+2)^0,c
  4698  00219C  0E44               	movlw	68
  4699  00219E  6E23               	movwf	(___flmul@a+3)^0,c
  4700  0021A0  C144  F01C         	movff	_procces_data+20,___flmul@b
  4701  0021A4  C145  F01D         	movff	_procces_data+21,___flmul@b+1
  4702  0021A8  C146  F01E         	movff	_procces_data+22,___flmul@b+2
  4703  0021AC  C147  F01F         	movff	_procces_data+23,___flmul@b+3
  4704  0021B0  EC8A  F017         	call	___flmul	;wreg free
  4705  0021B4  C01C  F035         	movff	?___flmul,___fldiv@b
  4706  0021B8  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4707  0021BC  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4708  0021C0  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4709  0021C4  EC9F  F019         	call	___fldiv	;wreg free
  4710  0021C8  C035  F04E         	movff	?___fldiv,___fltol@f1
  4711  0021CC  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4712  0021D0  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4713  0021D4  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4714  0021D8  ECA6  F024         	call	___fltol	;wreg free
  4715  0021DC  C04E  F114         	movff	?___fltol,_convert_data+20
  4716  0021E0  C04F  F115         	movff	?___fltol+1,_convert_data+21
  4717  0021E4  C050  F116         	movff	?___fltol+2,_convert_data+22
  4718  0021E8  C051  F117         	movff	?___fltol+3,_convert_data+23
  4719                           
  4720                           ;fs_adc.c: 132:         break;
  4721  0021EC  EF0E  F012         	goto	l54
  4722  0021F0                     l5458:
  4723                           
  4724                           ; BSR set to: 0
  4725                           ;fs_adc.c: 135:             adc_raw_data.channel_6 = readAdcValue(6);
  4726  0021F0  0E06               	movlw	6
  4727  0021F2  EC5B  F02C         	call	_readAdcValue
  4728  0021F6  C001  F16F         	movff	?_readAdcValue,_adc_raw_data+12
  4729  0021FA  C002  F170         	movff	?_readAdcValue+1,_adc_raw_data+13
  4730  0021FE                     
  4731                           ;fs_adc.c: 136:             procces_data.channel_6 = (float)((adc_raw_data.channel_6*5.0
      +                          )/1024.0);
  4732  0021FE  0E00               	movlw	0
  4733  002200  6E20               	movwf	___flmul@a^0,c
  4734  002202  0E00               	movlw	0
  4735  002204  6E21               	movwf	(___flmul@a+1)^0,c
  4736  002206  0EA0               	movlw	160
  4737  002208  6E22               	movwf	(___flmul@a+2)^0,c
  4738  00220A  0E40               	movlw	64
  4739  00220C  6E23               	movwf	(___flmul@a+3)^0,c
  4740  00220E  C16F  F00E         	movff	_adc_raw_data+12,___xxtofl@val
  4741  002212  C170  F00F         	movff	_adc_raw_data+13,___xxtofl@val+1
  4742  002216  6A10               	clrf	(___xxtofl@val+2)^0,c
  4743  002218  6A11               	clrf	(___xxtofl@val+3)^0,c
  4744  00221A  0E00               	movlw	0
  4745  00221C  EC3A  F020         	call	___xxtofl
  4746  002220  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4747  002224  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4748  002228  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4749  00222C  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4750  002230  EC8A  F017         	call	___flmul	;wreg free
  4751  002234  C01C  F035         	movff	?___flmul,___fldiv@b
  4752  002238  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4753  00223C  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4754  002240  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4755  002244  0E00               	movlw	0
  4756  002246  6E39               	movwf	___fldiv@a^0,c
  4757  002248  0E00               	movlw	0
  4758  00224A  6E3A               	movwf	(___fldiv@a+1)^0,c
  4759  00224C  0E80               	movlw	128
  4760  00224E  6E3B               	movwf	(___fldiv@a+2)^0,c
  4761  002250  0E44               	movlw	68
  4762  002252  6E3C               	movwf	(___fldiv@a+3)^0,c
  4763  002254  EC9F  F019         	call	___fldiv	;wreg free
  4764  002258  C035  F148         	movff	?___fldiv,_procces_data+24
  4765  00225C  C036  F149         	movff	?___fldiv+1,_procces_data+25
  4766  002260  C037  F14A         	movff	?___fldiv+2,_procces_data+26
  4767  002264  C038  F14B         	movff	?___fldiv+3,_procces_data+27
  4768  002268                     
  4769                           ;fs_adc.c: 137:             convert_data.convert_channel_6 = (uint32_t)((procces_data.ch
      +                          annel_6*999)/5);
  4770  002268  0E00               	movlw	0
  4771  00226A  6E39               	movwf	___fldiv@a^0,c
  4772  00226C  0E00               	movlw	0
  4773  00226E  6E3A               	movwf	(___fldiv@a+1)^0,c
  4774  002270  0EA0               	movlw	160
  4775  002272  6E3B               	movwf	(___fldiv@a+2)^0,c
  4776  002274  0E40               	movlw	64
  4777  002276  6E3C               	movwf	(___fldiv@a+3)^0,c
  4778  002278  0E00               	movlw	0
  4779  00227A  6E20               	movwf	___flmul@a^0,c
  4780  00227C  0EC0               	movlw	192
  4781  00227E  6E21               	movwf	(___flmul@a+1)^0,c
  4782  002280  0E79               	movlw	121
  4783  002282  6E22               	movwf	(___flmul@a+2)^0,c
  4784  002284  0E44               	movlw	68
  4785  002286  6E23               	movwf	(___flmul@a+3)^0,c
  4786  002288  C148  F01C         	movff	_procces_data+24,___flmul@b
  4787  00228C  C149  F01D         	movff	_procces_data+25,___flmul@b+1
  4788  002290  C14A  F01E         	movff	_procces_data+26,___flmul@b+2
  4789  002294  C14B  F01F         	movff	_procces_data+27,___flmul@b+3
  4790  002298  EC8A  F017         	call	___flmul	;wreg free
  4791  00229C  C01C  F035         	movff	?___flmul,___fldiv@b
  4792  0022A0  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4793  0022A4  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4794  0022A8  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4795  0022AC  EC9F  F019         	call	___fldiv	;wreg free
  4796  0022B0  C035  F04E         	movff	?___fldiv,___fltol@f1
  4797  0022B4  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4798  0022B8  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4799  0022BC  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4800  0022C0  ECA6  F024         	call	___fltol	;wreg free
  4801  0022C4  C04E  F118         	movff	?___fltol,_convert_data+24
  4802  0022C8  C04F  F119         	movff	?___fltol+1,_convert_data+25
  4803  0022CC  C050  F11A         	movff	?___fltol+2,_convert_data+26
  4804  0022D0  C051  F11B         	movff	?___fltol+3,_convert_data+27
  4805                           
  4806                           ;fs_adc.c: 138:         break;
  4807  0022D4  EF0E  F012         	goto	l54
  4808  0022D8                     l5464:
  4809                           
  4810                           ; BSR set to: 0
  4811                           ;fs_adc.c: 141:             adc_raw_data.channel_7 = readAdcValue(7);
  4812  0022D8  0E07               	movlw	7
  4813  0022DA  EC5B  F02C         	call	_readAdcValue
  4814  0022DE  C001  F171         	movff	?_readAdcValue,_adc_raw_data+14
  4815  0022E2  C002  F172         	movff	?_readAdcValue+1,_adc_raw_data+15
  4816  0022E6                     
  4817                           ;fs_adc.c: 142:             procces_data.channel_7 = (float)((adc_raw_data.channel_7*5.0
      +                          )/1024.0);
  4818  0022E6  0E00               	movlw	0
  4819  0022E8  6E20               	movwf	___flmul@a^0,c
  4820  0022EA  0E00               	movlw	0
  4821  0022EC  6E21               	movwf	(___flmul@a+1)^0,c
  4822  0022EE  0EA0               	movlw	160
  4823  0022F0  6E22               	movwf	(___flmul@a+2)^0,c
  4824  0022F2  0E40               	movlw	64
  4825  0022F4  6E23               	movwf	(___flmul@a+3)^0,c
  4826  0022F6  C171  F00E         	movff	_adc_raw_data+14,___xxtofl@val
  4827  0022FA  C172  F00F         	movff	_adc_raw_data+15,___xxtofl@val+1
  4828  0022FE  6A10               	clrf	(___xxtofl@val+2)^0,c
  4829  002300  6A11               	clrf	(___xxtofl@val+3)^0,c
  4830  002302  0E00               	movlw	0
  4831  002304  EC3A  F020         	call	___xxtofl
  4832  002308  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4833  00230C  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4834  002310  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4835  002314  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4836  002318  EC8A  F017         	call	___flmul	;wreg free
  4837  00231C  C01C  F035         	movff	?___flmul,___fldiv@b
  4838  002320  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4839  002324  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4840  002328  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4841  00232C  0E00               	movlw	0
  4842  00232E  6E39               	movwf	___fldiv@a^0,c
  4843  002330  0E00               	movlw	0
  4844  002332  6E3A               	movwf	(___fldiv@a+1)^0,c
  4845  002334  0E80               	movlw	128
  4846  002336  6E3B               	movwf	(___fldiv@a+2)^0,c
  4847  002338  0E44               	movlw	68
  4848  00233A  6E3C               	movwf	(___fldiv@a+3)^0,c
  4849  00233C  EC9F  F019         	call	___fldiv	;wreg free
  4850  002340  C035  F14C         	movff	?___fldiv,_procces_data+28
  4851  002344  C036  F14D         	movff	?___fldiv+1,_procces_data+29
  4852  002348  C037  F14E         	movff	?___fldiv+2,_procces_data+30
  4853  00234C  C038  F14F         	movff	?___fldiv+3,_procces_data+31
  4854  002350                     
  4855                           ;fs_adc.c: 143:             convert_data.convert_channel_7 = (uint32_t)((procces_data.ch
      +                          annel_7*999)/5);
  4856  002350  0E00               	movlw	0
  4857  002352  6E39               	movwf	___fldiv@a^0,c
  4858  002354  0E00               	movlw	0
  4859  002356  6E3A               	movwf	(___fldiv@a+1)^0,c
  4860  002358  0EA0               	movlw	160
  4861  00235A  6E3B               	movwf	(___fldiv@a+2)^0,c
  4862  00235C  0E40               	movlw	64
  4863  00235E  6E3C               	movwf	(___fldiv@a+3)^0,c
  4864  002360  0E00               	movlw	0
  4865  002362  6E20               	movwf	___flmul@a^0,c
  4866  002364  0EC0               	movlw	192
  4867  002366  6E21               	movwf	(___flmul@a+1)^0,c
  4868  002368  0E79               	movlw	121
  4869  00236A  6E22               	movwf	(___flmul@a+2)^0,c
  4870  00236C  0E44               	movlw	68
  4871  00236E  6E23               	movwf	(___flmul@a+3)^0,c
  4872  002370  C14C  F01C         	movff	_procces_data+28,___flmul@b
  4873  002374  C14D  F01D         	movff	_procces_data+29,___flmul@b+1
  4874  002378  C14E  F01E         	movff	_procces_data+30,___flmul@b+2
  4875  00237C  C14F  F01F         	movff	_procces_data+31,___flmul@b+3
  4876  002380  EC8A  F017         	call	___flmul	;wreg free
  4877  002384  C01C  F035         	movff	?___flmul,___fldiv@b
  4878  002388  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4879  00238C  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4880  002390  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4881  002394  EC9F  F019         	call	___fldiv	;wreg free
  4882  002398  C035  F04E         	movff	?___fldiv,___fltol@f1
  4883  00239C  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4884  0023A0  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4885  0023A4  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4886  0023A8  ECA6  F024         	call	___fltol	;wreg free
  4887  0023AC  C04E  F11C         	movff	?___fltol,_convert_data+28
  4888  0023B0  C04F  F11D         	movff	?___fltol+1,_convert_data+29
  4889  0023B4  C050  F11E         	movff	?___fltol+2,_convert_data+30
  4890  0023B8  C051  F11F         	movff	?___fltol+3,_convert_data+31
  4891                           
  4892                           ;fs_adc.c: 144:         break;
  4893  0023BC  EF0E  F012         	goto	l54
  4894  0023C0                     l5472:
  4895  0023C0  0100               	movlb	0	; () banked
  4896  0023C2  51FC               	movf	(_timer_value+9)& (0+255),w,b
  4897  0023C4  6E58               	movwf	??_scanAdcConversion^0,c
  4898  0023C6  6A59               	clrf	(??_scanAdcConversion+1)^0,c
  4899                           
  4900                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4901                           ; Switch size 1, requested type "simple"
  4902                           ; Number of cases is 1, Range of values is 0 to 0
  4903                           ; switch strategies available:
  4904                           ; Name         Instructions Cycles
  4905                           ; simple_byte            4     3 (average)
  4906                           ;	Chosen strategy is simple_byte
  4907  0023C8  5059               	movf	(??_scanAdcConversion+1)^0,w,c
  4908  0023CA  0A00               	xorlw	0	; case 0
  4909  0023CC  B4D8               	btfsc	status,2,c
  4910  0023CE  EFEB  F011         	goto	l6270
  4911  0023D2  EF0E  F012         	goto	l54
  4912  0023D6                     l6270:
  4913                           
  4914                           ; BSR set to: 0
  4915                           ; Switch size 1, requested type "simple"
  4916                           ; Number of cases is 8, Range of values is 1 to 8
  4917                           ; switch strategies available:
  4918                           ; Name         Instructions Cycles
  4919                           ; simple_byte           25    13 (average)
  4920                           ;	Chosen strategy is simple_byte
  4921  0023D6  5058               	movf	??_scanAdcConversion^0,w,c
  4922  0023D8  0A01               	xorlw	1	; case 1
  4923  0023DA  B4D8               	btfsc	status,2,c
  4924  0023DC  EF0E  F00E         	goto	l5420
  4925  0023E0  0A03               	xorlw	3	; case 2
  4926  0023E2  B4D8               	btfsc	status,2,c
  4927  0023E4  EF82  F00E         	goto	l5426
  4928  0023E8  0A01               	xorlw	1	; case 3
  4929  0023EA  B4D8               	btfsc	status,2,c
  4930  0023EC  EFF6  F00E         	goto	l5432
  4931  0023F0  0A07               	xorlw	7	; case 4
  4932  0023F2  B4D8               	btfsc	status,2,c
  4933  0023F4  EF9C  F00F         	goto	l5440
  4934  0023F8  0A01               	xorlw	1	; case 5
  4935  0023FA  B4D8               	btfsc	status,2,c
  4936  0023FC  EF10  F010         	goto	l5446
  4937  002400  0A03               	xorlw	3	; case 6
  4938  002402  B4D8               	btfsc	status,2,c
  4939  002404  EF84  F010         	goto	l5452
  4940  002408  0A01               	xorlw	1	; case 7
  4941  00240A  B4D8               	btfsc	status,2,c
  4942  00240C  EFF8  F010         	goto	l5458
  4943  002410  0A0F               	xorlw	15	; case 8
  4944  002412  B4D8               	btfsc	status,2,c
  4945  002414  EF6C  F011         	goto	l5464
  4946  002418  EF0E  F012         	goto	l54
  4947  00241C                     l54:
  4948  00241C  0012               	return		;funcret
  4949  00241E                     __end_of_scanAdcConversion:
  4950                           	callstack 0
  4951                           
  4952 ;; *************** function _readAdcValue *****************
  4953 ;; Defined at:
  4954 ;;		line 34 in file "fs_adc.c"
  4955 ;; Parameters:    Size  Location     Type
  4956 ;;  adcChannel      1    wreg     unsigned char 
  4957 ;; Auto vars:     Size  Location     Type
  4958 ;;  adcChannel      1    4[COMRAM] unsigned char 
  4959 ;;  adcValue        2    5[COMRAM] unsigned short 
  4960 ;; Return value:  Size  Location     Type
  4961 ;;                  2    0[COMRAM] unsigned short 
  4962 ;; Registers used:
  4963 ;;		wreg, status,2, status,0
  4964 ;; Tracked objects:
  4965 ;;		On entry : 0/0
  4966 ;;		On exit  : 0/0
  4967 ;;		Unchanged: 0/0
  4968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4969 ;;      Params:         2       0       0       0       0       0       0
  4970 ;;      Locals:         3       0       0       0       0       0       0
  4971 ;;      Temps:          2       0       0       0       0       0       0
  4972 ;;      Totals:         7       0       0       0       0       0       0
  4973 ;;Total ram usage:        7 bytes
  4974 ;; Hardware stack levels used:    1
  4975 ;; Hardware stack levels required when called:    1
  4976 ;; This function calls:
  4977 ;;		Nothing
  4978 ;; This function is called by:
  4979 ;;		_scanAdcConversion
  4980 ;; This function uses a non-reentrant model
  4981 ;;
  4982                           
  4983                           	psect	text11
  4984  0058B6                     __ptext11:
  4985                           	callstack 0
  4986  0058B6                     _readAdcValue:
  4987                           	callstack 25
  4988                           
  4989                           ;incstack = 0
  4990                           ;readAdcValue@adcChannel stored from wreg
  4991  0058B6  6E05               	movwf	readAdcValue@adcChannel^0,c
  4992  0058B8                     
  4993                           ;fs_adc.c: 38:  ADCON0bits.CHS = adcChannel;
  4994  0058B8  C005  F003         	movff	readAdcValue@adcChannel,??_readAdcValue
  4995  0058BC  4603               	rlncf	??_readAdcValue^0,f,c
  4996  0058BE  4603               	rlncf	??_readAdcValue^0,f,c
  4997  0058C0  50C2               	movf	194,w,c	;volatile
  4998  0058C2  1803               	xorwf	??_readAdcValue^0,w,c
  4999  0058C4  0B83               	andlw	-125
  5000  0058C6  1803               	xorwf	??_readAdcValue^0,w,c
  5001  0058C8  6EC2               	movwf	194,c	;volatile
  5002  0058CA                     
  5003                           ;fs_adc.c: 39:  ADCON0bits.ADON = 1;
  5004  0058CA  80C2               	bsf	194,0,c	;volatile
  5005  0058CC                     
  5006                           ;fs_adc.c: 40:  ADCON0bits.GO_nDONE = 1;
  5007  0058CC  82C2               	bsf	194,1,c	;volatile
  5008  0058CE                     l35:
  5009  0058CE  B2C2               	btfsc	194,1,c	;volatile
  5010  0058D0  EF6C  F02C         	goto	u6281
  5011  0058D4  EF6E  F02C         	goto	u6280
  5012  0058D8                     u6281:
  5013  0058D8  EF67  F02C         	goto	l35
  5014  0058DC                     u6280:
  5015  0058DC                     
  5016                           ;fs_adc.c: 42:  adcValue = (uint16_t)((ADRESH << 8) + ADRESL);
  5017  0058DC  50C4               	movf	196,w,c	;volatile
  5018  0058DE  6E04               	movwf	(??_readAdcValue+1)^0,c
  5019  0058E0  6A03               	clrf	??_readAdcValue^0,c
  5020  0058E2  50C3               	movf	195,w,c	;volatile
  5021  0058E4  2403               	addwf	??_readAdcValue^0,w,c
  5022  0058E6  6E06               	movwf	readAdcValue@adcValue^0,c
  5023  0058E8  0E00               	movlw	0
  5024  0058EA  2004               	addwfc	(??_readAdcValue+1)^0,w,c
  5025  0058EC  6E07               	movwf	(readAdcValue@adcValue+1)^0,c
  5026  0058EE                     
  5027                           ;fs_adc.c: 43:     return adcValue;
  5028  0058EE  C006  F001         	movff	readAdcValue@adcValue,?_readAdcValue
  5029  0058F2  C007  F002         	movff	readAdcValue@adcValue+1,?_readAdcValue+1
  5030  0058F6  0012               	return		;funcret
  5031  0058F8                     __end_of_readAdcValue:
  5032                           	callstack 0
  5033                           
  5034 ;; *************** function _calculatedAverageValue *****************
  5035 ;; Defined at:
  5036 ;;		line 154 in file "fs_adc.c"
  5037 ;; Parameters:    Size  Location     Type
  5038 ;;		None
  5039 ;; Auto vars:     Size  Location     Type
  5040 ;;		None
  5041 ;; Return value:  Size  Location     Type
  5042 ;;                  1    wreg      void 
  5043 ;; Registers used:
  5044 ;;		wreg, status,2, status,0, cstack
  5045 ;; Tracked objects:
  5046 ;;		On entry : 0/0
  5047 ;;		On exit  : 0/0
  5048 ;;		Unchanged: 0/0
  5049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5050 ;;      Params:         0       0       0       0       0       0       0
  5051 ;;      Locals:         0       0       0       0       0       0       0
  5052 ;;      Temps:         24       0       0       0       0       0       0
  5053 ;;      Totals:        24       0       0       0       0       0       0
  5054 ;;Total ram usage:       24 bytes
  5055 ;; Hardware stack levels used:    1
  5056 ;; Hardware stack levels required when called:    2
  5057 ;; This function calls:
  5058 ;;		___lldiv
  5059 ;;		___lmul
  5060 ;;		___xxtofl
  5061 ;; This function is called by:
  5062 ;;		_startMotor
  5063 ;; This function uses a non-reentrant model
  5064 ;;
  5065                           
  5066                           	psect	text12
  5067  0036D8                     __ptext12:
  5068                           	callstack 0
  5069  0036D8                     _calculatedAverageValue:
  5070                           	callstack 25
  5071  0036D8                     
  5072                           ;fs_adc.c: 156:     driver_limit.pay = 0;
  5073  0036D8  0E00               	movlw	0
  5074  0036DA  0101               	movlb	1	; () banked
  5075  0036DC  6F73               	movwf	_driver_limit& (0+255),b
  5076  0036DE  0E00               	movlw	0
  5077  0036E0  6F74               	movwf	(_driver_limit+1)& (0+255),b
  5078  0036E2  0E00               	movlw	0
  5079  0036E4  6F75               	movwf	(_driver_limit+2)& (0+255),b
  5080  0036E6  0E00               	movlw	0
  5081  0036E8  6F76               	movwf	(_driver_limit+3)& (0+255),b
  5082                           
  5083                           ;fs_adc.c: 157:     driver_limit.payda = 0;
  5084  0036EA  0E00               	movlw	0
  5085  0036EC  6F77               	movwf	(_driver_limit+4)& (0+255),b
  5086  0036EE  0E00               	movlw	0
  5087  0036F0  6F78               	movwf	(_driver_limit+5)& (0+255),b
  5088  0036F2  0E00               	movlw	0
  5089  0036F4  6F79               	movwf	(_driver_limit+6)& (0+255),b
  5090  0036F6  0E00               	movlw	0
  5091  0036F8  6F7A               	movwf	(_driver_limit+7)& (0+255),b
  5092                           
  5093                           ;fs_adc.c: 158:     driver_limit.ortalama = 0;
  5094  0036FA  0E00               	movlw	0
  5095  0036FC  6F7B               	movwf	(_driver_limit+8)& (0+255),b
  5096  0036FE  0E00               	movlw	0
  5097  003700  6F7C               	movwf	(_driver_limit+9)& (0+255),b
  5098  003702  0E00               	movlw	0
  5099  003704  6F7D               	movwf	(_driver_limit+10)& (0+255),b
  5100  003706  0E00               	movlw	0
  5101  003708  6F7E               	movwf	(_driver_limit+11)& (0+255),b
  5102  00370A                     
  5103                           ; BSR set to: 1
  5104                           ;fs_adc.c: 161:    driver_limit.pay =(uint32_t) ( (convert_data.convert_channel_0 *1) +
  5105  00370A  C10C  F001         	movff	_convert_data+12,___lmul@multiplier
  5106  00370E  C10D  F002         	movff	_convert_data+13,___lmul@multiplier+1
  5107  003712  C10E  F003         	movff	_convert_data+14,___lmul@multiplier+2
  5108  003716  C10F  F004         	movff	_convert_data+15,___lmul@multiplier+3
  5109  00371A  0EB8               	movlw	184
  5110  00371C  6E05               	movwf	___lmul@multiplicand^0,c
  5111  00371E  0E0B               	movlw	11
  5112  003720  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5113  003722  0E00               	movlw	0
  5114  003724  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5115  003726  0E00               	movlw	0
  5116  003728  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5117  00372A  EC72  F02A         	call	___lmul	;wreg free
  5118  00372E  C001  F01C         	movff	?___lmul,??_calculatedAverageValue
  5119  003732  C002  F01D         	movff	?___lmul+1,??_calculatedAverageValue+1
  5120  003736  C003  F01E         	movff	?___lmul+2,??_calculatedAverageValue+2
  5121  00373A  C004  F01F         	movff	?___lmul+3,??_calculatedAverageValue+3
  5122  00373E  C108  F001         	movff	_convert_data+8,___lmul@multiplier
  5123  003742  C109  F002         	movff	_convert_data+9,___lmul@multiplier+1
  5124  003746  C10A  F003         	movff	_convert_data+10,___lmul@multiplier+2
  5125  00374A  C10B  F004         	movff	_convert_data+11,___lmul@multiplier+3
  5126  00374E  0ED0               	movlw	208
  5127  003750  6E05               	movwf	___lmul@multiplicand^0,c
  5128  003752  0E07               	movlw	7
  5129  003754  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5130  003756  0E00               	movlw	0
  5131  003758  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5132  00375A  0E00               	movlw	0
  5133  00375C  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5134  00375E  EC72  F02A         	call	___lmul	;wreg free
  5135  003762  5001               	movf	?___lmul^0,w,c
  5136  003764  241C               	addwf	??_calculatedAverageValue^0,w,c
  5137  003766  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5138  003768  5002               	movf	(?___lmul+1)^0,w,c
  5139  00376A  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5140  00376C  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5141  00376E  5003               	movf	(?___lmul+2)^0,w,c
  5142  003770  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5143  003772  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5144  003774  5004               	movf	(?___lmul+3)^0,w,c
  5145  003776  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5146  003778  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5147  00377A  C104  F001         	movff	_convert_data+4,___lmul@multiplier
  5148  00377E  C105  F002         	movff	_convert_data+5,___lmul@multiplier+1
  5149  003782  C106  F003         	movff	_convert_data+6,___lmul@multiplier+2
  5150  003786  C107  F004         	movff	_convert_data+7,___lmul@multiplier+3
  5151  00378A  0EE8               	movlw	232
  5152  00378C  6E05               	movwf	___lmul@multiplicand^0,c
  5153  00378E  0E03               	movlw	3
  5154  003790  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5155  003792  0E00               	movlw	0
  5156  003794  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5157  003796  0E00               	movlw	0
  5158  003798  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5159  00379A  EC72  F02A         	call	___lmul	;wreg free
  5160  00379E  5001               	movf	?___lmul^0,w,c
  5161  0037A0  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5162  0037A2  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5163  0037A4  5002               	movf	(?___lmul+1)^0,w,c
  5164  0037A6  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5165  0037A8  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5166  0037AA  5003               	movf	(?___lmul+2)^0,w,c
  5167  0037AC  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5168  0037AE  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5169  0037B0  5004               	movf	(?___lmul+3)^0,w,c
  5170  0037B2  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5171  0037B4  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5172  0037B6  0101               	movlb	1	; () banked
  5173  0037B8  5100               	movf	_convert_data& (0+255),w,b
  5174  0037BA  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5175  0037BC  6F73               	movwf	_driver_limit& (0+255),b
  5176  0037BE  5101               	movf	(_convert_data+1)& (0+255),w,b
  5177  0037C0  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5178  0037C2  6F74               	movwf	(_driver_limit+1)& (0+255),b
  5179  0037C4  5102               	movf	(_convert_data+2)& (0+255),w,b
  5180  0037C6  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5181  0037C8  6F75               	movwf	(_driver_limit+2)& (0+255),b
  5182  0037CA  5103               	movf	(_convert_data+3)& (0+255),w,b
  5183  0037CC  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5184  0037CE  6F76               	movwf	(_driver_limit+3)& (0+255),b
  5185  0037D0                     
  5186                           ; BSR set to: 1
  5187                           ;fs_adc.c: 166:    driver_limit.pay += (uint32_t)( (convert_data.convert_channel_4 * 400
      +                          0) +
  5188  0037D0  C11C  F001         	movff	_convert_data+28,___lmul@multiplier
  5189  0037D4  C11D  F002         	movff	_convert_data+29,___lmul@multiplier+1
  5190  0037D8  C11E  F003         	movff	_convert_data+30,___lmul@multiplier+2
  5191  0037DC  C11F  F004         	movff	_convert_data+31,___lmul@multiplier+3
  5192  0037E0  0E58               	movlw	88
  5193  0037E2  6E05               	movwf	___lmul@multiplicand^0,c
  5194  0037E4  0E1B               	movlw	27
  5195  0037E6  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5196  0037E8  0E00               	movlw	0
  5197  0037EA  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5198  0037EC  0E00               	movlw	0
  5199  0037EE  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5200  0037F0  EC72  F02A         	call	___lmul	;wreg free
  5201  0037F4  C001  F01C         	movff	?___lmul,??_calculatedAverageValue
  5202  0037F8  C002  F01D         	movff	?___lmul+1,??_calculatedAverageValue+1
  5203  0037FC  C003  F01E         	movff	?___lmul+2,??_calculatedAverageValue+2
  5204  003800  C004  F01F         	movff	?___lmul+3,??_calculatedAverageValue+3
  5205  003804  C118  F001         	movff	_convert_data+24,___lmul@multiplier
  5206  003808  C119  F002         	movff	_convert_data+25,___lmul@multiplier+1
  5207  00380C  C11A  F003         	movff	_convert_data+26,___lmul@multiplier+2
  5208  003810  C11B  F004         	movff	_convert_data+27,___lmul@multiplier+3
  5209  003814  0E70               	movlw	112
  5210  003816  6E05               	movwf	___lmul@multiplicand^0,c
  5211  003818  0E17               	movlw	23
  5212  00381A  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5213  00381C  0E00               	movlw	0
  5214  00381E  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5215  003820  0E00               	movlw	0
  5216  003822  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5217  003824  EC72  F02A         	call	___lmul	;wreg free
  5218  003828  5001               	movf	?___lmul^0,w,c
  5219  00382A  241C               	addwf	??_calculatedAverageValue^0,w,c
  5220  00382C  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5221  00382E  5002               	movf	(?___lmul+1)^0,w,c
  5222  003830  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5223  003832  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5224  003834  5003               	movf	(?___lmul+2)^0,w,c
  5225  003836  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5226  003838  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5227  00383A  5004               	movf	(?___lmul+3)^0,w,c
  5228  00383C  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5229  00383E  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5230  003840  C114  F001         	movff	_convert_data+20,___lmul@multiplier
  5231  003844  C115  F002         	movff	_convert_data+21,___lmul@multiplier+1
  5232  003848  C116  F003         	movff	_convert_data+22,___lmul@multiplier+2
  5233  00384C  C117  F004         	movff	_convert_data+23,___lmul@multiplier+3
  5234  003850  0E88               	movlw	136
  5235  003852  6E05               	movwf	___lmul@multiplicand^0,c
  5236  003854  0E13               	movlw	19
  5237  003856  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5238  003858  0E00               	movlw	0
  5239  00385A  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5240  00385C  0E00               	movlw	0
  5241  00385E  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5242  003860  EC72  F02A         	call	___lmul	;wreg free
  5243  003864  5001               	movf	?___lmul^0,w,c
  5244  003866  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5245  003868  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5246  00386A  5002               	movf	(?___lmul+1)^0,w,c
  5247  00386C  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5248  00386E  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5249  003870  5003               	movf	(?___lmul+2)^0,w,c
  5250  003872  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5251  003874  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5252  003876  5004               	movf	(?___lmul+3)^0,w,c
  5253  003878  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5254  00387A  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5255  00387C  C110  F001         	movff	_convert_data+16,___lmul@multiplier
  5256  003880  C111  F002         	movff	_convert_data+17,___lmul@multiplier+1
  5257  003884  C112  F003         	movff	_convert_data+18,___lmul@multiplier+2
  5258  003888  C113  F004         	movff	_convert_data+19,___lmul@multiplier+3
  5259  00388C  0EA0               	movlw	160
  5260  00388E  6E05               	movwf	___lmul@multiplicand^0,c
  5261  003890  0E0F               	movlw	15
  5262  003892  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5263  003894  0E00               	movlw	0
  5264  003896  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5265  003898  0E00               	movlw	0
  5266  00389A  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5267  00389C  EC72  F02A         	call	___lmul	;wreg free
  5268  0038A0  5001               	movf	?___lmul^0,w,c
  5269  0038A2  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5270  0038A4  6E28               	movwf	(??_calculatedAverageValue+12)^0,c
  5271  0038A6  5002               	movf	(?___lmul+1)^0,w,c
  5272  0038A8  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5273  0038AA  6E29               	movwf	(??_calculatedAverageValue+13)^0,c
  5274  0038AC  5003               	movf	(?___lmul+2)^0,w,c
  5275  0038AE  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5276  0038B0  6E2A               	movwf	(??_calculatedAverageValue+14)^0,c
  5277  0038B2  5004               	movf	(?___lmul+3)^0,w,c
  5278  0038B4  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5279  0038B6  6E2B               	movwf	(??_calculatedAverageValue+15)^0,c
  5280  0038B8  5028               	movf	(??_calculatedAverageValue+12)^0,w,c
  5281  0038BA  0101               	movlb	1	; () banked
  5282  0038BC  2773               	addwf	_driver_limit& (0+255),f,b
  5283  0038BE  5029               	movf	(??_calculatedAverageValue+13)^0,w,c
  5284  0038C0  2374               	addwfc	(_driver_limit+1)& (0+255),f,b
  5285  0038C2  502A               	movf	(??_calculatedAverageValue+14)^0,w,c
  5286  0038C4  2375               	addwfc	(_driver_limit+2)& (0+255),f,b
  5287  0038C6  502B               	movf	(??_calculatedAverageValue+15)^0,w,c
  5288  0038C8  2376               	addwfc	(_driver_limit+3)& (0+255),f,b
  5289  0038CA                     
  5290                           ; BSR set to: 1
  5291                           ;fs_adc.c: 171:     driver_limit.payda = (uint32_t) (convert_data.convert_channel_0 + co
      +                          nvert_data.convert_channel_1 +
  5292  0038CA  5108               	movf	(_convert_data+8)& (0+255),w,b
  5293  0038CC  2504               	addwf	(_convert_data+4)& (0+255),w,b
  5294  0038CE  6E1C               	movwf	??_calculatedAverageValue^0,c
  5295  0038D0  5109               	movf	(_convert_data+9)& (0+255),w,b
  5296  0038D2  2105               	addwfc	(_convert_data+5)& (0+255),w,b
  5297  0038D4  6E1D               	movwf	(??_calculatedAverageValue+1)^0,c
  5298  0038D6  510A               	movf	(_convert_data+10)& (0+255),w,b
  5299  0038D8  2106               	addwfc	(_convert_data+6)& (0+255),w,b
  5300  0038DA  6E1E               	movwf	(??_calculatedAverageValue+2)^0,c
  5301  0038DC  510B               	movf	(_convert_data+11)& (0+255),w,b
  5302  0038DE  2107               	addwfc	(_convert_data+7)& (0+255),w,b
  5303  0038E0  6E1F               	movwf	(??_calculatedAverageValue+3)^0,c
  5304  0038E2  510C               	movf	(_convert_data+12)& (0+255),w,b
  5305  0038E4  241C               	addwf	??_calculatedAverageValue^0,w,c
  5306  0038E6  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5307  0038E8  510D               	movf	(_convert_data+13)& (0+255),w,b
  5308  0038EA  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5309  0038EC  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5310  0038EE  510E               	movf	(_convert_data+14)& (0+255),w,b
  5311  0038F0  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5312  0038F2  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5313  0038F4  510F               	movf	(_convert_data+15)& (0+255),w,b
  5314  0038F6  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5315  0038F8  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5316  0038FA  5110               	movf	(_convert_data+16)& (0+255),w,b
  5317  0038FC  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5318  0038FE  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5319  003900  5111               	movf	(_convert_data+17)& (0+255),w,b
  5320  003902  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5321  003904  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5322  003906  5112               	movf	(_convert_data+18)& (0+255),w,b
  5323  003908  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5324  00390A  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5325  00390C  5113               	movf	(_convert_data+19)& (0+255),w,b
  5326  00390E  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5327  003910  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5328  003912  5114               	movf	(_convert_data+20)& (0+255),w,b
  5329  003914  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5330  003916  6E28               	movwf	(??_calculatedAverageValue+12)^0,c
  5331  003918  5115               	movf	(_convert_data+21)& (0+255),w,b
  5332  00391A  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5333  00391C  6E29               	movwf	(??_calculatedAverageValue+13)^0,c
  5334  00391E  5116               	movf	(_convert_data+22)& (0+255),w,b
  5335  003920  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5336  003922  6E2A               	movwf	(??_calculatedAverageValue+14)^0,c
  5337  003924  5117               	movf	(_convert_data+23)& (0+255),w,b
  5338  003926  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5339  003928  6E2B               	movwf	(??_calculatedAverageValue+15)^0,c
  5340  00392A  5118               	movf	(_convert_data+24)& (0+255),w,b
  5341  00392C  2428               	addwf	(??_calculatedAverageValue+12)^0,w,c
  5342  00392E  6E2C               	movwf	(??_calculatedAverageValue+16)^0,c
  5343  003930  5119               	movf	(_convert_data+25)& (0+255),w,b
  5344  003932  2029               	addwfc	(??_calculatedAverageValue+13)^0,w,c
  5345  003934  6E2D               	movwf	(??_calculatedAverageValue+17)^0,c
  5346  003936  511A               	movf	(_convert_data+26)& (0+255),w,b
  5347  003938  202A               	addwfc	(??_calculatedAverageValue+14)^0,w,c
  5348  00393A  6E2E               	movwf	(??_calculatedAverageValue+18)^0,c
  5349  00393C  511B               	movf	(_convert_data+27)& (0+255),w,b
  5350  00393E  202B               	addwfc	(??_calculatedAverageValue+15)^0,w,c
  5351  003940  6E2F               	movwf	(??_calculatedAverageValue+19)^0,c
  5352  003942  511C               	movf	(_convert_data+28)& (0+255),w,b
  5353  003944  242C               	addwf	(??_calculatedAverageValue+16)^0,w,c
  5354  003946  6E30               	movwf	(??_calculatedAverageValue+20)^0,c
  5355  003948  511D               	movf	(_convert_data+29)& (0+255),w,b
  5356  00394A  202D               	addwfc	(??_calculatedAverageValue+17)^0,w,c
  5357  00394C  6E31               	movwf	(??_calculatedAverageValue+21)^0,c
  5358  00394E  511E               	movf	(_convert_data+30)& (0+255),w,b
  5359  003950  202E               	addwfc	(??_calculatedAverageValue+18)^0,w,c
  5360  003952  6E32               	movwf	(??_calculatedAverageValue+22)^0,c
  5361  003954  511F               	movf	(_convert_data+31)& (0+255),w,b
  5362  003956  202F               	addwfc	(??_calculatedAverageValue+19)^0,w,c
  5363  003958  6E33               	movwf	(??_calculatedAverageValue+23)^0,c
  5364  00395A  5100               	movf	_convert_data& (0+255),w,b
  5365  00395C  2430               	addwf	(??_calculatedAverageValue+20)^0,w,c
  5366  00395E  6F77               	movwf	(_driver_limit+4)& (0+255),b
  5367  003960  5101               	movf	(_convert_data+1)& (0+255),w,b
  5368  003962  2031               	addwfc	(??_calculatedAverageValue+21)^0,w,c
  5369  003964  6F78               	movwf	(_driver_limit+5)& (0+255),b
  5370  003966  5102               	movf	(_convert_data+2)& (0+255),w,b
  5371  003968  2032               	addwfc	(??_calculatedAverageValue+22)^0,w,c
  5372  00396A  6F79               	movwf	(_driver_limit+6)& (0+255),b
  5373  00396C  5103               	movf	(_convert_data+3)& (0+255),w,b
  5374  00396E  2033               	addwfc	(??_calculatedAverageValue+23)^0,w,c
  5375  003970  6F7A               	movwf	(_driver_limit+7)& (0+255),b
  5376  003972                     
  5377                           ; BSR set to: 1
  5378                           ;fs_adc.c: 176:     driver_limit.ortalama = (float)(driver_limit.pay/driver_limit.payda)
      +                          ;
  5379  003972  C177  F005         	movff	_driver_limit+4,___lldiv@divisor
  5380  003976  C178  F006         	movff	_driver_limit+5,___lldiv@divisor+1
  5381  00397A  C179  F007         	movff	_driver_limit+6,___lldiv@divisor+2
  5382  00397E  C17A  F008         	movff	_driver_limit+7,___lldiv@divisor+3
  5383  003982  C173  F001         	movff	_driver_limit,___lldiv@dividend
  5384  003986  C174  F002         	movff	_driver_limit+1,___lldiv@dividend+1
  5385  00398A  C175  F003         	movff	_driver_limit+2,___lldiv@dividend+2
  5386  00398E  C176  F004         	movff	_driver_limit+3,___lldiv@dividend+3
  5387  003992  ECE7  F028         	call	___lldiv	;wreg free
  5388  003996  C001  F00E         	movff	?___lldiv,___xxtofl@val
  5389  00399A  C002  F00F         	movff	?___lldiv+1,___xxtofl@val+1
  5390  00399E  C003  F010         	movff	?___lldiv+2,___xxtofl@val+2
  5391  0039A2  C004  F011         	movff	?___lldiv+3,___xxtofl@val+3
  5392  0039A6  0E00               	movlw	0
  5393  0039A8  EC3A  F020         	call	___xxtofl
  5394  0039AC  C00E  F17B         	movff	?___xxtofl,_driver_limit+8
  5395  0039B0  C00F  F17C         	movff	?___xxtofl+1,_driver_limit+9
  5396  0039B4  C010  F17D         	movff	?___xxtofl+2,_driver_limit+10
  5397  0039B8  C011  F17E         	movff	?___xxtofl+3,_driver_limit+11
  5398  0039BC  0012               	return		;funcret
  5399  0039BE                     __end_of_calculatedAverageValue:
  5400                           	callstack 0
  5401                           
  5402 ;; *************** function ___lmul *****************
  5403 ;; Defined at:
  5404 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul32.c"
  5405 ;; Parameters:    Size  Location     Type
  5406 ;;  multiplier      4    0[COMRAM] unsigned long 
  5407 ;;  multiplicand    4    4[COMRAM] unsigned long 
  5408 ;; Auto vars:     Size  Location     Type
  5409 ;;  product         4    8[COMRAM] unsigned long 
  5410 ;; Return value:  Size  Location     Type
  5411 ;;                  4    0[COMRAM] unsigned long 
  5412 ;; Registers used:
  5413 ;;		wreg, status,2, status,0
  5414 ;; Tracked objects:
  5415 ;;		On entry : 0/0
  5416 ;;		On exit  : 0/0
  5417 ;;		Unchanged: 0/0
  5418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5419 ;;      Params:         8       0       0       0       0       0       0
  5420 ;;      Locals:         4       0       0       0       0       0       0
  5421 ;;      Temps:          0       0       0       0       0       0       0
  5422 ;;      Totals:        12       0       0       0       0       0       0
  5423 ;;Total ram usage:       12 bytes
  5424 ;; Hardware stack levels used:    1
  5425 ;; Hardware stack levels required when called:    1
  5426 ;; This function calls:
  5427 ;;		Nothing
  5428 ;; This function is called by:
  5429 ;;		_calculatedAverageValue
  5430 ;; This function uses a non-reentrant model
  5431 ;;
  5432                           
  5433                           	psect	text13
  5434  0054E4                     __ptext13:
  5435                           	callstack 0
  5436  0054E4                     ___lmul:
  5437                           	callstack 25
  5438  0054E4  0E00               	movlw	0
  5439  0054E6  6E09               	movwf	___lmul@product^0,c
  5440  0054E8  0E00               	movlw	0
  5441  0054EA  6E0A               	movwf	(___lmul@product+1)^0,c
  5442  0054EC  0E00               	movlw	0
  5443  0054EE  6E0B               	movwf	(___lmul@product+2)^0,c
  5444  0054F0  0E00               	movlw	0
  5445  0054F2  6E0C               	movwf	(___lmul@product+3)^0,c
  5446  0054F4                     l5224:
  5447  0054F4  A001               	btfss	___lmul@multiplier^0,0,c
  5448  0054F6  EF7F  F02A         	goto	u6331
  5449  0054FA  EF81  F02A         	goto	u6330
  5450  0054FE                     u6331:
  5451  0054FE  EF89  F02A         	goto	l5228
  5452  005502                     u6330:
  5453  005502  5005               	movf	___lmul@multiplicand^0,w,c
  5454  005504  2609               	addwf	___lmul@product^0,f,c
  5455  005506  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  5456  005508  220A               	addwfc	(___lmul@product+1)^0,f,c
  5457  00550A  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  5458  00550C  220B               	addwfc	(___lmul@product+2)^0,f,c
  5459  00550E  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  5460  005510  220C               	addwfc	(___lmul@product+3)^0,f,c
  5461  005512                     l5228:
  5462  005512  90D8               	bcf	status,0,c
  5463  005514  3605               	rlcf	___lmul@multiplicand^0,f,c
  5464  005516  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  5465  005518  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  5466  00551A  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  5467  00551C  90D8               	bcf	status,0,c
  5468  00551E  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  5469  005520  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  5470  005522  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  5471  005524  3201               	rrcf	___lmul@multiplier^0,f,c
  5472  005526  5001               	movf	___lmul@multiplier^0,w,c
  5473  005528  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  5474  00552A  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  5475  00552C  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  5476  00552E  A4D8               	btfss	status,2,c
  5477  005530  EF9C  F02A         	goto	u6341
  5478  005534  EF9E  F02A         	goto	u6340
  5479  005538                     u6341:
  5480  005538  EF7A  F02A         	goto	l5224
  5481  00553C                     u6340:
  5482  00553C  C009  F001         	movff	___lmul@product,?___lmul
  5483  005540  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  5484  005544  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  5485  005548  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  5486  00554C  0012               	return		;funcret
  5487  00554E                     __end_of___lmul:
  5488                           	callstack 0
  5489                           
  5490 ;; *************** function ___lldiv *****************
  5491 ;; Defined at:
  5492 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__lldiv.c"
  5493 ;; Parameters:    Size  Location     Type
  5494 ;;  dividend        4    0[COMRAM] unsigned long 
  5495 ;;  divisor         4    4[COMRAM] unsigned long 
  5496 ;; Auto vars:     Size  Location     Type
  5497 ;;  quotient        4    8[COMRAM] unsigned long 
  5498 ;;  counter         1   12[COMRAM] unsigned char 
  5499 ;; Return value:  Size  Location     Type
  5500 ;;                  4    0[COMRAM] unsigned long 
  5501 ;; Registers used:
  5502 ;;		wreg, status,2, status,0
  5503 ;; Tracked objects:
  5504 ;;		On entry : 0/0
  5505 ;;		On exit  : 0/0
  5506 ;;		Unchanged: 0/0
  5507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5508 ;;      Params:         8       0       0       0       0       0       0
  5509 ;;      Locals:         5       0       0       0       0       0       0
  5510 ;;      Temps:          0       0       0       0       0       0       0
  5511 ;;      Totals:        13       0       0       0       0       0       0
  5512 ;;Total ram usage:       13 bytes
  5513 ;; Hardware stack levels used:    1
  5514 ;; Hardware stack levels required when called:    1
  5515 ;; This function calls:
  5516 ;;		Nothing
  5517 ;; This function is called by:
  5518 ;;		_calculatedAverageValue
  5519 ;; This function uses a non-reentrant model
  5520 ;;
  5521                           
  5522                           	psect	text14
  5523  0051CE                     __ptext14:
  5524                           	callstack 0
  5525  0051CE                     ___lldiv:
  5526                           	callstack 25
  5527  0051CE  0E00               	movlw	0
  5528  0051D0  6E09               	movwf	___lldiv@quotient^0,c
  5529  0051D2  0E00               	movlw	0
  5530  0051D4  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  5531  0051D6  0E00               	movlw	0
  5532  0051D8  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  5533  0051DA  0E00               	movlw	0
  5534  0051DC  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  5535  0051DE  5005               	movf	___lldiv@divisor^0,w,c
  5536  0051E0  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  5537  0051E2  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  5538  0051E4  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  5539  0051E6  B4D8               	btfsc	status,2,c
  5540  0051E8  EFF8  F028         	goto	u6351
  5541  0051EC  EFFA  F028         	goto	u6350
  5542  0051F0                     u6351:
  5543  0051F0  EF30  F029         	goto	l514
  5544  0051F4                     u6350:
  5545  0051F4  0E01               	movlw	1
  5546  0051F6  6E0D               	movwf	___lldiv@counter^0,c
  5547  0051F8  EF04  F029         	goto	l5240
  5548  0051FC                     l5238:
  5549  0051FC  90D8               	bcf	status,0,c
  5550  0051FE  3605               	rlcf	___lldiv@divisor^0,f,c
  5551  005200  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  5552  005202  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  5553  005204  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  5554  005206  2A0D               	incf	___lldiv@counter^0,f,c
  5555  005208                     l5240:
  5556  005208  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  5557  00520A  EF09  F029         	goto	u6361
  5558  00520E  EF0B  F029         	goto	u6360
  5559  005212                     u6361:
  5560  005212  EFFE  F028         	goto	l5238
  5561  005216                     u6360:
  5562  005216                     l5242:
  5563  005216  90D8               	bcf	status,0,c
  5564  005218  3609               	rlcf	___lldiv@quotient^0,f,c
  5565  00521A  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  5566  00521C  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  5567  00521E  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  5568  005220  5005               	movf	___lldiv@divisor^0,w,c
  5569  005222  5C01               	subwf	___lldiv@dividend^0,w,c
  5570  005224  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5571  005226  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  5572  005228  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5573  00522A  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  5574  00522C  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5575  00522E  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  5576  005230  A0D8               	btfss	status,0,c
  5577  005232  EF1D  F029         	goto	u6371
  5578  005236  EF1F  F029         	goto	u6370
  5579  00523A                     u6371:
  5580  00523A  EF28  F029         	goto	l5250
  5581  00523E                     u6370:
  5582  00523E  5005               	movf	___lldiv@divisor^0,w,c
  5583  005240  5E01               	subwf	___lldiv@dividend^0,f,c
  5584  005242  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5585  005244  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  5586  005246  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5587  005248  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  5588  00524A  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5589  00524C  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  5590  00524E  8009               	bsf	___lldiv@quotient^0,0,c
  5591  005250                     l5250:
  5592  005250  90D8               	bcf	status,0,c
  5593  005252  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  5594  005254  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  5595  005256  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  5596  005258  3205               	rrcf	___lldiv@divisor^0,f,c
  5597  00525A  2E0D               	decfsz	___lldiv@counter^0,f,c
  5598  00525C  EF0B  F029         	goto	l5242
  5599  005260                     l514:
  5600  005260  C009  F001         	movff	___lldiv@quotient,?___lldiv
  5601  005264  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  5602  005268  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  5603  00526C  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  5604  005270  0012               	return		;funcret
  5605  005272                     __end_of___lldiv:
  5606                           	callstack 0
  5607                           
  5608 ;; *************** function _PWM2_setDC *****************
  5609 ;; Defined at:
  5610 ;;		line 59 in file "fs_pwm.c"
  5611 ;; Parameters:    Size  Location     Type
  5612 ;;  dutycycle       2   87[COMRAM] short 
  5613 ;; Auto vars:     Size  Location     Type
  5614 ;;  duty            2   91[COMRAM] unsigned short 
  5615 ;; Return value:  Size  Location     Type
  5616 ;;                  1    wreg      void 
  5617 ;; Registers used:
  5618 ;;		wreg, status,2, status,0, cstack
  5619 ;; Tracked objects:
  5620 ;;		On entry : 0/0
  5621 ;;		On exit  : 0/0
  5622 ;;		Unchanged: 0/0
  5623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5624 ;;      Params:         2       0       0       0       0       0       0
  5625 ;;      Locals:         2       0       0       0       0       0       0
  5626 ;;      Temps:          2       0       0       0       0       0       0
  5627 ;;      Totals:         6       0       0       0       0       0       0
  5628 ;;Total ram usage:        6 bytes
  5629 ;; Hardware stack levels used:    1
  5630 ;; Hardware stack levels required when called:    2
  5631 ;; This function calls:
  5632 ;;		___fltol
  5633 ;;		___xxtofl
  5634 ;;		_fabsf
  5635 ;; This function is called by:
  5636 ;;		_main
  5637 ;;		_stopMotor
  5638 ;;		_startMotor
  5639 ;; This function uses a non-reentrant model
  5640 ;;
  5641                           
  5642                           	psect	text15
  5643  005386                     __ptext15:
  5644                           	callstack 0
  5645  005386                     _PWM2_setDC:
  5646                           	callstack 25
  5647  005386                     
  5648                           ;fs_pwm.c: 63:     if (dutycycle <= 1023)
  5649  005386  BE59               	btfsc	(PWM2_setDC@dutycycle+1)^0,7,c
  5650  005388  EFCF  F029         	goto	u6700
  5651  00538C  0E04               	movlw	4
  5652  00538E  5C59               	subwf	(PWM2_setDC@dutycycle+1)^0,w,c
  5653  005390  B0D8               	btfsc	status,0,c
  5654  005392  EFCD  F029         	goto	u6701
  5655  005396  EFCF  F029         	goto	u6700
  5656  00539A                     u6701:
  5657  00539A  EFFF  F029         	goto	l411
  5658  00539E                     u6700:
  5659  00539E                     
  5660                           ;fs_pwm.c: 64:     {;fs_pwm.c: 65:         duty = (uint16_t) fabsf(dutycycle);
  5661  00539E  C058  F00E         	movff	PWM2_setDC@dutycycle,___xxtofl@val
  5662  0053A2  C059  F00F         	movff	PWM2_setDC@dutycycle+1,___xxtofl@val+1
  5663  0053A6  0E00               	movlw	0
  5664  0053A8  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  5665  0053AA  0EFF               	movlw	-1
  5666  0053AC  6E10               	movwf	(___xxtofl@val+2)^0,c
  5667  0053AE  6E11               	movwf	(___xxtofl@val+3)^0,c
  5668  0053B0  0E01               	movlw	1
  5669  0053B2  EC3A  F020         	call	___xxtofl
  5670  0053B6  C00E  F01C         	movff	?___xxtofl,fabsf@x
  5671  0053BA  C00F  F01D         	movff	?___xxtofl+1,fabsf@x+1
  5672  0053BE  C010  F01E         	movff	?___xxtofl+2,fabsf@x+2
  5673  0053C2  C011  F01F         	movff	?___xxtofl+3,fabsf@x+3
  5674  0053C6  EC7E  F02D         	call	_fabsf	;wreg free
  5675  0053CA  C01C  F04E         	movff	?_fabsf,___fltol@f1
  5676  0053CE  C01D  F04F         	movff	?_fabsf+1,___fltol@f1+1
  5677  0053D2  C01E  F050         	movff	?_fabsf+2,___fltol@f1+2
  5678  0053D6  C01F  F051         	movff	?_fabsf+3,___fltol@f1+3
  5679  0053DA  ECA6  F024         	call	___fltol	;wreg free
  5680  0053DE  C04E  F05C         	movff	?___fltol,PWM2_setDC@duty
  5681  0053E2  C04F  F05D         	movff	?___fltol+1,PWM2_setDC@duty+1
  5682  0053E6                     
  5683                           ;fs_pwm.c: 66:         CCPR2L = duty>>2;
  5684  0053E6  C05C  F05A         	movff	PWM2_setDC@duty,??_PWM2_setDC
  5685  0053EA  C05D  F05B         	movff	PWM2_setDC@duty+1,??_PWM2_setDC+1
  5686  0053EE  90D8               	bcf	status,0,c
  5687  0053F0  325B               	rrcf	(??_PWM2_setDC+1)^0,f,c
  5688  0053F2  325A               	rrcf	??_PWM2_setDC^0,f,c
  5689  0053F4  90D8               	bcf	status,0,c
  5690  0053F6  325B               	rrcf	(??_PWM2_setDC+1)^0,f,c
  5691  0053F8  325A               	rrcf	??_PWM2_setDC^0,f,c
  5692  0053FA  505A               	movf	??_PWM2_setDC^0,w,c
  5693  0053FC  6E67               	movwf	103,c	;volatile
  5694  0053FE                     l411:
  5695  0053FE  0012               	return		;funcret
  5696  005400                     __end_of_PWM2_setDC:
  5697                           	callstack 0
  5698                           
  5699 ;; *************** function _PWM1_setDC *****************
  5700 ;; Defined at:
  5701 ;;		line 43 in file "fs_pwm.c"
  5702 ;; Parameters:    Size  Location     Type
  5703 ;;  dutycycle       2   87[COMRAM] short 
  5704 ;; Auto vars:     Size  Location     Type
  5705 ;;  duty            2   91[COMRAM] unsigned short 
  5706 ;; Return value:  Size  Location     Type
  5707 ;;                  1    wreg      void 
  5708 ;; Registers used:
  5709 ;;		wreg, status,2, status,0, cstack
  5710 ;; Tracked objects:
  5711 ;;		On entry : 0/0
  5712 ;;		On exit  : 0/0
  5713 ;;		Unchanged: 0/0
  5714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5715 ;;      Params:         2       0       0       0       0       0       0
  5716 ;;      Locals:         2       0       0       0       0       0       0
  5717 ;;      Temps:          2       0       0       0       0       0       0
  5718 ;;      Totals:         6       0       0       0       0       0       0
  5719 ;;Total ram usage:        6 bytes
  5720 ;; Hardware stack levels used:    1
  5721 ;; Hardware stack levels required when called:    2
  5722 ;; This function calls:
  5723 ;;		___fltol
  5724 ;;		___xxtofl
  5725 ;;		_fabsf
  5726 ;; This function is called by:
  5727 ;;		_main
  5728 ;;		_stopMotor
  5729 ;;		_startMotor
  5730 ;; This function uses a non-reentrant model
  5731 ;;
  5732                           
  5733                           	psect	text16
  5734  005400                     __ptext16:
  5735                           	callstack 0
  5736  005400                     _PWM1_setDC:
  5737                           	callstack 25
  5738  005400                     
  5739                           ;fs_pwm.c: 47:     if (dutycycle <= 1023)
  5740  005400  BE59               	btfsc	(PWM1_setDC@dutycycle+1)^0,7,c
  5741  005402  EF0C  F02A         	goto	u6690
  5742  005406  0E04               	movlw	4
  5743  005408  5C59               	subwf	(PWM1_setDC@dutycycle+1)^0,w,c
  5744  00540A  B0D8               	btfsc	status,0,c
  5745  00540C  EF0A  F02A         	goto	u6691
  5746  005410  EF0C  F02A         	goto	u6690
  5747  005414                     u6691:
  5748  005414  EF3C  F02A         	goto	l407
  5749  005418                     u6690:
  5750  005418                     
  5751                           ;fs_pwm.c: 48:     {;fs_pwm.c: 49:         duty = (uint16_t) fabsf(dutycycle);
  5752  005418  C058  F00E         	movff	PWM1_setDC@dutycycle,___xxtofl@val
  5753  00541C  C059  F00F         	movff	PWM1_setDC@dutycycle+1,___xxtofl@val+1
  5754  005420  0E00               	movlw	0
  5755  005422  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  5756  005424  0EFF               	movlw	-1
  5757  005426  6E10               	movwf	(___xxtofl@val+2)^0,c
  5758  005428  6E11               	movwf	(___xxtofl@val+3)^0,c
  5759  00542A  0E01               	movlw	1
  5760  00542C  EC3A  F020         	call	___xxtofl
  5761  005430  C00E  F01C         	movff	?___xxtofl,fabsf@x
  5762  005434  C00F  F01D         	movff	?___xxtofl+1,fabsf@x+1
  5763  005438  C010  F01E         	movff	?___xxtofl+2,fabsf@x+2
  5764  00543C  C011  F01F         	movff	?___xxtofl+3,fabsf@x+3
  5765  005440  EC7E  F02D         	call	_fabsf	;wreg free
  5766  005444  C01C  F04E         	movff	?_fabsf,___fltol@f1
  5767  005448  C01D  F04F         	movff	?_fabsf+1,___fltol@f1+1
  5768  00544C  C01E  F050         	movff	?_fabsf+2,___fltol@f1+2
  5769  005450  C01F  F051         	movff	?_fabsf+3,___fltol@f1+3
  5770  005454  ECA6  F024         	call	___fltol	;wreg free
  5771  005458  C04E  F05C         	movff	?___fltol,PWM1_setDC@duty
  5772  00545C  C04F  F05D         	movff	?___fltol+1,PWM1_setDC@duty+1
  5773  005460                     
  5774                           ;fs_pwm.c: 50:         CCPR1L = duty>>2;
  5775  005460  C05C  F05A         	movff	PWM1_setDC@duty,??_PWM1_setDC
  5776  005464  C05D  F05B         	movff	PWM1_setDC@duty+1,??_PWM1_setDC+1
  5777  005468  90D8               	bcf	status,0,c
  5778  00546A  325B               	rrcf	(??_PWM1_setDC+1)^0,f,c
  5779  00546C  325A               	rrcf	??_PWM1_setDC^0,f,c
  5780  00546E  90D8               	bcf	status,0,c
  5781  005470  325B               	rrcf	(??_PWM1_setDC+1)^0,f,c
  5782  005472  325A               	rrcf	??_PWM1_setDC^0,f,c
  5783  005474  505A               	movf	??_PWM1_setDC^0,w,c
  5784  005476  6EBE               	movwf	190,c	;volatile
  5785  005478                     l407:
  5786  005478  0012               	return		;funcret
  5787  00547A                     __end_of_PWM1_setDC:
  5788                           	callstack 0
  5789                           
  5790 ;; *************** function _fabsf *****************
  5791 ;; Defined at:
  5792 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fabsf.c"
  5793 ;; Parameters:    Size  Location     Type
  5794 ;;  x               4   27[COMRAM] float 
  5795 ;; Auto vars:     Size  Location     Type
  5796 ;;  u               4   31[COMRAM] struct .
  5797 ;; Return value:  Size  Location     Type
  5798 ;;                  4   27[COMRAM] float 
  5799 ;; Registers used:
  5800 ;;		status,2, status,0
  5801 ;; Tracked objects:
  5802 ;;		On entry : 0/0
  5803 ;;		On exit  : 0/0
  5804 ;;		Unchanged: 0/0
  5805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5806 ;;      Params:         4       0       0       0       0       0       0
  5807 ;;      Locals:         4       0       0       0       0       0       0
  5808 ;;      Temps:          0       0       0       0       0       0       0
  5809 ;;      Totals:         8       0       0       0       0       0       0
  5810 ;;Total ram usage:        8 bytes
  5811 ;; Hardware stack levels used:    1
  5812 ;; Hardware stack levels required when called:    1
  5813 ;; This function calls:
  5814 ;;		Nothing
  5815 ;; This function is called by:
  5816 ;;		_PWM1_setDC
  5817 ;;		_PWM2_setDC
  5818 ;; This function uses a non-reentrant model
  5819 ;;
  5820                           
  5821                           	psect	text17
  5822  005AFC                     __ptext17:
  5823                           	callstack 0
  5824  005AFC                     _fabsf:
  5825                           	callstack 25
  5826  005AFC  C187  F020         	movff	fabsf@F463,fabsf@u
  5827  005B00  C188  F021         	movff	fabsf@F463+1,fabsf@u+1
  5828  005B04  C189  F022         	movff	fabsf@F463+2,fabsf@u+2
  5829  005B08  C18A  F023         	movff	fabsf@F463+3,fabsf@u+3
  5830  005B0C  C01C  F020         	movff	fabsf@x,fabsf@u
  5831  005B10  C01D  F021         	movff	fabsf@x+1,fabsf@u+1
  5832  005B14  C01E  F022         	movff	fabsf@x+2,fabsf@u+2
  5833  005B18  C01F  F023         	movff	fabsf@x+3,fabsf@u+3
  5834  005B1C  9E23               	bcf	(fabsf@u+3)^0,7,c
  5835  005B1E  C020  F01C         	movff	fabsf@u,?_fabsf
  5836  005B22  C021  F01D         	movff	fabsf@u+1,?_fabsf+1
  5837  005B26  C022  F01E         	movff	fabsf@u+2,?_fabsf+2
  5838  005B2A  C023  F01F         	movff	fabsf@u+3,?_fabsf+3
  5839  005B2E  0012               	return		;funcret
  5840  005B30                     __end_of_fabsf:
  5841                           	callstack 0
  5842                           
  5843 ;; *************** function ___xxtofl *****************
  5844 ;; Defined at:
  5845 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
  5846 ;; Parameters:    Size  Location     Type
  5847 ;;  sign            1    wreg     unsigned char 
  5848 ;;  val             4   13[COMRAM] long 
  5849 ;; Auto vars:     Size  Location     Type
  5850 ;;  sign            1   21[COMRAM] unsigned char 
  5851 ;;  arg             4   23[COMRAM] unsigned long 
  5852 ;;  exp             1   22[COMRAM] unsigned char 
  5853 ;; Return value:  Size  Location     Type
  5854 ;;                  4   13[COMRAM] unsigned char 
  5855 ;; Registers used:
  5856 ;;		wreg, status,2, status,0
  5857 ;; Tracked objects:
  5858 ;;		On entry : 0/0
  5859 ;;		On exit  : 0/0
  5860 ;;		Unchanged: 0/0
  5861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5862 ;;      Params:         4       0       0       0       0       0       0
  5863 ;;      Locals:         6       0       0       0       0       0       0
  5864 ;;      Temps:          4       0       0       0       0       0       0
  5865 ;;      Totals:        14       0       0       0       0       0       0
  5866 ;;Total ram usage:       14 bytes
  5867 ;; Hardware stack levels used:    1
  5868 ;; Hardware stack levels required when called:    1
  5869 ;; This function calls:
  5870 ;;		Nothing
  5871 ;; This function is called by:
  5872 ;;		_scanAdcConversion
  5873 ;;		_calculatedAverageValue
  5874 ;;		_PWM1_setDC
  5875 ;;		_PWM2_setDC
  5876 ;;		_speedControl
  5877 ;; This function uses a non-reentrant model
  5878 ;;
  5879                           
  5880                           	psect	text18
  5881  004074                     __ptext18:
  5882                           	callstack 0
  5883  004074                     ___xxtofl:
  5884                           	callstack 25
  5885                           
  5886                           ;incstack = 0
  5887                           ;___xxtofl@sign stored from wreg
  5888  004074  6E16               	movwf	___xxtofl@sign^0,c
  5889  004076  5016               	movf	___xxtofl@sign^0,w,c
  5890  004078  B4D8               	btfsc	status,2,c
  5891  00407A  EF41  F020         	goto	u6381
  5892  00407E  EF43  F020         	goto	u6380
  5893  004082                     u6381:
  5894  004082  EF65  F020         	goto	l1142
  5895  004086                     u6380:
  5896  004086  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
  5897  004088  EF4A  F020         	goto	u6390
  5898  00408C  EF48  F020         	goto	u6391
  5899  004090                     u6391:
  5900  004090  EF65  F020         	goto	l1142
  5901  004094                     u6390:
  5902  004094  C00E  F012         	movff	___xxtofl@val,??___xxtofl
  5903  004098  C00F  F013         	movff	___xxtofl@val+1,??___xxtofl+1
  5904  00409C  C010  F014         	movff	___xxtofl@val+2,??___xxtofl+2
  5905  0040A0  C011  F015         	movff	___xxtofl@val+3,??___xxtofl+3
  5906  0040A4  1E12               	comf	??___xxtofl^0,f,c
  5907  0040A6  1E13               	comf	(??___xxtofl+1)^0,f,c
  5908  0040A8  1E14               	comf	(??___xxtofl+2)^0,f,c
  5909  0040AA  1E15               	comf	(??___xxtofl+3)^0,f,c
  5910  0040AC  2A12               	incf	??___xxtofl^0,f,c
  5911  0040AE  0E00               	movlw	0
  5912  0040B0  2213               	addwfc	(??___xxtofl+1)^0,f,c
  5913  0040B2  2214               	addwfc	(??___xxtofl+2)^0,f,c
  5914  0040B4  2215               	addwfc	(??___xxtofl+3)^0,f,c
  5915  0040B6  C012  F018         	movff	??___xxtofl,___xxtofl@arg
  5916  0040BA  C013  F019         	movff	??___xxtofl+1,___xxtofl@arg+1
  5917  0040BE  C014  F01A         	movff	??___xxtofl+2,___xxtofl@arg+2
  5918  0040C2  C015  F01B         	movff	??___xxtofl+3,___xxtofl@arg+3
  5919  0040C6  EF6D  F020         	goto	l5260
  5920  0040CA                     l1142:
  5921  0040CA  C00E  F018         	movff	___xxtofl@val,___xxtofl@arg
  5922  0040CE  C00F  F019         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5923  0040D2  C010  F01A         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5924  0040D6  C011  F01B         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5925  0040DA                     l5260:
  5926  0040DA  500E               	movf	___xxtofl@val^0,w,c
  5927  0040DC  100F               	iorwf	(___xxtofl@val+1)^0,w,c
  5928  0040DE  1010               	iorwf	(___xxtofl@val+2)^0,w,c
  5929  0040E0  1011               	iorwf	(___xxtofl@val+3)^0,w,c
  5930  0040E2  A4D8               	btfss	status,2,c
  5931  0040E4  EF76  F020         	goto	u6401
  5932  0040E8  EF78  F020         	goto	u6400
  5933  0040EC                     u6401:
  5934  0040EC  EF82  F020         	goto	l5266
  5935  0040F0                     u6400:
  5936  0040F0  0E00               	movlw	0
  5937  0040F2  6E0E               	movwf	?___xxtofl^0,c
  5938  0040F4  0E00               	movlw	0
  5939  0040F6  6E0F               	movwf	(?___xxtofl+1)^0,c
  5940  0040F8  0E00               	movlw	0
  5941  0040FA  6E10               	movwf	(?___xxtofl+2)^0,c
  5942  0040FC  0E00               	movlw	0
  5943  0040FE  6E11               	movwf	(?___xxtofl+3)^0,c
  5944  004100  EF13  F021         	goto	l1145
  5945  004104                     l5266:
  5946  004104  0E96               	movlw	150
  5947  004106  6E17               	movwf	___xxtofl@exp^0,c
  5948  004108  EF8C  F020         	goto	l5270
  5949  00410C                     l5268:
  5950  00410C  2A17               	incf	___xxtofl@exp^0,f,c
  5951  00410E  90D8               	bcf	status,0,c
  5952  004110  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
  5953  004112  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
  5954  004114  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
  5955  004116  3218               	rrcf	___xxtofl@arg^0,f,c
  5956  004118                     l5270:
  5957  004118  0E00               	movlw	0
  5958  00411A  1418               	andwf	___xxtofl@arg^0,w,c
  5959  00411C  6E12               	movwf	??___xxtofl^0,c
  5960  00411E  0E00               	movlw	0
  5961  004120  1419               	andwf	(___xxtofl@arg+1)^0,w,c
  5962  004122  6E13               	movwf	(??___xxtofl+1)^0,c
  5963  004124  0E00               	movlw	0
  5964  004126  141A               	andwf	(___xxtofl@arg+2)^0,w,c
  5965  004128  6E14               	movwf	(??___xxtofl+2)^0,c
  5966  00412A  0EFE               	movlw	254
  5967  00412C  141B               	andwf	(___xxtofl@arg+3)^0,w,c
  5968  00412E  6E15               	movwf	(??___xxtofl+3)^0,c
  5969  004130  5012               	movf	??___xxtofl^0,w,c
  5970  004132  1013               	iorwf	(??___xxtofl+1)^0,w,c
  5971  004134  1014               	iorwf	(??___xxtofl+2)^0,w,c
  5972  004136  1015               	iorwf	(??___xxtofl+3)^0,w,c
  5973  004138  A4D8               	btfss	status,2,c
  5974  00413A  EFA1  F020         	goto	u6411
  5975  00413E  EFA3  F020         	goto	u6410
  5976  004142                     u6411:
  5977  004142  EF86  F020         	goto	l5268
  5978  004146                     u6410:
  5979  004146  EFB1  F020         	goto	l1149
  5980  00414A                     l5272:
  5981  00414A  2A17               	incf	___xxtofl@exp^0,f,c
  5982  00414C  0E01               	movlw	1
  5983  00414E  2618               	addwf	___xxtofl@arg^0,f,c
  5984  004150  0E00               	movlw	0
  5985  004152  2219               	addwfc	(___xxtofl@arg+1)^0,f,c
  5986  004154  221A               	addwfc	(___xxtofl@arg+2)^0,f,c
  5987  004156  221B               	addwfc	(___xxtofl@arg+3)^0,f,c
  5988  004158  90D8               	bcf	status,0,c
  5989  00415A  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
  5990  00415C  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
  5991  00415E  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
  5992  004160  3218               	rrcf	___xxtofl@arg^0,f,c
  5993  004162                     l1149:
  5994  004162  0E00               	movlw	0
  5995  004164  1418               	andwf	___xxtofl@arg^0,w,c
  5996  004166  6E12               	movwf	??___xxtofl^0,c
  5997  004168  0E00               	movlw	0
  5998  00416A  1419               	andwf	(___xxtofl@arg+1)^0,w,c
  5999  00416C  6E13               	movwf	(??___xxtofl+1)^0,c
  6000  00416E  0E00               	movlw	0
  6001  004170  141A               	andwf	(___xxtofl@arg+2)^0,w,c
  6002  004172  6E14               	movwf	(??___xxtofl+2)^0,c
  6003  004174  0EFF               	movlw	255
  6004  004176  141B               	andwf	(___xxtofl@arg+3)^0,w,c
  6005  004178  6E15               	movwf	(??___xxtofl+3)^0,c
  6006  00417A  5012               	movf	??___xxtofl^0,w,c
  6007  00417C  1013               	iorwf	(??___xxtofl+1)^0,w,c
  6008  00417E  1014               	iorwf	(??___xxtofl+2)^0,w,c
  6009  004180  1015               	iorwf	(??___xxtofl+3)^0,w,c
  6010  004182  A4D8               	btfss	status,2,c
  6011  004184  EFC6  F020         	goto	u6421
  6012  004188  EFC8  F020         	goto	u6420
  6013  00418C                     u6421:
  6014  00418C  EFA5  F020         	goto	l5272
  6015  004190                     u6420:
  6016  004190  EFD0  F020         	goto	l5280
  6017  004194                     l5278:
  6018  004194  0617               	decf	___xxtofl@exp^0,f,c
  6019  004196  90D8               	bcf	status,0,c
  6020  004198  3618               	rlcf	___xxtofl@arg^0,f,c
  6021  00419A  3619               	rlcf	(___xxtofl@arg+1)^0,f,c
  6022  00419C  361A               	rlcf	(___xxtofl@arg+2)^0,f,c
  6023  00419E  361B               	rlcf	(___xxtofl@arg+3)^0,f,c
  6024  0041A0                     l5280:
  6025  0041A0  BE1A               	btfsc	(___xxtofl@arg+2)^0,7,c
  6026  0041A2  EFD5  F020         	goto	u6431
  6027  0041A6  EFD7  F020         	goto	u6430
  6028  0041AA                     u6431:
  6029  0041AA  EFDF  F020         	goto	l1156
  6030  0041AE                     u6430:
  6031  0041AE  0E02               	movlw	2
  6032  0041B0  6017               	cpfslt	___xxtofl@exp^0,c
  6033  0041B2  EFDD  F020         	goto	u6441
  6034  0041B6  EFDF  F020         	goto	u6440
  6035  0041BA                     u6441:
  6036  0041BA  EFCA  F020         	goto	l5278
  6037  0041BE                     u6440:
  6038  0041BE                     l1156:
  6039  0041BE  B017               	btfsc	___xxtofl@exp^0,0,c
  6040  0041C0  EFE4  F020         	goto	u6451
  6041  0041C4  EFE6  F020         	goto	u6450
  6042  0041C8                     u6451:
  6043  0041C8  EFE7  F020         	goto	l5286
  6044  0041CC                     u6450:
  6045  0041CC  9E1A               	bcf	(___xxtofl@arg+2)^0,7,c
  6046  0041CE                     l5286:
  6047  0041CE  90D8               	bcf	status,0,c
  6048  0041D0  3217               	rrcf	___xxtofl@exp^0,f,c
  6049  0041D2  C017  F012         	movff	___xxtofl@exp,??___xxtofl
  6050  0041D6  6A13               	clrf	(??___xxtofl+1)^0,c
  6051  0041D8  6A14               	clrf	(??___xxtofl+2)^0,c
  6052  0041DA  6A15               	clrf	(??___xxtofl+3)^0,c
  6053  0041DC  C012  F015         	movff	??___xxtofl,??___xxtofl+3
  6054  0041E0  6A14               	clrf	(??___xxtofl+2)^0,c
  6055  0041E2  6A13               	clrf	(??___xxtofl+1)^0,c
  6056  0041E4  6A12               	clrf	??___xxtofl^0,c
  6057  0041E6  5012               	movf	??___xxtofl^0,w,c
  6058  0041E8  1218               	iorwf	___xxtofl@arg^0,f,c
  6059  0041EA  5013               	movf	(??___xxtofl+1)^0,w,c
  6060  0041EC  1219               	iorwf	(___xxtofl@arg+1)^0,f,c
  6061  0041EE  5014               	movf	(??___xxtofl+2)^0,w,c
  6062  0041F0  121A               	iorwf	(___xxtofl@arg+2)^0,f,c
  6063  0041F2  5015               	movf	(??___xxtofl+3)^0,w,c
  6064  0041F4  121B               	iorwf	(___xxtofl@arg+3)^0,f,c
  6065  0041F6  5016               	movf	___xxtofl@sign^0,w,c
  6066  0041F8  B4D8               	btfsc	status,2,c
  6067  0041FA  EF01  F021         	goto	u6461
  6068  0041FE  EF03  F021         	goto	u6460
  6069  004202                     u6461:
  6070  004202  EF0B  F021         	goto	l5296
  6071  004206                     u6460:
  6072  004206  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
  6073  004208  EF0A  F021         	goto	u6470
  6074  00420C  EF08  F021         	goto	u6471
  6075  004210                     u6471:
  6076  004210  EF0B  F021         	goto	l5296
  6077  004214                     u6470:
  6078  004214  8E1B               	bsf	(___xxtofl@arg+3)^0,7,c
  6079  004216                     l5296:
  6080  004216  C018  F00E         	movff	___xxtofl@arg,?___xxtofl
  6081  00421A  C019  F00F         	movff	___xxtofl@arg+1,?___xxtofl+1
  6082  00421E  C01A  F010         	movff	___xxtofl@arg+2,?___xxtofl+2
  6083  004222  C01B  F011         	movff	___xxtofl@arg+3,?___xxtofl+3
  6084  004226                     l1145:
  6085  004226  0012               	return		;funcret
  6086  004228                     __end_of___xxtofl:
  6087                           	callstack 0
  6088                           
  6089 ;; *************** function _sprintf *****************
  6090 ;; Defined at:
  6091 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  6092 ;; Parameters:    Size  Location     Type
  6093 ;;  s               2  111[BANK0 ] PTR unsigned char 
  6094 ;;		 -> stateMachine@textCursor2(16), 
  6095 ;;  fmt             2  113[BANK0 ] PTR const unsigned char 
  6096 ;;		 -> STR_16(13), STR_14(14), STR_12(16), STR_10(16), 
  6097 ;;		 -> STR_8(18), STR_6(18), STR_4(18), STR_2(15), 
  6098 ;; Auto vars:     Size  Location     Type
  6099 ;;  f               6  123[BANK0 ] struct _IO_FILE
  6100 ;;  ap              2  121[BANK0 ] PTR void [1]
  6101 ;;		 -> ?_sprintf(2), 
  6102 ;;  ret             2    0        int 
  6103 ;; Return value:  Size  Location     Type
  6104 ;;                  2  111[BANK0 ] int 
  6105 ;; Registers used:
  6106 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6107 ;; Tracked objects:
  6108 ;;		On entry : 0/0
  6109 ;;		On exit  : 0/0
  6110 ;;		Unchanged: 0/0
  6111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6112 ;;      Params:         0       8       0       0       0       0       0
  6113 ;;      Locals:         0      10       0       0       0       0       0
  6114 ;;      Temps:          0       0       0       0       0       0       0
  6115 ;;      Totals:         0      18       0       0       0       0       0
  6116 ;;Total ram usage:       18 bytes
  6117 ;; Hardware stack levels used:    1
  6118 ;; Hardware stack levels required when called:    8
  6119 ;; This function calls:
  6120 ;;		_vfprintf
  6121 ;; This function is called by:
  6122 ;;		_stateMachine
  6123 ;; This function uses a non-reentrant model
  6124 ;;
  6125                           
  6126                           	psect	text19
  6127  005788                     __ptext19:
  6128                           	callstack 0
  6129  005788                     _sprintf:
  6130                           	callstack 20
  6131  005788  0ED3               	movlw	low (?_sprintf+4)
  6132  00578A  0100               	movlb	0	; () banked
  6133  00578C  6FD9               	movwf	sprintf@ap& (0+255),b
  6134  00578E  0E00               	movlw	high (?_sprintf+4)
  6135  005790  6FDA               	movwf	(sprintf@ap+1)& (0+255),b
  6136  005792  C0CF  F0DB         	movff	sprintf@s,sprintf@f
  6137  005796  C0D0  F0DC         	movff	sprintf@s+1,sprintf@f+1
  6138  00579A                     
  6139                           ; BSR set to: 0
  6140  00579A  0E00               	movlw	0
  6141  00579C  6FDE               	movwf	(sprintf@f+3)& (0+255),b
  6142  00579E  0E00               	movlw	0
  6143  0057A0  6FDD               	movwf	(sprintf@f+2)& (0+255),b
  6144  0057A2                     
  6145                           ; BSR set to: 0
  6146  0057A2  0E00               	movlw	0
  6147  0057A4  6FE0               	movwf	(sprintf@f+5)& (0+255),b
  6148  0057A6  0E00               	movlw	0
  6149  0057A8  6FDF               	movwf	(sprintf@f+4)& (0+255),b
  6150  0057AA                     
  6151                           ; BSR set to: 0
  6152  0057AA  0EDB               	movlw	low sprintf@f
  6153  0057AC  6FC7               	movwf	vfprintf@fp& (0+255),b
  6154  0057AE  0E00               	movlw	high sprintf@f
  6155  0057B0  6FC8               	movwf	(vfprintf@fp+1)& (0+255),b
  6156  0057B2  C0D1  F0C9         	movff	sprintf@fmt,vfprintf@fmt
  6157  0057B6  C0D2  F0CA         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6158  0057BA  0ED9               	movlw	low sprintf@ap
  6159  0057BC  6FCB               	movwf	vfprintf@ap& (0+255),b
  6160  0057BE  0E00               	movlw	high sprintf@ap
  6161  0057C0  6FCC               	movwf	(vfprintf@ap+1)& (0+255),b
  6162  0057C2  ECA7  F02A         	call	_vfprintf	;wreg free
  6163  0057C6  0100               	movlb	0	; () banked
  6164  0057C8  51DD               	movf	(sprintf@f+2)& (0+255),w,b
  6165  0057CA  25CF               	addwf	sprintf@s& (0+255),w,b
  6166  0057CC  6ED9               	movwf	fsr2l,c
  6167  0057CE  51DE               	movf	(sprintf@f+3)& (0+255),w,b
  6168  0057D0  21D0               	addwfc	(sprintf@s+1)& (0+255),w,b
  6169  0057D2  6EDA               	movwf	fsr2h,c
  6170  0057D4  0E00               	movlw	0
  6171  0057D6  6EDF               	movwf	indf2,c
  6172  0057D8                     
  6173                           ; BSR set to: 0
  6174  0057D8  0012               	return		;funcret
  6175  0057DA                     __end_of_sprintf:
  6176                           	callstack 0
  6177                           
  6178 ;; *************** function _vfprintf *****************
  6179 ;; Defined at:
  6180 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6181 ;; Parameters:    Size  Location     Type
  6182 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  6183 ;;		 -> sprintf@f(6), 
  6184 ;;  fmt             2  105[BANK0 ] PTR const unsigned char 
  6185 ;;		 -> STR_16(13), STR_14(14), STR_12(16), STR_10(16), 
  6186 ;;		 -> STR_8(18), STR_6(18), STR_4(18), STR_2(15), 
  6187 ;;  ap              2  107[BANK0 ] PTR PTR void 
  6188 ;;		 -> sprintf@ap(2), 
  6189 ;; Auto vars:     Size  Location     Type
  6190 ;;  cfmt            2  109[BANK0 ] PTR unsigned char 
  6191 ;;		 -> STR_16(13), STR_14(14), STR_12(16), STR_10(16), 
  6192 ;;		 -> STR_8(18), STR_6(18), STR_4(18), STR_2(15), 
  6193 ;; Return value:  Size  Location     Type
  6194 ;;                  2  103[BANK0 ] int 
  6195 ;; Registers used:
  6196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6197 ;; Tracked objects:
  6198 ;;		On entry : 0/0
  6199 ;;		On exit  : 0/0
  6200 ;;		Unchanged: 0/0
  6201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6202 ;;      Params:         0       6       0       0       0       0       0
  6203 ;;      Locals:         0       2       0       0       0       0       0
  6204 ;;      Temps:          0       0       0       0       0       0       0
  6205 ;;      Totals:         0       8       0       0       0       0       0
  6206 ;;Total ram usage:        8 bytes
  6207 ;; Hardware stack levels used:    1
  6208 ;; Hardware stack levels required when called:    7
  6209 ;; This function calls:
  6210 ;;		_vfpfcnvrt
  6211 ;; This function is called by:
  6212 ;;		_sprintf
  6213 ;; This function uses a non-reentrant model
  6214 ;;
  6215                           
  6216                           	psect	text20
  6217  00554E                     __ptext20:
  6218                           	callstack 0
  6219  00554E                     _vfprintf:
  6220                           	callstack 20
  6221  00554E                     
  6222                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6223  00554E  C0C9  F0CD         	movff	vfprintf@fmt,vfprintf@cfmt
  6224  005552  C0CA  F0CE         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6225  005556                     
  6226                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  6227  005556  0E00               	movlw	0
  6228  005558  0101               	movlb	1	; () banked
  6229  00555A  6F93               	movwf	(_nout+1)& (0+255),b
  6230  00555C  0E00               	movlw	0
  6231  00555E  6F92               	movwf	_nout& (0+255),b
  6232                           
  6233                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  6234  005560  EFC9  F02A         	goto	l5570
  6235  005564                     l5568:
  6236                           
  6237                           ; BSR set to: 1
  6238                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6239  005564  C0C7  F0A7         	movff	vfprintf@fp,vfpfcnvrt@fp
  6240  005568  C0C8  F0A8         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6241  00556C  0ECD               	movlw	low vfprintf@cfmt
  6242  00556E  0100               	movlb	0	; () banked
  6243  005570  6FA9               	movwf	vfpfcnvrt@fmt& (0+255),b
  6244  005572  0E00               	movlw	high vfprintf@cfmt
  6245  005574  6FAA               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  6246  005576  C0CB  F0AB         	movff	vfprintf@ap,vfpfcnvrt@ap
  6247  00557A  C0CC  F0AC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6248  00557E  EC0F  F012         	call	_vfpfcnvrt	;wreg free
  6249  005582  0100               	movlb	0	; () banked
  6250  005584  51A7               	movf	?_vfpfcnvrt& (0+255),w,b
  6251  005586  0101               	movlb	1	; () banked
  6252  005588  2792               	addwf	_nout& (0+255),f,b
  6253  00558A  0100               	movlb	0	; () banked
  6254  00558C  51A8               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  6255  00558E  0101               	movlb	1	; () banked
  6256  005590  2393               	addwfc	(_nout+1)& (0+255),f,b
  6257  005592                     l5570:
  6258                           
  6259                           ; BSR set to: 1
  6260                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  6261  005592  C0CD  FFF6         	movff	vfprintf@cfmt,tblptrl
  6262  005596  C0CE  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6263  00559A                     	if	0	;tblptru may be non-zero
  6264  00559A                     	endif
  6265  00559A                     	if	0	;tblptru may be non-zero
  6266  00559A                     	endif
  6267  00559A  0008               	tblrd		*
  6268  00559C  50F5               	movf	tablat,w,c
  6269  00559E  0900               	iorlw	0
  6270  0055A0  A4D8               	btfss	status,2,c
  6271  0055A2  EFD5  F02A         	goto	u6751
  6272  0055A6  EFD7  F02A         	goto	u6750
  6273  0055AA                     u6751:
  6274  0055AA  EFB2  F02A         	goto	l5568
  6275  0055AE                     u6750:
  6276  0055AE                     
  6277                           ; BSR set to: 1
  6278                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  6279  0055AE  C192  F0C7         	movff	_nout,?_vfprintf
  6280  0055B2  C193  F0C8         	movff	_nout+1,?_vfprintf+1
  6281  0055B6                     
  6282                           ; BSR set to: 1
  6283  0055B6  0012               	return		;funcret
  6284  0055B8                     __end_of_vfprintf:
  6285                           	callstack 0
  6286                           
  6287 ;; *************** function _vfpfcnvrt *****************
  6288 ;; Defined at:
  6289 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6290 ;; Parameters:    Size  Location     Type
  6291 ;;  fp              2   71[BANK0 ] PTR struct _IO_FILE
  6292 ;;		 -> sprintf@f(6), 
  6293 ;;  fmt             2   73[BANK0 ] PTR PTR unsigned char 
  6294 ;;		 -> vfprintf@cfmt(2), 
  6295 ;;  ap              2   75[BANK0 ] PTR PTR void 
  6296 ;;		 -> sprintf@ap(2), 
  6297 ;; Auto vars:     Size  Location     Type
  6298 ;;  ll              8   81[BANK0 ] long long 
  6299 ;;  llu             8    0        unsigned long long 
  6300 ;;  f               4   95[BANK0 ] unsigned long long 
  6301 ;;  ct              3   99[BANK0 ] unsigned char [3]
  6302 ;;  vp              3    0        PTR void 
  6303 ;;  cp              3    0        PTR unsigned char 
  6304 ;;  i               2    0        int 
  6305 ;;  done            2    0        int 
  6306 ;;  c               1  102[BANK0 ] unsigned char 
  6307 ;; Return value:  Size  Location     Type
  6308 ;;                  2   71[BANK0 ] int 
  6309 ;; Registers used:
  6310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6311 ;; Tracked objects:
  6312 ;;		On entry : 0/0
  6313 ;;		On exit  : 0/0
  6314 ;;		Unchanged: 0/0
  6315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6316 ;;      Params:         0       6       0       0       0       0       0
  6317 ;;      Locals:         0      22       0       0       0       0       0
  6318 ;;      Temps:          0       4       0       0       0       0       0
  6319 ;;      Totals:         0      32       0       0       0       0       0
  6320 ;;Total ram usage:       32 bytes
  6321 ;; Hardware stack levels used:    1
  6322 ;; Hardware stack levels required when called:    6
  6323 ;; This function calls:
  6324 ;;		_atoi
  6325 ;;		_dtoa
  6326 ;;		_efgtoa
  6327 ;;		_fputc
  6328 ;;		_isdigit
  6329 ;;		_isupper
  6330 ;;		_strncmp
  6331 ;;		_tolower
  6332 ;; This function is called by:
  6333 ;;		_vfprintf
  6334 ;; This function uses a non-reentrant model
  6335 ;;
  6336                           
  6337                           	psect	text21
  6338  00241E                     __ptext21:
  6339                           	callstack 0
  6340  00241E                     _vfpfcnvrt:
  6341                           	callstack 20
  6342  00241E                     
  6343                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  6344  00241E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6345  002422  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6346  002426  CFDE FFF6          	movff	postinc2,tblptrl
  6347  00242A  CFDD FFF7          	movff	postdec2,tblptrh
  6348  00242E                     	if	0	;tblptru may be non-zero
  6349  00242E                     	endif
  6350  00242E                     	if	0	;tblptru may be non-zero
  6351  00242E                     	endif
  6352  00242E  0008               	tblrd		*
  6353  002430  50F5               	movf	tablat,w,c
  6354  002432  0A25               	xorlw	37
  6355  002434  A4D8               	btfss	status,2,c
  6356  002436  EF1F  F012         	goto	u6481
  6357  00243A  EF21  F012         	goto	u6480
  6358  00243E                     u6481:
  6359  00243E  EF0E  F015         	goto	l5410
  6360  002442                     u6480:
  6361  002442                     
  6362                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  6363  002442  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6364  002446  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6365  00244A  2ADE               	incf	postinc2,f,c
  6366  00244C  0E00               	movlw	0
  6367  00244E  22DD               	addwfc	postdec2,f,c
  6368  002450                     
  6369                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  6370  002450  0E00               	movlw	0
  6371  002452  0101               	movlb	1	; () banked
  6372  002454  6F95               	movwf	(_width+1)& (0+255),b
  6373  002456  0E00               	movlw	0
  6374  002458  6F94               	movwf	_width& (0+255),b
  6375  00245A  C194  F198         	movff	_width,_flags
  6376  00245E  C195  F199         	movff	_width+1,_flags+1
  6377  002462                     
  6378                           ; BSR set to: 1
  6379                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  6380  002462  6996               	setf	_prec& (0+255),b
  6381  002464  6997               	setf	(_prec+1)& (0+255),b
  6382  002466                     
  6383                           ; BSR set to: 1
  6384                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  6385  002466  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6386  00246A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6387  00246E  CFDE FFF6          	movff	postinc2,tblptrl
  6388  002472  CFDD FFF7          	movff	postdec2,tblptrh
  6389  002476                     	if	0	;tblptru may be non-zero
  6390  002476                     	endif
  6391  002476                     	if	0	;tblptru may be non-zero
  6392  002476                     	endif
  6393  002476  0008               	tblrd		*
  6394  002478  50F5               	movf	tablat,w,c
  6395  00247A  0A2A               	xorlw	42
  6396  00247C  A4D8               	btfss	status,2,c
  6397  00247E  EF43  F012         	goto	u6491
  6398  002482  EF45  F012         	goto	u6490
  6399  002486                     u6491:
  6400  002486  EF6E  F012         	goto	l5316
  6401  00248A                     u6490:
  6402  00248A                     
  6403                           ; BSR set to: 1
  6404                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  6405  00248A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6406  00248E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6407  002492  2ADE               	incf	postinc2,f,c
  6408  002494  0E00               	movlw	0
  6409  002496  22DD               	addwfc	postdec2,f,c
  6410                           
  6411                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6412  002498  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6413  00249C  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6414  0024A0  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6415  0024A4  0E02               	movlw	2
  6416  0024A6  26DE               	addwf	postinc2,f,c
  6417  0024A8  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6418  0024AC  0E00               	movlw	0
  6419  0024AE  22DD               	addwfc	postdec2,f,c
  6420  0024B0  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6421  0024B4  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6422  0024B8  CFDE F194          	movff	postinc2,_width
  6423  0024BC  CFDD F195          	movff	postdec2,_width+1
  6424  0024C0                     
  6425                           ; BSR set to: 1
  6426                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  6427  0024C0  BF95               	btfsc	(_width+1)& (0+255),7,b
  6428  0024C2  EF67  F012         	goto	u6500
  6429  0024C6  EF65  F012         	goto	u6501
  6430  0024CA                     u6501:
  6431  0024CA  EFB2  F012         	goto	l5326
  6432  0024CE                     u6500:
  6433  0024CE                     
  6434                           ; BSR set to: 1
  6435                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  6436  0024CE  8198               	bsf	_flags& (0+255),0,b
  6437                           
  6438                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  6439  0024D0  6D94               	negf	_width& (0+255),b
  6440  0024D2  1F95               	comf	(_width+1)& (0+255),f,b
  6441  0024D4  B0D8               	btfsc	status,0,c
  6442  0024D6  2B95               	incf	(_width+1)& (0+255),f,b
  6443  0024D8  EFB2  F012         	goto	l5326
  6444  0024DC                     l5316:
  6445                           
  6446                           ; BSR set to: 1
  6447                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  6448  0024DC  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6449  0024E0  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6450  0024E4  CFDE F008          	movff	postinc2,atoi@s
  6451  0024E8  CFDD F009          	movff	postdec2,atoi@s+1
  6452  0024EC  EC14  F021         	call	_atoi	;wreg free
  6453  0024F0  C008  F194         	movff	?_atoi,_width
  6454  0024F4  C009  F195         	movff	?_atoi+1,_width+1
  6455                           
  6456                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6457  0024F8  EF85  F012         	goto	l5320
  6458  0024FC                     l5318:
  6459                           
  6460                           ; BSR set to: 0
  6461                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  6462  0024FC  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6463  002500  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6464  002504  2ADE               	incf	postinc2,f,c
  6465  002506  0E00               	movlw	0
  6466  002508  22DD               	addwfc	postdec2,f,c
  6467  00250A                     l5320:
  6468  00250A  0ED0               	movlw	208
  6469  00250C  0100               	movlb	0	; () banked
  6470  00250E  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  6471  002510  0EFF               	movlw	255
  6472  002512  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6473  002514  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6474  002518  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6475  00251C  CFDE FFF6          	movff	postinc2,tblptrl
  6476  002520  CFDD FFF7          	movff	postdec2,tblptrh
  6477  002524                     	if	0	;tblptru may be non-zero
  6478  002524                     	endif
  6479  002524                     	if	0	;tblptru may be non-zero
  6480  002524                     	endif
  6481  002524  0008               	tblrd		*
  6482  002526  50F5               	movf	tablat,w,c
  6483  002528  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6484  00252A  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  6485  00252C  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  6486  00252E  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  6487  002530  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6488  002532  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  6489  002534  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  6490  002536  E10A               	bnz	u6510
  6491  002538  0E0A               	movlw	10
  6492  00253A  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  6493  00253C  A0D8               	btfss	status,0,c
  6494  00253E  EFA3  F012         	goto	u6511
  6495  002542  EFA6  F012         	goto	u6510
  6496  002546                     u6511:
  6497  002546  0E01               	movlw	1
  6498  002548  EFA7  F012         	goto	u6520
  6499  00254C                     u6510:
  6500  00254C  0E00               	movlw	0
  6501  00254E                     u6520:
  6502  00254E  6FB9               	movwf	_vfpfcnvrt$2530& (0+255),b
  6503  002550  6BBA               	clrf	(_vfpfcnvrt$2530+1)& (0+255),b
  6504  002552                     
  6505                           ; BSR set to: 0
  6506  002552  51B9               	movf	_vfpfcnvrt$2530& (0+255),w,b
  6507  002554  11BA               	iorwf	(_vfpfcnvrt$2530+1)& (0+255),w,b
  6508  002556  A4D8               	btfss	status,2,c
  6509  002558  EFB0  F012         	goto	u6531
  6510  00255C  EFB2  F012         	goto	u6530
  6511  002560                     u6531:
  6512  002560  EF7E  F012         	goto	l5318
  6513  002564                     u6530:
  6514  002564                     l5326:
  6515                           
  6516                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  6517  002564  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6518  002568  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6519  00256C  CFDE FFF6          	movff	postinc2,tblptrl
  6520  002570  CFDD FFF7          	movff	postdec2,tblptrh
  6521  002574                     	if	0	;tblptru may be non-zero
  6522  002574                     	endif
  6523  002574                     	if	0	;tblptru may be non-zero
  6524  002574                     	endif
  6525  002574  0008               	tblrd		*
  6526  002576  50F5               	movf	tablat,w,c
  6527  002578  0A2E               	xorlw	46
  6528  00257A  A4D8               	btfss	status,2,c
  6529  00257C  EFC2  F012         	goto	u6541
  6530  002580  EFC4  F012         	goto	u6540
  6531  002584                     u6541:
  6532  002584  EF43  F013         	goto	l5346
  6533  002588                     u6540:
  6534  002588                     
  6535                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  6536  002588  0E00               	movlw	0
  6537  00258A  0101               	movlb	1	; () banked
  6538  00258C  6F97               	movwf	(_prec+1)& (0+255),b
  6539  00258E  0E00               	movlw	0
  6540  002590  6F96               	movwf	_prec& (0+255),b
  6541  002592                     
  6542                           ; BSR set to: 1
  6543                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  6544  002592  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6545  002596  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6546  00259A  2ADE               	incf	postinc2,f,c
  6547  00259C  0E00               	movlw	0
  6548  00259E  22DD               	addwfc	postdec2,f,c
  6549  0025A0                     
  6550                           ; BSR set to: 1
  6551                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  6552  0025A0  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6553  0025A4  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6554  0025A8  CFDE FFF6          	movff	postinc2,tblptrl
  6555  0025AC  CFDD FFF7          	movff	postdec2,tblptrh
  6556  0025B0                     	if	0	;tblptru may be non-zero
  6557  0025B0                     	endif
  6558  0025B0                     	if	0	;tblptru may be non-zero
  6559  0025B0                     	endif
  6560  0025B0  0008               	tblrd		*
  6561  0025B2  50F5               	movf	tablat,w,c
  6562  0025B4  0A2A               	xorlw	42
  6563  0025B6  A4D8               	btfss	status,2,c
  6564  0025B8  EFE0  F012         	goto	u6551
  6565  0025BC  EFE2  F012         	goto	u6550
  6566  0025C0                     u6551:
  6567  0025C0  EFFF  F012         	goto	l5336
  6568  0025C4                     u6550:
  6569  0025C4                     
  6570                           ; BSR set to: 1
  6571                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  6572  0025C4  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6573  0025C8  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6574  0025CC  2ADE               	incf	postinc2,f,c
  6575  0025CE  0E00               	movlw	0
  6576  0025D0  22DD               	addwfc	postdec2,f,c
  6577                           
  6578                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  6579  0025D2  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6580  0025D6  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6581  0025DA  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6582  0025DE  0E02               	movlw	2
  6583  0025E0  26DE               	addwf	postinc2,f,c
  6584  0025E2  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6585  0025E6  0E00               	movlw	0
  6586  0025E8  22DD               	addwfc	postdec2,f,c
  6587  0025EA  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6588  0025EE  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6589  0025F2  CFDE F196          	movff	postinc2,_prec
  6590  0025F6  CFDD F197          	movff	postdec2,_prec+1
  6591                           
  6592                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  6593  0025FA  EF43  F013         	goto	l5346
  6594  0025FE                     l5336:
  6595                           
  6596                           ; BSR set to: 1
  6597                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  6598  0025FE  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6599  002602  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6600  002606  CFDE F008          	movff	postinc2,atoi@s
  6601  00260A  CFDD F009          	movff	postdec2,atoi@s+1
  6602  00260E  EC14  F021         	call	_atoi	;wreg free
  6603  002612  C008  F196         	movff	?_atoi,_prec
  6604  002616  C009  F197         	movff	?_atoi+1,_prec+1
  6605                           
  6606                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6607  00261A  EF16  F013         	goto	l5340
  6608  00261E                     l5338:
  6609                           
  6610                           ; BSR set to: 0
  6611                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  6612  00261E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6613  002622  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6614  002626  2ADE               	incf	postinc2,f,c
  6615  002628  0E00               	movlw	0
  6616  00262A  22DD               	addwfc	postdec2,f,c
  6617  00262C                     l5340:
  6618  00262C  0ED0               	movlw	208
  6619  00262E  0100               	movlb	0	; () banked
  6620  002630  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  6621  002632  0EFF               	movlw	255
  6622  002634  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6623  002636  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6624  00263A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6625  00263E  CFDE FFF6          	movff	postinc2,tblptrl
  6626  002642  CFDD FFF7          	movff	postdec2,tblptrh
  6627  002646                     	if	0	;tblptru may be non-zero
  6628  002646                     	endif
  6629  002646                     	if	0	;tblptru may be non-zero
  6630  002646                     	endif
  6631  002646  0008               	tblrd		*
  6632  002648  50F5               	movf	tablat,w,c
  6633  00264A  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6634  00264C  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  6635  00264E  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  6636  002650  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  6637  002652  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6638  002654  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  6639  002656  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  6640  002658  E10A               	bnz	u6560
  6641  00265A  0E0A               	movlw	10
  6642  00265C  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  6643  00265E  A0D8               	btfss	status,0,c
  6644  002660  EF34  F013         	goto	u6561
  6645  002664  EF37  F013         	goto	u6560
  6646  002668                     u6561:
  6647  002668  0E01               	movlw	1
  6648  00266A  EF38  F013         	goto	u6570
  6649  00266E                     u6560:
  6650  00266E  0E00               	movlw	0
  6651  002670                     u6570:
  6652  002670  6FBB               	movwf	_vfpfcnvrt$2531& (0+255),b
  6653  002672  6BBC               	clrf	(_vfpfcnvrt$2531+1)& (0+255),b
  6654  002674                     
  6655                           ; BSR set to: 0
  6656  002674  51BB               	movf	_vfpfcnvrt$2531& (0+255),w,b
  6657  002676  11BC               	iorwf	(_vfpfcnvrt$2531+1)& (0+255),w,b
  6658  002678  A4D8               	btfss	status,2,c
  6659  00267A  EF41  F013         	goto	u6581
  6660  00267E  EF43  F013         	goto	u6580
  6661  002682                     u6581:
  6662  002682  EF0F  F013         	goto	l5338
  6663  002686                     u6580:
  6664  002686                     l5346:
  6665                           
  6666                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0
      +                          ] = tolower((int)(*fmt)[0]);
  6667  002686  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6668  00268A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6669  00268E  CFDE FFF6          	movff	postinc2,tblptrl
  6670  002692  CFDD FFF7          	movff	postdec2,tblptrh
  6671  002696                     	if	0	;tblptru may be non-zero
  6672  002696                     	endif
  6673  002696                     	if	0	;tblptru may be non-zero
  6674  002696                     	endif
  6675  002696  0008               	tblrd		*
  6676  002698  50F5               	movf	tablat,w,c
  6677  00269A  6E07               	movwf	tolower@c^0,c
  6678  00269C  6A08               	clrf	(tolower@c+1)^0,c
  6679  00269E  EC0F  F02B         	call	_tolower	;wreg free
  6680  0026A2  5007               	movf	?_tolower^0,w,c
  6681  0026A4  0100               	movlb	0	; () banked
  6682  0026A6  6FC3               	movwf	vfpfcnvrt@ct& (0+255),b
  6683  0026A8                     
  6684                           ; BSR set to: 0
  6685                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (
      +                          ct[0]) {
  6686  0026A8  51C3               	movf	vfpfcnvrt@ct& (0+255),w,b
  6687  0026AA  B4D8               	btfsc	status,2,c
  6688  0026AC  EF5A  F013         	goto	u6591
  6689  0026B0  EF5C  F013         	goto	u6590
  6690  0026B4                     u6591:
  6691  0026B4  EF96  F013         	goto	l5356
  6692  0026B8                     u6590:
  6693  0026B8                     
  6694                           ; BSR set to: 0
  6695                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             
      +                          ct[1] = tolower((int)(*fmt)[1]);
  6696  0026B8  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6697  0026BC  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6698  0026C0  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  6699  0026C4  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  6700  0026C8  0E01               	movlw	1
  6701  0026CA  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  6702  0026CC  0E00               	movlw	0
  6703  0026CE  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6704  0026D0  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6705  0026D4  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6706  0026D8                     	if	0	;tblptru may be non-zero
  6707  0026D8                     	endif
  6708  0026D8                     	if	0	;tblptru may be non-zero
  6709  0026D8                     	endif
  6710  0026D8  0008               	tblrd		*
  6711  0026DA  50F5               	movf	tablat,w,c
  6712  0026DC  6E07               	movwf	tolower@c^0,c
  6713  0026DE  6A08               	clrf	(tolower@c+1)^0,c
  6714  0026E0  EC0F  F02B         	call	_tolower	;wreg free
  6715  0026E4  5007               	movf	?_tolower^0,w,c
  6716  0026E6  0100               	movlb	0	; () banked
  6717  0026E8  6FC4               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  6718  0026EA                     
  6719                           ; BSR set to: 0
  6720                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             
      +                          if (ct[1]) {
  6721  0026EA  51C4               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  6722  0026EC  B4D8               	btfsc	status,2,c
  6723  0026EE  EF7B  F013         	goto	u6601
  6724  0026F2  EF7D  F013         	goto	u6600
  6725  0026F6                     u6601:
  6726  0026F6  EF96  F013         	goto	l5356
  6727  0026FA                     u6600:
  6728  0026FA                     
  6729                           ; BSR set to: 0
  6730                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:             
      +                              ct[2] = tolower((int)(*fmt)[2]);
  6731  0026FA  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6732  0026FE  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6733  002702  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  6734  002706  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  6735  00270A  0E02               	movlw	2
  6736  00270C  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  6737  00270E  0E00               	movlw	0
  6738  002710  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6739  002712  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6740  002716  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6741  00271A                     	if	0	;tblptru may be non-zero
  6742  00271A                     	endif
  6743  00271A                     	if	0	;tblptru may be non-zero
  6744  00271A                     	endif
  6745  00271A  0008               	tblrd		*
  6746  00271C  50F5               	movf	tablat,w,c
  6747  00271E  6E07               	movwf	tolower@c^0,c
  6748  002720  6A08               	clrf	(tolower@c+1)^0,c
  6749  002722  EC0F  F02B         	call	_tolower	;wreg free
  6750  002726  5007               	movf	?_tolower^0,w,c
  6751  002728  0100               	movlb	0	; () banked
  6752  00272A  6FC5               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  6753  00272C                     l5356:
  6754                           
  6755                           ; BSR set to: 0
  6756                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6757  00272C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6758  002730  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6759  002734  CFDE FFF6          	movff	postinc2,tblptrl
  6760  002738  CFDD FFF7          	movff	postdec2,tblptrh
  6761  00273C                     	if	0	;tblptru may be non-zero
  6762  00273C                     	endif
  6763  00273C                     	if	0	;tblptru may be non-zero
  6764  00273C                     	endif
  6765  00273C  0008               	tblrd		*
  6766  00273E  50F5               	movf	tablat,w,c
  6767  002740  0A64               	xorlw	100
  6768  002742  B4D8               	btfsc	status,2,c
  6769  002744  EFA6  F013         	goto	u6611
  6770  002748  EFA8  F013         	goto	u6610
  6771  00274C                     u6611:
  6772  00274C  EFBA  F013         	goto	l5360
  6773  002750                     u6610:
  6774  002750                     
  6775                           ; BSR set to: 0
  6776  002750  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6777  002754  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6778  002758  CFDE FFF6          	movff	postinc2,tblptrl
  6779  00275C  CFDD FFF7          	movff	postdec2,tblptrh
  6780  002760                     	if	0	;tblptru may be non-zero
  6781  002760                     	endif
  6782  002760                     	if	0	;tblptru may be non-zero
  6783  002760                     	endif
  6784  002760  0008               	tblrd		*
  6785  002762  50F5               	movf	tablat,w,c
  6786  002764  0A69               	xorlw	105
  6787  002766  A4D8               	btfss	status,2,c
  6788  002768  EFB8  F013         	goto	u6621
  6789  00276C  EFBA  F013         	goto	u6620
  6790  002770                     u6621:
  6791  002770  EFFA  F013         	goto	l5366
  6792  002774                     u6620:
  6793  002774                     l5360:
  6794                           
  6795                           ; BSR set to: 0
  6796                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  6797  002774  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6798  002778  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6799  00277C  2ADE               	incf	postinc2,f,c
  6800  00277E  0E00               	movlw	0
  6801  002780  22DD               	addwfc	postdec2,f,c
  6802                           
  6803                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6804  002782  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6805  002786  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6806  00278A  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6807  00278E  0E02               	movlw	2
  6808  002790  26DE               	addwf	postinc2,f,c
  6809  002792  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6810  002796  0E00               	movlw	0
  6811  002798  22DD               	addwfc	postdec2,f,c
  6812  00279A  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6813  00279E  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6814  0027A2  CFDE F0B1          	movff	postinc2,vfpfcnvrt@ll
  6815  0027A6  CFDD F0B2          	movff	postdec2,vfpfcnvrt@ll+1
  6816  0027AA  0E00               	movlw	0
  6817  0027AC  BFB2               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  6818  0027AE  0EFF               	movlw	-1
  6819  0027B0  6FB3               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  6820  0027B2  6FB4               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  6821  0027B4  6FB5               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  6822  0027B6  6FB6               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  6823  0027B8  6FB7               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  6824  0027BA  6FB8               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  6825  0027BC                     
  6826                           ; BSR set to: 0
  6827                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  6828  0027BC  C0A7  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  6829  0027C0  C0A8  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6830  0027C4  C0B1  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  6831  0027C8  C0B2  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  6832  0027CC  C0B3  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  6833  0027D0  C0B4  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  6834  0027D4  C0B5  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  6835  0027D8  C0B6  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  6836  0027DC  C0B7  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  6837  0027E0  C0B8  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  6838  0027E4  ECDF  F01C         	call	_dtoa	;wreg free
  6839  0027E8  C01C  F0A7         	movff	?_dtoa,?_vfpfcnvrt
  6840  0027EC  C01D  F0A8         	movff	?_dtoa+1,?_vfpfcnvrt+1
  6841  0027F0  EF29  F015         	goto	l1364
  6842  0027F4                     l5366:
  6843                           
  6844                           ; BSR set to: 0
  6845                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (
      +                          ct[0] == 'f') {
  6846  0027F4  0E66               	movlw	102
  6847  0027F6  19C3               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  6848  0027F8  A4D8               	btfss	status,2,c
  6849  0027FA  EF01  F014         	goto	u6631
  6850  0027FE  EF03  F014         	goto	u6630
  6851  002802                     u6631:
  6852  002802  EF43  F014         	goto	l5378
  6853  002806                     u6630:
  6854  002806                     
  6855                           ; BSR set to: 0
  6856                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             
      +                          c = (*fmt)[0];
  6857  002806  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6858  00280A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6859  00280E  CFDE FFF6          	movff	postinc2,tblptrl
  6860  002812  CFDD FFF7          	movff	postdec2,tblptrh
  6861  002816                     	if	0	;tblptru may be non-zero
  6862  002816                     	endif
  6863  002816                     	if	0	;tblptru may be non-zero
  6864  002816                     	endif
  6865  002816  0008               	tblrd		*
  6866  002818  CFF5 F0C6          	movff	tablat,vfpfcnvrt@c
  6867  00281C                     
  6868                           ; BSR set to: 0
  6869                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             
      +                          ++*fmt;
  6870  00281C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6871  002820  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6872  002824  2ADE               	incf	postinc2,f,c
  6873  002826  0E00               	movlw	0
  6874  002828  22DD               	addwfc	postdec2,f,c
  6875  00282A                     
  6876                           ; BSR set to: 0
  6877                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  6878  00282A  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6879  00282E  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6880  002832  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6881  002836  0E04               	movlw	4
  6882  002838  26DE               	addwf	postinc2,f,c
  6883  00283A  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6884  00283E  0E00               	movlw	0
  6885  002840  22DD               	addwfc	postdec2,f,c
  6886  002842  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6887  002846  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6888  00284A  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  6889  00284E  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  6890  002852  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  6891  002856  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  6892  00285A                     l5374:
  6893                           
  6894                           ; BSR set to: 0
  6895                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             
      +                          return efgtoa(fp, f, c);
  6896  00285A  C0A7  F058         	movff	vfpfcnvrt@fp,efgtoa@fp
  6897  00285E  C0A8  F059         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  6898  002862  C0BF  F05A         	movff	vfpfcnvrt@f,efgtoa@f
  6899  002866  C0C0  F05B         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  6900  00286A  C0C1  F05C         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  6901  00286E  C0C2  F05D         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  6902  002872  C0C6  F05E         	movff	vfpfcnvrt@c,efgtoa@c
  6903  002876  EC6C  F003         	call	_efgtoa	;wreg free
  6904  00287A  C058  F0A7         	movff	?_efgtoa,?_vfpfcnvrt
  6905  00287E  C059  F0A8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  6906  002882  EF29  F015         	goto	l1364
  6907  002886                     l5378:
  6908                           
  6909                           ; BSR set to: 0
  6910                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  6911  002886  0EC3               	movlw	low vfpfcnvrt@ct
  6912  002888  6E01               	movwf	strncmp@_l^0,c
  6913  00288A  0E00               	movlw	high vfpfcnvrt@ct
  6914  00288C  6E02               	movwf	(strncmp@_l+1)^0,c
  6915  00288E  0ED4               	movlw	low STR_25
  6916  002890  6E03               	movwf	strncmp@_r^0,c
  6917  002892  0E06               	movlw	high STR_25
  6918  002894  6E04               	movwf	(strncmp@_r+1)^0,c
  6919  002896  0E00               	movlw	0
  6920  002898  6E06               	movwf	(strncmp@n+1)^0,c
  6921  00289A  0E02               	movlw	2
  6922  00289C  6E05               	movwf	strncmp@n^0,c
  6923  00289E  ECA5  F026         	call	_strncmp	;wreg free
  6924  0028A2  5001               	movf	?_strncmp^0,w,c
  6925  0028A4  1002               	iorwf	(?_strncmp+1)^0,w,c
  6926  0028A6  A4D8               	btfss	status,2,c
  6927  0028A8  EF58  F014         	goto	u6641
  6928  0028AC  EF5A  F014         	goto	u6640
  6929  0028B0                     u6641:
  6930  0028B0  EFD6  F014         	goto	l5394
  6931  0028B4                     u6640:
  6932  0028B4                     
  6933                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  6934  0028B4  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6935  0028B8  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6936  0028BC  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  6937  0028C0  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  6938  0028C4  0E01               	movlw	1
  6939  0028C6  0100               	movlb	0	; () banked
  6940  0028C8  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  6941  0028CA  0E00               	movlw	0
  6942  0028CC  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6943  0028CE  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6944  0028D2  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6945  0028D6                     	if	0	;tblptru may be non-zero
  6946  0028D6                     	endif
  6947  0028D6                     	if	0	;tblptru may be non-zero
  6948  0028D6                     	endif
  6949  0028D6  0008               	tblrd		*
  6950  0028D8  CFF5 F0C6          	movff	tablat,vfpfcnvrt@c
  6951  0028DC  0EBF               	movlw	191
  6952  0028DE  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  6953  0028E0  0EFF               	movlw	255
  6954  0028E2  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6955  0028E4  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6956  0028E8  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6957  0028EC  CFDE FFF6          	movff	postinc2,tblptrl
  6958  0028F0  CFDD FFF7          	movff	postdec2,tblptrh
  6959  0028F4                     	if	0	;tblptru may be non-zero
  6960  0028F4                     	endif
  6961  0028F4                     	if	0	;tblptru may be non-zero
  6962  0028F4                     	endif
  6963  0028F4  0008               	tblrd		*
  6964  0028F6  50F5               	movf	tablat,w,c
  6965  0028F8  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6966  0028FA  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  6967  0028FC  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  6968  0028FE  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  6969  002900  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6970  002902  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  6971  002904  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  6972  002906  E10A               	bnz	u6650
  6973  002908  0E1A               	movlw	26
  6974  00290A  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  6975  00290C  A0D8               	btfss	status,0,c
  6976  00290E  EF8B  F014         	goto	u6651
  6977  002912  EF8E  F014         	goto	u6650
  6978  002916                     u6651:
  6979  002916  0E01               	movlw	1
  6980  002918  EF8F  F014         	goto	u6660
  6981  00291C                     u6650:
  6982  00291C  0E00               	movlw	0
  6983  00291E                     u6660:
  6984  00291E  6FBD               	movwf	_vfpfcnvrt$2536& (0+255),b
  6985  002920  6BBE               	clrf	(_vfpfcnvrt$2536+1)& (0+255),b
  6986  002922                     
  6987                           ; BSR set to: 0
  6988  002922  51BD               	movf	_vfpfcnvrt$2536& (0+255),w,b
  6989  002924  11BE               	iorwf	(_vfpfcnvrt$2536+1)& (0+255),w,b
  6990  002926  B4D8               	btfsc	status,2,c
  6991  002928  EF98  F014         	goto	u6671
  6992  00292C  EF9A  F014         	goto	u6670
  6993  002930                     u6671:
  6994  002930  EFB4  F014         	goto	l5388
  6995  002934                     u6670:
  6996  002934                     
  6997                           ; BSR set to: 0
  6998                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  6999  002934  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7000  002938  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7001  00293C  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7002  002940  0E04               	movlw	4
  7003  002942  26DE               	addwf	postinc2,f,c
  7004  002944  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7005  002948  0E00               	movlw	0
  7006  00294A  22DD               	addwfc	postdec2,f,c
  7007  00294C  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7008  002950  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7009  002954  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  7010  002958  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  7011  00295C  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  7012  002960  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  7013                           
  7014                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             
      +                          } else {
  7015  002964  EFCC  F014         	goto	l1372
  7016  002968                     l5388:
  7017                           
  7018                           ; BSR set to: 0
  7019                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  7020  002968  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7021  00296C  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7022  002970  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7023  002974  0E04               	movlw	4
  7024  002976  26DE               	addwf	postinc2,f,c
  7025  002978  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7026  00297C  0E00               	movlw	0
  7027  00297E  22DD               	addwfc	postdec2,f,c
  7028  002980  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7029  002984  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7030  002988  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  7031  00298C  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  7032  002990  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  7033  002994  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  7034  002998                     l1372:
  7035                           
  7036                           ; BSR set to: 0
  7037                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  7038  002998  0E02               	movlw	2
  7039  00299A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7040  00299E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7041  0029A2  26DE               	addwf	postinc2,f,c
  7042  0029A4  0E00               	movlw	0
  7043  0029A6  22DD               	addwfc	postdec2,f,c
  7044  0029A8  EF2D  F014         	goto	l5374
  7045  0029AC                     l5394:
  7046                           
  7047                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  7048  0029AC  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7049  0029B0  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7050  0029B4  CFDE FFF6          	movff	postinc2,tblptrl
  7051  0029B8  CFDD FFF7          	movff	postdec2,tblptrh
  7052  0029BC                     	if	0	;tblptru may be non-zero
  7053  0029BC                     	endif
  7054  0029BC                     	if	0	;tblptru may be non-zero
  7055  0029BC                     	endif
  7056  0029BC  0008               	tblrd		*
  7057  0029BE  50F5               	movf	tablat,w,c
  7058  0029C0  0A25               	xorlw	37
  7059  0029C2  A4D8               	btfss	status,2,c
  7060  0029C4  EFE6  F014         	goto	u6681
  7061  0029C8  EFE8  F014         	goto	u6680
  7062  0029CC                     u6681:
  7063  0029CC  EF00  F015         	goto	l5404
  7064  0029D0                     u6680:
  7065  0029D0                     
  7066                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  7067  0029D0  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7068  0029D4  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7069  0029D8  2ADE               	incf	postinc2,f,c
  7070  0029DA  0E00               	movlw	0
  7071  0029DC  22DD               	addwfc	postdec2,f,c
  7072  0029DE                     
  7073                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  7074  0029DE  0E00               	movlw	0
  7075  0029E0  6E02               	movwf	(fputc@c+1)^0,c
  7076  0029E2  0E25               	movlw	37
  7077  0029E4  6E01               	movwf	fputc@c^0,c
  7078  0029E6  C0A7  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7079  0029EA  C0A8  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7080  0029EE  EC10  F027         	call	_fputc	;wreg free
  7081  0029F2                     l5400:
  7082                           
  7083                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  7084  0029F2  0E00               	movlw	0
  7085  0029F4  0100               	movlb	0	; () banked
  7086  0029F6  6FA8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7087  0029F8  0E01               	movlw	1
  7088  0029FA  6FA7               	movwf	?_vfpfcnvrt& (0+255),b
  7089  0029FC  EF29  F015         	goto	l1364
  7090  002A00                     l5404:
  7091                           
  7092                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  7093  002A00  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7094  002A04  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7095  002A08  2ADE               	incf	postinc2,f,c
  7096  002A0A  0E00               	movlw	0
  7097  002A0C  22DD               	addwfc	postdec2,f,c
  7098  002A0E                     
  7099                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  7100  002A0E  0E00               	movlw	0
  7101  002A10  0100               	movlb	0	; () banked
  7102  002A12  6FA8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7103  002A14  0E00               	movlw	0
  7104  002A16  6FA7               	movwf	?_vfpfcnvrt& (0+255),b
  7105  002A18  EF29  F015         	goto	l1364
  7106  002A1C                     l5410:
  7107                           
  7108                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  7109  002A1C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7110  002A20  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7111  002A24  CFDE FFF6          	movff	postinc2,tblptrl
  7112  002A28  CFDD FFF7          	movff	postdec2,tblptrh
  7113  002A2C                     	if	0	;tblptru may be non-zero
  7114  002A2C                     	endif
  7115  002A2C                     	if	0	;tblptru may be non-zero
  7116  002A2C                     	endif
  7117  002A2C  0008               	tblrd		*
  7118  002A2E  50F5               	movf	tablat,w,c
  7119  002A30  6E01               	movwf	fputc@c^0,c
  7120  002A32  6A02               	clrf	(fputc@c+1)^0,c
  7121  002A34  C0A7  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7122  002A38  C0A8  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7123  002A3C  EC10  F027         	call	_fputc	;wreg free
  7124  002A40                     
  7125                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  7126  002A40  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7127  002A44  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7128  002A48  2ADE               	incf	postinc2,f,c
  7129  002A4A  0E00               	movlw	0
  7130  002A4C  22DD               	addwfc	postdec2,f,c
  7131  002A4E  EFF9  F014         	goto	l5400
  7132  002A52                     l1364:
  7133  002A52  0012               	return		;funcret
  7134  002A54                     __end_of_vfpfcnvrt:
  7135                           	callstack 0
  7136                           
  7137 ;; *************** function _strncmp *****************
  7138 ;; Defined at:
  7139 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  7140 ;; Parameters:    Size  Location     Type
  7141 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  7142 ;;		 -> vfpfcnvrt@ct(3), 
  7143 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  7144 ;;		 -> STR_27(3), 
  7145 ;;  n               2    4[COMRAM] unsigned int 
  7146 ;; Auto vars:     Size  Location     Type
  7147 ;;  r               2    9[COMRAM] PTR const unsigned char 
  7148 ;;		 -> STR_27(3), 
  7149 ;;  l               2    7[COMRAM] PTR const unsigned char 
  7150 ;;		 -> vfpfcnvrt@ct(3), 
  7151 ;; Return value:  Size  Location     Type
  7152 ;;                  2    0[COMRAM] int 
  7153 ;; Registers used:
  7154 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7155 ;; Tracked objects:
  7156 ;;		On entry : 0/0
  7157 ;;		On exit  : 0/0
  7158 ;;		Unchanged: 0/0
  7159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7160 ;;      Params:         6       0       0       0       0       0       0
  7161 ;;      Locals:         4       0       0       0       0       0       0
  7162 ;;      Temps:          1       0       0       0       0       0       0
  7163 ;;      Totals:        11       0       0       0       0       0       0
  7164 ;;Total ram usage:       11 bytes
  7165 ;; Hardware stack levels used:    1
  7166 ;; Hardware stack levels required when called:    1
  7167 ;; This function calls:
  7168 ;;		Nothing
  7169 ;; This function is called by:
  7170 ;;		_vfpfcnvrt
  7171 ;; This function uses a non-reentrant model
  7172 ;;
  7173                           
  7174                           	psect	text22
  7175  004D4A                     __ptext22:
  7176                           	callstack 0
  7177  004D4A                     _strncmp:
  7178                           	callstack 24
  7179  004D4A  C001  F008         	movff	strncmp@_l,strncmp@l
  7180  004D4E  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  7181  004D52  C003  F00A         	movff	strncmp@_r,strncmp@r
  7182  004D56  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  7183  004D5A  0605               	decf	strncmp@n^0,f,c
  7184  004D5C  A0D8               	btfss	status,0,c
  7185  004D5E  0606               	decf	(strncmp@n+1)^0,f,c
  7186  004D60  2805               	incf	strncmp@n^0,w,c
  7187  004D62  E106               	bnz	u6231
  7188  004D64  2806               	incf	(strncmp@n+1)^0,w,c
  7189  004D66  A4D8               	btfss	status,2,c
  7190  004D68  EFB8  F026         	goto	u6231
  7191  004D6C  EFBA  F026         	goto	u6230
  7192  004D70                     u6231:
  7193  004D70  EFC7  F026         	goto	l5172
  7194  004D74                     u6230:
  7195  004D74  0E00               	movlw	0
  7196  004D76  6E02               	movwf	(?_strncmp+1)^0,c
  7197  004D78  0E00               	movlw	0
  7198  004D7A  6E01               	movwf	?_strncmp^0,c
  7199  004D7C  EF0F  F027         	goto	l1500
  7200  004D80                     l5170:
  7201  004D80  4A08               	infsnz	strncmp@l^0,f,c
  7202  004D82  2A09               	incf	(strncmp@l+1)^0,f,c
  7203  004D84  4A0A               	infsnz	strncmp@r^0,f,c
  7204  004D86  2A0B               	incf	(strncmp@r+1)^0,f,c
  7205  004D88  0605               	decf	strncmp@n^0,f,c
  7206  004D8A  A0D8               	btfss	status,0,c
  7207  004D8C  0606               	decf	(strncmp@n+1)^0,f,c
  7208  004D8E                     l5172:
  7209  004D8E  C008  FFD9         	movff	strncmp@l,fsr2l
  7210  004D92  C009  FFDA         	movff	strncmp@l+1,fsr2h
  7211  004D96  50DF               	movf	indf2,w,c
  7212  004D98  B4D8               	btfsc	status,2,c
  7213  004D9A  EFD1  F026         	goto	u6241
  7214  004D9E  EFD3  F026         	goto	u6240
  7215  004DA2                     u6241:
  7216  004DA2  EFFE  F026         	goto	l5180
  7217  004DA6                     u6240:
  7218  004DA6  C00A  FFF6         	movff	strncmp@r,tblptrl
  7219  004DAA  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7220  004DAE                     	if	0	;tblptru may be non-zero
  7221  004DAE                     	endif
  7222  004DAE                     	if	0	;tblptru may be non-zero
  7223  004DAE                     	endif
  7224  004DAE  0008               	tblrd		*
  7225  004DB0  50F5               	movf	tablat,w,c
  7226  004DB2  0900               	iorlw	0
  7227  004DB4  B4D8               	btfsc	status,2,c
  7228  004DB6  EFDF  F026         	goto	u6251
  7229  004DBA  EFE1  F026         	goto	u6250
  7230  004DBE                     u6251:
  7231  004DBE  EFFE  F026         	goto	l5180
  7232  004DC2                     u6250:
  7233  004DC2  5005               	movf	strncmp@n^0,w,c
  7234  004DC4  1006               	iorwf	(strncmp@n+1)^0,w,c
  7235  004DC6  B4D8               	btfsc	status,2,c
  7236  004DC8  EFE8  F026         	goto	u6261
  7237  004DCC  EFEA  F026         	goto	u6260
  7238  004DD0                     u6261:
  7239  004DD0  EFFE  F026         	goto	l5180
  7240  004DD4                     u6260:
  7241  004DD4  C008  FFD9         	movff	strncmp@l,fsr2l
  7242  004DD8  C009  FFDA         	movff	strncmp@l+1,fsr2h
  7243  004DDC  50DF               	movf	indf2,w,c
  7244  004DDE  6E07               	movwf	??_strncmp^0,c
  7245  004DE0  C00A  FFF6         	movff	strncmp@r,tblptrl
  7246  004DE4  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7247  004DE8                     	if	0	;tblptru may be non-zero
  7248  004DE8                     	endif
  7249  004DE8                     	if	0	;tblptru may be non-zero
  7250  004DE8                     	endif
  7251  004DE8  0008               	tblrd		*
  7252  004DEA  50F5               	movf	tablat,w,c
  7253  004DEC  1807               	xorwf	??_strncmp^0,w,c
  7254  004DEE  B4D8               	btfsc	status,2,c
  7255  004DF0  EFFC  F026         	goto	u6271
  7256  004DF4  EFFE  F026         	goto	u6270
  7257  004DF8                     u6271:
  7258  004DF8  EFC0  F026         	goto	l5170
  7259  004DFC                     u6270:
  7260  004DFC                     l5180:
  7261  004DFC  C008  FFD9         	movff	strncmp@l,fsr2l
  7262  004E00  C009  FFDA         	movff	strncmp@l+1,fsr2h
  7263  004E04  50DF               	movf	indf2,w,c
  7264  004E06  6E07               	movwf	??_strncmp^0,c
  7265  004E08  C00A  FFF6         	movff	strncmp@r,tblptrl
  7266  004E0C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7267  004E10                     	if	0	;tblptru may be non-zero
  7268  004E10                     	endif
  7269  004E10                     	if	0	;tblptru may be non-zero
  7270  004E10                     	endif
  7271  004E10  0008               	tblrd		*
  7272  004E12  50F5               	movf	tablat,w,c
  7273  004E14  5C07               	subwf	??_strncmp^0,w,c
  7274  004E16  6E01               	movwf	?_strncmp^0,c
  7275  004E18  6A02               	clrf	(?_strncmp+1)^0,c
  7276  004E1A  A0D8               	btfss	status,0,c
  7277  004E1C  0602               	decf	(?_strncmp+1)^0,f,c
  7278  004E1E                     l1500:
  7279  004E1E  0012               	return		;funcret
  7280  004E20                     __end_of_strncmp:
  7281                           	callstack 0
  7282                           
  7283 ;; *************** function _efgtoa *****************
  7284 ;; Defined at:
  7285 ;;		line 319 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7286 ;; Parameters:    Size  Location     Type
  7287 ;;  fp              2   87[COMRAM] PTR struct _IO_FILE
  7288 ;;		 -> sprintf@f(6), 
  7289 ;;  f               4   89[COMRAM] PTR struct _IO_FILE
  7290 ;;  c               1   93[COMRAM] unsigned char 
  7291 ;; Auto vars:     Size  Location     Type
  7292 ;;  u               4   67[BANK0 ] unsigned char 
  7293 ;;  g               4   59[BANK0 ] unsigned char 
  7294 ;;  l               4   53[BANK0 ] unsigned char 
  7295 ;;  h               4   49[BANK0 ] unsigned char 
  7296 ;;  ou              4   15[BANK0 ] unsigned char 
  7297 ;;  n               2   65[BANK0 ] int 
  7298 ;;  e               2   63[BANK0 ] int 
  7299 ;;  i               2   57[BANK0 ] int 
  7300 ;;  w               2   46[BANK0 ] int 
  7301 ;;  p               2   43[BANK0 ] int 
  7302 ;;  sign            2   41[BANK0 ] int 
  7303 ;;  d               2   39[BANK0 ] int 
  7304 ;;  ne              2   37[BANK0 ] int 
  7305 ;;  m               2   35[BANK0 ] int 
  7306 ;;  pp              2   33[BANK0 ] int 
  7307 ;;  t               2   31[BANK0 ] int 
  7308 ;;  mode            1   48[BANK0 ] unsigned char 
  7309 ;;  nmode           1   45[BANK0 ] unsigned char 
  7310 ;; Return value:  Size  Location     Type
  7311 ;;                  2   87[COMRAM] int 
  7312 ;; Registers used:
  7313 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7314 ;; Tracked objects:
  7315 ;;		On entry : 0/0
  7316 ;;		On exit  : 0/0
  7317 ;;		Unchanged: 0/0
  7318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7319 ;;      Params:         7       0       0       0       0       0       0
  7320 ;;      Locals:         0      56       0       0       0       0       0
  7321 ;;      Temps:          0       5       0       0       0       0       0
  7322 ;;      Totals:         7      61       0       0       0       0       0
  7323 ;;Total ram usage:       68 bytes
  7324 ;; Hardware stack levels used:    1
  7325 ;; Hardware stack levels required when called:    5
  7326 ;; This function calls:
  7327 ;;		___awdiv
  7328 ;;		___awmod
  7329 ;;		___fladd
  7330 ;;		___fldiv
  7331 ;;		___fleq
  7332 ;;		___flge
  7333 ;;		___flmul
  7334 ;;		___flneg
  7335 ;;		___flsub
  7336 ;;		___fltol
  7337 ;;		___fpclassifyf
  7338 ;;		_floorf
  7339 ;;		_isupper
  7340 ;;		_pad
  7341 ;;		_strcpy
  7342 ;;		_tolower
  7343 ;; This function is called by:
  7344 ;;		_vfpfcnvrt
  7345 ;; This function uses a non-reentrant model
  7346 ;;
  7347                           
  7348                           	psect	text23
  7349  0006D8                     __ptext23:
  7350                           	callstack 0
  7351  0006D8                     _efgtoa:
  7352                           	callstack 20
  7353  0006D8                     
  7354                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\
      +                          c99\common\doprnt.c: 320: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\
      +                          doprnt.c: 321:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c9
      +                          9\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;
  7355  0006D8  0E00               	movlw	0
  7356  0006DA  0100               	movlb	0	; () banked
  7357  0006DC  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  7358  0006DE  0E00               	movlw	0
  7359  0006E0  6F89               	movwf	efgtoa@sign& (0+255),b
  7360  0006E2                     
  7361                           ; BSR set to: 0
  7362                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  7363  0006E2  C05A  F09B         	movff	efgtoa@f,efgtoa@g
  7364  0006E6  C05B  F09C         	movff	efgtoa@f+1,efgtoa@g+1
  7365  0006EA  C05C  F09D         	movff	efgtoa@f+2,efgtoa@g+2
  7366  0006EE  C05D  F09E         	movff	efgtoa@f+3,efgtoa@g+3
  7367  0006F2                     
  7368                           ; BSR set to: 0
  7369                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 
      +                          0.0) {
  7370  0006F2  BF9E               	btfsc	(efgtoa@g+3)& (0+255),7,b
  7371  0006F4  EF80  F003         	goto	u5640
  7372  0006F8  EF7E  F003         	goto	u5641
  7373  0006FC                     u5641:
  7374  0006FC  EF96  F003         	goto	l4834
  7375  000700                     u5640:
  7376  000700                     
  7377                           ; BSR set to: 0
  7378                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign
      +                           = 1;
  7379  000700  0E00               	movlw	0
  7380  000702  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  7381  000704  0E01               	movlw	1
  7382  000706  6F89               	movwf	efgtoa@sign& (0+255),b
  7383  000708                     
  7384                           ; BSR set to: 0
  7385                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = 
      +                          -g;
  7386  000708  C09B  F001         	movff	efgtoa@g,___flneg@f1
  7387  00070C  C09C  F002         	movff	efgtoa@g+1,___flneg@f1+1
  7388  000710  C09D  F003         	movff	efgtoa@g+2,___flneg@f1+2
  7389  000714  C09E  F004         	movff	efgtoa@g+3,___flneg@f1+3
  7390  000718  ECF5  F02C         	call	___flneg	;wreg free
  7391  00071C  C001  F09B         	movff	?___flneg,efgtoa@g
  7392  000720  C002  F09C         	movff	?___flneg+1,efgtoa@g+1
  7393  000724  C003  F09D         	movff	?___flneg+2,efgtoa@g+2
  7394  000728  C004  F09E         	movff	?___flneg+3,efgtoa@g+3
  7395  00072C                     l4834:
  7396                           
  7397                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  7398  00072C  0E00               	movlw	0
  7399  00072E  0100               	movlb	0	; () banked
  7400  000730  6FA2               	movwf	(efgtoa@n+1)& (0+255),b
  7401  000732  0E00               	movlw	0
  7402  000734  6FA1               	movwf	efgtoa@n& (0+255),b
  7403  000736                     
  7404                           ; BSR set to: 0
  7405                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = widt
      +                          h;
  7406  000736  C194  F08E         	movff	_width,efgtoa@w
  7407  00073A  C195  F08F         	movff	_width+1,efgtoa@w+1
  7408  00073E                     
  7409                           ; BSR set to: 0
  7410                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign
      +                           || (flags & (1 << 2))) {
  7411  00073E  5189               	movf	efgtoa@sign& (0+255),w,b
  7412  000740  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7413  000742  A4D8               	btfss	status,2,c
  7414  000744  EFA6  F003         	goto	u5651
  7415  000748  EFA8  F003         	goto	u5650
  7416  00074C                     u5651:
  7417  00074C  EFB0  F003         	goto	l4842
  7418  000750                     u5650:
  7419  000750                     
  7420                           ; BSR set to: 0
  7421  000750  0101               	movlb	1	; () banked
  7422  000752  A598               	btfss	_flags& (0+255),2,b
  7423  000754  EFAE  F003         	goto	u5661
  7424  000758  EFB0  F003         	goto	u5660
  7425  00075C                     u5661:
  7426  00075C  EFCB  F003         	goto	l4854
  7427  000760                     u5660:
  7428  000760                     l4842:
  7429                           
  7430                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf
      +                          [n] = sign ? '-' : '+';
  7431  000760  0100               	movlb	0	; () banked
  7432  000762  5189               	movf	efgtoa@sign& (0+255),w,b
  7433  000764  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7434  000766  A4D8               	btfss	status,2,c
  7435  000768  EFB8  F003         	goto	u5671
  7436  00076C  EFBA  F003         	goto	u5670
  7437  000770                     u5671:
  7438  000770  EFC0  F003         	goto	l4846
  7439  000774                     u5670:
  7440  000774                     
  7441                           ; BSR set to: 0
  7442  000774  0E00               	movlw	0
  7443  000776  6F74               	movwf	(_efgtoa$2505+1)& (0+255),b
  7444  000778  0E2B               	movlw	43
  7445  00077A  6F73               	movwf	_efgtoa$2505& (0+255),b
  7446  00077C  EFC4  F003         	goto	l4848
  7447  000780                     l4846:
  7448                           
  7449                           ; BSR set to: 0
  7450  000780  0E00               	movlw	0
  7451  000782  6F74               	movwf	(_efgtoa$2505+1)& (0+255),b
  7452  000784  0E2D               	movlw	45
  7453  000786  6F73               	movwf	_efgtoa$2505& (0+255),b
  7454  000788                     l4848:
  7455                           
  7456                           ; BSR set to: 0
  7457  000788  C073  F19F         	movff	_efgtoa$2505,_dbuf
  7458  00078C                     
  7459                           ; BSR set to: 0
  7460                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  7461  00078C  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  7462  00078E  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  7463  000790                     
  7464                           ; BSR set to: 0
  7465                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  7466  000790  078E               	decf	efgtoa@w& (0+255),f,b
  7467  000792  A0D8               	btfss	status,0,c
  7468  000794  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  7469  000796                     l4854:
  7470                           
  7471                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  7472  000796  C09B  F001         	movff	efgtoa@g,___fpclassifyf@x
  7473  00079A  C09C  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7474  00079E  C09D  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7475  0007A2  C09E  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7476  0007A6  ECAB  F025         	call	___fpclassifyf	;wreg free
  7477  0007AA  0401               	decf	?___fpclassifyf^0,w,c
  7478  0007AC  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  7479  0007AE  A4D8               	btfss	status,2,c
  7480  0007B0  EFDC  F003         	goto	u5681
  7481  0007B4  EFDE  F003         	goto	u5680
  7482  0007B8                     u5681:
  7483  0007B8  EF35  F004         	goto	l4872
  7484  0007BC                     u5680:
  7485  0007BC  0EBF               	movlw	191
  7486  0007BE  0100               	movlb	0	; () banked
  7487  0007C0  6F6A               	movwf	??_efgtoa& (0+255),b
  7488  0007C2  0EFF               	movlw	255
  7489  0007C4  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  7490  0007C6  505E               	movf	efgtoa@c^0,w,c
  7491  0007C8  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  7492  0007CA  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  7493  0007CC  516A               	movf	??_efgtoa& (0+255),w,b
  7494  0007CE  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  7495  0007D0  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  7496  0007D2  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7497  0007D4  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  7498  0007D6  E10A               	bnz	u5690
  7499  0007D8  0E1A               	movlw	26
  7500  0007DA  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  7501  0007DC  A0D8               	btfss	status,0,c
  7502  0007DE  EFF3  F003         	goto	u5691
  7503  0007E2  EFF6  F003         	goto	u5690
  7504  0007E6                     u5691:
  7505  0007E6  0E01               	movlw	1
  7506  0007E8  EFF7  F003         	goto	u5700
  7507  0007EC                     u5690:
  7508  0007EC  0E00               	movlw	0
  7509  0007EE                     u5700:
  7510  0007EE  6F75               	movwf	_efgtoa$2506& (0+255),b
  7511  0007F0  6B76               	clrf	(_efgtoa$2506+1)& (0+255),b
  7512  0007F2                     
  7513                           ; BSR set to: 0
  7514  0007F2  5175               	movf	_efgtoa$2506& (0+255),w,b
  7515  0007F4  1176               	iorwf	(_efgtoa$2506+1)& (0+255),w,b
  7516  0007F6  B4D8               	btfsc	status,2,c
  7517  0007F8  EF00  F004         	goto	u5711
  7518  0007FC  EF02  F004         	goto	u5710
  7519  000800                     u5711:
  7520  000800  EF10  F004         	goto	l4864
  7521  000804                     u5710:
  7522  000804                     
  7523                           ; BSR set to: 0
  7524                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             
      +                          strcpy(&dbuf[n], "INF");
  7525  000804  0E9F               	movlw	low _dbuf
  7526  000806  25A1               	addwf	efgtoa@n& (0+255),w,b
  7527  000808  6E01               	movwf	strcpy@dest^0,c
  7528  00080A  0E01               	movlw	high _dbuf
  7529  00080C  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7530  00080E  6E02               	movwf	(strcpy@dest+1)^0,c
  7531  000810  0EC4               	movlw	low STR_17
  7532  000812  6E03               	movwf	strcpy@src^0,c
  7533  000814  0E06               	movlw	high STR_17
  7534  000816  6E04               	movwf	(strcpy@src+1)^0,c
  7535  000818  EC3F  F02B         	call	_strcpy	;wreg free
  7536                           
  7537                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } el
      +                          se {
  7538  00081C  EF1C  F004         	goto	l4866
  7539  000820                     l4864:
  7540                           
  7541                           ; BSR set to: 0
  7542                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             
      +                          strcpy(&dbuf[n], "inf");
  7543  000820  0E9F               	movlw	low _dbuf
  7544  000822  25A1               	addwf	efgtoa@n& (0+255),w,b
  7545  000824  6E01               	movwf	strcpy@dest^0,c
  7546  000826  0E01               	movlw	high _dbuf
  7547  000828  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7548  00082A  6E02               	movwf	(strcpy@dest+1)^0,c
  7549  00082C  0ECC               	movlw	low STR_18
  7550  00082E  6E03               	movwf	strcpy@src^0,c
  7551  000830  0E06               	movlw	high STR_18
  7552  000832  6E04               	movwf	(strcpy@src+1)^0,c
  7553  000834  EC3F  F02B         	call	_strcpy	;wreg free
  7554  000838                     l4866:
  7555                           
  7556                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  7557  000838  0100               	movlb	0	; () banked
  7558  00083A  0EFD               	movlw	253
  7559  00083C  278E               	addwf	efgtoa@w& (0+255),f,b
  7560  00083E  0EFF               	movlw	255
  7561  000840  238F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  7562  000842                     l4868:
  7563                           
  7564                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         retu
      +                          rn pad(fp, &dbuf[0], w);
  7565  000842  C058  F011         	movff	efgtoa@fp,pad@fp
  7566  000846  C059  F012         	movff	efgtoa@fp+1,pad@fp+1
  7567  00084A  0E9F               	movlw	low _dbuf
  7568  00084C  6E13               	movwf	pad@buf^0,c
  7569  00084E  0E01               	movlw	high _dbuf
  7570  000850  6E14               	movwf	(pad@buf+1)^0,c
  7571  000852  C08E  F015         	movff	efgtoa@w,pad@p
  7572  000856  C08F  F016         	movff	efgtoa@w+1,pad@p+1
  7573  00085A  EC75  F027         	call	_pad	;wreg free
  7574  00085E  C011  F058         	movff	?_pad,?_efgtoa
  7575  000862  C012  F059         	movff	?_pad+1,?_efgtoa+1
  7576  000866  EF4E  F009         	goto	l1262
  7577  00086A                     l4872:
  7578                           
  7579                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  7580  00086A  C09B  F001         	movff	efgtoa@g,___fpclassifyf@x
  7581  00086E  C09C  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7582  000872  C09D  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7583  000876  C09E  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7584  00087A  ECAB  F025         	call	___fpclassifyf	;wreg free
  7585  00087E  5001               	movf	?___fpclassifyf^0,w,c
  7586  000880  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  7587  000882  A4D8               	btfss	status,2,c
  7588  000884  EF46  F004         	goto	u5721
  7589  000888  EF48  F004         	goto	u5720
  7590  00088C                     u5721:
  7591  00088C  EF88  F004         	goto	l4890
  7592  000890                     u5720:
  7593  000890  0EBF               	movlw	191
  7594  000892  0100               	movlb	0	; () banked
  7595  000894  6F6A               	movwf	??_efgtoa& (0+255),b
  7596  000896  0EFF               	movlw	255
  7597  000898  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  7598  00089A  505E               	movf	efgtoa@c^0,w,c
  7599  00089C  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  7600  00089E  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  7601  0008A0  516A               	movf	??_efgtoa& (0+255),w,b
  7602  0008A2  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  7603  0008A4  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  7604  0008A6  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7605  0008A8  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  7606  0008AA  E10A               	bnz	u5730
  7607  0008AC  0E1A               	movlw	26
  7608  0008AE  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  7609  0008B0  A0D8               	btfss	status,0,c
  7610  0008B2  EF5D  F004         	goto	u5731
  7611  0008B6  EF60  F004         	goto	u5730
  7612  0008BA                     u5731:
  7613  0008BA  0E01               	movlw	1
  7614  0008BC  EF61  F004         	goto	u5740
  7615  0008C0                     u5730:
  7616  0008C0  0E00               	movlw	0
  7617  0008C2                     u5740:
  7618  0008C2  6F77               	movwf	_efgtoa$2510& (0+255),b
  7619  0008C4  6B78               	clrf	(_efgtoa$2510+1)& (0+255),b
  7620  0008C6                     
  7621                           ; BSR set to: 0
  7622  0008C6  5177               	movf	_efgtoa$2510& (0+255),w,b
  7623  0008C8  1178               	iorwf	(_efgtoa$2510+1)& (0+255),w,b
  7624  0008CA  B4D8               	btfsc	status,2,c
  7625  0008CC  EF6A  F004         	goto	u5751
  7626  0008D0  EF6C  F004         	goto	u5750
  7627  0008D4                     u5751:
  7628  0008D4  EF7A  F004         	goto	l4882
  7629  0008D8                     u5750:
  7630  0008D8                     
  7631                           ; BSR set to: 0
  7632                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             
      +                          strcpy(&dbuf[n], "NAN");
  7633  0008D8  0E9F               	movlw	low _dbuf
  7634  0008DA  25A1               	addwf	efgtoa@n& (0+255),w,b
  7635  0008DC  6E01               	movwf	strcpy@dest^0,c
  7636  0008DE  0E01               	movlw	high _dbuf
  7637  0008E0  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7638  0008E2  6E02               	movwf	(strcpy@dest+1)^0,c
  7639  0008E4  0EC8               	movlw	low STR_21
  7640  0008E6  6E03               	movwf	strcpy@src^0,c
  7641  0008E8  0E06               	movlw	high STR_21
  7642  0008EA  6E04               	movwf	(strcpy@src+1)^0,c
  7643  0008EC  EC3F  F02B         	call	_strcpy	;wreg free
  7644                           
  7645                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } el
      +                          se {
  7646  0008F0  EF1C  F004         	goto	l4866
  7647  0008F4                     l4882:
  7648                           
  7649                           ; BSR set to: 0
  7650                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             
      +                          strcpy(&dbuf[n], "nan");
  7651  0008F4  0E9F               	movlw	low _dbuf
  7652  0008F6  25A1               	addwf	efgtoa@n& (0+255),w,b
  7653  0008F8  6E01               	movwf	strcpy@dest^0,c
  7654  0008FA  0E01               	movlw	high _dbuf
  7655  0008FC  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7656  0008FE  6E02               	movwf	(strcpy@dest+1)^0,c
  7657  000900  0ED0               	movlw	low STR_22
  7658  000902  6E03               	movwf	strcpy@src^0,c
  7659  000904  0E06               	movlw	high STR_22
  7660  000906  6E04               	movwf	(strcpy@src+1)^0,c
  7661  000908  EC3F  F02B         	call	_strcpy	;wreg free
  7662  00090C  EF1C  F004         	goto	l4866
  7663  000910                     l4890:
  7664                           
  7665                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  7666  000910  0E00               	movlw	0
  7667  000912  0100               	movlb	0	; () banked
  7668  000914  6FA3               	movwf	efgtoa@u& (0+255),b
  7669  000916  0E00               	movlw	0
  7670  000918  6FA4               	movwf	(efgtoa@u+1)& (0+255),b
  7671  00091A  0E80               	movlw	128
  7672  00091C  6FA5               	movwf	(efgtoa@u+2)& (0+255),b
  7673  00091E  0E3F               	movlw	63
  7674  000920  6FA6               	movwf	(efgtoa@u+3)& (0+255),b
  7675                           
  7676                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  7677  000922  0E00               	movlw	0
  7678  000924  6FA0               	movwf	(efgtoa@e+1)& (0+255),b
  7679  000926  0E00               	movlw	0
  7680  000928  6F9F               	movwf	efgtoa@e& (0+255),b
  7681  00092A                     
  7682                           ; BSR set to: 0
  7683                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g 
      +                          == 0.0)) {
  7684  00092A  C09B  F001         	movff	efgtoa@g,___fleq@ff1
  7685  00092E  C09C  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  7686  000932  C09D  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  7687  000936  C09E  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  7688  00093A  0E00               	movlw	0
  7689  00093C  6E05               	movwf	___fleq@ff2^0,c
  7690  00093E  0E00               	movlw	0
  7691  000940  6E06               	movwf	(___fleq@ff2+1)^0,c
  7692  000942  0E00               	movlw	0
  7693  000944  6E07               	movwf	(___fleq@ff2+2)^0,c
  7694  000946  0E00               	movlw	0
  7695  000948  6E08               	movwf	(___fleq@ff2+3)^0,c
  7696  00094A  EC92  F028         	call	___fleq	;wreg free
  7697  00094E  B0D8               	btfsc	status,0,c
  7698  000950  EFAC  F004         	goto	u5761
  7699  000954  EFAE  F004         	goto	u5760
  7700  000958                     u5761:
  7701  000958  EF31  F005         	goto	l4908
  7702  00095C                     u5760:
  7703  00095C  EFCD  F004         	goto	l4900
  7704  000960                     l4896:
  7705                           
  7706                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             
      +                          u = u*10.0;
  7707  000960  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  7708  000964  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  7709  000968  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  7710  00096C  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  7711  000970  0E00               	movlw	0
  7712  000972  6E20               	movwf	___flmul@a^0,c
  7713  000974  0E00               	movlw	0
  7714  000976  6E21               	movwf	(___flmul@a+1)^0,c
  7715  000978  0E20               	movlw	32
  7716  00097A  6E22               	movwf	(___flmul@a+2)^0,c
  7717  00097C  0E41               	movlw	65
  7718  00097E  6E23               	movwf	(___flmul@a+3)^0,c
  7719  000980  EC8A  F017         	call	___flmul	;wreg free
  7720  000984  C01C  F0A3         	movff	?___flmul,efgtoa@u
  7721  000988  C01D  F0A4         	movff	?___flmul+1,efgtoa@u+1
  7722  00098C  C01E  F0A5         	movff	?___flmul+2,efgtoa@u+2
  7723  000990  C01F  F0A6         	movff	?___flmul+3,efgtoa@u+3
  7724  000994                     
  7725                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             
      +                          ++e;
  7726  000994  0100               	movlb	0	; () banked
  7727  000996  4B9F               	infsnz	efgtoa@e& (0+255),f,b
  7728  000998  2BA0               	incf	(efgtoa@e+1)& (0+255),f,b
  7729  00099A                     l4900:
  7730                           
  7731                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         whil
      +                          e (!(g < (u*10.0))) {
  7732  00099A  C09B  F035         	movff	efgtoa@g,___flge@ff1
  7733  00099E  C09C  F036         	movff	efgtoa@g+1,___flge@ff1+1
  7734  0009A2  C09D  F037         	movff	efgtoa@g+2,___flge@ff1+2
  7735  0009A6  C09E  F038         	movff	efgtoa@g+3,___flge@ff1+3
  7736  0009AA  0E00               	movlw	0
  7737  0009AC  6E20               	movwf	___flmul@a^0,c
  7738  0009AE  0E00               	movlw	0
  7739  0009B0  6E21               	movwf	(___flmul@a+1)^0,c
  7740  0009B2  0E20               	movlw	32
  7741  0009B4  6E22               	movwf	(___flmul@a+2)^0,c
  7742  0009B6  0E41               	movlw	65
  7743  0009B8  6E23               	movwf	(___flmul@a+3)^0,c
  7744  0009BA  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  7745  0009BE  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  7746  0009C2  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  7747  0009C6  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  7748  0009CA  EC8A  F017         	call	___flmul	;wreg free
  7749  0009CE  C01C  F039         	movff	?___flmul,___flge@ff2
  7750  0009D2  C01D  F03A         	movff	?___flmul+1,___flge@ff2+1
  7751  0009D6  C01E  F03B         	movff	?___flmul+2,___flge@ff2+2
  7752  0009DA  C01F  F03C         	movff	?___flmul+3,___flge@ff2+3
  7753  0009DE  EC29  F025         	call	___flge	;wreg free
  7754  0009E2  B0D8               	btfsc	status,0,c
  7755  0009E4  EFF6  F004         	goto	u5771
  7756  0009E8  EFF8  F004         	goto	u5770
  7757  0009EC                     u5771:
  7758  0009EC  EFB0  F004         	goto	l4896
  7759  0009F0                     u5770:
  7760  0009F0  EF18  F005         	goto	l4906
  7761  0009F4                     l4902:
  7762                           
  7763                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             
      +                          u = u/10.0;
  7764  0009F4  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  7765  0009F8  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  7766  0009FC  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  7767  000A00  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  7768  000A04  0E00               	movlw	0
  7769  000A06  6E39               	movwf	___fldiv@a^0,c
  7770  000A08  0E00               	movlw	0
  7771  000A0A  6E3A               	movwf	(___fldiv@a+1)^0,c
  7772  000A0C  0E20               	movlw	32
  7773  000A0E  6E3B               	movwf	(___fldiv@a+2)^0,c
  7774  000A10  0E41               	movlw	65
  7775  000A12  6E3C               	movwf	(___fldiv@a+3)^0,c
  7776  000A14  EC9F  F019         	call	___fldiv	;wreg free
  7777  000A18  C035  F0A3         	movff	?___fldiv,efgtoa@u
  7778  000A1C  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  7779  000A20  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  7780  000A24  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  7781  000A28                     
  7782                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             
      +                          --e;
  7783  000A28  0100               	movlb	0	; () banked
  7784  000A2A  079F               	decf	efgtoa@e& (0+255),f,b
  7785  000A2C  A0D8               	btfss	status,0,c
  7786  000A2E  07A0               	decf	(efgtoa@e+1)& (0+255),f,b
  7787  000A30                     l4906:
  7788                           
  7789                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         whil
      +                          e (g < u) {
  7790  000A30  C09B  F035         	movff	efgtoa@g,___flge@ff1
  7791  000A34  C09C  F036         	movff	efgtoa@g+1,___flge@ff1+1
  7792  000A38  C09D  F037         	movff	efgtoa@g+2,___flge@ff1+2
  7793  000A3C  C09E  F038         	movff	efgtoa@g+3,___flge@ff1+3
  7794  000A40  C0A3  F039         	movff	efgtoa@u,___flge@ff2
  7795  000A44  C0A4  F03A         	movff	efgtoa@u+1,___flge@ff2+1
  7796  000A48  C0A5  F03B         	movff	efgtoa@u+2,___flge@ff2+2
  7797  000A4C  C0A6  F03C         	movff	efgtoa@u+3,___flge@ff2+3
  7798  000A50  EC29  F025         	call	___flge	;wreg free
  7799  000A54  A0D8               	btfss	status,0,c
  7800  000A56  EF2F  F005         	goto	u5781
  7801  000A5A  EF31  F005         	goto	u5780
  7802  000A5E                     u5781:
  7803  000A5E  EFFA  F004         	goto	l4902
  7804  000A62                     u5780:
  7805  000A62                     l4908:
  7806                           
  7807                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = t
      +                          olower((int)c);
  7808  000A62  C05E  F007         	movff	efgtoa@c,tolower@c
  7809  000A66  6A08               	clrf	(tolower@c+1)^0,c
  7810  000A68  EC0F  F02B         	call	_tolower	;wreg free
  7811  000A6C  5007               	movf	?_tolower^0,w,c
  7812  000A6E  0100               	movlb	0	; () banked
  7813  000A70  6F90               	movwf	efgtoa@mode& (0+255),b
  7814  000A72                     
  7815                           ; BSR set to: 0
  7816                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = 
      +                          mode;
  7817  000A72  C090  F08D         	movff	efgtoa@mode,efgtoa@nmode
  7818  000A76                     
  7819                           ; BSR set to: 0
  7820                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode
      +                           == 'g') {
  7821  000A76  0E67               	movlw	103
  7822  000A78  1990               	xorwf	efgtoa@mode& (0+255),w,b
  7823  000A7A  A4D8               	btfss	status,2,c
  7824  000A7C  EF42  F005         	goto	u5791
  7825  000A80  EF44  F005         	goto	u5790
  7826  000A84                     u5791:
  7827  000A84  EF6C  F005         	goto	l4922
  7828  000A88                     u5790:
  7829  000A88                     
  7830                           ; BSR set to: 0
  7831                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec =
      +                          = 0) {
  7832  000A88  0101               	movlb	1	; () banked
  7833  000A8A  5196               	movf	_prec& (0+255),w,b
  7834  000A8C  1197               	iorwf	(_prec+1)& (0+255),w,b
  7835  000A8E  A4D8               	btfss	status,2,c
  7836  000A90  EF4C  F005         	goto	u5801
  7837  000A94  EF4E  F005         	goto	u5800
  7838  000A98                     u5801:
  7839  000A98  EF52  F005         	goto	l4918
  7840  000A9C                     u5800:
  7841  000A9C                     
  7842                           ; BSR set to: 1
  7843                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  7844  000A9C  0E00               	movlw	0
  7845  000A9E  6F97               	movwf	(_prec+1)& (0+255),b
  7846  000AA0  0E01               	movlw	1
  7847  000AA2  6F96               	movwf	_prec& (0+255),b
  7848  000AA4                     l4918:
  7849                           
  7850                           ; BSR set to: 1
  7851                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = 
      +                          (0 < prec) ? prec : 6;
  7852  000AA4  BF97               	btfsc	(_prec+1)& (0+255),7,b
  7853  000AA6  EF5F  F005         	goto	u5810
  7854  000AAA  5197               	movf	(_prec+1)& (0+255),w,b
  7855  000AAC  E106               	bnz	u5811
  7856  000AAE  0596               	decf	_prec& (0+255),w,b
  7857  000AB0  B0D8               	btfsc	status,0,c
  7858  000AB2  EF5D  F005         	goto	u5811
  7859  000AB6  EF5F  F005         	goto	u5810
  7860  000ABA                     u5811:
  7861  000ABA  EF66  F005         	goto	l1280
  7862  000ABE                     u5810:
  7863  000ABE                     l4920:
  7864                           
  7865                           ; BSR set to: 1
  7866  000ABE  0E00               	movlw	0
  7867  000AC0  0100               	movlb	0	; () banked
  7868  000AC2  6F8C               	movwf	(efgtoa@p+1)& (0+255),b
  7869  000AC4  0E06               	movlw	6
  7870  000AC6  6F8B               	movwf	efgtoa@p& (0+255),b
  7871  000AC8  EF76  F005         	goto	l4928
  7872  000ACC                     l1280:
  7873                           
  7874                           ; BSR set to: 1
  7875  000ACC  C196  F08B         	movff	_prec,efgtoa@p
  7876  000AD0  C197  F08C         	movff	_prec+1,efgtoa@p+1
  7877  000AD4  EF76  F005         	goto	l4928
  7878  000AD8                     l4922:
  7879                           
  7880                           ; BSR set to: 0
  7881                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = 
      +                          (prec < 0) ? 6 : prec;
  7882  000AD8  0101               	movlb	1	; () banked
  7883  000ADA  BF97               	btfsc	(_prec+1)& (0+255),7,b
  7884  000ADC  EF72  F005         	goto	u5821
  7885  000AE0  EF74  F005         	goto	u5820
  7886  000AE4                     u5821:
  7887  000AE4  EF5F  F005         	goto	l4920
  7888  000AE8                     u5820:
  7889  000AE8  EF66  F005         	goto	l1280
  7890  000AEC                     l4928:
  7891                           
  7892                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode
      +                           == 'g') {
  7893  000AEC  0E67               	movlw	103
  7894  000AEE  0100               	movlb	0	; () banked
  7895  000AF0  1990               	xorwf	efgtoa@mode& (0+255),w,b
  7896  000AF2  A4D8               	btfss	status,2,c
  7897  000AF4  EF7E  F005         	goto	u5831
  7898  000AF8  EF80  F005         	goto	u5830
  7899  000AFC                     u5831:
  7900  000AFC  EFAF  F005         	goto	l4938
  7901  000B00                     u5830:
  7902  000B00                     
  7903                           ; BSR set to: 0
  7904                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  7905  000B00  AFA0               	btfss	(efgtoa@e+1)& (0+255),7,b
  7906  000B02  EF8E  F005         	goto	u5840
  7907  000B06  0EFC               	movlw	252
  7908  000B08  5D9F               	subwf	efgtoa@e& (0+255),w,b
  7909  000B0A  0EFF               	movlw	255
  7910  000B0C  59A0               	subwfb	(efgtoa@e+1)& (0+255),w,b
  7911  000B0E  A0D8               	btfss	status,0,c
  7912  000B10  EF8C  F005         	goto	u5841
  7913  000B14  EF8E  F005         	goto	u5840
  7914  000B18                     u5841:
  7915  000B18  EFAD  F005         	goto	l4936
  7916  000B1C                     u5840:
  7917  000B1C                     
  7918                           ; BSR set to: 0
  7919  000B1C  0EFF               	movlw	255
  7920  000B1E  6F6A               	movwf	??_efgtoa& (0+255),b
  7921  000B20  0EFF               	movlw	255
  7922  000B22  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  7923  000B24  C08B  F06C         	movff	efgtoa@p,??_efgtoa+2
  7924  000B28  C08C  F06D         	movff	efgtoa@p+1,??_efgtoa+3
  7925  000B2C  516A               	movf	??_efgtoa& (0+255),w,b
  7926  000B2E  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  7927  000B30  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  7928  000B32  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7929  000B34  519F               	movf	efgtoa@e& (0+255),w,b
  7930  000B36  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  7931  000B38  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  7932  000B3A  0A80               	xorlw	128
  7933  000B3C  6F6E               	movwf	(??_efgtoa+4)& (0+255),b
  7934  000B3E  51A0               	movf	(efgtoa@e+1)& (0+255),w,b
  7935  000B40  0A80               	xorlw	128
  7936  000B42  596E               	subwfb	(??_efgtoa+4)& (0+255),w,b
  7937  000B44  A0D8               	btfss	status,0,c
  7938  000B46  EFA7  F005         	goto	u5851
  7939  000B4A  EFA9  F005         	goto	u5850
  7940  000B4E                     u5851:
  7941  000B4E  EFAD  F005         	goto	l4936
  7942  000B52                     u5850:
  7943  000B52                     
  7944                           ; BSR set to: 0
  7945                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             
      +                          nmode = 'f';
  7946  000B52  0E66               	movlw	102
  7947  000B54  6F8D               	movwf	efgtoa@nmode& (0+255),b
  7948                           
  7949                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } el
      +                          se {
  7950  000B56  EFAF  F005         	goto	l4938
  7951  000B5A                     l4936:
  7952                           
  7953                           ; BSR set to: 0
  7954                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             
      +                          nmode = 'e';
  7955  000B5A  0E65               	movlw	101
  7956  000B5C  6F8D               	movwf	efgtoa@nmode& (0+255),b
  7957  000B5E                     l4938:
  7958                           
  7959                           ; BSR set to: 0
  7960                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  7961  000B5E  C08B  F083         	movff	efgtoa@p,efgtoa@m
  7962  000B62  C08C  F084         	movff	efgtoa@p+1,efgtoa@m+1
  7963  000B66                     
  7964                           ; BSR set to: 0
  7965                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  7966  000B66  0E67               	movlw	103
  7967  000B68  1990               	xorwf	efgtoa@mode& (0+255),w,b
  7968  000B6A  A4D8               	btfss	status,2,c
  7969  000B6C  EFBA  F005         	goto	u5861
  7970  000B70  EFBC  F005         	goto	u5860
  7971  000B74                     u5861:
  7972  000B74  EFCC  F005         	goto	l4946
  7973  000B78                     u5860:
  7974  000B78                     
  7975                           ; BSR set to: 0
  7976  000B78  0E66               	movlw	102
  7977  000B7A  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  7978  000B7C  A4D8               	btfss	status,2,c
  7979  000B7E  EFC3  F005         	goto	u5871
  7980  000B82  EFC5  F005         	goto	u5870
  7981  000B86                     u5871:
  7982  000B86  EFCE  F005         	goto	l4948
  7983  000B8A                     u5870:
  7984  000B8A                     
  7985                           ; BSR set to: 0
  7986  000B8A  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  7987  000B8C  EFCC  F005         	goto	u5880
  7988  000B90  EFCA  F005         	goto	u5881
  7989  000B94                     u5881:
  7990  000B94  EFCE  F005         	goto	l4948
  7991  000B98                     u5880:
  7992  000B98                     l4946:
  7993                           
  7994                           ; BSR set to: 0
  7995                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  7996  000B98  4B83               	infsnz	efgtoa@m& (0+255),f,b
  7997  000B9A  2B84               	incf	(efgtoa@m+1)& (0+255),f,b
  7998  000B9C                     l4948:
  7999                           
  8000                           ; BSR set to: 0
  8001                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmod
      +                          e == 'f') {
  8002  000B9C  0E66               	movlw	102
  8003  000B9E  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8004  000BA0  A4D8               	btfss	status,2,c
  8005  000BA2  EFD5  F005         	goto	u5891
  8006  000BA6  EFD7  F005         	goto	u5890
  8007  000BAA                     u5891:
  8008  000BAA  EFF7  F005         	goto	l4958
  8009  000BAE                     u5890:
  8010  000BAE                     
  8011                           ; BSR set to: 0
  8012                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (
      +                          e < 0) {
  8013  000BAE  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8014  000BB0  EFDE  F005         	goto	u5900
  8015  000BB4  EFDC  F005         	goto	u5901
  8016  000BB8                     u5901:
  8017  000BB8  EFEA  F005         	goto	l4954
  8018  000BBC                     u5900:
  8019  000BBC                     
  8020                           ; BSR set to: 0
  8021                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             
      +                          u = 1.0;
  8022  000BBC  0E00               	movlw	0
  8023  000BBE  6FA3               	movwf	efgtoa@u& (0+255),b
  8024  000BC0  0E00               	movlw	0
  8025  000BC2  6FA4               	movwf	(efgtoa@u+1)& (0+255),b
  8026  000BC4  0E80               	movlw	128
  8027  000BC6  6FA5               	movwf	(efgtoa@u+2)& (0+255),b
  8028  000BC8  0E3F               	movlw	63
  8029  000BCA  6FA6               	movwf	(efgtoa@u+3)& (0+255),b
  8030                           
  8031                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             
      +                          e = 0;
  8032  000BCC  0E00               	movlw	0
  8033  000BCE  6FA0               	movwf	(efgtoa@e+1)& (0+255),b
  8034  000BD0  0E00               	movlw	0
  8035  000BD2  6F9F               	movwf	efgtoa@e& (0+255),b
  8036  000BD4                     l4954:
  8037                           
  8038                           ; BSR set to: 0
  8039                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (
      +                          !(mode == 'g')) {
  8040  000BD4  0E67               	movlw	103
  8041  000BD6  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8042  000BD8  B4D8               	btfsc	status,2,c
  8043  000BDA  EFF1  F005         	goto	u5911
  8044  000BDE  EFF3  F005         	goto	u5910
  8045  000BE2                     u5911:
  8046  000BE2  EFF7  F005         	goto	l4958
  8047  000BE6                     u5910:
  8048  000BE6                     
  8049                           ; BSR set to: 0
  8050                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             
      +                          m += e;
  8051  000BE6  519F               	movf	efgtoa@e& (0+255),w,b
  8052  000BE8  2783               	addwf	efgtoa@m& (0+255),f,b
  8053  000BEA  51A0               	movf	(efgtoa@e+1)& (0+255),w,b
  8054  000BEC  2384               	addwfc	(efgtoa@m+1)& (0+255),f,b
  8055  000BEE                     l4958:
  8056                           
  8057                           ; BSR set to: 0
  8058                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  8059  000BEE  0E00               	movlw	0
  8060  000BF0  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  8061  000BF2  0E00               	movlw	0
  8062  000BF4  6F99               	movwf	efgtoa@i& (0+255),b
  8063  000BF6                     
  8064                           ; BSR set to: 0
  8065                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  8066  000BF6  C09B  F091         	movff	efgtoa@g,efgtoa@h
  8067  000BFA  C09C  F092         	movff	efgtoa@g+1,efgtoa@h+1
  8068  000BFE  C09D  F093         	movff	efgtoa@g+2,efgtoa@h+2
  8069  000C02  C09E  F094         	movff	efgtoa@g+3,efgtoa@h+3
  8070  000C06                     
  8071                           ; BSR set to: 0
  8072                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  8073  000C06  C0A3  F06F         	movff	efgtoa@u,efgtoa@ou
  8074  000C0A  C0A4  F070         	movff	efgtoa@u+1,efgtoa@ou+1
  8075  000C0E  C0A5  F071         	movff	efgtoa@u+2,efgtoa@ou+2
  8076  000C12  C0A6  F072         	movff	efgtoa@u+3,efgtoa@ou+3
  8077                           
  8078                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  8079  000C16  EF88  F006         	goto	l4972
  8080  000C1A                     l4964:
  8081                           
  8082                           ; BSR set to: 0
  8083                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = 
      +                          floorf(h/u);
  8084  000C1A  C091  F035         	movff	efgtoa@h,___fldiv@b
  8085  000C1E  C092  F036         	movff	efgtoa@h+1,___fldiv@b+1
  8086  000C22  C093  F037         	movff	efgtoa@h+2,___fldiv@b+2
  8087  000C26  C094  F038         	movff	efgtoa@h+3,___fldiv@b+3
  8088  000C2A  C0A3  F039         	movff	efgtoa@u,___fldiv@a
  8089  000C2E  C0A4  F03A         	movff	efgtoa@u+1,___fldiv@a+1
  8090  000C32  C0A5  F03B         	movff	efgtoa@u+2,___fldiv@a+2
  8091  000C36  C0A6  F03C         	movff	efgtoa@u+3,___fldiv@a+3
  8092  000C3A  EC9F  F019         	call	___fldiv	;wreg free
  8093  000C3E  C035  F04E         	movff	?___fldiv,floorf@x
  8094  000C42  C036  F04F         	movff	?___fldiv+1,floorf@x+1
  8095  000C46  C037  F050         	movff	?___fldiv+2,floorf@x+2
  8096  000C4A  C038  F051         	movff	?___fldiv+3,floorf@x+3
  8097  000C4E  EC50  F01E         	call	_floorf	;wreg free
  8098  000C52  C04E  F095         	movff	?_floorf,efgtoa@l
  8099  000C56  C04F  F096         	movff	?_floorf+1,efgtoa@l+1
  8100  000C5A  C050  F097         	movff	?_floorf+2,efgtoa@l+2
  8101  000C5E  C051  F098         	movff	?_floorf+3,efgtoa@l+3
  8102                           
  8103                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = 
      +                          (int)l;
  8104  000C62  C095  F04E         	movff	efgtoa@l,___fltol@f1
  8105  000C66  C096  F04F         	movff	efgtoa@l+1,___fltol@f1+1
  8106  000C6A  C097  F050         	movff	efgtoa@l+2,___fltol@f1+2
  8107  000C6E  C098  F051         	movff	efgtoa@l+3,___fltol@f1+3
  8108  000C72  ECA6  F024         	call	___fltol	;wreg free
  8109  000C76  C04E  F087         	movff	?___fltol,efgtoa@d
  8110  000C7A  C04F  F088         	movff	?___fltol+1,efgtoa@d+1
  8111  000C7E                     
  8112                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -=
      +                           l*u;
  8113  000C7E  C091  F045         	movff	efgtoa@h,___flsub@b
  8114  000C82  C092  F046         	movff	efgtoa@h+1,___flsub@b+1
  8115  000C86  C093  F047         	movff	efgtoa@h+2,___flsub@b+2
  8116  000C8A  C094  F048         	movff	efgtoa@h+3,___flsub@b+3
  8117  000C8E  C0A3  F020         	movff	efgtoa@u,___flmul@a
  8118  000C92  C0A4  F021         	movff	efgtoa@u+1,___flmul@a+1
  8119  000C96  C0A5  F022         	movff	efgtoa@u+2,___flmul@a+2
  8120  000C9A  C0A6  F023         	movff	efgtoa@u+3,___flmul@a+3
  8121  000C9E  C095  F01C         	movff	efgtoa@l,___flmul@b
  8122  000CA2  C096  F01D         	movff	efgtoa@l+1,___flmul@b+1
  8123  000CA6  C097  F01E         	movff	efgtoa@l+2,___flmul@b+2
  8124  000CAA  C098  F01F         	movff	efgtoa@l+3,___flmul@b+3
  8125  000CAE  EC8A  F017         	call	___flmul	;wreg free
  8126  000CB2  C01C  F049         	movff	?___flmul,___flsub@a
  8127  000CB6  C01D  F04A         	movff	?___flmul+1,___flsub@a+1
  8128  000CBA  C01E  F04B         	movff	?___flmul+2,___flsub@a+2
  8129  000CBE  C01F  F04C         	movff	?___flmul+3,___flsub@a+3
  8130  000CC2  EC16  F02C         	call	___flsub	;wreg free
  8131  000CC6  C045  F091         	movff	?___flsub,efgtoa@h
  8132  000CCA  C046  F092         	movff	?___flsub+1,efgtoa@h+1
  8133  000CCE  C047  F093         	movff	?___flsub+2,efgtoa@h+2
  8134  000CD2  C048  F094         	movff	?___flsub+3,efgtoa@h+3
  8135  000CD6                     
  8136                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = 
      +                          u/10.0;
  8137  000CD6  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  8138  000CDA  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  8139  000CDE  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  8140  000CE2  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  8141  000CE6  0E00               	movlw	0
  8142  000CE8  6E39               	movwf	___fldiv@a^0,c
  8143  000CEA  0E00               	movlw	0
  8144  000CEC  6E3A               	movwf	(___fldiv@a+1)^0,c
  8145  000CEE  0E20               	movlw	32
  8146  000CF0  6E3B               	movwf	(___fldiv@a+2)^0,c
  8147  000CF2  0E41               	movlw	65
  8148  000CF4  6E3C               	movwf	(___fldiv@a+3)^0,c
  8149  000CF6  EC9F  F019         	call	___fldiv	;wreg free
  8150  000CFA  C035  F0A3         	movff	?___fldiv,efgtoa@u
  8151  000CFE  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  8152  000D02  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  8153  000D06  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  8154  000D0A                     
  8155                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  8156  000D0A  0100               	movlb	0	; () banked
  8157  000D0C  4B99               	infsnz	efgtoa@i& (0+255),f,b
  8158  000D0E  2B9A               	incf	(efgtoa@i+1)& (0+255),f,b
  8159  000D10                     l4972:
  8160                           
  8161                           ; BSR set to: 0
  8162                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  8163  000D10  5183               	movf	efgtoa@m& (0+255),w,b
  8164  000D12  5D99               	subwf	efgtoa@i& (0+255),w,b
  8165  000D14  519A               	movf	(efgtoa@i+1)& (0+255),w,b
  8166  000D16  0A80               	xorlw	128
  8167  000D18  6F6A               	movwf	??_efgtoa& (0+255),b
  8168  000D1A  5184               	movf	(efgtoa@m+1)& (0+255),w,b
  8169  000D1C  0A80               	xorlw	128
  8170  000D1E  596A               	subwfb	??_efgtoa& (0+255),w,b
  8171  000D20  A0D8               	btfss	status,0,c
  8172  000D22  EF95  F006         	goto	u5921
  8173  000D26  EF97  F006         	goto	u5920
  8174  000D2A                     u5921:
  8175  000D2A  EF0D  F006         	goto	l4964
  8176  000D2E                     u5920:
  8177  000D2E                     
  8178                           ; BSR set to: 0
  8179                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.
      +                          0;
  8180  000D2E  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  8181  000D32  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  8182  000D36  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  8183  000D3A  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  8184  000D3E  0E00               	movlw	0
  8185  000D40  6E20               	movwf	___flmul@a^0,c
  8186  000D42  0E00               	movlw	0
  8187  000D44  6E21               	movwf	(___flmul@a+1)^0,c
  8188  000D46  0EA0               	movlw	160
  8189  000D48  6E22               	movwf	(___flmul@a+2)^0,c
  8190  000D4A  0E40               	movlw	64
  8191  000D4C  6E23               	movwf	(___flmul@a+3)^0,c
  8192  000D4E  EC8A  F017         	call	___flmul	;wreg free
  8193  000D52  C01C  F095         	movff	?___flmul,efgtoa@l
  8194  000D56  C01D  F096         	movff	?___flmul+1,efgtoa@l+1
  8195  000D5A  C01E  F097         	movff	?___flmul+2,efgtoa@l+2
  8196  000D5E  C01F  F098         	movff	?___flmul+3,efgtoa@l+3
  8197  000D62                     
  8198                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < 
      +                          l) {
  8199  000D62  C091  F035         	movff	efgtoa@h,___flge@ff1
  8200  000D66  C092  F036         	movff	efgtoa@h+1,___flge@ff1+1
  8201  000D6A  C093  F037         	movff	efgtoa@h+2,___flge@ff1+2
  8202  000D6E  C094  F038         	movff	efgtoa@h+3,___flge@ff1+3
  8203  000D72  C095  F039         	movff	efgtoa@l,___flge@ff2
  8204  000D76  C096  F03A         	movff	efgtoa@l+1,___flge@ff2+1
  8205  000D7A  C097  F03B         	movff	efgtoa@l+2,___flge@ff2+2
  8206  000D7E  C098  F03C         	movff	efgtoa@l+3,___flge@ff2+3
  8207  000D82  EC29  F025         	call	___flge	;wreg free
  8208  000D86  B0D8               	btfsc	status,0,c
  8209  000D88  EFC8  F006         	goto	u5931
  8210  000D8C  EFCA  F006         	goto	u5930
  8211  000D90                     u5931:
  8212  000D90  EFD5  F006         	goto	l4980
  8213  000D94                     u5930:
  8214  000D94                     
  8215                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 
      +                          0.0;
  8216  000D94  0E00               	movlw	0
  8217  000D96  0100               	movlb	0	; () banked
  8218  000D98  6F95               	movwf	efgtoa@l& (0+255),b
  8219  000D9A  0E00               	movlw	0
  8220  000D9C  6F96               	movwf	(efgtoa@l+1)& (0+255),b
  8221  000D9E  0E00               	movlw	0
  8222  000DA0  6F97               	movwf	(efgtoa@l+2)& (0+255),b
  8223  000DA2  0E00               	movlw	0
  8224  000DA4  6F98               	movwf	(efgtoa@l+3)& (0+255),b
  8225                           
  8226                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  8227  000DA6  EFFE  F006         	goto	l4986
  8228  000DAA                     l4980:
  8229                           
  8230                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if (
      +                          (h == l) && !(d % 2)) {
  8231  000DAA  C091  F001         	movff	efgtoa@h,___fleq@ff1
  8232  000DAE  C092  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  8233  000DB2  C093  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  8234  000DB6  C094  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  8235  000DBA  C095  F005         	movff	efgtoa@l,___fleq@ff2
  8236  000DBE  C096  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  8237  000DC2  C097  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  8238  000DC6  C098  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  8239  000DCA  EC92  F028         	call	___fleq	;wreg free
  8240  000DCE  A0D8               	btfss	status,0,c
  8241  000DD0  EFEC  F006         	goto	u5941
  8242  000DD4  EFEE  F006         	goto	u5940
  8243  000DD8                     u5941:
  8244  000DD8  EFFE  F006         	goto	l4986
  8245  000DDC                     u5940:
  8246  000DDC  0100               	movlb	0	; () banked
  8247  000DDE  B187               	btfsc	efgtoa@d& (0+255),0,b
  8248  000DE0  EFF4  F006         	goto	u5951
  8249  000DE4  EFF6  F006         	goto	u5950
  8250  000DE8                     u5951:
  8251  000DE8  EFFE  F006         	goto	l4986
  8252  000DEC                     u5950:
  8253  000DEC                     
  8254                           ; BSR set to: 0
  8255                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             
      +                          l = 0.0;
  8256  000DEC  0E00               	movlw	0
  8257  000DEE  6F95               	movwf	efgtoa@l& (0+255),b
  8258  000DF0  0E00               	movlw	0
  8259  000DF2  6F96               	movwf	(efgtoa@l+1)& (0+255),b
  8260  000DF4  0E00               	movlw	0
  8261  000DF6  6F97               	movwf	(efgtoa@l+2)& (0+255),b
  8262  000DF8  0E00               	movlw	0
  8263  000DFA  6F98               	movwf	(efgtoa@l+3)& (0+255),b
  8264  000DFC                     l4986:
  8265                           
  8266                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + 
      +                          l;
  8267  000DFC  C09B  F035         	movff	efgtoa@g,___fladd@b
  8268  000E00  C09C  F036         	movff	efgtoa@g+1,___fladd@b+1
  8269  000E04  C09D  F037         	movff	efgtoa@g+2,___fladd@b+2
  8270  000E08  C09E  F038         	movff	efgtoa@g+3,___fladd@b+3
  8271  000E0C  C095  F039         	movff	efgtoa@l,___fladd@a
  8272  000E10  C096  F03A         	movff	efgtoa@l+1,___fladd@a+1
  8273  000E14  C097  F03B         	movff	efgtoa@l+2,___fladd@a+2
  8274  000E18  C098  F03C         	movff	efgtoa@l+3,___fladd@a+3
  8275  000E1C  EC2A  F015         	call	___fladd	;wreg free
  8276  000E20  C035  F091         	movff	?___fladd,efgtoa@h
  8277  000E24  C036  F092         	movff	?___fladd+1,efgtoa@h+1
  8278  000E28  C037  F093         	movff	?___fladd+2,efgtoa@h+2
  8279  000E2C  C038  F094         	movff	?___fladd+3,efgtoa@h+3
  8280  000E30                     
  8281                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  8282  000E30  C06F  F0A3         	movff	efgtoa@ou,efgtoa@u
  8283  000E34  C070  F0A4         	movff	efgtoa@ou+1,efgtoa@u+1
  8284  000E38  C071  F0A5         	movff	efgtoa@ou+2,efgtoa@u+2
  8285  000E3C  C072  F0A6         	movff	efgtoa@ou+3,efgtoa@u+3
  8286  000E40                     
  8287                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  8288  000E40  0E65               	movlw	101
  8289  000E42  0100               	movlb	0	; () banked
  8290  000E44  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8291  000E46  B4D8               	btfsc	status,2,c
  8292  000E48  EF28  F007         	goto	u5961
  8293  000E4C  EF2A  F007         	goto	u5960
  8294  000E50                     u5961:
  8295  000E50  EF30  F007         	goto	l4994
  8296  000E54                     u5960:
  8297  000E54                     
  8298                           ; BSR set to: 0
  8299  000E54  C09F  F085         	movff	efgtoa@e,efgtoa@ne
  8300  000E58  C0A0  F086         	movff	efgtoa@e+1,efgtoa@ne+1
  8301  000E5C  EF34  F007         	goto	l1306
  8302  000E60                     l4994:
  8303                           
  8304                           ; BSR set to: 0
  8305  000E60  0E00               	movlw	0
  8306  000E62  6F86               	movwf	(efgtoa@ne+1)& (0+255),b
  8307  000E64  0E00               	movlw	0
  8308  000E66  6F85               	movwf	efgtoa@ne& (0+255),b
  8309  000E68                     l1306:
  8310                           
  8311                           ; BSR set to: 0
  8312                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  8313  000E68  0E00               	movlw	0
  8314  000E6A  6F82               	movwf	(efgtoa@pp+1)& (0+255),b
  8315  000E6C  0E00               	movlw	0
  8316  000E6E  6F81               	movwf	efgtoa@pp& (0+255),b
  8317                           
  8318                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  8319  000E70  0E00               	movlw	0
  8320  000E72  6F80               	movwf	(efgtoa@t+1)& (0+255),b
  8321  000E74  0E00               	movlw	0
  8322  000E76  6F7F               	movwf	efgtoa@t& (0+255),b
  8323                           
  8324                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  8325  000E78  0E00               	movlw	0
  8326  000E7A  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  8327  000E7C  0E00               	movlw	0
  8328  000E7E  6F99               	movwf	efgtoa@i& (0+255),b
  8329                           
  8330                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  8331  000E80  EF31  F008         	goto	l5044
  8332  000E84                     l4996:
  8333                           
  8334                           ; BSR set to: 0
  8335                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = 
      +                          floorf(h/u);
  8336  000E84  C091  F035         	movff	efgtoa@h,___fldiv@b
  8337  000E88  C092  F036         	movff	efgtoa@h+1,___fldiv@b+1
  8338  000E8C  C093  F037         	movff	efgtoa@h+2,___fldiv@b+2
  8339  000E90  C094  F038         	movff	efgtoa@h+3,___fldiv@b+3
  8340  000E94  C0A3  F039         	movff	efgtoa@u,___fldiv@a
  8341  000E98  C0A4  F03A         	movff	efgtoa@u+1,___fldiv@a+1
  8342  000E9C  C0A5  F03B         	movff	efgtoa@u+2,___fldiv@a+2
  8343  000EA0  C0A6  F03C         	movff	efgtoa@u+3,___fldiv@a+3
  8344  000EA4  EC9F  F019         	call	___fldiv	;wreg free
  8345  000EA8  C035  F04E         	movff	?___fldiv,floorf@x
  8346  000EAC  C036  F04F         	movff	?___fldiv+1,floorf@x+1
  8347  000EB0  C037  F050         	movff	?___fldiv+2,floorf@x+2
  8348  000EB4  C038  F051         	movff	?___fldiv+3,floorf@x+3
  8349  000EB8  EC50  F01E         	call	_floorf	;wreg free
  8350  000EBC  C04E  F095         	movff	?_floorf,efgtoa@l
  8351  000EC0  C04F  F096         	movff	?_floorf+1,efgtoa@l+1
  8352  000EC4  C050  F097         	movff	?_floorf+2,efgtoa@l+2
  8353  000EC8  C051  F098         	movff	?_floorf+3,efgtoa@l+3
  8354                           
  8355                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = 
      +                          (int)l;
  8356  000ECC  C095  F04E         	movff	efgtoa@l,___fltol@f1
  8357  000ED0  C096  F04F         	movff	efgtoa@l+1,___fltol@f1+1
  8358  000ED4  C097  F050         	movff	efgtoa@l+2,___fltol@f1+2
  8359  000ED8  C098  F051         	movff	efgtoa@l+3,___fltol@f1+3
  8360  000EDC  ECA6  F024         	call	___fltol	;wreg free
  8361  000EE0  C04E  F087         	movff	?___fltol,efgtoa@d
  8362  000EE4  C04F  F088         	movff	?___fltol+1,efgtoa@d+1
  8363  000EE8                     
  8364                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  8365  000EE8  0101               	movlb	1	; () banked
  8366  000EEA  B998               	btfsc	_flags& (0+255),4,b
  8367  000EEC  EF7A  F007         	goto	u5971
  8368  000EF0  EF7C  F007         	goto	u5970
  8369  000EF4                     u5971:
  8370  000EF4  EF9A  F007         	goto	l5008
  8371  000EF8                     u5970:
  8372  000EF8                     
  8373                           ; BSR set to: 1
  8374  000EF8  0100               	movlb	0	; () banked
  8375  000EFA  5187               	movf	efgtoa@d& (0+255),w,b
  8376  000EFC  1188               	iorwf	(efgtoa@d+1)& (0+255),w,b
  8377  000EFE  A4D8               	btfss	status,2,c
  8378  000F00  EF84  F007         	goto	u5981
  8379  000F04  EF86  F007         	goto	u5980
  8380  000F08                     u5981:
  8381  000F08  EF9A  F007         	goto	l5008
  8382  000F0C                     u5980:
  8383  000F0C                     
  8384                           ; BSR set to: 0
  8385  000F0C  0E67               	movlw	103
  8386  000F0E  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8387  000F10  A4D8               	btfss	status,2,c
  8388  000F12  EF8D  F007         	goto	u5991
  8389  000F16  EF8F  F007         	goto	u5990
  8390  000F1A                     u5991:
  8391  000F1A  EF9A  F007         	goto	l5008
  8392  000F1E                     u5990:
  8393  000F1E                     
  8394                           ; BSR set to: 0
  8395  000F1E  BF86               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  8396  000F20  EF96  F007         	goto	u6000
  8397  000F24  EF94  F007         	goto	u6001
  8398  000F28                     u6001:
  8399  000F28  EF9A  F007         	goto	l5008
  8400  000F2C                     u6000:
  8401  000F2C                     
  8402                           ; BSR set to: 0
  8403                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             
      +                          ++t;
  8404  000F2C  4B7F               	infsnz	efgtoa@t& (0+255),f,b
  8405  000F2E  2B80               	incf	(efgtoa@t+1)& (0+255),f,b
  8406                           
  8407                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } el
      +                          se {
  8408  000F30  EFE5  F007         	goto	l5036
  8409  000F34                     l5008:
  8410                           
  8411                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             
      +                          if (!pp && (ne < 0)) {
  8412  000F34  0100               	movlb	0	; () banked
  8413  000F36  5181               	movf	efgtoa@pp& (0+255),w,b
  8414  000F38  1182               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  8415  000F3A  A4D8               	btfss	status,2,c
  8416  000F3C  EFA2  F007         	goto	u6011
  8417  000F40  EFA4  F007         	goto	u6010
  8418  000F44                     u6011:
  8419  000F44  EFCE  F007         	goto	l5028
  8420  000F48                     u6010:
  8421  000F48                     
  8422                           ; BSR set to: 0
  8423  000F48  BF86               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  8424  000F4A  EFAB  F007         	goto	u6020
  8425  000F4E  EFA9  F007         	goto	u6021
  8426  000F52                     u6021:
  8427  000F52  EFCE  F007         	goto	l5028
  8428  000F56                     u6020:
  8429  000F56                     
  8430                           ; BSR set to: 0
  8431                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:             
      +                              dbuf[n++] = '.';
  8432  000F56  0E9F               	movlw	low _dbuf
  8433  000F58  25A1               	addwf	efgtoa@n& (0+255),w,b
  8434  000F5A  6ED9               	movwf	fsr2l,c
  8435  000F5C  0E01               	movlw	high _dbuf
  8436  000F5E  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8437  000F60  6EDA               	movwf	fsr2h,c
  8438  000F62  0E2E               	movlw	46
  8439  000F64  6EDF               	movwf	indf2,c
  8440  000F66                     
  8441                           ; BSR set to: 0
  8442  000F66  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8443  000F68  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8444  000F6A                     
  8445                           ; BSR set to: 0
  8446                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:             
      +                              --w;
  8447  000F6A  078E               	decf	efgtoa@w& (0+255),f,b
  8448  000F6C  A0D8               	btfss	status,0,c
  8449  000F6E  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8450  000F70                     
  8451                           ; BSR set to: 0
  8452                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:             
      +                              pp = 1;
  8453  000F70  0E00               	movlw	0
  8454  000F72  6F82               	movwf	(efgtoa@pp+1)& (0+255),b
  8455  000F74  0E01               	movlw	1
  8456  000F76  6F81               	movwf	efgtoa@pp& (0+255),b
  8457  000F78  EFCE  F007         	goto	l5028
  8458  000F7C                     l5020:
  8459                           
  8460                           ; BSR set to: 0
  8461                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:             
      +                              dbuf[n++] = '0';
  8462  000F7C  0E9F               	movlw	low _dbuf
  8463  000F7E  25A1               	addwf	efgtoa@n& (0+255),w,b
  8464  000F80  6ED9               	movwf	fsr2l,c
  8465  000F82  0E01               	movlw	high _dbuf
  8466  000F84  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8467  000F86  6EDA               	movwf	fsr2h,c
  8468  000F88  0E30               	movlw	48
  8469  000F8A  6EDF               	movwf	indf2,c
  8470  000F8C                     
  8471                           ; BSR set to: 0
  8472  000F8C  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8473  000F8E  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8474  000F90                     
  8475                           ; BSR set to: 0
  8476                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:             
      +                              --w;
  8477  000F90  078E               	decf	efgtoa@w& (0+255),f,b
  8478  000F92  A0D8               	btfss	status,0,c
  8479  000F94  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8480  000F96                     
  8481                           ; BSR set to: 0
  8482                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:             
      +                              --t;
  8483  000F96  077F               	decf	efgtoa@t& (0+255),f,b
  8484  000F98  A0D8               	btfss	status,0,c
  8485  000F9A  0780               	decf	(efgtoa@t+1)& (0+255),f,b
  8486  000F9C                     l5028:
  8487                           
  8488                           ; BSR set to: 0
  8489                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             
      +                          while (t) {
  8490  000F9C  517F               	movf	efgtoa@t& (0+255),w,b
  8491  000F9E  1180               	iorwf	(efgtoa@t+1)& (0+255),w,b
  8492  000FA0  A4D8               	btfss	status,2,c
  8493  000FA2  EFD5  F007         	goto	u6031
  8494  000FA6  EFD7  F007         	goto	u6030
  8495  000FAA                     u6031:
  8496  000FAA  EFBE  F007         	goto	l5020
  8497  000FAE                     u6030:
  8498  000FAE                     
  8499                           ; BSR set to: 0
  8500                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             
      +                          dbuf[n++] = '0' + d;
  8501  000FAE  0E9F               	movlw	low _dbuf
  8502  000FB0  25A1               	addwf	efgtoa@n& (0+255),w,b
  8503  000FB2  6ED9               	movwf	fsr2l,c
  8504  000FB4  0E01               	movlw	high _dbuf
  8505  000FB6  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8506  000FB8  6EDA               	movwf	fsr2h,c
  8507  000FBA  5187               	movf	efgtoa@d& (0+255),w,b
  8508  000FBC  0F30               	addlw	48
  8509  000FBE  6EDF               	movwf	indf2,c
  8510  000FC0                     
  8511                           ; BSR set to: 0
  8512  000FC0  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8513  000FC2  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8514  000FC4                     
  8515                           ; BSR set to: 0
  8516                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             
      +                          --w;
  8517  000FC4  078E               	decf	efgtoa@w& (0+255),f,b
  8518  000FC6  A0D8               	btfss	status,0,c
  8519  000FC8  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8520  000FCA                     l5036:
  8521                           
  8522                           ; BSR set to: 0
  8523                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -=
      +                           l*u;
  8524  000FCA  C091  F045         	movff	efgtoa@h,___flsub@b
  8525  000FCE  C092  F046         	movff	efgtoa@h+1,___flsub@b+1
  8526  000FD2  C093  F047         	movff	efgtoa@h+2,___flsub@b+2
  8527  000FD6  C094  F048         	movff	efgtoa@h+3,___flsub@b+3
  8528  000FDA  C0A3  F020         	movff	efgtoa@u,___flmul@a
  8529  000FDE  C0A4  F021         	movff	efgtoa@u+1,___flmul@a+1
  8530  000FE2  C0A5  F022         	movff	efgtoa@u+2,___flmul@a+2
  8531  000FE6  C0A6  F023         	movff	efgtoa@u+3,___flmul@a+3
  8532  000FEA  C095  F01C         	movff	efgtoa@l,___flmul@b
  8533  000FEE  C096  F01D         	movff	efgtoa@l+1,___flmul@b+1
  8534  000FF2  C097  F01E         	movff	efgtoa@l+2,___flmul@b+2
  8535  000FF6  C098  F01F         	movff	efgtoa@l+3,___flmul@b+3
  8536  000FFA  EC8A  F017         	call	___flmul	;wreg free
  8537  000FFE  C01C  F049         	movff	?___flmul,___flsub@a
  8538  001002  C01D  F04A         	movff	?___flmul+1,___flsub@a+1
  8539  001006  C01E  F04B         	movff	?___flmul+2,___flsub@a+2
  8540  00100A  C01F  F04C         	movff	?___flmul+3,___flsub@a+3
  8541  00100E  EC16  F02C         	call	___flsub	;wreg free
  8542  001012  C045  F091         	movff	?___flsub,efgtoa@h
  8543  001016  C046  F092         	movff	?___flsub+1,efgtoa@h+1
  8544  00101A  C047  F093         	movff	?___flsub+2,efgtoa@h+2
  8545  00101E  C048  F094         	movff	?___flsub+3,efgtoa@h+3
  8546  001022                     
  8547                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = 
      +                          u/10.0;
  8548  001022  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  8549  001026  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  8550  00102A  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  8551  00102E  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  8552  001032  0E00               	movlw	0
  8553  001034  6E39               	movwf	___fldiv@a^0,c
  8554  001036  0E00               	movlw	0
  8555  001038  6E3A               	movwf	(___fldiv@a+1)^0,c
  8556  00103A  0E20               	movlw	32
  8557  00103C  6E3B               	movwf	(___fldiv@a+2)^0,c
  8558  00103E  0E41               	movlw	65
  8559  001040  6E3C               	movwf	(___fldiv@a+3)^0,c
  8560  001042  EC9F  F019         	call	___fldiv	;wreg free
  8561  001046  C035  F0A3         	movff	?___fldiv,efgtoa@u
  8562  00104A  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  8563  00104E  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  8564  001052  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  8565  001056                     
  8566                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne
      +                          ;
  8567  001056  0100               	movlb	0	; () banked
  8568  001058  0785               	decf	efgtoa@ne& (0+255),f,b
  8569  00105A  A0D8               	btfss	status,0,c
  8570  00105C  0786               	decf	(efgtoa@ne+1)& (0+255),f,b
  8571  00105E                     
  8572                           ; BSR set to: 0
  8573                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  8574  00105E  4B99               	infsnz	efgtoa@i& (0+255),f,b
  8575  001060  2B9A               	incf	(efgtoa@i+1)& (0+255),f,b
  8576  001062                     l5044:
  8577                           
  8578                           ; BSR set to: 0
  8579                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  8580  001062  5183               	movf	efgtoa@m& (0+255),w,b
  8581  001064  5D99               	subwf	efgtoa@i& (0+255),w,b
  8582  001066  519A               	movf	(efgtoa@i+1)& (0+255),w,b
  8583  001068  0A80               	xorlw	128
  8584  00106A  6F6A               	movwf	??_efgtoa& (0+255),b
  8585  00106C  5184               	movf	(efgtoa@m+1)& (0+255),w,b
  8586  00106E  0A80               	xorlw	128
  8587  001070  596A               	subwfb	??_efgtoa& (0+255),w,b
  8588  001072  B0D8               	btfsc	status,0,c
  8589  001074  EF3E  F008         	goto	u6041
  8590  001078  EF40  F008         	goto	u6040
  8591  00107C                     u6041:
  8592  00107C  EF4E  F008         	goto	l5048
  8593  001080                     u6040:
  8594  001080                     
  8595                           ; BSR set to: 0
  8596  001080  BFA2               	btfsc	(efgtoa@n+1)& (0+255),7,b
  8597  001082  EF4C  F008         	goto	u6051
  8598  001086  51A2               	movf	(efgtoa@n+1)& (0+255),w,b
  8599  001088  E109               	bnz	u6050
  8600  00108A  0E4B               	movlw	75
  8601  00108C  5DA1               	subwf	efgtoa@n& (0+255),w,b
  8602  00108E  A0D8               	btfss	status,0,c
  8603  001090  EF4C  F008         	goto	u6051
  8604  001094  EF4E  F008         	goto	u6050
  8605  001098                     u6051:
  8606  001098  EF42  F007         	goto	l4996
  8607  00109C                     u6050:
  8608  00109C                     l5048:
  8609                           
  8610                           ; BSR set to: 0
  8611                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp 
      +                          && (flags & (1 << 4))) {
  8612  00109C  5181               	movf	efgtoa@pp& (0+255),w,b
  8613  00109E  1182               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  8614  0010A0  A4D8               	btfss	status,2,c
  8615  0010A2  EF55  F008         	goto	u6061
  8616  0010A6  EF57  F008         	goto	u6060
  8617  0010AA                     u6061:
  8618  0010AA  EF6A  F008         	goto	l5056
  8619  0010AE                     u6060:
  8620  0010AE                     
  8621                           ; BSR set to: 0
  8622  0010AE  0101               	movlb	1	; () banked
  8623  0010B0  A998               	btfss	_flags& (0+255),4,b
  8624  0010B2  EF5D  F008         	goto	u6071
  8625  0010B6  EF5F  F008         	goto	u6070
  8626  0010BA                     u6071:
  8627  0010BA  EF6A  F008         	goto	l5056
  8628  0010BE                     u6070:
  8629  0010BE                     
  8630                           ; BSR set to: 1
  8631                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf
      +                          [n++] = '.';
  8632  0010BE  0E9F               	movlw	low _dbuf
  8633  0010C0  0100               	movlb	0	; () banked
  8634  0010C2  25A1               	addwf	efgtoa@n& (0+255),w,b
  8635  0010C4  6ED9               	movwf	fsr2l,c
  8636  0010C6  0E01               	movlw	high _dbuf
  8637  0010C8  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8638  0010CA  6EDA               	movwf	fsr2h,c
  8639  0010CC  0E2E               	movlw	46
  8640  0010CE  6EDF               	movwf	indf2,c
  8641  0010D0                     
  8642                           ; BSR set to: 0
  8643  0010D0  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8644  0010D2  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8645  0010D4                     l5056:
  8646                           
  8647                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] 
      +                          = '\0';
  8648  0010D4  0E9F               	movlw	low _dbuf
  8649  0010D6  0100               	movlb	0	; () banked
  8650  0010D8  25A1               	addwf	efgtoa@n& (0+255),w,b
  8651  0010DA  6ED9               	movwf	fsr2l,c
  8652  0010DC  0E01               	movlw	high _dbuf
  8653  0010DE  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8654  0010E0  6EDA               	movwf	fsr2h,c
  8655  0010E2  0E00               	movlw	0
  8656  0010E4  6EDF               	movwf	indf2,c
  8657  0010E6                     
  8658                           ; BSR set to: 0
  8659                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmod
      +                          e == 'e') {
  8660  0010E6  0E65               	movlw	101
  8661  0010E8  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8662  0010EA  A4D8               	btfss	status,2,c
  8663  0010EC  EF7A  F008         	goto	u6081
  8664  0010F0  EF7C  F008         	goto	u6080
  8665  0010F4                     u6081:
  8666  0010F4  EF21  F004         	goto	l4868
  8667  0010F8                     u6080:
  8668  0010F8                     
  8669                           ; BSR set to: 0
  8670                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = 
      +                          sizeof(dbuf) - 1;
  8671  0010F8  0E00               	movlw	0
  8672  0010FA  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  8673  0010FC  0E4F               	movlw	79
  8674  0010FE  6F99               	movwf	efgtoa@i& (0+255),b
  8675  001100                     
  8676                           ; BSR set to: 0
  8677                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf
      +                          [i] = '\0';
  8678  001100  0E9F               	movlw	low _dbuf
  8679  001102  2599               	addwf	efgtoa@i& (0+255),w,b
  8680  001104  6ED9               	movwf	fsr2l,c
  8681  001106  0E01               	movlw	high _dbuf
  8682  001108  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8683  00110A  6EDA               	movwf	fsr2h,c
  8684  00110C  0E00               	movlw	0
  8685  00110E  6EDF               	movwf	indf2,c
  8686  001110                     
  8687                           ; BSR set to: 0
  8688                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign
      +                           = 0;
  8689  001110  0E00               	movlw	0
  8690  001112  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  8691  001114  0E00               	movlw	0
  8692  001116  6F89               	movwf	efgtoa@sign& (0+255),b
  8693  001118                     
  8694                           ; BSR set to: 0
  8695                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (
      +                          e < 0) {
  8696  001118  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8697  00111A  EF93  F008         	goto	u6090
  8698  00111E  EF91  F008         	goto	u6091
  8699  001122                     u6091:
  8700  001122  EF9B  F008         	goto	l5072
  8701  001126                     u6090:
  8702  001126                     
  8703                           ; BSR set to: 0
  8704                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             
      +                          sign = 1;
  8705  001126  0E00               	movlw	0
  8706  001128  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  8707  00112A  0E01               	movlw	1
  8708  00112C  6F89               	movwf	efgtoa@sign& (0+255),b
  8709  00112E                     
  8710                           ; BSR set to: 0
  8711                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             
      +                          e = -e;
  8712  00112E  6D9F               	negf	efgtoa@e& (0+255),b
  8713  001130  1FA0               	comf	(efgtoa@e+1)& (0+255),f,b
  8714  001132  B0D8               	btfsc	status,0,c
  8715  001134  2BA0               	incf	(efgtoa@e+1)& (0+255),f,b
  8716  001136                     l5072:
  8717                           
  8718                           ; BSR set to: 0
  8719                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 
      +                          2;
  8720  001136  0E00               	movlw	0
  8721  001138  6F8C               	movwf	(efgtoa@p+1)& (0+255),b
  8722  00113A  0E02               	movlw	2
  8723  00113C  6F8B               	movwf	efgtoa@p& (0+255),b
  8724                           
  8725                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  8726  00113E  EFCC  F008         	goto	l5084
  8727  001142                     l5074:
  8728                           
  8729                           ; BSR set to: 0
  8730                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             
      +                          --i;
  8731  001142  0799               	decf	efgtoa@i& (0+255),f,b
  8732  001144  A0D8               	btfss	status,0,c
  8733  001146  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  8734  001148                     
  8735                           ; BSR set to: 0
  8736                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             
      +                          dbuf[i] = '0' + (e % 10);
  8737  001148  0E9F               	movlw	low _dbuf
  8738  00114A  2599               	addwf	efgtoa@i& (0+255),w,b
  8739  00114C  6ED9               	movwf	fsr2l,c
  8740  00114E  0E01               	movlw	high _dbuf
  8741  001150  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8742  001152  6EDA               	movwf	fsr2h,c
  8743  001154  C09F  F001         	movff	efgtoa@e,___awmod@dividend
  8744  001158  C0A0  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  8745  00115C  0E00               	movlw	0
  8746  00115E  6E04               	movwf	(___awmod@divisor+1)^0,c
  8747  001160  0E0A               	movlw	10
  8748  001162  6E03               	movwf	___awmod@divisor^0,c
  8749  001164  EC3A  F028         	call	___awmod	;wreg free
  8750  001168  5001               	movf	?___awmod^0,w,c
  8751  00116A  0F30               	addlw	48
  8752  00116C  6EDF               	movwf	indf2,c
  8753  00116E                     
  8754                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             
      +                          e = e / 10;
  8755  00116E  C09F  F001         	movff	efgtoa@e,___awdiv@dividend
  8756  001172  C0A0  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  8757  001176  0E00               	movlw	0
  8758  001178  6E04               	movwf	(___awdiv@divisor+1)^0,c
  8759  00117A  0E0A               	movlw	10
  8760  00117C  6E03               	movwf	___awdiv@divisor^0,c
  8761  00117E  ECD8  F027         	call	___awdiv	;wreg free
  8762  001182  C001  F09F         	movff	?___awdiv,efgtoa@e
  8763  001186  C002  F0A0         	movff	?___awdiv+1,efgtoa@e+1
  8764  00118A                     
  8765                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             
      +                          --p;
  8766  00118A  0100               	movlb	0	; () banked
  8767  00118C  078B               	decf	efgtoa@p& (0+255),f,b
  8768  00118E  A0D8               	btfss	status,0,c
  8769  001190  078C               	decf	(efgtoa@p+1)& (0+255),f,b
  8770  001192                     
  8771                           ; BSR set to: 0
  8772                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             
      +                          --w;
  8773  001192  078E               	decf	efgtoa@w& (0+255),f,b
  8774  001194  A0D8               	btfss	status,0,c
  8775  001196  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8776  001198                     l5084:
  8777                           
  8778                           ; BSR set to: 0
  8779                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  8780  001198  519F               	movf	efgtoa@e& (0+255),w,b
  8781  00119A  11A0               	iorwf	(efgtoa@e+1)& (0+255),w,b
  8782  00119C  A4D8               	btfss	status,2,c
  8783  00119E  EFD3  F008         	goto	u6101
  8784  0011A2  EFD5  F008         	goto	u6100
  8785  0011A6                     u6101:
  8786  0011A6  EFA1  F008         	goto	l5074
  8787  0011AA                     u6100:
  8788  0011AA                     
  8789                           ; BSR set to: 0
  8790  0011AA  BF8C               	btfsc	(efgtoa@p+1)& (0+255),7,b
  8791  0011AC  EFE2  F008         	goto	u6110
  8792  0011B0  518C               	movf	(efgtoa@p+1)& (0+255),w,b
  8793  0011B2  E106               	bnz	u6111
  8794  0011B4  058B               	decf	efgtoa@p& (0+255),w,b
  8795  0011B6  B0D8               	btfsc	status,0,c
  8796  0011B8  EFE0  F008         	goto	u6111
  8797  0011BC  EFE2  F008         	goto	u6110
  8798  0011C0                     u6111:
  8799  0011C0  EFA1  F008         	goto	l5074
  8800  0011C4                     u6110:
  8801  0011C4                     
  8802                           ; BSR set to: 0
  8803                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  8804  0011C4  0799               	decf	efgtoa@i& (0+255),f,b
  8805  0011C6  A0D8               	btfss	status,0,c
  8806  0011C8  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  8807  0011CA                     
  8808                           ; BSR set to: 0
  8809                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [i] = sign ? '-' : '+';
  8810  0011CA  5189               	movf	efgtoa@sign& (0+255),w,b
  8811  0011CC  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8812  0011CE  A4D8               	btfss	status,2,c
  8813  0011D0  EFEC  F008         	goto	u6121
  8814  0011D4  EFEE  F008         	goto	u6120
  8815  0011D8                     u6121:
  8816  0011D8  EFF4  F008         	goto	l5094
  8817  0011DC                     u6120:
  8818  0011DC                     
  8819                           ; BSR set to: 0
  8820  0011DC  0E00               	movlw	0
  8821  0011DE  6F7A               	movwf	(_efgtoa$2514+1)& (0+255),b
  8822  0011E0  0E2B               	movlw	43
  8823  0011E2  6F79               	movwf	_efgtoa$2514& (0+255),b
  8824  0011E4  EFF8  F008         	goto	l5096
  8825  0011E8                     l5094:
  8826                           
  8827                           ; BSR set to: 0
  8828  0011E8  0E00               	movlw	0
  8829  0011EA  6F7A               	movwf	(_efgtoa$2514+1)& (0+255),b
  8830  0011EC  0E2D               	movlw	45
  8831  0011EE  6F79               	movwf	_efgtoa$2514& (0+255),b
  8832  0011F0                     l5096:
  8833                           
  8834                           ; BSR set to: 0
  8835  0011F0  0E9F               	movlw	low _dbuf
  8836  0011F2  2599               	addwf	efgtoa@i& (0+255),w,b
  8837  0011F4  6ED9               	movwf	fsr2l,c
  8838  0011F6  0E01               	movlw	high _dbuf
  8839  0011F8  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8840  0011FA  6EDA               	movwf	fsr2h,c
  8841  0011FC  C079  FFDF         	movff	_efgtoa$2514,indf2
  8842  001200                     
  8843                           ; BSR set to: 0
  8844                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  8845  001200  078E               	decf	efgtoa@w& (0+255),f,b
  8846  001202  A0D8               	btfss	status,0,c
  8847  001204  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8848  001206                     
  8849                           ; BSR set to: 0
  8850                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  8851  001206  0799               	decf	efgtoa@i& (0+255),f,b
  8852  001208  A0D8               	btfss	status,0,c
  8853  00120A  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  8854  00120C                     
  8855                           ; BSR set to: 0
  8856  00120C  0EBF               	movlw	191
  8857  00120E  6F6A               	movwf	??_efgtoa& (0+255),b
  8858  001210  0EFF               	movlw	255
  8859  001212  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  8860  001214  505E               	movf	efgtoa@c^0,w,c
  8861  001216  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  8862  001218  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  8863  00121A  516A               	movf	??_efgtoa& (0+255),w,b
  8864  00121C  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  8865  00121E  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  8866  001220  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8867  001222  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  8868  001224  E10A               	bnz	u6130
  8869  001226  0E1A               	movlw	26
  8870  001228  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  8871  00122A  A0D8               	btfss	status,0,c
  8872  00122C  EF1A  F009         	goto	u6131
  8873  001230  EF1D  F009         	goto	u6130
  8874  001234                     u6131:
  8875  001234  0E01               	movlw	1
  8876  001236  EF1E  F009         	goto	u6140
  8877  00123A                     u6130:
  8878  00123A  0E00               	movlw	0
  8879  00123C                     u6140:
  8880  00123C  6F7D               	movwf	_efgtoa$2516& (0+255),b
  8881  00123E  6B7E               	clrf	(_efgtoa$2516+1)& (0+255),b
  8882  001240                     
  8883                           ; BSR set to: 0
  8884  001240  517D               	movf	_efgtoa$2516& (0+255),w,b
  8885  001242  117E               	iorwf	(_efgtoa$2516+1)& (0+255),w,b
  8886  001244  A4D8               	btfss	status,2,c
  8887  001246  EF27  F009         	goto	u6151
  8888  00124A  EF29  F009         	goto	u6150
  8889  00124E                     u6151:
  8890  00124E  EF2F  F009         	goto	l5110
  8891  001252                     u6150:
  8892  001252                     
  8893                           ; BSR set to: 0
  8894  001252  0E00               	movlw	0
  8895  001254  6F7C               	movwf	(_efgtoa$2515+1)& (0+255),b
  8896  001256  0E65               	movlw	101
  8897  001258  6F7B               	movwf	_efgtoa$2515& (0+255),b
  8898  00125A  EF33  F009         	goto	l5112
  8899  00125E                     l5110:
  8900                           
  8901                           ; BSR set to: 0
  8902  00125E  0E00               	movlw	0
  8903  001260  6F7C               	movwf	(_efgtoa$2515+1)& (0+255),b
  8904  001262  0E45               	movlw	69
  8905  001264  6F7B               	movwf	_efgtoa$2515& (0+255),b
  8906  001266                     l5112:
  8907                           
  8908                           ; BSR set to: 0
  8909  001266  0E9F               	movlw	low _dbuf
  8910  001268  2599               	addwf	efgtoa@i& (0+255),w,b
  8911  00126A  6ED9               	movwf	fsr2l,c
  8912  00126C  0E01               	movlw	high _dbuf
  8913  00126E  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8914  001270  6EDA               	movwf	fsr2h,c
  8915  001272  C07B  FFDF         	movff	_efgtoa$2515,indf2
  8916  001276                     
  8917                           ; BSR set to: 0
  8918                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  8919  001276  078E               	decf	efgtoa@w& (0+255),f,b
  8920  001278  A0D8               	btfss	status,0,c
  8921  00127A  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8922  00127C                     
  8923                           ; BSR set to: 0
  8924                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  8925  00127C  0E9F               	movlw	low _dbuf
  8926  00127E  25A1               	addwf	efgtoa@n& (0+255),w,b
  8927  001280  6E01               	movwf	strcpy@dest^0,c
  8928  001282  0E01               	movlw	high _dbuf
  8929  001284  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8930  001286  6E02               	movwf	(strcpy@dest+1)^0,c
  8931  001288  0E9F               	movlw	low _dbuf
  8932  00128A  2599               	addwf	efgtoa@i& (0+255),w,b
  8933  00128C  6E03               	movwf	strcpy@src^0,c
  8934  00128E  0E01               	movlw	high _dbuf
  8935  001290  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8936  001292  6E04               	movwf	(strcpy@src+1)^0,c
  8937  001294  EC3F  F02B         	call	_strcpy	;wreg free
  8938  001298  EF21  F004         	goto	l4868
  8939  00129C                     l1262:
  8940  00129C  0012               	return		;funcret
  8941  00129E                     __end_of_efgtoa:
  8942                           	callstack 0
  8943                           
  8944 ;; *************** function _tolower *****************
  8945 ;; Defined at:
  8946 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\tolower.c"
  8947 ;; Parameters:    Size  Location     Type
  8948 ;;  c               2    6[COMRAM] int 
  8949 ;; Auto vars:     Size  Location     Type
  8950 ;;		None
  8951 ;; Return value:  Size  Location     Type
  8952 ;;                  2    6[COMRAM] int 
  8953 ;; Registers used:
  8954 ;;		wreg, status,2, status,0
  8955 ;; Tracked objects:
  8956 ;;		On entry : 0/0
  8957 ;;		On exit  : 0/0
  8958 ;;		Unchanged: 0/0
  8959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8960 ;;      Params:         2       0       0       0       0       0       0
  8961 ;;      Locals:         2       0       0       0       0       0       0
  8962 ;;      Temps:          4       0       0       0       0       0       0
  8963 ;;      Totals:         8       0       0       0       0       0       0
  8964 ;;Total ram usage:        8 bytes
  8965 ;; Hardware stack levels used:    1
  8966 ;; Hardware stack levels required when called:    2
  8967 ;; This function calls:
  8968 ;;		_isupper
  8969 ;; This function is called by:
  8970 ;;		_efgtoa
  8971 ;;		_vfpfcnvrt
  8972 ;; This function uses a non-reentrant model
  8973 ;;
  8974                           
  8975                           	psect	text24
  8976  00561E                     __ptext24:
  8977                           	callstack 0
  8978  00561E                     _tolower:
  8979                           	callstack 23
  8980  00561E  0EBF               	movlw	191
  8981  005620  6E09               	movwf	??_tolower^0,c
  8982  005622  0EFF               	movlw	255
  8983  005624  6E0A               	movwf	(??_tolower+1)^0,c
  8984  005626  C007  F00B         	movff	tolower@c,??_tolower+2
  8985  00562A  C008  F00C         	movff	tolower@c+1,??_tolower+3
  8986  00562E  5009               	movf	??_tolower^0,w,c
  8987  005630  260B               	addwf	(??_tolower+2)^0,f,c
  8988  005632  500A               	movf	(??_tolower+1)^0,w,c
  8989  005634  220C               	addwfc	(??_tolower+3)^0,f,c
  8990  005636  500C               	movf	(??_tolower+3)^0,w,c
  8991  005638  E10A               	bnz	u5320
  8992  00563A  0E1A               	movlw	26
  8993  00563C  5C0B               	subwf	(??_tolower+2)^0,w,c
  8994  00563E  A0D8               	btfss	status,0,c
  8995  005640  EF24  F02B         	goto	u5321
  8996  005644  EF27  F02B         	goto	u5320
  8997  005648                     u5321:
  8998  005648  0E01               	movlw	1
  8999  00564A  EF28  F02B         	goto	u5330
  9000  00564E                     u5320:
  9001  00564E  0E00               	movlw	0
  9002  005650                     u5330:
  9003  005650  6E0D               	movwf	_tolower$2667^0,c
  9004  005652  6A0E               	clrf	(_tolower$2667+1)^0,c
  9005  005654  500D               	movf	_tolower$2667^0,w,c
  9006  005656  100E               	iorwf	(_tolower$2667+1)^0,w,c
  9007  005658  B4D8               	btfsc	status,2,c
  9008  00565A  EF31  F02B         	goto	u5341
  9009  00565E  EF33  F02B         	goto	u5340
  9010  005662                     u5341:
  9011  005662  EF3A  F02B         	goto	l1510
  9012  005666                     u5340:
  9013  005666  0E20               	movlw	32
  9014  005668  1007               	iorwf	tolower@c^0,w,c
  9015  00566A  6E07               	movwf	?_tolower^0,c
  9016  00566C  5008               	movf	(tolower@c+1)^0,w,c
  9017  00566E  6E08               	movwf	(?_tolower+1)^0,c
  9018  005670  EF3E  F02B         	goto	l1515
  9019  005674                     l1510:
  9020  005674  C007  F007         	movff	tolower@c,?_tolower
  9021  005678  C008  F008         	movff	tolower@c+1,?_tolower+1
  9022  00567C                     l1515:
  9023  00567C  0012               	return		;funcret
  9024  00567E                     __end_of_tolower:
  9025                           	callstack 0
  9026                           
  9027 ;; *************** function _isupper *****************
  9028 ;; Defined at:
  9029 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  9030 ;; Parameters:    Size  Location     Type
  9031 ;;  c               2    0[COMRAM] int 
  9032 ;; Auto vars:     Size  Location     Type
  9033 ;;		None
  9034 ;; Return value:  Size  Location     Type
  9035 ;;                  2    0[COMRAM] int 
  9036 ;; Registers used:
  9037 ;;		wreg, status,2, status,0
  9038 ;; Tracked objects:
  9039 ;;		On entry : 0/0
  9040 ;;		On exit  : 0/0
  9041 ;;		Unchanged: 0/0
  9042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9043 ;;      Params:         2       0       0       0       0       0       0
  9044 ;;      Locals:         0       0       0       0       0       0       0
  9045 ;;      Temps:          4       0       0       0       0       0       0
  9046 ;;      Totals:         6       0       0       0       0       0       0
  9047 ;;Total ram usage:        6 bytes
  9048 ;; Hardware stack levels used:    1
  9049 ;; Hardware stack levels required when called:    1
  9050 ;; This function calls:
  9051 ;;		Nothing
  9052 ;; This function is called by:
  9053 ;;		_efgtoa
  9054 ;;		_vfpfcnvrt
  9055 ;;		_tolower
  9056 ;; This function uses a non-reentrant model
  9057 ;;
  9058                           
  9059                           	psect	text25
  9060  0059B2                     __ptext25:
  9061                           	callstack 0
  9062  0059B2                     _isupper:
  9063                           	callstack 23
  9064  0059B2  0EBF               	movlw	191
  9065  0059B4  6E03               	movwf	??_isupper^0,c
  9066  0059B6  0EFF               	movlw	255
  9067  0059B8  6E04               	movwf	(??_isupper+1)^0,c
  9068  0059BA  C001  F005         	movff	isupper@c,??_isupper+2
  9069  0059BE  C002  F006         	movff	isupper@c+1,??_isupper+3
  9070  0059C2  5003               	movf	??_isupper^0,w,c
  9071  0059C4  2605               	addwf	(??_isupper+2)^0,f,c
  9072  0059C6  5004               	movf	(??_isupper+1)^0,w,c
  9073  0059C8  2206               	addwfc	(??_isupper+3)^0,f,c
  9074  0059CA  5006               	movf	(??_isupper+3)^0,w,c
  9075  0059CC  E10A               	bnz	u4330
  9076  0059CE  0E1A               	movlw	26
  9077  0059D0  5C05               	subwf	(??_isupper+2)^0,w,c
  9078  0059D2  A0D8               	btfss	status,0,c
  9079  0059D4  EFEE  F02C         	goto	u4331
  9080  0059D8  EFF1  F02C         	goto	u4330
  9081  0059DC                     u4331:
  9082  0059DC  0E01               	movlw	1
  9083  0059DE  EFF2  F02C         	goto	u4340
  9084  0059E2                     u4330:
  9085  0059E2  0E00               	movlw	0
  9086  0059E4                     u4340:
  9087  0059E4  6E01               	movwf	?_isupper^0,c
  9088  0059E6  6A02               	clrf	(?_isupper+1)^0,c
  9089  0059E8  0012               	return		;funcret
  9090  0059EA                     __end_of_isupper:
  9091                           	callstack 0
  9092                           
  9093 ;; *************** function _strcpy *****************
  9094 ;; Defined at:
  9095 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  9096 ;; Parameters:    Size  Location     Type
  9097 ;;  dest            2    0[COMRAM] PTR unsigned char 
  9098 ;;		 -> dbuf(80), 
  9099 ;;  src             2    2[COMRAM] PTR const unsigned char 
  9100 ;;		 -> STR_22(4), STR_21(4), STR_18(4), STR_17(4), 
  9101 ;;		 -> dbuf(80), 
  9102 ;; Auto vars:     Size  Location     Type
  9103 ;;  d               2    8[COMRAM] PTR unsigned char 
  9104 ;;		 -> dbuf(80), 
  9105 ;;  s               2    6[COMRAM] PTR const unsigned char 
  9106 ;;		 -> STR_22(4), STR_21(4), STR_18(4), STR_17(4), 
  9107 ;;		 -> dbuf(80), 
  9108 ;; Return value:  Size  Location     Type
  9109 ;;                  2    0[COMRAM] PTR unsigned char 
  9110 ;; Registers used:
  9111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9112 ;; Tracked objects:
  9113 ;;		On entry : 0/0
  9114 ;;		On exit  : 0/0
  9115 ;;		Unchanged: 0/0
  9116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9117 ;;      Params:         4       0       0       0       0       0       0
  9118 ;;      Locals:         4       0       0       0       0       0       0
  9119 ;;      Temps:          2       0       0       0       0       0       0
  9120 ;;      Totals:        10       0       0       0       0       0       0
  9121 ;;Total ram usage:       10 bytes
  9122 ;; Hardware stack levels used:    1
  9123 ;; Hardware stack levels required when called:    1
  9124 ;; This function calls:
  9125 ;;		Nothing
  9126 ;; This function is called by:
  9127 ;;		_efgtoa
  9128 ;; This function uses a non-reentrant model
  9129 ;;
  9130                           
  9131                           	psect	text26
  9132  00567E                     __ptext26:
  9133                           	callstack 0
  9134  00567E                     _strcpy:
  9135                           	callstack 23
  9136  00567E  C003  F007         	movff	strcpy@src,strcpy@s
  9137  005682  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  9138  005686  C001  F009         	movff	strcpy@dest,strcpy@d
  9139  00568A  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  9140  00568E                     l4706:
  9141  00568E  5007               	movf	strcpy@s^0,w,c
  9142  005690  6E05               	movwf	??_strcpy^0,c
  9143  005692  5008               	movf	(strcpy@s+1)^0,w,c
  9144  005694  6E06               	movwf	(??_strcpy+1)^0,c
  9145  005696  4A07               	infsnz	strcpy@s^0,f,c
  9146  005698  2A08               	incf	(strcpy@s+1)^0,f,c
  9147  00569A  C005  FFF6         	movff	??_strcpy,tblptrl
  9148  00569E  C006  FFF7         	movff	??_strcpy+1,tblptrh
  9149  0056A2  6AF8               	clrf	tblptru,c
  9150  0056A4  C009  FFD9         	movff	strcpy@d,fsr2l
  9151  0056A8  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  9152  0056AC  4A09               	infsnz	strcpy@d^0,f,c
  9153  0056AE  2A0A               	incf	(strcpy@d+1)^0,f,c
  9154  0056B0  0E05               	movlw	(high __ramtop+-1)
  9155  0056B2  64F7               	cpfsgt	tblptrh,c
  9156  0056B4  D003               	bra	u5307
  9157  0056B6  0008               	tblrd		*
  9158  0056B8  50F5               	movf	tablat,w,c
  9159  0056BA  D005               	bra	u5300
  9160  0056BC                     u5307:
  9161  0056BC  CFF6 FFE1          	movff	tblptrl,fsr1l
  9162  0056C0  CFF7 FFE2          	movff	tblptrh,fsr1h
  9163  0056C4  50E7               	movf	indf1,w,c
  9164  0056C6                     u5300:
  9165  0056C6  6EDF               	movwf	indf2,c
  9166  0056C8  50DF               	movf	indf2,w,c
  9167  0056CA  A4D8               	btfss	status,2,c
  9168  0056CC  EF6A  F02B         	goto	u5311
  9169  0056D0  EF6C  F02B         	goto	u5310
  9170  0056D4                     u5311:
  9171  0056D4  EF47  F02B         	goto	l4706
  9172  0056D8                     u5310:
  9173  0056D8  0012               	return		;funcret
  9174  0056DA                     __end_of_strcpy:
  9175                           	callstack 0
  9176                           
  9177 ;; *************** function _floorf *****************
  9178 ;; Defined at:
  9179 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\floorf.c"
  9180 ;; Parameters:    Size  Location     Type
  9181 ;;  x               4   77[COMRAM] float 
  9182 ;; Auto vars:     Size  Location     Type
  9183 ;;  u               4    6[BANK0 ] struct .
  9184 ;;  m               4    0[BANK0 ] unsigned long 
  9185 ;;  e               2    4[BANK0 ] int 
  9186 ;; Return value:  Size  Location     Type
  9187 ;;                  4   77[COMRAM] float 
  9188 ;; Registers used:
  9189 ;;		wreg, status,2, status,0
  9190 ;; Tracked objects:
  9191 ;;		On entry : 0/0
  9192 ;;		On exit  : 0/0
  9193 ;;		Unchanged: 0/0
  9194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9195 ;;      Params:         4       0       0       0       0       0       0
  9196 ;;      Locals:         0      10       0       0       0       0       0
  9197 ;;      Temps:          6       0       0       0       0       0       0
  9198 ;;      Totals:        10      10       0       0       0       0       0
  9199 ;;Total ram usage:       20 bytes
  9200 ;; Hardware stack levels used:    1
  9201 ;; Hardware stack levels required when called:    1
  9202 ;; This function calls:
  9203 ;;		Nothing
  9204 ;; This function is called by:
  9205 ;;		_efgtoa
  9206 ;; This function uses a non-reentrant model
  9207 ;;
  9208                           
  9209                           	psect	text27
  9210  003CA0                     __ptext27:
  9211                           	callstack 0
  9212  003CA0                     _floorf:
  9213                           	callstack 23
  9214  003CA0  C17F  F066         	movff	floorf@F524,floorf@u
  9215  003CA4  C180  F067         	movff	floorf@F524+1,floorf@u+1
  9216  003CA8  C181  F068         	movff	floorf@F524+2,floorf@u+2
  9217  003CAC  C182  F069         	movff	floorf@F524+3,floorf@u+3
  9218  003CB0  C04E  F066         	movff	floorf@x,floorf@u
  9219  003CB4  C04F  F067         	movff	floorf@x+1,floorf@u+1
  9220  003CB8  C050  F068         	movff	floorf@x+2,floorf@u+2
  9221  003CBC  C051  F069         	movff	floorf@x+3,floorf@u+3
  9222  003CC0  0E81               	movlw	129
  9223  003CC2  6E52               	movwf	??_floorf^0,c
  9224  003CC4  0EFF               	movlw	255
  9225  003CC6  6E53               	movwf	(??_floorf+1)^0,c
  9226  003CC8  C066  F054         	movff	floorf@u,??_floorf+2
  9227  003CCC  C067  F055         	movff	floorf@u+1,??_floorf+3
  9228  003CD0  C068  F056         	movff	floorf@u+2,??_floorf+4
  9229  003CD4  C069  F057         	movff	floorf@u+3,??_floorf+5
  9230  003CD8  0E18               	movlw	24
  9231  003CDA  EF74  F01E         	goto	u5350
  9232  003CDE                     u5355:
  9233  003CDE  90D8               	bcf	status,0,c
  9234  003CE0  3257               	rrcf	(??_floorf+5)^0,f,c
  9235  003CE2  3256               	rrcf	(??_floorf+4)^0,f,c
  9236  003CE4  3255               	rrcf	(??_floorf+3)^0,f,c
  9237  003CE6  3254               	rrcf	(??_floorf+2)^0,f,c
  9238  003CE8                     u5350:
  9239  003CE8  2EE8               	decfsz	wreg,f,c
  9240  003CEA  EF6F  F01E         	goto	u5355
  9241  003CEE  5054               	movf	(??_floorf+2)^0,w,c
  9242  003CF0  2452               	addwf	??_floorf^0,w,c
  9243  003CF2  0100               	movlb	0	; () banked
  9244  003CF4  6F64               	movwf	floorf@e& (0+255),b
  9245  003CF6  0E00               	movlw	0
  9246  003CF8  2053               	addwfc	(??_floorf+1)^0,w,c
  9247  003CFA  6F65               	movwf	(floorf@e+1)& (0+255),b
  9248  003CFC  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  9249  003CFE  EF8A  F01E         	goto	u5361
  9250  003D02  5165               	movf	(floorf@e+1)& (0+255),w,b
  9251  003D04  E109               	bnz	u5360
  9252  003D06  0E17               	movlw	23
  9253  003D08  5D64               	subwf	floorf@e& (0+255),w,b
  9254  003D0A  A0D8               	btfss	status,0,c
  9255  003D0C  EF8A  F01E         	goto	u5361
  9256  003D10  EF8C  F01E         	goto	u5360
  9257  003D14                     u5361:
  9258  003D14  EF96  F01E         	goto	l4724
  9259  003D18                     u5360:
  9260  003D18                     l4722:
  9261                           
  9262                           ; BSR set to: 0
  9263  003D18  C04E  F04E         	movff	floorf@x,?_floorf
  9264  003D1C  C04F  F04F         	movff	floorf@x+1,?_floorf+1
  9265  003D20  C050  F050         	movff	floorf@x+2,?_floorf+2
  9266  003D24  C051  F051         	movff	floorf@x+3,?_floorf+3
  9267  003D28  EF5A  F01F         	goto	l1434
  9268  003D2C                     l4724:
  9269                           
  9270                           ; BSR set to: 0
  9271  003D2C  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  9272  003D2E  EF9B  F01E         	goto	u5371
  9273  003D32  EF9D  F01E         	goto	u5370
  9274  003D36                     u5371:
  9275  003D36  EF0E  F01F         	goto	l4734
  9276  003D3A                     u5370:
  9277  003D3A                     
  9278                           ; BSR set to: 0
  9279  003D3A  C064  F052         	movff	floorf@e,??_floorf
  9280  003D3E  0EFF               	movlw	255
  9281  003D40  6E53               	movwf	(??_floorf+1)^0,c
  9282  003D42  0EFF               	movlw	255
  9283  003D44  6E54               	movwf	(??_floorf+2)^0,c
  9284  003D46  0E7F               	movlw	127
  9285  003D48  6E55               	movwf	(??_floorf+3)^0,c
  9286  003D4A  0E00               	movlw	0
  9287  003D4C  6E56               	movwf	(??_floorf+4)^0,c
  9288  003D4E                     u5385:
  9289  003D4E  6652               	tstfsz	??_floorf^0,c
  9290  003D50  EFAC  F01E         	goto	u5386
  9291  003D54  EFB4  F01E         	goto	u5387
  9292  003D58                     u5386:
  9293  003D58  3456               	rlcf	(??_floorf+4)^0,w,c
  9294  003D5A  3256               	rrcf	(??_floorf+4)^0,f,c
  9295  003D5C  3255               	rrcf	(??_floorf+3)^0,f,c
  9296  003D5E  3254               	rrcf	(??_floorf+2)^0,f,c
  9297  003D60  3253               	rrcf	(??_floorf+1)^0,f,c
  9298  003D62  2E52               	decfsz	??_floorf^0,f,c
  9299  003D64  EFA7  F01E         	goto	u5385
  9300  003D68                     u5387:
  9301  003D68  C053  F060         	movff	??_floorf+1,floorf@m
  9302  003D6C  C054  F061         	movff	??_floorf+2,floorf@m+1
  9303  003D70  C055  F062         	movff	??_floorf+3,floorf@m+2
  9304  003D74  C056  F063         	movff	??_floorf+4,floorf@m+3
  9305  003D78  0100               	movlb	0	; () banked
  9306  003D7A  5160               	movf	floorf@m& (0+255),w,b
  9307  003D7C  1566               	andwf	floorf@u& (0+255),w,b
  9308  003D7E  6E52               	movwf	??_floorf^0,c
  9309  003D80  5161               	movf	(floorf@m+1)& (0+255),w,b
  9310  003D82  1567               	andwf	(floorf@u+1)& (0+255),w,b
  9311  003D84  6E53               	movwf	(??_floorf+1)^0,c
  9312  003D86  5162               	movf	(floorf@m+2)& (0+255),w,b
  9313  003D88  1568               	andwf	(floorf@u+2)& (0+255),w,b
  9314  003D8A  6E54               	movwf	(??_floorf+2)^0,c
  9315  003D8C  5163               	movf	(floorf@m+3)& (0+255),w,b
  9316  003D8E  1569               	andwf	(floorf@u+3)& (0+255),w,b
  9317  003D90  6E55               	movwf	(??_floorf+3)^0,c
  9318  003D92  5052               	movf	??_floorf^0,w,c
  9319  003D94  1053               	iorwf	(??_floorf+1)^0,w,c
  9320  003D96  1054               	iorwf	(??_floorf+2)^0,w,c
  9321  003D98  1055               	iorwf	(??_floorf+3)^0,w,c
  9322  003D9A  A4D8               	btfss	status,2,c
  9323  003D9C  EFD2  F01E         	goto	u5391
  9324  003DA0  EFD4  F01E         	goto	u5390
  9325  003DA4                     u5391:
  9326  003DA4  EFD6  F01E         	goto	l4730
  9327  003DA8                     u5390:
  9328  003DA8  EF8C  F01E         	goto	l4722
  9329  003DAC                     l4730:
  9330                           
  9331                           ; BSR set to: 0
  9332  003DAC  C066  F052         	movff	floorf@u,??_floorf
  9333  003DB0  C067  F053         	movff	floorf@u+1,??_floorf+1
  9334  003DB4  C068  F054         	movff	floorf@u+2,??_floorf+2
  9335  003DB8  C069  F055         	movff	floorf@u+3,??_floorf+3
  9336  003DBC  0E20               	movlw	32
  9337  003DBE  EFE6  F01E         	goto	u5400
  9338  003DC2                     u5405:
  9339  003DC2  90D8               	bcf	status,0,c
  9340  003DC4  3255               	rrcf	(??_floorf+3)^0,f,c
  9341  003DC6  3254               	rrcf	(??_floorf+2)^0,f,c
  9342  003DC8  3253               	rrcf	(??_floorf+1)^0,f,c
  9343  003DCA  3252               	rrcf	??_floorf^0,f,c
  9344  003DCC                     u5400:
  9345  003DCC  2EE8               	decfsz	wreg,f,c
  9346  003DCE  EFE1  F01E         	goto	u5405
  9347  003DD2  5052               	movf	??_floorf^0,w,c
  9348  003DD4  1053               	iorwf	(??_floorf+1)^0,w,c
  9349  003DD6  1054               	iorwf	(??_floorf+2)^0,w,c
  9350  003DD8  1055               	iorwf	(??_floorf+3)^0,w,c
  9351  003DDA  B4D8               	btfsc	status,2,c
  9352  003DDC  EFF2  F01E         	goto	u5411
  9353  003DE0  EFF4  F01E         	goto	u5410
  9354  003DE4                     u5411:
  9355  003DE4  EFFC  F01E         	goto	l1437
  9356  003DE8                     u5410:
  9357  003DE8                     
  9358                           ; BSR set to: 0
  9359  003DE8  5160               	movf	floorf@m& (0+255),w,b
  9360  003DEA  2766               	addwf	floorf@u& (0+255),f,b
  9361  003DEC  5161               	movf	(floorf@m+1)& (0+255),w,b
  9362  003DEE  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  9363  003DF0  5162               	movf	(floorf@m+2)& (0+255),w,b
  9364  003DF2  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  9365  003DF4  5163               	movf	(floorf@m+3)& (0+255),w,b
  9366  003DF6  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  9367  003DF8                     l1437:
  9368                           
  9369                           ; BSR set to: 0
  9370  003DF8  1D60               	comf	floorf@m& (0+255),w,b
  9371  003DFA  6E52               	movwf	??_floorf^0,c
  9372  003DFC  1D61               	comf	(floorf@m+1)& (0+255),w,b
  9373  003DFE  6E53               	movwf	(??_floorf+1)^0,c
  9374  003E00  1D62               	comf	(floorf@m+2)& (0+255),w,b
  9375  003E02  6E54               	movwf	(??_floorf+2)^0,c
  9376  003E04  1D63               	comf	(floorf@m+3)& (0+255),w,b
  9377  003E06  6E55               	movwf	(??_floorf+3)^0,c
  9378  003E08  5052               	movf	??_floorf^0,w,c
  9379  003E0A  1766               	andwf	floorf@u& (0+255),f,b
  9380  003E0C  5053               	movf	(??_floorf+1)^0,w,c
  9381  003E0E  1767               	andwf	(floorf@u+1)& (0+255),f,b
  9382  003E10  5054               	movf	(??_floorf+2)^0,w,c
  9383  003E12  1768               	andwf	(floorf@u+2)& (0+255),f,b
  9384  003E14  5055               	movf	(??_floorf+3)^0,w,c
  9385  003E16  1769               	andwf	(floorf@u+3)& (0+255),f,b
  9386  003E18  EF52  F01F         	goto	l4742
  9387  003E1C                     l4734:
  9388                           
  9389                           ; BSR set to: 0
  9390  003E1C  C066  F052         	movff	floorf@u,??_floorf
  9391  003E20  C067  F053         	movff	floorf@u+1,??_floorf+1
  9392  003E24  C068  F054         	movff	floorf@u+2,??_floorf+2
  9393  003E28  C069  F055         	movff	floorf@u+3,??_floorf+3
  9394  003E2C  0E20               	movlw	32
  9395  003E2E  EF1E  F01F         	goto	u5420
  9396  003E32                     u5425:
  9397  003E32  90D8               	bcf	status,0,c
  9398  003E34  3255               	rrcf	(??_floorf+3)^0,f,c
  9399  003E36  3254               	rrcf	(??_floorf+2)^0,f,c
  9400  003E38  3253               	rrcf	(??_floorf+1)^0,f,c
  9401  003E3A  3252               	rrcf	??_floorf^0,f,c
  9402  003E3C                     u5420:
  9403  003E3C  2EE8               	decfsz	wreg,f,c
  9404  003E3E  EF19  F01F         	goto	u5425
  9405  003E42  5052               	movf	??_floorf^0,w,c
  9406  003E44  1053               	iorwf	(??_floorf+1)^0,w,c
  9407  003E46  1054               	iorwf	(??_floorf+2)^0,w,c
  9408  003E48  1055               	iorwf	(??_floorf+3)^0,w,c
  9409  003E4A  A4D8               	btfss	status,2,c
  9410  003E4C  EF2A  F01F         	goto	u5431
  9411  003E50  EF2C  F01F         	goto	u5430
  9412  003E54                     u5431:
  9413  003E54  EF36  F01F         	goto	l4738
  9414  003E58                     u5430:
  9415  003E58                     
  9416                           ; BSR set to: 0
  9417  003E58  0E00               	movlw	0
  9418  003E5A  6F66               	movwf	floorf@u& (0+255),b
  9419  003E5C  0E00               	movlw	0
  9420  003E5E  6F67               	movwf	(floorf@u+1)& (0+255),b
  9421  003E60  0E00               	movlw	0
  9422  003E62  6F68               	movwf	(floorf@u+2)& (0+255),b
  9423  003E64  0E00               	movlw	0
  9424  003E66  6F69               	movwf	(floorf@u+3)& (0+255),b
  9425  003E68  EF52  F01F         	goto	l4742
  9426  003E6C                     l4738:
  9427                           
  9428                           ; BSR set to: 0
  9429  003E6C  90D8               	bcf	status,0,c
  9430  003E6E  3566               	rlcf	floorf@u& (0+255),w,b
  9431  003E70  6E52               	movwf	??_floorf^0,c
  9432  003E72  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  9433  003E74  6E53               	movwf	(??_floorf+1)^0,c
  9434  003E76  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  9435  003E78  6E54               	movwf	(??_floorf+2)^0,c
  9436  003E7A  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  9437  003E7C  6E55               	movwf	(??_floorf+3)^0,c
  9438  003E7E  5052               	movf	??_floorf^0,w,c
  9439  003E80  1053               	iorwf	(??_floorf+1)^0,w,c
  9440  003E82  1054               	iorwf	(??_floorf+2)^0,w,c
  9441  003E84  1055               	iorwf	(??_floorf+3)^0,w,c
  9442  003E86  B4D8               	btfsc	status,2,c
  9443  003E88  EF48  F01F         	goto	u5441
  9444  003E8C  EF4A  F01F         	goto	u5440
  9445  003E90                     u5441:
  9446  003E90  EF52  F01F         	goto	l4742
  9447  003E94                     u5440:
  9448  003E94                     
  9449                           ; BSR set to: 0
  9450  003E94  0E00               	movlw	0
  9451  003E96  6F66               	movwf	floorf@u& (0+255),b
  9452  003E98  0E00               	movlw	0
  9453  003E9A  6F67               	movwf	(floorf@u+1)& (0+255),b
  9454  003E9C  0E80               	movlw	128
  9455  003E9E  6F68               	movwf	(floorf@u+2)& (0+255),b
  9456  003EA0  0EBF               	movlw	191
  9457  003EA2  6F69               	movwf	(floorf@u+3)& (0+255),b
  9458  003EA4                     l4742:
  9459                           
  9460                           ; BSR set to: 0
  9461  003EA4  C066  F04E         	movff	floorf@u,?_floorf
  9462  003EA8  C067  F04F         	movff	floorf@u+1,?_floorf+1
  9463  003EAC  C068  F050         	movff	floorf@u+2,?_floorf+2
  9464  003EB0  C069  F051         	movff	floorf@u+3,?_floorf+3
  9465  003EB4                     l1434:
  9466                           
  9467                           ; BSR set to: 0
  9468  003EB4  0012               	return		;funcret
  9469  003EB6                     __end_of_floorf:
  9470                           	callstack 0
  9471                           
  9472 ;; *************** function ___fpclassifyf *****************
  9473 ;; Defined at:
  9474 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
  9475 ;; Parameters:    Size  Location     Type
  9476 ;;  x               4    0[COMRAM] float 
  9477 ;; Auto vars:     Size  Location     Type
  9478 ;;  u               4   10[COMRAM] struct .
  9479 ;;  e               2    8[COMRAM] int 
  9480 ;; Return value:  Size  Location     Type
  9481 ;;                  2    0[COMRAM] int 
  9482 ;; Registers used:
  9483 ;;		wreg, status,2, status,0
  9484 ;; Tracked objects:
  9485 ;;		On entry : 0/0
  9486 ;;		On exit  : 0/0
  9487 ;;		Unchanged: 0/0
  9488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9489 ;;      Params:         4       0       0       0       0       0       0
  9490 ;;      Locals:         6       0       0       0       0       0       0
  9491 ;;      Temps:          4       0       0       0       0       0       0
  9492 ;;      Totals:        14       0       0       0       0       0       0
  9493 ;;Total ram usage:       14 bytes
  9494 ;; Hardware stack levels used:    1
  9495 ;; Hardware stack levels required when called:    1
  9496 ;; This function calls:
  9497 ;;		Nothing
  9498 ;; This function is called by:
  9499 ;;		_efgtoa
  9500 ;; This function uses a non-reentrant model
  9501 ;;
  9502                           
  9503                           	psect	text28
  9504  004B56                     __ptext28:
  9505                           	callstack 0
  9506  004B56                     ___fpclassifyf:
  9507                           	callstack 23
  9508  004B56  C183  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  9509  004B5A  C184  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  9510  004B5E  C185  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  9511  004B62  C186  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  9512  004B66  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  9513  004B6A  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  9514  004B6E  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  9515  004B72  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  9516  004B76  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  9517  004B7A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9518  004B7E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9519  004B82  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9520  004B86  0E18               	movlw	24
  9521  004B88  EFCB  F025         	goto	u5230
  9522  004B8C                     u5235:
  9523  004B8C  90D8               	bcf	status,0,c
  9524  004B8E  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  9525  004B90  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  9526  004B92  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  9527  004B94  3205               	rrcf	??___fpclassifyf^0,f,c
  9528  004B96                     u5230:
  9529  004B96  2EE8               	decfsz	wreg,f,c
  9530  004B98  EFC6  F025         	goto	u5235
  9531  004B9C  5005               	movf	??___fpclassifyf^0,w,c
  9532  004B9E  6E09               	movwf	___fpclassifyf@e^0,c
  9533  004BA0  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  9534  004BA2  5009               	movf	___fpclassifyf@e^0,w,c
  9535  004BA4  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9536  004BA6  A4D8               	btfss	status,2,c
  9537  004BA8  EFD8  F025         	goto	u5241
  9538  004BAC  EFDA  F025         	goto	u5240
  9539  004BB0                     u5241:
  9540  004BB0  EFFA  F025         	goto	l4694
  9541  004BB4                     u5240:
  9542  004BB4  90D8               	bcf	status,0,c
  9543  004BB6  340B               	rlcf	___fpclassifyf@u^0,w,c
  9544  004BB8  6E05               	movwf	??___fpclassifyf^0,c
  9545  004BBA  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  9546  004BBC  6E06               	movwf	(??___fpclassifyf+1)^0,c
  9547  004BBE  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  9548  004BC0  6E07               	movwf	(??___fpclassifyf+2)^0,c
  9549  004BC2  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  9550  004BC4  6E08               	movwf	(??___fpclassifyf+3)^0,c
  9551  004BC6  5005               	movf	??___fpclassifyf^0,w,c
  9552  004BC8  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  9553  004BCA  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  9554  004BCC  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  9555  004BCE  A4D8               	btfss	status,2,c
  9556  004BD0  EFEC  F025         	goto	u5251
  9557  004BD4  EFEE  F025         	goto	u5250
  9558  004BD8                     u5251:
  9559  004BD8  EFF4  F025         	goto	l4690
  9560  004BDC                     u5250:
  9561  004BDC  0E00               	movlw	0
  9562  004BDE  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9563  004BE0  0E02               	movlw	2
  9564  004BE2  6E01               	movwf	?___fpclassifyf^0,c
  9565  004BE4  EF29  F026         	goto	l1389
  9566  004BE8                     l4690:
  9567  004BE8  0E00               	movlw	0
  9568  004BEA  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9569  004BEC  0E03               	movlw	3
  9570  004BEE  6E01               	movwf	?___fpclassifyf^0,c
  9571  004BF0  EF29  F026         	goto	l1389
  9572  004BF4                     l4694:
  9573  004BF4  2809               	incf	___fpclassifyf@e^0,w,c
  9574  004BF6  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9575  004BF8  A4D8               	btfss	status,2,c
  9576  004BFA  EF01  F026         	goto	u5261
  9577  004BFE  EF03  F026         	goto	u5260
  9578  004C02                     u5261:
  9579  004C02  EF25  F026         	goto	l4700
  9580  004C06                     u5260:
  9581  004C06  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  9582  004C0A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9583  004C0E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9584  004C12  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9585  004C16  0E09               	movlw	9
  9586  004C18                     u5275:
  9587  004C18  90D8               	bcf	status,0,c
  9588  004C1A  3605               	rlcf	??___fpclassifyf^0,f,c
  9589  004C1C  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  9590  004C1E  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  9591  004C20  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  9592  004C22  2EE8               	decfsz	wreg,f,c
  9593  004C24  EF0C  F026         	goto	u5275
  9594  004C28  5005               	movf	??___fpclassifyf^0,w,c
  9595  004C2A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  9596  004C2C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  9597  004C2E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  9598  004C30  B4D8               	btfsc	status,2,c
  9599  004C32  EF1D  F026         	goto	u5281
  9600  004C36  EF20  F026         	goto	u5280
  9601  004C3A                     u5281:
  9602  004C3A  0E01               	movlw	1
  9603  004C3C  EF21  F026         	goto	u5290
  9604  004C40                     u5280:
  9605  004C40  0E00               	movlw	0
  9606  004C42                     u5290:
  9607  004C42  6E01               	movwf	?___fpclassifyf^0,c
  9608  004C44  6A02               	clrf	(?___fpclassifyf+1)^0,c
  9609  004C46  EF29  F026         	goto	l1389
  9610  004C4A                     l4700:
  9611  004C4A  0E00               	movlw	0
  9612  004C4C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9613  004C4E  0E04               	movlw	4
  9614  004C50  6E01               	movwf	?___fpclassifyf^0,c
  9615  004C52                     l1389:
  9616  004C52  0012               	return		;funcret
  9617  004C54                     __end_of___fpclassifyf:
  9618                           	callstack 0
  9619                           
  9620 ;; *************** function ___fltol *****************
  9621 ;; Defined at:
  9622 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
  9623 ;; Parameters:    Size  Location     Type
  9624 ;;  f1              4   77[COMRAM] int 
  9625 ;; Auto vars:     Size  Location     Type
  9626 ;;  exp1            1   86[COMRAM] unsigned char 
  9627 ;;  sign1           1   85[COMRAM] unsigned char 
  9628 ;; Return value:  Size  Location     Type
  9629 ;;                  4   77[COMRAM] long 
  9630 ;; Registers used:
  9631 ;;		wreg, status,2, status,0
  9632 ;; Tracked objects:
  9633 ;;		On entry : 0/0
  9634 ;;		On exit  : 0/0
  9635 ;;		Unchanged: 0/0
  9636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9637 ;;      Params:         4       0       0       0       0       0       0
  9638 ;;      Locals:         2       0       0       0       0       0       0
  9639 ;;      Temps:          4       0       0       0       0       0       0
  9640 ;;      Totals:        10       0       0       0       0       0       0
  9641 ;;Total ram usage:       10 bytes
  9642 ;; Hardware stack levels used:    1
  9643 ;; Hardware stack levels required when called:    1
  9644 ;; This function calls:
  9645 ;;		Nothing
  9646 ;; This function is called by:
  9647 ;;		_scanAdcConversion
  9648 ;;		_PWM1_setDC
  9649 ;;		_PWM2_setDC
  9650 ;;		_speedControl
  9651 ;;		_efgtoa
  9652 ;; This function uses a non-reentrant model
  9653 ;;
  9654                           
  9655                           	psect	text29
  9656  00494C                     __ptext29:
  9657                           	callstack 0
  9658  00494C                     ___fltol:
  9659                           	callstack 25
  9660  00494C  3450               	rlcf	(___fltol@f1+2)^0,w,c
  9661  00494E  3451               	rlcf	(___fltol@f1+3)^0,w,c
  9662  004950  6E57               	movwf	___fltol@exp1^0,c
  9663  004952  5057               	movf	___fltol@exp1^0,w,c
  9664  004954  A4D8               	btfss	status,2,c
  9665  004956  EFAF  F024         	goto	u5111
  9666  00495A  EFB1  F024         	goto	u5110
  9667  00495E                     u5111:
  9668  00495E  EFBB  F024         	goto	l4618
  9669  004962                     u5110:
  9670  004962                     l4614:
  9671  004962  0E00               	movlw	0
  9672  004964  6E4E               	movwf	?___fltol^0,c
  9673  004966  0E00               	movlw	0
  9674  004968  6E4F               	movwf	(?___fltol+1)^0,c
  9675  00496A  0E00               	movlw	0
  9676  00496C  6E50               	movwf	(?___fltol+2)^0,c
  9677  00496E  0E00               	movlw	0
  9678  004970  6E51               	movwf	(?___fltol+3)^0,c
  9679  004972  EF28  F025         	goto	l784
  9680  004976                     l4618:
  9681  004976  C04E  F052         	movff	___fltol@f1,??___fltol
  9682  00497A  C04F  F053         	movff	___fltol@f1+1,??___fltol+1
  9683  00497E  C050  F054         	movff	___fltol@f1+2,??___fltol+2
  9684  004982  C051  F055         	movff	___fltol@f1+3,??___fltol+3
  9685  004986  0E20               	movlw	32
  9686  004988  EFCB  F024         	goto	u5120
  9687  00498C                     u5125:
  9688  00498C  90D8               	bcf	status,0,c
  9689  00498E  3255               	rrcf	(??___fltol+3)^0,f,c
  9690  004990  3254               	rrcf	(??___fltol+2)^0,f,c
  9691  004992  3253               	rrcf	(??___fltol+1)^0,f,c
  9692  004994  3252               	rrcf	??___fltol^0,f,c
  9693  004996                     u5120:
  9694  004996  2EE8               	decfsz	wreg,f,c
  9695  004998  EFC6  F024         	goto	u5125
  9696  00499C  5052               	movf	??___fltol^0,w,c
  9697  00499E  6E56               	movwf	___fltol@sign1^0,c
  9698  0049A0  8E50               	bsf	(___fltol@f1+2)^0,7,c
  9699  0049A2  0EFF               	movlw	255
  9700  0049A4  164E               	andwf	___fltol@f1^0,f,c
  9701  0049A6  0EFF               	movlw	255
  9702  0049A8  164F               	andwf	(___fltol@f1+1)^0,f,c
  9703  0049AA  0EFF               	movlw	255
  9704  0049AC  1650               	andwf	(___fltol@f1+2)^0,f,c
  9705  0049AE  0E00               	movlw	0
  9706  0049B0  1651               	andwf	(___fltol@f1+3)^0,f,c
  9707  0049B2  0E96               	movlw	150
  9708  0049B4  5E57               	subwf	___fltol@exp1^0,f,c
  9709  0049B6  BE57               	btfsc	___fltol@exp1^0,7,c
  9710  0049B8  EFE2  F024         	goto	u5130
  9711  0049BC  EFE0  F024         	goto	u5131
  9712  0049C0                     u5131:
  9713  0049C0  EFF8  F024         	goto	l4638
  9714  0049C4                     u5130:
  9715  0049C4  5057               	movf	___fltol@exp1^0,w,c
  9716  0049C6  0A80               	xorlw	128
  9717  0049C8  0F97               	addlw	151
  9718  0049CA  B0D8               	btfsc	status,0,c
  9719  0049CC  EFEA  F024         	goto	u5141
  9720  0049D0  EFEC  F024         	goto	u5140
  9721  0049D4                     u5141:
  9722  0049D4  EFEE  F024         	goto	l4634
  9723  0049D8                     u5140:
  9724  0049D8  EFB1  F024         	goto	l4614
  9725  0049DC                     l4634:
  9726  0049DC  90D8               	bcf	status,0,c
  9727  0049DE  3251               	rrcf	(___fltol@f1+3)^0,f,c
  9728  0049E0  3250               	rrcf	(___fltol@f1+2)^0,f,c
  9729  0049E2  324F               	rrcf	(___fltol@f1+1)^0,f,c
  9730  0049E4  324E               	rrcf	___fltol@f1^0,f,c
  9731  0049E6  3E57               	incfsz	___fltol@exp1^0,f,c
  9732  0049E8  EFEE  F024         	goto	l4634
  9733  0049EC  EF10  F025         	goto	l4648
  9734  0049F0                     l4638:
  9735  0049F0  0E1F               	movlw	31
  9736  0049F2  6457               	cpfsgt	___fltol@exp1^0,c
  9737  0049F4  EFFE  F024         	goto	u5151
  9738  0049F8  EF00  F025         	goto	u5150
  9739  0049FC                     u5151:
  9740  0049FC  EF08  F025         	goto	l4646
  9741  004A00                     u5150:
  9742  004A00  EFB1  F024         	goto	l4614
  9743  004A04                     l4644:
  9744  004A04  90D8               	bcf	status,0,c
  9745  004A06  364E               	rlcf	___fltol@f1^0,f,c
  9746  004A08  364F               	rlcf	(___fltol@f1+1)^0,f,c
  9747  004A0A  3650               	rlcf	(___fltol@f1+2)^0,f,c
  9748  004A0C  3651               	rlcf	(___fltol@f1+3)^0,f,c
  9749  004A0E  0657               	decf	___fltol@exp1^0,f,c
  9750  004A10                     l4646:
  9751  004A10  5057               	movf	___fltol@exp1^0,w,c
  9752  004A12  A4D8               	btfss	status,2,c
  9753  004A14  EF0E  F025         	goto	u5161
  9754  004A18  EF10  F025         	goto	u5160
  9755  004A1C                     u5161:
  9756  004A1C  EF02  F025         	goto	l4644
  9757  004A20                     u5160:
  9758  004A20                     l4648:
  9759  004A20  5056               	movf	___fltol@sign1^0,w,c
  9760  004A22  B4D8               	btfsc	status,2,c
  9761  004A24  EF16  F025         	goto	u5171
  9762  004A28  EF18  F025         	goto	u5170
  9763  004A2C                     u5171:
  9764  004A2C  EF20  F025         	goto	l4652
  9765  004A30                     u5170:
  9766  004A30  1E51               	comf	(___fltol@f1+3)^0,f,c
  9767  004A32  1E50               	comf	(___fltol@f1+2)^0,f,c
  9768  004A34  1E4F               	comf	(___fltol@f1+1)^0,f,c
  9769  004A36  6C4E               	negf	___fltol@f1^0,c
  9770  004A38  0E00               	movlw	0
  9771  004A3A  224F               	addwfc	(___fltol@f1+1)^0,f,c
  9772  004A3C  2250               	addwfc	(___fltol@f1+2)^0,f,c
  9773  004A3E  2251               	addwfc	(___fltol@f1+3)^0,f,c
  9774  004A40                     l4652:
  9775  004A40  C04E  F04E         	movff	___fltol@f1,?___fltol
  9776  004A44  C04F  F04F         	movff	___fltol@f1+1,?___fltol+1
  9777  004A48  C050  F050         	movff	___fltol@f1+2,?___fltol+2
  9778  004A4C  C051  F051         	movff	___fltol@f1+3,?___fltol+3
  9779  004A50                     l784:
  9780  004A50  0012               	return		;funcret
  9781  004A52                     __end_of___fltol:
  9782                           	callstack 0
  9783                           
  9784 ;; *************** function ___flsub *****************
  9785 ;; Defined at:
  9786 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  9787 ;; Parameters:    Size  Location     Type
  9788 ;;  b               4   68[COMRAM] long 
  9789 ;;  a               4   72[COMRAM] long 
  9790 ;; Auto vars:     Size  Location     Type
  9791 ;;		None
  9792 ;; Return value:  Size  Location     Type
  9793 ;;                  4   68[COMRAM] long 
  9794 ;; Registers used:
  9795 ;;		wreg, status,2, status,0, cstack
  9796 ;; Tracked objects:
  9797 ;;		On entry : 0/0
  9798 ;;		On exit  : 0/0
  9799 ;;		Unchanged: 0/0
  9800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9801 ;;      Params:         8       0       0       0       0       0       0
  9802 ;;      Locals:         0       0       0       0       0       0       0
  9803 ;;      Temps:          0       0       0       0       0       0       0
  9804 ;;      Totals:         8       0       0       0       0       0       0
  9805 ;;Total ram usage:        8 bytes
  9806 ;; Hardware stack levels used:    1
  9807 ;; Hardware stack levels required when called:    2
  9808 ;; This function calls:
  9809 ;;		___fladd
  9810 ;; This function is called by:
  9811 ;;		_stateMachine
  9812 ;;		_efgtoa
  9813 ;; This function uses a non-reentrant model
  9814 ;;
  9815                           
  9816                           	psect	text30
  9817  00582C                     __ptext30:
  9818                           	callstack 0
  9819  00582C                     ___flsub:
  9820                           	callstack 22
  9821  00582C  0E00               	movlw	0
  9822  00582E  1A49               	xorwf	___flsub@a^0,f,c
  9823  005830  0E00               	movlw	0
  9824  005832  1A4A               	xorwf	(___flsub@a+1)^0,f,c
  9825  005834  0E00               	movlw	0
  9826  005836  1A4B               	xorwf	(___flsub@a+2)^0,f,c
  9827  005838  0E80               	movlw	128
  9828  00583A  1A4C               	xorwf	(___flsub@a+3)^0,f,c
  9829  00583C  C045  F035         	movff	___flsub@b,___fladd@b
  9830  005840  C046  F036         	movff	___flsub@b+1,___fladd@b+1
  9831  005844  C047  F037         	movff	___flsub@b+2,___fladd@b+2
  9832  005848  C048  F038         	movff	___flsub@b+3,___fladd@b+3
  9833  00584C  C049  F039         	movff	___flsub@a,___fladd@a
  9834  005850  C04A  F03A         	movff	___flsub@a+1,___fladd@a+1
  9835  005854  C04B  F03B         	movff	___flsub@a+2,___fladd@a+2
  9836  005858  C04C  F03C         	movff	___flsub@a+3,___fladd@a+3
  9837  00585C  EC2A  F015         	call	___fladd	;wreg free
  9838  005860  C035  F045         	movff	?___fladd,?___flsub
  9839  005864  C036  F046         	movff	?___fladd+1,?___flsub+1
  9840  005868  C037  F047         	movff	?___fladd+2,?___flsub+2
  9841  00586C  C038  F048         	movff	?___fladd+3,?___flsub+3
  9842  005870  0012               	return		;funcret
  9843  005872                     __end_of___flsub:
  9844                           	callstack 0
  9845                           
  9846 ;; *************** function ___fladd *****************
  9847 ;; Defined at:
  9848 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  9849 ;; Parameters:    Size  Location     Type
  9850 ;;  b               4   52[COMRAM] long 
  9851 ;;  a               4   56[COMRAM] long 
  9852 ;; Auto vars:     Size  Location     Type
  9853 ;;  grs             1   67[COMRAM] unsigned char 
  9854 ;;  bexp            1   66[COMRAM] unsigned char 
  9855 ;;  aexp            1   65[COMRAM] unsigned char 
  9856 ;;  signs           1   64[COMRAM] unsigned char 
  9857 ;; Return value:  Size  Location     Type
  9858 ;;                  4   52[COMRAM] unsigned char 
  9859 ;; Registers used:
  9860 ;;		wreg, status,2, status,0
  9861 ;; Tracked objects:
  9862 ;;		On entry : 0/0
  9863 ;;		On exit  : 0/0
  9864 ;;		Unchanged: 0/0
  9865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9866 ;;      Params:         8       0       0       0       0       0       0
  9867 ;;      Locals:         4       0       0       0       0       0       0
  9868 ;;      Temps:          4       0       0       0       0       0       0
  9869 ;;      Totals:        16       0       0       0       0       0       0
  9870 ;;Total ram usage:       16 bytes
  9871 ;; Hardware stack levels used:    1
  9872 ;; Hardware stack levels required when called:    1
  9873 ;; This function calls:
  9874 ;;		Nothing
  9875 ;; This function is called by:
  9876 ;;		_stateMachine
  9877 ;;		_speedControl
  9878 ;;		___flsub
  9879 ;;		_efgtoa
  9880 ;; This function uses a non-reentrant model
  9881 ;;
  9882                           
  9883                           	psect	text31
  9884  002A54                     __ptext31:
  9885                           	callstack 0
  9886  002A54                     ___fladd:
  9887                           	callstack 25
  9888  002A54  5038               	movf	(___fladd@b+3)^0,w,c
  9889  002A56  0B80               	andlw	128
  9890  002A58  6E41               	movwf	___fladd@signs^0,c
  9891  002A5A  5038               	movf	(___fladd@b+3)^0,w,c
  9892  002A5C  2438               	addwf	(___fladd@b+3)^0,w,c
  9893  002A5E  6E43               	movwf	___fladd@bexp^0,c
  9894  002A60  AE37               	btfss	(___fladd@b+2)^0,7,c
  9895  002A62  EF35  F015         	goto	u3921
  9896  002A66  EF37  F015         	goto	u3920
  9897  002A6A                     u3921:
  9898  002A6A  EF38  F015         	goto	l3908
  9899  002A6E                     u3920:
  9900  002A6E  8043               	bsf	___fladd@bexp^0,0,c
  9901  002A70                     l3908:
  9902  002A70  5043               	movf	___fladd@bexp^0,w,c
  9903  002A72  B4D8               	btfsc	status,2,c
  9904  002A74  EF3E  F015         	goto	u3931
  9905  002A78  EF40  F015         	goto	u3930
  9906  002A7C                     u3931:
  9907  002A7C  EF55  F015         	goto	l3918
  9908  002A80                     u3930:
  9909  002A80  2843               	incf	___fladd@bexp^0,w,c
  9910  002A82  A4D8               	btfss	status,2,c
  9911  002A84  EF46  F015         	goto	u3941
  9912  002A88  EF48  F015         	goto	u3940
  9913  002A8C                     u3941:
  9914  002A8C  EF50  F015         	goto	l3914
  9915  002A90                     u3940:
  9916  002A90  0E00               	movlw	0
  9917  002A92  6E35               	movwf	___fladd@b^0,c
  9918  002A94  0E00               	movlw	0
  9919  002A96  6E36               	movwf	(___fladd@b+1)^0,c
  9920  002A98  0E00               	movlw	0
  9921  002A9A  6E37               	movwf	(___fladd@b+2)^0,c
  9922  002A9C  0E00               	movlw	0
  9923  002A9E  6E38               	movwf	(___fladd@b+3)^0,c
  9924  002AA0                     l3914:
  9925  002AA0  8E37               	bsf	(___fladd@b+2)^0,7,c
  9926  002AA2  0E00               	movlw	0
  9927  002AA4  6E38               	movwf	(___fladd@b+3)^0,c
  9928  002AA6  EF5D  F015         	goto	l3920
  9929  002AAA                     l3918:
  9930  002AAA  0E00               	movlw	0
  9931  002AAC  6E35               	movwf	___fladd@b^0,c
  9932  002AAE  0E00               	movlw	0
  9933  002AB0  6E36               	movwf	(___fladd@b+1)^0,c
  9934  002AB2  0E00               	movlw	0
  9935  002AB4  6E37               	movwf	(___fladd@b+2)^0,c
  9936  002AB6  0E00               	movlw	0
  9937  002AB8  6E38               	movwf	(___fladd@b+3)^0,c
  9938  002ABA                     l3920:
  9939  002ABA  503C               	movf	(___fladd@a+3)^0,w,c
  9940  002ABC  0B80               	andlw	128
  9941  002ABE  6E42               	movwf	___fladd@aexp^0,c
  9942  002AC0  5041               	movf	___fladd@signs^0,w,c
  9943  002AC2  1842               	xorwf	___fladd@aexp^0,w,c
  9944  002AC4  B4D8               	btfsc	status,2,c
  9945  002AC6  EF67  F015         	goto	u3951
  9946  002ACA  EF69  F015         	goto	u3950
  9947  002ACE                     u3951:
  9948  002ACE  EF6A  F015         	goto	l3926
  9949  002AD2                     u3950:
  9950  002AD2  8C41               	bsf	___fladd@signs^0,6,c
  9951  002AD4                     l3926:
  9952  002AD4  503C               	movf	(___fladd@a+3)^0,w,c
  9953  002AD6  243C               	addwf	(___fladd@a+3)^0,w,c
  9954  002AD8  6E42               	movwf	___fladd@aexp^0,c
  9955  002ADA  AE3B               	btfss	(___fladd@a+2)^0,7,c
  9956  002ADC  EF72  F015         	goto	u3961
  9957  002AE0  EF74  F015         	goto	u3960
  9958  002AE4                     u3961:
  9959  002AE4  EF75  F015         	goto	l3932
  9960  002AE8                     u3960:
  9961  002AE8  8042               	bsf	___fladd@aexp^0,0,c
  9962  002AEA                     l3932:
  9963  002AEA  5042               	movf	___fladd@aexp^0,w,c
  9964  002AEC  B4D8               	btfsc	status,2,c
  9965  002AEE  EF7B  F015         	goto	u3971
  9966  002AF2  EF7D  F015         	goto	u3970
  9967  002AF6                     u3971:
  9968  002AF6  EF92  F015         	goto	l3942
  9969  002AFA                     u3970:
  9970  002AFA  2842               	incf	___fladd@aexp^0,w,c
  9971  002AFC  A4D8               	btfss	status,2,c
  9972  002AFE  EF83  F015         	goto	u3981
  9973  002B02  EF85  F015         	goto	u3980
  9974  002B06                     u3981:
  9975  002B06  EF8D  F015         	goto	l3938
  9976  002B0A                     u3980:
  9977  002B0A  0E00               	movlw	0
  9978  002B0C  6E39               	movwf	___fladd@a^0,c
  9979  002B0E  0E00               	movlw	0
  9980  002B10  6E3A               	movwf	(___fladd@a+1)^0,c
  9981  002B12  0E00               	movlw	0
  9982  002B14  6E3B               	movwf	(___fladd@a+2)^0,c
  9983  002B16  0E00               	movlw	0
  9984  002B18  6E3C               	movwf	(___fladd@a+3)^0,c
  9985  002B1A                     l3938:
  9986  002B1A  8E3B               	bsf	(___fladd@a+2)^0,7,c
  9987  002B1C  0E00               	movlw	0
  9988  002B1E  6E3C               	movwf	(___fladd@a+3)^0,c
  9989  002B20  EF9A  F015         	goto	l3944
  9990  002B24                     l3942:
  9991  002B24  0E00               	movlw	0
  9992  002B26  6E39               	movwf	___fladd@a^0,c
  9993  002B28  0E00               	movlw	0
  9994  002B2A  6E3A               	movwf	(___fladd@a+1)^0,c
  9995  002B2C  0E00               	movlw	0
  9996  002B2E  6E3B               	movwf	(___fladd@a+2)^0,c
  9997  002B30  0E00               	movlw	0
  9998  002B32  6E3C               	movwf	(___fladd@a+3)^0,c
  9999  002B34                     l3944:
 10000  002B34  5043               	movf	___fladd@bexp^0,w,c
 10001  002B36  5C42               	subwf	___fladd@aexp^0,w,c
 10002  002B38  B0D8               	btfsc	status,0,c
 10003  002B3A  EFA1  F015         	goto	u3991
 10004  002B3E  EFA3  F015         	goto	u3990
 10005  002B42                     u3991:
 10006  002B42  EFCA  F015         	goto	l3980
 10007  002B46                     u3990:
 10008  002B46  AC41               	btfss	___fladd@signs^0,6,c
 10009  002B48  EFA8  F015         	goto	u4001
 10010  002B4C  EFAA  F015         	goto	u4000
 10011  002B50                     u4001:
 10012  002B50  EFAC  F015         	goto	l3950
 10013  002B54                     u4000:
 10014  002B54  0E80               	movlw	128
 10015  002B56  1A41               	xorwf	___fladd@signs^0,f,c
 10016  002B58                     l3950:
 10017  002B58  C043  F044         	movff	___fladd@bexp,___fladd@grs
 10018  002B5C  C042  F043         	movff	___fladd@aexp,___fladd@bexp
 10019  002B60  C044  F042         	movff	___fladd@grs,___fladd@aexp
 10020  002B64  C035  F044         	movff	___fladd@b,___fladd@grs
 10021  002B68  C039  F035         	movff	___fladd@a,___fladd@b
 10022  002B6C  C044  F039         	movff	___fladd@grs,___fladd@a
 10023  002B70  C036  F044         	movff	___fladd@b+1,___fladd@grs
 10024  002B74  C03A  F036         	movff	___fladd@a+1,___fladd@b+1
 10025  002B78  C044  F03A         	movff	___fladd@grs,___fladd@a+1
 10026  002B7C  C037  F044         	movff	___fladd@b+2,___fladd@grs
 10027  002B80  C03B  F037         	movff	___fladd@a+2,___fladd@b+2
 10028  002B84  C044  F03B         	movff	___fladd@grs,___fladd@a+2
 10029  002B88  C038  F044         	movff	___fladd@b+3,___fladd@grs
 10030  002B8C  C03C  F038         	movff	___fladd@a+3,___fladd@b+3
 10031  002B90  C044  F03C         	movff	___fladd@grs,___fladd@a+3
 10032  002B94                     l3980:
 10033  002B94  0E00               	movlw	0
 10034  002B96  6E44               	movwf	___fladd@grs^0,c
 10035  002B98  5043               	movf	___fladd@bexp^0,w,c
 10036  002B9A  C042  F03D         	movff	___fladd@aexp,??___fladd
 10037  002B9E  6A3E               	clrf	(??___fladd+1)^0,c
 10038  002BA0  5E3D               	subwf	??___fladd^0,f,c
 10039  002BA2  0E00               	movlw	0
 10040  002BA4  5A3E               	subwfb	(??___fladd+1)^0,f,c
 10041  002BA6  BE3E               	btfsc	(??___fladd+1)^0,7,c
 10042  002BA8  EFDF  F015         	goto	u4011
 10043  002BAC  503E               	movf	(??___fladd+1)^0,w,c
 10044  002BAE  E109               	bnz	u4010
 10045  002BB0  0E1A               	movlw	26
 10046  002BB2  5C3D               	subwf	??___fladd^0,w,c
 10047  002BB4  A0D8               	btfss	status,0,c
 10048  002BB6  EFDF  F015         	goto	u4011
 10049  002BBA  EFE1  F015         	goto	u4010
 10050  002BBE                     u4011:
 10051  002BBE  EF18  F016         	goto	l1016
 10052  002BC2                     u4010:
 10053  002BC2  5035               	movf	___fladd@b^0,w,c
 10054  002BC4  1036               	iorwf	(___fladd@b+1)^0,w,c
 10055  002BC6  1037               	iorwf	(___fladd@b+2)^0,w,c
 10056  002BC8  1038               	iorwf	(___fladd@b+3)^0,w,c
 10057  002BCA  A4D8               	btfss	status,2,c
 10058  002BCC  EFEA  F015         	goto	u4021
 10059  002BD0  EFED  F015         	goto	u4020
 10060  002BD4                     u4021:
 10061  002BD4  0E01               	movlw	1
 10062  002BD6  EFEE  F015         	goto	u4030
 10063  002BDA                     u4020:
 10064  002BDA  0E00               	movlw	0
 10065  002BDC                     u4030:
 10066  002BDC  6E44               	movwf	___fladd@grs^0,c
 10067  002BDE  0E00               	movlw	0
 10068  002BE0  6E35               	movwf	___fladd@b^0,c
 10069  002BE2  0E00               	movlw	0
 10070  002BE4  6E36               	movwf	(___fladd@b+1)^0,c
 10071  002BE6  0E00               	movlw	0
 10072  002BE8  6E37               	movwf	(___fladd@b+2)^0,c
 10073  002BEA  0E00               	movlw	0
 10074  002BEC  6E38               	movwf	(___fladd@b+3)^0,c
 10075  002BEE  C042  F043         	movff	___fladd@aexp,___fladd@bexp
 10076  002BF2  EF21  F016         	goto	l1015
 10077  002BF6                     l1017:
 10078  002BF6  A044               	btfss	___fladd@grs^0,0,c
 10079  002BF8  EF00  F016         	goto	u4041
 10080  002BFC  EF02  F016         	goto	u4040
 10081  002C00                     u4041:
 10082  002C00  EF08  F016         	goto	l3992
 10083  002C04                     u4040:
 10084  002C04  90D8               	bcf	status,0,c
 10085  002C06  3044               	rrcf	___fladd@grs^0,w,c
 10086  002C08  0901               	iorlw	1
 10087  002C0A  6E44               	movwf	___fladd@grs^0,c
 10088  002C0C  EF0A  F016         	goto	l3994
 10089  002C10                     l3992:
 10090  002C10  90D8               	bcf	status,0,c
 10091  002C12  3244               	rrcf	___fladd@grs^0,f,c
 10092  002C14                     l3994:
 10093  002C14  A035               	btfss	___fladd@b^0,0,c
 10094  002C16  EF0F  F016         	goto	u4051
 10095  002C1A  EF11  F016         	goto	u4050
 10096  002C1E                     u4051:
 10097  002C1E  EF12  F016         	goto	l3998
 10098  002C22                     u4050:
 10099  002C22  8E44               	bsf	___fladd@grs^0,7,c
 10100  002C24                     l3998:
 10101  002C24  3438               	rlcf	(___fladd@b+3)^0,w,c
 10102  002C26  3238               	rrcf	(___fladd@b+3)^0,f,c
 10103  002C28  3237               	rrcf	(___fladd@b+2)^0,f,c
 10104  002C2A  3236               	rrcf	(___fladd@b+1)^0,f,c
 10105  002C2C  3235               	rrcf	___fladd@b^0,f,c
 10106  002C2E  2A43               	incf	___fladd@bexp^0,f,c
 10107  002C30                     l1016:
 10108  002C30  5042               	movf	___fladd@aexp^0,w,c
 10109  002C32  5C43               	subwf	___fladd@bexp^0,w,c
 10110  002C34  A0D8               	btfss	status,0,c
 10111  002C36  EF1F  F016         	goto	u4061
 10112  002C3A  EF21  F016         	goto	u4060
 10113  002C3E                     u4061:
 10114  002C3E  EFFB  F015         	goto	l1017
 10115  002C42                     u4060:
 10116  002C42                     l1015:
 10117  002C42  BC41               	btfsc	___fladd@signs^0,6,c
 10118  002C44  EF26  F016         	goto	u4071
 10119  002C48  EF28  F016         	goto	u4070
 10120  002C4C                     u4071:
 10121  002C4C  EF68  F016         	goto	l4026
 10122  002C50                     u4070:
 10123  002C50  5043               	movf	___fladd@bexp^0,w,c
 10124  002C52  A4D8               	btfss	status,2,c
 10125  002C54  EF2E  F016         	goto	u4081
 10126  002C58  EF30  F016         	goto	u4080
 10127  002C5C                     u4081:
 10128  002C5C  EF3A  F016         	goto	l4008
 10129  002C60                     u4080:
 10130  002C60  0E00               	movlw	0
 10131  002C62  6E35               	movwf	?___fladd^0,c
 10132  002C64  0E00               	movlw	0
 10133  002C66  6E36               	movwf	(?___fladd+1)^0,c
 10134  002C68  0E00               	movlw	0
 10135  002C6A  6E37               	movwf	(?___fladd+2)^0,c
 10136  002C6C  0E00               	movlw	0
 10137  002C6E  6E38               	movwf	(?___fladd+3)^0,c
 10138  002C70  EF89  F017         	goto	l1024
 10139  002C74                     l4008:
 10140  002C74  5039               	movf	___fladd@a^0,w,c
 10141  002C76  2635               	addwf	___fladd@b^0,f,c
 10142  002C78  503A               	movf	(___fladd@a+1)^0,w,c
 10143  002C7A  2236               	addwfc	(___fladd@b+1)^0,f,c
 10144  002C7C  503B               	movf	(___fladd@a+2)^0,w,c
 10145  002C7E  2237               	addwfc	(___fladd@b+2)^0,f,c
 10146  002C80  503C               	movf	(___fladd@a+3)^0,w,c
 10147  002C82  2238               	addwfc	(___fladd@b+3)^0,f,c
 10148  002C84  A038               	btfss	(___fladd@b+3)^0,0,c
 10149  002C86  EF47  F016         	goto	u4091
 10150  002C8A  EF49  F016         	goto	u4090
 10151  002C8E                     u4091:
 10152  002C8E  EFF5  F016         	goto	l4062
 10153  002C92                     u4090:
 10154  002C92  A044               	btfss	___fladd@grs^0,0,c
 10155  002C94  EF4E  F016         	goto	u4101
 10156  002C98  EF50  F016         	goto	u4100
 10157  002C9C                     u4101:
 10158  002C9C  EF56  F016         	goto	l4016
 10159  002CA0                     u4100:
 10160  002CA0  90D8               	bcf	status,0,c
 10161  002CA2  3044               	rrcf	___fladd@grs^0,w,c
 10162  002CA4  0901               	iorlw	1
 10163  002CA6  6E44               	movwf	___fladd@grs^0,c
 10164  002CA8  EF58  F016         	goto	l4018
 10165  002CAC                     l4016:
 10166  002CAC  90D8               	bcf	status,0,c
 10167  002CAE  3244               	rrcf	___fladd@grs^0,f,c
 10168  002CB0                     l4018:
 10169  002CB0  A035               	btfss	___fladd@b^0,0,c
 10170  002CB2  EF5D  F016         	goto	u4111
 10171  002CB6  EF5F  F016         	goto	u4110
 10172  002CBA                     u4111:
 10173  002CBA  EF60  F016         	goto	l4022
 10174  002CBE                     u4110:
 10175  002CBE  8E44               	bsf	___fladd@grs^0,7,c
 10176  002CC0                     l4022:
 10177  002CC0  3438               	rlcf	(___fladd@b+3)^0,w,c
 10178  002CC2  3238               	rrcf	(___fladd@b+3)^0,f,c
 10179  002CC4  3237               	rrcf	(___fladd@b+2)^0,f,c
 10180  002CC6  3236               	rrcf	(___fladd@b+1)^0,f,c
 10181  002CC8  3235               	rrcf	___fladd@b^0,f,c
 10182  002CCA  2A43               	incf	___fladd@bexp^0,f,c
 10183  002CCC  EFF5  F016         	goto	l4062
 10184  002CD0                     l4026:
 10185  002CD0  5039               	movf	___fladd@a^0,w,c
 10186  002CD2  5C35               	subwf	___fladd@b^0,w,c
 10187  002CD4  503A               	movf	(___fladd@a+1)^0,w,c
 10188  002CD6  5836               	subwfb	(___fladd@b+1)^0,w,c
 10189  002CD8  503B               	movf	(___fladd@a+2)^0,w,c
 10190  002CDA  5837               	subwfb	(___fladd@b+2)^0,w,c
 10191  002CDC  5038               	movf	(___fladd@b+3)^0,w,c
 10192  002CDE  0A80               	xorlw	128
 10193  002CE0  6E3D               	movwf	??___fladd^0,c
 10194  002CE2  503C               	movf	(___fladd@a+3)^0,w,c
 10195  002CE4  0A80               	xorlw	128
 10196  002CE6  583D               	subwfb	??___fladd^0,w,c
 10197  002CE8  B0D8               	btfsc	status,0,c
 10198  002CEA  EF79  F016         	goto	u4121
 10199  002CEE  EF7B  F016         	goto	u4120
 10200  002CF2                     u4121:
 10201  002CF2  EFA6  F016         	goto	l4036
 10202  002CF6                     u4120:
 10203  002CF6  5035               	movf	___fladd@b^0,w,c
 10204  002CF8  5C39               	subwf	___fladd@a^0,w,c
 10205  002CFA  6E3D               	movwf	??___fladd^0,c
 10206  002CFC  5036               	movf	(___fladd@b+1)^0,w,c
 10207  002CFE  583A               	subwfb	(___fladd@a+1)^0,w,c
 10208  002D00  6E3E               	movwf	(??___fladd+1)^0,c
 10209  002D02  5037               	movf	(___fladd@b+2)^0,w,c
 10210  002D04  583B               	subwfb	(___fladd@a+2)^0,w,c
 10211  002D06  6E3F               	movwf	(??___fladd+2)^0,c
 10212  002D08  5038               	movf	(___fladd@b+3)^0,w,c
 10213  002D0A  583C               	subwfb	(___fladd@a+3)^0,w,c
 10214  002D0C  6E40               	movwf	(??___fladd+3)^0,c
 10215  002D0E  0EFF               	movlw	255
 10216  002D10  243D               	addwf	??___fladd^0,w,c
 10217  002D12  6E35               	movwf	___fladd@b^0,c
 10218  002D14  0EFF               	movlw	255
 10219  002D16  203E               	addwfc	(??___fladd+1)^0,w,c
 10220  002D18  6E36               	movwf	(___fladd@b+1)^0,c
 10221  002D1A  0EFF               	movlw	255
 10222  002D1C  203F               	addwfc	(??___fladd+2)^0,w,c
 10223  002D1E  6E37               	movwf	(___fladd@b+2)^0,c
 10224  002D20  0EFF               	movlw	255
 10225  002D22  2040               	addwfc	(??___fladd+3)^0,w,c
 10226  002D24  6E38               	movwf	(___fladd@b+3)^0,c
 10227  002D26  0E80               	movlw	128
 10228  002D28  1A41               	xorwf	___fladd@signs^0,f,c
 10229  002D2A  6C44               	negf	___fladd@grs^0,c
 10230  002D2C  5044               	movf	___fladd@grs^0,w,c
 10231  002D2E  A4D8               	btfss	status,2,c
 10232  002D30  EF9C  F016         	goto	u4131
 10233  002D34  EF9E  F016         	goto	u4130
 10234  002D38                     u4131:
 10235  002D38  EFAE  F016         	goto	l1032
 10236  002D3C                     u4130:
 10237  002D3C  0E01               	movlw	1
 10238  002D3E  2635               	addwf	___fladd@b^0,f,c
 10239  002D40  0E00               	movlw	0
 10240  002D42  2236               	addwfc	(___fladd@b+1)^0,f,c
 10241  002D44  2237               	addwfc	(___fladd@b+2)^0,f,c
 10242  002D46  2238               	addwfc	(___fladd@b+3)^0,f,c
 10243  002D48  EFAE  F016         	goto	l1032
 10244  002D4C                     l4036:
 10245  002D4C  5039               	movf	___fladd@a^0,w,c
 10246  002D4E  5E35               	subwf	___fladd@b^0,f,c
 10247  002D50  503A               	movf	(___fladd@a+1)^0,w,c
 10248  002D52  5A36               	subwfb	(___fladd@b+1)^0,f,c
 10249  002D54  503B               	movf	(___fladd@a+2)^0,w,c
 10250  002D56  5A37               	subwfb	(___fladd@b+2)^0,f,c
 10251  002D58  503C               	movf	(___fladd@a+3)^0,w,c
 10252  002D5A  5A38               	subwfb	(___fladd@b+3)^0,f,c
 10253  002D5C                     l1032:
 10254  002D5C  5035               	movf	___fladd@b^0,w,c
 10255  002D5E  1036               	iorwf	(___fladd@b+1)^0,w,c
 10256  002D60  1037               	iorwf	(___fladd@b+2)^0,w,c
 10257  002D62  1038               	iorwf	(___fladd@b+3)^0,w,c
 10258  002D64  A4D8               	btfss	status,2,c
 10259  002D66  EFB7  F016         	goto	u4141
 10260  002D6A  EFB9  F016         	goto	u4140
 10261  002D6E                     u4141:
 10262  002D6E  EFEE  F016         	goto	l4060
 10263  002D72                     u4140:
 10264  002D72  5044               	movf	___fladd@grs^0,w,c
 10265  002D74  A4D8               	btfss	status,2,c
 10266  002D76  EFBF  F016         	goto	u4151
 10267  002D7A  EFC1  F016         	goto	u4150
 10268  002D7E                     u4151:
 10269  002D7E  EFEE  F016         	goto	l4060
 10270  002D82                     u4150:
 10271  002D82  0E00               	movlw	0
 10272  002D84  6E35               	movwf	?___fladd^0,c
 10273  002D86  0E00               	movlw	0
 10274  002D88  6E36               	movwf	(?___fladd+1)^0,c
 10275  002D8A  0E00               	movlw	0
 10276  002D8C  6E37               	movwf	(?___fladd+2)^0,c
 10277  002D8E  0E00               	movlw	0
 10278  002D90  6E38               	movwf	(?___fladd+3)^0,c
 10279  002D92  EF89  F017         	goto	l1024
 10280  002D96                     l4044:
 10281  002D96  90D8               	bcf	status,0,c
 10282  002D98  3635               	rlcf	___fladd@b^0,f,c
 10283  002D9A  3636               	rlcf	(___fladd@b+1)^0,f,c
 10284  002D9C  3637               	rlcf	(___fladd@b+2)^0,f,c
 10285  002D9E  3638               	rlcf	(___fladd@b+3)^0,f,c
 10286  002DA0  AE44               	btfss	___fladd@grs^0,7,c
 10287  002DA2  EFD5  F016         	goto	u4161
 10288  002DA6  EFD7  F016         	goto	u4160
 10289  002DAA                     u4161:
 10290  002DAA  EFD8  F016         	goto	l4050
 10291  002DAE                     u4160:
 10292  002DAE  8035               	bsf	___fladd@b^0,0,c
 10293  002DB0                     l4050:
 10294  002DB0  A044               	btfss	___fladd@grs^0,0,c
 10295  002DB2  EFDD  F016         	goto	u4171
 10296  002DB6  EFDF  F016         	goto	u4170
 10297  002DBA                     u4171:
 10298  002DBA  EFE3  F016         	goto	l4054
 10299  002DBE                     u4170:
 10300  002DBE  80D8               	bsf	status,0,c
 10301  002DC0  3644               	rlcf	___fladd@grs^0,f,c
 10302  002DC2  EFE5  F016         	goto	l4056
 10303  002DC6                     l4054:
 10304  002DC6  90D8               	bcf	status,0,c
 10305  002DC8  3644               	rlcf	___fladd@grs^0,f,c
 10306  002DCA                     l4056:
 10307  002DCA  5043               	movf	___fladd@bexp^0,w,c
 10308  002DCC  B4D8               	btfsc	status,2,c
 10309  002DCE  EFEB  F016         	goto	u4181
 10310  002DD2  EFED  F016         	goto	u4180
 10311  002DD6                     u4181:
 10312  002DD6  EFEE  F016         	goto	l4060
 10313  002DDA                     u4180:
 10314  002DDA  0643               	decf	___fladd@bexp^0,f,c
 10315  002DDC                     l4060:
 10316  002DDC  AE37               	btfss	(___fladd@b+2)^0,7,c
 10317  002DDE  EFF3  F016         	goto	u4191
 10318  002DE2  EFF5  F016         	goto	u4190
 10319  002DE6                     u4191:
 10320  002DE6  EFCB  F016         	goto	l4044
 10321  002DEA                     u4190:
 10322  002DEA                     l4062:
 10323  002DEA  0E00               	movlw	0
 10324  002DEC  6E42               	movwf	___fladd@aexp^0,c
 10325  002DEE  AE44               	btfss	___fladd@grs^0,7,c
 10326  002DF0  EFFC  F016         	goto	u4201
 10327  002DF4  EFFE  F016         	goto	u4200
 10328  002DF8                     u4201:
 10329  002DF8  EF16  F017         	goto	l1041
 10330  002DFC                     u4200:
 10331  002DFC  C044  F03D         	movff	___fladd@grs,??___fladd
 10332  002E00  0E7F               	movlw	127
 10333  002E02  163D               	andwf	??___fladd^0,f,c
 10334  002E04  B4D8               	btfsc	status,2,c
 10335  002E06  EF07  F017         	goto	u4211
 10336  002E0A  EF09  F017         	goto	u4210
 10337  002E0E                     u4211:
 10338  002E0E  EF0D  F017         	goto	l1042
 10339  002E12                     u4210:
 10340  002E12                     l4068:
 10341  002E12  0E01               	movlw	1
 10342  002E14  6E42               	movwf	___fladd@aexp^0,c
 10343  002E16  EF16  F017         	goto	l1041
 10344  002E1A                     l1042:
 10345  002E1A  A035               	btfss	___fladd@b^0,0,c
 10346  002E1C  EF12  F017         	goto	u4221
 10347  002E20  EF14  F017         	goto	u4220
 10348  002E24                     u4221:
 10349  002E24  EF16  F017         	goto	l1041
 10350  002E28                     u4220:
 10351  002E28  EF09  F017         	goto	l4068
 10352  002E2C                     l1041:
 10353  002E2C  5042               	movf	___fladd@aexp^0,w,c
 10354  002E2E  B4D8               	btfsc	status,2,c
 10355  002E30  EF1C  F017         	goto	u4231
 10356  002E34  EF1E  F017         	goto	u4230
 10357  002E38                     u4231:
 10358  002E38  EF49  F017         	goto	l4080
 10359  002E3C                     u4230:
 10360  002E3C  0E01               	movlw	1
 10361  002E3E  2635               	addwf	___fladd@b^0,f,c
 10362  002E40  0E00               	movlw	0
 10363  002E42  2236               	addwfc	(___fladd@b+1)^0,f,c
 10364  002E44  2237               	addwfc	(___fladd@b+2)^0,f,c
 10365  002E46  2238               	addwfc	(___fladd@b+3)^0,f,c
 10366  002E48  A038               	btfss	(___fladd@b+3)^0,0,c
 10367  002E4A  EF29  F017         	goto	u4241
 10368  002E4E  EF2B  F017         	goto	u4240
 10369  002E52                     u4241:
 10370  002E52  EF49  F017         	goto	l4080
 10371  002E56                     u4240:
 10372  002E56  C035  F03D         	movff	___fladd@b,??___fladd
 10373  002E5A  C036  F03E         	movff	___fladd@b+1,??___fladd+1
 10374  002E5E  C037  F03F         	movff	___fladd@b+2,??___fladd+2
 10375  002E62  C038  F040         	movff	___fladd@b+3,??___fladd+3
 10376  002E66  3440               	rlcf	(??___fladd+3)^0,w,c
 10377  002E68  3240               	rrcf	(??___fladd+3)^0,f,c
 10378  002E6A  323F               	rrcf	(??___fladd+2)^0,f,c
 10379  002E6C  323E               	rrcf	(??___fladd+1)^0,f,c
 10380  002E6E  323D               	rrcf	??___fladd^0,f,c
 10381  002E70  C03D  F035         	movff	??___fladd,___fladd@b
 10382  002E74  C03E  F036         	movff	??___fladd+1,___fladd@b+1
 10383  002E78  C03F  F037         	movff	??___fladd+2,___fladd@b+2
 10384  002E7C  C040  F038         	movff	??___fladd+3,___fladd@b+3
 10385  002E80  2843               	incf	___fladd@bexp^0,w,c
 10386  002E82  B4D8               	btfsc	status,2,c
 10387  002E84  EF46  F017         	goto	u4251
 10388  002E88  EF48  F017         	goto	u4250
 10389  002E8C                     u4251:
 10390  002E8C  EF49  F017         	goto	l4080
 10391  002E90                     u4250:
 10392  002E90  2A43               	incf	___fladd@bexp^0,f,c
 10393  002E92                     l4080:
 10394  002E92  2843               	incf	___fladd@bexp^0,w,c
 10395  002E94  B4D8               	btfsc	status,2,c
 10396  002E96  EF4F  F017         	goto	u4261
 10397  002E9A  EF51  F017         	goto	u4260
 10398  002E9E                     u4261:
 10399  002E9E  EF59  F017         	goto	l4084
 10400  002EA2                     u4260:
 10401  002EA2  5043               	movf	___fladd@bexp^0,w,c
 10402  002EA4  A4D8               	btfss	status,2,c
 10403  002EA6  EF57  F017         	goto	u4271
 10404  002EAA  EF59  F017         	goto	u4270
 10405  002EAE                     u4271:
 10406  002EAE  EF6B  F017         	goto	l4088
 10407  002EB2                     u4270:
 10408  002EB2                     l4084:
 10409  002EB2  0E00               	movlw	0
 10410  002EB4  6E35               	movwf	___fladd@b^0,c
 10411  002EB6  0E00               	movlw	0
 10412  002EB8  6E36               	movwf	(___fladd@b+1)^0,c
 10413  002EBA  0E00               	movlw	0
 10414  002EBC  6E37               	movwf	(___fladd@b+2)^0,c
 10415  002EBE  0E00               	movlw	0
 10416  002EC0  6E38               	movwf	(___fladd@b+3)^0,c
 10417  002EC2  5043               	movf	___fladd@bexp^0,w,c
 10418  002EC4  A4D8               	btfss	status,2,c
 10419  002EC6  EF67  F017         	goto	u4281
 10420  002ECA  EF69  F017         	goto	u4280
 10421  002ECE                     u4281:
 10422  002ECE  EF6B  F017         	goto	l4088
 10423  002ED2                     u4280:
 10424  002ED2  0E00               	movlw	0
 10425  002ED4  6E41               	movwf	___fladd@signs^0,c
 10426  002ED6                     l4088:
 10427  002ED6  A043               	btfss	___fladd@bexp^0,0,c
 10428  002ED8  EF70  F017         	goto	u4291
 10429  002EDC  EF72  F017         	goto	u4290
 10430  002EE0                     u4291:
 10431  002EE0  EF75  F017         	goto	l4092
 10432  002EE4                     u4290:
 10433  002EE4  8E37               	bsf	(___fladd@b+2)^0,7,c
 10434  002EE6  EF76  F017         	goto	l4094
 10435  002EEA                     l4092:
 10436  002EEA  9E37               	bcf	(___fladd@b+2)^0,7,c
 10437  002EEC                     l4094:
 10438  002EEC  90D8               	bcf	status,0,c
 10439  002EEE  3043               	rrcf	___fladd@bexp^0,w,c
 10440  002EF0  6E38               	movwf	(___fladd@b+3)^0,c
 10441  002EF2  AE41               	btfss	___fladd@signs^0,7,c
 10442  002EF4  EF7E  F017         	goto	u4301
 10443  002EF8  EF80  F017         	goto	u4300
 10444  002EFC                     u4301:
 10445  002EFC  EF81  F017         	goto	l4100
 10446  002F00                     u4300:
 10447  002F00  8E38               	bsf	(___fladd@b+3)^0,7,c
 10448  002F02                     l4100:
 10449  002F02  C035  F035         	movff	___fladd@b,?___fladd
 10450  002F06  C036  F036         	movff	___fladd@b+1,?___fladd+1
 10451  002F0A  C037  F037         	movff	___fladd@b+2,?___fladd+2
 10452  002F0E  C038  F038         	movff	___fladd@b+3,?___fladd+3
 10453  002F12                     l1024:
 10454  002F12  0012               	return		;funcret
 10455  002F14                     __end_of___fladd:
 10456                           	callstack 0
 10457                           
 10458 ;; *************** function ___flneg *****************
 10459 ;; Defined at:
 10460 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
 10461 ;; Parameters:    Size  Location     Type
 10462 ;;  f1              4    0[COMRAM] unsigned char 
 10463 ;; Auto vars:     Size  Location     Type
 10464 ;;		None
 10465 ;; Return value:  Size  Location     Type
 10466 ;;                  4    0[COMRAM] unsigned char 
 10467 ;; Registers used:
 10468 ;;		wreg, status,2, status,0
 10469 ;; Tracked objects:
 10470 ;;		On entry : 0/0
 10471 ;;		On exit  : 0/0
 10472 ;;		Unchanged: 0/0
 10473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10474 ;;      Params:         4       0       0       0       0       0       0
 10475 ;;      Locals:         0       0       0       0       0       0       0
 10476 ;;      Temps:          0       0       0       0       0       0       0
 10477 ;;      Totals:         4       0       0       0       0       0       0
 10478 ;;Total ram usage:        4 bytes
 10479 ;; Hardware stack levels used:    1
 10480 ;; Hardware stack levels required when called:    1
 10481 ;; This function calls:
 10482 ;;		Nothing
 10483 ;; This function is called by:
 10484 ;;		_efgtoa
 10485 ;; This function uses a non-reentrant model
 10486 ;;
 10487                           
 10488                           	psect	text32
 10489  0059EA                     __ptext32:
 10490                           	callstack 0
 10491  0059EA                     ___flneg:
 10492                           	callstack 23
 10493  0059EA  5001               	movf	___flneg@f1^0,w,c
 10494  0059EC  1002               	iorwf	(___flneg@f1+1)^0,w,c
 10495  0059EE  1003               	iorwf	(___flneg@f1+2)^0,w,c
 10496  0059F0  1004               	iorwf	(___flneg@f1+3)^0,w,c
 10497  0059F2  B4D8               	btfsc	status,2,c
 10498  0059F4  EFFE  F02C         	goto	u5101
 10499  0059F8  EF00  F02D         	goto	u5100
 10500  0059FC                     u5101:
 10501  0059FC  EF08  F02D         	goto	l4608
 10502  005A00                     u5100:
 10503  005A00  0E00               	movlw	0
 10504  005A02  1A01               	xorwf	___flneg@f1^0,f,c
 10505  005A04  0E00               	movlw	0
 10506  005A06  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 10507  005A08  0E00               	movlw	0
 10508  005A0A  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 10509  005A0C  0E80               	movlw	128
 10510  005A0E  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 10511  005A10                     l4608:
 10512  005A10  C001  F001         	movff	___flneg@f1,?___flneg
 10513  005A14  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 10514  005A18  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 10515  005A1C  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 10516  005A20  0012               	return		;funcret
 10517  005A22                     __end_of___flneg:
 10518                           	callstack 0
 10519                           
 10520 ;; *************** function ___flmul *****************
 10521 ;; Defined at:
 10522 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
 10523 ;; Parameters:    Size  Location     Type
 10524 ;;  b               4   27[COMRAM] unsigned char 
 10525 ;;  a               4   31[COMRAM] unsigned char 
 10526 ;; Auto vars:     Size  Location     Type
 10527 ;;  prod            4   46[COMRAM] struct .
 10528 ;;  grs             4   40[COMRAM] unsigned long 
 10529 ;;  temp            2   50[COMRAM] struct .
 10530 ;;  bexp            1   45[COMRAM] unsigned char 
 10531 ;;  aexp            1   44[COMRAM] unsigned char 
 10532 ;;  sign            1   39[COMRAM] unsigned char 
 10533 ;; Return value:  Size  Location     Type
 10534 ;;                  4   27[COMRAM] unsigned char 
 10535 ;; Registers used:
 10536 ;;		wreg, status,2, status,0, prodl, prodh
 10537 ;; Tracked objects:
 10538 ;;		On entry : 0/0
 10539 ;;		On exit  : 0/0
 10540 ;;		Unchanged: 0/0
 10541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10542 ;;      Params:         8       0       0       0       0       0       0
 10543 ;;      Locals:        13       0       0       0       0       0       0
 10544 ;;      Temps:          4       0       0       0       0       0       0
 10545 ;;      Totals:        25       0       0       0       0       0       0
 10546 ;;Total ram usage:       25 bytes
 10547 ;; Hardware stack levels used:    1
 10548 ;; Hardware stack levels required when called:    1
 10549 ;; This function calls:
 10550 ;;		Nothing
 10551 ;; This function is called by:
 10552 ;;		_scanAdcConversion
 10553 ;;		_speedControl
 10554 ;;		_efgtoa
 10555 ;; This function uses a non-reentrant model
 10556 ;;
 10557                           
 10558                           	psect	text33
 10559  002F14                     __ptext33:
 10560                           	callstack 0
 10561  002F14                     ___flmul:
 10562                           	callstack 25
 10563  002F14  501F               	movf	(___flmul@b+3)^0,w,c
 10564  002F16  0B80               	andlw	128
 10565  002F18  6E28               	movwf	___flmul@sign^0,c
 10566  002F1A  501F               	movf	(___flmul@b+3)^0,w,c
 10567  002F1C  241F               	addwf	(___flmul@b+3)^0,w,c
 10568  002F1E  6E2E               	movwf	___flmul@bexp^0,c
 10569  002F20  AE1E               	btfss	(___flmul@b+2)^0,7,c
 10570  002F22  EF95  F017         	goto	u4711
 10571  002F26  EF97  F017         	goto	u4710
 10572  002F2A                     u4711:
 10573  002F2A  EF98  F017         	goto	l4356
 10574  002F2E                     u4710:
 10575  002F2E  802E               	bsf	___flmul@bexp^0,0,c
 10576  002F30                     l4356:
 10577  002F30  502E               	movf	___flmul@bexp^0,w,c
 10578  002F32  B4D8               	btfsc	status,2,c
 10579  002F34  EF9E  F017         	goto	u4721
 10580  002F38  EFA0  F017         	goto	u4720
 10581  002F3C                     u4721:
 10582  002F3C  EFB3  F017         	goto	l4364
 10583  002F40                     u4720:
 10584  002F40  282E               	incf	___flmul@bexp^0,w,c
 10585  002F42  A4D8               	btfss	status,2,c
 10586  002F44  EFA6  F017         	goto	u4731
 10587  002F48  EFA8  F017         	goto	u4730
 10588  002F4C                     u4731:
 10589  002F4C  EFB0  F017         	goto	l4362
 10590  002F50                     u4730:
 10591  002F50  0E00               	movlw	0
 10592  002F52  6E1C               	movwf	___flmul@b^0,c
 10593  002F54  0E00               	movlw	0
 10594  002F56  6E1D               	movwf	(___flmul@b+1)^0,c
 10595  002F58  0E00               	movlw	0
 10596  002F5A  6E1E               	movwf	(___flmul@b+2)^0,c
 10597  002F5C  0E00               	movlw	0
 10598  002F5E  6E1F               	movwf	(___flmul@b+3)^0,c
 10599  002F60                     l4362:
 10600  002F60  8E1E               	bsf	(___flmul@b+2)^0,7,c
 10601  002F62  EFBB  F017         	goto	l4366
 10602  002F66                     l4364:
 10603  002F66  0E00               	movlw	0
 10604  002F68  6E1C               	movwf	___flmul@b^0,c
 10605  002F6A  0E00               	movlw	0
 10606  002F6C  6E1D               	movwf	(___flmul@b+1)^0,c
 10607  002F6E  0E00               	movlw	0
 10608  002F70  6E1E               	movwf	(___flmul@b+2)^0,c
 10609  002F72  0E00               	movlw	0
 10610  002F74  6E1F               	movwf	(___flmul@b+3)^0,c
 10611  002F76                     l4366:
 10612  002F76  5023               	movf	(___flmul@a+3)^0,w,c
 10613  002F78  0B80               	andlw	128
 10614  002F7A  1A28               	xorwf	___flmul@sign^0,f,c
 10615  002F7C  5023               	movf	(___flmul@a+3)^0,w,c
 10616  002F7E  2423               	addwf	(___flmul@a+3)^0,w,c
 10617  002F80  6E2D               	movwf	___flmul@aexp^0,c
 10618  002F82  AE22               	btfss	(___flmul@a+2)^0,7,c
 10619  002F84  EFC6  F017         	goto	u4741
 10620  002F88  EFC8  F017         	goto	u4740
 10621  002F8C                     u4741:
 10622  002F8C  EFC9  F017         	goto	l4374
 10623  002F90                     u4740:
 10624  002F90  802D               	bsf	___flmul@aexp^0,0,c
 10625  002F92                     l4374:
 10626  002F92  502D               	movf	___flmul@aexp^0,w,c
 10627  002F94  B4D8               	btfsc	status,2,c
 10628  002F96  EFCF  F017         	goto	u4751
 10629  002F9A  EFD1  F017         	goto	u4750
 10630  002F9E                     u4751:
 10631  002F9E  EFE4  F017         	goto	l4382
 10632  002FA2                     u4750:
 10633  002FA2  282D               	incf	___flmul@aexp^0,w,c
 10634  002FA4  A4D8               	btfss	status,2,c
 10635  002FA6  EFD7  F017         	goto	u4761
 10636  002FAA  EFD9  F017         	goto	u4760
 10637  002FAE                     u4761:
 10638  002FAE  EFE1  F017         	goto	l4380
 10639  002FB2                     u4760:
 10640  002FB2  0E00               	movlw	0
 10641  002FB4  6E20               	movwf	___flmul@a^0,c
 10642  002FB6  0E00               	movlw	0
 10643  002FB8  6E21               	movwf	(___flmul@a+1)^0,c
 10644  002FBA  0E00               	movlw	0
 10645  002FBC  6E22               	movwf	(___flmul@a+2)^0,c
 10646  002FBE  0E00               	movlw	0
 10647  002FC0  6E23               	movwf	(___flmul@a+3)^0,c
 10648  002FC2                     l4380:
 10649  002FC2  8E22               	bsf	(___flmul@a+2)^0,7,c
 10650  002FC4  EFEC  F017         	goto	l1101
 10651  002FC8                     l4382:
 10652  002FC8  0E00               	movlw	0
 10653  002FCA  6E20               	movwf	___flmul@a^0,c
 10654  002FCC  0E00               	movlw	0
 10655  002FCE  6E21               	movwf	(___flmul@a+1)^0,c
 10656  002FD0  0E00               	movlw	0
 10657  002FD2  6E22               	movwf	(___flmul@a+2)^0,c
 10658  002FD4  0E00               	movlw	0
 10659  002FD6  6E23               	movwf	(___flmul@a+3)^0,c
 10660  002FD8                     l1101:
 10661  002FD8  502D               	movf	___flmul@aexp^0,w,c
 10662  002FDA  B4D8               	btfsc	status,2,c
 10663  002FDC  EFF2  F017         	goto	u4771
 10664  002FE0  EFF4  F017         	goto	u4770
 10665  002FE4                     u4771:
 10666  002FE4  EFFC  F017         	goto	l4386
 10667  002FE8                     u4770:
 10668  002FE8  502E               	movf	___flmul@bexp^0,w,c
 10669  002FEA  A4D8               	btfss	status,2,c
 10670  002FEC  EFFA  F017         	goto	u4781
 10671  002FF0  EFFC  F017         	goto	u4780
 10672  002FF4                     u4781:
 10673  002FF4  EF06  F018         	goto	l4390
 10674  002FF8                     u4780:
 10675  002FF8                     l4386:
 10676  002FF8  0E00               	movlw	0
 10677  002FFA  6E1C               	movwf	?___flmul^0,c
 10678  002FFC  0E00               	movlw	0
 10679  002FFE  6E1D               	movwf	(?___flmul+1)^0,c
 10680  003000  0E00               	movlw	0
 10681  003002  6E1E               	movwf	(?___flmul+2)^0,c
 10682  003004  0E00               	movlw	0
 10683  003006  6E1F               	movwf	(?___flmul+3)^0,c
 10684  003008  EF9E  F019         	goto	l1105
 10685  00300C                     l4390:
 10686  00300C  5022               	movf	(___flmul@a+2)^0,w,c
 10687  00300E  021C               	mulwf	___flmul@b^0,c
 10688  003010  CFF3 F033          	movff	prodl,___flmul@temp
 10689  003014  CFF4 F034          	movff	prodh,___flmul@temp+1
 10690  003018  5033               	movf	___flmul@temp^0,w,c
 10691  00301A  6E29               	movwf	___flmul@grs^0,c
 10692  00301C  6A2A               	clrf	(___flmul@grs+1)^0,c
 10693  00301E  6A2B               	clrf	(___flmul@grs+2)^0,c
 10694  003020  6A2C               	clrf	(___flmul@grs+3)^0,c
 10695  003022  5034               	movf	(___flmul@temp+1)^0,w,c
 10696  003024  6E2F               	movwf	___flmul@prod^0,c
 10697  003026  6A30               	clrf	(___flmul@prod+1)^0,c
 10698  003028  6A31               	clrf	(___flmul@prod+2)^0,c
 10699  00302A  6A32               	clrf	(___flmul@prod+3)^0,c
 10700  00302C  5021               	movf	(___flmul@a+1)^0,w,c
 10701  00302E  021D               	mulwf	(___flmul@b+1)^0,c
 10702  003030  CFF3 F033          	movff	prodl,___flmul@temp
 10703  003034  CFF4 F034          	movff	prodh,___flmul@temp+1
 10704  003038  5033               	movf	___flmul@temp^0,w,c
 10705  00303A  2629               	addwf	___flmul@grs^0,f,c
 10706  00303C  0E00               	movlw	0
 10707  00303E  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10708  003040  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10709  003042  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10710  003044  5034               	movf	(___flmul@temp+1)^0,w,c
 10711  003046  262F               	addwf	___flmul@prod^0,f,c
 10712  003048  0E00               	movlw	0
 10713  00304A  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10714  00304C  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10715  00304E  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10716  003050  5020               	movf	___flmul@a^0,w,c
 10717  003052  021E               	mulwf	(___flmul@b+2)^0,c
 10718  003054  CFF3 F033          	movff	prodl,___flmul@temp
 10719  003058  CFF4 F034          	movff	prodh,___flmul@temp+1
 10720  00305C  5033               	movf	___flmul@temp^0,w,c
 10721  00305E  2629               	addwf	___flmul@grs^0,f,c
 10722  003060  0E00               	movlw	0
 10723  003062  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10724  003064  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10725  003066  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10726  003068  5034               	movf	(___flmul@temp+1)^0,w,c
 10727  00306A  262F               	addwf	___flmul@prod^0,f,c
 10728  00306C  0E00               	movlw	0
 10729  00306E  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10730  003070  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10731  003072  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10732  003074  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 10733  003078  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 10734  00307C  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 10735  003080  6A29               	clrf	___flmul@grs^0,c
 10736  003082  5020               	movf	___flmul@a^0,w,c
 10737  003084  021D               	mulwf	(___flmul@b+1)^0,c
 10738  003086  CFF3 F033          	movff	prodl,___flmul@temp
 10739  00308A  CFF4 F034          	movff	prodh,___flmul@temp+1
 10740  00308E  5033               	movf	___flmul@temp^0,w,c
 10741  003090  2629               	addwf	___flmul@grs^0,f,c
 10742  003092  5034               	movf	(___flmul@temp+1)^0,w,c
 10743  003094  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10744  003096  0E00               	movlw	0
 10745  003098  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10746  00309A  0E00               	movlw	0
 10747  00309C  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10748  00309E  5021               	movf	(___flmul@a+1)^0,w,c
 10749  0030A0  021C               	mulwf	___flmul@b^0,c
 10750  0030A2  CFF3 F033          	movff	prodl,___flmul@temp
 10751  0030A6  CFF4 F034          	movff	prodh,___flmul@temp+1
 10752  0030AA  5033               	movf	___flmul@temp^0,w,c
 10753  0030AC  2629               	addwf	___flmul@grs^0,f,c
 10754  0030AE  5034               	movf	(___flmul@temp+1)^0,w,c
 10755  0030B0  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10756  0030B2  0E00               	movlw	0
 10757  0030B4  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10758  0030B6  0E00               	movlw	0
 10759  0030B8  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10760  0030BA  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 10761  0030BE  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 10762  0030C2  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 10763  0030C6  6A29               	clrf	___flmul@grs^0,c
 10764  0030C8  5020               	movf	___flmul@a^0,w,c
 10765  0030CA  021C               	mulwf	___flmul@b^0,c
 10766  0030CC  CFF3 F033          	movff	prodl,___flmul@temp
 10767  0030D0  CFF4 F034          	movff	prodh,___flmul@temp+1
 10768  0030D4  5033               	movf	___flmul@temp^0,w,c
 10769  0030D6  2629               	addwf	___flmul@grs^0,f,c
 10770  0030D8  5034               	movf	(___flmul@temp+1)^0,w,c
 10771  0030DA  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10772  0030DC  0E00               	movlw	0
 10773  0030DE  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10774  0030E0  0E00               	movlw	0
 10775  0030E2  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10776  0030E4  5022               	movf	(___flmul@a+2)^0,w,c
 10777  0030E6  021D               	mulwf	(___flmul@b+1)^0,c
 10778  0030E8  CFF3 F033          	movff	prodl,___flmul@temp
 10779  0030EC  CFF4 F034          	movff	prodh,___flmul@temp+1
 10780  0030F0  5033               	movf	___flmul@temp^0,w,c
 10781  0030F2  262F               	addwf	___flmul@prod^0,f,c
 10782  0030F4  5034               	movf	(___flmul@temp+1)^0,w,c
 10783  0030F6  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10784  0030F8  0E00               	movlw	0
 10785  0030FA  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10786  0030FC  0E00               	movlw	0
 10787  0030FE  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10788  003100  5021               	movf	(___flmul@a+1)^0,w,c
 10789  003102  021E               	mulwf	(___flmul@b+2)^0,c
 10790  003104  CFF3 F033          	movff	prodl,___flmul@temp
 10791  003108  CFF4 F034          	movff	prodh,___flmul@temp+1
 10792  00310C  5033               	movf	___flmul@temp^0,w,c
 10793  00310E  262F               	addwf	___flmul@prod^0,f,c
 10794  003110  5034               	movf	(___flmul@temp+1)^0,w,c
 10795  003112  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10796  003114  0E00               	movlw	0
 10797  003116  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10798  003118  0E00               	movlw	0
 10799  00311A  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10800  00311C  5022               	movf	(___flmul@a+2)^0,w,c
 10801  00311E  021E               	mulwf	(___flmul@b+2)^0,c
 10802  003120  CFF3 F033          	movff	prodl,___flmul@temp
 10803  003124  CFF4 F034          	movff	prodh,___flmul@temp+1
 10804  003128  5033               	movf	___flmul@temp^0,w,c
 10805  00312A  6E24               	movwf	??___flmul^0,c
 10806  00312C  5034               	movf	(___flmul@temp+1)^0,w,c
 10807  00312E  6E25               	movwf	(??___flmul+1)^0,c
 10808  003130  6A26               	clrf	(??___flmul+2)^0,c
 10809  003132  6A27               	clrf	(??___flmul+3)^0,c
 10810  003134  C026  F027         	movff	??___flmul+2,??___flmul+3
 10811  003138  C025  F026         	movff	??___flmul+1,??___flmul+2
 10812  00313C  C024  F025         	movff	??___flmul,??___flmul+1
 10813  003140  6A24               	clrf	??___flmul^0,c
 10814  003142  5024               	movf	??___flmul^0,w,c
 10815  003144  262F               	addwf	___flmul@prod^0,f,c
 10816  003146  5025               	movf	(??___flmul+1)^0,w,c
 10817  003148  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10818  00314A  5026               	movf	(??___flmul+2)^0,w,c
 10819  00314C  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10820  00314E  5027               	movf	(??___flmul+3)^0,w,c
 10821  003150  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10822  003152  C029  F024         	movff	___flmul@grs,??___flmul
 10823  003156  C02A  F025         	movff	___flmul@grs+1,??___flmul+1
 10824  00315A  C02B  F026         	movff	___flmul@grs+2,??___flmul+2
 10825  00315E  C02C  F027         	movff	___flmul@grs+3,??___flmul+3
 10826  003162  0E19               	movlw	25
 10827  003164  EFB9  F018         	goto	u4790
 10828  003168                     u4795:
 10829  003168  90D8               	bcf	status,0,c
 10830  00316A  3227               	rrcf	(??___flmul+3)^0,f,c
 10831  00316C  3226               	rrcf	(??___flmul+2)^0,f,c
 10832  00316E  3225               	rrcf	(??___flmul+1)^0,f,c
 10833  003170  3224               	rrcf	??___flmul^0,f,c
 10834  003172                     u4790:
 10835  003172  2EE8               	decfsz	wreg,f,c
 10836  003174  EFB4  F018         	goto	u4795
 10837  003178  5024               	movf	??___flmul^0,w,c
 10838  00317A  262F               	addwf	___flmul@prod^0,f,c
 10839  00317C  5025               	movf	(??___flmul+1)^0,w,c
 10840  00317E  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10841  003180  5026               	movf	(??___flmul+2)^0,w,c
 10842  003182  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10843  003184  5027               	movf	(??___flmul+3)^0,w,c
 10844  003186  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10845  003188  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 10846  00318C  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 10847  003190  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 10848  003194  6A29               	clrf	___flmul@grs^0,c
 10849  003196  502D               	movf	___flmul@aexp^0,w,c
 10850  003198  C02E  F024         	movff	___flmul@bexp,??___flmul
 10851  00319C  6A25               	clrf	(??___flmul+1)^0,c
 10852  00319E  2624               	addwf	??___flmul^0,f,c
 10853  0031A0  0E00               	movlw	0
 10854  0031A2  2225               	addwfc	(??___flmul+1)^0,f,c
 10855  0031A4  0E82               	movlw	130
 10856  0031A6  2424               	addwf	??___flmul^0,w,c
 10857  0031A8  6E33               	movwf	___flmul@temp^0,c
 10858  0031AA  0EFF               	movlw	255
 10859  0031AC  2025               	addwfc	(??___flmul+1)^0,w,c
 10860  0031AE  6E34               	movwf	(___flmul@temp+1)^0,c
 10861  0031B0  EFEF  F018         	goto	l4438
 10862  0031B4                     l4432:
 10863  0031B4  90D8               	bcf	status,0,c
 10864  0031B6  362F               	rlcf	___flmul@prod^0,f,c
 10865  0031B8  3630               	rlcf	(___flmul@prod+1)^0,f,c
 10866  0031BA  3631               	rlcf	(___flmul@prod+2)^0,f,c
 10867  0031BC  3632               	rlcf	(___flmul@prod+3)^0,f,c
 10868  0031BE  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 10869  0031C0  EFE4  F018         	goto	u4801
 10870  0031C4  EFE6  F018         	goto	u4800
 10871  0031C8                     u4801:
 10872  0031C8  EFE7  F018         	goto	l1108
 10873  0031CC                     u4800:
 10874  0031CC  802F               	bsf	___flmul@prod^0,0,c
 10875  0031CE                     l1108:
 10876  0031CE  90D8               	bcf	status,0,c
 10877  0031D0  3629               	rlcf	___flmul@grs^0,f,c
 10878  0031D2  362A               	rlcf	(___flmul@grs+1)^0,f,c
 10879  0031D4  362B               	rlcf	(___flmul@grs+2)^0,f,c
 10880  0031D6  362C               	rlcf	(___flmul@grs+3)^0,f,c
 10881  0031D8  0633               	decf	___flmul@temp^0,f,c
 10882  0031DA  A0D8               	btfss	status,0,c
 10883  0031DC  0634               	decf	(___flmul@temp+1)^0,f,c
 10884  0031DE                     l4438:
 10885  0031DE  AE31               	btfss	(___flmul@prod+2)^0,7,c
 10886  0031E0  EFF4  F018         	goto	u4811
 10887  0031E4  EFF6  F018         	goto	u4810
 10888  0031E8                     u4811:
 10889  0031E8  EFDA  F018         	goto	l4432
 10890  0031EC                     u4810:
 10891  0031EC  0E00               	movlw	0
 10892  0031EE  6E2D               	movwf	___flmul@aexp^0,c
 10893  0031F0  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 10894  0031F2  EFFD  F018         	goto	u4821
 10895  0031F6  EFFF  F018         	goto	u4820
 10896  0031FA                     u4821:
 10897  0031FA  EF23  F019         	goto	l1110
 10898  0031FE                     u4820:
 10899  0031FE  0EFF               	movlw	255
 10900  003200  1429               	andwf	___flmul@grs^0,w,c
 10901  003202  6E24               	movwf	??___flmul^0,c
 10902  003204  0EFF               	movlw	255
 10903  003206  142A               	andwf	(___flmul@grs+1)^0,w,c
 10904  003208  6E25               	movwf	(??___flmul+1)^0,c
 10905  00320A  0EFF               	movlw	255
 10906  00320C  142B               	andwf	(___flmul@grs+2)^0,w,c
 10907  00320E  6E26               	movwf	(??___flmul+2)^0,c
 10908  003210  0E7F               	movlw	127
 10909  003212  142C               	andwf	(___flmul@grs+3)^0,w,c
 10910  003214  6E27               	movwf	(??___flmul+3)^0,c
 10911  003216  5024               	movf	??___flmul^0,w,c
 10912  003218  1025               	iorwf	(??___flmul+1)^0,w,c
 10913  00321A  1026               	iorwf	(??___flmul+2)^0,w,c
 10914  00321C  1027               	iorwf	(??___flmul+3)^0,w,c
 10915  00321E  B4D8               	btfsc	status,2,c
 10916  003220  EF14  F019         	goto	u4831
 10917  003224  EF16  F019         	goto	u4830
 10918  003228                     u4831:
 10919  003228  EF1A  F019         	goto	l1111
 10920  00322C                     u4830:
 10921  00322C                     l4446:
 10922  00322C  0E01               	movlw	1
 10923  00322E  6E2D               	movwf	___flmul@aexp^0,c
 10924  003230  EF23  F019         	goto	l1110
 10925  003234                     l1111:
 10926  003234  A02F               	btfss	___flmul@prod^0,0,c
 10927  003236  EF1F  F019         	goto	u4841
 10928  00323A  EF21  F019         	goto	u4840
 10929  00323E                     u4841:
 10930  00323E  EF23  F019         	goto	l1110
 10931  003242                     u4840:
 10932  003242  EF16  F019         	goto	l4446
 10933  003246                     l1110:
 10934  003246  502D               	movf	___flmul@aexp^0,w,c
 10935  003248  B4D8               	btfsc	status,2,c
 10936  00324A  EF29  F019         	goto	u4851
 10937  00324E  EF2B  F019         	goto	u4850
 10938  003252                     u4851:
 10939  003252  EF4F  F019         	goto	l4458
 10940  003256                     u4850:
 10941  003256  0E01               	movlw	1
 10942  003258  262F               	addwf	___flmul@prod^0,f,c
 10943  00325A  0E00               	movlw	0
 10944  00325C  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10945  00325E  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10946  003260  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10947  003262  A032               	btfss	(___flmul@prod+3)^0,0,c
 10948  003264  EF36  F019         	goto	u4861
 10949  003268  EF38  F019         	goto	u4860
 10950  00326C                     u4861:
 10951  00326C  EF4F  F019         	goto	l4458
 10952  003270                     u4860:
 10953  003270  C02F  F024         	movff	___flmul@prod,??___flmul
 10954  003274  C030  F025         	movff	___flmul@prod+1,??___flmul+1
 10955  003278  C031  F026         	movff	___flmul@prod+2,??___flmul+2
 10956  00327C  C032  F027         	movff	___flmul@prod+3,??___flmul+3
 10957  003280  3427               	rlcf	(??___flmul+3)^0,w,c
 10958  003282  3227               	rrcf	(??___flmul+3)^0,f,c
 10959  003284  3226               	rrcf	(??___flmul+2)^0,f,c
 10960  003286  3225               	rrcf	(??___flmul+1)^0,f,c
 10961  003288  3224               	rrcf	??___flmul^0,f,c
 10962  00328A  C024  F02F         	movff	??___flmul,___flmul@prod
 10963  00328E  C025  F030         	movff	??___flmul+1,___flmul@prod+1
 10964  003292  C026  F031         	movff	??___flmul+2,___flmul@prod+2
 10965  003296  C027  F032         	movff	??___flmul+3,___flmul@prod+3
 10966  00329A  4A33               	infsnz	___flmul@temp^0,f,c
 10967  00329C  2A34               	incf	(___flmul@temp+1)^0,f,c
 10968  00329E                     l4458:
 10969  00329E  BE34               	btfsc	(___flmul@temp+1)^0,7,c
 10970  0032A0  EF5A  F019         	goto	u4871
 10971  0032A4  5034               	movf	(___flmul@temp+1)^0,w,c
 10972  0032A6  E108               	bnz	u4870
 10973  0032A8  2833               	incf	___flmul@temp^0,w,c
 10974  0032AA  A0D8               	btfss	status,0,c
 10975  0032AC  EF5A  F019         	goto	u4871
 10976  0032B0  EF5C  F019         	goto	u4870
 10977  0032B4                     u4871:
 10978  0032B4  EF66  F019         	goto	l4462
 10979  0032B8                     u4870:
 10980  0032B8  0E00               	movlw	0
 10981  0032BA  6E2F               	movwf	___flmul@prod^0,c
 10982  0032BC  0E00               	movlw	0
 10983  0032BE  6E30               	movwf	(___flmul@prod+1)^0,c
 10984  0032C0  0E80               	movlw	128
 10985  0032C2  6E31               	movwf	(___flmul@prod+2)^0,c
 10986  0032C4  0E7F               	movlw	127
 10987  0032C6  6E32               	movwf	(___flmul@prod+3)^0,c
 10988  0032C8  EF94  F019         	goto	l4474
 10989  0032CC                     l4462:
 10990  0032CC  BE34               	btfsc	(___flmul@temp+1)^0,7,c
 10991  0032CE  EF73  F019         	goto	u4880
 10992  0032D2  5034               	movf	(___flmul@temp+1)^0,w,c
 10993  0032D4  E106               	bnz	u4881
 10994  0032D6  0433               	decf	___flmul@temp^0,w,c
 10995  0032D8  B0D8               	btfsc	status,0,c
 10996  0032DA  EF71  F019         	goto	u4881
 10997  0032DE  EF73  F019         	goto	u4880
 10998  0032E2                     u4881:
 10999  0032E2  EF7F  F019         	goto	l1118
 11000  0032E6                     u4880:
 11001  0032E6  0E00               	movlw	0
 11002  0032E8  6E2F               	movwf	___flmul@prod^0,c
 11003  0032EA  0E00               	movlw	0
 11004  0032EC  6E30               	movwf	(___flmul@prod+1)^0,c
 11005  0032EE  0E00               	movlw	0
 11006  0032F0  6E31               	movwf	(___flmul@prod+2)^0,c
 11007  0032F2  0E00               	movlw	0
 11008  0032F4  6E32               	movwf	(___flmul@prod+3)^0,c
 11009  0032F6  0E00               	movlw	0
 11010  0032F8  6E28               	movwf	___flmul@sign^0,c
 11011  0032FA  EF94  F019         	goto	l4474
 11012  0032FE                     l1118:
 11013  0032FE  C033  F02E         	movff	___flmul@temp,___flmul@bexp
 11014  003302  0EFF               	movlw	255
 11015  003304  162F               	andwf	___flmul@prod^0,f,c
 11016  003306  0EFF               	movlw	255
 11017  003308  1630               	andwf	(___flmul@prod+1)^0,f,c
 11018  00330A  0E7F               	movlw	127
 11019  00330C  1631               	andwf	(___flmul@prod+2)^0,f,c
 11020  00330E  0E00               	movlw	0
 11021  003310  1632               	andwf	(___flmul@prod+3)^0,f,c
 11022  003312  A02E               	btfss	___flmul@bexp^0,0,c
 11023  003314  EF8E  F019         	goto	u4891
 11024  003318  EF90  F019         	goto	u4890
 11025  00331C                     u4891:
 11026  00331C  EF91  F019         	goto	l4472
 11027  003320                     u4890:
 11028  003320  8E31               	bsf	(___flmul@prod+2)^0,7,c
 11029  003322                     l4472:
 11030  003322  90D8               	bcf	status,0,c
 11031  003324  302E               	rrcf	___flmul@bexp^0,w,c
 11032  003326  6E32               	movwf	(___flmul@prod+3)^0,c
 11033  003328                     l4474:
 11034  003328  5028               	movf	___flmul@sign^0,w,c
 11035  00332A  1232               	iorwf	(___flmul@prod+3)^0,f,c
 11036  00332C  C02F  F01C         	movff	___flmul@prod,?___flmul
 11037  003330  C030  F01D         	movff	___flmul@prod+1,?___flmul+1
 11038  003334  C031  F01E         	movff	___flmul@prod+2,?___flmul+2
 11039  003338  C032  F01F         	movff	___flmul@prod+3,?___flmul+3
 11040  00333C                     l1105:
 11041  00333C  0012               	return		;funcret
 11042  00333E                     __end_of___flmul:
 11043                           	callstack 0
 11044                           
 11045 ;; *************** function ___flge *****************
 11046 ;; Defined at:
 11047 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
 11048 ;; Parameters:    Size  Location     Type
 11049 ;;  ff1             4   52[COMRAM] unsigned char 
 11050 ;;  ff2             4   56[COMRAM] unsigned char 
 11051 ;; Auto vars:     Size  Location     Type
 11052 ;;		None
 11053 ;; Return value:  Size  Location     Type
 11054 ;;		None               void
 11055 ;; Registers used:
 11056 ;;		wreg, status,2, status,0
 11057 ;; Tracked objects:
 11058 ;;		On entry : 0/0
 11059 ;;		On exit  : 0/0
 11060 ;;		Unchanged: 0/0
 11061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11062 ;;      Params:         8       0       0       0       0       0       0
 11063 ;;      Locals:         0       0       0       0       0       0       0
 11064 ;;      Temps:          4       0       0       0       0       0       0
 11065 ;;      Totals:        12       0       0       0       0       0       0
 11066 ;;Total ram usage:       12 bytes
 11067 ;; Hardware stack levels used:    1
 11068 ;; Hardware stack levels required when called:    1
 11069 ;; This function calls:
 11070 ;;		Nothing
 11071 ;; This function is called by:
 11072 ;;		_stateMachine
 11073 ;;		_efgtoa
 11074 ;; This function uses a non-reentrant model
 11075 ;;
 11076                           
 11077                           	psect	text34
 11078  004A52                     __ptext34:
 11079                           	callstack 0
 11080  004A52                     ___flge:
 11081                           	callstack 23
 11082  004A52  0E00               	movlw	0
 11083  004A54  1435               	andwf	___flge@ff1^0,w,c
 11084  004A56  6E3D               	movwf	??___flge^0,c
 11085  004A58  0E00               	movlw	0
 11086  004A5A  1436               	andwf	(___flge@ff1+1)^0,w,c
 11087  004A5C  6E3E               	movwf	(??___flge+1)^0,c
 11088  004A5E  0E80               	movlw	128
 11089  004A60  1437               	andwf	(___flge@ff1+2)^0,w,c
 11090  004A62  6E3F               	movwf	(??___flge+2)^0,c
 11091  004A64  0E7F               	movlw	127
 11092  004A66  1438               	andwf	(___flge@ff1+3)^0,w,c
 11093  004A68  6E40               	movwf	(??___flge+3)^0,c
 11094  004A6A  503D               	movf	??___flge^0,w,c
 11095  004A6C  103E               	iorwf	(??___flge+1)^0,w,c
 11096  004A6E  103F               	iorwf	(??___flge+2)^0,w,c
 11097  004A70  1040               	iorwf	(??___flge+3)^0,w,c
 11098  004A72  A4D8               	btfss	status,2,c
 11099  004A74  EF3E  F025         	goto	u5051
 11100  004A78  EF40  F025         	goto	u5050
 11101  004A7C                     u5051:
 11102  004A7C  EF48  F025         	goto	l4586
 11103  004A80                     u5050:
 11104  004A80  0E00               	movlw	0
 11105  004A82  6E35               	movwf	___flge@ff1^0,c
 11106  004A84  0E00               	movlw	0
 11107  004A86  6E36               	movwf	(___flge@ff1+1)^0,c
 11108  004A88  0E00               	movlw	0
 11109  004A8A  6E37               	movwf	(___flge@ff1+2)^0,c
 11110  004A8C  0E00               	movlw	0
 11111  004A8E  6E38               	movwf	(___flge@ff1+3)^0,c
 11112  004A90                     l4586:
 11113  004A90  0E00               	movlw	0
 11114  004A92  1439               	andwf	___flge@ff2^0,w,c
 11115  004A94  6E3D               	movwf	??___flge^0,c
 11116  004A96  0E00               	movlw	0
 11117  004A98  143A               	andwf	(___flge@ff2+1)^0,w,c
 11118  004A9A  6E3E               	movwf	(??___flge+1)^0,c
 11119  004A9C  0E80               	movlw	128
 11120  004A9E  143B               	andwf	(___flge@ff2+2)^0,w,c
 11121  004AA0  6E3F               	movwf	(??___flge+2)^0,c
 11122  004AA2  0E7F               	movlw	127
 11123  004AA4  143C               	andwf	(___flge@ff2+3)^0,w,c
 11124  004AA6  6E40               	movwf	(??___flge+3)^0,c
 11125  004AA8  503D               	movf	??___flge^0,w,c
 11126  004AAA  103E               	iorwf	(??___flge+1)^0,w,c
 11127  004AAC  103F               	iorwf	(??___flge+2)^0,w,c
 11128  004AAE  1040               	iorwf	(??___flge+3)^0,w,c
 11129  004AB0  A4D8               	btfss	status,2,c
 11130  004AB2  EF5D  F025         	goto	u5061
 11131  004AB6  EF5F  F025         	goto	u5060
 11132  004ABA                     u5061:
 11133  004ABA  EF67  F025         	goto	l4590
 11134  004ABE                     u5060:
 11135  004ABE  0E00               	movlw	0
 11136  004AC0  6E39               	movwf	___flge@ff2^0,c
 11137  004AC2  0E00               	movlw	0
 11138  004AC4  6E3A               	movwf	(___flge@ff2+1)^0,c
 11139  004AC6  0E00               	movlw	0
 11140  004AC8  6E3B               	movwf	(___flge@ff2+2)^0,c
 11141  004ACA  0E00               	movlw	0
 11142  004ACC  6E3C               	movwf	(___flge@ff2+3)^0,c
 11143  004ACE                     l4590:
 11144  004ACE  AE38               	btfss	(___flge@ff1+3)^0,7,c
 11145  004AD0  EF6C  F025         	goto	u5071
 11146  004AD4  EF6E  F025         	goto	u5070
 11147  004AD8                     u5071:
 11148  004AD8  EF77  F025         	goto	l4594
 11149  004ADC                     u5070:
 11150  004ADC  6C35               	negf	___flge@ff1^0,c
 11151  004ADE  1E36               	comf	(___flge@ff1+1)^0,f,c
 11152  004AE0  B0D8               	btfsc	status,0,c
 11153  004AE2  2A36               	incf	(___flge@ff1+1)^0,f,c
 11154  004AE4  1E37               	comf	(___flge@ff1+2)^0,f,c
 11155  004AE6  B0D8               	btfsc	status,0,c
 11156  004AE8  2A37               	incf	(___flge@ff1+2)^0,f,c
 11157  004AEA  0E80               	movlw	128
 11158  004AEC  5638               	subfwb	(___flge@ff1+3)^0,f,c
 11159  004AEE                     l4594:
 11160  004AEE  AE3C               	btfss	(___flge@ff2+3)^0,7,c
 11161  004AF0  EF7C  F025         	goto	u5081
 11162  004AF4  EF7E  F025         	goto	u5080
 11163  004AF8                     u5081:
 11164  004AF8  EF87  F025         	goto	l752
 11165  004AFC                     u5080:
 11166  004AFC  6C39               	negf	___flge@ff2^0,c
 11167  004AFE  1E3A               	comf	(___flge@ff2+1)^0,f,c
 11168  004B00  B0D8               	btfsc	status,0,c
 11169  004B02  2A3A               	incf	(___flge@ff2+1)^0,f,c
 11170  004B04  1E3B               	comf	(___flge@ff2+2)^0,f,c
 11171  004B06  B0D8               	btfsc	status,0,c
 11172  004B08  2A3B               	incf	(___flge@ff2+2)^0,f,c
 11173  004B0A  0E80               	movlw	128
 11174  004B0C  563C               	subfwb	(___flge@ff2+3)^0,f,c
 11175  004B0E                     l752:
 11176  004B0E  0E00               	movlw	0
 11177  004B10  1A35               	xorwf	___flge@ff1^0,f,c
 11178  004B12  0E00               	movlw	0
 11179  004B14  1A36               	xorwf	(___flge@ff1+1)^0,f,c
 11180  004B16  0E00               	movlw	0
 11181  004B18  1A37               	xorwf	(___flge@ff1+2)^0,f,c
 11182  004B1A  0E80               	movlw	128
 11183  004B1C  1A38               	xorwf	(___flge@ff1+3)^0,f,c
 11184  004B1E  0E00               	movlw	0
 11185  004B20  1A39               	xorwf	___flge@ff2^0,f,c
 11186  004B22  0E00               	movlw	0
 11187  004B24  1A3A               	xorwf	(___flge@ff2+1)^0,f,c
 11188  004B26  0E00               	movlw	0
 11189  004B28  1A3B               	xorwf	(___flge@ff2+2)^0,f,c
 11190  004B2A  0E80               	movlw	128
 11191  004B2C  1A3C               	xorwf	(___flge@ff2+3)^0,f,c
 11192  004B2E  5039               	movf	___flge@ff2^0,w,c
 11193  004B30  5C35               	subwf	___flge@ff1^0,w,c
 11194  004B32  503A               	movf	(___flge@ff2+1)^0,w,c
 11195  004B34  5836               	subwfb	(___flge@ff1+1)^0,w,c
 11196  004B36  503B               	movf	(___flge@ff2+2)^0,w,c
 11197  004B38  5837               	subwfb	(___flge@ff1+2)^0,w,c
 11198  004B3A  503C               	movf	(___flge@ff2+3)^0,w,c
 11199  004B3C  5838               	subwfb	(___flge@ff1+3)^0,w,c
 11200  004B3E  B0D8               	btfsc	status,0,c
 11201  004B40  EFA4  F025         	goto	u5091
 11202  004B44  EFA6  F025         	goto	u5090
 11203  004B48                     u5091:
 11204  004B48  EFA9  F025         	goto	l4600
 11205  004B4C                     u5090:
 11206  004B4C  90D8               	bcf	status,0,c
 11207  004B4E  EFAA  F025         	goto	l757
 11208  004B52                     l4600:
 11209  004B52  80D8               	bsf	status,0,c
 11210  004B54                     l757:
 11211  004B54  0012               	return		;funcret
 11212  004B56                     __end_of___flge:
 11213                           	callstack 0
 11214                           
 11215 ;; *************** function ___fleq *****************
 11216 ;; Defined at:
 11217 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fleq.c"
 11218 ;; Parameters:    Size  Location     Type
 11219 ;;  ff1             4    0[COMRAM] unsigned char 
 11220 ;;  ff2             4    4[COMRAM] unsigned char 
 11221 ;; Auto vars:     Size  Location     Type
 11222 ;;		None
 11223 ;; Return value:  Size  Location     Type
 11224 ;;		None               void
 11225 ;; Registers used:
 11226 ;;		wreg, status,2, status,0
 11227 ;; Tracked objects:
 11228 ;;		On entry : 0/0
 11229 ;;		On exit  : 0/0
 11230 ;;		Unchanged: 0/0
 11231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11232 ;;      Params:         8       0       0       0       0       0       0
 11233 ;;      Locals:         0       0       0       0       0       0       0
 11234 ;;      Temps:          4       0       0       0       0       0       0
 11235 ;;      Totals:        12       0       0       0       0       0       0
 11236 ;;Total ram usage:       12 bytes
 11237 ;; Hardware stack levels used:    1
 11238 ;; Hardware stack levels required when called:    1
 11239 ;; This function calls:
 11240 ;;		Nothing
 11241 ;; This function is called by:
 11242 ;;		_efgtoa
 11243 ;; This function uses a non-reentrant model
 11244 ;;
 11245                           
 11246                           	psect	text35
 11247  005124                     __ptext35:
 11248                           	callstack 0
 11249  005124                     ___fleq:
 11250                           	callstack 23
 11251  005124  0E00               	movlw	0
 11252  005126  1401               	andwf	___fleq@ff1^0,w,c
 11253  005128  6E09               	movwf	??___fleq^0,c
 11254  00512A  0E00               	movlw	0
 11255  00512C  1402               	andwf	(___fleq@ff1+1)^0,w,c
 11256  00512E  6E0A               	movwf	(??___fleq+1)^0,c
 11257  005130  0E80               	movlw	128
 11258  005132  1403               	andwf	(___fleq@ff1+2)^0,w,c
 11259  005134  6E0B               	movwf	(??___fleq+2)^0,c
 11260  005136  0E7F               	movlw	127
 11261  005138  1404               	andwf	(___fleq@ff1+3)^0,w,c
 11262  00513A  6E0C               	movwf	(??___fleq+3)^0,c
 11263  00513C  5009               	movf	??___fleq^0,w,c
 11264  00513E  100A               	iorwf	(??___fleq+1)^0,w,c
 11265  005140  100B               	iorwf	(??___fleq+2)^0,w,c
 11266  005142  100C               	iorwf	(??___fleq+3)^0,w,c
 11267  005144  A4D8               	btfss	status,2,c
 11268  005146  EFA7  F028         	goto	u5021
 11269  00514A  EFA9  F028         	goto	u5020
 11270  00514E                     u5021:
 11271  00514E  EFB1  F028         	goto	l4570
 11272  005152                     u5020:
 11273  005152  0E00               	movlw	0
 11274  005154  6E01               	movwf	___fleq@ff1^0,c
 11275  005156  0E00               	movlw	0
 11276  005158  6E02               	movwf	(___fleq@ff1+1)^0,c
 11277  00515A  0E00               	movlw	0
 11278  00515C  6E03               	movwf	(___fleq@ff1+2)^0,c
 11279  00515E  0E00               	movlw	0
 11280  005160  6E04               	movwf	(___fleq@ff1+3)^0,c
 11281  005162                     l4570:
 11282  005162  0E00               	movlw	0
 11283  005164  1405               	andwf	___fleq@ff2^0,w,c
 11284  005166  6E09               	movwf	??___fleq^0,c
 11285  005168  0E00               	movlw	0
 11286  00516A  1406               	andwf	(___fleq@ff2+1)^0,w,c
 11287  00516C  6E0A               	movwf	(??___fleq+1)^0,c
 11288  00516E  0E80               	movlw	128
 11289  005170  1407               	andwf	(___fleq@ff2+2)^0,w,c
 11290  005172  6E0B               	movwf	(??___fleq+2)^0,c
 11291  005174  0E7F               	movlw	127
 11292  005176  1408               	andwf	(___fleq@ff2+3)^0,w,c
 11293  005178  6E0C               	movwf	(??___fleq+3)^0,c
 11294  00517A  5009               	movf	??___fleq^0,w,c
 11295  00517C  100A               	iorwf	(??___fleq+1)^0,w,c
 11296  00517E  100B               	iorwf	(??___fleq+2)^0,w,c
 11297  005180  100C               	iorwf	(??___fleq+3)^0,w,c
 11298  005182  A4D8               	btfss	status,2,c
 11299  005184  EFC6  F028         	goto	u5031
 11300  005188  EFC8  F028         	goto	u5030
 11301  00518C                     u5031:
 11302  00518C  EFD0  F028         	goto	l4574
 11303  005190                     u5030:
 11304  005190  0E00               	movlw	0
 11305  005192  6E05               	movwf	___fleq@ff2^0,c
 11306  005194  0E00               	movlw	0
 11307  005196  6E06               	movwf	(___fleq@ff2+1)^0,c
 11308  005198  0E00               	movlw	0
 11309  00519A  6E07               	movwf	(___fleq@ff2+2)^0,c
 11310  00519C  0E00               	movlw	0
 11311  00519E  6E08               	movwf	(___fleq@ff2+3)^0,c
 11312  0051A0                     l4574:
 11313  0051A0  5005               	movf	___fleq@ff2^0,w,c
 11314  0051A2  1801               	xorwf	___fleq@ff1^0,w,c
 11315  0051A4  E10F               	bnz	u5040
 11316  0051A6  5006               	movf	(___fleq@ff2+1)^0,w,c
 11317  0051A8  1802               	xorwf	(___fleq@ff1+1)^0,w,c
 11318  0051AA  E10C               	bnz	u5040
 11319  0051AC  5007               	movf	(___fleq@ff2+2)^0,w,c
 11320  0051AE  1803               	xorwf	(___fleq@ff1+2)^0,w,c
 11321  0051B0  E109               	bnz	u5040
 11322  0051B2  5008               	movf	(___fleq@ff2+3)^0,w,c
 11323  0051B4  1804               	xorwf	(___fleq@ff1+3)^0,w,c
 11324  0051B6  B4D8               	btfsc	status,2,c
 11325  0051B8  EFE0  F028         	goto	u5041
 11326  0051BC  EFE2  F028         	goto	u5040
 11327  0051C0                     u5041:
 11328  0051C0  EFE5  F028         	goto	l4578
 11329  0051C4                     u5040:
 11330  0051C4  90D8               	bcf	status,0,c
 11331  0051C6  EFE6  F028         	goto	l746
 11332  0051CA                     l4578:
 11333  0051CA  80D8               	bsf	status,0,c
 11334  0051CC                     l746:
 11335  0051CC  0012               	return		;funcret
 11336  0051CE                     __end_of___fleq:
 11337                           	callstack 0
 11338                           
 11339 ;; *************** function ___fldiv *****************
 11340 ;; Defined at:
 11341 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
 11342 ;; Parameters:    Size  Location     Type
 11343 ;;  b               4   52[COMRAM] unsigned char 
 11344 ;;  a               4   56[COMRAM] unsigned char 
 11345 ;; Auto vars:     Size  Location     Type
 11346 ;;  grs             4   71[COMRAM] unsigned long 
 11347 ;;  rem             4   64[COMRAM] unsigned long 
 11348 ;;  new_exp         2   69[COMRAM] short 
 11349 ;;  aexp            1   76[COMRAM] unsigned char 
 11350 ;;  bexp            1   75[COMRAM] unsigned char 
 11351 ;;  sign            1   68[COMRAM] unsigned char 
 11352 ;; Return value:  Size  Location     Type
 11353 ;;                  4   52[COMRAM] unsigned char 
 11354 ;; Registers used:
 11355 ;;		wreg, status,2, status,0
 11356 ;; Tracked objects:
 11357 ;;		On entry : 0/0
 11358 ;;		On exit  : 0/0
 11359 ;;		Unchanged: 0/0
 11360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11361 ;;      Params:         8       0       0       0       0       0       0
 11362 ;;      Locals:        13       0       0       0       0       0       0
 11363 ;;      Temps:          4       0       0       0       0       0       0
 11364 ;;      Totals:        25       0       0       0       0       0       0
 11365 ;;Total ram usage:       25 bytes
 11366 ;; Hardware stack levels used:    1
 11367 ;; Hardware stack levels required when called:    1
 11368 ;; This function calls:
 11369 ;;		Nothing
 11370 ;; This function is called by:
 11371 ;;		_scanAdcConversion
 11372 ;;		_efgtoa
 11373 ;; This function uses a non-reentrant model
 11374 ;;
 11375                           
 11376                           	psect	text36
 11377  00333E                     __ptext36:
 11378                           	callstack 0
 11379  00333E                     ___fldiv:
 11380                           	callstack 25
 11381  00333E  5038               	movf	(___fldiv@b+3)^0,w,c
 11382  003340  0B80               	andlw	128
 11383  003342  6E45               	movwf	___fldiv@sign^0,c
 11384  003344  5038               	movf	(___fldiv@b+3)^0,w,c
 11385  003346  2438               	addwf	(___fldiv@b+3)^0,w,c
 11386  003348  6E4C               	movwf	___fldiv@bexp^0,c
 11387  00334A  AE37               	btfss	(___fldiv@b+2)^0,7,c
 11388  00334C  EFAA  F019         	goto	u4481
 11389  003350  EFAC  F019         	goto	u4480
 11390  003354                     u4481:
 11391  003354  EFAD  F019         	goto	l4218
 11392  003358                     u4480:
 11393  003358  804C               	bsf	___fldiv@bexp^0,0,c
 11394  00335A                     l4218:
 11395  00335A  504C               	movf	___fldiv@bexp^0,w,c
 11396  00335C  B4D8               	btfsc	status,2,c
 11397  00335E  EFB3  F019         	goto	u4491
 11398  003362  EFB5  F019         	goto	u4490
 11399  003366                     u4491:
 11400  003366  EFCA  F019         	goto	l4228
 11401  00336A                     u4490:
 11402  00336A  284C               	incf	___fldiv@bexp^0,w,c
 11403  00336C  A4D8               	btfss	status,2,c
 11404  00336E  EFBB  F019         	goto	u4501
 11405  003372  EFBD  F019         	goto	u4500
 11406  003376                     u4501:
 11407  003376  EFC5  F019         	goto	l4224
 11408  00337A                     u4500:
 11409  00337A  0E00               	movlw	0
 11410  00337C  6E35               	movwf	___fldiv@b^0,c
 11411  00337E  0E00               	movlw	0
 11412  003380  6E36               	movwf	(___fldiv@b+1)^0,c
 11413  003382  0E00               	movlw	0
 11414  003384  6E37               	movwf	(___fldiv@b+2)^0,c
 11415  003386  0E00               	movlw	0
 11416  003388  6E38               	movwf	(___fldiv@b+3)^0,c
 11417  00338A                     l4224:
 11418  00338A  8E37               	bsf	(___fldiv@b+2)^0,7,c
 11419  00338C  0E00               	movlw	0
 11420  00338E  6E38               	movwf	(___fldiv@b+3)^0,c
 11421  003390  EFD2  F019         	goto	l4230
 11422  003394                     l4228:
 11423  003394  0E00               	movlw	0
 11424  003396  6E35               	movwf	___fldiv@b^0,c
 11425  003398  0E00               	movlw	0
 11426  00339A  6E36               	movwf	(___fldiv@b+1)^0,c
 11427  00339C  0E00               	movlw	0
 11428  00339E  6E37               	movwf	(___fldiv@b+2)^0,c
 11429  0033A0  0E00               	movlw	0
 11430  0033A2  6E38               	movwf	(___fldiv@b+3)^0,c
 11431  0033A4                     l4230:
 11432  0033A4  503C               	movf	(___fldiv@a+3)^0,w,c
 11433  0033A6  0B80               	andlw	128
 11434  0033A8  1A45               	xorwf	___fldiv@sign^0,f,c
 11435  0033AA  503C               	movf	(___fldiv@a+3)^0,w,c
 11436  0033AC  243C               	addwf	(___fldiv@a+3)^0,w,c
 11437  0033AE  6E4D               	movwf	___fldiv@aexp^0,c
 11438  0033B0  AE3B               	btfss	(___fldiv@a+2)^0,7,c
 11439  0033B2  EFDD  F019         	goto	u4511
 11440  0033B6  EFDF  F019         	goto	u4510
 11441  0033BA                     u4511:
 11442  0033BA  EFE0  F019         	goto	l4238
 11443  0033BE                     u4510:
 11444  0033BE  804D               	bsf	___fldiv@aexp^0,0,c
 11445  0033C0                     l4238:
 11446  0033C0  504D               	movf	___fldiv@aexp^0,w,c
 11447  0033C2  B4D8               	btfsc	status,2,c
 11448  0033C4  EFE6  F019         	goto	u4521
 11449  0033C8  EFE8  F019         	goto	u4520
 11450  0033CC                     u4521:
 11451  0033CC  EFFD  F019         	goto	l4248
 11452  0033D0                     u4520:
 11453  0033D0  284D               	incf	___fldiv@aexp^0,w,c
 11454  0033D2  A4D8               	btfss	status,2,c
 11455  0033D4  EFEE  F019         	goto	u4531
 11456  0033D8  EFF0  F019         	goto	u4530
 11457  0033DC                     u4531:
 11458  0033DC  EFF8  F019         	goto	l4244
 11459  0033E0                     u4530:
 11460  0033E0  0E00               	movlw	0
 11461  0033E2  6E39               	movwf	___fldiv@a^0,c
 11462  0033E4  0E00               	movlw	0
 11463  0033E6  6E3A               	movwf	(___fldiv@a+1)^0,c
 11464  0033E8  0E00               	movlw	0
 11465  0033EA  6E3B               	movwf	(___fldiv@a+2)^0,c
 11466  0033EC  0E00               	movlw	0
 11467  0033EE  6E3C               	movwf	(___fldiv@a+3)^0,c
 11468  0033F0                     l4244:
 11469  0033F0  8E3B               	bsf	(___fldiv@a+2)^0,7,c
 11470  0033F2  0E00               	movlw	0
 11471  0033F4  6E3C               	movwf	(___fldiv@a+3)^0,c
 11472  0033F6  EF05  F01A         	goto	l4250
 11473  0033FA                     l4248:
 11474  0033FA  0E00               	movlw	0
 11475  0033FC  6E39               	movwf	___fldiv@a^0,c
 11476  0033FE  0E00               	movlw	0
 11477  003400  6E3A               	movwf	(___fldiv@a+1)^0,c
 11478  003402  0E00               	movlw	0
 11479  003404  6E3B               	movwf	(___fldiv@a+2)^0,c
 11480  003406  0E00               	movlw	0
 11481  003408  6E3C               	movwf	(___fldiv@a+3)^0,c
 11482  00340A                     l4250:
 11483  00340A  5039               	movf	___fldiv@a^0,w,c
 11484  00340C  103A               	iorwf	(___fldiv@a+1)^0,w,c
 11485  00340E  103B               	iorwf	(___fldiv@a+2)^0,w,c
 11486  003410  103C               	iorwf	(___fldiv@a+3)^0,w,c
 11487  003412  A4D8               	btfss	status,2,c
 11488  003414  EF0E  F01A         	goto	u4541
 11489  003418  EF10  F01A         	goto	u4540
 11490  00341C                     u4541:
 11491  00341C  EF28  F01A         	goto	l4262
 11492  003420                     u4540:
 11493  003420  0E00               	movlw	0
 11494  003422  6E35               	movwf	___fldiv@b^0,c
 11495  003424  0E00               	movlw	0
 11496  003426  6E36               	movwf	(___fldiv@b+1)^0,c
 11497  003428  0E00               	movlw	0
 11498  00342A  6E37               	movwf	(___fldiv@b+2)^0,c
 11499  00342C  0E00               	movlw	0
 11500  00342E  6E38               	movwf	(___fldiv@b+3)^0,c
 11501  003430  0E80               	movlw	128
 11502  003432  1237               	iorwf	(___fldiv@b+2)^0,f,c
 11503  003434  0E7F               	movlw	127
 11504  003436  1238               	iorwf	(___fldiv@b+3)^0,f,c
 11505  003438                     l4256:
 11506  003438  5045               	movf	___fldiv@sign^0,w,c
 11507  00343A  1238               	iorwf	(___fldiv@b+3)^0,f,c
 11508  00343C  C035  F035         	movff	___fldiv@b,?___fldiv
 11509  003440  C036  F036         	movff	___fldiv@b+1,?___fldiv+1
 11510  003444  C037  F037         	movff	___fldiv@b+2,?___fldiv+2
 11511  003448  C038  F038         	movff	___fldiv@b+3,?___fldiv+3
 11512  00344C  EF6B  F01B         	goto	l1069
 11513  003450                     l4262:
 11514  003450  504C               	movf	___fldiv@bexp^0,w,c
 11515  003452  A4D8               	btfss	status,2,c
 11516  003454  EF2E  F01A         	goto	u4551
 11517  003458  EF30  F01A         	goto	u4550
 11518  00345C                     u4551:
 11519  00345C  EF3A  F01A         	goto	l4270
 11520  003460                     u4550:
 11521  003460  0E00               	movlw	0
 11522  003462  6E35               	movwf	?___fldiv^0,c
 11523  003464  0E00               	movlw	0
 11524  003466  6E36               	movwf	(?___fldiv+1)^0,c
 11525  003468  0E00               	movlw	0
 11526  00346A  6E37               	movwf	(?___fldiv+2)^0,c
 11527  00346C  0E00               	movlw	0
 11528  00346E  6E38               	movwf	(?___fldiv+3)^0,c
 11529  003470  EF6B  F01B         	goto	l1069
 11530  003474                     l4270:
 11531  003474  504D               	movf	___fldiv@aexp^0,w,c
 11532  003476  C04C  F03D         	movff	___fldiv@bexp,??___fldiv
 11533  00347A  6A3E               	clrf	(??___fldiv+1)^0,c
 11534  00347C  5E3D               	subwf	??___fldiv^0,f,c
 11535  00347E  0E00               	movlw	0
 11536  003480  5A3E               	subwfb	(??___fldiv+1)^0,f,c
 11537  003482  0E7F               	movlw	127
 11538  003484  243D               	addwf	??___fldiv^0,w,c
 11539  003486  6E46               	movwf	___fldiv@new_exp^0,c
 11540  003488  0E00               	movlw	0
 11541  00348A  203E               	addwfc	(??___fldiv+1)^0,w,c
 11542  00348C  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 11543  00348E  C035  F041         	movff	___fldiv@b,___fldiv@rem
 11544  003492  C036  F042         	movff	___fldiv@b+1,___fldiv@rem+1
 11545  003496  C037  F043         	movff	___fldiv@b+2,___fldiv@rem+2
 11546  00349A  C038  F044         	movff	___fldiv@b+3,___fldiv@rem+3
 11547  00349E  0E00               	movlw	0
 11548  0034A0  6E35               	movwf	___fldiv@b^0,c
 11549  0034A2  0E00               	movlw	0
 11550  0034A4  6E36               	movwf	(___fldiv@b+1)^0,c
 11551  0034A6  0E00               	movlw	0
 11552  0034A8  6E37               	movwf	(___fldiv@b+2)^0,c
 11553  0034AA  0E00               	movlw	0
 11554  0034AC  6E38               	movwf	(___fldiv@b+3)^0,c
 11555  0034AE  0E00               	movlw	0
 11556  0034B0  6E48               	movwf	___fldiv@grs^0,c
 11557  0034B2  0E00               	movlw	0
 11558  0034B4  6E49               	movwf	(___fldiv@grs+1)^0,c
 11559  0034B6  0E00               	movlw	0
 11560  0034B8  6E4A               	movwf	(___fldiv@grs+2)^0,c
 11561  0034BA  0E00               	movlw	0
 11562  0034BC  6E4B               	movwf	(___fldiv@grs+3)^0,c
 11563  0034BE  0E00               	movlw	0
 11564  0034C0  6E4D               	movwf	___fldiv@aexp^0,c
 11565  0034C2  EF9B  F01A         	goto	l1071
 11566  0034C6                     l4280:
 11567  0034C6  504D               	movf	___fldiv@aexp^0,w,c
 11568  0034C8  B4D8               	btfsc	status,2,c
 11569  0034CA  EF69  F01A         	goto	u4561
 11570  0034CE  EF6B  F01A         	goto	u4560
 11571  0034D2                     u4561:
 11572  0034D2  EF82  F01A         	goto	l4288
 11573  0034D6                     u4560:
 11574  0034D6  90D8               	bcf	status,0,c
 11575  0034D8  3641               	rlcf	___fldiv@rem^0,f,c
 11576  0034DA  3642               	rlcf	(___fldiv@rem+1)^0,f,c
 11577  0034DC  3643               	rlcf	(___fldiv@rem+2)^0,f,c
 11578  0034DE  3644               	rlcf	(___fldiv@rem+3)^0,f,c
 11579  0034E0  90D8               	bcf	status,0,c
 11580  0034E2  3635               	rlcf	___fldiv@b^0,f,c
 11581  0034E4  3636               	rlcf	(___fldiv@b+1)^0,f,c
 11582  0034E6  3637               	rlcf	(___fldiv@b+2)^0,f,c
 11583  0034E8  3638               	rlcf	(___fldiv@b+3)^0,f,c
 11584  0034EA  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 11585  0034EC  EF7A  F01A         	goto	u4571
 11586  0034F0  EF7C  F01A         	goto	u4570
 11587  0034F4                     u4571:
 11588  0034F4  EF7D  F01A         	goto	l1074
 11589  0034F8                     u4570:
 11590  0034F8  8035               	bsf	___fldiv@b^0,0,c
 11591  0034FA                     l1074:
 11592  0034FA  90D8               	bcf	status,0,c
 11593  0034FC  3648               	rlcf	___fldiv@grs^0,f,c
 11594  0034FE  3649               	rlcf	(___fldiv@grs+1)^0,f,c
 11595  003500  364A               	rlcf	(___fldiv@grs+2)^0,f,c
 11596  003502  364B               	rlcf	(___fldiv@grs+3)^0,f,c
 11597  003504                     l4288:
 11598  003504  5039               	movf	___fldiv@a^0,w,c
 11599  003506  5C41               	subwf	___fldiv@rem^0,w,c
 11600  003508  503A               	movf	(___fldiv@a+1)^0,w,c
 11601  00350A  5842               	subwfb	(___fldiv@rem+1)^0,w,c
 11602  00350C  503B               	movf	(___fldiv@a+2)^0,w,c
 11603  00350E  5843               	subwfb	(___fldiv@rem+2)^0,w,c
 11604  003510  503C               	movf	(___fldiv@a+3)^0,w,c
 11605  003512  5844               	subwfb	(___fldiv@rem+3)^0,w,c
 11606  003514  A0D8               	btfss	status,0,c
 11607  003516  EF8F  F01A         	goto	u4581
 11608  00351A  EF91  F01A         	goto	u4580
 11609  00351E                     u4581:
 11610  00351E  EF9A  F01A         	goto	l4294
 11611  003522                     u4580:
 11612  003522  8C4B               	bsf	(___fldiv@grs+3)^0,6,c
 11613  003524  5039               	movf	___fldiv@a^0,w,c
 11614  003526  5E41               	subwf	___fldiv@rem^0,f,c
 11615  003528  503A               	movf	(___fldiv@a+1)^0,w,c
 11616  00352A  5A42               	subwfb	(___fldiv@rem+1)^0,f,c
 11617  00352C  503B               	movf	(___fldiv@a+2)^0,w,c
 11618  00352E  5A43               	subwfb	(___fldiv@rem+2)^0,f,c
 11619  003530  503C               	movf	(___fldiv@a+3)^0,w,c
 11620  003532  5A44               	subwfb	(___fldiv@rem+3)^0,f,c
 11621  003534                     l4294:
 11622  003534  2A4D               	incf	___fldiv@aexp^0,f,c
 11623  003536                     l1071:
 11624  003536  0E19               	movlw	25
 11625  003538  644D               	cpfsgt	___fldiv@aexp^0,c
 11626  00353A  EFA1  F01A         	goto	u4591
 11627  00353E  EFA3  F01A         	goto	u4590
 11628  003542                     u4591:
 11629  003542  EF63  F01A         	goto	l4280
 11630  003546                     u4590:
 11631  003546  5041               	movf	___fldiv@rem^0,w,c
 11632  003548  1042               	iorwf	(___fldiv@rem+1)^0,w,c
 11633  00354A  1043               	iorwf	(___fldiv@rem+2)^0,w,c
 11634  00354C  1044               	iorwf	(___fldiv@rem+3)^0,w,c
 11635  00354E  B4D8               	btfsc	status,2,c
 11636  003550  EFAC  F01A         	goto	u4601
 11637  003554  EFAE  F01A         	goto	u4600
 11638  003558                     u4601:
 11639  003558  EFC6  F01A         	goto	l4306
 11640  00355C                     u4600:
 11641  00355C  8048               	bsf	___fldiv@grs^0,0,c
 11642  00355E  EFC6  F01A         	goto	l4306
 11643  003562                     l4300:
 11644  003562  90D8               	bcf	status,0,c
 11645  003564  3635               	rlcf	___fldiv@b^0,f,c
 11646  003566  3636               	rlcf	(___fldiv@b+1)^0,f,c
 11647  003568  3637               	rlcf	(___fldiv@b+2)^0,f,c
 11648  00356A  3638               	rlcf	(___fldiv@b+3)^0,f,c
 11649  00356C  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 11650  00356E  EFBB  F01A         	goto	u4611
 11651  003572  EFBD  F01A         	goto	u4610
 11652  003576                     u4611:
 11653  003576  EFBE  F01A         	goto	l1080
 11654  00357A                     u4610:
 11655  00357A  8035               	bsf	___fldiv@b^0,0,c
 11656  00357C                     l1080:
 11657  00357C  90D8               	bcf	status,0,c
 11658  00357E  3648               	rlcf	___fldiv@grs^0,f,c
 11659  003580  3649               	rlcf	(___fldiv@grs+1)^0,f,c
 11660  003582  364A               	rlcf	(___fldiv@grs+2)^0,f,c
 11661  003584  364B               	rlcf	(___fldiv@grs+3)^0,f,c
 11662  003586  0646               	decf	___fldiv@new_exp^0,f,c
 11663  003588  A0D8               	btfss	status,0,c
 11664  00358A  0647               	decf	(___fldiv@new_exp+1)^0,f,c
 11665  00358C                     l4306:
 11666  00358C  AE37               	btfss	(___fldiv@b+2)^0,7,c
 11667  00358E  EFCB  F01A         	goto	u4621
 11668  003592  EFCD  F01A         	goto	u4620
 11669  003596                     u4621:
 11670  003596  EFB1  F01A         	goto	l4300
 11671  00359A                     u4620:
 11672  00359A  0E00               	movlw	0
 11673  00359C  6E4D               	movwf	___fldiv@aexp^0,c
 11674  00359E  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 11675  0035A0  EFD4  F01A         	goto	u4631
 11676  0035A4  EFD6  F01A         	goto	u4630
 11677  0035A8                     u4631:
 11678  0035A8  EFFA  F01A         	goto	l1082
 11679  0035AC                     u4630:
 11680  0035AC  0EFF               	movlw	255
 11681  0035AE  1448               	andwf	___fldiv@grs^0,w,c
 11682  0035B0  6E3D               	movwf	??___fldiv^0,c
 11683  0035B2  0EFF               	movlw	255
 11684  0035B4  1449               	andwf	(___fldiv@grs+1)^0,w,c
 11685  0035B6  6E3E               	movwf	(??___fldiv+1)^0,c
 11686  0035B8  0EFF               	movlw	255
 11687  0035BA  144A               	andwf	(___fldiv@grs+2)^0,w,c
 11688  0035BC  6E3F               	movwf	(??___fldiv+2)^0,c
 11689  0035BE  0E7F               	movlw	127
 11690  0035C0  144B               	andwf	(___fldiv@grs+3)^0,w,c
 11691  0035C2  6E40               	movwf	(??___fldiv+3)^0,c
 11692  0035C4  503D               	movf	??___fldiv^0,w,c
 11693  0035C6  103E               	iorwf	(??___fldiv+1)^0,w,c
 11694  0035C8  103F               	iorwf	(??___fldiv+2)^0,w,c
 11695  0035CA  1040               	iorwf	(??___fldiv+3)^0,w,c
 11696  0035CC  B4D8               	btfsc	status,2,c
 11697  0035CE  EFEB  F01A         	goto	u4641
 11698  0035D2  EFED  F01A         	goto	u4640
 11699  0035D6                     u4641:
 11700  0035D6  EFF1  F01A         	goto	l1083
 11701  0035DA                     u4640:
 11702  0035DA                     l4314:
 11703  0035DA  0E01               	movlw	1
 11704  0035DC  6E4D               	movwf	___fldiv@aexp^0,c
 11705  0035DE  EFFA  F01A         	goto	l1082
 11706  0035E2                     l1083:
 11707  0035E2  A035               	btfss	___fldiv@b^0,0,c
 11708  0035E4  EFF6  F01A         	goto	u4651
 11709  0035E8  EFF8  F01A         	goto	u4650
 11710  0035EC                     u4651:
 11711  0035EC  EFFA  F01A         	goto	l1082
 11712  0035F0                     u4650:
 11713  0035F0  EFED  F01A         	goto	l4314
 11714  0035F4                     l1082:
 11715  0035F4  504D               	movf	___fldiv@aexp^0,w,c
 11716  0035F6  B4D8               	btfsc	status,2,c
 11717  0035F8  EF00  F01B         	goto	u4661
 11718  0035FC  EF02  F01B         	goto	u4660
 11719  003600                     u4661:
 11720  003600  EF26  F01B         	goto	l4326
 11721  003604                     u4660:
 11722  003604  0E01               	movlw	1
 11723  003606  2635               	addwf	___fldiv@b^0,f,c
 11724  003608  0E00               	movlw	0
 11725  00360A  2236               	addwfc	(___fldiv@b+1)^0,f,c
 11726  00360C  2237               	addwfc	(___fldiv@b+2)^0,f,c
 11727  00360E  2238               	addwfc	(___fldiv@b+3)^0,f,c
 11728  003610  A038               	btfss	(___fldiv@b+3)^0,0,c
 11729  003612  EF0D  F01B         	goto	u4671
 11730  003616  EF0F  F01B         	goto	u4670
 11731  00361A                     u4671:
 11732  00361A  EF26  F01B         	goto	l4326
 11733  00361E                     u4670:
 11734  00361E  C035  F03D         	movff	___fldiv@b,??___fldiv
 11735  003622  C036  F03E         	movff	___fldiv@b+1,??___fldiv+1
 11736  003626  C037  F03F         	movff	___fldiv@b+2,??___fldiv+2
 11737  00362A  C038  F040         	movff	___fldiv@b+3,??___fldiv+3
 11738  00362E  3440               	rlcf	(??___fldiv+3)^0,w,c
 11739  003630  3240               	rrcf	(??___fldiv+3)^0,f,c
 11740  003632  323F               	rrcf	(??___fldiv+2)^0,f,c
 11741  003634  323E               	rrcf	(??___fldiv+1)^0,f,c
 11742  003636  323D               	rrcf	??___fldiv^0,f,c
 11743  003638  C03D  F035         	movff	??___fldiv,___fldiv@b
 11744  00363C  C03E  F036         	movff	??___fldiv+1,___fldiv@b+1
 11745  003640  C03F  F037         	movff	??___fldiv+2,___fldiv@b+2
 11746  003644  C040  F038         	movff	??___fldiv+3,___fldiv@b+3
 11747  003648  4A46               	infsnz	___fldiv@new_exp^0,f,c
 11748  00364A  2A47               	incf	(___fldiv@new_exp+1)^0,f,c
 11749  00364C                     l4326:
 11750  00364C  BE47               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11751  00364E  EF31  F01B         	goto	u4681
 11752  003652  5047               	movf	(___fldiv@new_exp+1)^0,w,c
 11753  003654  E108               	bnz	u4680
 11754  003656  2846               	incf	___fldiv@new_exp^0,w,c
 11755  003658  A0D8               	btfss	status,0,c
 11756  00365A  EF31  F01B         	goto	u4681
 11757  00365E  EF33  F01B         	goto	u4680
 11758  003662                     u4681:
 11759  003662  EF3E  F01B         	goto	l4330
 11760  003666                     u4680:
 11761  003666  0E00               	movlw	0
 11762  003668  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 11763  00366A  6846               	setf	___fldiv@new_exp^0,c
 11764  00366C  0E00               	movlw	0
 11765  00366E  6E35               	movwf	___fldiv@b^0,c
 11766  003670  0E00               	movlw	0
 11767  003672  6E36               	movwf	(___fldiv@b+1)^0,c
 11768  003674  0E00               	movlw	0
 11769  003676  6E37               	movwf	(___fldiv@b+2)^0,c
 11770  003678  0E00               	movlw	0
 11771  00367A  6E38               	movwf	(___fldiv@b+3)^0,c
 11772  00367C                     l4330:
 11773  00367C  BE47               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11774  00367E  EF4B  F01B         	goto	u4690
 11775  003682  5047               	movf	(___fldiv@new_exp+1)^0,w,c
 11776  003684  E106               	bnz	u4691
 11777  003686  0446               	decf	___fldiv@new_exp^0,w,c
 11778  003688  B0D8               	btfsc	status,0,c
 11779  00368A  EF49  F01B         	goto	u4691
 11780  00368E  EF4B  F01B         	goto	u4690
 11781  003692                     u4691:
 11782  003692  EF59  F01B         	goto	l4334
 11783  003696                     u4690:
 11784  003696  0E00               	movlw	0
 11785  003698  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 11786  00369A  0E00               	movlw	0
 11787  00369C  6E46               	movwf	___fldiv@new_exp^0,c
 11788  00369E  0E00               	movlw	0
 11789  0036A0  6E35               	movwf	___fldiv@b^0,c
 11790  0036A2  0E00               	movlw	0
 11791  0036A4  6E36               	movwf	(___fldiv@b+1)^0,c
 11792  0036A6  0E00               	movlw	0
 11793  0036A8  6E37               	movwf	(___fldiv@b+2)^0,c
 11794  0036AA  0E00               	movlw	0
 11795  0036AC  6E38               	movwf	(___fldiv@b+3)^0,c
 11796  0036AE  0E00               	movlw	0
 11797  0036B0  6E45               	movwf	___fldiv@sign^0,c
 11798  0036B2                     l4334:
 11799  0036B2  C046  F04C         	movff	___fldiv@new_exp,___fldiv@bexp
 11800  0036B6  A04C               	btfss	___fldiv@bexp^0,0,c
 11801  0036B8  EF60  F01B         	goto	u4701
 11802  0036BC  EF62  F01B         	goto	u4700
 11803  0036C0                     u4701:
 11804  0036C0  EF65  F01B         	goto	l4340
 11805  0036C4                     u4700:
 11806  0036C4  8E37               	bsf	(___fldiv@b+2)^0,7,c
 11807  0036C6  EF66  F01B         	goto	l4342
 11808  0036CA                     l4340:
 11809  0036CA  9E37               	bcf	(___fldiv@b+2)^0,7,c
 11810  0036CC                     l4342:
 11811  0036CC  90D8               	bcf	status,0,c
 11812  0036CE  304C               	rrcf	___fldiv@bexp^0,w,c
 11813  0036D0  6E38               	movwf	(___fldiv@b+3)^0,c
 11814  0036D2  EF1C  F01A         	goto	l4256
 11815  0036D6                     l1069:
 11816  0036D6  0012               	return		;funcret
 11817  0036D8                     __end_of___fldiv:
 11818                           	callstack 0
 11819                           
 11820 ;; *************** function ___awmod *****************
 11821 ;; Defined at:
 11822 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
 11823 ;; Parameters:    Size  Location     Type
 11824 ;;  dividend        2    0[COMRAM] int 
 11825 ;;  divisor         2    2[COMRAM] int 
 11826 ;; Auto vars:     Size  Location     Type
 11827 ;;  sign            1    5[COMRAM] unsigned char 
 11828 ;;  counter         1    4[COMRAM] unsigned char 
 11829 ;; Return value:  Size  Location     Type
 11830 ;;                  2    0[COMRAM] int 
 11831 ;; Registers used:
 11832 ;;		wreg, status,2, status,0
 11833 ;; Tracked objects:
 11834 ;;		On entry : 0/0
 11835 ;;		On exit  : 0/0
 11836 ;;		Unchanged: 0/0
 11837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11838 ;;      Params:         4       0       0       0       0       0       0
 11839 ;;      Locals:         2       0       0       0       0       0       0
 11840 ;;      Temps:          0       0       0       0       0       0       0
 11841 ;;      Totals:         6       0       0       0       0       0       0
 11842 ;;Total ram usage:        6 bytes
 11843 ;; Hardware stack levels used:    1
 11844 ;; Hardware stack levels required when called:    1
 11845 ;; This function calls:
 11846 ;;		Nothing
 11847 ;; This function is called by:
 11848 ;;		_efgtoa
 11849 ;; This function uses a non-reentrant model
 11850 ;;
 11851                           
 11852                           	psect	text37
 11853  005074                     __ptext37:
 11854                           	callstack 0
 11855  005074                     ___awmod:
 11856                           	callstack 23
 11857  005074  0E00               	movlw	0
 11858  005076  6E06               	movwf	___awmod@sign^0,c
 11859  005078  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
 11860  00507A  EF43  F028         	goto	u4960
 11861  00507E  EF41  F028         	goto	u4961
 11862  005082                     u4961:
 11863  005082  EF49  F028         	goto	l4538
 11864  005086                     u4960:
 11865  005086  6C01               	negf	___awmod@dividend^0,c
 11866  005088  1E02               	comf	(___awmod@dividend+1)^0,f,c
 11867  00508A  B0D8               	btfsc	status,0,c
 11868  00508C  2A02               	incf	(___awmod@dividend+1)^0,f,c
 11869  00508E  0E01               	movlw	1
 11870  005090  6E06               	movwf	___awmod@sign^0,c
 11871  005092                     l4538:
 11872  005092  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
 11873  005094  EF50  F028         	goto	u4970
 11874  005098  EF4E  F028         	goto	u4971
 11875  00509C                     u4971:
 11876  00509C  EF54  F028         	goto	l4542
 11877  0050A0                     u4970:
 11878  0050A0  6C03               	negf	___awmod@divisor^0,c
 11879  0050A2  1E04               	comf	(___awmod@divisor+1)^0,f,c
 11880  0050A4  B0D8               	btfsc	status,0,c
 11881  0050A6  2A04               	incf	(___awmod@divisor+1)^0,f,c
 11882  0050A8                     l4542:
 11883  0050A8  5003               	movf	___awmod@divisor^0,w,c
 11884  0050AA  1004               	iorwf	(___awmod@divisor+1)^0,w,c
 11885  0050AC  B4D8               	btfsc	status,2,c
 11886  0050AE  EF5B  F028         	goto	u4981
 11887  0050B2  EF5D  F028         	goto	u4980
 11888  0050B6                     u4981:
 11889  0050B6  EF81  F028         	goto	l4558
 11890  0050BA                     u4980:
 11891  0050BA  0E01               	movlw	1
 11892  0050BC  6E05               	movwf	___awmod@counter^0,c
 11893  0050BE  EF65  F028         	goto	l4548
 11894  0050C2                     l4546:
 11895  0050C2  90D8               	bcf	status,0,c
 11896  0050C4  3603               	rlcf	___awmod@divisor^0,f,c
 11897  0050C6  3604               	rlcf	(___awmod@divisor+1)^0,f,c
 11898  0050C8  2A05               	incf	___awmod@counter^0,f,c
 11899  0050CA                     l4548:
 11900  0050CA  AE04               	btfss	(___awmod@divisor+1)^0,7,c
 11901  0050CC  EF6A  F028         	goto	u4991
 11902  0050D0  EF6C  F028         	goto	u4990
 11903  0050D4                     u4991:
 11904  0050D4  EF61  F028         	goto	l4546
 11905  0050D8                     u4990:
 11906  0050D8                     l4550:
 11907  0050D8  5003               	movf	___awmod@divisor^0,w,c
 11908  0050DA  5C01               	subwf	___awmod@dividend^0,w,c
 11909  0050DC  5004               	movf	(___awmod@divisor+1)^0,w,c
 11910  0050DE  5802               	subwfb	(___awmod@dividend+1)^0,w,c
 11911  0050E0  A0D8               	btfss	status,0,c
 11912  0050E2  EF75  F028         	goto	u5001
 11913  0050E6  EF77  F028         	goto	u5000
 11914  0050EA                     u5001:
 11915  0050EA  EF7B  F028         	goto	l4554
 11916  0050EE                     u5000:
 11917  0050EE  5003               	movf	___awmod@divisor^0,w,c
 11918  0050F0  5E01               	subwf	___awmod@dividend^0,f,c
 11919  0050F2  5004               	movf	(___awmod@divisor+1)^0,w,c
 11920  0050F4  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
 11921  0050F6                     l4554:
 11922  0050F6  90D8               	bcf	status,0,c
 11923  0050F8  3204               	rrcf	(___awmod@divisor+1)^0,f,c
 11924  0050FA  3203               	rrcf	___awmod@divisor^0,f,c
 11925  0050FC  2E05               	decfsz	___awmod@counter^0,f,c
 11926  0050FE  EF6C  F028         	goto	l4550
 11927  005102                     l4558:
 11928  005102  5006               	movf	___awmod@sign^0,w,c
 11929  005104  B4D8               	btfsc	status,2,c
 11930  005106  EF87  F028         	goto	u5011
 11931  00510A  EF89  F028         	goto	u5010
 11932  00510E                     u5011:
 11933  00510E  EF8D  F028         	goto	l4562
 11934  005112                     u5010:
 11935  005112  6C01               	negf	___awmod@dividend^0,c
 11936  005114  1E02               	comf	(___awmod@dividend+1)^0,f,c
 11937  005116  B0D8               	btfsc	status,0,c
 11938  005118  2A02               	incf	(___awmod@dividend+1)^0,f,c
 11939  00511A                     l4562:
 11940  00511A  C001  F001         	movff	___awmod@dividend,?___awmod
 11941  00511E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
 11942  005122  0012               	return		;funcret
 11943  005124                     __end_of___awmod:
 11944                           	callstack 0
 11945                           
 11946 ;; *************** function ___awdiv *****************
 11947 ;; Defined at:
 11948 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
 11949 ;; Parameters:    Size  Location     Type
 11950 ;;  dividend        2    0[COMRAM] int 
 11951 ;;  divisor         2    2[COMRAM] int 
 11952 ;; Auto vars:     Size  Location     Type
 11953 ;;  quotient        2    6[COMRAM] int 
 11954 ;;  sign            1    5[COMRAM] unsigned char 
 11955 ;;  counter         1    4[COMRAM] unsigned char 
 11956 ;; Return value:  Size  Location     Type
 11957 ;;                  2    0[COMRAM] int 
 11958 ;; Registers used:
 11959 ;;		wreg, status,2, status,0
 11960 ;; Tracked objects:
 11961 ;;		On entry : 0/0
 11962 ;;		On exit  : 0/0
 11963 ;;		Unchanged: 0/0
 11964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11965 ;;      Params:         4       0       0       0       0       0       0
 11966 ;;      Locals:         4       0       0       0       0       0       0
 11967 ;;      Temps:          0       0       0       0       0       0       0
 11968 ;;      Totals:         8       0       0       0       0       0       0
 11969 ;;Total ram usage:        8 bytes
 11970 ;; Hardware stack levels used:    1
 11971 ;; Hardware stack levels required when called:    1
 11972 ;; This function calls:
 11973 ;;		Nothing
 11974 ;; This function is called by:
 11975 ;;		_efgtoa
 11976 ;; This function uses a non-reentrant model
 11977 ;;
 11978                           
 11979                           	psect	text38
 11980  004FB0                     __ptext38:
 11981                           	callstack 0
 11982  004FB0                     ___awdiv:
 11983                           	callstack 23
 11984  004FB0  0E00               	movlw	0
 11985  004FB2  6E06               	movwf	___awdiv@sign^0,c
 11986  004FB4  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 11987  004FB6  EFE1  F027         	goto	u4900
 11988  004FBA  EFDF  F027         	goto	u4901
 11989  004FBE                     u4901:
 11990  004FBE  EFE7  F027         	goto	l4494
 11991  004FC2                     u4900:
 11992  004FC2  6C03               	negf	___awdiv@divisor^0,c
 11993  004FC4  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 11994  004FC6  B0D8               	btfsc	status,0,c
 11995  004FC8  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 11996  004FCA  0E01               	movlw	1
 11997  004FCC  6E06               	movwf	___awdiv@sign^0,c
 11998  004FCE                     l4494:
 11999  004FCE  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 12000  004FD0  EFEE  F027         	goto	u4910
 12001  004FD4  EFEC  F027         	goto	u4911
 12002  004FD8                     u4911:
 12003  004FD8  EFF4  F027         	goto	l4500
 12004  004FDC                     u4910:
 12005  004FDC  6C01               	negf	___awdiv@dividend^0,c
 12006  004FDE  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 12007  004FE0  B0D8               	btfsc	status,0,c
 12008  004FE2  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 12009  004FE4  0E01               	movlw	1
 12010  004FE6  1A06               	xorwf	___awdiv@sign^0,f,c
 12011  004FE8                     l4500:
 12012  004FE8  0E00               	movlw	0
 12013  004FEA  6E08               	movwf	(___awdiv@quotient+1)^0,c
 12014  004FEC  0E00               	movlw	0
 12015  004FEE  6E07               	movwf	___awdiv@quotient^0,c
 12016  004FF0  5003               	movf	___awdiv@divisor^0,w,c
 12017  004FF2  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 12018  004FF4  B4D8               	btfsc	status,2,c
 12019  004FF6  EFFF  F027         	goto	u4921
 12020  004FFA  EF01  F028         	goto	u4920
 12021  004FFE                     u4921:
 12022  004FFE  EF29  F028         	goto	l4522
 12023  005002                     u4920:
 12024  005002  0E01               	movlw	1
 12025  005004  6E05               	movwf	___awdiv@counter^0,c
 12026  005006  EF09  F028         	goto	l4508
 12027  00500A                     l4506:
 12028  00500A  90D8               	bcf	status,0,c
 12029  00500C  3603               	rlcf	___awdiv@divisor^0,f,c
 12030  00500E  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 12031  005010  2A05               	incf	___awdiv@counter^0,f,c
 12032  005012                     l4508:
 12033  005012  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 12034  005014  EF0E  F028         	goto	u4931
 12035  005018  EF10  F028         	goto	u4930
 12036  00501C                     u4931:
 12037  00501C  EF05  F028         	goto	l4506
 12038  005020                     u4930:
 12039  005020                     l4510:
 12040  005020  90D8               	bcf	status,0,c
 12041  005022  3607               	rlcf	___awdiv@quotient^0,f,c
 12042  005024  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 12043  005026  5003               	movf	___awdiv@divisor^0,w,c
 12044  005028  5C01               	subwf	___awdiv@dividend^0,w,c
 12045  00502A  5004               	movf	(___awdiv@divisor+1)^0,w,c
 12046  00502C  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 12047  00502E  A0D8               	btfss	status,0,c
 12048  005030  EF1C  F028         	goto	u4941
 12049  005034  EF1E  F028         	goto	u4940
 12050  005038                     u4941:
 12051  005038  EF23  F028         	goto	l4518
 12052  00503C                     u4940:
 12053  00503C  5003               	movf	___awdiv@divisor^0,w,c
 12054  00503E  5E01               	subwf	___awdiv@dividend^0,f,c
 12055  005040  5004               	movf	(___awdiv@divisor+1)^0,w,c
 12056  005042  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 12057  005044  8007               	bsf	___awdiv@quotient^0,0,c
 12058  005046                     l4518:
 12059  005046  90D8               	bcf	status,0,c
 12060  005048  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 12061  00504A  3203               	rrcf	___awdiv@divisor^0,f,c
 12062  00504C  2E05               	decfsz	___awdiv@counter^0,f,c
 12063  00504E  EF10  F028         	goto	l4510
 12064  005052                     l4522:
 12065  005052  5006               	movf	___awdiv@sign^0,w,c
 12066  005054  B4D8               	btfsc	status,2,c
 12067  005056  EF2F  F028         	goto	u4951
 12068  00505A  EF31  F028         	goto	u4950
 12069  00505E                     u4951:
 12070  00505E  EF35  F028         	goto	l4526
 12071  005062                     u4950:
 12072  005062  6C07               	negf	___awdiv@quotient^0,c
 12073  005064  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 12074  005066  B0D8               	btfsc	status,0,c
 12075  005068  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 12076  00506A                     l4526:
 12077  00506A  C007  F001         	movff	___awdiv@quotient,?___awdiv
 12078  00506E  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 12079  005072  0012               	return		;funcret
 12080  005074                     __end_of___awdiv:
 12081                           	callstack 0
 12082                           
 12083 ;; *************** function _dtoa *****************
 12084 ;; Defined at:
 12085 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 12086 ;; Parameters:    Size  Location     Type
 12087 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
 12088 ;;		 -> sprintf@f(6), 
 12089 ;;  d               8   29[COMRAM] long long 
 12090 ;; Auto vars:     Size  Location     Type
 12091 ;;  n               8   53[COMRAM] long long 
 12092 ;;  i               2   61[COMRAM] int 
 12093 ;;  s               2   51[COMRAM] int 
 12094 ;;  w               2   49[COMRAM] int 
 12095 ;;  p               2   47[COMRAM] int 
 12096 ;; Return value:  Size  Location     Type
 12097 ;;                  2   27[COMRAM] int 
 12098 ;; Registers used:
 12099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12100 ;; Tracked objects:
 12101 ;;		On entry : 0/0
 12102 ;;		On exit  : 0/0
 12103 ;;		Unchanged: 0/0
 12104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12105 ;;      Params:        10       0       0       0       0       0       0
 12106 ;;      Locals:        18       0       0       0       0       0       0
 12107 ;;      Temps:          8       0       0       0       0       0       0
 12108 ;;      Totals:        36       0       0       0       0       0       0
 12109 ;;Total ram usage:       36 bytes
 12110 ;; Hardware stack levels used:    1
 12111 ;; Hardware stack levels required when called:    5
 12112 ;; This function calls:
 12113 ;;		___aodiv
 12114 ;;		___aomod
 12115 ;;		_abs
 12116 ;;		_pad
 12117 ;; This function is called by:
 12118 ;;		_vfpfcnvrt
 12119 ;; This function uses a non-reentrant model
 12120 ;;
 12121                           
 12122                           	psect	text39
 12123  0039BE                     __ptext39:
 12124                           	callstack 0
 12125  0039BE                     _dtoa:
 12126                           	callstack 20
 12127  0039BE                     
 12128                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
 12129  0039BE  C01E  F036         	movff	dtoa@d,dtoa@n
 12130  0039C2  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
 12131  0039C6  C020  F038         	movff	dtoa@d+2,dtoa@n+2
 12132  0039CA  C021  F039         	movff	dtoa@d+3,dtoa@n+3
 12133  0039CE  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
 12134  0039D2  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
 12135  0039D6  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
 12136  0039DA  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
 12137  0039DE                     
 12138                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
 12139  0039DE  BE3D               	btfsc	(dtoa@n+7)^0,7,c
 12140  0039E0  EFF4  F01C         	goto	u5491
 12141  0039E4  EFF7  F01C         	goto	u5490
 12142  0039E8                     u5491:
 12143  0039E8  0E01               	movlw	1
 12144  0039EA  EFF8  F01C         	goto	u5500
 12145  0039EE                     u5490:
 12146  0039EE  0E00               	movlw	0
 12147  0039F0                     u5500:
 12148  0039F0  6E34               	movwf	dtoa@s^0,c
 12149  0039F2  6A35               	clrf	(dtoa@s+1)^0,c
 12150                           
 12151                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
 12152  0039F4  5034               	movf	dtoa@s^0,w,c
 12153  0039F6  1035               	iorwf	(dtoa@s+1)^0,w,c
 12154  0039F8  B4D8               	btfsc	status,2,c
 12155  0039FA  EF01  F01D         	goto	u5511
 12156  0039FE  EF03  F01D         	goto	u5510
 12157  003A02                     u5511:
 12158  003A02  EF13  F01D         	goto	l4768
 12159  003A06                     u5510:
 12160  003A06                     
 12161                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
 12162  003A06  1E3D               	comf	(dtoa@n+7)^0,f,c
 12163  003A08  1E3C               	comf	(dtoa@n+6)^0,f,c
 12164  003A0A  1E3B               	comf	(dtoa@n+5)^0,f,c
 12165  003A0C  1E3A               	comf	(dtoa@n+4)^0,f,c
 12166  003A0E  1E39               	comf	(dtoa@n+3)^0,f,c
 12167  003A10  1E38               	comf	(dtoa@n+2)^0,f,c
 12168  003A12  1E37               	comf	(dtoa@n+1)^0,f,c
 12169  003A14  6C36               	negf	dtoa@n^0,c
 12170  003A16  0E00               	movlw	0
 12171  003A18  2237               	addwfc	(dtoa@n+1)^0,f,c
 12172  003A1A  2238               	addwfc	(dtoa@n+2)^0,f,c
 12173  003A1C  2239               	addwfc	(dtoa@n+3)^0,f,c
 12174  003A1E  223A               	addwfc	(dtoa@n+4)^0,f,c
 12175  003A20  223B               	addwfc	(dtoa@n+5)^0,f,c
 12176  003A22  223C               	addwfc	(dtoa@n+6)^0,f,c
 12177  003A24  223D               	addwfc	(dtoa@n+7)^0,f,c
 12178  003A26                     l4768:
 12179                           
 12180                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
 12181  003A26  0101               	movlb	1	; () banked
 12182  003A28  BF97               	btfsc	(_prec+1)& (0+255),7,b
 12183  003A2A  EF19  F01D         	goto	u5521
 12184  003A2E  EF1B  F01D         	goto	u5520
 12185  003A32                     u5521:
 12186  003A32  EF1C  F01D         	goto	l4772
 12187  003A36                     u5520:
 12188  003A36                     
 12189                           ; BSR set to: 1
 12190                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
 12191  003A36  9398               	bcf	_flags& (0+255),1,b
 12192  003A38                     l4772:
 12193                           
 12194                           ; BSR set to: 1
 12195                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
 12196  003A38  BF97               	btfsc	(_prec+1)& (0+255),7,b
 12197  003A3A  EF29  F01D         	goto	u5530
 12198  003A3E  5197               	movf	(_prec+1)& (0+255),w,b
 12199  003A40  E106               	bnz	u5531
 12200  003A42  0596               	decf	_prec& (0+255),w,b
 12201  003A44  B0D8               	btfsc	status,0,c
 12202  003A46  EF27  F01D         	goto	u5531
 12203  003A4A  EF29  F01D         	goto	u5530
 12204  003A4E                     u5531:
 12205  003A4E  EF2F  F01D         	goto	l1224
 12206  003A52                     u5530:
 12207  003A52                     
 12208                           ; BSR set to: 1
 12209  003A52  0E00               	movlw	0
 12210  003A54  6E31               	movwf	(dtoa@p+1)^0,c
 12211  003A56  0E01               	movlw	1
 12212  003A58  6E30               	movwf	dtoa@p^0,c
 12213  003A5A  EF33  F01D         	goto	l1226
 12214  003A5E                     l1224:
 12215                           
 12216                           ; BSR set to: 1
 12217  003A5E  C196  F030         	movff	_prec,dtoa@p
 12218  003A62  C197  F031         	movff	_prec+1,dtoa@p+1
 12219  003A66                     l1226:
 12220                           
 12221                           ; BSR set to: 1
 12222                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
 12223  003A66  C194  F032         	movff	_width,dtoa@w
 12224  003A6A  C195  F033         	movff	_width+1,dtoa@w+1
 12225  003A6E                     
 12226                           ; BSR set to: 1
 12227                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
 12228  003A6E  5034               	movf	dtoa@s^0,w,c
 12229  003A70  1035               	iorwf	(dtoa@s+1)^0,w,c
 12230  003A72  A4D8               	btfss	status,2,c
 12231  003A74  EF3E  F01D         	goto	u5541
 12232  003A78  EF40  F01D         	goto	u5540
 12233  003A7C                     u5541:
 12234  003A7C  EF47  F01D         	goto	l4780
 12235  003A80                     u5540:
 12236  003A80                     
 12237                           ; BSR set to: 1
 12238  003A80  A598               	btfss	_flags& (0+255),2,b
 12239  003A82  EF45  F01D         	goto	u5551
 12240  003A86  EF47  F01D         	goto	u5550
 12241  003A8A                     u5551:
 12242  003A8A  EF4A  F01D         	goto	l4782
 12243  003A8E                     u5550:
 12244  003A8E                     l4780:
 12245                           
 12246                           ; BSR set to: 1
 12247                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
 12248  003A8E  0632               	decf	dtoa@w^0,f,c
 12249  003A90  A0D8               	btfss	status,0,c
 12250  003A92  0633               	decf	(dtoa@w+1)^0,f,c
 12251  003A94                     l4782:
 12252                           
 12253                           ; BSR set to: 1
 12254                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
 12255  003A94  0E00               	movlw	0
 12256  003A96  6E3F               	movwf	(dtoa@i+1)^0,c
 12257  003A98  0E4F               	movlw	79
 12258  003A9A  6E3E               	movwf	dtoa@i^0,c
 12259  003A9C                     
 12260                           ; BSR set to: 1
 12261                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
 12262  003A9C  0E00               	movlw	0
 12263  003A9E  6FEE               	movwf	(_dbuf+79)& (0+255),b
 12264                           
 12265                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12266  003AA0  EFCE  F01D         	goto	l4796
 12267  003AA4                     l4786:
 12268                           
 12269                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
 12270  003AA4  063E               	decf	dtoa@i^0,f,c
 12271  003AA6  A0D8               	btfss	status,0,c
 12272  003AA8  063F               	decf	(dtoa@i+1)^0,f,c
 12273  003AAA                     
 12274                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
 12275  003AAA  0E9F               	movlw	low _dbuf
 12276  003AAC  243E               	addwf	dtoa@i^0,w,c
 12277  003AAE  6ED9               	movwf	fsr2l,c
 12278  003AB0  0E01               	movlw	high _dbuf
 12279  003AB2  203F               	addwfc	(dtoa@i+1)^0,w,c
 12280  003AB4  6EDA               	movwf	fsr2h,c
 12281  003AB6  C036  F001         	movff	dtoa@n,___aomod@dividend
 12282  003ABA  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
 12283  003ABE  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
 12284  003AC2  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
 12285  003AC6  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
 12286  003ACA  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
 12287  003ACE  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
 12288  003AD2  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
 12289  003AD6  0E0A               	movlw	10
 12290  003AD8  6E09               	movwf	___aomod@divisor^0,c
 12291  003ADA  0E00               	movlw	0
 12292  003ADC  6E0A               	movwf	(___aomod@divisor+1)^0,c
 12293  003ADE  0E00               	movlw	0
 12294  003AE0  6E0B               	movwf	(___aomod@divisor+2)^0,c
 12295  003AE2  0E00               	movlw	0
 12296  003AE4  6E0C               	movwf	(___aomod@divisor+3)^0,c
 12297  003AE6  0E00               	movlw	0
 12298  003AE8  6E0D               	movwf	(___aomod@divisor+4)^0,c
 12299  003AEA  0E00               	movlw	0
 12300  003AEC  6E0E               	movwf	(___aomod@divisor+5)^0,c
 12301  003AEE  0E00               	movlw	0
 12302  003AF0  6E0F               	movwf	(___aomod@divisor+6)^0,c
 12303  003AF2  0E00               	movlw	0
 12304  003AF4  6E10               	movwf	(___aomod@divisor+7)^0,c
 12305  003AF6  EC62  F023         	call	___aomod	;wreg free
 12306  003AFA  C001  F026         	movff	?___aomod,??_dtoa
 12307  003AFE  C002  F027         	movff	?___aomod+1,??_dtoa+1
 12308  003B02  C003  F028         	movff	?___aomod+2,??_dtoa+2
 12309  003B06  C004  F029         	movff	?___aomod+3,??_dtoa+3
 12310  003B0A  C005  F02A         	movff	?___aomod+4,??_dtoa+4
 12311  003B0E  C006  F02B         	movff	?___aomod+5,??_dtoa+5
 12312  003B12  C007  F02C         	movff	?___aomod+6,??_dtoa+6
 12313  003B16  C008  F02D         	movff	?___aomod+7,??_dtoa+7
 12314  003B1A  C026  F013         	movff	??_dtoa,abs@a
 12315  003B1E  C028  F014         	movff	??_dtoa+2,abs@a+1
 12316  003B22  EC7C  F02C         	call	_abs	;wreg free
 12317  003B26  5013               	movf	?_abs^0,w,c
 12318  003B28  0F30               	addlw	48
 12319  003B2A  6EDF               	movwf	indf2,c
 12320  003B2C                     
 12321                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
 12322  003B2C  0630               	decf	dtoa@p^0,f,c
 12323  003B2E  A0D8               	btfss	status,0,c
 12324  003B30  0631               	decf	(dtoa@p+1)^0,f,c
 12325  003B32                     
 12326                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
 12327  003B32  0632               	decf	dtoa@w^0,f,c
 12328  003B34  A0D8               	btfss	status,0,c
 12329  003B36  0633               	decf	(dtoa@w+1)^0,f,c
 12330  003B38                     
 12331                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
 12332  003B38  C036  F001         	movff	dtoa@n,___aodiv@dividend
 12333  003B3C  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
 12334  003B40  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
 12335  003B44  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
 12336  003B48  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
 12337  003B4C  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
 12338  003B50  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
 12339  003B54  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
 12340  003B58  0E0A               	movlw	10
 12341  003B5A  6E09               	movwf	___aodiv@divisor^0,c
 12342  003B5C  0E00               	movlw	0
 12343  003B5E  6E0A               	movwf	(___aodiv@divisor+1)^0,c
 12344  003B60  0E00               	movlw	0
 12345  003B62  6E0B               	movwf	(___aodiv@divisor+2)^0,c
 12346  003B64  0E00               	movlw	0
 12347  003B66  6E0C               	movwf	(___aodiv@divisor+3)^0,c
 12348  003B68  0E00               	movlw	0
 12349  003B6A  6E0D               	movwf	(___aodiv@divisor+4)^0,c
 12350  003B6C  0E00               	movlw	0
 12351  003B6E  6E0E               	movwf	(___aodiv@divisor+5)^0,c
 12352  003B70  0E00               	movlw	0
 12353  003B72  6E0F               	movwf	(___aodiv@divisor+6)^0,c
 12354  003B74  0E00               	movlw	0
 12355  003B76  6E10               	movwf	(___aodiv@divisor+7)^0,c
 12356  003B78  ECDC  F021         	call	___aodiv	;wreg free
 12357  003B7C  C001  F036         	movff	?___aodiv,dtoa@n
 12358  003B80  C002  F037         	movff	?___aodiv+1,dtoa@n+1
 12359  003B84  C003  F038         	movff	?___aodiv+2,dtoa@n+2
 12360  003B88  C004  F039         	movff	?___aodiv+3,dtoa@n+3
 12361  003B8C  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
 12362  003B90  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
 12363  003B94  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
 12364  003B98  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
 12365  003B9C                     l4796:
 12366                           
 12367                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12368  003B9C  BE3F               	btfsc	(dtoa@i+1)^0,7,c
 12369  003B9E  EFD9  F01D         	goto	u5561
 12370  003BA2  503F               	movf	(dtoa@i+1)^0,w,c
 12371  003BA4  E108               	bnz	u5560
 12372  003BA6  043E               	decf	dtoa@i^0,w,c
 12373  003BA8  A0D8               	btfss	status,0,c
 12374  003BAA  EFD9  F01D         	goto	u5561
 12375  003BAE  EFDB  F01D         	goto	u5560
 12376  003BB2                     u5561:
 12377  003BB2  EF0C  F01E         	goto	l4806
 12378  003BB6                     u5560:
 12379  003BB6  5036               	movf	dtoa@n^0,w,c
 12380  003BB8  1037               	iorwf	(dtoa@n+1)^0,w,c
 12381  003BBA  1038               	iorwf	(dtoa@n+2)^0,w,c
 12382  003BBC  1039               	iorwf	(dtoa@n+3)^0,w,c
 12383  003BBE  103A               	iorwf	(dtoa@n+4)^0,w,c
 12384  003BC0  103B               	iorwf	(dtoa@n+5)^0,w,c
 12385  003BC2  103C               	iorwf	(dtoa@n+6)^0,w,c
 12386  003BC4  103D               	iorwf	(dtoa@n+7)^0,w,c
 12387  003BC6  A4D8               	btfss	status,2,c
 12388  003BC8  EFE8  F01D         	goto	u5571
 12389  003BCC  EFEA  F01D         	goto	u5570
 12390  003BD0                     u5571:
 12391  003BD0  EF52  F01D         	goto	l4786
 12392  003BD4                     u5570:
 12393  003BD4  BE31               	btfsc	(dtoa@p+1)^0,7,c
 12394  003BD6  EFF7  F01D         	goto	u5580
 12395  003BDA  5031               	movf	(dtoa@p+1)^0,w,c
 12396  003BDC  E106               	bnz	u5581
 12397  003BDE  0430               	decf	dtoa@p^0,w,c
 12398  003BE0  B0D8               	btfsc	status,0,c
 12399  003BE2  EFF5  F01D         	goto	u5581
 12400  003BE6  EFF7  F01D         	goto	u5580
 12401  003BEA                     u5581:
 12402  003BEA  EF52  F01D         	goto	l4786
 12403  003BEE                     u5580:
 12404  003BEE  BE33               	btfsc	(dtoa@w+1)^0,7,c
 12405  003BF0  EF02  F01E         	goto	u5591
 12406  003BF4  5033               	movf	(dtoa@w+1)^0,w,c
 12407  003BF6  E108               	bnz	u5590
 12408  003BF8  0432               	decf	dtoa@w^0,w,c
 12409  003BFA  A0D8               	btfss	status,0,c
 12410  003BFC  EF02  F01E         	goto	u5591
 12411  003C00  EF04  F01E         	goto	u5590
 12412  003C04                     u5591:
 12413  003C04  EF0C  F01E         	goto	l4806
 12414  003C08                     u5590:
 12415  003C08  0101               	movlb	1	; () banked
 12416  003C0A  B398               	btfsc	_flags& (0+255),1,b
 12417  003C0C  EF0A  F01E         	goto	u5601
 12418  003C10  EF0C  F01E         	goto	u5600
 12419  003C14                     u5601:
 12420  003C14  EF52  F01D         	goto	l4786
 12421  003C18                     u5600:
 12422  003C18                     l4806:
 12423                           
 12424                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
 12425  003C18  5034               	movf	dtoa@s^0,w,c
 12426  003C1A  1035               	iorwf	(dtoa@s+1)^0,w,c
 12427  003C1C  A4D8               	btfss	status,2,c
 12428  003C1E  EF13  F01E         	goto	u5611
 12429  003C22  EF15  F01E         	goto	u5610
 12430  003C26                     u5611:
 12431  003C26  EF1D  F01E         	goto	l4810
 12432  003C2A                     u5610:
 12433  003C2A  0101               	movlb	1	; () banked
 12434  003C2C  A598               	btfss	_flags& (0+255),2,b
 12435  003C2E  EF1B  F01E         	goto	u5621
 12436  003C32  EF1D  F01E         	goto	u5620
 12437  003C36                     u5621:
 12438  003C36  EF3B  F01E         	goto	l4820
 12439  003C3A                     u5620:
 12440  003C3A                     l4810:
 12441                           
 12442                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
 12443  003C3A  063E               	decf	dtoa@i^0,f,c
 12444  003C3C  A0D8               	btfss	status,0,c
 12445  003C3E  063F               	decf	(dtoa@i+1)^0,f,c
 12446  003C40                     
 12447                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
 12448  003C40  5034               	movf	dtoa@s^0,w,c
 12449  003C42  1035               	iorwf	(dtoa@s+1)^0,w,c
 12450  003C44  A4D8               	btfss	status,2,c
 12451  003C46  EF27  F01E         	goto	u5631
 12452  003C4A  EF29  F01E         	goto	u5630
 12453  003C4E                     u5631:
 12454  003C4E  EF2F  F01E         	goto	l4816
 12455  003C52                     u5630:
 12456  003C52  0E00               	movlw	0
 12457  003C54  6E2F               	movwf	(_dtoa$2481+1)^0,c
 12458  003C56  0E2B               	movlw	43
 12459  003C58  6E2E               	movwf	_dtoa$2481^0,c
 12460  003C5A  EF33  F01E         	goto	l4818
 12461  003C5E                     l4816:
 12462  003C5E  0E00               	movlw	0
 12463  003C60  6E2F               	movwf	(_dtoa$2481+1)^0,c
 12464  003C62  0E2D               	movlw	45
 12465  003C64  6E2E               	movwf	_dtoa$2481^0,c
 12466  003C66                     l4818:
 12467  003C66  0E9F               	movlw	low _dbuf
 12468  003C68  243E               	addwf	dtoa@i^0,w,c
 12469  003C6A  6ED9               	movwf	fsr2l,c
 12470  003C6C  0E01               	movlw	high _dbuf
 12471  003C6E  203F               	addwfc	(dtoa@i+1)^0,w,c
 12472  003C70  6EDA               	movwf	fsr2h,c
 12473  003C72  C02E  FFDF         	movff	_dtoa$2481,indf2
 12474  003C76                     l4820:
 12475                           
 12476                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
 12477  003C76  C01C  F011         	movff	dtoa@fp,pad@fp
 12478  003C7A  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
 12479  003C7E  0E9F               	movlw	low _dbuf
 12480  003C80  243E               	addwf	dtoa@i^0,w,c
 12481  003C82  6E13               	movwf	pad@buf^0,c
 12482  003C84  0E01               	movlw	high _dbuf
 12483  003C86  203F               	addwfc	(dtoa@i+1)^0,w,c
 12484  003C88  6E14               	movwf	(pad@buf+1)^0,c
 12485  003C8A  C032  F015         	movff	dtoa@w,pad@p
 12486  003C8E  C033  F016         	movff	dtoa@w+1,pad@p+1
 12487  003C92  EC75  F027         	call	_pad	;wreg free
 12488  003C96  C011  F01C         	movff	?_pad,?_dtoa
 12489  003C9A  C012  F01D         	movff	?_pad+1,?_dtoa+1
 12490  003C9E  0012               	return		;funcret
 12491  003CA0                     __end_of_dtoa:
 12492                           	callstack 0
 12493                           
 12494 ;; *************** function _pad *****************
 12495 ;; Defined at:
 12496 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 12497 ;; Parameters:    Size  Location     Type
 12498 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 12499 ;;		 -> sprintf@f(6), 
 12500 ;;  buf             2   18[COMRAM] PTR unsigned char 
 12501 ;;		 -> dbuf(80), 
 12502 ;;  p               2   20[COMRAM] int 
 12503 ;; Auto vars:     Size  Location     Type
 12504 ;;  w               2   25[COMRAM] int 
 12505 ;;  i               2   23[COMRAM] int 
 12506 ;; Return value:  Size  Location     Type
 12507 ;;                  2   16[COMRAM] int 
 12508 ;; Registers used:
 12509 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12510 ;; Tracked objects:
 12511 ;;		On entry : 0/0
 12512 ;;		On exit  : 0/0
 12513 ;;		Unchanged: 0/0
 12514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12515 ;;      Params:         6       0       0       0       0       0       0
 12516 ;;      Locals:         4       0       0       0       0       0       0
 12517 ;;      Temps:          1       0       0       0       0       0       0
 12518 ;;      Totals:        11       0       0       0       0       0       0
 12519 ;;Total ram usage:       11 bytes
 12520 ;; Hardware stack levels used:    1
 12521 ;; Hardware stack levels required when called:    4
 12522 ;; This function calls:
 12523 ;;		_fputc
 12524 ;;		_fputs
 12525 ;;		_strlen
 12526 ;; This function is called by:
 12527 ;;		_dtoa
 12528 ;;		_efgtoa
 12529 ;; This function uses a non-reentrant model
 12530 ;;
 12531                           
 12532                           	psect	text40
 12533  004EEA                     __ptext40:
 12534                           	callstack 0
 12535  004EEA                     _pad:
 12536                           	callstack 20
 12537  004EEA                     
 12538                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 12539  004EEA  0101               	movlb	1	; () banked
 12540  004EEC  A198               	btfss	_flags& (0+255),0,b
 12541  004EEE  EF7B  F027         	goto	u5181
 12542  004EF2  EF7D  F027         	goto	u5180
 12543  004EF6                     u5181:
 12544  004EF6  EF87  F027         	goto	l4660
 12545  004EFA                     u5180:
 12546  004EFA                     
 12547                           ; BSR set to: 1
 12548                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 12549  004EFA  C013  F00A         	movff	pad@buf,fputs@s
 12550  004EFE  C014  F00B         	movff	pad@buf+1,fputs@s+1
 12551  004F02  C011  F00C         	movff	pad@fp,fputs@fp
 12552  004F06  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 12553  004F0A  EC39  F02C         	call	_fputs	;wreg free
 12554  004F0E                     l4660:
 12555                           
 12556                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 12557  004F0E  BE16               	btfsc	(pad@p+1)^0,7,c
 12558  004F10  EF8C  F027         	goto	u5191
 12559  004F14  EF8E  F027         	goto	u5190
 12560  004F18                     u5191:
 12561  004F18  EF94  F027         	goto	l4664
 12562  004F1C                     u5190:
 12563  004F1C  C015  F01A         	movff	pad@p,pad@w
 12564  004F20  C016  F01B         	movff	pad@p+1,pad@w+1
 12565  004F24  EF98  F027         	goto	l1213
 12566  004F28                     l4664:
 12567  004F28  0E00               	movlw	0
 12568  004F2A  6E1B               	movwf	(pad@w+1)^0,c
 12569  004F2C  0E00               	movlw	0
 12570  004F2E  6E1A               	movwf	pad@w^0,c
 12571  004F30                     l1213:
 12572                           
 12573                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 12574  004F30  0E00               	movlw	0
 12575  004F32  6E19               	movwf	(pad@i+1)^0,c
 12576  004F34  0E00               	movlw	0
 12577  004F36  6E18               	movwf	pad@i^0,c
 12578                           
 12579                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12580  004F38  EFAA  F027         	goto	l4670
 12581  004F3C                     l4666:
 12582                           
 12583                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 12584  004F3C  0E00               	movlw	0
 12585  004F3E  6E02               	movwf	(fputc@c+1)^0,c
 12586  004F40  0E20               	movlw	32
 12587  004F42  6E01               	movwf	fputc@c^0,c
 12588  004F44  C011  F003         	movff	pad@fp,fputc@fp
 12589  004F48  C012  F004         	movff	pad@fp+1,fputc@fp+1
 12590  004F4C  EC10  F027         	call	_fputc	;wreg free
 12591  004F50                     
 12592                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
 12593  004F50  4A18               	infsnz	pad@i^0,f,c
 12594  004F52  2A19               	incf	(pad@i+1)^0,f,c
 12595  004F54                     l4670:
 12596                           
 12597                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12598  004F54  501A               	movf	pad@w^0,w,c
 12599  004F56  5C18               	subwf	pad@i^0,w,c
 12600  004F58  5019               	movf	(pad@i+1)^0,w,c
 12601  004F5A  0A80               	xorlw	128
 12602  004F5C  6E17               	movwf	??_pad^0,c
 12603  004F5E  501B               	movf	(pad@w+1)^0,w,c
 12604  004F60  0A80               	xorlw	128
 12605  004F62  5817               	subwfb	??_pad^0,w,c
 12606  004F64  A0D8               	btfss	status,0,c
 12607  004F66  EFB7  F027         	goto	u5201
 12608  004F6A  EFB9  F027         	goto	u5200
 12609  004F6E                     u5201:
 12610  004F6E  EF9E  F027         	goto	l4666
 12611  004F72                     u5200:
 12612  004F72                     
 12613                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 12614  004F72  0101               	movlb	1	; () banked
 12615  004F74  B198               	btfsc	_flags& (0+255),0,b
 12616  004F76  EFBF  F027         	goto	u5211
 12617  004F7A  EFC1  F027         	goto	u5210
 12618  004F7E                     u5211:
 12619  004F7E  EFCB  F027         	goto	l4674
 12620  004F82                     u5210:
 12621  004F82                     
 12622                           ; BSR set to: 1
 12623                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 12624  004F82  C013  F00A         	movff	pad@buf,fputs@s
 12625  004F86  C014  F00B         	movff	pad@buf+1,fputs@s+1
 12626  004F8A  C011  F00C         	movff	pad@fp,fputs@fp
 12627  004F8E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 12628  004F92  EC39  F02C         	call	_fputs	;wreg free
 12629  004F96                     l4674:
 12630                           
 12631                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
 12632  004F96  C013  F001         	movff	pad@buf,strlen@s
 12633  004F9A  C014  F002         	movff	pad@buf+1,strlen@s+1
 12634  004F9E  EC48  F02D         	call	_strlen	;wreg free
 12635  004FA2  501A               	movf	pad@w^0,w,c
 12636  004FA4  2401               	addwf	?_strlen^0,w,c
 12637  004FA6  6E11               	movwf	?_pad^0,c
 12638  004FA8  501B               	movf	(pad@w+1)^0,w,c
 12639  004FAA  2002               	addwfc	(?_strlen+1)^0,w,c
 12640  004FAC  6E12               	movwf	(?_pad+1)^0,c
 12641  004FAE  0012               	return		;funcret
 12642  004FB0                     __end_of_pad:
 12643                           	callstack 0
 12644                           
 12645 ;; *************** function _strlen *****************
 12646 ;; Defined at:
 12647 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
 12648 ;; Parameters:    Size  Location     Type
 12649 ;;  s               2    0[COMRAM] PTR const unsigned char 
 12650 ;;		 -> dbuf(80), 
 12651 ;; Auto vars:     Size  Location     Type
 12652 ;;  a               2    2[COMRAM] PTR const unsigned char 
 12653 ;;		 -> dbuf(80), 
 12654 ;; Return value:  Size  Location     Type
 12655 ;;                  2    0[COMRAM] unsigned int 
 12656 ;; Registers used:
 12657 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12658 ;; Tracked objects:
 12659 ;;		On entry : 0/0
 12660 ;;		On exit  : 0/0
 12661 ;;		Unchanged: 0/0
 12662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12663 ;;      Params:         2       0       0       0       0       0       0
 12664 ;;      Locals:         2       0       0       0       0       0       0
 12665 ;;      Temps:          0       0       0       0       0       0       0
 12666 ;;      Totals:         4       0       0       0       0       0       0
 12667 ;;Total ram usage:        4 bytes
 12668 ;; Hardware stack levels used:    1
 12669 ;; Hardware stack levels required when called:    1
 12670 ;; This function calls:
 12671 ;;		Nothing
 12672 ;; This function is called by:
 12673 ;;		_pad
 12674 ;; This function uses a non-reentrant model
 12675 ;;
 12676                           
 12677                           	psect	text41
 12678  005A90                     __ptext41:
 12679                           	callstack 0
 12680  005A90                     _strlen:
 12681                           	callstack 22
 12682  005A90  C001  F003         	movff	strlen@s,strlen@a
 12683  005A94  C002  F004         	movff	strlen@s+1,strlen@a+1
 12684  005A98  EF50  F02D         	goto	l4116
 12685  005A9C                     l4114:
 12686  005A9C  4A01               	infsnz	strlen@s^0,f,c
 12687  005A9E  2A02               	incf	(strlen@s+1)^0,f,c
 12688  005AA0                     l4116:
 12689  005AA0  C001  FFD9         	movff	strlen@s,fsr2l
 12690  005AA4  C002  FFDA         	movff	strlen@s+1,fsr2h
 12691  005AA8  50DF               	movf	indf2,w,c
 12692  005AAA  A4D8               	btfss	status,2,c
 12693  005AAC  EF5A  F02D         	goto	u4321
 12694  005AB0  EF5C  F02D         	goto	u4320
 12695  005AB4                     u4321:
 12696  005AB4  EF4E  F02D         	goto	l4114
 12697  005AB8                     u4320:
 12698  005AB8  5003               	movf	strlen@a^0,w,c
 12699  005ABA  5C01               	subwf	strlen@s^0,w,c
 12700  005ABC  6E01               	movwf	?_strlen^0,c
 12701  005ABE  5004               	movf	(strlen@a+1)^0,w,c
 12702  005AC0  5802               	subwfb	(strlen@s+1)^0,w,c
 12703  005AC2  6E02               	movwf	(?_strlen+1)^0,c
 12704  005AC4  0012               	return		;funcret
 12705  005AC6                     __end_of_strlen:
 12706                           	callstack 0
 12707                           
 12708 ;; *************** function _fputs *****************
 12709 ;; Defined at:
 12710 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
 12711 ;; Parameters:    Size  Location     Type
 12712 ;;  s               2    9[COMRAM] PTR const unsigned char 
 12713 ;;		 -> dbuf(80), 
 12714 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 12715 ;;		 -> sprintf@f(6), 
 12716 ;; Auto vars:     Size  Location     Type
 12717 ;;  i               2   14[COMRAM] int 
 12718 ;;  c               1   13[COMRAM] unsigned char 
 12719 ;; Return value:  Size  Location     Type
 12720 ;;                  2    9[COMRAM] int 
 12721 ;; Registers used:
 12722 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12723 ;; Tracked objects:
 12724 ;;		On entry : 0/0
 12725 ;;		On exit  : 0/0
 12726 ;;		Unchanged: 0/0
 12727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12728 ;;      Params:         4       0       0       0       0       0       0
 12729 ;;      Locals:         3       0       0       0       0       0       0
 12730 ;;      Temps:          0       0       0       0       0       0       0
 12731 ;;      Totals:         7       0       0       0       0       0       0
 12732 ;;Total ram usage:        7 bytes
 12733 ;; Hardware stack levels used:    1
 12734 ;; Hardware stack levels required when called:    3
 12735 ;; This function calls:
 12736 ;;		_fputc
 12737 ;; This function is called by:
 12738 ;;		_pad
 12739 ;; This function uses a non-reentrant model
 12740 ;;
 12741                           
 12742                           	psect	text42
 12743  005872                     __ptext42:
 12744                           	callstack 0
 12745  005872                     _fputs:
 12746                           	callstack 20
 12747  005872  0E00               	movlw	0
 12748  005874  6E10               	movwf	(fputs@i+1)^0,c
 12749  005876  0E00               	movlw	0
 12750  005878  6E0F               	movwf	fputs@i^0,c
 12751  00587A  EF4A  F02C         	goto	l4110
 12752  00587E                     l4106:
 12753  00587E  C00E  F001         	movff	fputs@c,fputc@c
 12754  005882  6A02               	clrf	(fputc@c+1)^0,c
 12755  005884  C00C  F003         	movff	fputs@fp,fputc@fp
 12756  005888  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
 12757  00588C  EC10  F027         	call	_fputc	;wreg free
 12758  005890  4A0F               	infsnz	fputs@i^0,f,c
 12759  005892  2A10               	incf	(fputs@i+1)^0,f,c
 12760  005894                     l4110:
 12761  005894  500F               	movf	fputs@i^0,w,c
 12762  005896  240A               	addwf	fputs@s^0,w,c
 12763  005898  6ED9               	movwf	fsr2l,c
 12764  00589A  5010               	movf	(fputs@i+1)^0,w,c
 12765  00589C  200B               	addwfc	(fputs@s+1)^0,w,c
 12766  00589E  6EDA               	movwf	fsr2h,c
 12767  0058A0  50DF               	movf	indf2,w,c
 12768  0058A2  6E0E               	movwf	fputs@c^0,c
 12769  0058A4  500E               	movf	fputs@c^0,w,c
 12770  0058A6  A4D8               	btfss	status,2,c
 12771  0058A8  EF58  F02C         	goto	u4311
 12772  0058AC  EF5A  F02C         	goto	u4310
 12773  0058B0                     u4311:
 12774  0058B0  EF3F  F02C         	goto	l4106
 12775  0058B4                     u4310:
 12776  0058B4  0012               	return		;funcret
 12777  0058B6                     __end_of_fputs:
 12778                           	callstack 0
 12779                           
 12780 ;; *************** function _fputc *****************
 12781 ;; Defined at:
 12782 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
 12783 ;; Parameters:    Size  Location     Type
 12784 ;;  c               2    0[COMRAM] int 
 12785 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 12786 ;;		 -> sprintf@f(6), 
 12787 ;; Auto vars:     Size  Location     Type
 12788 ;;		None
 12789 ;; Return value:  Size  Location     Type
 12790 ;;                  2    0[COMRAM] int 
 12791 ;; Registers used:
 12792 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12793 ;; Tracked objects:
 12794 ;;		On entry : 0/0
 12795 ;;		On exit  : 0/0
 12796 ;;		Unchanged: 0/0
 12797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12798 ;;      Params:         4       0       0       0       0       0       0
 12799 ;;      Locals:         0       0       0       0       0       0       0
 12800 ;;      Temps:          5       0       0       0       0       0       0
 12801 ;;      Totals:         9       0       0       0       0       0       0
 12802 ;;Total ram usage:        9 bytes
 12803 ;; Hardware stack levels used:    1
 12804 ;; Hardware stack levels required when called:    2
 12805 ;; This function calls:
 12806 ;;		_putch
 12807 ;; This function is called by:
 12808 ;;		_pad
 12809 ;;		_vfpfcnvrt
 12810 ;;		_fputs
 12811 ;; This function uses a non-reentrant model
 12812 ;;
 12813                           
 12814                           	psect	text43
 12815  004E20                     __ptext43:
 12816                           	callstack 0
 12817  004E20                     _fputc:
 12818                           	callstack 23
 12819  004E20  5003               	movf	fputc@fp^0,w,c
 12820  004E22  1004               	iorwf	(fputc@fp+1)^0,w,c
 12821  004E24  B4D8               	btfsc	status,2,c
 12822  004E26  EF17  F027         	goto	u3881
 12823  004E2A  EF19  F027         	goto	u3880
 12824  004E2E                     u3881:
 12825  004E2E  EF22  F027         	goto	l3892
 12826  004E32                     u3880:
 12827  004E32  5003               	movf	fputc@fp^0,w,c
 12828  004E34  1004               	iorwf	(fputc@fp+1)^0,w,c
 12829  004E36  A4D8               	btfss	status,2,c
 12830  004E38  EF20  F027         	goto	u3891
 12831  004E3C  EF22  F027         	goto	u3890
 12832  004E40                     u3891:
 12833  004E40  EF27  F027         	goto	l3894
 12834  004E44                     u3890:
 12835  004E44                     l3892:
 12836  004E44  5001               	movf	fputc@c^0,w,c
 12837  004E46  EC27  F02E         	call	_putch
 12838  004E4A  EF74  F027         	goto	l1473
 12839  004E4E                     l3894:
 12840  004E4E  EE20 F004          	lfsr	2,4
 12841  004E52  5003               	movf	fputc@fp^0,w,c
 12842  004E54  26D9               	addwf	fsr2l,f,c
 12843  004E56  5004               	movf	(fputc@fp+1)^0,w,c
 12844  004E58  22DA               	addwfc	fsr2h,f,c
 12845  004E5A  50DE               	movf	postinc2,w,c
 12846  004E5C  10DE               	iorwf	postinc2,w,c
 12847  004E5E  B4D8               	btfsc	status,2,c
 12848  004E60  EF34  F027         	goto	u3901
 12849  004E64  EF36  F027         	goto	u3900
 12850  004E68                     u3901:
 12851  004E68  EF51  F027         	goto	l3898
 12852  004E6C                     u3900:
 12853  004E6C  EE20 F004          	lfsr	2,4
 12854  004E70  5003               	movf	fputc@fp^0,w,c
 12855  004E72  26D9               	addwf	fsr2l,f,c
 12856  004E74  5004               	movf	(fputc@fp+1)^0,w,c
 12857  004E76  22DA               	addwfc	fsr2h,f,c
 12858  004E78  EE10 F002          	lfsr	1,2
 12859  004E7C  5003               	movf	fputc@fp^0,w,c
 12860  004E7E  26E1               	addwf	fsr1l,f,c
 12861  004E80  5004               	movf	(fputc@fp+1)^0,w,c
 12862  004E82  22E2               	addwfc	fsr1h,f,c
 12863  004E84  50DE               	movf	postinc2,w,c
 12864  004E86  5CE6               	subwf	postinc1,w,c
 12865  004E88  50E6               	movf	postinc1,w,c
 12866  004E8A  0A80               	xorlw	128
 12867  004E8C  6E09               	movwf	(??_fputc+4)^0,c
 12868  004E8E  50DE               	movf	postinc2,w,c
 12869  004E90  0A80               	xorlw	128
 12870  004E92  5809               	subwfb	(??_fputc+4)^0,w,c
 12871  004E94  B0D8               	btfsc	status,0,c
 12872  004E96  EF4F  F027         	goto	u3911
 12873  004E9A  EF51  F027         	goto	u3910
 12874  004E9E                     u3911:
 12875  004E9E  EF74  F027         	goto	l1473
 12876  004EA2                     u3910:
 12877  004EA2                     l3898:
 12878  004EA2  EE20 F002          	lfsr	2,2
 12879  004EA6  5003               	movf	fputc@fp^0,w,c
 12880  004EA8  26D9               	addwf	fsr2l,f,c
 12881  004EAA  5004               	movf	(fputc@fp+1)^0,w,c
 12882  004EAC  22DA               	addwfc	fsr2h,f,c
 12883  004EAE  CFDE F005          	movff	postinc2,??_fputc
 12884  004EB2  CFDD F006          	movff	postdec2,??_fputc+1
 12885  004EB6  C003  FFD9         	movff	fputc@fp,fsr2l
 12886  004EBA  C004  FFDA         	movff	fputc@fp+1,fsr2h
 12887  004EBE  CFDE F007          	movff	postinc2,??_fputc+2
 12888  004EC2  CFDD F008          	movff	postdec2,??_fputc+3
 12889  004EC6  5005               	movf	??_fputc^0,w,c
 12890  004EC8  2407               	addwf	(??_fputc+2)^0,w,c
 12891  004ECA  6ED9               	movwf	fsr2l,c
 12892  004ECC  5006               	movf	(??_fputc+1)^0,w,c
 12893  004ECE  2008               	addwfc	(??_fputc+3)^0,w,c
 12894  004ED0  6EDA               	movwf	fsr2h,c
 12895  004ED2  C001  FFDF         	movff	fputc@c,indf2
 12896  004ED6  EE20 F002          	lfsr	2,2
 12897  004EDA  5003               	movf	fputc@fp^0,w,c
 12898  004EDC  26D9               	addwf	fsr2l,f,c
 12899  004EDE  5004               	movf	(fputc@fp+1)^0,w,c
 12900  004EE0  22DA               	addwfc	fsr2h,f,c
 12901  004EE2  2ADE               	incf	postinc2,f,c
 12902  004EE4  0E00               	movlw	0
 12903  004EE6  22DD               	addwfc	postdec2,f,c
 12904  004EE8                     l1473:
 12905  004EE8  0012               	return		;funcret
 12906  004EEA                     __end_of_fputc:
 12907                           	callstack 0
 12908                           
 12909 ;; *************** function _putch *****************
 12910 ;; Defined at:
 12911 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
 12912 ;; Parameters:    Size  Location     Type
 12913 ;;  c               1    wreg     unsigned char 
 12914 ;; Auto vars:     Size  Location     Type
 12915 ;;  c               1    0[COMRAM] unsigned char 
 12916 ;; Return value:  Size  Location     Type
 12917 ;;                  1    wreg      void 
 12918 ;; Registers used:
 12919 ;;		wreg
 12920 ;; Tracked objects:
 12921 ;;		On entry : 0/0
 12922 ;;		On exit  : 0/0
 12923 ;;		Unchanged: 0/0
 12924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12925 ;;      Params:         0       0       0       0       0       0       0
 12926 ;;      Locals:         0       0       0       0       0       0       0
 12927 ;;      Temps:          0       0       0       0       0       0       0
 12928 ;;      Totals:         0       0       0       0       0       0       0
 12929 ;;Total ram usage:        0 bytes
 12930 ;; Hardware stack levels used:    1
 12931 ;; Hardware stack levels required when called:    1
 12932 ;; This function calls:
 12933 ;;		Nothing
 12934 ;; This function is called by:
 12935 ;;		_fputc
 12936 ;; This function uses a non-reentrant model
 12937 ;;
 12938                           
 12939                           	psect	text44
 12940  005C4E                     __ptext44:
 12941                           	callstack 0
 12942  005C4E                     _putch:
 12943                           	callstack 23
 12944  005C4E  0012               	return		;funcret
 12945  005C50                     __end_of_putch:
 12946                           	callstack 0
 12947                           
 12948 ;; *************** function _abs *****************
 12949 ;; Defined at:
 12950 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
 12951 ;; Parameters:    Size  Location     Type
 12952 ;;  a               2   18[COMRAM] int 
 12953 ;; Auto vars:     Size  Location     Type
 12954 ;;		None
 12955 ;; Return value:  Size  Location     Type
 12956 ;;                  2   18[COMRAM] int 
 12957 ;; Registers used:
 12958 ;;		wreg, status,2, status,0
 12959 ;; Tracked objects:
 12960 ;;		On entry : 0/0
 12961 ;;		On exit  : 0/0
 12962 ;;		Unchanged: 0/0
 12963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12964 ;;      Params:         2       0       0       0       0       0       0
 12965 ;;      Locals:         0       0       0       0       0       0       0
 12966 ;;      Temps:          2       0       0       0       0       0       0
 12967 ;;      Totals:         4       0       0       0       0       0       0
 12968 ;;Total ram usage:        4 bytes
 12969 ;; Hardware stack levels used:    1
 12970 ;; Hardware stack levels required when called:    1
 12971 ;; This function calls:
 12972 ;;		Nothing
 12973 ;; This function is called by:
 12974 ;;		_dtoa
 12975 ;; This function uses a non-reentrant model
 12976 ;;
 12977                           
 12978                           	psect	text45
 12979  0058F8                     __ptext45:
 12980                           	callstack 0
 12981  0058F8                     _abs:
 12982                           	callstack 23
 12983  0058F8  BE14               	btfsc	(abs@a+1)^0,7,c
 12984  0058FA  EF89  F02C         	goto	u5220
 12985  0058FE  5014               	movf	(abs@a+1)^0,w,c
 12986  005900  E106               	bnz	u5221
 12987  005902  0413               	decf	abs@a^0,w,c
 12988  005904  B0D8               	btfsc	status,0,c
 12989  005906  EF87  F02C         	goto	u5221
 12990  00590A  EF89  F02C         	goto	u5220
 12991  00590E                     u5221:
 12992  00590E  EF97  F02C         	goto	l1394
 12993  005912                     u5220:
 12994  005912  C013  F015         	movff	abs@a,??_abs
 12995  005916  C014  F016         	movff	abs@a+1,??_abs+1
 12996  00591A  1E15               	comf	??_abs^0,f,c
 12997  00591C  1E16               	comf	(??_abs+1)^0,f,c
 12998  00591E  4A15               	infsnz	??_abs^0,f,c
 12999  005920  2A16               	incf	(??_abs+1)^0,f,c
 13000  005922  C015  F013         	movff	??_abs,?_abs
 13001  005926  C016  F014         	movff	??_abs+1,?_abs+1
 13002  00592A  EF9B  F02C         	goto	l1397
 13003  00592E                     l1394:
 13004  00592E  C013  F013         	movff	abs@a,?_abs
 13005  005932  C014  F014         	movff	abs@a+1,?_abs+1
 13006  005936                     l1397:
 13007  005936  0012               	return		;funcret
 13008  005938                     __end_of_abs:
 13009                           	callstack 0
 13010                           
 13011 ;; *************** function ___aomod *****************
 13012 ;; Defined at:
 13013 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
 13014 ;; Parameters:    Size  Location     Type
 13015 ;;  dividend        8    0[COMRAM] long long 
 13016 ;;  divisor         8    8[COMRAM] long long 
 13017 ;; Auto vars:     Size  Location     Type
 13018 ;;  sign            1   17[COMRAM] unsigned char 
 13019 ;;  counter         1   16[COMRAM] unsigned char 
 13020 ;; Return value:  Size  Location     Type
 13021 ;;                  8    0[COMRAM] long long 
 13022 ;; Registers used:
 13023 ;;		wreg, status,2, status,0
 13024 ;; Tracked objects:
 13025 ;;		On entry : 0/0
 13026 ;;		On exit  : 0/0
 13027 ;;		Unchanged: 0/0
 13028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13029 ;;      Params:        16       0       0       0       0       0       0
 13030 ;;      Locals:         2       0       0       0       0       0       0
 13031 ;;      Temps:          0       0       0       0       0       0       0
 13032 ;;      Totals:        18       0       0       0       0       0       0
 13033 ;;Total ram usage:       18 bytes
 13034 ;; Hardware stack levels used:    1
 13035 ;; Hardware stack levels required when called:    1
 13036 ;; This function calls:
 13037 ;;		Nothing
 13038 ;; This function is called by:
 13039 ;;		_dtoa
 13040 ;; This function uses a non-reentrant model
 13041 ;;
 13042                           
 13043                           	psect	text46
 13044  0046C4                     __ptext46:
 13045                           	callstack 0
 13046  0046C4                     ___aomod:
 13047                           	callstack 23
 13048  0046C4  0E00               	movlw	0
 13049  0046C6  6E12               	movwf	___aomod@sign^0,c
 13050  0046C8  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 13051  0046CA  EF6B  F023         	goto	u4420
 13052  0046CE  EF69  F023         	goto	u4421
 13053  0046D2                     u4421:
 13054  0046D2  EF7D  F023         	goto	l4184
 13055  0046D6                     u4420:
 13056  0046D6  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13057  0046D8  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13058  0046DA  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13059  0046DC  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13060  0046DE  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13061  0046E0  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13062  0046E2  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13063  0046E4  6C01               	negf	___aomod@dividend^0,c
 13064  0046E6  0E00               	movlw	0
 13065  0046E8  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13066  0046EA  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13067  0046EC  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13068  0046EE  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13069  0046F0  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13070  0046F2  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13071  0046F4  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13072  0046F6  0E01               	movlw	1
 13073  0046F8  6E12               	movwf	___aomod@sign^0,c
 13074  0046FA                     l4184:
 13075  0046FA  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 13076  0046FC  EF84  F023         	goto	u4430
 13077  004700  EF82  F023         	goto	u4431
 13078  004704                     u4431:
 13079  004704  EF94  F023         	goto	l4188
 13080  004708                     u4430:
 13081  004708  1E10               	comf	(___aomod@divisor+7)^0,f,c
 13082  00470A  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 13083  00470C  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 13084  00470E  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 13085  004710  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 13086  004712  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 13087  004714  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 13088  004716  6C09               	negf	___aomod@divisor^0,c
 13089  004718  0E00               	movlw	0
 13090  00471A  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 13091  00471C  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 13092  00471E  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 13093  004720  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 13094  004722  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 13095  004724  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 13096  004726  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 13097  004728                     l4188:
 13098  004728  5009               	movf	___aomod@divisor^0,w,c
 13099  00472A  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 13100  00472C  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 13101  00472E  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 13102  004730  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 13103  004732  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 13104  004734  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 13105  004736  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 13106  004738  B4D8               	btfsc	status,2,c
 13107  00473A  EFA1  F023         	goto	u4441
 13108  00473E  EFA3  F023         	goto	u4440
 13109  004742                     u4441:
 13110  004742  EFEB  F023         	goto	l4204
 13111  004746                     u4440:
 13112  004746  0E01               	movlw	1
 13113  004748  6E11               	movwf	___aomod@counter^0,c
 13114  00474A  EFB1  F023         	goto	l4194
 13115  00474E                     l4192:
 13116  00474E  90D8               	bcf	status,0,c
 13117  004750  3609               	rlcf	___aomod@divisor^0,f,c
 13118  004752  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 13119  004754  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 13120  004756  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 13121  004758  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 13122  00475A  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 13123  00475C  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 13124  00475E  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 13125  004760  2A11               	incf	___aomod@counter^0,f,c
 13126  004762                     l4194:
 13127  004762  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 13128  004764  EFB6  F023         	goto	u4451
 13129  004768  EFB8  F023         	goto	u4450
 13130  00476C                     u4451:
 13131  00476C  EFA7  F023         	goto	l4192
 13132  004770                     u4450:
 13133  004770                     l4196:
 13134  004770  5009               	movf	___aomod@divisor^0,w,c
 13135  004772  5C01               	subwf	___aomod@dividend^0,w,c
 13136  004774  500A               	movf	(___aomod@divisor+1)^0,w,c
 13137  004776  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 13138  004778  500B               	movf	(___aomod@divisor+2)^0,w,c
 13139  00477A  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 13140  00477C  500C               	movf	(___aomod@divisor+3)^0,w,c
 13141  00477E  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 13142  004780  500D               	movf	(___aomod@divisor+4)^0,w,c
 13143  004782  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 13144  004784  500E               	movf	(___aomod@divisor+5)^0,w,c
 13145  004786  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 13146  004788  500F               	movf	(___aomod@divisor+6)^0,w,c
 13147  00478A  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 13148  00478C  5010               	movf	(___aomod@divisor+7)^0,w,c
 13149  00478E  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 13150  004790  A0D8               	btfss	status,0,c
 13151  004792  EFCD  F023         	goto	u4461
 13152  004796  EFCF  F023         	goto	u4460
 13153  00479A                     u4461:
 13154  00479A  EFDF  F023         	goto	l4200
 13155  00479E                     u4460:
 13156  00479E  5009               	movf	___aomod@divisor^0,w,c
 13157  0047A0  5E01               	subwf	___aomod@dividend^0,f,c
 13158  0047A2  500A               	movf	(___aomod@divisor+1)^0,w,c
 13159  0047A4  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 13160  0047A6  500B               	movf	(___aomod@divisor+2)^0,w,c
 13161  0047A8  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 13162  0047AA  500C               	movf	(___aomod@divisor+3)^0,w,c
 13163  0047AC  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 13164  0047AE  500D               	movf	(___aomod@divisor+4)^0,w,c
 13165  0047B0  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 13166  0047B2  500E               	movf	(___aomod@divisor+5)^0,w,c
 13167  0047B4  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 13168  0047B6  500F               	movf	(___aomod@divisor+6)^0,w,c
 13169  0047B8  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 13170  0047BA  5010               	movf	(___aomod@divisor+7)^0,w,c
 13171  0047BC  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 13172  0047BE                     l4200:
 13173  0047BE  90D8               	bcf	status,0,c
 13174  0047C0  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 13175  0047C2  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 13176  0047C4  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 13177  0047C6  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 13178  0047C8  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 13179  0047CA  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 13180  0047CC  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 13181  0047CE  3209               	rrcf	___aomod@divisor^0,f,c
 13182  0047D0  2E11               	decfsz	___aomod@counter^0,f,c
 13183  0047D2  EFB8  F023         	goto	l4196
 13184  0047D6                     l4204:
 13185  0047D6  5012               	movf	___aomod@sign^0,w,c
 13186  0047D8  B4D8               	btfsc	status,2,c
 13187  0047DA  EFF1  F023         	goto	u4471
 13188  0047DE  EFF3  F023         	goto	u4470
 13189  0047E2                     u4471:
 13190  0047E2  EF03  F024         	goto	l4208
 13191  0047E6                     u4470:
 13192  0047E6  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13193  0047E8  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13194  0047EA  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13195  0047EC  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13196  0047EE  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13197  0047F0  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13198  0047F2  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13199  0047F4  6C01               	negf	___aomod@dividend^0,c
 13200  0047F6  0E00               	movlw	0
 13201  0047F8  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13202  0047FA  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13203  0047FC  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13204  0047FE  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13205  004800  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13206  004802  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13207  004804  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13208  004806                     l4208:
 13209  004806  C001  F001         	movff	___aomod@dividend,?___aomod
 13210  00480A  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 13211  00480E  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 13212  004812  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 13213  004816  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 13214  00481A  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 13215  00481E  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 13216  004822  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 13217  004826  0012               	return		;funcret
 13218  004828                     __end_of___aomod:
 13219                           	callstack 0
 13220                           
 13221 ;; *************** function ___aodiv *****************
 13222 ;; Defined at:
 13223 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
 13224 ;; Parameters:    Size  Location     Type
 13225 ;;  dividend        8    0[COMRAM] long long 
 13226 ;;  divisor         8    8[COMRAM] long long 
 13227 ;; Auto vars:     Size  Location     Type
 13228 ;;  quotient        8   18[COMRAM] long long 
 13229 ;;  sign            1   17[COMRAM] unsigned char 
 13230 ;;  counter         1   16[COMRAM] unsigned char 
 13231 ;; Return value:  Size  Location     Type
 13232 ;;                  8    0[COMRAM] long long 
 13233 ;; Registers used:
 13234 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13235 ;; Tracked objects:
 13236 ;;		On entry : 0/0
 13237 ;;		On exit  : 0/0
 13238 ;;		Unchanged: 0/0
 13239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13240 ;;      Params:        16       0       0       0       0       0       0
 13241 ;;      Locals:        10       0       0       0       0       0       0
 13242 ;;      Temps:          0       0       0       0       0       0       0
 13243 ;;      Totals:        26       0       0       0       0       0       0
 13244 ;;Total ram usage:       26 bytes
 13245 ;; Hardware stack levels used:    1
 13246 ;; Hardware stack levels required when called:    1
 13247 ;; This function calls:
 13248 ;;		Nothing
 13249 ;; This function is called by:
 13250 ;;		_dtoa
 13251 ;; This function uses a non-reentrant model
 13252 ;;
 13253                           
 13254                           	psect	text47
 13255  0043B8                     __ptext47:
 13256                           	callstack 0
 13257  0043B8                     ___aodiv:
 13258                           	callstack 23
 13259  0043B8  0E00               	movlw	0
 13260  0043BA  6E12               	movwf	___aodiv@sign^0,c
 13261  0043BC  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 13262  0043BE  EFE5  F021         	goto	u4350
 13263  0043C2  EFE3  F021         	goto	u4351
 13264  0043C6                     u4351:
 13265  0043C6  EFF7  F021         	goto	l4140
 13266  0043CA                     u4350:
 13267  0043CA  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 13268  0043CC  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 13269  0043CE  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 13270  0043D0  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 13271  0043D2  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 13272  0043D4  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 13273  0043D6  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 13274  0043D8  6C09               	negf	___aodiv@divisor^0,c
 13275  0043DA  0E00               	movlw	0
 13276  0043DC  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 13277  0043DE  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 13278  0043E0  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 13279  0043E2  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 13280  0043E4  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 13281  0043E6  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 13282  0043E8  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 13283  0043EA  0E01               	movlw	1
 13284  0043EC  6E12               	movwf	___aodiv@sign^0,c
 13285  0043EE                     l4140:
 13286  0043EE  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 13287  0043F0  EFFE  F021         	goto	u4360
 13288  0043F4  EFFC  F021         	goto	u4361
 13289  0043F8                     u4361:
 13290  0043F8  EF10  F022         	goto	l4146
 13291  0043FC                     u4360:
 13292  0043FC  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 13293  0043FE  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 13294  004400  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 13295  004402  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 13296  004404  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 13297  004406  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 13298  004408  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 13299  00440A  6C01               	negf	___aodiv@dividend^0,c
 13300  00440C  0E00               	movlw	0
 13301  00440E  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 13302  004410  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 13303  004412  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 13304  004414  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 13305  004416  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 13306  004418  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 13307  00441A  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 13308  00441C  0E01               	movlw	1
 13309  00441E  1A12               	xorwf	___aodiv@sign^0,f,c
 13310  004420                     l4146:
 13311  004420  EE20  F013         	lfsr	2,___aodiv@quotient
 13312  004424  0E07               	movlw	7
 13313  004426                     u4371:
 13314  004426  6ADE               	clrf	postinc2,c
 13315  004428  06E8               	decf	wreg,f,c
 13316  00442A  E2FD               	bc	u4371
 13317  00442C  5009               	movf	___aodiv@divisor^0,w,c
 13318  00442E  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 13319  004430  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 13320  004432  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 13321  004434  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 13322  004436  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 13323  004438  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 13324  00443A  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 13325  00443C  B4D8               	btfsc	status,2,c
 13326  00443E  EF23  F022         	goto	u4381
 13327  004442  EF25  F022         	goto	u4380
 13328  004446                     u4381:
 13329  004446  EF77  F022         	goto	l4168
 13330  00444A                     u4380:
 13331  00444A  0E01               	movlw	1
 13332  00444C  6E11               	movwf	___aodiv@counter^0,c
 13333  00444E  EF33  F022         	goto	l4154
 13334  004452                     l4152:
 13335  004452  90D8               	bcf	status,0,c
 13336  004454  3609               	rlcf	___aodiv@divisor^0,f,c
 13337  004456  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 13338  004458  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 13339  00445A  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 13340  00445C  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 13341  00445E  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 13342  004460  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 13343  004462  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 13344  004464  2A11               	incf	___aodiv@counter^0,f,c
 13345  004466                     l4154:
 13346  004466  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 13347  004468  EF38  F022         	goto	u4391
 13348  00446C  EF3A  F022         	goto	u4390
 13349  004470                     u4391:
 13350  004470  EF29  F022         	goto	l4152
 13351  004474                     u4390:
 13352  004474                     l4156:
 13353  004474  90D8               	bcf	status,0,c
 13354  004476  3613               	rlcf	___aodiv@quotient^0,f,c
 13355  004478  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 13356  00447A  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 13357  00447C  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 13358  00447E  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 13359  004480  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 13360  004482  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 13361  004484  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 13362  004486  5009               	movf	___aodiv@divisor^0,w,c
 13363  004488  5C01               	subwf	___aodiv@dividend^0,w,c
 13364  00448A  500A               	movf	(___aodiv@divisor+1)^0,w,c
 13365  00448C  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 13366  00448E  500B               	movf	(___aodiv@divisor+2)^0,w,c
 13367  004490  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 13368  004492  500C               	movf	(___aodiv@divisor+3)^0,w,c
 13369  004494  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 13370  004496  500D               	movf	(___aodiv@divisor+4)^0,w,c
 13371  004498  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 13372  00449A  500E               	movf	(___aodiv@divisor+5)^0,w,c
 13373  00449C  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 13374  00449E  500F               	movf	(___aodiv@divisor+6)^0,w,c
 13375  0044A0  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 13376  0044A2  5010               	movf	(___aodiv@divisor+7)^0,w,c
 13377  0044A4  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 13378  0044A6  A0D8               	btfss	status,0,c
 13379  0044A8  EF58  F022         	goto	u4401
 13380  0044AC  EF5A  F022         	goto	u4400
 13381  0044B0                     u4401:
 13382  0044B0  EF6B  F022         	goto	l4164
 13383  0044B4                     u4400:
 13384  0044B4  5009               	movf	___aodiv@divisor^0,w,c
 13385  0044B6  5E01               	subwf	___aodiv@dividend^0,f,c
 13386  0044B8  500A               	movf	(___aodiv@divisor+1)^0,w,c
 13387  0044BA  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 13388  0044BC  500B               	movf	(___aodiv@divisor+2)^0,w,c
 13389  0044BE  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 13390  0044C0  500C               	movf	(___aodiv@divisor+3)^0,w,c
 13391  0044C2  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 13392  0044C4  500D               	movf	(___aodiv@divisor+4)^0,w,c
 13393  0044C6  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 13394  0044C8  500E               	movf	(___aodiv@divisor+5)^0,w,c
 13395  0044CA  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 13396  0044CC  500F               	movf	(___aodiv@divisor+6)^0,w,c
 13397  0044CE  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 13398  0044D0  5010               	movf	(___aodiv@divisor+7)^0,w,c
 13399  0044D2  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 13400  0044D4  8013               	bsf	___aodiv@quotient^0,0,c
 13401  0044D6                     l4164:
 13402  0044D6  90D8               	bcf	status,0,c
 13403  0044D8  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 13404  0044DA  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 13405  0044DC  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 13406  0044DE  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 13407  0044E0  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 13408  0044E2  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 13409  0044E4  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 13410  0044E6  3209               	rrcf	___aodiv@divisor^0,f,c
 13411  0044E8  2E11               	decfsz	___aodiv@counter^0,f,c
 13412  0044EA  EF3A  F022         	goto	l4156
 13413  0044EE                     l4168:
 13414  0044EE  5012               	movf	___aodiv@sign^0,w,c
 13415  0044F0  B4D8               	btfsc	status,2,c
 13416  0044F2  EF7D  F022         	goto	u4411
 13417  0044F6  EF7F  F022         	goto	u4410
 13418  0044FA                     u4411:
 13419  0044FA  EF8F  F022         	goto	l4172
 13420  0044FE                     u4410:
 13421  0044FE  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 13422  004500  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 13423  004502  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 13424  004504  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 13425  004506  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 13426  004508  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 13427  00450A  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 13428  00450C  6C13               	negf	___aodiv@quotient^0,c
 13429  00450E  0E00               	movlw	0
 13430  004510  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 13431  004512  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 13432  004514  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 13433  004516  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 13434  004518  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 13435  00451A  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 13436  00451C  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 13437  00451E                     l4172:
 13438  00451E  C013  F001         	movff	___aodiv@quotient,?___aodiv
 13439  004522  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 13440  004526  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 13441  00452A  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 13442  00452E  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 13443  004532  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 13444  004536  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 13445  00453A  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 13446  00453E  0012               	return		;funcret
 13447  004540                     __end_of___aodiv:
 13448                           	callstack 0
 13449                           
 13450 ;; *************** function _atoi *****************
 13451 ;; Defined at:
 13452 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
 13453 ;; Parameters:    Size  Location     Type
 13454 ;;  s               2    7[COMRAM] PTR const unsigned char 
 13455 ;;		 -> STR_16(13), STR_14(14), STR_12(16), STR_10(16), 
 13456 ;;		 -> STR_8(18), STR_6(18), STR_4(18), STR_2(15), 
 13457 ;; Auto vars:     Size  Location     Type
 13458 ;;  n               2   20[COMRAM] int 
 13459 ;;  neg             2   13[COMRAM] int 
 13460 ;; Return value:  Size  Location     Type
 13461 ;;                  2    7[COMRAM] int 
 13462 ;; Registers used:
 13463 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13464 ;; Tracked objects:
 13465 ;;		On entry : 0/0
 13466 ;;		On exit  : 0/0
 13467 ;;		Unchanged: 0/0
 13468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13469 ;;      Params:         2       0       0       0       0       0       0
 13470 ;;      Locals:         9       0       0       0       0       0       0
 13471 ;;      Temps:          4       0       0       0       0       0       0
 13472 ;;      Totals:        15       0       0       0       0       0       0
 13473 ;;Total ram usage:       15 bytes
 13474 ;; Hardware stack levels used:    1
 13475 ;; Hardware stack levels required when called:    2
 13476 ;; This function calls:
 13477 ;;		___wmul
 13478 ;;		_isdigit
 13479 ;;		_isspace
 13480 ;; This function is called by:
 13481 ;;		_vfpfcnvrt
 13482 ;; This function uses a non-reentrant model
 13483 ;;
 13484                           
 13485                           	psect	text48
 13486  004228                     __ptext48:
 13487                           	callstack 0
 13488  004228                     _atoi:
 13489                           	callstack 23
 13490  004228  0E00               	movlw	0
 13491  00422A  6E16               	movwf	(atoi@n+1)^0,c
 13492  00422C  0E00               	movlw	0
 13493  00422E  6E15               	movwf	atoi@n^0,c
 13494  004230  0E00               	movlw	0
 13495  004232  6E0F               	movwf	(atoi@neg+1)^0,c
 13496  004234  0E00               	movlw	0
 13497  004236  6E0E               	movwf	atoi@neg^0,c
 13498  004238  EF20  F021         	goto	l5126
 13499  00423C                     l5124:
 13500  00423C  4A08               	infsnz	atoi@s^0,f,c
 13501  00423E  2A09               	incf	(atoi@s+1)^0,f,c
 13502  004240                     l5126:
 13503  004240  0E01               	movlw	1
 13504  004242  6E14               	movwf	_atoi$2573^0,c
 13505  004244  C008  FFF6         	movff	atoi@s,tblptrl
 13506  004248  C009  FFF7         	movff	atoi@s+1,tblptrh
 13507  00424C                     	if	0	;tblptru may be non-zero
 13508  00424C                     	endif
 13509  00424C                     	if	0	;tblptru may be non-zero
 13510  00424C                     	endif
 13511  00424C  0008               	tblrd		*
 13512  00424E  50F5               	movf	tablat,w,c
 13513  004250  0A20               	xorlw	32
 13514  004252  B4D8               	btfsc	status,2,c
 13515  004254  EF2E  F021         	goto	u6161
 13516  004258  EF30  F021         	goto	u6160
 13517  00425C                     u6161:
 13518  00425C  EF4D  F021         	goto	l5134
 13519  004260                     u6160:
 13520  004260  0EF7               	movlw	247
 13521  004262  6E0A               	movwf	??_atoi^0,c
 13522  004264  0EFF               	movlw	255
 13523  004266  6E0B               	movwf	(??_atoi+1)^0,c
 13524  004268  C008  FFF6         	movff	atoi@s,tblptrl
 13525  00426C  C009  FFF7         	movff	atoi@s+1,tblptrh
 13526  004270                     	if	0	;tblptru may be non-zero
 13527  004270                     	endif
 13528  004270                     	if	0	;tblptru may be non-zero
 13529  004270                     	endif
 13530  004270  0008               	tblrd		*
 13531  004272  50F5               	movf	tablat,w,c
 13532  004274  6E0C               	movwf	(??_atoi+2)^0,c
 13533  004276  6A0D               	clrf	(??_atoi+3)^0,c
 13534  004278  500A               	movf	??_atoi^0,w,c
 13535  00427A  260C               	addwf	(??_atoi+2)^0,f,c
 13536  00427C  500B               	movf	(??_atoi+1)^0,w,c
 13537  00427E  220D               	addwfc	(??_atoi+3)^0,f,c
 13538  004280  500D               	movf	(??_atoi+3)^0,w,c
 13539  004282  E109               	bnz	u6170
 13540  004284  0E05               	movlw	5
 13541  004286  5C0C               	subwf	(??_atoi+2)^0,w,c
 13542  004288  A0D8               	btfss	status,0,c
 13543  00428A  EF49  F021         	goto	u6171
 13544  00428E  EF4B  F021         	goto	u6170
 13545  004292                     u6171:
 13546  004292  EF4D  F021         	goto	l5134
 13547  004296                     u6170:
 13548  004296  0E00               	movlw	0
 13549  004298  6E14               	movwf	_atoi$2573^0,c
 13550  00429A                     l5134:
 13551  00429A  C014  F010         	movff	_atoi$2573,_atoi$2572
 13552  00429E  6A11               	clrf	(_atoi$2572+1)^0,c
 13553  0042A0  5010               	movf	_atoi$2572^0,w,c
 13554  0042A2  1011               	iorwf	(_atoi$2572+1)^0,w,c
 13555  0042A4  A4D8               	btfss	status,2,c
 13556  0042A6  EF57  F021         	goto	u6181
 13557  0042AA  EF59  F021         	goto	u6180
 13558  0042AE                     u6181:
 13559  0042AE  EF1E  F021         	goto	l5124
 13560  0042B2                     u6180:
 13561  0042B2  EF63  F021         	goto	l5144
 13562  0042B6                     l5140:
 13563  0042B6  0E00               	movlw	0
 13564  0042B8  6E0F               	movwf	(atoi@neg+1)^0,c
 13565  0042BA  0E01               	movlw	1
 13566  0042BC  6E0E               	movwf	atoi@neg^0,c
 13567  0042BE                     l5142:
 13568  0042BE  4A08               	infsnz	atoi@s^0,f,c
 13569  0042C0  2A09               	incf	(atoi@s+1)^0,f,c
 13570  0042C2  EF98  F021         	goto	l5150
 13571  0042C6                     l5144:
 13572  0042C6  C008  FFF6         	movff	atoi@s,tblptrl
 13573  0042CA  C009  FFF7         	movff	atoi@s+1,tblptrh
 13574  0042CE                     	if	0	;tblptru may be non-zero
 13575  0042CE                     	endif
 13576  0042CE                     	if	0	;tblptru may be non-zero
 13577  0042CE                     	endif
 13578  0042CE  0008               	tblrd		*
 13579  0042D0  50F5               	movf	tablat,w,c
 13580  0042D2  6E0A               	movwf	??_atoi^0,c
 13581  0042D4  6A0B               	clrf	(??_atoi+1)^0,c
 13582                           
 13583                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13584                           ; Switch size 1, requested type "simple"
 13585                           ; Number of cases is 1, Range of values is 0 to 0
 13586                           ; switch strategies available:
 13587                           ; Name         Instructions Cycles
 13588                           ; simple_byte            4     3 (average)
 13589                           ;	Chosen strategy is simple_byte
 13590  0042D6  500B               	movf	(??_atoi+1)^0,w,c
 13591  0042D8  0A00               	xorlw	0	; case 0
 13592  0042DA  B4D8               	btfsc	status,2,c
 13593  0042DC  EF72  F021         	goto	l6272
 13594  0042E0  EF98  F021         	goto	l5150
 13595  0042E4                     l6272:
 13596                           
 13597                           ; Switch size 1, requested type "simple"
 13598                           ; Number of cases is 2, Range of values is 43 to 45
 13599                           ; switch strategies available:
 13600                           ; Name         Instructions Cycles
 13601                           ; simple_byte            7     4 (average)
 13602                           ;	Chosen strategy is simple_byte
 13603  0042E4  500A               	movf	??_atoi^0,w,c
 13604  0042E6  0A2B               	xorlw	43	; case 43
 13605  0042E8  B4D8               	btfsc	status,2,c
 13606  0042EA  EF5F  F021         	goto	l5142
 13607  0042EE  0A06               	xorlw	6	; case 45
 13608  0042F0  B4D8               	btfsc	status,2,c
 13609  0042F2  EF5B  F021         	goto	l5140
 13610  0042F6  EF98  F021         	goto	l5150
 13611  0042FA                     l5146:
 13612  0042FA  C015  F001         	movff	atoi@n,___wmul@multiplier
 13613  0042FE  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 13614  004302  0E00               	movlw	0
 13615  004304  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 13616  004306  0E0A               	movlw	10
 13617  004308  6E03               	movwf	___wmul@multiplicand^0,c
 13618  00430A  ECD7  F02D         	call	___wmul	;wreg free
 13619  00430E  C008  FFF6         	movff	atoi@s,tblptrl
 13620  004312  C009  FFF7         	movff	atoi@s+1,tblptrh
 13621  004316                     	if	0	;tblptru may be non-zero
 13622  004316                     	endif
 13623  004316                     	if	0	;tblptru may be non-zero
 13624  004316                     	endif
 13625  004316  0008               	tblrd		*
 13626  004318  50F5               	movf	tablat,w,c
 13627  00431A  5E01               	subwf	?___wmul^0,f,c
 13628  00431C  0E00               	movlw	0
 13629  00431E  5A02               	subwfb	(?___wmul+1)^0,f,c
 13630  004320  0E30               	movlw	48
 13631  004322  2401               	addwf	?___wmul^0,w,c
 13632  004324  6E15               	movwf	atoi@n^0,c
 13633  004326  0E00               	movlw	0
 13634  004328  2002               	addwfc	(?___wmul+1)^0,w,c
 13635  00432A  6E16               	movwf	(atoi@n+1)^0,c
 13636  00432C  EF5F  F021         	goto	l5142
 13637  004330                     l5150:
 13638  004330  0ED0               	movlw	208
 13639  004332  6E0A               	movwf	??_atoi^0,c
 13640  004334  0EFF               	movlw	255
 13641  004336  6E0B               	movwf	(??_atoi+1)^0,c
 13642  004338  C008  FFF6         	movff	atoi@s,tblptrl
 13643  00433C  C009  FFF7         	movff	atoi@s+1,tblptrh
 13644  004340                     	if	0	;tblptru may be non-zero
 13645  004340                     	endif
 13646  004340                     	if	0	;tblptru may be non-zero
 13647  004340                     	endif
 13648  004340  0008               	tblrd		*
 13649  004342  50F5               	movf	tablat,w,c
 13650  004344  6E0C               	movwf	(??_atoi+2)^0,c
 13651  004346  6A0D               	clrf	(??_atoi+3)^0,c
 13652  004348  500A               	movf	??_atoi^0,w,c
 13653  00434A  260C               	addwf	(??_atoi+2)^0,f,c
 13654  00434C  500B               	movf	(??_atoi+1)^0,w,c
 13655  00434E  220D               	addwfc	(??_atoi+3)^0,f,c
 13656  004350  500D               	movf	(??_atoi+3)^0,w,c
 13657  004352  E10A               	bnz	u6190
 13658  004354  0E0A               	movlw	10
 13659  004356  5C0C               	subwf	(??_atoi+2)^0,w,c
 13660  004358  A0D8               	btfss	status,0,c
 13661  00435A  EFB1  F021         	goto	u6191
 13662  00435E  EFB4  F021         	goto	u6190
 13663  004362                     u6191:
 13664  004362  0E01               	movlw	1
 13665  004364  EFB5  F021         	goto	u6200
 13666  004368                     u6190:
 13667  004368  0E00               	movlw	0
 13668  00436A                     u6200:
 13669  00436A  6E12               	movwf	_atoi$2574^0,c
 13670  00436C  6A13               	clrf	(_atoi$2574+1)^0,c
 13671  00436E  5012               	movf	_atoi$2574^0,w,c
 13672  004370  1013               	iorwf	(_atoi$2574+1)^0,w,c
 13673  004372  A4D8               	btfss	status,2,c
 13674  004374  EFBE  F021         	goto	u6211
 13675  004378  EFC0  F021         	goto	u6210
 13676  00437C                     u6211:
 13677  00437C  EF7D  F021         	goto	l5146
 13678  004380                     u6210:
 13679  004380  500E               	movf	atoi@neg^0,w,c
 13680  004382  100F               	iorwf	(atoi@neg+1)^0,w,c
 13681  004384  A4D8               	btfss	status,2,c
 13682  004386  EFC7  F021         	goto	u6221
 13683  00438A  EFC9  F021         	goto	u6220
 13684  00438E                     u6221:
 13685  00438E  EFD7  F021         	goto	l1425
 13686  004392                     u6220:
 13687  004392  C015  F00A         	movff	atoi@n,??_atoi
 13688  004396  C016  F00B         	movff	atoi@n+1,??_atoi+1
 13689  00439A  1E0A               	comf	??_atoi^0,f,c
 13690  00439C  1E0B               	comf	(??_atoi+1)^0,f,c
 13691  00439E  4A0A               	infsnz	??_atoi^0,f,c
 13692  0043A0  2A0B               	incf	(??_atoi+1)^0,f,c
 13693  0043A2  C00A  F008         	movff	??_atoi,?_atoi
 13694  0043A6  C00B  F009         	movff	??_atoi+1,?_atoi+1
 13695  0043AA  EFDB  F021         	goto	l1428
 13696  0043AE                     l1425:
 13697  0043AE  C015  F008         	movff	atoi@n,?_atoi
 13698  0043B2  C016  F009         	movff	atoi@n+1,?_atoi+1
 13699  0043B6                     l1428:
 13700  0043B6  0012               	return		;funcret
 13701  0043B8                     __end_of_atoi:
 13702                           	callstack 0
 13703                           
 13704 ;; *************** function _isspace *****************
 13705 ;; Defined at:
 13706 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
 13707 ;; Parameters:    Size  Location     Type
 13708 ;;  c               2    0[COMRAM] int 
 13709 ;; Auto vars:     Size  Location     Type
 13710 ;;		None
 13711 ;; Return value:  Size  Location     Type
 13712 ;;                  2    0[COMRAM] int 
 13713 ;; Registers used:
 13714 ;;		wreg, status,2, status,0
 13715 ;; Tracked objects:
 13716 ;;		On entry : 0/0
 13717 ;;		On exit  : 0/0
 13718 ;;		Unchanged: 0/0
 13719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13720 ;;      Params:         2       0       0       0       0       0       0
 13721 ;;      Locals:         1       0       0       0       0       0       0
 13722 ;;      Temps:          4       0       0       0       0       0       0
 13723 ;;      Totals:         7       0       0       0       0       0       0
 13724 ;;Total ram usage:        7 bytes
 13725 ;; Hardware stack levels used:    1
 13726 ;; Hardware stack levels required when called:    1
 13727 ;; This function calls:
 13728 ;;		Nothing
 13729 ;; This function is called by:
 13730 ;;		_atoi
 13731 ;; This function uses a non-reentrant model
 13732 ;;
 13733                           
 13734                           	psect	text49
 13735  0057DA                     __ptext49:
 13736                           	callstack 0
 13737  0057DA                     _isspace:
 13738                           	callstack 23
 13739  0057DA  0E01               	movlw	1
 13740  0057DC  6E07               	movwf	_isspace$2603^0,c
 13741  0057DE  0E20               	movlw	32
 13742  0057E0  1801               	xorwf	isspace@c^0,w,c
 13743  0057E2  1002               	iorwf	(isspace@c+1)^0,w,c
 13744  0057E4  B4D8               	btfsc	status,2,c
 13745  0057E6  EFF7  F02B         	goto	u5471
 13746  0057EA  EFF9  F02B         	goto	u5470
 13747  0057EE                     u5471:
 13748  0057EE  EF12  F02C         	goto	l4758
 13749  0057F2                     u5470:
 13750  0057F2  0EF7               	movlw	247
 13751  0057F4  6E03               	movwf	??_isspace^0,c
 13752  0057F6  0EFF               	movlw	255
 13753  0057F8  6E04               	movwf	(??_isspace+1)^0,c
 13754  0057FA  C001  F005         	movff	isspace@c,??_isspace+2
 13755  0057FE  C002  F006         	movff	isspace@c+1,??_isspace+3
 13756  005802  5003               	movf	??_isspace^0,w,c
 13757  005804  2605               	addwf	(??_isspace+2)^0,f,c
 13758  005806  5004               	movf	(??_isspace+1)^0,w,c
 13759  005808  2206               	addwfc	(??_isspace+3)^0,f,c
 13760  00580A  5006               	movf	(??_isspace+3)^0,w,c
 13761  00580C  E109               	bnz	u5480
 13762  00580E  0E05               	movlw	5
 13763  005810  5C05               	subwf	(??_isspace+2)^0,w,c
 13764  005812  A0D8               	btfss	status,0,c
 13765  005814  EF0E  F02C         	goto	u5481
 13766  005818  EF10  F02C         	goto	u5480
 13767  00581C                     u5481:
 13768  00581C  EF12  F02C         	goto	l4758
 13769  005820                     u5480:
 13770  005820  0E00               	movlw	0
 13771  005822  6E07               	movwf	_isspace$2603^0,c
 13772  005824                     l4758:
 13773  005824  C007  F001         	movff	_isspace$2603,?_isspace
 13774  005828  6A02               	clrf	(?_isspace+1)^0,c
 13775  00582A  0012               	return		;funcret
 13776  00582C                     __end_of_isspace:
 13777                           	callstack 0
 13778                           
 13779 ;; *************** function _isdigit *****************
 13780 ;; Defined at:
 13781 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
 13782 ;; Parameters:    Size  Location     Type
 13783 ;;  c               2    0[COMRAM] int 
 13784 ;; Auto vars:     Size  Location     Type
 13785 ;;		None
 13786 ;; Return value:  Size  Location     Type
 13787 ;;                  2    0[COMRAM] int 
 13788 ;; Registers used:
 13789 ;;		wreg, status,2, status,0
 13790 ;; Tracked objects:
 13791 ;;		On entry : 0/0
 13792 ;;		On exit  : 0/0
 13793 ;;		Unchanged: 0/0
 13794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13795 ;;      Params:         2       0       0       0       0       0       0
 13796 ;;      Locals:         0       0       0       0       0       0       0
 13797 ;;      Temps:          4       0       0       0       0       0       0
 13798 ;;      Totals:         6       0       0       0       0       0       0
 13799 ;;Total ram usage:        6 bytes
 13800 ;; Hardware stack levels used:    1
 13801 ;; Hardware stack levels required when called:    1
 13802 ;; This function calls:
 13803 ;;		Nothing
 13804 ;; This function is called by:
 13805 ;;		_vfpfcnvrt
 13806 ;;		_atoi
 13807 ;; This function uses a non-reentrant model
 13808 ;;
 13809                           
 13810                           	psect	text50
 13811  005A22                     __ptext50:
 13812                           	callstack 0
 13813  005A22                     _isdigit:
 13814                           	callstack 24
 13815  005A22  0ED0               	movlw	208
 13816  005A24  6E03               	movwf	??_isdigit^0,c
 13817  005A26  0EFF               	movlw	255
 13818  005A28  6E04               	movwf	(??_isdigit+1)^0,c
 13819  005A2A  C001  F005         	movff	isdigit@c,??_isdigit+2
 13820  005A2E  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 13821  005A32  5003               	movf	??_isdigit^0,w,c
 13822  005A34  2605               	addwf	(??_isdigit+2)^0,f,c
 13823  005A36  5004               	movf	(??_isdigit+1)^0,w,c
 13824  005A38  2206               	addwfc	(??_isdigit+3)^0,f,c
 13825  005A3A  5006               	movf	(??_isdigit+3)^0,w,c
 13826  005A3C  E10A               	bnz	u5450
 13827  005A3E  0E0A               	movlw	10
 13828  005A40  5C05               	subwf	(??_isdigit+2)^0,w,c
 13829  005A42  A0D8               	btfss	status,0,c
 13830  005A44  EF26  F02D         	goto	u5451
 13831  005A48  EF29  F02D         	goto	u5450
 13832  005A4C                     u5451:
 13833  005A4C  0E01               	movlw	1
 13834  005A4E  EF2A  F02D         	goto	u5460
 13835  005A52                     u5450:
 13836  005A52  0E00               	movlw	0
 13837  005A54                     u5460:
 13838  005A54  6E01               	movwf	?_isdigit^0,c
 13839  005A56  6A02               	clrf	(?_isdigit+1)^0,c
 13840  005A58  0012               	return		;funcret
 13841  005A5A                     __end_of_isdigit:
 13842                           	callstack 0
 13843                           
 13844 ;; *************** function ___wmul *****************
 13845 ;; Defined at:
 13846 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
 13847 ;; Parameters:    Size  Location     Type
 13848 ;;  multiplier      2    0[COMRAM] unsigned int 
 13849 ;;  multiplicand    2    2[COMRAM] unsigned int 
 13850 ;; Auto vars:     Size  Location     Type
 13851 ;;  product         2    4[COMRAM] unsigned int 
 13852 ;; Return value:  Size  Location     Type
 13853 ;;                  2    0[COMRAM] unsigned int 
 13854 ;; Registers used:
 13855 ;;		wreg, status,2, status,0, prodl, prodh
 13856 ;; Tracked objects:
 13857 ;;		On entry : 0/0
 13858 ;;		On exit  : 0/0
 13859 ;;		Unchanged: 0/0
 13860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13861 ;;      Params:         4       0       0       0       0       0       0
 13862 ;;      Locals:         2       0       0       0       0       0       0
 13863 ;;      Temps:          0       0       0       0       0       0       0
 13864 ;;      Totals:         6       0       0       0       0       0       0
 13865 ;;Total ram usage:        6 bytes
 13866 ;; Hardware stack levels used:    1
 13867 ;; Hardware stack levels required when called:    1
 13868 ;; This function calls:
 13869 ;;		Nothing
 13870 ;; This function is called by:
 13871 ;;		_atoi
 13872 ;; This function uses a non-reentrant model
 13873 ;;
 13874                           
 13875                           	psect	text51
 13876  005BAE                     __ptext51:
 13877                           	callstack 0
 13878  005BAE                     ___wmul:
 13879                           	callstack 23
 13880  005BAE  5001               	movf	___wmul@multiplier^0,w,c
 13881  005BB0  0203               	mulwf	___wmul@multiplicand^0,c
 13882  005BB2  CFF3 F005          	movff	prodl,___wmul@product
 13883  005BB6  CFF4 F006          	movff	prodh,___wmul@product+1
 13884  005BBA  5001               	movf	___wmul@multiplier^0,w,c
 13885  005BBC  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 13886  005BBE  50F3               	movf	243,w,c
 13887  005BC0  2606               	addwf	(___wmul@product+1)^0,f,c
 13888  005BC2  5002               	movf	(___wmul@multiplier+1)^0,w,c
 13889  005BC4  0203               	mulwf	___wmul@multiplicand^0,c
 13890  005BC6  50F3               	movf	243,w,c
 13891  005BC8  2606               	addwf	(___wmul@product+1)^0,f,c
 13892  005BCA  C005  F001         	movff	___wmul@product,?___wmul
 13893  005BCE  C006  F002         	movff	___wmul@product+1,?___wmul+1
 13894  005BD2  0012               	return		;funcret
 13895  005BD4                     __end_of___wmul:
 13896                           	callstack 0
 13897                           
 13898 ;; *************** function _eepromWrite *****************
 13899 ;; Defined at:
 13900 ;;		line 62 in file "fs_eeprom.c"
 13901 ;; Parameters:    Size  Location     Type
 13902 ;;  address         1    wreg     unsigned char 
 13903 ;;  data            1    0[COMRAM] unsigned char 
 13904 ;; Auto vars:     Size  Location     Type
 13905 ;;  address         1    1[COMRAM] unsigned char 
 13906 ;; Return value:  Size  Location     Type
 13907 ;;                  1    wreg      void 
 13908 ;; Registers used:
 13909 ;;		wreg, status,2
 13910 ;; Tracked objects:
 13911 ;;		On entry : 0/0
 13912 ;;		On exit  : 0/0
 13913 ;;		Unchanged: 0/0
 13914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13915 ;;      Params:         1       0       0       0       0       0       0
 13916 ;;      Locals:         1       0       0       0       0       0       0
 13917 ;;      Temps:          0       0       0       0       0       0       0
 13918 ;;      Totals:         2       0       0       0       0       0       0
 13919 ;;Total ram usage:        2 bytes
 13920 ;; Hardware stack levels used:    1
 13921 ;; Hardware stack levels required when called:    1
 13922 ;; This function calls:
 13923 ;;		Nothing
 13924 ;; This function is called by:
 13925 ;;		_stateMachine
 13926 ;; This function uses a non-reentrant model
 13927 ;;
 13928                           
 13929                           	psect	text52
 13930  005B30                     __ptext52:
 13931                           	callstack 0
 13932  005B30                     _eepromWrite:
 13933                           	callstack 27
 13934                           
 13935                           ;incstack = 0
 13936                           ;eepromWrite@address stored from wreg
 13937  005B30  6E02               	movwf	eepromWrite@address^0,c
 13938  005B32                     
 13939                           ;fs_eeprom.c: 62: void eepromWrite(uint8_t address, uint8_t data);fs_eeprom.c: 63: {;fs_
      +                          eeprom.c: 66:     EEADR = (uint8_t)address;
 13940  005B32  C002  FFA9         	movff	eepromWrite@address,4009	;volatile
 13941  005B36                     
 13942                           ;fs_eeprom.c: 68:     EEDATA = data;
 13943  005B36  C001  FFA8         	movff	eepromWrite@data,4008	;volatile
 13944  005B3A                     
 13945                           ;fs_eeprom.c: 69:     EECON1bits.EEPGD = 0;
 13946  005B3A  9EA6               	bcf	166,7,c	;volsfr
 13947  005B3C                     
 13948                           ;fs_eeprom.c: 70:     EECON1bits.CFGS = 0;
 13949  005B3C  9CA6               	bcf	166,6,c	;volsfr
 13950  005B3E                     
 13951                           ;fs_eeprom.c: 71:     EECON1bits.WREN = 1;
 13952  005B3E  84A6               	bsf	166,2,c	;volsfr
 13953  005B40                     
 13954                           ;fs_eeprom.c: 75:     EECON2 = 0x55;
 13955  005B40  0E55               	movlw	85
 13956  005B42  6EA7               	movwf	167,c	;volsfr
 13957  005B44                     
 13958                           ;fs_eeprom.c: 76:     EECON2 = 0xAA;
 13959  005B44  0EAA               	movlw	170
 13960  005B46  6EA7               	movwf	167,c	;volsfr
 13961  005B48                     
 13962                           ;fs_eeprom.c: 77:     EECON1bits.WR = 1;
 13963  005B48  82A6               	bsf	166,1,c	;volsfr
 13964  005B4A                     l76:
 13965                           
 13966                           ;fs_eeprom.c: 80:     while(PIR2bits.EEIF == 0)
 13967  005B4A  A8A1               	btfss	161,4,c	;volatile
 13968  005B4C  EFAA  F02D         	goto	u6761
 13969  005B50  EFAC  F02D         	goto	u6760
 13970  005B54                     u6761:
 13971  005B54  EFA5  F02D         	goto	l76
 13972  005B58                     u6760:
 13973  005B58                     
 13974                           ;fs_eeprom.c: 85:     PIR2bits.EEIF = 0;
 13975  005B58  98A1               	bcf	161,4,c	;volatile
 13976                           
 13977                           ;fs_eeprom.c: 86:     EECON1bits.WREN = 0;
 13978  005B5A  94A6               	bcf	166,2,c	;volsfr
 13979  005B5C  0012               	return		;funcret
 13980  005B5E                     __end_of_eepromWrite:
 13981                           	callstack 0
 13982                           
 13983 ;; *************** function _Lcd_Write_String *****************
 13984 ;; Defined at:
 13985 ;;		line 155 in file "fs_lcd.c"
 13986 ;; Parameters:    Size  Location     Type
 13987 ;;  a               2    4[COMRAM] PTR unsigned char 
 13988 ;;		 -> STR_15(17), STR_13(17), STR_11(17), STR_9(17), 
 13989 ;;		 -> STR_7(17), STR_5(17), STR_3(17), STR_1(17), 
 13990 ;;		 -> stateMachine@textCursor2(16), 
 13991 ;; Auto vars:     Size  Location     Type
 13992 ;;  i               2    8[COMRAM] int 
 13993 ;; Return value:  Size  Location     Type
 13994 ;;                  1    wreg      void 
 13995 ;; Registers used:
 13996 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13997 ;; Tracked objects:
 13998 ;;		On entry : 0/0
 13999 ;;		On exit  : 0/0
 14000 ;;		Unchanged: 0/0
 14001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14002 ;;      Params:         2       0       0       0       0       0       0
 14003 ;;      Locals:         2       0       0       0       0       0       0
 14004 ;;      Temps:          2       0       0       0       0       0       0
 14005 ;;      Totals:         6       0       0       0       0       0       0
 14006 ;;Total ram usage:        6 bytes
 14007 ;; Hardware stack levels used:    1
 14008 ;; Hardware stack levels required when called:    3
 14009 ;; This function calls:
 14010 ;;		_Lcd_Write_Char
 14011 ;; This function is called by:
 14012 ;;		_stateMachine
 14013 ;; This function uses a non-reentrant model
 14014 ;;
 14015                           
 14016                           	psect	text53
 14017  005308                     __ptext53:
 14018                           	callstack 0
 14019  005308                     _Lcd_Write_String:
 14020                           	callstack 25
 14021  005308                     
 14022                           ;fs_lcd.c: 155: void Lcd_Write_String(char *a);fs_lcd.c: 156: {;fs_lcd.c: 157:    int i;
      +                          ;fs_lcd.c: 158:    for(i=0;a[i]!='\0';i++)
 14023  005308  0E00               	movlw	0
 14024  00530A  6E0A               	movwf	(Lcd_Write_String@i+1)^0,c
 14025  00530C  0E00               	movlw	0
 14026  00530E  6E09               	movwf	Lcd_Write_String@i^0,c
 14027  005310  EFA4  F029         	goto	l5610
 14028  005314                     l5606:
 14029                           
 14030                           ;fs_lcd.c: 159:    Lcd_Write_Char(a[i]);
 14031  005314  5009               	movf	Lcd_Write_String@i^0,w,c
 14032  005316  2405               	addwf	Lcd_Write_String@a^0,w,c
 14033  005318  6E07               	movwf	??_Lcd_Write_String^0,c
 14034  00531A  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
 14035  00531C  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 14036  00531E  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
 14037  005320  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
 14038  005324  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 14039  005328  6AF8               	clrf	tblptru,c
 14040  00532A  0E05               	movlw	(high __ramtop+-1)
 14041  00532C  64F7               	cpfsgt	tblptrh,c
 14042  00532E  D003               	bra	u6797
 14043  005330  0008               	tblrd		*
 14044  005332  50F5               	movf	tablat,w,c
 14045  005334  D005               	bra	u6790
 14046  005336                     u6797:
 14047  005336  CFF6 FFE1          	movff	tblptrl,fsr1l
 14048  00533A  CFF7 FFE2          	movff	tblptrh,fsr1h
 14049  00533E  50E7               	movf	indf1,w,c
 14050  005340                     u6790:
 14051  005340  EC63  F02D         	call	_Lcd_Write_Char
 14052  005344  4A09               	infsnz	Lcd_Write_String@i^0,f,c
 14053  005346  2A0A               	incf	(Lcd_Write_String@i+1)^0,f,c
 14054  005348                     l5610:
 14055  005348  5009               	movf	Lcd_Write_String@i^0,w,c
 14056  00534A  2405               	addwf	Lcd_Write_String@a^0,w,c
 14057  00534C  6E07               	movwf	??_Lcd_Write_String^0,c
 14058  00534E  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
 14059  005350  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 14060  005352  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
 14061  005354  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
 14062  005358  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 14063  00535C  6AF8               	clrf	tblptru,c
 14064  00535E  0E05               	movlw	(high __ramtop+-1)
 14065  005360  64F7               	cpfsgt	tblptrh,c
 14066  005362  D003               	bra	u6807
 14067  005364  0008               	tblrd		*
 14068  005366  50F5               	movf	tablat,w,c
 14069  005368  D005               	bra	u6800
 14070  00536A                     u6807:
 14071  00536A  CFF6 FFE1          	movff	tblptrl,fsr1l
 14072  00536E  CFF7 FFE2          	movff	tblptrh,fsr1h
 14073  005372  50E7               	movf	indf1,w,c
 14074  005374                     u6800:
 14075  005374  0900               	iorlw	0
 14076  005376  A4D8               	btfss	status,2,c
 14077  005378  EFC0  F029         	goto	u6811
 14078  00537C  EFC2  F029         	goto	u6810
 14079  005380                     u6811:
 14080  005380  EF8A  F029         	goto	l5606
 14081  005384                     u6810:
 14082  005384  0012               	return		;funcret
 14083  005386                     __end_of_Lcd_Write_String:
 14084                           	callstack 0
 14085                           
 14086 ;; *************** function _Lcd_Write_Char *****************
 14087 ;; Defined at:
 14088 ;;		line 132 in file "fs_lcd.c"
 14089 ;; Parameters:    Size  Location     Type
 14090 ;;  a               1    wreg     unsigned char 
 14091 ;; Auto vars:     Size  Location     Type
 14092 ;;  a               1    3[COMRAM] unsigned char 
 14093 ;;  y               1    2[COMRAM] unsigned char 
 14094 ;;  temp            1    1[COMRAM] unsigned char 
 14095 ;; Return value:  Size  Location     Type
 14096 ;;                  1    wreg      void 
 14097 ;; Registers used:
 14098 ;;		wreg, status,2, status,0, cstack
 14099 ;; Tracked objects:
 14100 ;;		On entry : 0/0
 14101 ;;		On exit  : 0/0
 14102 ;;		Unchanged: 0/0
 14103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14104 ;;      Params:         0       0       0       0       0       0       0
 14105 ;;      Locals:         3       0       0       0       0       0       0
 14106 ;;      Temps:          0       0       0       0       0       0       0
 14107 ;;      Totals:         3       0       0       0       0       0       0
 14108 ;;Total ram usage:        3 bytes
 14109 ;; Hardware stack levels used:    1
 14110 ;; Hardware stack levels required when called:    2
 14111 ;; This function calls:
 14112 ;;		_Lcd_Port
 14113 ;; This function is called by:
 14114 ;;		_Lcd_Write_String
 14115 ;; This function uses a non-reentrant model
 14116 ;;
 14117                           
 14118                           	psect	text54
 14119  005AC6                     __ptext54:
 14120                           	callstack 0
 14121  005AC6                     _Lcd_Write_Char:
 14122                           	callstack 25
 14123                           
 14124                           ;incstack = 0
 14125                           ;Lcd_Write_Char@a stored from wreg
 14126  005AC6  6E04               	movwf	Lcd_Write_Char@a^0,c
 14127  005AC8                     
 14128                           ;fs_lcd.c: 132: void Lcd_Write_Char(char a);fs_lcd.c: 133: {;fs_lcd.c: 134:    char temp
      +                          ,y;;fs_lcd.c: 135:    temp = a&0x0F;
 14129  005AC8  5004               	movf	Lcd_Write_Char@a^0,w,c
 14130  005ACA  0B0F               	andlw	15
 14131  005ACC  6E02               	movwf	Lcd_Write_Char@temp^0,c
 14132                           
 14133                           ;fs_lcd.c: 136:    y = a&0xF0;
 14134  005ACE  5004               	movf	Lcd_Write_Char@a^0,w,c
 14135  005AD0  0BF0               	andlw	240
 14136  005AD2  6E03               	movwf	Lcd_Write_Char@y^0,c
 14137  005AD4                     
 14138                           ;fs_lcd.c: 137:    PORTDbits.RD6 = 1;
 14139  005AD4  8C83               	bsf	131,6,c	;volatile
 14140  005AD6                     
 14141                           ;fs_lcd.c: 138:    Lcd_Port(y>>4);
 14142  005AD6  3803               	swapf	Lcd_Write_Char@y^0,w,c
 14143  005AD8  0B0F               	andlw	15
 14144  005ADA  EC6D  F02B         	call	_Lcd_Port
 14145  005ADE                     
 14146                           ;fs_lcd.c: 139:    PORTDbits.RD7 = 1;
 14147  005ADE  8E83               	bsf	131,7,c	;volatile
 14148  005AE0                     
 14149                           ;fs_lcd.c: 140:    _delay((unsigned long)((30)*(64000000UL/4000000.0)));
 14150  005AE0  0EA0               	movlw	160
 14151  005AE2                     u7767:
 14152  005AE2  2EE8               	decfsz	wreg,f,c
 14153  005AE4  D7FE               	bra	u7767
 14154  005AE6                     
 14155                           ;fs_lcd.c: 141:    PORTDbits.RD7 = 0;
 14156  005AE6  9E83               	bcf	131,7,c	;volatile
 14157  005AE8                     
 14158                           ;fs_lcd.c: 142:    Lcd_Port(temp);
 14159  005AE8  5002               	movf	Lcd_Write_Char@temp^0,w,c
 14160  005AEA  EC6D  F02B         	call	_Lcd_Port
 14161  005AEE                     
 14162                           ;fs_lcd.c: 143:    PORTDbits.RD7 = 1;
 14163  005AEE  8E83               	bsf	131,7,c	;volatile
 14164  005AF0                     
 14165                           ;fs_lcd.c: 144:    _delay((unsigned long)((25)*(64000000UL/4000000.0)));
 14166  005AF0  0E85               	movlw	133
 14167  005AF2                     u7777:
 14168  005AF2  2EE8               	decfsz	wreg,f,c
 14169  005AF4  D7FE               	bra	u7777
 14170  005AF6  F000               	nop	
 14171  005AF8                     
 14172                           ;fs_lcd.c: 145:    PORTDbits.RD7 = 0;
 14173  005AF8  9E83               	bcf	131,7,c	;volatile
 14174  005AFA  0012               	return		;funcret
 14175  005AFC                     __end_of_Lcd_Write_Char:
 14176                           	callstack 0
 14177                           
 14178 ;; *************** function _Lcd_Set_Cursor *****************
 14179 ;; Defined at:
 14180 ;;		line 62 in file "fs_lcd.c"
 14181 ;; Parameters:    Size  Location     Type
 14182 ;;  a               1    wreg     unsigned char 
 14183 ;;  b               1    3[COMRAM] unsigned char 
 14184 ;; Auto vars:     Size  Location     Type
 14185 ;;  a               1    4[COMRAM] unsigned char 
 14186 ;;  temp            1    7[COMRAM] unsigned char 
 14187 ;;  y               1    6[COMRAM] unsigned char 
 14188 ;;  z               1    5[COMRAM] unsigned char 
 14189 ;; Return value:  Size  Location     Type
 14190 ;;                  1    wreg      void 
 14191 ;; Registers used:
 14192 ;;		wreg, status,2, status,0, cstack
 14193 ;; Tracked objects:
 14194 ;;		On entry : 0/0
 14195 ;;		On exit  : 0/0
 14196 ;;		Unchanged: 0/0
 14197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14198 ;;      Params:         1       0       0       0       0       0       0
 14199 ;;      Locals:         4       0       0       0       0       0       0
 14200 ;;      Temps:          0       0       0       0       0       0       0
 14201 ;;      Totals:         5       0       0       0       0       0       0
 14202 ;;Total ram usage:        5 bytes
 14203 ;; Hardware stack levels used:    1
 14204 ;; Hardware stack levels required when called:    3
 14205 ;; This function calls:
 14206 ;;		_Lcd_Cmd
 14207 ;; This function is called by:
 14208 ;;		_stateMachine
 14209 ;; This function uses a non-reentrant model
 14210 ;;
 14211                           
 14212                           	psect	text55
 14213  0055B8                     __ptext55:
 14214                           	callstack 0
 14215  0055B8                     _Lcd_Set_Cursor:
 14216                           	callstack 25
 14217                           
 14218                           ;incstack = 0
 14219                           ;Lcd_Set_Cursor@a stored from wreg
 14220  0055B8  6E05               	movwf	Lcd_Set_Cursor@a^0,c
 14221  0055BA                     
 14222                           ;fs_lcd.c: 62: void Lcd_Set_Cursor(char a, char b);fs_lcd.c: 63: {;fs_lcd.c: 64:    char
      +                           temp,z,y;;fs_lcd.c: 65:    if(a == 1)
 14223  0055BA  0405               	decf	Lcd_Set_Cursor@a^0,w,c
 14224  0055BC  A4D8               	btfss	status,2,c
 14225  0055BE  EFE3  F02A         	goto	u6771
 14226  0055C2  EFE5  F02A         	goto	u6770
 14227  0055C6                     u6771:
 14228  0055C6  EFF6  F02A         	goto	l5596
 14229  0055CA                     u6770:
 14230  0055CA                     
 14231                           ;fs_lcd.c: 66:    {;fs_lcd.c: 67:      temp = 0x80 + b - 1;
 14232  0055CA  5004               	movf	Lcd_Set_Cursor@b^0,w,c
 14233  0055CC  0F7F               	addlw	127
 14234  0055CE  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
 14235                           
 14236                           ;fs_lcd.c: 68:       z = temp>>4;
 14237  0055D0  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
 14238  0055D2  0B0F               	andlw	15
 14239  0055D4  6E06               	movwf	Lcd_Set_Cursor@z^0,c
 14240                           
 14241                           ;fs_lcd.c: 69:       y = temp & 0x0F;
 14242  0055D6  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
 14243  0055D8  0B0F               	andlw	15
 14244  0055DA  6E07               	movwf	Lcd_Set_Cursor@y^0,c
 14245  0055DC                     
 14246                           ;fs_lcd.c: 70:       Lcd_Cmd(z);
 14247  0055DC  5006               	movf	Lcd_Set_Cursor@z^0,w,c
 14248  0055DE  ECF9  F02D         	call	_Lcd_Cmd
 14249  0055E2                     
 14250                           ;fs_lcd.c: 71:       Lcd_Cmd(y);
 14251  0055E2  5007               	movf	Lcd_Set_Cursor@y^0,w,c
 14252  0055E4  ECF9  F02D         	call	_Lcd_Cmd
 14253                           
 14254                           ;fs_lcd.c: 72:    }
 14255  0055E8  EF0E  F02B         	goto	l116
 14256  0055EC                     l5596:
 14257  0055EC  0E02               	movlw	2
 14258  0055EE  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
 14259  0055F0  A4D8               	btfss	status,2,c
 14260  0055F2  EFFD  F02A         	goto	u6781
 14261  0055F6  EFFF  F02A         	goto	u6780
 14262  0055FA                     u6781:
 14263  0055FA  EF0E  F02B         	goto	l116
 14264  0055FE                     u6780:
 14265  0055FE                     
 14266                           ;fs_lcd.c: 74:    {;fs_lcd.c: 75:       temp = 0xC0 + b - 1;
 14267  0055FE  5004               	movf	Lcd_Set_Cursor@b^0,w,c
 14268  005600  0FBF               	addlw	191
 14269  005602  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
 14270                           
 14271                           ;fs_lcd.c: 76:       z = temp>>4;
 14272  005604  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
 14273  005606  0B0F               	andlw	15
 14274  005608  6E06               	movwf	Lcd_Set_Cursor@z^0,c
 14275                           
 14276                           ;fs_lcd.c: 77:       y = temp & 0x0F;
 14277  00560A  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
 14278  00560C  0B0F               	andlw	15
 14279  00560E  6E07               	movwf	Lcd_Set_Cursor@y^0,c
 14280  005610                     
 14281                           ;fs_lcd.c: 78:       Lcd_Cmd(z);
 14282  005610  5006               	movf	Lcd_Set_Cursor@z^0,w,c
 14283  005612  ECF9  F02D         	call	_Lcd_Cmd
 14284  005616                     
 14285                           ;fs_lcd.c: 79:       Lcd_Cmd(y);
 14286  005616  5007               	movf	Lcd_Set_Cursor@y^0,w,c
 14287  005618  ECF9  F02D         	call	_Lcd_Cmd
 14288  00561C                     l116:
 14289  00561C  0012               	return		;funcret
 14290  00561E                     __end_of_Lcd_Set_Cursor:
 14291                           	callstack 0
 14292                           
 14293 ;; *************** function _buttonControlFlags *****************
 14294 ;; Defined at:
 14295 ;;		line 81 in file "fs_menu_controller.c"
 14296 ;; Parameters:    Size  Location     Type
 14297 ;;		None
 14298 ;; Auto vars:     Size  Location     Type
 14299 ;;		None
 14300 ;; Return value:  Size  Location     Type
 14301 ;;                  1    wreg      void 
 14302 ;; Registers used:
 14303 ;;		None
 14304 ;; Tracked objects:
 14305 ;;		On entry : 0/0
 14306 ;;		On exit  : 0/0
 14307 ;;		Unchanged: 0/0
 14308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14309 ;;      Params:         0       0       0       0       0       0       0
 14310 ;;      Locals:         0       0       0       0       0       0       0
 14311 ;;      Temps:          0       0       0       0       0       0       0
 14312 ;;      Totals:         0       0       0       0       0       0       0
 14313 ;;Total ram usage:        0 bytes
 14314 ;; Hardware stack levels used:    1
 14315 ;; Hardware stack levels required when called:    1
 14316 ;; This function calls:
 14317 ;;		Nothing
 14318 ;; This function is called by:
 14319 ;;		_menuControl
 14320 ;; This function uses a non-reentrant model
 14321 ;;
 14322                           
 14323                           	psect	text56
 14324  004540                     __ptext56:
 14325                           	callstack 0
 14326  004540                     _buttonControlFlags:
 14327                           	callstack 28
 14328  004540                     
 14329                           ;fs_menu_controller.c: 83:     if ((button_bounce_controller.menu == 0) && (PORTBbits.RB
      +                          7 == 0))
 14330  004540  0100               	movlb	0	; () banked
 14331  004542  B1FF               	btfsc	_button_bounce_controller& (0+255),0,b
 14332  004544  EFA6  F022         	goto	u6831
 14333  004548  EFA8  F022         	goto	u6830
 14334  00454C                     u6831:
 14335  00454C  EFB1  F022         	goto	l315
 14336  004550                     u6830:
 14337  004550                     
 14338                           ; BSR set to: 0
 14339  004550  BE81               	btfsc	129,7,c	;volatile
 14340  004552  EFAD  F022         	goto	u6841
 14341  004556  EFAF  F022         	goto	u6840
 14342  00455A                     u6841:
 14343  00455A  EFB1  F022         	goto	l315
 14344  00455E                     u6840:
 14345  00455E                     
 14346                           ; BSR set to: 0
 14347                           ;fs_menu_controller.c: 84:     {;fs_menu_controller.c: 85:         button_bounce_control
      +                          ler.menu = 1;
 14348  00455E  81FF               	bsf	_button_bounce_controller& (0+255),0,b
 14349                           
 14350                           ;fs_menu_controller.c: 86:         menu_flags.menu_input_flag = 1;
 14351  004560  81FD               	bsf	_menu_flags& (0+255),0,b
 14352  004562                     l315:
 14353                           
 14354                           ; BSR set to: 0
 14355                           ;fs_menu_controller.c: 89:     if ((PORTBbits.RB7 == 1) && (button_bounce_controller.men
      +                          u == 1))
 14356  004562  AE81               	btfss	129,7,c	;volatile
 14357  004564  EFB6  F022         	goto	u6851
 14358  004568  EFB8  F022         	goto	u6850
 14359  00456C                     u6851:
 14360  00456C  EFC1  F022         	goto	l316
 14361  004570                     u6850:
 14362  004570                     
 14363                           ; BSR set to: 0
 14364  004570  A1FF               	btfss	_button_bounce_controller& (0+255),0,b
 14365  004572  EFBD  F022         	goto	u6861
 14366  004576  EFBF  F022         	goto	u6860
 14367  00457A                     u6861:
 14368  00457A  EFC1  F022         	goto	l316
 14369  00457E                     u6860:
 14370  00457E                     
 14371                           ; BSR set to: 0
 14372                           ;fs_menu_controller.c: 90:     {;fs_menu_controller.c: 91:         button_bounce_control
      +                          ler.menu = 0;
 14373  00457E  91FF               	bcf	_button_bounce_controller& (0+255),0,b
 14374                           
 14375                           ;fs_menu_controller.c: 92:         menu_flags.menu_input_flag = 0;
 14376  004580  91FD               	bcf	_menu_flags& (0+255),0,b
 14377  004582                     l316:
 14378                           
 14379                           ; BSR set to: 0
 14380                           ;fs_menu_controller.c: 95:     if ((button_bounce_controller.pause == 0) && (PORTDbits.R
      +                          D2 == 0))
 14381  004582  B7FF               	btfsc	_button_bounce_controller& (0+255),3,b
 14382  004584  EFC6  F022         	goto	u6871
 14383  004588  EFC8  F022         	goto	u6870
 14384  00458C                     u6871:
 14385  00458C  EFD1  F022         	goto	l317
 14386  004590                     u6870:
 14387  004590                     
 14388                           ; BSR set to: 0
 14389  004590  B483               	btfsc	131,2,c	;volatile
 14390  004592  EFCD  F022         	goto	u6881
 14391  004596  EFCF  F022         	goto	u6880
 14392  00459A                     u6881:
 14393  00459A  EFD1  F022         	goto	l317
 14394  00459E                     u6880:
 14395  00459E                     
 14396                           ; BSR set to: 0
 14397                           ;fs_menu_controller.c: 96:     {;fs_menu_controller.c: 97:         button_bounce_control
      +                          ler.pause = 1;
 14398  00459E  87FF               	bsf	_button_bounce_controller& (0+255),3,b
 14399                           
 14400                           ;fs_menu_controller.c: 98:         menu_flags.menu_pause_flag = 1;
 14401  0045A0  87FD               	bsf	_menu_flags& (0+255),3,b
 14402  0045A2                     l317:
 14403                           
 14404                           ; BSR set to: 0
 14405                           ;fs_menu_controller.c: 100:     if ((PORTDbits.RD2 == 1) && (button_bounce_controller.pa
      +                          use == 1))
 14406  0045A2  A483               	btfss	131,2,c	;volatile
 14407  0045A4  EFD6  F022         	goto	u6891
 14408  0045A8  EFD8  F022         	goto	u6890
 14409  0045AC                     u6891:
 14410  0045AC  EFE1  F022         	goto	l318
 14411  0045B0                     u6890:
 14412  0045B0                     
 14413                           ; BSR set to: 0
 14414  0045B0  A7FF               	btfss	_button_bounce_controller& (0+255),3,b
 14415  0045B2  EFDD  F022         	goto	u6901
 14416  0045B6  EFDF  F022         	goto	u6900
 14417  0045BA                     u6901:
 14418  0045BA  EFE1  F022         	goto	l318
 14419  0045BE                     u6900:
 14420  0045BE                     
 14421                           ; BSR set to: 0
 14422                           ;fs_menu_controller.c: 101:     {;fs_menu_controller.c: 102:         button_bounce_contr
      +                          oller.pause = 0;
 14423  0045BE  97FF               	bcf	_button_bounce_controller& (0+255),3,b
 14424                           
 14425                           ;fs_menu_controller.c: 103:         menu_flags.menu_pause_flag = 0;
 14426  0045C0  97FD               	bcf	_menu_flags& (0+255),3,b
 14427  0045C2                     l318:
 14428                           
 14429                           ; BSR set to: 0
 14430                           ;fs_menu_controller.c: 107:     if ((button_bounce_controller.start == 0) && (PORTDbits.
      +                          RD0 == 0))
 14431  0045C2  B3FF               	btfsc	_button_bounce_controller& (0+255),1,b
 14432  0045C4  EFE6  F022         	goto	u6911
 14433  0045C8  EFE8  F022         	goto	u6910
 14434  0045CC                     u6911:
 14435  0045CC  EFF1  F022         	goto	l319
 14436  0045D0                     u6910:
 14437  0045D0                     
 14438                           ; BSR set to: 0
 14439  0045D0  B083               	btfsc	131,0,c	;volatile
 14440  0045D2  EFED  F022         	goto	u6921
 14441  0045D6  EFEF  F022         	goto	u6920
 14442  0045DA                     u6921:
 14443  0045DA  EFF1  F022         	goto	l319
 14444  0045DE                     u6920:
 14445  0045DE                     
 14446                           ; BSR set to: 0
 14447                           ;fs_menu_controller.c: 108:     {;fs_menu_controller.c: 109:         button_bounce_contr
      +                          oller.start = 1;
 14448  0045DE  83FF               	bsf	_button_bounce_controller& (0+255),1,b
 14449                           
 14450                           ;fs_menu_controller.c: 110:         menu_flags.menu_start_flag = 1;
 14451  0045E0  83FD               	bsf	_menu_flags& (0+255),1,b
 14452  0045E2                     l319:
 14453                           
 14454                           ; BSR set to: 0
 14455                           ;fs_menu_controller.c: 112:     if ((PORTDbits.RD0 == 1) && (button_bounce_controller.st
      +                          art == 1))
 14456  0045E2  A083               	btfss	131,0,c	;volatile
 14457  0045E4  EFF6  F022         	goto	u6931
 14458  0045E8  EFF8  F022         	goto	u6930
 14459  0045EC                     u6931:
 14460  0045EC  EF01  F023         	goto	l320
 14461  0045F0                     u6930:
 14462  0045F0                     
 14463                           ; BSR set to: 0
 14464  0045F0  A3FF               	btfss	_button_bounce_controller& (0+255),1,b
 14465  0045F2  EFFD  F022         	goto	u6941
 14466  0045F6  EFFF  F022         	goto	u6940
 14467  0045FA                     u6941:
 14468  0045FA  EF01  F023         	goto	l320
 14469  0045FE                     u6940:
 14470  0045FE                     
 14471                           ; BSR set to: 0
 14472                           ;fs_menu_controller.c: 113:     {;fs_menu_controller.c: 114:         button_bounce_contr
      +                          oller.start = 0;
 14473  0045FE  93FF               	bcf	_button_bounce_controller& (0+255),1,b
 14474                           
 14475                           ;fs_menu_controller.c: 115:         menu_flags.menu_start_flag = 0;
 14476  004600  93FD               	bcf	_menu_flags& (0+255),1,b
 14477  004602                     l320:
 14478                           
 14479                           ; BSR set to: 0
 14480                           ;fs_menu_controller.c: 119:     if ((button_bounce_controller.stop == 0) && (PORTDbits.R
      +                          D1 == 0))
 14481  004602  B5FF               	btfsc	_button_bounce_controller& (0+255),2,b
 14482  004604  EF06  F023         	goto	u6951
 14483  004608  EF08  F023         	goto	u6950
 14484  00460C                     u6951:
 14485  00460C  EF11  F023         	goto	l321
 14486  004610                     u6950:
 14487  004610                     
 14488                           ; BSR set to: 0
 14489  004610  B283               	btfsc	131,1,c	;volatile
 14490  004612  EF0D  F023         	goto	u6961
 14491  004616  EF0F  F023         	goto	u6960
 14492  00461A                     u6961:
 14493  00461A  EF11  F023         	goto	l321
 14494  00461E                     u6960:
 14495  00461E                     
 14496                           ; BSR set to: 0
 14497                           ;fs_menu_controller.c: 120:     {;fs_menu_controller.c: 121:         button_bounce_contr
      +                          oller.stop = 1;
 14498  00461E  85FF               	bsf	_button_bounce_controller& (0+255),2,b
 14499                           
 14500                           ;fs_menu_controller.c: 122:         menu_flags.menu_stop_flag = 1;
 14501  004620  85FD               	bsf	_menu_flags& (0+255),2,b
 14502  004622                     l321:
 14503                           
 14504                           ; BSR set to: 0
 14505                           ;fs_menu_controller.c: 124:     if ((PORTDbits.RD1 == 1) && (button_bounce_controller.st
      +                          op == 1))
 14506  004622  A283               	btfss	131,1,c	;volatile
 14507  004624  EF16  F023         	goto	u6971
 14508  004628  EF18  F023         	goto	u6970
 14509  00462C                     u6971:
 14510  00462C  EF21  F023         	goto	l322
 14511  004630                     u6970:
 14512  004630                     
 14513                           ; BSR set to: 0
 14514  004630  A5FF               	btfss	_button_bounce_controller& (0+255),2,b
 14515  004632  EF1D  F023         	goto	u6981
 14516  004636  EF1F  F023         	goto	u6980
 14517  00463A                     u6981:
 14518  00463A  EF21  F023         	goto	l322
 14519  00463E                     u6980:
 14520  00463E                     
 14521                           ; BSR set to: 0
 14522                           ;fs_menu_controller.c: 125:     {;fs_menu_controller.c: 126:         button_bounce_contr
      +                          oller.stop = 0;
 14523  00463E  95FF               	bcf	_button_bounce_controller& (0+255),2,b
 14524                           
 14525                           ;fs_menu_controller.c: 127:         menu_flags.menu_stop_flag = 0;
 14526  004640  95FD               	bcf	_menu_flags& (0+255),2,b
 14527  004642                     l322:
 14528                           
 14529                           ; BSR set to: 0
 14530                           ;fs_menu_controller.c: 131:     if ((button_bounce_controller.increase == 0) && (PORTDbi
      +                          ts.RD4 == 0))
 14531  004642  BBFF               	btfsc	_button_bounce_controller& (0+255),5,b
 14532  004644  EF26  F023         	goto	u6991
 14533  004648  EF28  F023         	goto	u6990
 14534  00464C                     u6991:
 14535  00464C  EF31  F023         	goto	l323
 14536  004650                     u6990:
 14537  004650                     
 14538                           ; BSR set to: 0
 14539  004650  B883               	btfsc	131,4,c	;volatile
 14540  004652  EF2D  F023         	goto	u7001
 14541  004656  EF2F  F023         	goto	u7000
 14542  00465A                     u7001:
 14543  00465A  EF31  F023         	goto	l323
 14544  00465E                     u7000:
 14545  00465E                     
 14546                           ; BSR set to: 0
 14547                           ;fs_menu_controller.c: 132:     {;fs_menu_controller.c: 133:         button_bounce_contr
      +                          oller.increase = 1;
 14548  00465E  8BFF               	bsf	_button_bounce_controller& (0+255),5,b
 14549                           
 14550                           ;fs_menu_controller.c: 134:         menu_flags.menu_increase_flag = 1;
 14551  004660  89FD               	bsf	_menu_flags& (0+255),4,b
 14552  004662                     l323:
 14553                           
 14554                           ; BSR set to: 0
 14555                           ;fs_menu_controller.c: 136:     if ((PORTDbits.RD4 == 1) && (button_bounce_controller.in
      +                          crease == 1))
 14556  004662  A883               	btfss	131,4,c	;volatile
 14557  004664  EF36  F023         	goto	u7011
 14558  004668  EF38  F023         	goto	u7010
 14559  00466C                     u7011:
 14560  00466C  EF41  F023         	goto	l324
 14561  004670                     u7010:
 14562  004670                     
 14563                           ; BSR set to: 0
 14564  004670  ABFF               	btfss	_button_bounce_controller& (0+255),5,b
 14565  004672  EF3D  F023         	goto	u7021
 14566  004676  EF3F  F023         	goto	u7020
 14567  00467A                     u7021:
 14568  00467A  EF41  F023         	goto	l324
 14569  00467E                     u7020:
 14570  00467E                     
 14571                           ; BSR set to: 0
 14572                           ;fs_menu_controller.c: 137:     {;fs_menu_controller.c: 138:         button_bounce_contr
      +                          oller.increase = 0;
 14573  00467E  9BFF               	bcf	_button_bounce_controller& (0+255),5,b
 14574                           
 14575                           ;fs_menu_controller.c: 139:         menu_flags.menu_increase_flag = 0;
 14576  004680  99FD               	bcf	_menu_flags& (0+255),4,b
 14577  004682                     l324:
 14578                           
 14579                           ; BSR set to: 0
 14580                           ;fs_menu_controller.c: 143:     if ((button_bounce_controller.decrease == 0) && (PORTBbi
      +                          ts.RB6 == 0))
 14581  004682  B9FF               	btfsc	_button_bounce_controller& (0+255),4,b
 14582  004684  EF46  F023         	goto	u7031
 14583  004688  EF48  F023         	goto	u7030
 14584  00468C                     u7031:
 14585  00468C  EF51  F023         	goto	l325
 14586  004690                     u7030:
 14587  004690                     
 14588                           ; BSR set to: 0
 14589  004690  BC81               	btfsc	129,6,c	;volatile
 14590  004692  EF4D  F023         	goto	u7041
 14591  004696  EF4F  F023         	goto	u7040
 14592  00469A                     u7041:
 14593  00469A  EF51  F023         	goto	l325
 14594  00469E                     u7040:
 14595  00469E                     
 14596                           ; BSR set to: 0
 14597                           ;fs_menu_controller.c: 144:     {;fs_menu_controller.c: 145:         button_bounce_contr
      +                          oller.decrease = 1;
 14598  00469E  89FF               	bsf	_button_bounce_controller& (0+255),4,b
 14599                           
 14600                           ;fs_menu_controller.c: 146:         menu_flags.menu_decrease_flag = 1;
 14601  0046A0  8BFD               	bsf	_menu_flags& (0+255),5,b
 14602  0046A2                     l325:
 14603                           
 14604                           ; BSR set to: 0
 14605                           ;fs_menu_controller.c: 148:     if ((PORTBbits.RB6 == 1) && (button_bounce_controller.de
      +                          crease == 1))
 14606  0046A2  AC81               	btfss	129,6,c	;volatile
 14607  0046A4  EF56  F023         	goto	u7051
 14608  0046A8  EF58  F023         	goto	u7050
 14609  0046AC                     u7051:
 14610  0046AC  EF61  F023         	goto	l327
 14611  0046B0                     u7050:
 14612  0046B0                     
 14613                           ; BSR set to: 0
 14614  0046B0  A9FF               	btfss	_button_bounce_controller& (0+255),4,b
 14615  0046B2  EF5D  F023         	goto	u7061
 14616  0046B6  EF5F  F023         	goto	u7060
 14617  0046BA                     u7061:
 14618  0046BA  EF61  F023         	goto	l327
 14619  0046BE                     u7060:
 14620  0046BE                     
 14621                           ; BSR set to: 0
 14622                           ;fs_menu_controller.c: 149:     {;fs_menu_controller.c: 150:         button_bounce_contr
      +                          oller.decrease = 0;
 14623  0046BE  99FF               	bcf	_button_bounce_controller& (0+255),4,b
 14624                           
 14625                           ;fs_menu_controller.c: 151:         menu_flags.menu_decrease_flag = 0;
 14626  0046C0  9BFD               	bcf	_menu_flags& (0+255),5,b
 14627  0046C2                     l327:
 14628                           
 14629                           ; BSR set to: 0
 14630  0046C2  0012               	return		;funcret
 14631  0046C4                     __end_of_buttonControlFlags:
 14632                           	callstack 0
 14633                           
 14634 ;; *************** function _mcu_init *****************
 14635 ;; Defined at:
 14636 ;;		line 41 in file "fs_mcu.c"
 14637 ;; Parameters:    Size  Location     Type
 14638 ;;		None
 14639 ;; Auto vars:     Size  Location     Type
 14640 ;;		None
 14641 ;; Return value:  Size  Location     Type
 14642 ;;                  1    wreg      void 
 14643 ;; Registers used:
 14644 ;;		wreg, status,2
 14645 ;; Tracked objects:
 14646 ;;		On entry : 0/0
 14647 ;;		On exit  : 0/0
 14648 ;;		Unchanged: 0/0
 14649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14650 ;;      Params:         0       0       0       0       0       0       0
 14651 ;;      Locals:         0       0       0       0       0       0       0
 14652 ;;      Temps:          0       0       0       0       0       0       0
 14653 ;;      Totals:         0       0       0       0       0       0       0
 14654 ;;Total ram usage:        0 bytes
 14655 ;; Hardware stack levels used:    1
 14656 ;; Hardware stack levels required when called:    1
 14657 ;; This function calls:
 14658 ;;		Nothing
 14659 ;; This function is called by:
 14660 ;;		_main
 14661 ;; This function uses a non-reentrant model
 14662 ;;
 14663                           
 14664                           	psect	text57
 14665  005C10                     __ptext57:
 14666                           	callstack 0
 14667  005C10                     _mcu_init:
 14668                           	callstack 29
 14669  005C10                     
 14670                           ;fs_mcu.c: 43:    OSCCONbits.IRCF = 0b111;
 14671  005C10  0E70               	movlw	112
 14672  005C12  12D3               	iorwf	211,f,c	;volatile
 14673  005C14                     
 14674                           ;fs_mcu.c: 44:    OSCTUNEbits.PLLEN = 0b1;
 14675  005C14  8C9B               	bsf	155,6,c	;volatile
 14676  005C16                     l247:
 14677  005C16  A4D3               	btfss	211,2,c	;volatile
 14678  005C18  EF10  F02E         	goto	u7601
 14679  005C1C  EF12  F02E         	goto	u7600
 14680  005C20                     u7601:
 14681  005C20  EF0B  F02E         	goto	l247
 14682  005C24                     u7600:
 14683  005C24  0012               	return		;funcret
 14684  005C26                     __end_of_mcu_init:
 14685                           	callstack 0
 14686                           
 14687 ;; *************** function _lcd_init *****************
 14688 ;; Defined at:
 14689 ;;		line 88 in file "fs_lcd.c"
 14690 ;; Parameters:    Size  Location     Type
 14691 ;;		None
 14692 ;; Auto vars:     Size  Location     Type
 14693 ;;		None
 14694 ;; Return value:  Size  Location     Type
 14695 ;;                  1    wreg      void 
 14696 ;; Registers used:
 14697 ;;		wreg, status,2, cstack
 14698 ;; Tracked objects:
 14699 ;;		On entry : 0/0
 14700 ;;		On exit  : 0/0
 14701 ;;		Unchanged: 0/0
 14702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14703 ;;      Params:         0       0       0       0       0       0       0
 14704 ;;      Locals:         0       0       0       0       0       0       0
 14705 ;;      Temps:          2       0       0       0       0       0       0
 14706 ;;      Totals:         2       0       0       0       0       0       0
 14707 ;;Total ram usage:        2 bytes
 14708 ;; Hardware stack levels used:    1
 14709 ;; Hardware stack levels required when called:    3
 14710 ;; This function calls:
 14711 ;;		_Lcd_Cmd
 14712 ;;		_Lcd_Port
 14713 ;; This function is called by:
 14714 ;;		_main
 14715 ;; This function uses a non-reentrant model
 14716 ;;
 14717                           
 14718                           	psect	text58
 14719  005272                     __ptext58:
 14720                           	callstack 0
 14721  005272                     _lcd_init:
 14722                           	callstack 27
 14723  005272                     
 14724                           ;fs_lcd.c: 90:     TRISDbits.RD6 = 0;
 14725  005272  9C95               	bcf	149,6,c	;volatile
 14726                           
 14727                           ;fs_lcd.c: 91:     ANSELDbits.ANSD6 = 0;
 14728  005274  010F               	movlb	15	; () banked
 14729  005276  9D3B               	bcf	59,6,b	;volatile
 14730                           
 14731                           ;fs_lcd.c: 93:     TRISDbits.RD7 = 0;
 14732  005278  9E95               	bcf	149,7,c	;volatile
 14733                           
 14734                           ;fs_lcd.c: 94:     ANSELDbits.ANSD7 = 0;
 14735  00527A  9F3B               	bcf	59,7,b	;volatile
 14736                           
 14737                           ;fs_lcd.c: 96:     TRISBbits.RB0 = 0;
 14738  00527C  9093               	bcf	147,0,c	;volatile
 14739                           
 14740                           ;fs_lcd.c: 97:     ANSELBbits.ANSB0 = 0;
 14741  00527E  9139               	bcf	57,0,b	;volatile
 14742                           
 14743                           ;fs_lcd.c: 99:     TRISBbits.RB1 = 0;
 14744  005280  9293               	bcf	147,1,c	;volatile
 14745                           
 14746                           ;fs_lcd.c: 100:     ANSELBbits.ANSB1 = 0;
 14747  005282  9339               	bcf	57,1,b	;volatile
 14748                           
 14749                           ;fs_lcd.c: 102:     TRISBbits.RB2 = 0;
 14750  005284  9493               	bcf	147,2,c	;volatile
 14751                           
 14752                           ;fs_lcd.c: 103:     ANSELBbits.ANSB2 = 0;
 14753  005286  9539               	bcf	57,2,b	;volatile
 14754                           
 14755                           ;fs_lcd.c: 105:     TRISBbits.RB3 = 0;
 14756  005288  9693               	bcf	147,3,c	;volatile
 14757                           
 14758                           ;fs_lcd.c: 106:     ANSELBbits.ANSB3 = 0;
 14759  00528A  9739               	bcf	57,3,b	;volatile
 14760  00528C                     
 14761                           ; BSR set to: 15
 14762                           ;fs_lcd.c: 109:     Lcd_Port(0x00);
 14763  00528C  0E00               	movlw	0
 14764  00528E  EC6D  F02B         	call	_Lcd_Port
 14765  005292                     
 14766                           ;fs_lcd.c: 110:      _delay((unsigned long)((20)*(64000000UL/4000.0)));
 14767  005292  0E02               	movlw	2
 14768  005294  6E05               	movwf	(??_lcd_init+1)^0,c
 14769  005296  0EA0               	movlw	160
 14770  005298  6E04               	movwf	??_lcd_init^0,c
 14771  00529A  0E92               	movlw	146
 14772  00529C                     u7787:
 14773  00529C  2EE8               	decfsz	wreg,f,c
 14774  00529E  D7FE               	bra	u7787
 14775  0052A0  2E04               	decfsz	??_lcd_init^0,f,c
 14776  0052A2  D7FC               	bra	u7787
 14777  0052A4  2E05               	decfsz	(??_lcd_init+1)^0,f,c
 14778  0052A6  D7FA               	bra	u7787
 14779  0052A8  D000               	nop2	
 14780  0052AA                     
 14781                           ;fs_lcd.c: 111:     Lcd_Cmd(0x03);
 14782  0052AA  0E03               	movlw	3
 14783  0052AC  ECF9  F02D         	call	_Lcd_Cmd
 14784  0052B0                     
 14785                           ;fs_lcd.c: 112:      _delay((unsigned long)((5)*(64000000UL/4000.0)));
 14786  0052B0  0E68               	movlw	104
 14787  0052B2  6E04               	movwf	??_lcd_init^0,c
 14788  0052B4  0EE4               	movlw	228
 14789  0052B6                     u7797:
 14790  0052B6  2EE8               	decfsz	wreg,f,c
 14791  0052B8  D7FE               	bra	u7797
 14792  0052BA  2E04               	decfsz	??_lcd_init^0,f,c
 14793  0052BC  D7FC               	bra	u7797
 14794  0052BE  D000               	nop2	
 14795  0052C0                     
 14796                           ;fs_lcd.c: 113:     Lcd_Cmd(0x03);
 14797  0052C0  0E03               	movlw	3
 14798  0052C2  ECF9  F02D         	call	_Lcd_Cmd
 14799  0052C6                     
 14800                           ;fs_lcd.c: 114:      _delay((unsigned long)((11)*(64000000UL/4000.0)));
 14801  0052C6  0EE5               	movlw	229
 14802  0052C8  6E04               	movwf	??_lcd_init^0,c
 14803  0052CA  0E91               	movlw	145
 14804  0052CC                     u7807:
 14805  0052CC  2EE8               	decfsz	wreg,f,c
 14806  0052CE  D7FE               	bra	u7807
 14807  0052D0  2E04               	decfsz	??_lcd_init^0,f,c
 14808  0052D2  D7FC               	bra	u7807
 14809  0052D4  F000               	nop	
 14810  0052D6                     
 14811                           ;fs_lcd.c: 115:     Lcd_Cmd(0x03);
 14812  0052D6  0E03               	movlw	3
 14813  0052D8  ECF9  F02D         	call	_Lcd_Cmd
 14814  0052DC                     
 14815                           ;fs_lcd.c: 116:     Lcd_Cmd(0x02);
 14816  0052DC  0E02               	movlw	2
 14817  0052DE  ECF9  F02D         	call	_Lcd_Cmd
 14818  0052E2                     
 14819                           ;fs_lcd.c: 117:     Lcd_Cmd(0x02);
 14820  0052E2  0E02               	movlw	2
 14821  0052E4  ECF9  F02D         	call	_Lcd_Cmd
 14822  0052E8                     
 14823                           ;fs_lcd.c: 118:     Lcd_Cmd(0x08);
 14824  0052E8  0E08               	movlw	8
 14825  0052EA  ECF9  F02D         	call	_Lcd_Cmd
 14826  0052EE                     
 14827                           ;fs_lcd.c: 119:     Lcd_Cmd(0x00);
 14828  0052EE  0E00               	movlw	0
 14829  0052F0  ECF9  F02D         	call	_Lcd_Cmd
 14830  0052F4                     
 14831                           ;fs_lcd.c: 120:     Lcd_Cmd(0x0C);
 14832  0052F4  0E0C               	movlw	12
 14833  0052F6  ECF9  F02D         	call	_Lcd_Cmd
 14834  0052FA                     
 14835                           ;fs_lcd.c: 121:     Lcd_Cmd(0x00);
 14836  0052FA  0E00               	movlw	0
 14837  0052FC  ECF9  F02D         	call	_Lcd_Cmd
 14838  005300                     
 14839                           ;fs_lcd.c: 122:     Lcd_Cmd(0x06);
 14840  005300  0E06               	movlw	6
 14841  005302  ECF9  F02D         	call	_Lcd_Cmd
 14842  005306  0012               	return		;funcret
 14843  005308                     __end_of_lcd_init:
 14844                           	callstack 0
 14845                           
 14846 ;; *************** function _adcInit *****************
 14847 ;; Defined at:
 14848 ;;		line 53 in file "fs_adc.c"
 14849 ;; Parameters:    Size  Location     Type
 14850 ;;		None
 14851 ;; Auto vars:     Size  Location     Type
 14852 ;;		None
 14853 ;; Return value:  Size  Location     Type
 14854 ;;                  1    wreg      void 
 14855 ;; Registers used:
 14856 ;;		wreg, status,2
 14857 ;; Tracked objects:
 14858 ;;		On entry : 0/0
 14859 ;;		On exit  : 0/0
 14860 ;;		Unchanged: 0/0
 14861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14862 ;;      Params:         0       0       0       0       0       0       0
 14863 ;;      Locals:         0       0       0       0       0       0       0
 14864 ;;      Temps:          0       0       0       0       0       0       0
 14865 ;;      Totals:         0       0       0       0       0       0       0
 14866 ;;Total ram usage:        0 bytes
 14867 ;; Hardware stack levels used:    1
 14868 ;; Hardware stack levels required when called:    1
 14869 ;; This function calls:
 14870 ;;		Nothing
 14871 ;; This function is called by:
 14872 ;;		_main
 14873 ;; This function uses a non-reentrant model
 14874 ;;
 14875                           
 14876                           	psect	text59
 14877  005938                     __ptext59:
 14878                           	callstack 0
 14879  005938                     _adcInit:
 14880                           	callstack 29
 14881  005938                     
 14882                           ;fs_adc.c: 55:     TRISAbits.TRISA0 = 1;
 14883  005938  8092               	bsf	146,0,c	;volatile
 14884                           
 14885                           ;fs_adc.c: 56:     ANSELAbits.ANSA0 = 1;
 14886  00593A  010F               	movlb	15	; () banked
 14887  00593C  8138               	bsf	56,0,b	;volatile
 14888                           
 14889                           ;fs_adc.c: 58:     TRISAbits.TRISA1 = 1;
 14890  00593E  8292               	bsf	146,1,c	;volatile
 14891                           
 14892                           ;fs_adc.c: 59:     ANSELAbits.ANSA1 = 1;
 14893  005940  8338               	bsf	56,1,b	;volatile
 14894                           
 14895                           ;fs_adc.c: 61:     TRISAbits.TRISA2 = 1;
 14896  005942  8492               	bsf	146,2,c	;volatile
 14897                           
 14898                           ;fs_adc.c: 62:     ANSELAbits.ANSA2 = 1;
 14899  005944  8538               	bsf	56,2,b	;volatile
 14900                           
 14901                           ;fs_adc.c: 64:     TRISAbits.TRISA3 = 1;
 14902  005946  8692               	bsf	146,3,c	;volatile
 14903                           
 14904                           ;fs_adc.c: 65:     ANSELAbits.ANSA3 = 1;
 14905  005948  8738               	bsf	56,3,b	;volatile
 14906                           
 14907                           ;fs_adc.c: 67:     TRISAbits.TRISA5 = 1;
 14908  00594A  8A92               	bsf	146,5,c	;volatile
 14909                           
 14910                           ;fs_adc.c: 68:     ANSELAbits.ANSA5 = 1;
 14911  00594C  8B38               	bsf	56,5,b	;volatile
 14912                           
 14913                           ;fs_adc.c: 70:     TRISEbits.TRISE0 = 1;
 14914  00594E  8096               	bsf	150,0,c	;volatile
 14915                           
 14916                           ;fs_adc.c: 71:     ANSELEbits.ANSE0 = 1;
 14917  005950  813C               	bsf	60,0,b	;volatile
 14918                           
 14919                           ;fs_adc.c: 73:     TRISEbits.TRISE1 = 1;
 14920  005952  8296               	bsf	150,1,c	;volatile
 14921                           
 14922                           ;fs_adc.c: 74:     ANSELEbits.ANSE1 = 1;
 14923  005954  833C               	bsf	60,1,b	;volatile
 14924                           
 14925                           ;fs_adc.c: 76:     TRISEbits.TRISE2 = 1;
 14926  005956  8496               	bsf	150,2,c	;volatile
 14927                           
 14928                           ;fs_adc.c: 77:     ANSELEbits.ANSE2 = 1;
 14929  005958  853C               	bsf	60,2,b	;volatile
 14930  00595A                     
 14931                           ; BSR set to: 15
 14932                           ;fs_adc.c: 79:     ADCON0 = 0x01;
 14933  00595A  0E01               	movlw	1
 14934  00595C  6EC2               	movwf	194,c	;volatile
 14935                           
 14936                           ;fs_adc.c: 80:     ADCON1=0x00;
 14937  00595E  0E00               	movlw	0
 14938  005960  6EC1               	movwf	193,c	;volatile
 14939  005962                     
 14940                           ; BSR set to: 15
 14941                           ;fs_adc.c: 81:  ADCON2bits.ADFM = 1;
 14942  005962  8EC0               	bsf	192,7,c	;volatile
 14943                           
 14944                           ;fs_adc.c: 82:     ADCON2bits.ACQT = 0b010;
 14945  005964  50C0               	movf	192,w,c	;volatile
 14946  005966  0BC7               	andlw	-57
 14947  005968  0910               	iorlw	16
 14948  00596A  6EC0               	movwf	192,c	;volatile
 14949                           
 14950                           ;fs_adc.c: 83:     ADCON2bits.ADCS = 0b110;
 14951  00596C  50C0               	movf	192,w,c	;volatile
 14952  00596E  0BF8               	andlw	-8
 14953  005970  0906               	iorlw	6
 14954  005972  6EC0               	movwf	192,c	;volatile
 14955  005974                     
 14956                           ; BSR set to: 15
 14957  005974  0012               	return		;funcret
 14958  005976                     __end_of_adcInit:
 14959                           	callstack 0
 14960                           
 14961 ;; *************** function _PWM_Init *****************
 14962 ;; Defined at:
 14963 ;;		line 17 in file "fs_pwm.c"
 14964 ;; Parameters:    Size  Location     Type
 14965 ;;		None
 14966 ;; Auto vars:     Size  Location     Type
 14967 ;;		None
 14968 ;; Return value:  Size  Location     Type
 14969 ;;                  1    wreg      void 
 14970 ;; Registers used:
 14971 ;;		wreg, status,2
 14972 ;; Tracked objects:
 14973 ;;		On entry : 0/0
 14974 ;;		On exit  : 0/0
 14975 ;;		Unchanged: 0/0
 14976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14977 ;;      Params:         0       0       0       0       0       0       0
 14978 ;;      Locals:         0       0       0       0       0       0       0
 14979 ;;      Temps:          0       0       0       0       0       0       0
 14980 ;;      Totals:         0       0       0       0       0       0       0
 14981 ;;Total ram usage:        0 bytes
 14982 ;; Hardware stack levels used:    1
 14983 ;; Hardware stack levels required when called:    1
 14984 ;; This function calls:
 14985 ;;		Nothing
 14986 ;; This function is called by:
 14987 ;;		_main
 14988 ;; This function uses a non-reentrant model
 14989 ;;
 14990                           
 14991                           	psect	text60
 14992  005B86                     __ptext60:
 14993                           	callstack 0
 14994  005B86                     _PWM_Init:
 14995                           	callstack 29
 14996  005B86                     
 14997                           ;fs_pwm.c: 19:     TRISCbits.RC2 = 0;
 14998  005B86  9494               	bcf	148,2,c	;volatile
 14999                           
 15000                           ;fs_pwm.c: 20:     TRISCbits.RC1 = 0;
 15001  005B88  9294               	bcf	148,1,c	;volatile
 15002  005B8A                     
 15003                           ;fs_pwm.c: 23:     CCP1CON = 0b00001100;
 15004  005B8A  0E0C               	movlw	12
 15005  005B8C  6EBD               	movwf	189,c	;volatile
 15006                           
 15007                           ;fs_pwm.c: 25:     CCP2CON = 0b00001100;
 15008  005B8E  0E0C               	movlw	12
 15009  005B90  6E66               	movwf	102,c	;volatile
 15010                           
 15011                           ;fs_pwm.c: 29:     T2CONbits.T2CKPS = 0b01;
 15012  005B92  50BA               	movf	186,w,c	;volatile
 15013  005B94  0BFC               	andlw	-4
 15014  005B96  0901               	iorlw	1
 15015  005B98  6EBA               	movwf	186,c	;volatile
 15016  005B9A                     
 15017                           ;fs_pwm.c: 30:     T2CONbits.TMR2ON = 1;
 15018  005B9A  84BA               	bsf	186,2,c	;volatile
 15019                           
 15020                           ;fs_pwm.c: 32:     TMR2 = 0;
 15021  005B9C  0E00               	movlw	0
 15022  005B9E  6EBC               	movwf	188,c	;volatile
 15023                           
 15024                           ;fs_pwm.c: 33:     PR2 = 199;
 15025  005BA0  0EC7               	movlw	199
 15026  005BA2  6EBB               	movwf	187,c	;volatile
 15027                           
 15028                           ;fs_pwm.c: 34:     CCPR1L = 0;
 15029  005BA4  0E00               	movlw	0
 15030  005BA6  6EBE               	movwf	190,c	;volatile
 15031                           
 15032                           ;fs_pwm.c: 35:     CCPR2L = 0;
 15033  005BA8  0E00               	movlw	0
 15034  005BAA  6E67               	movwf	103,c	;volatile
 15035  005BAC  0012               	return		;funcret
 15036  005BAE                     __end_of_PWM_Init:
 15037                           	callstack 0
 15038                           
 15039 ;; *************** function _Lcd_Clear *****************
 15040 ;; Defined at:
 15041 ;;		line 51 in file "fs_lcd.c"
 15042 ;; Parameters:    Size  Location     Type
 15043 ;;		None
 15044 ;; Auto vars:     Size  Location     Type
 15045 ;;		None
 15046 ;; Return value:  Size  Location     Type
 15047 ;;                  1    wreg      void 
 15048 ;; Registers used:
 15049 ;;		wreg, status,2, cstack
 15050 ;; Tracked objects:
 15051 ;;		On entry : 0/0
 15052 ;;		On exit  : 0/0
 15053 ;;		Unchanged: 0/0
 15054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15055 ;;      Params:         0       0       0       0       0       0       0
 15056 ;;      Locals:         0       0       0       0       0       0       0
 15057 ;;      Temps:          0       0       0       0       0       0       0
 15058 ;;      Totals:         0       0       0       0       0       0       0
 15059 ;;Total ram usage:        0 bytes
 15060 ;; Hardware stack levels used:    1
 15061 ;; Hardware stack levels required when called:    3
 15062 ;; This function calls:
 15063 ;;		_Lcd_Cmd
 15064 ;; This function is called by:
 15065 ;;		_main
 15066 ;; This function uses a non-reentrant model
 15067 ;;
 15068                           
 15069                           	psect	text61
 15070  005C38                     __ptext61:
 15071                           	callstack 0
 15072  005C38                     _Lcd_Clear:
 15073                           	callstack 27
 15074  005C38                     
 15075                           ;fs_lcd.c: 53:    Lcd_Cmd(0);
 15076  005C38  0E00               	movlw	0
 15077  005C3A  ECF9  F02D         	call	_Lcd_Cmd
 15078                           
 15079                           ;fs_lcd.c: 54:    Lcd_Cmd(1);
 15080  005C3E  0E01               	movlw	1
 15081  005C40  ECF9  F02D         	call	_Lcd_Cmd
 15082  005C44  0012               	return		;funcret
 15083  005C46                     __end_of_Lcd_Clear:
 15084                           	callstack 0
 15085                           
 15086 ;; *************** function _Lcd_Cmd *****************
 15087 ;; Defined at:
 15088 ;;		line 35 in file "fs_lcd.c"
 15089 ;; Parameters:    Size  Location     Type
 15090 ;;  a               1    wreg     unsigned char 
 15091 ;; Auto vars:     Size  Location     Type
 15092 ;;  a               1    2[COMRAM] unsigned char 
 15093 ;; Return value:  Size  Location     Type
 15094 ;;                  1    wreg      void 
 15095 ;; Registers used:
 15096 ;;		wreg, status,2, cstack
 15097 ;; Tracked objects:
 15098 ;;		On entry : 0/0
 15099 ;;		On exit  : 0/0
 15100 ;;		Unchanged: 0/0
 15101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15102 ;;      Params:         0       0       0       0       0       0       0
 15103 ;;      Locals:         1       0       0       0       0       0       0
 15104 ;;      Temps:          1       0       0       0       0       0       0
 15105 ;;      Totals:         2       0       0       0       0       0       0
 15106 ;;Total ram usage:        2 bytes
 15107 ;; Hardware stack levels used:    1
 15108 ;; Hardware stack levels required when called:    2
 15109 ;; This function calls:
 15110 ;;		_Lcd_Port
 15111 ;; This function is called by:
 15112 ;;		_Lcd_Clear
 15113 ;;		_Lcd_Set_Cursor
 15114 ;;		_lcd_init
 15115 ;;		_Lcd_Shift_Right
 15116 ;;		_Lcd_Shift_Left
 15117 ;; This function uses a non-reentrant model
 15118 ;;
 15119                           
 15120                           	psect	text62
 15121  005BF2                     __ptext62:
 15122                           	callstack 0
 15123  005BF2                     _Lcd_Cmd:
 15124                           	callstack 25
 15125                           
 15126                           ;incstack = 0
 15127                           ;Lcd_Cmd@a stored from wreg
 15128  005BF2  6E03               	movwf	Lcd_Cmd@a^0,c
 15129  005BF4                     
 15130                           ;fs_lcd.c: 35: void Lcd_Cmd(char a);fs_lcd.c: 36: {;fs_lcd.c: 37:    PORTDbits.RD6 = 0;
 15131  005BF4  9C83               	bcf	131,6,c	;volatile
 15132  005BF6                     
 15133                           ;fs_lcd.c: 38:    Lcd_Port(a);
 15134  005BF6  5003               	movf	Lcd_Cmd@a^0,w,c
 15135  005BF8  EC6D  F02B         	call	_Lcd_Port
 15136  005BFC                     
 15137                           ;fs_lcd.c: 39:    PORTDbits.RD7 = 1;
 15138  005BFC  8E83               	bsf	131,7,c	;volatile
 15139  005BFE                     
 15140                           ;fs_lcd.c: 40:    _delay((unsigned long)((2)*(64000000UL/4000.0)));
 15141  005BFE  0E2A               	movlw	42
 15142  005C00  6E02               	movwf	??_Lcd_Cmd^0,c
 15143  005C02  0E8E               	movlw	142
 15144  005C04                     u7817:
 15145  005C04  2EE8               	decfsz	wreg,f,c
 15146  005C06  D7FE               	bra	u7817
 15147  005C08  2E02               	decfsz	??_Lcd_Cmd^0,f,c
 15148  005C0A  D7FC               	bra	u7817
 15149  005C0C                     
 15150                           ;fs_lcd.c: 41:    PORTDbits.RD7 = 0;
 15151  005C0C  9E83               	bcf	131,7,c	;volatile
 15152  005C0E  0012               	return		;funcret
 15153  005C10                     __end_of_Lcd_Cmd:
 15154                           	callstack 0
 15155                           
 15156 ;; *************** function _Lcd_Port *****************
 15157 ;; Defined at:
 15158 ;;		line 12 in file "fs_lcd.c"
 15159 ;; Parameters:    Size  Location     Type
 15160 ;;  a               1    wreg     unsigned char 
 15161 ;; Auto vars:     Size  Location     Type
 15162 ;;  a               1    0[COMRAM] unsigned char 
 15163 ;; Return value:  Size  Location     Type
 15164 ;;                  1    wreg      void 
 15165 ;; Registers used:
 15166 ;;		wreg
 15167 ;; Tracked objects:
 15168 ;;		On entry : 0/0
 15169 ;;		On exit  : 0/0
 15170 ;;		Unchanged: 0/0
 15171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15172 ;;      Params:         0       0       0       0       0       0       0
 15173 ;;      Locals:         1       0       0       0       0       0       0
 15174 ;;      Temps:          0       0       0       0       0       0       0
 15175 ;;      Totals:         1       0       0       0       0       0       0
 15176 ;;Total ram usage:        1 bytes
 15177 ;; Hardware stack levels used:    1
 15178 ;; Hardware stack levels required when called:    1
 15179 ;; This function calls:
 15180 ;;		Nothing
 15181 ;; This function is called by:
 15182 ;;		_Lcd_Cmd
 15183 ;;		_lcd_init
 15184 ;;		_Lcd_Write_Char
 15185 ;; This function uses a non-reentrant model
 15186 ;;
 15187                           
 15188                           	psect	text63
 15189  0056DA                     __ptext63:
 15190                           	callstack 0
 15191  0056DA                     _Lcd_Port:
 15192                           	callstack 25
 15193                           
 15194                           ;incstack = 0
 15195                           ;Lcd_Port@a stored from wreg
 15196  0056DA  6E01               	movwf	Lcd_Port@a^0,c
 15197  0056DC                     
 15198                           ;fs_lcd.c: 12: void Lcd_Port(char a);fs_lcd.c: 13: {;fs_lcd.c: 14:    if(a & 1) { PORTBb
      +                          its.RB0 = 1;}
 15199  0056DC  A001               	btfss	Lcd_Port@a^0,0,c
 15200  0056DE  EF73  F02B         	goto	u6291
 15201  0056E2  EF75  F02B         	goto	u6290
 15202  0056E6                     u6291:
 15203  0056E6  EF78  F02B         	goto	l96
 15204  0056EA                     u6290:
 15205  0056EA  8081               	bsf	129,0,c	;volatile
 15206  0056EC  EF79  F02B         	goto	l5202
 15207  0056F0                     l96:
 15208  0056F0  9081               	bcf	129,0,c	;volatile
 15209  0056F2                     l5202:
 15210                           
 15211                           ;fs_lcd.c: 17:    if(a & 2) { PORTBbits.RB1 = 1;}
 15212  0056F2  A201               	btfss	Lcd_Port@a^0,1,c
 15213  0056F4  EF7E  F02B         	goto	u6301
 15214  0056F8  EF80  F02B         	goto	u6300
 15215  0056FC                     u6301:
 15216  0056FC  EF83  F02B         	goto	l98
 15217  005700                     u6300:
 15218  005700  8281               	bsf	129,1,c	;volatile
 15219  005702  EF84  F02B         	goto	l5206
 15220  005706                     l98:
 15221  005706  9281               	bcf	129,1,c	;volatile
 15222  005708                     l5206:
 15223                           
 15224                           ;fs_lcd.c: 20:    if(a & 4) {PORTBbits.RB2 = 1;}
 15225  005708  A401               	btfss	Lcd_Port@a^0,2,c
 15226  00570A  EF89  F02B         	goto	u6311
 15227  00570E  EF8B  F02B         	goto	u6310
 15228  005712                     u6311:
 15229  005712  EF8E  F02B         	goto	l100
 15230  005716                     u6310:
 15231  005716  8481               	bsf	129,2,c	;volatile
 15232  005718  EF8F  F02B         	goto	l5210
 15233  00571C                     l100:
 15234  00571C  9481               	bcf	129,2,c	;volatile
 15235  00571E                     l5210:
 15236                           
 15237                           ;fs_lcd.c: 23:    if(a & 8) {PORTBbits.RB3 = 1;}
 15238  00571E  A601               	btfss	Lcd_Port@a^0,3,c
 15239  005720  EF94  F02B         	goto	u6321
 15240  005724  EF96  F02B         	goto	u6320
 15241  005728                     u6321:
 15242  005728  EF99  F02B         	goto	l102
 15243  00572C                     u6320:
 15244  00572C  8681               	bsf	129,3,c	;volatile
 15245  00572E  EF9A  F02B         	goto	l104
 15246  005732                     l102:
 15247  005732  9681               	bcf	129,3,c	;volatile
 15248  005734                     l104:
 15249  005734  0012               	return		;funcret
 15250  005736                     __end_of_Lcd_Port:
 15251                           	callstack 0
 15252                           
 15253 ;; *************** function _TIMER0 *****************
 15254 ;; Defined at:
 15255 ;;		line 33 in file "fs_timer.c"
 15256 ;; Parameters:    Size  Location     Type
 15257 ;;		None
 15258 ;; Auto vars:     Size  Location     Type
 15259 ;;		None
 15260 ;; Return value:  Size  Location     Type
 15261 ;;                  1    wreg      void 
 15262 ;; Registers used:
 15263 ;;		wreg, status,2, status,0
 15264 ;; Tracked objects:
 15265 ;;		On entry : 0/0
 15266 ;;		On exit  : 0/0
 15267 ;;		Unchanged: 0/0
 15268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15269 ;;      Params:         0       0       0       0       0       0       0
 15270 ;;      Locals:         0       0       0       0       0       0       0
 15271 ;;      Temps:          0       0       0       0       0       0       0
 15272 ;;      Totals:         0       0       0       0       0       0       0
 15273 ;;Total ram usage:        0 bytes
 15274 ;; Hardware stack levels used:    1
 15275 ;; This function calls:
 15276 ;;		Nothing
 15277 ;; This function is called by:
 15278 ;;		Interrupt level 2
 15279 ;; This function uses a non-reentrant model
 15280 ;;
 15281                           
 15282                           	psect	intcode
 15283  000008                     __pintcode:
 15284                           	callstack 0
 15285  000008                     _TIMER0:
 15286                           	callstack 20
 15287                           
 15288                           ;incstack = 0
 15289  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15290  00000A                     
 15291                           ;fs_timer.c: 35:     if ((INTCONbits.TMR0IF)&&(INTCONbits.TMR0IE))
 15292  00000A  A4F2               	btfss	242,2,c	;volatile
 15293  00000C  EF0A  F000         	goto	i2u771_41
 15294  000010  EF0C  F000         	goto	i2u771_40
 15295  000014                     i2u771_41:
 15296  000014  EF32  F000         	goto	i2l481
 15297  000018                     i2u771_40:
 15298  000018  AAF2               	btfss	242,5,c	;volatile
 15299  00001A  EF11  F000         	goto	i2u772_41
 15300  00001E  EF13  F000         	goto	i2u772_40
 15301  000022                     i2u772_41:
 15302  000022  EF32  F000         	goto	i2l481
 15303  000026                     i2u772_40:
 15304  000026                     
 15305                           ;fs_timer.c: 36:     {;fs_timer.c: 37:         INTCONbits.TMR0IF = 0;
 15306  000026  94F2               	bcf	242,2,c	;volatile
 15307  000028                     
 15308                           ;fs_timer.c: 38:         TMR0H = 0x63;
 15309  000028  0E63               	movlw	99
 15310  00002A  6ED7               	movwf	215,c	;volatile
 15311                           
 15312                           ;fs_timer.c: 39:         TMR0L = 0xC0;
 15313  00002C  0EC0               	movlw	192
 15314  00002E  6ED6               	movwf	214,c	;volatile
 15315  000030                     
 15316                           ;fs_timer.c: 41:         timer_value.timer_0_counter++;
 15317  000030  0100               	movlb	0	; () banked
 15318  000032  2BFC               	incf	(_timer_value+9)& (0+255),f,b
 15319  000034                     
 15320                           ; BSR set to: 0
 15321                           ;fs_timer.c: 43:         if(button_bounce_controller.menu == 1)
 15322  000034  A1FF               	btfss	_button_bounce_controller& (0+255),0,b
 15323  000036  EF1F  F000         	goto	i2u773_41
 15324  00003A  EF21  F000         	goto	i2u773_40
 15325  00003E                     i2u773_41:
 15326  00003E  EF24  F000         	goto	i2l6190
 15327  000042                     i2u773_40:
 15328  000042                     
 15329                           ; BSR set to: 0
 15330                           ;fs_timer.c: 44:         {;fs_timer.c: 45:              timer_value.menu_login_delay++;
 15331  000042  2BFB               	incf	(_timer_value+8)& (0+255),f,b
 15332                           
 15333                           ;fs_timer.c: 46:         }
 15334  000044  EF26  F000         	goto	i2l6192
 15335  000048                     i2l6190:
 15336                           
 15337                           ; BSR set to: 0
 15338                           ;fs_timer.c: 48:         {;fs_timer.c: 49:              timer_value.menu_login_delay = 0
      +                          ;
 15339  000048  0E00               	movlw	0
 15340  00004A  6FFB               	movwf	(_timer_value+8)& (0+255),b
 15341  00004C                     i2l6192:
 15342                           
 15343                           ; BSR set to: 0
 15344                           ;fs_timer.c: 52:         if (timer_value.timer_0_counter >= 100)
 15345  00004C  0E63               	movlw	99
 15346  00004E  65FC               	cpfsgt	(_timer_value+9)& (0+255),b
 15347  000050  EF2C  F000         	goto	i2u774_41
 15348  000054  EF2E  F000         	goto	i2u774_40
 15349  000058                     i2u774_41:
 15350  000058  EF32  F000         	goto	i2l481
 15351  00005C                     i2u774_40:
 15352  00005C                     
 15353                           ; BSR set to: 0
 15354                           ;fs_timer.c: 53:         {;fs_timer.c: 54:             timer_value.timer_0_counter = 0;
 15355  00005C  0E00               	movlw	0
 15356  00005E  6FFC               	movwf	(_timer_value+9)& (0+255),b
 15357  000060                     
 15358                           ; BSR set to: 0
 15359                           ;fs_timer.c: 55:             timer_counter_flag.one_second_flag = 1;
 15360  000060  0101               	movlb	1	; () banked
 15361  000062  819E               	bsf	_timer_counter_flag& (0+255),0,b
 15362  000064                     i2l481:
 15363  000064  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15364  000066  0011               	retfie		f
 15365  000068                     __end_of_TIMER0:
 15366                           	callstack 0
 15367                           
 15368                           	psect	rparam
 15369  0000                     
 15370                           	psect	temp
 15371  00005F                     btemp:
 15372                           	callstack 0
 15373  00005F                     	ds	1
 15374  0000                     int$flags	set	btemp
 15375  0000                     wtemp8	set	btemp+1
 15376  0000                     ttemp5	set	btemp+1
 15377  0000                     ttemp6	set	btemp+4
 15378  0000                     ttemp7	set	btemp+8
 15379                           
 15380                           	psect	idloc
 15381                           
 15382                           ;Config register IDLOC0 @ 0x200000
 15383                           ;	unspecified, using default values
 15384  200000                     	org	2097152
 15385  200000  FF                 	db	255
 15386                           
 15387                           ;Config register IDLOC1 @ 0x200001
 15388                           ;	unspecified, using default values
 15389  200001                     	org	2097153
 15390  200001  FF                 	db	255
 15391                           
 15392                           ;Config register IDLOC2 @ 0x200002
 15393                           ;	unspecified, using default values
 15394  200002                     	org	2097154
 15395  200002  FF                 	db	255
 15396                           
 15397                           ;Config register IDLOC3 @ 0x200003
 15398                           ;	unspecified, using default values
 15399  200003                     	org	2097155
 15400  200003  FF                 	db	255
 15401                           
 15402                           ;Config register IDLOC4 @ 0x200004
 15403                           ;	unspecified, using default values
 15404  200004                     	org	2097156
 15405  200004  FF                 	db	255
 15406                           
 15407                           ;Config register IDLOC5 @ 0x200005
 15408                           ;	unspecified, using default values
 15409  200005                     	org	2097157
 15410  200005  FF                 	db	255
 15411                           
 15412                           ;Config register IDLOC6 @ 0x200006
 15413                           ;	unspecified, using default values
 15414  200006                     	org	2097158
 15415  200006  FF                 	db	255
 15416                           
 15417                           ;Config register IDLOC7 @ 0x200007
 15418                           ;	unspecified, using default values
 15419  200007                     	org	2097159
 15420  200007  FF                 	db	255
 15421                           
 15422                           	psect	config
 15423                           
 15424                           ; Padding undefined space
 15425  300000                     	org	3145728
 15426  300000  FF                 	db	255
 15427                           
 15428                           ;Config register CONFIG1H @ 0x300001
 15429                           ;	Oscillator Selection bits
 15430                           ;	FOSC = INTIO67, Internal oscillator block
 15431                           ;	4X PLL Enable
 15432                           ;	PLLCFG = ON, Oscillator multiplied by 4
 15433                           ;	Primary clock enable bit
 15434                           ;	PRICLKEN = ON, Primary clock is always enabled
 15435                           ;	Fail-Safe Clock Monitor Enable bit
 15436                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 15437                           ;	Internal/External Oscillator Switchover bit
 15438                           ;	IESO = ON, Oscillator Switchover mode enabled
 15439  300001                     	org	3145729
 15440  300001  B8                 	db	184
 15441                           
 15442                           ;Config register CONFIG2L @ 0x300002
 15443                           ;	Power-up Timer Enable bit
 15444                           ;	PWRTEN = OFF, Power up timer disabled
 15445                           ;	Brown-out Reset Enable bits
 15446                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 15447                           ;	Brown Out Reset Voltage bits
 15448                           ;	BORV = 190, VBOR set to 1.90 V nominal
 15449  300002                     	org	3145730
 15450  300002  1F                 	db	31
 15451                           
 15452                           ;Config register CONFIG2H @ 0x300003
 15453                           ;	Watchdog Timer Enable bits
 15454                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 15455                           ;	Watchdog Timer Postscale Select bits
 15456                           ;	WDTPS = 32768, 1:32768
 15457  300003                     	org	3145731
 15458  300003  3C                 	db	60
 15459                           
 15460                           ; Padding undefined space
 15461  300004                     	org	3145732
 15462  300004  FF                 	db	255
 15463                           
 15464                           ;Config register CONFIG3H @ 0x300005
 15465                           ;	CCP2 MUX bit
 15466                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 15467                           ;	PORTB A/D Enable bit
 15468                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
 15469                           ;	P3A/CCP3 Mux bit
 15470                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 15471                           ;	HFINTOSC Fast Start-up
 15472                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 15473                           ;	Timer3 Clock input mux bit
 15474                           ;	T3CMX = PORTC0, T3CKI is on RC0
 15475                           ;	ECCP2 B output mux bit
 15476                           ;	P2BMX = PORTD2, P2B is on RD2
 15477                           ;	MCLR Pin Enable bit
 15478                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 15479  300005                     	org	3145733
 15480  300005  BD                 	db	189
 15481                           
 15482                           ;Config register CONFIG4L @ 0x300006
 15483                           ;	Stack Full/Underflow Reset Enable bit
 15484                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
 15485                           ;	Single-Supply ICSP Enable bit
 15486                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 15487                           ;	Extended Instruction Set Enable bit
 15488                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 15489                           ;	Background Debug
 15490                           ;	DEBUG = 0x1, unprogrammed default
 15491  300006                     	org	3145734
 15492  300006  84                 	db	132
 15493                           
 15494                           ; Padding undefined space
 15495  300007                     	org	3145735
 15496  300007  FF                 	db	255
 15497                           
 15498                           ;Config register CONFIG5L @ 0x300008
 15499                           ;	Code Protection Block 0
 15500                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 15501                           ;	Code Protection Block 1
 15502                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 15503                           ;	Code Protection Block 2
 15504                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 15505                           ;	Code Protection Block 3
 15506                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 15507  300008                     	org	3145736
 15508  300008  0F                 	db	15
 15509                           
 15510                           ;Config register CONFIG5H @ 0x300009
 15511                           ;	Boot Block Code Protection bit
 15512                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 15513                           ;	Data EEPROM Code Protection bit
 15514                           ;	CPD = OFF, Data EEPROM not code-protected
 15515  300009                     	org	3145737
 15516  300009  C0                 	db	192
 15517                           
 15518                           ;Config register CONFIG6L @ 0x30000A
 15519                           ;	Write Protection Block 0
 15520                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 15521                           ;	Write Protection Block 1
 15522                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 15523                           ;	Write Protection Block 2
 15524                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 15525                           ;	Write Protection Block 3
 15526                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 15527  30000A                     	org	3145738
 15528  30000A  0F                 	db	15
 15529                           
 15530                           ;Config register CONFIG6H @ 0x30000B
 15531                           ;	Configuration Register Write Protection bit
 15532                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 15533                           ;	Boot Block Write Protection bit
 15534                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 15535                           ;	Data EEPROM Write Protection bit
 15536                           ;	WRTD = OFF, Data EEPROM not write-protected
 15537  30000B                     	org	3145739
 15538  30000B  E0                 	db	224
 15539                           
 15540                           ;Config register CONFIG7L @ 0x30000C
 15541                           ;	Table Read Protection Block 0
 15542                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 15543                           ;	Table Read Protection Block 1
 15544                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 15545                           ;	Table Read Protection Block 2
 15546                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 15547                           ;	Table Read Protection Block 3
 15548                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 15549  30000C                     	org	3145740
 15550  30000C  0F                 	db	15
 15551                           
 15552                           ;Config register CONFIG7H @ 0x30000D
 15553                           ;	Boot Block Table Read Protection bit
 15554                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 15555  30000D                     	org	3145741
 15556  30000D  40                 	db	64
 15557                           tosu	equ	0xFFF
 15558                           tosh	equ	0xFFE
 15559                           tosl	equ	0xFFD
 15560                           stkptr	equ	0xFFC
 15561                           pclatu	equ	0xFFB
 15562                           pclath	equ	0xFFA
 15563                           pcl	equ	0xFF9
 15564                           tblptru	equ	0xFF8
 15565                           tblptrh	equ	0xFF7
 15566                           tblptrl	equ	0xFF6
 15567                           tablat	equ	0xFF5
 15568                           prodh	equ	0xFF4
 15569                           prodl	equ	0xFF3
 15570                           indf0	equ	0xFEF
 15571                           postinc0	equ	0xFEE
 15572                           postdec0	equ	0xFED
 15573                           preinc0	equ	0xFEC
 15574                           plusw0	equ	0xFEB
 15575                           fsr0h	equ	0xFEA
 15576                           fsr0l	equ	0xFE9
 15577                           wreg	equ	0xFE8
 15578                           indf1	equ	0xFE7
 15579                           postinc1	equ	0xFE6
 15580                           postdec1	equ	0xFE5
 15581                           preinc1	equ	0xFE4
 15582                           plusw1	equ	0xFE3
 15583                           fsr1h	equ	0xFE2
 15584                           fsr1l	equ	0xFE1
 15585                           bsr	equ	0xFE0
 15586                           indf2	equ	0xFDF
 15587                           postinc2	equ	0xFDE
 15588                           postdec2	equ	0xFDD
 15589                           preinc2	equ	0xFDC
 15590                           plusw2	equ	0xFDB
 15591                           fsr2h	equ	0xFDA
 15592                           fsr2l	equ	0xFD9
 15593                           status	equ	0xFD8

Data Sizes:
    Strings     214
    Constant    0
    Data        8
    BSS         284
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    147     160
    BANK1           256      0     247
    BANK2           256      0      32
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_27(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_27(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_22(CODE[4]), STR_21(CODE[4]), STR_18(CODE[4]), STR_17(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_22(CODE[4]), STR_21(CODE[4]), STR_18(CODE[4]), STR_17(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[13]), STR_14(CODE[14]), STR_12(CODE[16]), STR_10(CODE[16]), 
		 -> STR_8(CODE[18]), STR_6(CODE[18]), STR_4(CODE[18]), STR_2(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[13]), STR_14(CODE[14]), STR_12(CODE[16]), STR_10(CODE[16]), 
		 -> STR_8(CODE[18]), STR_6(CODE[18]), STR_4(CODE[18]), STR_2(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[13]), STR_14(CODE[14]), STR_12(CODE[16]), STR_10(CODE[16]), 
		 -> STR_8(CODE[18]), STR_6(CODE[18]), STR_4(CODE[18]), STR_2(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[13]), STR_14(CODE[14]), STR_12(CODE[16]), STR_10(CODE[16]), 
		 -> STR_8(CODE[18]), STR_6(CODE[18]), STR_4(CODE[18]), STR_2(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2365_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_15(CODE[17]), STR_13(CODE[17]), STR_11(CODE[17]), STR_9(CODE[17]), 
		 -> STR_7(CODE[17]), STR_5(CODE[17]), STR_3(CODE[17]), STR_1(CODE[17]), 
		 -> stateMachine@textCursor2(BANK0[16]), 


Critical Paths under _main in COMRAM

    _system_init->_eepromRead
    _stopMotor->_PWM1_setDC
    _stopMotor->_PWM2_setDC
    _startMotor->_PWM1_setDC
    _startMotor->_PWM2_setDC
    _startMotor->_speedControl
    _speedControl->___fltol
    _scanAdcConversion->___fltol
    _calculatedAverageValue->___xxtofl
    _PWM2_setDC->___fltol
    _PWM1_setDC->___fltol
    _fabsf->___xxtofl
    ___xxtofl->___lldiv
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___fltol->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _lcd_init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _TIMER0 in COMRAM

    None.

Critical Paths under _main in BANK0

    _menuControl->_stateMachine
    _stateMachine->_sprintf
    _startMotor->_speedControl
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _TIMER0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TIMER0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TIMER0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TIMER0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TIMER0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TIMER0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  100437
                          _Lcd_Clear
                         _PWM1_setDC
                         _PWM2_setDC
                           _PWM_Init
                            _adcInit
                           _lcd_init
                           _mcu_init
                        _menuControl
                     _menuInitialize
                        _system_init
                       _timer_0_init
 ---------------------------------------------------------------------------------
 (1) _timer_0_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_init                                          2     2      0      22
                                              1 COMRAM     2     2      0
                         _eepromRead
 ---------------------------------------------------------------------------------
 (2) _eepromRead                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _menuInitialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _menuControl                                          0     0      0   93759
                 _buttonControlFlags
                       _stateMachine
 ---------------------------------------------------------------------------------
 (2) _stateMachine                                        18    18      0   93759
                                            129 BANK0     18    18      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fladd
                             ___flge
                            ___flsub
                        _eepromWrite
                            _sprintf
                         _startMotor
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _stopMotor                                            0     0      0    6348
                         _PWM1_setDC
                         _PWM2_setDC
 ---------------------------------------------------------------------------------
 (3) _startMotor                                           0     0      0   32873
                         _PWM1_setDC
                         _PWM2_setDC
             _calculatedAverageValue
                  _scanAdcConversion
                       _speedControl
 ---------------------------------------------------------------------------------
 (4) _speedControl                                        10     6      4   11063
                                             87 COMRAM     6     2      4
                                              0 BANK0      4     4      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) _scanAdcConversion                                    2     2      0   12556
                                             87 COMRAM     2     2      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                       _readAdcValue
 ---------------------------------------------------------------------------------
 (5) _readAdcValue                                         7     5      2      46
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _calculatedAverageValue                              24    24      0    2906
                                             27 COMRAM    24    24      0
                            ___lldiv
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8    1282
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) _PWM2_setDC                                           6     4      2    3174
                                             87 COMRAM     6     4      2
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (4) _PWM1_setDC                                           6     4      2    3174
                                             87 COMRAM     6     4      2
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (5) _fabsf                                                8     4      4     199
                                             27 COMRAM     8     4      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4    1310
                                             13 COMRAM    14    10      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    10      8   42834
                                            111 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   41409
                                            103 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           50    44      6   41025
                                             71 BANK0     32    26      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   30053
                                             87 COMRAM     7     0      7
                                             10 BANK0     61    61      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     490
                                             77 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4    1369
                                             77 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _fabsf (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    3801
                                             68 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    3022
                                             52 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    5240
                                             27 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8     942
                                             52 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    4591
                                             52 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5042
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1396
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eepromWrite                                          2     1      1     500
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_String                                     6     4      2    1484
                                              4 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (4) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Set_Cursor                                       5     4      1    1596
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _buttonControlFlags                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mcu_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     198
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (4) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (5) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _TIMER0                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _PWM1_setDC
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
       _fabsf (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
     ___xxtofl
       ___lldiv (ARG)
     _fabsf
       ___xxtofl (ARG)
         ___lldiv (ARG)
   _PWM2_setDC
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
       _fabsf (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
     ___xxtofl
       ___lldiv (ARG)
     _fabsf
       ___xxtofl (ARG)
         ___lldiv (ARG)
   _PWM_Init
   _adcInit
   _lcd_init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _mcu_init
   _menuControl
     _buttonControlFlags
     _stateMachine
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___flge
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
       _eepromWrite
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fleq
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
                 _fabsf (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper
       _startMotor
         _PWM1_setDC
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
           _fabsf
             ___xxtofl (ARG)
               ___lldiv (ARG)
         _PWM2_setDC
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
           _fabsf
             ___xxtofl (ARG)
               ___lldiv (ARG)
         _calculatedAverageValue
           ___lldiv
           ___lmul
           ___xxtofl
             ___lldiv (ARG)
         _scanAdcConversion
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
           _readAdcValue
         _speedControl
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
       _stopMotor
         _PWM1_setDC
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
           _fabsf
             ___xxtofl (ARG)
               ___lldiv (ARG)
         _PWM2_setDC
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
           _fabsf
             ___xxtofl (ARG)
               ___lldiv (ARG)
   _menuInitialize
   _system_init
     _eepromRead
   _timer_0_init

 _TIMER0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      20       8       12.5%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      F7       6       96.5%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     93      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     215       9        0.0%
DATA                 0      0     215      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Aug 11 18:22:22 2020

                   ___fldiv@aexp 004D                     ___fldiv@bexp 004C  
                   ___fldiv@sign 0045                               l41 5974  
                             l35 58CE                               l38 58F6  
                             l54 241C                               l70 5BE0  
                             l72 5BEE                               l57 39BC  
                             l73 5BF0                               l76 5B4A  
                             l78 5B58                               _KD 01EF  
                             l79 5B5C                               l96 56F0  
                             l98 5706                               _KP 01F3  
                   ___awdiv@sign 0006              ___wmul@multiplicand 0003  
            __end_of_system_init 494C                              l100 571C  
                            l102 5732                              l110 5C44  
                            l104 5734         ??_calculatedAverageValue 001C  
                            l122 5AFA                              l107 5C0E  
                            l116 561C                              l119 5306  
                            l320 4602                              l128 5384  
                            l312 5B84                              l321 4622  
                            l250 5C24                              l322 4642  
                            l403 5BAC                              l323 4662  
                            l315 4562                              l411 53FE  
                            l324 4682                              l316 4582  
                            l325 46A2                              l317 45A2  
                            l341 12AE                              l333 54E2  
                            l253 494A                              l318 45C2  
                            l247 5C16                              l327 46C2  
                            l319 45E2                              l407 5478  
                            l343 1358                              l440 4072  
                            l344 13A0                              l601 453E  
                            l521 5270                              l514 5260  
                            l443 59B0                              l347 1406  
                            l365 17B8                              l357 1618  
                            l614 4826                              l446 5A8E  
                            l382 1C16                              l367 1854  
                   _startIsClick 019C                              l731 5122  
                            l484 5C36                              l718 5072  
                            l487 5BD2                              l752 4B0E  
                            l761 5A20                              l746 51CC  
                            l498 553C                              l499 554C  
                            l757 4B54                              l784 4A50  
                            _PR2 000FBB                              _abs 58F8  
                            _pad 4EEA                     ___awmod@sign 0006  
                            wreg 000FE8                     ___flmul@aexp 002D  
                   ___flmul@bexp 002E                     ___flmul@sign 0028  
                   ___flmul@temp 0033                     ___flmul@prod 002F  
                    _stopIsClick 019B                     ___fltol@exp1 0057  
                           l1101 2FD8                             l1110 3246  
                           l1111 3234                             l1015 2C42  
                           l1032 2D5C                             l1024 2F12  
                           l1016 2C30                             l1105 333C  
                           l1041 2E2C                             l1017 2BF6  
                           l1042 2E1A                             ?_abs 0013  
                           l1108 31CE                             l1213 4F30  
                           l1118 32FE                             l1142 40CA  
                           l1071 3536                             l1216 4F72  
                           l1224 3A5E                             l1080 357C  
                           l1057 5870                             l1145 4226  
                           l1218 4FAE                             l1226 3A66  
                           l1082 35F4                             l1074 34FA  
                           l1306 0E68                             l1170 57D8  
                           l1083 35E2                             l1163 5B2E  
                           l1244 3C9E                             l1500 4E1E  
                           l1156 41BE                             l1069 36D6  
                           l1149 4162                             l1510 5674  
                           l1262 129C                             l4000 2C2E  
                           l1280 0ACC                             l1425 43AE  
                           l4010 2C84                             l4002 2C50  
                           l1434 3EB4                             l1515 567C  
                           l1444 5A58                             l1452 582A  
                           l1428 43B6                             l4100 2F02  
                           l4020 2CBE                             l4012 2C92  
                           l4004 2C60                             l1372 2998  
                           l1364 2A52                             l1437 3DF8  
                           l4110 5894                             l4030 2D2A  
                           l4022 2CC0                             l4014 2CA0  
                           l4200 47BE                             l4104 5872  
                           l4112 5A90                             l4040 2D82  
                           l4032 2D2C                             l4024 2CCA  
                           l4016 2CAC                             l4008 2C74  
                           l5000 0EF8                             l1473 4EE8  
                           l1481 58B4                             l4202 47D0  
                           l1394 592E                             l4106 587E  
                           l4114 5A9C                             l4050 2DB0  
                           l4034 2D3C                             l4018 2CB0  
                           l4026 2CD0                             l1490 56D8  
                           l1458 59E8                             l4122 59B2  
                           l5010 0F48                             l5002 0F0C  
                           l1378 55AE                             l1379 55B6  
                           l4140 43EE                             l4132 43B8  
                           l4204 47D6                             l1484 5C4E  
                           l4108 5890                             l4116 5AA0  
                           l4300 3562                             l4220 336A  
                           l4212 333E                             l4052 2DBE  
                           l4044 2D96                             l4060 2DDC  
                           l4028 2CF6                             l4036 2D4C  
                           l5100 1206                             l5020 0F7C  
                           l5012 0F56                             l5004 0F1E  
                           l1397 5936                             l1389 4C52  
                           l4126 5BAE                             l4150 444A  
                           l4142 43FC                             l4134 43BC  
                           l4206 47E6                             l4118 5AB8  
                           l4310 359E                             l4302 356C  
                           l4230 33A4                             l4222 337A  
                           l4214 334A                             l4054 2DC6  
                           l4046 2DA0                             l4038 2D72  
                           l4062 2DEA                             l5110 125E  
                           l5102 120C                             l5030 0FAE  
                           l5022 0F8C                             l5014 0F66  
                           l5006 0F2C                             l5200 56EA  
                           l4128 5BCA                             l4160 44B4  
                           l4152 4452                             l4144 441C  
                           l4136 43CA                             l4208 4806  
                           l1496 5AC4                             l4320 3610  
                           l4312 35AC                             l4304 357A  
                           l4240 33D0                             l4232 33AA  
                           l4224 338A                             l4216 3358  
                           l4400 305C                             l4072 2E3C  
                           l4080 2E92                             l4064 2DEE  
                           l4056 2DCA                             l4048 2DAE  
                           l5112 1266                             l5040 1056  
                           l5032 0FC0                             l5024 0F90  
                           l5016 0F6A                             l5008 0F34  
                           l6000 1B0E                             l5210 571E  
                           l5202 56F2                             l5130 4260  
                           l5122 4228                             l4170 44FE  
                           l4162 44D4                             l4154 4466  
                           l4146 4420                             l4138 43EA  
                           l4330 367C                             l4322 361E  
                           l4314 35DA                             l4306 358C  
                           l4250 340A                             l4242 33E0  
                           l4234 33B0                             l4226 338C  
                           l4218 335A                             l4410 309E  
                           l4402 3068                             l4090 2EE4  
                           l4082 2EA2                             l4074 2E48  
                           l4066 2DFC                             l4058 2DDA  
                           l5114 1276                             l5106 1240  
                           l5050 10AE                             l5042 105E  
                           l5034 0FC4                             l5026 0F96  
                           l5018 0F70                             l6002 1B42  
                           l6010 1B9A                             l5212 572C  
                           l5204 5700                             l6100 5B9A  
                           l5140 42B6                             l5132 4296  
                           l5124 423C                             l4172 451E  
                           l4164 44D6                             l4156 4474  
                           l4148 442C                             l4180 46D6  
                           l4500 4FE8                             l4340 36CA  
                           l4332 3696                             l4324 3648  
                           l4308 359A                             l4252 3420  
                           l4244 33F0                             l4236 33BE  
                           l4228 3394                             l4420 3100  
                           l4412 30AA                             l4404 3074  
                           l4092 2EEA                             l4084 2EB2  
                           l4076 2E56                             l4068 2E12  
                           l5116 127C                             l5108 1252  
                           l5060 10F8                             l5052 10BE  
                           l5028 0F9C                             l5036 0FCA  
                           l5044 1062                             l5300 241E  
                           l6004 1B52                             l5206 5708  
                           l6030 5C38                             l5150 4330  
                           l5142 42BE                             l5134 429A  
                           l5126 4240                             l4166 44E8  
                           l4158 4486                             l4190 4746  
                           l4182 46F6                             l4510 5020  
                           l4502 4FF0                             l4342 36CC  
                           l4334 36B2                             l4318 3604  
                           l4326 364C                             l4270 3474  
                           l4254 3430                             l4262 3450  
                           l4246 33F2                             l4238 33C0  
                           l4430 3196                             l4422 310C  
                           l4414 30BA                             l4406 3082  
                           l4350 2F14                             l4094 2EEC  
                           l4086 2ED2                             l4078 2E90  
                           l5070 112E                             l5062 1100  
                           l5054 10D0                             l5046 1080  
                           l5038 1022                             l5310 248A  
                           l5302 2442                             l5214 5AFC  
                           l5230 551C                             l5222 54E4  
                           l6006 1B62                             l6110 5494  
                           l6102 547A                             l5208 5716  
                           l6024 5938                             l6040 52B0  
                           l6032 5272                             l5144 42C6  
                           l5128 4244                             l4168 44EE  
                           l4192 474E                             l4184 46FA  
                           l4176 46C4                             l4520 504C  
                           l4512 5026                             l4504 5002  
                           l4336 36B6                             l4328 3666  
                           l4280 34C6                             l4272 348E  
                           l4264 3460                             l4256 3438  
                           l4248 33FA                             l4600 4B52  
                           l4440 31EC                             l4432 31B4  
                           l4424 3128                             l4416 30D4  
                           l4408 308E                             l4360 2F50  
                           l4352 2F20                             l4096 2EF2  
                           l4088 2ED6                             l5080 118A  
                           l5072 1136                             l5064 1110  
                           l5056 10D4                             l5048 109C  
                           l5400 29F2                             l5320 250A  
                           l5312 24C0                             l5304 2450  
                           l5216 5B1C                             l5240 5208  
                           l5232 51CE                             l5224 54F4  
                           l6008 1B66                             l6016 1BB2  
                           l6120 54D2                             l6112 54A2  
                           l6104 547E                             l6026 595A  
                           l6050 52E2                             l6042 52C0  
                           l6034 528C                             l5154 436E  
                           l5146 42FA                             l5138 42A0  
                           l4194 4762                             l4186 4708  
                           l4178 46C8                             l4514 503C  
                           l4506 500A                             l4522 5052  
                           l4530 5074                             l4338 36C4  
                           l4290 3522                             l4282 34D6  
                           l4274 349E                             l4266 3460  
                           l4258 343C                             l4450 3256  
                           l4442 31F0                             l4434 31BE  
                           l4426 3152                             l4418 30E4  
                           l4370 2F82                             l4362 2F60  
                           l4354 2F2E                             l4098 2F00  
                           l5090 11CA                             l5082 1192  
                           l5074 1142                             l5066 1118  
                           l5058 10E6                             l5170 4D80  
                           l5330 2592                             l5314 24CE  
                           l5306 2462                             l5410 2A1C  
                           l5218 5B1E                             l5250 5250  
                           l5242 5216                             l5234 51DE  
                           l5226 5502                             l6122 54D4  
                           l6114 54B2                             l6106 5482  
                           l6130 4C58                             l6028 5962  
                           l6060 5300                             l6052 52E8  
                           l6044 52C6                             l6036 5292  
                           l5500 5AD4                             l5156 4380  
                           l4196 4770                             l4188 4728  
                           l4524 5062                             l4516 5044  
                           l4508 5012                             l4540 50A0  
                           l4532 5078                             l4292 3524  
                           l4284 34EA                             l4276 34AE  
                           l4460 32B8                             l4452 3262  
                           l4444 31FE                             l4436 31CC  
                           l4428 3188                             l4380 2FC2  
                           l4372 2F90                             l4364 2F66  
                           l4356 2F30                             l4604 59EA  
                           l4620 49A0                             l4612 494C  
                           l4700 4C4A                             l5092 11DC  
                           l5076 1148                             l5084 1198  
                           l5068 1126                             l5180 4DFC  
                           l5172 4D8E                             l5164 4D4A  
                           l5412 2A40                             l5404 2A00  
                           l5340 262C                             l5332 25A0  
                           l5324 2552                             l5316 24DC  
                           l5308 2466                             l5260 40DA  
                           l5252 525A                             l5244 5220  
                           l5236 51F4                             l5228 5512  
                           l5420 1C1C                             l6116 54B4  
                           l6108 5492                             l6140 4C6C  
                           l6132 4C5C                             l6054 52EE  
                           l6046 52D6                             l6038 52AA  
                           l6062 5C10                             l5510 5AE8  
                           l5502 5AD6                             l5158 4392  
                           l4198 479E                             l4526 506A  
                           l4518 5046                             l4550 50D8  
                           l4542 50A8                             l4534 5086  
                           l4294 3534                             l4286 34F8  
                           l4278 34BE                             l4470 3320  
                           l4462 32CC                             l4454 3270  
                           l4446 322C                             l4438 31DE  
                           l4390 300C                             l4382 2FC8  
                           l4374 2F92                             l4366 2F76  
                           l4358 2F40                             l4606 5A00  
                           l3910 2A80                             l3902 2A54  
                           l4622 49A2                             l4614 4962  
                           l5094 11E8                             l5086 11AA  
                           l5078 116E                             l5174 4DA6  
                           l5166 4D74                             l5406 2A0E  
                           l5350 26B8                             l5334 25C4  
                           l5318 24FC                             l5326 2564  
                           l5270 4118                             l5262 40F0  
                           l5254 4076                             l5246 523E  
                           l5238 51FC                             l5190 58CC  
                           l5430 1D7C                             l5422 1C2A  
                           l6118 54C2                             l6070 5C32  
                           l6150 4C9C                             l6142 4C70  
                           l6134 4C60                             ?_pad 0011  
                           l6056 52F4                             l6048 52DC  
                           l6064 5C14                             l5600 5610  
                           l5512 5AEE                             l5504 5ADE  
                           l4800 3BD4                             l4560 5112  
                           l4552 50EE                             l4544 50BA  
                           l4536 508E                             l4296 3546  
                           l4288 3504                             l4472 3322  
                           l4464 32E6                             l4456 329A  
                           l4392 3018                             l4384 2FE8  
                           l4376 2FA2                             l4368 2F7C  
                           l4608 5A10                             l3920 2ABA  
                           l3912 2A90                             l3904 2A60  
                           l4480 582C                             l4624 49B2  
                           l4720 3CC0                             l4704 567E  
                           l4712 5654                             l5096 11F0  
                           l5088 11C4                             l5176 4DC2  
                           l5360 2774                             l5352 26EA  
                           l5344 2674                             l5336 25FE  
                           l5328 2588                             l5280 41A0  
                           l5272 414A                             l5256 4086  
                           l5520 5400                             l5248 524E  
                           l5192 58DC                             l5184 58B8  
                           l5440 1F38                             l5432 1DEC  
                           l5424 1C94                             l6080 4900  
                           l6072 5C34                             l6160 4CE0  
                           l6152 4C9E                             l6144 4C74  
                           l6136 4C64                             l6128 4C54  
                           l6058 52FA                             l5602 5616  
                           l5514 5AF0                             l5506 5AE0  
                           l5610 5348                             l4810 3C3A  
                           l4802 3BEE                             l4490 4FC2  
                           l4562 511A                             l4554 50F6  
                           l4546 50C2                             l4538 5092  
                           l4298 355C                             l4570 5162  
                           l4466 3302                             l4474 3328  
                           l4458 329E                             l4394 3022  
                           l4386 2FF8                             l4378 2FB2  
                           l3930 2AE8                             l3922 2AC0  
                           l3914 2AA0                             l3906 2A6E  
                           l4482 583C                             l4650 4A30  
                           l4634 49DC                             l4626 49B6  
                           l4618 4976                             l4730 3DAC  
                           l4722 3D18                             l4706 568E  
                           l4714 5666                             l5098 1200  
                           l5178 4DD4                             l5370 281C  
                           l5362 27BC                             l5354 26FA  
                           l5338 261E                             l5346 2686  
                           l5290 41F6                             l5282 41AE  
                           l5274 414C                             l5266 4104  
                           l5258 4094                             l5522 5418  
                           l5530 539E                             l5194 58EE  
                           l5186 58B8                             l5450 2098  
                           l5442 1F46                             l5434 1DFA  
                           l5426 1D04                             l5418 1C18  
                           l6066 5B5E                             l6090 4922  
                           l6082 4902                             l6074 4828  
                           l6170 4D20                             l6162 4CE4  
                           l6154 4CAE                             l6146 4C80  
                           l6138 4C68                             l5516 5AF8  
                           l5508 5AE6                             l5604 5308  
                           l4660 4F0E                             l4812 3C40  
                           l4820 3C76                             l4804 3C08  
                           l4492 4FCA                             l4556 50FC  
                           l4548 50CA                             l4572 5190  
                           l4476 332C                             l4468 3312  
                           l4396 3038                             l3940 2B1C  
                           l3932 2AEA                             l3924 2AD2  
                           l3916 2AA2                             l3908 2A70  
                           l4652 4A40                             l4644 4A04  
                           l4636 49E6                             l4628 49C4  
                           l4740 3E94                             l4732 3DE8  
                           l4724 3D2C                             l4708 561E  
                           l4900 099A                             l5380 28B4  
                           l5372 282A                             l5356 272C  
                           l5348 26A8                             l5620 57C6  
                           l5612 5788                             l5292 4206  
                           l5284 41CC                             l5276 4158  
                           l5268 410C                             l5524 5460  
                           l5532 53E6                             l5188 58CA  
                           l5460 21FE                             l5452 2108  
                           l5444 1FB0                             l5436 1E64  
                           l5428 1D12                             l5540 3EF6  
                           l5700 12C8                             l6092 493A  
                           l6084 4904                             l6076 48FA  
                           l6068 5C26                             l6172 4D36  
                           l6164 4CF4                             l6156 4CBE  
                           l6148 4C8C                             l5198 56DC  
                           l5606 5314                             l4750 57DA  
                           l4670 4F54                             l4662 4F1C  
                           l4814 3C52                             l4806 3C18  
                           l4494 4FCE                             l4486 4FB0  
                           l4558 5102                             l4574 51A0  
                           l4566 5124                             l4590 4ACE  
                           l4582 4A52                             l4398 3044  
                           l3950 2B58                             l3934 2AFA  
                           l3942 2B24                             l3926 2AD4  
                           l3918 2AAA                             l4646 4A10  
                           l4638 49F0                             l4742 3EA4  
                           l4726 3D3A                             l4734 3E1C  
                           l4718 3CA0                             l4910 0A72  
                           l4902 09F4                             l4830 0700  
                           l5374 285A                             l5366 27F4  
                           l5358 2750                             l5614 579A  
                           l5294 4214                             l5286 41CE  
                           l5278 4194                             l5518 5400  
                           l5526 5386                             l6270 23D6  
                           l5462 2268                             l5454 2116  
                           l5446 2020                             l5438 1ED0  
                           l5550 3FFE                             l5542 3FBC  
                           l5534 3EB6                             l5630 5A5A  
                           l5710 1320                             l5702 12D2  
                           l6094 4942                             l6086 490E  
                           l6078 48FE                             l6166 4D08  
                           l6158 4CCE                             l6174 4D3E  
                           l6096 5B86                             l5608 5344  
                           l4752 57DE                             l6272 42E4  
                           l4680 5912                             l4672 4F82  
                           l4664 4F28                             l4656 4EEA  
                           l4816 3C5E                             l4808 3C2A  
                           l4496 4FDC                             l4488 4FB4  
                           l4576 51C4                             l4568 5152  
                           l4592 4ADC                             l4584 4A80  
                           l3960 2B6C                             l3952 2B5C  
                           l3944 2B34                             l3936 2B0A  
                           l3928 2ADA                             l4648 4A20  
                           l4736 3E58                             l4920 0ABE  
                           l4912 0A76                             l4904 0A28  
                           l4840 0750                             l4832 0708  
                           l4824 06D8                             l5384 2922  
                           l5368 2806                             l5616 57A2  
                           l5296 4216                             l5288 41D2  
                           l5528 5386                             l5480 370A  
                           l5464 22D8                             l5456 2180  
                           l5448 202E                             l5472 23C0  
                           l5560 404E                             l5552 4006  
                           l5544 3FC4                             l5536 3EB6  
                           l5632 5A5E                             l5624 5976  
                           l5800 1554                             l5720 138A  
                           l5712 133A                             l5704 12F8  
                           l5640 5BDC                             l6088 4918  
                           l6168 4D0C                             l5490 5BF6  
                           l6098 5B8A                             l5650 4570  
                           l4746 5A22                             l4754 57F2  
                           l3890 4E32                             l4674 4F96  
                           l4666 4F3C                             l4658 4EFA  
                           l4818 3C66                             l4770 3A36  
                           l4762 39BE                             l4498 4FE4  
                           l4578 51CA                             l4594 4AEE  
                           l4586 4A90                             l3970 2B80  
                           l3962 2B70                             l3954 2B60  
                           l3946 2B46                             l3938 2B1A  
                           l4690 4BE8                             l4682 4B56  
                           l4738 3E6C                             l4930 0B00  
                           l4914 0A88                             l4922 0AD8  
                           l4906 0A30                             l4850 078C  
                           l4842 0760                             l4834 072C  
                           l4826 06E2                             l5386 2934  
                           l5394 29AC                             l5378 2886  
                           l5570 5592                             l5618 57AA  
                           l5482 37D0                             l5466 22E6  
                           l5458 21F0                             l5562 406A  
                           l5554 4022                             l5546 3FD2  
                           l5538 3EB6                             l5634 5A62  
                           l5626 5998                             l5810 158A  
                           l5802 1566                             l5730 13E4  
                           l5722 139C                             l5714 134C  
                           l5706 1304                             l5642 5BDE  
                           l5492 5BFC                             l5660 45BE  
                           l5652 457E                             l5644 4540  
                           l5580 5B3E                             l5572 5B32  
                           l4756 5820                             l3892 4E44  
                           l4668 4F50                             l4780 3A8E  
                           l4772 3A38                             l4764 39DE  
                           l4596 4AFC                             l4588 4ABE  
                           l3972 2B84                             l3964 2B74  
                           l3956 2B64                             l3948 2B54  
                           l3980 2B94                             l4684 4B76  
                           l4940 0B66                             l4932 0B1C  
                           l4916 0A9C                             l4908 0A62  
                           l4860 07F2                             l4852 0790  
                           l4844 0774                             l4836 0736  
                           l4828 06F2                             l5396 29D0  
                           l5388 2968                             l5564 554E  
                           l5484 38CA                             l5468 2350  
                           l5556 402A                             l5548 3FE2  
                           l5628 59A4                             l6268 1BC8  
                           l5900 17BE                             l5820 15BA  
                           l5812 159C                             l5804 156A  
                           l5740 1428                             l5732 13EA  
                           l5724 13B2                             l5716 136A  
                           l5708 1318                             l5636 5BD6  
                           l5494 5BFE                             l5670 4610  
                           l5662 45D0                             l5654 4590  
                           l5646 4550                             l5590 55CA  
                           l5582 5B40                             l5574 5B36  
                           l4758 5824                             l4678 58F8  
                           l3894 4E4E                             l4790 3B2C  
                           l4782 3A94                             l4774 3A52  
                           l4766 3A06                             l4598 4B4C  
                           l3990 2C04                             l3982 2B98  
                           l3974 2B88                             l3966 2B78  
                           l3958 2B68                             l4686 4BB4  
                           l4694 4BF4                             l4950 0BAE  
                           l4942 0B78                             l4934 0B52  
                           l4918 0AA4                             l4862 0804  
                           l4846 0780                             l4854 0796  
                           l4838 073E                             l5398 29DE  
                           l5566 5556                             l5486 3972  
                           l5478 36D8                             l5558 4046  
                           l5910 17FE                             l5902 17D6  
                           l5830 160C                             l5822 15C6  
                           l5814 15A0                             l5806 1570  
                           l5750 1456                             l5742 143A  
                           l5734 1414                             l5726 13C2  
                           l5718 137A                             l5638 5BDA  
                           l5496 5C0C                             l5488 5BF4  
                           l5680 465E                             l5672 461E  
                           l5664 45DE                             l5656 459E  
                           l5648 455E                             l5592 55DC  
                           l5584 5B44                             l5576 5B3A  
                           l3896 4E6C                             l3888 4E20  
                           l4792 3B32                             l4784 3A9C  
                           l4776 3A6E                             l4768 3A26  
                           l3992 2C10                             l3984 2BC2  
                           l3976 2B8C                             l3968 2B7C  
                           l4696 4C06                             l4688 4BDC  
                           l4960 0BF6                             l4952 0BBC  
                           l4944 0B8A                             l4936 0B5A  
                           l4928 0AEC                             l4880 08D8  
                           l4864 0820                             l4856 07BC  
                           l4872 086A                             l4848 0788  
                           l5568 5564                             l5920 1866  
                           l5912 1824                             l5904 17DE  
                           l5840 164C                             l5832 1626  
                           l5824 15D0                             l5816 15A6  
                           l5808 157A                             l5760 148E  
                           l5752 145E                             l5744 143E  
                           l5736 1416                             l5728 13D2  
                           l5690 46B0                             l5682 4670  
                           l5674 4630                             l5666 45F0  
                           l5658 45B0                             l5594 55E2  
                           l5498 5AC8                             l5586 5B48  
                           l5578 5B3C                             l3898 4EA2  
                           l4794 3B38                             l4786 3AA4  
                           l4778 3A80                             l3994 2C14  
                           l3986 2BDE                             l3978 2B90  
                           l4970 0D0A                             l4962 0C06  
                           l4954 0BD4                             l4946 0B98  
                           l4938 0B5E                             l4882 08F4  
                           l4874 0890                             l4890 0910  
                           l4866 0838                             l5922 1876  
                           l5930 18B8                             l5914 1830  
                           l5906 17E8                             l5850 1680  
                           l5842 1650                             l5834 1628  
                           l5826 15EC                             l5818 15B0  
                           l5770 14B2                             l5762 1492  
                           l5754 1466                             l5746 1442  
                           l5738 141A                             l5692 46BE  
                           l5684 467E                             l5676 463E  
                           l5668 45FE                             l5596 55EC  
                           l5588 55BA                             l4788 3AAA  
                           l4796 3B9C                             l3996 2C22  
                           l3988 2BEE                             l4980 0DAA  
                           l4964 0C1A                             l4972 0D10  
                           l4956 0BE6                             l4948 0B9C  
                           l4892 092A                             l4868 0842  
                           l5932 18CC                             l5924 1886  
                           l5916 1840                             l5908 17F4  
                           l5860 16A8                             l5852 1684  
                           l5844 1654                             l5836 162C  
                           l5828 15F8                             l5780 14E0  
                           l5772 14BA                             l5764 1496  
                           l5748 144C                             l5756 146C  
                           l5686 4690                             l5678 4650  
                           l5598 55FE                             l4798 3BB6  
                           l3998 2C24                             l4990 0E40  
                           l4982 0DDC                             l4974 0D2E  
                           l4966 0C7E                             l4958 0BEE  
                           l4878 08C6                             l5950 1918  
                           l5942 18FE                             l5934 18D4  
                           l5926 189A                             l5918 1842  
                           l5862 16B2                             l5854 1688  
                           l5838 163A                             l5846 165E  
                           l5790 152C                             l5782 14FC  
                           l5766 14A0                             l5758 147C  
                           l5774 14C0                             l5694 129E  
                           l5688 469E                             l4992 0E54  
                           l4984 0DEC                             l4976 0D62  
                           l4968 0CD6                             l4896 0960  
                           l5960 1954                             l5952 1928  
                           l5944 1902                             l5936 18E2  
                           l5928 18A0                             l5880 1720  
                           l5872 16F2                             l5864 16CE  
                           l5848 166E                             l5856 1692  
                           l5792 1530                             l5784 1508  
                           l5776 14CA                             l5768 14AA  
                           l5696 12B2                             l4994 0E60  
                           l4986 0DFC                             l4978 0D94  
                           l4898 0994                             l5970 19D2  
                           l5962 195E                             l5946 1912  
                           l5954 192C                             l5938 18F0  
                           l5890 1774                             l5882 1728  
                           l5874 1700                             l5866 16DA  
                           l5858 169C                             l5794 1540  
                           l5786 151C                             l5778 14D6  
                           l5698 12BC                             l4996 0E84  
                           l4988 0E30                             l5980 1A2E  
                           l5972 19D6                             l5964 1984  
                           l5956 193E                             l5948 1914  
                           l5892 1776                             l5884 1732  
                           l5876 170A                             l5796 1542  
                           l5788 1524                             l4998 0EE8  
                           l5990 1A96                             l5974 1A0A  
                           l5966 1990                             l5958 1948  
                           l5982 1A62                             l5894 179A  
                           l5886 1758                             l5878 1716  
                           l5798 1546                             l5992 1ABC  
                           l5984 1A76                             l5976 1A1A  
                           l5968 19A0                             l5896 17AC  
                           l5888 1764                             l5994 1AC8  
                           l5986 1A80                             l5978 1A2A  
                           l5996 1AD8                             l5988 1A8C  
                           l5998 1B0A                             STR_1 0635  
                           STR_2 069A                             STR_3 0668  
                           STR_4 0601                             STR_5 0679  
                           STR_6 0601                             STR_7 0624  
                           STR_8 0601                             STR_9 0646  
                           u4000 2B54                             u4001 2B50  
                           u4010 2BC2                             u4011 2BBE  
                           u4100 2CA0                             u4020 2BDA  
                           u4101 2C9C                             u4021 2BD4  
                           u4110 2CBE                             u4030 2BDC  
                           u4111 2CBA                             u5000 50EE  
                           u4200 2DFC                             u4120 2CF6  
                           u4040 2C04                             u5001 50EA  
                           u4201 2DF8                             u4121 2CF2  
                           u4041 2C00                             u5010 5112  
                           u4210 2E12                             u4130 2D3C  
                           u4050 2C22                             u5011 510E  
                           u4211 2E0E                             u4131 2D38  
                           u4051 2C1E                             u5020 5152  
                           u5100 5A00                             u4300 2F00  
                           u4220 2E28                             u4140 2D72  
                           u4060 2C42                             u5021 514E  
                           u5101 59FC                             u4301 2EFC  
                           u4221 2E24                             u4141 2D6E  
                           u4061 2C3E                             u4310 58B4  
                           u5030 5190                             u4230 2E3C  
                           u4150 2D82                             u4070 2C50  
                           u5110 4962                             u4311 58B0  
                           u5031 518C                             u4231 2E38  
                           u4151 2D7E                             u4071 2C4C  
                           u5111 495E                             u4400 44B4  
                           u4320 5AB8                             u5200 4F72  
                           u5040 51C4                             u4240 2E56  
                           u4160 2DAE                             u4080 2C60  
                           u5120 4996                             u6000 0F2C  
                           u4401 44B0                             u4321 5AB4  
                           u5201 4F6E                             u5041 51C0  
                           u4241 2E52                             u4161 2DAA  
                           u4081 2C5C                             u6001 0F28  
                           u4410 44FE                             u5210 4F82  
                           u5050 4A80                             u4250 2E90  
                           u4170 2DBE                             u4090 2C92  
                           u5130 49C4                             u4330 59E2  
                           u6010 0F48                             u4411 44FA  
                           u5211 4F7E                             u5051 4A7C  
                           u4251 2E8C                             u4171 2DBA  
                           u4091 2C8E                             u5131 49C0  
                           u4331 59DC                             u6011 0F44  
                           u4420 46D6                             u5220 5912  
                           u4500 337A                             u5060 4ABE  
                           u4260 2EA2                             u4180 2DDA  
                           u5140 49D8                             u5300 56C6  
                           u4340 59E4                             u6100 11AA  
                           u6020 0F56                             u4421 46D2  
                           u5221 590E                             u4501 3376  
                           u5061 4ABA                             u4261 2E9E  
                           u4181 2DD6                             u5141 49D4  
                           u5125 498C                             u6101 11A6  
                           u6021 0F52                             u4350 43CA  
                           u4430 4708                             u4510 33BE  
                           u5070 4ADC                             u4270 2EB2  
                           u4190 2DEA                             u5150 4A00  
                           u5230 4B96                             u5310 56D8  
                           u6110 11C4                             u6030 0FAE  
                           u4351 43C6                             u4431 4704  
                           u4511 33BA                             u5071 4AD8  
                           u4271 2EAE                             u4191 2DE6  
                           u5151 49FC                             u5311 56D4  
                           u6111 11C0                             u6031 0FAA  
                           u7000 465E                             u6200 436A  
                           u4360 43FC                             u4440 4746  
                           u4600 355C                             u4520 33D0  
                           u5080 4AFC                             u4280 2ED2  
                           u5160 4A20                             u5240 4BB4  
                           u5400 3DCC                             u5320 564E  
                           u6120 11DC                             u6040 1080  
                           u7001 465A                             u4361 43F8  
                           u4441 4742                             u4601 3558  
                           u4521 33CC                             u5081 4AF8  
                           u4281 2ECE                             u5161 4A1C  
                           u5241 4BB0                             u5321 5648  
                           u6121 11D8                             u6041 107C  
                           u7010 4670                             u6210 4380  
                           u4450 4770                             u4610 357A  
                           u4530 33E0                             u5090 4B4C  
                           u4290 2EE4                             u5170 4A30  
                           u5250 4BDC                             u5410 3DE8  
                           u5330 5650                             u6130 123A  
                           u6050 109C                             u7011 466C  
                           u6211 437C                             u4371 4426  
                           u4451 476C                             u4611 3576  
                           u4531 33DC                             u5091 4B48  
                           u4291 2EE0                             u5171 4A2C  
                           u5251 4BD8                             u5235 4B8C  
                           u5411 3DE4                             u5307 56BC  
                           u6131 1234                             u6051 1098  
                           u6300 5700                             u7020 467E  
                           u6220 4392                             u4380 444A  
                           u4460 479E                             u3900 4E6C  
                           u5180 4EFA                             u5500 39F0  
                           u4700 36C4                             u4620 359A  
                           u4540 3420                             u5260 4C06  
                           u5420 3E3C                             u5340 5666  
                           u6140 123C                             u6060 10AE  
                           u7100 134C                             u6301 56FC  
                           u7021 467A                             u6221 438E  
                           u4381 4446                             u4461 479A  
                           u3901 4E68                             u5181 4EF6  
                           u4701 36C0                             u4621 3596  
                           u4541 341C                             u5261 4C02  
                           u5405 3DC2                             u5341 5662  
                           u6061 10AA                             u7101 1348  
                           u6310 5716                             u7030 4690  
                           u4390 4474                             u4470 47E6  
                           u3910 4EA2                             u5190 4F1C  
                           u5510 3A06                             u4630 35AC  
                           u4550 3460                             u4710 2F2E  
                           u5430 3E58                             u5350 3CE8  
                           u6150 1252                             u6070 10BE  
                           u6230 4D74                             u7110 136A  
                           u6311 5712                             u7031 468C  
                           u4391 4470                             u4471 47E2  
                           u3911 4E9E                             u5191 4F18  
                           u5511 3A02                             u4631 35A8  
                           u4551 345C                             u4711 2F2A  
                           u5431 3E54                             u6151 124E  
                           u6071 10BA                             u6231 4D70  
                           u7111 1366                             u6320 572C  
                           u7040 469E                             u6160 4260  
                           u5600 3C18                             u5520 3A36  
                           u4640 35DA                             u4560 34D6  
                           u4480 3358                             u4800 31CC  
                           u4720 2F40                             u3920 2A6E  
                           u5280 4C40                             u5440 3E94  
                           u5360 3D18                             u6080 10F8  
                           u6240 4DA6                             u6400 40F0  
                           u7200 1428                             u7120 137A  
                           u6321 5728                             u7041 469A  
                           u6161 425C                             u5601 3C14  
                           u5521 3A32                             u4641 35D6  
                           u4561 34D2                             u4481 3354  
                           u4801 31C8                             u4721 2F3C  
                           u3921 2A6A                             u5281 4C3A  
                           u5441 3E90                             u5425 3E32  
                           u5361 3D14                             u6081 10F4  
                           u6241 4DA2                             u6401 40EC  
                           u7201 1424                             u7121 1376  
                           u7050 46B0                             u5450 5A52  
                           u6170 4296                             u5610 3C2A  
                           u5530 3A52                             u4650 35F0  
                           u4570 34F8                             u4490 336A  
                           u4810 31EC                             u4730 2F50  
                           u3930 2A80                             u5290 4C42  
                           u5370 3D3A                             u6090 1126  
                           u6250 4DC2                             u6410 4146  
                           u6330 5502                             u7210 143A  
                           u7130 138A                             u7051 46AC  
                           u5451 5A4C                             u6171 4292  
                           u5611 3C26                             u5531 3A4E  
                           u4651 35EC                             u4571 34F4  
                           u4491 3366                             u4811 31E8  
                           u4731 2F4C                             u3931 2A7C  
                           u5275 4C18                             u5371 3D36  
                           u5355 3CDE                             u6091 1122  
                           u6251 4DBE                             u6411 4142  
                           u6331 54FE                             u7211 1436  
                           u7131 1386                             u7060 46BE  
                           u5460 5A54                             u6180 42B2  
                           u5620 3C3A                             u5540 3A80  
                           u4900 4FC2                             u4660 3604  
                           u4580 3522                             u4820 31FE  
                           u4740 2F90                             u3940 2A90  
                           u5700 07EE                             u6260 4DD4  
                           u6500 24CE                             u6420 4190  
                           u6340 553C                             u7300 160C  
                           u7220 147C                             u7140 139C  
                           u7061 46BA                             u6181 42AE  
                           u5621 3C36                             u5541 3A7C  
                           u4901 4FBE                             u4661 3600  
                           u4581 351E                             u4821 31FA  
                           u4741 2F8C                             u3941 2A8C  
                           u6261 4DD0                             u6501 24CA  
                           u6421 418C                             u6341 5538  
                           u7301 1608                             u7221 1478  
                           u7141 1398                             u5470 57F2  
                           u6190 4368                             u5630 3C52  
                           u5550 3A8E                             u4910 4FDC  
                           u4670 361E                             u4590 3546  
                           u4830 322C                             u4750 2FA2  
                           u3950 2AD2                             u5390 3DA8  
                           u5710 0804                             u6270 4DFC  
                           u6510 254C                             u6430 41AE  
                           u6350 51F4                             u7310 1626  
                           u7230 148E                             u7150 13B2  
                           u5471 57EE                             u6191 4362  
                           u5631 3C4E                             u5551 3A8A  
                           u4911 4FD8                             u4671 361A  
                           u4591 3542                             u4831 3228  
                           u4751 2F9E                             u3951 2ACE  
                           u5391 3DA4                             u5711 0800  
                           u6271 4DF8                             u6511 2546  
                           u6431 41AA                             u6351 51F0  
                           u7311 1622                             u7231 148A  
                           u7151 13AE                             u7071 12A4  
                           u5480 5820                             u3880 4E32  
                           u5560 3BB6                             u4920 5002  
                           u4680 3666                             u4840 3242  
                           u4760 2FB2                             u3960 2AE8  
                           u5800 0A9C                             u5720 0890  
                           u5640 0700                             u6600 26FA  
                           u6520 254E                             u6440 41BE  
                           u6360 5216                             u6280 58DC  
                           u7400 1866                             u7320 163A  
                           u7240 151C                             u7160 13C2  
                           u7080 1318                             u5481 581C  
                           u3881 4E2E                             u5561 3BB2  
                           u4921 4FFE                             u4681 3662  
                           u4841 323E                             u4761 2FAE  
                           u3961 2AE4                             u5385 3D4E  
                           u5801 0A98                             u5721 088C  
                           u5641 06FC                             u6601 26F6  
                           u6441 41BA                             u6361 5212  
                           u6281 58D8                             u7401 1862  
                           u7321 1636                             u7241 1518  
                           u7161 13BE                             u7081 1314  
                           u6290 56EA                             u3890 4E44  
                           u5570 3BD4                             u5490 39EE  
                           u4930 5020                             u4690 3696  
                           u4850 3256                             u4770 2FE8  
                           u3970 2AFA                             u5386 3D58  
                           u5810 0ABE                             u5730 08C0  
                           u5650 0750                             u6610 2750  
                           u6530 2564                             u6450 41CC  
                           u6370 523E                             u7410 1876  
                           u7330 164C                             u7250 1540  
                           u7170 13D2                             u7090 133A  
                           u6291 56E6                             u3891 4E40  
                           u5571 3BD0                             u5491 39E8  
                           u4931 501C                             u4691 3692  
                           u4851 3252                             u4771 2FE4  
                           u3971 2AF6                             u5387 3D68  
                           u5811 0ABA                             u5731 08BA  
                           u5651 074C                             u6611 274C  
                           u6531 2560                             u6451 41C8  
                           u6371 523A                             u7411 1872  
                           u7331 1648                             u7251 153C  
                           u7171 13CE                             u7091 1336  
                           u5580 3BEE                             u4940 503C  
                           u4860 3270                             u4780 2FF8  
                           u3980 2B0A                             u5900 0BBC  
                           u5820 0AE8                             u5740 08C2  
                           u5660 0760                             u6620 2774  
                           u6540 2588                             u6460 4206  
                           u6380 4086                             u6700 539E  
                           u7500 19A0                             u7420 1886  
                           u7340 166E                             u7260 1554  
                           u7180 13E4                             u5581 3BEA  
                           u4941 5038                             u4861 326C  
                           u4781 2FF4                             u3981 2B06  
                           u5901 0BB8                             u5821 0AE4  
                           u5661 075C                             u6621 2770  
                           u6541 2584                             u6461 4202  
                           u6381 4082                             u6701 539A  
                           u7501 199C                             u7421 1882  
                           u7341 166A                             u7261 1550  
                           u7181 13E0                             u5590 3C08  
                           u4950 5062                             u4870 32B8  
                           u4790 3172                             u3990 2B46  
                           u5910 0BE6                             u5830 0B00  
                           u5750 08D8                             u5670 0774  
                           u6630 2806                             u6550 25C4  
                           u6470 4214                             u6390 4094  
                           u6710 3FFE                             u7510 19D2  
                           u7430 189A                             u7350 1680  
                           u7270 1566                             u7190 1414  
                           u5591 3C04                             u4951 505E  
                           u4871 32B4                             u3991 2B42  
                           u5911 0BE2                             u5831 0AFC  
                           u5751 08D4                             u5671 0770  
                           u6631 2802                             u6551 25C0  
                           u6471 4210                             u6391 4090  
                           u6711 3FFA                             u7511 19CE  
                           u7431 1896                             u7351 167C  
                           u7271 1562                             u7191 1410  
                           u7600 5C24                             u6800 5374  
                           u4960 5086                             u4880 32E6  
                           u5920 0D2E                             u5840 0B1C  
                           u5760 095C                             u5680 07BC  
                           u6640 28B4                             u6560 266E  
                           u6480 2442                             u6720 4022  
                           u7520 1A1A                             u7440 18CC  
                           u7360 16EE                             u7280 158A  
                           u7601 5C20                             u4961 5082  
                           u4881 32E2                             u5921 0D2A  
                           u5841 0B18                             u5761 0958  
                           u5681 07B8                             u6641 28B0  
                           u6561 2668                             u6481 243E  
                           u6721 401E                             u7521 1A16  
                           u7441 18C8                             u7361 16EA  
                           u7281 1586                             u6810 5384  
                           u4970 50A0                             u4890 3320  
                           u5930 0D94                             u5850 0B52  
                           u5770 09F0                             u5690 07EC  
                           u6650 291C                             u6570 2670  
                           u6490 248A                             u6730 4046  
                           u7530 1A2A                             u7450 18E2  
                           u7370 1774                             u7290 159C  
                           u7610 5492                             u6811 5380  
                           u4971 509C                             u4891 331C  
                           u4795 3168                             u5931 0D90  
                           u5851 0B4E                             u5771 09EC  
                           u5691 07E6                             u6651 2916  
                           u6491 2486                             u6731 4042  
                           u7531 1A26                             u7451 18DE  
                           u7371 1770                             u7291 1598  
                           u7611 548E                             u6900 45BE  
                           u4980 50BA                             u5940 0DDC  
                           u5860 0B78                             u5780 0A62  
                           u6660 291E                             u6580 2686  
                           u6740 406A                             u7540 1A76  
                           u7460 18F0                             u7380 17AC  
                           u7620 54B2                             u6820 5BEE  
                           u7700 4D36                             u6901 45BA  
                           u4981 50B6                             u5941 0DD8  
                           u5861 0B74                             u5781 0A5E  
                           u6581 2682                             u6741 4066  
                           u7541 1A72                             u7461 18EC  
                           u7381 17A8                             u7621 54AE  
                           u6821 5BEA                             u7701 4D32  
                           u6910 45D0                             u6830 4550  
                           u4990 50D8                             u5950 0DEC  
                           u5870 0B8A                             u5790 0A88  
                           u6670 2934                             u6590 26B8  
                           u6750 55AE                             u7550 1AD8  
                           u7470 1912                             u7390 1840  
                           u7630 54D2                             u6911 45CC  
                           u6831 454C                             u6807 536A  
                           u4991 50D4                             u5951 0DE8  
                           u5871 0B86                             u5791 0A84  
                           u6671 2930                             u6591 26B4  
                           u6751 55AA                             u7551 1AD4  
                           u7471 190E                             u7391 183C  
                           u7631 54CE                             u6920 45DE  
                           u6840 455E                             u6760 5B58  
                           u5960 0E54                             u5880 0B98  
                           u6680 29D0                             u7560 1B0A  
                           u7480 1928                             u7640 4C9C  
                           u6921 45DA                             u6841 455A  
                           u6761 5B54                             u5961 0E50  
                           u5881 0B94                             u6681 29CC  
                           u7561 1B06                             u7481 1924  
                           u7641 4C98                             u6930 45F0  
                           u6850 4570                             u6770 55CA  
                           u5970 0EF8                             u5890 0BAE  
                           u6690 5418                             u7570 1B52  
                           u7490 193E                             u7650 4CAE  
                           u6931 45EC                             u6851 456C  
                           u6771 55C6                             u5971 0EF4  
                           u5891 0BAA                             u6691 5414  
                           u7571 1B4E                             u7491 193A  
                           u7651 4CAA                             u6940 45FE  
                           u6860 457E                             u6780 55FE  
                           u5980 0F0C                             u7580 1B62  
                           u7660 4CBE                             u6941 45FA  
                           u6861 457A                             u6781 55FA  
                           u5981 0F08                             u7581 1B5E  
                           u7661 4CBA                             u6950 4610  
                           u6870 4590                             u6790 5340  
                           u5990 0F1E                             u7590 1BAE  
                           u7670 4CCE                             u7807 52CC  
                           u6951 460C                             u6871 458C  
                           u5991 0F1A                             u7591 1BAA  
                           u7671 4CCA                             u6960 461E  
                           u6880 459E                             u7680 4CE0  
                           u7817 5C04                             u6961 461A  
                           u6881 459A                             u7681 4CDC  
                           u6970 4630                             u6890 45B0  
                           u7690 4D08                             u6971 462C  
                           u6891 45AC                             u7691 4D04  
                           u6980 463E                             u6981 463A  
                           u6797 5336                             u7757 492C  
                           u6990 4650                             u6991 464C  
                           u7767 5AE2                             u7777 5AF2  
                           u7787 529C                             u7797 52B6  
                           _TMR2 000FBC                             abs@a 0013  
              ?_Lcd_Write_String 0005                             _dbuf 019F  
                           _atoi 4228                             _main 4C54  
                           _dtoa 39BE                             _prec 0196  
                           _nout 0192                             pad@i 0018  
                           pad@p 0015                             fsr1h 000FE2  
                           fsr2h 000FDA                             indf1 000FE7  
                           indf2 000FDF                             fsr1l 000FE1  
                           pad@w 001A                             fsr2l 000FD9  
                           btemp 005F                    ___fpclassifyf 4B56  
                           prodh 000FF4                             prodl 000FF3  
                           start 0068               ??_Lcd_Write_String 0007  
                ___fldiv@new_exp 0046                  __end_of_Lcd_Cmd 5C10  
                   _tolower$2667 000D                     ___param_bank 000000  
                          ??_abs 0015                            ??_pad 0017  
                   ?_menuControl 0001                    ___fltol@sign1 0056  
                __end_of___aodiv 4540                            ?_atoi 0008  
                __end_of___fladd 2F14                            ?_main 0001  
                          ?_dtoa 001C                  __end_of___aomod 4828  
                __end_of_adcInit 5976                  __end_of___fldiv 36D8  
                __end_of___awdiv 5074                  __end_of___flneg 5A22  
                          _EEADR 000FA9                            STR_10 068A  
                          STR_11 0657                            STR_12 068A  
                          STR_21 06C8                            STR_13 0613  
                          STR_22 06D0                            STR_14 06A9  
                          STR_15 0613                            STR_16 06B7  
                          STR_25 06D4                            STR_17 06C4  
                          STR_18 06CC                            STR_27 06D4  
                __end_of___awmod 5124                  __end_of___flmul 333E  
                __end_of___flsub 5872                  __end_of___fltol 4A52  
                __end_of___lldiv 5272                            _T0CON 000FD5  
                ___awdiv@divisor 0003                            i2l481 0064  
                ___awdiv@counter 0005                     vfpfcnvrt@fmt 00A9  
                          _TMR0H 000FD7                            _TMR0L 000FD6  
        __size_of_Lcd_Set_Cursor 0066              ___lmul@multiplicand 0005  
                          _fabsf 5AFC                            _flags 0198  
                          _fputc 4E20                            _fputs 5872  
                __end_of_isdigit 5A5A                      ?_PWM1_setDC 0058  
                   _adc_raw_data 0163                      ?_PWM2_setDC 0058  
                          atoi@n 0015                            pad@fp 0011  
                          atoi@s 0008                            _width 0194  
                          _putch 5C4E                            dtoa@d 001E  
                          dtoa@i 003E                            dtoa@n 0036  
                          dtoa@p 0030                            dtoa@s 0034  
                          dtoa@w 0032                  __end_of_isspace 582C  
                __end_of_isupper 59EA                 __end_of_PWM_Init 5BAE  
                          tablat 000FF5                            ttemp5 0060  
                          ttemp6 0063                            ttemp7 0067  
                          status 000FD8                            wtemp8 0060  
                __end_of_sprintf 57DA                   ?___fpclassifyf 0001  
                __end_of_tolower 567E                  __end_of_strncmp 4E20  
                  ?_readAdcValue 0001                 __end_of_Lcd_Port 5736  
                __initialization 5736                      _system_init 4828  
                   __end_of_atoi 43B8                     __end_of_main 4D4A  
                   __end_of_dtoa 3CA0                           ??_atoi 000A  
                         ??_main 005F                           ??_dtoa 0026  
             __size_of_Lcd_Clear 000E                    __activetblptr 000002  
__size_of_calculatedAverageValue 02E6                           ?_fabsf 001C  
                         _ADCON0 000FC2                           _ADCON1 000FC1  
                         ?_fputc 0001                           ?_fputs 000A  
                         _ADRESH 000FC4                           _ADRESL 000FC3  
                         _EEDATA 000FA8                           _CCPR1L 000FBE  
                         _CCPR2L 000F67                           _EECON2 000FA7  
               ___awdiv@dividend 0001                           ?_putch 0001  
                         i2l6180 0026                           i2l6190 0048  
                         i2l6182 0028                           i2l6192 004C  
                         i2l6184 0030                           i2l6176 000A  
                         i2l6194 005C                           i2l6186 0034  
                         i2l6178 0018                           i2l6196 0060  
                         i2l6188 0042                        ??_Lcd_Cmd 0002  
                         _TIMER0 0008                   ??_readAdcValue 0003  
        __size_of_Lcd_Write_Char 0036                 __end_of___xxtofl 4228  
              _scanAdcConversion 1C18               _timer_counter_flag 019E  
             ?_scanAdcConversion 0001             __size_of_eepromWrite 002E  
                   vfprintf@cfmt 00CD                 __end_of_lcd_init 5308  
                         ___flge 4A52                           ___fleq 5124  
                         ___lmul 54E4                        ??___aodiv 0011  
                      ??___fladd 003D                        ??___aomod 0011  
                         ___wmul 5BAE                        ??_adcInit 0001  
                      ??___fldiv 003D                        ??___awdiv 0005  
                      ??___flneg 0005                        ??___awmod 0005  
                      ??___flmul 0024                        ??___flsub 004D  
                      ??___fltol 0052                        ??___lldiv 0009  
                         _efgtoa 06D8                           _floorf 3CA0  
            __size_of_PWM1_setDC 007A                           fabsf@u 0020  
                         fabsf@x 001C                 __end_of_mcu_init 5C26  
            __size_of_PWM2_setDC 007A              ??_scanAdcConversion 0058  
                         clear_0 575C                           clear_1 5768  
                         clear_2 5774                  eepromWrite@data 0001  
               ___awdiv@quotient 0007                  ___awmod@divisor 0003  
                ___awmod@counter 0005                           pad@buf 0013  
                         dtoa@fp 001C                           _strcpy 567E  
                         _strlen 5A90                           fputc@c 0001  
           readAdcValue@adcValue 0006                           fputs@c 000E  
                         fputs@i 000F                           fputs@s 000A  
                      ??_isdigit 0003                  ___fpclassifyf@e 0009  
                ___fpclassifyf@u 000B                  ___fpclassifyf@x 0001  
                   __mediumconst 0000                        ??_isspace 0003  
                         tblptrh 000FF7                        ??_isupper 0003  
                         tblptrl 000FF6                           tblptru 000FF8  
                         putch@c 0001                 __end_of_vfprintf 55B8  
                      ??_sprintf 005F                        ??_tolower 0009  
                      ??_strncmp 0007       __end_of_buttonControlFlags 46C4  
                Lcd_Set_Cursor@a 0005                  Lcd_Set_Cursor@b 0004  
                Lcd_Set_Cursor@y 0007                  Lcd_Set_Cursor@z 0006  
                     ___flge@ff1 0035                       ___flge@ff2 0039  
                ??___fpclassifyf 0005                     ___xxtofl@arg 0018  
                   ___xxtofl@exp 0017                     ___xxtofl@val 000E  
                     ___fleq@ff1 0001                       ___fleq@ff2 0005  
      __end_of_scanAdcConversion 241E                       __accesstop 0060  
        __end_of__initialization 577A                       ___flneg@f1 0001  
         _calculatedAverageValue 36D8                __end_of_Lcd_Clear 5C46  
                  ___rparam_used 000001                       ___fltol@f1 004E  
                 __pcstackCOMRAM 0001                     __pidataBANK1 5C46  
                  __end_of_fabsf 5B30                    __end_of_fputc 4EEA  
                  __end_of_fputs 58B6                    __end_of_putch 5C50  
                      ?_PWM_Init 0001                   _Lcd_Set_Cursor 55B8  
              eepromRead@address 0001             __size_of_menuControl 006A  
                        ??_fabsf 0020                        ?_Lcd_Port 0001  
                        ??_fputc 0005                          ??_fputs 000E  
                        ??_putch 0001                       __pbssBANK0 00F3  
                     __pbssBANK1 0100                       __pbssBANK2 0200  
            PWM1_setDC@dutycycle 0058                          ?_TIMER0 0001  
                        ?___flge 0035                          ?___fleq 0001  
                        ?___lmul 0001                          ?___wmul 0001  
                        ?_efgtoa 0058                          _CCP1CON 000FBD  
                        _CCP2CON 000F66                          ?_floorf 004E  
                 ___lmul@product 0009        __size_of_Lcd_Write_String 007E  
         __end_of_Lcd_Set_Cursor 561E                       ??_PWM_Init 0001  
                        ?_strcpy 0001                          ?_strlen 0001  
           __end_of_readAdcValue 58F8                       _eepromRead 5BD4  
                      ?___xxtofl 000E               __size_of_vfpfcnvrt 0636  
                     ??_Lcd_Port 0001                     ??_PWM1_setDC 005A  
                   ??_PWM2_setDC 005A                        ?_lcd_init 0001  
        __size_of_menuInitialize 0028                    _menu_selected 00FE  
             __size_of_stopMotor 003C       __size_of_scanAdcConversion 0806  
                 _Lcd_Write_Char 5AC6                          _Lcd_Cmd 5BF2  
                      ?_mcu_init 0001                  __size_of_TIMER0 0060  
              stateMachine@F6401 0200                       _controller 0150  
                        __Hparam 0000                          __Lparam 0000  
            PWM2_setDC@dutycycle 0058                     ?_system_init 0001  
                __size_of___flge 0104                  __size_of___fleq 00AA  
                        ___aodiv 43B8                          ___fladd 2A54  
                        ___aomod 46C4                          _adcInit 5938  
                        ___fldiv 333E                          ___awdiv 4FB0  
                        ___flneg 59EA                  __size_of___lmul 006A  
                        ___awmod 5074                          ___flmul 2F14  
                        ___flsub 582C                          ___fltol 494C  
                        ___lldiv 51CE                  __size_of___wmul 0026  
                      ?_vfprintf 00C7                     __psmallconst 0600  
                __size_of_efgtoa 0BC6                  __size_of_floorf 0216  
                        __pcinit 5736               __end_of_PWM1_setDC 547A  
                        __ramtop 0600                  ?_Lcd_Set_Cursor 0004  
             __end_of_PWM2_setDC 5400                          __ptext0 4C54  
                        __ptext1 5C26                          __ptext2 4828  
                        __ptext3 5BD4                          __ptext4 5B5E  
                        __ptext5 547A                          __ptext6 129E  
                        __ptext7 5976                          __ptext8 5A5A  
                        __ptext9 3EB6                       _menu_flags 00FD  
                     _menu_value 018F                  __size_of_strcpy 005C  
                __size_of_strlen 0036                          _counter 018B  
        stateMachine@textCursor2 00E3                        _T2CONbits 000FBA  
                   __size_of_abs 0040                     __size_of_pad 00C6  
                        _isdigit 5A22                       ??___xxtofl 0012  
               ___awmod@dividend 0001                          _isspace 57DA  
                        _isupper 59B2                          efgtoa@c 005E  
                        efgtoa@d 0087                          efgtoa@e 009F  
                        efgtoa@f 005A                          efgtoa@g 009B  
                        efgtoa@h 0091                          efgtoa@i 0099  
                        efgtoa@l 0095                          efgtoa@m 0083  
                        efgtoa@n 00A1                          efgtoa@p 008B  
                        efgtoa@t 007F                          efgtoa@u 00A3  
                        efgtoa@w 008E                    ?_speedControl 0058  
                        atoi@neg 000E                    ?_timer_0_init 0001  
                        _sprintf 5788                          _tolower 561E  
                     ??_lcd_init 0004           __end_of_Lcd_Write_Char 5AFC  
                        _strncmp 4D4A             end_of_initialization 577A  
           speedControl@position 0058                          floorf@e 0064  
                        floorf@m 0060                          floorf@u 0066  
                        floorf@x 004E                          fputc@fp 0003  
                     ??_mcu_init 0001                    __Lmediumconst 0000  
                        fputs@fp 000C                  ___lldiv@divisor 0005  
                ___lldiv@counter 000D                __end_of_vfpfcnvrt 2A54  
                     efgtoa@mode 0090                       efgtoa@sign 0089  
                        postdec1 000FE5                          postdec2 000FDD  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE                        Lcd_Port@a 0001  
                     ??_vfprintf 005F                          strcpy@d 0009  
                        strlen@a 0003                          strcpy@s 0007  
                        strlen@s 0001                __end_of_stopMotor 59B2  
                      _PORTBbits 000F81                        _PORTDbits 000F83  
                    ?_eepromRead 0001                      ___fladd@grs 0044  
                  ___xxtofl@sign 0016                        _TRISAbits 000F92  
                 ??_speedControl 005C                        _TRISBbits 000F93  
                      _TRISCbits 000F94                        _TRISDbits 000F95  
                      _TRISEbits 000F96                   ??_timer_0_init 0001  
                    ___fldiv@grs 0048                      ___fldiv@rem 0041  
                     _startMotor 5A5A                  ?_Lcd_Write_Char 0001  
        ?_calculatedAverageValue 0001                Lcd_Write_String@a 0005  
              Lcd_Write_String@i 0009                      ___flmul@grs 0029  
                  ??_eepromWrite 0002         _button_bounce_controller 00FF  
                 __end_of_TIMER0 0068                    ?_stateMachine 0001  
             _buttonControlFlags 4540                        _Lcd_Clear 5C38  
                   _convert_data 0100            __size_of_readAdcValue 0042  
                 __end_of___flge 4B56                   __end_of___fleq 51CE  
                 __end_of___lmul 554E                      vfpfcnvrt@ap 00AB  
                    vfpfcnvrt@ct 00C3                      vfpfcnvrt@fp 00A7  
                    vfpfcnvrt@ll 00B1                   __end_of___wmul 5BD4  
               _Lcd_Write_String 5308                   __end_of_efgtoa 129E  
            ?_buttonControlFlags 0001                   __end_of_floorf 3EB6  
                     floorf@F524 017F                   __end_of_strcpy 56DA  
                 __end_of_strlen 5AC6                __size_of_PWM_Init 0028  
            start_initialization 5736                      __end_of_abs 5938  
                    __end_of_pad 4FB0   __end_of_calculatedAverageValue 39BE  
                 _menuInitialize 5B5E                     _driver_limit 0173  
              __size_of_Lcd_Port 005C             ??_buttonControlFlags 0001  
                       ??_TIMER0 0001            __end_of___fpclassifyf 4C54  
                   _readAdcValue 58B6                   ??_stateMachine 00E1  
            __size_of_eepromRead 001E                      vfprintf@fmt 00C9  
                     ?_Lcd_Clear 0001                         ??___flge 003D  
                       ??___fleq 0009                         ??___lmul 0009  
            __end_of_eepromWrite 5B5E                         ??___wmul 0005  
                       ??_efgtoa 006A                      __pdataBANK1 01EF  
                       ??_floorf 0052             __size_of_system_init 0124  
                Lcd_Write_Char@a 0004                  Lcd_Write_Char@y 0003  
                  ??_menuControl 005F                         ??_strcpy 0005  
                       ??_strlen 0003                        ___fladd@a 0039  
                      ___fladd@b 0035                        ___fldiv@a 0039  
                      ___fldiv@b 0035                        ___flmul@a 0020  
                      ___flmul@b 001C                        ___flsub@a 0049  
                      ___flsub@b 0045           __end_of_menuInitialize 5B86  
                  __pcstackBANK0 0060                 ___aodiv@dividend 0001  
              __size_of___xxtofl 01B4                      ?_startMotor 0001  
                       ?_Lcd_Cmd 0001                __size_of_lcd_init 0096  
                      _atoi$2572 0010                        _atoi$2573 0014  
                      _atoi$2574 0012                __size_of_mcu_init 0016  
                    _efgtoa$2510 0077                      _efgtoa$2505 0073  
                    _efgtoa$2514 0079                      _efgtoa$2506 0075  
                    _efgtoa$2515 007B                      _efgtoa$2516 007D  
                      _dtoa$2481 002E    stateMachine@secretMenuCounter 019A  
           __end_of_speedControl 4074                 ??_Lcd_Set_Cursor 0005  
                      __pintcode 0008             __end_of_timer_0_init 5C38  
                       ?___aodiv 0001                         ?___fladd 0035  
                       ?___aomod 0001                         ?_adcInit 0001  
                       ?___fldiv 0035                         ?___awdiv 0001  
               ___aodiv@quotient 0013                         ?___flneg 0001  
                       ?___awmod 0001                         ?___flmul 001C  
                       ?___flsub 0045                         ?___fltol 004E  
                       ?___lldiv 0001                __size_of_vfprintf 006A  
                      fabsf@F463 0187                      __smallconst 0600  
                       ?_isdigit 0001                         ?_isspace 0001  
                ?_menuInitialize 0001                         ?_isupper 0001  
            __end_of_menuControl 54E4                   __size_of_fabsf 0034  
                       ?_sprintf 00CF                         ?_tolower 0007  
                 __size_of_fputc 00CA                   __size_of_fputs 0044  
                       ?_strncmp 0001                   __size_of_putch 0002  
             eepromWrite@address 0002                   ___wmul@product 0005  
                       _LATCbits 000F8B                         _LATDbits 000F8C  
                    _eepromWrite 5B30                   PWM1_setDC@duty 005C  
                       Lcd_Cmd@a 0003                         _PIR2bits 000FA1  
                       i2u771_40 0018                         i2u771_41 0014  
                       i2u772_40 0026                         i2u772_41 0022  
                       i2u773_40 0042                         i2u773_41 003E  
                       i2u774_40 005C                         i2u774_41 0058  
                    ??_Lcd_Clear 0004                     _pauseIsClick 019D  
            __size_of_startMotor 0036                        _vfpfcnvrt 241E  
                     _ADCON0bits 000FC2                       _ADCON2bits 000FC0  
                       _PWM_Init 5B86                ___wmul@multiplier 0001  
                   ??_eepromRead 0001                 ??_Lcd_Write_Char 0002  
                 PWM2_setDC@duty 005C                        _stopMotor 5976  
           __end_of_stateMachine 1C18                     _isspace$2603 0007  
                       _Lcd_Port 56DA                       vfpfcnvrt@c 00C6  
                     vfpfcnvrt@f 00BF                ___lmul@multiplier 0001  
                      copy_data0 574A         __end_of_Lcd_Write_String 5386  
               __size_of_Lcd_Cmd 001E                       _EECON1bits 000FA6  
                       __Hrparam 0000                       vfprintf@ap 00CB  
                       __Lrparam 0000                       vfprintf@fp 00C7  
             __end_of_eepromRead 5BF2                 __size_of___aodiv 0188  
               __size_of___fladd 04C0                 __size_of___aomod 0164  
               __size_of_adcInit 003E                 __size_of___fldiv 039A  
               __size_of___awdiv 00C4                 __size_of___flneg 0038  
               __size_of___awmod 00B0                 __size_of___flmul 042A  
               __size_of___flsub 0046                 __size_of___fltol 0106  
               __size_of___lldiv 00A4                       ?_vfpfcnvrt 00A7  
                    _menuControl 547A                  ___aodiv@divisor 0009  
                ___aodiv@counter 0011                       _ANSELAbits 000F38  
                     _ANSELBbits 000F39                       _ANSELCbits 000F3A  
                     _ANSELDbits 000F3B                       _ANSELEbits 000F3C  
             ___fpclassifyf@F463 0183                       sprintf@fmt 00D1  
                       ___xxtofl 4074                       ?_stopMotor 0001  
               __size_of_isdigit 0038                 __size_of_isspace 0052  
                       __ptext10 1C18                         __ptext11 58B6  
                       __ptext20 554E                         __ptext12 36D8  
                       __ptext21 241E                         __ptext13 54E4  
                       __ptext30 582C                         __ptext22 4D4A  
                       __ptext14 51CE                         __ptext31 2A54  
                       __ptext23 06D8                         __ptext15 5386  
                       __ptext40 4EEA                         __ptext32 59EA  
                       __ptext24 561E                         __ptext16 5400  
                       __ptext41 5A90                         __ptext33 2F14  
                       __ptext25 59B2                         __ptext17 5AFC  
                       __ptext50 5A22                         __ptext42 5872  
                       __ptext34 4A52                         __ptext26 567E  
                       __ptext18 4074                         __ptext51 5BAE  
                       __ptext43 4E20                         __ptext35 5124  
                       __ptext27 3CA0                         __ptext19 5788  
                       __ptext60 5B86                         __ptext52 5B30  
                       __ptext44 5C4E                         __ptext36 333E  
                       __ptext28 4B56                         __ptext61 5C38  
                       __ptext53 5308                         __ptext45 58F8  
                       __ptext37 5074                         __ptext29 494C  
                       __ptext62 5BF2                         __ptext54 5AC6  
                       __ptext46 46C4                         __ptext38 4FB0  
                       __ptext63 56DA                         __ptext55 55B8  
                       __ptext47 43B8                         __ptext39 39BE  
                       __ptext56 4540                         __ptext48 4228  
                       __ptext57 5C10                         __ptext49 57DA  
                       __ptext58 5272                         __ptext59 5938  
               __size_of_isupper 0038                         _lcd_init 5272  
               __size_of_sprintf 0052                 __size_of_tolower 0060  
                     strcpy@dest 0001                 __size_of_strncmp 00D6  
                       _mcu_init 5C10                    __size_of_atoi 0190  
                  __size_of_main 00F6                    __size_of_dtoa 02E2  
          __size_of_speedControl 01BE            __size_of_timer_0_init 0012  
                       efgtoa@fp 0058                         efgtoa@ne 0085  
                       efgtoa@pp 0081                         efgtoa@ou 006F  
                       int$flags 005F                         _vfprintf 554E  
         readAdcValue@adcChannel 0005                 ___aomod@dividend 0001  
                 _vfpfcnvrt$2530 00B9                   _vfpfcnvrt$2531 00BB  
                 _vfpfcnvrt$2536 00BD                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2                         isdigit@c 0001  
                   _speedControl 3EB6                     _timer_0_init 5C26  
                   ??_startMotor 005E               Lcd_Write_Char@temp 0002  
                       intlevel2 0000                        sprintf@ap 00D9  
    __size_of_buttonControlFlags 0184                         isspace@c 0001  
               ___lldiv@dividend 0001                        strcpy@src 0003  
                       isupper@c 0001                        strncmp@_l 0001  
                      strncmp@_r 0003                       _OSCCONbits 000FD3  
                  ??_system_init 0002                      efgtoa@nmode 008D  
                   _procces_data 0130                  ___aomod@divisor 0009  
                    ??_vfpfcnvrt 00AD                  ___aomod@counter 0011  
             Lcd_Set_Cursor@temp 0008                 ??_menuInitialize 0001  
             __end_of_startMotor 5A90            __size_of_stateMachine 097A  
                       sprintf@f 00DB                         tolower@c 0007  
                       sprintf@s 00CF           __size_of___fpclassifyf 00FE  
               ___lldiv@quotient 0009                      ??_stopMotor 005E  
                       strncmp@l 0008                         strncmp@n 0005  
                       strncmp@r 000A                      _timer_value 00F3  
                  ___fladd@signs 0041                       _PWM1_setDC 5400  
                     _PWM2_setDC 5386                     ___aodiv@sign 0012  
                    _textCursor2 0210                     ___fladd@aexp 0042  
                   ___fladd@bexp 0043                     ?_eepromWrite 0001  
                   ___aomod@sign 0012                     _stateMachine 129E  
