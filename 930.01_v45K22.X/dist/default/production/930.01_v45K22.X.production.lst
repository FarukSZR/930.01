

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Aug 13 15:38:48 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    81                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    82                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    83                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    84                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    85  0000                     
    86                           ; Version 2.20
    87                           ; Generated 05/05/2020 GMT
    88                           ; 
    89                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    90                           ; All rights reserved.
    91                           ; 
    92                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    93                           ; 
    94                           ; Redistribution and use in source and binary forms, with or without modification, are
    95                           ; permitted provided that the following conditions are met:
    96                           ; 
    97                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    98                           ;        conditions and the following disclaimer.
    99                           ; 
   100                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   101                           ;        of conditions and the following disclaimer in the documentation and/or other
   102                           ;        materials provided with the distribution.
   103                           ; 
   104                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   105                           ;        software without specific prior written permission.
   106                           ; 
   107                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   108                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   109                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   110                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   111                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   112                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   113                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   114                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   115                           ; 
   116                           ; 
   117                           ; Code-generator required, PIC18F45K22 Definitions
   118                           ; 
   119                           ; SFR Addresses
   120  0000                     
   121                           	psect	eeprom_data
   122  F00000  1E 0A 04 00 00 00 00 00 	db	30,10,4,0,0,0,0,0	;# 
   123  0000                     
   124                           	psect	idataBANK1
   125  005C48                     __pidataBANK1:
   126                           	callstack 0
   127                           
   128                           ;initializer for _KD@fs_speed_controller$F1783
   129  005C48  0000               	dw	0
   130  005C4A  3F80               	dw	16256
   131                           
   132                           ;initializer for _KP@fs_speed_controller$F1782
   133  005C4C  CCCD               	dw	52429
   134  005C4E  3E4C               	dw	15948
   135                           
   136                           ;initializer for _KD@fs_speed_controller$F1599
   137  005C50  0000               	dw	0
   138  005C52  3F80               	dw	16256
   139                           
   140                           ;initializer for _KP@fs_speed_controller$F1598
   141  005C54  CCCD               	dw	52429
   142  005C56  3E4C               	dw	15948
   143                           
   144                           ;initializer for _KD@fs_speed_controller$F1182
   145  005C58  0000               	dw	0
   146  005C5A  3F80               	dw	16256
   147                           
   148                           ;initializer for _KP@fs_speed_controller$F1181
   149  005C5C  CCCD               	dw	52429
   150  005C5E  3E4C               	dw	15948
   151                           
   152                           ;initializer for _KD
   153  005C60  0000               	dw	0
   154  005C62  3F80               	dw	16256
   155                           
   156                           ;initializer for _KP
   157  005C64  CCCD               	dw	52429
   158  005C66  3E4C               	dw	15948
   159  0000                     _ANSELCbits	set	3898
   160  0000                     _ANSELBbits	set	3897
   161  0000                     _ANSELDbits	set	3899
   162  0000                     _ANSELEbits	set	3900
   163  0000                     _ANSELAbits	set	3896
   164  0000                     _T0CON	set	4053
   165  0000                     _TMR0L	set	4054
   166  0000                     _TMR0H	set	4055
   167  0000                     _INTCONbits	set	4082
   168  0000                     _CCPR2L	set	3943
   169  0000                     _CCPR1L	set	4030
   170  0000                     _PR2	set	4027
   171  0000                     _TMR2	set	4028
   172  0000                     _T2CONbits	set	4026
   173  0000                     _CCP2CON	set	3942
   174  0000                     _CCP1CON	set	4029
   175  0000                     _LATCbits	set	3979
   176  0000                     _LATDbits	set	3980
   177  0000                     _TRISCbits	set	3988
   178  0000                     _OSCTUNEbits	set	3995
   179  0000                     _OSCCONbits	set	4051
   180  0000                     _TRISBbits	set	3987
   181  0000                     _TRISDbits	set	3989
   182  0000                     _PORTDbits	set	3971
   183  0000                     _PORTBbits	set	3969
   184  0000                     _PIR2bits	set	4001
   185  0000                     _EECON2	set	4007
   186  0000                     _EEDATA	set	4008
   187  0000                     _EECON1bits	set	4006
   188  0000                     _EEADR	set	4009
   189  0000                     _ADCON2bits	set	4032
   190  0000                     _ADCON1	set	4033
   191  0000                     _ADCON0	set	4034
   192  0000                     _TRISEbits	set	3990
   193  0000                     _TRISAbits	set	3986
   194  0000                     _ADRESL	set	4035
   195  0000                     _ADRESH	set	4036
   196  0000                     _ADCON0bits	set	4034
   197                           
   198                           	psect	smallconst
   199  000600                     __psmallconst:
   200                           	callstack 0
   201  000600  00                 	db	0
   202  000601                     STR_4:
   203  000601  25                 	db	37
   204  000602  64                 	db	100	;'d'
   205  000603  20                 	db	32
   206  000604  20                 	db	32
   207  000605  20                 	db	32
   208  000606  20                 	db	32
   209  000607  20                 	db	32
   210  000608  20                 	db	32
   211  000609  20                 	db	32
   212  00060A  20                 	db	32
   213  00060B  20                 	db	32
   214  00060C  20                 	db	32
   215  00060D  20                 	db	32
   216  00060E  20                 	db	32
   217  00060F  20                 	db	32
   218  000610  20                 	db	32
   219  000611  20                 	db	32
   220  000612  00                 	db	0
   221  000613                     STR_13:
   222  000613  50                 	db	80	;'P'
   223  000614  49                 	db	73	;'I'
   224  000615  44                 	db	68	;'D'
   225  000616  20                 	db	32
   226  000617  50                 	db	80	;'P'
   227  000618  41                 	db	65	;'A'
   228  000619  52                 	db	82	;'R'
   229  00061A  41                 	db	65	;'A'
   230  00061B  4D                 	db	77	;'M'
   231  00061C  20                 	db	32
   232  00061D  20                 	db	32
   233  00061E  20                 	db	32
   234  00061F  20                 	db	32
   235  000620  20                 	db	32
   236  000621  20                 	db	32
   237  000622  20                 	db	32
   238  000623  00                 	db	0
   239  000624                     STR_7:
   240  000624  48                 	db	72	;'H'
   241  000625  49                 	db	73	;'I'
   242  000626  5A                 	db	90	;'Z'
   243  000627  20                 	db	32
   244  000628  4C                 	db	76	;'L'
   245  000629  69                 	db	105	;'i'
   246  00062A  4D                 	db	77	;'M'
   247  00062B  69                 	db	105	;'i'
   248  00062C  54                 	db	84	;'T'
   249  00062D  69                 	db	105	;'i'
   250  00062E  20                 	db	32
   251  00062F  20                 	db	32
   252  000630  20                 	db	32
   253  000631  20                 	db	32
   254  000632  20                 	db	32
   255  000633  20                 	db	32
   256  000634  00                 	db	0
   257  000635                     STR_1:
   258  000635  4B                 	db	75	;'K'
   259  000636  41                 	db	65	;'A'
   260  000637  4C                 	db	76	;'L'
   261  000638  41                 	db	65	;'A'
   262  000639  4E                 	db	78	;'N'
   263  00063A  20                 	db	32
   264  00063B  5A                 	db	90	;'Z'
   265  00063C  41                 	db	65	;'A'
   266  00063D  4D                 	db	77	;'M'
   267  00063E  41                 	db	65	;'A'
   268  00063F  4E                 	db	78	;'N'
   269  000640  20                 	db	32
   270  000641  20                 	db	32
   271  000642  20                 	db	32
   272  000643  20                 	db	32
   273  000644  20                 	db	32
   274  000645  00                 	db	0
   275  000646                     STR_9:
   276  000646  5A                 	db	90	;'Z'
   277  000647  41                 	db	65	;'A'
   278  000648  4D                 	db	77	;'M'
   279  000649  41                 	db	65	;'A'
   280  00064A  4E                 	db	78	;'N'
   281  00064B  20                 	db	32
   282  00064C  44                 	db	68	;'D'
   283  00064D  4F                 	db	79	;'O'
   284  00064E  4C                 	db	76	;'L'
   285  00064F  44                 	db	68	;'D'
   286  000650  55                 	db	85	;'U'
   287  000651  20                 	db	32
   288  000652  20                 	db	32
   289  000653  20                 	db	32
   290  000654  20                 	db	32
   291  000655  20                 	db	32
   292  000656  00                 	db	0
   293  000657                     STR_11:
   294  000657  48                 	db	72	;'H'
   295  000658  41                 	db	65	;'A'
   296  000659  52                 	db	82	;'R'
   297  00065A  45                 	db	69	;'E'
   298  00065B  4B                 	db	75	;'K'
   299  00065C  45                 	db	69	;'E'
   300  00065D  54                 	db	84	;'T'
   301  00065E  20                 	db	32
   302  00065F  44                 	db	68	;'D'
   303  000660  55                 	db	85	;'U'
   304  000661  52                 	db	82	;'R'
   305  000662  44                 	db	68	;'D'
   306  000663  55                 	db	85	;'U'
   307  000664  20                 	db	32
   308  000665  20                 	db	32
   309  000666  20                 	db	32
   310  000667  00                 	db	0
   311  000668                     STR_3:
   312  000668  48                 	db	72	;'H'
   313  000669  41                 	db	65	;'A'
   314  00066A  52                 	db	82	;'R'
   315  00066B  45                 	db	69	;'E'
   316  00066C  4B                 	db	75	;'K'
   317  00066D  54                 	db	84	;'T'
   318  00066E  20                 	db	32
   319  00066F  5A                 	db	90	;'Z'
   320  000670  41                 	db	65	;'A'
   321  000671  4D                 	db	77	;'M'
   322  000672  41                 	db	65	;'A'
   323  000673  4E                 	db	78	;'N'
   324  000674  49                 	db	73	;'I'
   325  000675  20                 	db	32
   326  000676  64                 	db	100	;'d'
   327  000677  6B                 	db	107	;'k'
   328  000678  00                 	db	0
   329  000679                     STR_5:
   330  000679  44                 	db	68	;'D'
   331  00067A  55                 	db	85	;'U'
   332  00067B  52                 	db	82	;'R'
   333  00067C  4D                 	db	77	;'M'
   334  00067D  41                 	db	65	;'A'
   335  00067E  20                 	db	32
   336  00067F  5A                 	db	90	;'Z'
   337  000680  41                 	db	65	;'A'
   338  000681  4D                 	db	77	;'M'
   339  000682  41                 	db	65	;'A'
   340  000683  4E                 	db	78	;'N'
   341  000684  49                 	db	73	;'I'
   342  000685  20                 	db	32
   343  000686  20                 	db	32
   344  000687  6D                 	db	109	;'m'
   345  000688  73                 	db	115	;'s'
   346  000689  00                 	db	0
   347  00068A                     STR_10:
   348  00068A  20                 	db	32
   349  00068B  20                 	db	32
   350  00068C  20                 	db	32
   351  00068D  20                 	db	32
   352  00068E  20                 	db	32
   353  00068F  20                 	db	32
   354  000690  25                 	db	37
   355  000691  64                 	db	100	;'d'
   356  000692  3A                 	db	58	;':'
   357  000693  25                 	db	37
   358  000694  64                 	db	100	;'d'
   359  000695  20                 	db	32
   360  000696  20                 	db	32
   361  000697  20                 	db	32
   362  000698  20                 	db	32
   363  000699  00                 	db	0
   364  00069A                     STR_2:
   365  00069A  20                 	db	32
   366  00069B  20                 	db	32
   367  00069C  20                 	db	32
   368  00069D  20                 	db	32
   369  00069E  20                 	db	32
   370  00069F  20                 	db	32
   371  0006A0  25                 	db	37
   372  0006A1  64                 	db	100	;'d'
   373  0006A2  3A                 	db	58	;':'
   374  0006A3  25                 	db	37
   375  0006A4  64                 	db	100	;'d'
   376  0006A5  20                 	db	32
   377  0006A6  20                 	db	32
   378  0006A7  20                 	db	32
   379  0006A8  00                 	db	0
   380  0006A9                     STR_14:
   381  0006A9  4B                 	db	75	;'K'
   382  0006AA  70                 	db	112	;'p'
   383  0006AB  3A                 	db	58	;':'
   384  0006AC  25                 	db	37
   385  0006AD  35                 	db	53	;'5'
   386  0006AE  2E                 	db	46
   387  0006AF  31                 	db	49	;'1'
   388  0006B0  66                 	db	102	;'f'
   389  0006B1  20                 	db	32
   390  0006B2  20                 	db	32
   391  0006B3  20                 	db	32
   392  0006B4  20                 	db	32
   393  0006B5  20                 	db	32
   394  0006B6  00                 	db	0
   395  0006B7                     STR_16:
   396  0006B7  4B                 	db	75	;'K'
   397  0006B8  64                 	db	100	;'d'
   398  0006B9  3A                 	db	58	;':'
   399  0006BA  25                 	db	37
   400  0006BB  35                 	db	53	;'5'
   401  0006BC  2E                 	db	46
   402  0006BD  31                 	db	49	;'1'
   403  0006BE  66                 	db	102	;'f'
   404  0006BF  20                 	db	32
   405  0006C0  20                 	db	32
   406  0006C1  20                 	db	32
   407  0006C2  20                 	db	32
   408  0006C3  00                 	db	0
   409  0006C4                     STR_17:
   410  0006C4  49                 	db	73	;'I'
   411  0006C5  4E                 	db	78	;'N'
   412  0006C6  46                 	db	70	;'F'
   413  0006C7  00                 	db	0
   414  0006C8                     STR_21:
   415  0006C8  4E                 	db	78	;'N'
   416  0006C9  41                 	db	65	;'A'
   417  0006CA  4E                 	db	78	;'N'
   418  0006CB  00                 	db	0
   419  0006CC                     STR_18:
   420  0006CC  69                 	db	105	;'i'
   421  0006CD  6E                 	db	110	;'n'
   422  0006CE  66                 	db	102	;'f'
   423  0006CF  00                 	db	0
   424  0006D0                     STR_22:
   425  0006D0  6E                 	db	110	;'n'
   426  0006D1  61                 	db	97	;'a'
   427  0006D2  6E                 	db	110	;'n'
   428  0006D3  00                 	db	0
   429  0006D4                     STR_25:
   430  0006D4  6C                 	db	108	;'l'
   431  0006D5  66                 	db	102	;'f'
   432  0006D6  00                 	db	0
   433  0006D7  00                 	db	0	; dummy byte at the end
   434  0000                     
   435                           ; #config settings
   436                           
   437                           	psect	cinit
   438  0057AA                     __pcinit:
   439                           	callstack 0
   440  0057AA                     start_initialization:
   441                           	callstack 0
   442  0057AA                     __initialization:
   443                           	callstack 0
   444                           
   445                           ; Initialize objects allocated to BANK1 (32 bytes)
   446                           ; load TBLPTR registers with __pidataBANK1
   447  0057AA  0E48               	movlw	low __pidataBANK1
   448  0057AC  6EF6               	movwf	tblptrl,c
   449  0057AE  0E5C               	movlw	high __pidataBANK1
   450  0057B0  6EF7               	movwf	tblptrh,c
   451  0057B2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   452  0057B4  6EF8               	movwf	tblptru,c
   453  0057B6  EE01  F0BF         	lfsr	0,__pdataBANK1
   454  0057BA  EE10 F020          	lfsr	1,32
   455  0057BE                     copy_data0:
   456  0057BE  0009               	tblrd		*+
   457  0057C0  CFF5 FFEE          	movff	tablat,postinc0
   458  0057C4  50E5               	movf	postdec1,w,c
   459  0057C6  50E1               	movf	fsr1l,w,c
   460  0057C8  E1FA               	bnz	copy_data0
   461                           
   462                           ; Clear objects allocated to BANK2 (80 bytes)
   463  0057CA  EE02  F000         	lfsr	0,__pbssBANK2
   464  0057CE  0E50               	movlw	80
   465  0057D0                     clear_0:
   466  0057D0  6AEE               	clrf	postinc0,c
   467  0057D2  06E8               	decf	wreg,f,c
   468  0057D4  E1FD               	bnz	clear_0
   469                           
   470                           ; Clear objects allocated to BANK1 (191 bytes)
   471  0057D6  EE01  F000         	lfsr	0,__pbssBANK1
   472  0057DA  0EBF               	movlw	191
   473  0057DC                     clear_1:
   474  0057DC  6AEE               	clrf	postinc0,c
   475  0057DE  06E8               	decf	wreg,f,c
   476  0057E0  E1FD               	bnz	clear_1
   477                           
   478                           ; Clear objects allocated to BANK0 (13 bytes)
   479  0057E2  EE00  F0F3         	lfsr	0,__pbssBANK0
   480  0057E6  0E0D               	movlw	13
   481  0057E8                     clear_2:
   482  0057E8  6AEE               	clrf	postinc0,c
   483  0057EA  06E8               	decf	wreg,f,c
   484  0057EC  E1FD               	bnz	clear_2
   485  0057EE                     end_of_initialization:
   486                           	callstack 0
   487  0057EE                     __end_of__initialization:
   488                           	callstack 0
   489  0057EE  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   490  0057F0  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   491  0057F2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   492  0057F4  6EF8               	movwf	tblptru,c
   493  0057F6  0100               	movlb	0
   494  0057F8  EF60  F026         	goto	_main	;jump to C main() function
   495                           
   496                           	psect	bssBANK0
   497  0000F3                     __pbssBANK0:
   498                           	callstack 0
   499  0000F3                     _timer_value:
   500                           	callstack 0
   501  0000F3                     	ds	10
   502  0000FD                     _menu_flags:
   503                           	callstack 0
   504  0000FD                     	ds	1
   505  0000FE                     _button_bounce_controller:
   506                           	callstack 0
   507  0000FE                     	ds	1
   508  0000FF                     _pauseIsClick:
   509                           	callstack 0
   510  0000FF                     	ds	1
   511                           
   512                           	psect	bssBANK1
   513  000100                     __pbssBANK1:
   514                           	callstack 0
   515  000100                     _convert_data:
   516                           	callstack 0
   517  000100                     	ds	48
   518  000130                     _procces_data:
   519                           	callstack 0
   520  000130                     	ds	32
   521  000150                     _controller:
   522                           	callstack 0
   523  000150                     	ds	19
   524  000163                     	ds	16
   525  000173                     _textCursor2:
   526                           	callstack 0
   527  000173                     	ds	16
   528  000183                     _adc_raw_data:
   529                           	callstack 0
   530  000183                     	ds	16
   531  000193                     _driver_limit:
   532                           	callstack 0
   533  000193                     	ds	12
   534  00019F                     floorf@F524:
   535                           	callstack 0
   536  00019F                     	ds	4
   537  0001A3                     ___fpclassifyf@F463:
   538                           	callstack 0
   539  0001A3                     	ds	4
   540  0001A7                     fabsf@F463:
   541                           	callstack 0
   542  0001A7                     	ds	4
   543  0001AB                     _counter:
   544                           	callstack 0
   545  0001AB                     	ds	4
   546  0001AF                     _menu_value:
   547                           	callstack 0
   548  0001AF                     	ds	3
   549  0001B2                     _nout:
   550                           	callstack 0
   551  0001B2                     	ds	2
   552  0001B4                     _width:
   553                           	callstack 0
   554  0001B4                     	ds	2
   555  0001B6                     _prec:
   556                           	callstack 0
   557  0001B6                     	ds	2
   558  0001B8                     _flags:
   559                           	callstack 0
   560  0001B8                     	ds	2
   561  0001BA                     stateMachine@secretMenuCounter:
   562                           	callstack 0
   563  0001BA                     	ds	1
   564  0001BB                     _menu_selected:
   565                           	callstack 0
   566  0001BB                     	ds	1
   567  0001BC                     _stopIsClick:
   568                           	callstack 0
   569  0001BC                     	ds	1
   570  0001BD                     _startIsClick:
   571                           	callstack 0
   572  0001BD                     	ds	1
   573  0001BE                     _timer_counter_flag:
   574                           	callstack 0
   575  0001BE                     	ds	1
   576                           
   577                           	psect	dataBANK1
   578  0001BF                     __pdataBANK1:
   579                           	callstack 0
   580  0001BF                     	ds	4
   581  0001C3                     	ds	4
   582  0001C7                     _KD@fs_speed_controller$F1599:
   583                           	callstack 0
   584  0001C7                     	ds	4
   585  0001CB                     _KP@fs_speed_controller$F1598:
   586                           	callstack 0
   587  0001CB                     	ds	4
   588  0001CF                     	ds	4
   589  0001D3                     	ds	4
   590  0001D7                     	ds	4
   591  0001DB                     	ds	4
   592                           
   593                           	psect	bssBANK2
   594  000200                     __pbssBANK2:
   595                           	callstack 0
   596  000200                     _dbuf:
   597                           	callstack 0
   598  000200                     	ds	80
   599                           
   600                           	psect	cstackBANK0
   601  000060                     __pcstackBANK0:
   602                           	callstack 0
   603  000060                     floorf@m:
   604                           	callstack 0
   605                           
   606                           ; 4 bytes @ 0x0
   607  000060                     	ds	4
   608  000064                     floorf@e:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x4
   612  000064                     	ds	2
   613  000066                     floorf@u:
   614                           	callstack 0
   615                           
   616                           ; 4 bytes @ 0x6
   617  000066                     	ds	4
   618  00006A                     ??_efgtoa:
   619                           
   620                           ; 1 bytes @ 0xA
   621  00006A                     	ds	5
   622  00006F                     efgtoa@ou:
   623                           	callstack 0
   624                           
   625                           ; 4 bytes @ 0xF
   626  00006F                     	ds	4
   627  000073                     _efgtoa$2505:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x13
   631  000073                     	ds	2
   632  000075                     _efgtoa$2506:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x15
   636  000075                     	ds	2
   637  000077                     _efgtoa$2510:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x17
   641  000077                     	ds	2
   642  000079                     _efgtoa$2514:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x19
   646  000079                     	ds	2
   647  00007B                     _efgtoa$2515:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x1B
   651  00007B                     	ds	2
   652  00007D                     _efgtoa$2516:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x1D
   656  00007D                     	ds	2
   657  00007F                     efgtoa@t:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x1F
   661  00007F                     	ds	2
   662  000081                     efgtoa@pp:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x21
   666  000081                     	ds	2
   667  000083                     efgtoa@m:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0x23
   671  000083                     	ds	2
   672  000085                     efgtoa@ne:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x25
   676  000085                     	ds	2
   677  000087                     efgtoa@d:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x27
   681  000087                     	ds	2
   682  000089                     efgtoa@sign:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x29
   686  000089                     	ds	2
   687  00008B                     efgtoa@p:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x2B
   691  00008B                     	ds	2
   692  00008D                     efgtoa@nmode:
   693                           	callstack 0
   694                           
   695                           ; 1 bytes @ 0x2D
   696  00008D                     	ds	1
   697  00008E                     efgtoa@w:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x2E
   701  00008E                     	ds	2
   702  000090                     efgtoa@mode:
   703                           	callstack 0
   704                           
   705                           ; 1 bytes @ 0x30
   706  000090                     	ds	1
   707  000091                     efgtoa@h:
   708                           	callstack 0
   709                           
   710                           ; 4 bytes @ 0x31
   711  000091                     	ds	4
   712  000095                     efgtoa@l:
   713                           	callstack 0
   714                           
   715                           ; 4 bytes @ 0x35
   716  000095                     	ds	4
   717  000099                     efgtoa@i:
   718                           	callstack 0
   719                           
   720                           ; 2 bytes @ 0x39
   721  000099                     	ds	2
   722  00009B                     efgtoa@g:
   723                           	callstack 0
   724                           
   725                           ; 4 bytes @ 0x3B
   726  00009B                     	ds	4
   727  00009F                     efgtoa@e:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x3F
   731  00009F                     	ds	2
   732  0000A1                     efgtoa@n:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x41
   736  0000A1                     	ds	2
   737  0000A3                     efgtoa@u:
   738                           	callstack 0
   739                           
   740                           ; 4 bytes @ 0x43
   741  0000A3                     	ds	4
   742  0000A7                     ?_vfpfcnvrt:
   743                           	callstack 0
   744  0000A7                     vfpfcnvrt@fp:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x47
   748  0000A7                     	ds	2
   749  0000A9                     vfpfcnvrt@fmt:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0x49
   753  0000A9                     	ds	2
   754  0000AB                     vfpfcnvrt@ap:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x4B
   758  0000AB                     	ds	2
   759  0000AD                     ??_vfpfcnvrt:
   760                           
   761                           ; 1 bytes @ 0x4D
   762  0000AD                     	ds	4
   763  0000B1                     vfpfcnvrt@ll:
   764                           	callstack 0
   765                           
   766                           ; 8 bytes @ 0x51
   767  0000B1                     	ds	8
   768  0000B9                     _vfpfcnvrt$2530:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0x59
   772  0000B9                     	ds	2
   773  0000BB                     _vfpfcnvrt$2531:
   774                           	callstack 0
   775                           
   776                           ; 2 bytes @ 0x5B
   777  0000BB                     	ds	2
   778  0000BD                     _vfpfcnvrt$2536:
   779                           	callstack 0
   780                           
   781                           ; 2 bytes @ 0x5D
   782  0000BD                     	ds	2
   783  0000BF                     vfpfcnvrt@f:
   784                           	callstack 0
   785                           
   786                           ; 4 bytes @ 0x5F
   787  0000BF                     	ds	4
   788  0000C3                     vfpfcnvrt@ct:
   789                           	callstack 0
   790                           
   791                           ; 3 bytes @ 0x63
   792  0000C3                     	ds	3
   793  0000C6                     vfpfcnvrt@c:
   794                           	callstack 0
   795                           
   796                           ; 1 bytes @ 0x66
   797  0000C6                     	ds	1
   798  0000C7                     ?_vfprintf:
   799                           	callstack 0
   800  0000C7                     vfprintf@fp:
   801                           	callstack 0
   802                           
   803                           ; 2 bytes @ 0x67
   804  0000C7                     	ds	2
   805  0000C9                     vfprintf@fmt:
   806                           	callstack 0
   807                           
   808                           ; 2 bytes @ 0x69
   809  0000C9                     	ds	2
   810  0000CB                     vfprintf@ap:
   811                           	callstack 0
   812                           
   813                           ; 2 bytes @ 0x6B
   814  0000CB                     	ds	2
   815  0000CD                     vfprintf@cfmt:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x6D
   819  0000CD                     	ds	2
   820  0000CF                     ?_sprintf:
   821                           	callstack 0
   822  0000CF                     sprintf@s:
   823                           	callstack 0
   824                           
   825                           ; 2 bytes @ 0x6F
   826  0000CF                     	ds	2
   827  0000D1                     sprintf@fmt:
   828                           	callstack 0
   829                           
   830                           ; 2 bytes @ 0x71
   831  0000D1                     	ds	8
   832  0000D9                     sprintf@ap:
   833                           	callstack 0
   834                           
   835                           ; 2 bytes @ 0x79
   836  0000D9                     	ds	2
   837  0000DB                     sprintf@f:
   838                           	callstack 0
   839                           
   840                           ; 6 bytes @ 0x7B
   841  0000DB                     	ds	6
   842  0000E1                     ??_stateMachine:
   843                           
   844                           ; 1 bytes @ 0x81
   845  0000E1                     	ds	2
   846  0000E3                     stateMachine@textCursor2:
   847                           	callstack 0
   848                           
   849                           ; 16 bytes @ 0x83
   850  0000E3                     	ds	16
   851                           
   852                           	psect	cstackCOMRAM
   853  000001                     __pcstackCOMRAM:
   854                           	callstack 0
   855  000001                     ?_strlen:
   856                           	callstack 0
   857  000001                     ?___fpclassifyf:
   858                           	callstack 0
   859  000001                     ?_isupper:
   860                           	callstack 0
   861  000001                     ?_isdigit:
   862                           	callstack 0
   863  000001                     ?_strncmp:
   864                           	callstack 0
   865  000001                     ?_isspace:
   866                           	callstack 0
   867  000001                     ?_readAdcValue:
   868                           	callstack 0
   869  000001                     ?___wmul:
   870                           	callstack 0
   871  000001                     ?___awdiv:
   872                           	callstack 0
   873  000001                     ?___awmod:
   874                           	callstack 0
   875  000001                     ?___lmul:
   876                           	callstack 0
   877  000001                     ?___lldiv:
   878                           	callstack 0
   879  000001                     ?___flneg:
   880                           	callstack 0
   881  000001                     ?___aodiv:
   882                           	callstack 0
   883  000001                     ?___aomod:
   884                           	callstack 0
   885  000001                     eepromRead@address:
   886                           	callstack 0
   887  000001                     eepromWrite@data:
   888                           	callstack 0
   889  000001                     Lcd_Port@a:
   890                           	callstack 0
   891  000001                     ___wmul@multiplier:
   892                           	callstack 0
   893  000001                     ___awdiv@dividend:
   894                           	callstack 0
   895  000001                     ___awmod@dividend:
   896                           	callstack 0
   897  000001                     isdigit@c:
   898                           	callstack 0
   899  000001                     isspace@c:
   900                           	callstack 0
   901  000001                     isupper@c:
   902                           	callstack 0
   903  000001                     fputc@c:
   904                           	callstack 0
   905  000001                     strcpy@dest:
   906                           	callstack 0
   907  000001                     strlen@s:
   908                           	callstack 0
   909  000001                     strncmp@_l:
   910                           	callstack 0
   911  000001                     ___lmul@multiplier:
   912                           	callstack 0
   913  000001                     ___lldiv@dividend:
   914                           	callstack 0
   915  000001                     ___fleq@ff1:
   916                           	callstack 0
   917  000001                     ___flneg@f1:
   918                           	callstack 0
   919  000001                     ___fpclassifyf@x:
   920                           	callstack 0
   921  000001                     ___aodiv@dividend:
   922                           	callstack 0
   923  000001                     ___aomod@dividend:
   924                           	callstack 0
   925                           
   926                           ; 8 bytes @ 0x0
   927  000001                     	ds	1
   928  000002                     ??_system_init:
   929  000002                     ??_Lcd_Cmd:
   930  000002                     eepromWrite@address:
   931                           	callstack 0
   932  000002                     Lcd_Write_Char@temp:
   933                           	callstack 0
   934                           
   935                           ; 1 bytes @ 0x1
   936  000002                     	ds	1
   937  000003                     ??_isupper:
   938  000003                     ??_isdigit:
   939  000003                     ??_isspace:
   940  000003                     ??_readAdcValue:
   941  000003                     Lcd_Cmd@a:
   942                           	callstack 0
   943  000003                     Lcd_Write_Char@y:
   944                           	callstack 0
   945  000003                     ___wmul@multiplicand:
   946                           	callstack 0
   947  000003                     ___awdiv@divisor:
   948                           	callstack 0
   949  000003                     ___awmod@divisor:
   950                           	callstack 0
   951  000003                     fputc@fp:
   952                           	callstack 0
   953  000003                     strcpy@src:
   954                           	callstack 0
   955  000003                     strlen@a:
   956                           	callstack 0
   957  000003                     strncmp@_r:
   958                           	callstack 0
   959                           
   960                           ; 2 bytes @ 0x2
   961  000003                     	ds	1
   962  000004                     ??_lcd_init:
   963  000004                     Lcd_Set_Cursor@b:
   964                           	callstack 0
   965  000004                     Lcd_Write_Char@a:
   966                           	callstack 0
   967                           
   968                           ; 1 bytes @ 0x3
   969  000004                     	ds	1
   970  000005                     ??_fputc:
   971  000005                     ??___fpclassifyf:
   972  000005                     ??_strcpy:
   973  000005                     readAdcValue@adcChannel:
   974                           	callstack 0
   975  000005                     Lcd_Set_Cursor@a:
   976                           	callstack 0
   977  000005                     ___awdiv@counter:
   978                           	callstack 0
   979  000005                     ___awmod@counter:
   980                           	callstack 0
   981  000005                     Lcd_Write_String@a:
   982                           	callstack 0
   983  000005                     ___wmul@product:
   984                           	callstack 0
   985  000005                     strncmp@n:
   986                           	callstack 0
   987  000005                     ___lmul@multiplicand:
   988                           	callstack 0
   989  000005                     ___lldiv@divisor:
   990                           	callstack 0
   991  000005                     ___fleq@ff2:
   992                           	callstack 0
   993                           
   994                           ; 4 bytes @ 0x4
   995  000005                     	ds	1
   996  000006                     Lcd_Set_Cursor@z:
   997                           	callstack 0
   998  000006                     ___awdiv@sign:
   999                           	callstack 0
  1000  000006                     ___awmod@sign:
  1001                           	callstack 0
  1002  000006                     readAdcValue@adcValue:
  1003                           	callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x5
  1006  000006                     	ds	1
  1007  000007                     ??_strncmp:
  1008  000007                     ??_Lcd_Write_String:
  1009  000007                     ?_tolower:
  1010                           	callstack 0
  1011  000007                     Lcd_Set_Cursor@y:
  1012                           	callstack 0
  1013  000007                     _isspace$2603:
  1014                           	callstack 0
  1015  000007                     ___awdiv@quotient:
  1016                           	callstack 0
  1017  000007                     strcpy@s:
  1018                           	callstack 0
  1019  000007                     tolower@c:
  1020                           	callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x6
  1023  000007                     	ds	1
  1024  000008                     ?_atoi:
  1025                           	callstack 0
  1026  000008                     Lcd_Set_Cursor@temp:
  1027                           	callstack 0
  1028  000008                     atoi@s:
  1029                           	callstack 0
  1030  000008                     strncmp@l:
  1031                           	callstack 0
  1032                           
  1033                           ; 2 bytes @ 0x7
  1034  000008                     	ds	1
  1035  000009                     ??_tolower:
  1036  000009                     ??___fleq:
  1037  000009                     Lcd_Write_String@i:
  1038                           	callstack 0
  1039  000009                     ___fpclassifyf@e:
  1040                           	callstack 0
  1041  000009                     strcpy@d:
  1042                           	callstack 0
  1043  000009                     ___lmul@product:
  1044                           	callstack 0
  1045  000009                     ___lldiv@quotient:
  1046                           	callstack 0
  1047  000009                     ___aodiv@divisor:
  1048                           	callstack 0
  1049  000009                     ___aomod@divisor:
  1050                           	callstack 0
  1051                           
  1052                           ; 8 bytes @ 0x8
  1053  000009                     	ds	1
  1054  00000A                     ??_atoi:
  1055  00000A                     fputs@s:
  1056                           	callstack 0
  1057  00000A                     strncmp@r:
  1058                           	callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x9
  1061  00000A                     	ds	1
  1062  00000B                     ___fpclassifyf@u:
  1063                           	callstack 0
  1064                           
  1065                           ; 4 bytes @ 0xA
  1066  00000B                     	ds	1
  1067  00000C                     fputs@fp:
  1068                           	callstack 0
  1069                           
  1070                           ; 2 bytes @ 0xB
  1071  00000C                     	ds	1
  1072  00000D                     ___lldiv@counter:
  1073                           	callstack 0
  1074  00000D                     _tolower$2667:
  1075                           	callstack 0
  1076                           
  1077                           ; 2 bytes @ 0xC
  1078  00000D                     	ds	1
  1079  00000E                     ?___xxtofl:
  1080                           	callstack 0
  1081  00000E                     fputs@c:
  1082                           	callstack 0
  1083  00000E                     atoi@neg:
  1084                           	callstack 0
  1085  00000E                     ___xxtofl@val:
  1086                           	callstack 0
  1087                           
  1088                           ; 4 bytes @ 0xD
  1089  00000E                     	ds	1
  1090  00000F                     fputs@i:
  1091                           	callstack 0
  1092                           
  1093                           ; 2 bytes @ 0xE
  1094  00000F                     	ds	1
  1095  000010                     _atoi$2572:
  1096                           	callstack 0
  1097                           
  1098                           ; 2 bytes @ 0xF
  1099  000010                     	ds	1
  1100  000011                     ?_pad:
  1101                           	callstack 0
  1102  000011                     ___aodiv@counter:
  1103                           	callstack 0
  1104  000011                     ___aomod@counter:
  1105                           	callstack 0
  1106  000011                     pad@fp:
  1107                           	callstack 0
  1108                           
  1109                           ; 2 bytes @ 0x10
  1110  000011                     	ds	1
  1111  000012                     ??___xxtofl:
  1112  000012                     ___aodiv@sign:
  1113                           	callstack 0
  1114  000012                     ___aomod@sign:
  1115                           	callstack 0
  1116  000012                     _atoi$2574:
  1117                           	callstack 0
  1118                           
  1119                           ; 2 bytes @ 0x11
  1120  000012                     	ds	1
  1121  000013                     ?_abs:
  1122                           	callstack 0
  1123  000013                     pad@buf:
  1124                           	callstack 0
  1125  000013                     abs@a:
  1126                           	callstack 0
  1127  000013                     ___aodiv@quotient:
  1128                           	callstack 0
  1129                           
  1130                           ; 8 bytes @ 0x12
  1131  000013                     	ds	1
  1132  000014                     _atoi$2573:
  1133                           	callstack 0
  1134                           
  1135                           ; 1 bytes @ 0x13
  1136  000014                     	ds	1
  1137  000015                     ??_abs:
  1138  000015                     pad@p:
  1139                           	callstack 0
  1140  000015                     atoi@n:
  1141                           	callstack 0
  1142                           
  1143                           ; 2 bytes @ 0x14
  1144  000015                     	ds	1
  1145  000016                     ___xxtofl@sign:
  1146                           	callstack 0
  1147                           
  1148                           ; 1 bytes @ 0x15
  1149  000016                     	ds	1
  1150  000017                     ??_pad:
  1151  000017                     ___xxtofl@exp:
  1152                           	callstack 0
  1153                           
  1154                           ; 1 bytes @ 0x16
  1155  000017                     	ds	1
  1156  000018                     pad@i:
  1157                           	callstack 0
  1158  000018                     ___xxtofl@arg:
  1159                           	callstack 0
  1160                           
  1161                           ; 4 bytes @ 0x17
  1162  000018                     	ds	2
  1163  00001A                     pad@w:
  1164                           	callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x19
  1167  00001A                     	ds	2
  1168  00001C                     ??_calculatedAverageValue:
  1169  00001C                     ?_dtoa:
  1170                           	callstack 0
  1171  00001C                     ?_fabsf:
  1172                           	callstack 0
  1173  00001C                     ?___flmul:
  1174                           	callstack 0
  1175  00001C                     dtoa@fp:
  1176                           	callstack 0
  1177  00001C                     ___flmul@b:
  1178                           	callstack 0
  1179  00001C                     fabsf@x:
  1180                           	callstack 0
  1181                           
  1182                           ; 4 bytes @ 0x1B
  1183  00001C                     	ds	2
  1184  00001E                     dtoa@d:
  1185                           	callstack 0
  1186                           
  1187                           ; 8 bytes @ 0x1D
  1188  00001E                     	ds	2
  1189  000020                     ___flmul@a:
  1190                           	callstack 0
  1191  000020                     fabsf@u:
  1192                           	callstack 0
  1193                           
  1194                           ; 4 bytes @ 0x1F
  1195  000020                     	ds	4
  1196  000024                     ??___flmul:
  1197                           
  1198                           ; 1 bytes @ 0x23
  1199  000024                     	ds	2
  1200  000026                     ??_dtoa:
  1201                           
  1202                           ; 1 bytes @ 0x25
  1203  000026                     	ds	2
  1204  000028                     ___flmul@sign:
  1205                           	callstack 0
  1206                           
  1207                           ; 1 bytes @ 0x27
  1208  000028                     	ds	1
  1209  000029                     ___flmul@grs:
  1210                           	callstack 0
  1211                           
  1212                           ; 4 bytes @ 0x28
  1213  000029                     	ds	4
  1214  00002D                     ___flmul@aexp:
  1215                           	callstack 0
  1216                           
  1217                           ; 1 bytes @ 0x2C
  1218  00002D                     	ds	1
  1219  00002E                     ___flmul@bexp:
  1220                           	callstack 0
  1221  00002E                     _dtoa$2481:
  1222                           	callstack 0
  1223                           
  1224                           ; 2 bytes @ 0x2D
  1225  00002E                     	ds	1
  1226  00002F                     ___flmul@prod:
  1227                           	callstack 0
  1228                           
  1229                           ; 4 bytes @ 0x2E
  1230  00002F                     	ds	1
  1231  000030                     dtoa@p:
  1232                           	callstack 0
  1233                           
  1234                           ; 2 bytes @ 0x2F
  1235  000030                     	ds	2
  1236  000032                     dtoa@w:
  1237                           	callstack 0
  1238                           
  1239                           ; 2 bytes @ 0x31
  1240  000032                     	ds	1
  1241  000033                     ___flmul@temp:
  1242                           	callstack 0
  1243                           
  1244                           ; 2 bytes @ 0x32
  1245  000033                     	ds	1
  1246  000034                     dtoa@s:
  1247                           	callstack 0
  1248                           
  1249                           ; 2 bytes @ 0x33
  1250  000034                     	ds	1
  1251  000035                     ?___fladd:
  1252                           	callstack 0
  1253  000035                     ?___fldiv:
  1254                           	callstack 0
  1255  000035                     ___flge@ff1:
  1256                           	callstack 0
  1257  000035                     ___fladd@b:
  1258                           	callstack 0
  1259  000035                     ___fldiv@b:
  1260                           	callstack 0
  1261                           
  1262                           ; 4 bytes @ 0x34
  1263  000035                     	ds	1
  1264  000036                     dtoa@n:
  1265                           	callstack 0
  1266                           
  1267                           ; 8 bytes @ 0x35
  1268  000036                     	ds	3
  1269  000039                     ___flge@ff2:
  1270                           	callstack 0
  1271  000039                     ___fladd@a:
  1272                           	callstack 0
  1273  000039                     ___fldiv@a:
  1274                           	callstack 0
  1275                           
  1276                           ; 4 bytes @ 0x38
  1277  000039                     	ds	4
  1278  00003D                     ??___fladd:
  1279  00003D                     ??___fldiv:
  1280  00003D                     ??___flge:
  1281                           
  1282                           ; 1 bytes @ 0x3C
  1283  00003D                     	ds	1
  1284  00003E                     dtoa@i:
  1285                           	callstack 0
  1286                           
  1287                           ; 2 bytes @ 0x3D
  1288  00003E                     	ds	3
  1289  000041                     ___fladd@signs:
  1290                           	callstack 0
  1291  000041                     ___fldiv@rem:
  1292                           	callstack 0
  1293                           
  1294                           ; 4 bytes @ 0x40
  1295  000041                     	ds	1
  1296  000042                     ___fladd@aexp:
  1297                           	callstack 0
  1298                           
  1299                           ; 1 bytes @ 0x41
  1300  000042                     	ds	1
  1301  000043                     ___fladd@bexp:
  1302                           	callstack 0
  1303                           
  1304                           ; 1 bytes @ 0x42
  1305  000043                     	ds	1
  1306  000044                     ___fladd@grs:
  1307                           	callstack 0
  1308                           
  1309                           ; 1 bytes @ 0x43
  1310  000044                     	ds	1
  1311  000045                     ?___flsub:
  1312                           	callstack 0
  1313  000045                     ___fldiv@sign:
  1314                           	callstack 0
  1315  000045                     ___flsub@b:
  1316                           	callstack 0
  1317                           
  1318                           ; 4 bytes @ 0x44
  1319  000045                     	ds	1
  1320  000046                     ___fldiv@new_exp:
  1321                           	callstack 0
  1322                           
  1323                           ; 2 bytes @ 0x45
  1324  000046                     	ds	2
  1325  000048                     ___fldiv@grs:
  1326                           	callstack 0
  1327                           
  1328                           ; 4 bytes @ 0x47
  1329  000048                     	ds	1
  1330  000049                     ___flsub@a:
  1331                           	callstack 0
  1332                           
  1333                           ; 4 bytes @ 0x48
  1334  000049                     	ds	3
  1335  00004C                     ___fldiv@bexp:
  1336                           	callstack 0
  1337                           
  1338                           ; 1 bytes @ 0x4B
  1339  00004C                     	ds	1
  1340  00004D                     ___fldiv@aexp:
  1341                           	callstack 0
  1342                           
  1343                           ; 1 bytes @ 0x4C
  1344  00004D                     	ds	1
  1345  00004E                     ?_floorf:
  1346                           	callstack 0
  1347  00004E                     ?___fltol:
  1348                           	callstack 0
  1349  00004E                     ___fltol@f1:
  1350                           	callstack 0
  1351  00004E                     floorf@x:
  1352                           	callstack 0
  1353                           
  1354                           ; 4 bytes @ 0x4D
  1355  00004E                     	ds	4
  1356  000052                     ??_floorf:
  1357  000052                     ??___fltol:
  1358                           
  1359                           ; 1 bytes @ 0x51
  1360  000052                     	ds	4
  1361  000056                     ___fltol@sign1:
  1362                           	callstack 0
  1363                           
  1364                           ; 1 bytes @ 0x55
  1365  000056                     	ds	1
  1366  000057                     ___fltol@exp1:
  1367                           	callstack 0
  1368                           
  1369                           ; 1 bytes @ 0x56
  1370  000057                     	ds	1
  1371  000058                     ??_scanAdcConversion:
  1372  000058                     ?_efgtoa:
  1373                           	callstack 0
  1374  000058                     PWM1_setDC@dutycycle:
  1375                           	callstack 0
  1376  000058                     PWM2_setDC@dutycycle:
  1377                           	callstack 0
  1378  000058                     efgtoa@fp:
  1379                           	callstack 0
  1380  000058                     speedControl@position:
  1381                           	callstack 0
  1382                           
  1383                           ; 4 bytes @ 0x57
  1384  000058                     	ds	2
  1385  00005A                     ??_PWM1_setDC:
  1386  00005A                     ??_PWM2_setDC:
  1387  00005A                     efgtoa@f:
  1388                           	callstack 0
  1389                           
  1390                           ; 4 bytes @ 0x59
  1391  00005A                     	ds	2
  1392  00005C                     ??_speedControl:
  1393  00005C                     PWM1_setDC@duty:
  1394                           	callstack 0
  1395  00005C                     PWM2_setDC@duty:
  1396                           	callstack 0
  1397                           
  1398                           ; 2 bytes @ 0x5B
  1399  00005C                     	ds	2
  1400  00005E                     efgtoa@c:
  1401                           	callstack 0
  1402                           
  1403                           ; 1 bytes @ 0x5D
  1404  00005E                     	ds	1
  1405  00005F                     
  1406                           ; 1 bytes @ 0x5E
  1407 ;;
  1408 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1409 ;;
  1410 ;; *************** function _main *****************
  1411 ;; Defined at:
  1412 ;;		line 43 in file "fs_main.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;		None
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;		None
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  1    wreg      void 
  1419 ;; Registers used:
  1420 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1426 ;;      Params:         0       0       0       0       0       0       0
  1427 ;;      Locals:         0       0       0       0       0       0       0
  1428 ;;      Temps:          0       0       0       0       0       0       0
  1429 ;;      Totals:         0       0       0       0       0       0       0
  1430 ;;Total ram usage:        0 bytes
  1431 ;; Hardware stack levels required when called:   11
  1432 ;; This function calls:
  1433 ;;		_Lcd_Clear
  1434 ;;		_PWM1_setDC
  1435 ;;		_PWM2_setDC
  1436 ;;		_PWM_Init
  1437 ;;		_adcInit
  1438 ;;		_lcd_init
  1439 ;;		_mcu_init
  1440 ;;		_menuControl
  1441 ;;		_menuInitialize
  1442 ;;		_system_init
  1443 ;;		_timer_0_init
  1444 ;; This function is called by:
  1445 ;;		Startup code after reset
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449                           	psect	text0
  1450  004CC0                     __ptext0:
  1451                           	callstack 0
  1452  004CC0                     _main:
  1453                           	callstack 20
  1454  004CC0                     
  1455                           ;fs_main.c: 45:     mcu_init();
  1456  004CC0  EC52  F02E         	call	_mcu_init	;wreg free
  1457  004CC4                     
  1458                           ;fs_main.c: 46:     menuInitialize();
  1459  004CC4  ECE9  F02D         	call	_menuInitialize	;wreg free
  1460  004CC8                     
  1461                           ;fs_main.c: 48:     adcInit();
  1462  004CC8  ECD6  F02C         	call	_adcInit	;wreg free
  1463  004CCC                     
  1464                           ;fs_main.c: 50:     timer_0_init();
  1465  004CCC  EC5D  F02E         	call	_timer_0_init	;wreg free
  1466  004CD0                     
  1467                           ;fs_main.c: 51:     lcd_init();
  1468  004CD0  EC71  F029         	call	_lcd_init	;wreg free
  1469  004CD4                     
  1470                           ;fs_main.c: 52:     system_init();
  1471  004CD4  EC4A  F024         	call	_system_init	;wreg free
  1472  004CD8                     
  1473                           ;fs_main.c: 53:     Lcd_Clear();
  1474  004CD8  EC66  F02E         	call	_Lcd_Clear	;wreg free
  1475  004CDC                     
  1476                           ;fs_main.c: 55:     PWM_Init();
  1477  004CDC  ECFD  F02D         	call	_PWM_Init	;wreg free
  1478  004CE0                     
  1479                           ;fs_main.c: 56:     PWM1_setDC(0);
  1480  004CE0  0E00               	movlw	0
  1481  004CE2  6E59               	movwf	(PWM1_setDC@dutycycle+1)^0,c
  1482  004CE4  0E00               	movlw	0
  1483  004CE6  6E58               	movwf	PWM1_setDC@dutycycle^0,c
  1484  004CE8  EC38  F02A         	call	_PWM1_setDC	;wreg free
  1485  004CEC                     
  1486                           ;fs_main.c: 57:     PWM2_setDC(0);
  1487  004CEC  0E00               	movlw	0
  1488  004CEE  6E59               	movwf	(PWM2_setDC@dutycycle+1)^0,c
  1489  004CF0  0E00               	movlw	0
  1490  004CF2  6E58               	movwf	PWM2_setDC@dutycycle^0,c
  1491  004CF4  ECFB  F029         	call	_PWM2_setDC	;wreg free
  1492  004CF8                     l6167:
  1493                           
  1494                           ;fs_main.c: 61: {;fs_main.c: 62:     if (timer_counter_flag.one_second_flag == 1)
  1495  004CF8  0101               	movlb	1	; () banked
  1496  004CFA  A1BE               	btfss	_timer_counter_flag& (0+255),0,b
  1497  004CFC  EF82  F026         	goto	u7701
  1498  004D00  EF84  F026         	goto	u7700
  1499  004D04                     u7701:
  1500  004D04  EFD7  F026         	goto	l6193
  1501  004D08                     u7700:
  1502  004D08                     
  1503                           ; BSR set to: 1
  1504                           ;fs_main.c: 63:     {;fs_main.c: 64:         timer_counter_flag.one_second_flag = 0;
  1505  004D08  91BE               	bcf	_timer_counter_flag& (0+255),0,b
  1506  004D0A                     
  1507                           ; BSR set to: 1
  1508                           ;fs_main.c: 66:         if ( (startIsClick == 1) && (pauseIsClick == 0) && (stopIsClick 
      +                          == 0) && (menu_selected == MAIN_MENU) )
  1509  004D0A  05BD               	decf	_startIsClick& (0+255),w,b
  1510  004D0C  A4D8               	btfss	status,2,c
  1511  004D0E  EF8B  F026         	goto	u7711
  1512  004D12  EF8D  F026         	goto	u7710
  1513  004D16                     u7711:
  1514  004D16  EFD7  F026         	goto	l6193
  1515  004D1A                     u7710:
  1516  004D1A                     
  1517                           ; BSR set to: 1
  1518  004D1A  0100               	movlb	0	; () banked
  1519  004D1C  51FF               	movf	_pauseIsClick& (0+255),w,b
  1520  004D1E  A4D8               	btfss	status,2,c
  1521  004D20  EF94  F026         	goto	u7721
  1522  004D24  EF96  F026         	goto	u7720
  1523  004D28                     u7721:
  1524  004D28  EFD7  F026         	goto	l6193
  1525  004D2C                     u7720:
  1526  004D2C                     
  1527                           ; BSR set to: 0
  1528  004D2C  0101               	movlb	1	; () banked
  1529  004D2E  51BC               	movf	_stopIsClick& (0+255),w,b
  1530  004D30  A4D8               	btfss	status,2,c
  1531  004D32  EF9D  F026         	goto	u7731
  1532  004D36  EF9F  F026         	goto	u7730
  1533  004D3A                     u7731:
  1534  004D3A  EFD7  F026         	goto	l6193
  1535  004D3E                     u7730:
  1536  004D3E                     
  1537                           ; BSR set to: 1
  1538  004D3E  51BB               	movf	_menu_selected& (0+255),w,b
  1539  004D40  A4D8               	btfss	status,2,c
  1540  004D42  EFA5  F026         	goto	u7741
  1541  004D46  EFA7  F026         	goto	u7740
  1542  004D4A                     u7741:
  1543  004D4A  EFD7  F026         	goto	l6193
  1544  004D4E                     u7740:
  1545  004D4E                     
  1546                           ; BSR set to: 1
  1547                           ;fs_main.c: 67:         {;fs_main.c: 68:             timer_value.second++;
  1548  004D4E  0100               	movlb	0	; () banked
  1549  004D50  4BF3               	infsnz	_timer_value& (0+255),f,b
  1550  004D52  2BF4               	incf	(_timer_value+1)& (0+255),f,b
  1551  004D54                     
  1552                           ; BSR set to: 0
  1553                           ;fs_main.c: 69:             timer_value.remainingSecond = 60 - timer_value.second;
  1554  004D54  51F3               	movf	_timer_value& (0+255),w,b
  1555  004D56  083C               	sublw	60
  1556  004D58  6FF7               	movwf	(_timer_value+4)& (0+255),b
  1557  004D5A  51F4               	movf	(_timer_value+1)& (0+255),w,b
  1558  004D5C  A0D8               	btfss	status,0,c
  1559  004D5E  2AE8               	incf	wreg,f,c
  1560  004D60  0800               	sublw	0
  1561  004D62  6FF8               	movwf	(_timer_value+5)& (0+255),b
  1562  004D64                     
  1563                           ; BSR set to: 0
  1564                           ;fs_main.c: 71:             if (timer_value.remainingSecond == 59 )
  1565  004D64  0E3B               	movlw	59
  1566  004D66  19F7               	xorwf	(_timer_value+4)& (0+255),w,b
  1567  004D68  11F8               	iorwf	(_timer_value+5)& (0+255),w,b
  1568  004D6A  A4D8               	btfss	status,2,c
  1569  004D6C  EFBA  F026         	goto	u7751
  1570  004D70  EFBC  F026         	goto	u7750
  1571  004D74                     u7751:
  1572  004D74  EFC8  F026         	goto	l6189
  1573  004D78                     u7750:
  1574  004D78                     
  1575                           ; BSR set to: 0
  1576                           ;fs_main.c: 72:             {;fs_main.c: 73:                 timer_value.minute++;
  1577  004D78  4BF5               	infsnz	(_timer_value+2)& (0+255),f,b
  1578  004D7A  2BF6               	incf	(_timer_value+3)& (0+255),f,b
  1579  004D7C                     
  1580                           ; BSR set to: 0
  1581                           ;fs_main.c: 74:                 timer_value.remainingMinute = menu_value.driver_time - t
      +                          imer_value.minute;
  1582  004D7C  51F5               	movf	(_timer_value+2)& (0+255),w,b
  1583  004D7E  0101               	movlb	1	; () banked
  1584  004D80  5DAF               	subwf	_menu_value& (0+255),w,b
  1585  004D82  0100               	movlb	0	; () banked
  1586  004D84  6FF9               	movwf	(_timer_value+6)& (0+255),b
  1587  004D86  51F6               	movf	(_timer_value+3)& (0+255),w,b
  1588  004D88  A0D8               	btfss	status,0,c
  1589  004D8A  29F6               	incf	(_timer_value+3)& (0+255),w,b
  1590  004D8C  6BFA               	clrf	(_timer_value+7)& (0+255),b
  1591  004D8E  5FFA               	subwf	(_timer_value+7)& (0+255),f,b
  1592  004D90                     l6189:
  1593                           
  1594                           ; BSR set to: 0
  1595                           ;fs_main.c: 77:             if (timer_value.second > 59)
  1596  004D90  51F4               	movf	(_timer_value+1)& (0+255),w,b
  1597  004D92  E109               	bnz	u7760
  1598  004D94  0E3C               	movlw	60
  1599  004D96  5DF3               	subwf	_timer_value& (0+255),w,b
  1600  004D98  A0D8               	btfss	status,0,c
  1601  004D9A  EFD1  F026         	goto	u7761
  1602  004D9E  EFD3  F026         	goto	u7760
  1603  004DA2                     u7761:
  1604  004DA2  EFD7  F026         	goto	l6193
  1605  004DA6                     u7760:
  1606  004DA6                     
  1607                           ; BSR set to: 0
  1608                           ;fs_main.c: 78:             {;fs_main.c: 79:                 timer_value.second = 0;
  1609  004DA6  0E00               	movlw	0
  1610  004DA8  6FF4               	movwf	(_timer_value+1)& (0+255),b
  1611  004DAA  0E00               	movlw	0
  1612  004DAC  6FF3               	movwf	_timer_value& (0+255),b
  1613  004DAE                     l6193:
  1614                           
  1615                           ;fs_main.c: 84:     menuControl();
  1616  004DAE  EC75  F02A         	call	_menuControl	;wreg free
  1617  004DB2  EF7C  F026         	goto	l6167
  1618  004DB6  EF34  F000         	goto	start
  1619  004DBA                     __end_of_main:
  1620                           	callstack 0
  1621                           
  1622 ;; *************** function _timer_0_init *****************
  1623 ;; Defined at:
  1624 ;;		line 67 in file "fs_timer.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;		None
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;		None
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  1    wreg      void 
  1631 ;; Registers used:
  1632 ;;		wreg, status,2
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1638 ;;      Params:         0       0       0       0       0       0       0
  1639 ;;      Locals:         0       0       0       0       0       0       0
  1640 ;;      Temps:          0       0       0       0       0       0       0
  1641 ;;      Totals:         0       0       0       0       0       0       0
  1642 ;;Total ram usage:        0 bytes
  1643 ;; Hardware stack levels used:    1
  1644 ;; Hardware stack levels required when called:    1
  1645 ;; This function calls:
  1646 ;;		Nothing
  1647 ;; This function is called by:
  1648 ;;		_main
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           	psect	text1
  1653  005CBA                     __ptext1:
  1654                           	callstack 0
  1655  005CBA                     _timer_0_init:
  1656                           	callstack 29
  1657  005CBA                     
  1658                           ;fs_timer.c: 69:   T0CON = 0x81;
  1659  005CBA  0E81               	movlw	129
  1660  005CBC  6ED5               	movwf	213,c	;volatile
  1661                           
  1662                           ;fs_timer.c: 70:   TMR0H = 0x63;
  1663  005CBE  0E63               	movlw	99
  1664  005CC0  6ED7               	movwf	215,c	;volatile
  1665                           
  1666                           ;fs_timer.c: 71:   TMR0L = 0xC0;
  1667  005CC2  0EC0               	movlw	192
  1668  005CC4  6ED6               	movwf	214,c	;volatile
  1669  005CC6                     
  1670                           ;fs_timer.c: 72:   INTCONbits.GIE = 1;
  1671  005CC6  8EF2               	bsf	242,7,c	;volatile
  1672  005CC8                     
  1673                           ;fs_timer.c: 73:   INTCONbits.TMR0IE = 1;
  1674  005CC8  8AF2               	bsf	242,5,c	;volatile
  1675  005CCA  0012               	return		;funcret
  1676  005CCC                     __end_of_timer_0_init:
  1677                           	callstack 0
  1678                           
  1679 ;; *************** function _system_init *****************
  1680 ;; Defined at:
  1681 ;;		line 55 in file "fs_mcu.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;		None
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;		None
  1686 ;; Return value:  Size  Location     Type
  1687 ;;                  1    wreg      void 
  1688 ;; Registers used:
  1689 ;;		wreg, status,2, cstack
  1690 ;; Tracked objects:
  1691 ;;		On entry : 0/0
  1692 ;;		On exit  : 0/0
  1693 ;;		Unchanged: 0/0
  1694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1695 ;;      Params:         0       0       0       0       0       0       0
  1696 ;;      Locals:         0       0       0       0       0       0       0
  1697 ;;      Temps:          2       0       0       0       0       0       0
  1698 ;;      Totals:         2       0       0       0       0       0       0
  1699 ;;Total ram usage:        2 bytes
  1700 ;; Hardware stack levels used:    1
  1701 ;; Hardware stack levels required when called:    2
  1702 ;; This function calls:
  1703 ;;		_eepromRead
  1704 ;; This function is called by:
  1705 ;;		_main
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           
  1709                           	psect	text2
  1710  004894                     __ptext2:
  1711                           	callstack 0
  1712  004894                     _system_init:
  1713                           	callstack 28
  1714  004894                     
  1715                           ;fs_mcu.c: 57:     driver_limit.pay = 0;
  1716  004894  0E00               	movlw	0
  1717  004896  0101               	movlb	1	; () banked
  1718  004898  6F93               	movwf	_driver_limit& (0+255),b
  1719  00489A  0E00               	movlw	0
  1720  00489C  6F94               	movwf	(_driver_limit+1)& (0+255),b
  1721  00489E  0E00               	movlw	0
  1722  0048A0  6F95               	movwf	(_driver_limit+2)& (0+255),b
  1723  0048A2  0E00               	movlw	0
  1724  0048A4  6F96               	movwf	(_driver_limit+3)& (0+255),b
  1725                           
  1726                           ;fs_mcu.c: 58:     driver_limit.payda = 0;
  1727  0048A6  0E00               	movlw	0
  1728  0048A8  6F97               	movwf	(_driver_limit+4)& (0+255),b
  1729  0048AA  0E00               	movlw	0
  1730  0048AC  6F98               	movwf	(_driver_limit+5)& (0+255),b
  1731  0048AE  0E00               	movlw	0
  1732  0048B0  6F99               	movwf	(_driver_limit+6)& (0+255),b
  1733  0048B2  0E00               	movlw	0
  1734  0048B4  6F9A               	movwf	(_driver_limit+7)& (0+255),b
  1735                           
  1736                           ;fs_mcu.c: 59:     driver_limit.ortalama = 0;
  1737  0048B6  0E00               	movlw	0
  1738  0048B8  6F9B               	movwf	(_driver_limit+8)& (0+255),b
  1739  0048BA  0E00               	movlw	0
  1740  0048BC  6F9C               	movwf	(_driver_limit+9)& (0+255),b
  1741  0048BE  0E00               	movlw	0
  1742  0048C0  6F9D               	movwf	(_driver_limit+10)& (0+255),b
  1743  0048C2  0E00               	movlw	0
  1744  0048C4  6F9E               	movwf	(_driver_limit+11)& (0+255),b
  1745                           
  1746                           ;fs_mcu.c: 60:     convert_data.convert_channel_0 = 0;
  1747  0048C6  0E00               	movlw	0
  1748  0048C8  6F00               	movwf	_convert_data& (0+255),b
  1749  0048CA  0E00               	movlw	0
  1750  0048CC  6F01               	movwf	(_convert_data+1)& (0+255),b
  1751  0048CE  0E00               	movlw	0
  1752  0048D0  6F02               	movwf	(_convert_data+2)& (0+255),b
  1753  0048D2  0E00               	movlw	0
  1754  0048D4  6F03               	movwf	(_convert_data+3)& (0+255),b
  1755                           
  1756                           ;fs_mcu.c: 61:     convert_data.convert_channel_1 = 0;
  1757  0048D6  0E00               	movlw	0
  1758  0048D8  6F04               	movwf	(_convert_data+4)& (0+255),b
  1759  0048DA  0E00               	movlw	0
  1760  0048DC  6F05               	movwf	(_convert_data+5)& (0+255),b
  1761  0048DE  0E00               	movlw	0
  1762  0048E0  6F06               	movwf	(_convert_data+6)& (0+255),b
  1763  0048E2  0E00               	movlw	0
  1764  0048E4  6F07               	movwf	(_convert_data+7)& (0+255),b
  1765                           
  1766                           ;fs_mcu.c: 62:     convert_data.convert_channel_2 = 0;
  1767  0048E6  0E00               	movlw	0
  1768  0048E8  6F08               	movwf	(_convert_data+8)& (0+255),b
  1769  0048EA  0E00               	movlw	0
  1770  0048EC  6F09               	movwf	(_convert_data+9)& (0+255),b
  1771  0048EE  0E00               	movlw	0
  1772  0048F0  6F0A               	movwf	(_convert_data+10)& (0+255),b
  1773  0048F2  0E00               	movlw	0
  1774  0048F4  6F0B               	movwf	(_convert_data+11)& (0+255),b
  1775                           
  1776                           ;fs_mcu.c: 63:     convert_data.convert_channel_3 = 0;
  1777  0048F6  0E00               	movlw	0
  1778  0048F8  6F0C               	movwf	(_convert_data+12)& (0+255),b
  1779  0048FA  0E00               	movlw	0
  1780  0048FC  6F0D               	movwf	(_convert_data+13)& (0+255),b
  1781  0048FE  0E00               	movlw	0
  1782  004900  6F0E               	movwf	(_convert_data+14)& (0+255),b
  1783  004902  0E00               	movlw	0
  1784  004904  6F0F               	movwf	(_convert_data+15)& (0+255),b
  1785                           
  1786                           ;fs_mcu.c: 64:     convert_data.convert_channel_4 = 0;
  1787  004906  0E00               	movlw	0
  1788  004908  6F10               	movwf	(_convert_data+16)& (0+255),b
  1789  00490A  0E00               	movlw	0
  1790  00490C  6F11               	movwf	(_convert_data+17)& (0+255),b
  1791  00490E  0E00               	movlw	0
  1792  004910  6F12               	movwf	(_convert_data+18)& (0+255),b
  1793  004912  0E00               	movlw	0
  1794  004914  6F13               	movwf	(_convert_data+19)& (0+255),b
  1795                           
  1796                           ;fs_mcu.c: 65:     convert_data.convert_channel_5 = 0;
  1797  004916  0E00               	movlw	0
  1798  004918  6F14               	movwf	(_convert_data+20)& (0+255),b
  1799  00491A  0E00               	movlw	0
  1800  00491C  6F15               	movwf	(_convert_data+21)& (0+255),b
  1801  00491E  0E00               	movlw	0
  1802  004920  6F16               	movwf	(_convert_data+22)& (0+255),b
  1803  004922  0E00               	movlw	0
  1804  004924  6F17               	movwf	(_convert_data+23)& (0+255),b
  1805                           
  1806                           ;fs_mcu.c: 66:     convert_data.convert_channel_6 = 0;
  1807  004926  0E00               	movlw	0
  1808  004928  6F18               	movwf	(_convert_data+24)& (0+255),b
  1809  00492A  0E00               	movlw	0
  1810  00492C  6F19               	movwf	(_convert_data+25)& (0+255),b
  1811  00492E  0E00               	movlw	0
  1812  004930  6F1A               	movwf	(_convert_data+26)& (0+255),b
  1813  004932  0E00               	movlw	0
  1814  004934  6F1B               	movwf	(_convert_data+27)& (0+255),b
  1815                           
  1816                           ;fs_mcu.c: 67:     convert_data.convert_channel_7 = 0;
  1817  004936  0E00               	movlw	0
  1818  004938  6F1C               	movwf	(_convert_data+28)& (0+255),b
  1819  00493A  0E00               	movlw	0
  1820  00493C  6F1D               	movwf	(_convert_data+29)& (0+255),b
  1821  00493E  0E00               	movlw	0
  1822  004940  6F1E               	movwf	(_convert_data+30)& (0+255),b
  1823  004942  0E00               	movlw	0
  1824  004944  6F1F               	movwf	(_convert_data+31)& (0+255),b
  1825                           
  1826                           ;fs_mcu.c: 68:     controller.leftMotorSpeed = 0;
  1827  004946  0E00               	movlw	0
  1828  004948  6F57               	movwf	(_controller+7)& (0+255),b
  1829  00494A  0E00               	movlw	0
  1830  00494C  6F56               	movwf	(_controller+6)& (0+255),b
  1831                           
  1832                           ;fs_mcu.c: 69:     controller.rightMotorSpeed = 0;
  1833  00494E  0E00               	movlw	0
  1834  004950  6F59               	movwf	(_controller+9)& (0+255),b
  1835  004952  0E00               	movlw	0
  1836  004954  6F58               	movwf	(_controller+8)& (0+255),b
  1837                           
  1838                           ;fs_mcu.c: 70:     timer_value.timer_0_counter = 0;
  1839  004956  0E00               	movlw	0
  1840  004958  0100               	movlb	0	; () banked
  1841  00495A  6FFC               	movwf	(_timer_value+9)& (0+255),b
  1842                           
  1843                           ;fs_mcu.c: 71:     controller.error = 0;
  1844  00495C  0E00               	movlw	0
  1845  00495E  0101               	movlb	1	; () banked
  1846  004960  6F51               	movwf	(_controller+1)& (0+255),b
  1847  004962  0E00               	movlw	0
  1848  004964  6F50               	movwf	_controller& (0+255),b
  1849  004966                     
  1850                           ; BSR set to: 1
  1851                           ;fs_mcu.c: 73:     button_bounce_controller.menu = 0;
  1852  004966  0100               	movlb	0	; () banked
  1853  004968  91FE               	bcf	_button_bounce_controller& (0+255),0,b
  1854  00496A                     
  1855                           ; BSR set to: 0
  1856                           ;fs_mcu.c: 74:     button_bounce_controller.pause = 0;
  1857  00496A  97FE               	bcf	_button_bounce_controller& (0+255),3,b
  1858  00496C                     
  1859                           ; BSR set to: 0
  1860                           ;fs_mcu.c: 75:     button_bounce_controller.start = 0;
  1861  00496C  93FE               	bcf	_button_bounce_controller& (0+255),1,b
  1862  00496E                     
  1863                           ; BSR set to: 0
  1864                           ;fs_mcu.c: 76:     button_bounce_controller.stop = 0;
  1865  00496E  95FE               	bcf	_button_bounce_controller& (0+255),2,b
  1866  004970                     
  1867                           ; BSR set to: 0
  1868                           ;fs_mcu.c: 77:     menu_value.driver_time = (uint8_t)eepromRead(0x00);
  1869  004970  0E00               	movlw	0
  1870  004972  EC34  F02E         	call	_eepromRead
  1871  004976  0101               	movlb	1	; () banked
  1872  004978  6FAF               	movwf	_menu_value& (0+255),b
  1873  00497A                     
  1874                           ; BSR set to: 1
  1875                           ;fs_mcu.c: 78:     menu_value.stop_time = (uint8_t)eepromRead(0x01);
  1876  00497A  0E01               	movlw	1
  1877  00497C  EC34  F02E         	call	_eepromRead
  1878  004980  0101               	movlb	1	; () banked
  1879  004982  6FB0               	movwf	(_menu_value+1)& (0+255),b
  1880  004984                     
  1881                           ; BSR set to: 1
  1882                           ;fs_mcu.c: 79:     menu_value.speed_limit = (uint8_t)eepromRead(0x02);
  1883  004984  0E02               	movlw	2
  1884  004986  EC34  F02E         	call	_eepromRead
  1885  00498A  0101               	movlb	1	; () banked
  1886  00498C  6FB1               	movwf	(_menu_value+2)& (0+255),b
  1887  00498E                     
  1888                           ; BSR set to: 1
  1889                           ;fs_mcu.c: 81:     _delay((unsigned long)((700)*(64000000UL/4000.0)));
  1890  00498E  0E39               	movlw	57
  1891  004990  6E03               	movwf	(??_system_init+1)^0,c
  1892  004992  0ED2               	movlw	210
  1893  004994  6E02               	movwf	??_system_init^0,c
  1894  004996  0E4C               	movlw	76
  1895  004998                     u7817:
  1896  004998  2EE8               	decfsz	wreg,f,c
  1897  00499A  D7FE               	bra	u7817
  1898  00499C  2E02               	decfsz	??_system_init^0,f,c
  1899  00499E  D7FC               	bra	u7817
  1900  0049A0  2E03               	decfsz	(??_system_init+1)^0,f,c
  1901  0049A2  D7FA               	bra	u7817
  1902  0049A4  D000               	nop2	
  1903  0049A6                     
  1904                           ;fs_mcu.c: 82:     timer_value.remainingMinute = menu_value.driver_time;
  1905  0049A6  C1AF  F0F9         	movff	_menu_value,_timer_value+6
  1906  0049AA  0100               	movlb	0	; () banked
  1907  0049AC  6BFA               	clrf	(_timer_value+7)& (0+255),b
  1908  0049AE                     
  1909                           ; BSR set to: 0
  1910                           ;fs_mcu.c: 83:     timer_value.remainingSecond = 0;
  1911  0049AE  0E00               	movlw	0
  1912  0049B0  6FF8               	movwf	(_timer_value+5)& (0+255),b
  1913  0049B2  0E00               	movlw	0
  1914  0049B4  6FF7               	movwf	(_timer_value+4)& (0+255),b
  1915  0049B6                     
  1916                           ; BSR set to: 0
  1917  0049B6  0012               	return		;funcret
  1918  0049B8                     __end_of_system_init:
  1919                           	callstack 0
  1920                           
  1921 ;; *************** function _eepromRead *****************
  1922 ;; Defined at:
  1923 ;;		line 36 in file "fs_eeprom.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;  address         1    wreg     unsigned char 
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;  address         1    0[COMRAM] unsigned char 
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  1    wreg      unsigned char 
  1930 ;; Registers used:
  1931 ;;		wreg, status,2
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1937 ;;      Params:         0       0       0       0       0       0       0
  1938 ;;      Locals:         1       0       0       0       0       0       0
  1939 ;;      Temps:          0       0       0       0       0       0       0
  1940 ;;      Totals:         1       0       0       0       0       0       0
  1941 ;;Total ram usage:        1 bytes
  1942 ;; Hardware stack levels used:    1
  1943 ;; Hardware stack levels required when called:    1
  1944 ;; This function calls:
  1945 ;;		Nothing
  1946 ;; This function is called by:
  1947 ;;		_system_init
  1948 ;; This function uses a non-reentrant model
  1949 ;;
  1950                           
  1951                           	psect	text3
  1952  005C68                     __ptext3:
  1953                           	callstack 0
  1954  005C68                     _eepromRead:
  1955                           	callstack 28
  1956                           
  1957                           ; BSR set to: 0
  1958                           ;incstack = 0
  1959                           ;eepromRead@address stored from wreg
  1960  005C68  6E01               	movwf	eepromRead@address^0,c
  1961  005C6A                     
  1962                           ;fs_eeprom.c: 36: uint8_t eepromRead(uint8_t address);fs_eeprom.c: 37: {;fs_eeprom.c: 41
      +                          :     EEADR = (uint8_t)address;
  1963  005C6A  C001  FFA9         	movff	eepromRead@address,4009	;volatile
  1964  005C6E                     
  1965                           ;fs_eeprom.c: 43:     EECON1bits.EEPGD = 0;
  1966  005C6E  9EA6               	bcf	166,7,c	;volsfr
  1967  005C70                     
  1968                           ;fs_eeprom.c: 44:     EECON1bits.CFGS = 0;
  1969  005C70  9CA6               	bcf	166,6,c	;volsfr
  1970  005C72                     
  1971                           ;fs_eeprom.c: 45:     EECON1bits.RD = 1;
  1972  005C72  80A6               	bsf	166,0,c	;volsfr
  1973  005C74                     l70:
  1974  005C74  B0A6               	btfsc	166,0,c	;volsfr
  1975  005C76  EF3F  F02E         	goto	u6851
  1976  005C7A  EF41  F02E         	goto	u6850
  1977  005C7E                     u6851:
  1978  005C7E  EF3A  F02E         	goto	l70
  1979  005C82                     u6850:
  1980  005C82                     
  1981                           ;fs_eeprom.c: 51:     return EEDATA;
  1982  005C82  50A8               	movf	168,w,c	;volatile
  1983  005C84  0012               	return		;funcret
  1984  005C86                     __end_of_eepromRead:
  1985                           	callstack 0
  1986                           
  1987 ;; *************** function _menuInitialize *****************
  1988 ;; Defined at:
  1989 ;;		line 38 in file "fs_menu_controller.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;		None
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;		None
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  1    wreg      void 
  1996 ;; Registers used:
  1997 ;;		None
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2003 ;;      Params:         0       0       0       0       0       0       0
  2004 ;;      Locals:         0       0       0       0       0       0       0
  2005 ;;      Temps:          0       0       0       0       0       0       0
  2006 ;;      Totals:         0       0       0       0       0       0       0
  2007 ;;Total ram usage:        0 bytes
  2008 ;; Hardware stack levels used:    1
  2009 ;; Hardware stack levels required when called:    1
  2010 ;; This function calls:
  2011 ;;		Nothing
  2012 ;; This function is called by:
  2013 ;;		_main
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017                           	psect	text4
  2018  005BD2                     __ptext4:
  2019                           	callstack 0
  2020  005BD2                     _menuInitialize:
  2021                           	callstack 29
  2022  005BD2                     
  2023                           ;fs_menu_controller.c: 41:     TRISBbits.RB6 = 1;
  2024  005BD2  8C93               	bsf	147,6,c	;volatile
  2025                           
  2026                           ;fs_menu_controller.c: 44:     TRISBbits.RB7 = 1;
  2027  005BD4  8E93               	bsf	147,7,c	;volatile
  2028                           
  2029                           ;fs_menu_controller.c: 46:     ANSELDbits.ANSD4 = 0;
  2030  005BD6  010F               	movlb	15	; () banked
  2031  005BD8  993B               	bcf	59,4,b	;volatile
  2032                           
  2033                           ;fs_menu_controller.c: 47:     TRISDbits.RD4 = 1;
  2034  005BDA  8895               	bsf	149,4,c	;volatile
  2035                           
  2036                           ;fs_menu_controller.c: 49:     ANSELDbits.ANSD0 = 0;
  2037  005BDC  913B               	bcf	59,0,b	;volatile
  2038                           
  2039                           ;fs_menu_controller.c: 50:     TRISDbits.RD0 = 1;
  2040  005BDE  8095               	bsf	149,0,c	;volatile
  2041                           
  2042                           ;fs_menu_controller.c: 52:     ANSELDbits.ANSD1 = 0;
  2043  005BE0  933B               	bcf	59,1,b	;volatile
  2044                           
  2045                           ;fs_menu_controller.c: 53:     TRISDbits.RD1 = 1;
  2046  005BE2  8295               	bsf	149,1,c	;volatile
  2047                           
  2048                           ;fs_menu_controller.c: 55:     ANSELDbits.ANSD2 = 0;
  2049  005BE4  953B               	bcf	59,2,b	;volatile
  2050                           
  2051                           ;fs_menu_controller.c: 56:     TRISDbits.RD2 = 1;
  2052  005BE6  8495               	bsf	149,2,c	;volatile
  2053                           
  2054                           ;fs_menu_controller.c: 58:     ANSELDbits.ANSD3 = 0;
  2055  005BE8  973B               	bcf	59,3,b	;volatile
  2056                           
  2057                           ;fs_menu_controller.c: 59:     TRISDbits.RD3 = 1;
  2058  005BEA  8695               	bsf	149,3,c	;volatile
  2059                           
  2060                           ;fs_menu_controller.c: 61:     ANSELDbits.ANSD5 = 0;
  2061  005BEC  9B3B               	bcf	59,5,b	;volatile
  2062                           
  2063                           ;fs_menu_controller.c: 62:     TRISDbits.RD5 = 0;
  2064  005BEE  9A95               	bcf	149,5,c	;volatile
  2065                           
  2066                           ;fs_menu_controller.c: 64:     ANSELCbits.ANSC5 = 0;
  2067  005BF0  9B3A               	bcf	58,5,b	;volatile
  2068                           
  2069                           ;fs_menu_controller.c: 65:     TRISCbits.RC5 = 0;
  2070  005BF2  9A94               	bcf	148,5,c	;volatile
  2071                           
  2072                           ;fs_menu_controller.c: 67:     ANSELCbits.ANSC4 = 0;
  2073  005BF4  993A               	bcf	58,4,b	;volatile
  2074                           
  2075                           ;fs_menu_controller.c: 68:     TRISCbits.RC4 = 0;
  2076  005BF6  9894               	bcf	148,4,c	;volatile
  2077  005BF8                     
  2078                           ; BSR set to: 15
  2079  005BF8  0012               	return		;funcret
  2080  005BFA                     __end_of_menuInitialize:
  2081                           	callstack 0
  2082                           
  2083 ;; *************** function _menuControl *****************
  2084 ;; Defined at:
  2085 ;;		line 164 in file "fs_menu_controller.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;		None
  2088 ;; Auto vars:     Size  Location     Type
  2089 ;;		None
  2090 ;; Return value:  Size  Location     Type
  2091 ;;                  1    wreg      void 
  2092 ;; Registers used:
  2093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2099 ;;      Params:         0       0       0       0       0       0       0
  2100 ;;      Locals:         0       0       0       0       0       0       0
  2101 ;;      Temps:          0       0       0       0       0       0       0
  2102 ;;      Totals:         0       0       0       0       0       0       0
  2103 ;;Total ram usage:        0 bytes
  2104 ;; Hardware stack levels used:    1
  2105 ;; Hardware stack levels required when called:   10
  2106 ;; This function calls:
  2107 ;;		_buttonControlFlags
  2108 ;;		_stateMachine
  2109 ;; This function is called by:
  2110 ;;		_main
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113                           
  2114                           	psect	text5
  2115  0054EA                     __ptext5:
  2116                           	callstack 0
  2117  0054EA                     _menuControl:
  2118                           	callstack 20
  2119  0054EA                     
  2120                           ;fs_menu_controller.c: 166:     buttonControlFlags();
  2121  0054EA  ECD6  F022         	call	_buttonControlFlags	;wreg free
  2122  0054EE                     
  2123                           ;fs_menu_controller.c: 167:     stateMachine();
  2124  0054EE  EC4F  F009         	call	_stateMachine	;wreg free
  2125  0054F2                     
  2126                           ;fs_menu_controller.c: 169:     if (menu_flags.menu_start_flag == 1)
  2127  0054F2  0100               	movlb	0	; () banked
  2128  0054F4  A3FD               	btfss	_menu_flags& (0+255),1,b
  2129  0054F6  EF7F  F02A         	goto	u7671
  2130  0054FA  EF81  F02A         	goto	u7670
  2131  0054FE                     u7671:
  2132  0054FE  EF8B  F02A         	goto	l6131
  2133  005502                     u7670:
  2134  005502                     
  2135                           ; BSR set to: 0
  2136                           ;fs_menu_controller.c: 170:     {;fs_menu_controller.c: 171:         menu_flags.menu_sta
      +                          rt_flag = 0;
  2137  005502  93FD               	bcf	_menu_flags& (0+255),1,b
  2138  005504                     
  2139                           ; BSR set to: 0
  2140                           ;fs_menu_controller.c: 172:         startIsClick = 1;
  2141  005504  0E01               	movlw	1
  2142  005506  0101               	movlb	1	; () banked
  2143  005508  6FBD               	movwf	_startIsClick& (0+255),b
  2144                           
  2145                           ;fs_menu_controller.c: 173:         pauseIsClick = 0;
  2146  00550A  0E00               	movlw	0
  2147  00550C  0100               	movlb	0	; () banked
  2148  00550E  6FFF               	movwf	_pauseIsClick& (0+255),b
  2149                           
  2150                           ;fs_menu_controller.c: 174:         stopIsClick = 0;
  2151  005510  0E00               	movlw	0
  2152  005512  0101               	movlb	1	; () banked
  2153  005514  6FBC               	movwf	_stopIsClick& (0+255),b
  2154  005516                     l6131:
  2155                           
  2156                           ;fs_menu_controller.c: 178:     if (menu_flags.menu_pause_flag == 1)
  2157  005516  0100               	movlb	0	; () banked
  2158  005518  A7FD               	btfss	_menu_flags& (0+255),3,b
  2159  00551A  EF91  F02A         	goto	u7681
  2160  00551E  EF93  F02A         	goto	u7680
  2161  005522                     u7681:
  2162  005522  EF9B  F02A         	goto	l6137
  2163  005526                     u7680:
  2164  005526                     
  2165                           ; BSR set to: 0
  2166                           ;fs_menu_controller.c: 179:     {;fs_menu_controller.c: 180:         menu_flags.menu_pau
      +                          se_flag = 0;
  2167  005526  97FD               	bcf	_menu_flags& (0+255),3,b
  2168  005528                     
  2169                           ; BSR set to: 0
  2170                           ;fs_menu_controller.c: 181:         pauseIsClick = 1;
  2171  005528  0E01               	movlw	1
  2172  00552A  6FFF               	movwf	_pauseIsClick& (0+255),b
  2173                           
  2174                           ;fs_menu_controller.c: 182:         startIsClick = 0;
  2175  00552C  0E00               	movlw	0
  2176  00552E  0101               	movlb	1	; () banked
  2177  005530  6FBD               	movwf	_startIsClick& (0+255),b
  2178                           
  2179                           ;fs_menu_controller.c: 183:         stopIsClick = 0;
  2180  005532  0E00               	movlw	0
  2181  005534  6FBC               	movwf	_stopIsClick& (0+255),b
  2182  005536                     l6137:
  2183                           
  2184                           ;fs_menu_controller.c: 186:     if (menu_flags.menu_stop_flag == 1)
  2185  005536  0100               	movlb	0	; () banked
  2186  005538  A5FD               	btfss	_menu_flags& (0+255),2,b
  2187  00553A  EFA1  F02A         	goto	u7691
  2188  00553E  EFA3  F02A         	goto	u7690
  2189  005542                     u7691:
  2190  005542  EFAB  F02A         	goto	l333
  2191  005546                     u7690:
  2192  005546                     
  2193                           ; BSR set to: 0
  2194                           ;fs_menu_controller.c: 187:     {;fs_menu_controller.c: 188:         menu_flags.menu_sto
      +                          p_flag = 0;
  2195  005546  95FD               	bcf	_menu_flags& (0+255),2,b
  2196  005548                     
  2197                           ; BSR set to: 0
  2198                           ;fs_menu_controller.c: 189:         pauseIsClick = 0;
  2199  005548  0E00               	movlw	0
  2200  00554A  6FFF               	movwf	_pauseIsClick& (0+255),b
  2201                           
  2202                           ;fs_menu_controller.c: 190:         startIsClick = 0;
  2203  00554C  0E00               	movlw	0
  2204  00554E  0101               	movlb	1	; () banked
  2205  005550  6FBD               	movwf	_startIsClick& (0+255),b
  2206                           
  2207                           ;fs_menu_controller.c: 191:         stopIsClick = 1;
  2208  005552  0E01               	movlw	1
  2209  005554  6FBC               	movwf	_stopIsClick& (0+255),b
  2210  005556                     l333:
  2211  005556  0012               	return		;funcret
  2212  005558                     __end_of_menuControl:
  2213                           	callstack 0
  2214                           
  2215 ;; *************** function _stateMachine *****************
  2216 ;; Defined at:
  2217 ;;		line 202 in file "fs_menu_controller.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;		None
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;  textCursor2    16  131[BANK0 ] unsigned char [16]
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  1    wreg      void 
  2224 ;; Registers used:
  2225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2231 ;;      Params:         0       0       0       0       0       0       0
  2232 ;;      Locals:         0      16       0       0       0       0       0
  2233 ;;      Temps:          0       2       0       0       0       0       0
  2234 ;;      Totals:         0      18       0       0       0       0       0
  2235 ;;Total ram usage:       18 bytes
  2236 ;; Hardware stack levels used:    1
  2237 ;; Hardware stack levels required when called:    9
  2238 ;; This function calls:
  2239 ;;		_Lcd_Set_Cursor
  2240 ;;		_Lcd_Write_String
  2241 ;;		___fladd
  2242 ;;		___flge
  2243 ;;		___flsub
  2244 ;;		_eepromWrite
  2245 ;;		_sprintf
  2246 ;;		_startMotor
  2247 ;;		_stopMotor
  2248 ;; This function is called by:
  2249 ;;		_menuControl
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253                           	psect	text6
  2254  00129E                     __ptext6:
  2255                           	callstack 0
  2256  00129E                     _stateMachine:
  2257                           	callstack 20
  2258  00129E                     
  2259                           ;fs_menu_controller.c: 204:     char textCursor2[16] = {0};
  2260  00129E  EE20  F0E3         	lfsr	2,stateMachine@textCursor2
  2261  0012A2  0E0F               	movlw	15
  2262  0012A4                     u7101:
  2263  0012A4  6ADE               	clrf	postinc2,c
  2264  0012A6  06E8               	decf	wreg,f,c
  2265  0012A8  E2FD               	bc	u7101
  2266                           
  2267                           ;fs_menu_controller.c: 205:     static uint8_t secretMenuCounter = 0;;fs_menu_controller
      +                          .c: 207:     switch (menu_selected)
  2268  0012AA  EF0D  F00E         	goto	l6037
  2269  0012AE                     l5707:
  2270                           
  2271                           ; BSR set to: 0
  2272                           ;fs_menu_controller.c: 211:             Lcd_Set_Cursor(1,1);
  2273  0012AE  0E01               	movlw	1
  2274  0012B0  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2275  0012B2  0E01               	movlw	1
  2276  0012B4  EC16  F02B         	call	_Lcd_Set_Cursor
  2277  0012B8                     
  2278                           ;fs_menu_controller.c: 212:             Lcd_Write_String("KALAN ZAMAN     ");
  2279  0012B8  0E35               	movlw	low STR_1
  2280  0012BA  6E05               	movwf	Lcd_Write_String@a^0,c
  2281  0012BC  0E06               	movlw	high STR_1
  2282  0012BE  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2283  0012C0  ECBC  F029         	call	_Lcd_Write_String	;wreg free
  2284  0012C4                     
  2285                           ;fs_menu_controller.c: 213:             Lcd_Set_Cursor(2,1);
  2286  0012C4  0E01               	movlw	1
  2287  0012C6  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2288  0012C8  0E02               	movlw	2
  2289  0012CA  EC16  F02B         	call	_Lcd_Set_Cursor
  2290  0012CE                     
  2291                           ;fs_menu_controller.c: 214:             sprintf(textCursor2,"      %d:%d   ",timer_value
      +                          .remainingMinute,timer_value.remainingSecond);
  2292  0012CE  0EE3               	movlw	low stateMachine@textCursor2
  2293  0012D0  0100               	movlb	0	; () banked
  2294  0012D2  6FCF               	movwf	sprintf@s& (0+255),b
  2295  0012D4  0E00               	movlw	high stateMachine@textCursor2
  2296  0012D6  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2297  0012D8  0E9A               	movlw	low STR_2
  2298  0012DA  6FD1               	movwf	sprintf@fmt& (0+255),b
  2299  0012DC  0E06               	movlw	high STR_2
  2300  0012DE  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2301  0012E0  C0F9  F0D3         	movff	_timer_value+6,?_sprintf+4
  2302  0012E4  C0FA  F0D4         	movff	_timer_value+7,?_sprintf+5
  2303  0012E8  C0F7  F0D5         	movff	_timer_value+4,?_sprintf+6
  2304  0012EC  C0F8  F0D6         	movff	_timer_value+5,?_sprintf+7
  2305  0012F0  ECFE  F02B         	call	_sprintf	;wreg free
  2306  0012F4                     
  2307                           ;fs_menu_controller.c: 215:             Lcd_Write_String(textCursor2);
  2308  0012F4  0EE3               	movlw	low stateMachine@textCursor2
  2309  0012F6  6E05               	movwf	Lcd_Write_String@a^0,c
  2310  0012F8  0E00               	movlw	high stateMachine@textCursor2
  2311  0012FA  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2312  0012FC  ECBC  F029         	call	_Lcd_Write_String	;wreg free
  2313  001300                     
  2314                           ;fs_menu_controller.c: 217:             if ( timer_value.menu_login_delay == 100)
  2315  001300  0E64               	movlw	100
  2316  001302  0100               	movlb	0	; () banked
  2317  001304  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  2318  001306  A4D8               	btfss	status,2,c
  2319  001308  EF88  F009         	goto	u7111
  2320  00130C  EF8A  F009         	goto	u7110
  2321  001310                     u7111:
  2322  001310  EF8F  F009         	goto	l5721
  2323  001314                     u7110:
  2324  001314                     
  2325                           ; BSR set to: 0
  2326                           ;fs_menu_controller.c: 218:             {;fs_menu_controller.c: 219:                 tim
      +                          er_value.menu_login_delay = 0;
  2327  001314  0E00               	movlw	0
  2328  001316  6FFB               	movwf	(_timer_value+8)& (0+255),b
  2329                           
  2330                           ;fs_menu_controller.c: 220:                 menu_selected = DRIVER_TIME_SETTING;
  2331  001318  0E01               	movlw	1
  2332  00131A  0101               	movlb	1	; () banked
  2333  00131C  6FBB               	movwf	_menu_selected& (0+255),b
  2334  00131E                     l5721:
  2335                           
  2336                           ;fs_menu_controller.c: 223:             if ((timer_value.remainingMinute <= 0) && (timer
      +                          _value.remainingSecond == 0) )
  2337  00131E  0100               	movlb	0	; () banked
  2338  001320  BFFA               	btfsc	(_timer_value+7)& (0+255),7,b
  2339  001322  EF9D  F009         	goto	u7120
  2340  001326  51FA               	movf	(_timer_value+7)& (0+255),w,b
  2341  001328  E106               	bnz	u7121
  2342  00132A  05F9               	decf	(_timer_value+6)& (0+255),w,b
  2343  00132C  B0D8               	btfsc	status,0,c
  2344  00132E  EF9B  F009         	goto	u7121
  2345  001332  EF9D  F009         	goto	u7120
  2346  001336                     u7121:
  2347  001336  EFAE  F009         	goto	l343
  2348  00133A                     u7120:
  2349  00133A                     
  2350                           ; BSR set to: 0
  2351  00133A  51F7               	movf	(_timer_value+4)& (0+255),w,b
  2352  00133C  11F8               	iorwf	(_timer_value+5)& (0+255),w,b
  2353  00133E  A4D8               	btfss	status,2,c
  2354  001340  EFA4  F009         	goto	u7131
  2355  001344  EFA6  F009         	goto	u7130
  2356  001348                     u7131:
  2357  001348  EFAE  F009         	goto	l343
  2358  00134C                     u7130:
  2359  00134C                     
  2360                           ; BSR set to: 0
  2361                           ;fs_menu_controller.c: 224:             {;fs_menu_controller.c: 225:                 men
      +                          u_selected = STOP_MENU;
  2362  00134C  0E04               	movlw	4
  2363  00134E  0101               	movlb	1	; () banked
  2364  001350  6FBB               	movwf	_menu_selected& (0+255),b
  2365                           
  2366                           ;fs_menu_controller.c: 226:                 timer_value.minute = 0;
  2367  001352  0E00               	movlw	0
  2368  001354  0100               	movlb	0	; () banked
  2369  001356  6FF6               	movwf	(_timer_value+3)& (0+255),b
  2370  001358  0E00               	movlw	0
  2371  00135A  6FF5               	movwf	(_timer_value+2)& (0+255),b
  2372  00135C                     l343:
  2373                           
  2374                           ; BSR set to: 0
  2375                           ;fs_menu_controller.c: 229:             if ( (startIsClick == 0) && (pauseIsClick == 1) 
      +                          && (stopIsClick == 0) && (menu_selected == MAIN_MENU))
  2376  00135C  0101               	movlb	1	; () banked
  2377  00135E  51BD               	movf	_startIsClick& (0+255),w,b
  2378  001360  A4D8               	btfss	status,2,c
  2379  001362  EFB5  F009         	goto	u7141
  2380  001366  EFB7  F009         	goto	u7140
  2381  00136A                     u7141:
  2382  00136A  EFD3  F009         	goto	l344
  2383  00136E                     u7140:
  2384  00136E                     
  2385                           ; BSR set to: 1
  2386  00136E  0100               	movlb	0	; () banked
  2387  001370  05FF               	decf	_pauseIsClick& (0+255),w,b
  2388  001372  A4D8               	btfss	status,2,c
  2389  001374  EFBE  F009         	goto	u7151
  2390  001378  EFC0  F009         	goto	u7150
  2391  00137C                     u7151:
  2392  00137C  EFD3  F009         	goto	l344
  2393  001380                     u7150:
  2394  001380                     
  2395                           ; BSR set to: 0
  2396  001380  0101               	movlb	1	; () banked
  2397  001382  51BC               	movf	_stopIsClick& (0+255),w,b
  2398  001384  A4D8               	btfss	status,2,c
  2399  001386  EFC7  F009         	goto	u7161
  2400  00138A  EFC9  F009         	goto	u7160
  2401  00138E                     u7161:
  2402  00138E  EFD3  F009         	goto	l344
  2403  001392                     u7160:
  2404  001392                     
  2405                           ; BSR set to: 1
  2406  001392  51BB               	movf	_menu_selected& (0+255),w,b
  2407  001394  A4D8               	btfss	status,2,c
  2408  001396  EFCF  F009         	goto	u7171
  2409  00139A  EFD1  F009         	goto	u7170
  2410  00139E                     u7171:
  2411  00139E  EFD3  F009         	goto	l344
  2412  0013A2                     u7170:
  2413  0013A2                     
  2414                           ; BSR set to: 1
  2415                           ;fs_menu_controller.c: 230:             {;fs_menu_controller.c: 231:                 men
      +                          u_selected = PAUSE_MENU;
  2416  0013A2  0E06               	movlw	6
  2417  0013A4  6FBB               	movwf	_menu_selected& (0+255),b
  2418  0013A6                     l344:
  2419                           
  2420                           ;fs_menu_controller.c: 234:             if ( (startIsClick == 0) && (pauseIsClick == 0) 
      +                          && (stopIsClick == 1) && (menu_selected == MAIN_MENU) )
  2421  0013A6  0101               	movlb	1	; () banked
  2422  0013A8  51BD               	movf	_startIsClick& (0+255),w,b
  2423  0013AA  A4D8               	btfss	status,2,c
  2424  0013AC  EFDA  F009         	goto	u7181
  2425  0013B0  EFDC  F009         	goto	u7180
  2426  0013B4                     u7181:
  2427  0013B4  EF06  F00A         	goto	l5745
  2428  0013B8                     u7180:
  2429  0013B8                     
  2430                           ; BSR set to: 1
  2431  0013B8  0100               	movlb	0	; () banked
  2432  0013BA  51FF               	movf	_pauseIsClick& (0+255),w,b
  2433  0013BC  A4D8               	btfss	status,2,c
  2434  0013BE  EFE3  F009         	goto	u7191
  2435  0013C2  EFE5  F009         	goto	u7190
  2436  0013C6                     u7191:
  2437  0013C6  EF06  F00A         	goto	l5745
  2438  0013CA                     u7190:
  2439  0013CA                     
  2440                           ; BSR set to: 0
  2441  0013CA  0101               	movlb	1	; () banked
  2442  0013CC  05BC               	decf	_stopIsClick& (0+255),w,b
  2443  0013CE  A4D8               	btfss	status,2,c
  2444  0013D0  EFEC  F009         	goto	u7201
  2445  0013D4  EFEE  F009         	goto	u7200
  2446  0013D8                     u7201:
  2447  0013D8  EF06  F00A         	goto	l5745
  2448  0013DC                     u7200:
  2449  0013DC                     
  2450                           ; BSR set to: 1
  2451  0013DC  51BB               	movf	_menu_selected& (0+255),w,b
  2452  0013DE  A4D8               	btfss	status,2,c
  2453  0013E0  EFF4  F009         	goto	u7211
  2454  0013E4  EFF6  F009         	goto	u7210
  2455  0013E8                     u7211:
  2456  0013E8  EF06  F00A         	goto	l5745
  2457  0013EC                     u7210:
  2458  0013EC                     
  2459                           ; BSR set to: 1
  2460                           ;fs_menu_controller.c: 235:             {;fs_menu_controller.c: 236:                  ti
      +                          mer_value.remainingMinute = menu_value.driver_time;
  2461  0013EC  C1AF  F0F9         	movff	_menu_value,_timer_value+6
  2462  0013F0  0100               	movlb	0	; () banked
  2463  0013F2  6BFA               	clrf	(_timer_value+7)& (0+255),b
  2464  0013F4                     
  2465                           ; BSR set to: 0
  2466                           ;fs_menu_controller.c: 237:                  timer_value.remainingSecond = 0;
  2467  0013F4  0E00               	movlw	0
  2468  0013F6  6FF8               	movwf	(_timer_value+5)& (0+255),b
  2469  0013F8  0E00               	movlw	0
  2470  0013FA  6FF7               	movwf	(_timer_value+4)& (0+255),b
  2471                           
  2472                           ;fs_menu_controller.c: 238:                  timer_value.second = 0;
  2473  0013FC  0E00               	movlw	0
  2474  0013FE  6FF4               	movwf	(_timer_value+1)& (0+255),b
  2475  001400  0E00               	movlw	0
  2476  001402  6FF3               	movwf	_timer_value& (0+255),b
  2477                           
  2478                           ;fs_menu_controller.c: 239:                  timer_value.minute = 0;
  2479  001404  0E00               	movlw	0
  2480  001406  6FF6               	movwf	(_timer_value+3)& (0+255),b
  2481  001408  0E00               	movlw	0
  2482  00140A  6FF5               	movwf	(_timer_value+2)& (0+255),b
  2483  00140C                     l5745:
  2484                           
  2485                           ;fs_menu_controller.c: 242:             if ( (startIsClick == 1) && (pauseIsClick == 0) 
      +                          && (stopIsClick == 0) )
  2486  00140C  0101               	movlb	1	; () banked
  2487  00140E  05BD               	decf	_startIsClick& (0+255),w,b
  2488  001410  A4D8               	btfss	status,2,c
  2489  001412  EF0D  F00A         	goto	u7221
  2490  001416  EF0F  F00A         	goto	u7220
  2491  00141A                     u7221:
  2492  00141A  EF40  F00E         	goto	l383
  2493  00141E                     u7220:
  2494  00141E                     
  2495                           ; BSR set to: 1
  2496  00141E  0100               	movlb	0	; () banked
  2497  001420  51FF               	movf	_pauseIsClick& (0+255),w,b
  2498  001422  A4D8               	btfss	status,2,c
  2499  001424  EF16  F00A         	goto	u7231
  2500  001428  EF18  F00A         	goto	u7230
  2501  00142C                     u7231:
  2502  00142C  EF40  F00E         	goto	l383
  2503  001430                     u7230:
  2504  001430                     
  2505                           ; BSR set to: 0
  2506  001430  0101               	movlb	1	; () banked
  2507  001432  51BC               	movf	_stopIsClick& (0+255),w,b
  2508  001434  A4D8               	btfss	status,2,c
  2509  001436  EF1F  F00A         	goto	u7241
  2510  00143A  EF21  F00A         	goto	u7240
  2511  00143E                     u7241:
  2512  00143E  EF40  F00E         	goto	l383
  2513  001442                     u7240:
  2514  001442                     
  2515                           ; BSR set to: 1
  2516                           ;fs_menu_controller.c: 243:             {;fs_menu_controller.c: 244:                 sta
      +                          rtMotor();
  2517  001442  EC67  F02D         	call	_startMotor	;wreg free
  2518  001446                     
  2519                           ;fs_menu_controller.c: 245:                 LATDbits.LATD5 = 1;
  2520  001446  8A8C               	bsf	140,5,c	;volatile
  2521  001448                     
  2522                           ;fs_menu_controller.c: 246:                 LATCbits.LATC5 = 1;
  2523  001448  8A8B               	bsf	139,5,c	;volatile
  2524  00144A  EF40  F00E         	goto	l383
  2525  00144E                     l348:
  2526                           
  2527                           ; BSR set to: 0
  2528                           ;fs_menu_controller.c: 254:             if (menu_flags.menu_input_flag == 1)
  2529  00144E  A1FD               	btfss	_menu_flags& (0+255),0,b
  2530  001450  EF2C  F00A         	goto	u7251
  2531  001454  EF2E  F00A         	goto	u7250
  2532  001458                     u7251:
  2533  001458  EF32  F00A         	goto	l5761
  2534  00145C                     u7250:
  2535  00145C                     
  2536                           ; BSR set to: 0
  2537                           ;fs_menu_controller.c: 255:             {;fs_menu_controller.c: 256:                 men
      +                          u_flags.menu_input_flag = 0;
  2538  00145C  91FD               	bcf	_menu_flags& (0+255),0,b
  2539  00145E                     
  2540                           ; BSR set to: 0
  2541                           ;fs_menu_controller.c: 257:                 menu_selected = STOP_TIME_SETTING;
  2542  00145E  0E02               	movlw	2
  2543  001460  0101               	movlb	1	; () banked
  2544  001462  6FBB               	movwf	_menu_selected& (0+255),b
  2545  001464                     l5761:
  2546                           
  2547                           ;fs_menu_controller.c: 260:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_value.driver_time < 30))
  2548  001464  0100               	movlb	0	; () banked
  2549  001466  A9FD               	btfss	_menu_flags& (0+255),4,b
  2550  001468  EF38  F00A         	goto	u7261
  2551  00146C  EF3A  F00A         	goto	u7260
  2552  001470                     u7261:
  2553  001470  EF5C  F00A         	goto	l5779
  2554  001474                     u7260:
  2555  001474                     
  2556                           ; BSR set to: 0
  2557  001474  0E1E               	movlw	30
  2558  001476  0101               	movlb	1	; () banked
  2559  001478  61AF               	cpfslt	_menu_value& (0+255),b
  2560  00147A  EF41  F00A         	goto	u7271
  2561  00147E  EF43  F00A         	goto	u7270
  2562  001482                     u7271:
  2563  001482  EF5C  F00A         	goto	l5779
  2564  001486                     u7270:
  2565  001486                     
  2566                           ; BSR set to: 1
  2567                           ;fs_menu_controller.c: 261:             {;fs_menu_controller.c: 262:                 men
      +                          u_flags.menu_increase_flag = 0;
  2568  001486  0100               	movlb	0	; () banked
  2569  001488  99FD               	bcf	_menu_flags& (0+255),4,b
  2570  00148A                     
  2571                           ; BSR set to: 0
  2572                           ;fs_menu_controller.c: 263:                 menu_value.driver_time++;
  2573  00148A  0101               	movlb	1	; () banked
  2574  00148C  2BAF               	incf	_menu_value& (0+255),f,b
  2575  00148E                     
  2576                           ; BSR set to: 1
  2577                           ;fs_menu_controller.c: 264:                 eepromWrite(0x00,(uint8_t)menu_value.driver_
      +                          time);
  2578  00148E  C1AF  F001         	movff	_menu_value,eepromWrite@data
  2579  001492  0E00               	movlw	0
  2580  001494  ECD2  F02D         	call	_eepromWrite
  2581  001498                     
  2582                           ;fs_menu_controller.c: 265:                 timer_value.minute =0 ;
  2583  001498  0E00               	movlw	0
  2584  00149A  0100               	movlb	0	; () banked
  2585  00149C  6FF6               	movwf	(_timer_value+3)& (0+255),b
  2586  00149E  0E00               	movlw	0
  2587  0014A0  6FF5               	movwf	(_timer_value+2)& (0+255),b
  2588  0014A2                     
  2589                           ; BSR set to: 0
  2590                           ;fs_menu_controller.c: 266:                 timer_value.second = 0;
  2591  0014A2  0E00               	movlw	0
  2592  0014A4  6FF4               	movwf	(_timer_value+1)& (0+255),b
  2593  0014A6  0E00               	movlw	0
  2594  0014A8  6FF3               	movwf	_timer_value& (0+255),b
  2595  0014AA                     
  2596                           ; BSR set to: 0
  2597                           ;fs_menu_controller.c: 267:                 timer_value.remainingSecond = 0;
  2598  0014AA  0E00               	movlw	0
  2599  0014AC  6FF8               	movwf	(_timer_value+5)& (0+255),b
  2600  0014AE  0E00               	movlw	0
  2601  0014B0  6FF7               	movwf	(_timer_value+4)& (0+255),b
  2602  0014B2                     
  2603                           ; BSR set to: 0
  2604                           ;fs_menu_controller.c: 268:                 timer_value.remainingMinute = menu_value.dri
      +                          ver_time;
  2605  0014B2  C1AF  F0F9         	movff	_menu_value,_timer_value+6
  2606  0014B6  6BFA               	clrf	(_timer_value+7)& (0+255),b
  2607  0014B8                     l5779:
  2608                           
  2609                           ;fs_menu_controller.c: 271:             if ((menu_flags.menu_decrease_flag == 1) && (men
      +                          u_value.driver_time > 1))
  2610  0014B8  0100               	movlb	0	; () banked
  2611  0014BA  ABFD               	btfss	_menu_flags& (0+255),5,b
  2612  0014BC  EF62  F00A         	goto	u7281
  2613  0014C0  EF64  F00A         	goto	u7280
  2614  0014C4                     u7281:
  2615  0014C4  EF86  F00A         	goto	l5797
  2616  0014C8                     u7280:
  2617  0014C8                     
  2618                           ; BSR set to: 0
  2619  0014C8  0E01               	movlw	1
  2620  0014CA  0101               	movlb	1	; () banked
  2621  0014CC  65AF               	cpfsgt	_menu_value& (0+255),b
  2622  0014CE  EF6B  F00A         	goto	u7291
  2623  0014D2  EF6D  F00A         	goto	u7290
  2624  0014D6                     u7291:
  2625  0014D6  EF86  F00A         	goto	l5797
  2626  0014DA                     u7290:
  2627  0014DA                     
  2628                           ; BSR set to: 1
  2629                           ;fs_menu_controller.c: 272:             {;fs_menu_controller.c: 273:                  me
      +                          nu_flags.menu_decrease_flag = 0;
  2630  0014DA  0100               	movlb	0	; () banked
  2631  0014DC  9BFD               	bcf	_menu_flags& (0+255),5,b
  2632  0014DE                     
  2633                           ; BSR set to: 0
  2634                           ;fs_menu_controller.c: 274:                  menu_value.driver_time--;
  2635  0014DE  0101               	movlb	1	; () banked
  2636  0014E0  07AF               	decf	_menu_value& (0+255),f,b
  2637  0014E2                     
  2638                           ; BSR set to: 1
  2639                           ;fs_menu_controller.c: 275:                  eepromWrite(0x00,(uint8_t)menu_value.driver
      +                          _time);
  2640  0014E2  C1AF  F001         	movff	_menu_value,eepromWrite@data
  2641  0014E6  0E00               	movlw	0
  2642  0014E8  ECD2  F02D         	call	_eepromWrite
  2643  0014EC                     
  2644                           ;fs_menu_controller.c: 276:                  timer_value.minute =0 ;
  2645  0014EC  0E00               	movlw	0
  2646  0014EE  0100               	movlb	0	; () banked
  2647  0014F0  6FF6               	movwf	(_timer_value+3)& (0+255),b
  2648  0014F2  0E00               	movlw	0
  2649  0014F4  6FF5               	movwf	(_timer_value+2)& (0+255),b
  2650  0014F6                     
  2651                           ; BSR set to: 0
  2652                           ;fs_menu_controller.c: 277:                  timer_value.second = 0;
  2653  0014F6  0E00               	movlw	0
  2654  0014F8  6FF4               	movwf	(_timer_value+1)& (0+255),b
  2655  0014FA  0E00               	movlw	0
  2656  0014FC  6FF3               	movwf	_timer_value& (0+255),b
  2657  0014FE                     
  2658                           ; BSR set to: 0
  2659                           ;fs_menu_controller.c: 278:                  timer_value.remainingSecond = 0;
  2660  0014FE  0E00               	movlw	0
  2661  001500  6FF8               	movwf	(_timer_value+5)& (0+255),b
  2662  001502  0E00               	movlw	0
  2663  001504  6FF7               	movwf	(_timer_value+4)& (0+255),b
  2664  001506                     
  2665                           ; BSR set to: 0
  2666                           ;fs_menu_controller.c: 279:                  timer_value.remainingMinute = menu_value.dr
      +                          iver_time;
  2667  001506  C1AF  F0F9         	movff	_menu_value,_timer_value+6
  2668  00150A  6BFA               	clrf	(_timer_value+7)& (0+255),b
  2669  00150C                     l5797:
  2670                           
  2671                           ;fs_menu_controller.c: 283:             Lcd_Set_Cursor(1,1);
  2672  00150C  0E01               	movlw	1
  2673  00150E  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2674  001510  0E01               	movlw	1
  2675  001512  EC16  F02B         	call	_Lcd_Set_Cursor
  2676  001516                     
  2677                           ;fs_menu_controller.c: 284:             Lcd_Write_String("HAREKT ZAMANI dk");
  2678  001516  0E68               	movlw	low STR_3
  2679  001518  6E05               	movwf	Lcd_Write_String@a^0,c
  2680  00151A  0E06               	movlw	high STR_3
  2681  00151C  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2682  00151E  ECBC  F029         	call	_Lcd_Write_String	;wreg free
  2683  001522                     
  2684                           ;fs_menu_controller.c: 285:             Lcd_Set_Cursor(2,1);
  2685  001522  0E01               	movlw	1
  2686  001524  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2687  001526  0E02               	movlw	2
  2688  001528  EC16  F02B         	call	_Lcd_Set_Cursor
  2689  00152C                     
  2690                           ;fs_menu_controller.c: 286:             sprintf(textCursor2,"%d               ",menu_val
      +                          ue.driver_time);
  2691  00152C  0EE3               	movlw	low stateMachine@textCursor2
  2692  00152E  0100               	movlb	0	; () banked
  2693  001530  6FCF               	movwf	sprintf@s& (0+255),b
  2694  001532  0E00               	movlw	high stateMachine@textCursor2
  2695  001534  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2696  001536  0E01               	movlw	low STR_4
  2697  001538  6FD1               	movwf	sprintf@fmt& (0+255),b
  2698  00153A  0E06               	movlw	high STR_4
  2699  00153C  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2700  00153E  C1AF  F0D3         	movff	_menu_value,?_sprintf+4
  2701  001542  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  2702  001544  ECFE  F02B         	call	_sprintf	;wreg free
  2703  001548                     
  2704                           ;fs_menu_controller.c: 287:             Lcd_Write_String(textCursor2);
  2705  001548  0EE3               	movlw	low stateMachine@textCursor2
  2706  00154A  6E05               	movwf	Lcd_Write_String@a^0,c
  2707  00154C  0E00               	movlw	high stateMachine@textCursor2
  2708  00154E  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2709  001550  ECBC  F029         	call	_Lcd_Write_String	;wreg free
  2710  001554                     
  2711                           ;fs_menu_controller.c: 289:             if(timer_value.menu_login_delay == 100)
  2712  001554  0E64               	movlw	100
  2713  001556  0100               	movlb	0	; () banked
  2714  001558  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  2715  00155A  A4D8               	btfss	status,2,c
  2716  00155C  EFB2  F00A         	goto	u7301
  2717  001560  EFB4  F00A         	goto	u7300
  2718  001564                     u7301:
  2719  001564  EFB9  F00A         	goto	l5811
  2720  001568                     u7300:
  2721  001568                     l5809:
  2722                           
  2723                           ; BSR set to: 0
  2724                           ;fs_menu_controller.c: 290:             {;fs_menu_controller.c: 291:                 tim
      +                          er_value.menu_login_delay = 0;
  2725  001568  0E00               	movlw	0
  2726  00156A  6FFB               	movwf	(_timer_value+8)& (0+255),b
  2727                           
  2728                           ;fs_menu_controller.c: 292:                 menu_selected = PAUSE_MENU;
  2729  00156C  0E06               	movlw	6
  2730  00156E  0101               	movlb	1	; () banked
  2731  001570  6FBB               	movwf	_menu_selected& (0+255),b
  2732  001572                     l5811:
  2733                           
  2734                           ;fs_menu_controller.c: 295:         stopMotor();
  2735  001572  ECF5  F02C         	call	_stopMotor	;wreg free
  2736                           
  2737                           ;fs_menu_controller.c: 297:         break;
  2738  001576  EF40  F00E         	goto	l383
  2739  00157A                     l5813:
  2740                           
  2741                           ; BSR set to: 0
  2742                           ;fs_menu_controller.c: 301:             stopMotor();
  2743  00157A  ECF5  F02C         	call	_stopMotor	;wreg free
  2744  00157E                     
  2745                           ;fs_menu_controller.c: 303:             if (menu_flags.menu_input_flag == 1)
  2746  00157E  0100               	movlb	0	; () banked
  2747  001580  A1FD               	btfss	_menu_flags& (0+255),0,b
  2748  001582  EFC5  F00A         	goto	u7311
  2749  001586  EFC7  F00A         	goto	u7310
  2750  00158A                     u7311:
  2751  00158A  EFCB  F00A         	goto	l5821
  2752  00158E                     u7310:
  2753  00158E                     
  2754                           ; BSR set to: 0
  2755                           ;fs_menu_controller.c: 304:             {;fs_menu_controller.c: 305:                 men
      +                          u_flags.menu_input_flag = 0;
  2756  00158E  91FD               	bcf	_menu_flags& (0+255),0,b
  2757  001590                     
  2758                           ; BSR set to: 0
  2759                           ;fs_menu_controller.c: 306:                 menu_selected = SPEED_LIMIT_SETTING;
  2760  001590  0E03               	movlw	3
  2761  001592  0101               	movlb	1	; () banked
  2762  001594  6FBB               	movwf	_menu_selected& (0+255),b
  2763  001596                     l5821:
  2764                           
  2765                           ;fs_menu_controller.c: 309:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_value.stop_time < 250))
  2766  001596  0100               	movlb	0	; () banked
  2767  001598  A9FD               	btfss	_menu_flags& (0+255),4,b
  2768  00159A  EFD1  F00A         	goto	u7321
  2769  00159E  EFD3  F00A         	goto	u7320
  2770  0015A2                     u7321:
  2771  0015A2  EFE6  F00A         	goto	l5831
  2772  0015A6                     u7320:
  2773  0015A6                     
  2774                           ; BSR set to: 0
  2775  0015A6  0EFA               	movlw	250
  2776  0015A8  0101               	movlb	1	; () banked
  2777  0015AA  61B0               	cpfslt	(_menu_value+1)& (0+255),b
  2778  0015AC  EFDA  F00A         	goto	u7331
  2779  0015B0  EFDC  F00A         	goto	u7330
  2780  0015B4                     u7331:
  2781  0015B4  EFE6  F00A         	goto	l5831
  2782  0015B8                     u7330:
  2783  0015B8                     
  2784                           ; BSR set to: 1
  2785                           ;fs_menu_controller.c: 310:             {;fs_menu_controller.c: 311:                 men
      +                          u_flags.menu_increase_flag = 0;
  2786  0015B8  0100               	movlb	0	; () banked
  2787  0015BA  99FD               	bcf	_menu_flags& (0+255),4,b
  2788  0015BC                     
  2789                           ; BSR set to: 0
  2790                           ;fs_menu_controller.c: 312:                 menu_value.stop_time += 10;
  2791  0015BC  0E0A               	movlw	10
  2792  0015BE  0101               	movlb	1	; () banked
  2793  0015C0  27B0               	addwf	(_menu_value+1)& (0+255),f,b
  2794  0015C2                     
  2795                           ; BSR set to: 1
  2796                           ;fs_menu_controller.c: 313:                 eepromWrite(0x01,(uint8_t)menu_value.stop_ti
      +                          me);
  2797  0015C2  C1B0  F001         	movff	_menu_value+1,eepromWrite@data
  2798  0015C6  0E01               	movlw	1
  2799  0015C8  ECD2  F02D         	call	_eepromWrite
  2800  0015CC                     l5831:
  2801                           
  2802                           ;fs_menu_controller.c: 316:             if ((menu_flags.menu_decrease_flag == 1) && (men
      +                          u_value.stop_time > 10))
  2803  0015CC  0100               	movlb	0	; () banked
  2804  0015CE  ABFD               	btfss	_menu_flags& (0+255),5,b
  2805  0015D0  EFEC  F00A         	goto	u7341
  2806  0015D4  EFEE  F00A         	goto	u7340
  2807  0015D8                     u7341:
  2808  0015D8  EF01  F00B         	goto	l5841
  2809  0015DC                     u7340:
  2810  0015DC                     
  2811                           ; BSR set to: 0
  2812  0015DC  0E0A               	movlw	10
  2813  0015DE  0101               	movlb	1	; () banked
  2814  0015E0  65B0               	cpfsgt	(_menu_value+1)& (0+255),b
  2815  0015E2  EFF5  F00A         	goto	u7351
  2816  0015E6  EFF7  F00A         	goto	u7350
  2817  0015EA                     u7351:
  2818  0015EA  EF01  F00B         	goto	l5841
  2819  0015EE                     u7350:
  2820  0015EE                     
  2821                           ; BSR set to: 1
  2822                           ;fs_menu_controller.c: 317:             {;fs_menu_controller.c: 318:                  me
      +                          nu_flags.menu_decrease_flag = 0;
  2823  0015EE  0100               	movlb	0	; () banked
  2824  0015F0  9BFD               	bcf	_menu_flags& (0+255),5,b
  2825  0015F2                     
  2826                           ; BSR set to: 0
  2827                           ;fs_menu_controller.c: 319:                  menu_value.stop_time -= 10;
  2828  0015F2  0E0A               	movlw	10
  2829  0015F4  0101               	movlb	1	; () banked
  2830  0015F6  5FB0               	subwf	(_menu_value+1)& (0+255),f,b
  2831  0015F8                     
  2832                           ; BSR set to: 1
  2833                           ;fs_menu_controller.c: 320:                  eepromWrite(0x01,(uint8_t)menu_value.stop_t
      +                          ime);
  2834  0015F8  C1B0  F001         	movff	_menu_value+1,eepromWrite@data
  2835  0015FC  0E01               	movlw	1
  2836  0015FE  ECD2  F02D         	call	_eepromWrite
  2837  001602                     l5841:
  2838                           
  2839                           ;fs_menu_controller.c: 322:             Lcd_Set_Cursor(1,1);
  2840  001602  0E01               	movlw	1
  2841  001604  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2842  001606  0E01               	movlw	1
  2843  001608  EC16  F02B         	call	_Lcd_Set_Cursor
  2844  00160C                     
  2845                           ;fs_menu_controller.c: 323:             Lcd_Write_String("DURMA ZAMANI  ms");
  2846  00160C  0E79               	movlw	low STR_5
  2847  00160E  6E05               	movwf	Lcd_Write_String@a^0,c
  2848  001610  0E06               	movlw	high STR_5
  2849  001612  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2850  001614  ECBC  F029         	call	_Lcd_Write_String	;wreg free
  2851  001618                     
  2852                           ;fs_menu_controller.c: 324:             Lcd_Set_Cursor(2,1);
  2853  001618  0E01               	movlw	1
  2854  00161A  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2855  00161C  0E02               	movlw	2
  2856  00161E  EC16  F02B         	call	_Lcd_Set_Cursor
  2857  001622                     
  2858                           ;fs_menu_controller.c: 325:             sprintf(textCursor2,"%d               ",menu_val
      +                          ue.stop_time);
  2859  001622  0EE3               	movlw	low stateMachine@textCursor2
  2860  001624  0100               	movlb	0	; () banked
  2861  001626  6FCF               	movwf	sprintf@s& (0+255),b
  2862  001628  0E00               	movlw	high stateMachine@textCursor2
  2863  00162A  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2864  00162C  0E01               	movlw	low STR_4
  2865  00162E  6FD1               	movwf	sprintf@fmt& (0+255),b
  2866  001630  0E06               	movlw	high STR_4
  2867  001632  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2868  001634  C1B0  F0D3         	movff	_menu_value+1,?_sprintf+4
  2869  001638  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  2870  00163A  ECFE  F02B         	call	_sprintf	;wreg free
  2871  00163E                     
  2872                           ;fs_menu_controller.c: 326:             Lcd_Write_String(textCursor2);
  2873  00163E  0EE3               	movlw	low stateMachine@textCursor2
  2874  001640  6E05               	movwf	Lcd_Write_String@a^0,c
  2875  001642  0E00               	movlw	high stateMachine@textCursor2
  2876  001644  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2877  001646  ECBC  F029         	call	_Lcd_Write_String	;wreg free
  2878  00164A                     
  2879                           ;fs_menu_controller.c: 328:             if(timer_value.menu_login_delay == 100)
  2880  00164A  0E64               	movlw	100
  2881  00164C  0100               	movlb	0	; () banked
  2882  00164E  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  2883  001650  A4D8               	btfss	status,2,c
  2884  001652  EF2D  F00B         	goto	u7361
  2885  001656  EF2F  F00B         	goto	u7360
  2886  00165A                     u7361:
  2887  00165A  EF40  F00E         	goto	l383
  2888  00165E                     u7360:
  2889  00165E                     l5853:
  2890                           
  2891                           ; BSR set to: 0
  2892                           ;fs_menu_controller.c: 329:             {;fs_menu_controller.c: 330:                 tim
      +                          er_value.menu_login_delay = 0;
  2893  00165E  0E00               	movlw	0
  2894  001660  6FFB               	movwf	(_timer_value+8)& (0+255),b
  2895                           
  2896                           ;fs_menu_controller.c: 331:                 menu_selected = PAUSE_MENU;
  2897  001662  0E06               	movlw	6
  2898  001664  0101               	movlb	1	; () banked
  2899  001666  6FBB               	movwf	_menu_selected& (0+255),b
  2900  001668  EF40  F00E         	goto	l383
  2901  00166C                     l358:
  2902                           
  2903                           ; BSR set to: 0
  2904                           ;fs_menu_controller.c: 337:             if (menu_flags.menu_input_flag == 1)
  2905  00166C  A1FD               	btfss	_menu_flags& (0+255),0,b
  2906  00166E  EF3B  F00B         	goto	u7371
  2907  001672  EF3D  F00B         	goto	u7370
  2908  001676                     u7371:
  2909  001676  EF41  F00B         	goto	l5859
  2910  00167A                     u7370:
  2911  00167A                     
  2912                           ; BSR set to: 0
  2913                           ;fs_menu_controller.c: 338:             {;fs_menu_controller.c: 339:                 men
      +                          u_flags.menu_input_flag = 0;
  2914  00167A  91FD               	bcf	_menu_flags& (0+255),0,b
  2915  00167C                     
  2916                           ; BSR set to: 0
  2917                           ;fs_menu_controller.c: 340:                 menu_selected = DRIVER_TIME_SETTING;
  2918  00167C  0E01               	movlw	1
  2919  00167E  0101               	movlb	1	; () banked
  2920  001680  6FBB               	movwf	_menu_selected& (0+255),b
  2921  001682                     l5859:
  2922                           
  2923                           ;fs_menu_controller.c: 343:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_value.speed_limit < 5))
  2924  001682  0100               	movlb	0	; () banked
  2925  001684  A9FD               	btfss	_menu_flags& (0+255),4,b
  2926  001686  EF47  F00B         	goto	u7381
  2927  00168A  EF49  F00B         	goto	u7380
  2928  00168E                     u7381:
  2929  00168E  EF5B  F00B         	goto	l5869
  2930  001692                     u7380:
  2931  001692                     
  2932                           ; BSR set to: 0
  2933  001692  0E05               	movlw	5
  2934  001694  0101               	movlb	1	; () banked
  2935  001696  61B1               	cpfslt	(_menu_value+2)& (0+255),b
  2936  001698  EF50  F00B         	goto	u7391
  2937  00169C  EF52  F00B         	goto	u7390
  2938  0016A0                     u7391:
  2939  0016A0  EF5B  F00B         	goto	l5869
  2940  0016A4                     u7390:
  2941  0016A4                     
  2942                           ; BSR set to: 1
  2943                           ;fs_menu_controller.c: 344:             {;fs_menu_controller.c: 345:                 men
      +                          u_flags.menu_increase_flag = 0;
  2944  0016A4  0100               	movlb	0	; () banked
  2945  0016A6  99FD               	bcf	_menu_flags& (0+255),4,b
  2946  0016A8                     
  2947                           ; BSR set to: 0
  2948                           ;fs_menu_controller.c: 346:                 menu_value.speed_limit += 1;
  2949  0016A8  0101               	movlb	1	; () banked
  2950  0016AA  2BB1               	incf	(_menu_value+2)& (0+255),f,b
  2951  0016AC                     
  2952                           ; BSR set to: 1
  2953                           ;fs_menu_controller.c: 347:                 eepromWrite(0x02,menu_value.speed_limit);
  2954  0016AC  C1B1  F001         	movff	_menu_value+2,eepromWrite@data
  2955  0016B0  0E02               	movlw	2
  2956  0016B2  ECD2  F02D         	call	_eepromWrite
  2957  0016B6                     l5869:
  2958                           
  2959                           ;fs_menu_controller.c: 350:             if ((menu_flags.menu_decrease_flag == 1) && (men
      +                          u_value.speed_limit > 1))
  2960  0016B6  0100               	movlb	0	; () banked
  2961  0016B8  ABFD               	btfss	_menu_flags& (0+255),5,b
  2962  0016BA  EF61  F00B         	goto	u7401
  2963  0016BE  EF63  F00B         	goto	u7400
  2964  0016C2                     u7401:
  2965  0016C2  EF75  F00B         	goto	l5879
  2966  0016C6                     u7400:
  2967  0016C6                     
  2968                           ; BSR set to: 0
  2969  0016C6  0E01               	movlw	1
  2970  0016C8  0101               	movlb	1	; () banked
  2971  0016CA  65B1               	cpfsgt	(_menu_value+2)& (0+255),b
  2972  0016CC  EF6A  F00B         	goto	u7411
  2973  0016D0  EF6C  F00B         	goto	u7410
  2974  0016D4                     u7411:
  2975  0016D4  EF75  F00B         	goto	l5879
  2976  0016D8                     u7410:
  2977  0016D8                     
  2978                           ; BSR set to: 1
  2979                           ;fs_menu_controller.c: 351:             {;fs_menu_controller.c: 352:                  me
      +                          nu_flags.menu_decrease_flag = 0;
  2980  0016D8  0100               	movlb	0	; () banked
  2981  0016DA  9BFD               	bcf	_menu_flags& (0+255),5,b
  2982  0016DC                     
  2983                           ; BSR set to: 0
  2984                           ;fs_menu_controller.c: 353:                  menu_value.speed_limit -= 1;
  2985  0016DC  0101               	movlb	1	; () banked
  2986  0016DE  07B1               	decf	(_menu_value+2)& (0+255),f,b
  2987  0016E0                     
  2988                           ; BSR set to: 1
  2989                           ;fs_menu_controller.c: 354:                  eepromWrite(0x02,menu_value.speed_limit);
  2990  0016E0  C1B1  F001         	movff	_menu_value+2,eepromWrite@data
  2991  0016E4  0E02               	movlw	2
  2992  0016E6  ECD2  F02D         	call	_eepromWrite
  2993  0016EA                     l5879:
  2994                           
  2995                           ;fs_menu_controller.c: 356:             Lcd_Set_Cursor(1,1);
  2996  0016EA  0E01               	movlw	1
  2997  0016EC  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2998  0016EE  0E01               	movlw	1
  2999  0016F0  EC16  F02B         	call	_Lcd_Set_Cursor
  3000  0016F4                     
  3001                           ;fs_menu_controller.c: 357:             Lcd_Write_String("HIZ LiMiTi      ");
  3002  0016F4  0E24               	movlw	low STR_7
  3003  0016F6  6E05               	movwf	Lcd_Write_String@a^0,c
  3004  0016F8  0E06               	movlw	high STR_7
  3005  0016FA  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3006  0016FC  ECBC  F029         	call	_Lcd_Write_String	;wreg free
  3007  001700                     
  3008                           ;fs_menu_controller.c: 358:             Lcd_Set_Cursor(2,1);
  3009  001700  0E01               	movlw	1
  3010  001702  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3011  001704  0E02               	movlw	2
  3012  001706  EC16  F02B         	call	_Lcd_Set_Cursor
  3013  00170A                     
  3014                           ;fs_menu_controller.c: 359:             sprintf(textCursor2,"%d               ",menu_val
      +                          ue.speed_limit);
  3015  00170A  0EE3               	movlw	low stateMachine@textCursor2
  3016  00170C  0100               	movlb	0	; () banked
  3017  00170E  6FCF               	movwf	sprintf@s& (0+255),b
  3018  001710  0E00               	movlw	high stateMachine@textCursor2
  3019  001712  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3020  001714  0E01               	movlw	low STR_4
  3021  001716  6FD1               	movwf	sprintf@fmt& (0+255),b
  3022  001718  0E06               	movlw	high STR_4
  3023  00171A  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3024  00171C  C1B1  F0D3         	movff	_menu_value+2,?_sprintf+4
  3025  001720  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  3026  001722  ECFE  F02B         	call	_sprintf	;wreg free
  3027  001726                     
  3028                           ;fs_menu_controller.c: 360:             Lcd_Write_String(textCursor2);
  3029  001726  0EE3               	movlw	low stateMachine@textCursor2
  3030  001728  6E05               	movwf	Lcd_Write_String@a^0,c
  3031  00172A  0E00               	movlw	high stateMachine@textCursor2
  3032  00172C  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3033  00172E  ECBC  F029         	call	_Lcd_Write_String	;wreg free
  3034  001732                     
  3035                           ;fs_menu_controller.c: 362:             if(timer_value.menu_login_delay == 100)
  3036  001732  0E64               	movlw	100
  3037  001734  0100               	movlb	0	; () banked
  3038  001736  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  3039  001738  A4D8               	btfss	status,2,c
  3040  00173A  EFA1  F00B         	goto	u7421
  3041  00173E  EFA3  F00B         	goto	u7420
  3042  001742                     u7421:
  3043  001742  EFB9  F00A         	goto	l5811
  3044  001746                     u7420:
  3045  001746  EFB4  F00A         	goto	l5809
  3046  00174A                     l5895:
  3047                           
  3048                           ; BSR set to: 0
  3049                           ;fs_menu_controller.c: 373:             startIsClick = 0;
  3050  00174A  0E00               	movlw	0
  3051  00174C  0101               	movlb	1	; () banked
  3052  00174E  6FBD               	movwf	_startIsClick& (0+255),b
  3053                           
  3054                           ;fs_menu_controller.c: 374:             pauseIsClick = 0;
  3055  001750  0E00               	movlw	0
  3056  001752  0100               	movlb	0	; () banked
  3057  001754  6FFF               	movwf	_pauseIsClick& (0+255),b
  3058                           
  3059                           ;fs_menu_controller.c: 375:             stopIsClick = 1;
  3060  001756  0E01               	movlw	1
  3061  001758  0101               	movlb	1	; () banked
  3062  00175A  6FBC               	movwf	_stopIsClick& (0+255),b
  3063  00175C                     
  3064                           ; BSR set to: 1
  3065                           ;fs_menu_controller.c: 377:             Lcd_Set_Cursor(1,1);
  3066  00175C  0E01               	movlw	1
  3067  00175E  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3068  001760  0E01               	movlw	1
  3069  001762  EC16  F02B         	call	_Lcd_Set_Cursor
  3070  001766                     
  3071                           ;fs_menu_controller.c: 378:             Lcd_Write_String("ZAMAN DOLDU     ");
  3072  001766  0E46               	movlw	low STR_9
  3073  001768  6E05               	movwf	Lcd_Write_String@a^0,c
  3074  00176A  0E06               	movlw	high STR_9
  3075  00176C  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3076  00176E  ECBC  F029         	call	_Lcd_Write_String	;wreg free
  3077  001772                     
  3078                           ;fs_menu_controller.c: 380:             timer_value.remainingSecond = 0;
  3079  001772  0E00               	movlw	0
  3080  001774  0100               	movlb	0	; () banked
  3081  001776  6FF8               	movwf	(_timer_value+5)& (0+255),b
  3082  001778  0E00               	movlw	0
  3083  00177A  6FF7               	movwf	(_timer_value+4)& (0+255),b
  3084  00177C                     
  3085                           ; BSR set to: 0
  3086                           ;fs_menu_controller.c: 381:             timer_value.remainingMinute = 0;
  3087  00177C  0E00               	movlw	0
  3088  00177E  6FFA               	movwf	(_timer_value+7)& (0+255),b
  3089  001780  0E00               	movlw	0
  3090  001782  6FF9               	movwf	(_timer_value+6)& (0+255),b
  3091  001784                     
  3092                           ; BSR set to: 0
  3093                           ;fs_menu_controller.c: 382:              Lcd_Set_Cursor(2,1);
  3094  001784  0E01               	movlw	1
  3095  001786  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3096  001788  0E02               	movlw	2
  3097  00178A  EC16  F02B         	call	_Lcd_Set_Cursor
  3098  00178E                     
  3099                           ;fs_menu_controller.c: 383:             sprintf(textCursor2,"      %d:%d    ",timer_valu
      +                          e.remainingMinute,timer_value.remainingSecond);
  3100  00178E  0EE3               	movlw	low stateMachine@textCursor2
  3101  001790  0100               	movlb	0	; () banked
  3102  001792  6FCF               	movwf	sprintf@s& (0+255),b
  3103  001794  0E00               	movlw	high stateMachine@textCursor2
  3104  001796  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3105  001798  0E8A               	movlw	low STR_10
  3106  00179A  6FD1               	movwf	sprintf@fmt& (0+255),b
  3107  00179C  0E06               	movlw	high STR_10
  3108  00179E  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3109  0017A0  C0F9  F0D3         	movff	_timer_value+6,?_sprintf+4
  3110  0017A4  C0FA  F0D4         	movff	_timer_value+7,?_sprintf+5
  3111  0017A8  C0F7  F0D5         	movff	_timer_value+4,?_sprintf+6
  3112  0017AC  C0F8  F0D6         	movff	_timer_value+5,?_sprintf+7
  3113  0017B0  ECFE  F02B         	call	_sprintf	;wreg free
  3114  0017B4                     
  3115                           ;fs_menu_controller.c: 384:             Lcd_Write_String(textCursor2);
  3116  0017B4  0EE3               	movlw	low stateMachine@textCursor2
  3117  0017B6  6E05               	movwf	Lcd_Write_String@a^0,c
  3118  0017B8  0E00               	movlw	high stateMachine@textCursor2
  3119  0017BA  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3120  0017BC  ECBC  F029         	call	_Lcd_Write_String	;wreg free
  3121  0017C0                     
  3122                           ;fs_menu_controller.c: 386:         if (menu_flags.menu_start_flag == 1)
  3123  0017C0  0100               	movlb	0	; () banked
  3124  0017C2  A3FD               	btfss	_menu_flags& (0+255),1,b
  3125  0017C4  EFE6  F00B         	goto	u7431
  3126  0017C8  EFE8  F00B         	goto	u7430
  3127  0017CC                     u7431:
  3128  0017CC  EFFD  F00B         	goto	l5917
  3129  0017D0                     u7430:
  3130  0017D0                     
  3131                           ; BSR set to: 0
  3132                           ;fs_menu_controller.c: 387:         {;fs_menu_controller.c: 388:             menu_flags.
      +                          menu_start_flag = 0;
  3133  0017D0  93FD               	bcf	_menu_flags& (0+255),1,b
  3134  0017D2                     
  3135                           ; BSR set to: 0
  3136                           ;fs_menu_controller.c: 389:             menu_selected = START_MENU;
  3137  0017D2  0E05               	movlw	5
  3138  0017D4  0101               	movlb	1	; () banked
  3139  0017D6  6FBB               	movwf	_menu_selected& (0+255),b
  3140                           
  3141                           ;fs_menu_controller.c: 391:             startIsClick = 1;
  3142  0017D8  0E01               	movlw	1
  3143  0017DA  6FBD               	movwf	_startIsClick& (0+255),b
  3144                           
  3145                           ;fs_menu_controller.c: 392:             pauseIsClick = 0;
  3146  0017DC  0E00               	movlw	0
  3147  0017DE  0100               	movlb	0	; () banked
  3148  0017E0  6FFF               	movwf	_pauseIsClick& (0+255),b
  3149                           
  3150                           ;fs_menu_controller.c: 393:             stopIsClick = 0;
  3151  0017E2  0E00               	movlw	0
  3152  0017E4  0101               	movlb	1	; () banked
  3153  0017E6  6FBC               	movwf	_stopIsClick& (0+255),b
  3154                           
  3155                           ;fs_menu_controller.c: 394:             timer_value.second = 0;
  3156  0017E8  0E00               	movlw	0
  3157  0017EA  0100               	movlb	0	; () banked
  3158  0017EC  6FF4               	movwf	(_timer_value+1)& (0+255),b
  3159  0017EE  0E00               	movlw	0
  3160  0017F0  6FF3               	movwf	_timer_value& (0+255),b
  3161                           
  3162                           ;fs_menu_controller.c: 395:             timer_value.minute = 0;
  3163  0017F2  0E00               	movlw	0
  3164  0017F4  6FF6               	movwf	(_timer_value+3)& (0+255),b
  3165  0017F6  0E00               	movlw	0
  3166  0017F8  6FF5               	movwf	(_timer_value+2)& (0+255),b
  3167  0017FA                     l5917:
  3168                           
  3169                           ; BSR set to: 0
  3170                           ;fs_menu_controller.c: 398:         if ( timer_value.menu_login_delay == 100)
  3171  0017FA  0E64               	movlw	100
  3172  0017FC  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  3173  0017FE  A4D8               	btfss	status,2,c
  3174  001800  EF04  F00C         	goto	u7441
  3175  001804  EF06  F00C         	goto	u7440
  3176  001808                     u7441:
  3177  001808  EFB9  F00A         	goto	l5811
  3178  00180C                     u7440:
  3179  00180C                     
  3180                           ; BSR set to: 0
  3181                           ;fs_menu_controller.c: 399:         {;fs_menu_controller.c: 400:             timer_value
      +                          .menu_login_delay = 0;
  3182  00180C  0E00               	movlw	0
  3183  00180E  6FFB               	movwf	(_timer_value+8)& (0+255),b
  3184                           
  3185                           ;fs_menu_controller.c: 401:             menu_selected = DRIVER_TIME_SETTING;
  3186  001810  0E01               	movlw	1
  3187  001812  0101               	movlb	1	; () banked
  3188  001814  6FBB               	movwf	_menu_selected& (0+255),b
  3189  001816  EFB9  F00A         	goto	l5811
  3190  00181A                     l366:
  3191                           
  3192                           ; BSR set to: 0
  3193                           ;fs_menu_controller.c: 409:             timer_value.remainingMinute = menu_value.driver_
      +                          time;
  3194  00181A  C1AF  F0F9         	movff	_menu_value,_timer_value+6
  3195  00181E  6BFA               	clrf	(_timer_value+7)& (0+255),b
  3196  001820                     
  3197                           ; BSR set to: 0
  3198                           ;fs_menu_controller.c: 410:             timer_value.remainingSecond = 0;
  3199  001820  0E00               	movlw	0
  3200  001822  6FF8               	movwf	(_timer_value+5)& (0+255),b
  3201  001824  0E00               	movlw	0
  3202  001826  6FF7               	movwf	(_timer_value+4)& (0+255),b
  3203                           
  3204                           ;fs_menu_controller.c: 411:             startIsClick = 1;
  3205  001828  0E01               	movlw	1
  3206  00182A  0101               	movlb	1	; () banked
  3207  00182C  6FBD               	movwf	_startIsClick& (0+255),b
  3208                           
  3209                           ;fs_menu_controller.c: 412:             stopIsClick = 0;
  3210  00182E  0E00               	movlw	0
  3211  001830  6FBC               	movwf	_stopIsClick& (0+255),b
  3212                           
  3213                           ;fs_menu_controller.c: 413:             menu_selected = MAIN_MENU;
  3214  001832  0E00               	movlw	0
  3215  001834  6FBB               	movwf	_menu_selected& (0+255),b
  3216                           
  3217                           ;fs_menu_controller.c: 414:         break;
  3218  001836  EF40  F00E         	goto	l383
  3219  00183A                     l5925:
  3220                           
  3221                           ; BSR set to: 0
  3222                           ;fs_menu_controller.c: 421:             Lcd_Set_Cursor(1,1);
  3223  00183A  0E01               	movlw	1
  3224  00183C  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3225  00183E  0E01               	movlw	1
  3226  001840  EC16  F02B         	call	_Lcd_Set_Cursor
  3227  001844                     
  3228                           ;fs_menu_controller.c: 422:             Lcd_Write_String("HAREKET DURDU   ");
  3229  001844  0E57               	movlw	low STR_11
  3230  001846  6E05               	movwf	Lcd_Write_String@a^0,c
  3231  001848  0E06               	movlw	high STR_11
  3232  00184A  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3233  00184C  ECBC  F029         	call	_Lcd_Write_String	;wreg free
  3234  001850                     
  3235                           ;fs_menu_controller.c: 423:             Lcd_Set_Cursor(2,1);
  3236  001850  0E01               	movlw	1
  3237  001852  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3238  001854  0E02               	movlw	2
  3239  001856  EC16  F02B         	call	_Lcd_Set_Cursor
  3240  00185A                     
  3241                           ;fs_menu_controller.c: 424:             sprintf(textCursor2,"      %d:%d    ",timer_valu
      +                          e.remainingMinute,timer_value.remainingSecond);
  3242  00185A  0EE3               	movlw	low stateMachine@textCursor2
  3243  00185C  0100               	movlb	0	; () banked
  3244  00185E  6FCF               	movwf	sprintf@s& (0+255),b
  3245  001860  0E00               	movlw	high stateMachine@textCursor2
  3246  001862  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3247  001864  0E8A               	movlw	low STR_10
  3248  001866  6FD1               	movwf	sprintf@fmt& (0+255),b
  3249  001868  0E06               	movlw	high STR_10
  3250  00186A  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3251  00186C  C0F9  F0D3         	movff	_timer_value+6,?_sprintf+4
  3252  001870  C0FA  F0D4         	movff	_timer_value+7,?_sprintf+5
  3253  001874  C0F7  F0D5         	movff	_timer_value+4,?_sprintf+6
  3254  001878  C0F8  F0D6         	movff	_timer_value+5,?_sprintf+7
  3255  00187C  ECFE  F02B         	call	_sprintf	;wreg free
  3256  001880                     
  3257                           ;fs_menu_controller.c: 425:             Lcd_Write_String(textCursor2);
  3258  001880  0EE3               	movlw	low stateMachine@textCursor2
  3259  001882  6E05               	movwf	Lcd_Write_String@a^0,c
  3260  001884  0E00               	movlw	high stateMachine@textCursor2
  3261  001886  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3262  001888  ECBC  F029         	call	_Lcd_Write_String	;wreg free
  3263  00188C                     
  3264                           ;fs_menu_controller.c: 427:             if (menu_flags.menu_start_flag == 1)
  3265  00188C  0100               	movlb	0	; () banked
  3266  00188E  A3FD               	btfss	_menu_flags& (0+255),1,b
  3267  001890  EF4C  F00C         	goto	u7451
  3268  001894  EF4E  F00C         	goto	u7450
  3269  001898                     u7451:
  3270  001898  EF5A  F00C         	goto	l368
  3271  00189C                     u7450:
  3272  00189C                     
  3273                           ; BSR set to: 0
  3274                           ;fs_menu_controller.c: 428:             {;fs_menu_controller.c: 429:                 men
      +                          u_flags.menu_start_flag = 0;
  3275  00189C  93FD               	bcf	_menu_flags& (0+255),1,b
  3276  00189E                     
  3277                           ; BSR set to: 0
  3278                           ;fs_menu_controller.c: 430:                 menu_selected = MAIN_MENU;
  3279  00189E  0E00               	movlw	0
  3280  0018A0  0101               	movlb	1	; () banked
  3281  0018A2  6FBB               	movwf	_menu_selected& (0+255),b
  3282                           
  3283                           ;fs_menu_controller.c: 432:                 startIsClick = 1;
  3284  0018A4  0E01               	movlw	1
  3285  0018A6  6FBD               	movwf	_startIsClick& (0+255),b
  3286                           
  3287                           ;fs_menu_controller.c: 433:                 pauseIsClick = 0;
  3288  0018A8  0E00               	movlw	0
  3289  0018AA  0100               	movlb	0	; () banked
  3290  0018AC  6FFF               	movwf	_pauseIsClick& (0+255),b
  3291                           
  3292                           ;fs_menu_controller.c: 434:                 stopIsClick = 0;
  3293  0018AE  0E00               	movlw	0
  3294  0018B0  0101               	movlb	1	; () banked
  3295  0018B2  6FBC               	movwf	_stopIsClick& (0+255),b
  3296  0018B4                     l368:
  3297                           
  3298                           ;fs_menu_controller.c: 437:             if ( (startIsClick == 0) && (pauseIsClick == 0) 
      +                          && (stopIsClick == 1) && (menu_selected == PAUSE_MENU))
  3299  0018B4  0101               	movlb	1	; () banked
  3300  0018B6  51BD               	movf	_startIsClick& (0+255),w,b
  3301  0018B8  A4D8               	btfss	status,2,c
  3302  0018BA  EF61  F00C         	goto	u7461
  3303  0018BE  EF63  F00C         	goto	u7460
  3304  0018C2                     u7461:
  3305  0018C2  EF8E  F00C         	goto	l5951
  3306  0018C6                     u7460:
  3307  0018C6                     
  3308                           ; BSR set to: 1
  3309  0018C6  0100               	movlb	0	; () banked
  3310  0018C8  51FF               	movf	_pauseIsClick& (0+255),w,b
  3311  0018CA  A4D8               	btfss	status,2,c
  3312  0018CC  EF6A  F00C         	goto	u7471
  3313  0018D0  EF6C  F00C         	goto	u7470
  3314  0018D4                     u7471:
  3315  0018D4  EF8E  F00C         	goto	l5951
  3316  0018D8                     u7470:
  3317  0018D8                     
  3318                           ; BSR set to: 0
  3319  0018D8  0101               	movlb	1	; () banked
  3320  0018DA  05BC               	decf	_stopIsClick& (0+255),w,b
  3321  0018DC  A4D8               	btfss	status,2,c
  3322  0018DE  EF73  F00C         	goto	u7481
  3323  0018E2  EF75  F00C         	goto	u7480
  3324  0018E6                     u7481:
  3325  0018E6  EF8E  F00C         	goto	l5951
  3326  0018EA                     u7480:
  3327  0018EA                     
  3328                           ; BSR set to: 1
  3329  0018EA  0E06               	movlw	6
  3330  0018EC  19BB               	xorwf	_menu_selected& (0+255),w,b
  3331  0018EE  A4D8               	btfss	status,2,c
  3332  0018F0  EF7C  F00C         	goto	u7491
  3333  0018F4  EF7E  F00C         	goto	u7490
  3334  0018F8                     u7491:
  3335  0018F8  EF8E  F00C         	goto	l5951
  3336  0018FC                     u7490:
  3337  0018FC                     
  3338                           ; BSR set to: 1
  3339                           ;fs_menu_controller.c: 438:             {;fs_menu_controller.c: 439:                  ti
      +                          mer_value.remainingMinute = menu_value.driver_time;
  3340  0018FC  C1AF  F0F9         	movff	_menu_value,_timer_value+6
  3341  001900  0100               	movlb	0	; () banked
  3342  001902  6BFA               	clrf	(_timer_value+7)& (0+255),b
  3343  001904                     
  3344                           ; BSR set to: 0
  3345                           ;fs_menu_controller.c: 440:                  timer_value.remainingSecond = 0;
  3346  001904  0E00               	movlw	0
  3347  001906  6FF8               	movwf	(_timer_value+5)& (0+255),b
  3348  001908  0E00               	movlw	0
  3349  00190A  6FF7               	movwf	(_timer_value+4)& (0+255),b
  3350                           
  3351                           ;fs_menu_controller.c: 441:                  timer_value.second = 0;
  3352  00190C  0E00               	movlw	0
  3353  00190E  6FF4               	movwf	(_timer_value+1)& (0+255),b
  3354  001910  0E00               	movlw	0
  3355  001912  6FF3               	movwf	_timer_value& (0+255),b
  3356                           
  3357                           ;fs_menu_controller.c: 442:                  timer_value.minute = 0;
  3358  001914  0E00               	movlw	0
  3359  001916  6FF6               	movwf	(_timer_value+3)& (0+255),b
  3360  001918  0E00               	movlw	0
  3361  00191A  6FF5               	movwf	(_timer_value+2)& (0+255),b
  3362  00191C                     l5951:
  3363                           
  3364                           ;fs_menu_controller.c: 446:             if ( timer_value.menu_login_delay == 100)
  3365  00191C  0E64               	movlw	100
  3366  00191E  0100               	movlb	0	; () banked
  3367  001920  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  3368  001922  A4D8               	btfss	status,2,c
  3369  001924  EF96  F00C         	goto	u7501
  3370  001928  EF98  F00C         	goto	u7500
  3371  00192C                     u7501:
  3372  00192C  EF9D  F00C         	goto	l5955
  3373  001930                     u7500:
  3374  001930                     
  3375                           ; BSR set to: 0
  3376                           ;fs_menu_controller.c: 447:             {;fs_menu_controller.c: 448:                 tim
      +                          er_value.menu_login_delay = 0;
  3377  001930  0E00               	movlw	0
  3378  001932  6FFB               	movwf	(_timer_value+8)& (0+255),b
  3379                           
  3380                           ;fs_menu_controller.c: 449:                 menu_selected = DRIVER_TIME_SETTING;
  3381  001934  0E01               	movlw	1
  3382  001936  0101               	movlb	1	; () banked
  3383  001938  6FBB               	movwf	_menu_selected& (0+255),b
  3384  00193A                     l5955:
  3385                           
  3386                           ;fs_menu_controller.c: 452:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_flags.menu_decrease_flag == 1))
  3387  00193A  0100               	movlb	0	; () banked
  3388  00193C  A9FD               	btfss	_menu_flags& (0+255),4,b
  3389  00193E  EFA3  F00C         	goto	u7511
  3390  001942  EFA5  F00C         	goto	u7510
  3391  001946                     u7511:
  3392  001946  EFB9  F00A         	goto	l5811
  3393  00194A                     u7510:
  3394  00194A                     
  3395                           ; BSR set to: 0
  3396  00194A  ABFD               	btfss	_menu_flags& (0+255),5,b
  3397  00194C  EFAA  F00C         	goto	u7521
  3398  001950  EFAC  F00C         	goto	u7520
  3399  001954                     u7521:
  3400  001954  EFB9  F00A         	goto	l5811
  3401  001958                     u7520:
  3402  001958                     
  3403                           ; BSR set to: 0
  3404                           ;fs_menu_controller.c: 453:             {;fs_menu_controller.c: 454:                 men
      +                          u_selected = SECRET_MENU;
  3405  001958  0E08               	movlw	8
  3406  00195A  0101               	movlb	1	; () banked
  3407  00195C  6FBB               	movwf	_menu_selected& (0+255),b
  3408                           
  3409                           ;fs_menu_controller.c: 455:                 secretMenuCounter = 1;
  3410  00195E  0E01               	movlw	1
  3411  001960  6FBA               	movwf	stateMachine@secretMenuCounter& (0+255),b
  3412  001962  EFB9  F00A         	goto	l5811
  3413  001966                     l5963:
  3414                           
  3415                           ; BSR set to: 0
  3416                           ;fs_menu_controller.c: 468:             stopMotor();
  3417  001966  ECF5  F02C         	call	_stopMotor	;wreg free
  3418  00196A                     
  3419                           ;fs_menu_controller.c: 470:             if (menu_flags.menu_input_flag == 1)
  3420  00196A  0100               	movlb	0	; () banked
  3421  00196C  A1FD               	btfss	_menu_flags& (0+255),0,b
  3422  00196E  EFBB  F00C         	goto	u7531
  3423  001972  EFBD  F00C         	goto	u7530
  3424  001976                     u7531:
  3425  001976  EFCA  F00C         	goto	l5975
  3426  00197A                     u7530:
  3427  00197A                     
  3428                           ; BSR set to: 0
  3429                           ;fs_menu_controller.c: 471:             {;fs_menu_controller.c: 472:                 men
      +                          u_flags.menu_input_flag = 0;
  3430  00197A  91FD               	bcf	_menu_flags& (0+255),0,b
  3431  00197C                     
  3432                           ; BSR set to: 0
  3433                           ;fs_menu_controller.c: 473:                 secretMenuCounter++;
  3434  00197C  0101               	movlb	1	; () banked
  3435  00197E  2BBA               	incf	stateMachine@secretMenuCounter& (0+255),f,b
  3436  001980                     
  3437                           ; BSR set to: 1
  3438                           ;fs_menu_controller.c: 475:                 if (secretMenuCounter >2)
  3439  001980  0E02               	movlw	2
  3440  001982  65BA               	cpfsgt	stateMachine@secretMenuCounter& (0+255),b
  3441  001984  EFC6  F00C         	goto	u7541
  3442  001988  EFC8  F00C         	goto	u7540
  3443  00198C                     u7541:
  3444  00198C  EFCA  F00C         	goto	l5975
  3445  001990                     u7540:
  3446  001990                     
  3447                           ; BSR set to: 1
  3448                           ;fs_menu_controller.c: 476:                 {;fs_menu_controller.c: 477:                
      +                               secretMenuCounter = 1;
  3449  001990  0E01               	movlw	1
  3450  001992  6FBA               	movwf	stateMachine@secretMenuCounter& (0+255),b
  3451  001994                     l5975:
  3452                           
  3453                           ;fs_menu_controller.c: 481:             if (secretMenuCounter == 1)
  3454  001994  0101               	movlb	1	; () banked
  3455  001996  05BA               	decf	stateMachine@secretMenuCounter& (0+255),w,b
  3456  001998  A4D8               	btfss	status,2,c
  3457  00199A  EFD1  F00C         	goto	u7551
  3458  00199E  EFD3  F00C         	goto	u7550
  3459  0019A2                     u7551:
  3460  0019A2  EF65  F00D         	goto	l6003
  3461  0019A6                     u7550:
  3462  0019A6                     
  3463                           ; BSR set to: 1
  3464                           ;fs_menu_controller.c: 482:             {;fs_menu_controller.c: 483:                 Lcd
      +                          _Set_Cursor(1,1);
  3465  0019A6  0E01               	movlw	1
  3466  0019A8  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3467  0019AA  0E01               	movlw	1
  3468  0019AC  EC16  F02B         	call	_Lcd_Set_Cursor
  3469  0019B0                     
  3470                           ;fs_menu_controller.c: 484:                 Lcd_Write_String("PID PARAM       ");
  3471  0019B0  0E13               	movlw	low STR_13
  3472  0019B2  6E05               	movwf	Lcd_Write_String@a^0,c
  3473  0019B4  0E06               	movlw	high STR_13
  3474  0019B6  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3475  0019B8  ECBC  F029         	call	_Lcd_Write_String	;wreg free
  3476  0019BC                     
  3477                           ;fs_menu_controller.c: 485:                 Lcd_Set_Cursor(2,1);
  3478  0019BC  0E01               	movlw	1
  3479  0019BE  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3480  0019C0  0E02               	movlw	2
  3481  0019C2  EC16  F02B         	call	_Lcd_Set_Cursor
  3482  0019C6                     
  3483                           ;fs_menu_controller.c: 486:                 sprintf(textCursor2,"Kp:%5.1f     ",KP);
  3484  0019C6  0EE3               	movlw	low stateMachine@textCursor2
  3485  0019C8  0100               	movlb	0	; () banked
  3486  0019CA  6FCF               	movwf	sprintf@s& (0+255),b
  3487  0019CC  0E00               	movlw	high stateMachine@textCursor2
  3488  0019CE  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3489  0019D0  0EA9               	movlw	low STR_14
  3490  0019D2  6FD1               	movwf	sprintf@fmt& (0+255),b
  3491  0019D4  0E06               	movlw	high STR_14
  3492  0019D6  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3493  0019D8  C1CB  F0D3         	movff	_KP@fs_speed_controller$F1598,?_sprintf+4
  3494  0019DC  C1CC  F0D4         	movff	_KP@fs_speed_controller$F1598+1,?_sprintf+5
  3495  0019E0  C1CD  F0D5         	movff	_KP@fs_speed_controller$F1598+2,?_sprintf+6
  3496  0019E4  C1CE  F0D6         	movff	_KP@fs_speed_controller$F1598+3,?_sprintf+7
  3497  0019E8  ECFE  F02B         	call	_sprintf	;wreg free
  3498  0019EC                     
  3499                           ;fs_menu_controller.c: 487:                 Lcd_Write_String(textCursor2);
  3500  0019EC  0EE3               	movlw	low stateMachine@textCursor2
  3501  0019EE  6E05               	movwf	Lcd_Write_String@a^0,c
  3502  0019F0  0E00               	movlw	high stateMachine@textCursor2
  3503  0019F2  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3504  0019F4  ECBC  F029         	call	_Lcd_Write_String	;wreg free
  3505  0019F8                     
  3506                           ;fs_menu_controller.c: 489:                 if ((menu_flags.menu_increase_flag == 1) && 
      +                          (KP < 2.5))
  3507  0019F8  0100               	movlb	0	; () banked
  3508  0019FA  A9FD               	btfss	_menu_flags& (0+255),4,b
  3509  0019FC  EF02  F00D         	goto	u7561
  3510  001A00  EF04  F00D         	goto	u7560
  3511  001A04                     u7561:
  3512  001A04  EF39  F00D         	goto	l5995
  3513  001A08                     u7560:
  3514  001A08                     
  3515                           ; BSR set to: 0
  3516  001A08  C1CB  F035         	movff	_KP@fs_speed_controller$F1598,___flge@ff1
  3517  001A0C  C1CC  F036         	movff	_KP@fs_speed_controller$F1598+1,___flge@ff1+1
  3518  001A10  C1CD  F037         	movff	_KP@fs_speed_controller$F1598+2,___flge@ff1+2
  3519  001A14  C1CE  F038         	movff	_KP@fs_speed_controller$F1598+3,___flge@ff1+3
  3520  001A18  0E00               	movlw	0
  3521  001A1A  6E39               	movwf	___flge@ff2^0,c
  3522  001A1C  0E00               	movlw	0
  3523  001A1E  6E3A               	movwf	(___flge@ff2+1)^0,c
  3524  001A20  0E20               	movlw	32
  3525  001A22  6E3B               	movwf	(___flge@ff2+2)^0,c
  3526  001A24  0E40               	movlw	64
  3527  001A26  6E3C               	movwf	(___flge@ff2+3)^0,c
  3528  001A28  EC5F  F025         	call	___flge	;wreg free
  3529  001A2C  B0D8               	btfsc	status,0,c
  3530  001A2E  EF1B  F00D         	goto	u7571
  3531  001A32  EF1D  F00D         	goto	u7570
  3532  001A36                     u7571:
  3533  001A36  EF39  F00D         	goto	l5995
  3534  001A3A                     u7570:
  3535  001A3A                     
  3536                           ;fs_menu_controller.c: 490:                 {;fs_menu_controller.c: 491:                
      +                               menu_flags.menu_increase_flag = 0;
  3537  001A3A  0100               	movlb	0	; () banked
  3538  001A3C  99FD               	bcf	_menu_flags& (0+255),4,b
  3539  001A3E                     
  3540                           ; BSR set to: 0
  3541                           ;fs_menu_controller.c: 492:                     KP += 0.1;
  3542  001A3E  C1CB  F035         	movff	_KP@fs_speed_controller$F1598,___fladd@b
  3543  001A42  C1CC  F036         	movff	_KP@fs_speed_controller$F1598+1,___fladd@b+1
  3544  001A46  C1CD  F037         	movff	_KP@fs_speed_controller$F1598+2,___fladd@b+2
  3545  001A4A  C1CE  F038         	movff	_KP@fs_speed_controller$F1598+3,___fladd@b+3
  3546  001A4E  0ECD               	movlw	205
  3547  001A50  6E39               	movwf	___fladd@a^0,c
  3548  001A52  0ECC               	movlw	204
  3549  001A54  6E3A               	movwf	(___fladd@a+1)^0,c
  3550  001A56  0ECC               	movlw	204
  3551  001A58  6E3B               	movwf	(___fladd@a+2)^0,c
  3552  001A5A  0E3D               	movlw	61
  3553  001A5C  6E3C               	movwf	(___fladd@a+3)^0,c
  3554  001A5E  EC5F  F015         	call	___fladd	;wreg free
  3555  001A62  C035  F1CB         	movff	?___fladd,_KP@fs_speed_controller$F1598
  3556  001A66  C036  F1CC         	movff	?___fladd+1,_KP@fs_speed_controller$F1598+1
  3557  001A6A  C037  F1CD         	movff	?___fladd+2,_KP@fs_speed_controller$F1598+2
  3558  001A6E  C038  F1CE         	movff	?___fladd+3,_KP@fs_speed_controller$F1598+3
  3559  001A72                     l5995:
  3560                           
  3561                           ;fs_menu_controller.c: 495:                 if ((menu_flags.menu_decrease_flag == 1) && 
      +                          (KP >= 0))
  3562  001A72  0100               	movlb	0	; () banked
  3563  001A74  ABFD               	btfss	_menu_flags& (0+255),5,b
  3564  001A76  EF3F  F00D         	goto	u7581
  3565  001A7A  EF41  F00D         	goto	u7580
  3566  001A7E                     u7581:
  3567  001A7E  EF65  F00D         	goto	l6003
  3568  001A82                     u7580:
  3569  001A82                     
  3570                           ; BSR set to: 0
  3571  001A82  0101               	movlb	1	; () banked
  3572  001A84  BFCE               	btfsc	(_KP@fs_speed_controller$F1598+3)& (0+255),7,b
  3573  001A86  EF47  F00D         	goto	u7591
  3574  001A8A  EF49  F00D         	goto	u7590
  3575  001A8E                     u7591:
  3576  001A8E  EF65  F00D         	goto	l6003
  3577  001A92                     u7590:
  3578  001A92                     
  3579                           ; BSR set to: 1
  3580                           ;fs_menu_controller.c: 496:                 {;fs_menu_controller.c: 497:                
      +                               menu_flags.menu_decrease_flag = 0;
  3581  001A92  0100               	movlb	0	; () banked
  3582  001A94  9BFD               	bcf	_menu_flags& (0+255),5,b
  3583  001A96                     
  3584                           ; BSR set to: 0
  3585                           ;fs_menu_controller.c: 498:                      KP -= 0.1;
  3586  001A96  C1CB  F045         	movff	_KP@fs_speed_controller$F1598,___flsub@b
  3587  001A9A  C1CC  F046         	movff	_KP@fs_speed_controller$F1598+1,___flsub@b+1
  3588  001A9E  C1CD  F047         	movff	_KP@fs_speed_controller$F1598+2,___flsub@b+2
  3589  001AA2  C1CE  F048         	movff	_KP@fs_speed_controller$F1598+3,___flsub@b+3
  3590  001AA6  0ECD               	movlw	205
  3591  001AA8  6E49               	movwf	___flsub@a^0,c
  3592  001AAA  0ECC               	movlw	204
  3593  001AAC  6E4A               	movwf	(___flsub@a+1)^0,c
  3594  001AAE  0ECC               	movlw	204
  3595  001AB0  6E4B               	movwf	(___flsub@a+2)^0,c
  3596  001AB2  0E3D               	movlw	61
  3597  001AB4  6E4C               	movwf	(___flsub@a+3)^0,c
  3598  001AB6  EC50  F02C         	call	___flsub	;wreg free
  3599  001ABA  C045  F1CB         	movff	?___flsub,_KP@fs_speed_controller$F1598
  3600  001ABE  C046  F1CC         	movff	?___flsub+1,_KP@fs_speed_controller$F1598+1
  3601  001AC2  C047  F1CD         	movff	?___flsub+2,_KP@fs_speed_controller$F1598+2
  3602  001AC6  C048  F1CE         	movff	?___flsub+3,_KP@fs_speed_controller$F1598+3
  3603  001ACA                     l6003:
  3604                           
  3605                           ;fs_menu_controller.c: 502:             if (secretMenuCounter == 2)
  3606  001ACA  0E02               	movlw	2
  3607  001ACC  0101               	movlb	1	; () banked
  3608  001ACE  19BA               	xorwf	stateMachine@secretMenuCounter& (0+255),w,b
  3609  001AD0  A4D8               	btfss	status,2,c
  3610  001AD2  EF6D  F00D         	goto	u7601
  3611  001AD6  EF6F  F00D         	goto	u7600
  3612  001ADA                     u7601:
  3613  001ADA  EF01  F00E         	goto	l6031
  3614  001ADE                     u7600:
  3615  001ADE                     
  3616                           ; BSR set to: 1
  3617                           ;fs_menu_controller.c: 503:             {;fs_menu_controller.c: 504:                 Lcd
      +                          _Set_Cursor(1,1);
  3618  001ADE  0E01               	movlw	1
  3619  001AE0  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3620  001AE2  0E01               	movlw	1
  3621  001AE4  EC16  F02B         	call	_Lcd_Set_Cursor
  3622  001AE8                     
  3623                           ;fs_menu_controller.c: 505:                 Lcd_Write_String("PID PARAM       ");
  3624  001AE8  0E13               	movlw	low STR_13
  3625  001AEA  6E05               	movwf	Lcd_Write_String@a^0,c
  3626  001AEC  0E06               	movlw	high STR_13
  3627  001AEE  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3628  001AF0  ECBC  F029         	call	_Lcd_Write_String	;wreg free
  3629  001AF4                     
  3630                           ;fs_menu_controller.c: 506:                 Lcd_Set_Cursor(2,1);
  3631  001AF4  0E01               	movlw	1
  3632  001AF6  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3633  001AF8  0E02               	movlw	2
  3634  001AFA  EC16  F02B         	call	_Lcd_Set_Cursor
  3635  001AFE                     
  3636                           ;fs_menu_controller.c: 507:                 sprintf(textCursor2,"Kd:%5.1f    ",KD);
  3637  001AFE  0EE3               	movlw	low stateMachine@textCursor2
  3638  001B00  0100               	movlb	0	; () banked
  3639  001B02  6FCF               	movwf	sprintf@s& (0+255),b
  3640  001B04  0E00               	movlw	high stateMachine@textCursor2
  3641  001B06  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3642  001B08  0EB7               	movlw	low STR_16
  3643  001B0A  6FD1               	movwf	sprintf@fmt& (0+255),b
  3644  001B0C  0E06               	movlw	high STR_16
  3645  001B0E  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3646  001B10  C1C7  F0D3         	movff	_KD@fs_speed_controller$F1599,?_sprintf+4
  3647  001B14  C1C8  F0D4         	movff	_KD@fs_speed_controller$F1599+1,?_sprintf+5
  3648  001B18  C1C9  F0D5         	movff	_KD@fs_speed_controller$F1599+2,?_sprintf+6
  3649  001B1C  C1CA  F0D6         	movff	_KD@fs_speed_controller$F1599+3,?_sprintf+7
  3650  001B20  ECFE  F02B         	call	_sprintf	;wreg free
  3651  001B24                     
  3652                           ;fs_menu_controller.c: 508:                 Lcd_Write_String(textCursor2);
  3653  001B24  0EE3               	movlw	low stateMachine@textCursor2
  3654  001B26  6E05               	movwf	Lcd_Write_String@a^0,c
  3655  001B28  0E00               	movlw	high stateMachine@textCursor2
  3656  001B2A  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3657  001B2C  ECBC  F029         	call	_Lcd_Write_String	;wreg free
  3658  001B30                     
  3659                           ;fs_menu_controller.c: 510:                 if ((menu_flags.menu_increase_flag == 1) && 
      +                          (KD < 2.5))
  3660  001B30  0100               	movlb	0	; () banked
  3661  001B32  A9FD               	btfss	_menu_flags& (0+255),4,b
  3662  001B34  EF9E  F00D         	goto	u7611
  3663  001B38  EFA0  F00D         	goto	u7610
  3664  001B3C                     u7611:
  3665  001B3C  EFD5  F00D         	goto	l6023
  3666  001B40                     u7610:
  3667  001B40                     
  3668                           ; BSR set to: 0
  3669  001B40  C1C7  F035         	movff	_KD@fs_speed_controller$F1599,___flge@ff1
  3670  001B44  C1C8  F036         	movff	_KD@fs_speed_controller$F1599+1,___flge@ff1+1
  3671  001B48  C1C9  F037         	movff	_KD@fs_speed_controller$F1599+2,___flge@ff1+2
  3672  001B4C  C1CA  F038         	movff	_KD@fs_speed_controller$F1599+3,___flge@ff1+3
  3673  001B50  0E00               	movlw	0
  3674  001B52  6E39               	movwf	___flge@ff2^0,c
  3675  001B54  0E00               	movlw	0
  3676  001B56  6E3A               	movwf	(___flge@ff2+1)^0,c
  3677  001B58  0E20               	movlw	32
  3678  001B5A  6E3B               	movwf	(___flge@ff2+2)^0,c
  3679  001B5C  0E40               	movlw	64
  3680  001B5E  6E3C               	movwf	(___flge@ff2+3)^0,c
  3681  001B60  EC5F  F025         	call	___flge	;wreg free
  3682  001B64  B0D8               	btfsc	status,0,c
  3683  001B66  EFB7  F00D         	goto	u7621
  3684  001B6A  EFB9  F00D         	goto	u7620
  3685  001B6E                     u7621:
  3686  001B6E  EFD5  F00D         	goto	l6023
  3687  001B72                     u7620:
  3688  001B72                     
  3689                           ;fs_menu_controller.c: 511:                 {;fs_menu_controller.c: 512:                
      +                               menu_flags.menu_increase_flag = 0;
  3690  001B72  0100               	movlb	0	; () banked
  3691  001B74  99FD               	bcf	_menu_flags& (0+255),4,b
  3692  001B76                     
  3693                           ; BSR set to: 0
  3694                           ;fs_menu_controller.c: 513:                     KD += 0.1;
  3695  001B76  C1C7  F035         	movff	_KD@fs_speed_controller$F1599,___fladd@b
  3696  001B7A  C1C8  F036         	movff	_KD@fs_speed_controller$F1599+1,___fladd@b+1
  3697  001B7E  C1C9  F037         	movff	_KD@fs_speed_controller$F1599+2,___fladd@b+2
  3698  001B82  C1CA  F038         	movff	_KD@fs_speed_controller$F1599+3,___fladd@b+3
  3699  001B86  0ECD               	movlw	205
  3700  001B88  6E39               	movwf	___fladd@a^0,c
  3701  001B8A  0ECC               	movlw	204
  3702  001B8C  6E3A               	movwf	(___fladd@a+1)^0,c
  3703  001B8E  0ECC               	movlw	204
  3704  001B90  6E3B               	movwf	(___fladd@a+2)^0,c
  3705  001B92  0E3D               	movlw	61
  3706  001B94  6E3C               	movwf	(___fladd@a+3)^0,c
  3707  001B96  EC5F  F015         	call	___fladd	;wreg free
  3708  001B9A  C035  F1C7         	movff	?___fladd,_KD@fs_speed_controller$F1599
  3709  001B9E  C036  F1C8         	movff	?___fladd+1,_KD@fs_speed_controller$F1599+1
  3710  001BA2  C037  F1C9         	movff	?___fladd+2,_KD@fs_speed_controller$F1599+2
  3711  001BA6  C038  F1CA         	movff	?___fladd+3,_KD@fs_speed_controller$F1599+3
  3712  001BAA                     l6023:
  3713                           
  3714                           ;fs_menu_controller.c: 516:                 if ((menu_flags.menu_decrease_flag == 1) && 
      +                          (KD >= 0))
  3715  001BAA  0100               	movlb	0	; () banked
  3716  001BAC  ABFD               	btfss	_menu_flags& (0+255),5,b
  3717  001BAE  EFDB  F00D         	goto	u7631
  3718  001BB2  EFDD  F00D         	goto	u7630
  3719  001BB6                     u7631:
  3720  001BB6  EF01  F00E         	goto	l6031
  3721  001BBA                     u7630:
  3722  001BBA                     
  3723                           ; BSR set to: 0
  3724  001BBA  0101               	movlb	1	; () banked
  3725  001BBC  BFCA               	btfsc	(_KD@fs_speed_controller$F1599+3)& (0+255),7,b
  3726  001BBE  EFE3  F00D         	goto	u7641
  3727  001BC2  EFE5  F00D         	goto	u7640
  3728  001BC6                     u7641:
  3729  001BC6  EF01  F00E         	goto	l6031
  3730  001BCA                     u7640:
  3731  001BCA                     
  3732                           ; BSR set to: 1
  3733                           ;fs_menu_controller.c: 517:                 {;fs_menu_controller.c: 518:                
      +                               menu_flags.menu_decrease_flag = 0;
  3734  001BCA  0100               	movlb	0	; () banked
  3735  001BCC  9BFD               	bcf	_menu_flags& (0+255),5,b
  3736  001BCE                     
  3737                           ; BSR set to: 0
  3738                           ;fs_menu_controller.c: 519:                      KD -= 0.1;
  3739  001BCE  C1C7  F045         	movff	_KD@fs_speed_controller$F1599,___flsub@b
  3740  001BD2  C1C8  F046         	movff	_KD@fs_speed_controller$F1599+1,___flsub@b+1
  3741  001BD6  C1C9  F047         	movff	_KD@fs_speed_controller$F1599+2,___flsub@b+2
  3742  001BDA  C1CA  F048         	movff	_KD@fs_speed_controller$F1599+3,___flsub@b+3
  3743  001BDE  0ECD               	movlw	205
  3744  001BE0  6E49               	movwf	___flsub@a^0,c
  3745  001BE2  0ECC               	movlw	204
  3746  001BE4  6E4A               	movwf	(___flsub@a+1)^0,c
  3747  001BE6  0ECC               	movlw	204
  3748  001BE8  6E4B               	movwf	(___flsub@a+2)^0,c
  3749  001BEA  0E3D               	movlw	61
  3750  001BEC  6E4C               	movwf	(___flsub@a+3)^0,c
  3751  001BEE  EC50  F02C         	call	___flsub	;wreg free
  3752  001BF2  C045  F1C7         	movff	?___flsub,_KD@fs_speed_controller$F1599
  3753  001BF6  C046  F1C8         	movff	?___flsub+1,_KD@fs_speed_controller$F1599+1
  3754  001BFA  C047  F1C9         	movff	?___flsub+2,_KD@fs_speed_controller$F1599+2
  3755  001BFE  C048  F1CA         	movff	?___flsub+3,_KD@fs_speed_controller$F1599+3
  3756  001C02                     l6031:
  3757                           
  3758                           ;fs_menu_controller.c: 523:             if ( timer_value.menu_login_delay == 100)
  3759  001C02  0E64               	movlw	100
  3760  001C04  0100               	movlb	0	; () banked
  3761  001C06  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  3762  001C08  A4D8               	btfss	status,2,c
  3763  001C0A  EF09  F00E         	goto	u7651
  3764  001C0E  EF0B  F00E         	goto	u7650
  3765  001C12                     u7651:
  3766  001C12  EF40  F00E         	goto	l383
  3767  001C16                     u7650:
  3768  001C16  EF2F  F00B         	goto	l5853
  3769  001C1A                     l6037:
  3770  001C1A  0101               	movlb	1	; () banked
  3771  001C1C  51BB               	movf	_menu_selected& (0+255),w,b
  3772  001C1E  0100               	movlb	0	; () banked
  3773  001C20  6FE1               	movwf	??_stateMachine& (0+255),b
  3774  001C22  6BE2               	clrf	(??_stateMachine+1)& (0+255),b
  3775                           
  3776                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3777                           ; Switch size 1, requested type "simple"
  3778                           ; Number of cases is 1, Range of values is 0 to 0
  3779                           ; switch strategies available:
  3780                           ; Name         Instructions Cycles
  3781                           ; simple_byte            4     3 (average)
  3782                           ;	Chosen strategy is simple_byte
  3783  001C24  51E2               	movf	(??_stateMachine+1)& (0+255),w,b
  3784  001C26  0A00               	xorlw	0	; case 0
  3785  001C28  B4D8               	btfsc	status,2,c
  3786  001C2A  EF19  F00E         	goto	l6277
  3787  001C2E  EF40  F00E         	goto	l383
  3788  001C32                     l6277:
  3789                           
  3790                           ; BSR set to: 0
  3791                           ; Switch size 1, requested type "simple"
  3792                           ; Number of cases is 9, Range of values is 0 to 8
  3793                           ; switch strategies available:
  3794                           ; Name         Instructions Cycles
  3795                           ; simple_byte           28    15 (average)
  3796                           ;	Chosen strategy is simple_byte
  3797  001C32  51E1               	movf	??_stateMachine& (0+255),w,b
  3798  001C34  0A00               	xorlw	0	; case 0
  3799  001C36  B4D8               	btfsc	status,2,c
  3800  001C38  EF57  F009         	goto	l5707
  3801  001C3C  0A01               	xorlw	1	; case 1
  3802  001C3E  B4D8               	btfsc	status,2,c
  3803  001C40  EF27  F00A         	goto	l348
  3804  001C44  0A03               	xorlw	3	; case 2
  3805  001C46  B4D8               	btfsc	status,2,c
  3806  001C48  EFBD  F00A         	goto	l5813
  3807  001C4C  0A01               	xorlw	1	; case 3
  3808  001C4E  B4D8               	btfsc	status,2,c
  3809  001C50  EF36  F00B         	goto	l358
  3810  001C54  0A07               	xorlw	7	; case 4
  3811  001C56  B4D8               	btfsc	status,2,c
  3812  001C58  EFA5  F00B         	goto	l5895
  3813  001C5C  0A01               	xorlw	1	; case 5
  3814  001C5E  B4D8               	btfsc	status,2,c
  3815  001C60  EF0D  F00C         	goto	l366
  3816  001C64  0A03               	xorlw	3	; case 6
  3817  001C66  B4D8               	btfsc	status,2,c
  3818  001C68  EF1D  F00C         	goto	l5925
  3819  001C6C  0A01               	xorlw	1	; case 7
  3820  001C6E  B4D8               	btfsc	status,2,c
  3821  001C70  EF40  F00E         	goto	l383
  3822  001C74  0A0F               	xorlw	15	; case 8
  3823  001C76  B4D8               	btfsc	status,2,c
  3824  001C78  EFB3  F00C         	goto	l5963
  3825  001C7C  EF40  F00E         	goto	l383
  3826  001C80                     l383:
  3827  001C80  0012               	return		;funcret
  3828  001C82                     __end_of_stateMachine:
  3829                           	callstack 0
  3830                           
  3831 ;; *************** function _stopMotor *****************
  3832 ;; Defined at:
  3833 ;;		line 79 in file "fs_speed_controller.c"
  3834 ;; Parameters:    Size  Location     Type
  3835 ;;		None
  3836 ;; Auto vars:     Size  Location     Type
  3837 ;;		None
  3838 ;; Return value:  Size  Location     Type
  3839 ;;                  1    wreg      void 
  3840 ;; Registers used:
  3841 ;;		wreg, status,2, status,0, cstack
  3842 ;; Tracked objects:
  3843 ;;		On entry : 0/0
  3844 ;;		On exit  : 0/0
  3845 ;;		Unchanged: 0/0
  3846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3847 ;;      Params:         0       0       0       0       0       0       0
  3848 ;;      Locals:         0       0       0       0       0       0       0
  3849 ;;      Temps:          0       0       0       0       0       0       0
  3850 ;;      Totals:         0       0       0       0       0       0       0
  3851 ;;Total ram usage:        0 bytes
  3852 ;; Hardware stack levels used:    1
  3853 ;; Hardware stack levels required when called:    3
  3854 ;; This function calls:
  3855 ;;		_PWM1_setDC
  3856 ;;		_PWM2_setDC
  3857 ;; This function is called by:
  3858 ;;		_stateMachine
  3859 ;; This function uses a non-reentrant model
  3860 ;;
  3861                           
  3862                           	psect	text7
  3863  0059EA                     __ptext7:
  3864                           	callstack 0
  3865  0059EA                     _stopMotor:
  3866                           	callstack 25
  3867  0059EA                     
  3868                           ;fs_speed_controller.c: 81:     controller.rightMotorSpeed = 0;
  3869  0059EA  0E00               	movlw	0
  3870  0059EC  0101               	movlb	1	; () banked
  3871  0059EE  6F59               	movwf	(_controller+9)& (0+255),b
  3872  0059F0  0E00               	movlw	0
  3873  0059F2  6F58               	movwf	(_controller+8)& (0+255),b
  3874                           
  3875                           ;fs_speed_controller.c: 82:     controller.leftMotorSpeed = 0;
  3876  0059F4  0E00               	movlw	0
  3877  0059F6  6F57               	movwf	(_controller+7)& (0+255),b
  3878  0059F8  0E00               	movlw	0
  3879  0059FA  6F56               	movwf	(_controller+6)& (0+255),b
  3880                           
  3881                           ;fs_speed_controller.c: 83:     driver_limit.ortalama = 0;
  3882  0059FC  0E00               	movlw	0
  3883  0059FE  6F9B               	movwf	(_driver_limit+8)& (0+255),b
  3884  005A00  0E00               	movlw	0
  3885  005A02  6F9C               	movwf	(_driver_limit+9)& (0+255),b
  3886  005A04  0E00               	movlw	0
  3887  005A06  6F9D               	movwf	(_driver_limit+10)& (0+255),b
  3888  005A08  0E00               	movlw	0
  3889  005A0A  6F9E               	movwf	(_driver_limit+11)& (0+255),b
  3890  005A0C                     
  3891                           ; BSR set to: 1
  3892                           ;fs_speed_controller.c: 84:     PWM1_setDC(controller.leftMotorSpeed);
  3893  005A0C  C156  F058         	movff	_controller+6,PWM1_setDC@dutycycle
  3894  005A10  C157  F059         	movff	_controller+7,PWM1_setDC@dutycycle+1
  3895  005A14  EC38  F02A         	call	_PWM1_setDC	;wreg free
  3896  005A18                     
  3897                           ;fs_speed_controller.c: 85:     PWM2_setDC(controller.rightMotorSpeed);
  3898  005A18  C158  F058         	movff	_controller+8,PWM2_setDC@dutycycle
  3899  005A1C  C159  F059         	movff	_controller+9,PWM2_setDC@dutycycle+1
  3900  005A20  ECFB  F029         	call	_PWM2_setDC	;wreg free
  3901  005A24  0012               	return		;funcret
  3902  005A26                     __end_of_stopMotor:
  3903                           	callstack 0
  3904                           
  3905 ;; *************** function _startMotor *****************
  3906 ;; Defined at:
  3907 ;;		line 95 in file "fs_speed_controller.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;		None
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;		None
  3912 ;; Return value:  Size  Location     Type
  3913 ;;                  1    wreg      void 
  3914 ;; Registers used:
  3915 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3921 ;;      Params:         0       0       0       0       0       0       0
  3922 ;;      Locals:         0       0       0       0       0       0       0
  3923 ;;      Temps:          0       0       0       0       0       0       0
  3924 ;;      Totals:         0       0       0       0       0       0       0
  3925 ;;Total ram usage:        0 bytes
  3926 ;; Hardware stack levels used:    1
  3927 ;; Hardware stack levels required when called:    3
  3928 ;; This function calls:
  3929 ;;		_PWM1_setDC
  3930 ;;		_PWM2_setDC
  3931 ;;		_calculatedAverageValue
  3932 ;;		_scanAdcConversion
  3933 ;;		_speedControl
  3934 ;; This function is called by:
  3935 ;;		_stateMachine
  3936 ;; This function uses a non-reentrant model
  3937 ;;
  3938                           
  3939                           	psect	text8
  3940  005ACE                     __ptext8:
  3941                           	callstack 0
  3942  005ACE                     _startMotor:
  3943                           	callstack 25
  3944  005ACE                     
  3945                           ;fs_speed_controller.c: 97:         scanAdcConversion();
  3946  005ACE  EC41  F00E         	call	_scanAdcConversion	;wreg free
  3947  005AD2                     
  3948                           ;fs_speed_controller.c: 98:         calculatedAverageValue();
  3949  005AD2  ECA1  F01B         	call	_calculatedAverageValue	;wreg free
  3950  005AD6                     
  3951                           ;fs_speed_controller.c: 99:         speedControl(driver_limit.ortalama);
  3952  005AD6  C19B  F058         	movff	_driver_limit+8,speedControl@position
  3953  005ADA  C19C  F059         	movff	_driver_limit+9,speedControl@position+1
  3954  005ADE  C19D  F05A         	movff	_driver_limit+10,speedControl@position+2
  3955  005AE2  C19E  F05B         	movff	_driver_limit+11,speedControl@position+3
  3956  005AE6  EC91  F01F         	call	_speedControl	;wreg free
  3957                           
  3958                           ;fs_speed_controller.c: 100:         PWM1_setDC(controller.leftMotorSpeed);
  3959  005AEA  C156  F058         	movff	_controller+6,PWM1_setDC@dutycycle
  3960  005AEE  C157  F059         	movff	_controller+7,PWM1_setDC@dutycycle+1
  3961  005AF2  EC38  F02A         	call	_PWM1_setDC	;wreg free
  3962                           
  3963                           ;fs_speed_controller.c: 101:         PWM2_setDC(controller.rightMotorSpeed);
  3964  005AF6  C158  F058         	movff	_controller+8,PWM2_setDC@dutycycle
  3965  005AFA  C159  F059         	movff	_controller+9,PWM2_setDC@dutycycle+1
  3966  005AFE  ECFB  F029         	call	_PWM2_setDC	;wreg free
  3967  005B02  0012               	return		;funcret
  3968  005B04                     __end_of_startMotor:
  3969                           	callstack 0
  3970                           
  3971 ;; *************** function _speedControl *****************
  3972 ;; Defined at:
  3973 ;;		line 38 in file "fs_speed_controller.c"
  3974 ;; Parameters:    Size  Location     Type
  3975 ;;  position        4   87[COMRAM] float 
  3976 ;; Auto vars:     Size  Location     Type
  3977 ;;  pos             4    0        float 
  3978 ;; Return value:  Size  Location     Type
  3979 ;;                  1    wreg      void 
  3980 ;; Registers used:
  3981 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3982 ;; Tracked objects:
  3983 ;;		On entry : 0/0
  3984 ;;		On exit  : 0/0
  3985 ;;		Unchanged: 0/0
  3986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3987 ;;      Params:         4       0       0       0       0       0       0
  3988 ;;      Locals:         0       4       0       0       0       0       0
  3989 ;;      Temps:          2       0       0       0       0       0       0
  3990 ;;      Totals:         6       4       0       0       0       0       0
  3991 ;;Total ram usage:       10 bytes
  3992 ;; Hardware stack levels used:    1
  3993 ;; Hardware stack levels required when called:    2
  3994 ;; This function calls:
  3995 ;;		___fladd
  3996 ;;		___flmul
  3997 ;;		___fltol
  3998 ;;		___xxtofl
  3999 ;; This function is called by:
  4000 ;;		_startMotor
  4001 ;; This function uses a non-reentrant model
  4002 ;;
  4003                           
  4004                           	psect	text9
  4005  003F22                     __ptext9:
  4006                           	callstack 0
  4007  003F22                     _speedControl:
  4008                           	callstack 25
  4009  003F22                     
  4010                           ;fs_speed_controller.c: 44:     controller.error = (int16_t)(position - 3400.0);
  4011  003F22  0E00               	movlw	0
  4012  003F24  6E39               	movwf	___fladd@a^0,c
  4013  003F26  0E80               	movlw	128
  4014  003F28  6E3A               	movwf	(___fladd@a+1)^0,c
  4015  003F2A  0E54               	movlw	84
  4016  003F2C  6E3B               	movwf	(___fladd@a+2)^0,c
  4017  003F2E  0EC5               	movlw	197
  4018  003F30  6E3C               	movwf	(___fladd@a+3)^0,c
  4019  003F32  C058  F035         	movff	speedControl@position,___fladd@b
  4020  003F36  C059  F036         	movff	speedControl@position+1,___fladd@b+1
  4021  003F3A  C05A  F037         	movff	speedControl@position+2,___fladd@b+2
  4022  003F3E  C05B  F038         	movff	speedControl@position+3,___fladd@b+3
  4023  003F42  EC5F  F015         	call	___fladd	;wreg free
  4024  003F46  C035  F04E         	movff	?___fladd,___fltol@f1
  4025  003F4A  C036  F04F         	movff	?___fladd+1,___fltol@f1+1
  4026  003F4E  C037  F050         	movff	?___fladd+2,___fltol@f1+2
  4027  003F52  C038  F051         	movff	?___fladd+3,___fltol@f1+3
  4028  003F56  ECDC  F024         	call	___fltol	;wreg free
  4029  003F5A  C04E  F150         	movff	?___fltol,_controller
  4030  003F5E  C04F  F151         	movff	?___fltol+1,_controller+1
  4031  003F62  0E00               	movlw	0
  4032  003F64  6E20               	movwf	___flmul@a^0,c
  4033  003F66  0E00               	movlw	0
  4034  003F68  6E21               	movwf	(___flmul@a+1)^0,c
  4035  003F6A  0E80               	movlw	128
  4036  003F6C  6E22               	movwf	(___flmul@a+2)^0,c
  4037  003F6E  0E3F               	movlw	63
  4038  003F70  6E23               	movwf	(___flmul@a+3)^0,c
  4039  003F72  0101               	movlb	1	; () banked
  4040  003F74  5152               	movf	(_controller+2)& (0+255),w,b
  4041  003F76  5D50               	subwf	_controller& (0+255),w,b
  4042  003F78  6E5C               	movwf	??_speedControl^0,c
  4043  003F7A  5153               	movf	(_controller+3)& (0+255),w,b
  4044  003F7C  5951               	subwfb	(_controller+1)& (0+255),w,b
  4045  003F7E  6E5D               	movwf	(??_speedControl+1)^0,c
  4046  003F80  C05C  F00E         	movff	??_speedControl,___xxtofl@val
  4047  003F84  C05D  F00F         	movff	??_speedControl+1,___xxtofl@val+1
  4048  003F88  0E00               	movlw	0
  4049  003F8A  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  4050  003F8C  0EFF               	movlw	-1
  4051  003F8E  6E10               	movwf	(___xxtofl@val+2)^0,c
  4052  003F90  6E11               	movwf	(___xxtofl@val+3)^0,c
  4053  003F92  0E01               	movlw	1
  4054  003F94  EC70  F020         	call	___xxtofl
  4055  003F98  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4056  003F9C  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4057  003FA0  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4058  003FA4  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4059  003FA8  ECBF  F017         	call	___flmul	;wreg free
  4060  003FAC  C01C  F039         	movff	?___flmul,___fladd@a
  4061  003FB0  C01D  F03A         	movff	?___flmul+1,___fladd@a+1
  4062  003FB4  C01E  F03B         	movff	?___flmul+2,___fladd@a+2
  4063  003FB8  C01F  F03C         	movff	?___flmul+3,___fladd@a+3
  4064  003FBC  0ECD               	movlw	205
  4065  003FBE  6E20               	movwf	___flmul@a^0,c
  4066  003FC0  0ECC               	movlw	204
  4067  003FC2  6E21               	movwf	(___flmul@a+1)^0,c
  4068  003FC4  0E4C               	movlw	76
  4069  003FC6  6E22               	movwf	(___flmul@a+2)^0,c
  4070  003FC8  0E3E               	movlw	62
  4071  003FCA  6E23               	movwf	(___flmul@a+3)^0,c
  4072  003FCC  C150  F00E         	movff	_controller,___xxtofl@val
  4073  003FD0  C151  F00F         	movff	_controller+1,___xxtofl@val+1
  4074  003FD4  0E00               	movlw	0
  4075  003FD6  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  4076  003FD8  0EFF               	movlw	-1
  4077  003FDA  6E10               	movwf	(___xxtofl@val+2)^0,c
  4078  003FDC  6E11               	movwf	(___xxtofl@val+3)^0,c
  4079  003FDE  0E01               	movlw	1
  4080  003FE0  EC70  F020         	call	___xxtofl
  4081  003FE4  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4082  003FE8  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4083  003FEC  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4084  003FF0  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4085  003FF4  ECBF  F017         	call	___flmul	;wreg free
  4086  003FF8  C01C  F035         	movff	?___flmul,___fladd@b
  4087  003FFC  C01D  F036         	movff	?___flmul+1,___fladd@b+1
  4088  004000  C01E  F037         	movff	?___flmul+2,___fladd@b+2
  4089  004004  C01F  F038         	movff	?___flmul+3,___fladd@b+3
  4090  004008  EC5F  F015         	call	___fladd	;wreg free
  4091  00400C  C035  F04E         	movff	?___fladd,___fltol@f1
  4092  004010  C036  F04F         	movff	?___fladd+1,___fltol@f1+1
  4093  004014  C037  F050         	movff	?___fladd+2,___fltol@f1+2
  4094  004018  C038  F051         	movff	?___fladd+3,___fltol@f1+3
  4095  00401C  ECDC  F024         	call	___fltol	;wreg free
  4096  004020  C04E  F154         	movff	?___fltol,_controller+4
  4097  004024  C04F  F155         	movff	?___fltol+1,_controller+5
  4098  004028                     
  4099                           ;fs_speed_controller.c: 46:     controller.lastError = controller.error;
  4100  004028  C150  F152         	movff	_controller,_controller+2
  4101  00402C  C151  F153         	movff	_controller+1,_controller+3
  4102  004030                     
  4103                           ;fs_speed_controller.c: 48:    controller.leftMotorSpeed =(int16_t) (200 + controller.mo
      +                          torSpeed + 70);
  4104  004030  0E0E               	movlw	14
  4105  004032  0101               	movlb	1	; () banked
  4106  004034  2554               	addwf	(_controller+4)& (0+255),w,b
  4107  004036  6F56               	movwf	(_controller+6)& (0+255),b
  4108  004038  0E01               	movlw	1
  4109  00403A  2155               	addwfc	(_controller+5)& (0+255),w,b
  4110  00403C  6F57               	movwf	(_controller+7)& (0+255),b
  4111  00403E                     
  4112                           ; BSR set to: 1
  4113                           ;fs_speed_controller.c: 49:    controller.rightMotorSpeed =(int16_t) (200 - controller.m
      +                          otorSpeed);
  4114  00403E  5154               	movf	(_controller+4)& (0+255),w,b
  4115  004040  08C8               	sublw	200
  4116  004042  6F58               	movwf	(_controller+8)& (0+255),b
  4117  004044  5155               	movf	(_controller+5)& (0+255),w,b
  4118  004046  A0D8               	btfss	status,0,c
  4119  004048  2AE8               	incf	wreg,f,c
  4120  00404A  0800               	sublw	0
  4121  00404C  6F59               	movwf	(_controller+9)& (0+255),b
  4122  00404E                     
  4123                           ; BSR set to: 1
  4124                           ;fs_speed_controller.c: 51:     if (controller.leftMotorSpeed < 50)
  4125  00404E  BF57               	btfsc	(_controller+7)& (0+255),7,b
  4126  004050  EF35  F020         	goto	u6740
  4127  004054  5157               	movf	(_controller+7)& (0+255),w,b
  4128  004056  E107               	bnz	u6741
  4129  004058  0E32               	movlw	50
  4130  00405A  5D56               	subwf	(_controller+6)& (0+255),w,b
  4131  00405C  B0D8               	btfsc	status,0,c
  4132  00405E  EF33  F020         	goto	u6741
  4133  004062  EF35  F020         	goto	u6740
  4134  004066                     u6741:
  4135  004066  EF39  F020         	goto	l5563
  4136  00406A                     u6740:
  4137  00406A                     
  4138                           ; BSR set to: 1
  4139                           ;fs_speed_controller.c: 52:     {;fs_speed_controller.c: 53:         controller.leftMoto
      +                          rSpeed = 50;
  4140  00406A  0E00               	movlw	0
  4141  00406C  6F57               	movwf	(_controller+7)& (0+255),b
  4142  00406E  0E32               	movlw	50
  4143  004070  6F56               	movwf	(_controller+6)& (0+255),b
  4144  004072                     l5563:
  4145                           
  4146                           ; BSR set to: 1
  4147                           ;fs_speed_controller.c: 56:     if (controller.rightMotorSpeed < 50)
  4148  004072  BF59               	btfsc	(_controller+9)& (0+255),7,b
  4149  004074  EF47  F020         	goto	u6750
  4150  004078  5159               	movf	(_controller+9)& (0+255),w,b
  4151  00407A  E107               	bnz	u6751
  4152  00407C  0E32               	movlw	50
  4153  00407E  5D58               	subwf	(_controller+8)& (0+255),w,b
  4154  004080  B0D8               	btfsc	status,0,c
  4155  004082  EF45  F020         	goto	u6751
  4156  004086  EF47  F020         	goto	u6750
  4157  00408A                     u6751:
  4158  00408A  EF4B  F020         	goto	l5567
  4159  00408E                     u6750:
  4160  00408E                     
  4161                           ; BSR set to: 1
  4162                           ;fs_speed_controller.c: 57:     {;fs_speed_controller.c: 58:       controller.rightMotor
      +                          Speed = 50;
  4163  00408E  0E00               	movlw	0
  4164  004090  6F59               	movwf	(_controller+9)& (0+255),b
  4165  004092  0E32               	movlw	50
  4166  004094  6F58               	movwf	(_controller+8)& (0+255),b
  4167  004096                     l5567:
  4168                           
  4169                           ; BSR set to: 1
  4170                           ;fs_speed_controller.c: 61:     if (controller.leftMotorSpeed > 350)
  4171  004096  BF57               	btfsc	(_controller+7)& (0+255),7,b
  4172  004098  EF57  F020         	goto	u6761
  4173  00409C  0E5F               	movlw	95
  4174  00409E  5D56               	subwf	(_controller+6)& (0+255),w,b
  4175  0040A0  0E01               	movlw	1
  4176  0040A2  5957               	subwfb	(_controller+7)& (0+255),w,b
  4177  0040A4  A0D8               	btfss	status,0,c
  4178  0040A6  EF57  F020         	goto	u6761
  4179  0040AA  EF59  F020         	goto	u6760
  4180  0040AE                     u6761:
  4181  0040AE  EF5D  F020         	goto	l5571
  4182  0040B2                     u6760:
  4183  0040B2                     
  4184                           ; BSR set to: 1
  4185                           ;fs_speed_controller.c: 62:    {;fs_speed_controller.c: 63:         controller.leftMotor
      +                          Speed = 350;
  4186  0040B2  0E01               	movlw	1
  4187  0040B4  6F57               	movwf	(_controller+7)& (0+255),b
  4188  0040B6  0E5E               	movlw	94
  4189  0040B8  6F56               	movwf	(_controller+6)& (0+255),b
  4190  0040BA                     l5571:
  4191                           
  4192                           ; BSR set to: 1
  4193                           ;fs_speed_controller.c: 66:     if (controller.rightMotorSpeed > 350)
  4194  0040BA  BF59               	btfsc	(_controller+9)& (0+255),7,b
  4195  0040BC  EF69  F020         	goto	u6771
  4196  0040C0  0E5F               	movlw	95
  4197  0040C2  5D58               	subwf	(_controller+8)& (0+255),w,b
  4198  0040C4  0E01               	movlw	1
  4199  0040C6  5959               	subwfb	(_controller+9)& (0+255),w,b
  4200  0040C8  A0D8               	btfss	status,0,c
  4201  0040CA  EF69  F020         	goto	u6771
  4202  0040CE  EF6B  F020         	goto	u6770
  4203  0040D2                     u6771:
  4204  0040D2  EF6F  F020         	goto	l441
  4205  0040D6                     u6770:
  4206  0040D6                     
  4207                           ; BSR set to: 1
  4208                           ;fs_speed_controller.c: 67:     {;fs_speed_controller.c: 68:         controller.rightMot
      +                          orSpeed = 350;
  4209  0040D6  0E01               	movlw	1
  4210  0040D8  6F59               	movwf	(_controller+9)& (0+255),b
  4211  0040DA  0E5E               	movlw	94
  4212  0040DC  6F58               	movwf	(_controller+8)& (0+255),b
  4213  0040DE                     l441:
  4214                           
  4215                           ; BSR set to: 1
  4216  0040DE  0012               	return		;funcret
  4217  0040E0                     __end_of_speedControl:
  4218                           	callstack 0
  4219                           
  4220 ;; *************** function _scanAdcConversion *****************
  4221 ;; Defined at:
  4222 ;;		line 93 in file "fs_adc.c"
  4223 ;; Parameters:    Size  Location     Type
  4224 ;;		None
  4225 ;; Auto vars:     Size  Location     Type
  4226 ;;		None
  4227 ;; Return value:  Size  Location     Type
  4228 ;;                  1    wreg      void 
  4229 ;; Registers used:
  4230 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4231 ;; Tracked objects:
  4232 ;;		On entry : 0/0
  4233 ;;		On exit  : 0/0
  4234 ;;		Unchanged: 0/0
  4235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4236 ;;      Params:         0       0       0       0       0       0       0
  4237 ;;      Locals:         0       0       0       0       0       0       0
  4238 ;;      Temps:          2       0       0       0       0       0       0
  4239 ;;      Totals:         2       0       0       0       0       0       0
  4240 ;;Total ram usage:        2 bytes
  4241 ;; Hardware stack levels used:    1
  4242 ;; Hardware stack levels required when called:    2
  4243 ;; This function calls:
  4244 ;;		___fldiv
  4245 ;;		___flmul
  4246 ;;		___fltol
  4247 ;;		___xxtofl
  4248 ;;		_readAdcValue
  4249 ;; This function is called by:
  4250 ;;		_startMotor
  4251 ;; This function uses a non-reentrant model
  4252 ;;
  4253                           
  4254                           	psect	text10
  4255  001C82                     __ptext10:
  4256                           	callstack 0
  4257  001C82                     _scanAdcConversion:
  4258                           	callstack 25
  4259  001C82                     
  4260                           ;fs_adc.c: 95:     switch(timer_value.timer_0_counter)
  4261  001C82  EF15  F012         	goto	l5483
  4262  001C86                     l5431:
  4263                           
  4264                           ; BSR set to: 0
  4265                           ;fs_adc.c: 98:             adc_raw_data.channel_0 = readAdcValue(0);
  4266  001C86  0E00               	movlw	0
  4267  001C88  EC95  F02C         	call	_readAdcValue
  4268  001C8C  C001  F183         	movff	?_readAdcValue,_adc_raw_data
  4269  001C90  C002  F184         	movff	?_readAdcValue+1,_adc_raw_data+1
  4270  001C94                     
  4271                           ;fs_adc.c: 99:             procces_data.channel_0 = (float)((adc_raw_data.channel_0*5.0)
      +                          /1024.0);
  4272  001C94  0E00               	movlw	0
  4273  001C96  6E20               	movwf	___flmul@a^0,c
  4274  001C98  0E00               	movlw	0
  4275  001C9A  6E21               	movwf	(___flmul@a+1)^0,c
  4276  001C9C  0EA0               	movlw	160
  4277  001C9E  6E22               	movwf	(___flmul@a+2)^0,c
  4278  001CA0  0E40               	movlw	64
  4279  001CA2  6E23               	movwf	(___flmul@a+3)^0,c
  4280  001CA4  C183  F00E         	movff	_adc_raw_data,___xxtofl@val
  4281  001CA8  C184  F00F         	movff	_adc_raw_data+1,___xxtofl@val+1
  4282  001CAC  6A10               	clrf	(___xxtofl@val+2)^0,c
  4283  001CAE  6A11               	clrf	(___xxtofl@val+3)^0,c
  4284  001CB0  0E00               	movlw	0
  4285  001CB2  EC70  F020         	call	___xxtofl
  4286  001CB6  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4287  001CBA  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4288  001CBE  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4289  001CC2  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4290  001CC6  ECBF  F017         	call	___flmul	;wreg free
  4291  001CCA  C01C  F035         	movff	?___flmul,___fldiv@b
  4292  001CCE  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4293  001CD2  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4294  001CD6  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4295  001CDA  0E00               	movlw	0
  4296  001CDC  6E39               	movwf	___fldiv@a^0,c
  4297  001CDE  0E00               	movlw	0
  4298  001CE0  6E3A               	movwf	(___fldiv@a+1)^0,c
  4299  001CE2  0E80               	movlw	128
  4300  001CE4  6E3B               	movwf	(___fldiv@a+2)^0,c
  4301  001CE6  0E44               	movlw	68
  4302  001CE8  6E3C               	movwf	(___fldiv@a+3)^0,c
  4303  001CEA  ECD4  F019         	call	___fldiv	;wreg free
  4304  001CEE  C035  F130         	movff	?___fldiv,_procces_data
  4305  001CF2  C036  F131         	movff	?___fldiv+1,_procces_data+1
  4306  001CF6  C037  F132         	movff	?___fldiv+2,_procces_data+2
  4307  001CFA  C038  F133         	movff	?___fldiv+3,_procces_data+3
  4308  001CFE                     
  4309                           ;fs_adc.c: 100:             convert_data.convert_channel_0 = (uint32_t)((procces_data.ch
      +                          annel_0*999)/5);
  4310  001CFE  0E00               	movlw	0
  4311  001D00  6E39               	movwf	___fldiv@a^0,c
  4312  001D02  0E00               	movlw	0
  4313  001D04  6E3A               	movwf	(___fldiv@a+1)^0,c
  4314  001D06  0EA0               	movlw	160
  4315  001D08  6E3B               	movwf	(___fldiv@a+2)^0,c
  4316  001D0A  0E40               	movlw	64
  4317  001D0C  6E3C               	movwf	(___fldiv@a+3)^0,c
  4318  001D0E  0E00               	movlw	0
  4319  001D10  6E20               	movwf	___flmul@a^0,c
  4320  001D12  0EC0               	movlw	192
  4321  001D14  6E21               	movwf	(___flmul@a+1)^0,c
  4322  001D16  0E79               	movlw	121
  4323  001D18  6E22               	movwf	(___flmul@a+2)^0,c
  4324  001D1A  0E44               	movlw	68
  4325  001D1C  6E23               	movwf	(___flmul@a+3)^0,c
  4326  001D1E  C130  F01C         	movff	_procces_data,___flmul@b
  4327  001D22  C131  F01D         	movff	_procces_data+1,___flmul@b+1
  4328  001D26  C132  F01E         	movff	_procces_data+2,___flmul@b+2
  4329  001D2A  C133  F01F         	movff	_procces_data+3,___flmul@b+3
  4330  001D2E  ECBF  F017         	call	___flmul	;wreg free
  4331  001D32  C01C  F035         	movff	?___flmul,___fldiv@b
  4332  001D36  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4333  001D3A  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4334  001D3E  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4335  001D42  ECD4  F019         	call	___fldiv	;wreg free
  4336  001D46  C035  F04E         	movff	?___fldiv,___fltol@f1
  4337  001D4A  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4338  001D4E  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4339  001D52  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4340  001D56  ECDC  F024         	call	___fltol	;wreg free
  4341  001D5A  C04E  F100         	movff	?___fltol,_convert_data
  4342  001D5E  C04F  F101         	movff	?___fltol+1,_convert_data+1
  4343  001D62  C050  F102         	movff	?___fltol+2,_convert_data+2
  4344  001D66  C051  F103         	movff	?___fltol+3,_convert_data+3
  4345                           
  4346                           ;fs_adc.c: 101:         break;
  4347  001D6A  EF43  F012         	goto	l54
  4348  001D6E                     l5437:
  4349                           
  4350                           ; BSR set to: 0
  4351                           ;fs_adc.c: 104:             adc_raw_data.channel_1 = readAdcValue(1);
  4352  001D6E  0E01               	movlw	1
  4353  001D70  EC95  F02C         	call	_readAdcValue
  4354  001D74  C001  F185         	movff	?_readAdcValue,_adc_raw_data+2
  4355  001D78  C002  F186         	movff	?_readAdcValue+1,_adc_raw_data+3
  4356  001D7C                     
  4357                           ;fs_adc.c: 105:             procces_data.channel_1 = (float)((adc_raw_data.channel_1*5.0
      +                          )/1024.0);
  4358  001D7C  0E00               	movlw	0
  4359  001D7E  6E20               	movwf	___flmul@a^0,c
  4360  001D80  0E00               	movlw	0
  4361  001D82  6E21               	movwf	(___flmul@a+1)^0,c
  4362  001D84  0EA0               	movlw	160
  4363  001D86  6E22               	movwf	(___flmul@a+2)^0,c
  4364  001D88  0E40               	movlw	64
  4365  001D8A  6E23               	movwf	(___flmul@a+3)^0,c
  4366  001D8C  C185  F00E         	movff	_adc_raw_data+2,___xxtofl@val
  4367  001D90  C186  F00F         	movff	_adc_raw_data+3,___xxtofl@val+1
  4368  001D94  6A10               	clrf	(___xxtofl@val+2)^0,c
  4369  001D96  6A11               	clrf	(___xxtofl@val+3)^0,c
  4370  001D98  0E00               	movlw	0
  4371  001D9A  EC70  F020         	call	___xxtofl
  4372  001D9E  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4373  001DA2  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4374  001DA6  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4375  001DAA  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4376  001DAE  ECBF  F017         	call	___flmul	;wreg free
  4377  001DB2  C01C  F035         	movff	?___flmul,___fldiv@b
  4378  001DB6  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4379  001DBA  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4380  001DBE  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4381  001DC2  0E00               	movlw	0
  4382  001DC4  6E39               	movwf	___fldiv@a^0,c
  4383  001DC6  0E00               	movlw	0
  4384  001DC8  6E3A               	movwf	(___fldiv@a+1)^0,c
  4385  001DCA  0E80               	movlw	128
  4386  001DCC  6E3B               	movwf	(___fldiv@a+2)^0,c
  4387  001DCE  0E44               	movlw	68
  4388  001DD0  6E3C               	movwf	(___fldiv@a+3)^0,c
  4389  001DD2  ECD4  F019         	call	___fldiv	;wreg free
  4390  001DD6  C035  F134         	movff	?___fldiv,_procces_data+4
  4391  001DDA  C036  F135         	movff	?___fldiv+1,_procces_data+5
  4392  001DDE  C037  F136         	movff	?___fldiv+2,_procces_data+6
  4393  001DE2  C038  F137         	movff	?___fldiv+3,_procces_data+7
  4394  001DE6                     
  4395                           ;fs_adc.c: 106:             convert_data.convert_channel_1 = (uint32_t)((procces_data.ch
      +                          annel_1*999)/5);
  4396  001DE6  0E00               	movlw	0
  4397  001DE8  6E39               	movwf	___fldiv@a^0,c
  4398  001DEA  0E00               	movlw	0
  4399  001DEC  6E3A               	movwf	(___fldiv@a+1)^0,c
  4400  001DEE  0EA0               	movlw	160
  4401  001DF0  6E3B               	movwf	(___fldiv@a+2)^0,c
  4402  001DF2  0E40               	movlw	64
  4403  001DF4  6E3C               	movwf	(___fldiv@a+3)^0,c
  4404  001DF6  0E00               	movlw	0
  4405  001DF8  6E20               	movwf	___flmul@a^0,c
  4406  001DFA  0EC0               	movlw	192
  4407  001DFC  6E21               	movwf	(___flmul@a+1)^0,c
  4408  001DFE  0E79               	movlw	121
  4409  001E00  6E22               	movwf	(___flmul@a+2)^0,c
  4410  001E02  0E44               	movlw	68
  4411  001E04  6E23               	movwf	(___flmul@a+3)^0,c
  4412  001E06  C134  F01C         	movff	_procces_data+4,___flmul@b
  4413  001E0A  C135  F01D         	movff	_procces_data+5,___flmul@b+1
  4414  001E0E  C136  F01E         	movff	_procces_data+6,___flmul@b+2
  4415  001E12  C137  F01F         	movff	_procces_data+7,___flmul@b+3
  4416  001E16  ECBF  F017         	call	___flmul	;wreg free
  4417  001E1A  C01C  F035         	movff	?___flmul,___fldiv@b
  4418  001E1E  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4419  001E22  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4420  001E26  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4421  001E2A  ECD4  F019         	call	___fldiv	;wreg free
  4422  001E2E  C035  F04E         	movff	?___fldiv,___fltol@f1
  4423  001E32  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4424  001E36  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4425  001E3A  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4426  001E3E  ECDC  F024         	call	___fltol	;wreg free
  4427  001E42  C04E  F104         	movff	?___fltol,_convert_data+4
  4428  001E46  C04F  F105         	movff	?___fltol+1,_convert_data+5
  4429  001E4A  C050  F106         	movff	?___fltol+2,_convert_data+6
  4430  001E4E  C051  F107         	movff	?___fltol+3,_convert_data+7
  4431                           
  4432                           ;fs_adc.c: 107:         break;
  4433  001E52  EF43  F012         	goto	l54
  4434  001E56                     l5443:
  4435                           
  4436                           ; BSR set to: 0
  4437                           ;fs_adc.c: 110:             adc_raw_data.channel_2 = readAdcValue(2);
  4438  001E56  0E02               	movlw	2
  4439  001E58  EC95  F02C         	call	_readAdcValue
  4440  001E5C  C001  F187         	movff	?_readAdcValue,_adc_raw_data+4
  4441  001E60  C002  F188         	movff	?_readAdcValue+1,_adc_raw_data+5
  4442  001E64                     
  4443                           ;fs_adc.c: 111:             procces_data.channel_2 = (float)((adc_raw_data.channel_2*5.0
      +                          )/1024.0);
  4444  001E64  0E00               	movlw	0
  4445  001E66  6E20               	movwf	___flmul@a^0,c
  4446  001E68  0E00               	movlw	0
  4447  001E6A  6E21               	movwf	(___flmul@a+1)^0,c
  4448  001E6C  0EA0               	movlw	160
  4449  001E6E  6E22               	movwf	(___flmul@a+2)^0,c
  4450  001E70  0E40               	movlw	64
  4451  001E72  6E23               	movwf	(___flmul@a+3)^0,c
  4452  001E74  C187  F00E         	movff	_adc_raw_data+4,___xxtofl@val
  4453  001E78  C188  F00F         	movff	_adc_raw_data+5,___xxtofl@val+1
  4454  001E7C  6A10               	clrf	(___xxtofl@val+2)^0,c
  4455  001E7E  6A11               	clrf	(___xxtofl@val+3)^0,c
  4456  001E80  0E00               	movlw	0
  4457  001E82  EC70  F020         	call	___xxtofl
  4458  001E86  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4459  001E8A  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4460  001E8E  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4461  001E92  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4462  001E96  ECBF  F017         	call	___flmul	;wreg free
  4463  001E9A  C01C  F035         	movff	?___flmul,___fldiv@b
  4464  001E9E  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4465  001EA2  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4466  001EA6  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4467  001EAA  0E00               	movlw	0
  4468  001EAC  6E39               	movwf	___fldiv@a^0,c
  4469  001EAE  0E00               	movlw	0
  4470  001EB0  6E3A               	movwf	(___fldiv@a+1)^0,c
  4471  001EB2  0E80               	movlw	128
  4472  001EB4  6E3B               	movwf	(___fldiv@a+2)^0,c
  4473  001EB6  0E44               	movlw	68
  4474  001EB8  6E3C               	movwf	(___fldiv@a+3)^0,c
  4475  001EBA  ECD4  F019         	call	___fldiv	;wreg free
  4476  001EBE  C035  F138         	movff	?___fldiv,_procces_data+8
  4477  001EC2  C036  F139         	movff	?___fldiv+1,_procces_data+9
  4478  001EC6  C037  F13A         	movff	?___fldiv+2,_procces_data+10
  4479  001ECA  C038  F13B         	movff	?___fldiv+3,_procces_data+11
  4480  001ECE                     
  4481                           ;fs_adc.c: 112:             convert_data.convert_channel_2 = (uint32_t)((procces_data.ch
      +                          annel_2*999)/5);
  4482  001ECE  0E00               	movlw	0
  4483  001ED0  6E39               	movwf	___fldiv@a^0,c
  4484  001ED2  0E00               	movlw	0
  4485  001ED4  6E3A               	movwf	(___fldiv@a+1)^0,c
  4486  001ED6  0EA0               	movlw	160
  4487  001ED8  6E3B               	movwf	(___fldiv@a+2)^0,c
  4488  001EDA  0E40               	movlw	64
  4489  001EDC  6E3C               	movwf	(___fldiv@a+3)^0,c
  4490  001EDE  0E00               	movlw	0
  4491  001EE0  6E20               	movwf	___flmul@a^0,c
  4492  001EE2  0EC0               	movlw	192
  4493  001EE4  6E21               	movwf	(___flmul@a+1)^0,c
  4494  001EE6  0E79               	movlw	121
  4495  001EE8  6E22               	movwf	(___flmul@a+2)^0,c
  4496  001EEA  0E44               	movlw	68
  4497  001EEC  6E23               	movwf	(___flmul@a+3)^0,c
  4498  001EEE  C138  F01C         	movff	_procces_data+8,___flmul@b
  4499  001EF2  C139  F01D         	movff	_procces_data+9,___flmul@b+1
  4500  001EF6  C13A  F01E         	movff	_procces_data+10,___flmul@b+2
  4501  001EFA  C13B  F01F         	movff	_procces_data+11,___flmul@b+3
  4502  001EFE  ECBF  F017         	call	___flmul	;wreg free
  4503  001F02  C01C  F035         	movff	?___flmul,___fldiv@b
  4504  001F06  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4505  001F0A  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4506  001F0E  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4507  001F12  ECD4  F019         	call	___fldiv	;wreg free
  4508  001F16  C035  F04E         	movff	?___fldiv,___fltol@f1
  4509  001F1A  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4510  001F1E  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4511  001F22  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4512  001F26  ECDC  F024         	call	___fltol	;wreg free
  4513  001F2A  C04E  F108         	movff	?___fltol,_convert_data+8
  4514  001F2E  C04F  F109         	movff	?___fltol+1,_convert_data+9
  4515  001F32  C050  F10A         	movff	?___fltol+2,_convert_data+10
  4516  001F36  C051  F10B         	movff	?___fltol+3,_convert_data+11
  4517  001F3A                     
  4518                           ;fs_adc.c: 113:             convert_data.convert_channel_2_f = (uint16_t)((procces_data.
      +                          channel_2*999)/5);
  4519  001F3A  0E00               	movlw	0
  4520  001F3C  6E39               	movwf	___fldiv@a^0,c
  4521  001F3E  0E00               	movlw	0
  4522  001F40  6E3A               	movwf	(___fldiv@a+1)^0,c
  4523  001F42  0EA0               	movlw	160
  4524  001F44  6E3B               	movwf	(___fldiv@a+2)^0,c
  4525  001F46  0E40               	movlw	64
  4526  001F48  6E3C               	movwf	(___fldiv@a+3)^0,c
  4527  001F4A  0E00               	movlw	0
  4528  001F4C  6E20               	movwf	___flmul@a^0,c
  4529  001F4E  0EC0               	movlw	192
  4530  001F50  6E21               	movwf	(___flmul@a+1)^0,c
  4531  001F52  0E79               	movlw	121
  4532  001F54  6E22               	movwf	(___flmul@a+2)^0,c
  4533  001F56  0E44               	movlw	68
  4534  001F58  6E23               	movwf	(___flmul@a+3)^0,c
  4535  001F5A  C138  F01C         	movff	_procces_data+8,___flmul@b
  4536  001F5E  C139  F01D         	movff	_procces_data+9,___flmul@b+1
  4537  001F62  C13A  F01E         	movff	_procces_data+10,___flmul@b+2
  4538  001F66  C13B  F01F         	movff	_procces_data+11,___flmul@b+3
  4539  001F6A  ECBF  F017         	call	___flmul	;wreg free
  4540  001F6E  C01C  F035         	movff	?___flmul,___fldiv@b
  4541  001F72  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4542  001F76  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4543  001F7A  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4544  001F7E  ECD4  F019         	call	___fldiv	;wreg free
  4545  001F82  C035  F04E         	movff	?___fldiv,___fltol@f1
  4546  001F86  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4547  001F8A  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4548  001F8E  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4549  001F92  ECDC  F024         	call	___fltol	;wreg free
  4550  001F96  C04E  F124         	movff	?___fltol,_convert_data+36
  4551  001F9A  C04F  F125         	movff	?___fltol+1,_convert_data+37
  4552                           
  4553                           ;fs_adc.c: 114:         break;
  4554  001F9E  EF43  F012         	goto	l54
  4555  001FA2                     l5451:
  4556                           
  4557                           ; BSR set to: 0
  4558                           ;fs_adc.c: 117:             adc_raw_data.channel_3 = readAdcValue(3);
  4559  001FA2  0E03               	movlw	3
  4560  001FA4  EC95  F02C         	call	_readAdcValue
  4561  001FA8  C001  F189         	movff	?_readAdcValue,_adc_raw_data+6
  4562  001FAC  C002  F18A         	movff	?_readAdcValue+1,_adc_raw_data+7
  4563  001FB0                     
  4564                           ;fs_adc.c: 118:             procces_data.channel_3 = (float)((adc_raw_data.channel_3*5.0
      +                          )/1024.0);
  4565  001FB0  0E00               	movlw	0
  4566  001FB2  6E20               	movwf	___flmul@a^0,c
  4567  001FB4  0E00               	movlw	0
  4568  001FB6  6E21               	movwf	(___flmul@a+1)^0,c
  4569  001FB8  0EA0               	movlw	160
  4570  001FBA  6E22               	movwf	(___flmul@a+2)^0,c
  4571  001FBC  0E40               	movlw	64
  4572  001FBE  6E23               	movwf	(___flmul@a+3)^0,c
  4573  001FC0  C189  F00E         	movff	_adc_raw_data+6,___xxtofl@val
  4574  001FC4  C18A  F00F         	movff	_adc_raw_data+7,___xxtofl@val+1
  4575  001FC8  6A10               	clrf	(___xxtofl@val+2)^0,c
  4576  001FCA  6A11               	clrf	(___xxtofl@val+3)^0,c
  4577  001FCC  0E00               	movlw	0
  4578  001FCE  EC70  F020         	call	___xxtofl
  4579  001FD2  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4580  001FD6  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4581  001FDA  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4582  001FDE  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4583  001FE2  ECBF  F017         	call	___flmul	;wreg free
  4584  001FE6  C01C  F035         	movff	?___flmul,___fldiv@b
  4585  001FEA  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4586  001FEE  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4587  001FF2  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4588  001FF6  0E00               	movlw	0
  4589  001FF8  6E39               	movwf	___fldiv@a^0,c
  4590  001FFA  0E00               	movlw	0
  4591  001FFC  6E3A               	movwf	(___fldiv@a+1)^0,c
  4592  001FFE  0E80               	movlw	128
  4593  002000  6E3B               	movwf	(___fldiv@a+2)^0,c
  4594  002002  0E44               	movlw	68
  4595  002004  6E3C               	movwf	(___fldiv@a+3)^0,c
  4596  002006  ECD4  F019         	call	___fldiv	;wreg free
  4597  00200A  C035  F13C         	movff	?___fldiv,_procces_data+12
  4598  00200E  C036  F13D         	movff	?___fldiv+1,_procces_data+13
  4599  002012  C037  F13E         	movff	?___fldiv+2,_procces_data+14
  4600  002016  C038  F13F         	movff	?___fldiv+3,_procces_data+15
  4601  00201A                     
  4602                           ;fs_adc.c: 119:             convert_data.convert_channel_3 = (uint32_t)((procces_data.ch
      +                          annel_3*999)/5);
  4603  00201A  0E00               	movlw	0
  4604  00201C  6E39               	movwf	___fldiv@a^0,c
  4605  00201E  0E00               	movlw	0
  4606  002020  6E3A               	movwf	(___fldiv@a+1)^0,c
  4607  002022  0EA0               	movlw	160
  4608  002024  6E3B               	movwf	(___fldiv@a+2)^0,c
  4609  002026  0E40               	movlw	64
  4610  002028  6E3C               	movwf	(___fldiv@a+3)^0,c
  4611  00202A  0E00               	movlw	0
  4612  00202C  6E20               	movwf	___flmul@a^0,c
  4613  00202E  0EC0               	movlw	192
  4614  002030  6E21               	movwf	(___flmul@a+1)^0,c
  4615  002032  0E79               	movlw	121
  4616  002034  6E22               	movwf	(___flmul@a+2)^0,c
  4617  002036  0E44               	movlw	68
  4618  002038  6E23               	movwf	(___flmul@a+3)^0,c
  4619  00203A  C13C  F01C         	movff	_procces_data+12,___flmul@b
  4620  00203E  C13D  F01D         	movff	_procces_data+13,___flmul@b+1
  4621  002042  C13E  F01E         	movff	_procces_data+14,___flmul@b+2
  4622  002046  C13F  F01F         	movff	_procces_data+15,___flmul@b+3
  4623  00204A  ECBF  F017         	call	___flmul	;wreg free
  4624  00204E  C01C  F035         	movff	?___flmul,___fldiv@b
  4625  002052  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4626  002056  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4627  00205A  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4628  00205E  ECD4  F019         	call	___fldiv	;wreg free
  4629  002062  C035  F04E         	movff	?___fldiv,___fltol@f1
  4630  002066  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4631  00206A  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4632  00206E  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4633  002072  ECDC  F024         	call	___fltol	;wreg free
  4634  002076  C04E  F10C         	movff	?___fltol,_convert_data+12
  4635  00207A  C04F  F10D         	movff	?___fltol+1,_convert_data+13
  4636  00207E  C050  F10E         	movff	?___fltol+2,_convert_data+14
  4637  002082  C051  F10F         	movff	?___fltol+3,_convert_data+15
  4638                           
  4639                           ;fs_adc.c: 120:         break;
  4640  002086  EF43  F012         	goto	l54
  4641  00208A                     l5457:
  4642                           
  4643                           ; BSR set to: 0
  4644                           ;fs_adc.c: 123:             adc_raw_data.channel_4 = readAdcValue(4);
  4645  00208A  0E04               	movlw	4
  4646  00208C  EC95  F02C         	call	_readAdcValue
  4647  002090  C001  F18B         	movff	?_readAdcValue,_adc_raw_data+8
  4648  002094  C002  F18C         	movff	?_readAdcValue+1,_adc_raw_data+9
  4649  002098                     
  4650                           ;fs_adc.c: 124:             procces_data.channel_4 = (float)((adc_raw_data.channel_4*5.0
      +                          )/1024.0);
  4651  002098  0E00               	movlw	0
  4652  00209A  6E20               	movwf	___flmul@a^0,c
  4653  00209C  0E00               	movlw	0
  4654  00209E  6E21               	movwf	(___flmul@a+1)^0,c
  4655  0020A0  0EA0               	movlw	160
  4656  0020A2  6E22               	movwf	(___flmul@a+2)^0,c
  4657  0020A4  0E40               	movlw	64
  4658  0020A6  6E23               	movwf	(___flmul@a+3)^0,c
  4659  0020A8  C18B  F00E         	movff	_adc_raw_data+8,___xxtofl@val
  4660  0020AC  C18C  F00F         	movff	_adc_raw_data+9,___xxtofl@val+1
  4661  0020B0  6A10               	clrf	(___xxtofl@val+2)^0,c
  4662  0020B2  6A11               	clrf	(___xxtofl@val+3)^0,c
  4663  0020B4  0E00               	movlw	0
  4664  0020B6  EC70  F020         	call	___xxtofl
  4665  0020BA  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4666  0020BE  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4667  0020C2  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4668  0020C6  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4669  0020CA  ECBF  F017         	call	___flmul	;wreg free
  4670  0020CE  C01C  F035         	movff	?___flmul,___fldiv@b
  4671  0020D2  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4672  0020D6  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4673  0020DA  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4674  0020DE  0E00               	movlw	0
  4675  0020E0  6E39               	movwf	___fldiv@a^0,c
  4676  0020E2  0E00               	movlw	0
  4677  0020E4  6E3A               	movwf	(___fldiv@a+1)^0,c
  4678  0020E6  0E80               	movlw	128
  4679  0020E8  6E3B               	movwf	(___fldiv@a+2)^0,c
  4680  0020EA  0E44               	movlw	68
  4681  0020EC  6E3C               	movwf	(___fldiv@a+3)^0,c
  4682  0020EE  ECD4  F019         	call	___fldiv	;wreg free
  4683  0020F2  C035  F140         	movff	?___fldiv,_procces_data+16
  4684  0020F6  C036  F141         	movff	?___fldiv+1,_procces_data+17
  4685  0020FA  C037  F142         	movff	?___fldiv+2,_procces_data+18
  4686  0020FE  C038  F143         	movff	?___fldiv+3,_procces_data+19
  4687  002102                     
  4688                           ;fs_adc.c: 125:             convert_data.convert_channel_4 = (uint32_t)((procces_data.ch
      +                          annel_4*999)/5);
  4689  002102  0E00               	movlw	0
  4690  002104  6E39               	movwf	___fldiv@a^0,c
  4691  002106  0E00               	movlw	0
  4692  002108  6E3A               	movwf	(___fldiv@a+1)^0,c
  4693  00210A  0EA0               	movlw	160
  4694  00210C  6E3B               	movwf	(___fldiv@a+2)^0,c
  4695  00210E  0E40               	movlw	64
  4696  002110  6E3C               	movwf	(___fldiv@a+3)^0,c
  4697  002112  0E00               	movlw	0
  4698  002114  6E20               	movwf	___flmul@a^0,c
  4699  002116  0EC0               	movlw	192
  4700  002118  6E21               	movwf	(___flmul@a+1)^0,c
  4701  00211A  0E79               	movlw	121
  4702  00211C  6E22               	movwf	(___flmul@a+2)^0,c
  4703  00211E  0E44               	movlw	68
  4704  002120  6E23               	movwf	(___flmul@a+3)^0,c
  4705  002122  C140  F01C         	movff	_procces_data+16,___flmul@b
  4706  002126  C141  F01D         	movff	_procces_data+17,___flmul@b+1
  4707  00212A  C142  F01E         	movff	_procces_data+18,___flmul@b+2
  4708  00212E  C143  F01F         	movff	_procces_data+19,___flmul@b+3
  4709  002132  ECBF  F017         	call	___flmul	;wreg free
  4710  002136  C01C  F035         	movff	?___flmul,___fldiv@b
  4711  00213A  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4712  00213E  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4713  002142  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4714  002146  ECD4  F019         	call	___fldiv	;wreg free
  4715  00214A  C035  F04E         	movff	?___fldiv,___fltol@f1
  4716  00214E  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4717  002152  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4718  002156  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4719  00215A  ECDC  F024         	call	___fltol	;wreg free
  4720  00215E  C04E  F110         	movff	?___fltol,_convert_data+16
  4721  002162  C04F  F111         	movff	?___fltol+1,_convert_data+17
  4722  002166  C050  F112         	movff	?___fltol+2,_convert_data+18
  4723  00216A  C051  F113         	movff	?___fltol+3,_convert_data+19
  4724                           
  4725                           ;fs_adc.c: 126:         break;
  4726  00216E  EF43  F012         	goto	l54
  4727  002172                     l5463:
  4728                           
  4729                           ; BSR set to: 0
  4730                           ;fs_adc.c: 129:            adc_raw_data.channel_5 = readAdcValue(5);
  4731  002172  0E05               	movlw	5
  4732  002174  EC95  F02C         	call	_readAdcValue
  4733  002178  C001  F18D         	movff	?_readAdcValue,_adc_raw_data+10
  4734  00217C  C002  F18E         	movff	?_readAdcValue+1,_adc_raw_data+11
  4735  002180                     
  4736                           ;fs_adc.c: 130:            procces_data.channel_5 = (float)((adc_raw_data.channel_5*5.0)
      +                          /1024.0);
  4737  002180  0E00               	movlw	0
  4738  002182  6E20               	movwf	___flmul@a^0,c
  4739  002184  0E00               	movlw	0
  4740  002186  6E21               	movwf	(___flmul@a+1)^0,c
  4741  002188  0EA0               	movlw	160
  4742  00218A  6E22               	movwf	(___flmul@a+2)^0,c
  4743  00218C  0E40               	movlw	64
  4744  00218E  6E23               	movwf	(___flmul@a+3)^0,c
  4745  002190  C18D  F00E         	movff	_adc_raw_data+10,___xxtofl@val
  4746  002194  C18E  F00F         	movff	_adc_raw_data+11,___xxtofl@val+1
  4747  002198  6A10               	clrf	(___xxtofl@val+2)^0,c
  4748  00219A  6A11               	clrf	(___xxtofl@val+3)^0,c
  4749  00219C  0E00               	movlw	0
  4750  00219E  EC70  F020         	call	___xxtofl
  4751  0021A2  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4752  0021A6  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4753  0021AA  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4754  0021AE  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4755  0021B2  ECBF  F017         	call	___flmul	;wreg free
  4756  0021B6  C01C  F035         	movff	?___flmul,___fldiv@b
  4757  0021BA  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4758  0021BE  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4759  0021C2  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4760  0021C6  0E00               	movlw	0
  4761  0021C8  6E39               	movwf	___fldiv@a^0,c
  4762  0021CA  0E00               	movlw	0
  4763  0021CC  6E3A               	movwf	(___fldiv@a+1)^0,c
  4764  0021CE  0E80               	movlw	128
  4765  0021D0  6E3B               	movwf	(___fldiv@a+2)^0,c
  4766  0021D2  0E44               	movlw	68
  4767  0021D4  6E3C               	movwf	(___fldiv@a+3)^0,c
  4768  0021D6  ECD4  F019         	call	___fldiv	;wreg free
  4769  0021DA  C035  F144         	movff	?___fldiv,_procces_data+20
  4770  0021DE  C036  F145         	movff	?___fldiv+1,_procces_data+21
  4771  0021E2  C037  F146         	movff	?___fldiv+2,_procces_data+22
  4772  0021E6  C038  F147         	movff	?___fldiv+3,_procces_data+23
  4773  0021EA                     
  4774                           ;fs_adc.c: 131:            convert_data.convert_channel_5 = (uint32_t)((procces_data.cha
      +                          nnel_5*999)/5);
  4775  0021EA  0E00               	movlw	0
  4776  0021EC  6E39               	movwf	___fldiv@a^0,c
  4777  0021EE  0E00               	movlw	0
  4778  0021F0  6E3A               	movwf	(___fldiv@a+1)^0,c
  4779  0021F2  0EA0               	movlw	160
  4780  0021F4  6E3B               	movwf	(___fldiv@a+2)^0,c
  4781  0021F6  0E40               	movlw	64
  4782  0021F8  6E3C               	movwf	(___fldiv@a+3)^0,c
  4783  0021FA  0E00               	movlw	0
  4784  0021FC  6E20               	movwf	___flmul@a^0,c
  4785  0021FE  0EC0               	movlw	192
  4786  002200  6E21               	movwf	(___flmul@a+1)^0,c
  4787  002202  0E79               	movlw	121
  4788  002204  6E22               	movwf	(___flmul@a+2)^0,c
  4789  002206  0E44               	movlw	68
  4790  002208  6E23               	movwf	(___flmul@a+3)^0,c
  4791  00220A  C144  F01C         	movff	_procces_data+20,___flmul@b
  4792  00220E  C145  F01D         	movff	_procces_data+21,___flmul@b+1
  4793  002212  C146  F01E         	movff	_procces_data+22,___flmul@b+2
  4794  002216  C147  F01F         	movff	_procces_data+23,___flmul@b+3
  4795  00221A  ECBF  F017         	call	___flmul	;wreg free
  4796  00221E  C01C  F035         	movff	?___flmul,___fldiv@b
  4797  002222  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4798  002226  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4799  00222A  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4800  00222E  ECD4  F019         	call	___fldiv	;wreg free
  4801  002232  C035  F04E         	movff	?___fldiv,___fltol@f1
  4802  002236  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4803  00223A  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4804  00223E  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4805  002242  ECDC  F024         	call	___fltol	;wreg free
  4806  002246  C04E  F114         	movff	?___fltol,_convert_data+20
  4807  00224A  C04F  F115         	movff	?___fltol+1,_convert_data+21
  4808  00224E  C050  F116         	movff	?___fltol+2,_convert_data+22
  4809  002252  C051  F117         	movff	?___fltol+3,_convert_data+23
  4810                           
  4811                           ;fs_adc.c: 132:         break;
  4812  002256  EF43  F012         	goto	l54
  4813  00225A                     l5469:
  4814                           
  4815                           ; BSR set to: 0
  4816                           ;fs_adc.c: 135:             adc_raw_data.channel_6 = readAdcValue(6);
  4817  00225A  0E06               	movlw	6
  4818  00225C  EC95  F02C         	call	_readAdcValue
  4819  002260  C001  F18F         	movff	?_readAdcValue,_adc_raw_data+12
  4820  002264  C002  F190         	movff	?_readAdcValue+1,_adc_raw_data+13
  4821  002268                     
  4822                           ;fs_adc.c: 136:             procces_data.channel_6 = (float)((adc_raw_data.channel_6*5.0
      +                          )/1024.0);
  4823  002268  0E00               	movlw	0
  4824  00226A  6E20               	movwf	___flmul@a^0,c
  4825  00226C  0E00               	movlw	0
  4826  00226E  6E21               	movwf	(___flmul@a+1)^0,c
  4827  002270  0EA0               	movlw	160
  4828  002272  6E22               	movwf	(___flmul@a+2)^0,c
  4829  002274  0E40               	movlw	64
  4830  002276  6E23               	movwf	(___flmul@a+3)^0,c
  4831  002278  C18F  F00E         	movff	_adc_raw_data+12,___xxtofl@val
  4832  00227C  C190  F00F         	movff	_adc_raw_data+13,___xxtofl@val+1
  4833  002280  6A10               	clrf	(___xxtofl@val+2)^0,c
  4834  002282  6A11               	clrf	(___xxtofl@val+3)^0,c
  4835  002284  0E00               	movlw	0
  4836  002286  EC70  F020         	call	___xxtofl
  4837  00228A  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4838  00228E  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4839  002292  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4840  002296  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4841  00229A  ECBF  F017         	call	___flmul	;wreg free
  4842  00229E  C01C  F035         	movff	?___flmul,___fldiv@b
  4843  0022A2  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4844  0022A6  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4845  0022AA  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4846  0022AE  0E00               	movlw	0
  4847  0022B0  6E39               	movwf	___fldiv@a^0,c
  4848  0022B2  0E00               	movlw	0
  4849  0022B4  6E3A               	movwf	(___fldiv@a+1)^0,c
  4850  0022B6  0E80               	movlw	128
  4851  0022B8  6E3B               	movwf	(___fldiv@a+2)^0,c
  4852  0022BA  0E44               	movlw	68
  4853  0022BC  6E3C               	movwf	(___fldiv@a+3)^0,c
  4854  0022BE  ECD4  F019         	call	___fldiv	;wreg free
  4855  0022C2  C035  F148         	movff	?___fldiv,_procces_data+24
  4856  0022C6  C036  F149         	movff	?___fldiv+1,_procces_data+25
  4857  0022CA  C037  F14A         	movff	?___fldiv+2,_procces_data+26
  4858  0022CE  C038  F14B         	movff	?___fldiv+3,_procces_data+27
  4859  0022D2                     
  4860                           ;fs_adc.c: 137:             convert_data.convert_channel_6 = (uint32_t)((procces_data.ch
      +                          annel_6*999)/5);
  4861  0022D2  0E00               	movlw	0
  4862  0022D4  6E39               	movwf	___fldiv@a^0,c
  4863  0022D6  0E00               	movlw	0
  4864  0022D8  6E3A               	movwf	(___fldiv@a+1)^0,c
  4865  0022DA  0EA0               	movlw	160
  4866  0022DC  6E3B               	movwf	(___fldiv@a+2)^0,c
  4867  0022DE  0E40               	movlw	64
  4868  0022E0  6E3C               	movwf	(___fldiv@a+3)^0,c
  4869  0022E2  0E00               	movlw	0
  4870  0022E4  6E20               	movwf	___flmul@a^0,c
  4871  0022E6  0EC0               	movlw	192
  4872  0022E8  6E21               	movwf	(___flmul@a+1)^0,c
  4873  0022EA  0E79               	movlw	121
  4874  0022EC  6E22               	movwf	(___flmul@a+2)^0,c
  4875  0022EE  0E44               	movlw	68
  4876  0022F0  6E23               	movwf	(___flmul@a+3)^0,c
  4877  0022F2  C148  F01C         	movff	_procces_data+24,___flmul@b
  4878  0022F6  C149  F01D         	movff	_procces_data+25,___flmul@b+1
  4879  0022FA  C14A  F01E         	movff	_procces_data+26,___flmul@b+2
  4880  0022FE  C14B  F01F         	movff	_procces_data+27,___flmul@b+3
  4881  002302  ECBF  F017         	call	___flmul	;wreg free
  4882  002306  C01C  F035         	movff	?___flmul,___fldiv@b
  4883  00230A  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4884  00230E  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4885  002312  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4886  002316  ECD4  F019         	call	___fldiv	;wreg free
  4887  00231A  C035  F04E         	movff	?___fldiv,___fltol@f1
  4888  00231E  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4889  002322  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4890  002326  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4891  00232A  ECDC  F024         	call	___fltol	;wreg free
  4892  00232E  C04E  F118         	movff	?___fltol,_convert_data+24
  4893  002332  C04F  F119         	movff	?___fltol+1,_convert_data+25
  4894  002336  C050  F11A         	movff	?___fltol+2,_convert_data+26
  4895  00233A  C051  F11B         	movff	?___fltol+3,_convert_data+27
  4896                           
  4897                           ;fs_adc.c: 138:         break;
  4898  00233E  EF43  F012         	goto	l54
  4899  002342                     l5475:
  4900                           
  4901                           ; BSR set to: 0
  4902                           ;fs_adc.c: 141:             adc_raw_data.channel_7 = readAdcValue(7);
  4903  002342  0E07               	movlw	7
  4904  002344  EC95  F02C         	call	_readAdcValue
  4905  002348  C001  F191         	movff	?_readAdcValue,_adc_raw_data+14
  4906  00234C  C002  F192         	movff	?_readAdcValue+1,_adc_raw_data+15
  4907  002350                     
  4908                           ;fs_adc.c: 142:             procces_data.channel_7 = (float)((adc_raw_data.channel_7*5.0
      +                          )/1024.0);
  4909  002350  0E00               	movlw	0
  4910  002352  6E20               	movwf	___flmul@a^0,c
  4911  002354  0E00               	movlw	0
  4912  002356  6E21               	movwf	(___flmul@a+1)^0,c
  4913  002358  0EA0               	movlw	160
  4914  00235A  6E22               	movwf	(___flmul@a+2)^0,c
  4915  00235C  0E40               	movlw	64
  4916  00235E  6E23               	movwf	(___flmul@a+3)^0,c
  4917  002360  C191  F00E         	movff	_adc_raw_data+14,___xxtofl@val
  4918  002364  C192  F00F         	movff	_adc_raw_data+15,___xxtofl@val+1
  4919  002368  6A10               	clrf	(___xxtofl@val+2)^0,c
  4920  00236A  6A11               	clrf	(___xxtofl@val+3)^0,c
  4921  00236C  0E00               	movlw	0
  4922  00236E  EC70  F020         	call	___xxtofl
  4923  002372  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4924  002376  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4925  00237A  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4926  00237E  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4927  002382  ECBF  F017         	call	___flmul	;wreg free
  4928  002386  C01C  F035         	movff	?___flmul,___fldiv@b
  4929  00238A  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4930  00238E  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4931  002392  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4932  002396  0E00               	movlw	0
  4933  002398  6E39               	movwf	___fldiv@a^0,c
  4934  00239A  0E00               	movlw	0
  4935  00239C  6E3A               	movwf	(___fldiv@a+1)^0,c
  4936  00239E  0E80               	movlw	128
  4937  0023A0  6E3B               	movwf	(___fldiv@a+2)^0,c
  4938  0023A2  0E44               	movlw	68
  4939  0023A4  6E3C               	movwf	(___fldiv@a+3)^0,c
  4940  0023A6  ECD4  F019         	call	___fldiv	;wreg free
  4941  0023AA  C035  F14C         	movff	?___fldiv,_procces_data+28
  4942  0023AE  C036  F14D         	movff	?___fldiv+1,_procces_data+29
  4943  0023B2  C037  F14E         	movff	?___fldiv+2,_procces_data+30
  4944  0023B6  C038  F14F         	movff	?___fldiv+3,_procces_data+31
  4945  0023BA                     
  4946                           ;fs_adc.c: 143:             convert_data.convert_channel_7 = (uint32_t)((procces_data.ch
      +                          annel_7*999)/5);
  4947  0023BA  0E00               	movlw	0
  4948  0023BC  6E39               	movwf	___fldiv@a^0,c
  4949  0023BE  0E00               	movlw	0
  4950  0023C0  6E3A               	movwf	(___fldiv@a+1)^0,c
  4951  0023C2  0EA0               	movlw	160
  4952  0023C4  6E3B               	movwf	(___fldiv@a+2)^0,c
  4953  0023C6  0E40               	movlw	64
  4954  0023C8  6E3C               	movwf	(___fldiv@a+3)^0,c
  4955  0023CA  0E00               	movlw	0
  4956  0023CC  6E20               	movwf	___flmul@a^0,c
  4957  0023CE  0EC0               	movlw	192
  4958  0023D0  6E21               	movwf	(___flmul@a+1)^0,c
  4959  0023D2  0E79               	movlw	121
  4960  0023D4  6E22               	movwf	(___flmul@a+2)^0,c
  4961  0023D6  0E44               	movlw	68
  4962  0023D8  6E23               	movwf	(___flmul@a+3)^0,c
  4963  0023DA  C14C  F01C         	movff	_procces_data+28,___flmul@b
  4964  0023DE  C14D  F01D         	movff	_procces_data+29,___flmul@b+1
  4965  0023E2  C14E  F01E         	movff	_procces_data+30,___flmul@b+2
  4966  0023E6  C14F  F01F         	movff	_procces_data+31,___flmul@b+3
  4967  0023EA  ECBF  F017         	call	___flmul	;wreg free
  4968  0023EE  C01C  F035         	movff	?___flmul,___fldiv@b
  4969  0023F2  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4970  0023F6  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4971  0023FA  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4972  0023FE  ECD4  F019         	call	___fldiv	;wreg free
  4973  002402  C035  F04E         	movff	?___fldiv,___fltol@f1
  4974  002406  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4975  00240A  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4976  00240E  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4977  002412  ECDC  F024         	call	___fltol	;wreg free
  4978  002416  C04E  F11C         	movff	?___fltol,_convert_data+28
  4979  00241A  C04F  F11D         	movff	?___fltol+1,_convert_data+29
  4980  00241E  C050  F11E         	movff	?___fltol+2,_convert_data+30
  4981  002422  C051  F11F         	movff	?___fltol+3,_convert_data+31
  4982                           
  4983                           ;fs_adc.c: 144:         break;
  4984  002426  EF43  F012         	goto	l54
  4985  00242A                     l5483:
  4986  00242A  0100               	movlb	0	; () banked
  4987  00242C  51FC               	movf	(_timer_value+9)& (0+255),w,b
  4988  00242E  6E58               	movwf	??_scanAdcConversion^0,c
  4989  002430  6A59               	clrf	(??_scanAdcConversion+1)^0,c
  4990                           
  4991                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4992                           ; Switch size 1, requested type "simple"
  4993                           ; Number of cases is 1, Range of values is 0 to 0
  4994                           ; switch strategies available:
  4995                           ; Name         Instructions Cycles
  4996                           ; simple_byte            4     3 (average)
  4997                           ;	Chosen strategy is simple_byte
  4998  002432  5059               	movf	(??_scanAdcConversion+1)^0,w,c
  4999  002434  0A00               	xorlw	0	; case 0
  5000  002436  B4D8               	btfsc	status,2,c
  5001  002438  EF20  F012         	goto	l6279
  5002  00243C  EF43  F012         	goto	l54
  5003  002440                     l6279:
  5004                           
  5005                           ; BSR set to: 0
  5006                           ; Switch size 1, requested type "simple"
  5007                           ; Number of cases is 8, Range of values is 1 to 8
  5008                           ; switch strategies available:
  5009                           ; Name         Instructions Cycles
  5010                           ; simple_byte           25    13 (average)
  5011                           ;	Chosen strategy is simple_byte
  5012  002440  5058               	movf	??_scanAdcConversion^0,w,c
  5013  002442  0A01               	xorlw	1	; case 1
  5014  002444  B4D8               	btfsc	status,2,c
  5015  002446  EF43  F00E         	goto	l5431
  5016  00244A  0A03               	xorlw	3	; case 2
  5017  00244C  B4D8               	btfsc	status,2,c
  5018  00244E  EFB7  F00E         	goto	l5437
  5019  002452  0A01               	xorlw	1	; case 3
  5020  002454  B4D8               	btfsc	status,2,c
  5021  002456  EF2B  F00F         	goto	l5443
  5022  00245A  0A07               	xorlw	7	; case 4
  5023  00245C  B4D8               	btfsc	status,2,c
  5024  00245E  EFD1  F00F         	goto	l5451
  5025  002462  0A01               	xorlw	1	; case 5
  5026  002464  B4D8               	btfsc	status,2,c
  5027  002466  EF45  F010         	goto	l5457
  5028  00246A  0A03               	xorlw	3	; case 6
  5029  00246C  B4D8               	btfsc	status,2,c
  5030  00246E  EFB9  F010         	goto	l5463
  5031  002472  0A01               	xorlw	1	; case 7
  5032  002474  B4D8               	btfsc	status,2,c
  5033  002476  EF2D  F011         	goto	l5469
  5034  00247A  0A0F               	xorlw	15	; case 8
  5035  00247C  B4D8               	btfsc	status,2,c
  5036  00247E  EFA1  F011         	goto	l5475
  5037  002482  EF43  F012         	goto	l54
  5038  002486                     l54:
  5039  002486  0012               	return		;funcret
  5040  002488                     __end_of_scanAdcConversion:
  5041                           	callstack 0
  5042                           
  5043 ;; *************** function _readAdcValue *****************
  5044 ;; Defined at:
  5045 ;;		line 34 in file "fs_adc.c"
  5046 ;; Parameters:    Size  Location     Type
  5047 ;;  adcChannel      1    wreg     unsigned char 
  5048 ;; Auto vars:     Size  Location     Type
  5049 ;;  adcChannel      1    4[COMRAM] unsigned char 
  5050 ;;  adcValue        2    5[COMRAM] unsigned short 
  5051 ;; Return value:  Size  Location     Type
  5052 ;;                  2    0[COMRAM] unsigned short 
  5053 ;; Registers used:
  5054 ;;		wreg, status,2, status,0
  5055 ;; Tracked objects:
  5056 ;;		On entry : 0/0
  5057 ;;		On exit  : 0/0
  5058 ;;		Unchanged: 0/0
  5059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5060 ;;      Params:         2       0       0       0       0       0       0
  5061 ;;      Locals:         3       0       0       0       0       0       0
  5062 ;;      Temps:          2       0       0       0       0       0       0
  5063 ;;      Totals:         7       0       0       0       0       0       0
  5064 ;;Total ram usage:        7 bytes
  5065 ;; Hardware stack levels used:    1
  5066 ;; Hardware stack levels required when called:    1
  5067 ;; This function calls:
  5068 ;;		Nothing
  5069 ;; This function is called by:
  5070 ;;		_scanAdcConversion
  5071 ;; This function uses a non-reentrant model
  5072 ;;
  5073                           
  5074                           	psect	text11
  5075  00592A                     __ptext11:
  5076                           	callstack 0
  5077  00592A                     _readAdcValue:
  5078                           	callstack 25
  5079                           
  5080                           ;incstack = 0
  5081                           ;readAdcValue@adcChannel stored from wreg
  5082  00592A  6E05               	movwf	readAdcValue@adcChannel^0,c
  5083  00592C                     
  5084                           ;fs_adc.c: 38:  ADCON0bits.CHS = adcChannel;
  5085  00592C  C005  F003         	movff	readAdcValue@adcChannel,??_readAdcValue
  5086  005930  4603               	rlncf	??_readAdcValue^0,f,c
  5087  005932  4603               	rlncf	??_readAdcValue^0,f,c
  5088  005934  50C2               	movf	194,w,c	;volatile
  5089  005936  1803               	xorwf	??_readAdcValue^0,w,c
  5090  005938  0B83               	andlw	-125
  5091  00593A  1803               	xorwf	??_readAdcValue^0,w,c
  5092  00593C  6EC2               	movwf	194,c	;volatile
  5093  00593E                     
  5094                           ;fs_adc.c: 39:  ADCON0bits.ADON = 1;
  5095  00593E  80C2               	bsf	194,0,c	;volatile
  5096  005940                     
  5097                           ;fs_adc.c: 40:  ADCON0bits.GO_nDONE = 1;
  5098  005940  82C2               	bsf	194,1,c	;volatile
  5099  005942                     l35:
  5100  005942  B2C2               	btfsc	194,1,c	;volatile
  5101  005944  EFA6  F02C         	goto	u6311
  5102  005948  EFA8  F02C         	goto	u6310
  5103  00594C                     u6311:
  5104  00594C  EFA1  F02C         	goto	l35
  5105  005950                     u6310:
  5106  005950                     
  5107                           ;fs_adc.c: 42:  adcValue = (uint16_t)((ADRESH << 8) + ADRESL);
  5108  005950  50C4               	movf	196,w,c	;volatile
  5109  005952  6E04               	movwf	(??_readAdcValue+1)^0,c
  5110  005954  6A03               	clrf	??_readAdcValue^0,c
  5111  005956  50C3               	movf	195,w,c	;volatile
  5112  005958  2403               	addwf	??_readAdcValue^0,w,c
  5113  00595A  6E06               	movwf	readAdcValue@adcValue^0,c
  5114  00595C  0E00               	movlw	0
  5115  00595E  2004               	addwfc	(??_readAdcValue+1)^0,w,c
  5116  005960  6E07               	movwf	(readAdcValue@adcValue+1)^0,c
  5117  005962                     
  5118                           ;fs_adc.c: 43:     return adcValue;
  5119  005962  C006  F001         	movff	readAdcValue@adcValue,?_readAdcValue
  5120  005966  C007  F002         	movff	readAdcValue@adcValue+1,?_readAdcValue+1
  5121  00596A  0012               	return		;funcret
  5122  00596C                     __end_of_readAdcValue:
  5123                           	callstack 0
  5124                           
  5125 ;; *************** function _calculatedAverageValue *****************
  5126 ;; Defined at:
  5127 ;;		line 154 in file "fs_adc.c"
  5128 ;; Parameters:    Size  Location     Type
  5129 ;;		None
  5130 ;; Auto vars:     Size  Location     Type
  5131 ;;		None
  5132 ;; Return value:  Size  Location     Type
  5133 ;;                  1    wreg      void 
  5134 ;; Registers used:
  5135 ;;		wreg, status,2, status,0, cstack
  5136 ;; Tracked objects:
  5137 ;;		On entry : 0/0
  5138 ;;		On exit  : 0/0
  5139 ;;		Unchanged: 0/0
  5140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5141 ;;      Params:         0       0       0       0       0       0       0
  5142 ;;      Locals:         0       0       0       0       0       0       0
  5143 ;;      Temps:         24       0       0       0       0       0       0
  5144 ;;      Totals:        24       0       0       0       0       0       0
  5145 ;;Total ram usage:       24 bytes
  5146 ;; Hardware stack levels used:    1
  5147 ;; Hardware stack levels required when called:    2
  5148 ;; This function calls:
  5149 ;;		___lldiv
  5150 ;;		___lmul
  5151 ;;		___xxtofl
  5152 ;; This function is called by:
  5153 ;;		_startMotor
  5154 ;; This function uses a non-reentrant model
  5155 ;;
  5156                           
  5157                           	psect	text12
  5158  003742                     __ptext12:
  5159                           	callstack 0
  5160  003742                     _calculatedAverageValue:
  5161                           	callstack 25
  5162  003742                     
  5163                           ;fs_adc.c: 156:     driver_limit.pay = 0;
  5164  003742  0E00               	movlw	0
  5165  003744  0101               	movlb	1	; () banked
  5166  003746  6F93               	movwf	_driver_limit& (0+255),b
  5167  003748  0E00               	movlw	0
  5168  00374A  6F94               	movwf	(_driver_limit+1)& (0+255),b
  5169  00374C  0E00               	movlw	0
  5170  00374E  6F95               	movwf	(_driver_limit+2)& (0+255),b
  5171  003750  0E00               	movlw	0
  5172  003752  6F96               	movwf	(_driver_limit+3)& (0+255),b
  5173                           
  5174                           ;fs_adc.c: 157:     driver_limit.payda = 0;
  5175  003754  0E00               	movlw	0
  5176  003756  6F97               	movwf	(_driver_limit+4)& (0+255),b
  5177  003758  0E00               	movlw	0
  5178  00375A  6F98               	movwf	(_driver_limit+5)& (0+255),b
  5179  00375C  0E00               	movlw	0
  5180  00375E  6F99               	movwf	(_driver_limit+6)& (0+255),b
  5181  003760  0E00               	movlw	0
  5182  003762  6F9A               	movwf	(_driver_limit+7)& (0+255),b
  5183                           
  5184                           ;fs_adc.c: 158:     driver_limit.ortalama = 0;
  5185  003764  0E00               	movlw	0
  5186  003766  6F9B               	movwf	(_driver_limit+8)& (0+255),b
  5187  003768  0E00               	movlw	0
  5188  00376A  6F9C               	movwf	(_driver_limit+9)& (0+255),b
  5189  00376C  0E00               	movlw	0
  5190  00376E  6F9D               	movwf	(_driver_limit+10)& (0+255),b
  5191  003770  0E00               	movlw	0
  5192  003772  6F9E               	movwf	(_driver_limit+11)& (0+255),b
  5193  003774                     
  5194                           ; BSR set to: 1
  5195                           ;fs_adc.c: 161:    driver_limit.pay =(uint32_t) ( (convert_data.convert_channel_0 *1) +
  5196  003774  C10C  F001         	movff	_convert_data+12,___lmul@multiplier
  5197  003778  C10D  F002         	movff	_convert_data+13,___lmul@multiplier+1
  5198  00377C  C10E  F003         	movff	_convert_data+14,___lmul@multiplier+2
  5199  003780  C10F  F004         	movff	_convert_data+15,___lmul@multiplier+3
  5200  003784  0EB8               	movlw	184
  5201  003786  6E05               	movwf	___lmul@multiplicand^0,c
  5202  003788  0E0B               	movlw	11
  5203  00378A  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5204  00378C  0E00               	movlw	0
  5205  00378E  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5206  003790  0E00               	movlw	0
  5207  003792  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5208  003794  ECAC  F02A         	call	___lmul	;wreg free
  5209  003798  C001  F01C         	movff	?___lmul,??_calculatedAverageValue
  5210  00379C  C002  F01D         	movff	?___lmul+1,??_calculatedAverageValue+1
  5211  0037A0  C003  F01E         	movff	?___lmul+2,??_calculatedAverageValue+2
  5212  0037A4  C004  F01F         	movff	?___lmul+3,??_calculatedAverageValue+3
  5213  0037A8  C108  F001         	movff	_convert_data+8,___lmul@multiplier
  5214  0037AC  C109  F002         	movff	_convert_data+9,___lmul@multiplier+1
  5215  0037B0  C10A  F003         	movff	_convert_data+10,___lmul@multiplier+2
  5216  0037B4  C10B  F004         	movff	_convert_data+11,___lmul@multiplier+3
  5217  0037B8  0ED0               	movlw	208
  5218  0037BA  6E05               	movwf	___lmul@multiplicand^0,c
  5219  0037BC  0E07               	movlw	7
  5220  0037BE  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5221  0037C0  0E00               	movlw	0
  5222  0037C2  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5223  0037C4  0E00               	movlw	0
  5224  0037C6  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5225  0037C8  ECAC  F02A         	call	___lmul	;wreg free
  5226  0037CC  5001               	movf	?___lmul^0,w,c
  5227  0037CE  241C               	addwf	??_calculatedAverageValue^0,w,c
  5228  0037D0  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5229  0037D2  5002               	movf	(?___lmul+1)^0,w,c
  5230  0037D4  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5231  0037D6  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5232  0037D8  5003               	movf	(?___lmul+2)^0,w,c
  5233  0037DA  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5234  0037DC  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5235  0037DE  5004               	movf	(?___lmul+3)^0,w,c
  5236  0037E0  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5237  0037E2  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5238  0037E4  C104  F001         	movff	_convert_data+4,___lmul@multiplier
  5239  0037E8  C105  F002         	movff	_convert_data+5,___lmul@multiplier+1
  5240  0037EC  C106  F003         	movff	_convert_data+6,___lmul@multiplier+2
  5241  0037F0  C107  F004         	movff	_convert_data+7,___lmul@multiplier+3
  5242  0037F4  0EE8               	movlw	232
  5243  0037F6  6E05               	movwf	___lmul@multiplicand^0,c
  5244  0037F8  0E03               	movlw	3
  5245  0037FA  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5246  0037FC  0E00               	movlw	0
  5247  0037FE  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5248  003800  0E00               	movlw	0
  5249  003802  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5250  003804  ECAC  F02A         	call	___lmul	;wreg free
  5251  003808  5001               	movf	?___lmul^0,w,c
  5252  00380A  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5253  00380C  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5254  00380E  5002               	movf	(?___lmul+1)^0,w,c
  5255  003810  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5256  003812  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5257  003814  5003               	movf	(?___lmul+2)^0,w,c
  5258  003816  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5259  003818  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5260  00381A  5004               	movf	(?___lmul+3)^0,w,c
  5261  00381C  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5262  00381E  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5263  003820  0101               	movlb	1	; () banked
  5264  003822  5100               	movf	_convert_data& (0+255),w,b
  5265  003824  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5266  003826  6F93               	movwf	_driver_limit& (0+255),b
  5267  003828  5101               	movf	(_convert_data+1)& (0+255),w,b
  5268  00382A  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5269  00382C  6F94               	movwf	(_driver_limit+1)& (0+255),b
  5270  00382E  5102               	movf	(_convert_data+2)& (0+255),w,b
  5271  003830  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5272  003832  6F95               	movwf	(_driver_limit+2)& (0+255),b
  5273  003834  5103               	movf	(_convert_data+3)& (0+255),w,b
  5274  003836  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5275  003838  6F96               	movwf	(_driver_limit+3)& (0+255),b
  5276  00383A                     
  5277                           ; BSR set to: 1
  5278                           ;fs_adc.c: 166:    driver_limit.pay += (uint32_t)( (convert_data.convert_channel_4 * 400
      +                          0) +
  5279  00383A  C11C  F001         	movff	_convert_data+28,___lmul@multiplier
  5280  00383E  C11D  F002         	movff	_convert_data+29,___lmul@multiplier+1
  5281  003842  C11E  F003         	movff	_convert_data+30,___lmul@multiplier+2
  5282  003846  C11F  F004         	movff	_convert_data+31,___lmul@multiplier+3
  5283  00384A  0E58               	movlw	88
  5284  00384C  6E05               	movwf	___lmul@multiplicand^0,c
  5285  00384E  0E1B               	movlw	27
  5286  003850  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5287  003852  0E00               	movlw	0
  5288  003854  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5289  003856  0E00               	movlw	0
  5290  003858  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5291  00385A  ECAC  F02A         	call	___lmul	;wreg free
  5292  00385E  C001  F01C         	movff	?___lmul,??_calculatedAverageValue
  5293  003862  C002  F01D         	movff	?___lmul+1,??_calculatedAverageValue+1
  5294  003866  C003  F01E         	movff	?___lmul+2,??_calculatedAverageValue+2
  5295  00386A  C004  F01F         	movff	?___lmul+3,??_calculatedAverageValue+3
  5296  00386E  C118  F001         	movff	_convert_data+24,___lmul@multiplier
  5297  003872  C119  F002         	movff	_convert_data+25,___lmul@multiplier+1
  5298  003876  C11A  F003         	movff	_convert_data+26,___lmul@multiplier+2
  5299  00387A  C11B  F004         	movff	_convert_data+27,___lmul@multiplier+3
  5300  00387E  0E70               	movlw	112
  5301  003880  6E05               	movwf	___lmul@multiplicand^0,c
  5302  003882  0E17               	movlw	23
  5303  003884  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5304  003886  0E00               	movlw	0
  5305  003888  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5306  00388A  0E00               	movlw	0
  5307  00388C  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5308  00388E  ECAC  F02A         	call	___lmul	;wreg free
  5309  003892  5001               	movf	?___lmul^0,w,c
  5310  003894  241C               	addwf	??_calculatedAverageValue^0,w,c
  5311  003896  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5312  003898  5002               	movf	(?___lmul+1)^0,w,c
  5313  00389A  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5314  00389C  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5315  00389E  5003               	movf	(?___lmul+2)^0,w,c
  5316  0038A0  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5317  0038A2  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5318  0038A4  5004               	movf	(?___lmul+3)^0,w,c
  5319  0038A6  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5320  0038A8  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5321  0038AA  C114  F001         	movff	_convert_data+20,___lmul@multiplier
  5322  0038AE  C115  F002         	movff	_convert_data+21,___lmul@multiplier+1
  5323  0038B2  C116  F003         	movff	_convert_data+22,___lmul@multiplier+2
  5324  0038B6  C117  F004         	movff	_convert_data+23,___lmul@multiplier+3
  5325  0038BA  0E88               	movlw	136
  5326  0038BC  6E05               	movwf	___lmul@multiplicand^0,c
  5327  0038BE  0E13               	movlw	19
  5328  0038C0  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5329  0038C2  0E00               	movlw	0
  5330  0038C4  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5331  0038C6  0E00               	movlw	0
  5332  0038C8  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5333  0038CA  ECAC  F02A         	call	___lmul	;wreg free
  5334  0038CE  5001               	movf	?___lmul^0,w,c
  5335  0038D0  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5336  0038D2  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5337  0038D4  5002               	movf	(?___lmul+1)^0,w,c
  5338  0038D6  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5339  0038D8  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5340  0038DA  5003               	movf	(?___lmul+2)^0,w,c
  5341  0038DC  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5342  0038DE  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5343  0038E0  5004               	movf	(?___lmul+3)^0,w,c
  5344  0038E2  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5345  0038E4  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5346  0038E6  C110  F001         	movff	_convert_data+16,___lmul@multiplier
  5347  0038EA  C111  F002         	movff	_convert_data+17,___lmul@multiplier+1
  5348  0038EE  C112  F003         	movff	_convert_data+18,___lmul@multiplier+2
  5349  0038F2  C113  F004         	movff	_convert_data+19,___lmul@multiplier+3
  5350  0038F6  0EA0               	movlw	160
  5351  0038F8  6E05               	movwf	___lmul@multiplicand^0,c
  5352  0038FA  0E0F               	movlw	15
  5353  0038FC  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5354  0038FE  0E00               	movlw	0
  5355  003900  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5356  003902  0E00               	movlw	0
  5357  003904  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5358  003906  ECAC  F02A         	call	___lmul	;wreg free
  5359  00390A  5001               	movf	?___lmul^0,w,c
  5360  00390C  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5361  00390E  6E28               	movwf	(??_calculatedAverageValue+12)^0,c
  5362  003910  5002               	movf	(?___lmul+1)^0,w,c
  5363  003912  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5364  003914  6E29               	movwf	(??_calculatedAverageValue+13)^0,c
  5365  003916  5003               	movf	(?___lmul+2)^0,w,c
  5366  003918  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5367  00391A  6E2A               	movwf	(??_calculatedAverageValue+14)^0,c
  5368  00391C  5004               	movf	(?___lmul+3)^0,w,c
  5369  00391E  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5370  003920  6E2B               	movwf	(??_calculatedAverageValue+15)^0,c
  5371  003922  5028               	movf	(??_calculatedAverageValue+12)^0,w,c
  5372  003924  0101               	movlb	1	; () banked
  5373  003926  2793               	addwf	_driver_limit& (0+255),f,b
  5374  003928  5029               	movf	(??_calculatedAverageValue+13)^0,w,c
  5375  00392A  2394               	addwfc	(_driver_limit+1)& (0+255),f,b
  5376  00392C  502A               	movf	(??_calculatedAverageValue+14)^0,w,c
  5377  00392E  2395               	addwfc	(_driver_limit+2)& (0+255),f,b
  5378  003930  502B               	movf	(??_calculatedAverageValue+15)^0,w,c
  5379  003932  2396               	addwfc	(_driver_limit+3)& (0+255),f,b
  5380  003934                     
  5381                           ; BSR set to: 1
  5382                           ;fs_adc.c: 171:     driver_limit.payda = (uint32_t) (convert_data.convert_channel_0 + co
      +                          nvert_data.convert_channel_1 +
  5383  003934  5108               	movf	(_convert_data+8)& (0+255),w,b
  5384  003936  2504               	addwf	(_convert_data+4)& (0+255),w,b
  5385  003938  6E1C               	movwf	??_calculatedAverageValue^0,c
  5386  00393A  5109               	movf	(_convert_data+9)& (0+255),w,b
  5387  00393C  2105               	addwfc	(_convert_data+5)& (0+255),w,b
  5388  00393E  6E1D               	movwf	(??_calculatedAverageValue+1)^0,c
  5389  003940  510A               	movf	(_convert_data+10)& (0+255),w,b
  5390  003942  2106               	addwfc	(_convert_data+6)& (0+255),w,b
  5391  003944  6E1E               	movwf	(??_calculatedAverageValue+2)^0,c
  5392  003946  510B               	movf	(_convert_data+11)& (0+255),w,b
  5393  003948  2107               	addwfc	(_convert_data+7)& (0+255),w,b
  5394  00394A  6E1F               	movwf	(??_calculatedAverageValue+3)^0,c
  5395  00394C  510C               	movf	(_convert_data+12)& (0+255),w,b
  5396  00394E  241C               	addwf	??_calculatedAverageValue^0,w,c
  5397  003950  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5398  003952  510D               	movf	(_convert_data+13)& (0+255),w,b
  5399  003954  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5400  003956  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5401  003958  510E               	movf	(_convert_data+14)& (0+255),w,b
  5402  00395A  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5403  00395C  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5404  00395E  510F               	movf	(_convert_data+15)& (0+255),w,b
  5405  003960  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5406  003962  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5407  003964  5110               	movf	(_convert_data+16)& (0+255),w,b
  5408  003966  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5409  003968  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5410  00396A  5111               	movf	(_convert_data+17)& (0+255),w,b
  5411  00396C  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5412  00396E  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5413  003970  5112               	movf	(_convert_data+18)& (0+255),w,b
  5414  003972  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5415  003974  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5416  003976  5113               	movf	(_convert_data+19)& (0+255),w,b
  5417  003978  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5418  00397A  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5419  00397C  5114               	movf	(_convert_data+20)& (0+255),w,b
  5420  00397E  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5421  003980  6E28               	movwf	(??_calculatedAverageValue+12)^0,c
  5422  003982  5115               	movf	(_convert_data+21)& (0+255),w,b
  5423  003984  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5424  003986  6E29               	movwf	(??_calculatedAverageValue+13)^0,c
  5425  003988  5116               	movf	(_convert_data+22)& (0+255),w,b
  5426  00398A  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5427  00398C  6E2A               	movwf	(??_calculatedAverageValue+14)^0,c
  5428  00398E  5117               	movf	(_convert_data+23)& (0+255),w,b
  5429  003990  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5430  003992  6E2B               	movwf	(??_calculatedAverageValue+15)^0,c
  5431  003994  5118               	movf	(_convert_data+24)& (0+255),w,b
  5432  003996  2428               	addwf	(??_calculatedAverageValue+12)^0,w,c
  5433  003998  6E2C               	movwf	(??_calculatedAverageValue+16)^0,c
  5434  00399A  5119               	movf	(_convert_data+25)& (0+255),w,b
  5435  00399C  2029               	addwfc	(??_calculatedAverageValue+13)^0,w,c
  5436  00399E  6E2D               	movwf	(??_calculatedAverageValue+17)^0,c
  5437  0039A0  511A               	movf	(_convert_data+26)& (0+255),w,b
  5438  0039A2  202A               	addwfc	(??_calculatedAverageValue+14)^0,w,c
  5439  0039A4  6E2E               	movwf	(??_calculatedAverageValue+18)^0,c
  5440  0039A6  511B               	movf	(_convert_data+27)& (0+255),w,b
  5441  0039A8  202B               	addwfc	(??_calculatedAverageValue+15)^0,w,c
  5442  0039AA  6E2F               	movwf	(??_calculatedAverageValue+19)^0,c
  5443  0039AC  511C               	movf	(_convert_data+28)& (0+255),w,b
  5444  0039AE  242C               	addwf	(??_calculatedAverageValue+16)^0,w,c
  5445  0039B0  6E30               	movwf	(??_calculatedAverageValue+20)^0,c
  5446  0039B2  511D               	movf	(_convert_data+29)& (0+255),w,b
  5447  0039B4  202D               	addwfc	(??_calculatedAverageValue+17)^0,w,c
  5448  0039B6  6E31               	movwf	(??_calculatedAverageValue+21)^0,c
  5449  0039B8  511E               	movf	(_convert_data+30)& (0+255),w,b
  5450  0039BA  202E               	addwfc	(??_calculatedAverageValue+18)^0,w,c
  5451  0039BC  6E32               	movwf	(??_calculatedAverageValue+22)^0,c
  5452  0039BE  511F               	movf	(_convert_data+31)& (0+255),w,b
  5453  0039C0  202F               	addwfc	(??_calculatedAverageValue+19)^0,w,c
  5454  0039C2  6E33               	movwf	(??_calculatedAverageValue+23)^0,c
  5455  0039C4  5100               	movf	_convert_data& (0+255),w,b
  5456  0039C6  2430               	addwf	(??_calculatedAverageValue+20)^0,w,c
  5457  0039C8  6F97               	movwf	(_driver_limit+4)& (0+255),b
  5458  0039CA  5101               	movf	(_convert_data+1)& (0+255),w,b
  5459  0039CC  2031               	addwfc	(??_calculatedAverageValue+21)^0,w,c
  5460  0039CE  6F98               	movwf	(_driver_limit+5)& (0+255),b
  5461  0039D0  5102               	movf	(_convert_data+2)& (0+255),w,b
  5462  0039D2  2032               	addwfc	(??_calculatedAverageValue+22)^0,w,c
  5463  0039D4  6F99               	movwf	(_driver_limit+6)& (0+255),b
  5464  0039D6  5103               	movf	(_convert_data+3)& (0+255),w,b
  5465  0039D8  2033               	addwfc	(??_calculatedAverageValue+23)^0,w,c
  5466  0039DA  6F9A               	movwf	(_driver_limit+7)& (0+255),b
  5467  0039DC                     
  5468                           ; BSR set to: 1
  5469                           ;fs_adc.c: 176:     driver_limit.ortalama = (float)(driver_limit.pay/driver_limit.payda)
      +                          ;
  5470  0039DC  C197  F005         	movff	_driver_limit+4,___lldiv@divisor
  5471  0039E0  C198  F006         	movff	_driver_limit+5,___lldiv@divisor+1
  5472  0039E4  C199  F007         	movff	_driver_limit+6,___lldiv@divisor+2
  5473  0039E8  C19A  F008         	movff	_driver_limit+7,___lldiv@divisor+3
  5474  0039EC  C193  F001         	movff	_driver_limit,___lldiv@dividend
  5475  0039F0  C194  F002         	movff	_driver_limit+1,___lldiv@dividend+1
  5476  0039F4  C195  F003         	movff	_driver_limit+2,___lldiv@dividend+2
  5477  0039F8  C196  F004         	movff	_driver_limit+3,___lldiv@dividend+3
  5478  0039FC  EC1F  F029         	call	___lldiv	;wreg free
  5479  003A00  C001  F00E         	movff	?___lldiv,___xxtofl@val
  5480  003A04  C002  F00F         	movff	?___lldiv+1,___xxtofl@val+1
  5481  003A08  C003  F010         	movff	?___lldiv+2,___xxtofl@val+2
  5482  003A0C  C004  F011         	movff	?___lldiv+3,___xxtofl@val+3
  5483  003A10  0E00               	movlw	0
  5484  003A12  EC70  F020         	call	___xxtofl
  5485  003A16  C00E  F19B         	movff	?___xxtofl,_driver_limit+8
  5486  003A1A  C00F  F19C         	movff	?___xxtofl+1,_driver_limit+9
  5487  003A1E  C010  F19D         	movff	?___xxtofl+2,_driver_limit+10
  5488  003A22  C011  F19E         	movff	?___xxtofl+3,_driver_limit+11
  5489  003A26  0012               	return		;funcret
  5490  003A28                     __end_of_calculatedAverageValue:
  5491                           	callstack 0
  5492                           
  5493 ;; *************** function ___lmul *****************
  5494 ;; Defined at:
  5495 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul32.c"
  5496 ;; Parameters:    Size  Location     Type
  5497 ;;  multiplier      4    0[COMRAM] unsigned long 
  5498 ;;  multiplicand    4    4[COMRAM] unsigned long 
  5499 ;; Auto vars:     Size  Location     Type
  5500 ;;  product         4    8[COMRAM] unsigned long 
  5501 ;; Return value:  Size  Location     Type
  5502 ;;                  4    0[COMRAM] unsigned long 
  5503 ;; Registers used:
  5504 ;;		wreg, status,2, status,0
  5505 ;; Tracked objects:
  5506 ;;		On entry : 0/0
  5507 ;;		On exit  : 0/0
  5508 ;;		Unchanged: 0/0
  5509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5510 ;;      Params:         8       0       0       0       0       0       0
  5511 ;;      Locals:         4       0       0       0       0       0       0
  5512 ;;      Temps:          0       0       0       0       0       0       0
  5513 ;;      Totals:        12       0       0       0       0       0       0
  5514 ;;Total ram usage:       12 bytes
  5515 ;; Hardware stack levels used:    1
  5516 ;; Hardware stack levels required when called:    1
  5517 ;; This function calls:
  5518 ;;		Nothing
  5519 ;; This function is called by:
  5520 ;;		_calculatedAverageValue
  5521 ;; This function uses a non-reentrant model
  5522 ;;
  5523                           
  5524                           	psect	text13
  5525  005558                     __ptext13:
  5526                           	callstack 0
  5527  005558                     ___lmul:
  5528                           	callstack 25
  5529  005558  0E00               	movlw	0
  5530  00555A  6E09               	movwf	___lmul@product^0,c
  5531  00555C  0E00               	movlw	0
  5532  00555E  6E0A               	movwf	(___lmul@product+1)^0,c
  5533  005560  0E00               	movlw	0
  5534  005562  6E0B               	movwf	(___lmul@product+2)^0,c
  5535  005564  0E00               	movlw	0
  5536  005566  6E0C               	movwf	(___lmul@product+3)^0,c
  5537  005568                     l5235:
  5538  005568  A001               	btfss	___lmul@multiplier^0,0,c
  5539  00556A  EFB9  F02A         	goto	u6361
  5540  00556E  EFBB  F02A         	goto	u6360
  5541  005572                     u6361:
  5542  005572  EFC3  F02A         	goto	l5239
  5543  005576                     u6360:
  5544  005576  5005               	movf	___lmul@multiplicand^0,w,c
  5545  005578  2609               	addwf	___lmul@product^0,f,c
  5546  00557A  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  5547  00557C  220A               	addwfc	(___lmul@product+1)^0,f,c
  5548  00557E  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  5549  005580  220B               	addwfc	(___lmul@product+2)^0,f,c
  5550  005582  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  5551  005584  220C               	addwfc	(___lmul@product+3)^0,f,c
  5552  005586                     l5239:
  5553  005586  90D8               	bcf	status,0,c
  5554  005588  3605               	rlcf	___lmul@multiplicand^0,f,c
  5555  00558A  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  5556  00558C  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  5557  00558E  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  5558  005590  90D8               	bcf	status,0,c
  5559  005592  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  5560  005594  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  5561  005596  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  5562  005598  3201               	rrcf	___lmul@multiplier^0,f,c
  5563  00559A  5001               	movf	___lmul@multiplier^0,w,c
  5564  00559C  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  5565  00559E  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  5566  0055A0  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  5567  0055A2  A4D8               	btfss	status,2,c
  5568  0055A4  EFD6  F02A         	goto	u6371
  5569  0055A8  EFD8  F02A         	goto	u6370
  5570  0055AC                     u6371:
  5571  0055AC  EFB4  F02A         	goto	l5235
  5572  0055B0                     u6370:
  5573  0055B0  C009  F001         	movff	___lmul@product,?___lmul
  5574  0055B4  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  5575  0055B8  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  5576  0055BC  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  5577  0055C0  0012               	return		;funcret
  5578  0055C2                     __end_of___lmul:
  5579                           	callstack 0
  5580                           
  5581 ;; *************** function ___lldiv *****************
  5582 ;; Defined at:
  5583 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__lldiv.c"
  5584 ;; Parameters:    Size  Location     Type
  5585 ;;  dividend        4    0[COMRAM] unsigned long 
  5586 ;;  divisor         4    4[COMRAM] unsigned long 
  5587 ;; Auto vars:     Size  Location     Type
  5588 ;;  quotient        4    8[COMRAM] unsigned long 
  5589 ;;  counter         1   12[COMRAM] unsigned char 
  5590 ;; Return value:  Size  Location     Type
  5591 ;;                  4    0[COMRAM] unsigned long 
  5592 ;; Registers used:
  5593 ;;		wreg, status,2, status,0
  5594 ;; Tracked objects:
  5595 ;;		On entry : 0/0
  5596 ;;		On exit  : 0/0
  5597 ;;		Unchanged: 0/0
  5598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5599 ;;      Params:         8       0       0       0       0       0       0
  5600 ;;      Locals:         5       0       0       0       0       0       0
  5601 ;;      Temps:          0       0       0       0       0       0       0
  5602 ;;      Totals:        13       0       0       0       0       0       0
  5603 ;;Total ram usage:       13 bytes
  5604 ;; Hardware stack levels used:    1
  5605 ;; Hardware stack levels required when called:    1
  5606 ;; This function calls:
  5607 ;;		Nothing
  5608 ;; This function is called by:
  5609 ;;		_calculatedAverageValue
  5610 ;; This function uses a non-reentrant model
  5611 ;;
  5612                           
  5613                           	psect	text14
  5614  00523E                     __ptext14:
  5615                           	callstack 0
  5616  00523E                     ___lldiv:
  5617                           	callstack 25
  5618  00523E  0E00               	movlw	0
  5619  005240  6E09               	movwf	___lldiv@quotient^0,c
  5620  005242  0E00               	movlw	0
  5621  005244  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  5622  005246  0E00               	movlw	0
  5623  005248  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  5624  00524A  0E00               	movlw	0
  5625  00524C  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  5626  00524E  5005               	movf	___lldiv@divisor^0,w,c
  5627  005250  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  5628  005252  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  5629  005254  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  5630  005256  B4D8               	btfsc	status,2,c
  5631  005258  EF30  F029         	goto	u6381
  5632  00525C  EF32  F029         	goto	u6380
  5633  005260                     u6381:
  5634  005260  EF68  F029         	goto	l515
  5635  005264                     u6380:
  5636  005264  0E01               	movlw	1
  5637  005266  6E0D               	movwf	___lldiv@counter^0,c
  5638  005268  EF3C  F029         	goto	l5251
  5639  00526C                     l5249:
  5640  00526C  90D8               	bcf	status,0,c
  5641  00526E  3605               	rlcf	___lldiv@divisor^0,f,c
  5642  005270  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  5643  005272  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  5644  005274  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  5645  005276  2A0D               	incf	___lldiv@counter^0,f,c
  5646  005278                     l5251:
  5647  005278  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  5648  00527A  EF41  F029         	goto	u6391
  5649  00527E  EF43  F029         	goto	u6390
  5650  005282                     u6391:
  5651  005282  EF36  F029         	goto	l5249
  5652  005286                     u6390:
  5653  005286                     l5253:
  5654  005286  90D8               	bcf	status,0,c
  5655  005288  3609               	rlcf	___lldiv@quotient^0,f,c
  5656  00528A  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  5657  00528C  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  5658  00528E  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  5659  005290  5005               	movf	___lldiv@divisor^0,w,c
  5660  005292  5C01               	subwf	___lldiv@dividend^0,w,c
  5661  005294  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5662  005296  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  5663  005298  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5664  00529A  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  5665  00529C  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5666  00529E  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  5667  0052A0  A0D8               	btfss	status,0,c
  5668  0052A2  EF55  F029         	goto	u6401
  5669  0052A6  EF57  F029         	goto	u6400
  5670  0052AA                     u6401:
  5671  0052AA  EF60  F029         	goto	l5261
  5672  0052AE                     u6400:
  5673  0052AE  5005               	movf	___lldiv@divisor^0,w,c
  5674  0052B0  5E01               	subwf	___lldiv@dividend^0,f,c
  5675  0052B2  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5676  0052B4  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  5677  0052B6  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5678  0052B8  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  5679  0052BA  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5680  0052BC  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  5681  0052BE  8009               	bsf	___lldiv@quotient^0,0,c
  5682  0052C0                     l5261:
  5683  0052C0  90D8               	bcf	status,0,c
  5684  0052C2  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  5685  0052C4  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  5686  0052C6  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  5687  0052C8  3205               	rrcf	___lldiv@divisor^0,f,c
  5688  0052CA  2E0D               	decfsz	___lldiv@counter^0,f,c
  5689  0052CC  EF43  F029         	goto	l5253
  5690  0052D0                     l515:
  5691  0052D0  C009  F001         	movff	___lldiv@quotient,?___lldiv
  5692  0052D4  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  5693  0052D8  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  5694  0052DC  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  5695  0052E0  0012               	return		;funcret
  5696  0052E2                     __end_of___lldiv:
  5697                           	callstack 0
  5698                           
  5699 ;; *************** function _PWM2_setDC *****************
  5700 ;; Defined at:
  5701 ;;		line 59 in file "fs_pwm.c"
  5702 ;; Parameters:    Size  Location     Type
  5703 ;;  dutycycle       2   87[COMRAM] short 
  5704 ;; Auto vars:     Size  Location     Type
  5705 ;;  duty            2   91[COMRAM] unsigned short 
  5706 ;; Return value:  Size  Location     Type
  5707 ;;                  1    wreg      void 
  5708 ;; Registers used:
  5709 ;;		wreg, status,2, status,0, cstack
  5710 ;; Tracked objects:
  5711 ;;		On entry : 0/0
  5712 ;;		On exit  : 0/0
  5713 ;;		Unchanged: 0/0
  5714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5715 ;;      Params:         2       0       0       0       0       0       0
  5716 ;;      Locals:         2       0       0       0       0       0       0
  5717 ;;      Temps:          2       0       0       0       0       0       0
  5718 ;;      Totals:         6       0       0       0       0       0       0
  5719 ;;Total ram usage:        6 bytes
  5720 ;; Hardware stack levels used:    1
  5721 ;; Hardware stack levels required when called:    2
  5722 ;; This function calls:
  5723 ;;		___fltol
  5724 ;;		___xxtofl
  5725 ;;		_fabsf
  5726 ;; This function is called by:
  5727 ;;		_main
  5728 ;;		_stopMotor
  5729 ;;		_startMotor
  5730 ;; This function uses a non-reentrant model
  5731 ;;
  5732                           
  5733                           	psect	text15
  5734  0053F6                     __ptext15:
  5735                           	callstack 0
  5736  0053F6                     _PWM2_setDC:
  5737                           	callstack 25
  5738  0053F6                     
  5739                           ;fs_pwm.c: 63:     if (dutycycle <= 1023)
  5740  0053F6  BE59               	btfsc	(PWM2_setDC@dutycycle+1)^0,7,c
  5741  0053F8  EF07  F02A         	goto	u6730
  5742  0053FC  0E04               	movlw	4
  5743  0053FE  5C59               	subwf	(PWM2_setDC@dutycycle+1)^0,w,c
  5744  005400  B0D8               	btfsc	status,0,c
  5745  005402  EF05  F02A         	goto	u6731
  5746  005406  EF07  F02A         	goto	u6730
  5747  00540A                     u6731:
  5748  00540A  EF37  F02A         	goto	l412
  5749  00540E                     u6730:
  5750  00540E                     
  5751                           ;fs_pwm.c: 64:     {;fs_pwm.c: 65:         duty = (uint16_t) fabsf(dutycycle);
  5752  00540E  C058  F00E         	movff	PWM2_setDC@dutycycle,___xxtofl@val
  5753  005412  C059  F00F         	movff	PWM2_setDC@dutycycle+1,___xxtofl@val+1
  5754  005416  0E00               	movlw	0
  5755  005418  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  5756  00541A  0EFF               	movlw	-1
  5757  00541C  6E10               	movwf	(___xxtofl@val+2)^0,c
  5758  00541E  6E11               	movwf	(___xxtofl@val+3)^0,c
  5759  005420  0E01               	movlw	1
  5760  005422  EC70  F020         	call	___xxtofl
  5761  005426  C00E  F01C         	movff	?___xxtofl,fabsf@x
  5762  00542A  C00F  F01D         	movff	?___xxtofl+1,fabsf@x+1
  5763  00542E  C010  F01E         	movff	?___xxtofl+2,fabsf@x+2
  5764  005432  C011  F01F         	movff	?___xxtofl+3,fabsf@x+3
  5765  005436  ECB8  F02D         	call	_fabsf	;wreg free
  5766  00543A  C01C  F04E         	movff	?_fabsf,___fltol@f1
  5767  00543E  C01D  F04F         	movff	?_fabsf+1,___fltol@f1+1
  5768  005442  C01E  F050         	movff	?_fabsf+2,___fltol@f1+2
  5769  005446  C01F  F051         	movff	?_fabsf+3,___fltol@f1+3
  5770  00544A  ECDC  F024         	call	___fltol	;wreg free
  5771  00544E  C04E  F05C         	movff	?___fltol,PWM2_setDC@duty
  5772  005452  C04F  F05D         	movff	?___fltol+1,PWM2_setDC@duty+1
  5773  005456                     
  5774                           ;fs_pwm.c: 66:         CCPR2L = duty>>2;
  5775  005456  C05C  F05A         	movff	PWM2_setDC@duty,??_PWM2_setDC
  5776  00545A  C05D  F05B         	movff	PWM2_setDC@duty+1,??_PWM2_setDC+1
  5777  00545E  90D8               	bcf	status,0,c
  5778  005460  325B               	rrcf	(??_PWM2_setDC+1)^0,f,c
  5779  005462  325A               	rrcf	??_PWM2_setDC^0,f,c
  5780  005464  90D8               	bcf	status,0,c
  5781  005466  325B               	rrcf	(??_PWM2_setDC+1)^0,f,c
  5782  005468  325A               	rrcf	??_PWM2_setDC^0,f,c
  5783  00546A  505A               	movf	??_PWM2_setDC^0,w,c
  5784  00546C  6E67               	movwf	103,c	;volatile
  5785  00546E                     l412:
  5786  00546E  0012               	return		;funcret
  5787  005470                     __end_of_PWM2_setDC:
  5788                           	callstack 0
  5789                           
  5790 ;; *************** function _PWM1_setDC *****************
  5791 ;; Defined at:
  5792 ;;		line 43 in file "fs_pwm.c"
  5793 ;; Parameters:    Size  Location     Type
  5794 ;;  dutycycle       2   87[COMRAM] short 
  5795 ;; Auto vars:     Size  Location     Type
  5796 ;;  duty            2   91[COMRAM] unsigned short 
  5797 ;; Return value:  Size  Location     Type
  5798 ;;                  1    wreg      void 
  5799 ;; Registers used:
  5800 ;;		wreg, status,2, status,0, cstack
  5801 ;; Tracked objects:
  5802 ;;		On entry : 0/0
  5803 ;;		On exit  : 0/0
  5804 ;;		Unchanged: 0/0
  5805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5806 ;;      Params:         2       0       0       0       0       0       0
  5807 ;;      Locals:         2       0       0       0       0       0       0
  5808 ;;      Temps:          2       0       0       0       0       0       0
  5809 ;;      Totals:         6       0       0       0       0       0       0
  5810 ;;Total ram usage:        6 bytes
  5811 ;; Hardware stack levels used:    1
  5812 ;; Hardware stack levels required when called:    2
  5813 ;; This function calls:
  5814 ;;		___fltol
  5815 ;;		___xxtofl
  5816 ;;		_fabsf
  5817 ;; This function is called by:
  5818 ;;		_main
  5819 ;;		_stopMotor
  5820 ;;		_startMotor
  5821 ;; This function uses a non-reentrant model
  5822 ;;
  5823                           
  5824                           	psect	text16
  5825  005470                     __ptext16:
  5826                           	callstack 0
  5827  005470                     _PWM1_setDC:
  5828                           	callstack 25
  5829  005470                     
  5830                           ;fs_pwm.c: 47:     if (dutycycle <= 1023)
  5831  005470  BE59               	btfsc	(PWM1_setDC@dutycycle+1)^0,7,c
  5832  005472  EF44  F02A         	goto	u6720
  5833  005476  0E04               	movlw	4
  5834  005478  5C59               	subwf	(PWM1_setDC@dutycycle+1)^0,w,c
  5835  00547A  B0D8               	btfsc	status,0,c
  5836  00547C  EF42  F02A         	goto	u6721
  5837  005480  EF44  F02A         	goto	u6720
  5838  005484                     u6721:
  5839  005484  EF74  F02A         	goto	l408
  5840  005488                     u6720:
  5841  005488                     
  5842                           ;fs_pwm.c: 48:     {;fs_pwm.c: 49:         duty = (uint16_t) fabsf(dutycycle);
  5843  005488  C058  F00E         	movff	PWM1_setDC@dutycycle,___xxtofl@val
  5844  00548C  C059  F00F         	movff	PWM1_setDC@dutycycle+1,___xxtofl@val+1
  5845  005490  0E00               	movlw	0
  5846  005492  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  5847  005494  0EFF               	movlw	-1
  5848  005496  6E10               	movwf	(___xxtofl@val+2)^0,c
  5849  005498  6E11               	movwf	(___xxtofl@val+3)^0,c
  5850  00549A  0E01               	movlw	1
  5851  00549C  EC70  F020         	call	___xxtofl
  5852  0054A0  C00E  F01C         	movff	?___xxtofl,fabsf@x
  5853  0054A4  C00F  F01D         	movff	?___xxtofl+1,fabsf@x+1
  5854  0054A8  C010  F01E         	movff	?___xxtofl+2,fabsf@x+2
  5855  0054AC  C011  F01F         	movff	?___xxtofl+3,fabsf@x+3
  5856  0054B0  ECB8  F02D         	call	_fabsf	;wreg free
  5857  0054B4  C01C  F04E         	movff	?_fabsf,___fltol@f1
  5858  0054B8  C01D  F04F         	movff	?_fabsf+1,___fltol@f1+1
  5859  0054BC  C01E  F050         	movff	?_fabsf+2,___fltol@f1+2
  5860  0054C0  C01F  F051         	movff	?_fabsf+3,___fltol@f1+3
  5861  0054C4  ECDC  F024         	call	___fltol	;wreg free
  5862  0054C8  C04E  F05C         	movff	?___fltol,PWM1_setDC@duty
  5863  0054CC  C04F  F05D         	movff	?___fltol+1,PWM1_setDC@duty+1
  5864  0054D0                     
  5865                           ;fs_pwm.c: 50:         CCPR1L = duty>>2;
  5866  0054D0  C05C  F05A         	movff	PWM1_setDC@duty,??_PWM1_setDC
  5867  0054D4  C05D  F05B         	movff	PWM1_setDC@duty+1,??_PWM1_setDC+1
  5868  0054D8  90D8               	bcf	status,0,c
  5869  0054DA  325B               	rrcf	(??_PWM1_setDC+1)^0,f,c
  5870  0054DC  325A               	rrcf	??_PWM1_setDC^0,f,c
  5871  0054DE  90D8               	bcf	status,0,c
  5872  0054E0  325B               	rrcf	(??_PWM1_setDC+1)^0,f,c
  5873  0054E2  325A               	rrcf	??_PWM1_setDC^0,f,c
  5874  0054E4  505A               	movf	??_PWM1_setDC^0,w,c
  5875  0054E6  6EBE               	movwf	190,c	;volatile
  5876  0054E8                     l408:
  5877  0054E8  0012               	return		;funcret
  5878  0054EA                     __end_of_PWM1_setDC:
  5879                           	callstack 0
  5880                           
  5881 ;; *************** function _fabsf *****************
  5882 ;; Defined at:
  5883 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fabsf.c"
  5884 ;; Parameters:    Size  Location     Type
  5885 ;;  x               4   27[COMRAM] float 
  5886 ;; Auto vars:     Size  Location     Type
  5887 ;;  u               4   31[COMRAM] struct .
  5888 ;; Return value:  Size  Location     Type
  5889 ;;                  4   27[COMRAM] float 
  5890 ;; Registers used:
  5891 ;;		status,2, status,0
  5892 ;; Tracked objects:
  5893 ;;		On entry : 0/0
  5894 ;;		On exit  : 0/0
  5895 ;;		Unchanged: 0/0
  5896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5897 ;;      Params:         4       0       0       0       0       0       0
  5898 ;;      Locals:         4       0       0       0       0       0       0
  5899 ;;      Temps:          0       0       0       0       0       0       0
  5900 ;;      Totals:         8       0       0       0       0       0       0
  5901 ;;Total ram usage:        8 bytes
  5902 ;; Hardware stack levels used:    1
  5903 ;; Hardware stack levels required when called:    1
  5904 ;; This function calls:
  5905 ;;		Nothing
  5906 ;; This function is called by:
  5907 ;;		_PWM1_setDC
  5908 ;;		_PWM2_setDC
  5909 ;; This function uses a non-reentrant model
  5910 ;;
  5911                           
  5912                           	psect	text17
  5913  005B70                     __ptext17:
  5914                           	callstack 0
  5915  005B70                     _fabsf:
  5916                           	callstack 25
  5917  005B70  C1A7  F020         	movff	fabsf@F463,fabsf@u
  5918  005B74  C1A8  F021         	movff	fabsf@F463+1,fabsf@u+1
  5919  005B78  C1A9  F022         	movff	fabsf@F463+2,fabsf@u+2
  5920  005B7C  C1AA  F023         	movff	fabsf@F463+3,fabsf@u+3
  5921  005B80  C01C  F020         	movff	fabsf@x,fabsf@u
  5922  005B84  C01D  F021         	movff	fabsf@x+1,fabsf@u+1
  5923  005B88  C01E  F022         	movff	fabsf@x+2,fabsf@u+2
  5924  005B8C  C01F  F023         	movff	fabsf@x+3,fabsf@u+3
  5925  005B90  9E23               	bcf	(fabsf@u+3)^0,7,c
  5926  005B92  C020  F01C         	movff	fabsf@u,?_fabsf
  5927  005B96  C021  F01D         	movff	fabsf@u+1,?_fabsf+1
  5928  005B9A  C022  F01E         	movff	fabsf@u+2,?_fabsf+2
  5929  005B9E  C023  F01F         	movff	fabsf@u+3,?_fabsf+3
  5930  005BA2  0012               	return		;funcret
  5931  005BA4                     __end_of_fabsf:
  5932                           	callstack 0
  5933                           
  5934 ;; *************** function ___xxtofl *****************
  5935 ;; Defined at:
  5936 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
  5937 ;; Parameters:    Size  Location     Type
  5938 ;;  sign            1    wreg     unsigned char 
  5939 ;;  val             4   13[COMRAM] long 
  5940 ;; Auto vars:     Size  Location     Type
  5941 ;;  sign            1   21[COMRAM] unsigned char 
  5942 ;;  arg             4   23[COMRAM] unsigned long 
  5943 ;;  exp             1   22[COMRAM] unsigned char 
  5944 ;; Return value:  Size  Location     Type
  5945 ;;                  4   13[COMRAM] unsigned char 
  5946 ;; Registers used:
  5947 ;;		wreg, status,2, status,0
  5948 ;; Tracked objects:
  5949 ;;		On entry : 0/0
  5950 ;;		On exit  : 0/0
  5951 ;;		Unchanged: 0/0
  5952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5953 ;;      Params:         4       0       0       0       0       0       0
  5954 ;;      Locals:         6       0       0       0       0       0       0
  5955 ;;      Temps:          4       0       0       0       0       0       0
  5956 ;;      Totals:        14       0       0       0       0       0       0
  5957 ;;Total ram usage:       14 bytes
  5958 ;; Hardware stack levels used:    1
  5959 ;; Hardware stack levels required when called:    1
  5960 ;; This function calls:
  5961 ;;		Nothing
  5962 ;; This function is called by:
  5963 ;;		_scanAdcConversion
  5964 ;;		_calculatedAverageValue
  5965 ;;		_PWM1_setDC
  5966 ;;		_PWM2_setDC
  5967 ;;		_speedControl
  5968 ;; This function uses a non-reentrant model
  5969 ;;
  5970                           
  5971                           	psect	text18
  5972  0040E0                     __ptext18:
  5973                           	callstack 0
  5974  0040E0                     ___xxtofl:
  5975                           	callstack 25
  5976                           
  5977                           ;incstack = 0
  5978                           ;___xxtofl@sign stored from wreg
  5979  0040E0  6E16               	movwf	___xxtofl@sign^0,c
  5980  0040E2  5016               	movf	___xxtofl@sign^0,w,c
  5981  0040E4  B4D8               	btfsc	status,2,c
  5982  0040E6  EF77  F020         	goto	u6411
  5983  0040EA  EF79  F020         	goto	u6410
  5984  0040EE                     u6411:
  5985  0040EE  EF9B  F020         	goto	l1143
  5986  0040F2                     u6410:
  5987  0040F2  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
  5988  0040F4  EF80  F020         	goto	u6420
  5989  0040F8  EF7E  F020         	goto	u6421
  5990  0040FC                     u6421:
  5991  0040FC  EF9B  F020         	goto	l1143
  5992  004100                     u6420:
  5993  004100  C00E  F012         	movff	___xxtofl@val,??___xxtofl
  5994  004104  C00F  F013         	movff	___xxtofl@val+1,??___xxtofl+1
  5995  004108  C010  F014         	movff	___xxtofl@val+2,??___xxtofl+2
  5996  00410C  C011  F015         	movff	___xxtofl@val+3,??___xxtofl+3
  5997  004110  1E12               	comf	??___xxtofl^0,f,c
  5998  004112  1E13               	comf	(??___xxtofl+1)^0,f,c
  5999  004114  1E14               	comf	(??___xxtofl+2)^0,f,c
  6000  004116  1E15               	comf	(??___xxtofl+3)^0,f,c
  6001  004118  2A12               	incf	??___xxtofl^0,f,c
  6002  00411A  0E00               	movlw	0
  6003  00411C  2213               	addwfc	(??___xxtofl+1)^0,f,c
  6004  00411E  2214               	addwfc	(??___xxtofl+2)^0,f,c
  6005  004120  2215               	addwfc	(??___xxtofl+3)^0,f,c
  6006  004122  C012  F018         	movff	??___xxtofl,___xxtofl@arg
  6007  004126  C013  F019         	movff	??___xxtofl+1,___xxtofl@arg+1
  6008  00412A  C014  F01A         	movff	??___xxtofl+2,___xxtofl@arg+2
  6009  00412E  C015  F01B         	movff	??___xxtofl+3,___xxtofl@arg+3
  6010  004132  EFA3  F020         	goto	l5271
  6011  004136                     l1143:
  6012  004136  C00E  F018         	movff	___xxtofl@val,___xxtofl@arg
  6013  00413A  C00F  F019         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6014  00413E  C010  F01A         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6015  004142  C011  F01B         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6016  004146                     l5271:
  6017  004146  500E               	movf	___xxtofl@val^0,w,c
  6018  004148  100F               	iorwf	(___xxtofl@val+1)^0,w,c
  6019  00414A  1010               	iorwf	(___xxtofl@val+2)^0,w,c
  6020  00414C  1011               	iorwf	(___xxtofl@val+3)^0,w,c
  6021  00414E  A4D8               	btfss	status,2,c
  6022  004150  EFAC  F020         	goto	u6431
  6023  004154  EFAE  F020         	goto	u6430
  6024  004158                     u6431:
  6025  004158  EFB8  F020         	goto	l5277
  6026  00415C                     u6430:
  6027  00415C  0E00               	movlw	0
  6028  00415E  6E0E               	movwf	?___xxtofl^0,c
  6029  004160  0E00               	movlw	0
  6030  004162  6E0F               	movwf	(?___xxtofl+1)^0,c
  6031  004164  0E00               	movlw	0
  6032  004166  6E10               	movwf	(?___xxtofl+2)^0,c
  6033  004168  0E00               	movlw	0
  6034  00416A  6E11               	movwf	(?___xxtofl+3)^0,c
  6035  00416C  EF49  F021         	goto	l1146
  6036  004170                     l5277:
  6037  004170  0E96               	movlw	150
  6038  004172  6E17               	movwf	___xxtofl@exp^0,c
  6039  004174  EFC2  F020         	goto	l5281
  6040  004178                     l5279:
  6041  004178  2A17               	incf	___xxtofl@exp^0,f,c
  6042  00417A  90D8               	bcf	status,0,c
  6043  00417C  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
  6044  00417E  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
  6045  004180  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
  6046  004182  3218               	rrcf	___xxtofl@arg^0,f,c
  6047  004184                     l5281:
  6048  004184  0E00               	movlw	0
  6049  004186  1418               	andwf	___xxtofl@arg^0,w,c
  6050  004188  6E12               	movwf	??___xxtofl^0,c
  6051  00418A  0E00               	movlw	0
  6052  00418C  1419               	andwf	(___xxtofl@arg+1)^0,w,c
  6053  00418E  6E13               	movwf	(??___xxtofl+1)^0,c
  6054  004190  0E00               	movlw	0
  6055  004192  141A               	andwf	(___xxtofl@arg+2)^0,w,c
  6056  004194  6E14               	movwf	(??___xxtofl+2)^0,c
  6057  004196  0EFE               	movlw	254
  6058  004198  141B               	andwf	(___xxtofl@arg+3)^0,w,c
  6059  00419A  6E15               	movwf	(??___xxtofl+3)^0,c
  6060  00419C  5012               	movf	??___xxtofl^0,w,c
  6061  00419E  1013               	iorwf	(??___xxtofl+1)^0,w,c
  6062  0041A0  1014               	iorwf	(??___xxtofl+2)^0,w,c
  6063  0041A2  1015               	iorwf	(??___xxtofl+3)^0,w,c
  6064  0041A4  A4D8               	btfss	status,2,c
  6065  0041A6  EFD7  F020         	goto	u6441
  6066  0041AA  EFD9  F020         	goto	u6440
  6067  0041AE                     u6441:
  6068  0041AE  EFBC  F020         	goto	l5279
  6069  0041B2                     u6440:
  6070  0041B2  EFE7  F020         	goto	l1150
  6071  0041B6                     l5283:
  6072  0041B6  2A17               	incf	___xxtofl@exp^0,f,c
  6073  0041B8  0E01               	movlw	1
  6074  0041BA  2618               	addwf	___xxtofl@arg^0,f,c
  6075  0041BC  0E00               	movlw	0
  6076  0041BE  2219               	addwfc	(___xxtofl@arg+1)^0,f,c
  6077  0041C0  221A               	addwfc	(___xxtofl@arg+2)^0,f,c
  6078  0041C2  221B               	addwfc	(___xxtofl@arg+3)^0,f,c
  6079  0041C4  90D8               	bcf	status,0,c
  6080  0041C6  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
  6081  0041C8  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
  6082  0041CA  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
  6083  0041CC  3218               	rrcf	___xxtofl@arg^0,f,c
  6084  0041CE                     l1150:
  6085  0041CE  0E00               	movlw	0
  6086  0041D0  1418               	andwf	___xxtofl@arg^0,w,c
  6087  0041D2  6E12               	movwf	??___xxtofl^0,c
  6088  0041D4  0E00               	movlw	0
  6089  0041D6  1419               	andwf	(___xxtofl@arg+1)^0,w,c
  6090  0041D8  6E13               	movwf	(??___xxtofl+1)^0,c
  6091  0041DA  0E00               	movlw	0
  6092  0041DC  141A               	andwf	(___xxtofl@arg+2)^0,w,c
  6093  0041DE  6E14               	movwf	(??___xxtofl+2)^0,c
  6094  0041E0  0EFF               	movlw	255
  6095  0041E2  141B               	andwf	(___xxtofl@arg+3)^0,w,c
  6096  0041E4  6E15               	movwf	(??___xxtofl+3)^0,c
  6097  0041E6  5012               	movf	??___xxtofl^0,w,c
  6098  0041E8  1013               	iorwf	(??___xxtofl+1)^0,w,c
  6099  0041EA  1014               	iorwf	(??___xxtofl+2)^0,w,c
  6100  0041EC  1015               	iorwf	(??___xxtofl+3)^0,w,c
  6101  0041EE  A4D8               	btfss	status,2,c
  6102  0041F0  EFFC  F020         	goto	u6451
  6103  0041F4  EFFE  F020         	goto	u6450
  6104  0041F8                     u6451:
  6105  0041F8  EFDB  F020         	goto	l5283
  6106  0041FC                     u6450:
  6107  0041FC  EF06  F021         	goto	l5291
  6108  004200                     l5289:
  6109  004200  0617               	decf	___xxtofl@exp^0,f,c
  6110  004202  90D8               	bcf	status,0,c
  6111  004204  3618               	rlcf	___xxtofl@arg^0,f,c
  6112  004206  3619               	rlcf	(___xxtofl@arg+1)^0,f,c
  6113  004208  361A               	rlcf	(___xxtofl@arg+2)^0,f,c
  6114  00420A  361B               	rlcf	(___xxtofl@arg+3)^0,f,c
  6115  00420C                     l5291:
  6116  00420C  BE1A               	btfsc	(___xxtofl@arg+2)^0,7,c
  6117  00420E  EF0B  F021         	goto	u6461
  6118  004212  EF0D  F021         	goto	u6460
  6119  004216                     u6461:
  6120  004216  EF15  F021         	goto	l1157
  6121  00421A                     u6460:
  6122  00421A  0E02               	movlw	2
  6123  00421C  6017               	cpfslt	___xxtofl@exp^0,c
  6124  00421E  EF13  F021         	goto	u6471
  6125  004222  EF15  F021         	goto	u6470
  6126  004226                     u6471:
  6127  004226  EF00  F021         	goto	l5289
  6128  00422A                     u6470:
  6129  00422A                     l1157:
  6130  00422A  B017               	btfsc	___xxtofl@exp^0,0,c
  6131  00422C  EF1A  F021         	goto	u6481
  6132  004230  EF1C  F021         	goto	u6480
  6133  004234                     u6481:
  6134  004234  EF1D  F021         	goto	l5297
  6135  004238                     u6480:
  6136  004238  9E1A               	bcf	(___xxtofl@arg+2)^0,7,c
  6137  00423A                     l5297:
  6138  00423A  90D8               	bcf	status,0,c
  6139  00423C  3217               	rrcf	___xxtofl@exp^0,f,c
  6140  00423E  C017  F012         	movff	___xxtofl@exp,??___xxtofl
  6141  004242  6A13               	clrf	(??___xxtofl+1)^0,c
  6142  004244  6A14               	clrf	(??___xxtofl+2)^0,c
  6143  004246  6A15               	clrf	(??___xxtofl+3)^0,c
  6144  004248  C012  F015         	movff	??___xxtofl,??___xxtofl+3
  6145  00424C  6A14               	clrf	(??___xxtofl+2)^0,c
  6146  00424E  6A13               	clrf	(??___xxtofl+1)^0,c
  6147  004250  6A12               	clrf	??___xxtofl^0,c
  6148  004252  5012               	movf	??___xxtofl^0,w,c
  6149  004254  1218               	iorwf	___xxtofl@arg^0,f,c
  6150  004256  5013               	movf	(??___xxtofl+1)^0,w,c
  6151  004258  1219               	iorwf	(___xxtofl@arg+1)^0,f,c
  6152  00425A  5014               	movf	(??___xxtofl+2)^0,w,c
  6153  00425C  121A               	iorwf	(___xxtofl@arg+2)^0,f,c
  6154  00425E  5015               	movf	(??___xxtofl+3)^0,w,c
  6155  004260  121B               	iorwf	(___xxtofl@arg+3)^0,f,c
  6156  004262  5016               	movf	___xxtofl@sign^0,w,c
  6157  004264  B4D8               	btfsc	status,2,c
  6158  004266  EF37  F021         	goto	u6491
  6159  00426A  EF39  F021         	goto	u6490
  6160  00426E                     u6491:
  6161  00426E  EF41  F021         	goto	l5307
  6162  004272                     u6490:
  6163  004272  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
  6164  004274  EF40  F021         	goto	u6500
  6165  004278  EF3E  F021         	goto	u6501
  6166  00427C                     u6501:
  6167  00427C  EF41  F021         	goto	l5307
  6168  004280                     u6500:
  6169  004280  8E1B               	bsf	(___xxtofl@arg+3)^0,7,c
  6170  004282                     l5307:
  6171  004282  C018  F00E         	movff	___xxtofl@arg,?___xxtofl
  6172  004286  C019  F00F         	movff	___xxtofl@arg+1,?___xxtofl+1
  6173  00428A  C01A  F010         	movff	___xxtofl@arg+2,?___xxtofl+2
  6174  00428E  C01B  F011         	movff	___xxtofl@arg+3,?___xxtofl+3
  6175  004292                     l1146:
  6176  004292  0012               	return		;funcret
  6177  004294                     __end_of___xxtofl:
  6178                           	callstack 0
  6179                           
  6180 ;; *************** function _sprintf *****************
  6181 ;; Defined at:
  6182 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  6183 ;; Parameters:    Size  Location     Type
  6184 ;;  s               2  111[BANK0 ] PTR unsigned char 
  6185 ;;		 -> stateMachine@textCursor2(16), 
  6186 ;;  fmt             2  113[BANK0 ] PTR const unsigned char 
  6187 ;;		 -> STR_16(13), STR_14(14), STR_12(16), STR_10(16), 
  6188 ;;		 -> STR_8(18), STR_6(18), STR_4(18), STR_2(15), 
  6189 ;; Auto vars:     Size  Location     Type
  6190 ;;  f               6  123[BANK0 ] struct _IO_FILE
  6191 ;;  ap              2  121[BANK0 ] PTR void [1]
  6192 ;;		 -> ?_sprintf(2), 
  6193 ;;  ret             2    0        int 
  6194 ;; Return value:  Size  Location     Type
  6195 ;;                  2  111[BANK0 ] int 
  6196 ;; Registers used:
  6197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6198 ;; Tracked objects:
  6199 ;;		On entry : 0/0
  6200 ;;		On exit  : 0/0
  6201 ;;		Unchanged: 0/0
  6202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6203 ;;      Params:         0       8       0       0       0       0       0
  6204 ;;      Locals:         0      10       0       0       0       0       0
  6205 ;;      Temps:          0       0       0       0       0       0       0
  6206 ;;      Totals:         0      18       0       0       0       0       0
  6207 ;;Total ram usage:       18 bytes
  6208 ;; Hardware stack levels used:    1
  6209 ;; Hardware stack levels required when called:    8
  6210 ;; This function calls:
  6211 ;;		_vfprintf
  6212 ;; This function is called by:
  6213 ;;		_stateMachine
  6214 ;; This function uses a non-reentrant model
  6215 ;;
  6216                           
  6217                           	psect	text19
  6218  0057FC                     __ptext19:
  6219                           	callstack 0
  6220  0057FC                     _sprintf:
  6221                           	callstack 20
  6222  0057FC  0ED3               	movlw	low (?_sprintf+4)
  6223  0057FE  0100               	movlb	0	; () banked
  6224  005800  6FD9               	movwf	sprintf@ap& (0+255),b
  6225  005802  0E00               	movlw	high (?_sprintf+4)
  6226  005804  6FDA               	movwf	(sprintf@ap+1)& (0+255),b
  6227  005806  C0CF  F0DB         	movff	sprintf@s,sprintf@f
  6228  00580A  C0D0  F0DC         	movff	sprintf@s+1,sprintf@f+1
  6229  00580E                     
  6230                           ; BSR set to: 0
  6231  00580E  0E00               	movlw	0
  6232  005810  6FDE               	movwf	(sprintf@f+3)& (0+255),b
  6233  005812  0E00               	movlw	0
  6234  005814  6FDD               	movwf	(sprintf@f+2)& (0+255),b
  6235  005816                     
  6236                           ; BSR set to: 0
  6237  005816  0E00               	movlw	0
  6238  005818  6FE0               	movwf	(sprintf@f+5)& (0+255),b
  6239  00581A  0E00               	movlw	0
  6240  00581C  6FDF               	movwf	(sprintf@f+4)& (0+255),b
  6241  00581E                     
  6242                           ; BSR set to: 0
  6243  00581E  0EDB               	movlw	low sprintf@f
  6244  005820  6FC7               	movwf	vfprintf@fp& (0+255),b
  6245  005822  0E00               	movlw	high sprintf@f
  6246  005824  6FC8               	movwf	(vfprintf@fp+1)& (0+255),b
  6247  005826  C0D1  F0C9         	movff	sprintf@fmt,vfprintf@fmt
  6248  00582A  C0D2  F0CA         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6249  00582E  0ED9               	movlw	low sprintf@ap
  6250  005830  6FCB               	movwf	vfprintf@ap& (0+255),b
  6251  005832  0E00               	movlw	high sprintf@ap
  6252  005834  6FCC               	movwf	(vfprintf@ap+1)& (0+255),b
  6253  005836  ECE1  F02A         	call	_vfprintf	;wreg free
  6254  00583A  0100               	movlb	0	; () banked
  6255  00583C  51DD               	movf	(sprintf@f+2)& (0+255),w,b
  6256  00583E  25CF               	addwf	sprintf@s& (0+255),w,b
  6257  005840  6ED9               	movwf	fsr2l,c
  6258  005842  51DE               	movf	(sprintf@f+3)& (0+255),w,b
  6259  005844  21D0               	addwfc	(sprintf@s+1)& (0+255),w,b
  6260  005846  6EDA               	movwf	fsr2h,c
  6261  005848  0E00               	movlw	0
  6262  00584A  6EDF               	movwf	indf2,c
  6263  00584C                     
  6264                           ; BSR set to: 0
  6265  00584C  0012               	return		;funcret
  6266  00584E                     __end_of_sprintf:
  6267                           	callstack 0
  6268                           
  6269 ;; *************** function _vfprintf *****************
  6270 ;; Defined at:
  6271 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6272 ;; Parameters:    Size  Location     Type
  6273 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  6274 ;;		 -> sprintf@f(6), 
  6275 ;;  fmt             2  105[BANK0 ] PTR const unsigned char 
  6276 ;;		 -> STR_16(13), STR_14(14), STR_12(16), STR_10(16), 
  6277 ;;		 -> STR_8(18), STR_6(18), STR_4(18), STR_2(15), 
  6278 ;;  ap              2  107[BANK0 ] PTR PTR void 
  6279 ;;		 -> sprintf@ap(2), 
  6280 ;; Auto vars:     Size  Location     Type
  6281 ;;  cfmt            2  109[BANK0 ] PTR unsigned char 
  6282 ;;		 -> STR_16(13), STR_14(14), STR_12(16), STR_10(16), 
  6283 ;;		 -> STR_8(18), STR_6(18), STR_4(18), STR_2(15), 
  6284 ;; Return value:  Size  Location     Type
  6285 ;;                  2  103[BANK0 ] int 
  6286 ;; Registers used:
  6287 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6288 ;; Tracked objects:
  6289 ;;		On entry : 0/0
  6290 ;;		On exit  : 0/0
  6291 ;;		Unchanged: 0/0
  6292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6293 ;;      Params:         0       6       0       0       0       0       0
  6294 ;;      Locals:         0       2       0       0       0       0       0
  6295 ;;      Temps:          0       0       0       0       0       0       0
  6296 ;;      Totals:         0       8       0       0       0       0       0
  6297 ;;Total ram usage:        8 bytes
  6298 ;; Hardware stack levels used:    1
  6299 ;; Hardware stack levels required when called:    7
  6300 ;; This function calls:
  6301 ;;		_vfpfcnvrt
  6302 ;; This function is called by:
  6303 ;;		_sprintf
  6304 ;; This function uses a non-reentrant model
  6305 ;;
  6306                           
  6307                           	psect	text20
  6308  0055C2                     __ptext20:
  6309                           	callstack 0
  6310  0055C2                     _vfprintf:
  6311                           	callstack 20
  6312  0055C2                     
  6313                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6314  0055C2  C0C9  F0CD         	movff	vfprintf@fmt,vfprintf@cfmt
  6315  0055C6  C0CA  F0CE         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6316  0055CA                     
  6317                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  6318  0055CA  0E00               	movlw	0
  6319  0055CC  0101               	movlb	1	; () banked
  6320  0055CE  6FB3               	movwf	(_nout+1)& (0+255),b
  6321  0055D0  0E00               	movlw	0
  6322  0055D2  6FB2               	movwf	_nout& (0+255),b
  6323                           
  6324                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  6325  0055D4  EF03  F02B         	goto	l5581
  6326  0055D8                     l5579:
  6327                           
  6328                           ; BSR set to: 1
  6329                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6330  0055D8  C0C7  F0A7         	movff	vfprintf@fp,vfpfcnvrt@fp
  6331  0055DC  C0C8  F0A8         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6332  0055E0  0ECD               	movlw	low vfprintf@cfmt
  6333  0055E2  0100               	movlb	0	; () banked
  6334  0055E4  6FA9               	movwf	vfpfcnvrt@fmt& (0+255),b
  6335  0055E6  0E00               	movlw	high vfprintf@cfmt
  6336  0055E8  6FAA               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  6337  0055EA  C0CB  F0AB         	movff	vfprintf@ap,vfpfcnvrt@ap
  6338  0055EE  C0CC  F0AC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6339  0055F2  EC44  F012         	call	_vfpfcnvrt	;wreg free
  6340  0055F6  0100               	movlb	0	; () banked
  6341  0055F8  51A7               	movf	?_vfpfcnvrt& (0+255),w,b
  6342  0055FA  0101               	movlb	1	; () banked
  6343  0055FC  27B2               	addwf	_nout& (0+255),f,b
  6344  0055FE  0100               	movlb	0	; () banked
  6345  005600  51A8               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  6346  005602  0101               	movlb	1	; () banked
  6347  005604  23B3               	addwfc	(_nout+1)& (0+255),f,b
  6348  005606                     l5581:
  6349                           
  6350                           ; BSR set to: 1
  6351                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  6352  005606  C0CD  FFF6         	movff	vfprintf@cfmt,tblptrl
  6353  00560A  C0CE  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6354  00560E                     	if	0	;tblptru may be non-zero
  6355  00560E                     	endif
  6356  00560E                     	if	0	;tblptru may be non-zero
  6357  00560E                     	endif
  6358  00560E  0008               	tblrd		*
  6359  005610  50F5               	movf	tablat,w,c
  6360  005612  0900               	iorlw	0
  6361  005614  A4D8               	btfss	status,2,c
  6362  005616  EF0F  F02B         	goto	u6781
  6363  00561A  EF11  F02B         	goto	u6780
  6364  00561E                     u6781:
  6365  00561E  EFEC  F02A         	goto	l5579
  6366  005622                     u6780:
  6367  005622                     
  6368                           ; BSR set to: 1
  6369                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  6370  005622  C1B2  F0C7         	movff	_nout,?_vfprintf
  6371  005626  C1B3  F0C8         	movff	_nout+1,?_vfprintf+1
  6372  00562A                     
  6373                           ; BSR set to: 1
  6374  00562A  0012               	return		;funcret
  6375  00562C                     __end_of_vfprintf:
  6376                           	callstack 0
  6377                           
  6378 ;; *************** function _vfpfcnvrt *****************
  6379 ;; Defined at:
  6380 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6381 ;; Parameters:    Size  Location     Type
  6382 ;;  fp              2   71[BANK0 ] PTR struct _IO_FILE
  6383 ;;		 -> sprintf@f(6), 
  6384 ;;  fmt             2   73[BANK0 ] PTR PTR unsigned char 
  6385 ;;		 -> vfprintf@cfmt(2), 
  6386 ;;  ap              2   75[BANK0 ] PTR PTR void 
  6387 ;;		 -> sprintf@ap(2), 
  6388 ;; Auto vars:     Size  Location     Type
  6389 ;;  ll              8   81[BANK0 ] long long 
  6390 ;;  llu             8    0        unsigned long long 
  6391 ;;  f               4   95[BANK0 ] unsigned long long 
  6392 ;;  ct              3   99[BANK0 ] unsigned char [3]
  6393 ;;  vp              3    0        PTR void 
  6394 ;;  cp              3    0        PTR unsigned char 
  6395 ;;  i               2    0        int 
  6396 ;;  done            2    0        int 
  6397 ;;  c               1  102[BANK0 ] unsigned char 
  6398 ;; Return value:  Size  Location     Type
  6399 ;;                  2   71[BANK0 ] int 
  6400 ;; Registers used:
  6401 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6402 ;; Tracked objects:
  6403 ;;		On entry : 0/0
  6404 ;;		On exit  : 0/0
  6405 ;;		Unchanged: 0/0
  6406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6407 ;;      Params:         0       6       0       0       0       0       0
  6408 ;;      Locals:         0      22       0       0       0       0       0
  6409 ;;      Temps:          0       4       0       0       0       0       0
  6410 ;;      Totals:         0      32       0       0       0       0       0
  6411 ;;Total ram usage:       32 bytes
  6412 ;; Hardware stack levels used:    1
  6413 ;; Hardware stack levels required when called:    6
  6414 ;; This function calls:
  6415 ;;		_atoi
  6416 ;;		_dtoa
  6417 ;;		_efgtoa
  6418 ;;		_fputc
  6419 ;;		_isdigit
  6420 ;;		_isupper
  6421 ;;		_strncmp
  6422 ;;		_tolower
  6423 ;; This function is called by:
  6424 ;;		_vfprintf
  6425 ;; This function uses a non-reentrant model
  6426 ;;
  6427                           
  6428                           	psect	text21
  6429  002488                     __ptext21:
  6430                           	callstack 0
  6431  002488                     _vfpfcnvrt:
  6432                           	callstack 20
  6433  002488                     
  6434                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  6435  002488  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6436  00248C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6437  002490  CFDE FFF6          	movff	postinc2,tblptrl
  6438  002494  CFDD FFF7          	movff	postdec2,tblptrh
  6439  002498                     	if	0	;tblptru may be non-zero
  6440  002498                     	endif
  6441  002498                     	if	0	;tblptru may be non-zero
  6442  002498                     	endif
  6443  002498  0008               	tblrd		*
  6444  00249A  50F5               	movf	tablat,w,c
  6445  00249C  0A25               	xorlw	37
  6446  00249E  A4D8               	btfss	status,2,c
  6447  0024A0  EF54  F012         	goto	u6511
  6448  0024A4  EF56  F012         	goto	u6510
  6449  0024A8                     u6511:
  6450  0024A8  EF43  F015         	goto	l5421
  6451  0024AC                     u6510:
  6452  0024AC                     
  6453                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  6454  0024AC  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6455  0024B0  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6456  0024B4  2ADE               	incf	postinc2,f,c
  6457  0024B6  0E00               	movlw	0
  6458  0024B8  22DD               	addwfc	postdec2,f,c
  6459  0024BA                     
  6460                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  6461  0024BA  0E00               	movlw	0
  6462  0024BC  0101               	movlb	1	; () banked
  6463  0024BE  6FB5               	movwf	(_width+1)& (0+255),b
  6464  0024C0  0E00               	movlw	0
  6465  0024C2  6FB4               	movwf	_width& (0+255),b
  6466  0024C4  C1B4  F1B8         	movff	_width,_flags
  6467  0024C8  C1B5  F1B9         	movff	_width+1,_flags+1
  6468  0024CC                     
  6469                           ; BSR set to: 1
  6470                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  6471  0024CC  69B6               	setf	_prec& (0+255),b
  6472  0024CE  69B7               	setf	(_prec+1)& (0+255),b
  6473  0024D0                     
  6474                           ; BSR set to: 1
  6475                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  6476  0024D0  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6477  0024D4  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6478  0024D8  CFDE FFF6          	movff	postinc2,tblptrl
  6479  0024DC  CFDD FFF7          	movff	postdec2,tblptrh
  6480  0024E0                     	if	0	;tblptru may be non-zero
  6481  0024E0                     	endif
  6482  0024E0                     	if	0	;tblptru may be non-zero
  6483  0024E0                     	endif
  6484  0024E0  0008               	tblrd		*
  6485  0024E2  50F5               	movf	tablat,w,c
  6486  0024E4  0A2A               	xorlw	42
  6487  0024E6  A4D8               	btfss	status,2,c
  6488  0024E8  EF78  F012         	goto	u6521
  6489  0024EC  EF7A  F012         	goto	u6520
  6490  0024F0                     u6521:
  6491  0024F0  EFA3  F012         	goto	l5327
  6492  0024F4                     u6520:
  6493  0024F4                     
  6494                           ; BSR set to: 1
  6495                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  6496  0024F4  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6497  0024F8  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6498  0024FC  2ADE               	incf	postinc2,f,c
  6499  0024FE  0E00               	movlw	0
  6500  002500  22DD               	addwfc	postdec2,f,c
  6501                           
  6502                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6503  002502  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6504  002506  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6505  00250A  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6506  00250E  0E02               	movlw	2
  6507  002510  26DE               	addwf	postinc2,f,c
  6508  002512  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6509  002516  0E00               	movlw	0
  6510  002518  22DD               	addwfc	postdec2,f,c
  6511  00251A  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6512  00251E  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6513  002522  CFDE F1B4          	movff	postinc2,_width
  6514  002526  CFDD F1B5          	movff	postdec2,_width+1
  6515  00252A                     
  6516                           ; BSR set to: 1
  6517                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  6518  00252A  BFB5               	btfsc	(_width+1)& (0+255),7,b
  6519  00252C  EF9C  F012         	goto	u6530
  6520  002530  EF9A  F012         	goto	u6531
  6521  002534                     u6531:
  6522  002534  EFE7  F012         	goto	l5337
  6523  002538                     u6530:
  6524  002538                     
  6525                           ; BSR set to: 1
  6526                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  6527  002538  81B8               	bsf	_flags& (0+255),0,b
  6528                           
  6529                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  6530  00253A  6DB4               	negf	_width& (0+255),b
  6531  00253C  1FB5               	comf	(_width+1)& (0+255),f,b
  6532  00253E  B0D8               	btfsc	status,0,c
  6533  002540  2BB5               	incf	(_width+1)& (0+255),f,b
  6534  002542  EFE7  F012         	goto	l5337
  6535  002546                     l5327:
  6536                           
  6537                           ; BSR set to: 1
  6538                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  6539  002546  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6540  00254A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6541  00254E  CFDE F008          	movff	postinc2,atoi@s
  6542  002552  CFDD F009          	movff	postdec2,atoi@s+1
  6543  002556  EC4A  F021         	call	_atoi	;wreg free
  6544  00255A  C008  F1B4         	movff	?_atoi,_width
  6545  00255E  C009  F1B5         	movff	?_atoi+1,_width+1
  6546                           
  6547                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6548  002562  EFBA  F012         	goto	l5331
  6549  002566                     l5329:
  6550                           
  6551                           ; BSR set to: 0
  6552                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  6553  002566  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6554  00256A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6555  00256E  2ADE               	incf	postinc2,f,c
  6556  002570  0E00               	movlw	0
  6557  002572  22DD               	addwfc	postdec2,f,c
  6558  002574                     l5331:
  6559  002574  0ED0               	movlw	208
  6560  002576  0100               	movlb	0	; () banked
  6561  002578  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  6562  00257A  0EFF               	movlw	255
  6563  00257C  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6564  00257E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6565  002582  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6566  002586  CFDE FFF6          	movff	postinc2,tblptrl
  6567  00258A  CFDD FFF7          	movff	postdec2,tblptrh
  6568  00258E                     	if	0	;tblptru may be non-zero
  6569  00258E                     	endif
  6570  00258E                     	if	0	;tblptru may be non-zero
  6571  00258E                     	endif
  6572  00258E  0008               	tblrd		*
  6573  002590  50F5               	movf	tablat,w,c
  6574  002592  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6575  002594  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  6576  002596  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  6577  002598  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  6578  00259A  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6579  00259C  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  6580  00259E  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  6581  0025A0  E10A               	bnz	u6540
  6582  0025A2  0E0A               	movlw	10
  6583  0025A4  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  6584  0025A6  A0D8               	btfss	status,0,c
  6585  0025A8  EFD8  F012         	goto	u6541
  6586  0025AC  EFDB  F012         	goto	u6540
  6587  0025B0                     u6541:
  6588  0025B0  0E01               	movlw	1
  6589  0025B2  EFDC  F012         	goto	u6550
  6590  0025B6                     u6540:
  6591  0025B6  0E00               	movlw	0
  6592  0025B8                     u6550:
  6593  0025B8  6FB9               	movwf	_vfpfcnvrt$2530& (0+255),b
  6594  0025BA  6BBA               	clrf	(_vfpfcnvrt$2530+1)& (0+255),b
  6595  0025BC                     
  6596                           ; BSR set to: 0
  6597  0025BC  51B9               	movf	_vfpfcnvrt$2530& (0+255),w,b
  6598  0025BE  11BA               	iorwf	(_vfpfcnvrt$2530+1)& (0+255),w,b
  6599  0025C0  A4D8               	btfss	status,2,c
  6600  0025C2  EFE5  F012         	goto	u6561
  6601  0025C6  EFE7  F012         	goto	u6560
  6602  0025CA                     u6561:
  6603  0025CA  EFB3  F012         	goto	l5329
  6604  0025CE                     u6560:
  6605  0025CE                     l5337:
  6606                           
  6607                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  6608  0025CE  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6609  0025D2  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6610  0025D6  CFDE FFF6          	movff	postinc2,tblptrl
  6611  0025DA  CFDD FFF7          	movff	postdec2,tblptrh
  6612  0025DE                     	if	0	;tblptru may be non-zero
  6613  0025DE                     	endif
  6614  0025DE                     	if	0	;tblptru may be non-zero
  6615  0025DE                     	endif
  6616  0025DE  0008               	tblrd		*
  6617  0025E0  50F5               	movf	tablat,w,c
  6618  0025E2  0A2E               	xorlw	46
  6619  0025E4  A4D8               	btfss	status,2,c
  6620  0025E6  EFF7  F012         	goto	u6571
  6621  0025EA  EFF9  F012         	goto	u6570
  6622  0025EE                     u6571:
  6623  0025EE  EF78  F013         	goto	l5357
  6624  0025F2                     u6570:
  6625  0025F2                     
  6626                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  6627  0025F2  0E00               	movlw	0
  6628  0025F4  0101               	movlb	1	; () banked
  6629  0025F6  6FB7               	movwf	(_prec+1)& (0+255),b
  6630  0025F8  0E00               	movlw	0
  6631  0025FA  6FB6               	movwf	_prec& (0+255),b
  6632  0025FC                     
  6633                           ; BSR set to: 1
  6634                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  6635  0025FC  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6636  002600  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6637  002604  2ADE               	incf	postinc2,f,c
  6638  002606  0E00               	movlw	0
  6639  002608  22DD               	addwfc	postdec2,f,c
  6640  00260A                     
  6641                           ; BSR set to: 1
  6642                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  6643  00260A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6644  00260E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6645  002612  CFDE FFF6          	movff	postinc2,tblptrl
  6646  002616  CFDD FFF7          	movff	postdec2,tblptrh
  6647  00261A                     	if	0	;tblptru may be non-zero
  6648  00261A                     	endif
  6649  00261A                     	if	0	;tblptru may be non-zero
  6650  00261A                     	endif
  6651  00261A  0008               	tblrd		*
  6652  00261C  50F5               	movf	tablat,w,c
  6653  00261E  0A2A               	xorlw	42
  6654  002620  A4D8               	btfss	status,2,c
  6655  002622  EF15  F013         	goto	u6581
  6656  002626  EF17  F013         	goto	u6580
  6657  00262A                     u6581:
  6658  00262A  EF34  F013         	goto	l5347
  6659  00262E                     u6580:
  6660  00262E                     
  6661                           ; BSR set to: 1
  6662                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  6663  00262E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6664  002632  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6665  002636  2ADE               	incf	postinc2,f,c
  6666  002638  0E00               	movlw	0
  6667  00263A  22DD               	addwfc	postdec2,f,c
  6668                           
  6669                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  6670  00263C  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6671  002640  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6672  002644  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6673  002648  0E02               	movlw	2
  6674  00264A  26DE               	addwf	postinc2,f,c
  6675  00264C  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6676  002650  0E00               	movlw	0
  6677  002652  22DD               	addwfc	postdec2,f,c
  6678  002654  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6679  002658  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6680  00265C  CFDE F1B6          	movff	postinc2,_prec
  6681  002660  CFDD F1B7          	movff	postdec2,_prec+1
  6682                           
  6683                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  6684  002664  EF78  F013         	goto	l5357
  6685  002668                     l5347:
  6686                           
  6687                           ; BSR set to: 1
  6688                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  6689  002668  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6690  00266C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6691  002670  CFDE F008          	movff	postinc2,atoi@s
  6692  002674  CFDD F009          	movff	postdec2,atoi@s+1
  6693  002678  EC4A  F021         	call	_atoi	;wreg free
  6694  00267C  C008  F1B6         	movff	?_atoi,_prec
  6695  002680  C009  F1B7         	movff	?_atoi+1,_prec+1
  6696                           
  6697                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6698  002684  EF4B  F013         	goto	l5351
  6699  002688                     l5349:
  6700                           
  6701                           ; BSR set to: 0
  6702                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  6703  002688  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6704  00268C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6705  002690  2ADE               	incf	postinc2,f,c
  6706  002692  0E00               	movlw	0
  6707  002694  22DD               	addwfc	postdec2,f,c
  6708  002696                     l5351:
  6709  002696  0ED0               	movlw	208
  6710  002698  0100               	movlb	0	; () banked
  6711  00269A  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  6712  00269C  0EFF               	movlw	255
  6713  00269E  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6714  0026A0  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6715  0026A4  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6716  0026A8  CFDE FFF6          	movff	postinc2,tblptrl
  6717  0026AC  CFDD FFF7          	movff	postdec2,tblptrh
  6718  0026B0                     	if	0	;tblptru may be non-zero
  6719  0026B0                     	endif
  6720  0026B0                     	if	0	;tblptru may be non-zero
  6721  0026B0                     	endif
  6722  0026B0  0008               	tblrd		*
  6723  0026B2  50F5               	movf	tablat,w,c
  6724  0026B4  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6725  0026B6  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  6726  0026B8  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  6727  0026BA  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  6728  0026BC  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6729  0026BE  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  6730  0026C0  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  6731  0026C2  E10A               	bnz	u6590
  6732  0026C4  0E0A               	movlw	10
  6733  0026C6  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  6734  0026C8  A0D8               	btfss	status,0,c
  6735  0026CA  EF69  F013         	goto	u6591
  6736  0026CE  EF6C  F013         	goto	u6590
  6737  0026D2                     u6591:
  6738  0026D2  0E01               	movlw	1
  6739  0026D4  EF6D  F013         	goto	u6600
  6740  0026D8                     u6590:
  6741  0026D8  0E00               	movlw	0
  6742  0026DA                     u6600:
  6743  0026DA  6FBB               	movwf	_vfpfcnvrt$2531& (0+255),b
  6744  0026DC  6BBC               	clrf	(_vfpfcnvrt$2531+1)& (0+255),b
  6745  0026DE                     
  6746                           ; BSR set to: 0
  6747  0026DE  51BB               	movf	_vfpfcnvrt$2531& (0+255),w,b
  6748  0026E0  11BC               	iorwf	(_vfpfcnvrt$2531+1)& (0+255),w,b
  6749  0026E2  A4D8               	btfss	status,2,c
  6750  0026E4  EF76  F013         	goto	u6611
  6751  0026E8  EF78  F013         	goto	u6610
  6752  0026EC                     u6611:
  6753  0026EC  EF44  F013         	goto	l5349
  6754  0026F0                     u6610:
  6755  0026F0                     l5357:
  6756                           
  6757                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0
      +                          ] = tolower((int)(*fmt)[0]);
  6758  0026F0  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6759  0026F4  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6760  0026F8  CFDE FFF6          	movff	postinc2,tblptrl
  6761  0026FC  CFDD FFF7          	movff	postdec2,tblptrh
  6762  002700                     	if	0	;tblptru may be non-zero
  6763  002700                     	endif
  6764  002700                     	if	0	;tblptru may be non-zero
  6765  002700                     	endif
  6766  002700  0008               	tblrd		*
  6767  002702  50F5               	movf	tablat,w,c
  6768  002704  6E07               	movwf	tolower@c^0,c
  6769  002706  6A08               	clrf	(tolower@c+1)^0,c
  6770  002708  EC49  F02B         	call	_tolower	;wreg free
  6771  00270C  5007               	movf	?_tolower^0,w,c
  6772  00270E  0100               	movlb	0	; () banked
  6773  002710  6FC3               	movwf	vfpfcnvrt@ct& (0+255),b
  6774  002712                     
  6775                           ; BSR set to: 0
  6776                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (
      +                          ct[0]) {
  6777  002712  51C3               	movf	vfpfcnvrt@ct& (0+255),w,b
  6778  002714  B4D8               	btfsc	status,2,c
  6779  002716  EF8F  F013         	goto	u6621
  6780  00271A  EF91  F013         	goto	u6620
  6781  00271E                     u6621:
  6782  00271E  EFCB  F013         	goto	l5367
  6783  002722                     u6620:
  6784  002722                     
  6785                           ; BSR set to: 0
  6786                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             
      +                          ct[1] = tolower((int)(*fmt)[1]);
  6787  002722  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6788  002726  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6789  00272A  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  6790  00272E  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  6791  002732  0E01               	movlw	1
  6792  002734  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  6793  002736  0E00               	movlw	0
  6794  002738  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6795  00273A  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6796  00273E  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6797  002742                     	if	0	;tblptru may be non-zero
  6798  002742                     	endif
  6799  002742                     	if	0	;tblptru may be non-zero
  6800  002742                     	endif
  6801  002742  0008               	tblrd		*
  6802  002744  50F5               	movf	tablat,w,c
  6803  002746  6E07               	movwf	tolower@c^0,c
  6804  002748  6A08               	clrf	(tolower@c+1)^0,c
  6805  00274A  EC49  F02B         	call	_tolower	;wreg free
  6806  00274E  5007               	movf	?_tolower^0,w,c
  6807  002750  0100               	movlb	0	; () banked
  6808  002752  6FC4               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  6809  002754                     
  6810                           ; BSR set to: 0
  6811                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             
      +                          if (ct[1]) {
  6812  002754  51C4               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  6813  002756  B4D8               	btfsc	status,2,c
  6814  002758  EFB0  F013         	goto	u6631
  6815  00275C  EFB2  F013         	goto	u6630
  6816  002760                     u6631:
  6817  002760  EFCB  F013         	goto	l5367
  6818  002764                     u6630:
  6819  002764                     
  6820                           ; BSR set to: 0
  6821                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:             
      +                              ct[2] = tolower((int)(*fmt)[2]);
  6822  002764  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6823  002768  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6824  00276C  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  6825  002770  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  6826  002774  0E02               	movlw	2
  6827  002776  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  6828  002778  0E00               	movlw	0
  6829  00277A  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6830  00277C  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6831  002780  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6832  002784                     	if	0	;tblptru may be non-zero
  6833  002784                     	endif
  6834  002784                     	if	0	;tblptru may be non-zero
  6835  002784                     	endif
  6836  002784  0008               	tblrd		*
  6837  002786  50F5               	movf	tablat,w,c
  6838  002788  6E07               	movwf	tolower@c^0,c
  6839  00278A  6A08               	clrf	(tolower@c+1)^0,c
  6840  00278C  EC49  F02B         	call	_tolower	;wreg free
  6841  002790  5007               	movf	?_tolower^0,w,c
  6842  002792  0100               	movlb	0	; () banked
  6843  002794  6FC5               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  6844  002796                     l5367:
  6845                           
  6846                           ; BSR set to: 0
  6847                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6848  002796  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6849  00279A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6850  00279E  CFDE FFF6          	movff	postinc2,tblptrl
  6851  0027A2  CFDD FFF7          	movff	postdec2,tblptrh
  6852  0027A6                     	if	0	;tblptru may be non-zero
  6853  0027A6                     	endif
  6854  0027A6                     	if	0	;tblptru may be non-zero
  6855  0027A6                     	endif
  6856  0027A6  0008               	tblrd		*
  6857  0027A8  50F5               	movf	tablat,w,c
  6858  0027AA  0A64               	xorlw	100
  6859  0027AC  B4D8               	btfsc	status,2,c
  6860  0027AE  EFDB  F013         	goto	u6641
  6861  0027B2  EFDD  F013         	goto	u6640
  6862  0027B6                     u6641:
  6863  0027B6  EFEF  F013         	goto	l5371
  6864  0027BA                     u6640:
  6865  0027BA                     
  6866                           ; BSR set to: 0
  6867  0027BA  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6868  0027BE  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6869  0027C2  CFDE FFF6          	movff	postinc2,tblptrl
  6870  0027C6  CFDD FFF7          	movff	postdec2,tblptrh
  6871  0027CA                     	if	0	;tblptru may be non-zero
  6872  0027CA                     	endif
  6873  0027CA                     	if	0	;tblptru may be non-zero
  6874  0027CA                     	endif
  6875  0027CA  0008               	tblrd		*
  6876  0027CC  50F5               	movf	tablat,w,c
  6877  0027CE  0A69               	xorlw	105
  6878  0027D0  A4D8               	btfss	status,2,c
  6879  0027D2  EFED  F013         	goto	u6651
  6880  0027D6  EFEF  F013         	goto	u6650
  6881  0027DA                     u6651:
  6882  0027DA  EF2F  F014         	goto	l5377
  6883  0027DE                     u6650:
  6884  0027DE                     l5371:
  6885                           
  6886                           ; BSR set to: 0
  6887                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  6888  0027DE  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6889  0027E2  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6890  0027E6  2ADE               	incf	postinc2,f,c
  6891  0027E8  0E00               	movlw	0
  6892  0027EA  22DD               	addwfc	postdec2,f,c
  6893                           
  6894                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6895  0027EC  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6896  0027F0  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6897  0027F4  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6898  0027F8  0E02               	movlw	2
  6899  0027FA  26DE               	addwf	postinc2,f,c
  6900  0027FC  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6901  002800  0E00               	movlw	0
  6902  002802  22DD               	addwfc	postdec2,f,c
  6903  002804  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6904  002808  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6905  00280C  CFDE F0B1          	movff	postinc2,vfpfcnvrt@ll
  6906  002810  CFDD F0B2          	movff	postdec2,vfpfcnvrt@ll+1
  6907  002814  0E00               	movlw	0
  6908  002816  BFB2               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  6909  002818  0EFF               	movlw	-1
  6910  00281A  6FB3               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  6911  00281C  6FB4               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  6912  00281E  6FB5               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  6913  002820  6FB6               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  6914  002822  6FB7               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  6915  002824  6FB8               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  6916  002826                     
  6917                           ; BSR set to: 0
  6918                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  6919  002826  C0A7  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  6920  00282A  C0A8  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6921  00282E  C0B1  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  6922  002832  C0B2  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  6923  002836  C0B3  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  6924  00283A  C0B4  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  6925  00283E  C0B5  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  6926  002842  C0B6  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  6927  002846  C0B7  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  6928  00284A  C0B8  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  6929  00284E  EC14  F01D         	call	_dtoa	;wreg free
  6930  002852  C01C  F0A7         	movff	?_dtoa,?_vfpfcnvrt
  6931  002856  C01D  F0A8         	movff	?_dtoa+1,?_vfpfcnvrt+1
  6932  00285A  EF5E  F015         	goto	l1365
  6933  00285E                     l5377:
  6934                           
  6935                           ; BSR set to: 0
  6936                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (
      +                          ct[0] == 'f') {
  6937  00285E  0E66               	movlw	102
  6938  002860  19C3               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  6939  002862  A4D8               	btfss	status,2,c
  6940  002864  EF36  F014         	goto	u6661
  6941  002868  EF38  F014         	goto	u6660
  6942  00286C                     u6661:
  6943  00286C  EF78  F014         	goto	l5389
  6944  002870                     u6660:
  6945  002870                     
  6946                           ; BSR set to: 0
  6947                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             
      +                          c = (*fmt)[0];
  6948  002870  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6949  002874  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6950  002878  CFDE FFF6          	movff	postinc2,tblptrl
  6951  00287C  CFDD FFF7          	movff	postdec2,tblptrh
  6952  002880                     	if	0	;tblptru may be non-zero
  6953  002880                     	endif
  6954  002880                     	if	0	;tblptru may be non-zero
  6955  002880                     	endif
  6956  002880  0008               	tblrd		*
  6957  002882  CFF5 F0C6          	movff	tablat,vfpfcnvrt@c
  6958  002886                     
  6959                           ; BSR set to: 0
  6960                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             
      +                          ++*fmt;
  6961  002886  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6962  00288A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6963  00288E  2ADE               	incf	postinc2,f,c
  6964  002890  0E00               	movlw	0
  6965  002892  22DD               	addwfc	postdec2,f,c
  6966  002894                     
  6967                           ; BSR set to: 0
  6968                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  6969  002894  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6970  002898  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6971  00289C  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6972  0028A0  0E04               	movlw	4
  6973  0028A2  26DE               	addwf	postinc2,f,c
  6974  0028A4  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6975  0028A8  0E00               	movlw	0
  6976  0028AA  22DD               	addwfc	postdec2,f,c
  6977  0028AC  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6978  0028B0  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6979  0028B4  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  6980  0028B8  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  6981  0028BC  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  6982  0028C0  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  6983  0028C4                     l5385:
  6984                           
  6985                           ; BSR set to: 0
  6986                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             
      +                          return efgtoa(fp, f, c);
  6987  0028C4  C0A7  F058         	movff	vfpfcnvrt@fp,efgtoa@fp
  6988  0028C8  C0A8  F059         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  6989  0028CC  C0BF  F05A         	movff	vfpfcnvrt@f,efgtoa@f
  6990  0028D0  C0C0  F05B         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  6991  0028D4  C0C1  F05C         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  6992  0028D8  C0C2  F05D         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  6993  0028DC  C0C6  F05E         	movff	vfpfcnvrt@c,efgtoa@c
  6994  0028E0  EC6C  F003         	call	_efgtoa	;wreg free
  6995  0028E4  C058  F0A7         	movff	?_efgtoa,?_vfpfcnvrt
  6996  0028E8  C059  F0A8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  6997  0028EC  EF5E  F015         	goto	l1365
  6998  0028F0                     l5389:
  6999                           
  7000                           ; BSR set to: 0
  7001                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  7002  0028F0  0EC3               	movlw	low vfpfcnvrt@ct
  7003  0028F2  6E01               	movwf	strncmp@_l^0,c
  7004  0028F4  0E00               	movlw	high vfpfcnvrt@ct
  7005  0028F6  6E02               	movwf	(strncmp@_l+1)^0,c
  7006  0028F8  0ED4               	movlw	low STR_25
  7007  0028FA  6E03               	movwf	strncmp@_r^0,c
  7008  0028FC  0E06               	movlw	high STR_25
  7009  0028FE  6E04               	movwf	(strncmp@_r+1)^0,c
  7010  002900  0E00               	movlw	0
  7011  002902  6E06               	movwf	(strncmp@n+1)^0,c
  7012  002904  0E02               	movlw	2
  7013  002906  6E05               	movwf	strncmp@n^0,c
  7014  002908  ECDD  F026         	call	_strncmp	;wreg free
  7015  00290C  5001               	movf	?_strncmp^0,w,c
  7016  00290E  1002               	iorwf	(?_strncmp+1)^0,w,c
  7017  002910  A4D8               	btfss	status,2,c
  7018  002912  EF8D  F014         	goto	u6671
  7019  002916  EF8F  F014         	goto	u6670
  7020  00291A                     u6671:
  7021  00291A  EF0B  F015         	goto	l5405
  7022  00291E                     u6670:
  7023  00291E                     
  7024                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  7025  00291E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7026  002922  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7027  002926  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  7028  00292A  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  7029  00292E  0E01               	movlw	1
  7030  002930  0100               	movlb	0	; () banked
  7031  002932  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  7032  002934  0E00               	movlw	0
  7033  002936  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  7034  002938  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  7035  00293C  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  7036  002940                     	if	0	;tblptru may be non-zero
  7037  002940                     	endif
  7038  002940                     	if	0	;tblptru may be non-zero
  7039  002940                     	endif
  7040  002940  0008               	tblrd		*
  7041  002942  CFF5 F0C6          	movff	tablat,vfpfcnvrt@c
  7042  002946  0EBF               	movlw	191
  7043  002948  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  7044  00294A  0EFF               	movlw	255
  7045  00294C  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7046  00294E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7047  002952  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7048  002956  CFDE FFF6          	movff	postinc2,tblptrl
  7049  00295A  CFDD FFF7          	movff	postdec2,tblptrh
  7050  00295E                     	if	0	;tblptru may be non-zero
  7051  00295E                     	endif
  7052  00295E                     	if	0	;tblptru may be non-zero
  7053  00295E                     	endif
  7054  00295E  0008               	tblrd		*
  7055  002960  50F5               	movf	tablat,w,c
  7056  002962  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  7057  002964  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  7058  002966  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  7059  002968  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  7060  00296A  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7061  00296C  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  7062  00296E  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  7063  002970  E10A               	bnz	u6680
  7064  002972  0E1A               	movlw	26
  7065  002974  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  7066  002976  A0D8               	btfss	status,0,c
  7067  002978  EFC0  F014         	goto	u6681
  7068  00297C  EFC3  F014         	goto	u6680
  7069  002980                     u6681:
  7070  002980  0E01               	movlw	1
  7071  002982  EFC4  F014         	goto	u6690
  7072  002986                     u6680:
  7073  002986  0E00               	movlw	0
  7074  002988                     u6690:
  7075  002988  6FBD               	movwf	_vfpfcnvrt$2536& (0+255),b
  7076  00298A  6BBE               	clrf	(_vfpfcnvrt$2536+1)& (0+255),b
  7077  00298C                     
  7078                           ; BSR set to: 0
  7079  00298C  51BD               	movf	_vfpfcnvrt$2536& (0+255),w,b
  7080  00298E  11BE               	iorwf	(_vfpfcnvrt$2536+1)& (0+255),w,b
  7081  002990  B4D8               	btfsc	status,2,c
  7082  002992  EFCD  F014         	goto	u6701
  7083  002996  EFCF  F014         	goto	u6700
  7084  00299A                     u6701:
  7085  00299A  EFE9  F014         	goto	l5399
  7086  00299E                     u6700:
  7087  00299E                     
  7088                           ; BSR set to: 0
  7089                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  7090  00299E  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7091  0029A2  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7092  0029A6  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7093  0029AA  0E04               	movlw	4
  7094  0029AC  26DE               	addwf	postinc2,f,c
  7095  0029AE  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7096  0029B2  0E00               	movlw	0
  7097  0029B4  22DD               	addwfc	postdec2,f,c
  7098  0029B6  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7099  0029BA  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7100  0029BE  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  7101  0029C2  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  7102  0029C6  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  7103  0029CA  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  7104                           
  7105                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             
      +                          } else {
  7106  0029CE  EF01  F015         	goto	l1373
  7107  0029D2                     l5399:
  7108                           
  7109                           ; BSR set to: 0
  7110                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  7111  0029D2  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7112  0029D6  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7113  0029DA  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7114  0029DE  0E04               	movlw	4
  7115  0029E0  26DE               	addwf	postinc2,f,c
  7116  0029E2  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7117  0029E6  0E00               	movlw	0
  7118  0029E8  22DD               	addwfc	postdec2,f,c
  7119  0029EA  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7120  0029EE  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7121  0029F2  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  7122  0029F6  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  7123  0029FA  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  7124  0029FE  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  7125  002A02                     l1373:
  7126                           
  7127                           ; BSR set to: 0
  7128                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  7129  002A02  0E02               	movlw	2
  7130  002A04  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7131  002A08  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7132  002A0C  26DE               	addwf	postinc2,f,c
  7133  002A0E  0E00               	movlw	0
  7134  002A10  22DD               	addwfc	postdec2,f,c
  7135  002A12  EF62  F014         	goto	l5385
  7136  002A16                     l5405:
  7137                           
  7138                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  7139  002A16  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7140  002A1A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7141  002A1E  CFDE FFF6          	movff	postinc2,tblptrl
  7142  002A22  CFDD FFF7          	movff	postdec2,tblptrh
  7143  002A26                     	if	0	;tblptru may be non-zero
  7144  002A26                     	endif
  7145  002A26                     	if	0	;tblptru may be non-zero
  7146  002A26                     	endif
  7147  002A26  0008               	tblrd		*
  7148  002A28  50F5               	movf	tablat,w,c
  7149  002A2A  0A25               	xorlw	37
  7150  002A2C  A4D8               	btfss	status,2,c
  7151  002A2E  EF1B  F015         	goto	u6711
  7152  002A32  EF1D  F015         	goto	u6710
  7153  002A36                     u6711:
  7154  002A36  EF35  F015         	goto	l5415
  7155  002A3A                     u6710:
  7156  002A3A                     
  7157                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  7158  002A3A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7159  002A3E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7160  002A42  2ADE               	incf	postinc2,f,c
  7161  002A44  0E00               	movlw	0
  7162  002A46  22DD               	addwfc	postdec2,f,c
  7163  002A48                     
  7164                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  7165  002A48  0E00               	movlw	0
  7166  002A4A  6E02               	movwf	(fputc@c+1)^0,c
  7167  002A4C  0E25               	movlw	37
  7168  002A4E  6E01               	movwf	fputc@c^0,c
  7169  002A50  C0A7  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7170  002A54  C0A8  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7171  002A58  EC48  F027         	call	_fputc	;wreg free
  7172  002A5C                     l5411:
  7173                           
  7174                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  7175  002A5C  0E00               	movlw	0
  7176  002A5E  0100               	movlb	0	; () banked
  7177  002A60  6FA8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7178  002A62  0E01               	movlw	1
  7179  002A64  6FA7               	movwf	?_vfpfcnvrt& (0+255),b
  7180  002A66  EF5E  F015         	goto	l1365
  7181  002A6A                     l5415:
  7182                           
  7183                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  7184  002A6A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7185  002A6E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7186  002A72  2ADE               	incf	postinc2,f,c
  7187  002A74  0E00               	movlw	0
  7188  002A76  22DD               	addwfc	postdec2,f,c
  7189  002A78                     
  7190                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  7191  002A78  0E00               	movlw	0
  7192  002A7A  0100               	movlb	0	; () banked
  7193  002A7C  6FA8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7194  002A7E  0E00               	movlw	0
  7195  002A80  6FA7               	movwf	?_vfpfcnvrt& (0+255),b
  7196  002A82  EF5E  F015         	goto	l1365
  7197  002A86                     l5421:
  7198                           
  7199                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  7200  002A86  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7201  002A8A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7202  002A8E  CFDE FFF6          	movff	postinc2,tblptrl
  7203  002A92  CFDD FFF7          	movff	postdec2,tblptrh
  7204  002A96                     	if	0	;tblptru may be non-zero
  7205  002A96                     	endif
  7206  002A96                     	if	0	;tblptru may be non-zero
  7207  002A96                     	endif
  7208  002A96  0008               	tblrd		*
  7209  002A98  50F5               	movf	tablat,w,c
  7210  002A9A  6E01               	movwf	fputc@c^0,c
  7211  002A9C  6A02               	clrf	(fputc@c+1)^0,c
  7212  002A9E  C0A7  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7213  002AA2  C0A8  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7214  002AA6  EC48  F027         	call	_fputc	;wreg free
  7215  002AAA                     
  7216                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  7217  002AAA  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7218  002AAE  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7219  002AB2  2ADE               	incf	postinc2,f,c
  7220  002AB4  0E00               	movlw	0
  7221  002AB6  22DD               	addwfc	postdec2,f,c
  7222  002AB8  EF2E  F015         	goto	l5411
  7223  002ABC                     l1365:
  7224  002ABC  0012               	return		;funcret
  7225  002ABE                     __end_of_vfpfcnvrt:
  7226                           	callstack 0
  7227                           
  7228 ;; *************** function _strncmp *****************
  7229 ;; Defined at:
  7230 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  7231 ;; Parameters:    Size  Location     Type
  7232 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  7233 ;;		 -> vfpfcnvrt@ct(3), 
  7234 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  7235 ;;		 -> STR_27(3), 
  7236 ;;  n               2    4[COMRAM] unsigned int 
  7237 ;; Auto vars:     Size  Location     Type
  7238 ;;  r               2    9[COMRAM] PTR const unsigned char 
  7239 ;;		 -> STR_27(3), 
  7240 ;;  l               2    7[COMRAM] PTR const unsigned char 
  7241 ;;		 -> vfpfcnvrt@ct(3), 
  7242 ;; Return value:  Size  Location     Type
  7243 ;;                  2    0[COMRAM] int 
  7244 ;; Registers used:
  7245 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7246 ;; Tracked objects:
  7247 ;;		On entry : 0/0
  7248 ;;		On exit  : 0/0
  7249 ;;		Unchanged: 0/0
  7250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7251 ;;      Params:         6       0       0       0       0       0       0
  7252 ;;      Locals:         4       0       0       0       0       0       0
  7253 ;;      Temps:          1       0       0       0       0       0       0
  7254 ;;      Totals:        11       0       0       0       0       0       0
  7255 ;;Total ram usage:       11 bytes
  7256 ;; Hardware stack levels used:    1
  7257 ;; Hardware stack levels required when called:    1
  7258 ;; This function calls:
  7259 ;;		Nothing
  7260 ;; This function is called by:
  7261 ;;		_vfpfcnvrt
  7262 ;; This function uses a non-reentrant model
  7263 ;;
  7264                           
  7265                           	psect	text22
  7266  004DBA                     __ptext22:
  7267                           	callstack 0
  7268  004DBA                     _strncmp:
  7269                           	callstack 24
  7270  004DBA  C001  F008         	movff	strncmp@_l,strncmp@l
  7271  004DBE  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  7272  004DC2  C003  F00A         	movff	strncmp@_r,strncmp@r
  7273  004DC6  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  7274  004DCA  0605               	decf	strncmp@n^0,f,c
  7275  004DCC  A0D8               	btfss	status,0,c
  7276  004DCE  0606               	decf	(strncmp@n+1)^0,f,c
  7277  004DD0  2805               	incf	strncmp@n^0,w,c
  7278  004DD2  E106               	bnz	u6261
  7279  004DD4  2806               	incf	(strncmp@n+1)^0,w,c
  7280  004DD6  A4D8               	btfss	status,2,c
  7281  004DD8  EFF0  F026         	goto	u6261
  7282  004DDC  EFF2  F026         	goto	u6260
  7283  004DE0                     u6261:
  7284  004DE0  EFFF  F026         	goto	l5183
  7285  004DE4                     u6260:
  7286  004DE4  0E00               	movlw	0
  7287  004DE6  6E02               	movwf	(?_strncmp+1)^0,c
  7288  004DE8  0E00               	movlw	0
  7289  004DEA  6E01               	movwf	?_strncmp^0,c
  7290  004DEC  EF47  F027         	goto	l1501
  7291  004DF0                     l5181:
  7292  004DF0  4A08               	infsnz	strncmp@l^0,f,c
  7293  004DF2  2A09               	incf	(strncmp@l+1)^0,f,c
  7294  004DF4  4A0A               	infsnz	strncmp@r^0,f,c
  7295  004DF6  2A0B               	incf	(strncmp@r+1)^0,f,c
  7296  004DF8  0605               	decf	strncmp@n^0,f,c
  7297  004DFA  A0D8               	btfss	status,0,c
  7298  004DFC  0606               	decf	(strncmp@n+1)^0,f,c
  7299  004DFE                     l5183:
  7300  004DFE  C008  FFD9         	movff	strncmp@l,fsr2l
  7301  004E02  C009  FFDA         	movff	strncmp@l+1,fsr2h
  7302  004E06  50DF               	movf	indf2,w,c
  7303  004E08  B4D8               	btfsc	status,2,c
  7304  004E0A  EF09  F027         	goto	u6271
  7305  004E0E  EF0B  F027         	goto	u6270
  7306  004E12                     u6271:
  7307  004E12  EF36  F027         	goto	l5191
  7308  004E16                     u6270:
  7309  004E16  C00A  FFF6         	movff	strncmp@r,tblptrl
  7310  004E1A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7311  004E1E                     	if	0	;tblptru may be non-zero
  7312  004E1E                     	endif
  7313  004E1E                     	if	0	;tblptru may be non-zero
  7314  004E1E                     	endif
  7315  004E1E  0008               	tblrd		*
  7316  004E20  50F5               	movf	tablat,w,c
  7317  004E22  0900               	iorlw	0
  7318  004E24  B4D8               	btfsc	status,2,c
  7319  004E26  EF17  F027         	goto	u6281
  7320  004E2A  EF19  F027         	goto	u6280
  7321  004E2E                     u6281:
  7322  004E2E  EF36  F027         	goto	l5191
  7323  004E32                     u6280:
  7324  004E32  5005               	movf	strncmp@n^0,w,c
  7325  004E34  1006               	iorwf	(strncmp@n+1)^0,w,c
  7326  004E36  B4D8               	btfsc	status,2,c
  7327  004E38  EF20  F027         	goto	u6291
  7328  004E3C  EF22  F027         	goto	u6290
  7329  004E40                     u6291:
  7330  004E40  EF36  F027         	goto	l5191
  7331  004E44                     u6290:
  7332  004E44  C008  FFD9         	movff	strncmp@l,fsr2l
  7333  004E48  C009  FFDA         	movff	strncmp@l+1,fsr2h
  7334  004E4C  50DF               	movf	indf2,w,c
  7335  004E4E  6E07               	movwf	??_strncmp^0,c
  7336  004E50  C00A  FFF6         	movff	strncmp@r,tblptrl
  7337  004E54  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7338  004E58                     	if	0	;tblptru may be non-zero
  7339  004E58                     	endif
  7340  004E58                     	if	0	;tblptru may be non-zero
  7341  004E58                     	endif
  7342  004E58  0008               	tblrd		*
  7343  004E5A  50F5               	movf	tablat,w,c
  7344  004E5C  1807               	xorwf	??_strncmp^0,w,c
  7345  004E5E  B4D8               	btfsc	status,2,c
  7346  004E60  EF34  F027         	goto	u6301
  7347  004E64  EF36  F027         	goto	u6300
  7348  004E68                     u6301:
  7349  004E68  EFF8  F026         	goto	l5181
  7350  004E6C                     u6300:
  7351  004E6C                     l5191:
  7352  004E6C  C008  FFD9         	movff	strncmp@l,fsr2l
  7353  004E70  C009  FFDA         	movff	strncmp@l+1,fsr2h
  7354  004E74  50DF               	movf	indf2,w,c
  7355  004E76  6E07               	movwf	??_strncmp^0,c
  7356  004E78  C00A  FFF6         	movff	strncmp@r,tblptrl
  7357  004E7C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7358  004E80                     	if	0	;tblptru may be non-zero
  7359  004E80                     	endif
  7360  004E80                     	if	0	;tblptru may be non-zero
  7361  004E80                     	endif
  7362  004E80  0008               	tblrd		*
  7363  004E82  50F5               	movf	tablat,w,c
  7364  004E84  5C07               	subwf	??_strncmp^0,w,c
  7365  004E86  6E01               	movwf	?_strncmp^0,c
  7366  004E88  6A02               	clrf	(?_strncmp+1)^0,c
  7367  004E8A  A0D8               	btfss	status,0,c
  7368  004E8C  0602               	decf	(?_strncmp+1)^0,f,c
  7369  004E8E                     l1501:
  7370  004E8E  0012               	return		;funcret
  7371  004E90                     __end_of_strncmp:
  7372                           	callstack 0
  7373                           
  7374 ;; *************** function _efgtoa *****************
  7375 ;; Defined at:
  7376 ;;		line 319 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7377 ;; Parameters:    Size  Location     Type
  7378 ;;  fp              2   87[COMRAM] PTR struct _IO_FILE
  7379 ;;		 -> sprintf@f(6), 
  7380 ;;  f               4   89[COMRAM] PTR struct _IO_FILE
  7381 ;;  c               1   93[COMRAM] unsigned char 
  7382 ;; Auto vars:     Size  Location     Type
  7383 ;;  u               4   67[BANK0 ] unsigned char 
  7384 ;;  g               4   59[BANK0 ] unsigned char 
  7385 ;;  l               4   53[BANK0 ] unsigned char 
  7386 ;;  h               4   49[BANK0 ] unsigned char 
  7387 ;;  ou              4   15[BANK0 ] unsigned char 
  7388 ;;  n               2   65[BANK0 ] int 
  7389 ;;  e               2   63[BANK0 ] int 
  7390 ;;  i               2   57[BANK0 ] int 
  7391 ;;  w               2   46[BANK0 ] int 
  7392 ;;  p               2   43[BANK0 ] int 
  7393 ;;  sign            2   41[BANK0 ] int 
  7394 ;;  d               2   39[BANK0 ] int 
  7395 ;;  ne              2   37[BANK0 ] int 
  7396 ;;  m               2   35[BANK0 ] int 
  7397 ;;  pp              2   33[BANK0 ] int 
  7398 ;;  t               2   31[BANK0 ] int 
  7399 ;;  mode            1   48[BANK0 ] unsigned char 
  7400 ;;  nmode           1   45[BANK0 ] unsigned char 
  7401 ;; Return value:  Size  Location     Type
  7402 ;;                  2   87[COMRAM] int 
  7403 ;; Registers used:
  7404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7405 ;; Tracked objects:
  7406 ;;		On entry : 0/0
  7407 ;;		On exit  : 0/0
  7408 ;;		Unchanged: 0/0
  7409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7410 ;;      Params:         7       0       0       0       0       0       0
  7411 ;;      Locals:         0      56       0       0       0       0       0
  7412 ;;      Temps:          0       5       0       0       0       0       0
  7413 ;;      Totals:         7      61       0       0       0       0       0
  7414 ;;Total ram usage:       68 bytes
  7415 ;; Hardware stack levels used:    1
  7416 ;; Hardware stack levels required when called:    5
  7417 ;; This function calls:
  7418 ;;		___awdiv
  7419 ;;		___awmod
  7420 ;;		___fladd
  7421 ;;		___fldiv
  7422 ;;		___fleq
  7423 ;;		___flge
  7424 ;;		___flmul
  7425 ;;		___flneg
  7426 ;;		___flsub
  7427 ;;		___fltol
  7428 ;;		___fpclassifyf
  7429 ;;		_floorf
  7430 ;;		_isupper
  7431 ;;		_pad
  7432 ;;		_strcpy
  7433 ;;		_tolower
  7434 ;; This function is called by:
  7435 ;;		_vfpfcnvrt
  7436 ;; This function uses a non-reentrant model
  7437 ;;
  7438                           
  7439                           	psect	text23
  7440  0006D8                     __ptext23:
  7441                           	callstack 0
  7442  0006D8                     _efgtoa:
  7443                           	callstack 20
  7444  0006D8                     
  7445                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\
      +                          c99\common\doprnt.c: 320: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\
      +                          doprnt.c: 321:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c9
      +                          9\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;
  7446  0006D8  0E00               	movlw	0
  7447  0006DA  0100               	movlb	0	; () banked
  7448  0006DC  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  7449  0006DE  0E00               	movlw	0
  7450  0006E0  6F89               	movwf	efgtoa@sign& (0+255),b
  7451  0006E2                     
  7452                           ; BSR set to: 0
  7453                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  7454  0006E2  C05A  F09B         	movff	efgtoa@f,efgtoa@g
  7455  0006E6  C05B  F09C         	movff	efgtoa@f+1,efgtoa@g+1
  7456  0006EA  C05C  F09D         	movff	efgtoa@f+2,efgtoa@g+2
  7457  0006EE  C05D  F09E         	movff	efgtoa@f+3,efgtoa@g+3
  7458  0006F2                     
  7459                           ; BSR set to: 0
  7460                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 
      +                          0.0) {
  7461  0006F2  BF9E               	btfsc	(efgtoa@g+3)& (0+255),7,b
  7462  0006F4  EF80  F003         	goto	u5670
  7463  0006F8  EF7E  F003         	goto	u5671
  7464  0006FC                     u5671:
  7465  0006FC  EF96  F003         	goto	l4845
  7466  000700                     u5670:
  7467  000700                     
  7468                           ; BSR set to: 0
  7469                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign
      +                           = 1;
  7470  000700  0E00               	movlw	0
  7471  000702  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  7472  000704  0E01               	movlw	1
  7473  000706  6F89               	movwf	efgtoa@sign& (0+255),b
  7474  000708                     
  7475                           ; BSR set to: 0
  7476                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = 
      +                          -g;
  7477  000708  C09B  F001         	movff	efgtoa@g,___flneg@f1
  7478  00070C  C09C  F002         	movff	efgtoa@g+1,___flneg@f1+1
  7479  000710  C09D  F003         	movff	efgtoa@g+2,___flneg@f1+2
  7480  000714  C09E  F004         	movff	efgtoa@g+3,___flneg@f1+3
  7481  000718  EC2F  F02D         	call	___flneg	;wreg free
  7482  00071C  C001  F09B         	movff	?___flneg,efgtoa@g
  7483  000720  C002  F09C         	movff	?___flneg+1,efgtoa@g+1
  7484  000724  C003  F09D         	movff	?___flneg+2,efgtoa@g+2
  7485  000728  C004  F09E         	movff	?___flneg+3,efgtoa@g+3
  7486  00072C                     l4845:
  7487                           
  7488                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  7489  00072C  0E00               	movlw	0
  7490  00072E  0100               	movlb	0	; () banked
  7491  000730  6FA2               	movwf	(efgtoa@n+1)& (0+255),b
  7492  000732  0E00               	movlw	0
  7493  000734  6FA1               	movwf	efgtoa@n& (0+255),b
  7494  000736                     
  7495                           ; BSR set to: 0
  7496                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = widt
      +                          h;
  7497  000736  C1B4  F08E         	movff	_width,efgtoa@w
  7498  00073A  C1B5  F08F         	movff	_width+1,efgtoa@w+1
  7499  00073E                     
  7500                           ; BSR set to: 0
  7501                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign
      +                           || (flags & (1 << 2))) {
  7502  00073E  5189               	movf	efgtoa@sign& (0+255),w,b
  7503  000740  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7504  000742  A4D8               	btfss	status,2,c
  7505  000744  EFA6  F003         	goto	u5681
  7506  000748  EFA8  F003         	goto	u5680
  7507  00074C                     u5681:
  7508  00074C  EFB0  F003         	goto	l4853
  7509  000750                     u5680:
  7510  000750                     
  7511                           ; BSR set to: 0
  7512  000750  0101               	movlb	1	; () banked
  7513  000752  A5B8               	btfss	_flags& (0+255),2,b
  7514  000754  EFAE  F003         	goto	u5691
  7515  000758  EFB0  F003         	goto	u5690
  7516  00075C                     u5691:
  7517  00075C  EFCB  F003         	goto	l4865
  7518  000760                     u5690:
  7519  000760                     l4853:
  7520                           
  7521                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf
      +                          [n] = sign ? '-' : '+';
  7522  000760  0100               	movlb	0	; () banked
  7523  000762  5189               	movf	efgtoa@sign& (0+255),w,b
  7524  000764  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7525  000766  A4D8               	btfss	status,2,c
  7526  000768  EFB8  F003         	goto	u5701
  7527  00076C  EFBA  F003         	goto	u5700
  7528  000770                     u5701:
  7529  000770  EFC0  F003         	goto	l4857
  7530  000774                     u5700:
  7531  000774                     
  7532                           ; BSR set to: 0
  7533  000774  0E00               	movlw	0
  7534  000776  6F74               	movwf	(_efgtoa$2505+1)& (0+255),b
  7535  000778  0E2B               	movlw	43
  7536  00077A  6F73               	movwf	_efgtoa$2505& (0+255),b
  7537  00077C  EFC4  F003         	goto	l4859
  7538  000780                     l4857:
  7539                           
  7540                           ; BSR set to: 0
  7541  000780  0E00               	movlw	0
  7542  000782  6F74               	movwf	(_efgtoa$2505+1)& (0+255),b
  7543  000784  0E2D               	movlw	45
  7544  000786  6F73               	movwf	_efgtoa$2505& (0+255),b
  7545  000788                     l4859:
  7546                           
  7547                           ; BSR set to: 0
  7548  000788  C073  F200         	movff	_efgtoa$2505,_dbuf
  7549  00078C                     
  7550                           ; BSR set to: 0
  7551                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  7552  00078C  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  7553  00078E  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  7554  000790                     
  7555                           ; BSR set to: 0
  7556                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  7557  000790  078E               	decf	efgtoa@w& (0+255),f,b
  7558  000792  A0D8               	btfss	status,0,c
  7559  000794  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  7560  000796                     l4865:
  7561                           
  7562                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  7563  000796  C09B  F001         	movff	efgtoa@g,___fpclassifyf@x
  7564  00079A  C09C  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7565  00079E  C09D  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7566  0007A2  C09E  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7567  0007A6  ECE1  F025         	call	___fpclassifyf	;wreg free
  7568  0007AA  0401               	decf	?___fpclassifyf^0,w,c
  7569  0007AC  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  7570  0007AE  A4D8               	btfss	status,2,c
  7571  0007B0  EFDC  F003         	goto	u5711
  7572  0007B4  EFDE  F003         	goto	u5710
  7573  0007B8                     u5711:
  7574  0007B8  EF35  F004         	goto	l4883
  7575  0007BC                     u5710:
  7576  0007BC  0EBF               	movlw	191
  7577  0007BE  0100               	movlb	0	; () banked
  7578  0007C0  6F6A               	movwf	??_efgtoa& (0+255),b
  7579  0007C2  0EFF               	movlw	255
  7580  0007C4  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  7581  0007C6  505E               	movf	efgtoa@c^0,w,c
  7582  0007C8  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  7583  0007CA  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  7584  0007CC  516A               	movf	??_efgtoa& (0+255),w,b
  7585  0007CE  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  7586  0007D0  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  7587  0007D2  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7588  0007D4  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  7589  0007D6  E10A               	bnz	u5720
  7590  0007D8  0E1A               	movlw	26
  7591  0007DA  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  7592  0007DC  A0D8               	btfss	status,0,c
  7593  0007DE  EFF3  F003         	goto	u5721
  7594  0007E2  EFF6  F003         	goto	u5720
  7595  0007E6                     u5721:
  7596  0007E6  0E01               	movlw	1
  7597  0007E8  EFF7  F003         	goto	u5730
  7598  0007EC                     u5720:
  7599  0007EC  0E00               	movlw	0
  7600  0007EE                     u5730:
  7601  0007EE  6F75               	movwf	_efgtoa$2506& (0+255),b
  7602  0007F0  6B76               	clrf	(_efgtoa$2506+1)& (0+255),b
  7603  0007F2                     
  7604                           ; BSR set to: 0
  7605  0007F2  5175               	movf	_efgtoa$2506& (0+255),w,b
  7606  0007F4  1176               	iorwf	(_efgtoa$2506+1)& (0+255),w,b
  7607  0007F6  B4D8               	btfsc	status,2,c
  7608  0007F8  EF00  F004         	goto	u5741
  7609  0007FC  EF02  F004         	goto	u5740
  7610  000800                     u5741:
  7611  000800  EF10  F004         	goto	l4875
  7612  000804                     u5740:
  7613  000804                     
  7614                           ; BSR set to: 0
  7615                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             
      +                          strcpy(&dbuf[n], "INF");
  7616  000804  0E00               	movlw	low _dbuf
  7617  000806  25A1               	addwf	efgtoa@n& (0+255),w,b
  7618  000808  6E01               	movwf	strcpy@dest^0,c
  7619  00080A  0E02               	movlw	high _dbuf
  7620  00080C  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7621  00080E  6E02               	movwf	(strcpy@dest+1)^0,c
  7622  000810  0EC4               	movlw	low STR_17
  7623  000812  6E03               	movwf	strcpy@src^0,c
  7624  000814  0E06               	movlw	high STR_17
  7625  000816  6E04               	movwf	(strcpy@src+1)^0,c
  7626  000818  EC79  F02B         	call	_strcpy	;wreg free
  7627                           
  7628                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } el
      +                          se {
  7629  00081C  EF1C  F004         	goto	l4877
  7630  000820                     l4875:
  7631                           
  7632                           ; BSR set to: 0
  7633                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             
      +                          strcpy(&dbuf[n], "inf");
  7634  000820  0E00               	movlw	low _dbuf
  7635  000822  25A1               	addwf	efgtoa@n& (0+255),w,b
  7636  000824  6E01               	movwf	strcpy@dest^0,c
  7637  000826  0E02               	movlw	high _dbuf
  7638  000828  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7639  00082A  6E02               	movwf	(strcpy@dest+1)^0,c
  7640  00082C  0ECC               	movlw	low STR_18
  7641  00082E  6E03               	movwf	strcpy@src^0,c
  7642  000830  0E06               	movlw	high STR_18
  7643  000832  6E04               	movwf	(strcpy@src+1)^0,c
  7644  000834  EC79  F02B         	call	_strcpy	;wreg free
  7645  000838                     l4877:
  7646                           
  7647                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  7648  000838  0100               	movlb	0	; () banked
  7649  00083A  0EFD               	movlw	253
  7650  00083C  278E               	addwf	efgtoa@w& (0+255),f,b
  7651  00083E  0EFF               	movlw	255
  7652  000840  238F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  7653  000842                     l4879:
  7654                           
  7655                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         retu
      +                          rn pad(fp, &dbuf[0], w);
  7656  000842  C058  F011         	movff	efgtoa@fp,pad@fp
  7657  000846  C059  F012         	movff	efgtoa@fp+1,pad@fp+1
  7658  00084A  0E00               	movlw	low _dbuf
  7659  00084C  6E13               	movwf	pad@buf^0,c
  7660  00084E  0E02               	movlw	high _dbuf
  7661  000850  6E14               	movwf	(pad@buf+1)^0,c
  7662  000852  C08E  F015         	movff	efgtoa@w,pad@p
  7663  000856  C08F  F016         	movff	efgtoa@w+1,pad@p+1
  7664  00085A  ECAD  F027         	call	_pad	;wreg free
  7665  00085E  C011  F058         	movff	?_pad,?_efgtoa
  7666  000862  C012  F059         	movff	?_pad+1,?_efgtoa+1
  7667  000866  EF4E  F009         	goto	l1263
  7668  00086A                     l4883:
  7669                           
  7670                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  7671  00086A  C09B  F001         	movff	efgtoa@g,___fpclassifyf@x
  7672  00086E  C09C  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7673  000872  C09D  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7674  000876  C09E  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7675  00087A  ECE1  F025         	call	___fpclassifyf	;wreg free
  7676  00087E  5001               	movf	?___fpclassifyf^0,w,c
  7677  000880  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  7678  000882  A4D8               	btfss	status,2,c
  7679  000884  EF46  F004         	goto	u5751
  7680  000888  EF48  F004         	goto	u5750
  7681  00088C                     u5751:
  7682  00088C  EF88  F004         	goto	l4901
  7683  000890                     u5750:
  7684  000890  0EBF               	movlw	191
  7685  000892  0100               	movlb	0	; () banked
  7686  000894  6F6A               	movwf	??_efgtoa& (0+255),b
  7687  000896  0EFF               	movlw	255
  7688  000898  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  7689  00089A  505E               	movf	efgtoa@c^0,w,c
  7690  00089C  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  7691  00089E  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  7692  0008A0  516A               	movf	??_efgtoa& (0+255),w,b
  7693  0008A2  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  7694  0008A4  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  7695  0008A6  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7696  0008A8  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  7697  0008AA  E10A               	bnz	u5760
  7698  0008AC  0E1A               	movlw	26
  7699  0008AE  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  7700  0008B0  A0D8               	btfss	status,0,c
  7701  0008B2  EF5D  F004         	goto	u5761
  7702  0008B6  EF60  F004         	goto	u5760
  7703  0008BA                     u5761:
  7704  0008BA  0E01               	movlw	1
  7705  0008BC  EF61  F004         	goto	u5770
  7706  0008C0                     u5760:
  7707  0008C0  0E00               	movlw	0
  7708  0008C2                     u5770:
  7709  0008C2  6F77               	movwf	_efgtoa$2510& (0+255),b
  7710  0008C4  6B78               	clrf	(_efgtoa$2510+1)& (0+255),b
  7711  0008C6                     
  7712                           ; BSR set to: 0
  7713  0008C6  5177               	movf	_efgtoa$2510& (0+255),w,b
  7714  0008C8  1178               	iorwf	(_efgtoa$2510+1)& (0+255),w,b
  7715  0008CA  B4D8               	btfsc	status,2,c
  7716  0008CC  EF6A  F004         	goto	u5781
  7717  0008D0  EF6C  F004         	goto	u5780
  7718  0008D4                     u5781:
  7719  0008D4  EF7A  F004         	goto	l4893
  7720  0008D8                     u5780:
  7721  0008D8                     
  7722                           ; BSR set to: 0
  7723                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             
      +                          strcpy(&dbuf[n], "NAN");
  7724  0008D8  0E00               	movlw	low _dbuf
  7725  0008DA  25A1               	addwf	efgtoa@n& (0+255),w,b
  7726  0008DC  6E01               	movwf	strcpy@dest^0,c
  7727  0008DE  0E02               	movlw	high _dbuf
  7728  0008E0  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7729  0008E2  6E02               	movwf	(strcpy@dest+1)^0,c
  7730  0008E4  0EC8               	movlw	low STR_21
  7731  0008E6  6E03               	movwf	strcpy@src^0,c
  7732  0008E8  0E06               	movlw	high STR_21
  7733  0008EA  6E04               	movwf	(strcpy@src+1)^0,c
  7734  0008EC  EC79  F02B         	call	_strcpy	;wreg free
  7735                           
  7736                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } el
      +                          se {
  7737  0008F0  EF1C  F004         	goto	l4877
  7738  0008F4                     l4893:
  7739                           
  7740                           ; BSR set to: 0
  7741                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             
      +                          strcpy(&dbuf[n], "nan");
  7742  0008F4  0E00               	movlw	low _dbuf
  7743  0008F6  25A1               	addwf	efgtoa@n& (0+255),w,b
  7744  0008F8  6E01               	movwf	strcpy@dest^0,c
  7745  0008FA  0E02               	movlw	high _dbuf
  7746  0008FC  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7747  0008FE  6E02               	movwf	(strcpy@dest+1)^0,c
  7748  000900  0ED0               	movlw	low STR_22
  7749  000902  6E03               	movwf	strcpy@src^0,c
  7750  000904  0E06               	movlw	high STR_22
  7751  000906  6E04               	movwf	(strcpy@src+1)^0,c
  7752  000908  EC79  F02B         	call	_strcpy	;wreg free
  7753  00090C  EF1C  F004         	goto	l4877
  7754  000910                     l4901:
  7755                           
  7756                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  7757  000910  0E00               	movlw	0
  7758  000912  0100               	movlb	0	; () banked
  7759  000914  6FA3               	movwf	efgtoa@u& (0+255),b
  7760  000916  0E00               	movlw	0
  7761  000918  6FA4               	movwf	(efgtoa@u+1)& (0+255),b
  7762  00091A  0E80               	movlw	128
  7763  00091C  6FA5               	movwf	(efgtoa@u+2)& (0+255),b
  7764  00091E  0E3F               	movlw	63
  7765  000920  6FA6               	movwf	(efgtoa@u+3)& (0+255),b
  7766                           
  7767                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  7768  000922  0E00               	movlw	0
  7769  000924  6FA0               	movwf	(efgtoa@e+1)& (0+255),b
  7770  000926  0E00               	movlw	0
  7771  000928  6F9F               	movwf	efgtoa@e& (0+255),b
  7772  00092A                     
  7773                           ; BSR set to: 0
  7774                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g 
      +                          == 0.0)) {
  7775  00092A  C09B  F001         	movff	efgtoa@g,___fleq@ff1
  7776  00092E  C09C  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  7777  000932  C09D  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  7778  000936  C09E  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  7779  00093A  0E00               	movlw	0
  7780  00093C  6E05               	movwf	___fleq@ff2^0,c
  7781  00093E  0E00               	movlw	0
  7782  000940  6E06               	movwf	(___fleq@ff2+1)^0,c
  7783  000942  0E00               	movlw	0
  7784  000944  6E07               	movwf	(___fleq@ff2+2)^0,c
  7785  000946  0E00               	movlw	0
  7786  000948  6E08               	movwf	(___fleq@ff2+3)^0,c
  7787  00094A  ECCA  F028         	call	___fleq	;wreg free
  7788  00094E  B0D8               	btfsc	status,0,c
  7789  000950  EFAC  F004         	goto	u5791
  7790  000954  EFAE  F004         	goto	u5790
  7791  000958                     u5791:
  7792  000958  EF31  F005         	goto	l4919
  7793  00095C                     u5790:
  7794  00095C  EFCD  F004         	goto	l4911
  7795  000960                     l4907:
  7796                           
  7797                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             
      +                          u = u*10.0;
  7798  000960  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  7799  000964  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  7800  000968  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  7801  00096C  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  7802  000970  0E00               	movlw	0
  7803  000972  6E20               	movwf	___flmul@a^0,c
  7804  000974  0E00               	movlw	0
  7805  000976  6E21               	movwf	(___flmul@a+1)^0,c
  7806  000978  0E20               	movlw	32
  7807  00097A  6E22               	movwf	(___flmul@a+2)^0,c
  7808  00097C  0E41               	movlw	65
  7809  00097E  6E23               	movwf	(___flmul@a+3)^0,c
  7810  000980  ECBF  F017         	call	___flmul	;wreg free
  7811  000984  C01C  F0A3         	movff	?___flmul,efgtoa@u
  7812  000988  C01D  F0A4         	movff	?___flmul+1,efgtoa@u+1
  7813  00098C  C01E  F0A5         	movff	?___flmul+2,efgtoa@u+2
  7814  000990  C01F  F0A6         	movff	?___flmul+3,efgtoa@u+3
  7815  000994                     
  7816                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             
      +                          ++e;
  7817  000994  0100               	movlb	0	; () banked
  7818  000996  4B9F               	infsnz	efgtoa@e& (0+255),f,b
  7819  000998  2BA0               	incf	(efgtoa@e+1)& (0+255),f,b
  7820  00099A                     l4911:
  7821                           
  7822                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         whil
      +                          e (!(g < (u*10.0))) {
  7823  00099A  C09B  F035         	movff	efgtoa@g,___flge@ff1
  7824  00099E  C09C  F036         	movff	efgtoa@g+1,___flge@ff1+1
  7825  0009A2  C09D  F037         	movff	efgtoa@g+2,___flge@ff1+2
  7826  0009A6  C09E  F038         	movff	efgtoa@g+3,___flge@ff1+3
  7827  0009AA  0E00               	movlw	0
  7828  0009AC  6E20               	movwf	___flmul@a^0,c
  7829  0009AE  0E00               	movlw	0
  7830  0009B0  6E21               	movwf	(___flmul@a+1)^0,c
  7831  0009B2  0E20               	movlw	32
  7832  0009B4  6E22               	movwf	(___flmul@a+2)^0,c
  7833  0009B6  0E41               	movlw	65
  7834  0009B8  6E23               	movwf	(___flmul@a+3)^0,c
  7835  0009BA  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  7836  0009BE  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  7837  0009C2  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  7838  0009C6  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  7839  0009CA  ECBF  F017         	call	___flmul	;wreg free
  7840  0009CE  C01C  F039         	movff	?___flmul,___flge@ff2
  7841  0009D2  C01D  F03A         	movff	?___flmul+1,___flge@ff2+1
  7842  0009D6  C01E  F03B         	movff	?___flmul+2,___flge@ff2+2
  7843  0009DA  C01F  F03C         	movff	?___flmul+3,___flge@ff2+3
  7844  0009DE  EC5F  F025         	call	___flge	;wreg free
  7845  0009E2  B0D8               	btfsc	status,0,c
  7846  0009E4  EFF6  F004         	goto	u5801
  7847  0009E8  EFF8  F004         	goto	u5800
  7848  0009EC                     u5801:
  7849  0009EC  EFB0  F004         	goto	l4907
  7850  0009F0                     u5800:
  7851  0009F0  EF18  F005         	goto	l4917
  7852  0009F4                     l4913:
  7853                           
  7854                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             
      +                          u = u/10.0;
  7855  0009F4  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  7856  0009F8  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  7857  0009FC  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  7858  000A00  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  7859  000A04  0E00               	movlw	0
  7860  000A06  6E39               	movwf	___fldiv@a^0,c
  7861  000A08  0E00               	movlw	0
  7862  000A0A  6E3A               	movwf	(___fldiv@a+1)^0,c
  7863  000A0C  0E20               	movlw	32
  7864  000A0E  6E3B               	movwf	(___fldiv@a+2)^0,c
  7865  000A10  0E41               	movlw	65
  7866  000A12  6E3C               	movwf	(___fldiv@a+3)^0,c
  7867  000A14  ECD4  F019         	call	___fldiv	;wreg free
  7868  000A18  C035  F0A3         	movff	?___fldiv,efgtoa@u
  7869  000A1C  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  7870  000A20  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  7871  000A24  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  7872  000A28                     
  7873                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             
      +                          --e;
  7874  000A28  0100               	movlb	0	; () banked
  7875  000A2A  079F               	decf	efgtoa@e& (0+255),f,b
  7876  000A2C  A0D8               	btfss	status,0,c
  7877  000A2E  07A0               	decf	(efgtoa@e+1)& (0+255),f,b
  7878  000A30                     l4917:
  7879                           
  7880                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         whil
      +                          e (g < u) {
  7881  000A30  C09B  F035         	movff	efgtoa@g,___flge@ff1
  7882  000A34  C09C  F036         	movff	efgtoa@g+1,___flge@ff1+1
  7883  000A38  C09D  F037         	movff	efgtoa@g+2,___flge@ff1+2
  7884  000A3C  C09E  F038         	movff	efgtoa@g+3,___flge@ff1+3
  7885  000A40  C0A3  F039         	movff	efgtoa@u,___flge@ff2
  7886  000A44  C0A4  F03A         	movff	efgtoa@u+1,___flge@ff2+1
  7887  000A48  C0A5  F03B         	movff	efgtoa@u+2,___flge@ff2+2
  7888  000A4C  C0A6  F03C         	movff	efgtoa@u+3,___flge@ff2+3
  7889  000A50  EC5F  F025         	call	___flge	;wreg free
  7890  000A54  A0D8               	btfss	status,0,c
  7891  000A56  EF2F  F005         	goto	u5811
  7892  000A5A  EF31  F005         	goto	u5810
  7893  000A5E                     u5811:
  7894  000A5E  EFFA  F004         	goto	l4913
  7895  000A62                     u5810:
  7896  000A62                     l4919:
  7897                           
  7898                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = t
      +                          olower((int)c);
  7899  000A62  C05E  F007         	movff	efgtoa@c,tolower@c
  7900  000A66  6A08               	clrf	(tolower@c+1)^0,c
  7901  000A68  EC49  F02B         	call	_tolower	;wreg free
  7902  000A6C  5007               	movf	?_tolower^0,w,c
  7903  000A6E  0100               	movlb	0	; () banked
  7904  000A70  6F90               	movwf	efgtoa@mode& (0+255),b
  7905  000A72                     
  7906                           ; BSR set to: 0
  7907                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = 
      +                          mode;
  7908  000A72  C090  F08D         	movff	efgtoa@mode,efgtoa@nmode
  7909  000A76                     
  7910                           ; BSR set to: 0
  7911                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode
      +                           == 'g') {
  7912  000A76  0E67               	movlw	103
  7913  000A78  1990               	xorwf	efgtoa@mode& (0+255),w,b
  7914  000A7A  A4D8               	btfss	status,2,c
  7915  000A7C  EF42  F005         	goto	u5821
  7916  000A80  EF44  F005         	goto	u5820
  7917  000A84                     u5821:
  7918  000A84  EF6C  F005         	goto	l4933
  7919  000A88                     u5820:
  7920  000A88                     
  7921                           ; BSR set to: 0
  7922                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec =
      +                          = 0) {
  7923  000A88  0101               	movlb	1	; () banked
  7924  000A8A  51B6               	movf	_prec& (0+255),w,b
  7925  000A8C  11B7               	iorwf	(_prec+1)& (0+255),w,b
  7926  000A8E  A4D8               	btfss	status,2,c
  7927  000A90  EF4C  F005         	goto	u5831
  7928  000A94  EF4E  F005         	goto	u5830
  7929  000A98                     u5831:
  7930  000A98  EF52  F005         	goto	l4929
  7931  000A9C                     u5830:
  7932  000A9C                     
  7933                           ; BSR set to: 1
  7934                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  7935  000A9C  0E00               	movlw	0
  7936  000A9E  6FB7               	movwf	(_prec+1)& (0+255),b
  7937  000AA0  0E01               	movlw	1
  7938  000AA2  6FB6               	movwf	_prec& (0+255),b
  7939  000AA4                     l4929:
  7940                           
  7941                           ; BSR set to: 1
  7942                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = 
      +                          (0 < prec) ? prec : 6;
  7943  000AA4  BFB7               	btfsc	(_prec+1)& (0+255),7,b
  7944  000AA6  EF5F  F005         	goto	u5840
  7945  000AAA  51B7               	movf	(_prec+1)& (0+255),w,b
  7946  000AAC  E106               	bnz	u5841
  7947  000AAE  05B6               	decf	_prec& (0+255),w,b
  7948  000AB0  B0D8               	btfsc	status,0,c
  7949  000AB2  EF5D  F005         	goto	u5841
  7950  000AB6  EF5F  F005         	goto	u5840
  7951  000ABA                     u5841:
  7952  000ABA  EF66  F005         	goto	l1281
  7953  000ABE                     u5840:
  7954  000ABE                     l4931:
  7955                           
  7956                           ; BSR set to: 1
  7957  000ABE  0E00               	movlw	0
  7958  000AC0  0100               	movlb	0	; () banked
  7959  000AC2  6F8C               	movwf	(efgtoa@p+1)& (0+255),b
  7960  000AC4  0E06               	movlw	6
  7961  000AC6  6F8B               	movwf	efgtoa@p& (0+255),b
  7962  000AC8  EF76  F005         	goto	l4939
  7963  000ACC                     l1281:
  7964                           
  7965                           ; BSR set to: 1
  7966  000ACC  C1B6  F08B         	movff	_prec,efgtoa@p
  7967  000AD0  C1B7  F08C         	movff	_prec+1,efgtoa@p+1
  7968  000AD4  EF76  F005         	goto	l4939
  7969  000AD8                     l4933:
  7970                           
  7971                           ; BSR set to: 0
  7972                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = 
      +                          (prec < 0) ? 6 : prec;
  7973  000AD8  0101               	movlb	1	; () banked
  7974  000ADA  BFB7               	btfsc	(_prec+1)& (0+255),7,b
  7975  000ADC  EF72  F005         	goto	u5851
  7976  000AE0  EF74  F005         	goto	u5850
  7977  000AE4                     u5851:
  7978  000AE4  EF5F  F005         	goto	l4931
  7979  000AE8                     u5850:
  7980  000AE8  EF66  F005         	goto	l1281
  7981  000AEC                     l4939:
  7982                           
  7983                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode
      +                           == 'g') {
  7984  000AEC  0E67               	movlw	103
  7985  000AEE  0100               	movlb	0	; () banked
  7986  000AF0  1990               	xorwf	efgtoa@mode& (0+255),w,b
  7987  000AF2  A4D8               	btfss	status,2,c
  7988  000AF4  EF7E  F005         	goto	u5861
  7989  000AF8  EF80  F005         	goto	u5860
  7990  000AFC                     u5861:
  7991  000AFC  EFAF  F005         	goto	l4949
  7992  000B00                     u5860:
  7993  000B00                     
  7994                           ; BSR set to: 0
  7995                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  7996  000B00  AFA0               	btfss	(efgtoa@e+1)& (0+255),7,b
  7997  000B02  EF8E  F005         	goto	u5870
  7998  000B06  0EFC               	movlw	252
  7999  000B08  5D9F               	subwf	efgtoa@e& (0+255),w,b
  8000  000B0A  0EFF               	movlw	255
  8001  000B0C  59A0               	subwfb	(efgtoa@e+1)& (0+255),w,b
  8002  000B0E  A0D8               	btfss	status,0,c
  8003  000B10  EF8C  F005         	goto	u5871
  8004  000B14  EF8E  F005         	goto	u5870
  8005  000B18                     u5871:
  8006  000B18  EFAD  F005         	goto	l4947
  8007  000B1C                     u5870:
  8008  000B1C                     
  8009                           ; BSR set to: 0
  8010  000B1C  0EFF               	movlw	255
  8011  000B1E  6F6A               	movwf	??_efgtoa& (0+255),b
  8012  000B20  0EFF               	movlw	255
  8013  000B22  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  8014  000B24  C08B  F06C         	movff	efgtoa@p,??_efgtoa+2
  8015  000B28  C08C  F06D         	movff	efgtoa@p+1,??_efgtoa+3
  8016  000B2C  516A               	movf	??_efgtoa& (0+255),w,b
  8017  000B2E  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  8018  000B30  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  8019  000B32  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8020  000B34  519F               	movf	efgtoa@e& (0+255),w,b
  8021  000B36  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  8022  000B38  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  8023  000B3A  0A80               	xorlw	128
  8024  000B3C  6F6E               	movwf	(??_efgtoa+4)& (0+255),b
  8025  000B3E  51A0               	movf	(efgtoa@e+1)& (0+255),w,b
  8026  000B40  0A80               	xorlw	128
  8027  000B42  596E               	subwfb	(??_efgtoa+4)& (0+255),w,b
  8028  000B44  A0D8               	btfss	status,0,c
  8029  000B46  EFA7  F005         	goto	u5881
  8030  000B4A  EFA9  F005         	goto	u5880
  8031  000B4E                     u5881:
  8032  000B4E  EFAD  F005         	goto	l4947
  8033  000B52                     u5880:
  8034  000B52                     
  8035                           ; BSR set to: 0
  8036                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             
      +                          nmode = 'f';
  8037  000B52  0E66               	movlw	102
  8038  000B54  6F8D               	movwf	efgtoa@nmode& (0+255),b
  8039                           
  8040                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } el
      +                          se {
  8041  000B56  EFAF  F005         	goto	l4949
  8042  000B5A                     l4947:
  8043                           
  8044                           ; BSR set to: 0
  8045                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             
      +                          nmode = 'e';
  8046  000B5A  0E65               	movlw	101
  8047  000B5C  6F8D               	movwf	efgtoa@nmode& (0+255),b
  8048  000B5E                     l4949:
  8049                           
  8050                           ; BSR set to: 0
  8051                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  8052  000B5E  C08B  F083         	movff	efgtoa@p,efgtoa@m
  8053  000B62  C08C  F084         	movff	efgtoa@p+1,efgtoa@m+1
  8054  000B66                     
  8055                           ; BSR set to: 0
  8056                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  8057  000B66  0E67               	movlw	103
  8058  000B68  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8059  000B6A  A4D8               	btfss	status,2,c
  8060  000B6C  EFBA  F005         	goto	u5891
  8061  000B70  EFBC  F005         	goto	u5890
  8062  000B74                     u5891:
  8063  000B74  EFCC  F005         	goto	l4957
  8064  000B78                     u5890:
  8065  000B78                     
  8066                           ; BSR set to: 0
  8067  000B78  0E66               	movlw	102
  8068  000B7A  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8069  000B7C  A4D8               	btfss	status,2,c
  8070  000B7E  EFC3  F005         	goto	u5901
  8071  000B82  EFC5  F005         	goto	u5900
  8072  000B86                     u5901:
  8073  000B86  EFCE  F005         	goto	l4959
  8074  000B8A                     u5900:
  8075  000B8A                     
  8076                           ; BSR set to: 0
  8077  000B8A  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8078  000B8C  EFCC  F005         	goto	u5910
  8079  000B90  EFCA  F005         	goto	u5911
  8080  000B94                     u5911:
  8081  000B94  EFCE  F005         	goto	l4959
  8082  000B98                     u5910:
  8083  000B98                     l4957:
  8084                           
  8085                           ; BSR set to: 0
  8086                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  8087  000B98  4B83               	infsnz	efgtoa@m& (0+255),f,b
  8088  000B9A  2B84               	incf	(efgtoa@m+1)& (0+255),f,b
  8089  000B9C                     l4959:
  8090                           
  8091                           ; BSR set to: 0
  8092                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmod
      +                          e == 'f') {
  8093  000B9C  0E66               	movlw	102
  8094  000B9E  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8095  000BA0  A4D8               	btfss	status,2,c
  8096  000BA2  EFD5  F005         	goto	u5921
  8097  000BA6  EFD7  F005         	goto	u5920
  8098  000BAA                     u5921:
  8099  000BAA  EFF7  F005         	goto	l4969
  8100  000BAE                     u5920:
  8101  000BAE                     
  8102                           ; BSR set to: 0
  8103                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (
      +                          e < 0) {
  8104  000BAE  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8105  000BB0  EFDE  F005         	goto	u5930
  8106  000BB4  EFDC  F005         	goto	u5931
  8107  000BB8                     u5931:
  8108  000BB8  EFEA  F005         	goto	l4965
  8109  000BBC                     u5930:
  8110  000BBC                     
  8111                           ; BSR set to: 0
  8112                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             
      +                          u = 1.0;
  8113  000BBC  0E00               	movlw	0
  8114  000BBE  6FA3               	movwf	efgtoa@u& (0+255),b
  8115  000BC0  0E00               	movlw	0
  8116  000BC2  6FA4               	movwf	(efgtoa@u+1)& (0+255),b
  8117  000BC4  0E80               	movlw	128
  8118  000BC6  6FA5               	movwf	(efgtoa@u+2)& (0+255),b
  8119  000BC8  0E3F               	movlw	63
  8120  000BCA  6FA6               	movwf	(efgtoa@u+3)& (0+255),b
  8121                           
  8122                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             
      +                          e = 0;
  8123  000BCC  0E00               	movlw	0
  8124  000BCE  6FA0               	movwf	(efgtoa@e+1)& (0+255),b
  8125  000BD0  0E00               	movlw	0
  8126  000BD2  6F9F               	movwf	efgtoa@e& (0+255),b
  8127  000BD4                     l4965:
  8128                           
  8129                           ; BSR set to: 0
  8130                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (
      +                          !(mode == 'g')) {
  8131  000BD4  0E67               	movlw	103
  8132  000BD6  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8133  000BD8  B4D8               	btfsc	status,2,c
  8134  000BDA  EFF1  F005         	goto	u5941
  8135  000BDE  EFF3  F005         	goto	u5940
  8136  000BE2                     u5941:
  8137  000BE2  EFF7  F005         	goto	l4969
  8138  000BE6                     u5940:
  8139  000BE6                     
  8140                           ; BSR set to: 0
  8141                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             
      +                          m += e;
  8142  000BE6  519F               	movf	efgtoa@e& (0+255),w,b
  8143  000BE8  2783               	addwf	efgtoa@m& (0+255),f,b
  8144  000BEA  51A0               	movf	(efgtoa@e+1)& (0+255),w,b
  8145  000BEC  2384               	addwfc	(efgtoa@m+1)& (0+255),f,b
  8146  000BEE                     l4969:
  8147                           
  8148                           ; BSR set to: 0
  8149                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  8150  000BEE  0E00               	movlw	0
  8151  000BF0  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  8152  000BF2  0E00               	movlw	0
  8153  000BF4  6F99               	movwf	efgtoa@i& (0+255),b
  8154  000BF6                     
  8155                           ; BSR set to: 0
  8156                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  8157  000BF6  C09B  F091         	movff	efgtoa@g,efgtoa@h
  8158  000BFA  C09C  F092         	movff	efgtoa@g+1,efgtoa@h+1
  8159  000BFE  C09D  F093         	movff	efgtoa@g+2,efgtoa@h+2
  8160  000C02  C09E  F094         	movff	efgtoa@g+3,efgtoa@h+3
  8161  000C06                     
  8162                           ; BSR set to: 0
  8163                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  8164  000C06  C0A3  F06F         	movff	efgtoa@u,efgtoa@ou
  8165  000C0A  C0A4  F070         	movff	efgtoa@u+1,efgtoa@ou+1
  8166  000C0E  C0A5  F071         	movff	efgtoa@u+2,efgtoa@ou+2
  8167  000C12  C0A6  F072         	movff	efgtoa@u+3,efgtoa@ou+3
  8168                           
  8169                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  8170  000C16  EF88  F006         	goto	l4983
  8171  000C1A                     l4975:
  8172                           
  8173                           ; BSR set to: 0
  8174                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = 
      +                          floorf(h/u);
  8175  000C1A  C091  F035         	movff	efgtoa@h,___fldiv@b
  8176  000C1E  C092  F036         	movff	efgtoa@h+1,___fldiv@b+1
  8177  000C22  C093  F037         	movff	efgtoa@h+2,___fldiv@b+2
  8178  000C26  C094  F038         	movff	efgtoa@h+3,___fldiv@b+3
  8179  000C2A  C0A3  F039         	movff	efgtoa@u,___fldiv@a
  8180  000C2E  C0A4  F03A         	movff	efgtoa@u+1,___fldiv@a+1
  8181  000C32  C0A5  F03B         	movff	efgtoa@u+2,___fldiv@a+2
  8182  000C36  C0A6  F03C         	movff	efgtoa@u+3,___fldiv@a+3
  8183  000C3A  ECD4  F019         	call	___fldiv	;wreg free
  8184  000C3E  C035  F04E         	movff	?___fldiv,floorf@x
  8185  000C42  C036  F04F         	movff	?___fldiv+1,floorf@x+1
  8186  000C46  C037  F050         	movff	?___fldiv+2,floorf@x+2
  8187  000C4A  C038  F051         	movff	?___fldiv+3,floorf@x+3
  8188  000C4E  EC86  F01E         	call	_floorf	;wreg free
  8189  000C52  C04E  F095         	movff	?_floorf,efgtoa@l
  8190  000C56  C04F  F096         	movff	?_floorf+1,efgtoa@l+1
  8191  000C5A  C050  F097         	movff	?_floorf+2,efgtoa@l+2
  8192  000C5E  C051  F098         	movff	?_floorf+3,efgtoa@l+3
  8193                           
  8194                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = 
      +                          (int)l;
  8195  000C62  C095  F04E         	movff	efgtoa@l,___fltol@f1
  8196  000C66  C096  F04F         	movff	efgtoa@l+1,___fltol@f1+1
  8197  000C6A  C097  F050         	movff	efgtoa@l+2,___fltol@f1+2
  8198  000C6E  C098  F051         	movff	efgtoa@l+3,___fltol@f1+3
  8199  000C72  ECDC  F024         	call	___fltol	;wreg free
  8200  000C76  C04E  F087         	movff	?___fltol,efgtoa@d
  8201  000C7A  C04F  F088         	movff	?___fltol+1,efgtoa@d+1
  8202  000C7E                     
  8203                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -=
      +                           l*u;
  8204  000C7E  C091  F045         	movff	efgtoa@h,___flsub@b
  8205  000C82  C092  F046         	movff	efgtoa@h+1,___flsub@b+1
  8206  000C86  C093  F047         	movff	efgtoa@h+2,___flsub@b+2
  8207  000C8A  C094  F048         	movff	efgtoa@h+3,___flsub@b+3
  8208  000C8E  C0A3  F020         	movff	efgtoa@u,___flmul@a
  8209  000C92  C0A4  F021         	movff	efgtoa@u+1,___flmul@a+1
  8210  000C96  C0A5  F022         	movff	efgtoa@u+2,___flmul@a+2
  8211  000C9A  C0A6  F023         	movff	efgtoa@u+3,___flmul@a+3
  8212  000C9E  C095  F01C         	movff	efgtoa@l,___flmul@b
  8213  000CA2  C096  F01D         	movff	efgtoa@l+1,___flmul@b+1
  8214  000CA6  C097  F01E         	movff	efgtoa@l+2,___flmul@b+2
  8215  000CAA  C098  F01F         	movff	efgtoa@l+3,___flmul@b+3
  8216  000CAE  ECBF  F017         	call	___flmul	;wreg free
  8217  000CB2  C01C  F049         	movff	?___flmul,___flsub@a
  8218  000CB6  C01D  F04A         	movff	?___flmul+1,___flsub@a+1
  8219  000CBA  C01E  F04B         	movff	?___flmul+2,___flsub@a+2
  8220  000CBE  C01F  F04C         	movff	?___flmul+3,___flsub@a+3
  8221  000CC2  EC50  F02C         	call	___flsub	;wreg free
  8222  000CC6  C045  F091         	movff	?___flsub,efgtoa@h
  8223  000CCA  C046  F092         	movff	?___flsub+1,efgtoa@h+1
  8224  000CCE  C047  F093         	movff	?___flsub+2,efgtoa@h+2
  8225  000CD2  C048  F094         	movff	?___flsub+3,efgtoa@h+3
  8226  000CD6                     
  8227                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = 
      +                          u/10.0;
  8228  000CD6  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  8229  000CDA  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  8230  000CDE  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  8231  000CE2  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  8232  000CE6  0E00               	movlw	0
  8233  000CE8  6E39               	movwf	___fldiv@a^0,c
  8234  000CEA  0E00               	movlw	0
  8235  000CEC  6E3A               	movwf	(___fldiv@a+1)^0,c
  8236  000CEE  0E20               	movlw	32
  8237  000CF0  6E3B               	movwf	(___fldiv@a+2)^0,c
  8238  000CF2  0E41               	movlw	65
  8239  000CF4  6E3C               	movwf	(___fldiv@a+3)^0,c
  8240  000CF6  ECD4  F019         	call	___fldiv	;wreg free
  8241  000CFA  C035  F0A3         	movff	?___fldiv,efgtoa@u
  8242  000CFE  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  8243  000D02  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  8244  000D06  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  8245  000D0A                     
  8246                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  8247  000D0A  0100               	movlb	0	; () banked
  8248  000D0C  4B99               	infsnz	efgtoa@i& (0+255),f,b
  8249  000D0E  2B9A               	incf	(efgtoa@i+1)& (0+255),f,b
  8250  000D10                     l4983:
  8251                           
  8252                           ; BSR set to: 0
  8253                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  8254  000D10  5183               	movf	efgtoa@m& (0+255),w,b
  8255  000D12  5D99               	subwf	efgtoa@i& (0+255),w,b
  8256  000D14  519A               	movf	(efgtoa@i+1)& (0+255),w,b
  8257  000D16  0A80               	xorlw	128
  8258  000D18  6F6A               	movwf	??_efgtoa& (0+255),b
  8259  000D1A  5184               	movf	(efgtoa@m+1)& (0+255),w,b
  8260  000D1C  0A80               	xorlw	128
  8261  000D1E  596A               	subwfb	??_efgtoa& (0+255),w,b
  8262  000D20  A0D8               	btfss	status,0,c
  8263  000D22  EF95  F006         	goto	u5951
  8264  000D26  EF97  F006         	goto	u5950
  8265  000D2A                     u5951:
  8266  000D2A  EF0D  F006         	goto	l4975
  8267  000D2E                     u5950:
  8268  000D2E                     
  8269                           ; BSR set to: 0
  8270                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.
      +                          0;
  8271  000D2E  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  8272  000D32  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  8273  000D36  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  8274  000D3A  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  8275  000D3E  0E00               	movlw	0
  8276  000D40  6E20               	movwf	___flmul@a^0,c
  8277  000D42  0E00               	movlw	0
  8278  000D44  6E21               	movwf	(___flmul@a+1)^0,c
  8279  000D46  0EA0               	movlw	160
  8280  000D48  6E22               	movwf	(___flmul@a+2)^0,c
  8281  000D4A  0E40               	movlw	64
  8282  000D4C  6E23               	movwf	(___flmul@a+3)^0,c
  8283  000D4E  ECBF  F017         	call	___flmul	;wreg free
  8284  000D52  C01C  F095         	movff	?___flmul,efgtoa@l
  8285  000D56  C01D  F096         	movff	?___flmul+1,efgtoa@l+1
  8286  000D5A  C01E  F097         	movff	?___flmul+2,efgtoa@l+2
  8287  000D5E  C01F  F098         	movff	?___flmul+3,efgtoa@l+3
  8288  000D62                     
  8289                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < 
      +                          l) {
  8290  000D62  C091  F035         	movff	efgtoa@h,___flge@ff1
  8291  000D66  C092  F036         	movff	efgtoa@h+1,___flge@ff1+1
  8292  000D6A  C093  F037         	movff	efgtoa@h+2,___flge@ff1+2
  8293  000D6E  C094  F038         	movff	efgtoa@h+3,___flge@ff1+3
  8294  000D72  C095  F039         	movff	efgtoa@l,___flge@ff2
  8295  000D76  C096  F03A         	movff	efgtoa@l+1,___flge@ff2+1
  8296  000D7A  C097  F03B         	movff	efgtoa@l+2,___flge@ff2+2
  8297  000D7E  C098  F03C         	movff	efgtoa@l+3,___flge@ff2+3
  8298  000D82  EC5F  F025         	call	___flge	;wreg free
  8299  000D86  B0D8               	btfsc	status,0,c
  8300  000D88  EFC8  F006         	goto	u5961
  8301  000D8C  EFCA  F006         	goto	u5960
  8302  000D90                     u5961:
  8303  000D90  EFD5  F006         	goto	l4991
  8304  000D94                     u5960:
  8305  000D94                     
  8306                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 
      +                          0.0;
  8307  000D94  0E00               	movlw	0
  8308  000D96  0100               	movlb	0	; () banked
  8309  000D98  6F95               	movwf	efgtoa@l& (0+255),b
  8310  000D9A  0E00               	movlw	0
  8311  000D9C  6F96               	movwf	(efgtoa@l+1)& (0+255),b
  8312  000D9E  0E00               	movlw	0
  8313  000DA0  6F97               	movwf	(efgtoa@l+2)& (0+255),b
  8314  000DA2  0E00               	movlw	0
  8315  000DA4  6F98               	movwf	(efgtoa@l+3)& (0+255),b
  8316                           
  8317                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  8318  000DA6  EFFE  F006         	goto	l4997
  8319  000DAA                     l4991:
  8320                           
  8321                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if (
      +                          (h == l) && !(d % 2)) {
  8322  000DAA  C091  F001         	movff	efgtoa@h,___fleq@ff1
  8323  000DAE  C092  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  8324  000DB2  C093  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  8325  000DB6  C094  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  8326  000DBA  C095  F005         	movff	efgtoa@l,___fleq@ff2
  8327  000DBE  C096  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  8328  000DC2  C097  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  8329  000DC6  C098  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  8330  000DCA  ECCA  F028         	call	___fleq	;wreg free
  8331  000DCE  A0D8               	btfss	status,0,c
  8332  000DD0  EFEC  F006         	goto	u5971
  8333  000DD4  EFEE  F006         	goto	u5970
  8334  000DD8                     u5971:
  8335  000DD8  EFFE  F006         	goto	l4997
  8336  000DDC                     u5970:
  8337  000DDC  0100               	movlb	0	; () banked
  8338  000DDE  B187               	btfsc	efgtoa@d& (0+255),0,b
  8339  000DE0  EFF4  F006         	goto	u5981
  8340  000DE4  EFF6  F006         	goto	u5980
  8341  000DE8                     u5981:
  8342  000DE8  EFFE  F006         	goto	l4997
  8343  000DEC                     u5980:
  8344  000DEC                     
  8345                           ; BSR set to: 0
  8346                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             
      +                          l = 0.0;
  8347  000DEC  0E00               	movlw	0
  8348  000DEE  6F95               	movwf	efgtoa@l& (0+255),b
  8349  000DF0  0E00               	movlw	0
  8350  000DF2  6F96               	movwf	(efgtoa@l+1)& (0+255),b
  8351  000DF4  0E00               	movlw	0
  8352  000DF6  6F97               	movwf	(efgtoa@l+2)& (0+255),b
  8353  000DF8  0E00               	movlw	0
  8354  000DFA  6F98               	movwf	(efgtoa@l+3)& (0+255),b
  8355  000DFC                     l4997:
  8356                           
  8357                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + 
      +                          l;
  8358  000DFC  C09B  F035         	movff	efgtoa@g,___fladd@b
  8359  000E00  C09C  F036         	movff	efgtoa@g+1,___fladd@b+1
  8360  000E04  C09D  F037         	movff	efgtoa@g+2,___fladd@b+2
  8361  000E08  C09E  F038         	movff	efgtoa@g+3,___fladd@b+3
  8362  000E0C  C095  F039         	movff	efgtoa@l,___fladd@a
  8363  000E10  C096  F03A         	movff	efgtoa@l+1,___fladd@a+1
  8364  000E14  C097  F03B         	movff	efgtoa@l+2,___fladd@a+2
  8365  000E18  C098  F03C         	movff	efgtoa@l+3,___fladd@a+3
  8366  000E1C  EC5F  F015         	call	___fladd	;wreg free
  8367  000E20  C035  F091         	movff	?___fladd,efgtoa@h
  8368  000E24  C036  F092         	movff	?___fladd+1,efgtoa@h+1
  8369  000E28  C037  F093         	movff	?___fladd+2,efgtoa@h+2
  8370  000E2C  C038  F094         	movff	?___fladd+3,efgtoa@h+3
  8371  000E30                     
  8372                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  8373  000E30  C06F  F0A3         	movff	efgtoa@ou,efgtoa@u
  8374  000E34  C070  F0A4         	movff	efgtoa@ou+1,efgtoa@u+1
  8375  000E38  C071  F0A5         	movff	efgtoa@ou+2,efgtoa@u+2
  8376  000E3C  C072  F0A6         	movff	efgtoa@ou+3,efgtoa@u+3
  8377  000E40                     
  8378                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  8379  000E40  0E65               	movlw	101
  8380  000E42  0100               	movlb	0	; () banked
  8381  000E44  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8382  000E46  B4D8               	btfsc	status,2,c
  8383  000E48  EF28  F007         	goto	u5991
  8384  000E4C  EF2A  F007         	goto	u5990
  8385  000E50                     u5991:
  8386  000E50  EF30  F007         	goto	l5005
  8387  000E54                     u5990:
  8388  000E54                     
  8389                           ; BSR set to: 0
  8390  000E54  C09F  F085         	movff	efgtoa@e,efgtoa@ne
  8391  000E58  C0A0  F086         	movff	efgtoa@e+1,efgtoa@ne+1
  8392  000E5C  EF34  F007         	goto	l1307
  8393  000E60                     l5005:
  8394                           
  8395                           ; BSR set to: 0
  8396  000E60  0E00               	movlw	0
  8397  000E62  6F86               	movwf	(efgtoa@ne+1)& (0+255),b
  8398  000E64  0E00               	movlw	0
  8399  000E66  6F85               	movwf	efgtoa@ne& (0+255),b
  8400  000E68                     l1307:
  8401                           
  8402                           ; BSR set to: 0
  8403                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  8404  000E68  0E00               	movlw	0
  8405  000E6A  6F82               	movwf	(efgtoa@pp+1)& (0+255),b
  8406  000E6C  0E00               	movlw	0
  8407  000E6E  6F81               	movwf	efgtoa@pp& (0+255),b
  8408                           
  8409                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  8410  000E70  0E00               	movlw	0
  8411  000E72  6F80               	movwf	(efgtoa@t+1)& (0+255),b
  8412  000E74  0E00               	movlw	0
  8413  000E76  6F7F               	movwf	efgtoa@t& (0+255),b
  8414                           
  8415                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  8416  000E78  0E00               	movlw	0
  8417  000E7A  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  8418  000E7C  0E00               	movlw	0
  8419  000E7E  6F99               	movwf	efgtoa@i& (0+255),b
  8420                           
  8421                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  8422  000E80  EF31  F008         	goto	l5055
  8423  000E84                     l5007:
  8424                           
  8425                           ; BSR set to: 0
  8426                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = 
      +                          floorf(h/u);
  8427  000E84  C091  F035         	movff	efgtoa@h,___fldiv@b
  8428  000E88  C092  F036         	movff	efgtoa@h+1,___fldiv@b+1
  8429  000E8C  C093  F037         	movff	efgtoa@h+2,___fldiv@b+2
  8430  000E90  C094  F038         	movff	efgtoa@h+3,___fldiv@b+3
  8431  000E94  C0A3  F039         	movff	efgtoa@u,___fldiv@a
  8432  000E98  C0A4  F03A         	movff	efgtoa@u+1,___fldiv@a+1
  8433  000E9C  C0A5  F03B         	movff	efgtoa@u+2,___fldiv@a+2
  8434  000EA0  C0A6  F03C         	movff	efgtoa@u+3,___fldiv@a+3
  8435  000EA4  ECD4  F019         	call	___fldiv	;wreg free
  8436  000EA8  C035  F04E         	movff	?___fldiv,floorf@x
  8437  000EAC  C036  F04F         	movff	?___fldiv+1,floorf@x+1
  8438  000EB0  C037  F050         	movff	?___fldiv+2,floorf@x+2
  8439  000EB4  C038  F051         	movff	?___fldiv+3,floorf@x+3
  8440  000EB8  EC86  F01E         	call	_floorf	;wreg free
  8441  000EBC  C04E  F095         	movff	?_floorf,efgtoa@l
  8442  000EC0  C04F  F096         	movff	?_floorf+1,efgtoa@l+1
  8443  000EC4  C050  F097         	movff	?_floorf+2,efgtoa@l+2
  8444  000EC8  C051  F098         	movff	?_floorf+3,efgtoa@l+3
  8445                           
  8446                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = 
      +                          (int)l;
  8447  000ECC  C095  F04E         	movff	efgtoa@l,___fltol@f1
  8448  000ED0  C096  F04F         	movff	efgtoa@l+1,___fltol@f1+1
  8449  000ED4  C097  F050         	movff	efgtoa@l+2,___fltol@f1+2
  8450  000ED8  C098  F051         	movff	efgtoa@l+3,___fltol@f1+3
  8451  000EDC  ECDC  F024         	call	___fltol	;wreg free
  8452  000EE0  C04E  F087         	movff	?___fltol,efgtoa@d
  8453  000EE4  C04F  F088         	movff	?___fltol+1,efgtoa@d+1
  8454  000EE8                     
  8455                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  8456  000EE8  0101               	movlb	1	; () banked
  8457  000EEA  B9B8               	btfsc	_flags& (0+255),4,b
  8458  000EEC  EF7A  F007         	goto	u6001
  8459  000EF0  EF7C  F007         	goto	u6000
  8460  000EF4                     u6001:
  8461  000EF4  EF9A  F007         	goto	l5019
  8462  000EF8                     u6000:
  8463  000EF8                     
  8464                           ; BSR set to: 1
  8465  000EF8  0100               	movlb	0	; () banked
  8466  000EFA  5187               	movf	efgtoa@d& (0+255),w,b
  8467  000EFC  1188               	iorwf	(efgtoa@d+1)& (0+255),w,b
  8468  000EFE  A4D8               	btfss	status,2,c
  8469  000F00  EF84  F007         	goto	u6011
  8470  000F04  EF86  F007         	goto	u6010
  8471  000F08                     u6011:
  8472  000F08  EF9A  F007         	goto	l5019
  8473  000F0C                     u6010:
  8474  000F0C                     
  8475                           ; BSR set to: 0
  8476  000F0C  0E67               	movlw	103
  8477  000F0E  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8478  000F10  A4D8               	btfss	status,2,c
  8479  000F12  EF8D  F007         	goto	u6021
  8480  000F16  EF8F  F007         	goto	u6020
  8481  000F1A                     u6021:
  8482  000F1A  EF9A  F007         	goto	l5019
  8483  000F1E                     u6020:
  8484  000F1E                     
  8485                           ; BSR set to: 0
  8486  000F1E  BF86               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  8487  000F20  EF96  F007         	goto	u6030
  8488  000F24  EF94  F007         	goto	u6031
  8489  000F28                     u6031:
  8490  000F28  EF9A  F007         	goto	l5019
  8491  000F2C                     u6030:
  8492  000F2C                     
  8493                           ; BSR set to: 0
  8494                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             
      +                          ++t;
  8495  000F2C  4B7F               	infsnz	efgtoa@t& (0+255),f,b
  8496  000F2E  2B80               	incf	(efgtoa@t+1)& (0+255),f,b
  8497                           
  8498                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } el
      +                          se {
  8499  000F30  EFE5  F007         	goto	l5047
  8500  000F34                     l5019:
  8501                           
  8502                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             
      +                          if (!pp && (ne < 0)) {
  8503  000F34  0100               	movlb	0	; () banked
  8504  000F36  5181               	movf	efgtoa@pp& (0+255),w,b
  8505  000F38  1182               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  8506  000F3A  A4D8               	btfss	status,2,c
  8507  000F3C  EFA2  F007         	goto	u6041
  8508  000F40  EFA4  F007         	goto	u6040
  8509  000F44                     u6041:
  8510  000F44  EFCE  F007         	goto	l5039
  8511  000F48                     u6040:
  8512  000F48                     
  8513                           ; BSR set to: 0
  8514  000F48  BF86               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  8515  000F4A  EFAB  F007         	goto	u6050
  8516  000F4E  EFA9  F007         	goto	u6051
  8517  000F52                     u6051:
  8518  000F52  EFCE  F007         	goto	l5039
  8519  000F56                     u6050:
  8520  000F56                     
  8521                           ; BSR set to: 0
  8522                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:             
      +                              dbuf[n++] = '.';
  8523  000F56  0E00               	movlw	low _dbuf
  8524  000F58  25A1               	addwf	efgtoa@n& (0+255),w,b
  8525  000F5A  6ED9               	movwf	fsr2l,c
  8526  000F5C  0E02               	movlw	high _dbuf
  8527  000F5E  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8528  000F60  6EDA               	movwf	fsr2h,c
  8529  000F62  0E2E               	movlw	46
  8530  000F64  6EDF               	movwf	indf2,c
  8531  000F66                     
  8532                           ; BSR set to: 0
  8533  000F66  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8534  000F68  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8535  000F6A                     
  8536                           ; BSR set to: 0
  8537                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:             
      +                              --w;
  8538  000F6A  078E               	decf	efgtoa@w& (0+255),f,b
  8539  000F6C  A0D8               	btfss	status,0,c
  8540  000F6E  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8541  000F70                     
  8542                           ; BSR set to: 0
  8543                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:             
      +                              pp = 1;
  8544  000F70  0E00               	movlw	0
  8545  000F72  6F82               	movwf	(efgtoa@pp+1)& (0+255),b
  8546  000F74  0E01               	movlw	1
  8547  000F76  6F81               	movwf	efgtoa@pp& (0+255),b
  8548  000F78  EFCE  F007         	goto	l5039
  8549  000F7C                     l5031:
  8550                           
  8551                           ; BSR set to: 0
  8552                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:             
      +                              dbuf[n++] = '0';
  8553  000F7C  0E00               	movlw	low _dbuf
  8554  000F7E  25A1               	addwf	efgtoa@n& (0+255),w,b
  8555  000F80  6ED9               	movwf	fsr2l,c
  8556  000F82  0E02               	movlw	high _dbuf
  8557  000F84  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8558  000F86  6EDA               	movwf	fsr2h,c
  8559  000F88  0E30               	movlw	48
  8560  000F8A  6EDF               	movwf	indf2,c
  8561  000F8C                     
  8562                           ; BSR set to: 0
  8563  000F8C  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8564  000F8E  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8565  000F90                     
  8566                           ; BSR set to: 0
  8567                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:             
      +                              --w;
  8568  000F90  078E               	decf	efgtoa@w& (0+255),f,b
  8569  000F92  A0D8               	btfss	status,0,c
  8570  000F94  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8571  000F96                     
  8572                           ; BSR set to: 0
  8573                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:             
      +                              --t;
  8574  000F96  077F               	decf	efgtoa@t& (0+255),f,b
  8575  000F98  A0D8               	btfss	status,0,c
  8576  000F9A  0780               	decf	(efgtoa@t+1)& (0+255),f,b
  8577  000F9C                     l5039:
  8578                           
  8579                           ; BSR set to: 0
  8580                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             
      +                          while (t) {
  8581  000F9C  517F               	movf	efgtoa@t& (0+255),w,b
  8582  000F9E  1180               	iorwf	(efgtoa@t+1)& (0+255),w,b
  8583  000FA0  A4D8               	btfss	status,2,c
  8584  000FA2  EFD5  F007         	goto	u6061
  8585  000FA6  EFD7  F007         	goto	u6060
  8586  000FAA                     u6061:
  8587  000FAA  EFBE  F007         	goto	l5031
  8588  000FAE                     u6060:
  8589  000FAE                     
  8590                           ; BSR set to: 0
  8591                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             
      +                          dbuf[n++] = '0' + d;
  8592  000FAE  0E00               	movlw	low _dbuf
  8593  000FB0  25A1               	addwf	efgtoa@n& (0+255),w,b
  8594  000FB2  6ED9               	movwf	fsr2l,c
  8595  000FB4  0E02               	movlw	high _dbuf
  8596  000FB6  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8597  000FB8  6EDA               	movwf	fsr2h,c
  8598  000FBA  5187               	movf	efgtoa@d& (0+255),w,b
  8599  000FBC  0F30               	addlw	48
  8600  000FBE  6EDF               	movwf	indf2,c
  8601  000FC0                     
  8602                           ; BSR set to: 0
  8603  000FC0  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8604  000FC2  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8605  000FC4                     
  8606                           ; BSR set to: 0
  8607                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             
      +                          --w;
  8608  000FC4  078E               	decf	efgtoa@w& (0+255),f,b
  8609  000FC6  A0D8               	btfss	status,0,c
  8610  000FC8  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8611  000FCA                     l5047:
  8612                           
  8613                           ; BSR set to: 0
  8614                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -=
      +                           l*u;
  8615  000FCA  C091  F045         	movff	efgtoa@h,___flsub@b
  8616  000FCE  C092  F046         	movff	efgtoa@h+1,___flsub@b+1
  8617  000FD2  C093  F047         	movff	efgtoa@h+2,___flsub@b+2
  8618  000FD6  C094  F048         	movff	efgtoa@h+3,___flsub@b+3
  8619  000FDA  C0A3  F020         	movff	efgtoa@u,___flmul@a
  8620  000FDE  C0A4  F021         	movff	efgtoa@u+1,___flmul@a+1
  8621  000FE2  C0A5  F022         	movff	efgtoa@u+2,___flmul@a+2
  8622  000FE6  C0A6  F023         	movff	efgtoa@u+3,___flmul@a+3
  8623  000FEA  C095  F01C         	movff	efgtoa@l,___flmul@b
  8624  000FEE  C096  F01D         	movff	efgtoa@l+1,___flmul@b+1
  8625  000FF2  C097  F01E         	movff	efgtoa@l+2,___flmul@b+2
  8626  000FF6  C098  F01F         	movff	efgtoa@l+3,___flmul@b+3
  8627  000FFA  ECBF  F017         	call	___flmul	;wreg free
  8628  000FFE  C01C  F049         	movff	?___flmul,___flsub@a
  8629  001002  C01D  F04A         	movff	?___flmul+1,___flsub@a+1
  8630  001006  C01E  F04B         	movff	?___flmul+2,___flsub@a+2
  8631  00100A  C01F  F04C         	movff	?___flmul+3,___flsub@a+3
  8632  00100E  EC50  F02C         	call	___flsub	;wreg free
  8633  001012  C045  F091         	movff	?___flsub,efgtoa@h
  8634  001016  C046  F092         	movff	?___flsub+1,efgtoa@h+1
  8635  00101A  C047  F093         	movff	?___flsub+2,efgtoa@h+2
  8636  00101E  C048  F094         	movff	?___flsub+3,efgtoa@h+3
  8637  001022                     
  8638                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = 
      +                          u/10.0;
  8639  001022  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  8640  001026  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  8641  00102A  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  8642  00102E  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  8643  001032  0E00               	movlw	0
  8644  001034  6E39               	movwf	___fldiv@a^0,c
  8645  001036  0E00               	movlw	0
  8646  001038  6E3A               	movwf	(___fldiv@a+1)^0,c
  8647  00103A  0E20               	movlw	32
  8648  00103C  6E3B               	movwf	(___fldiv@a+2)^0,c
  8649  00103E  0E41               	movlw	65
  8650  001040  6E3C               	movwf	(___fldiv@a+3)^0,c
  8651  001042  ECD4  F019         	call	___fldiv	;wreg free
  8652  001046  C035  F0A3         	movff	?___fldiv,efgtoa@u
  8653  00104A  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  8654  00104E  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  8655  001052  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  8656  001056                     
  8657                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne
      +                          ;
  8658  001056  0100               	movlb	0	; () banked
  8659  001058  0785               	decf	efgtoa@ne& (0+255),f,b
  8660  00105A  A0D8               	btfss	status,0,c
  8661  00105C  0786               	decf	(efgtoa@ne+1)& (0+255),f,b
  8662  00105E                     
  8663                           ; BSR set to: 0
  8664                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  8665  00105E  4B99               	infsnz	efgtoa@i& (0+255),f,b
  8666  001060  2B9A               	incf	(efgtoa@i+1)& (0+255),f,b
  8667  001062                     l5055:
  8668                           
  8669                           ; BSR set to: 0
  8670                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  8671  001062  5183               	movf	efgtoa@m& (0+255),w,b
  8672  001064  5D99               	subwf	efgtoa@i& (0+255),w,b
  8673  001066  519A               	movf	(efgtoa@i+1)& (0+255),w,b
  8674  001068  0A80               	xorlw	128
  8675  00106A  6F6A               	movwf	??_efgtoa& (0+255),b
  8676  00106C  5184               	movf	(efgtoa@m+1)& (0+255),w,b
  8677  00106E  0A80               	xorlw	128
  8678  001070  596A               	subwfb	??_efgtoa& (0+255),w,b
  8679  001072  B0D8               	btfsc	status,0,c
  8680  001074  EF3E  F008         	goto	u6071
  8681  001078  EF40  F008         	goto	u6070
  8682  00107C                     u6071:
  8683  00107C  EF4E  F008         	goto	l5059
  8684  001080                     u6070:
  8685  001080                     
  8686                           ; BSR set to: 0
  8687  001080  BFA2               	btfsc	(efgtoa@n+1)& (0+255),7,b
  8688  001082  EF4C  F008         	goto	u6081
  8689  001086  51A2               	movf	(efgtoa@n+1)& (0+255),w,b
  8690  001088  E109               	bnz	u6080
  8691  00108A  0E4B               	movlw	75
  8692  00108C  5DA1               	subwf	efgtoa@n& (0+255),w,b
  8693  00108E  A0D8               	btfss	status,0,c
  8694  001090  EF4C  F008         	goto	u6081
  8695  001094  EF4E  F008         	goto	u6080
  8696  001098                     u6081:
  8697  001098  EF42  F007         	goto	l5007
  8698  00109C                     u6080:
  8699  00109C                     l5059:
  8700                           
  8701                           ; BSR set to: 0
  8702                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp 
      +                          && (flags & (1 << 4))) {
  8703  00109C  5181               	movf	efgtoa@pp& (0+255),w,b
  8704  00109E  1182               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  8705  0010A0  A4D8               	btfss	status,2,c
  8706  0010A2  EF55  F008         	goto	u6091
  8707  0010A6  EF57  F008         	goto	u6090
  8708  0010AA                     u6091:
  8709  0010AA  EF6A  F008         	goto	l5067
  8710  0010AE                     u6090:
  8711  0010AE                     
  8712                           ; BSR set to: 0
  8713  0010AE  0101               	movlb	1	; () banked
  8714  0010B0  A9B8               	btfss	_flags& (0+255),4,b
  8715  0010B2  EF5D  F008         	goto	u6101
  8716  0010B6  EF5F  F008         	goto	u6100
  8717  0010BA                     u6101:
  8718  0010BA  EF6A  F008         	goto	l5067
  8719  0010BE                     u6100:
  8720  0010BE                     
  8721                           ; BSR set to: 1
  8722                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf
      +                          [n++] = '.';
  8723  0010BE  0E00               	movlw	low _dbuf
  8724  0010C0  0100               	movlb	0	; () banked
  8725  0010C2  25A1               	addwf	efgtoa@n& (0+255),w,b
  8726  0010C4  6ED9               	movwf	fsr2l,c
  8727  0010C6  0E02               	movlw	high _dbuf
  8728  0010C8  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8729  0010CA  6EDA               	movwf	fsr2h,c
  8730  0010CC  0E2E               	movlw	46
  8731  0010CE  6EDF               	movwf	indf2,c
  8732  0010D0                     
  8733                           ; BSR set to: 0
  8734  0010D0  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8735  0010D2  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8736  0010D4                     l5067:
  8737                           
  8738                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] 
      +                          = '\0';
  8739  0010D4  0E00               	movlw	low _dbuf
  8740  0010D6  0100               	movlb	0	; () banked
  8741  0010D8  25A1               	addwf	efgtoa@n& (0+255),w,b
  8742  0010DA  6ED9               	movwf	fsr2l,c
  8743  0010DC  0E02               	movlw	high _dbuf
  8744  0010DE  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8745  0010E0  6EDA               	movwf	fsr2h,c
  8746  0010E2  0E00               	movlw	0
  8747  0010E4  6EDF               	movwf	indf2,c
  8748  0010E6                     
  8749                           ; BSR set to: 0
  8750                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmod
      +                          e == 'e') {
  8751  0010E6  0E65               	movlw	101
  8752  0010E8  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8753  0010EA  A4D8               	btfss	status,2,c
  8754  0010EC  EF7A  F008         	goto	u6111
  8755  0010F0  EF7C  F008         	goto	u6110
  8756  0010F4                     u6111:
  8757  0010F4  EF21  F004         	goto	l4879
  8758  0010F8                     u6110:
  8759  0010F8                     
  8760                           ; BSR set to: 0
  8761                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = 
      +                          sizeof(dbuf) - 1;
  8762  0010F8  0E00               	movlw	0
  8763  0010FA  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  8764  0010FC  0E4F               	movlw	79
  8765  0010FE  6F99               	movwf	efgtoa@i& (0+255),b
  8766  001100                     
  8767                           ; BSR set to: 0
  8768                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf
      +                          [i] = '\0';
  8769  001100  0E00               	movlw	low _dbuf
  8770  001102  2599               	addwf	efgtoa@i& (0+255),w,b
  8771  001104  6ED9               	movwf	fsr2l,c
  8772  001106  0E02               	movlw	high _dbuf
  8773  001108  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8774  00110A  6EDA               	movwf	fsr2h,c
  8775  00110C  0E00               	movlw	0
  8776  00110E  6EDF               	movwf	indf2,c
  8777  001110                     
  8778                           ; BSR set to: 0
  8779                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign
      +                           = 0;
  8780  001110  0E00               	movlw	0
  8781  001112  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  8782  001114  0E00               	movlw	0
  8783  001116  6F89               	movwf	efgtoa@sign& (0+255),b
  8784  001118                     
  8785                           ; BSR set to: 0
  8786                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (
      +                          e < 0) {
  8787  001118  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8788  00111A  EF93  F008         	goto	u6120
  8789  00111E  EF91  F008         	goto	u6121
  8790  001122                     u6121:
  8791  001122  EF9B  F008         	goto	l5083
  8792  001126                     u6120:
  8793  001126                     
  8794                           ; BSR set to: 0
  8795                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             
      +                          sign = 1;
  8796  001126  0E00               	movlw	0
  8797  001128  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  8798  00112A  0E01               	movlw	1
  8799  00112C  6F89               	movwf	efgtoa@sign& (0+255),b
  8800  00112E                     
  8801                           ; BSR set to: 0
  8802                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             
      +                          e = -e;
  8803  00112E  6D9F               	negf	efgtoa@e& (0+255),b
  8804  001130  1FA0               	comf	(efgtoa@e+1)& (0+255),f,b
  8805  001132  B0D8               	btfsc	status,0,c
  8806  001134  2BA0               	incf	(efgtoa@e+1)& (0+255),f,b
  8807  001136                     l5083:
  8808                           
  8809                           ; BSR set to: 0
  8810                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 
      +                          2;
  8811  001136  0E00               	movlw	0
  8812  001138  6F8C               	movwf	(efgtoa@p+1)& (0+255),b
  8813  00113A  0E02               	movlw	2
  8814  00113C  6F8B               	movwf	efgtoa@p& (0+255),b
  8815                           
  8816                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  8817  00113E  EFCC  F008         	goto	l5095
  8818  001142                     l5085:
  8819                           
  8820                           ; BSR set to: 0
  8821                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             
      +                          --i;
  8822  001142  0799               	decf	efgtoa@i& (0+255),f,b
  8823  001144  A0D8               	btfss	status,0,c
  8824  001146  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  8825  001148                     
  8826                           ; BSR set to: 0
  8827                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             
      +                          dbuf[i] = '0' + (e % 10);
  8828  001148  0E00               	movlw	low _dbuf
  8829  00114A  2599               	addwf	efgtoa@i& (0+255),w,b
  8830  00114C  6ED9               	movwf	fsr2l,c
  8831  00114E  0E02               	movlw	high _dbuf
  8832  001150  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8833  001152  6EDA               	movwf	fsr2h,c
  8834  001154  C09F  F001         	movff	efgtoa@e,___awmod@dividend
  8835  001158  C0A0  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  8836  00115C  0E00               	movlw	0
  8837  00115E  6E04               	movwf	(___awmod@divisor+1)^0,c
  8838  001160  0E0A               	movlw	10
  8839  001162  6E03               	movwf	___awmod@divisor^0,c
  8840  001164  EC72  F028         	call	___awmod	;wreg free
  8841  001168  5001               	movf	?___awmod^0,w,c
  8842  00116A  0F30               	addlw	48
  8843  00116C  6EDF               	movwf	indf2,c
  8844  00116E                     
  8845                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             
      +                          e = e / 10;
  8846  00116E  C09F  F001         	movff	efgtoa@e,___awdiv@dividend
  8847  001172  C0A0  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  8848  001176  0E00               	movlw	0
  8849  001178  6E04               	movwf	(___awdiv@divisor+1)^0,c
  8850  00117A  0E0A               	movlw	10
  8851  00117C  6E03               	movwf	___awdiv@divisor^0,c
  8852  00117E  EC10  F028         	call	___awdiv	;wreg free
  8853  001182  C001  F09F         	movff	?___awdiv,efgtoa@e
  8854  001186  C002  F0A0         	movff	?___awdiv+1,efgtoa@e+1
  8855  00118A                     
  8856                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             
      +                          --p;
  8857  00118A  0100               	movlb	0	; () banked
  8858  00118C  078B               	decf	efgtoa@p& (0+255),f,b
  8859  00118E  A0D8               	btfss	status,0,c
  8860  001190  078C               	decf	(efgtoa@p+1)& (0+255),f,b
  8861  001192                     
  8862                           ; BSR set to: 0
  8863                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             
      +                          --w;
  8864  001192  078E               	decf	efgtoa@w& (0+255),f,b
  8865  001194  A0D8               	btfss	status,0,c
  8866  001196  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8867  001198                     l5095:
  8868                           
  8869                           ; BSR set to: 0
  8870                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  8871  001198  519F               	movf	efgtoa@e& (0+255),w,b
  8872  00119A  11A0               	iorwf	(efgtoa@e+1)& (0+255),w,b
  8873  00119C  A4D8               	btfss	status,2,c
  8874  00119E  EFD3  F008         	goto	u6131
  8875  0011A2  EFD5  F008         	goto	u6130
  8876  0011A6                     u6131:
  8877  0011A6  EFA1  F008         	goto	l5085
  8878  0011AA                     u6130:
  8879  0011AA                     
  8880                           ; BSR set to: 0
  8881  0011AA  BF8C               	btfsc	(efgtoa@p+1)& (0+255),7,b
  8882  0011AC  EFE2  F008         	goto	u6140
  8883  0011B0  518C               	movf	(efgtoa@p+1)& (0+255),w,b
  8884  0011B2  E106               	bnz	u6141
  8885  0011B4  058B               	decf	efgtoa@p& (0+255),w,b
  8886  0011B6  B0D8               	btfsc	status,0,c
  8887  0011B8  EFE0  F008         	goto	u6141
  8888  0011BC  EFE2  F008         	goto	u6140
  8889  0011C0                     u6141:
  8890  0011C0  EFA1  F008         	goto	l5085
  8891  0011C4                     u6140:
  8892  0011C4                     
  8893                           ; BSR set to: 0
  8894                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  8895  0011C4  0799               	decf	efgtoa@i& (0+255),f,b
  8896  0011C6  A0D8               	btfss	status,0,c
  8897  0011C8  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  8898  0011CA                     
  8899                           ; BSR set to: 0
  8900                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [i] = sign ? '-' : '+';
  8901  0011CA  5189               	movf	efgtoa@sign& (0+255),w,b
  8902  0011CC  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8903  0011CE  A4D8               	btfss	status,2,c
  8904  0011D0  EFEC  F008         	goto	u6151
  8905  0011D4  EFEE  F008         	goto	u6150
  8906  0011D8                     u6151:
  8907  0011D8  EFF4  F008         	goto	l5105
  8908  0011DC                     u6150:
  8909  0011DC                     
  8910                           ; BSR set to: 0
  8911  0011DC  0E00               	movlw	0
  8912  0011DE  6F7A               	movwf	(_efgtoa$2514+1)& (0+255),b
  8913  0011E0  0E2B               	movlw	43
  8914  0011E2  6F79               	movwf	_efgtoa$2514& (0+255),b
  8915  0011E4  EFF8  F008         	goto	l5107
  8916  0011E8                     l5105:
  8917                           
  8918                           ; BSR set to: 0
  8919  0011E8  0E00               	movlw	0
  8920  0011EA  6F7A               	movwf	(_efgtoa$2514+1)& (0+255),b
  8921  0011EC  0E2D               	movlw	45
  8922  0011EE  6F79               	movwf	_efgtoa$2514& (0+255),b
  8923  0011F0                     l5107:
  8924                           
  8925                           ; BSR set to: 0
  8926  0011F0  0E00               	movlw	low _dbuf
  8927  0011F2  2599               	addwf	efgtoa@i& (0+255),w,b
  8928  0011F4  6ED9               	movwf	fsr2l,c
  8929  0011F6  0E02               	movlw	high _dbuf
  8930  0011F8  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8931  0011FA  6EDA               	movwf	fsr2h,c
  8932  0011FC  C079  FFDF         	movff	_efgtoa$2514,indf2
  8933  001200                     
  8934                           ; BSR set to: 0
  8935                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  8936  001200  078E               	decf	efgtoa@w& (0+255),f,b
  8937  001202  A0D8               	btfss	status,0,c
  8938  001204  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8939  001206                     
  8940                           ; BSR set to: 0
  8941                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  8942  001206  0799               	decf	efgtoa@i& (0+255),f,b
  8943  001208  A0D8               	btfss	status,0,c
  8944  00120A  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  8945  00120C                     
  8946                           ; BSR set to: 0
  8947  00120C  0EBF               	movlw	191
  8948  00120E  6F6A               	movwf	??_efgtoa& (0+255),b
  8949  001210  0EFF               	movlw	255
  8950  001212  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  8951  001214  505E               	movf	efgtoa@c^0,w,c
  8952  001216  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  8953  001218  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  8954  00121A  516A               	movf	??_efgtoa& (0+255),w,b
  8955  00121C  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  8956  00121E  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  8957  001220  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8958  001222  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  8959  001224  E10A               	bnz	u6160
  8960  001226  0E1A               	movlw	26
  8961  001228  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  8962  00122A  A0D8               	btfss	status,0,c
  8963  00122C  EF1A  F009         	goto	u6161
  8964  001230  EF1D  F009         	goto	u6160
  8965  001234                     u6161:
  8966  001234  0E01               	movlw	1
  8967  001236  EF1E  F009         	goto	u6170
  8968  00123A                     u6160:
  8969  00123A  0E00               	movlw	0
  8970  00123C                     u6170:
  8971  00123C  6F7D               	movwf	_efgtoa$2516& (0+255),b
  8972  00123E  6B7E               	clrf	(_efgtoa$2516+1)& (0+255),b
  8973  001240                     
  8974                           ; BSR set to: 0
  8975  001240  517D               	movf	_efgtoa$2516& (0+255),w,b
  8976  001242  117E               	iorwf	(_efgtoa$2516+1)& (0+255),w,b
  8977  001244  A4D8               	btfss	status,2,c
  8978  001246  EF27  F009         	goto	u6181
  8979  00124A  EF29  F009         	goto	u6180
  8980  00124E                     u6181:
  8981  00124E  EF2F  F009         	goto	l5121
  8982  001252                     u6180:
  8983  001252                     
  8984                           ; BSR set to: 0
  8985  001252  0E00               	movlw	0
  8986  001254  6F7C               	movwf	(_efgtoa$2515+1)& (0+255),b
  8987  001256  0E65               	movlw	101
  8988  001258  6F7B               	movwf	_efgtoa$2515& (0+255),b
  8989  00125A  EF33  F009         	goto	l5123
  8990  00125E                     l5121:
  8991                           
  8992                           ; BSR set to: 0
  8993  00125E  0E00               	movlw	0
  8994  001260  6F7C               	movwf	(_efgtoa$2515+1)& (0+255),b
  8995  001262  0E45               	movlw	69
  8996  001264  6F7B               	movwf	_efgtoa$2515& (0+255),b
  8997  001266                     l5123:
  8998                           
  8999                           ; BSR set to: 0
  9000  001266  0E00               	movlw	low _dbuf
  9001  001268  2599               	addwf	efgtoa@i& (0+255),w,b
  9002  00126A  6ED9               	movwf	fsr2l,c
  9003  00126C  0E02               	movlw	high _dbuf
  9004  00126E  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9005  001270  6EDA               	movwf	fsr2h,c
  9006  001272  C07B  FFDF         	movff	_efgtoa$2515,indf2
  9007  001276                     
  9008                           ; BSR set to: 0
  9009                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  9010  001276  078E               	decf	efgtoa@w& (0+255),f,b
  9011  001278  A0D8               	btfss	status,0,c
  9012  00127A  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  9013  00127C                     
  9014                           ; BSR set to: 0
  9015                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  9016  00127C  0E00               	movlw	low _dbuf
  9017  00127E  25A1               	addwf	efgtoa@n& (0+255),w,b
  9018  001280  6E01               	movwf	strcpy@dest^0,c
  9019  001282  0E02               	movlw	high _dbuf
  9020  001284  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9021  001286  6E02               	movwf	(strcpy@dest+1)^0,c
  9022  001288  0E00               	movlw	low _dbuf
  9023  00128A  2599               	addwf	efgtoa@i& (0+255),w,b
  9024  00128C  6E03               	movwf	strcpy@src^0,c
  9025  00128E  0E02               	movlw	high _dbuf
  9026  001290  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9027  001292  6E04               	movwf	(strcpy@src+1)^0,c
  9028  001294  EC79  F02B         	call	_strcpy	;wreg free
  9029  001298  EF21  F004         	goto	l4879
  9030  00129C                     l1263:
  9031  00129C  0012               	return		;funcret
  9032  00129E                     __end_of_efgtoa:
  9033                           	callstack 0
  9034                           
  9035 ;; *************** function _tolower *****************
  9036 ;; Defined at:
  9037 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\tolower.c"
  9038 ;; Parameters:    Size  Location     Type
  9039 ;;  c               2    6[COMRAM] int 
  9040 ;; Auto vars:     Size  Location     Type
  9041 ;;		None
  9042 ;; Return value:  Size  Location     Type
  9043 ;;                  2    6[COMRAM] int 
  9044 ;; Registers used:
  9045 ;;		wreg, status,2, status,0
  9046 ;; Tracked objects:
  9047 ;;		On entry : 0/0
  9048 ;;		On exit  : 0/0
  9049 ;;		Unchanged: 0/0
  9050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9051 ;;      Params:         2       0       0       0       0       0       0
  9052 ;;      Locals:         2       0       0       0       0       0       0
  9053 ;;      Temps:          4       0       0       0       0       0       0
  9054 ;;      Totals:         8       0       0       0       0       0       0
  9055 ;;Total ram usage:        8 bytes
  9056 ;; Hardware stack levels used:    1
  9057 ;; Hardware stack levels required when called:    2
  9058 ;; This function calls:
  9059 ;;		_isupper
  9060 ;; This function is called by:
  9061 ;;		_efgtoa
  9062 ;;		_vfpfcnvrt
  9063 ;; This function uses a non-reentrant model
  9064 ;;
  9065                           
  9066                           	psect	text24
  9067  005692                     __ptext24:
  9068                           	callstack 0
  9069  005692                     _tolower:
  9070                           	callstack 23
  9071  005692  0EBF               	movlw	191
  9072  005694  6E09               	movwf	??_tolower^0,c
  9073  005696  0EFF               	movlw	255
  9074  005698  6E0A               	movwf	(??_tolower+1)^0,c
  9075  00569A  C007  F00B         	movff	tolower@c,??_tolower+2
  9076  00569E  C008  F00C         	movff	tolower@c+1,??_tolower+3
  9077  0056A2  5009               	movf	??_tolower^0,w,c
  9078  0056A4  260B               	addwf	(??_tolower+2)^0,f,c
  9079  0056A6  500A               	movf	(??_tolower+1)^0,w,c
  9080  0056A8  220C               	addwfc	(??_tolower+3)^0,f,c
  9081  0056AA  500C               	movf	(??_tolower+3)^0,w,c
  9082  0056AC  E10A               	bnz	u5350
  9083  0056AE  0E1A               	movlw	26
  9084  0056B0  5C0B               	subwf	(??_tolower+2)^0,w,c
  9085  0056B2  A0D8               	btfss	status,0,c
  9086  0056B4  EF5E  F02B         	goto	u5351
  9087  0056B8  EF61  F02B         	goto	u5350
  9088  0056BC                     u5351:
  9089  0056BC  0E01               	movlw	1
  9090  0056BE  EF62  F02B         	goto	u5360
  9091  0056C2                     u5350:
  9092  0056C2  0E00               	movlw	0
  9093  0056C4                     u5360:
  9094  0056C4  6E0D               	movwf	_tolower$2667^0,c
  9095  0056C6  6A0E               	clrf	(_tolower$2667+1)^0,c
  9096  0056C8  500D               	movf	_tolower$2667^0,w,c
  9097  0056CA  100E               	iorwf	(_tolower$2667+1)^0,w,c
  9098  0056CC  B4D8               	btfsc	status,2,c
  9099  0056CE  EF6B  F02B         	goto	u5371
  9100  0056D2  EF6D  F02B         	goto	u5370
  9101  0056D6                     u5371:
  9102  0056D6  EF74  F02B         	goto	l1511
  9103  0056DA                     u5370:
  9104  0056DA  0E20               	movlw	32
  9105  0056DC  1007               	iorwf	tolower@c^0,w,c
  9106  0056DE  6E07               	movwf	?_tolower^0,c
  9107  0056E0  5008               	movf	(tolower@c+1)^0,w,c
  9108  0056E2  6E08               	movwf	(?_tolower+1)^0,c
  9109  0056E4  EF78  F02B         	goto	l1516
  9110  0056E8                     l1511:
  9111  0056E8  C007  F007         	movff	tolower@c,?_tolower
  9112  0056EC  C008  F008         	movff	tolower@c+1,?_tolower+1
  9113  0056F0                     l1516:
  9114  0056F0  0012               	return		;funcret
  9115  0056F2                     __end_of_tolower:
  9116                           	callstack 0
  9117                           
  9118 ;; *************** function _isupper *****************
  9119 ;; Defined at:
  9120 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  9121 ;; Parameters:    Size  Location     Type
  9122 ;;  c               2    0[COMRAM] int 
  9123 ;; Auto vars:     Size  Location     Type
  9124 ;;		None
  9125 ;; Return value:  Size  Location     Type
  9126 ;;                  2    0[COMRAM] int 
  9127 ;; Registers used:
  9128 ;;		wreg, status,2, status,0
  9129 ;; Tracked objects:
  9130 ;;		On entry : 0/0
  9131 ;;		On exit  : 0/0
  9132 ;;		Unchanged: 0/0
  9133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9134 ;;      Params:         2       0       0       0       0       0       0
  9135 ;;      Locals:         0       0       0       0       0       0       0
  9136 ;;      Temps:          4       0       0       0       0       0       0
  9137 ;;      Totals:         6       0       0       0       0       0       0
  9138 ;;Total ram usage:        6 bytes
  9139 ;; Hardware stack levels used:    1
  9140 ;; Hardware stack levels required when called:    1
  9141 ;; This function calls:
  9142 ;;		Nothing
  9143 ;; This function is called by:
  9144 ;;		_efgtoa
  9145 ;;		_vfpfcnvrt
  9146 ;;		_tolower
  9147 ;; This function uses a non-reentrant model
  9148 ;;
  9149                           
  9150                           	psect	text25
  9151  005A26                     __ptext25:
  9152                           	callstack 0
  9153  005A26                     _isupper:
  9154                           	callstack 23
  9155  005A26  0EBF               	movlw	191
  9156  005A28  6E03               	movwf	??_isupper^0,c
  9157  005A2A  0EFF               	movlw	255
  9158  005A2C  6E04               	movwf	(??_isupper+1)^0,c
  9159  005A2E  C001  F005         	movff	isupper@c,??_isupper+2
  9160  005A32  C002  F006         	movff	isupper@c+1,??_isupper+3
  9161  005A36  5003               	movf	??_isupper^0,w,c
  9162  005A38  2605               	addwf	(??_isupper+2)^0,f,c
  9163  005A3A  5004               	movf	(??_isupper+1)^0,w,c
  9164  005A3C  2206               	addwfc	(??_isupper+3)^0,f,c
  9165  005A3E  5006               	movf	(??_isupper+3)^0,w,c
  9166  005A40  E10A               	bnz	u4360
  9167  005A42  0E1A               	movlw	26
  9168  005A44  5C05               	subwf	(??_isupper+2)^0,w,c
  9169  005A46  A0D8               	btfss	status,0,c
  9170  005A48  EF28  F02D         	goto	u4361
  9171  005A4C  EF2B  F02D         	goto	u4360
  9172  005A50                     u4361:
  9173  005A50  0E01               	movlw	1
  9174  005A52  EF2C  F02D         	goto	u4370
  9175  005A56                     u4360:
  9176  005A56  0E00               	movlw	0
  9177  005A58                     u4370:
  9178  005A58  6E01               	movwf	?_isupper^0,c
  9179  005A5A  6A02               	clrf	(?_isupper+1)^0,c
  9180  005A5C  0012               	return		;funcret
  9181  005A5E                     __end_of_isupper:
  9182                           	callstack 0
  9183                           
  9184 ;; *************** function _strcpy *****************
  9185 ;; Defined at:
  9186 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  9187 ;; Parameters:    Size  Location     Type
  9188 ;;  dest            2    0[COMRAM] PTR unsigned char 
  9189 ;;		 -> dbuf(80), 
  9190 ;;  src             2    2[COMRAM] PTR const unsigned char 
  9191 ;;		 -> STR_22(4), STR_21(4), STR_18(4), STR_17(4), 
  9192 ;;		 -> dbuf(80), 
  9193 ;; Auto vars:     Size  Location     Type
  9194 ;;  d               2    8[COMRAM] PTR unsigned char 
  9195 ;;		 -> dbuf(80), 
  9196 ;;  s               2    6[COMRAM] PTR const unsigned char 
  9197 ;;		 -> STR_22(4), STR_21(4), STR_18(4), STR_17(4), 
  9198 ;;		 -> dbuf(80), 
  9199 ;; Return value:  Size  Location     Type
  9200 ;;                  2    0[COMRAM] PTR unsigned char 
  9201 ;; Registers used:
  9202 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9203 ;; Tracked objects:
  9204 ;;		On entry : 0/0
  9205 ;;		On exit  : 0/0
  9206 ;;		Unchanged: 0/0
  9207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9208 ;;      Params:         4       0       0       0       0       0       0
  9209 ;;      Locals:         4       0       0       0       0       0       0
  9210 ;;      Temps:          2       0       0       0       0       0       0
  9211 ;;      Totals:        10       0       0       0       0       0       0
  9212 ;;Total ram usage:       10 bytes
  9213 ;; Hardware stack levels used:    1
  9214 ;; Hardware stack levels required when called:    1
  9215 ;; This function calls:
  9216 ;;		Nothing
  9217 ;; This function is called by:
  9218 ;;		_efgtoa
  9219 ;; This function uses a non-reentrant model
  9220 ;;
  9221                           
  9222                           	psect	text26
  9223  0056F2                     __ptext26:
  9224                           	callstack 0
  9225  0056F2                     _strcpy:
  9226                           	callstack 23
  9227  0056F2  C003  F007         	movff	strcpy@src,strcpy@s
  9228  0056F6  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  9229  0056FA  C001  F009         	movff	strcpy@dest,strcpy@d
  9230  0056FE  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  9231  005702                     l4717:
  9232  005702  5007               	movf	strcpy@s^0,w,c
  9233  005704  6E05               	movwf	??_strcpy^0,c
  9234  005706  5008               	movf	(strcpy@s+1)^0,w,c
  9235  005708  6E06               	movwf	(??_strcpy+1)^0,c
  9236  00570A  4A07               	infsnz	strcpy@s^0,f,c
  9237  00570C  2A08               	incf	(strcpy@s+1)^0,f,c
  9238  00570E  C005  FFF6         	movff	??_strcpy,tblptrl
  9239  005712  C006  FFF7         	movff	??_strcpy+1,tblptrh
  9240  005716  6AF8               	clrf	tblptru,c
  9241  005718  C009  FFD9         	movff	strcpy@d,fsr2l
  9242  00571C  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  9243  005720  4A09               	infsnz	strcpy@d^0,f,c
  9244  005722  2A0A               	incf	(strcpy@d+1)^0,f,c
  9245  005724  0E05               	movlw	(high __ramtop+-1)
  9246  005726  64F7               	cpfsgt	tblptrh,c
  9247  005728  D003               	bra	u5337
  9248  00572A  0008               	tblrd		*
  9249  00572C  50F5               	movf	tablat,w,c
  9250  00572E  D005               	bra	u5330
  9251  005730                     u5337:
  9252  005730  CFF6 FFE1          	movff	tblptrl,fsr1l
  9253  005734  CFF7 FFE2          	movff	tblptrh,fsr1h
  9254  005738  50E7               	movf	indf1,w,c
  9255  00573A                     u5330:
  9256  00573A  6EDF               	movwf	indf2,c
  9257  00573C  50DF               	movf	indf2,w,c
  9258  00573E  A4D8               	btfss	status,2,c
  9259  005740  EFA4  F02B         	goto	u5341
  9260  005744  EFA6  F02B         	goto	u5340
  9261  005748                     u5341:
  9262  005748  EF81  F02B         	goto	l4717
  9263  00574C                     u5340:
  9264  00574C  0012               	return		;funcret
  9265  00574E                     __end_of_strcpy:
  9266                           	callstack 0
  9267                           
  9268 ;; *************** function _floorf *****************
  9269 ;; Defined at:
  9270 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\floorf.c"
  9271 ;; Parameters:    Size  Location     Type
  9272 ;;  x               4   77[COMRAM] float 
  9273 ;; Auto vars:     Size  Location     Type
  9274 ;;  u               4    6[BANK0 ] struct .
  9275 ;;  m               4    0[BANK0 ] unsigned long 
  9276 ;;  e               2    4[BANK0 ] int 
  9277 ;; Return value:  Size  Location     Type
  9278 ;;                  4   77[COMRAM] float 
  9279 ;; Registers used:
  9280 ;;		wreg, status,2, status,0
  9281 ;; Tracked objects:
  9282 ;;		On entry : 0/0
  9283 ;;		On exit  : 0/0
  9284 ;;		Unchanged: 0/0
  9285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9286 ;;      Params:         4       0       0       0       0       0       0
  9287 ;;      Locals:         0      10       0       0       0       0       0
  9288 ;;      Temps:          6       0       0       0       0       0       0
  9289 ;;      Totals:        10      10       0       0       0       0       0
  9290 ;;Total ram usage:       20 bytes
  9291 ;; Hardware stack levels used:    1
  9292 ;; Hardware stack levels required when called:    1
  9293 ;; This function calls:
  9294 ;;		Nothing
  9295 ;; This function is called by:
  9296 ;;		_efgtoa
  9297 ;; This function uses a non-reentrant model
  9298 ;;
  9299                           
  9300                           	psect	text27
  9301  003D0C                     __ptext27:
  9302                           	callstack 0
  9303  003D0C                     _floorf:
  9304                           	callstack 23
  9305  003D0C  C19F  F066         	movff	floorf@F524,floorf@u
  9306  003D10  C1A0  F067         	movff	floorf@F524+1,floorf@u+1
  9307  003D14  C1A1  F068         	movff	floorf@F524+2,floorf@u+2
  9308  003D18  C1A2  F069         	movff	floorf@F524+3,floorf@u+3
  9309  003D1C  C04E  F066         	movff	floorf@x,floorf@u
  9310  003D20  C04F  F067         	movff	floorf@x+1,floorf@u+1
  9311  003D24  C050  F068         	movff	floorf@x+2,floorf@u+2
  9312  003D28  C051  F069         	movff	floorf@x+3,floorf@u+3
  9313  003D2C  0E81               	movlw	129
  9314  003D2E  6E52               	movwf	??_floorf^0,c
  9315  003D30  0EFF               	movlw	255
  9316  003D32  6E53               	movwf	(??_floorf+1)^0,c
  9317  003D34  C066  F054         	movff	floorf@u,??_floorf+2
  9318  003D38  C067  F055         	movff	floorf@u+1,??_floorf+3
  9319  003D3C  C068  F056         	movff	floorf@u+2,??_floorf+4
  9320  003D40  C069  F057         	movff	floorf@u+3,??_floorf+5
  9321  003D44  0E18               	movlw	24
  9322  003D46  EFAA  F01E         	goto	u5380
  9323  003D4A                     u5385:
  9324  003D4A  90D8               	bcf	status,0,c
  9325  003D4C  3257               	rrcf	(??_floorf+5)^0,f,c
  9326  003D4E  3256               	rrcf	(??_floorf+4)^0,f,c
  9327  003D50  3255               	rrcf	(??_floorf+3)^0,f,c
  9328  003D52  3254               	rrcf	(??_floorf+2)^0,f,c
  9329  003D54                     u5380:
  9330  003D54  2EE8               	decfsz	wreg,f,c
  9331  003D56  EFA5  F01E         	goto	u5385
  9332  003D5A  5054               	movf	(??_floorf+2)^0,w,c
  9333  003D5C  2452               	addwf	??_floorf^0,w,c
  9334  003D5E  0100               	movlb	0	; () banked
  9335  003D60  6F64               	movwf	floorf@e& (0+255),b
  9336  003D62  0E00               	movlw	0
  9337  003D64  2053               	addwfc	(??_floorf+1)^0,w,c
  9338  003D66  6F65               	movwf	(floorf@e+1)& (0+255),b
  9339  003D68  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  9340  003D6A  EFC0  F01E         	goto	u5391
  9341  003D6E  5165               	movf	(floorf@e+1)& (0+255),w,b
  9342  003D70  E109               	bnz	u5390
  9343  003D72  0E17               	movlw	23
  9344  003D74  5D64               	subwf	floorf@e& (0+255),w,b
  9345  003D76  A0D8               	btfss	status,0,c
  9346  003D78  EFC0  F01E         	goto	u5391
  9347  003D7C  EFC2  F01E         	goto	u5390
  9348  003D80                     u5391:
  9349  003D80  EFCC  F01E         	goto	l4735
  9350  003D84                     u5390:
  9351  003D84                     l4733:
  9352                           
  9353                           ; BSR set to: 0
  9354  003D84  C04E  F04E         	movff	floorf@x,?_floorf
  9355  003D88  C04F  F04F         	movff	floorf@x+1,?_floorf+1
  9356  003D8C  C050  F050         	movff	floorf@x+2,?_floorf+2
  9357  003D90  C051  F051         	movff	floorf@x+3,?_floorf+3
  9358  003D94  EF90  F01F         	goto	l1435
  9359  003D98                     l4735:
  9360                           
  9361                           ; BSR set to: 0
  9362  003D98  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  9363  003D9A  EFD1  F01E         	goto	u5401
  9364  003D9E  EFD3  F01E         	goto	u5400
  9365  003DA2                     u5401:
  9366  003DA2  EF44  F01F         	goto	l4745
  9367  003DA6                     u5400:
  9368  003DA6                     
  9369                           ; BSR set to: 0
  9370  003DA6  C064  F052         	movff	floorf@e,??_floorf
  9371  003DAA  0EFF               	movlw	255
  9372  003DAC  6E53               	movwf	(??_floorf+1)^0,c
  9373  003DAE  0EFF               	movlw	255
  9374  003DB0  6E54               	movwf	(??_floorf+2)^0,c
  9375  003DB2  0E7F               	movlw	127
  9376  003DB4  6E55               	movwf	(??_floorf+3)^0,c
  9377  003DB6  0E00               	movlw	0
  9378  003DB8  6E56               	movwf	(??_floorf+4)^0,c
  9379  003DBA                     u5415:
  9380  003DBA  6652               	tstfsz	??_floorf^0,c
  9381  003DBC  EFE2  F01E         	goto	u5416
  9382  003DC0  EFEA  F01E         	goto	u5417
  9383  003DC4                     u5416:
  9384  003DC4  3456               	rlcf	(??_floorf+4)^0,w,c
  9385  003DC6  3256               	rrcf	(??_floorf+4)^0,f,c
  9386  003DC8  3255               	rrcf	(??_floorf+3)^0,f,c
  9387  003DCA  3254               	rrcf	(??_floorf+2)^0,f,c
  9388  003DCC  3253               	rrcf	(??_floorf+1)^0,f,c
  9389  003DCE  2E52               	decfsz	??_floorf^0,f,c
  9390  003DD0  EFDD  F01E         	goto	u5415
  9391  003DD4                     u5417:
  9392  003DD4  C053  F060         	movff	??_floorf+1,floorf@m
  9393  003DD8  C054  F061         	movff	??_floorf+2,floorf@m+1
  9394  003DDC  C055  F062         	movff	??_floorf+3,floorf@m+2
  9395  003DE0  C056  F063         	movff	??_floorf+4,floorf@m+3
  9396  003DE4  0100               	movlb	0	; () banked
  9397  003DE6  5160               	movf	floorf@m& (0+255),w,b
  9398  003DE8  1566               	andwf	floorf@u& (0+255),w,b
  9399  003DEA  6E52               	movwf	??_floorf^0,c
  9400  003DEC  5161               	movf	(floorf@m+1)& (0+255),w,b
  9401  003DEE  1567               	andwf	(floorf@u+1)& (0+255),w,b
  9402  003DF0  6E53               	movwf	(??_floorf+1)^0,c
  9403  003DF2  5162               	movf	(floorf@m+2)& (0+255),w,b
  9404  003DF4  1568               	andwf	(floorf@u+2)& (0+255),w,b
  9405  003DF6  6E54               	movwf	(??_floorf+2)^0,c
  9406  003DF8  5163               	movf	(floorf@m+3)& (0+255),w,b
  9407  003DFA  1569               	andwf	(floorf@u+3)& (0+255),w,b
  9408  003DFC  6E55               	movwf	(??_floorf+3)^0,c
  9409  003DFE  5052               	movf	??_floorf^0,w,c
  9410  003E00  1053               	iorwf	(??_floorf+1)^0,w,c
  9411  003E02  1054               	iorwf	(??_floorf+2)^0,w,c
  9412  003E04  1055               	iorwf	(??_floorf+3)^0,w,c
  9413  003E06  A4D8               	btfss	status,2,c
  9414  003E08  EF08  F01F         	goto	u5421
  9415  003E0C  EF0A  F01F         	goto	u5420
  9416  003E10                     u5421:
  9417  003E10  EF0C  F01F         	goto	l4741
  9418  003E14                     u5420:
  9419  003E14  EFC2  F01E         	goto	l4733
  9420  003E18                     l4741:
  9421                           
  9422                           ; BSR set to: 0
  9423  003E18  C066  F052         	movff	floorf@u,??_floorf
  9424  003E1C  C067  F053         	movff	floorf@u+1,??_floorf+1
  9425  003E20  C068  F054         	movff	floorf@u+2,??_floorf+2
  9426  003E24  C069  F055         	movff	floorf@u+3,??_floorf+3
  9427  003E28  0E20               	movlw	32
  9428  003E2A  EF1C  F01F         	goto	u5430
  9429  003E2E                     u5435:
  9430  003E2E  90D8               	bcf	status,0,c
  9431  003E30  3255               	rrcf	(??_floorf+3)^0,f,c
  9432  003E32  3254               	rrcf	(??_floorf+2)^0,f,c
  9433  003E34  3253               	rrcf	(??_floorf+1)^0,f,c
  9434  003E36  3252               	rrcf	??_floorf^0,f,c
  9435  003E38                     u5430:
  9436  003E38  2EE8               	decfsz	wreg,f,c
  9437  003E3A  EF17  F01F         	goto	u5435
  9438  003E3E  5052               	movf	??_floorf^0,w,c
  9439  003E40  1053               	iorwf	(??_floorf+1)^0,w,c
  9440  003E42  1054               	iorwf	(??_floorf+2)^0,w,c
  9441  003E44  1055               	iorwf	(??_floorf+3)^0,w,c
  9442  003E46  B4D8               	btfsc	status,2,c
  9443  003E48  EF28  F01F         	goto	u5441
  9444  003E4C  EF2A  F01F         	goto	u5440
  9445  003E50                     u5441:
  9446  003E50  EF32  F01F         	goto	l1438
  9447  003E54                     u5440:
  9448  003E54                     
  9449                           ; BSR set to: 0
  9450  003E54  5160               	movf	floorf@m& (0+255),w,b
  9451  003E56  2766               	addwf	floorf@u& (0+255),f,b
  9452  003E58  5161               	movf	(floorf@m+1)& (0+255),w,b
  9453  003E5A  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  9454  003E5C  5162               	movf	(floorf@m+2)& (0+255),w,b
  9455  003E5E  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  9456  003E60  5163               	movf	(floorf@m+3)& (0+255),w,b
  9457  003E62  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  9458  003E64                     l1438:
  9459                           
  9460                           ; BSR set to: 0
  9461  003E64  1D60               	comf	floorf@m& (0+255),w,b
  9462  003E66  6E52               	movwf	??_floorf^0,c
  9463  003E68  1D61               	comf	(floorf@m+1)& (0+255),w,b
  9464  003E6A  6E53               	movwf	(??_floorf+1)^0,c
  9465  003E6C  1D62               	comf	(floorf@m+2)& (0+255),w,b
  9466  003E6E  6E54               	movwf	(??_floorf+2)^0,c
  9467  003E70  1D63               	comf	(floorf@m+3)& (0+255),w,b
  9468  003E72  6E55               	movwf	(??_floorf+3)^0,c
  9469  003E74  5052               	movf	??_floorf^0,w,c
  9470  003E76  1766               	andwf	floorf@u& (0+255),f,b
  9471  003E78  5053               	movf	(??_floorf+1)^0,w,c
  9472  003E7A  1767               	andwf	(floorf@u+1)& (0+255),f,b
  9473  003E7C  5054               	movf	(??_floorf+2)^0,w,c
  9474  003E7E  1768               	andwf	(floorf@u+2)& (0+255),f,b
  9475  003E80  5055               	movf	(??_floorf+3)^0,w,c
  9476  003E82  1769               	andwf	(floorf@u+3)& (0+255),f,b
  9477  003E84  EF88  F01F         	goto	l4753
  9478  003E88                     l4745:
  9479                           
  9480                           ; BSR set to: 0
  9481  003E88  C066  F052         	movff	floorf@u,??_floorf
  9482  003E8C  C067  F053         	movff	floorf@u+1,??_floorf+1
  9483  003E90  C068  F054         	movff	floorf@u+2,??_floorf+2
  9484  003E94  C069  F055         	movff	floorf@u+3,??_floorf+3
  9485  003E98  0E20               	movlw	32
  9486  003E9A  EF54  F01F         	goto	u5450
  9487  003E9E                     u5455:
  9488  003E9E  90D8               	bcf	status,0,c
  9489  003EA0  3255               	rrcf	(??_floorf+3)^0,f,c
  9490  003EA2  3254               	rrcf	(??_floorf+2)^0,f,c
  9491  003EA4  3253               	rrcf	(??_floorf+1)^0,f,c
  9492  003EA6  3252               	rrcf	??_floorf^0,f,c
  9493  003EA8                     u5450:
  9494  003EA8  2EE8               	decfsz	wreg,f,c
  9495  003EAA  EF4F  F01F         	goto	u5455
  9496  003EAE  5052               	movf	??_floorf^0,w,c
  9497  003EB0  1053               	iorwf	(??_floorf+1)^0,w,c
  9498  003EB2  1054               	iorwf	(??_floorf+2)^0,w,c
  9499  003EB4  1055               	iorwf	(??_floorf+3)^0,w,c
  9500  003EB6  A4D8               	btfss	status,2,c
  9501  003EB8  EF60  F01F         	goto	u5461
  9502  003EBC  EF62  F01F         	goto	u5460
  9503  003EC0                     u5461:
  9504  003EC0  EF6C  F01F         	goto	l4749
  9505  003EC4                     u5460:
  9506  003EC4                     
  9507                           ; BSR set to: 0
  9508  003EC4  0E00               	movlw	0
  9509  003EC6  6F66               	movwf	floorf@u& (0+255),b
  9510  003EC8  0E00               	movlw	0
  9511  003ECA  6F67               	movwf	(floorf@u+1)& (0+255),b
  9512  003ECC  0E00               	movlw	0
  9513  003ECE  6F68               	movwf	(floorf@u+2)& (0+255),b
  9514  003ED0  0E00               	movlw	0
  9515  003ED2  6F69               	movwf	(floorf@u+3)& (0+255),b
  9516  003ED4  EF88  F01F         	goto	l4753
  9517  003ED8                     l4749:
  9518                           
  9519                           ; BSR set to: 0
  9520  003ED8  90D8               	bcf	status,0,c
  9521  003EDA  3566               	rlcf	floorf@u& (0+255),w,b
  9522  003EDC  6E52               	movwf	??_floorf^0,c
  9523  003EDE  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  9524  003EE0  6E53               	movwf	(??_floorf+1)^0,c
  9525  003EE2  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  9526  003EE4  6E54               	movwf	(??_floorf+2)^0,c
  9527  003EE6  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  9528  003EE8  6E55               	movwf	(??_floorf+3)^0,c
  9529  003EEA  5052               	movf	??_floorf^0,w,c
  9530  003EEC  1053               	iorwf	(??_floorf+1)^0,w,c
  9531  003EEE  1054               	iorwf	(??_floorf+2)^0,w,c
  9532  003EF0  1055               	iorwf	(??_floorf+3)^0,w,c
  9533  003EF2  B4D8               	btfsc	status,2,c
  9534  003EF4  EF7E  F01F         	goto	u5471
  9535  003EF8  EF80  F01F         	goto	u5470
  9536  003EFC                     u5471:
  9537  003EFC  EF88  F01F         	goto	l4753
  9538  003F00                     u5470:
  9539  003F00                     
  9540                           ; BSR set to: 0
  9541  003F00  0E00               	movlw	0
  9542  003F02  6F66               	movwf	floorf@u& (0+255),b
  9543  003F04  0E00               	movlw	0
  9544  003F06  6F67               	movwf	(floorf@u+1)& (0+255),b
  9545  003F08  0E80               	movlw	128
  9546  003F0A  6F68               	movwf	(floorf@u+2)& (0+255),b
  9547  003F0C  0EBF               	movlw	191
  9548  003F0E  6F69               	movwf	(floorf@u+3)& (0+255),b
  9549  003F10                     l4753:
  9550                           
  9551                           ; BSR set to: 0
  9552  003F10  C066  F04E         	movff	floorf@u,?_floorf
  9553  003F14  C067  F04F         	movff	floorf@u+1,?_floorf+1
  9554  003F18  C068  F050         	movff	floorf@u+2,?_floorf+2
  9555  003F1C  C069  F051         	movff	floorf@u+3,?_floorf+3
  9556  003F20                     l1435:
  9557                           
  9558                           ; BSR set to: 0
  9559  003F20  0012               	return		;funcret
  9560  003F22                     __end_of_floorf:
  9561                           	callstack 0
  9562                           
  9563 ;; *************** function ___fpclassifyf *****************
  9564 ;; Defined at:
  9565 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
  9566 ;; Parameters:    Size  Location     Type
  9567 ;;  x               4    0[COMRAM] float 
  9568 ;; Auto vars:     Size  Location     Type
  9569 ;;  u               4   10[COMRAM] struct .
  9570 ;;  e               2    8[COMRAM] int 
  9571 ;; Return value:  Size  Location     Type
  9572 ;;                  2    0[COMRAM] int 
  9573 ;; Registers used:
  9574 ;;		wreg, status,2, status,0
  9575 ;; Tracked objects:
  9576 ;;		On entry : 0/0
  9577 ;;		On exit  : 0/0
  9578 ;;		Unchanged: 0/0
  9579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9580 ;;      Params:         4       0       0       0       0       0       0
  9581 ;;      Locals:         6       0       0       0       0       0       0
  9582 ;;      Temps:          4       0       0       0       0       0       0
  9583 ;;      Totals:        14       0       0       0       0       0       0
  9584 ;;Total ram usage:       14 bytes
  9585 ;; Hardware stack levels used:    1
  9586 ;; Hardware stack levels required when called:    1
  9587 ;; This function calls:
  9588 ;;		Nothing
  9589 ;; This function is called by:
  9590 ;;		_efgtoa
  9591 ;; This function uses a non-reentrant model
  9592 ;;
  9593                           
  9594                           	psect	text28
  9595  004BC2                     __ptext28:
  9596                           	callstack 0
  9597  004BC2                     ___fpclassifyf:
  9598                           	callstack 23
  9599  004BC2  C1A3  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  9600  004BC6  C1A4  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  9601  004BCA  C1A5  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  9602  004BCE  C1A6  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  9603  004BD2  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  9604  004BD6  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  9605  004BDA  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  9606  004BDE  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  9607  004BE2  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  9608  004BE6  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9609  004BEA  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9610  004BEE  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9611  004BF2  0E18               	movlw	24
  9612  004BF4  EF01  F026         	goto	u5260
  9613  004BF8                     u5265:
  9614  004BF8  90D8               	bcf	status,0,c
  9615  004BFA  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  9616  004BFC  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  9617  004BFE  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  9618  004C00  3205               	rrcf	??___fpclassifyf^0,f,c
  9619  004C02                     u5260:
  9620  004C02  2EE8               	decfsz	wreg,f,c
  9621  004C04  EFFC  F025         	goto	u5265
  9622  004C08  5005               	movf	??___fpclassifyf^0,w,c
  9623  004C0A  6E09               	movwf	___fpclassifyf@e^0,c
  9624  004C0C  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  9625  004C0E  5009               	movf	___fpclassifyf@e^0,w,c
  9626  004C10  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9627  004C12  A4D8               	btfss	status,2,c
  9628  004C14  EF0E  F026         	goto	u5271
  9629  004C18  EF10  F026         	goto	u5270
  9630  004C1C                     u5271:
  9631  004C1C  EF30  F026         	goto	l4705
  9632  004C20                     u5270:
  9633  004C20  90D8               	bcf	status,0,c
  9634  004C22  340B               	rlcf	___fpclassifyf@u^0,w,c
  9635  004C24  6E05               	movwf	??___fpclassifyf^0,c
  9636  004C26  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  9637  004C28  6E06               	movwf	(??___fpclassifyf+1)^0,c
  9638  004C2A  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  9639  004C2C  6E07               	movwf	(??___fpclassifyf+2)^0,c
  9640  004C2E  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  9641  004C30  6E08               	movwf	(??___fpclassifyf+3)^0,c
  9642  004C32  5005               	movf	??___fpclassifyf^0,w,c
  9643  004C34  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  9644  004C36  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  9645  004C38  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  9646  004C3A  A4D8               	btfss	status,2,c
  9647  004C3C  EF22  F026         	goto	u5281
  9648  004C40  EF24  F026         	goto	u5280
  9649  004C44                     u5281:
  9650  004C44  EF2A  F026         	goto	l4701
  9651  004C48                     u5280:
  9652  004C48  0E00               	movlw	0
  9653  004C4A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9654  004C4C  0E02               	movlw	2
  9655  004C4E  6E01               	movwf	?___fpclassifyf^0,c
  9656  004C50  EF5F  F026         	goto	l1390
  9657  004C54                     l4701:
  9658  004C54  0E00               	movlw	0
  9659  004C56  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9660  004C58  0E03               	movlw	3
  9661  004C5A  6E01               	movwf	?___fpclassifyf^0,c
  9662  004C5C  EF5F  F026         	goto	l1390
  9663  004C60                     l4705:
  9664  004C60  2809               	incf	___fpclassifyf@e^0,w,c
  9665  004C62  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9666  004C64  A4D8               	btfss	status,2,c
  9667  004C66  EF37  F026         	goto	u5291
  9668  004C6A  EF39  F026         	goto	u5290
  9669  004C6E                     u5291:
  9670  004C6E  EF5B  F026         	goto	l4711
  9671  004C72                     u5290:
  9672  004C72  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  9673  004C76  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9674  004C7A  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9675  004C7E  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9676  004C82  0E09               	movlw	9
  9677  004C84                     u5305:
  9678  004C84  90D8               	bcf	status,0,c
  9679  004C86  3605               	rlcf	??___fpclassifyf^0,f,c
  9680  004C88  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  9681  004C8A  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  9682  004C8C  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  9683  004C8E  2EE8               	decfsz	wreg,f,c
  9684  004C90  EF42  F026         	goto	u5305
  9685  004C94  5005               	movf	??___fpclassifyf^0,w,c
  9686  004C96  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  9687  004C98  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  9688  004C9A  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  9689  004C9C  B4D8               	btfsc	status,2,c
  9690  004C9E  EF53  F026         	goto	u5311
  9691  004CA2  EF56  F026         	goto	u5310
  9692  004CA6                     u5311:
  9693  004CA6  0E01               	movlw	1
  9694  004CA8  EF57  F026         	goto	u5320
  9695  004CAC                     u5310:
  9696  004CAC  0E00               	movlw	0
  9697  004CAE                     u5320:
  9698  004CAE  6E01               	movwf	?___fpclassifyf^0,c
  9699  004CB0  6A02               	clrf	(?___fpclassifyf+1)^0,c
  9700  004CB2  EF5F  F026         	goto	l1390
  9701  004CB6                     l4711:
  9702  004CB6  0E00               	movlw	0
  9703  004CB8  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9704  004CBA  0E04               	movlw	4
  9705  004CBC  6E01               	movwf	?___fpclassifyf^0,c
  9706  004CBE                     l1390:
  9707  004CBE  0012               	return		;funcret
  9708  004CC0                     __end_of___fpclassifyf:
  9709                           	callstack 0
  9710                           
  9711 ;; *************** function ___fltol *****************
  9712 ;; Defined at:
  9713 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
  9714 ;; Parameters:    Size  Location     Type
  9715 ;;  f1              4   77[COMRAM] int 
  9716 ;; Auto vars:     Size  Location     Type
  9717 ;;  exp1            1   86[COMRAM] unsigned char 
  9718 ;;  sign1           1   85[COMRAM] unsigned char 
  9719 ;; Return value:  Size  Location     Type
  9720 ;;                  4   77[COMRAM] long 
  9721 ;; Registers used:
  9722 ;;		wreg, status,2, status,0
  9723 ;; Tracked objects:
  9724 ;;		On entry : 0/0
  9725 ;;		On exit  : 0/0
  9726 ;;		Unchanged: 0/0
  9727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9728 ;;      Params:         4       0       0       0       0       0       0
  9729 ;;      Locals:         2       0       0       0       0       0       0
  9730 ;;      Temps:          4       0       0       0       0       0       0
  9731 ;;      Totals:        10       0       0       0       0       0       0
  9732 ;;Total ram usage:       10 bytes
  9733 ;; Hardware stack levels used:    1
  9734 ;; Hardware stack levels required when called:    1
  9735 ;; This function calls:
  9736 ;;		Nothing
  9737 ;; This function is called by:
  9738 ;;		_scanAdcConversion
  9739 ;;		_PWM1_setDC
  9740 ;;		_PWM2_setDC
  9741 ;;		_speedControl
  9742 ;;		_efgtoa
  9743 ;; This function uses a non-reentrant model
  9744 ;;
  9745                           
  9746                           	psect	text29
  9747  0049B8                     __ptext29:
  9748                           	callstack 0
  9749  0049B8                     ___fltol:
  9750                           	callstack 25
  9751  0049B8  3450               	rlcf	(___fltol@f1+2)^0,w,c
  9752  0049BA  3451               	rlcf	(___fltol@f1+3)^0,w,c
  9753  0049BC  6E57               	movwf	___fltol@exp1^0,c
  9754  0049BE  5057               	movf	___fltol@exp1^0,w,c
  9755  0049C0  A4D8               	btfss	status,2,c
  9756  0049C2  EFE5  F024         	goto	u5141
  9757  0049C6  EFE7  F024         	goto	u5140
  9758  0049CA                     u5141:
  9759  0049CA  EFF1  F024         	goto	l4629
  9760  0049CE                     u5140:
  9761  0049CE                     l4625:
  9762  0049CE  0E00               	movlw	0
  9763  0049D0  6E4E               	movwf	?___fltol^0,c
  9764  0049D2  0E00               	movlw	0
  9765  0049D4  6E4F               	movwf	(?___fltol+1)^0,c
  9766  0049D6  0E00               	movlw	0
  9767  0049D8  6E50               	movwf	(?___fltol+2)^0,c
  9768  0049DA  0E00               	movlw	0
  9769  0049DC  6E51               	movwf	(?___fltol+3)^0,c
  9770  0049DE  EF5E  F025         	goto	l785
  9771  0049E2                     l4629:
  9772  0049E2  C04E  F052         	movff	___fltol@f1,??___fltol
  9773  0049E6  C04F  F053         	movff	___fltol@f1+1,??___fltol+1
  9774  0049EA  C050  F054         	movff	___fltol@f1+2,??___fltol+2
  9775  0049EE  C051  F055         	movff	___fltol@f1+3,??___fltol+3
  9776  0049F2  0E20               	movlw	32
  9777  0049F4  EF01  F025         	goto	u5150
  9778  0049F8                     u5155:
  9779  0049F8  90D8               	bcf	status,0,c
  9780  0049FA  3255               	rrcf	(??___fltol+3)^0,f,c
  9781  0049FC  3254               	rrcf	(??___fltol+2)^0,f,c
  9782  0049FE  3253               	rrcf	(??___fltol+1)^0,f,c
  9783  004A00  3252               	rrcf	??___fltol^0,f,c
  9784  004A02                     u5150:
  9785  004A02  2EE8               	decfsz	wreg,f,c
  9786  004A04  EFFC  F024         	goto	u5155
  9787  004A08  5052               	movf	??___fltol^0,w,c
  9788  004A0A  6E56               	movwf	___fltol@sign1^0,c
  9789  004A0C  8E50               	bsf	(___fltol@f1+2)^0,7,c
  9790  004A0E  0EFF               	movlw	255
  9791  004A10  164E               	andwf	___fltol@f1^0,f,c
  9792  004A12  0EFF               	movlw	255
  9793  004A14  164F               	andwf	(___fltol@f1+1)^0,f,c
  9794  004A16  0EFF               	movlw	255
  9795  004A18  1650               	andwf	(___fltol@f1+2)^0,f,c
  9796  004A1A  0E00               	movlw	0
  9797  004A1C  1651               	andwf	(___fltol@f1+3)^0,f,c
  9798  004A1E  0E96               	movlw	150
  9799  004A20  5E57               	subwf	___fltol@exp1^0,f,c
  9800  004A22  BE57               	btfsc	___fltol@exp1^0,7,c
  9801  004A24  EF18  F025         	goto	u5160
  9802  004A28  EF16  F025         	goto	u5161
  9803  004A2C                     u5161:
  9804  004A2C  EF2E  F025         	goto	l4649
  9805  004A30                     u5160:
  9806  004A30  5057               	movf	___fltol@exp1^0,w,c
  9807  004A32  0A80               	xorlw	128
  9808  004A34  0F97               	addlw	151
  9809  004A36  B0D8               	btfsc	status,0,c
  9810  004A38  EF20  F025         	goto	u5171
  9811  004A3C  EF22  F025         	goto	u5170
  9812  004A40                     u5171:
  9813  004A40  EF24  F025         	goto	l4645
  9814  004A44                     u5170:
  9815  004A44  EFE7  F024         	goto	l4625
  9816  004A48                     l4645:
  9817  004A48  90D8               	bcf	status,0,c
  9818  004A4A  3251               	rrcf	(___fltol@f1+3)^0,f,c
  9819  004A4C  3250               	rrcf	(___fltol@f1+2)^0,f,c
  9820  004A4E  324F               	rrcf	(___fltol@f1+1)^0,f,c
  9821  004A50  324E               	rrcf	___fltol@f1^0,f,c
  9822  004A52  3E57               	incfsz	___fltol@exp1^0,f,c
  9823  004A54  EF24  F025         	goto	l4645
  9824  004A58  EF46  F025         	goto	l4659
  9825  004A5C                     l4649:
  9826  004A5C  0E1F               	movlw	31
  9827  004A5E  6457               	cpfsgt	___fltol@exp1^0,c
  9828  004A60  EF34  F025         	goto	u5181
  9829  004A64  EF36  F025         	goto	u5180
  9830  004A68                     u5181:
  9831  004A68  EF3E  F025         	goto	l4657
  9832  004A6C                     u5180:
  9833  004A6C  EFE7  F024         	goto	l4625
  9834  004A70                     l4655:
  9835  004A70  90D8               	bcf	status,0,c
  9836  004A72  364E               	rlcf	___fltol@f1^0,f,c
  9837  004A74  364F               	rlcf	(___fltol@f1+1)^0,f,c
  9838  004A76  3650               	rlcf	(___fltol@f1+2)^0,f,c
  9839  004A78  3651               	rlcf	(___fltol@f1+3)^0,f,c
  9840  004A7A  0657               	decf	___fltol@exp1^0,f,c
  9841  004A7C                     l4657:
  9842  004A7C  5057               	movf	___fltol@exp1^0,w,c
  9843  004A7E  A4D8               	btfss	status,2,c
  9844  004A80  EF44  F025         	goto	u5191
  9845  004A84  EF46  F025         	goto	u5190
  9846  004A88                     u5191:
  9847  004A88  EF38  F025         	goto	l4655
  9848  004A8C                     u5190:
  9849  004A8C                     l4659:
  9850  004A8C  5056               	movf	___fltol@sign1^0,w,c
  9851  004A8E  B4D8               	btfsc	status,2,c
  9852  004A90  EF4C  F025         	goto	u5201
  9853  004A94  EF4E  F025         	goto	u5200
  9854  004A98                     u5201:
  9855  004A98  EF56  F025         	goto	l4663
  9856  004A9C                     u5200:
  9857  004A9C  1E51               	comf	(___fltol@f1+3)^0,f,c
  9858  004A9E  1E50               	comf	(___fltol@f1+2)^0,f,c
  9859  004AA0  1E4F               	comf	(___fltol@f1+1)^0,f,c
  9860  004AA2  6C4E               	negf	___fltol@f1^0,c
  9861  004AA4  0E00               	movlw	0
  9862  004AA6  224F               	addwfc	(___fltol@f1+1)^0,f,c
  9863  004AA8  2250               	addwfc	(___fltol@f1+2)^0,f,c
  9864  004AAA  2251               	addwfc	(___fltol@f1+3)^0,f,c
  9865  004AAC                     l4663:
  9866  004AAC  C04E  F04E         	movff	___fltol@f1,?___fltol
  9867  004AB0  C04F  F04F         	movff	___fltol@f1+1,?___fltol+1
  9868  004AB4  C050  F050         	movff	___fltol@f1+2,?___fltol+2
  9869  004AB8  C051  F051         	movff	___fltol@f1+3,?___fltol+3
  9870  004ABC                     l785:
  9871  004ABC  0012               	return		;funcret
  9872  004ABE                     __end_of___fltol:
  9873                           	callstack 0
  9874                           
  9875 ;; *************** function ___flsub *****************
  9876 ;; Defined at:
  9877 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  9878 ;; Parameters:    Size  Location     Type
  9879 ;;  b               4   68[COMRAM] long 
  9880 ;;  a               4   72[COMRAM] long 
  9881 ;; Auto vars:     Size  Location     Type
  9882 ;;		None
  9883 ;; Return value:  Size  Location     Type
  9884 ;;                  4   68[COMRAM] long 
  9885 ;; Registers used:
  9886 ;;		wreg, status,2, status,0, cstack
  9887 ;; Tracked objects:
  9888 ;;		On entry : 0/0
  9889 ;;		On exit  : 0/0
  9890 ;;		Unchanged: 0/0
  9891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9892 ;;      Params:         8       0       0       0       0       0       0
  9893 ;;      Locals:         0       0       0       0       0       0       0
  9894 ;;      Temps:          0       0       0       0       0       0       0
  9895 ;;      Totals:         8       0       0       0       0       0       0
  9896 ;;Total ram usage:        8 bytes
  9897 ;; Hardware stack levels used:    1
  9898 ;; Hardware stack levels required when called:    2
  9899 ;; This function calls:
  9900 ;;		___fladd
  9901 ;; This function is called by:
  9902 ;;		_stateMachine
  9903 ;;		_efgtoa
  9904 ;; This function uses a non-reentrant model
  9905 ;;
  9906                           
  9907                           	psect	text30
  9908  0058A0                     __ptext30:
  9909                           	callstack 0
  9910  0058A0                     ___flsub:
  9911                           	callstack 22
  9912  0058A0  0E00               	movlw	0
  9913  0058A2  1A49               	xorwf	___flsub@a^0,f,c
  9914  0058A4  0E00               	movlw	0
  9915  0058A6  1A4A               	xorwf	(___flsub@a+1)^0,f,c
  9916  0058A8  0E00               	movlw	0
  9917  0058AA  1A4B               	xorwf	(___flsub@a+2)^0,f,c
  9918  0058AC  0E80               	movlw	128
  9919  0058AE  1A4C               	xorwf	(___flsub@a+3)^0,f,c
  9920  0058B0  C045  F035         	movff	___flsub@b,___fladd@b
  9921  0058B4  C046  F036         	movff	___flsub@b+1,___fladd@b+1
  9922  0058B8  C047  F037         	movff	___flsub@b+2,___fladd@b+2
  9923  0058BC  C048  F038         	movff	___flsub@b+3,___fladd@b+3
  9924  0058C0  C049  F039         	movff	___flsub@a,___fladd@a
  9925  0058C4  C04A  F03A         	movff	___flsub@a+1,___fladd@a+1
  9926  0058C8  C04B  F03B         	movff	___flsub@a+2,___fladd@a+2
  9927  0058CC  C04C  F03C         	movff	___flsub@a+3,___fladd@a+3
  9928  0058D0  EC5F  F015         	call	___fladd	;wreg free
  9929  0058D4  C035  F045         	movff	?___fladd,?___flsub
  9930  0058D8  C036  F046         	movff	?___fladd+1,?___flsub+1
  9931  0058DC  C037  F047         	movff	?___fladd+2,?___flsub+2
  9932  0058E0  C038  F048         	movff	?___fladd+3,?___flsub+3
  9933  0058E4  0012               	return		;funcret
  9934  0058E6                     __end_of___flsub:
  9935                           	callstack 0
  9936                           
  9937 ;; *************** function ___fladd *****************
  9938 ;; Defined at:
  9939 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  9940 ;; Parameters:    Size  Location     Type
  9941 ;;  b               4   52[COMRAM] long 
  9942 ;;  a               4   56[COMRAM] long 
  9943 ;; Auto vars:     Size  Location     Type
  9944 ;;  grs             1   67[COMRAM] unsigned char 
  9945 ;;  bexp            1   66[COMRAM] unsigned char 
  9946 ;;  aexp            1   65[COMRAM] unsigned char 
  9947 ;;  signs           1   64[COMRAM] unsigned char 
  9948 ;; Return value:  Size  Location     Type
  9949 ;;                  4   52[COMRAM] unsigned char 
  9950 ;; Registers used:
  9951 ;;		wreg, status,2, status,0
  9952 ;; Tracked objects:
  9953 ;;		On entry : 0/0
  9954 ;;		On exit  : 0/0
  9955 ;;		Unchanged: 0/0
  9956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9957 ;;      Params:         8       0       0       0       0       0       0
  9958 ;;      Locals:         4       0       0       0       0       0       0
  9959 ;;      Temps:          4       0       0       0       0       0       0
  9960 ;;      Totals:        16       0       0       0       0       0       0
  9961 ;;Total ram usage:       16 bytes
  9962 ;; Hardware stack levels used:    1
  9963 ;; Hardware stack levels required when called:    1
  9964 ;; This function calls:
  9965 ;;		Nothing
  9966 ;; This function is called by:
  9967 ;;		_stateMachine
  9968 ;;		_speedControl
  9969 ;;		___flsub
  9970 ;;		_efgtoa
  9971 ;; This function uses a non-reentrant model
  9972 ;;
  9973                           
  9974                           	psect	text31
  9975  002ABE                     __ptext31:
  9976                           	callstack 0
  9977  002ABE                     ___fladd:
  9978                           	callstack 25
  9979  002ABE  5038               	movf	(___fladd@b+3)^0,w,c
  9980  002AC0  0B80               	andlw	128
  9981  002AC2  6E41               	movwf	___fladd@signs^0,c
  9982  002AC4  5038               	movf	(___fladd@b+3)^0,w,c
  9983  002AC6  2438               	addwf	(___fladd@b+3)^0,w,c
  9984  002AC8  6E43               	movwf	___fladd@bexp^0,c
  9985  002ACA  AE37               	btfss	(___fladd@b+2)^0,7,c
  9986  002ACC  EF6A  F015         	goto	u3951
  9987  002AD0  EF6C  F015         	goto	u3950
  9988  002AD4                     u3951:
  9989  002AD4  EF6D  F015         	goto	l3919
  9990  002AD8                     u3950:
  9991  002AD8  8043               	bsf	___fladd@bexp^0,0,c
  9992  002ADA                     l3919:
  9993  002ADA  5043               	movf	___fladd@bexp^0,w,c
  9994  002ADC  B4D8               	btfsc	status,2,c
  9995  002ADE  EF73  F015         	goto	u3961
  9996  002AE2  EF75  F015         	goto	u3960
  9997  002AE6                     u3961:
  9998  002AE6  EF8A  F015         	goto	l3929
  9999  002AEA                     u3960:
 10000  002AEA  2843               	incf	___fladd@bexp^0,w,c
 10001  002AEC  A4D8               	btfss	status,2,c
 10002  002AEE  EF7B  F015         	goto	u3971
 10003  002AF2  EF7D  F015         	goto	u3970
 10004  002AF6                     u3971:
 10005  002AF6  EF85  F015         	goto	l3925
 10006  002AFA                     u3970:
 10007  002AFA  0E00               	movlw	0
 10008  002AFC  6E35               	movwf	___fladd@b^0,c
 10009  002AFE  0E00               	movlw	0
 10010  002B00  6E36               	movwf	(___fladd@b+1)^0,c
 10011  002B02  0E00               	movlw	0
 10012  002B04  6E37               	movwf	(___fladd@b+2)^0,c
 10013  002B06  0E00               	movlw	0
 10014  002B08  6E38               	movwf	(___fladd@b+3)^0,c
 10015  002B0A                     l3925:
 10016  002B0A  8E37               	bsf	(___fladd@b+2)^0,7,c
 10017  002B0C  0E00               	movlw	0
 10018  002B0E  6E38               	movwf	(___fladd@b+3)^0,c
 10019  002B10  EF92  F015         	goto	l3931
 10020  002B14                     l3929:
 10021  002B14  0E00               	movlw	0
 10022  002B16  6E35               	movwf	___fladd@b^0,c
 10023  002B18  0E00               	movlw	0
 10024  002B1A  6E36               	movwf	(___fladd@b+1)^0,c
 10025  002B1C  0E00               	movlw	0
 10026  002B1E  6E37               	movwf	(___fladd@b+2)^0,c
 10027  002B20  0E00               	movlw	0
 10028  002B22  6E38               	movwf	(___fladd@b+3)^0,c
 10029  002B24                     l3931:
 10030  002B24  503C               	movf	(___fladd@a+3)^0,w,c
 10031  002B26  0B80               	andlw	128
 10032  002B28  6E42               	movwf	___fladd@aexp^0,c
 10033  002B2A  5041               	movf	___fladd@signs^0,w,c
 10034  002B2C  1842               	xorwf	___fladd@aexp^0,w,c
 10035  002B2E  B4D8               	btfsc	status,2,c
 10036  002B30  EF9C  F015         	goto	u3981
 10037  002B34  EF9E  F015         	goto	u3980
 10038  002B38                     u3981:
 10039  002B38  EF9F  F015         	goto	l3937
 10040  002B3C                     u3980:
 10041  002B3C  8C41               	bsf	___fladd@signs^0,6,c
 10042  002B3E                     l3937:
 10043  002B3E  503C               	movf	(___fladd@a+3)^0,w,c
 10044  002B40  243C               	addwf	(___fladd@a+3)^0,w,c
 10045  002B42  6E42               	movwf	___fladd@aexp^0,c
 10046  002B44  AE3B               	btfss	(___fladd@a+2)^0,7,c
 10047  002B46  EFA7  F015         	goto	u3991
 10048  002B4A  EFA9  F015         	goto	u3990
 10049  002B4E                     u3991:
 10050  002B4E  EFAA  F015         	goto	l3943
 10051  002B52                     u3990:
 10052  002B52  8042               	bsf	___fladd@aexp^0,0,c
 10053  002B54                     l3943:
 10054  002B54  5042               	movf	___fladd@aexp^0,w,c
 10055  002B56  B4D8               	btfsc	status,2,c
 10056  002B58  EFB0  F015         	goto	u4001
 10057  002B5C  EFB2  F015         	goto	u4000
 10058  002B60                     u4001:
 10059  002B60  EFC7  F015         	goto	l3953
 10060  002B64                     u4000:
 10061  002B64  2842               	incf	___fladd@aexp^0,w,c
 10062  002B66  A4D8               	btfss	status,2,c
 10063  002B68  EFB8  F015         	goto	u4011
 10064  002B6C  EFBA  F015         	goto	u4010
 10065  002B70                     u4011:
 10066  002B70  EFC2  F015         	goto	l3949
 10067  002B74                     u4010:
 10068  002B74  0E00               	movlw	0
 10069  002B76  6E39               	movwf	___fladd@a^0,c
 10070  002B78  0E00               	movlw	0
 10071  002B7A  6E3A               	movwf	(___fladd@a+1)^0,c
 10072  002B7C  0E00               	movlw	0
 10073  002B7E  6E3B               	movwf	(___fladd@a+2)^0,c
 10074  002B80  0E00               	movlw	0
 10075  002B82  6E3C               	movwf	(___fladd@a+3)^0,c
 10076  002B84                     l3949:
 10077  002B84  8E3B               	bsf	(___fladd@a+2)^0,7,c
 10078  002B86  0E00               	movlw	0
 10079  002B88  6E3C               	movwf	(___fladd@a+3)^0,c
 10080  002B8A  EFCF  F015         	goto	l3955
 10081  002B8E                     l3953:
 10082  002B8E  0E00               	movlw	0
 10083  002B90  6E39               	movwf	___fladd@a^0,c
 10084  002B92  0E00               	movlw	0
 10085  002B94  6E3A               	movwf	(___fladd@a+1)^0,c
 10086  002B96  0E00               	movlw	0
 10087  002B98  6E3B               	movwf	(___fladd@a+2)^0,c
 10088  002B9A  0E00               	movlw	0
 10089  002B9C  6E3C               	movwf	(___fladd@a+3)^0,c
 10090  002B9E                     l3955:
 10091  002B9E  5043               	movf	___fladd@bexp^0,w,c
 10092  002BA0  5C42               	subwf	___fladd@aexp^0,w,c
 10093  002BA2  B0D8               	btfsc	status,0,c
 10094  002BA4  EFD6  F015         	goto	u4021
 10095  002BA8  EFD8  F015         	goto	u4020
 10096  002BAC                     u4021:
 10097  002BAC  EFFF  F015         	goto	l3991
 10098  002BB0                     u4020:
 10099  002BB0  AC41               	btfss	___fladd@signs^0,6,c
 10100  002BB2  EFDD  F015         	goto	u4031
 10101  002BB6  EFDF  F015         	goto	u4030
 10102  002BBA                     u4031:
 10103  002BBA  EFE1  F015         	goto	l3961
 10104  002BBE                     u4030:
 10105  002BBE  0E80               	movlw	128
 10106  002BC0  1A41               	xorwf	___fladd@signs^0,f,c
 10107  002BC2                     l3961:
 10108  002BC2  C043  F044         	movff	___fladd@bexp,___fladd@grs
 10109  002BC6  C042  F043         	movff	___fladd@aexp,___fladd@bexp
 10110  002BCA  C044  F042         	movff	___fladd@grs,___fladd@aexp
 10111  002BCE  C035  F044         	movff	___fladd@b,___fladd@grs
 10112  002BD2  C039  F035         	movff	___fladd@a,___fladd@b
 10113  002BD6  C044  F039         	movff	___fladd@grs,___fladd@a
 10114  002BDA  C036  F044         	movff	___fladd@b+1,___fladd@grs
 10115  002BDE  C03A  F036         	movff	___fladd@a+1,___fladd@b+1
 10116  002BE2  C044  F03A         	movff	___fladd@grs,___fladd@a+1
 10117  002BE6  C037  F044         	movff	___fladd@b+2,___fladd@grs
 10118  002BEA  C03B  F037         	movff	___fladd@a+2,___fladd@b+2
 10119  002BEE  C044  F03B         	movff	___fladd@grs,___fladd@a+2
 10120  002BF2  C038  F044         	movff	___fladd@b+3,___fladd@grs
 10121  002BF6  C03C  F038         	movff	___fladd@a+3,___fladd@b+3
 10122  002BFA  C044  F03C         	movff	___fladd@grs,___fladd@a+3
 10123  002BFE                     l3991:
 10124  002BFE  0E00               	movlw	0
 10125  002C00  6E44               	movwf	___fladd@grs^0,c
 10126  002C02  5043               	movf	___fladd@bexp^0,w,c
 10127  002C04  C042  F03D         	movff	___fladd@aexp,??___fladd
 10128  002C08  6A3E               	clrf	(??___fladd+1)^0,c
 10129  002C0A  5E3D               	subwf	??___fladd^0,f,c
 10130  002C0C  0E00               	movlw	0
 10131  002C0E  5A3E               	subwfb	(??___fladd+1)^0,f,c
 10132  002C10  BE3E               	btfsc	(??___fladd+1)^0,7,c
 10133  002C12  EF14  F016         	goto	u4041
 10134  002C16  503E               	movf	(??___fladd+1)^0,w,c
 10135  002C18  E109               	bnz	u4040
 10136  002C1A  0E1A               	movlw	26
 10137  002C1C  5C3D               	subwf	??___fladd^0,w,c
 10138  002C1E  A0D8               	btfss	status,0,c
 10139  002C20  EF14  F016         	goto	u4041
 10140  002C24  EF16  F016         	goto	u4040
 10141  002C28                     u4041:
 10142  002C28  EF4D  F016         	goto	l1017
 10143  002C2C                     u4040:
 10144  002C2C  5035               	movf	___fladd@b^0,w,c
 10145  002C2E  1036               	iorwf	(___fladd@b+1)^0,w,c
 10146  002C30  1037               	iorwf	(___fladd@b+2)^0,w,c
 10147  002C32  1038               	iorwf	(___fladd@b+3)^0,w,c
 10148  002C34  A4D8               	btfss	status,2,c
 10149  002C36  EF1F  F016         	goto	u4051
 10150  002C3A  EF22  F016         	goto	u4050
 10151  002C3E                     u4051:
 10152  002C3E  0E01               	movlw	1
 10153  002C40  EF23  F016         	goto	u4060
 10154  002C44                     u4050:
 10155  002C44  0E00               	movlw	0
 10156  002C46                     u4060:
 10157  002C46  6E44               	movwf	___fladd@grs^0,c
 10158  002C48  0E00               	movlw	0
 10159  002C4A  6E35               	movwf	___fladd@b^0,c
 10160  002C4C  0E00               	movlw	0
 10161  002C4E  6E36               	movwf	(___fladd@b+1)^0,c
 10162  002C50  0E00               	movlw	0
 10163  002C52  6E37               	movwf	(___fladd@b+2)^0,c
 10164  002C54  0E00               	movlw	0
 10165  002C56  6E38               	movwf	(___fladd@b+3)^0,c
 10166  002C58  C042  F043         	movff	___fladd@aexp,___fladd@bexp
 10167  002C5C  EF56  F016         	goto	l1016
 10168  002C60                     l1018:
 10169  002C60  A044               	btfss	___fladd@grs^0,0,c
 10170  002C62  EF35  F016         	goto	u4071
 10171  002C66  EF37  F016         	goto	u4070
 10172  002C6A                     u4071:
 10173  002C6A  EF3D  F016         	goto	l4003
 10174  002C6E                     u4070:
 10175  002C6E  90D8               	bcf	status,0,c
 10176  002C70  3044               	rrcf	___fladd@grs^0,w,c
 10177  002C72  0901               	iorlw	1
 10178  002C74  6E44               	movwf	___fladd@grs^0,c
 10179  002C76  EF3F  F016         	goto	l4005
 10180  002C7A                     l4003:
 10181  002C7A  90D8               	bcf	status,0,c
 10182  002C7C  3244               	rrcf	___fladd@grs^0,f,c
 10183  002C7E                     l4005:
 10184  002C7E  A035               	btfss	___fladd@b^0,0,c
 10185  002C80  EF44  F016         	goto	u4081
 10186  002C84  EF46  F016         	goto	u4080
 10187  002C88                     u4081:
 10188  002C88  EF47  F016         	goto	l4009
 10189  002C8C                     u4080:
 10190  002C8C  8E44               	bsf	___fladd@grs^0,7,c
 10191  002C8E                     l4009:
 10192  002C8E  3438               	rlcf	(___fladd@b+3)^0,w,c
 10193  002C90  3238               	rrcf	(___fladd@b+3)^0,f,c
 10194  002C92  3237               	rrcf	(___fladd@b+2)^0,f,c
 10195  002C94  3236               	rrcf	(___fladd@b+1)^0,f,c
 10196  002C96  3235               	rrcf	___fladd@b^0,f,c
 10197  002C98  2A43               	incf	___fladd@bexp^0,f,c
 10198  002C9A                     l1017:
 10199  002C9A  5042               	movf	___fladd@aexp^0,w,c
 10200  002C9C  5C43               	subwf	___fladd@bexp^0,w,c
 10201  002C9E  A0D8               	btfss	status,0,c
 10202  002CA0  EF54  F016         	goto	u4091
 10203  002CA4  EF56  F016         	goto	u4090
 10204  002CA8                     u4091:
 10205  002CA8  EF30  F016         	goto	l1018
 10206  002CAC                     u4090:
 10207  002CAC                     l1016:
 10208  002CAC  BC41               	btfsc	___fladd@signs^0,6,c
 10209  002CAE  EF5B  F016         	goto	u4101
 10210  002CB2  EF5D  F016         	goto	u4100
 10211  002CB6                     u4101:
 10212  002CB6  EF9D  F016         	goto	l4037
 10213  002CBA                     u4100:
 10214  002CBA  5043               	movf	___fladd@bexp^0,w,c
 10215  002CBC  A4D8               	btfss	status,2,c
 10216  002CBE  EF63  F016         	goto	u4111
 10217  002CC2  EF65  F016         	goto	u4110
 10218  002CC6                     u4111:
 10219  002CC6  EF6F  F016         	goto	l4019
 10220  002CCA                     u4110:
 10221  002CCA  0E00               	movlw	0
 10222  002CCC  6E35               	movwf	?___fladd^0,c
 10223  002CCE  0E00               	movlw	0
 10224  002CD0  6E36               	movwf	(?___fladd+1)^0,c
 10225  002CD2  0E00               	movlw	0
 10226  002CD4  6E37               	movwf	(?___fladd+2)^0,c
 10227  002CD6  0E00               	movlw	0
 10228  002CD8  6E38               	movwf	(?___fladd+3)^0,c
 10229  002CDA  EFBE  F017         	goto	l1025
 10230  002CDE                     l4019:
 10231  002CDE  5039               	movf	___fladd@a^0,w,c
 10232  002CE0  2635               	addwf	___fladd@b^0,f,c
 10233  002CE2  503A               	movf	(___fladd@a+1)^0,w,c
 10234  002CE4  2236               	addwfc	(___fladd@b+1)^0,f,c
 10235  002CE6  503B               	movf	(___fladd@a+2)^0,w,c
 10236  002CE8  2237               	addwfc	(___fladd@b+2)^0,f,c
 10237  002CEA  503C               	movf	(___fladd@a+3)^0,w,c
 10238  002CEC  2238               	addwfc	(___fladd@b+3)^0,f,c
 10239  002CEE  A038               	btfss	(___fladd@b+3)^0,0,c
 10240  002CF0  EF7C  F016         	goto	u4121
 10241  002CF4  EF7E  F016         	goto	u4120
 10242  002CF8                     u4121:
 10243  002CF8  EF2A  F017         	goto	l4073
 10244  002CFC                     u4120:
 10245  002CFC  A044               	btfss	___fladd@grs^0,0,c
 10246  002CFE  EF83  F016         	goto	u4131
 10247  002D02  EF85  F016         	goto	u4130
 10248  002D06                     u4131:
 10249  002D06  EF8B  F016         	goto	l4027
 10250  002D0A                     u4130:
 10251  002D0A  90D8               	bcf	status,0,c
 10252  002D0C  3044               	rrcf	___fladd@grs^0,w,c
 10253  002D0E  0901               	iorlw	1
 10254  002D10  6E44               	movwf	___fladd@grs^0,c
 10255  002D12  EF8D  F016         	goto	l4029
 10256  002D16                     l4027:
 10257  002D16  90D8               	bcf	status,0,c
 10258  002D18  3244               	rrcf	___fladd@grs^0,f,c
 10259  002D1A                     l4029:
 10260  002D1A  A035               	btfss	___fladd@b^0,0,c
 10261  002D1C  EF92  F016         	goto	u4141
 10262  002D20  EF94  F016         	goto	u4140
 10263  002D24                     u4141:
 10264  002D24  EF95  F016         	goto	l4033
 10265  002D28                     u4140:
 10266  002D28  8E44               	bsf	___fladd@grs^0,7,c
 10267  002D2A                     l4033:
 10268  002D2A  3438               	rlcf	(___fladd@b+3)^0,w,c
 10269  002D2C  3238               	rrcf	(___fladd@b+3)^0,f,c
 10270  002D2E  3237               	rrcf	(___fladd@b+2)^0,f,c
 10271  002D30  3236               	rrcf	(___fladd@b+1)^0,f,c
 10272  002D32  3235               	rrcf	___fladd@b^0,f,c
 10273  002D34  2A43               	incf	___fladd@bexp^0,f,c
 10274  002D36  EF2A  F017         	goto	l4073
 10275  002D3A                     l4037:
 10276  002D3A  5039               	movf	___fladd@a^0,w,c
 10277  002D3C  5C35               	subwf	___fladd@b^0,w,c
 10278  002D3E  503A               	movf	(___fladd@a+1)^0,w,c
 10279  002D40  5836               	subwfb	(___fladd@b+1)^0,w,c
 10280  002D42  503B               	movf	(___fladd@a+2)^0,w,c
 10281  002D44  5837               	subwfb	(___fladd@b+2)^0,w,c
 10282  002D46  5038               	movf	(___fladd@b+3)^0,w,c
 10283  002D48  0A80               	xorlw	128
 10284  002D4A  6E3D               	movwf	??___fladd^0,c
 10285  002D4C  503C               	movf	(___fladd@a+3)^0,w,c
 10286  002D4E  0A80               	xorlw	128
 10287  002D50  583D               	subwfb	??___fladd^0,w,c
 10288  002D52  B0D8               	btfsc	status,0,c
 10289  002D54  EFAE  F016         	goto	u4151
 10290  002D58  EFB0  F016         	goto	u4150
 10291  002D5C                     u4151:
 10292  002D5C  EFDB  F016         	goto	l4047
 10293  002D60                     u4150:
 10294  002D60  5035               	movf	___fladd@b^0,w,c
 10295  002D62  5C39               	subwf	___fladd@a^0,w,c
 10296  002D64  6E3D               	movwf	??___fladd^0,c
 10297  002D66  5036               	movf	(___fladd@b+1)^0,w,c
 10298  002D68  583A               	subwfb	(___fladd@a+1)^0,w,c
 10299  002D6A  6E3E               	movwf	(??___fladd+1)^0,c
 10300  002D6C  5037               	movf	(___fladd@b+2)^0,w,c
 10301  002D6E  583B               	subwfb	(___fladd@a+2)^0,w,c
 10302  002D70  6E3F               	movwf	(??___fladd+2)^0,c
 10303  002D72  5038               	movf	(___fladd@b+3)^0,w,c
 10304  002D74  583C               	subwfb	(___fladd@a+3)^0,w,c
 10305  002D76  6E40               	movwf	(??___fladd+3)^0,c
 10306  002D78  0EFF               	movlw	255
 10307  002D7A  243D               	addwf	??___fladd^0,w,c
 10308  002D7C  6E35               	movwf	___fladd@b^0,c
 10309  002D7E  0EFF               	movlw	255
 10310  002D80  203E               	addwfc	(??___fladd+1)^0,w,c
 10311  002D82  6E36               	movwf	(___fladd@b+1)^0,c
 10312  002D84  0EFF               	movlw	255
 10313  002D86  203F               	addwfc	(??___fladd+2)^0,w,c
 10314  002D88  6E37               	movwf	(___fladd@b+2)^0,c
 10315  002D8A  0EFF               	movlw	255
 10316  002D8C  2040               	addwfc	(??___fladd+3)^0,w,c
 10317  002D8E  6E38               	movwf	(___fladd@b+3)^0,c
 10318  002D90  0E80               	movlw	128
 10319  002D92  1A41               	xorwf	___fladd@signs^0,f,c
 10320  002D94  6C44               	negf	___fladd@grs^0,c
 10321  002D96  5044               	movf	___fladd@grs^0,w,c
 10322  002D98  A4D8               	btfss	status,2,c
 10323  002D9A  EFD1  F016         	goto	u4161
 10324  002D9E  EFD3  F016         	goto	u4160
 10325  002DA2                     u4161:
 10326  002DA2  EFE3  F016         	goto	l1033
 10327  002DA6                     u4160:
 10328  002DA6  0E01               	movlw	1
 10329  002DA8  2635               	addwf	___fladd@b^0,f,c
 10330  002DAA  0E00               	movlw	0
 10331  002DAC  2236               	addwfc	(___fladd@b+1)^0,f,c
 10332  002DAE  2237               	addwfc	(___fladd@b+2)^0,f,c
 10333  002DB0  2238               	addwfc	(___fladd@b+3)^0,f,c
 10334  002DB2  EFE3  F016         	goto	l1033
 10335  002DB6                     l4047:
 10336  002DB6  5039               	movf	___fladd@a^0,w,c
 10337  002DB8  5E35               	subwf	___fladd@b^0,f,c
 10338  002DBA  503A               	movf	(___fladd@a+1)^0,w,c
 10339  002DBC  5A36               	subwfb	(___fladd@b+1)^0,f,c
 10340  002DBE  503B               	movf	(___fladd@a+2)^0,w,c
 10341  002DC0  5A37               	subwfb	(___fladd@b+2)^0,f,c
 10342  002DC2  503C               	movf	(___fladd@a+3)^0,w,c
 10343  002DC4  5A38               	subwfb	(___fladd@b+3)^0,f,c
 10344  002DC6                     l1033:
 10345  002DC6  5035               	movf	___fladd@b^0,w,c
 10346  002DC8  1036               	iorwf	(___fladd@b+1)^0,w,c
 10347  002DCA  1037               	iorwf	(___fladd@b+2)^0,w,c
 10348  002DCC  1038               	iorwf	(___fladd@b+3)^0,w,c
 10349  002DCE  A4D8               	btfss	status,2,c
 10350  002DD0  EFEC  F016         	goto	u4171
 10351  002DD4  EFEE  F016         	goto	u4170
 10352  002DD8                     u4171:
 10353  002DD8  EF23  F017         	goto	l4071
 10354  002DDC                     u4170:
 10355  002DDC  5044               	movf	___fladd@grs^0,w,c
 10356  002DDE  A4D8               	btfss	status,2,c
 10357  002DE0  EFF4  F016         	goto	u4181
 10358  002DE4  EFF6  F016         	goto	u4180
 10359  002DE8                     u4181:
 10360  002DE8  EF23  F017         	goto	l4071
 10361  002DEC                     u4180:
 10362  002DEC  0E00               	movlw	0
 10363  002DEE  6E35               	movwf	?___fladd^0,c
 10364  002DF0  0E00               	movlw	0
 10365  002DF2  6E36               	movwf	(?___fladd+1)^0,c
 10366  002DF4  0E00               	movlw	0
 10367  002DF6  6E37               	movwf	(?___fladd+2)^0,c
 10368  002DF8  0E00               	movlw	0
 10369  002DFA  6E38               	movwf	(?___fladd+3)^0,c
 10370  002DFC  EFBE  F017         	goto	l1025
 10371  002E00                     l4055:
 10372  002E00  90D8               	bcf	status,0,c
 10373  002E02  3635               	rlcf	___fladd@b^0,f,c
 10374  002E04  3636               	rlcf	(___fladd@b+1)^0,f,c
 10375  002E06  3637               	rlcf	(___fladd@b+2)^0,f,c
 10376  002E08  3638               	rlcf	(___fladd@b+3)^0,f,c
 10377  002E0A  AE44               	btfss	___fladd@grs^0,7,c
 10378  002E0C  EF0A  F017         	goto	u4191
 10379  002E10  EF0C  F017         	goto	u4190
 10380  002E14                     u4191:
 10381  002E14  EF0D  F017         	goto	l4061
 10382  002E18                     u4190:
 10383  002E18  8035               	bsf	___fladd@b^0,0,c
 10384  002E1A                     l4061:
 10385  002E1A  A044               	btfss	___fladd@grs^0,0,c
 10386  002E1C  EF12  F017         	goto	u4201
 10387  002E20  EF14  F017         	goto	u4200
 10388  002E24                     u4201:
 10389  002E24  EF18  F017         	goto	l4065
 10390  002E28                     u4200:
 10391  002E28  80D8               	bsf	status,0,c
 10392  002E2A  3644               	rlcf	___fladd@grs^0,f,c
 10393  002E2C  EF1A  F017         	goto	l4067
 10394  002E30                     l4065:
 10395  002E30  90D8               	bcf	status,0,c
 10396  002E32  3644               	rlcf	___fladd@grs^0,f,c
 10397  002E34                     l4067:
 10398  002E34  5043               	movf	___fladd@bexp^0,w,c
 10399  002E36  B4D8               	btfsc	status,2,c
 10400  002E38  EF20  F017         	goto	u4211
 10401  002E3C  EF22  F017         	goto	u4210
 10402  002E40                     u4211:
 10403  002E40  EF23  F017         	goto	l4071
 10404  002E44                     u4210:
 10405  002E44  0643               	decf	___fladd@bexp^0,f,c
 10406  002E46                     l4071:
 10407  002E46  AE37               	btfss	(___fladd@b+2)^0,7,c
 10408  002E48  EF28  F017         	goto	u4221
 10409  002E4C  EF2A  F017         	goto	u4220
 10410  002E50                     u4221:
 10411  002E50  EF00  F017         	goto	l4055
 10412  002E54                     u4220:
 10413  002E54                     l4073:
 10414  002E54  0E00               	movlw	0
 10415  002E56  6E42               	movwf	___fladd@aexp^0,c
 10416  002E58  AE44               	btfss	___fladd@grs^0,7,c
 10417  002E5A  EF31  F017         	goto	u4231
 10418  002E5E  EF33  F017         	goto	u4230
 10419  002E62                     u4231:
 10420  002E62  EF4B  F017         	goto	l1042
 10421  002E66                     u4230:
 10422  002E66  C044  F03D         	movff	___fladd@grs,??___fladd
 10423  002E6A  0E7F               	movlw	127
 10424  002E6C  163D               	andwf	??___fladd^0,f,c
 10425  002E6E  B4D8               	btfsc	status,2,c
 10426  002E70  EF3C  F017         	goto	u4241
 10427  002E74  EF3E  F017         	goto	u4240
 10428  002E78                     u4241:
 10429  002E78  EF42  F017         	goto	l1043
 10430  002E7C                     u4240:
 10431  002E7C                     l4079:
 10432  002E7C  0E01               	movlw	1
 10433  002E7E  6E42               	movwf	___fladd@aexp^0,c
 10434  002E80  EF4B  F017         	goto	l1042
 10435  002E84                     l1043:
 10436  002E84  A035               	btfss	___fladd@b^0,0,c
 10437  002E86  EF47  F017         	goto	u4251
 10438  002E8A  EF49  F017         	goto	u4250
 10439  002E8E                     u4251:
 10440  002E8E  EF4B  F017         	goto	l1042
 10441  002E92                     u4250:
 10442  002E92  EF3E  F017         	goto	l4079
 10443  002E96                     l1042:
 10444  002E96  5042               	movf	___fladd@aexp^0,w,c
 10445  002E98  B4D8               	btfsc	status,2,c
 10446  002E9A  EF51  F017         	goto	u4261
 10447  002E9E  EF53  F017         	goto	u4260
 10448  002EA2                     u4261:
 10449  002EA2  EF7E  F017         	goto	l4091
 10450  002EA6                     u4260:
 10451  002EA6  0E01               	movlw	1
 10452  002EA8  2635               	addwf	___fladd@b^0,f,c
 10453  002EAA  0E00               	movlw	0
 10454  002EAC  2236               	addwfc	(___fladd@b+1)^0,f,c
 10455  002EAE  2237               	addwfc	(___fladd@b+2)^0,f,c
 10456  002EB0  2238               	addwfc	(___fladd@b+3)^0,f,c
 10457  002EB2  A038               	btfss	(___fladd@b+3)^0,0,c
 10458  002EB4  EF5E  F017         	goto	u4271
 10459  002EB8  EF60  F017         	goto	u4270
 10460  002EBC                     u4271:
 10461  002EBC  EF7E  F017         	goto	l4091
 10462  002EC0                     u4270:
 10463  002EC0  C035  F03D         	movff	___fladd@b,??___fladd
 10464  002EC4  C036  F03E         	movff	___fladd@b+1,??___fladd+1
 10465  002EC8  C037  F03F         	movff	___fladd@b+2,??___fladd+2
 10466  002ECC  C038  F040         	movff	___fladd@b+3,??___fladd+3
 10467  002ED0  3440               	rlcf	(??___fladd+3)^0,w,c
 10468  002ED2  3240               	rrcf	(??___fladd+3)^0,f,c
 10469  002ED4  323F               	rrcf	(??___fladd+2)^0,f,c
 10470  002ED6  323E               	rrcf	(??___fladd+1)^0,f,c
 10471  002ED8  323D               	rrcf	??___fladd^0,f,c
 10472  002EDA  C03D  F035         	movff	??___fladd,___fladd@b
 10473  002EDE  C03E  F036         	movff	??___fladd+1,___fladd@b+1
 10474  002EE2  C03F  F037         	movff	??___fladd+2,___fladd@b+2
 10475  002EE6  C040  F038         	movff	??___fladd+3,___fladd@b+3
 10476  002EEA  2843               	incf	___fladd@bexp^0,w,c
 10477  002EEC  B4D8               	btfsc	status,2,c
 10478  002EEE  EF7B  F017         	goto	u4281
 10479  002EF2  EF7D  F017         	goto	u4280
 10480  002EF6                     u4281:
 10481  002EF6  EF7E  F017         	goto	l4091
 10482  002EFA                     u4280:
 10483  002EFA  2A43               	incf	___fladd@bexp^0,f,c
 10484  002EFC                     l4091:
 10485  002EFC  2843               	incf	___fladd@bexp^0,w,c
 10486  002EFE  B4D8               	btfsc	status,2,c
 10487  002F00  EF84  F017         	goto	u4291
 10488  002F04  EF86  F017         	goto	u4290
 10489  002F08                     u4291:
 10490  002F08  EF8E  F017         	goto	l4095
 10491  002F0C                     u4290:
 10492  002F0C  5043               	movf	___fladd@bexp^0,w,c
 10493  002F0E  A4D8               	btfss	status,2,c
 10494  002F10  EF8C  F017         	goto	u4301
 10495  002F14  EF8E  F017         	goto	u4300
 10496  002F18                     u4301:
 10497  002F18  EFA0  F017         	goto	l4099
 10498  002F1C                     u4300:
 10499  002F1C                     l4095:
 10500  002F1C  0E00               	movlw	0
 10501  002F1E  6E35               	movwf	___fladd@b^0,c
 10502  002F20  0E00               	movlw	0
 10503  002F22  6E36               	movwf	(___fladd@b+1)^0,c
 10504  002F24  0E00               	movlw	0
 10505  002F26  6E37               	movwf	(___fladd@b+2)^0,c
 10506  002F28  0E00               	movlw	0
 10507  002F2A  6E38               	movwf	(___fladd@b+3)^0,c
 10508  002F2C  5043               	movf	___fladd@bexp^0,w,c
 10509  002F2E  A4D8               	btfss	status,2,c
 10510  002F30  EF9C  F017         	goto	u4311
 10511  002F34  EF9E  F017         	goto	u4310
 10512  002F38                     u4311:
 10513  002F38  EFA0  F017         	goto	l4099
 10514  002F3C                     u4310:
 10515  002F3C  0E00               	movlw	0
 10516  002F3E  6E41               	movwf	___fladd@signs^0,c
 10517  002F40                     l4099:
 10518  002F40  A043               	btfss	___fladd@bexp^0,0,c
 10519  002F42  EFA5  F017         	goto	u4321
 10520  002F46  EFA7  F017         	goto	u4320
 10521  002F4A                     u4321:
 10522  002F4A  EFAA  F017         	goto	l4103
 10523  002F4E                     u4320:
 10524  002F4E  8E37               	bsf	(___fladd@b+2)^0,7,c
 10525  002F50  EFAB  F017         	goto	l4105
 10526  002F54                     l4103:
 10527  002F54  9E37               	bcf	(___fladd@b+2)^0,7,c
 10528  002F56                     l4105:
 10529  002F56  90D8               	bcf	status,0,c
 10530  002F58  3043               	rrcf	___fladd@bexp^0,w,c
 10531  002F5A  6E38               	movwf	(___fladd@b+3)^0,c
 10532  002F5C  AE41               	btfss	___fladd@signs^0,7,c
 10533  002F5E  EFB3  F017         	goto	u4331
 10534  002F62  EFB5  F017         	goto	u4330
 10535  002F66                     u4331:
 10536  002F66  EFB6  F017         	goto	l4111
 10537  002F6A                     u4330:
 10538  002F6A  8E38               	bsf	(___fladd@b+3)^0,7,c
 10539  002F6C                     l4111:
 10540  002F6C  C035  F035         	movff	___fladd@b,?___fladd
 10541  002F70  C036  F036         	movff	___fladd@b+1,?___fladd+1
 10542  002F74  C037  F037         	movff	___fladd@b+2,?___fladd+2
 10543  002F78  C038  F038         	movff	___fladd@b+3,?___fladd+3
 10544  002F7C                     l1025:
 10545  002F7C  0012               	return		;funcret
 10546  002F7E                     __end_of___fladd:
 10547                           	callstack 0
 10548                           
 10549 ;; *************** function ___flneg *****************
 10550 ;; Defined at:
 10551 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
 10552 ;; Parameters:    Size  Location     Type
 10553 ;;  f1              4    0[COMRAM] unsigned char 
 10554 ;; Auto vars:     Size  Location     Type
 10555 ;;		None
 10556 ;; Return value:  Size  Location     Type
 10557 ;;                  4    0[COMRAM] unsigned char 
 10558 ;; Registers used:
 10559 ;;		wreg, status,2, status,0
 10560 ;; Tracked objects:
 10561 ;;		On entry : 0/0
 10562 ;;		On exit  : 0/0
 10563 ;;		Unchanged: 0/0
 10564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10565 ;;      Params:         4       0       0       0       0       0       0
 10566 ;;      Locals:         0       0       0       0       0       0       0
 10567 ;;      Temps:          0       0       0       0       0       0       0
 10568 ;;      Totals:         4       0       0       0       0       0       0
 10569 ;;Total ram usage:        4 bytes
 10570 ;; Hardware stack levels used:    1
 10571 ;; Hardware stack levels required when called:    1
 10572 ;; This function calls:
 10573 ;;		Nothing
 10574 ;; This function is called by:
 10575 ;;		_efgtoa
 10576 ;; This function uses a non-reentrant model
 10577 ;;
 10578                           
 10579                           	psect	text32
 10580  005A5E                     __ptext32:
 10581                           	callstack 0
 10582  005A5E                     ___flneg:
 10583                           	callstack 23
 10584  005A5E  5001               	movf	___flneg@f1^0,w,c
 10585  005A60  1002               	iorwf	(___flneg@f1+1)^0,w,c
 10586  005A62  1003               	iorwf	(___flneg@f1+2)^0,w,c
 10587  005A64  1004               	iorwf	(___flneg@f1+3)^0,w,c
 10588  005A66  B4D8               	btfsc	status,2,c
 10589  005A68  EF38  F02D         	goto	u5131
 10590  005A6C  EF3A  F02D         	goto	u5130
 10591  005A70                     u5131:
 10592  005A70  EF42  F02D         	goto	l4619
 10593  005A74                     u5130:
 10594  005A74  0E00               	movlw	0
 10595  005A76  1A01               	xorwf	___flneg@f1^0,f,c
 10596  005A78  0E00               	movlw	0
 10597  005A7A  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 10598  005A7C  0E00               	movlw	0
 10599  005A7E  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 10600  005A80  0E80               	movlw	128
 10601  005A82  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 10602  005A84                     l4619:
 10603  005A84  C001  F001         	movff	___flneg@f1,?___flneg
 10604  005A88  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 10605  005A8C  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 10606  005A90  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 10607  005A94  0012               	return		;funcret
 10608  005A96                     __end_of___flneg:
 10609                           	callstack 0
 10610                           
 10611 ;; *************** function ___flmul *****************
 10612 ;; Defined at:
 10613 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
 10614 ;; Parameters:    Size  Location     Type
 10615 ;;  b               4   27[COMRAM] unsigned char 
 10616 ;;  a               4   31[COMRAM] unsigned char 
 10617 ;; Auto vars:     Size  Location     Type
 10618 ;;  prod            4   46[COMRAM] struct .
 10619 ;;  grs             4   40[COMRAM] unsigned long 
 10620 ;;  temp            2   50[COMRAM] struct .
 10621 ;;  bexp            1   45[COMRAM] unsigned char 
 10622 ;;  aexp            1   44[COMRAM] unsigned char 
 10623 ;;  sign            1   39[COMRAM] unsigned char 
 10624 ;; Return value:  Size  Location     Type
 10625 ;;                  4   27[COMRAM] unsigned char 
 10626 ;; Registers used:
 10627 ;;		wreg, status,2, status,0, prodl, prodh
 10628 ;; Tracked objects:
 10629 ;;		On entry : 0/0
 10630 ;;		On exit  : 0/0
 10631 ;;		Unchanged: 0/0
 10632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10633 ;;      Params:         8       0       0       0       0       0       0
 10634 ;;      Locals:        13       0       0       0       0       0       0
 10635 ;;      Temps:          4       0       0       0       0       0       0
 10636 ;;      Totals:        25       0       0       0       0       0       0
 10637 ;;Total ram usage:       25 bytes
 10638 ;; Hardware stack levels used:    1
 10639 ;; Hardware stack levels required when called:    1
 10640 ;; This function calls:
 10641 ;;		Nothing
 10642 ;; This function is called by:
 10643 ;;		_scanAdcConversion
 10644 ;;		_speedControl
 10645 ;;		_efgtoa
 10646 ;; This function uses a non-reentrant model
 10647 ;;
 10648                           
 10649                           	psect	text33
 10650  002F7E                     __ptext33:
 10651                           	callstack 0
 10652  002F7E                     ___flmul:
 10653                           	callstack 25
 10654  002F7E  501F               	movf	(___flmul@b+3)^0,w,c
 10655  002F80  0B80               	andlw	128
 10656  002F82  6E28               	movwf	___flmul@sign^0,c
 10657  002F84  501F               	movf	(___flmul@b+3)^0,w,c
 10658  002F86  241F               	addwf	(___flmul@b+3)^0,w,c
 10659  002F88  6E2E               	movwf	___flmul@bexp^0,c
 10660  002F8A  AE1E               	btfss	(___flmul@b+2)^0,7,c
 10661  002F8C  EFCA  F017         	goto	u4741
 10662  002F90  EFCC  F017         	goto	u4740
 10663  002F94                     u4741:
 10664  002F94  EFCD  F017         	goto	l4367
 10665  002F98                     u4740:
 10666  002F98  802E               	bsf	___flmul@bexp^0,0,c
 10667  002F9A                     l4367:
 10668  002F9A  502E               	movf	___flmul@bexp^0,w,c
 10669  002F9C  B4D8               	btfsc	status,2,c
 10670  002F9E  EFD3  F017         	goto	u4751
 10671  002FA2  EFD5  F017         	goto	u4750
 10672  002FA6                     u4751:
 10673  002FA6  EFE8  F017         	goto	l4375
 10674  002FAA                     u4750:
 10675  002FAA  282E               	incf	___flmul@bexp^0,w,c
 10676  002FAC  A4D8               	btfss	status,2,c
 10677  002FAE  EFDB  F017         	goto	u4761
 10678  002FB2  EFDD  F017         	goto	u4760
 10679  002FB6                     u4761:
 10680  002FB6  EFE5  F017         	goto	l4373
 10681  002FBA                     u4760:
 10682  002FBA  0E00               	movlw	0
 10683  002FBC  6E1C               	movwf	___flmul@b^0,c
 10684  002FBE  0E00               	movlw	0
 10685  002FC0  6E1D               	movwf	(___flmul@b+1)^0,c
 10686  002FC2  0E00               	movlw	0
 10687  002FC4  6E1E               	movwf	(___flmul@b+2)^0,c
 10688  002FC6  0E00               	movlw	0
 10689  002FC8  6E1F               	movwf	(___flmul@b+3)^0,c
 10690  002FCA                     l4373:
 10691  002FCA  8E1E               	bsf	(___flmul@b+2)^0,7,c
 10692  002FCC  EFF0  F017         	goto	l4377
 10693  002FD0                     l4375:
 10694  002FD0  0E00               	movlw	0
 10695  002FD2  6E1C               	movwf	___flmul@b^0,c
 10696  002FD4  0E00               	movlw	0
 10697  002FD6  6E1D               	movwf	(___flmul@b+1)^0,c
 10698  002FD8  0E00               	movlw	0
 10699  002FDA  6E1E               	movwf	(___flmul@b+2)^0,c
 10700  002FDC  0E00               	movlw	0
 10701  002FDE  6E1F               	movwf	(___flmul@b+3)^0,c
 10702  002FE0                     l4377:
 10703  002FE0  5023               	movf	(___flmul@a+3)^0,w,c
 10704  002FE2  0B80               	andlw	128
 10705  002FE4  1A28               	xorwf	___flmul@sign^0,f,c
 10706  002FE6  5023               	movf	(___flmul@a+3)^0,w,c
 10707  002FE8  2423               	addwf	(___flmul@a+3)^0,w,c
 10708  002FEA  6E2D               	movwf	___flmul@aexp^0,c
 10709  002FEC  AE22               	btfss	(___flmul@a+2)^0,7,c
 10710  002FEE  EFFB  F017         	goto	u4771
 10711  002FF2  EFFD  F017         	goto	u4770
 10712  002FF6                     u4771:
 10713  002FF6  EFFE  F017         	goto	l4385
 10714  002FFA                     u4770:
 10715  002FFA  802D               	bsf	___flmul@aexp^0,0,c
 10716  002FFC                     l4385:
 10717  002FFC  502D               	movf	___flmul@aexp^0,w,c
 10718  002FFE  B4D8               	btfsc	status,2,c
 10719  003000  EF04  F018         	goto	u4781
 10720  003004  EF06  F018         	goto	u4780
 10721  003008                     u4781:
 10722  003008  EF19  F018         	goto	l4393
 10723  00300C                     u4780:
 10724  00300C  282D               	incf	___flmul@aexp^0,w,c
 10725  00300E  A4D8               	btfss	status,2,c
 10726  003010  EF0C  F018         	goto	u4791
 10727  003014  EF0E  F018         	goto	u4790
 10728  003018                     u4791:
 10729  003018  EF16  F018         	goto	l4391
 10730  00301C                     u4790:
 10731  00301C  0E00               	movlw	0
 10732  00301E  6E20               	movwf	___flmul@a^0,c
 10733  003020  0E00               	movlw	0
 10734  003022  6E21               	movwf	(___flmul@a+1)^0,c
 10735  003024  0E00               	movlw	0
 10736  003026  6E22               	movwf	(___flmul@a+2)^0,c
 10737  003028  0E00               	movlw	0
 10738  00302A  6E23               	movwf	(___flmul@a+3)^0,c
 10739  00302C                     l4391:
 10740  00302C  8E22               	bsf	(___flmul@a+2)^0,7,c
 10741  00302E  EF21  F018         	goto	l1102
 10742  003032                     l4393:
 10743  003032  0E00               	movlw	0
 10744  003034  6E20               	movwf	___flmul@a^0,c
 10745  003036  0E00               	movlw	0
 10746  003038  6E21               	movwf	(___flmul@a+1)^0,c
 10747  00303A  0E00               	movlw	0
 10748  00303C  6E22               	movwf	(___flmul@a+2)^0,c
 10749  00303E  0E00               	movlw	0
 10750  003040  6E23               	movwf	(___flmul@a+3)^0,c
 10751  003042                     l1102:
 10752  003042  502D               	movf	___flmul@aexp^0,w,c
 10753  003044  B4D8               	btfsc	status,2,c
 10754  003046  EF27  F018         	goto	u4801
 10755  00304A  EF29  F018         	goto	u4800
 10756  00304E                     u4801:
 10757  00304E  EF31  F018         	goto	l4397
 10758  003052                     u4800:
 10759  003052  502E               	movf	___flmul@bexp^0,w,c
 10760  003054  A4D8               	btfss	status,2,c
 10761  003056  EF2F  F018         	goto	u4811
 10762  00305A  EF31  F018         	goto	u4810
 10763  00305E                     u4811:
 10764  00305E  EF3B  F018         	goto	l4401
 10765  003062                     u4810:
 10766  003062                     l4397:
 10767  003062  0E00               	movlw	0
 10768  003064  6E1C               	movwf	?___flmul^0,c
 10769  003066  0E00               	movlw	0
 10770  003068  6E1D               	movwf	(?___flmul+1)^0,c
 10771  00306A  0E00               	movlw	0
 10772  00306C  6E1E               	movwf	(?___flmul+2)^0,c
 10773  00306E  0E00               	movlw	0
 10774  003070  6E1F               	movwf	(?___flmul+3)^0,c
 10775  003072  EFD3  F019         	goto	l1106
 10776  003076                     l4401:
 10777  003076  5022               	movf	(___flmul@a+2)^0,w,c
 10778  003078  021C               	mulwf	___flmul@b^0,c
 10779  00307A  CFF3 F033          	movff	prodl,___flmul@temp
 10780  00307E  CFF4 F034          	movff	prodh,___flmul@temp+1
 10781  003082  5033               	movf	___flmul@temp^0,w,c
 10782  003084  6E29               	movwf	___flmul@grs^0,c
 10783  003086  6A2A               	clrf	(___flmul@grs+1)^0,c
 10784  003088  6A2B               	clrf	(___flmul@grs+2)^0,c
 10785  00308A  6A2C               	clrf	(___flmul@grs+3)^0,c
 10786  00308C  5034               	movf	(___flmul@temp+1)^0,w,c
 10787  00308E  6E2F               	movwf	___flmul@prod^0,c
 10788  003090  6A30               	clrf	(___flmul@prod+1)^0,c
 10789  003092  6A31               	clrf	(___flmul@prod+2)^0,c
 10790  003094  6A32               	clrf	(___flmul@prod+3)^0,c
 10791  003096  5021               	movf	(___flmul@a+1)^0,w,c
 10792  003098  021D               	mulwf	(___flmul@b+1)^0,c
 10793  00309A  CFF3 F033          	movff	prodl,___flmul@temp
 10794  00309E  CFF4 F034          	movff	prodh,___flmul@temp+1
 10795  0030A2  5033               	movf	___flmul@temp^0,w,c
 10796  0030A4  2629               	addwf	___flmul@grs^0,f,c
 10797  0030A6  0E00               	movlw	0
 10798  0030A8  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10799  0030AA  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10800  0030AC  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10801  0030AE  5034               	movf	(___flmul@temp+1)^0,w,c
 10802  0030B0  262F               	addwf	___flmul@prod^0,f,c
 10803  0030B2  0E00               	movlw	0
 10804  0030B4  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10805  0030B6  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10806  0030B8  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10807  0030BA  5020               	movf	___flmul@a^0,w,c
 10808  0030BC  021E               	mulwf	(___flmul@b+2)^0,c
 10809  0030BE  CFF3 F033          	movff	prodl,___flmul@temp
 10810  0030C2  CFF4 F034          	movff	prodh,___flmul@temp+1
 10811  0030C6  5033               	movf	___flmul@temp^0,w,c
 10812  0030C8  2629               	addwf	___flmul@grs^0,f,c
 10813  0030CA  0E00               	movlw	0
 10814  0030CC  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10815  0030CE  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10816  0030D0  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10817  0030D2  5034               	movf	(___flmul@temp+1)^0,w,c
 10818  0030D4  262F               	addwf	___flmul@prod^0,f,c
 10819  0030D6  0E00               	movlw	0
 10820  0030D8  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10821  0030DA  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10822  0030DC  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10823  0030DE  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 10824  0030E2  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 10825  0030E6  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 10826  0030EA  6A29               	clrf	___flmul@grs^0,c
 10827  0030EC  5020               	movf	___flmul@a^0,w,c
 10828  0030EE  021D               	mulwf	(___flmul@b+1)^0,c
 10829  0030F0  CFF3 F033          	movff	prodl,___flmul@temp
 10830  0030F4  CFF4 F034          	movff	prodh,___flmul@temp+1
 10831  0030F8  5033               	movf	___flmul@temp^0,w,c
 10832  0030FA  2629               	addwf	___flmul@grs^0,f,c
 10833  0030FC  5034               	movf	(___flmul@temp+1)^0,w,c
 10834  0030FE  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10835  003100  0E00               	movlw	0
 10836  003102  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10837  003104  0E00               	movlw	0
 10838  003106  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10839  003108  5021               	movf	(___flmul@a+1)^0,w,c
 10840  00310A  021C               	mulwf	___flmul@b^0,c
 10841  00310C  CFF3 F033          	movff	prodl,___flmul@temp
 10842  003110  CFF4 F034          	movff	prodh,___flmul@temp+1
 10843  003114  5033               	movf	___flmul@temp^0,w,c
 10844  003116  2629               	addwf	___flmul@grs^0,f,c
 10845  003118  5034               	movf	(___flmul@temp+1)^0,w,c
 10846  00311A  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10847  00311C  0E00               	movlw	0
 10848  00311E  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10849  003120  0E00               	movlw	0
 10850  003122  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10851  003124  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 10852  003128  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 10853  00312C  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 10854  003130  6A29               	clrf	___flmul@grs^0,c
 10855  003132  5020               	movf	___flmul@a^0,w,c
 10856  003134  021C               	mulwf	___flmul@b^0,c
 10857  003136  CFF3 F033          	movff	prodl,___flmul@temp
 10858  00313A  CFF4 F034          	movff	prodh,___flmul@temp+1
 10859  00313E  5033               	movf	___flmul@temp^0,w,c
 10860  003140  2629               	addwf	___flmul@grs^0,f,c
 10861  003142  5034               	movf	(___flmul@temp+1)^0,w,c
 10862  003144  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10863  003146  0E00               	movlw	0
 10864  003148  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10865  00314A  0E00               	movlw	0
 10866  00314C  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10867  00314E  5022               	movf	(___flmul@a+2)^0,w,c
 10868  003150  021D               	mulwf	(___flmul@b+1)^0,c
 10869  003152  CFF3 F033          	movff	prodl,___flmul@temp
 10870  003156  CFF4 F034          	movff	prodh,___flmul@temp+1
 10871  00315A  5033               	movf	___flmul@temp^0,w,c
 10872  00315C  262F               	addwf	___flmul@prod^0,f,c
 10873  00315E  5034               	movf	(___flmul@temp+1)^0,w,c
 10874  003160  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10875  003162  0E00               	movlw	0
 10876  003164  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10877  003166  0E00               	movlw	0
 10878  003168  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10879  00316A  5021               	movf	(___flmul@a+1)^0,w,c
 10880  00316C  021E               	mulwf	(___flmul@b+2)^0,c
 10881  00316E  CFF3 F033          	movff	prodl,___flmul@temp
 10882  003172  CFF4 F034          	movff	prodh,___flmul@temp+1
 10883  003176  5033               	movf	___flmul@temp^0,w,c
 10884  003178  262F               	addwf	___flmul@prod^0,f,c
 10885  00317A  5034               	movf	(___flmul@temp+1)^0,w,c
 10886  00317C  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10887  00317E  0E00               	movlw	0
 10888  003180  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10889  003182  0E00               	movlw	0
 10890  003184  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10891  003186  5022               	movf	(___flmul@a+2)^0,w,c
 10892  003188  021E               	mulwf	(___flmul@b+2)^0,c
 10893  00318A  CFF3 F033          	movff	prodl,___flmul@temp
 10894  00318E  CFF4 F034          	movff	prodh,___flmul@temp+1
 10895  003192  5033               	movf	___flmul@temp^0,w,c
 10896  003194  6E24               	movwf	??___flmul^0,c
 10897  003196  5034               	movf	(___flmul@temp+1)^0,w,c
 10898  003198  6E25               	movwf	(??___flmul+1)^0,c
 10899  00319A  6A26               	clrf	(??___flmul+2)^0,c
 10900  00319C  6A27               	clrf	(??___flmul+3)^0,c
 10901  00319E  C026  F027         	movff	??___flmul+2,??___flmul+3
 10902  0031A2  C025  F026         	movff	??___flmul+1,??___flmul+2
 10903  0031A6  C024  F025         	movff	??___flmul,??___flmul+1
 10904  0031AA  6A24               	clrf	??___flmul^0,c
 10905  0031AC  5024               	movf	??___flmul^0,w,c
 10906  0031AE  262F               	addwf	___flmul@prod^0,f,c
 10907  0031B0  5025               	movf	(??___flmul+1)^0,w,c
 10908  0031B2  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10909  0031B4  5026               	movf	(??___flmul+2)^0,w,c
 10910  0031B6  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10911  0031B8  5027               	movf	(??___flmul+3)^0,w,c
 10912  0031BA  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10913  0031BC  C029  F024         	movff	___flmul@grs,??___flmul
 10914  0031C0  C02A  F025         	movff	___flmul@grs+1,??___flmul+1
 10915  0031C4  C02B  F026         	movff	___flmul@grs+2,??___flmul+2
 10916  0031C8  C02C  F027         	movff	___flmul@grs+3,??___flmul+3
 10917  0031CC  0E19               	movlw	25
 10918  0031CE  EFEE  F018         	goto	u4820
 10919  0031D2                     u4825:
 10920  0031D2  90D8               	bcf	status,0,c
 10921  0031D4  3227               	rrcf	(??___flmul+3)^0,f,c
 10922  0031D6  3226               	rrcf	(??___flmul+2)^0,f,c
 10923  0031D8  3225               	rrcf	(??___flmul+1)^0,f,c
 10924  0031DA  3224               	rrcf	??___flmul^0,f,c
 10925  0031DC                     u4820:
 10926  0031DC  2EE8               	decfsz	wreg,f,c
 10927  0031DE  EFE9  F018         	goto	u4825
 10928  0031E2  5024               	movf	??___flmul^0,w,c
 10929  0031E4  262F               	addwf	___flmul@prod^0,f,c
 10930  0031E6  5025               	movf	(??___flmul+1)^0,w,c
 10931  0031E8  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10932  0031EA  5026               	movf	(??___flmul+2)^0,w,c
 10933  0031EC  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10934  0031EE  5027               	movf	(??___flmul+3)^0,w,c
 10935  0031F0  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10936  0031F2  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 10937  0031F6  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 10938  0031FA  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 10939  0031FE  6A29               	clrf	___flmul@grs^0,c
 10940  003200  502D               	movf	___flmul@aexp^0,w,c
 10941  003202  C02E  F024         	movff	___flmul@bexp,??___flmul
 10942  003206  6A25               	clrf	(??___flmul+1)^0,c
 10943  003208  2624               	addwf	??___flmul^0,f,c
 10944  00320A  0E00               	movlw	0
 10945  00320C  2225               	addwfc	(??___flmul+1)^0,f,c
 10946  00320E  0E82               	movlw	130
 10947  003210  2424               	addwf	??___flmul^0,w,c
 10948  003212  6E33               	movwf	___flmul@temp^0,c
 10949  003214  0EFF               	movlw	255
 10950  003216  2025               	addwfc	(??___flmul+1)^0,w,c
 10951  003218  6E34               	movwf	(___flmul@temp+1)^0,c
 10952  00321A  EF24  F019         	goto	l4449
 10953  00321E                     l4443:
 10954  00321E  90D8               	bcf	status,0,c
 10955  003220  362F               	rlcf	___flmul@prod^0,f,c
 10956  003222  3630               	rlcf	(___flmul@prod+1)^0,f,c
 10957  003224  3631               	rlcf	(___flmul@prod+2)^0,f,c
 10958  003226  3632               	rlcf	(___flmul@prod+3)^0,f,c
 10959  003228  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 10960  00322A  EF19  F019         	goto	u4831
 10961  00322E  EF1B  F019         	goto	u4830
 10962  003232                     u4831:
 10963  003232  EF1C  F019         	goto	l1109
 10964  003236                     u4830:
 10965  003236  802F               	bsf	___flmul@prod^0,0,c
 10966  003238                     l1109:
 10967  003238  90D8               	bcf	status,0,c
 10968  00323A  3629               	rlcf	___flmul@grs^0,f,c
 10969  00323C  362A               	rlcf	(___flmul@grs+1)^0,f,c
 10970  00323E  362B               	rlcf	(___flmul@grs+2)^0,f,c
 10971  003240  362C               	rlcf	(___flmul@grs+3)^0,f,c
 10972  003242  0633               	decf	___flmul@temp^0,f,c
 10973  003244  A0D8               	btfss	status,0,c
 10974  003246  0634               	decf	(___flmul@temp+1)^0,f,c
 10975  003248                     l4449:
 10976  003248  AE31               	btfss	(___flmul@prod+2)^0,7,c
 10977  00324A  EF29  F019         	goto	u4841
 10978  00324E  EF2B  F019         	goto	u4840
 10979  003252                     u4841:
 10980  003252  EF0F  F019         	goto	l4443
 10981  003256                     u4840:
 10982  003256  0E00               	movlw	0
 10983  003258  6E2D               	movwf	___flmul@aexp^0,c
 10984  00325A  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 10985  00325C  EF32  F019         	goto	u4851
 10986  003260  EF34  F019         	goto	u4850
 10987  003264                     u4851:
 10988  003264  EF58  F019         	goto	l1111
 10989  003268                     u4850:
 10990  003268  0EFF               	movlw	255
 10991  00326A  1429               	andwf	___flmul@grs^0,w,c
 10992  00326C  6E24               	movwf	??___flmul^0,c
 10993  00326E  0EFF               	movlw	255
 10994  003270  142A               	andwf	(___flmul@grs+1)^0,w,c
 10995  003272  6E25               	movwf	(??___flmul+1)^0,c
 10996  003274  0EFF               	movlw	255
 10997  003276  142B               	andwf	(___flmul@grs+2)^0,w,c
 10998  003278  6E26               	movwf	(??___flmul+2)^0,c
 10999  00327A  0E7F               	movlw	127
 11000  00327C  142C               	andwf	(___flmul@grs+3)^0,w,c
 11001  00327E  6E27               	movwf	(??___flmul+3)^0,c
 11002  003280  5024               	movf	??___flmul^0,w,c
 11003  003282  1025               	iorwf	(??___flmul+1)^0,w,c
 11004  003284  1026               	iorwf	(??___flmul+2)^0,w,c
 11005  003286  1027               	iorwf	(??___flmul+3)^0,w,c
 11006  003288  B4D8               	btfsc	status,2,c
 11007  00328A  EF49  F019         	goto	u4861
 11008  00328E  EF4B  F019         	goto	u4860
 11009  003292                     u4861:
 11010  003292  EF4F  F019         	goto	l1112
 11011  003296                     u4860:
 11012  003296                     l4457:
 11013  003296  0E01               	movlw	1
 11014  003298  6E2D               	movwf	___flmul@aexp^0,c
 11015  00329A  EF58  F019         	goto	l1111
 11016  00329E                     l1112:
 11017  00329E  A02F               	btfss	___flmul@prod^0,0,c
 11018  0032A0  EF54  F019         	goto	u4871
 11019  0032A4  EF56  F019         	goto	u4870
 11020  0032A8                     u4871:
 11021  0032A8  EF58  F019         	goto	l1111
 11022  0032AC                     u4870:
 11023  0032AC  EF4B  F019         	goto	l4457
 11024  0032B0                     l1111:
 11025  0032B0  502D               	movf	___flmul@aexp^0,w,c
 11026  0032B2  B4D8               	btfsc	status,2,c
 11027  0032B4  EF5E  F019         	goto	u4881
 11028  0032B8  EF60  F019         	goto	u4880
 11029  0032BC                     u4881:
 11030  0032BC  EF84  F019         	goto	l4469
 11031  0032C0                     u4880:
 11032  0032C0  0E01               	movlw	1
 11033  0032C2  262F               	addwf	___flmul@prod^0,f,c
 11034  0032C4  0E00               	movlw	0
 11035  0032C6  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11036  0032C8  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11037  0032CA  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11038  0032CC  A032               	btfss	(___flmul@prod+3)^0,0,c
 11039  0032CE  EF6B  F019         	goto	u4891
 11040  0032D2  EF6D  F019         	goto	u4890
 11041  0032D6                     u4891:
 11042  0032D6  EF84  F019         	goto	l4469
 11043  0032DA                     u4890:
 11044  0032DA  C02F  F024         	movff	___flmul@prod,??___flmul
 11045  0032DE  C030  F025         	movff	___flmul@prod+1,??___flmul+1
 11046  0032E2  C031  F026         	movff	___flmul@prod+2,??___flmul+2
 11047  0032E6  C032  F027         	movff	___flmul@prod+3,??___flmul+3
 11048  0032EA  3427               	rlcf	(??___flmul+3)^0,w,c
 11049  0032EC  3227               	rrcf	(??___flmul+3)^0,f,c
 11050  0032EE  3226               	rrcf	(??___flmul+2)^0,f,c
 11051  0032F0  3225               	rrcf	(??___flmul+1)^0,f,c
 11052  0032F2  3224               	rrcf	??___flmul^0,f,c
 11053  0032F4  C024  F02F         	movff	??___flmul,___flmul@prod
 11054  0032F8  C025  F030         	movff	??___flmul+1,___flmul@prod+1
 11055  0032FC  C026  F031         	movff	??___flmul+2,___flmul@prod+2
 11056  003300  C027  F032         	movff	??___flmul+3,___flmul@prod+3
 11057  003304  4A33               	infsnz	___flmul@temp^0,f,c
 11058  003306  2A34               	incf	(___flmul@temp+1)^0,f,c
 11059  003308                     l4469:
 11060  003308  BE34               	btfsc	(___flmul@temp+1)^0,7,c
 11061  00330A  EF8F  F019         	goto	u4901
 11062  00330E  5034               	movf	(___flmul@temp+1)^0,w,c
 11063  003310  E108               	bnz	u4900
 11064  003312  2833               	incf	___flmul@temp^0,w,c
 11065  003314  A0D8               	btfss	status,0,c
 11066  003316  EF8F  F019         	goto	u4901
 11067  00331A  EF91  F019         	goto	u4900
 11068  00331E                     u4901:
 11069  00331E  EF9B  F019         	goto	l4473
 11070  003322                     u4900:
 11071  003322  0E00               	movlw	0
 11072  003324  6E2F               	movwf	___flmul@prod^0,c
 11073  003326  0E00               	movlw	0
 11074  003328  6E30               	movwf	(___flmul@prod+1)^0,c
 11075  00332A  0E80               	movlw	128
 11076  00332C  6E31               	movwf	(___flmul@prod+2)^0,c
 11077  00332E  0E7F               	movlw	127
 11078  003330  6E32               	movwf	(___flmul@prod+3)^0,c
 11079  003332  EFC9  F019         	goto	l4485
 11080  003336                     l4473:
 11081  003336  BE34               	btfsc	(___flmul@temp+1)^0,7,c
 11082  003338  EFA8  F019         	goto	u4910
 11083  00333C  5034               	movf	(___flmul@temp+1)^0,w,c
 11084  00333E  E106               	bnz	u4911
 11085  003340  0433               	decf	___flmul@temp^0,w,c
 11086  003342  B0D8               	btfsc	status,0,c
 11087  003344  EFA6  F019         	goto	u4911
 11088  003348  EFA8  F019         	goto	u4910
 11089  00334C                     u4911:
 11090  00334C  EFB4  F019         	goto	l1119
 11091  003350                     u4910:
 11092  003350  0E00               	movlw	0
 11093  003352  6E2F               	movwf	___flmul@prod^0,c
 11094  003354  0E00               	movlw	0
 11095  003356  6E30               	movwf	(___flmul@prod+1)^0,c
 11096  003358  0E00               	movlw	0
 11097  00335A  6E31               	movwf	(___flmul@prod+2)^0,c
 11098  00335C  0E00               	movlw	0
 11099  00335E  6E32               	movwf	(___flmul@prod+3)^0,c
 11100  003360  0E00               	movlw	0
 11101  003362  6E28               	movwf	___flmul@sign^0,c
 11102  003364  EFC9  F019         	goto	l4485
 11103  003368                     l1119:
 11104  003368  C033  F02E         	movff	___flmul@temp,___flmul@bexp
 11105  00336C  0EFF               	movlw	255
 11106  00336E  162F               	andwf	___flmul@prod^0,f,c
 11107  003370  0EFF               	movlw	255
 11108  003372  1630               	andwf	(___flmul@prod+1)^0,f,c
 11109  003374  0E7F               	movlw	127
 11110  003376  1631               	andwf	(___flmul@prod+2)^0,f,c
 11111  003378  0E00               	movlw	0
 11112  00337A  1632               	andwf	(___flmul@prod+3)^0,f,c
 11113  00337C  A02E               	btfss	___flmul@bexp^0,0,c
 11114  00337E  EFC3  F019         	goto	u4921
 11115  003382  EFC5  F019         	goto	u4920
 11116  003386                     u4921:
 11117  003386  EFC6  F019         	goto	l4483
 11118  00338A                     u4920:
 11119  00338A  8E31               	bsf	(___flmul@prod+2)^0,7,c
 11120  00338C                     l4483:
 11121  00338C  90D8               	bcf	status,0,c
 11122  00338E  302E               	rrcf	___flmul@bexp^0,w,c
 11123  003390  6E32               	movwf	(___flmul@prod+3)^0,c
 11124  003392                     l4485:
 11125  003392  5028               	movf	___flmul@sign^0,w,c
 11126  003394  1232               	iorwf	(___flmul@prod+3)^0,f,c
 11127  003396  C02F  F01C         	movff	___flmul@prod,?___flmul
 11128  00339A  C030  F01D         	movff	___flmul@prod+1,?___flmul+1
 11129  00339E  C031  F01E         	movff	___flmul@prod+2,?___flmul+2
 11130  0033A2  C032  F01F         	movff	___flmul@prod+3,?___flmul+3
 11131  0033A6                     l1106:
 11132  0033A6  0012               	return		;funcret
 11133  0033A8                     __end_of___flmul:
 11134                           	callstack 0
 11135                           
 11136 ;; *************** function ___flge *****************
 11137 ;; Defined at:
 11138 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
 11139 ;; Parameters:    Size  Location     Type
 11140 ;;  ff1             4   52[COMRAM] unsigned char 
 11141 ;;  ff2             4   56[COMRAM] unsigned char 
 11142 ;; Auto vars:     Size  Location     Type
 11143 ;;		None
 11144 ;; Return value:  Size  Location     Type
 11145 ;;		None               void
 11146 ;; Registers used:
 11147 ;;		wreg, status,2, status,0
 11148 ;; Tracked objects:
 11149 ;;		On entry : 0/0
 11150 ;;		On exit  : 0/0
 11151 ;;		Unchanged: 0/0
 11152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11153 ;;      Params:         8       0       0       0       0       0       0
 11154 ;;      Locals:         0       0       0       0       0       0       0
 11155 ;;      Temps:          4       0       0       0       0       0       0
 11156 ;;      Totals:        12       0       0       0       0       0       0
 11157 ;;Total ram usage:       12 bytes
 11158 ;; Hardware stack levels used:    1
 11159 ;; Hardware stack levels required when called:    1
 11160 ;; This function calls:
 11161 ;;		Nothing
 11162 ;; This function is called by:
 11163 ;;		_stateMachine
 11164 ;;		_efgtoa
 11165 ;; This function uses a non-reentrant model
 11166 ;;
 11167                           
 11168                           	psect	text34
 11169  004ABE                     __ptext34:
 11170                           	callstack 0
 11171  004ABE                     ___flge:
 11172                           	callstack 23
 11173  004ABE  0E00               	movlw	0
 11174  004AC0  1435               	andwf	___flge@ff1^0,w,c
 11175  004AC2  6E3D               	movwf	??___flge^0,c
 11176  004AC4  0E00               	movlw	0
 11177  004AC6  1436               	andwf	(___flge@ff1+1)^0,w,c
 11178  004AC8  6E3E               	movwf	(??___flge+1)^0,c
 11179  004ACA  0E80               	movlw	128
 11180  004ACC  1437               	andwf	(___flge@ff1+2)^0,w,c
 11181  004ACE  6E3F               	movwf	(??___flge+2)^0,c
 11182  004AD0  0E7F               	movlw	127
 11183  004AD2  1438               	andwf	(___flge@ff1+3)^0,w,c
 11184  004AD4  6E40               	movwf	(??___flge+3)^0,c
 11185  004AD6  503D               	movf	??___flge^0,w,c
 11186  004AD8  103E               	iorwf	(??___flge+1)^0,w,c
 11187  004ADA  103F               	iorwf	(??___flge+2)^0,w,c
 11188  004ADC  1040               	iorwf	(??___flge+3)^0,w,c
 11189  004ADE  A4D8               	btfss	status,2,c
 11190  004AE0  EF74  F025         	goto	u5081
 11191  004AE4  EF76  F025         	goto	u5080
 11192  004AE8                     u5081:
 11193  004AE8  EF7E  F025         	goto	l4597
 11194  004AEC                     u5080:
 11195  004AEC  0E00               	movlw	0
 11196  004AEE  6E35               	movwf	___flge@ff1^0,c
 11197  004AF0  0E00               	movlw	0
 11198  004AF2  6E36               	movwf	(___flge@ff1+1)^0,c
 11199  004AF4  0E00               	movlw	0
 11200  004AF6  6E37               	movwf	(___flge@ff1+2)^0,c
 11201  004AF8  0E00               	movlw	0
 11202  004AFA  6E38               	movwf	(___flge@ff1+3)^0,c
 11203  004AFC                     l4597:
 11204  004AFC  0E00               	movlw	0
 11205  004AFE  1439               	andwf	___flge@ff2^0,w,c
 11206  004B00  6E3D               	movwf	??___flge^0,c
 11207  004B02  0E00               	movlw	0
 11208  004B04  143A               	andwf	(___flge@ff2+1)^0,w,c
 11209  004B06  6E3E               	movwf	(??___flge+1)^0,c
 11210  004B08  0E80               	movlw	128
 11211  004B0A  143B               	andwf	(___flge@ff2+2)^0,w,c
 11212  004B0C  6E3F               	movwf	(??___flge+2)^0,c
 11213  004B0E  0E7F               	movlw	127
 11214  004B10  143C               	andwf	(___flge@ff2+3)^0,w,c
 11215  004B12  6E40               	movwf	(??___flge+3)^0,c
 11216  004B14  503D               	movf	??___flge^0,w,c
 11217  004B16  103E               	iorwf	(??___flge+1)^0,w,c
 11218  004B18  103F               	iorwf	(??___flge+2)^0,w,c
 11219  004B1A  1040               	iorwf	(??___flge+3)^0,w,c
 11220  004B1C  A4D8               	btfss	status,2,c
 11221  004B1E  EF93  F025         	goto	u5091
 11222  004B22  EF95  F025         	goto	u5090
 11223  004B26                     u5091:
 11224  004B26  EF9D  F025         	goto	l4601
 11225  004B2A                     u5090:
 11226  004B2A  0E00               	movlw	0
 11227  004B2C  6E39               	movwf	___flge@ff2^0,c
 11228  004B2E  0E00               	movlw	0
 11229  004B30  6E3A               	movwf	(___flge@ff2+1)^0,c
 11230  004B32  0E00               	movlw	0
 11231  004B34  6E3B               	movwf	(___flge@ff2+2)^0,c
 11232  004B36  0E00               	movlw	0
 11233  004B38  6E3C               	movwf	(___flge@ff2+3)^0,c
 11234  004B3A                     l4601:
 11235  004B3A  AE38               	btfss	(___flge@ff1+3)^0,7,c
 11236  004B3C  EFA2  F025         	goto	u5101
 11237  004B40  EFA4  F025         	goto	u5100
 11238  004B44                     u5101:
 11239  004B44  EFAD  F025         	goto	l4605
 11240  004B48                     u5100:
 11241  004B48  6C35               	negf	___flge@ff1^0,c
 11242  004B4A  1E36               	comf	(___flge@ff1+1)^0,f,c
 11243  004B4C  B0D8               	btfsc	status,0,c
 11244  004B4E  2A36               	incf	(___flge@ff1+1)^0,f,c
 11245  004B50  1E37               	comf	(___flge@ff1+2)^0,f,c
 11246  004B52  B0D8               	btfsc	status,0,c
 11247  004B54  2A37               	incf	(___flge@ff1+2)^0,f,c
 11248  004B56  0E80               	movlw	128
 11249  004B58  5638               	subfwb	(___flge@ff1+3)^0,f,c
 11250  004B5A                     l4605:
 11251  004B5A  AE3C               	btfss	(___flge@ff2+3)^0,7,c
 11252  004B5C  EFB2  F025         	goto	u5111
 11253  004B60  EFB4  F025         	goto	u5110
 11254  004B64                     u5111:
 11255  004B64  EFBD  F025         	goto	l753
 11256  004B68                     u5110:
 11257  004B68  6C39               	negf	___flge@ff2^0,c
 11258  004B6A  1E3A               	comf	(___flge@ff2+1)^0,f,c
 11259  004B6C  B0D8               	btfsc	status,0,c
 11260  004B6E  2A3A               	incf	(___flge@ff2+1)^0,f,c
 11261  004B70  1E3B               	comf	(___flge@ff2+2)^0,f,c
 11262  004B72  B0D8               	btfsc	status,0,c
 11263  004B74  2A3B               	incf	(___flge@ff2+2)^0,f,c
 11264  004B76  0E80               	movlw	128
 11265  004B78  563C               	subfwb	(___flge@ff2+3)^0,f,c
 11266  004B7A                     l753:
 11267  004B7A  0E00               	movlw	0
 11268  004B7C  1A35               	xorwf	___flge@ff1^0,f,c
 11269  004B7E  0E00               	movlw	0
 11270  004B80  1A36               	xorwf	(___flge@ff1+1)^0,f,c
 11271  004B82  0E00               	movlw	0
 11272  004B84  1A37               	xorwf	(___flge@ff1+2)^0,f,c
 11273  004B86  0E80               	movlw	128
 11274  004B88  1A38               	xorwf	(___flge@ff1+3)^0,f,c
 11275  004B8A  0E00               	movlw	0
 11276  004B8C  1A39               	xorwf	___flge@ff2^0,f,c
 11277  004B8E  0E00               	movlw	0
 11278  004B90  1A3A               	xorwf	(___flge@ff2+1)^0,f,c
 11279  004B92  0E00               	movlw	0
 11280  004B94  1A3B               	xorwf	(___flge@ff2+2)^0,f,c
 11281  004B96  0E80               	movlw	128
 11282  004B98  1A3C               	xorwf	(___flge@ff2+3)^0,f,c
 11283  004B9A  5039               	movf	___flge@ff2^0,w,c
 11284  004B9C  5C35               	subwf	___flge@ff1^0,w,c
 11285  004B9E  503A               	movf	(___flge@ff2+1)^0,w,c
 11286  004BA0  5836               	subwfb	(___flge@ff1+1)^0,w,c
 11287  004BA2  503B               	movf	(___flge@ff2+2)^0,w,c
 11288  004BA4  5837               	subwfb	(___flge@ff1+2)^0,w,c
 11289  004BA6  503C               	movf	(___flge@ff2+3)^0,w,c
 11290  004BA8  5838               	subwfb	(___flge@ff1+3)^0,w,c
 11291  004BAA  B0D8               	btfsc	status,0,c
 11292  004BAC  EFDA  F025         	goto	u5121
 11293  004BB0  EFDC  F025         	goto	u5120
 11294  004BB4                     u5121:
 11295  004BB4  EFDF  F025         	goto	l4611
 11296  004BB8                     u5120:
 11297  004BB8  90D8               	bcf	status,0,c
 11298  004BBA  EFE0  F025         	goto	l758
 11299  004BBE                     l4611:
 11300  004BBE  80D8               	bsf	status,0,c
 11301  004BC0                     l758:
 11302  004BC0  0012               	return		;funcret
 11303  004BC2                     __end_of___flge:
 11304                           	callstack 0
 11305                           
 11306 ;; *************** function ___fleq *****************
 11307 ;; Defined at:
 11308 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fleq.c"
 11309 ;; Parameters:    Size  Location     Type
 11310 ;;  ff1             4    0[COMRAM] unsigned char 
 11311 ;;  ff2             4    4[COMRAM] unsigned char 
 11312 ;; Auto vars:     Size  Location     Type
 11313 ;;		None
 11314 ;; Return value:  Size  Location     Type
 11315 ;;		None               void
 11316 ;; Registers used:
 11317 ;;		wreg, status,2, status,0
 11318 ;; Tracked objects:
 11319 ;;		On entry : 0/0
 11320 ;;		On exit  : 0/0
 11321 ;;		Unchanged: 0/0
 11322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11323 ;;      Params:         8       0       0       0       0       0       0
 11324 ;;      Locals:         0       0       0       0       0       0       0
 11325 ;;      Temps:          4       0       0       0       0       0       0
 11326 ;;      Totals:        12       0       0       0       0       0       0
 11327 ;;Total ram usage:       12 bytes
 11328 ;; Hardware stack levels used:    1
 11329 ;; Hardware stack levels required when called:    1
 11330 ;; This function calls:
 11331 ;;		Nothing
 11332 ;; This function is called by:
 11333 ;;		_efgtoa
 11334 ;; This function uses a non-reentrant model
 11335 ;;
 11336                           
 11337                           	psect	text35
 11338  005194                     __ptext35:
 11339                           	callstack 0
 11340  005194                     ___fleq:
 11341                           	callstack 23
 11342  005194  0E00               	movlw	0
 11343  005196  1401               	andwf	___fleq@ff1^0,w,c
 11344  005198  6E09               	movwf	??___fleq^0,c
 11345  00519A  0E00               	movlw	0
 11346  00519C  1402               	andwf	(___fleq@ff1+1)^0,w,c
 11347  00519E  6E0A               	movwf	(??___fleq+1)^0,c
 11348  0051A0  0E80               	movlw	128
 11349  0051A2  1403               	andwf	(___fleq@ff1+2)^0,w,c
 11350  0051A4  6E0B               	movwf	(??___fleq+2)^0,c
 11351  0051A6  0E7F               	movlw	127
 11352  0051A8  1404               	andwf	(___fleq@ff1+3)^0,w,c
 11353  0051AA  6E0C               	movwf	(??___fleq+3)^0,c
 11354  0051AC  5009               	movf	??___fleq^0,w,c
 11355  0051AE  100A               	iorwf	(??___fleq+1)^0,w,c
 11356  0051B0  100B               	iorwf	(??___fleq+2)^0,w,c
 11357  0051B2  100C               	iorwf	(??___fleq+3)^0,w,c
 11358  0051B4  A4D8               	btfss	status,2,c
 11359  0051B6  EFDF  F028         	goto	u5051
 11360  0051BA  EFE1  F028         	goto	u5050
 11361  0051BE                     u5051:
 11362  0051BE  EFE9  F028         	goto	l4581
 11363  0051C2                     u5050:
 11364  0051C2  0E00               	movlw	0
 11365  0051C4  6E01               	movwf	___fleq@ff1^0,c
 11366  0051C6  0E00               	movlw	0
 11367  0051C8  6E02               	movwf	(___fleq@ff1+1)^0,c
 11368  0051CA  0E00               	movlw	0
 11369  0051CC  6E03               	movwf	(___fleq@ff1+2)^0,c
 11370  0051CE  0E00               	movlw	0
 11371  0051D0  6E04               	movwf	(___fleq@ff1+3)^0,c
 11372  0051D2                     l4581:
 11373  0051D2  0E00               	movlw	0
 11374  0051D4  1405               	andwf	___fleq@ff2^0,w,c
 11375  0051D6  6E09               	movwf	??___fleq^0,c
 11376  0051D8  0E00               	movlw	0
 11377  0051DA  1406               	andwf	(___fleq@ff2+1)^0,w,c
 11378  0051DC  6E0A               	movwf	(??___fleq+1)^0,c
 11379  0051DE  0E80               	movlw	128
 11380  0051E0  1407               	andwf	(___fleq@ff2+2)^0,w,c
 11381  0051E2  6E0B               	movwf	(??___fleq+2)^0,c
 11382  0051E4  0E7F               	movlw	127
 11383  0051E6  1408               	andwf	(___fleq@ff2+3)^0,w,c
 11384  0051E8  6E0C               	movwf	(??___fleq+3)^0,c
 11385  0051EA  5009               	movf	??___fleq^0,w,c
 11386  0051EC  100A               	iorwf	(??___fleq+1)^0,w,c
 11387  0051EE  100B               	iorwf	(??___fleq+2)^0,w,c
 11388  0051F0  100C               	iorwf	(??___fleq+3)^0,w,c
 11389  0051F2  A4D8               	btfss	status,2,c
 11390  0051F4  EFFE  F028         	goto	u5061
 11391  0051F8  EF00  F029         	goto	u5060
 11392  0051FC                     u5061:
 11393  0051FC  EF08  F029         	goto	l4585
 11394  005200                     u5060:
 11395  005200  0E00               	movlw	0
 11396  005202  6E05               	movwf	___fleq@ff2^0,c
 11397  005204  0E00               	movlw	0
 11398  005206  6E06               	movwf	(___fleq@ff2+1)^0,c
 11399  005208  0E00               	movlw	0
 11400  00520A  6E07               	movwf	(___fleq@ff2+2)^0,c
 11401  00520C  0E00               	movlw	0
 11402  00520E  6E08               	movwf	(___fleq@ff2+3)^0,c
 11403  005210                     l4585:
 11404  005210  5005               	movf	___fleq@ff2^0,w,c
 11405  005212  1801               	xorwf	___fleq@ff1^0,w,c
 11406  005214  E10F               	bnz	u5070
 11407  005216  5006               	movf	(___fleq@ff2+1)^0,w,c
 11408  005218  1802               	xorwf	(___fleq@ff1+1)^0,w,c
 11409  00521A  E10C               	bnz	u5070
 11410  00521C  5007               	movf	(___fleq@ff2+2)^0,w,c
 11411  00521E  1803               	xorwf	(___fleq@ff1+2)^0,w,c
 11412  005220  E109               	bnz	u5070
 11413  005222  5008               	movf	(___fleq@ff2+3)^0,w,c
 11414  005224  1804               	xorwf	(___fleq@ff1+3)^0,w,c
 11415  005226  B4D8               	btfsc	status,2,c
 11416  005228  EF18  F029         	goto	u5071
 11417  00522C  EF1A  F029         	goto	u5070
 11418  005230                     u5071:
 11419  005230  EF1D  F029         	goto	l4589
 11420  005234                     u5070:
 11421  005234  90D8               	bcf	status,0,c
 11422  005236  EF1E  F029         	goto	l747
 11423  00523A                     l4589:
 11424  00523A  80D8               	bsf	status,0,c
 11425  00523C                     l747:
 11426  00523C  0012               	return		;funcret
 11427  00523E                     __end_of___fleq:
 11428                           	callstack 0
 11429                           
 11430 ;; *************** function ___fldiv *****************
 11431 ;; Defined at:
 11432 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
 11433 ;; Parameters:    Size  Location     Type
 11434 ;;  b               4   52[COMRAM] unsigned char 
 11435 ;;  a               4   56[COMRAM] unsigned char 
 11436 ;; Auto vars:     Size  Location     Type
 11437 ;;  grs             4   71[COMRAM] unsigned long 
 11438 ;;  rem             4   64[COMRAM] unsigned long 
 11439 ;;  new_exp         2   69[COMRAM] short 
 11440 ;;  aexp            1   76[COMRAM] unsigned char 
 11441 ;;  bexp            1   75[COMRAM] unsigned char 
 11442 ;;  sign            1   68[COMRAM] unsigned char 
 11443 ;; Return value:  Size  Location     Type
 11444 ;;                  4   52[COMRAM] unsigned char 
 11445 ;; Registers used:
 11446 ;;		wreg, status,2, status,0
 11447 ;; Tracked objects:
 11448 ;;		On entry : 0/0
 11449 ;;		On exit  : 0/0
 11450 ;;		Unchanged: 0/0
 11451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11452 ;;      Params:         8       0       0       0       0       0       0
 11453 ;;      Locals:        13       0       0       0       0       0       0
 11454 ;;      Temps:          4       0       0       0       0       0       0
 11455 ;;      Totals:        25       0       0       0       0       0       0
 11456 ;;Total ram usage:       25 bytes
 11457 ;; Hardware stack levels used:    1
 11458 ;; Hardware stack levels required when called:    1
 11459 ;; This function calls:
 11460 ;;		Nothing
 11461 ;; This function is called by:
 11462 ;;		_scanAdcConversion
 11463 ;;		_efgtoa
 11464 ;; This function uses a non-reentrant model
 11465 ;;
 11466                           
 11467                           	psect	text36
 11468  0033A8                     __ptext36:
 11469                           	callstack 0
 11470  0033A8                     ___fldiv:
 11471                           	callstack 25
 11472  0033A8  5038               	movf	(___fldiv@b+3)^0,w,c
 11473  0033AA  0B80               	andlw	128
 11474  0033AC  6E45               	movwf	___fldiv@sign^0,c
 11475  0033AE  5038               	movf	(___fldiv@b+3)^0,w,c
 11476  0033B0  2438               	addwf	(___fldiv@b+3)^0,w,c
 11477  0033B2  6E4C               	movwf	___fldiv@bexp^0,c
 11478  0033B4  AE37               	btfss	(___fldiv@b+2)^0,7,c
 11479  0033B6  EFDF  F019         	goto	u4511
 11480  0033BA  EFE1  F019         	goto	u4510
 11481  0033BE                     u4511:
 11482  0033BE  EFE2  F019         	goto	l4229
 11483  0033C2                     u4510:
 11484  0033C2  804C               	bsf	___fldiv@bexp^0,0,c
 11485  0033C4                     l4229:
 11486  0033C4  504C               	movf	___fldiv@bexp^0,w,c
 11487  0033C6  B4D8               	btfsc	status,2,c
 11488  0033C8  EFE8  F019         	goto	u4521
 11489  0033CC  EFEA  F019         	goto	u4520
 11490  0033D0                     u4521:
 11491  0033D0  EFFF  F019         	goto	l4239
 11492  0033D4                     u4520:
 11493  0033D4  284C               	incf	___fldiv@bexp^0,w,c
 11494  0033D6  A4D8               	btfss	status,2,c
 11495  0033D8  EFF0  F019         	goto	u4531
 11496  0033DC  EFF2  F019         	goto	u4530
 11497  0033E0                     u4531:
 11498  0033E0  EFFA  F019         	goto	l4235
 11499  0033E4                     u4530:
 11500  0033E4  0E00               	movlw	0
 11501  0033E6  6E35               	movwf	___fldiv@b^0,c
 11502  0033E8  0E00               	movlw	0
 11503  0033EA  6E36               	movwf	(___fldiv@b+1)^0,c
 11504  0033EC  0E00               	movlw	0
 11505  0033EE  6E37               	movwf	(___fldiv@b+2)^0,c
 11506  0033F0  0E00               	movlw	0
 11507  0033F2  6E38               	movwf	(___fldiv@b+3)^0,c
 11508  0033F4                     l4235:
 11509  0033F4  8E37               	bsf	(___fldiv@b+2)^0,7,c
 11510  0033F6  0E00               	movlw	0
 11511  0033F8  6E38               	movwf	(___fldiv@b+3)^0,c
 11512  0033FA  EF07  F01A         	goto	l4241
 11513  0033FE                     l4239:
 11514  0033FE  0E00               	movlw	0
 11515  003400  6E35               	movwf	___fldiv@b^0,c
 11516  003402  0E00               	movlw	0
 11517  003404  6E36               	movwf	(___fldiv@b+1)^0,c
 11518  003406  0E00               	movlw	0
 11519  003408  6E37               	movwf	(___fldiv@b+2)^0,c
 11520  00340A  0E00               	movlw	0
 11521  00340C  6E38               	movwf	(___fldiv@b+3)^0,c
 11522  00340E                     l4241:
 11523  00340E  503C               	movf	(___fldiv@a+3)^0,w,c
 11524  003410  0B80               	andlw	128
 11525  003412  1A45               	xorwf	___fldiv@sign^0,f,c
 11526  003414  503C               	movf	(___fldiv@a+3)^0,w,c
 11527  003416  243C               	addwf	(___fldiv@a+3)^0,w,c
 11528  003418  6E4D               	movwf	___fldiv@aexp^0,c
 11529  00341A  AE3B               	btfss	(___fldiv@a+2)^0,7,c
 11530  00341C  EF12  F01A         	goto	u4541
 11531  003420  EF14  F01A         	goto	u4540
 11532  003424                     u4541:
 11533  003424  EF15  F01A         	goto	l4249
 11534  003428                     u4540:
 11535  003428  804D               	bsf	___fldiv@aexp^0,0,c
 11536  00342A                     l4249:
 11537  00342A  504D               	movf	___fldiv@aexp^0,w,c
 11538  00342C  B4D8               	btfsc	status,2,c
 11539  00342E  EF1B  F01A         	goto	u4551
 11540  003432  EF1D  F01A         	goto	u4550
 11541  003436                     u4551:
 11542  003436  EF32  F01A         	goto	l4259
 11543  00343A                     u4550:
 11544  00343A  284D               	incf	___fldiv@aexp^0,w,c
 11545  00343C  A4D8               	btfss	status,2,c
 11546  00343E  EF23  F01A         	goto	u4561
 11547  003442  EF25  F01A         	goto	u4560
 11548  003446                     u4561:
 11549  003446  EF2D  F01A         	goto	l4255
 11550  00344A                     u4560:
 11551  00344A  0E00               	movlw	0
 11552  00344C  6E39               	movwf	___fldiv@a^0,c
 11553  00344E  0E00               	movlw	0
 11554  003450  6E3A               	movwf	(___fldiv@a+1)^0,c
 11555  003452  0E00               	movlw	0
 11556  003454  6E3B               	movwf	(___fldiv@a+2)^0,c
 11557  003456  0E00               	movlw	0
 11558  003458  6E3C               	movwf	(___fldiv@a+3)^0,c
 11559  00345A                     l4255:
 11560  00345A  8E3B               	bsf	(___fldiv@a+2)^0,7,c
 11561  00345C  0E00               	movlw	0
 11562  00345E  6E3C               	movwf	(___fldiv@a+3)^0,c
 11563  003460  EF3A  F01A         	goto	l4261
 11564  003464                     l4259:
 11565  003464  0E00               	movlw	0
 11566  003466  6E39               	movwf	___fldiv@a^0,c
 11567  003468  0E00               	movlw	0
 11568  00346A  6E3A               	movwf	(___fldiv@a+1)^0,c
 11569  00346C  0E00               	movlw	0
 11570  00346E  6E3B               	movwf	(___fldiv@a+2)^0,c
 11571  003470  0E00               	movlw	0
 11572  003472  6E3C               	movwf	(___fldiv@a+3)^0,c
 11573  003474                     l4261:
 11574  003474  5039               	movf	___fldiv@a^0,w,c
 11575  003476  103A               	iorwf	(___fldiv@a+1)^0,w,c
 11576  003478  103B               	iorwf	(___fldiv@a+2)^0,w,c
 11577  00347A  103C               	iorwf	(___fldiv@a+3)^0,w,c
 11578  00347C  A4D8               	btfss	status,2,c
 11579  00347E  EF43  F01A         	goto	u4571
 11580  003482  EF45  F01A         	goto	u4570
 11581  003486                     u4571:
 11582  003486  EF5D  F01A         	goto	l4273
 11583  00348A                     u4570:
 11584  00348A  0E00               	movlw	0
 11585  00348C  6E35               	movwf	___fldiv@b^0,c
 11586  00348E  0E00               	movlw	0
 11587  003490  6E36               	movwf	(___fldiv@b+1)^0,c
 11588  003492  0E00               	movlw	0
 11589  003494  6E37               	movwf	(___fldiv@b+2)^0,c
 11590  003496  0E00               	movlw	0
 11591  003498  6E38               	movwf	(___fldiv@b+3)^0,c
 11592  00349A  0E80               	movlw	128
 11593  00349C  1237               	iorwf	(___fldiv@b+2)^0,f,c
 11594  00349E  0E7F               	movlw	127
 11595  0034A0  1238               	iorwf	(___fldiv@b+3)^0,f,c
 11596  0034A2                     l4267:
 11597  0034A2  5045               	movf	___fldiv@sign^0,w,c
 11598  0034A4  1238               	iorwf	(___fldiv@b+3)^0,f,c
 11599  0034A6  C035  F035         	movff	___fldiv@b,?___fldiv
 11600  0034AA  C036  F036         	movff	___fldiv@b+1,?___fldiv+1
 11601  0034AE  C037  F037         	movff	___fldiv@b+2,?___fldiv+2
 11602  0034B2  C038  F038         	movff	___fldiv@b+3,?___fldiv+3
 11603  0034B6  EFA0  F01B         	goto	l1070
 11604  0034BA                     l4273:
 11605  0034BA  504C               	movf	___fldiv@bexp^0,w,c
 11606  0034BC  A4D8               	btfss	status,2,c
 11607  0034BE  EF63  F01A         	goto	u4581
 11608  0034C2  EF65  F01A         	goto	u4580
 11609  0034C6                     u4581:
 11610  0034C6  EF6F  F01A         	goto	l4281
 11611  0034CA                     u4580:
 11612  0034CA  0E00               	movlw	0
 11613  0034CC  6E35               	movwf	?___fldiv^0,c
 11614  0034CE  0E00               	movlw	0
 11615  0034D0  6E36               	movwf	(?___fldiv+1)^0,c
 11616  0034D2  0E00               	movlw	0
 11617  0034D4  6E37               	movwf	(?___fldiv+2)^0,c
 11618  0034D6  0E00               	movlw	0
 11619  0034D8  6E38               	movwf	(?___fldiv+3)^0,c
 11620  0034DA  EFA0  F01B         	goto	l1070
 11621  0034DE                     l4281:
 11622  0034DE  504D               	movf	___fldiv@aexp^0,w,c
 11623  0034E0  C04C  F03D         	movff	___fldiv@bexp,??___fldiv
 11624  0034E4  6A3E               	clrf	(??___fldiv+1)^0,c
 11625  0034E6  5E3D               	subwf	??___fldiv^0,f,c
 11626  0034E8  0E00               	movlw	0
 11627  0034EA  5A3E               	subwfb	(??___fldiv+1)^0,f,c
 11628  0034EC  0E7F               	movlw	127
 11629  0034EE  243D               	addwf	??___fldiv^0,w,c
 11630  0034F0  6E46               	movwf	___fldiv@new_exp^0,c
 11631  0034F2  0E00               	movlw	0
 11632  0034F4  203E               	addwfc	(??___fldiv+1)^0,w,c
 11633  0034F6  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 11634  0034F8  C035  F041         	movff	___fldiv@b,___fldiv@rem
 11635  0034FC  C036  F042         	movff	___fldiv@b+1,___fldiv@rem+1
 11636  003500  C037  F043         	movff	___fldiv@b+2,___fldiv@rem+2
 11637  003504  C038  F044         	movff	___fldiv@b+3,___fldiv@rem+3
 11638  003508  0E00               	movlw	0
 11639  00350A  6E35               	movwf	___fldiv@b^0,c
 11640  00350C  0E00               	movlw	0
 11641  00350E  6E36               	movwf	(___fldiv@b+1)^0,c
 11642  003510  0E00               	movlw	0
 11643  003512  6E37               	movwf	(___fldiv@b+2)^0,c
 11644  003514  0E00               	movlw	0
 11645  003516  6E38               	movwf	(___fldiv@b+3)^0,c
 11646  003518  0E00               	movlw	0
 11647  00351A  6E48               	movwf	___fldiv@grs^0,c
 11648  00351C  0E00               	movlw	0
 11649  00351E  6E49               	movwf	(___fldiv@grs+1)^0,c
 11650  003520  0E00               	movlw	0
 11651  003522  6E4A               	movwf	(___fldiv@grs+2)^0,c
 11652  003524  0E00               	movlw	0
 11653  003526  6E4B               	movwf	(___fldiv@grs+3)^0,c
 11654  003528  0E00               	movlw	0
 11655  00352A  6E4D               	movwf	___fldiv@aexp^0,c
 11656  00352C  EFD0  F01A         	goto	l1072
 11657  003530                     l4291:
 11658  003530  504D               	movf	___fldiv@aexp^0,w,c
 11659  003532  B4D8               	btfsc	status,2,c
 11660  003534  EF9E  F01A         	goto	u4591
 11661  003538  EFA0  F01A         	goto	u4590
 11662  00353C                     u4591:
 11663  00353C  EFB7  F01A         	goto	l4299
 11664  003540                     u4590:
 11665  003540  90D8               	bcf	status,0,c
 11666  003542  3641               	rlcf	___fldiv@rem^0,f,c
 11667  003544  3642               	rlcf	(___fldiv@rem+1)^0,f,c
 11668  003546  3643               	rlcf	(___fldiv@rem+2)^0,f,c
 11669  003548  3644               	rlcf	(___fldiv@rem+3)^0,f,c
 11670  00354A  90D8               	bcf	status,0,c
 11671  00354C  3635               	rlcf	___fldiv@b^0,f,c
 11672  00354E  3636               	rlcf	(___fldiv@b+1)^0,f,c
 11673  003550  3637               	rlcf	(___fldiv@b+2)^0,f,c
 11674  003552  3638               	rlcf	(___fldiv@b+3)^0,f,c
 11675  003554  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 11676  003556  EFAF  F01A         	goto	u4601
 11677  00355A  EFB1  F01A         	goto	u4600
 11678  00355E                     u4601:
 11679  00355E  EFB2  F01A         	goto	l1075
 11680  003562                     u4600:
 11681  003562  8035               	bsf	___fldiv@b^0,0,c
 11682  003564                     l1075:
 11683  003564  90D8               	bcf	status,0,c
 11684  003566  3648               	rlcf	___fldiv@grs^0,f,c
 11685  003568  3649               	rlcf	(___fldiv@grs+1)^0,f,c
 11686  00356A  364A               	rlcf	(___fldiv@grs+2)^0,f,c
 11687  00356C  364B               	rlcf	(___fldiv@grs+3)^0,f,c
 11688  00356E                     l4299:
 11689  00356E  5039               	movf	___fldiv@a^0,w,c
 11690  003570  5C41               	subwf	___fldiv@rem^0,w,c
 11691  003572  503A               	movf	(___fldiv@a+1)^0,w,c
 11692  003574  5842               	subwfb	(___fldiv@rem+1)^0,w,c
 11693  003576  503B               	movf	(___fldiv@a+2)^0,w,c
 11694  003578  5843               	subwfb	(___fldiv@rem+2)^0,w,c
 11695  00357A  503C               	movf	(___fldiv@a+3)^0,w,c
 11696  00357C  5844               	subwfb	(___fldiv@rem+3)^0,w,c
 11697  00357E  A0D8               	btfss	status,0,c
 11698  003580  EFC4  F01A         	goto	u4611
 11699  003584  EFC6  F01A         	goto	u4610
 11700  003588                     u4611:
 11701  003588  EFCF  F01A         	goto	l4305
 11702  00358C                     u4610:
 11703  00358C  8C4B               	bsf	(___fldiv@grs+3)^0,6,c
 11704  00358E  5039               	movf	___fldiv@a^0,w,c
 11705  003590  5E41               	subwf	___fldiv@rem^0,f,c
 11706  003592  503A               	movf	(___fldiv@a+1)^0,w,c
 11707  003594  5A42               	subwfb	(___fldiv@rem+1)^0,f,c
 11708  003596  503B               	movf	(___fldiv@a+2)^0,w,c
 11709  003598  5A43               	subwfb	(___fldiv@rem+2)^0,f,c
 11710  00359A  503C               	movf	(___fldiv@a+3)^0,w,c
 11711  00359C  5A44               	subwfb	(___fldiv@rem+3)^0,f,c
 11712  00359E                     l4305:
 11713  00359E  2A4D               	incf	___fldiv@aexp^0,f,c
 11714  0035A0                     l1072:
 11715  0035A0  0E19               	movlw	25
 11716  0035A2  644D               	cpfsgt	___fldiv@aexp^0,c
 11717  0035A4  EFD6  F01A         	goto	u4621
 11718  0035A8  EFD8  F01A         	goto	u4620
 11719  0035AC                     u4621:
 11720  0035AC  EF98  F01A         	goto	l4291
 11721  0035B0                     u4620:
 11722  0035B0  5041               	movf	___fldiv@rem^0,w,c
 11723  0035B2  1042               	iorwf	(___fldiv@rem+1)^0,w,c
 11724  0035B4  1043               	iorwf	(___fldiv@rem+2)^0,w,c
 11725  0035B6  1044               	iorwf	(___fldiv@rem+3)^0,w,c
 11726  0035B8  B4D8               	btfsc	status,2,c
 11727  0035BA  EFE1  F01A         	goto	u4631
 11728  0035BE  EFE3  F01A         	goto	u4630
 11729  0035C2                     u4631:
 11730  0035C2  EFFB  F01A         	goto	l4317
 11731  0035C6                     u4630:
 11732  0035C6  8048               	bsf	___fldiv@grs^0,0,c
 11733  0035C8  EFFB  F01A         	goto	l4317
 11734  0035CC                     l4311:
 11735  0035CC  90D8               	bcf	status,0,c
 11736  0035CE  3635               	rlcf	___fldiv@b^0,f,c
 11737  0035D0  3636               	rlcf	(___fldiv@b+1)^0,f,c
 11738  0035D2  3637               	rlcf	(___fldiv@b+2)^0,f,c
 11739  0035D4  3638               	rlcf	(___fldiv@b+3)^0,f,c
 11740  0035D6  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 11741  0035D8  EFF0  F01A         	goto	u4641
 11742  0035DC  EFF2  F01A         	goto	u4640
 11743  0035E0                     u4641:
 11744  0035E0  EFF3  F01A         	goto	l1081
 11745  0035E4                     u4640:
 11746  0035E4  8035               	bsf	___fldiv@b^0,0,c
 11747  0035E6                     l1081:
 11748  0035E6  90D8               	bcf	status,0,c
 11749  0035E8  3648               	rlcf	___fldiv@grs^0,f,c
 11750  0035EA  3649               	rlcf	(___fldiv@grs+1)^0,f,c
 11751  0035EC  364A               	rlcf	(___fldiv@grs+2)^0,f,c
 11752  0035EE  364B               	rlcf	(___fldiv@grs+3)^0,f,c
 11753  0035F0  0646               	decf	___fldiv@new_exp^0,f,c
 11754  0035F2  A0D8               	btfss	status,0,c
 11755  0035F4  0647               	decf	(___fldiv@new_exp+1)^0,f,c
 11756  0035F6                     l4317:
 11757  0035F6  AE37               	btfss	(___fldiv@b+2)^0,7,c
 11758  0035F8  EF00  F01B         	goto	u4651
 11759  0035FC  EF02  F01B         	goto	u4650
 11760  003600                     u4651:
 11761  003600  EFE6  F01A         	goto	l4311
 11762  003604                     u4650:
 11763  003604  0E00               	movlw	0
 11764  003606  6E4D               	movwf	___fldiv@aexp^0,c
 11765  003608  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 11766  00360A  EF09  F01B         	goto	u4661
 11767  00360E  EF0B  F01B         	goto	u4660
 11768  003612                     u4661:
 11769  003612  EF2F  F01B         	goto	l1083
 11770  003616                     u4660:
 11771  003616  0EFF               	movlw	255
 11772  003618  1448               	andwf	___fldiv@grs^0,w,c
 11773  00361A  6E3D               	movwf	??___fldiv^0,c
 11774  00361C  0EFF               	movlw	255
 11775  00361E  1449               	andwf	(___fldiv@grs+1)^0,w,c
 11776  003620  6E3E               	movwf	(??___fldiv+1)^0,c
 11777  003622  0EFF               	movlw	255
 11778  003624  144A               	andwf	(___fldiv@grs+2)^0,w,c
 11779  003626  6E3F               	movwf	(??___fldiv+2)^0,c
 11780  003628  0E7F               	movlw	127
 11781  00362A  144B               	andwf	(___fldiv@grs+3)^0,w,c
 11782  00362C  6E40               	movwf	(??___fldiv+3)^0,c
 11783  00362E  503D               	movf	??___fldiv^0,w,c
 11784  003630  103E               	iorwf	(??___fldiv+1)^0,w,c
 11785  003632  103F               	iorwf	(??___fldiv+2)^0,w,c
 11786  003634  1040               	iorwf	(??___fldiv+3)^0,w,c
 11787  003636  B4D8               	btfsc	status,2,c
 11788  003638  EF20  F01B         	goto	u4671
 11789  00363C  EF22  F01B         	goto	u4670
 11790  003640                     u4671:
 11791  003640  EF26  F01B         	goto	l1084
 11792  003644                     u4670:
 11793  003644                     l4325:
 11794  003644  0E01               	movlw	1
 11795  003646  6E4D               	movwf	___fldiv@aexp^0,c
 11796  003648  EF2F  F01B         	goto	l1083
 11797  00364C                     l1084:
 11798  00364C  A035               	btfss	___fldiv@b^0,0,c
 11799  00364E  EF2B  F01B         	goto	u4681
 11800  003652  EF2D  F01B         	goto	u4680
 11801  003656                     u4681:
 11802  003656  EF2F  F01B         	goto	l1083
 11803  00365A                     u4680:
 11804  00365A  EF22  F01B         	goto	l4325
 11805  00365E                     l1083:
 11806  00365E  504D               	movf	___fldiv@aexp^0,w,c
 11807  003660  B4D8               	btfsc	status,2,c
 11808  003662  EF35  F01B         	goto	u4691
 11809  003666  EF37  F01B         	goto	u4690
 11810  00366A                     u4691:
 11811  00366A  EF5B  F01B         	goto	l4337
 11812  00366E                     u4690:
 11813  00366E  0E01               	movlw	1
 11814  003670  2635               	addwf	___fldiv@b^0,f,c
 11815  003672  0E00               	movlw	0
 11816  003674  2236               	addwfc	(___fldiv@b+1)^0,f,c
 11817  003676  2237               	addwfc	(___fldiv@b+2)^0,f,c
 11818  003678  2238               	addwfc	(___fldiv@b+3)^0,f,c
 11819  00367A  A038               	btfss	(___fldiv@b+3)^0,0,c
 11820  00367C  EF42  F01B         	goto	u4701
 11821  003680  EF44  F01B         	goto	u4700
 11822  003684                     u4701:
 11823  003684  EF5B  F01B         	goto	l4337
 11824  003688                     u4700:
 11825  003688  C035  F03D         	movff	___fldiv@b,??___fldiv
 11826  00368C  C036  F03E         	movff	___fldiv@b+1,??___fldiv+1
 11827  003690  C037  F03F         	movff	___fldiv@b+2,??___fldiv+2
 11828  003694  C038  F040         	movff	___fldiv@b+3,??___fldiv+3
 11829  003698  3440               	rlcf	(??___fldiv+3)^0,w,c
 11830  00369A  3240               	rrcf	(??___fldiv+3)^0,f,c
 11831  00369C  323F               	rrcf	(??___fldiv+2)^0,f,c
 11832  00369E  323E               	rrcf	(??___fldiv+1)^0,f,c
 11833  0036A0  323D               	rrcf	??___fldiv^0,f,c
 11834  0036A2  C03D  F035         	movff	??___fldiv,___fldiv@b
 11835  0036A6  C03E  F036         	movff	??___fldiv+1,___fldiv@b+1
 11836  0036AA  C03F  F037         	movff	??___fldiv+2,___fldiv@b+2
 11837  0036AE  C040  F038         	movff	??___fldiv+3,___fldiv@b+3
 11838  0036B2  4A46               	infsnz	___fldiv@new_exp^0,f,c
 11839  0036B4  2A47               	incf	(___fldiv@new_exp+1)^0,f,c
 11840  0036B6                     l4337:
 11841  0036B6  BE47               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11842  0036B8  EF66  F01B         	goto	u4711
 11843  0036BC  5047               	movf	(___fldiv@new_exp+1)^0,w,c
 11844  0036BE  E108               	bnz	u4710
 11845  0036C0  2846               	incf	___fldiv@new_exp^0,w,c
 11846  0036C2  A0D8               	btfss	status,0,c
 11847  0036C4  EF66  F01B         	goto	u4711
 11848  0036C8  EF68  F01B         	goto	u4710
 11849  0036CC                     u4711:
 11850  0036CC  EF73  F01B         	goto	l4341
 11851  0036D0                     u4710:
 11852  0036D0  0E00               	movlw	0
 11853  0036D2  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 11854  0036D4  6846               	setf	___fldiv@new_exp^0,c
 11855  0036D6  0E00               	movlw	0
 11856  0036D8  6E35               	movwf	___fldiv@b^0,c
 11857  0036DA  0E00               	movlw	0
 11858  0036DC  6E36               	movwf	(___fldiv@b+1)^0,c
 11859  0036DE  0E00               	movlw	0
 11860  0036E0  6E37               	movwf	(___fldiv@b+2)^0,c
 11861  0036E2  0E00               	movlw	0
 11862  0036E4  6E38               	movwf	(___fldiv@b+3)^0,c
 11863  0036E6                     l4341:
 11864  0036E6  BE47               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11865  0036E8  EF80  F01B         	goto	u4720
 11866  0036EC  5047               	movf	(___fldiv@new_exp+1)^0,w,c
 11867  0036EE  E106               	bnz	u4721
 11868  0036F0  0446               	decf	___fldiv@new_exp^0,w,c
 11869  0036F2  B0D8               	btfsc	status,0,c
 11870  0036F4  EF7E  F01B         	goto	u4721
 11871  0036F8  EF80  F01B         	goto	u4720
 11872  0036FC                     u4721:
 11873  0036FC  EF8E  F01B         	goto	l4345
 11874  003700                     u4720:
 11875  003700  0E00               	movlw	0
 11876  003702  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 11877  003704  0E00               	movlw	0
 11878  003706  6E46               	movwf	___fldiv@new_exp^0,c
 11879  003708  0E00               	movlw	0
 11880  00370A  6E35               	movwf	___fldiv@b^0,c
 11881  00370C  0E00               	movlw	0
 11882  00370E  6E36               	movwf	(___fldiv@b+1)^0,c
 11883  003710  0E00               	movlw	0
 11884  003712  6E37               	movwf	(___fldiv@b+2)^0,c
 11885  003714  0E00               	movlw	0
 11886  003716  6E38               	movwf	(___fldiv@b+3)^0,c
 11887  003718  0E00               	movlw	0
 11888  00371A  6E45               	movwf	___fldiv@sign^0,c
 11889  00371C                     l4345:
 11890  00371C  C046  F04C         	movff	___fldiv@new_exp,___fldiv@bexp
 11891  003720  A04C               	btfss	___fldiv@bexp^0,0,c
 11892  003722  EF95  F01B         	goto	u4731
 11893  003726  EF97  F01B         	goto	u4730
 11894  00372A                     u4731:
 11895  00372A  EF9A  F01B         	goto	l4351
 11896  00372E                     u4730:
 11897  00372E  8E37               	bsf	(___fldiv@b+2)^0,7,c
 11898  003730  EF9B  F01B         	goto	l4353
 11899  003734                     l4351:
 11900  003734  9E37               	bcf	(___fldiv@b+2)^0,7,c
 11901  003736                     l4353:
 11902  003736  90D8               	bcf	status,0,c
 11903  003738  304C               	rrcf	___fldiv@bexp^0,w,c
 11904  00373A  6E38               	movwf	(___fldiv@b+3)^0,c
 11905  00373C  EF51  F01A         	goto	l4267
 11906  003740                     l1070:
 11907  003740  0012               	return		;funcret
 11908  003742                     __end_of___fldiv:
 11909                           	callstack 0
 11910                           
 11911 ;; *************** function ___awmod *****************
 11912 ;; Defined at:
 11913 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
 11914 ;; Parameters:    Size  Location     Type
 11915 ;;  dividend        2    0[COMRAM] int 
 11916 ;;  divisor         2    2[COMRAM] int 
 11917 ;; Auto vars:     Size  Location     Type
 11918 ;;  sign            1    5[COMRAM] unsigned char 
 11919 ;;  counter         1    4[COMRAM] unsigned char 
 11920 ;; Return value:  Size  Location     Type
 11921 ;;                  2    0[COMRAM] int 
 11922 ;; Registers used:
 11923 ;;		wreg, status,2, status,0
 11924 ;; Tracked objects:
 11925 ;;		On entry : 0/0
 11926 ;;		On exit  : 0/0
 11927 ;;		Unchanged: 0/0
 11928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11929 ;;      Params:         4       0       0       0       0       0       0
 11930 ;;      Locals:         2       0       0       0       0       0       0
 11931 ;;      Temps:          0       0       0       0       0       0       0
 11932 ;;      Totals:         6       0       0       0       0       0       0
 11933 ;;Total ram usage:        6 bytes
 11934 ;; Hardware stack levels used:    1
 11935 ;; Hardware stack levels required when called:    1
 11936 ;; This function calls:
 11937 ;;		Nothing
 11938 ;; This function is called by:
 11939 ;;		_efgtoa
 11940 ;; This function uses a non-reentrant model
 11941 ;;
 11942                           
 11943                           	psect	text37
 11944  0050E4                     __ptext37:
 11945                           	callstack 0
 11946  0050E4                     ___awmod:
 11947                           	callstack 23
 11948  0050E4  0E00               	movlw	0
 11949  0050E6  6E06               	movwf	___awmod@sign^0,c
 11950  0050E8  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
 11951  0050EA  EF7B  F028         	goto	u4990
 11952  0050EE  EF79  F028         	goto	u4991
 11953  0050F2                     u4991:
 11954  0050F2  EF81  F028         	goto	l4549
 11955  0050F6                     u4990:
 11956  0050F6  6C01               	negf	___awmod@dividend^0,c
 11957  0050F8  1E02               	comf	(___awmod@dividend+1)^0,f,c
 11958  0050FA  B0D8               	btfsc	status,0,c
 11959  0050FC  2A02               	incf	(___awmod@dividend+1)^0,f,c
 11960  0050FE  0E01               	movlw	1
 11961  005100  6E06               	movwf	___awmod@sign^0,c
 11962  005102                     l4549:
 11963  005102  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
 11964  005104  EF88  F028         	goto	u5000
 11965  005108  EF86  F028         	goto	u5001
 11966  00510C                     u5001:
 11967  00510C  EF8C  F028         	goto	l4553
 11968  005110                     u5000:
 11969  005110  6C03               	negf	___awmod@divisor^0,c
 11970  005112  1E04               	comf	(___awmod@divisor+1)^0,f,c
 11971  005114  B0D8               	btfsc	status,0,c
 11972  005116  2A04               	incf	(___awmod@divisor+1)^0,f,c
 11973  005118                     l4553:
 11974  005118  5003               	movf	___awmod@divisor^0,w,c
 11975  00511A  1004               	iorwf	(___awmod@divisor+1)^0,w,c
 11976  00511C  B4D8               	btfsc	status,2,c
 11977  00511E  EF93  F028         	goto	u5011
 11978  005122  EF95  F028         	goto	u5010
 11979  005126                     u5011:
 11980  005126  EFB9  F028         	goto	l4569
 11981  00512A                     u5010:
 11982  00512A  0E01               	movlw	1
 11983  00512C  6E05               	movwf	___awmod@counter^0,c
 11984  00512E  EF9D  F028         	goto	l4559
 11985  005132                     l4557:
 11986  005132  90D8               	bcf	status,0,c
 11987  005134  3603               	rlcf	___awmod@divisor^0,f,c
 11988  005136  3604               	rlcf	(___awmod@divisor+1)^0,f,c
 11989  005138  2A05               	incf	___awmod@counter^0,f,c
 11990  00513A                     l4559:
 11991  00513A  AE04               	btfss	(___awmod@divisor+1)^0,7,c
 11992  00513C  EFA2  F028         	goto	u5021
 11993  005140  EFA4  F028         	goto	u5020
 11994  005144                     u5021:
 11995  005144  EF99  F028         	goto	l4557
 11996  005148                     u5020:
 11997  005148                     l4561:
 11998  005148  5003               	movf	___awmod@divisor^0,w,c
 11999  00514A  5C01               	subwf	___awmod@dividend^0,w,c
 12000  00514C  5004               	movf	(___awmod@divisor+1)^0,w,c
 12001  00514E  5802               	subwfb	(___awmod@dividend+1)^0,w,c
 12002  005150  A0D8               	btfss	status,0,c
 12003  005152  EFAD  F028         	goto	u5031
 12004  005156  EFAF  F028         	goto	u5030
 12005  00515A                     u5031:
 12006  00515A  EFB3  F028         	goto	l4565
 12007  00515E                     u5030:
 12008  00515E  5003               	movf	___awmod@divisor^0,w,c
 12009  005160  5E01               	subwf	___awmod@dividend^0,f,c
 12010  005162  5004               	movf	(___awmod@divisor+1)^0,w,c
 12011  005164  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
 12012  005166                     l4565:
 12013  005166  90D8               	bcf	status,0,c
 12014  005168  3204               	rrcf	(___awmod@divisor+1)^0,f,c
 12015  00516A  3203               	rrcf	___awmod@divisor^0,f,c
 12016  00516C  2E05               	decfsz	___awmod@counter^0,f,c
 12017  00516E  EFA4  F028         	goto	l4561
 12018  005172                     l4569:
 12019  005172  5006               	movf	___awmod@sign^0,w,c
 12020  005174  B4D8               	btfsc	status,2,c
 12021  005176  EFBF  F028         	goto	u5041
 12022  00517A  EFC1  F028         	goto	u5040
 12023  00517E                     u5041:
 12024  00517E  EFC5  F028         	goto	l4573
 12025  005182                     u5040:
 12026  005182  6C01               	negf	___awmod@dividend^0,c
 12027  005184  1E02               	comf	(___awmod@dividend+1)^0,f,c
 12028  005186  B0D8               	btfsc	status,0,c
 12029  005188  2A02               	incf	(___awmod@dividend+1)^0,f,c
 12030  00518A                     l4573:
 12031  00518A  C001  F001         	movff	___awmod@dividend,?___awmod
 12032  00518E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
 12033  005192  0012               	return		;funcret
 12034  005194                     __end_of___awmod:
 12035                           	callstack 0
 12036                           
 12037 ;; *************** function ___awdiv *****************
 12038 ;; Defined at:
 12039 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
 12040 ;; Parameters:    Size  Location     Type
 12041 ;;  dividend        2    0[COMRAM] int 
 12042 ;;  divisor         2    2[COMRAM] int 
 12043 ;; Auto vars:     Size  Location     Type
 12044 ;;  quotient        2    6[COMRAM] int 
 12045 ;;  sign            1    5[COMRAM] unsigned char 
 12046 ;;  counter         1    4[COMRAM] unsigned char 
 12047 ;; Return value:  Size  Location     Type
 12048 ;;                  2    0[COMRAM] int 
 12049 ;; Registers used:
 12050 ;;		wreg, status,2, status,0
 12051 ;; Tracked objects:
 12052 ;;		On entry : 0/0
 12053 ;;		On exit  : 0/0
 12054 ;;		Unchanged: 0/0
 12055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12056 ;;      Params:         4       0       0       0       0       0       0
 12057 ;;      Locals:         4       0       0       0       0       0       0
 12058 ;;      Temps:          0       0       0       0       0       0       0
 12059 ;;      Totals:         8       0       0       0       0       0       0
 12060 ;;Total ram usage:        8 bytes
 12061 ;; Hardware stack levels used:    1
 12062 ;; Hardware stack levels required when called:    1
 12063 ;; This function calls:
 12064 ;;		Nothing
 12065 ;; This function is called by:
 12066 ;;		_efgtoa
 12067 ;; This function uses a non-reentrant model
 12068 ;;
 12069                           
 12070                           	psect	text38
 12071  005020                     __ptext38:
 12072                           	callstack 0
 12073  005020                     ___awdiv:
 12074                           	callstack 23
 12075  005020  0E00               	movlw	0
 12076  005022  6E06               	movwf	___awdiv@sign^0,c
 12077  005024  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 12078  005026  EF19  F028         	goto	u4930
 12079  00502A  EF17  F028         	goto	u4931
 12080  00502E                     u4931:
 12081  00502E  EF1F  F028         	goto	l4505
 12082  005032                     u4930:
 12083  005032  6C03               	negf	___awdiv@divisor^0,c
 12084  005034  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 12085  005036  B0D8               	btfsc	status,0,c
 12086  005038  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 12087  00503A  0E01               	movlw	1
 12088  00503C  6E06               	movwf	___awdiv@sign^0,c
 12089  00503E                     l4505:
 12090  00503E  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 12091  005040  EF26  F028         	goto	u4940
 12092  005044  EF24  F028         	goto	u4941
 12093  005048                     u4941:
 12094  005048  EF2C  F028         	goto	l4511
 12095  00504C                     u4940:
 12096  00504C  6C01               	negf	___awdiv@dividend^0,c
 12097  00504E  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 12098  005050  B0D8               	btfsc	status,0,c
 12099  005052  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 12100  005054  0E01               	movlw	1
 12101  005056  1A06               	xorwf	___awdiv@sign^0,f,c
 12102  005058                     l4511:
 12103  005058  0E00               	movlw	0
 12104  00505A  6E08               	movwf	(___awdiv@quotient+1)^0,c
 12105  00505C  0E00               	movlw	0
 12106  00505E  6E07               	movwf	___awdiv@quotient^0,c
 12107  005060  5003               	movf	___awdiv@divisor^0,w,c
 12108  005062  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 12109  005064  B4D8               	btfsc	status,2,c
 12110  005066  EF37  F028         	goto	u4951
 12111  00506A  EF39  F028         	goto	u4950
 12112  00506E                     u4951:
 12113  00506E  EF61  F028         	goto	l4533
 12114  005072                     u4950:
 12115  005072  0E01               	movlw	1
 12116  005074  6E05               	movwf	___awdiv@counter^0,c
 12117  005076  EF41  F028         	goto	l4519
 12118  00507A                     l4517:
 12119  00507A  90D8               	bcf	status,0,c
 12120  00507C  3603               	rlcf	___awdiv@divisor^0,f,c
 12121  00507E  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 12122  005080  2A05               	incf	___awdiv@counter^0,f,c
 12123  005082                     l4519:
 12124  005082  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 12125  005084  EF46  F028         	goto	u4961
 12126  005088  EF48  F028         	goto	u4960
 12127  00508C                     u4961:
 12128  00508C  EF3D  F028         	goto	l4517
 12129  005090                     u4960:
 12130  005090                     l4521:
 12131  005090  90D8               	bcf	status,0,c
 12132  005092  3607               	rlcf	___awdiv@quotient^0,f,c
 12133  005094  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 12134  005096  5003               	movf	___awdiv@divisor^0,w,c
 12135  005098  5C01               	subwf	___awdiv@dividend^0,w,c
 12136  00509A  5004               	movf	(___awdiv@divisor+1)^0,w,c
 12137  00509C  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 12138  00509E  A0D8               	btfss	status,0,c
 12139  0050A0  EF54  F028         	goto	u4971
 12140  0050A4  EF56  F028         	goto	u4970
 12141  0050A8                     u4971:
 12142  0050A8  EF5B  F028         	goto	l4529
 12143  0050AC                     u4970:
 12144  0050AC  5003               	movf	___awdiv@divisor^0,w,c
 12145  0050AE  5E01               	subwf	___awdiv@dividend^0,f,c
 12146  0050B0  5004               	movf	(___awdiv@divisor+1)^0,w,c
 12147  0050B2  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 12148  0050B4  8007               	bsf	___awdiv@quotient^0,0,c
 12149  0050B6                     l4529:
 12150  0050B6  90D8               	bcf	status,0,c
 12151  0050B8  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 12152  0050BA  3203               	rrcf	___awdiv@divisor^0,f,c
 12153  0050BC  2E05               	decfsz	___awdiv@counter^0,f,c
 12154  0050BE  EF48  F028         	goto	l4521
 12155  0050C2                     l4533:
 12156  0050C2  5006               	movf	___awdiv@sign^0,w,c
 12157  0050C4  B4D8               	btfsc	status,2,c
 12158  0050C6  EF67  F028         	goto	u4981
 12159  0050CA  EF69  F028         	goto	u4980
 12160  0050CE                     u4981:
 12161  0050CE  EF6D  F028         	goto	l4537
 12162  0050D2                     u4980:
 12163  0050D2  6C07               	negf	___awdiv@quotient^0,c
 12164  0050D4  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 12165  0050D6  B0D8               	btfsc	status,0,c
 12166  0050D8  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 12167  0050DA                     l4537:
 12168  0050DA  C007  F001         	movff	___awdiv@quotient,?___awdiv
 12169  0050DE  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 12170  0050E2  0012               	return		;funcret
 12171  0050E4                     __end_of___awdiv:
 12172                           	callstack 0
 12173                           
 12174 ;; *************** function _dtoa *****************
 12175 ;; Defined at:
 12176 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 12177 ;; Parameters:    Size  Location     Type
 12178 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
 12179 ;;		 -> sprintf@f(6), 
 12180 ;;  d               8   29[COMRAM] long long 
 12181 ;; Auto vars:     Size  Location     Type
 12182 ;;  n               8   53[COMRAM] long long 
 12183 ;;  i               2   61[COMRAM] int 
 12184 ;;  s               2   51[COMRAM] int 
 12185 ;;  w               2   49[COMRAM] int 
 12186 ;;  p               2   47[COMRAM] int 
 12187 ;; Return value:  Size  Location     Type
 12188 ;;                  2   27[COMRAM] int 
 12189 ;; Registers used:
 12190 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12191 ;; Tracked objects:
 12192 ;;		On entry : 0/0
 12193 ;;		On exit  : 0/0
 12194 ;;		Unchanged: 0/0
 12195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12196 ;;      Params:        10       0       0       0       0       0       0
 12197 ;;      Locals:        18       0       0       0       0       0       0
 12198 ;;      Temps:          8       0       0       0       0       0       0
 12199 ;;      Totals:        36       0       0       0       0       0       0
 12200 ;;Total ram usage:       36 bytes
 12201 ;; Hardware stack levels used:    1
 12202 ;; Hardware stack levels required when called:    5
 12203 ;; This function calls:
 12204 ;;		___aodiv
 12205 ;;		___aomod
 12206 ;;		_abs
 12207 ;;		_pad
 12208 ;; This function is called by:
 12209 ;;		_vfpfcnvrt
 12210 ;; This function uses a non-reentrant model
 12211 ;;
 12212                           
 12213                           	psect	text39
 12214  003A28                     __ptext39:
 12215                           	callstack 0
 12216  003A28                     _dtoa:
 12217                           	callstack 20
 12218  003A28                     
 12219                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
 12220  003A28  C01E  F036         	movff	dtoa@d,dtoa@n
 12221  003A2C  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
 12222  003A30  C020  F038         	movff	dtoa@d+2,dtoa@n+2
 12223  003A34  C021  F039         	movff	dtoa@d+3,dtoa@n+3
 12224  003A38  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
 12225  003A3C  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
 12226  003A40  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
 12227  003A44  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
 12228  003A48                     
 12229                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
 12230  003A48  BE3D               	btfsc	(dtoa@n+7)^0,7,c
 12231  003A4A  EF29  F01D         	goto	u5521
 12232  003A4E  EF2C  F01D         	goto	u5520
 12233  003A52                     u5521:
 12234  003A52  0E01               	movlw	1
 12235  003A54  EF2D  F01D         	goto	u5530
 12236  003A58                     u5520:
 12237  003A58  0E00               	movlw	0
 12238  003A5A                     u5530:
 12239  003A5A  6E34               	movwf	dtoa@s^0,c
 12240  003A5C  6A35               	clrf	(dtoa@s+1)^0,c
 12241                           
 12242                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
 12243  003A5E  5034               	movf	dtoa@s^0,w,c
 12244  003A60  1035               	iorwf	(dtoa@s+1)^0,w,c
 12245  003A62  B4D8               	btfsc	status,2,c
 12246  003A64  EF36  F01D         	goto	u5541
 12247  003A68  EF38  F01D         	goto	u5540
 12248  003A6C                     u5541:
 12249  003A6C  EF48  F01D         	goto	l4779
 12250  003A70                     u5540:
 12251  003A70                     
 12252                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
 12253  003A70  1E3D               	comf	(dtoa@n+7)^0,f,c
 12254  003A72  1E3C               	comf	(dtoa@n+6)^0,f,c
 12255  003A74  1E3B               	comf	(dtoa@n+5)^0,f,c
 12256  003A76  1E3A               	comf	(dtoa@n+4)^0,f,c
 12257  003A78  1E39               	comf	(dtoa@n+3)^0,f,c
 12258  003A7A  1E38               	comf	(dtoa@n+2)^0,f,c
 12259  003A7C  1E37               	comf	(dtoa@n+1)^0,f,c
 12260  003A7E  6C36               	negf	dtoa@n^0,c
 12261  003A80  0E00               	movlw	0
 12262  003A82  2237               	addwfc	(dtoa@n+1)^0,f,c
 12263  003A84  2238               	addwfc	(dtoa@n+2)^0,f,c
 12264  003A86  2239               	addwfc	(dtoa@n+3)^0,f,c
 12265  003A88  223A               	addwfc	(dtoa@n+4)^0,f,c
 12266  003A8A  223B               	addwfc	(dtoa@n+5)^0,f,c
 12267  003A8C  223C               	addwfc	(dtoa@n+6)^0,f,c
 12268  003A8E  223D               	addwfc	(dtoa@n+7)^0,f,c
 12269  003A90                     l4779:
 12270                           
 12271                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
 12272  003A90  0101               	movlb	1	; () banked
 12273  003A92  BFB7               	btfsc	(_prec+1)& (0+255),7,b
 12274  003A94  EF4E  F01D         	goto	u5551
 12275  003A98  EF50  F01D         	goto	u5550
 12276  003A9C                     u5551:
 12277  003A9C  EF51  F01D         	goto	l4783
 12278  003AA0                     u5550:
 12279  003AA0                     
 12280                           ; BSR set to: 1
 12281                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
 12282  003AA0  93B8               	bcf	_flags& (0+255),1,b
 12283  003AA2                     l4783:
 12284                           
 12285                           ; BSR set to: 1
 12286                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
 12287  003AA2  BFB7               	btfsc	(_prec+1)& (0+255),7,b
 12288  003AA4  EF5E  F01D         	goto	u5560
 12289  003AA8  51B7               	movf	(_prec+1)& (0+255),w,b
 12290  003AAA  E106               	bnz	u5561
 12291  003AAC  05B6               	decf	_prec& (0+255),w,b
 12292  003AAE  B0D8               	btfsc	status,0,c
 12293  003AB0  EF5C  F01D         	goto	u5561
 12294  003AB4  EF5E  F01D         	goto	u5560
 12295  003AB8                     u5561:
 12296  003AB8  EF64  F01D         	goto	l1225
 12297  003ABC                     u5560:
 12298  003ABC                     
 12299                           ; BSR set to: 1
 12300  003ABC  0E00               	movlw	0
 12301  003ABE  6E31               	movwf	(dtoa@p+1)^0,c
 12302  003AC0  0E01               	movlw	1
 12303  003AC2  6E30               	movwf	dtoa@p^0,c
 12304  003AC4  EF68  F01D         	goto	l1227
 12305  003AC8                     l1225:
 12306                           
 12307                           ; BSR set to: 1
 12308  003AC8  C1B6  F030         	movff	_prec,dtoa@p
 12309  003ACC  C1B7  F031         	movff	_prec+1,dtoa@p+1
 12310  003AD0                     l1227:
 12311                           
 12312                           ; BSR set to: 1
 12313                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
 12314  003AD0  C1B4  F032         	movff	_width,dtoa@w
 12315  003AD4  C1B5  F033         	movff	_width+1,dtoa@w+1
 12316  003AD8                     
 12317                           ; BSR set to: 1
 12318                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
 12319  003AD8  5034               	movf	dtoa@s^0,w,c
 12320  003ADA  1035               	iorwf	(dtoa@s+1)^0,w,c
 12321  003ADC  A4D8               	btfss	status,2,c
 12322  003ADE  EF73  F01D         	goto	u5571
 12323  003AE2  EF75  F01D         	goto	u5570
 12324  003AE6                     u5571:
 12325  003AE6  EF7C  F01D         	goto	l4791
 12326  003AEA                     u5570:
 12327  003AEA                     
 12328                           ; BSR set to: 1
 12329  003AEA  A5B8               	btfss	_flags& (0+255),2,b
 12330  003AEC  EF7A  F01D         	goto	u5581
 12331  003AF0  EF7C  F01D         	goto	u5580
 12332  003AF4                     u5581:
 12333  003AF4  EF7F  F01D         	goto	l4793
 12334  003AF8                     u5580:
 12335  003AF8                     l4791:
 12336                           
 12337                           ; BSR set to: 1
 12338                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
 12339  003AF8  0632               	decf	dtoa@w^0,f,c
 12340  003AFA  A0D8               	btfss	status,0,c
 12341  003AFC  0633               	decf	(dtoa@w+1)^0,f,c
 12342  003AFE                     l4793:
 12343                           
 12344                           ; BSR set to: 1
 12345                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
 12346  003AFE  0E00               	movlw	0
 12347  003B00  6E3F               	movwf	(dtoa@i+1)^0,c
 12348  003B02  0E4F               	movlw	79
 12349  003B04  6E3E               	movwf	dtoa@i^0,c
 12350  003B06                     
 12351                           ; BSR set to: 1
 12352                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
 12353  003B06  0E00               	movlw	0
 12354  003B08  0102               	movlb	2	; () banked
 12355  003B0A  6F4F               	movwf	(_dbuf+79)& (0+255),b
 12356                           
 12357                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12358  003B0C  EF04  F01E         	goto	l4807
 12359  003B10                     l4797:
 12360                           
 12361                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
 12362  003B10  063E               	decf	dtoa@i^0,f,c
 12363  003B12  A0D8               	btfss	status,0,c
 12364  003B14  063F               	decf	(dtoa@i+1)^0,f,c
 12365  003B16                     
 12366                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
 12367  003B16  0E00               	movlw	low _dbuf
 12368  003B18  243E               	addwf	dtoa@i^0,w,c
 12369  003B1A  6ED9               	movwf	fsr2l,c
 12370  003B1C  0E02               	movlw	high _dbuf
 12371  003B1E  203F               	addwfc	(dtoa@i+1)^0,w,c
 12372  003B20  6EDA               	movwf	fsr2h,c
 12373  003B22  C036  F001         	movff	dtoa@n,___aomod@dividend
 12374  003B26  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
 12375  003B2A  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
 12376  003B2E  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
 12377  003B32  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
 12378  003B36  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
 12379  003B3A  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
 12380  003B3E  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
 12381  003B42  0E0A               	movlw	10
 12382  003B44  6E09               	movwf	___aomod@divisor^0,c
 12383  003B46  0E00               	movlw	0
 12384  003B48  6E0A               	movwf	(___aomod@divisor+1)^0,c
 12385  003B4A  0E00               	movlw	0
 12386  003B4C  6E0B               	movwf	(___aomod@divisor+2)^0,c
 12387  003B4E  0E00               	movlw	0
 12388  003B50  6E0C               	movwf	(___aomod@divisor+3)^0,c
 12389  003B52  0E00               	movlw	0
 12390  003B54  6E0D               	movwf	(___aomod@divisor+4)^0,c
 12391  003B56  0E00               	movlw	0
 12392  003B58  6E0E               	movwf	(___aomod@divisor+5)^0,c
 12393  003B5A  0E00               	movlw	0
 12394  003B5C  6E0F               	movwf	(___aomod@divisor+6)^0,c
 12395  003B5E  0E00               	movlw	0
 12396  003B60  6E10               	movwf	(___aomod@divisor+7)^0,c
 12397  003B62  EC98  F023         	call	___aomod	;wreg free
 12398  003B66  C001  F026         	movff	?___aomod,??_dtoa
 12399  003B6A  C002  F027         	movff	?___aomod+1,??_dtoa+1
 12400  003B6E  C003  F028         	movff	?___aomod+2,??_dtoa+2
 12401  003B72  C004  F029         	movff	?___aomod+3,??_dtoa+3
 12402  003B76  C005  F02A         	movff	?___aomod+4,??_dtoa+4
 12403  003B7A  C006  F02B         	movff	?___aomod+5,??_dtoa+5
 12404  003B7E  C007  F02C         	movff	?___aomod+6,??_dtoa+6
 12405  003B82  C008  F02D         	movff	?___aomod+7,??_dtoa+7
 12406  003B86  C026  F013         	movff	??_dtoa,abs@a
 12407  003B8A  C028  F014         	movff	??_dtoa+2,abs@a+1
 12408  003B8E  ECB6  F02C         	call	_abs	;wreg free
 12409  003B92  5013               	movf	?_abs^0,w,c
 12410  003B94  0F30               	addlw	48
 12411  003B96  6EDF               	movwf	indf2,c
 12412  003B98                     
 12413                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
 12414  003B98  0630               	decf	dtoa@p^0,f,c
 12415  003B9A  A0D8               	btfss	status,0,c
 12416  003B9C  0631               	decf	(dtoa@p+1)^0,f,c
 12417  003B9E                     
 12418                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
 12419  003B9E  0632               	decf	dtoa@w^0,f,c
 12420  003BA0  A0D8               	btfss	status,0,c
 12421  003BA2  0633               	decf	(dtoa@w+1)^0,f,c
 12422  003BA4                     
 12423                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
 12424  003BA4  C036  F001         	movff	dtoa@n,___aodiv@dividend
 12425  003BA8  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
 12426  003BAC  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
 12427  003BB0  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
 12428  003BB4  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
 12429  003BB8  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
 12430  003BBC  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
 12431  003BC0  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
 12432  003BC4  0E0A               	movlw	10
 12433  003BC6  6E09               	movwf	___aodiv@divisor^0,c
 12434  003BC8  0E00               	movlw	0
 12435  003BCA  6E0A               	movwf	(___aodiv@divisor+1)^0,c
 12436  003BCC  0E00               	movlw	0
 12437  003BCE  6E0B               	movwf	(___aodiv@divisor+2)^0,c
 12438  003BD0  0E00               	movlw	0
 12439  003BD2  6E0C               	movwf	(___aodiv@divisor+3)^0,c
 12440  003BD4  0E00               	movlw	0
 12441  003BD6  6E0D               	movwf	(___aodiv@divisor+4)^0,c
 12442  003BD8  0E00               	movlw	0
 12443  003BDA  6E0E               	movwf	(___aodiv@divisor+5)^0,c
 12444  003BDC  0E00               	movlw	0
 12445  003BDE  6E0F               	movwf	(___aodiv@divisor+6)^0,c
 12446  003BE0  0E00               	movlw	0
 12447  003BE2  6E10               	movwf	(___aodiv@divisor+7)^0,c
 12448  003BE4  EC12  F022         	call	___aodiv	;wreg free
 12449  003BE8  C001  F036         	movff	?___aodiv,dtoa@n
 12450  003BEC  C002  F037         	movff	?___aodiv+1,dtoa@n+1
 12451  003BF0  C003  F038         	movff	?___aodiv+2,dtoa@n+2
 12452  003BF4  C004  F039         	movff	?___aodiv+3,dtoa@n+3
 12453  003BF8  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
 12454  003BFC  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
 12455  003C00  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
 12456  003C04  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
 12457  003C08                     l4807:
 12458                           
 12459                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12460  003C08  BE3F               	btfsc	(dtoa@i+1)^0,7,c
 12461  003C0A  EF0F  F01E         	goto	u5591
 12462  003C0E  503F               	movf	(dtoa@i+1)^0,w,c
 12463  003C10  E108               	bnz	u5590
 12464  003C12  043E               	decf	dtoa@i^0,w,c
 12465  003C14  A0D8               	btfss	status,0,c
 12466  003C16  EF0F  F01E         	goto	u5591
 12467  003C1A  EF11  F01E         	goto	u5590
 12468  003C1E                     u5591:
 12469  003C1E  EF42  F01E         	goto	l4817
 12470  003C22                     u5590:
 12471  003C22  5036               	movf	dtoa@n^0,w,c
 12472  003C24  1037               	iorwf	(dtoa@n+1)^0,w,c
 12473  003C26  1038               	iorwf	(dtoa@n+2)^0,w,c
 12474  003C28  1039               	iorwf	(dtoa@n+3)^0,w,c
 12475  003C2A  103A               	iorwf	(dtoa@n+4)^0,w,c
 12476  003C2C  103B               	iorwf	(dtoa@n+5)^0,w,c
 12477  003C2E  103C               	iorwf	(dtoa@n+6)^0,w,c
 12478  003C30  103D               	iorwf	(dtoa@n+7)^0,w,c
 12479  003C32  A4D8               	btfss	status,2,c
 12480  003C34  EF1E  F01E         	goto	u5601
 12481  003C38  EF20  F01E         	goto	u5600
 12482  003C3C                     u5601:
 12483  003C3C  EF88  F01D         	goto	l4797
 12484  003C40                     u5600:
 12485  003C40  BE31               	btfsc	(dtoa@p+1)^0,7,c
 12486  003C42  EF2D  F01E         	goto	u5610
 12487  003C46  5031               	movf	(dtoa@p+1)^0,w,c
 12488  003C48  E106               	bnz	u5611
 12489  003C4A  0430               	decf	dtoa@p^0,w,c
 12490  003C4C  B0D8               	btfsc	status,0,c
 12491  003C4E  EF2B  F01E         	goto	u5611
 12492  003C52  EF2D  F01E         	goto	u5610
 12493  003C56                     u5611:
 12494  003C56  EF88  F01D         	goto	l4797
 12495  003C5A                     u5610:
 12496  003C5A  BE33               	btfsc	(dtoa@w+1)^0,7,c
 12497  003C5C  EF38  F01E         	goto	u5621
 12498  003C60  5033               	movf	(dtoa@w+1)^0,w,c
 12499  003C62  E108               	bnz	u5620
 12500  003C64  0432               	decf	dtoa@w^0,w,c
 12501  003C66  A0D8               	btfss	status,0,c
 12502  003C68  EF38  F01E         	goto	u5621
 12503  003C6C  EF3A  F01E         	goto	u5620
 12504  003C70                     u5621:
 12505  003C70  EF42  F01E         	goto	l4817
 12506  003C74                     u5620:
 12507  003C74  0101               	movlb	1	; () banked
 12508  003C76  B3B8               	btfsc	_flags& (0+255),1,b
 12509  003C78  EF40  F01E         	goto	u5631
 12510  003C7C  EF42  F01E         	goto	u5630
 12511  003C80                     u5631:
 12512  003C80  EF88  F01D         	goto	l4797
 12513  003C84                     u5630:
 12514  003C84                     l4817:
 12515                           
 12516                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
 12517  003C84  5034               	movf	dtoa@s^0,w,c
 12518  003C86  1035               	iorwf	(dtoa@s+1)^0,w,c
 12519  003C88  A4D8               	btfss	status,2,c
 12520  003C8A  EF49  F01E         	goto	u5641
 12521  003C8E  EF4B  F01E         	goto	u5640
 12522  003C92                     u5641:
 12523  003C92  EF53  F01E         	goto	l4821
 12524  003C96                     u5640:
 12525  003C96  0101               	movlb	1	; () banked
 12526  003C98  A5B8               	btfss	_flags& (0+255),2,b
 12527  003C9A  EF51  F01E         	goto	u5651
 12528  003C9E  EF53  F01E         	goto	u5650
 12529  003CA2                     u5651:
 12530  003CA2  EF71  F01E         	goto	l4831
 12531  003CA6                     u5650:
 12532  003CA6                     l4821:
 12533                           
 12534                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
 12535  003CA6  063E               	decf	dtoa@i^0,f,c
 12536  003CA8  A0D8               	btfss	status,0,c
 12537  003CAA  063F               	decf	(dtoa@i+1)^0,f,c
 12538  003CAC                     
 12539                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
 12540  003CAC  5034               	movf	dtoa@s^0,w,c
 12541  003CAE  1035               	iorwf	(dtoa@s+1)^0,w,c
 12542  003CB0  A4D8               	btfss	status,2,c
 12543  003CB2  EF5D  F01E         	goto	u5661
 12544  003CB6  EF5F  F01E         	goto	u5660
 12545  003CBA                     u5661:
 12546  003CBA  EF65  F01E         	goto	l4827
 12547  003CBE                     u5660:
 12548  003CBE  0E00               	movlw	0
 12549  003CC0  6E2F               	movwf	(_dtoa$2481+1)^0,c
 12550  003CC2  0E2B               	movlw	43
 12551  003CC4  6E2E               	movwf	_dtoa$2481^0,c
 12552  003CC6  EF69  F01E         	goto	l4829
 12553  003CCA                     l4827:
 12554  003CCA  0E00               	movlw	0
 12555  003CCC  6E2F               	movwf	(_dtoa$2481+1)^0,c
 12556  003CCE  0E2D               	movlw	45
 12557  003CD0  6E2E               	movwf	_dtoa$2481^0,c
 12558  003CD2                     l4829:
 12559  003CD2  0E00               	movlw	low _dbuf
 12560  003CD4  243E               	addwf	dtoa@i^0,w,c
 12561  003CD6  6ED9               	movwf	fsr2l,c
 12562  003CD8  0E02               	movlw	high _dbuf
 12563  003CDA  203F               	addwfc	(dtoa@i+1)^0,w,c
 12564  003CDC  6EDA               	movwf	fsr2h,c
 12565  003CDE  C02E  FFDF         	movff	_dtoa$2481,indf2
 12566  003CE2                     l4831:
 12567                           
 12568                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
 12569  003CE2  C01C  F011         	movff	dtoa@fp,pad@fp
 12570  003CE6  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
 12571  003CEA  0E00               	movlw	low _dbuf
 12572  003CEC  243E               	addwf	dtoa@i^0,w,c
 12573  003CEE  6E13               	movwf	pad@buf^0,c
 12574  003CF0  0E02               	movlw	high _dbuf
 12575  003CF2  203F               	addwfc	(dtoa@i+1)^0,w,c
 12576  003CF4  6E14               	movwf	(pad@buf+1)^0,c
 12577  003CF6  C032  F015         	movff	dtoa@w,pad@p
 12578  003CFA  C033  F016         	movff	dtoa@w+1,pad@p+1
 12579  003CFE  ECAD  F027         	call	_pad	;wreg free
 12580  003D02  C011  F01C         	movff	?_pad,?_dtoa
 12581  003D06  C012  F01D         	movff	?_pad+1,?_dtoa+1
 12582  003D0A  0012               	return		;funcret
 12583  003D0C                     __end_of_dtoa:
 12584                           	callstack 0
 12585                           
 12586 ;; *************** function _pad *****************
 12587 ;; Defined at:
 12588 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 12589 ;; Parameters:    Size  Location     Type
 12590 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 12591 ;;		 -> sprintf@f(6), 
 12592 ;;  buf             2   18[COMRAM] PTR unsigned char 
 12593 ;;		 -> dbuf(80), 
 12594 ;;  p               2   20[COMRAM] int 
 12595 ;; Auto vars:     Size  Location     Type
 12596 ;;  w               2   25[COMRAM] int 
 12597 ;;  i               2   23[COMRAM] int 
 12598 ;; Return value:  Size  Location     Type
 12599 ;;                  2   16[COMRAM] int 
 12600 ;; Registers used:
 12601 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12602 ;; Tracked objects:
 12603 ;;		On entry : 0/0
 12604 ;;		On exit  : 0/0
 12605 ;;		Unchanged: 0/0
 12606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12607 ;;      Params:         6       0       0       0       0       0       0
 12608 ;;      Locals:         4       0       0       0       0       0       0
 12609 ;;      Temps:          1       0       0       0       0       0       0
 12610 ;;      Totals:        11       0       0       0       0       0       0
 12611 ;;Total ram usage:       11 bytes
 12612 ;; Hardware stack levels used:    1
 12613 ;; Hardware stack levels required when called:    4
 12614 ;; This function calls:
 12615 ;;		_fputc
 12616 ;;		_fputs
 12617 ;;		_strlen
 12618 ;; This function is called by:
 12619 ;;		_dtoa
 12620 ;;		_efgtoa
 12621 ;; This function uses a non-reentrant model
 12622 ;;
 12623                           
 12624                           	psect	text40
 12625  004F5A                     __ptext40:
 12626                           	callstack 0
 12627  004F5A                     _pad:
 12628                           	callstack 20
 12629  004F5A                     
 12630                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 12631  004F5A  0101               	movlb	1	; () banked
 12632  004F5C  A1B8               	btfss	_flags& (0+255),0,b
 12633  004F5E  EFB3  F027         	goto	u5211
 12634  004F62  EFB5  F027         	goto	u5210
 12635  004F66                     u5211:
 12636  004F66  EFBF  F027         	goto	l4671
 12637  004F6A                     u5210:
 12638  004F6A                     
 12639                           ; BSR set to: 1
 12640                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 12641  004F6A  C013  F00A         	movff	pad@buf,fputs@s
 12642  004F6E  C014  F00B         	movff	pad@buf+1,fputs@s+1
 12643  004F72  C011  F00C         	movff	pad@fp,fputs@fp
 12644  004F76  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 12645  004F7A  EC73  F02C         	call	_fputs	;wreg free
 12646  004F7E                     l4671:
 12647                           
 12648                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 12649  004F7E  BE16               	btfsc	(pad@p+1)^0,7,c
 12650  004F80  EFC4  F027         	goto	u5221
 12651  004F84  EFC6  F027         	goto	u5220
 12652  004F88                     u5221:
 12653  004F88  EFCC  F027         	goto	l4675
 12654  004F8C                     u5220:
 12655  004F8C  C015  F01A         	movff	pad@p,pad@w
 12656  004F90  C016  F01B         	movff	pad@p+1,pad@w+1
 12657  004F94  EFD0  F027         	goto	l1214
 12658  004F98                     l4675:
 12659  004F98  0E00               	movlw	0
 12660  004F9A  6E1B               	movwf	(pad@w+1)^0,c
 12661  004F9C  0E00               	movlw	0
 12662  004F9E  6E1A               	movwf	pad@w^0,c
 12663  004FA0                     l1214:
 12664                           
 12665                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 12666  004FA0  0E00               	movlw	0
 12667  004FA2  6E19               	movwf	(pad@i+1)^0,c
 12668  004FA4  0E00               	movlw	0
 12669  004FA6  6E18               	movwf	pad@i^0,c
 12670                           
 12671                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12672  004FA8  EFE2  F027         	goto	l4681
 12673  004FAC                     l4677:
 12674                           
 12675                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 12676  004FAC  0E00               	movlw	0
 12677  004FAE  6E02               	movwf	(fputc@c+1)^0,c
 12678  004FB0  0E20               	movlw	32
 12679  004FB2  6E01               	movwf	fputc@c^0,c
 12680  004FB4  C011  F003         	movff	pad@fp,fputc@fp
 12681  004FB8  C012  F004         	movff	pad@fp+1,fputc@fp+1
 12682  004FBC  EC48  F027         	call	_fputc	;wreg free
 12683  004FC0                     
 12684                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
 12685  004FC0  4A18               	infsnz	pad@i^0,f,c
 12686  004FC2  2A19               	incf	(pad@i+1)^0,f,c
 12687  004FC4                     l4681:
 12688                           
 12689                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12690  004FC4  501A               	movf	pad@w^0,w,c
 12691  004FC6  5C18               	subwf	pad@i^0,w,c
 12692  004FC8  5019               	movf	(pad@i+1)^0,w,c
 12693  004FCA  0A80               	xorlw	128
 12694  004FCC  6E17               	movwf	??_pad^0,c
 12695  004FCE  501B               	movf	(pad@w+1)^0,w,c
 12696  004FD0  0A80               	xorlw	128
 12697  004FD2  5817               	subwfb	??_pad^0,w,c
 12698  004FD4  A0D8               	btfss	status,0,c
 12699  004FD6  EFEF  F027         	goto	u5231
 12700  004FDA  EFF1  F027         	goto	u5230
 12701  004FDE                     u5231:
 12702  004FDE  EFD6  F027         	goto	l4677
 12703  004FE2                     u5230:
 12704  004FE2                     
 12705                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 12706  004FE2  0101               	movlb	1	; () banked
 12707  004FE4  B1B8               	btfsc	_flags& (0+255),0,b
 12708  004FE6  EFF7  F027         	goto	u5241
 12709  004FEA  EFF9  F027         	goto	u5240
 12710  004FEE                     u5241:
 12711  004FEE  EF03  F028         	goto	l4685
 12712  004FF2                     u5240:
 12713  004FF2                     
 12714                           ; BSR set to: 1
 12715                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 12716  004FF2  C013  F00A         	movff	pad@buf,fputs@s
 12717  004FF6  C014  F00B         	movff	pad@buf+1,fputs@s+1
 12718  004FFA  C011  F00C         	movff	pad@fp,fputs@fp
 12719  004FFE  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 12720  005002  EC73  F02C         	call	_fputs	;wreg free
 12721  005006                     l4685:
 12722                           
 12723                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
 12724  005006  C013  F001         	movff	pad@buf,strlen@s
 12725  00500A  C014  F002         	movff	pad@buf+1,strlen@s+1
 12726  00500E  EC82  F02D         	call	_strlen	;wreg free
 12727  005012  501A               	movf	pad@w^0,w,c
 12728  005014  2401               	addwf	?_strlen^0,w,c
 12729  005016  6E11               	movwf	?_pad^0,c
 12730  005018  501B               	movf	(pad@w+1)^0,w,c
 12731  00501A  2002               	addwfc	(?_strlen+1)^0,w,c
 12732  00501C  6E12               	movwf	(?_pad+1)^0,c
 12733  00501E  0012               	return		;funcret
 12734  005020                     __end_of_pad:
 12735                           	callstack 0
 12736                           
 12737 ;; *************** function _strlen *****************
 12738 ;; Defined at:
 12739 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
 12740 ;; Parameters:    Size  Location     Type
 12741 ;;  s               2    0[COMRAM] PTR const unsigned char 
 12742 ;;		 -> dbuf(80), 
 12743 ;; Auto vars:     Size  Location     Type
 12744 ;;  a               2    2[COMRAM] PTR const unsigned char 
 12745 ;;		 -> dbuf(80), 
 12746 ;; Return value:  Size  Location     Type
 12747 ;;                  2    0[COMRAM] unsigned int 
 12748 ;; Registers used:
 12749 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12750 ;; Tracked objects:
 12751 ;;		On entry : 0/0
 12752 ;;		On exit  : 0/0
 12753 ;;		Unchanged: 0/0
 12754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12755 ;;      Params:         2       0       0       0       0       0       0
 12756 ;;      Locals:         2       0       0       0       0       0       0
 12757 ;;      Temps:          0       0       0       0       0       0       0
 12758 ;;      Totals:         4       0       0       0       0       0       0
 12759 ;;Total ram usage:        4 bytes
 12760 ;; Hardware stack levels used:    1
 12761 ;; Hardware stack levels required when called:    1
 12762 ;; This function calls:
 12763 ;;		Nothing
 12764 ;; This function is called by:
 12765 ;;		_pad
 12766 ;; This function uses a non-reentrant model
 12767 ;;
 12768                           
 12769                           	psect	text41
 12770  005B04                     __ptext41:
 12771                           	callstack 0
 12772  005B04                     _strlen:
 12773                           	callstack 22
 12774  005B04  C001  F003         	movff	strlen@s,strlen@a
 12775  005B08  C002  F004         	movff	strlen@s+1,strlen@a+1
 12776  005B0C  EF8A  F02D         	goto	l4127
 12777  005B10                     l4125:
 12778  005B10  4A01               	infsnz	strlen@s^0,f,c
 12779  005B12  2A02               	incf	(strlen@s+1)^0,f,c
 12780  005B14                     l4127:
 12781  005B14  C001  FFD9         	movff	strlen@s,fsr2l
 12782  005B18  C002  FFDA         	movff	strlen@s+1,fsr2h
 12783  005B1C  50DF               	movf	indf2,w,c
 12784  005B1E  A4D8               	btfss	status,2,c
 12785  005B20  EF94  F02D         	goto	u4351
 12786  005B24  EF96  F02D         	goto	u4350
 12787  005B28                     u4351:
 12788  005B28  EF88  F02D         	goto	l4125
 12789  005B2C                     u4350:
 12790  005B2C  5003               	movf	strlen@a^0,w,c
 12791  005B2E  5C01               	subwf	strlen@s^0,w,c
 12792  005B30  6E01               	movwf	?_strlen^0,c
 12793  005B32  5004               	movf	(strlen@a+1)^0,w,c
 12794  005B34  5802               	subwfb	(strlen@s+1)^0,w,c
 12795  005B36  6E02               	movwf	(?_strlen+1)^0,c
 12796  005B38  0012               	return		;funcret
 12797  005B3A                     __end_of_strlen:
 12798                           	callstack 0
 12799                           
 12800 ;; *************** function _fputs *****************
 12801 ;; Defined at:
 12802 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
 12803 ;; Parameters:    Size  Location     Type
 12804 ;;  s               2    9[COMRAM] PTR const unsigned char 
 12805 ;;		 -> dbuf(80), 
 12806 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 12807 ;;		 -> sprintf@f(6), 
 12808 ;; Auto vars:     Size  Location     Type
 12809 ;;  i               2   14[COMRAM] int 
 12810 ;;  c               1   13[COMRAM] unsigned char 
 12811 ;; Return value:  Size  Location     Type
 12812 ;;                  2    9[COMRAM] int 
 12813 ;; Registers used:
 12814 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12815 ;; Tracked objects:
 12816 ;;		On entry : 0/0
 12817 ;;		On exit  : 0/0
 12818 ;;		Unchanged: 0/0
 12819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12820 ;;      Params:         4       0       0       0       0       0       0
 12821 ;;      Locals:         3       0       0       0       0       0       0
 12822 ;;      Temps:          0       0       0       0       0       0       0
 12823 ;;      Totals:         7       0       0       0       0       0       0
 12824 ;;Total ram usage:        7 bytes
 12825 ;; Hardware stack levels used:    1
 12826 ;; Hardware stack levels required when called:    3
 12827 ;; This function calls:
 12828 ;;		_fputc
 12829 ;; This function is called by:
 12830 ;;		_pad
 12831 ;; This function uses a non-reentrant model
 12832 ;;
 12833                           
 12834                           	psect	text42
 12835  0058E6                     __ptext42:
 12836                           	callstack 0
 12837  0058E6                     _fputs:
 12838                           	callstack 20
 12839  0058E6  0E00               	movlw	0
 12840  0058E8  6E10               	movwf	(fputs@i+1)^0,c
 12841  0058EA  0E00               	movlw	0
 12842  0058EC  6E0F               	movwf	fputs@i^0,c
 12843  0058EE  EF84  F02C         	goto	l4121
 12844  0058F2                     l4117:
 12845  0058F2  C00E  F001         	movff	fputs@c,fputc@c
 12846  0058F6  6A02               	clrf	(fputc@c+1)^0,c
 12847  0058F8  C00C  F003         	movff	fputs@fp,fputc@fp
 12848  0058FC  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
 12849  005900  EC48  F027         	call	_fputc	;wreg free
 12850  005904  4A0F               	infsnz	fputs@i^0,f,c
 12851  005906  2A10               	incf	(fputs@i+1)^0,f,c
 12852  005908                     l4121:
 12853  005908  500F               	movf	fputs@i^0,w,c
 12854  00590A  240A               	addwf	fputs@s^0,w,c
 12855  00590C  6ED9               	movwf	fsr2l,c
 12856  00590E  5010               	movf	(fputs@i+1)^0,w,c
 12857  005910  200B               	addwfc	(fputs@s+1)^0,w,c
 12858  005912  6EDA               	movwf	fsr2h,c
 12859  005914  50DF               	movf	indf2,w,c
 12860  005916  6E0E               	movwf	fputs@c^0,c
 12861  005918  500E               	movf	fputs@c^0,w,c
 12862  00591A  A4D8               	btfss	status,2,c
 12863  00591C  EF92  F02C         	goto	u4341
 12864  005920  EF94  F02C         	goto	u4340
 12865  005924                     u4341:
 12866  005924  EF79  F02C         	goto	l4117
 12867  005928                     u4340:
 12868  005928  0012               	return		;funcret
 12869  00592A                     __end_of_fputs:
 12870                           	callstack 0
 12871                           
 12872 ;; *************** function _fputc *****************
 12873 ;; Defined at:
 12874 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
 12875 ;; Parameters:    Size  Location     Type
 12876 ;;  c               2    0[COMRAM] int 
 12877 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 12878 ;;		 -> sprintf@f(6), 
 12879 ;; Auto vars:     Size  Location     Type
 12880 ;;		None
 12881 ;; Return value:  Size  Location     Type
 12882 ;;                  2    0[COMRAM] int 
 12883 ;; Registers used:
 12884 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12885 ;; Tracked objects:
 12886 ;;		On entry : 0/0
 12887 ;;		On exit  : 0/0
 12888 ;;		Unchanged: 0/0
 12889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12890 ;;      Params:         4       0       0       0       0       0       0
 12891 ;;      Locals:         0       0       0       0       0       0       0
 12892 ;;      Temps:          5       0       0       0       0       0       0
 12893 ;;      Totals:         9       0       0       0       0       0       0
 12894 ;;Total ram usage:        9 bytes
 12895 ;; Hardware stack levels used:    1
 12896 ;; Hardware stack levels required when called:    2
 12897 ;; This function calls:
 12898 ;;		_putch
 12899 ;; This function is called by:
 12900 ;;		_pad
 12901 ;;		_vfpfcnvrt
 12902 ;;		_fputs
 12903 ;; This function uses a non-reentrant model
 12904 ;;
 12905                           
 12906                           	psect	text43
 12907  004E90                     __ptext43:
 12908                           	callstack 0
 12909  004E90                     _fputc:
 12910                           	callstack 23
 12911  004E90  5003               	movf	fputc@fp^0,w,c
 12912  004E92  1004               	iorwf	(fputc@fp+1)^0,w,c
 12913  004E94  B4D8               	btfsc	status,2,c
 12914  004E96  EF4F  F027         	goto	u3911
 12915  004E9A  EF51  F027         	goto	u3910
 12916  004E9E                     u3911:
 12917  004E9E  EF5A  F027         	goto	l3903
 12918  004EA2                     u3910:
 12919  004EA2  5003               	movf	fputc@fp^0,w,c
 12920  004EA4  1004               	iorwf	(fputc@fp+1)^0,w,c
 12921  004EA6  A4D8               	btfss	status,2,c
 12922  004EA8  EF58  F027         	goto	u3921
 12923  004EAC  EF5A  F027         	goto	u3920
 12924  004EB0                     u3921:
 12925  004EB0  EF5F  F027         	goto	l3905
 12926  004EB4                     u3920:
 12927  004EB4                     l3903:
 12928  004EB4  5001               	movf	fputc@c^0,w,c
 12929  004EB6  EC6D  F02E         	call	_putch
 12930  004EBA  EFAC  F027         	goto	l1474
 12931  004EBE                     l3905:
 12932  004EBE  EE20 F004          	lfsr	2,4
 12933  004EC2  5003               	movf	fputc@fp^0,w,c
 12934  004EC4  26D9               	addwf	fsr2l,f,c
 12935  004EC6  5004               	movf	(fputc@fp+1)^0,w,c
 12936  004EC8  22DA               	addwfc	fsr2h,f,c
 12937  004ECA  50DE               	movf	postinc2,w,c
 12938  004ECC  10DE               	iorwf	postinc2,w,c
 12939  004ECE  B4D8               	btfsc	status,2,c
 12940  004ED0  EF6C  F027         	goto	u3931
 12941  004ED4  EF6E  F027         	goto	u3930
 12942  004ED8                     u3931:
 12943  004ED8  EF89  F027         	goto	l3909
 12944  004EDC                     u3930:
 12945  004EDC  EE20 F004          	lfsr	2,4
 12946  004EE0  5003               	movf	fputc@fp^0,w,c
 12947  004EE2  26D9               	addwf	fsr2l,f,c
 12948  004EE4  5004               	movf	(fputc@fp+1)^0,w,c
 12949  004EE6  22DA               	addwfc	fsr2h,f,c
 12950  004EE8  EE10 F002          	lfsr	1,2
 12951  004EEC  5003               	movf	fputc@fp^0,w,c
 12952  004EEE  26E1               	addwf	fsr1l,f,c
 12953  004EF0  5004               	movf	(fputc@fp+1)^0,w,c
 12954  004EF2  22E2               	addwfc	fsr1h,f,c
 12955  004EF4  50DE               	movf	postinc2,w,c
 12956  004EF6  5CE6               	subwf	postinc1,w,c
 12957  004EF8  50E6               	movf	postinc1,w,c
 12958  004EFA  0A80               	xorlw	128
 12959  004EFC  6E09               	movwf	(??_fputc+4)^0,c
 12960  004EFE  50DE               	movf	postinc2,w,c
 12961  004F00  0A80               	xorlw	128
 12962  004F02  5809               	subwfb	(??_fputc+4)^0,w,c
 12963  004F04  B0D8               	btfsc	status,0,c
 12964  004F06  EF87  F027         	goto	u3941
 12965  004F0A  EF89  F027         	goto	u3940
 12966  004F0E                     u3941:
 12967  004F0E  EFAC  F027         	goto	l1474
 12968  004F12                     u3940:
 12969  004F12                     l3909:
 12970  004F12  EE20 F002          	lfsr	2,2
 12971  004F16  5003               	movf	fputc@fp^0,w,c
 12972  004F18  26D9               	addwf	fsr2l,f,c
 12973  004F1A  5004               	movf	(fputc@fp+1)^0,w,c
 12974  004F1C  22DA               	addwfc	fsr2h,f,c
 12975  004F1E  CFDE F005          	movff	postinc2,??_fputc
 12976  004F22  CFDD F006          	movff	postdec2,??_fputc+1
 12977  004F26  C003  FFD9         	movff	fputc@fp,fsr2l
 12978  004F2A  C004  FFDA         	movff	fputc@fp+1,fsr2h
 12979  004F2E  CFDE F007          	movff	postinc2,??_fputc+2
 12980  004F32  CFDD F008          	movff	postdec2,??_fputc+3
 12981  004F36  5005               	movf	??_fputc^0,w,c
 12982  004F38  2407               	addwf	(??_fputc+2)^0,w,c
 12983  004F3A  6ED9               	movwf	fsr2l,c
 12984  004F3C  5006               	movf	(??_fputc+1)^0,w,c
 12985  004F3E  2008               	addwfc	(??_fputc+3)^0,w,c
 12986  004F40  6EDA               	movwf	fsr2h,c
 12987  004F42  C001  FFDF         	movff	fputc@c,indf2
 12988  004F46  EE20 F002          	lfsr	2,2
 12989  004F4A  5003               	movf	fputc@fp^0,w,c
 12990  004F4C  26D9               	addwf	fsr2l,f,c
 12991  004F4E  5004               	movf	(fputc@fp+1)^0,w,c
 12992  004F50  22DA               	addwfc	fsr2h,f,c
 12993  004F52  2ADE               	incf	postinc2,f,c
 12994  004F54  0E00               	movlw	0
 12995  004F56  22DD               	addwfc	postdec2,f,c
 12996  004F58                     l1474:
 12997  004F58  0012               	return		;funcret
 12998  004F5A                     __end_of_fputc:
 12999                           	callstack 0
 13000                           
 13001 ;; *************** function _putch *****************
 13002 ;; Defined at:
 13003 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
 13004 ;; Parameters:    Size  Location     Type
 13005 ;;  c               1    wreg     unsigned char 
 13006 ;; Auto vars:     Size  Location     Type
 13007 ;;  c               1    0[COMRAM] unsigned char 
 13008 ;; Return value:  Size  Location     Type
 13009 ;;                  1    wreg      void 
 13010 ;; Registers used:
 13011 ;;		wreg
 13012 ;; Tracked objects:
 13013 ;;		On entry : 0/0
 13014 ;;		On exit  : 0/0
 13015 ;;		Unchanged: 0/0
 13016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13017 ;;      Params:         0       0       0       0       0       0       0
 13018 ;;      Locals:         0       0       0       0       0       0       0
 13019 ;;      Temps:          0       0       0       0       0       0       0
 13020 ;;      Totals:         0       0       0       0       0       0       0
 13021 ;;Total ram usage:        0 bytes
 13022 ;; Hardware stack levels used:    1
 13023 ;; Hardware stack levels required when called:    1
 13024 ;; This function calls:
 13025 ;;		Nothing
 13026 ;; This function is called by:
 13027 ;;		_fputc
 13028 ;; This function uses a non-reentrant model
 13029 ;;
 13030                           
 13031                           	psect	text44
 13032  005CDA                     __ptext44:
 13033                           	callstack 0
 13034  005CDA                     _putch:
 13035                           	callstack 23
 13036  005CDA  0012               	return		;funcret
 13037  005CDC                     __end_of_putch:
 13038                           	callstack 0
 13039                           
 13040 ;; *************** function _abs *****************
 13041 ;; Defined at:
 13042 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
 13043 ;; Parameters:    Size  Location     Type
 13044 ;;  a               2   18[COMRAM] int 
 13045 ;; Auto vars:     Size  Location     Type
 13046 ;;		None
 13047 ;; Return value:  Size  Location     Type
 13048 ;;                  2   18[COMRAM] int 
 13049 ;; Registers used:
 13050 ;;		wreg, status,2, status,0
 13051 ;; Tracked objects:
 13052 ;;		On entry : 0/0
 13053 ;;		On exit  : 0/0
 13054 ;;		Unchanged: 0/0
 13055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13056 ;;      Params:         2       0       0       0       0       0       0
 13057 ;;      Locals:         0       0       0       0       0       0       0
 13058 ;;      Temps:          2       0       0       0       0       0       0
 13059 ;;      Totals:         4       0       0       0       0       0       0
 13060 ;;Total ram usage:        4 bytes
 13061 ;; Hardware stack levels used:    1
 13062 ;; Hardware stack levels required when called:    1
 13063 ;; This function calls:
 13064 ;;		Nothing
 13065 ;; This function is called by:
 13066 ;;		_dtoa
 13067 ;; This function uses a non-reentrant model
 13068 ;;
 13069                           
 13070                           	psect	text45
 13071  00596C                     __ptext45:
 13072                           	callstack 0
 13073  00596C                     _abs:
 13074                           	callstack 23
 13075  00596C  BE14               	btfsc	(abs@a+1)^0,7,c
 13076  00596E  EFC3  F02C         	goto	u5250
 13077  005972  5014               	movf	(abs@a+1)^0,w,c
 13078  005974  E106               	bnz	u5251
 13079  005976  0413               	decf	abs@a^0,w,c
 13080  005978  B0D8               	btfsc	status,0,c
 13081  00597A  EFC1  F02C         	goto	u5251
 13082  00597E  EFC3  F02C         	goto	u5250
 13083  005982                     u5251:
 13084  005982  EFD1  F02C         	goto	l1395
 13085  005986                     u5250:
 13086  005986  C013  F015         	movff	abs@a,??_abs
 13087  00598A  C014  F016         	movff	abs@a+1,??_abs+1
 13088  00598E  1E15               	comf	??_abs^0,f,c
 13089  005990  1E16               	comf	(??_abs+1)^0,f,c
 13090  005992  4A15               	infsnz	??_abs^0,f,c
 13091  005994  2A16               	incf	(??_abs+1)^0,f,c
 13092  005996  C015  F013         	movff	??_abs,?_abs
 13093  00599A  C016  F014         	movff	??_abs+1,?_abs+1
 13094  00599E  EFD5  F02C         	goto	l1398
 13095  0059A2                     l1395:
 13096  0059A2  C013  F013         	movff	abs@a,?_abs
 13097  0059A6  C014  F014         	movff	abs@a+1,?_abs+1
 13098  0059AA                     l1398:
 13099  0059AA  0012               	return		;funcret
 13100  0059AC                     __end_of_abs:
 13101                           	callstack 0
 13102                           
 13103 ;; *************** function ___aomod *****************
 13104 ;; Defined at:
 13105 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
 13106 ;; Parameters:    Size  Location     Type
 13107 ;;  dividend        8    0[COMRAM] long long 
 13108 ;;  divisor         8    8[COMRAM] long long 
 13109 ;; Auto vars:     Size  Location     Type
 13110 ;;  sign            1   17[COMRAM] unsigned char 
 13111 ;;  counter         1   16[COMRAM] unsigned char 
 13112 ;; Return value:  Size  Location     Type
 13113 ;;                  8    0[COMRAM] long long 
 13114 ;; Registers used:
 13115 ;;		wreg, status,2, status,0
 13116 ;; Tracked objects:
 13117 ;;		On entry : 0/0
 13118 ;;		On exit  : 0/0
 13119 ;;		Unchanged: 0/0
 13120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13121 ;;      Params:        16       0       0       0       0       0       0
 13122 ;;      Locals:         2       0       0       0       0       0       0
 13123 ;;      Temps:          0       0       0       0       0       0       0
 13124 ;;      Totals:        18       0       0       0       0       0       0
 13125 ;;Total ram usage:       18 bytes
 13126 ;; Hardware stack levels used:    1
 13127 ;; Hardware stack levels required when called:    1
 13128 ;; This function calls:
 13129 ;;		Nothing
 13130 ;; This function is called by:
 13131 ;;		_dtoa
 13132 ;; This function uses a non-reentrant model
 13133 ;;
 13134                           
 13135                           	psect	text46
 13136  004730                     __ptext46:
 13137                           	callstack 0
 13138  004730                     ___aomod:
 13139                           	callstack 23
 13140  004730  0E00               	movlw	0
 13141  004732  6E12               	movwf	___aomod@sign^0,c
 13142  004734  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 13143  004736  EFA1  F023         	goto	u4450
 13144  00473A  EF9F  F023         	goto	u4451
 13145  00473E                     u4451:
 13146  00473E  EFB3  F023         	goto	l4195
 13147  004742                     u4450:
 13148  004742  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13149  004744  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13150  004746  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13151  004748  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13152  00474A  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13153  00474C  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13154  00474E  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13155  004750  6C01               	negf	___aomod@dividend^0,c
 13156  004752  0E00               	movlw	0
 13157  004754  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13158  004756  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13159  004758  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13160  00475A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13161  00475C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13162  00475E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13163  004760  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13164  004762  0E01               	movlw	1
 13165  004764  6E12               	movwf	___aomod@sign^0,c
 13166  004766                     l4195:
 13167  004766  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 13168  004768  EFBA  F023         	goto	u4460
 13169  00476C  EFB8  F023         	goto	u4461
 13170  004770                     u4461:
 13171  004770  EFCA  F023         	goto	l4199
 13172  004774                     u4460:
 13173  004774  1E10               	comf	(___aomod@divisor+7)^0,f,c
 13174  004776  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 13175  004778  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 13176  00477A  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 13177  00477C  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 13178  00477E  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 13179  004780  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 13180  004782  6C09               	negf	___aomod@divisor^0,c
 13181  004784  0E00               	movlw	0
 13182  004786  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 13183  004788  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 13184  00478A  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 13185  00478C  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 13186  00478E  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 13187  004790  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 13188  004792  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 13189  004794                     l4199:
 13190  004794  5009               	movf	___aomod@divisor^0,w,c
 13191  004796  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 13192  004798  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 13193  00479A  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 13194  00479C  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 13195  00479E  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 13196  0047A0  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 13197  0047A2  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 13198  0047A4  B4D8               	btfsc	status,2,c
 13199  0047A6  EFD7  F023         	goto	u4471
 13200  0047AA  EFD9  F023         	goto	u4470
 13201  0047AE                     u4471:
 13202  0047AE  EF21  F024         	goto	l4215
 13203  0047B2                     u4470:
 13204  0047B2  0E01               	movlw	1
 13205  0047B4  6E11               	movwf	___aomod@counter^0,c
 13206  0047B6  EFE7  F023         	goto	l4205
 13207  0047BA                     l4203:
 13208  0047BA  90D8               	bcf	status,0,c
 13209  0047BC  3609               	rlcf	___aomod@divisor^0,f,c
 13210  0047BE  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 13211  0047C0  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 13212  0047C2  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 13213  0047C4  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 13214  0047C6  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 13215  0047C8  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 13216  0047CA  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 13217  0047CC  2A11               	incf	___aomod@counter^0,f,c
 13218  0047CE                     l4205:
 13219  0047CE  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 13220  0047D0  EFEC  F023         	goto	u4481
 13221  0047D4  EFEE  F023         	goto	u4480
 13222  0047D8                     u4481:
 13223  0047D8  EFDD  F023         	goto	l4203
 13224  0047DC                     u4480:
 13225  0047DC                     l4207:
 13226  0047DC  5009               	movf	___aomod@divisor^0,w,c
 13227  0047DE  5C01               	subwf	___aomod@dividend^0,w,c
 13228  0047E0  500A               	movf	(___aomod@divisor+1)^0,w,c
 13229  0047E2  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 13230  0047E4  500B               	movf	(___aomod@divisor+2)^0,w,c
 13231  0047E6  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 13232  0047E8  500C               	movf	(___aomod@divisor+3)^0,w,c
 13233  0047EA  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 13234  0047EC  500D               	movf	(___aomod@divisor+4)^0,w,c
 13235  0047EE  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 13236  0047F0  500E               	movf	(___aomod@divisor+5)^0,w,c
 13237  0047F2  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 13238  0047F4  500F               	movf	(___aomod@divisor+6)^0,w,c
 13239  0047F6  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 13240  0047F8  5010               	movf	(___aomod@divisor+7)^0,w,c
 13241  0047FA  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 13242  0047FC  A0D8               	btfss	status,0,c
 13243  0047FE  EF03  F024         	goto	u4491
 13244  004802  EF05  F024         	goto	u4490
 13245  004806                     u4491:
 13246  004806  EF15  F024         	goto	l4211
 13247  00480A                     u4490:
 13248  00480A  5009               	movf	___aomod@divisor^0,w,c
 13249  00480C  5E01               	subwf	___aomod@dividend^0,f,c
 13250  00480E  500A               	movf	(___aomod@divisor+1)^0,w,c
 13251  004810  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 13252  004812  500B               	movf	(___aomod@divisor+2)^0,w,c
 13253  004814  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 13254  004816  500C               	movf	(___aomod@divisor+3)^0,w,c
 13255  004818  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 13256  00481A  500D               	movf	(___aomod@divisor+4)^0,w,c
 13257  00481C  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 13258  00481E  500E               	movf	(___aomod@divisor+5)^0,w,c
 13259  004820  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 13260  004822  500F               	movf	(___aomod@divisor+6)^0,w,c
 13261  004824  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 13262  004826  5010               	movf	(___aomod@divisor+7)^0,w,c
 13263  004828  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 13264  00482A                     l4211:
 13265  00482A  90D8               	bcf	status,0,c
 13266  00482C  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 13267  00482E  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 13268  004830  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 13269  004832  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 13270  004834  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 13271  004836  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 13272  004838  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 13273  00483A  3209               	rrcf	___aomod@divisor^0,f,c
 13274  00483C  2E11               	decfsz	___aomod@counter^0,f,c
 13275  00483E  EFEE  F023         	goto	l4207
 13276  004842                     l4215:
 13277  004842  5012               	movf	___aomod@sign^0,w,c
 13278  004844  B4D8               	btfsc	status,2,c
 13279  004846  EF27  F024         	goto	u4501
 13280  00484A  EF29  F024         	goto	u4500
 13281  00484E                     u4501:
 13282  00484E  EF39  F024         	goto	l4219
 13283  004852                     u4500:
 13284  004852  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13285  004854  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13286  004856  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13287  004858  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13288  00485A  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13289  00485C  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13290  00485E  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13291  004860  6C01               	negf	___aomod@dividend^0,c
 13292  004862  0E00               	movlw	0
 13293  004864  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13294  004866  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13295  004868  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13296  00486A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13297  00486C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13298  00486E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13299  004870  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13300  004872                     l4219:
 13301  004872  C001  F001         	movff	___aomod@dividend,?___aomod
 13302  004876  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 13303  00487A  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 13304  00487E  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 13305  004882  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 13306  004886  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 13307  00488A  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 13308  00488E  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 13309  004892  0012               	return		;funcret
 13310  004894                     __end_of___aomod:
 13311                           	callstack 0
 13312                           
 13313 ;; *************** function ___aodiv *****************
 13314 ;; Defined at:
 13315 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
 13316 ;; Parameters:    Size  Location     Type
 13317 ;;  dividend        8    0[COMRAM] long long 
 13318 ;;  divisor         8    8[COMRAM] long long 
 13319 ;; Auto vars:     Size  Location     Type
 13320 ;;  quotient        8   18[COMRAM] long long 
 13321 ;;  sign            1   17[COMRAM] unsigned char 
 13322 ;;  counter         1   16[COMRAM] unsigned char 
 13323 ;; Return value:  Size  Location     Type
 13324 ;;                  8    0[COMRAM] long long 
 13325 ;; Registers used:
 13326 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13327 ;; Tracked objects:
 13328 ;;		On entry : 0/0
 13329 ;;		On exit  : 0/0
 13330 ;;		Unchanged: 0/0
 13331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13332 ;;      Params:        16       0       0       0       0       0       0
 13333 ;;      Locals:        10       0       0       0       0       0       0
 13334 ;;      Temps:          0       0       0       0       0       0       0
 13335 ;;      Totals:        26       0       0       0       0       0       0
 13336 ;;Total ram usage:       26 bytes
 13337 ;; Hardware stack levels used:    1
 13338 ;; Hardware stack levels required when called:    1
 13339 ;; This function calls:
 13340 ;;		Nothing
 13341 ;; This function is called by:
 13342 ;;		_dtoa
 13343 ;; This function uses a non-reentrant model
 13344 ;;
 13345                           
 13346                           	psect	text47
 13347  004424                     __ptext47:
 13348                           	callstack 0
 13349  004424                     ___aodiv:
 13350                           	callstack 23
 13351  004424  0E00               	movlw	0
 13352  004426  6E12               	movwf	___aodiv@sign^0,c
 13353  004428  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 13354  00442A  EF1B  F022         	goto	u4380
 13355  00442E  EF19  F022         	goto	u4381
 13356  004432                     u4381:
 13357  004432  EF2D  F022         	goto	l4151
 13358  004436                     u4380:
 13359  004436  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 13360  004438  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 13361  00443A  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 13362  00443C  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 13363  00443E  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 13364  004440  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 13365  004442  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 13366  004444  6C09               	negf	___aodiv@divisor^0,c
 13367  004446  0E00               	movlw	0
 13368  004448  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 13369  00444A  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 13370  00444C  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 13371  00444E  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 13372  004450  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 13373  004452  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 13374  004454  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 13375  004456  0E01               	movlw	1
 13376  004458  6E12               	movwf	___aodiv@sign^0,c
 13377  00445A                     l4151:
 13378  00445A  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 13379  00445C  EF34  F022         	goto	u4390
 13380  004460  EF32  F022         	goto	u4391
 13381  004464                     u4391:
 13382  004464  EF46  F022         	goto	l4157
 13383  004468                     u4390:
 13384  004468  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 13385  00446A  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 13386  00446C  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 13387  00446E  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 13388  004470  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 13389  004472  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 13390  004474  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 13391  004476  6C01               	negf	___aodiv@dividend^0,c
 13392  004478  0E00               	movlw	0
 13393  00447A  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 13394  00447C  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 13395  00447E  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 13396  004480  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 13397  004482  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 13398  004484  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 13399  004486  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 13400  004488  0E01               	movlw	1
 13401  00448A  1A12               	xorwf	___aodiv@sign^0,f,c
 13402  00448C                     l4157:
 13403  00448C  EE20  F013         	lfsr	2,___aodiv@quotient
 13404  004490  0E07               	movlw	7
 13405  004492                     u4401:
 13406  004492  6ADE               	clrf	postinc2,c
 13407  004494  06E8               	decf	wreg,f,c
 13408  004496  E2FD               	bc	u4401
 13409  004498  5009               	movf	___aodiv@divisor^0,w,c
 13410  00449A  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 13411  00449C  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 13412  00449E  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 13413  0044A0  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 13414  0044A2  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 13415  0044A4  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 13416  0044A6  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 13417  0044A8  B4D8               	btfsc	status,2,c
 13418  0044AA  EF59  F022         	goto	u4411
 13419  0044AE  EF5B  F022         	goto	u4410
 13420  0044B2                     u4411:
 13421  0044B2  EFAD  F022         	goto	l4179
 13422  0044B6                     u4410:
 13423  0044B6  0E01               	movlw	1
 13424  0044B8  6E11               	movwf	___aodiv@counter^0,c
 13425  0044BA  EF69  F022         	goto	l4165
 13426  0044BE                     l4163:
 13427  0044BE  90D8               	bcf	status,0,c
 13428  0044C0  3609               	rlcf	___aodiv@divisor^0,f,c
 13429  0044C2  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 13430  0044C4  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 13431  0044C6  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 13432  0044C8  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 13433  0044CA  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 13434  0044CC  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 13435  0044CE  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 13436  0044D0  2A11               	incf	___aodiv@counter^0,f,c
 13437  0044D2                     l4165:
 13438  0044D2  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 13439  0044D4  EF6E  F022         	goto	u4421
 13440  0044D8  EF70  F022         	goto	u4420
 13441  0044DC                     u4421:
 13442  0044DC  EF5F  F022         	goto	l4163
 13443  0044E0                     u4420:
 13444  0044E0                     l4167:
 13445  0044E0  90D8               	bcf	status,0,c
 13446  0044E2  3613               	rlcf	___aodiv@quotient^0,f,c
 13447  0044E4  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 13448  0044E6  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 13449  0044E8  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 13450  0044EA  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 13451  0044EC  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 13452  0044EE  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 13453  0044F0  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 13454  0044F2  5009               	movf	___aodiv@divisor^0,w,c
 13455  0044F4  5C01               	subwf	___aodiv@dividend^0,w,c
 13456  0044F6  500A               	movf	(___aodiv@divisor+1)^0,w,c
 13457  0044F8  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 13458  0044FA  500B               	movf	(___aodiv@divisor+2)^0,w,c
 13459  0044FC  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 13460  0044FE  500C               	movf	(___aodiv@divisor+3)^0,w,c
 13461  004500  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 13462  004502  500D               	movf	(___aodiv@divisor+4)^0,w,c
 13463  004504  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 13464  004506  500E               	movf	(___aodiv@divisor+5)^0,w,c
 13465  004508  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 13466  00450A  500F               	movf	(___aodiv@divisor+6)^0,w,c
 13467  00450C  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 13468  00450E  5010               	movf	(___aodiv@divisor+7)^0,w,c
 13469  004510  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 13470  004512  A0D8               	btfss	status,0,c
 13471  004514  EF8E  F022         	goto	u4431
 13472  004518  EF90  F022         	goto	u4430
 13473  00451C                     u4431:
 13474  00451C  EFA1  F022         	goto	l4175
 13475  004520                     u4430:
 13476  004520  5009               	movf	___aodiv@divisor^0,w,c
 13477  004522  5E01               	subwf	___aodiv@dividend^0,f,c
 13478  004524  500A               	movf	(___aodiv@divisor+1)^0,w,c
 13479  004526  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 13480  004528  500B               	movf	(___aodiv@divisor+2)^0,w,c
 13481  00452A  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 13482  00452C  500C               	movf	(___aodiv@divisor+3)^0,w,c
 13483  00452E  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 13484  004530  500D               	movf	(___aodiv@divisor+4)^0,w,c
 13485  004532  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 13486  004534  500E               	movf	(___aodiv@divisor+5)^0,w,c
 13487  004536  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 13488  004538  500F               	movf	(___aodiv@divisor+6)^0,w,c
 13489  00453A  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 13490  00453C  5010               	movf	(___aodiv@divisor+7)^0,w,c
 13491  00453E  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 13492  004540  8013               	bsf	___aodiv@quotient^0,0,c
 13493  004542                     l4175:
 13494  004542  90D8               	bcf	status,0,c
 13495  004544  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 13496  004546  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 13497  004548  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 13498  00454A  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 13499  00454C  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 13500  00454E  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 13501  004550  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 13502  004552  3209               	rrcf	___aodiv@divisor^0,f,c
 13503  004554  2E11               	decfsz	___aodiv@counter^0,f,c
 13504  004556  EF70  F022         	goto	l4167
 13505  00455A                     l4179:
 13506  00455A  5012               	movf	___aodiv@sign^0,w,c
 13507  00455C  B4D8               	btfsc	status,2,c
 13508  00455E  EFB3  F022         	goto	u4441
 13509  004562  EFB5  F022         	goto	u4440
 13510  004566                     u4441:
 13511  004566  EFC5  F022         	goto	l4183
 13512  00456A                     u4440:
 13513  00456A  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 13514  00456C  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 13515  00456E  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 13516  004570  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 13517  004572  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 13518  004574  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 13519  004576  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 13520  004578  6C13               	negf	___aodiv@quotient^0,c
 13521  00457A  0E00               	movlw	0
 13522  00457C  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 13523  00457E  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 13524  004580  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 13525  004582  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 13526  004584  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 13527  004586  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 13528  004588  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 13529  00458A                     l4183:
 13530  00458A  C013  F001         	movff	___aodiv@quotient,?___aodiv
 13531  00458E  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 13532  004592  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 13533  004596  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 13534  00459A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 13535  00459E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 13536  0045A2  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 13537  0045A6  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 13538  0045AA  0012               	return		;funcret
 13539  0045AC                     __end_of___aodiv:
 13540                           	callstack 0
 13541                           
 13542 ;; *************** function _atoi *****************
 13543 ;; Defined at:
 13544 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
 13545 ;; Parameters:    Size  Location     Type
 13546 ;;  s               2    7[COMRAM] PTR const unsigned char 
 13547 ;;		 -> STR_16(13), STR_14(14), STR_12(16), STR_10(16), 
 13548 ;;		 -> STR_8(18), STR_6(18), STR_4(18), STR_2(15), 
 13549 ;; Auto vars:     Size  Location     Type
 13550 ;;  n               2   20[COMRAM] int 
 13551 ;;  neg             2   13[COMRAM] int 
 13552 ;; Return value:  Size  Location     Type
 13553 ;;                  2    7[COMRAM] int 
 13554 ;; Registers used:
 13555 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13556 ;; Tracked objects:
 13557 ;;		On entry : 0/0
 13558 ;;		On exit  : 0/0
 13559 ;;		Unchanged: 0/0
 13560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13561 ;;      Params:         2       0       0       0       0       0       0
 13562 ;;      Locals:         9       0       0       0       0       0       0
 13563 ;;      Temps:          4       0       0       0       0       0       0
 13564 ;;      Totals:        15       0       0       0       0       0       0
 13565 ;;Total ram usage:       15 bytes
 13566 ;; Hardware stack levels used:    1
 13567 ;; Hardware stack levels required when called:    2
 13568 ;; This function calls:
 13569 ;;		___wmul
 13570 ;;		_isdigit
 13571 ;;		_isspace
 13572 ;; This function is called by:
 13573 ;;		_vfpfcnvrt
 13574 ;; This function uses a non-reentrant model
 13575 ;;
 13576                           
 13577                           	psect	text48
 13578  004294                     __ptext48:
 13579                           	callstack 0
 13580  004294                     _atoi:
 13581                           	callstack 23
 13582  004294  0E00               	movlw	0
 13583  004296  6E16               	movwf	(atoi@n+1)^0,c
 13584  004298  0E00               	movlw	0
 13585  00429A  6E15               	movwf	atoi@n^0,c
 13586  00429C  0E00               	movlw	0
 13587  00429E  6E0F               	movwf	(atoi@neg+1)^0,c
 13588  0042A0  0E00               	movlw	0
 13589  0042A2  6E0E               	movwf	atoi@neg^0,c
 13590  0042A4  EF56  F021         	goto	l5137
 13591  0042A8                     l5135:
 13592  0042A8  4A08               	infsnz	atoi@s^0,f,c
 13593  0042AA  2A09               	incf	(atoi@s+1)^0,f,c
 13594  0042AC                     l5137:
 13595  0042AC  0E01               	movlw	1
 13596  0042AE  6E14               	movwf	_atoi$2573^0,c
 13597  0042B0  C008  FFF6         	movff	atoi@s,tblptrl
 13598  0042B4  C009  FFF7         	movff	atoi@s+1,tblptrh
 13599  0042B8                     	if	0	;tblptru may be non-zero
 13600  0042B8                     	endif
 13601  0042B8                     	if	0	;tblptru may be non-zero
 13602  0042B8                     	endif
 13603  0042B8  0008               	tblrd		*
 13604  0042BA  50F5               	movf	tablat,w,c
 13605  0042BC  0A20               	xorlw	32
 13606  0042BE  B4D8               	btfsc	status,2,c
 13607  0042C0  EF64  F021         	goto	u6191
 13608  0042C4  EF66  F021         	goto	u6190
 13609  0042C8                     u6191:
 13610  0042C8  EF83  F021         	goto	l5145
 13611  0042CC                     u6190:
 13612  0042CC  0EF7               	movlw	247
 13613  0042CE  6E0A               	movwf	??_atoi^0,c
 13614  0042D0  0EFF               	movlw	255
 13615  0042D2  6E0B               	movwf	(??_atoi+1)^0,c
 13616  0042D4  C008  FFF6         	movff	atoi@s,tblptrl
 13617  0042D8  C009  FFF7         	movff	atoi@s+1,tblptrh
 13618  0042DC                     	if	0	;tblptru may be non-zero
 13619  0042DC                     	endif
 13620  0042DC                     	if	0	;tblptru may be non-zero
 13621  0042DC                     	endif
 13622  0042DC  0008               	tblrd		*
 13623  0042DE  50F5               	movf	tablat,w,c
 13624  0042E0  6E0C               	movwf	(??_atoi+2)^0,c
 13625  0042E2  6A0D               	clrf	(??_atoi+3)^0,c
 13626  0042E4  500A               	movf	??_atoi^0,w,c
 13627  0042E6  260C               	addwf	(??_atoi+2)^0,f,c
 13628  0042E8  500B               	movf	(??_atoi+1)^0,w,c
 13629  0042EA  220D               	addwfc	(??_atoi+3)^0,f,c
 13630  0042EC  500D               	movf	(??_atoi+3)^0,w,c
 13631  0042EE  E109               	bnz	u6200
 13632  0042F0  0E05               	movlw	5
 13633  0042F2  5C0C               	subwf	(??_atoi+2)^0,w,c
 13634  0042F4  A0D8               	btfss	status,0,c
 13635  0042F6  EF7F  F021         	goto	u6201
 13636  0042FA  EF81  F021         	goto	u6200
 13637  0042FE                     u6201:
 13638  0042FE  EF83  F021         	goto	l5145
 13639  004302                     u6200:
 13640  004302  0E00               	movlw	0
 13641  004304  6E14               	movwf	_atoi$2573^0,c
 13642  004306                     l5145:
 13643  004306  C014  F010         	movff	_atoi$2573,_atoi$2572
 13644  00430A  6A11               	clrf	(_atoi$2572+1)^0,c
 13645  00430C  5010               	movf	_atoi$2572^0,w,c
 13646  00430E  1011               	iorwf	(_atoi$2572+1)^0,w,c
 13647  004310  A4D8               	btfss	status,2,c
 13648  004312  EF8D  F021         	goto	u6211
 13649  004316  EF8F  F021         	goto	u6210
 13650  00431A                     u6211:
 13651  00431A  EF54  F021         	goto	l5135
 13652  00431E                     u6210:
 13653  00431E  EF99  F021         	goto	l5155
 13654  004322                     l5151:
 13655  004322  0E00               	movlw	0
 13656  004324  6E0F               	movwf	(atoi@neg+1)^0,c
 13657  004326  0E01               	movlw	1
 13658  004328  6E0E               	movwf	atoi@neg^0,c
 13659  00432A                     l5153:
 13660  00432A  4A08               	infsnz	atoi@s^0,f,c
 13661  00432C  2A09               	incf	(atoi@s+1)^0,f,c
 13662  00432E  EFCE  F021         	goto	l5161
 13663  004332                     l5155:
 13664  004332  C008  FFF6         	movff	atoi@s,tblptrl
 13665  004336  C009  FFF7         	movff	atoi@s+1,tblptrh
 13666  00433A                     	if	0	;tblptru may be non-zero
 13667  00433A                     	endif
 13668  00433A                     	if	0	;tblptru may be non-zero
 13669  00433A                     	endif
 13670  00433A  0008               	tblrd		*
 13671  00433C  50F5               	movf	tablat,w,c
 13672  00433E  6E0A               	movwf	??_atoi^0,c
 13673  004340  6A0B               	clrf	(??_atoi+1)^0,c
 13674                           
 13675                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13676                           ; Switch size 1, requested type "simple"
 13677                           ; Number of cases is 1, Range of values is 0 to 0
 13678                           ; switch strategies available:
 13679                           ; Name         Instructions Cycles
 13680                           ; simple_byte            4     3 (average)
 13681                           ;	Chosen strategy is simple_byte
 13682  004342  500B               	movf	(??_atoi+1)^0,w,c
 13683  004344  0A00               	xorlw	0	; case 0
 13684  004346  B4D8               	btfsc	status,2,c
 13685  004348  EFA8  F021         	goto	l6281
 13686  00434C  EFCE  F021         	goto	l5161
 13687  004350                     l6281:
 13688                           
 13689                           ; Switch size 1, requested type "simple"
 13690                           ; Number of cases is 2, Range of values is 43 to 45
 13691                           ; switch strategies available:
 13692                           ; Name         Instructions Cycles
 13693                           ; simple_byte            7     4 (average)
 13694                           ;	Chosen strategy is simple_byte
 13695  004350  500A               	movf	??_atoi^0,w,c
 13696  004352  0A2B               	xorlw	43	; case 43
 13697  004354  B4D8               	btfsc	status,2,c
 13698  004356  EF95  F021         	goto	l5153
 13699  00435A  0A06               	xorlw	6	; case 45
 13700  00435C  B4D8               	btfsc	status,2,c
 13701  00435E  EF91  F021         	goto	l5151
 13702  004362  EFCE  F021         	goto	l5161
 13703  004366                     l5157:
 13704  004366  C015  F001         	movff	atoi@n,___wmul@multiplier
 13705  00436A  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 13706  00436E  0E00               	movlw	0
 13707  004370  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 13708  004372  0E0A               	movlw	10
 13709  004374  6E03               	movwf	___wmul@multiplicand^0,c
 13710  004376  EC11  F02E         	call	___wmul	;wreg free
 13711  00437A  C008  FFF6         	movff	atoi@s,tblptrl
 13712  00437E  C009  FFF7         	movff	atoi@s+1,tblptrh
 13713  004382                     	if	0	;tblptru may be non-zero
 13714  004382                     	endif
 13715  004382                     	if	0	;tblptru may be non-zero
 13716  004382                     	endif
 13717  004382  0008               	tblrd		*
 13718  004384  50F5               	movf	tablat,w,c
 13719  004386  5E01               	subwf	?___wmul^0,f,c
 13720  004388  0E00               	movlw	0
 13721  00438A  5A02               	subwfb	(?___wmul+1)^0,f,c
 13722  00438C  0E30               	movlw	48
 13723  00438E  2401               	addwf	?___wmul^0,w,c
 13724  004390  6E15               	movwf	atoi@n^0,c
 13725  004392  0E00               	movlw	0
 13726  004394  2002               	addwfc	(?___wmul+1)^0,w,c
 13727  004396  6E16               	movwf	(atoi@n+1)^0,c
 13728  004398  EF95  F021         	goto	l5153
 13729  00439C                     l5161:
 13730  00439C  0ED0               	movlw	208
 13731  00439E  6E0A               	movwf	??_atoi^0,c
 13732  0043A0  0EFF               	movlw	255
 13733  0043A2  6E0B               	movwf	(??_atoi+1)^0,c
 13734  0043A4  C008  FFF6         	movff	atoi@s,tblptrl
 13735  0043A8  C009  FFF7         	movff	atoi@s+1,tblptrh
 13736  0043AC                     	if	0	;tblptru may be non-zero
 13737  0043AC                     	endif
 13738  0043AC                     	if	0	;tblptru may be non-zero
 13739  0043AC                     	endif
 13740  0043AC  0008               	tblrd		*
 13741  0043AE  50F5               	movf	tablat,w,c
 13742  0043B0  6E0C               	movwf	(??_atoi+2)^0,c
 13743  0043B2  6A0D               	clrf	(??_atoi+3)^0,c
 13744  0043B4  500A               	movf	??_atoi^0,w,c
 13745  0043B6  260C               	addwf	(??_atoi+2)^0,f,c
 13746  0043B8  500B               	movf	(??_atoi+1)^0,w,c
 13747  0043BA  220D               	addwfc	(??_atoi+3)^0,f,c
 13748  0043BC  500D               	movf	(??_atoi+3)^0,w,c
 13749  0043BE  E10A               	bnz	u6220
 13750  0043C0  0E0A               	movlw	10
 13751  0043C2  5C0C               	subwf	(??_atoi+2)^0,w,c
 13752  0043C4  A0D8               	btfss	status,0,c
 13753  0043C6  EFE7  F021         	goto	u6221
 13754  0043CA  EFEA  F021         	goto	u6220
 13755  0043CE                     u6221:
 13756  0043CE  0E01               	movlw	1
 13757  0043D0  EFEB  F021         	goto	u6230
 13758  0043D4                     u6220:
 13759  0043D4  0E00               	movlw	0
 13760  0043D6                     u6230:
 13761  0043D6  6E12               	movwf	_atoi$2574^0,c
 13762  0043D8  6A13               	clrf	(_atoi$2574+1)^0,c
 13763  0043DA  5012               	movf	_atoi$2574^0,w,c
 13764  0043DC  1013               	iorwf	(_atoi$2574+1)^0,w,c
 13765  0043DE  A4D8               	btfss	status,2,c
 13766  0043E0  EFF4  F021         	goto	u6241
 13767  0043E4  EFF6  F021         	goto	u6240
 13768  0043E8                     u6241:
 13769  0043E8  EFB3  F021         	goto	l5157
 13770  0043EC                     u6240:
 13771  0043EC  500E               	movf	atoi@neg^0,w,c
 13772  0043EE  100F               	iorwf	(atoi@neg+1)^0,w,c
 13773  0043F0  A4D8               	btfss	status,2,c
 13774  0043F2  EFFD  F021         	goto	u6251
 13775  0043F6  EFFF  F021         	goto	u6250
 13776  0043FA                     u6251:
 13777  0043FA  EF0D  F022         	goto	l1426
 13778  0043FE                     u6250:
 13779  0043FE  C015  F00A         	movff	atoi@n,??_atoi
 13780  004402  C016  F00B         	movff	atoi@n+1,??_atoi+1
 13781  004406  1E0A               	comf	??_atoi^0,f,c
 13782  004408  1E0B               	comf	(??_atoi+1)^0,f,c
 13783  00440A  4A0A               	infsnz	??_atoi^0,f,c
 13784  00440C  2A0B               	incf	(??_atoi+1)^0,f,c
 13785  00440E  C00A  F008         	movff	??_atoi,?_atoi
 13786  004412  C00B  F009         	movff	??_atoi+1,?_atoi+1
 13787  004416  EF11  F022         	goto	l1429
 13788  00441A                     l1426:
 13789  00441A  C015  F008         	movff	atoi@n,?_atoi
 13790  00441E  C016  F009         	movff	atoi@n+1,?_atoi+1
 13791  004422                     l1429:
 13792  004422  0012               	return		;funcret
 13793  004424                     __end_of_atoi:
 13794                           	callstack 0
 13795                           
 13796 ;; *************** function _isspace *****************
 13797 ;; Defined at:
 13798 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
 13799 ;; Parameters:    Size  Location     Type
 13800 ;;  c               2    0[COMRAM] int 
 13801 ;; Auto vars:     Size  Location     Type
 13802 ;;		None
 13803 ;; Return value:  Size  Location     Type
 13804 ;;                  2    0[COMRAM] int 
 13805 ;; Registers used:
 13806 ;;		wreg, status,2, status,0
 13807 ;; Tracked objects:
 13808 ;;		On entry : 0/0
 13809 ;;		On exit  : 0/0
 13810 ;;		Unchanged: 0/0
 13811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13812 ;;      Params:         2       0       0       0       0       0       0
 13813 ;;      Locals:         1       0       0       0       0       0       0
 13814 ;;      Temps:          4       0       0       0       0       0       0
 13815 ;;      Totals:         7       0       0       0       0       0       0
 13816 ;;Total ram usage:        7 bytes
 13817 ;; Hardware stack levels used:    1
 13818 ;; Hardware stack levels required when called:    1
 13819 ;; This function calls:
 13820 ;;		Nothing
 13821 ;; This function is called by:
 13822 ;;		_atoi
 13823 ;; This function uses a non-reentrant model
 13824 ;;
 13825                           
 13826                           	psect	text49
 13827  00584E                     __ptext49:
 13828                           	callstack 0
 13829  00584E                     _isspace:
 13830                           	callstack 23
 13831  00584E  0E01               	movlw	1
 13832  005850  6E07               	movwf	_isspace$2603^0,c
 13833  005852  0E20               	movlw	32
 13834  005854  1801               	xorwf	isspace@c^0,w,c
 13835  005856  1002               	iorwf	(isspace@c+1)^0,w,c
 13836  005858  B4D8               	btfsc	status,2,c
 13837  00585A  EF31  F02C         	goto	u5501
 13838  00585E  EF33  F02C         	goto	u5500
 13839  005862                     u5501:
 13840  005862  EF4C  F02C         	goto	l4769
 13841  005866                     u5500:
 13842  005866  0EF7               	movlw	247
 13843  005868  6E03               	movwf	??_isspace^0,c
 13844  00586A  0EFF               	movlw	255
 13845  00586C  6E04               	movwf	(??_isspace+1)^0,c
 13846  00586E  C001  F005         	movff	isspace@c,??_isspace+2
 13847  005872  C002  F006         	movff	isspace@c+1,??_isspace+3
 13848  005876  5003               	movf	??_isspace^0,w,c
 13849  005878  2605               	addwf	(??_isspace+2)^0,f,c
 13850  00587A  5004               	movf	(??_isspace+1)^0,w,c
 13851  00587C  2206               	addwfc	(??_isspace+3)^0,f,c
 13852  00587E  5006               	movf	(??_isspace+3)^0,w,c
 13853  005880  E109               	bnz	u5510
 13854  005882  0E05               	movlw	5
 13855  005884  5C05               	subwf	(??_isspace+2)^0,w,c
 13856  005886  A0D8               	btfss	status,0,c
 13857  005888  EF48  F02C         	goto	u5511
 13858  00588C  EF4A  F02C         	goto	u5510
 13859  005890                     u5511:
 13860  005890  EF4C  F02C         	goto	l4769
 13861  005894                     u5510:
 13862  005894  0E00               	movlw	0
 13863  005896  6E07               	movwf	_isspace$2603^0,c
 13864  005898                     l4769:
 13865  005898  C007  F001         	movff	_isspace$2603,?_isspace
 13866  00589C  6A02               	clrf	(?_isspace+1)^0,c
 13867  00589E  0012               	return		;funcret
 13868  0058A0                     __end_of_isspace:
 13869                           	callstack 0
 13870                           
 13871 ;; *************** function _isdigit *****************
 13872 ;; Defined at:
 13873 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
 13874 ;; Parameters:    Size  Location     Type
 13875 ;;  c               2    0[COMRAM] int 
 13876 ;; Auto vars:     Size  Location     Type
 13877 ;;		None
 13878 ;; Return value:  Size  Location     Type
 13879 ;;                  2    0[COMRAM] int 
 13880 ;; Registers used:
 13881 ;;		wreg, status,2, status,0
 13882 ;; Tracked objects:
 13883 ;;		On entry : 0/0
 13884 ;;		On exit  : 0/0
 13885 ;;		Unchanged: 0/0
 13886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13887 ;;      Params:         2       0       0       0       0       0       0
 13888 ;;      Locals:         0       0       0       0       0       0       0
 13889 ;;      Temps:          4       0       0       0       0       0       0
 13890 ;;      Totals:         6       0       0       0       0       0       0
 13891 ;;Total ram usage:        6 bytes
 13892 ;; Hardware stack levels used:    1
 13893 ;; Hardware stack levels required when called:    1
 13894 ;; This function calls:
 13895 ;;		Nothing
 13896 ;; This function is called by:
 13897 ;;		_vfpfcnvrt
 13898 ;;		_atoi
 13899 ;; This function uses a non-reentrant model
 13900 ;;
 13901                           
 13902                           	psect	text50
 13903  005A96                     __ptext50:
 13904                           	callstack 0
 13905  005A96                     _isdigit:
 13906                           	callstack 24
 13907  005A96  0ED0               	movlw	208
 13908  005A98  6E03               	movwf	??_isdigit^0,c
 13909  005A9A  0EFF               	movlw	255
 13910  005A9C  6E04               	movwf	(??_isdigit+1)^0,c
 13911  005A9E  C001  F005         	movff	isdigit@c,??_isdigit+2
 13912  005AA2  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 13913  005AA6  5003               	movf	??_isdigit^0,w,c
 13914  005AA8  2605               	addwf	(??_isdigit+2)^0,f,c
 13915  005AAA  5004               	movf	(??_isdigit+1)^0,w,c
 13916  005AAC  2206               	addwfc	(??_isdigit+3)^0,f,c
 13917  005AAE  5006               	movf	(??_isdigit+3)^0,w,c
 13918  005AB0  E10A               	bnz	u5480
 13919  005AB2  0E0A               	movlw	10
 13920  005AB4  5C05               	subwf	(??_isdigit+2)^0,w,c
 13921  005AB6  A0D8               	btfss	status,0,c
 13922  005AB8  EF60  F02D         	goto	u5481
 13923  005ABC  EF63  F02D         	goto	u5480
 13924  005AC0                     u5481:
 13925  005AC0  0E01               	movlw	1
 13926  005AC2  EF64  F02D         	goto	u5490
 13927  005AC6                     u5480:
 13928  005AC6  0E00               	movlw	0
 13929  005AC8                     u5490:
 13930  005AC8  6E01               	movwf	?_isdigit^0,c
 13931  005ACA  6A02               	clrf	(?_isdigit+1)^0,c
 13932  005ACC  0012               	return		;funcret
 13933  005ACE                     __end_of_isdigit:
 13934                           	callstack 0
 13935                           
 13936 ;; *************** function ___wmul *****************
 13937 ;; Defined at:
 13938 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
 13939 ;; Parameters:    Size  Location     Type
 13940 ;;  multiplier      2    0[COMRAM] unsigned int 
 13941 ;;  multiplicand    2    2[COMRAM] unsigned int 
 13942 ;; Auto vars:     Size  Location     Type
 13943 ;;  product         2    4[COMRAM] unsigned int 
 13944 ;; Return value:  Size  Location     Type
 13945 ;;                  2    0[COMRAM] unsigned int 
 13946 ;; Registers used:
 13947 ;;		wreg, status,2, status,0, prodl, prodh
 13948 ;; Tracked objects:
 13949 ;;		On entry : 0/0
 13950 ;;		On exit  : 0/0
 13951 ;;		Unchanged: 0/0
 13952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13953 ;;      Params:         4       0       0       0       0       0       0
 13954 ;;      Locals:         2       0       0       0       0       0       0
 13955 ;;      Temps:          0       0       0       0       0       0       0
 13956 ;;      Totals:         6       0       0       0       0       0       0
 13957 ;;Total ram usage:        6 bytes
 13958 ;; Hardware stack levels used:    1
 13959 ;; Hardware stack levels required when called:    1
 13960 ;; This function calls:
 13961 ;;		Nothing
 13962 ;; This function is called by:
 13963 ;;		_atoi
 13964 ;; This function uses a non-reentrant model
 13965 ;;
 13966                           
 13967                           	psect	text51
 13968  005C22                     __ptext51:
 13969                           	callstack 0
 13970  005C22                     ___wmul:
 13971                           	callstack 23
 13972  005C22  5001               	movf	___wmul@multiplier^0,w,c
 13973  005C24  0203               	mulwf	___wmul@multiplicand^0,c
 13974  005C26  CFF3 F005          	movff	prodl,___wmul@product
 13975  005C2A  CFF4 F006          	movff	prodh,___wmul@product+1
 13976  005C2E  5001               	movf	___wmul@multiplier^0,w,c
 13977  005C30  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 13978  005C32  50F3               	movf	243,w,c
 13979  005C34  2606               	addwf	(___wmul@product+1)^0,f,c
 13980  005C36  5002               	movf	(___wmul@multiplier+1)^0,w,c
 13981  005C38  0203               	mulwf	___wmul@multiplicand^0,c
 13982  005C3A  50F3               	movf	243,w,c
 13983  005C3C  2606               	addwf	(___wmul@product+1)^0,f,c
 13984  005C3E  C005  F001         	movff	___wmul@product,?___wmul
 13985  005C42  C006  F002         	movff	___wmul@product+1,?___wmul+1
 13986  005C46  0012               	return		;funcret
 13987  005C48                     __end_of___wmul:
 13988                           	callstack 0
 13989                           
 13990 ;; *************** function _eepromWrite *****************
 13991 ;; Defined at:
 13992 ;;		line 62 in file "fs_eeprom.c"
 13993 ;; Parameters:    Size  Location     Type
 13994 ;;  address         1    wreg     unsigned char 
 13995 ;;  data            1    0[COMRAM] unsigned char 
 13996 ;; Auto vars:     Size  Location     Type
 13997 ;;  address         1    1[COMRAM] unsigned char 
 13998 ;; Return value:  Size  Location     Type
 13999 ;;                  1    wreg      void 
 14000 ;; Registers used:
 14001 ;;		wreg, status,2
 14002 ;; Tracked objects:
 14003 ;;		On entry : 0/0
 14004 ;;		On exit  : 0/0
 14005 ;;		Unchanged: 0/0
 14006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14007 ;;      Params:         1       0       0       0       0       0       0
 14008 ;;      Locals:         1       0       0       0       0       0       0
 14009 ;;      Temps:          0       0       0       0       0       0       0
 14010 ;;      Totals:         2       0       0       0       0       0       0
 14011 ;;Total ram usage:        2 bytes
 14012 ;; Hardware stack levels used:    1
 14013 ;; Hardware stack levels required when called:    1
 14014 ;; This function calls:
 14015 ;;		Nothing
 14016 ;; This function is called by:
 14017 ;;		_stateMachine
 14018 ;; This function uses a non-reentrant model
 14019 ;;
 14020                           
 14021                           	psect	text52
 14022  005BA4                     __ptext52:
 14023                           	callstack 0
 14024  005BA4                     _eepromWrite:
 14025                           	callstack 27
 14026                           
 14027                           ;incstack = 0
 14028                           ;eepromWrite@address stored from wreg
 14029  005BA4  6E02               	movwf	eepromWrite@address^0,c
 14030  005BA6                     
 14031                           ;fs_eeprom.c: 62: void eepromWrite(uint8_t address, uint8_t data);fs_eeprom.c: 63: {;fs_
      +                          eeprom.c: 66:     EEADR = (uint8_t)address;
 14032  005BA6  C002  FFA9         	movff	eepromWrite@address,4009	;volatile
 14033  005BAA                     
 14034                           ;fs_eeprom.c: 68:     EEDATA = data;
 14035  005BAA  C001  FFA8         	movff	eepromWrite@data,4008	;volatile
 14036  005BAE                     
 14037                           ;fs_eeprom.c: 69:     EECON1bits.EEPGD = 0;
 14038  005BAE  9EA6               	bcf	166,7,c	;volsfr
 14039  005BB0                     
 14040                           ;fs_eeprom.c: 70:     EECON1bits.CFGS = 0;
 14041  005BB0  9CA6               	bcf	166,6,c	;volsfr
 14042  005BB2                     
 14043                           ;fs_eeprom.c: 71:     EECON1bits.WREN = 1;
 14044  005BB2  84A6               	bsf	166,2,c	;volsfr
 14045  005BB4                     
 14046                           ;fs_eeprom.c: 75:     EECON2 = 0x55;
 14047  005BB4  0E55               	movlw	85
 14048  005BB6  6EA7               	movwf	167,c	;volsfr
 14049  005BB8                     
 14050                           ;fs_eeprom.c: 76:     EECON2 = 0xAA;
 14051  005BB8  0EAA               	movlw	170
 14052  005BBA  6EA7               	movwf	167,c	;volsfr
 14053  005BBC                     
 14054                           ;fs_eeprom.c: 77:     EECON1bits.WR = 1;
 14055  005BBC  82A6               	bsf	166,1,c	;volsfr
 14056  005BBE                     l76:
 14057                           
 14058                           ;fs_eeprom.c: 80:     while(PIR2bits.EEIF == 0)
 14059  005BBE  A8A1               	btfss	161,4,c	;volatile
 14060  005BC0  EFE4  F02D         	goto	u6791
 14061  005BC4  EFE6  F02D         	goto	u6790
 14062  005BC8                     u6791:
 14063  005BC8  EFDF  F02D         	goto	l76
 14064  005BCC                     u6790:
 14065  005BCC                     
 14066                           ;fs_eeprom.c: 85:     PIR2bits.EEIF = 0;
 14067  005BCC  98A1               	bcf	161,4,c	;volatile
 14068                           
 14069                           ;fs_eeprom.c: 86:     EECON1bits.WREN = 0;
 14070  005BCE  94A6               	bcf	166,2,c	;volsfr
 14071  005BD0  0012               	return		;funcret
 14072  005BD2                     __end_of_eepromWrite:
 14073                           	callstack 0
 14074                           
 14075 ;; *************** function _Lcd_Write_String *****************
 14076 ;; Defined at:
 14077 ;;		line 155 in file "fs_lcd.c"
 14078 ;; Parameters:    Size  Location     Type
 14079 ;;  a               2    4[COMRAM] PTR unsigned char 
 14080 ;;		 -> STR_15(17), STR_13(17), STR_11(17), STR_9(17), 
 14081 ;;		 -> STR_7(17), STR_5(17), STR_3(17), STR_1(17), 
 14082 ;;		 -> stateMachine@textCursor2(16), 
 14083 ;; Auto vars:     Size  Location     Type
 14084 ;;  i               2    8[COMRAM] int 
 14085 ;; Return value:  Size  Location     Type
 14086 ;;                  1    wreg      void 
 14087 ;; Registers used:
 14088 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14089 ;; Tracked objects:
 14090 ;;		On entry : 0/0
 14091 ;;		On exit  : 0/0
 14092 ;;		Unchanged: 0/0
 14093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14094 ;;      Params:         2       0       0       0       0       0       0
 14095 ;;      Locals:         2       0       0       0       0       0       0
 14096 ;;      Temps:          2       0       0       0       0       0       0
 14097 ;;      Totals:         6       0       0       0       0       0       0
 14098 ;;Total ram usage:        6 bytes
 14099 ;; Hardware stack levels used:    1
 14100 ;; Hardware stack levels required when called:    3
 14101 ;; This function calls:
 14102 ;;		_Lcd_Write_Char
 14103 ;; This function is called by:
 14104 ;;		_stateMachine
 14105 ;; This function uses a non-reentrant model
 14106 ;;
 14107                           
 14108                           	psect	text53
 14109  005378                     __ptext53:
 14110                           	callstack 0
 14111  005378                     _Lcd_Write_String:
 14112                           	callstack 25
 14113  005378                     
 14114                           ;fs_lcd.c: 155: void Lcd_Write_String(char *a);fs_lcd.c: 156: {;fs_lcd.c: 157:    int i;
      +                          ;fs_lcd.c: 158:    for(i=0;a[i]!='\0';i++)
 14115  005378  0E00               	movlw	0
 14116  00537A  6E0A               	movwf	(Lcd_Write_String@i+1)^0,c
 14117  00537C  0E00               	movlw	0
 14118  00537E  6E09               	movwf	Lcd_Write_String@i^0,c
 14119  005380  EFDC  F029         	goto	l5621
 14120  005384                     l5617:
 14121                           
 14122                           ;fs_lcd.c: 159:    Lcd_Write_Char(a[i]);
 14123  005384  5009               	movf	Lcd_Write_String@i^0,w,c
 14124  005386  2405               	addwf	Lcd_Write_String@a^0,w,c
 14125  005388  6E07               	movwf	??_Lcd_Write_String^0,c
 14126  00538A  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
 14127  00538C  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 14128  00538E  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
 14129  005390  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
 14130  005394  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 14131  005398  6AF8               	clrf	tblptru,c
 14132  00539A  0E05               	movlw	(high __ramtop+-1)
 14133  00539C  64F7               	cpfsgt	tblptrh,c
 14134  00539E  D003               	bra	u6827
 14135  0053A0  0008               	tblrd		*
 14136  0053A2  50F5               	movf	tablat,w,c
 14137  0053A4  D005               	bra	u6820
 14138  0053A6                     u6827:
 14139  0053A6  CFF6 FFE1          	movff	tblptrl,fsr1l
 14140  0053AA  CFF7 FFE2          	movff	tblptrh,fsr1h
 14141  0053AE  50E7               	movf	indf1,w,c
 14142  0053B0                     u6820:
 14143  0053B0  EC9D  F02D         	call	_Lcd_Write_Char
 14144  0053B4  4A09               	infsnz	Lcd_Write_String@i^0,f,c
 14145  0053B6  2A0A               	incf	(Lcd_Write_String@i+1)^0,f,c
 14146  0053B8                     l5621:
 14147  0053B8  5009               	movf	Lcd_Write_String@i^0,w,c
 14148  0053BA  2405               	addwf	Lcd_Write_String@a^0,w,c
 14149  0053BC  6E07               	movwf	??_Lcd_Write_String^0,c
 14150  0053BE  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
 14151  0053C0  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 14152  0053C2  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
 14153  0053C4  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
 14154  0053C8  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 14155  0053CC  6AF8               	clrf	tblptru,c
 14156  0053CE  0E05               	movlw	(high __ramtop+-1)
 14157  0053D0  64F7               	cpfsgt	tblptrh,c
 14158  0053D2  D003               	bra	u6837
 14159  0053D4  0008               	tblrd		*
 14160  0053D6  50F5               	movf	tablat,w,c
 14161  0053D8  D005               	bra	u6830
 14162  0053DA                     u6837:
 14163  0053DA  CFF6 FFE1          	movff	tblptrl,fsr1l
 14164  0053DE  CFF7 FFE2          	movff	tblptrh,fsr1h
 14165  0053E2  50E7               	movf	indf1,w,c
 14166  0053E4                     u6830:
 14167  0053E4  0900               	iorlw	0
 14168  0053E6  A4D8               	btfss	status,2,c
 14169  0053E8  EFF8  F029         	goto	u6841
 14170  0053EC  EFFA  F029         	goto	u6840
 14171  0053F0                     u6841:
 14172  0053F0  EFC2  F029         	goto	l5617
 14173  0053F4                     u6840:
 14174  0053F4  0012               	return		;funcret
 14175  0053F6                     __end_of_Lcd_Write_String:
 14176                           	callstack 0
 14177                           
 14178 ;; *************** function _Lcd_Write_Char *****************
 14179 ;; Defined at:
 14180 ;;		line 132 in file "fs_lcd.c"
 14181 ;; Parameters:    Size  Location     Type
 14182 ;;  a               1    wreg     unsigned char 
 14183 ;; Auto vars:     Size  Location     Type
 14184 ;;  a               1    3[COMRAM] unsigned char 
 14185 ;;  y               1    2[COMRAM] unsigned char 
 14186 ;;  temp            1    1[COMRAM] unsigned char 
 14187 ;; Return value:  Size  Location     Type
 14188 ;;                  1    wreg      void 
 14189 ;; Registers used:
 14190 ;;		wreg, status,2, status,0, cstack
 14191 ;; Tracked objects:
 14192 ;;		On entry : 0/0
 14193 ;;		On exit  : 0/0
 14194 ;;		Unchanged: 0/0
 14195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14196 ;;      Params:         0       0       0       0       0       0       0
 14197 ;;      Locals:         3       0       0       0       0       0       0
 14198 ;;      Temps:          0       0       0       0       0       0       0
 14199 ;;      Totals:         3       0       0       0       0       0       0
 14200 ;;Total ram usage:        3 bytes
 14201 ;; Hardware stack levels used:    1
 14202 ;; Hardware stack levels required when called:    2
 14203 ;; This function calls:
 14204 ;;		_Lcd_Port
 14205 ;; This function is called by:
 14206 ;;		_Lcd_Write_String
 14207 ;; This function uses a non-reentrant model
 14208 ;;
 14209                           
 14210                           	psect	text54
 14211  005B3A                     __ptext54:
 14212                           	callstack 0
 14213  005B3A                     _Lcd_Write_Char:
 14214                           	callstack 25
 14215                           
 14216                           ;incstack = 0
 14217                           ;Lcd_Write_Char@a stored from wreg
 14218  005B3A  6E04               	movwf	Lcd_Write_Char@a^0,c
 14219  005B3C                     
 14220                           ;fs_lcd.c: 132: void Lcd_Write_Char(char a);fs_lcd.c: 133: {;fs_lcd.c: 134:    char temp
      +                          ,y;;fs_lcd.c: 135:    temp = a&0x0F;
 14221  005B3C  5004               	movf	Lcd_Write_Char@a^0,w,c
 14222  005B3E  0B0F               	andlw	15
 14223  005B40  6E02               	movwf	Lcd_Write_Char@temp^0,c
 14224                           
 14225                           ;fs_lcd.c: 136:    y = a&0xF0;
 14226  005B42  5004               	movf	Lcd_Write_Char@a^0,w,c
 14227  005B44  0BF0               	andlw	240
 14228  005B46  6E03               	movwf	Lcd_Write_Char@y^0,c
 14229  005B48                     
 14230                           ;fs_lcd.c: 137:    PORTDbits.RD6 = 1;
 14231  005B48  8C83               	bsf	131,6,c	;volatile
 14232  005B4A                     
 14233                           ;fs_lcd.c: 138:    Lcd_Port(y>>4);
 14234  005B4A  3803               	swapf	Lcd_Write_Char@y^0,w,c
 14235  005B4C  0B0F               	andlw	15
 14236  005B4E  ECA7  F02B         	call	_Lcd_Port
 14237  005B52                     
 14238                           ;fs_lcd.c: 139:    PORTDbits.RD7 = 1;
 14239  005B52  8E83               	bsf	131,7,c	;volatile
 14240  005B54                     
 14241                           ;fs_lcd.c: 140:    _delay((unsigned long)((30)*(64000000UL/4000000.0)));
 14242  005B54  0EA0               	movlw	160
 14243  005B56                     u7827:
 14244  005B56  2EE8               	decfsz	wreg,f,c
 14245  005B58  D7FE               	bra	u7827
 14246  005B5A                     
 14247                           ;fs_lcd.c: 141:    PORTDbits.RD7 = 0;
 14248  005B5A  9E83               	bcf	131,7,c	;volatile
 14249  005B5C                     
 14250                           ;fs_lcd.c: 142:    Lcd_Port(temp);
 14251  005B5C  5002               	movf	Lcd_Write_Char@temp^0,w,c
 14252  005B5E  ECA7  F02B         	call	_Lcd_Port
 14253  005B62                     
 14254                           ;fs_lcd.c: 143:    PORTDbits.RD7 = 1;
 14255  005B62  8E83               	bsf	131,7,c	;volatile
 14256  005B64                     
 14257                           ;fs_lcd.c: 144:    _delay((unsigned long)((25)*(64000000UL/4000000.0)));
 14258  005B64  0E85               	movlw	133
 14259  005B66                     u7837:
 14260  005B66  2EE8               	decfsz	wreg,f,c
 14261  005B68  D7FE               	bra	u7837
 14262  005B6A  F000               	nop	
 14263  005B6C                     
 14264                           ;fs_lcd.c: 145:    PORTDbits.RD7 = 0;
 14265  005B6C  9E83               	bcf	131,7,c	;volatile
 14266  005B6E  0012               	return		;funcret
 14267  005B70                     __end_of_Lcd_Write_Char:
 14268                           	callstack 0
 14269                           
 14270 ;; *************** function _Lcd_Set_Cursor *****************
 14271 ;; Defined at:
 14272 ;;		line 62 in file "fs_lcd.c"
 14273 ;; Parameters:    Size  Location     Type
 14274 ;;  a               1    wreg     unsigned char 
 14275 ;;  b               1    3[COMRAM] unsigned char 
 14276 ;; Auto vars:     Size  Location     Type
 14277 ;;  a               1    4[COMRAM] unsigned char 
 14278 ;;  temp            1    7[COMRAM] unsigned char 
 14279 ;;  y               1    6[COMRAM] unsigned char 
 14280 ;;  z               1    5[COMRAM] unsigned char 
 14281 ;; Return value:  Size  Location     Type
 14282 ;;                  1    wreg      void 
 14283 ;; Registers used:
 14284 ;;		wreg, status,2, status,0, cstack
 14285 ;; Tracked objects:
 14286 ;;		On entry : 0/0
 14287 ;;		On exit  : 0/0
 14288 ;;		Unchanged: 0/0
 14289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14290 ;;      Params:         1       0       0       0       0       0       0
 14291 ;;      Locals:         4       0       0       0       0       0       0
 14292 ;;      Temps:          0       0       0       0       0       0       0
 14293 ;;      Totals:         5       0       0       0       0       0       0
 14294 ;;Total ram usage:        5 bytes
 14295 ;; Hardware stack levels used:    1
 14296 ;; Hardware stack levels required when called:    3
 14297 ;; This function calls:
 14298 ;;		_Lcd_Cmd
 14299 ;; This function is called by:
 14300 ;;		_stateMachine
 14301 ;; This function uses a non-reentrant model
 14302 ;;
 14303                           
 14304                           	psect	text55
 14305  00562C                     __ptext55:
 14306                           	callstack 0
 14307  00562C                     _Lcd_Set_Cursor:
 14308                           	callstack 25
 14309                           
 14310                           ;incstack = 0
 14311                           ;Lcd_Set_Cursor@a stored from wreg
 14312  00562C  6E05               	movwf	Lcd_Set_Cursor@a^0,c
 14313  00562E                     
 14314                           ;fs_lcd.c: 62: void Lcd_Set_Cursor(char a, char b);fs_lcd.c: 63: {;fs_lcd.c: 64:    char
      +                           temp,z,y;;fs_lcd.c: 65:    if(a == 1)
 14315  00562E  0405               	decf	Lcd_Set_Cursor@a^0,w,c
 14316  005630  A4D8               	btfss	status,2,c
 14317  005632  EF1D  F02B         	goto	u6801
 14318  005636  EF1F  F02B         	goto	u6800
 14319  00563A                     u6801:
 14320  00563A  EF30  F02B         	goto	l5607
 14321  00563E                     u6800:
 14322  00563E                     
 14323                           ;fs_lcd.c: 66:    {;fs_lcd.c: 67:      temp = 0x80 + b - 1;
 14324  00563E  5004               	movf	Lcd_Set_Cursor@b^0,w,c
 14325  005640  0F7F               	addlw	127
 14326  005642  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
 14327                           
 14328                           ;fs_lcd.c: 68:       z = temp>>4;
 14329  005644  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
 14330  005646  0B0F               	andlw	15
 14331  005648  6E06               	movwf	Lcd_Set_Cursor@z^0,c
 14332                           
 14333                           ;fs_lcd.c: 69:       y = temp & 0x0F;
 14334  00564A  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
 14335  00564C  0B0F               	andlw	15
 14336  00564E  6E07               	movwf	Lcd_Set_Cursor@y^0,c
 14337  005650                     
 14338                           ;fs_lcd.c: 70:       Lcd_Cmd(z);
 14339  005650  5006               	movf	Lcd_Set_Cursor@z^0,w,c
 14340  005652  EC43  F02E         	call	_Lcd_Cmd
 14341  005656                     
 14342                           ;fs_lcd.c: 71:       Lcd_Cmd(y);
 14343  005656  5007               	movf	Lcd_Set_Cursor@y^0,w,c
 14344  005658  EC43  F02E         	call	_Lcd_Cmd
 14345                           
 14346                           ;fs_lcd.c: 72:    }
 14347  00565C  EF48  F02B         	goto	l116
 14348  005660                     l5607:
 14349  005660  0E02               	movlw	2
 14350  005662  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
 14351  005664  A4D8               	btfss	status,2,c
 14352  005666  EF37  F02B         	goto	u6811
 14353  00566A  EF39  F02B         	goto	u6810
 14354  00566E                     u6811:
 14355  00566E  EF48  F02B         	goto	l116
 14356  005672                     u6810:
 14357  005672                     
 14358                           ;fs_lcd.c: 74:    {;fs_lcd.c: 75:       temp = 0xC0 + b - 1;
 14359  005672  5004               	movf	Lcd_Set_Cursor@b^0,w,c
 14360  005674  0FBF               	addlw	191
 14361  005676  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
 14362                           
 14363                           ;fs_lcd.c: 76:       z = temp>>4;
 14364  005678  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
 14365  00567A  0B0F               	andlw	15
 14366  00567C  6E06               	movwf	Lcd_Set_Cursor@z^0,c
 14367                           
 14368                           ;fs_lcd.c: 77:       y = temp & 0x0F;
 14369  00567E  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
 14370  005680  0B0F               	andlw	15
 14371  005682  6E07               	movwf	Lcd_Set_Cursor@y^0,c
 14372  005684                     
 14373                           ;fs_lcd.c: 78:       Lcd_Cmd(z);
 14374  005684  5006               	movf	Lcd_Set_Cursor@z^0,w,c
 14375  005686  EC43  F02E         	call	_Lcd_Cmd
 14376  00568A                     
 14377                           ;fs_lcd.c: 79:       Lcd_Cmd(y);
 14378  00568A  5007               	movf	Lcd_Set_Cursor@y^0,w,c
 14379  00568C  EC43  F02E         	call	_Lcd_Cmd
 14380  005690                     l116:
 14381  005690  0012               	return		;funcret
 14382  005692                     __end_of_Lcd_Set_Cursor:
 14383                           	callstack 0
 14384                           
 14385 ;; *************** function _buttonControlFlags *****************
 14386 ;; Defined at:
 14387 ;;		line 81 in file "fs_menu_controller.c"
 14388 ;; Parameters:    Size  Location     Type
 14389 ;;		None
 14390 ;; Auto vars:     Size  Location     Type
 14391 ;;		None
 14392 ;; Return value:  Size  Location     Type
 14393 ;;                  1    wreg      void 
 14394 ;; Registers used:
 14395 ;;		None
 14396 ;; Tracked objects:
 14397 ;;		On entry : 0/0
 14398 ;;		On exit  : 0/0
 14399 ;;		Unchanged: 0/0
 14400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14401 ;;      Params:         0       0       0       0       0       0       0
 14402 ;;      Locals:         0       0       0       0       0       0       0
 14403 ;;      Temps:          0       0       0       0       0       0       0
 14404 ;;      Totals:         0       0       0       0       0       0       0
 14405 ;;Total ram usage:        0 bytes
 14406 ;; Hardware stack levels used:    1
 14407 ;; Hardware stack levels required when called:    1
 14408 ;; This function calls:
 14409 ;;		Nothing
 14410 ;; This function is called by:
 14411 ;;		_menuControl
 14412 ;; This function uses a non-reentrant model
 14413 ;;
 14414                           
 14415                           	psect	text56
 14416  0045AC                     __ptext56:
 14417                           	callstack 0
 14418  0045AC                     _buttonControlFlags:
 14419                           	callstack 28
 14420  0045AC                     
 14421                           ;fs_menu_controller.c: 84:     if ((button_bounce_controller.menu == 0) && (PORTBbits.RB
      +                          7 == 1))
 14422  0045AC  0100               	movlb	0	; () banked
 14423  0045AE  B1FE               	btfsc	_button_bounce_controller& (0+255),0,b
 14424  0045B0  EFDC  F022         	goto	u6861
 14425  0045B4  EFDE  F022         	goto	u6860
 14426  0045B8                     u6861:
 14427  0045B8  EFE7  F022         	goto	l315
 14428  0045BC                     u6860:
 14429  0045BC                     
 14430                           ; BSR set to: 0
 14431  0045BC  AE81               	btfss	129,7,c	;volatile
 14432  0045BE  EFE3  F022         	goto	u6871
 14433  0045C2  EFE5  F022         	goto	u6870
 14434  0045C6                     u6871:
 14435  0045C6  EFE7  F022         	goto	l315
 14436  0045CA                     u6870:
 14437  0045CA                     
 14438                           ; BSR set to: 0
 14439                           ;fs_menu_controller.c: 85:     {;fs_menu_controller.c: 86:         button_bounce_control
      +                          ler.menu = 0;
 14440  0045CA  91FE               	bcf	_button_bounce_controller& (0+255),0,b
 14441                           
 14442                           ;fs_menu_controller.c: 87:         menu_flags.menu_input_flag = 0;
 14443  0045CC  91FD               	bcf	_menu_flags& (0+255),0,b
 14444  0045CE                     l315:
 14445                           
 14446                           ; BSR set to: 0
 14447                           ;fs_menu_controller.c: 90:     if ((PORTBbits.RB7 == 0) && (button_bounce_controller.men
      +                          u == 1))
 14448  0045CE  BE81               	btfsc	129,7,c	;volatile
 14449  0045D0  EFEC  F022         	goto	u6881
 14450  0045D4  EFEE  F022         	goto	u6880
 14451  0045D8                     u6881:
 14452  0045D8  EFF7  F022         	goto	l316
 14453  0045DC                     u6880:
 14454  0045DC                     
 14455                           ; BSR set to: 0
 14456  0045DC  A1FE               	btfss	_button_bounce_controller& (0+255),0,b
 14457  0045DE  EFF3  F022         	goto	u6891
 14458  0045E2  EFF5  F022         	goto	u6890
 14459  0045E6                     u6891:
 14460  0045E6  EFF7  F022         	goto	l316
 14461  0045EA                     u6890:
 14462  0045EA                     
 14463                           ; BSR set to: 0
 14464                           ;fs_menu_controller.c: 91:     {;fs_menu_controller.c: 92:         button_bounce_control
      +                          ler.menu = 1;
 14465  0045EA  81FE               	bsf	_button_bounce_controller& (0+255),0,b
 14466                           
 14467                           ;fs_menu_controller.c: 93:         menu_flags.menu_input_flag = 1;
 14468  0045EC  81FD               	bsf	_menu_flags& (0+255),0,b
 14469  0045EE                     l316:
 14470                           
 14471                           ; BSR set to: 0
 14472                           ;fs_menu_controller.c: 97:     if ((button_bounce_controller.pause == 0) && (PORTDbits.R
      +                          D2 == 0))
 14473  0045EE  B7FE               	btfsc	_button_bounce_controller& (0+255),3,b
 14474  0045F0  EFFC  F022         	goto	u6901
 14475  0045F4  EFFE  F022         	goto	u6900
 14476  0045F8                     u6901:
 14477  0045F8  EF07  F023         	goto	l317
 14478  0045FC                     u6900:
 14479  0045FC                     
 14480                           ; BSR set to: 0
 14481  0045FC  B483               	btfsc	131,2,c	;volatile
 14482  0045FE  EF03  F023         	goto	u6911
 14483  004602  EF05  F023         	goto	u6910
 14484  004606                     u6911:
 14485  004606  EF07  F023         	goto	l317
 14486  00460A                     u6910:
 14487  00460A                     
 14488                           ; BSR set to: 0
 14489                           ;fs_menu_controller.c: 98:     {;fs_menu_controller.c: 99:         button_bounce_control
      +                          ler.pause = 1;
 14490  00460A  87FE               	bsf	_button_bounce_controller& (0+255),3,b
 14491                           
 14492                           ;fs_menu_controller.c: 100:         menu_flags.menu_pause_flag = 1;
 14493  00460C  87FD               	bsf	_menu_flags& (0+255),3,b
 14494  00460E                     l317:
 14495                           
 14496                           ; BSR set to: 0
 14497                           ;fs_menu_controller.c: 102:     if ((PORTDbits.RD2 == 1) && (button_bounce_controller.pa
      +                          use == 1))
 14498  00460E  A483               	btfss	131,2,c	;volatile
 14499  004610  EF0C  F023         	goto	u6921
 14500  004614  EF0E  F023         	goto	u6920
 14501  004618                     u6921:
 14502  004618  EF17  F023         	goto	l318
 14503  00461C                     u6920:
 14504  00461C                     
 14505                           ; BSR set to: 0
 14506  00461C  A7FE               	btfss	_button_bounce_controller& (0+255),3,b
 14507  00461E  EF13  F023         	goto	u6931
 14508  004622  EF15  F023         	goto	u6930
 14509  004626                     u6931:
 14510  004626  EF17  F023         	goto	l318
 14511  00462A                     u6930:
 14512  00462A                     
 14513                           ; BSR set to: 0
 14514                           ;fs_menu_controller.c: 103:     {;fs_menu_controller.c: 104:         button_bounce_contr
      +                          oller.pause = 0;
 14515  00462A  97FE               	bcf	_button_bounce_controller& (0+255),3,b
 14516                           
 14517                           ;fs_menu_controller.c: 105:         menu_flags.menu_pause_flag = 0;
 14518  00462C  97FD               	bcf	_menu_flags& (0+255),3,b
 14519  00462E                     l318:
 14520                           
 14521                           ; BSR set to: 0
 14522                           ;fs_menu_controller.c: 109:     if ((button_bounce_controller.start == 0) && (PORTDbits.
      +                          RD0 == 0))
 14523  00462E  B3FE               	btfsc	_button_bounce_controller& (0+255),1,b
 14524  004630  EF1C  F023         	goto	u6941
 14525  004634  EF1E  F023         	goto	u6940
 14526  004638                     u6941:
 14527  004638  EF27  F023         	goto	l319
 14528  00463C                     u6940:
 14529  00463C                     
 14530                           ; BSR set to: 0
 14531  00463C  B083               	btfsc	131,0,c	;volatile
 14532  00463E  EF23  F023         	goto	u6951
 14533  004642  EF25  F023         	goto	u6950
 14534  004646                     u6951:
 14535  004646  EF27  F023         	goto	l319
 14536  00464A                     u6950:
 14537  00464A                     
 14538                           ; BSR set to: 0
 14539                           ;fs_menu_controller.c: 110:     {;fs_menu_controller.c: 111:         button_bounce_contr
      +                          oller.start = 1;
 14540  00464A  83FE               	bsf	_button_bounce_controller& (0+255),1,b
 14541                           
 14542                           ;fs_menu_controller.c: 112:         menu_flags.menu_start_flag = 1;
 14543  00464C  83FD               	bsf	_menu_flags& (0+255),1,b
 14544  00464E                     l319:
 14545                           
 14546                           ; BSR set to: 0
 14547                           ;fs_menu_controller.c: 114:     if ((PORTDbits.RD0 == 1) && (button_bounce_controller.st
      +                          art == 1))
 14548  00464E  A083               	btfss	131,0,c	;volatile
 14549  004650  EF2C  F023         	goto	u6961
 14550  004654  EF2E  F023         	goto	u6960
 14551  004658                     u6961:
 14552  004658  EF37  F023         	goto	l320
 14553  00465C                     u6960:
 14554  00465C                     
 14555                           ; BSR set to: 0
 14556  00465C  A3FE               	btfss	_button_bounce_controller& (0+255),1,b
 14557  00465E  EF33  F023         	goto	u6971
 14558  004662  EF35  F023         	goto	u6970
 14559  004666                     u6971:
 14560  004666  EF37  F023         	goto	l320
 14561  00466A                     u6970:
 14562  00466A                     
 14563                           ; BSR set to: 0
 14564                           ;fs_menu_controller.c: 115:     {;fs_menu_controller.c: 116:         button_bounce_contr
      +                          oller.start = 0;
 14565  00466A  93FE               	bcf	_button_bounce_controller& (0+255),1,b
 14566                           
 14567                           ;fs_menu_controller.c: 117:         menu_flags.menu_start_flag = 0;
 14568  00466C  93FD               	bcf	_menu_flags& (0+255),1,b
 14569  00466E                     l320:
 14570                           
 14571                           ; BSR set to: 0
 14572                           ;fs_menu_controller.c: 121:     if ((button_bounce_controller.stop == 0) && (PORTDbits.R
      +                          D1 == 0))
 14573  00466E  B5FE               	btfsc	_button_bounce_controller& (0+255),2,b
 14574  004670  EF3C  F023         	goto	u6981
 14575  004674  EF3E  F023         	goto	u6980
 14576  004678                     u6981:
 14577  004678  EF47  F023         	goto	l321
 14578  00467C                     u6980:
 14579  00467C                     
 14580                           ; BSR set to: 0
 14581  00467C  B283               	btfsc	131,1,c	;volatile
 14582  00467E  EF43  F023         	goto	u6991
 14583  004682  EF45  F023         	goto	u6990
 14584  004686                     u6991:
 14585  004686  EF47  F023         	goto	l321
 14586  00468A                     u6990:
 14587  00468A                     
 14588                           ; BSR set to: 0
 14589                           ;fs_menu_controller.c: 122:     {;fs_menu_controller.c: 123:         button_bounce_contr
      +                          oller.stop = 1;
 14590  00468A  85FE               	bsf	_button_bounce_controller& (0+255),2,b
 14591                           
 14592                           ;fs_menu_controller.c: 124:         menu_flags.menu_stop_flag = 1;
 14593  00468C  85FD               	bsf	_menu_flags& (0+255),2,b
 14594  00468E                     l321:
 14595                           
 14596                           ; BSR set to: 0
 14597                           ;fs_menu_controller.c: 126:     if ((PORTDbits.RD1 == 1) && (button_bounce_controller.st
      +                          op == 1))
 14598  00468E  A283               	btfss	131,1,c	;volatile
 14599  004690  EF4C  F023         	goto	u7001
 14600  004694  EF4E  F023         	goto	u7000
 14601  004698                     u7001:
 14602  004698  EF57  F023         	goto	l322
 14603  00469C                     u7000:
 14604  00469C                     
 14605                           ; BSR set to: 0
 14606  00469C  A5FE               	btfss	_button_bounce_controller& (0+255),2,b
 14607  00469E  EF53  F023         	goto	u7011
 14608  0046A2  EF55  F023         	goto	u7010
 14609  0046A6                     u7011:
 14610  0046A6  EF57  F023         	goto	l322
 14611  0046AA                     u7010:
 14612  0046AA                     
 14613                           ; BSR set to: 0
 14614                           ;fs_menu_controller.c: 127:     {;fs_menu_controller.c: 128:         button_bounce_contr
      +                          oller.stop = 0;
 14615  0046AA  95FE               	bcf	_button_bounce_controller& (0+255),2,b
 14616                           
 14617                           ;fs_menu_controller.c: 129:         menu_flags.menu_stop_flag = 0;
 14618  0046AC  95FD               	bcf	_menu_flags& (0+255),2,b
 14619  0046AE                     l322:
 14620                           
 14621                           ; BSR set to: 0
 14622                           ;fs_menu_controller.c: 133:     if ((button_bounce_controller.increase == 0) && (PORTDbi
      +                          ts.RD4 == 1))
 14623  0046AE  BBFE               	btfsc	_button_bounce_controller& (0+255),5,b
 14624  0046B0  EF5C  F023         	goto	u7021
 14625  0046B4  EF5E  F023         	goto	u7020
 14626  0046B8                     u7021:
 14627  0046B8  EF67  F023         	goto	l323
 14628  0046BC                     u7020:
 14629  0046BC                     
 14630                           ; BSR set to: 0
 14631  0046BC  A883               	btfss	131,4,c	;volatile
 14632  0046BE  EF63  F023         	goto	u7031
 14633  0046C2  EF65  F023         	goto	u7030
 14634  0046C6                     u7031:
 14635  0046C6  EF67  F023         	goto	l323
 14636  0046CA                     u7030:
 14637  0046CA                     
 14638                           ; BSR set to: 0
 14639                           ;fs_menu_controller.c: 134:     {;fs_menu_controller.c: 135:         button_bounce_contr
      +                          oller.increase = 0;
 14640  0046CA  9BFE               	bcf	_button_bounce_controller& (0+255),5,b
 14641                           
 14642                           ;fs_menu_controller.c: 136:         menu_flags.menu_increase_flag = 0;
 14643  0046CC  99FD               	bcf	_menu_flags& (0+255),4,b
 14644  0046CE                     l323:
 14645                           
 14646                           ; BSR set to: 0
 14647                           ;fs_menu_controller.c: 138:     if ((PORTDbits.RD4 == 0) && (button_bounce_controller.in
      +                          crease == 1))
 14648  0046CE  B883               	btfsc	131,4,c	;volatile
 14649  0046D0  EF6C  F023         	goto	u7041
 14650  0046D4  EF6E  F023         	goto	u7040
 14651  0046D8                     u7041:
 14652  0046D8  EF77  F023         	goto	l324
 14653  0046DC                     u7040:
 14654  0046DC                     
 14655                           ; BSR set to: 0
 14656  0046DC  ABFE               	btfss	_button_bounce_controller& (0+255),5,b
 14657  0046DE  EF73  F023         	goto	u7051
 14658  0046E2  EF75  F023         	goto	u7050
 14659  0046E6                     u7051:
 14660  0046E6  EF77  F023         	goto	l324
 14661  0046EA                     u7050:
 14662  0046EA                     
 14663                           ; BSR set to: 0
 14664                           ;fs_menu_controller.c: 139:     {;fs_menu_controller.c: 140:         button_bounce_contr
      +                          oller.increase = 1;
 14665  0046EA  8BFE               	bsf	_button_bounce_controller& (0+255),5,b
 14666                           
 14667                           ;fs_menu_controller.c: 141:         menu_flags.menu_increase_flag = 1;
 14668  0046EC  89FD               	bsf	_menu_flags& (0+255),4,b
 14669  0046EE                     l324:
 14670                           
 14671                           ; BSR set to: 0
 14672                           ;fs_menu_controller.c: 145:     if ((button_bounce_controller.decrease == 0) && (PORTBbi
      +                          ts.RB6 == 1))
 14673  0046EE  B9FE               	btfsc	_button_bounce_controller& (0+255),4,b
 14674  0046F0  EF7C  F023         	goto	u7061
 14675  0046F4  EF7E  F023         	goto	u7060
 14676  0046F8                     u7061:
 14677  0046F8  EF87  F023         	goto	l325
 14678  0046FC                     u7060:
 14679  0046FC                     
 14680                           ; BSR set to: 0
 14681  0046FC  AC81               	btfss	129,6,c	;volatile
 14682  0046FE  EF83  F023         	goto	u7071
 14683  004702  EF85  F023         	goto	u7070
 14684  004706                     u7071:
 14685  004706  EF87  F023         	goto	l325
 14686  00470A                     u7070:
 14687  00470A                     
 14688                           ; BSR set to: 0
 14689                           ;fs_menu_controller.c: 146:     {;fs_menu_controller.c: 147:         button_bounce_contr
      +                          oller.decrease = 0;
 14690  00470A  99FE               	bcf	_button_bounce_controller& (0+255),4,b
 14691                           
 14692                           ;fs_menu_controller.c: 148:         menu_flags.menu_decrease_flag = 0;
 14693  00470C  9BFD               	bcf	_menu_flags& (0+255),5,b
 14694  00470E                     l325:
 14695                           
 14696                           ; BSR set to: 0
 14697                           ;fs_menu_controller.c: 150:     if ((PORTBbits.RB6 == 0) && (button_bounce_controller.de
      +                          crease == 1))
 14698  00470E  BC81               	btfsc	129,6,c	;volatile
 14699  004710  EF8C  F023         	goto	u7081
 14700  004714  EF8E  F023         	goto	u7080
 14701  004718                     u7081:
 14702  004718  EF97  F023         	goto	l327
 14703  00471C                     u7080:
 14704  00471C                     
 14705                           ; BSR set to: 0
 14706  00471C  A9FE               	btfss	_button_bounce_controller& (0+255),4,b
 14707  00471E  EF93  F023         	goto	u7091
 14708  004722  EF95  F023         	goto	u7090
 14709  004726                     u7091:
 14710  004726  EF97  F023         	goto	l327
 14711  00472A                     u7090:
 14712  00472A                     
 14713                           ; BSR set to: 0
 14714                           ;fs_menu_controller.c: 151:     {;fs_menu_controller.c: 152:         button_bounce_contr
      +                          oller.decrease = 1;
 14715  00472A  89FE               	bsf	_button_bounce_controller& (0+255),4,b
 14716                           
 14717                           ;fs_menu_controller.c: 153:         menu_flags.menu_decrease_flag = 1;
 14718  00472C  8BFD               	bsf	_menu_flags& (0+255),5,b
 14719  00472E                     l327:
 14720                           
 14721                           ; BSR set to: 0
 14722  00472E  0012               	return		;funcret
 14723  004730                     __end_of_buttonControlFlags:
 14724                           	callstack 0
 14725                           
 14726 ;; *************** function _mcu_init *****************
 14727 ;; Defined at:
 14728 ;;		line 41 in file "fs_mcu.c"
 14729 ;; Parameters:    Size  Location     Type
 14730 ;;		None
 14731 ;; Auto vars:     Size  Location     Type
 14732 ;;		None
 14733 ;; Return value:  Size  Location     Type
 14734 ;;                  1    wreg      void 
 14735 ;; Registers used:
 14736 ;;		wreg, status,2
 14737 ;; Tracked objects:
 14738 ;;		On entry : 0/0
 14739 ;;		On exit  : 0/0
 14740 ;;		Unchanged: 0/0
 14741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14742 ;;      Params:         0       0       0       0       0       0       0
 14743 ;;      Locals:         0       0       0       0       0       0       0
 14744 ;;      Temps:          0       0       0       0       0       0       0
 14745 ;;      Totals:         0       0       0       0       0       0       0
 14746 ;;Total ram usage:        0 bytes
 14747 ;; Hardware stack levels used:    1
 14748 ;; Hardware stack levels required when called:    1
 14749 ;; This function calls:
 14750 ;;		Nothing
 14751 ;; This function is called by:
 14752 ;;		_main
 14753 ;; This function uses a non-reentrant model
 14754 ;;
 14755                           
 14756                           	psect	text57
 14757  005CA4                     __ptext57:
 14758                           	callstack 0
 14759  005CA4                     _mcu_init:
 14760                           	callstack 29
 14761  005CA4                     
 14762                           ;fs_mcu.c: 43:    OSCCONbits.IRCF = 0b111;
 14763  005CA4  0E70               	movlw	112
 14764  005CA6  12D3               	iorwf	211,f,c	;volatile
 14765  005CA8                     
 14766                           ;fs_mcu.c: 44:    OSCTUNEbits.PLLEN = 0b1;
 14767  005CA8  8C9B               	bsf	155,6,c	;volatile
 14768  005CAA                     l247:
 14769  005CAA  A4D3               	btfss	211,2,c	;volatile
 14770  005CAC  EF5A  F02E         	goto	u7661
 14771  005CB0  EF5C  F02E         	goto	u7660
 14772  005CB4                     u7661:
 14773  005CB4  EF55  F02E         	goto	l247
 14774  005CB8                     u7660:
 14775  005CB8  0012               	return		;funcret
 14776  005CBA                     __end_of_mcu_init:
 14777                           	callstack 0
 14778                           
 14779 ;; *************** function _lcd_init *****************
 14780 ;; Defined at:
 14781 ;;		line 88 in file "fs_lcd.c"
 14782 ;; Parameters:    Size  Location     Type
 14783 ;;		None
 14784 ;; Auto vars:     Size  Location     Type
 14785 ;;		None
 14786 ;; Return value:  Size  Location     Type
 14787 ;;                  1    wreg      void 
 14788 ;; Registers used:
 14789 ;;		wreg, status,2, cstack
 14790 ;; Tracked objects:
 14791 ;;		On entry : 0/0
 14792 ;;		On exit  : 0/0
 14793 ;;		Unchanged: 0/0
 14794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14795 ;;      Params:         0       0       0       0       0       0       0
 14796 ;;      Locals:         0       0       0       0       0       0       0
 14797 ;;      Temps:          2       0       0       0       0       0       0
 14798 ;;      Totals:         2       0       0       0       0       0       0
 14799 ;;Total ram usage:        2 bytes
 14800 ;; Hardware stack levels used:    1
 14801 ;; Hardware stack levels required when called:    3
 14802 ;; This function calls:
 14803 ;;		_Lcd_Cmd
 14804 ;;		_Lcd_Port
 14805 ;; This function is called by:
 14806 ;;		_main
 14807 ;; This function uses a non-reentrant model
 14808 ;;
 14809                           
 14810                           	psect	text58
 14811  0052E2                     __ptext58:
 14812                           	callstack 0
 14813  0052E2                     _lcd_init:
 14814                           	callstack 27
 14815  0052E2                     
 14816                           ;fs_lcd.c: 90:     TRISDbits.RD6 = 0;
 14817  0052E2  9C95               	bcf	149,6,c	;volatile
 14818                           
 14819                           ;fs_lcd.c: 91:     ANSELDbits.ANSD6 = 0;
 14820  0052E4  010F               	movlb	15	; () banked
 14821  0052E6  9D3B               	bcf	59,6,b	;volatile
 14822                           
 14823                           ;fs_lcd.c: 93:     TRISDbits.RD7 = 0;
 14824  0052E8  9E95               	bcf	149,7,c	;volatile
 14825                           
 14826                           ;fs_lcd.c: 94:     ANSELDbits.ANSD7 = 0;
 14827  0052EA  9F3B               	bcf	59,7,b	;volatile
 14828                           
 14829                           ;fs_lcd.c: 96:     TRISBbits.RB0 = 0;
 14830  0052EC  9093               	bcf	147,0,c	;volatile
 14831                           
 14832                           ;fs_lcd.c: 97:     ANSELBbits.ANSB0 = 0;
 14833  0052EE  9139               	bcf	57,0,b	;volatile
 14834                           
 14835                           ;fs_lcd.c: 99:     TRISBbits.RB1 = 0;
 14836  0052F0  9293               	bcf	147,1,c	;volatile
 14837                           
 14838                           ;fs_lcd.c: 100:     ANSELBbits.ANSB1 = 0;
 14839  0052F2  9339               	bcf	57,1,b	;volatile
 14840                           
 14841                           ;fs_lcd.c: 102:     TRISBbits.RB2 = 0;
 14842  0052F4  9493               	bcf	147,2,c	;volatile
 14843                           
 14844                           ;fs_lcd.c: 103:     ANSELBbits.ANSB2 = 0;
 14845  0052F6  9539               	bcf	57,2,b	;volatile
 14846                           
 14847                           ;fs_lcd.c: 105:     TRISBbits.RB3 = 0;
 14848  0052F8  9693               	bcf	147,3,c	;volatile
 14849                           
 14850                           ;fs_lcd.c: 106:     ANSELBbits.ANSB3 = 0;
 14851  0052FA  9739               	bcf	57,3,b	;volatile
 14852  0052FC                     
 14853                           ; BSR set to: 15
 14854                           ;fs_lcd.c: 109:     Lcd_Port(0x00);
 14855  0052FC  0E00               	movlw	0
 14856  0052FE  ECA7  F02B         	call	_Lcd_Port
 14857  005302                     
 14858                           ;fs_lcd.c: 110:      _delay((unsigned long)((20)*(64000000UL/4000.0)));
 14859  005302  0E02               	movlw	2
 14860  005304  6E05               	movwf	(??_lcd_init+1)^0,c
 14861  005306  0EA0               	movlw	160
 14862  005308  6E04               	movwf	??_lcd_init^0,c
 14863  00530A  0E92               	movlw	146
 14864  00530C                     u7847:
 14865  00530C  2EE8               	decfsz	wreg,f,c
 14866  00530E  D7FE               	bra	u7847
 14867  005310  2E04               	decfsz	??_lcd_init^0,f,c
 14868  005312  D7FC               	bra	u7847
 14869  005314  2E05               	decfsz	(??_lcd_init+1)^0,f,c
 14870  005316  D7FA               	bra	u7847
 14871  005318  D000               	nop2	
 14872  00531A                     
 14873                           ;fs_lcd.c: 111:     Lcd_Cmd(0x03);
 14874  00531A  0E03               	movlw	3
 14875  00531C  EC43  F02E         	call	_Lcd_Cmd
 14876  005320                     
 14877                           ;fs_lcd.c: 112:      _delay((unsigned long)((5)*(64000000UL/4000.0)));
 14878  005320  0E68               	movlw	104
 14879  005322  6E04               	movwf	??_lcd_init^0,c
 14880  005324  0EE4               	movlw	228
 14881  005326                     u7857:
 14882  005326  2EE8               	decfsz	wreg,f,c
 14883  005328  D7FE               	bra	u7857
 14884  00532A  2E04               	decfsz	??_lcd_init^0,f,c
 14885  00532C  D7FC               	bra	u7857
 14886  00532E  D000               	nop2	
 14887  005330                     
 14888                           ;fs_lcd.c: 113:     Lcd_Cmd(0x03);
 14889  005330  0E03               	movlw	3
 14890  005332  EC43  F02E         	call	_Lcd_Cmd
 14891  005336                     
 14892                           ;fs_lcd.c: 114:      _delay((unsigned long)((11)*(64000000UL/4000.0)));
 14893  005336  0EE5               	movlw	229
 14894  005338  6E04               	movwf	??_lcd_init^0,c
 14895  00533A  0E91               	movlw	145
 14896  00533C                     u7867:
 14897  00533C  2EE8               	decfsz	wreg,f,c
 14898  00533E  D7FE               	bra	u7867
 14899  005340  2E04               	decfsz	??_lcd_init^0,f,c
 14900  005342  D7FC               	bra	u7867
 14901  005344  F000               	nop	
 14902  005346                     
 14903                           ;fs_lcd.c: 115:     Lcd_Cmd(0x03);
 14904  005346  0E03               	movlw	3
 14905  005348  EC43  F02E         	call	_Lcd_Cmd
 14906  00534C                     
 14907                           ;fs_lcd.c: 116:     Lcd_Cmd(0x02);
 14908  00534C  0E02               	movlw	2
 14909  00534E  EC43  F02E         	call	_Lcd_Cmd
 14910  005352                     
 14911                           ;fs_lcd.c: 117:     Lcd_Cmd(0x02);
 14912  005352  0E02               	movlw	2
 14913  005354  EC43  F02E         	call	_Lcd_Cmd
 14914  005358                     
 14915                           ;fs_lcd.c: 118:     Lcd_Cmd(0x08);
 14916  005358  0E08               	movlw	8
 14917  00535A  EC43  F02E         	call	_Lcd_Cmd
 14918  00535E                     
 14919                           ;fs_lcd.c: 119:     Lcd_Cmd(0x00);
 14920  00535E  0E00               	movlw	0
 14921  005360  EC43  F02E         	call	_Lcd_Cmd
 14922  005364                     
 14923                           ;fs_lcd.c: 120:     Lcd_Cmd(0x0C);
 14924  005364  0E0C               	movlw	12
 14925  005366  EC43  F02E         	call	_Lcd_Cmd
 14926  00536A                     
 14927                           ;fs_lcd.c: 121:     Lcd_Cmd(0x00);
 14928  00536A  0E00               	movlw	0
 14929  00536C  EC43  F02E         	call	_Lcd_Cmd
 14930  005370                     
 14931                           ;fs_lcd.c: 122:     Lcd_Cmd(0x06);
 14932  005370  0E06               	movlw	6
 14933  005372  EC43  F02E         	call	_Lcd_Cmd
 14934  005376  0012               	return		;funcret
 14935  005378                     __end_of_lcd_init:
 14936                           	callstack 0
 14937                           
 14938 ;; *************** function _adcInit *****************
 14939 ;; Defined at:
 14940 ;;		line 53 in file "fs_adc.c"
 14941 ;; Parameters:    Size  Location     Type
 14942 ;;		None
 14943 ;; Auto vars:     Size  Location     Type
 14944 ;;		None
 14945 ;; Return value:  Size  Location     Type
 14946 ;;                  1    wreg      void 
 14947 ;; Registers used:
 14948 ;;		wreg, status,2
 14949 ;; Tracked objects:
 14950 ;;		On entry : 0/0
 14951 ;;		On exit  : 0/0
 14952 ;;		Unchanged: 0/0
 14953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14954 ;;      Params:         0       0       0       0       0       0       0
 14955 ;;      Locals:         0       0       0       0       0       0       0
 14956 ;;      Temps:          0       0       0       0       0       0       0
 14957 ;;      Totals:         0       0       0       0       0       0       0
 14958 ;;Total ram usage:        0 bytes
 14959 ;; Hardware stack levels used:    1
 14960 ;; Hardware stack levels required when called:    1
 14961 ;; This function calls:
 14962 ;;		Nothing
 14963 ;; This function is called by:
 14964 ;;		_main
 14965 ;; This function uses a non-reentrant model
 14966 ;;
 14967                           
 14968                           	psect	text59
 14969  0059AC                     __ptext59:
 14970                           	callstack 0
 14971  0059AC                     _adcInit:
 14972                           	callstack 29
 14973  0059AC                     
 14974                           ;fs_adc.c: 55:     TRISAbits.TRISA0 = 1;
 14975  0059AC  8092               	bsf	146,0,c	;volatile
 14976                           
 14977                           ;fs_adc.c: 56:     ANSELAbits.ANSA0 = 1;
 14978  0059AE  010F               	movlb	15	; () banked
 14979  0059B0  8138               	bsf	56,0,b	;volatile
 14980                           
 14981                           ;fs_adc.c: 58:     TRISAbits.TRISA1 = 1;
 14982  0059B2  8292               	bsf	146,1,c	;volatile
 14983                           
 14984                           ;fs_adc.c: 59:     ANSELAbits.ANSA1 = 1;
 14985  0059B4  8338               	bsf	56,1,b	;volatile
 14986                           
 14987                           ;fs_adc.c: 61:     TRISAbits.TRISA2 = 1;
 14988  0059B6  8492               	bsf	146,2,c	;volatile
 14989                           
 14990                           ;fs_adc.c: 62:     ANSELAbits.ANSA2 = 1;
 14991  0059B8  8538               	bsf	56,2,b	;volatile
 14992                           
 14993                           ;fs_adc.c: 64:     TRISAbits.TRISA3 = 1;
 14994  0059BA  8692               	bsf	146,3,c	;volatile
 14995                           
 14996                           ;fs_adc.c: 65:     ANSELAbits.ANSA3 = 1;
 14997  0059BC  8738               	bsf	56,3,b	;volatile
 14998                           
 14999                           ;fs_adc.c: 67:     TRISAbits.TRISA5 = 1;
 15000  0059BE  8A92               	bsf	146,5,c	;volatile
 15001                           
 15002                           ;fs_adc.c: 68:     ANSELAbits.ANSA5 = 1;
 15003  0059C0  8B38               	bsf	56,5,b	;volatile
 15004                           
 15005                           ;fs_adc.c: 70:     TRISEbits.TRISE0 = 1;
 15006  0059C2  8096               	bsf	150,0,c	;volatile
 15007                           
 15008                           ;fs_adc.c: 71:     ANSELEbits.ANSE0 = 1;
 15009  0059C4  813C               	bsf	60,0,b	;volatile
 15010                           
 15011                           ;fs_adc.c: 73:     TRISEbits.TRISE1 = 1;
 15012  0059C6  8296               	bsf	150,1,c	;volatile
 15013                           
 15014                           ;fs_adc.c: 74:     ANSELEbits.ANSE1 = 1;
 15015  0059C8  833C               	bsf	60,1,b	;volatile
 15016                           
 15017                           ;fs_adc.c: 76:     TRISEbits.TRISE2 = 1;
 15018  0059CA  8496               	bsf	150,2,c	;volatile
 15019                           
 15020                           ;fs_adc.c: 77:     ANSELEbits.ANSE2 = 1;
 15021  0059CC  853C               	bsf	60,2,b	;volatile
 15022  0059CE                     
 15023                           ; BSR set to: 15
 15024                           ;fs_adc.c: 79:     ADCON0 = 0x01;
 15025  0059CE  0E01               	movlw	1
 15026  0059D0  6EC2               	movwf	194,c	;volatile
 15027                           
 15028                           ;fs_adc.c: 80:     ADCON1=0x00;
 15029  0059D2  0E00               	movlw	0
 15030  0059D4  6EC1               	movwf	193,c	;volatile
 15031  0059D6                     
 15032                           ; BSR set to: 15
 15033                           ;fs_adc.c: 81:  ADCON2bits.ADFM = 1;
 15034  0059D6  8EC0               	bsf	192,7,c	;volatile
 15035                           
 15036                           ;fs_adc.c: 82:     ADCON2bits.ACQT = 0b010;
 15037  0059D8  50C0               	movf	192,w,c	;volatile
 15038  0059DA  0BC7               	andlw	-57
 15039  0059DC  0910               	iorlw	16
 15040  0059DE  6EC0               	movwf	192,c	;volatile
 15041                           
 15042                           ;fs_adc.c: 83:     ADCON2bits.ADCS = 0b110;
 15043  0059E0  50C0               	movf	192,w,c	;volatile
 15044  0059E2  0BF8               	andlw	-8
 15045  0059E4  0906               	iorlw	6
 15046  0059E6  6EC0               	movwf	192,c	;volatile
 15047  0059E8                     
 15048                           ; BSR set to: 15
 15049  0059E8  0012               	return		;funcret
 15050  0059EA                     __end_of_adcInit:
 15051                           	callstack 0
 15052                           
 15053 ;; *************** function _PWM_Init *****************
 15054 ;; Defined at:
 15055 ;;		line 17 in file "fs_pwm.c"
 15056 ;; Parameters:    Size  Location     Type
 15057 ;;		None
 15058 ;; Auto vars:     Size  Location     Type
 15059 ;;		None
 15060 ;; Return value:  Size  Location     Type
 15061 ;;                  1    wreg      void 
 15062 ;; Registers used:
 15063 ;;		wreg, status,2
 15064 ;; Tracked objects:
 15065 ;;		On entry : 0/0
 15066 ;;		On exit  : 0/0
 15067 ;;		Unchanged: 0/0
 15068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15069 ;;      Params:         0       0       0       0       0       0       0
 15070 ;;      Locals:         0       0       0       0       0       0       0
 15071 ;;      Temps:          0       0       0       0       0       0       0
 15072 ;;      Totals:         0       0       0       0       0       0       0
 15073 ;;Total ram usage:        0 bytes
 15074 ;; Hardware stack levels used:    1
 15075 ;; Hardware stack levels required when called:    1
 15076 ;; This function calls:
 15077 ;;		Nothing
 15078 ;; This function is called by:
 15079 ;;		_main
 15080 ;; This function uses a non-reentrant model
 15081 ;;
 15082                           
 15083                           	psect	text60
 15084  005BFA                     __ptext60:
 15085                           	callstack 0
 15086  005BFA                     _PWM_Init:
 15087                           	callstack 29
 15088  005BFA                     
 15089                           ;fs_pwm.c: 19:     TRISCbits.RC2 = 0;
 15090  005BFA  9494               	bcf	148,2,c	;volatile
 15091                           
 15092                           ;fs_pwm.c: 20:     TRISCbits.RC1 = 0;
 15093  005BFC  9294               	bcf	148,1,c	;volatile
 15094  005BFE                     
 15095                           ;fs_pwm.c: 23:     CCP1CON = 0b00001100;
 15096  005BFE  0E0C               	movlw	12
 15097  005C00  6EBD               	movwf	189,c	;volatile
 15098                           
 15099                           ;fs_pwm.c: 25:     CCP2CON = 0b00001100;
 15100  005C02  0E0C               	movlw	12
 15101  005C04  6E66               	movwf	102,c	;volatile
 15102                           
 15103                           ;fs_pwm.c: 29:     T2CONbits.T2CKPS = 0b01;
 15104  005C06  50BA               	movf	186,w,c	;volatile
 15105  005C08  0BFC               	andlw	-4
 15106  005C0A  0901               	iorlw	1
 15107  005C0C  6EBA               	movwf	186,c	;volatile
 15108  005C0E                     
 15109                           ;fs_pwm.c: 30:     T2CONbits.TMR2ON = 1;
 15110  005C0E  84BA               	bsf	186,2,c	;volatile
 15111                           
 15112                           ;fs_pwm.c: 32:     TMR2 = 0;
 15113  005C10  0E00               	movlw	0
 15114  005C12  6EBC               	movwf	188,c	;volatile
 15115                           
 15116                           ;fs_pwm.c: 33:     PR2 = 199;
 15117  005C14  0EC7               	movlw	199
 15118  005C16  6EBB               	movwf	187,c	;volatile
 15119                           
 15120                           ;fs_pwm.c: 34:     CCPR1L = 0;
 15121  005C18  0E00               	movlw	0
 15122  005C1A  6EBE               	movwf	190,c	;volatile
 15123                           
 15124                           ;fs_pwm.c: 35:     CCPR2L = 0;
 15125  005C1C  0E00               	movlw	0
 15126  005C1E  6E67               	movwf	103,c	;volatile
 15127  005C20  0012               	return		;funcret
 15128  005C22                     __end_of_PWM_Init:
 15129                           	callstack 0
 15130                           
 15131 ;; *************** function _Lcd_Clear *****************
 15132 ;; Defined at:
 15133 ;;		line 51 in file "fs_lcd.c"
 15134 ;; Parameters:    Size  Location     Type
 15135 ;;		None
 15136 ;; Auto vars:     Size  Location     Type
 15137 ;;		None
 15138 ;; Return value:  Size  Location     Type
 15139 ;;                  1    wreg      void 
 15140 ;; Registers used:
 15141 ;;		wreg, status,2, cstack
 15142 ;; Tracked objects:
 15143 ;;		On entry : 0/0
 15144 ;;		On exit  : 0/0
 15145 ;;		Unchanged: 0/0
 15146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15147 ;;      Params:         0       0       0       0       0       0       0
 15148 ;;      Locals:         0       0       0       0       0       0       0
 15149 ;;      Temps:          0       0       0       0       0       0       0
 15150 ;;      Totals:         0       0       0       0       0       0       0
 15151 ;;Total ram usage:        0 bytes
 15152 ;; Hardware stack levels used:    1
 15153 ;; Hardware stack levels required when called:    3
 15154 ;; This function calls:
 15155 ;;		_Lcd_Cmd
 15156 ;; This function is called by:
 15157 ;;		_main
 15158 ;; This function uses a non-reentrant model
 15159 ;;
 15160                           
 15161                           	psect	text61
 15162  005CCC                     __ptext61:
 15163                           	callstack 0
 15164  005CCC                     _Lcd_Clear:
 15165                           	callstack 27
 15166  005CCC                     
 15167                           ;fs_lcd.c: 53:    Lcd_Cmd(0);
 15168  005CCC  0E00               	movlw	0
 15169  005CCE  EC43  F02E         	call	_Lcd_Cmd
 15170                           
 15171                           ;fs_lcd.c: 54:    Lcd_Cmd(1);
 15172  005CD2  0E01               	movlw	1
 15173  005CD4  EC43  F02E         	call	_Lcd_Cmd
 15174  005CD8  0012               	return		;funcret
 15175  005CDA                     __end_of_Lcd_Clear:
 15176                           	callstack 0
 15177                           
 15178 ;; *************** function _Lcd_Cmd *****************
 15179 ;; Defined at:
 15180 ;;		line 35 in file "fs_lcd.c"
 15181 ;; Parameters:    Size  Location     Type
 15182 ;;  a               1    wreg     unsigned char 
 15183 ;; Auto vars:     Size  Location     Type
 15184 ;;  a               1    2[COMRAM] unsigned char 
 15185 ;; Return value:  Size  Location     Type
 15186 ;;                  1    wreg      void 
 15187 ;; Registers used:
 15188 ;;		wreg, status,2, cstack
 15189 ;; Tracked objects:
 15190 ;;		On entry : 0/0
 15191 ;;		On exit  : 0/0
 15192 ;;		Unchanged: 0/0
 15193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15194 ;;      Params:         0       0       0       0       0       0       0
 15195 ;;      Locals:         1       0       0       0       0       0       0
 15196 ;;      Temps:          1       0       0       0       0       0       0
 15197 ;;      Totals:         2       0       0       0       0       0       0
 15198 ;;Total ram usage:        2 bytes
 15199 ;; Hardware stack levels used:    1
 15200 ;; Hardware stack levels required when called:    2
 15201 ;; This function calls:
 15202 ;;		_Lcd_Port
 15203 ;; This function is called by:
 15204 ;;		_Lcd_Clear
 15205 ;;		_Lcd_Set_Cursor
 15206 ;;		_lcd_init
 15207 ;;		_Lcd_Shift_Right
 15208 ;;		_Lcd_Shift_Left
 15209 ;; This function uses a non-reentrant model
 15210 ;;
 15211                           
 15212                           	psect	text62
 15213  005C86                     __ptext62:
 15214                           	callstack 0
 15215  005C86                     _Lcd_Cmd:
 15216                           	callstack 25
 15217                           
 15218                           ;incstack = 0
 15219                           ;Lcd_Cmd@a stored from wreg
 15220  005C86  6E03               	movwf	Lcd_Cmd@a^0,c
 15221  005C88                     
 15222                           ;fs_lcd.c: 35: void Lcd_Cmd(char a);fs_lcd.c: 36: {;fs_lcd.c: 37:    PORTDbits.RD6 = 0;
 15223  005C88  9C83               	bcf	131,6,c	;volatile
 15224  005C8A                     
 15225                           ;fs_lcd.c: 38:    Lcd_Port(a);
 15226  005C8A  5003               	movf	Lcd_Cmd@a^0,w,c
 15227  005C8C  ECA7  F02B         	call	_Lcd_Port
 15228  005C90                     
 15229                           ;fs_lcd.c: 39:    PORTDbits.RD7 = 1;
 15230  005C90  8E83               	bsf	131,7,c	;volatile
 15231  005C92                     
 15232                           ;fs_lcd.c: 40:    _delay((unsigned long)((2)*(64000000UL/4000.0)));
 15233  005C92  0E2A               	movlw	42
 15234  005C94  6E02               	movwf	??_Lcd_Cmd^0,c
 15235  005C96  0E8E               	movlw	142
 15236  005C98                     u7877:
 15237  005C98  2EE8               	decfsz	wreg,f,c
 15238  005C9A  D7FE               	bra	u7877
 15239  005C9C  2E02               	decfsz	??_Lcd_Cmd^0,f,c
 15240  005C9E  D7FC               	bra	u7877
 15241  005CA0                     
 15242                           ;fs_lcd.c: 41:    PORTDbits.RD7 = 0;
 15243  005CA0  9E83               	bcf	131,7,c	;volatile
 15244  005CA2  0012               	return		;funcret
 15245  005CA4                     __end_of_Lcd_Cmd:
 15246                           	callstack 0
 15247                           
 15248 ;; *************** function _Lcd_Port *****************
 15249 ;; Defined at:
 15250 ;;		line 12 in file "fs_lcd.c"
 15251 ;; Parameters:    Size  Location     Type
 15252 ;;  a               1    wreg     unsigned char 
 15253 ;; Auto vars:     Size  Location     Type
 15254 ;;  a               1    0[COMRAM] unsigned char 
 15255 ;; Return value:  Size  Location     Type
 15256 ;;                  1    wreg      void 
 15257 ;; Registers used:
 15258 ;;		wreg
 15259 ;; Tracked objects:
 15260 ;;		On entry : 0/0
 15261 ;;		On exit  : 0/0
 15262 ;;		Unchanged: 0/0
 15263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15264 ;;      Params:         0       0       0       0       0       0       0
 15265 ;;      Locals:         1       0       0       0       0       0       0
 15266 ;;      Temps:          0       0       0       0       0       0       0
 15267 ;;      Totals:         1       0       0       0       0       0       0
 15268 ;;Total ram usage:        1 bytes
 15269 ;; Hardware stack levels used:    1
 15270 ;; Hardware stack levels required when called:    1
 15271 ;; This function calls:
 15272 ;;		Nothing
 15273 ;; This function is called by:
 15274 ;;		_Lcd_Cmd
 15275 ;;		_lcd_init
 15276 ;;		_Lcd_Write_Char
 15277 ;; This function uses a non-reentrant model
 15278 ;;
 15279                           
 15280                           	psect	text63
 15281  00574E                     __ptext63:
 15282                           	callstack 0
 15283  00574E                     _Lcd_Port:
 15284                           	callstack 25
 15285                           
 15286                           ;incstack = 0
 15287                           ;Lcd_Port@a stored from wreg
 15288  00574E  6E01               	movwf	Lcd_Port@a^0,c
 15289  005750                     
 15290                           ;fs_lcd.c: 12: void Lcd_Port(char a);fs_lcd.c: 13: {;fs_lcd.c: 14:    if(a & 1) { PORTBb
      +                          its.RB0 = 1;}
 15291  005750  A001               	btfss	Lcd_Port@a^0,0,c
 15292  005752  EFAD  F02B         	goto	u6321
 15293  005756  EFAF  F02B         	goto	u6320
 15294  00575A                     u6321:
 15295  00575A  EFB2  F02B         	goto	l96
 15296  00575E                     u6320:
 15297  00575E  8081               	bsf	129,0,c	;volatile
 15298  005760  EFB3  F02B         	goto	l5213
 15299  005764                     l96:
 15300  005764  9081               	bcf	129,0,c	;volatile
 15301  005766                     l5213:
 15302                           
 15303                           ;fs_lcd.c: 17:    if(a & 2) { PORTBbits.RB1 = 1;}
 15304  005766  A201               	btfss	Lcd_Port@a^0,1,c
 15305  005768  EFB8  F02B         	goto	u6331
 15306  00576C  EFBA  F02B         	goto	u6330
 15307  005770                     u6331:
 15308  005770  EFBD  F02B         	goto	l98
 15309  005774                     u6330:
 15310  005774  8281               	bsf	129,1,c	;volatile
 15311  005776  EFBE  F02B         	goto	l5217
 15312  00577A                     l98:
 15313  00577A  9281               	bcf	129,1,c	;volatile
 15314  00577C                     l5217:
 15315                           
 15316                           ;fs_lcd.c: 20:    if(a & 4) {PORTBbits.RB2 = 1;}
 15317  00577C  A401               	btfss	Lcd_Port@a^0,2,c
 15318  00577E  EFC3  F02B         	goto	u6341
 15319  005782  EFC5  F02B         	goto	u6340
 15320  005786                     u6341:
 15321  005786  EFC8  F02B         	goto	l100
 15322  00578A                     u6340:
 15323  00578A  8481               	bsf	129,2,c	;volatile
 15324  00578C  EFC9  F02B         	goto	l5221
 15325  005790                     l100:
 15326  005790  9481               	bcf	129,2,c	;volatile
 15327  005792                     l5221:
 15328                           
 15329                           ;fs_lcd.c: 23:    if(a & 8) {PORTBbits.RB3 = 1;}
 15330  005792  A601               	btfss	Lcd_Port@a^0,3,c
 15331  005794  EFCE  F02B         	goto	u6351
 15332  005798  EFD0  F02B         	goto	u6350
 15333  00579C                     u6351:
 15334  00579C  EFD3  F02B         	goto	l102
 15335  0057A0                     u6350:
 15336  0057A0  8681               	bsf	129,3,c	;volatile
 15337  0057A2  EFD4  F02B         	goto	l104
 15338  0057A6                     l102:
 15339  0057A6  9681               	bcf	129,3,c	;volatile
 15340  0057A8                     l104:
 15341  0057A8  0012               	return		;funcret
 15342  0057AA                     __end_of_Lcd_Port:
 15343                           	callstack 0
 15344                           
 15345 ;; *************** function _TIMER0 *****************
 15346 ;; Defined at:
 15347 ;;		line 33 in file "fs_timer.c"
 15348 ;; Parameters:    Size  Location     Type
 15349 ;;		None
 15350 ;; Auto vars:     Size  Location     Type
 15351 ;;		None
 15352 ;; Return value:  Size  Location     Type
 15353 ;;                  1    wreg      void 
 15354 ;; Registers used:
 15355 ;;		wreg, status,2, status,0
 15356 ;; Tracked objects:
 15357 ;;		On entry : 0/0
 15358 ;;		On exit  : 0/0
 15359 ;;		Unchanged: 0/0
 15360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15361 ;;      Params:         0       0       0       0       0       0       0
 15362 ;;      Locals:         0       0       0       0       0       0       0
 15363 ;;      Temps:          0       0       0       0       0       0       0
 15364 ;;      Totals:         0       0       0       0       0       0       0
 15365 ;;Total ram usage:        0 bytes
 15366 ;; Hardware stack levels used:    1
 15367 ;; This function calls:
 15368 ;;		Nothing
 15369 ;; This function is called by:
 15370 ;;		Interrupt level 2
 15371 ;; This function uses a non-reentrant model
 15372 ;;
 15373                           
 15374                           	psect	intcode
 15375  000008                     __pintcode:
 15376                           	callstack 0
 15377  000008                     _TIMER0:
 15378                           	callstack 20
 15379                           
 15380                           ;incstack = 0
 15381  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15382  00000A                     
 15383                           ;fs_timer.c: 35:     if ((INTCONbits.TMR0IF)&&(INTCONbits.TMR0IE))
 15384  00000A  A4F2               	btfss	242,2,c	;volatile
 15385  00000C  EF0A  F000         	goto	i2u777_41
 15386  000010  EF0C  F000         	goto	i2u777_40
 15387  000014                     i2u777_41:
 15388  000014  EF32  F000         	goto	i2l482
 15389  000018                     i2u777_40:
 15390  000018  AAF2               	btfss	242,5,c	;volatile
 15391  00001A  EF11  F000         	goto	i2u778_41
 15392  00001E  EF13  F000         	goto	i2u778_40
 15393  000022                     i2u778_41:
 15394  000022  EF32  F000         	goto	i2l482
 15395  000026                     i2u778_40:
 15396  000026                     
 15397                           ;fs_timer.c: 36:     {;fs_timer.c: 37:         INTCONbits.TMR0IF = 0;
 15398  000026  94F2               	bcf	242,2,c	;volatile
 15399  000028                     
 15400                           ;fs_timer.c: 38:         TMR0H = 0x63;
 15401  000028  0E63               	movlw	99
 15402  00002A  6ED7               	movwf	215,c	;volatile
 15403                           
 15404                           ;fs_timer.c: 39:         TMR0L = 0xC0;
 15405  00002C  0EC0               	movlw	192
 15406  00002E  6ED6               	movwf	214,c	;volatile
 15407  000030                     
 15408                           ;fs_timer.c: 41:         timer_value.timer_0_counter++;
 15409  000030  0100               	movlb	0	; () banked
 15410  000032  2BFC               	incf	(_timer_value+9)& (0+255),f,b
 15411  000034                     
 15412                           ; BSR set to: 0
 15413                           ;fs_timer.c: 43:         if(button_bounce_controller.menu == 0)
 15414  000034  B1FE               	btfsc	_button_bounce_controller& (0+255),0,b
 15415  000036  EF1F  F000         	goto	i2u779_41
 15416  00003A  EF21  F000         	goto	i2u779_40
 15417  00003E                     i2u779_41:
 15418  00003E  EF24  F000         	goto	i2l6209
 15419  000042                     i2u779_40:
 15420  000042                     
 15421                           ; BSR set to: 0
 15422                           ;fs_timer.c: 44:         {;fs_timer.c: 45:              timer_value.menu_login_delay++;
 15423  000042  2BFB               	incf	(_timer_value+8)& (0+255),f,b
 15424                           
 15425                           ;fs_timer.c: 46:         }
 15426  000044  EF26  F000         	goto	i2l6211
 15427  000048                     i2l6209:
 15428                           
 15429                           ; BSR set to: 0
 15430                           ;fs_timer.c: 48:         {;fs_timer.c: 49:              timer_value.menu_login_delay = 0
      +                          ;
 15431  000048  0E00               	movlw	0
 15432  00004A  6FFB               	movwf	(_timer_value+8)& (0+255),b
 15433  00004C                     i2l6211:
 15434                           
 15435                           ; BSR set to: 0
 15436                           ;fs_timer.c: 52:         if (timer_value.timer_0_counter >= 100)
 15437  00004C  0E63               	movlw	99
 15438  00004E  65FC               	cpfsgt	(_timer_value+9)& (0+255),b
 15439  000050  EF2C  F000         	goto	i2u780_41
 15440  000054  EF2E  F000         	goto	i2u780_40
 15441  000058                     i2u780_41:
 15442  000058  EF32  F000         	goto	i2l482
 15443  00005C                     i2u780_40:
 15444  00005C                     
 15445                           ; BSR set to: 0
 15446                           ;fs_timer.c: 53:         {;fs_timer.c: 54:             timer_value.timer_0_counter = 0;
 15447  00005C  0E00               	movlw	0
 15448  00005E  6FFC               	movwf	(_timer_value+9)& (0+255),b
 15449  000060                     
 15450                           ; BSR set to: 0
 15451                           ;fs_timer.c: 55:             timer_counter_flag.one_second_flag = 1;
 15452  000060  0101               	movlb	1	; () banked
 15453  000062  81BE               	bsf	_timer_counter_flag& (0+255),0,b
 15454  000064                     i2l482:
 15455  000064  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15456  000066  0011               	retfie		f
 15457  000068                     __end_of_TIMER0:
 15458                           	callstack 0
 15459                           
 15460                           	psect	rparam
 15461  0000                     
 15462                           	psect	temp
 15463  00005F                     btemp:
 15464                           	callstack 0
 15465  00005F                     	ds	1
 15466  0000                     int$flags	set	btemp
 15467  0000                     wtemp8	set	btemp+1
 15468  0000                     ttemp5	set	btemp+1
 15469  0000                     ttemp6	set	btemp+4
 15470  0000                     ttemp7	set	btemp+8
 15471                           
 15472                           	psect	idloc
 15473                           
 15474                           ;Config register IDLOC0 @ 0x200000
 15475                           ;	unspecified, using default values
 15476  200000                     	org	2097152
 15477  200000  FF                 	db	255
 15478                           
 15479                           ;Config register IDLOC1 @ 0x200001
 15480                           ;	unspecified, using default values
 15481  200001                     	org	2097153
 15482  200001  FF                 	db	255
 15483                           
 15484                           ;Config register IDLOC2 @ 0x200002
 15485                           ;	unspecified, using default values
 15486  200002                     	org	2097154
 15487  200002  FF                 	db	255
 15488                           
 15489                           ;Config register IDLOC3 @ 0x200003
 15490                           ;	unspecified, using default values
 15491  200003                     	org	2097155
 15492  200003  FF                 	db	255
 15493                           
 15494                           ;Config register IDLOC4 @ 0x200004
 15495                           ;	unspecified, using default values
 15496  200004                     	org	2097156
 15497  200004  FF                 	db	255
 15498                           
 15499                           ;Config register IDLOC5 @ 0x200005
 15500                           ;	unspecified, using default values
 15501  200005                     	org	2097157
 15502  200005  FF                 	db	255
 15503                           
 15504                           ;Config register IDLOC6 @ 0x200006
 15505                           ;	unspecified, using default values
 15506  200006                     	org	2097158
 15507  200006  FF                 	db	255
 15508                           
 15509                           ;Config register IDLOC7 @ 0x200007
 15510                           ;	unspecified, using default values
 15511  200007                     	org	2097159
 15512  200007  FF                 	db	255
 15513                           
 15514                           	psect	config
 15515                           
 15516                           ; Padding undefined space
 15517  300000                     	org	3145728
 15518  300000  FF                 	db	255
 15519                           
 15520                           ;Config register CONFIG1H @ 0x300001
 15521                           ;	Oscillator Selection bits
 15522                           ;	FOSC = INTIO67, Internal oscillator block
 15523                           ;	4X PLL Enable
 15524                           ;	PLLCFG = ON, Oscillator multiplied by 4
 15525                           ;	Primary clock enable bit
 15526                           ;	PRICLKEN = ON, Primary clock is always enabled
 15527                           ;	Fail-Safe Clock Monitor Enable bit
 15528                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 15529                           ;	Internal/External Oscillator Switchover bit
 15530                           ;	IESO = ON, Oscillator Switchover mode enabled
 15531  300001                     	org	3145729
 15532  300001  B8                 	db	184
 15533                           
 15534                           ;Config register CONFIG2L @ 0x300002
 15535                           ;	Power-up Timer Enable bit
 15536                           ;	PWRTEN = OFF, Power up timer disabled
 15537                           ;	Brown-out Reset Enable bits
 15538                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 15539                           ;	Brown Out Reset Voltage bits
 15540                           ;	BORV = 190, VBOR set to 1.90 V nominal
 15541  300002                     	org	3145730
 15542  300002  1F                 	db	31
 15543                           
 15544                           ;Config register CONFIG2H @ 0x300003
 15545                           ;	Watchdog Timer Enable bits
 15546                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 15547                           ;	Watchdog Timer Postscale Select bits
 15548                           ;	WDTPS = 32768, 1:32768
 15549  300003                     	org	3145731
 15550  300003  3C                 	db	60
 15551                           
 15552                           ; Padding undefined space
 15553  300004                     	org	3145732
 15554  300004  FF                 	db	255
 15555                           
 15556                           ;Config register CONFIG3H @ 0x300005
 15557                           ;	CCP2 MUX bit
 15558                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 15559                           ;	PORTB A/D Enable bit
 15560                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
 15561                           ;	P3A/CCP3 Mux bit
 15562                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 15563                           ;	HFINTOSC Fast Start-up
 15564                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 15565                           ;	Timer3 Clock input mux bit
 15566                           ;	T3CMX = PORTC0, T3CKI is on RC0
 15567                           ;	ECCP2 B output mux bit
 15568                           ;	P2BMX = PORTD2, P2B is on RD2
 15569                           ;	MCLR Pin Enable bit
 15570                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 15571  300005                     	org	3145733
 15572  300005  BD                 	db	189
 15573                           
 15574                           ;Config register CONFIG4L @ 0x300006
 15575                           ;	Stack Full/Underflow Reset Enable bit
 15576                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
 15577                           ;	Single-Supply ICSP Enable bit
 15578                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 15579                           ;	Extended Instruction Set Enable bit
 15580                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 15581                           ;	Background Debug
 15582                           ;	DEBUG = 0x1, unprogrammed default
 15583  300006                     	org	3145734
 15584  300006  84                 	db	132
 15585                           
 15586                           ; Padding undefined space
 15587  300007                     	org	3145735
 15588  300007  FF                 	db	255
 15589                           
 15590                           ;Config register CONFIG5L @ 0x300008
 15591                           ;	Code Protection Block 0
 15592                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 15593                           ;	Code Protection Block 1
 15594                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 15595                           ;	Code Protection Block 2
 15596                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 15597                           ;	Code Protection Block 3
 15598                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 15599  300008                     	org	3145736
 15600  300008  0F                 	db	15
 15601                           
 15602                           ;Config register CONFIG5H @ 0x300009
 15603                           ;	Boot Block Code Protection bit
 15604                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 15605                           ;	Data EEPROM Code Protection bit
 15606                           ;	CPD = OFF, Data EEPROM not code-protected
 15607  300009                     	org	3145737
 15608  300009  C0                 	db	192
 15609                           
 15610                           ;Config register CONFIG6L @ 0x30000A
 15611                           ;	Write Protection Block 0
 15612                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 15613                           ;	Write Protection Block 1
 15614                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 15615                           ;	Write Protection Block 2
 15616                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 15617                           ;	Write Protection Block 3
 15618                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 15619  30000A                     	org	3145738
 15620  30000A  0F                 	db	15
 15621                           
 15622                           ;Config register CONFIG6H @ 0x30000B
 15623                           ;	Configuration Register Write Protection bit
 15624                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 15625                           ;	Boot Block Write Protection bit
 15626                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 15627                           ;	Data EEPROM Write Protection bit
 15628                           ;	WRTD = OFF, Data EEPROM not write-protected
 15629  30000B                     	org	3145739
 15630  30000B  E0                 	db	224
 15631                           
 15632                           ;Config register CONFIG7L @ 0x30000C
 15633                           ;	Table Read Protection Block 0
 15634                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 15635                           ;	Table Read Protection Block 1
 15636                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 15637                           ;	Table Read Protection Block 2
 15638                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 15639                           ;	Table Read Protection Block 3
 15640                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 15641  30000C                     	org	3145740
 15642  30000C  0F                 	db	15
 15643                           
 15644                           ;Config register CONFIG7H @ 0x30000D
 15645                           ;	Boot Block Table Read Protection bit
 15646                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 15647  30000D                     	org	3145741
 15648  30000D  40                 	db	64
 15649                           tosu	equ	0xFFF
 15650                           tosh	equ	0xFFE
 15651                           tosl	equ	0xFFD
 15652                           stkptr	equ	0xFFC
 15653                           pclatu	equ	0xFFB
 15654                           pclath	equ	0xFFA
 15655                           pcl	equ	0xFF9
 15656                           tblptru	equ	0xFF8
 15657                           tblptrh	equ	0xFF7
 15658                           tblptrl	equ	0xFF6
 15659                           tablat	equ	0xFF5
 15660                           prodh	equ	0xFF4
 15661                           prodl	equ	0xFF3
 15662                           indf0	equ	0xFEF
 15663                           postinc0	equ	0xFEE
 15664                           postdec0	equ	0xFED
 15665                           preinc0	equ	0xFEC
 15666                           plusw0	equ	0xFEB
 15667                           fsr0h	equ	0xFEA
 15668                           fsr0l	equ	0xFE9
 15669                           wreg	equ	0xFE8
 15670                           indf1	equ	0xFE7
 15671                           postinc1	equ	0xFE6
 15672                           postdec1	equ	0xFE5
 15673                           preinc1	equ	0xFE4
 15674                           plusw1	equ	0xFE3
 15675                           fsr1h	equ	0xFE2
 15676                           fsr1l	equ	0xFE1
 15677                           bsr	equ	0xFE0
 15678                           indf2	equ	0xFDF
 15679                           postinc2	equ	0xFDE
 15680                           postdec2	equ	0xFDD
 15681                           preinc2	equ	0xFDC
 15682                           plusw2	equ	0xFDB
 15683                           fsr2h	equ	0xFDA
 15684                           fsr2l	equ	0xFD9
 15685                           status	equ	0xFD8

Data Sizes:
    Strings     214
    Constant    0
    Data        32
    BSS         284
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    147     160
    BANK1           256      0     223
    BANK2           256      0      80
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_27(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_27(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_22(CODE[4]), STR_21(CODE[4]), STR_18(CODE[4]), STR_17(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_22(CODE[4]), STR_21(CODE[4]), STR_18(CODE[4]), STR_17(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[13]), STR_14(CODE[14]), STR_12(CODE[16]), STR_10(CODE[16]), 
		 -> STR_8(CODE[18]), STR_6(CODE[18]), STR_4(CODE[18]), STR_2(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[13]), STR_14(CODE[14]), STR_12(CODE[16]), STR_10(CODE[16]), 
		 -> STR_8(CODE[18]), STR_6(CODE[18]), STR_4(CODE[18]), STR_2(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[13]), STR_14(CODE[14]), STR_12(CODE[16]), STR_10(CODE[16]), 
		 -> STR_8(CODE[18]), STR_6(CODE[18]), STR_4(CODE[18]), STR_2(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[13]), STR_14(CODE[14]), STR_12(CODE[16]), STR_10(CODE[16]), 
		 -> STR_8(CODE[18]), STR_6(CODE[18]), STR_4(CODE[18]), STR_2(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2365_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_15(CODE[17]), STR_13(CODE[17]), STR_11(CODE[17]), STR_9(CODE[17]), 
		 -> STR_7(CODE[17]), STR_5(CODE[17]), STR_3(CODE[17]), STR_1(CODE[17]), 
		 -> stateMachine@textCursor2(BANK0[16]), 


Critical Paths under _main in COMRAM

    _system_init->_eepromRead
    _stopMotor->_PWM1_setDC
    _stopMotor->_PWM2_setDC
    _startMotor->_PWM1_setDC
    _startMotor->_PWM2_setDC
    _startMotor->_speedControl
    _speedControl->___fltol
    _scanAdcConversion->___fltol
    _calculatedAverageValue->___xxtofl
    _PWM2_setDC->___fltol
    _PWM1_setDC->___fltol
    _fabsf->___xxtofl
    ___xxtofl->___lldiv
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___fltol->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _lcd_init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _TIMER0 in COMRAM

    None.

Critical Paths under _main in BANK0

    _menuControl->_stateMachine
    _stateMachine->_sprintf
    _startMotor->_speedControl
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _TIMER0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TIMER0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TIMER0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TIMER0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TIMER0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TIMER0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  100437
                          _Lcd_Clear
                         _PWM1_setDC
                         _PWM2_setDC
                           _PWM_Init
                            _adcInit
                           _lcd_init
                           _mcu_init
                        _menuControl
                     _menuInitialize
                        _system_init
                       _timer_0_init
 ---------------------------------------------------------------------------------
 (1) _timer_0_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_init                                          2     2      0      22
                                              1 COMRAM     2     2      0
                         _eepromRead
 ---------------------------------------------------------------------------------
 (2) _eepromRead                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _menuInitialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _menuControl                                          0     0      0   93759
                 _buttonControlFlags
                       _stateMachine
 ---------------------------------------------------------------------------------
 (2) _stateMachine                                        18    18      0   93759
                                            129 BANK0     18    18      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fladd
                             ___flge
                            ___flsub
                        _eepromWrite
                            _sprintf
                         _startMotor
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _stopMotor                                            0     0      0    6348
                         _PWM1_setDC
                         _PWM2_setDC
 ---------------------------------------------------------------------------------
 (3) _startMotor                                           0     0      0   32873
                         _PWM1_setDC
                         _PWM2_setDC
             _calculatedAverageValue
                  _scanAdcConversion
                       _speedControl
 ---------------------------------------------------------------------------------
 (4) _speedControl                                        10     6      4   11063
                                             87 COMRAM     6     2      4
                                              0 BANK0      4     4      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) _scanAdcConversion                                    2     2      0   12556
                                             87 COMRAM     2     2      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                       _readAdcValue
 ---------------------------------------------------------------------------------
 (5) _readAdcValue                                         7     5      2      46
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _calculatedAverageValue                              24    24      0    2906
                                             27 COMRAM    24    24      0
                            ___lldiv
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8    1282
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) _PWM2_setDC                                           6     4      2    3174
                                             87 COMRAM     6     4      2
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (4) _PWM1_setDC                                           6     4      2    3174
                                             87 COMRAM     6     4      2
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (5) _fabsf                                                8     4      4     199
                                             27 COMRAM     8     4      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4    1310
                                             13 COMRAM    14    10      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    10      8   42834
                                            111 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   41409
                                            103 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           50    44      6   41025
                                             71 BANK0     32    26      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   30053
                                             87 COMRAM     7     0      7
                                             10 BANK0     61    61      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     490
                                             77 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4    1369
                                             77 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _fabsf (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    3801
                                             68 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    3022
                                             52 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    5240
                                             27 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8     942
                                             52 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    4591
                                             52 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5042
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1396
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eepromWrite                                          2     1      1     500
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_String                                     6     4      2    1484
                                              4 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (4) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Set_Cursor                                       5     4      1    1596
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _buttonControlFlags                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mcu_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     198
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (4) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (5) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _TIMER0                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _PWM1_setDC
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
       _fabsf (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
     ___xxtofl
       ___lldiv (ARG)
     _fabsf
       ___xxtofl (ARG)
         ___lldiv (ARG)
   _PWM2_setDC
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
       _fabsf (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
     ___xxtofl
       ___lldiv (ARG)
     _fabsf
       ___xxtofl (ARG)
         ___lldiv (ARG)
   _PWM_Init
   _adcInit
   _lcd_init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _mcu_init
   _menuControl
     _buttonControlFlags
     _stateMachine
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___flge
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
       _eepromWrite
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fleq
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
                 _fabsf (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper
       _startMotor
         _PWM1_setDC
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
           _fabsf
             ___xxtofl (ARG)
               ___lldiv (ARG)
         _PWM2_setDC
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
           _fabsf
             ___xxtofl (ARG)
               ___lldiv (ARG)
         _calculatedAverageValue
           ___lldiv
           ___lmul
           ___xxtofl
             ___lldiv (ARG)
         _scanAdcConversion
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
           _readAdcValue
         _speedControl
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
       _stopMotor
         _PWM1_setDC
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
           _fabsf
             ___xxtofl (ARG)
               ___lldiv (ARG)
         _PWM2_setDC
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
           _fabsf
             ___xxtofl (ARG)
               ___lldiv (ARG)
   _menuInitialize
   _system_init
     _eepromRead
   _timer_0_init

 _TIMER0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      50       8       31.2%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      DF       6       87.1%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     93      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     22D       9        0.0%
DATA                 0      0     22D      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Aug 13 15:38:48 2020

                   ___fldiv@aexp 004D                     ___fldiv@bexp 004C  
                   ___fldiv@sign 0045                               l41 59E8  
                             l35 5942                               l38 596A  
                             l54 2486                               l70 5C74  
                             l72 5C82                               l57 3A26  
                             l73 5C84                               l76 5BBE  
                             l78 5BCC                               _KD 01D7  
                             l79 5BD0                               l96 5764  
                             l98 577A                               _KP 01DB  
                   ___awdiv@sign 0006              ___wmul@multiplicand 0003  
            __end_of_system_init 49B8                              l100 5790  
                            l102 57A6                              l110 5CD8  
                            l104 57A8         ??_calculatedAverageValue 001C  
                            l122 5B6E                              l107 5CA2  
                            l116 5690                              l119 5376  
                            l320 466E                              l128 53F4  
                            l312 5BF8                              l321 468E  
                            l250 5CB8                              l322 46AE  
                            l323 46CE                              l315 45CE  
                            l404 5C20                              l324 46EE  
                            l316 45EE                              l412 546E  
                            l500 55C0                              l325 470E  
                            l317 460E                              l333 5556  
                            l253 49B6                              l318 462E  
                            l247 5CAA                              l327 472E  
                            l319 464E                              l343 135C  
                            l408 54E8                              l344 13A6  
                            l441 40DE                              l602 45AA  
                            l522 52E0                              l515 52D0  
                            l444 5A24                              l348 144E  
                            l366 181A                              l358 166C  
                            l615 4892                              l447 5B02  
                            l383 1C80                     _startIsClick 01BD  
                            l368 18B4                              l732 5192  
                            l485 5CCA                              l719 50E2  
                            l488 5C46                              l753 4B7A  
                            l762 5A94                              l747 523C  
                            l499 55B0                              l758 4BC0  
                            l785 4ABC                              _PR2 000FBB  
                            _abs 596C                              _pad 4F5A  
                   ___awmod@sign 0006                              wreg 000FE8  
                   ___flmul@aexp 002D                     ___flmul@bexp 002E  
                   ___flmul@sign 0028                     ___flmul@temp 0033  
                   ___flmul@prod 002F                      _stopIsClick 01BC  
                   ___fltol@exp1 0057                             l1102 3042  
                           l1111 32B0                             l1112 329E  
                           l1016 2CAC                             l1033 2DC6  
                           l1025 2F7C                             l1017 2C9A  
                           l1106 33A6                             l1042 2E96  
                           l1018 2C60                             l1043 2E84  
                           ?_abs 0013                             l1109 3238  
                           l1214 4FA0                             l1070 3740  
                           l1150 41CE                             l1119 3368  
                           l1143 4136                             l1072 35A0  
                           l1217 4FE2                             l1225 3AC8  
                           l1081 35E6                             l1058 58E4  
                           l1146 4292                             l1219 501E  
                           l1227 3AD0                             l1083 365E  
                           l1075 3564                             l1307 0E68  
                           l1171 584C                             l1084 364C  
                           l1164 5BA2                             l1245 3D0A  
                           l1501 4E8E                             l1157 422A  
                           l1511 56E8                             l1263 129C  
                           l4001 2C6E                             l1281 0ACC  
                           l1426 441A                             l4011 2C98  
                           l4003 2C7A                             l1435 3F20  
                           l1516 56F0                             l1380 562A  
                           l1445 5ACC                             l1453 589E  
                           l1429 4422                             l4101 2F4E  
                           l4021 2CEE                             l4013 2CBA  
                           l4005 2C7E                             l1373 2A02  
                           l1365 2ABC                             l1390 4CBE  
                           l1438 3E64                             l4111 2F6C  
                           l4103 2F54                             l4031 2D28  
                           l4023 2CFC                             l4015 2CCA  
                           l4007 2C8C                             l4201 47B2  
                           l4121 5908                             l4105 2F56  
                           l4041 2D94                             l4033 2D2A  
                           l4025 2D0A                             l4009 2C8E  
                           l5001 0E40                             l1474 4F58  
                           l1482 5928                             l4211 482A  
                           l4203 47BA                             l1395 59A2  
                           l4115 58E6                             l4123 5B04  
                           l4107 2F5C                             l4051 2DEC  
                           l4043 2D96                             l4035 2D34  
                           l4027 2D16                             l4019 2CDE  
                           l1491 574C                             l1459 5A5C  
                           l5011 0EF8                             l5003 0E54  
                           l1379 5622                             l4213 483C  
                           l4205 47CE                             l1485 5CDA  
                           l4117 58F2                             l4125 5B10  
                           l4301 358C                             l4109 2F6A  
                           l4061 2E1A                             l4045 2DA6  
                           l4029 2D1A                             l4037 2D3A  
                           l4133 5A26                             l5101 11CA  
                           l5021 0F48                             l5013 0F0C  
                           l5005 0E60                             l1398 59AA  
                           l4151 445A                             l4143 4424  
                           l4207 47DC                             l4215 4842  
                           l4119 5904                             l4127 5B14  
                           l4311 35CC                             l4303 358E  
                           l4231 33D4                             l4223 33A8  
                           l4063 2E28                             l4055 2E00  
                           l4071 2E46                             l4039 2D60  
                           l4047 2DB6                             l5111 1206  
                           l5103 11DC                             l5031 0F7C  
                           l5023 0F56                             l5015 0F1E  
                           l5007 0E84                             l4137 5C22  
                           l4161 44B6                             l4153 4468  
                           l4145 4428                             l4217 4852  
                           l4209 480A                             l1497 5B38  
                           l4129 5B2C                             l4321 3608  
                           l4313 35D6                             l4305 359E  
                           l4241 340E                             l4233 33E4  
                           l4225 33B4                             l4401 3076  
                           l4065 2E30                             l4057 2E0A  
                           l4049 2DDC                             l4073 2E54  
                           l5121 125E                             l5113 120C  
                           l5105 11E8                             l5041 0FAE  
                           l5033 0F8C                             l5025 0F66  
                           l5017 0F2C                             l5009 0EE8  
                           l5201 5940                             l6001 1A96  
                           l5211 575E                             l4139 5C3E  
                           l4171 4520                             l4163 44BE  
                           l4155 4488                             l4147 4436  
                           l4219 4872                             l4331 367A  
                           l4323 3616                             l4315 35E4  
                           l4307 35B0                             l4251 343A  
                           l4243 3414                             l4235 33F4  
                           l4227 33C2                             l4411 30C6  
                           l4403 3082                             l4083 2EA6  
                           l4091 2EFC                             l4075 2E58  
                           l4067 2E34                             l4059 2E18  
                           l5123 1266                             l5107 11F0  
                           l5051 1056                             l5043 0FC0  
                           l5035 0F90                             l5027 0F6A  
                           l5019 0F34                             l5203 5950  
                           l6011 1AFE                             l6003 1ACA  
                           l5221 5792                             l5213 5766  
                           l5141 42CC                             l5133 4294  
                           l4181 456A                             l4173 4540  
                           l4165 44D2                             l4157 448C  
                           l4149 4456                             l4501 5032  
                           l4341 36E6                             l4333 3688  
                           l4325 3644                             l4309 35C6  
                           l4317 35F6                             l4261 3474  
                           l4253 344A                             l4245 341A  
                           l4237 33F6                             l4229 33C4  
                           l4421 3108                             l4413 30D2  
                           l4405 308C                             l4093 2F0C  
                           l4085 2EB2                             l4077 2E66  
                           l4069 2E44                             l5125 1276  
                           l5117 1240                             l5109 1200  
                           l5061 10AE                             l5053 105E  
                           l5045 0FC4                             l5037 0F96  
                           l5029 0F70                             l5301 4262  
                           l5205 5962                             l6021 1B76  
                           l6013 1B24                             l6005 1ADE  
                           l6101 496E                             l5223 57A0  
                           l5215 5774                             l5151 4322  
                           l5143 4302                             l5135 42A8  
                           l4183 458A                             l4175 4542  
                           l4167 44E0                             l4159 4498  
                           l4191 4742                             l4511 5058  
                           l4503 503A                             l4351 3734  
                           l4343 3700                             l4335 36B2  
                           l4319 3604                             l4263 348A  
                           l4255 345A                             l4247 3428  
                           l4239 33FE                             l4431 316A  
                           l4423 3114                             l4415 30DE  
                           l4407 30A2                             l4095 2F1C  
                           l4087 2EC0                             l4079 2E7C  
                           l5127 127C                             l5119 1252  
                           l5071 10F8                             l5063 10BE  
                           l5039 0F9C                             l5047 0FCA  
                           l5055 1062                             l5311 2488  
                           l5303 4272                             l6023 1BAA  
                           l6015 1B30                             l6007 1AE8  
                           l6031 1C02                             l6111 49A6  
                           l6103 4970                             l5217 577C  
                           l5209 5750                             l5161 439C  
                           l5153 432A                             l5145 4306  
                           l5137 42AC                             l4177 4554  
                           l4169 44F2                             l4193 4762  
                           l4521 5090                             l4513 5060  
                           l4505 503E                             l4353 3736  
                           l4345 371C                             l4329 366E  
                           l4337 36B6                             l4281 34DE  
                           l4265 349A                             l4273 34BA  
                           l4257 345C                             l4249 342A  
                           l4601 4B3A                             l4441 3200  
                           l4433 3176                             l4425 3124  
                           l4417 30EC                             l4409 30AE  
                           l4361 2F7E                             l4097 2F3C  
                           l4089 2EFA                             l5081 112E  
                           l5073 1100                             l5065 10D0  
                           l5057 1080                             l5049 1022  
                           l5321 24F4                             l5313 24AC  
                           l5305 4280                             l5225 5B70  
                           l5241 5590                             l5233 5558  
                           l6025 1BBA                             l6017 1B40  
                           l6009 1AF4                             l6121 54EA  
                           l6113 49AE                             l6105 497A  
                           l5219 578A                             l6115 5BFA  
                           l6043 59AC                             l6051 52E2  
                           l5155 4332                             l5139 42B0  
                           l4179 455A                             l4195 4766  
                           l4187 4730                             l4531 50BC  
                           l4523 5096                             l4515 5072  
                           l4507 504C                             l4347 3720  
                           l4339 36D0                             l4291 3530  
                           l4283 34F8                             l4275 34CA  
                           l4267 34A2                             l4259 3464  
                           l4611 4BBE                             l4603 4B48  
                           l4451 3256                             l4443 321E  
                           l4435 3192                             l4427 313E  
                           l4419 30F8                             l4371 2FBA  
                           l4363 2F8A                             l4099 2F40  
                           l5091 118A                             l5083 1136  
                           l5075 1110                             l5067 10D4  
                           l5059 109C                             l5411 2A5C  
                           l5331 2574                             l5323 252A  
                           l5315 24BA                             l5307 4282  
                           l5227 5B90                             l5251 5278  
                           l5243 523E                             l5235 5568  
                           l6027 1BCA                             l6019 1B72  
                           l6131 5516                             l6123 54EE  
                           l6107 4984                             l5501 5C8A  
                           l6117 5BFE                             l6045 59CE  
                           l6061 5330                             l6053 52FC  
                           l5165 43DA                             l5157 4366  
                           l5149 430C                             l4197 4774  
                           l4189 4734                             l3901 4EA2  
                           l4525 50AC                             l4517 507A  
                           l4533 50C2                             l4509 5054  
                           l4541 50E4                             l4349 372E  
                           l4293 3540                             l4285 3508  
                           l4277 34CA                             l4269 34A6  
                           l4605 4B5A                             l4461 32C0  
                           l4453 325A                             l4445 3228  
                           l4437 31BC                             l4429 314E  
                           l4381 2FEC                             l4373 2FCA  
                           l4365 2F98                             l4701 4C54  
                           l5093 1192                             l5085 1142  
                           l5077 1118                             l5069 10E6  
                           l5181 4DF0                             l5405 2A16  
                           l5341 25FC                             l5325 2538  
                           l5317 24CC                             l5421 2A86  
                           l5229 5B92                             l5261 52C0  
                           l5253 5286                             l5245 524E  
                           l5237 5576                             l6029 1BCE  
                           l6037 1C1A                             l6141 5548  
                           l6133 5526                             l6125 54F2  
                           l6109 498E                             ?_pad 0011  
                           l5503 5C90                             l6119 5C0E  
                           l6047 59D6                             l6071 5358  
                           l6063 5336                             l6055 5302  
                           l5511 5B48                             l5167 43EC  
                           l4199 4794                             l3903 4EB4  
                           l4535 50D2                             l4527 50B4  
                           l4519 5082                             l4551 5110  
                           l4543 50E8                             l4295 3554  
                           l4287 3518                             l4607 4B68  
                           l4471 3322                             l4463 32CC  
                           l4455 3268                             l4447 3236  
                           l4439 31F2                             l4391 302C  
                           l4383 2FFA                             l4375 2FD0  
                           l4367 2F9A                             l4615 5A5E  
                           l4631 4A0C                             l4623 49B8  
                           l4711 4CB6                             l5087 1148  
                           l5095 1198                             l5079 1126  
                           l5191 4E6C                             l5183 4DFE  
                           l5175 4DBA                             l5423 2AAA  
                           l5407 2A3A                             l5415 2A6A  
                           l5351 2696                             l5343 260A  
                           l5335 25BC                             l5327 2546  
                           l5319 24D0                             l5271 4146  
                           l5263 52CA                             l5255 5290  
                           l5247 5264                             l5239 5586  
                           l5431 1C86                             l6135 5528  
                           l6127 5502                             l6151 4CC8  
                           l5505 5C92                             l6049 5CCC  
                           l6073 535E                             l6065 5346  
                           l6057 531A                             l6081 5CA4  
                           l5601 563E                             l5521 5B5C  
                           l5513 5B4A                             l5169 43FE  
                           l3905 4EBE                             l4801 3B98  
                           l4537 50DA                             l4529 50B6  
                           l4561 5148                             l4553 5118  
                           l4545 50F6                             l4297 3562  
                           l4289 3528                             l4609 4BB8  
                           l4481 338A                             l4473 3336  
                           l4465 32DA                             l4457 3296  
                           l4449 3248                             l4393 3032  
                           l4385 2FFC                             l4377 2FE0  
                           l4369 2FAA                             l4617 5A74  
                           l3921 2AEA                             l3913 2ABE  
                           l4633 4A0E                             l4625 49CE  
                           l4705 4C60                             l5097 11AA  
                           l5089 116E                             l5185 4E16  
                           l5177 4DE4                             l5417 2A78  
                           l5409 2A48                             l5361 2722  
                           l5345 262E                             l5329 2566  
                           l5337 25CE                             l5281 4184  
                           l5273 415C                             l5265 40E2  
                           l5257 52AE                             l5249 526C  
                           l5441 1DE6                             l5433 1C94  
                           l6137 5536                             l6129 5504  
                           l6161 4CDC                             l6153 4CCC  
                           l5507 5CA0                             l6075 5364  
                           l6067 534C                             l6059 5320  
                           l6083 5CA8                             l5611 5684  
                           l5603 5650                             l5523 5B62  
                           l5515 5B52                             l3907 4EDC  
                           l4811 3C40                             l4803 3B9E  
                           l4571 5182                             l4563 515E  
                           l4555 512A                             l4547 50FE  
                           l4299 356E                             l4483 338C  
                           l4475 3350                             l4467 3304  
                           l4395 3052                             l4387 300C  
                           l4379 2FE6                             l4619 5A84  
                           l3931 2B24                             l3923 2AFA  
                           l3915 2ACA                             l4491 58A0  
                           l4635 4A1E                             l4707 4C72  
                           l4731 3D2C                             l4715 56F2  
                           l4723 56C8                             l5099 11C4  
                           l5187 4E32                             l5371 27DE  
                           l5363 2754                             l5355 26DE  
                           l5347 2668                             l5339 25F2  
                           l5291 420C                             l5283 41B6  
                           l5267 40F2                             l5531 5470  
                           l5259 52BE                             l5195 592C  
                           l5451 1FA2                             l5443 1E56  
                           l5435 1CFE                             l6139 5546  
                           l6091 5CC8                             l6171 4D0A  
                           l6163 4CE0                             l6155 4CD0  
                           l6147 4CC0                             l6077 536A  
                           l6069 5352                             l5701 471C  
                           l5613 568A                             l5605 5656  
                           l5525 5B64                             l5517 5B54  
                           l5509 5B3C                             l5621 53B8  
                           l3909 4F12                             l4821 3CA6  
                           l4813 3C5A                             l4805 3BA4  
                           l4573 518A                             l4565 5166  
                           l4557 5132                             l4549 5102  
                           l4581 51D2                             l4477 336C  
                           l4485 3392                             l4469 3308  
                           l4397 3062                             l4389 301C  
                           l3941 2B52                             l3933 2B2A  
                           l3925 2B0A                             l3917 2AD8  
                           l4493 58B0                             l4661 4A9C  
                           l4645 4A48                             l4637 4A22  
                           l4629 49E2                             l4741 3E18  
                           l4733 3D84                             l4717 5702  
                           l4725 56DA                             l4901 0910  
                           l5189 4E44                             l5381 2886  
                           l5373 2826                             l5365 2764  
                           l5349 2688                             l5357 26F0  
                           l5293 421A                             l5285 41B8  
                           l5277 4170                             l5269 4100  
                           l5533 5488                             l5541 540E  
                           l5197 592C                             l5461 2102  
                           l5453 1FB0                             l5445 1E64  
                           l5437 1D6E                             l5429 1C82  
                           l6085 5BD2                             l6093 4894  
                           l6181 4D54                             l6173 4D1A  
                           l6165 4CEC                             l6157 4CD4  
                           l6149 4CC4                             l6079 5370  
                           l5703 472A                             l5607 5660  
                           l5527 5B6C                             l5519 5B5A  
                           l5615 5378                             l4671 4F7E  
                           l4823 3CAC                             l4831 3CE2  
                           l4815 3C74                             l4807 3C08  
                           l4567 516C                             l4559 513A  
                           l4583 5200                             l4487 3396  
                           l4479 337C                             l3951 2B86  
                           l3943 2B54                             l3935 2B3C  
                           l3927 2B0C                             l3919 2ADA  
                           l4663 4AAC                             l4655 4A70  
                           l4647 4A52                             l4639 4A30  
                           l4751 3F00                             l4743 3E54  
                           l4735 3D98                             l4719 5692  
                           l4911 099A                             l4903 092A  
                           l5391 291E                             l5383 2894  
                           l5367 2796                             l5359 2712  
                           l5631 583A                             l5623 57FC  
                           l5295 4238                             l5287 41C4  
                           l5279 4178                             l5535 54D0  
                           l5543 5456                             l5199 593E  
                           l5471 2268                             l5463 2172  
                           l5455 201A                             l5447 1ECE  
                           l5439 1D7C                             l5551 3F62  
                           l5711 12C4                             l6095 4966  
                           l6087 5CBA                             l6191 4DA6  
                           l6183 4D64                             l6175 4D2C  
                           l6167 4CF8                             l6159 4CD8  
                           l5609 5672                             l5617 5384  
                           l4761 584E                             l6281 4350  
                           l4681 4FC4                             l4673 4F8C  
                           l4825 3CBE                             l4809 3C22  
                           l4817 3C84                             l4497 5020  
                           l4569 5172                             l4585 5210  
                           l4577 5194                             l4593 4ABE  
                           l3961 2BC2                             l3945 2B64  
                           l3953 2B8E                             l3937 2B3E  
                           l3929 2B14                             l4657 4A7C  
                           l4649 4A5C                             l4753 3F10  
                           l4737 3DA6                             l4745 3E88  
                           l4729 3D0C                             l4921 0A72  
                           l4913 09F4                             l4841 0700  
                           l5385 28C4                             l5377 285E  
                           l5369 27BA                             l5625 580E  
                           l5297 423A                             l5289 4200  
                           l5529 5470                             l5537 53F6  
                           l5473 22D2                             l5465 2180  
                           l5457 208A                             l5449 1F3A  
                           l5561 406A                             l5553 4028  
                           l5545 3F22                             l5641 59EA  
                           l5801 1522                             l5721 131E  
                           l5713 12CE                             l5705 129E  
                           l6097 496A                             l6089 5CC6  
                           l6185 4D78                             l6177 4D3E  
                           l6169 4D08                             l6193 4DAE  
                           l5619 53B4                             l4763 5852  
                           l4691 5986                             l4683 4FF2  
                           l4675 4F98                             l4667 4F5A  
                           l4827 3CCA                             l4819 3C96  
                           l4499 5024                             l4587 5234  
                           l4579 51C2                             l4595 4AEC  
                           l3971 2BD6                             l3963 2BC6  
                           l3955 2B9E                             l3947 2B74  
                           l3939 2B44                             l4659 4A8C  
                           l4747 3EC4                             l4931 0ABE  
                           l4923 0A76                             l4915 0A28  
                           l4907 0960                             l4851 0750  
                           l4843 0708                             l4835 06D8  
                           l5395 298C                             l5379 2870  
                           l5627 5816                             l5299 423E  
                           l5539 53F6                             l5491 3774  
                           l5475 2342                             l5467 21EA  
                           l5459 2098                             l5483 242A  
                           l5571 40BA                             l5563 4072  
                           l5555 4030                             l5547 3F22  
                           l5635 5ACE                             l5643 5A0C  
                           l5811 1572                             l5803 152C  
                           l5731 1392                             l5723 133A  
                           l5715 12F4                             l5707 12AE  
                           l5651 5C70                             l6099 496C  
                           l6187 4D7C                             l6179 4D4E  
                           l5661 45DC                             l4757 5A96  
                           l4765 5866                             l4685 5006  
                           l4677 4FAC                             l4669 4F6A  
                           l4829 3CD2                             l4781 3AA0  
                           l4773 3A28                             l4589 523A  
                           l4597 4AFC                             l3981 2BEA  
                           l3973 2BDA                             l3965 2BCA  
                           l3957 2BB0                             l3949 2B84  
                           l4693 4BC2                             l4749 3ED8  
                           l4941 0B00                             l4925 0A88  
                           l4933 0AD8                             l4917 0A30  
                           l4909 0994                             l4861 078C  
                           l4853 0760                             l4845 072C  
                           l4837 06E2                             l5397 299E  
                           l5389 28F0                             l5581 5606  
                           l5629 581E                             l5493 383A  
                           l5477 2350                             l5469 225A  
                           l5573 40D6                             l5565 408E  
                           l5557 403E                             l5549 3F22  
                           l5637 5AD2                             l5645 5A18  
                           l6277 1C32                             l5901 1772  
                           l5821 1596                             l5813 157A  
                           l5805 1548                             l5741 13EC  
                           l5733 13A2                             l5725 134C  
                           l5717 1300                             l5709 12B8  
                           l5653 5C72                             l6189 4D90  
                           l5671 462A                             l5663 45EA  
                           l5655 45AC                             l5591 5BB2  
                           l5583 5BA6                             l4767 5894  
                           l4679 4FC0                             l4791 3AF8  
                           l4783 3AA2                             l4775 3A48  
                           l4599 4B2A                             l3983 2BEE  
                           l3975 2BDE                             l3967 2BCE  
                           l3959 2BBE                             l3991 2BFE  
                           l4695 4BE2                             l4951 0B66  
                           l4943 0B1C                             l4927 0A9C  
                           l4919 0A62                             l4871 07F2  
                           l4863 0790                             l4855 0774  
                           l4847 0736                             l4839 06F2  
                           l5399 29D2                             l5575 55C2  
                           l5495 3934                             l6279 2440  
                           l5479 23BA                             l5567 4096  
                           l5559 404E                             l5639 5AD6  
                           l5911 17C0                             l5903 177C  
                           l5823 15A6                             l5831 15CC  
                           l5815 157E                             l5807 1554  
                           l5751 1442                             l5743 13F4  
                           l5735 13B8                             l5727 136E  
                           l5719 1314                             l5647 5C6A  
                           l5681 467C                             l5673 463C  
                           l5665 45FC                             l5657 45BC  
                           l5593 5BB4                             l5585 5BAA  
                           l4769 5898                             l4689 596C  
                           l4793 3AFE                             l4785 3ABC  
                           l4777 3A70                             l3993 2C02  
                           l3985 2BF2                             l3977 2BE2  
                           l3969 2BD2                             l4697 4C20  
                           l4961 0BAE                             l4953 0B78  
                           l4945 0B52                             l4929 0AA4  
                           l4873 0804                             l4857 0780  
                           l4865 0796                             l4849 073E  
                           l5577 55CA                             l5497 39DC  
                           l5489 3742                             l5569 40B2  
                           l5913 17D0                             l5905 1784  
                           l5833 15DC                             l5841 1602  
                           l5825 15B8                             l5817 158E  
                           l5809 1568                             l5761 1464  
                           l5753 1446                             l5737 13CA  
                           l5745 140C                             l5729 1380  
                           l5649 5C6E                             l5499 5C88  
                           l5691 46CA                             l5683 468A  
                           l5675 464A                             l5667 460A  
                           l5659 45CA                             l5595 5BB8  
                           l5587 5BAE                             l3899 4E90  
                           l4795 3B06                             l4787 3AD8  
                           l4779 3A90                             l3995 2C2C  
                           l3987 2BF6                             l3979 2BE6  
                           l4699 4C48                             l4971 0BF6  
                           l4963 0BBC                             l4955 0B8A  
                           l4947 0B5A                             l4939 0AEC  
                           l4891 08D8                             l4875 0820  
                           l4867 07BC                             l4883 086A  
                           l4859 0788                             l5579 55D8  
                           l5931 185A                             l5923 1820  
                           l5915 17D2                             l5907 178E  
                           l5851 164A                             l5843 160C  
                           l5835 15EE                             l5827 15BC  
                           l5819 1590                             l5771 1498  
                           l5763 1474                             l5755 1448  
                           l5747 141E                             l5739 13DC  
                           l5693 46DC                             l5685 469C  
                           l5677 465C                             l5669 461C  
                           l5597 5BBC                             l5589 5BB0  
                           l4797 3B10                             l4789 3AEA  
                           l3997 2C48                             l3989 2BFA  
                           l4981 0D0A                             l4973 0C06  
                           l4965 0BD4                             l4957 0B98  
                           l4949 0B5E                             l4893 08F4  
                           l4885 0890                             l4877 0838  
                           l5941 18C6                             l5933 1880  
                           l5925 183A                             l5917 17FA  
                           l5909 17B4                             l5861 1692  
                           l5853 165E                             l5845 1618  
                           l5837 15F2                             l5829 15C2  
                           l5781 14C8                             l5773 14A2  
                           l5765 1486                             l5757 145C  
                           l5749 1430                             l5695 46EA  
                           l5687 46AA                             l5679 466A  
                           l5599 562E                             l4799 3B16  
                           l3999 2C58                             l4991 0DAA  
                           l4975 0C1A                             l4983 0D10  
                           l4967 0BE6                             l4959 0B9C  
                           l4879 0842                             l5943 18D8  
                           l5951 191C                             l5935 188C  
                           l5927 1844                             l5919 180C  
                           l5871 16C6                             l5863 16A4  
                           l5855 167A                             l5847 1622  
                           l5839 15F8                             l5791 14F6  
                           l5783 14DA                             l5775 14AA  
                           l5767 148A                             l5759 145E  
                           l5697 46FC                             l5689 46BC  
                           l4993 0DDC                             l4985 0D2E  
                           l4977 0C7E                             l4969 0BEE  
                           l4889 08C6                             l5953 1930  
                           l5945 18EA                             l5937 189C  
                           l5929 1850                             l5881 16F4  
                           l5873 16D8                             l5865 16A8  
                           l5857 167C                             l5849 163E  
                           l5793 14FE                             l5785 14DE  
                           l5777 14B2                             l5769 148E  
                           l5699 470A                             l4995 0DEC  
                           l4987 0D62                             l4979 0CD6  
                           l5971 1980                             l5963 1966  
                           l5955 193A                             l5947 18FC  
                           l5939 189E                             l5883 1700  
                           l5875 16DC                             l5867 16AC  
                           l5859 1682                             l5795 1506  
                           l5787 14E2                             l5779 14B8  
                           l4997 0DFC                             l4989 0D94  
                           l5981 19BC                             l5973 1990  
                           l5965 196A                             l5957 194A  
                           l5949 1904                             l5885 170A  
                           l5877 16E0                             l5869 16B6  
                           l5789 14EC                             l5797 150C  
                           l4999 0E30                             l5991 1A3A  
                           l5983 19C6                             l5967 197A  
                           l5975 1994                             l5959 1958  
                           l5895 174A                             l5887 1726  
                           l5879 16EA                             l5799 1516  
                           l5993 1A3E                             l5985 19EC  
                           l5977 19A6                             l5969 197C  
                           l5897 175C                             l5889 1732  
                           l5995 1A72                             l5987 19F8  
                           l5979 19B0                             l5899 1766  
                           l5997 1A82                             l5989 1A08  
                           l5999 1A92                             STR_1 0635  
                           STR_2 069A                             STR_3 0668  
                           STR_4 0601                             STR_5 0679  
                           STR_6 0601                             STR_7 0624  
                           STR_8 0601                             STR_9 0646  
                           u4000 2B64                             u4001 2B60  
                           u4010 2B74                             u4011 2B70  
                           u4100 2CBA                             u4020 2BB0  
                           u4101 2CB6                             u4021 2BAC  
                           u4110 2CCA                             u4030 2BBE  
                           u4111 2CC6                             u4031 2BBA  
                           u5000 5110                             u4200 2E28  
                           u4120 2CFC                             u4040 2C2C  
                           u5001 510C                             u4201 2E24  
                           u4121 2CF8                             u4041 2C28  
                           u5010 512A                             u4210 2E44  
                           u4130 2D0A                             u4050 2C44  
                           u5011 5126                             u4211 2E40  
                           u4131 2D06                             u4051 2C3E  
                           u5020 5148                             u5100 4B48  
                           u4300 2F1C                             u4220 2E54  
                           u4140 2D28                             u4060 2C46  
                           u5021 5144                             u5101 4B44  
                           u4301 2F18                             u4221 2E50  
                           u4141 2D24                             u5030 515E  
                           u5110 4B68                             u4310 2F3C  
                           u4230 2E66                             u4150 2D60  
                           u4070 2C6E                             u5031 515A  
                           u5111 4B64                             u4311 2F38  
                           u4231 2E62                             u4151 2D5C  
                           u4071 2C6A                             u5040 5182  
                           u5120 4BB8                             u4320 2F4E  
                           u4240 2E7C                             u4160 2DA6  
                           u4080 2C8C                             u5200 4A9C  
                           u6000 0EF8                             u4401 4492  
                           u5041 517E                             u5121 4BB4  
                           u4321 2F4A                             u4241 2E78  
                           u4161 2DA2                             u4081 2C88  
                           u5201 4A98                             u6001 0EF4  
                           u4410 44B6                             u5210 4F6A  
                           u5050 51C2                             u5130 5A74  
                           u4330 2F6A                             u4250 2E92  
                           u4170 2DDC                             u4090 2CAC  
                           u6010 0F0C                             u4411 44B2  
                           u5211 4F66                             u5051 51BE  
                           u5131 5A70                             u4331 2F66  
                           u4251 2E8E                             u4171 2DD8  
                           u4091 2CA8                             u6011 0F08  
                           u4420 44E0                             u4500 4852  
                           u4340 5928                             u5220 4F8C  
                           u5060 5200                             u4260 2EA6  
                           u4180 2DEC                             u5140 49CE  
                           u6100 10BE                             u6020 0F1E  
                           u4421 44DC                             u4501 484E  
                           u4341 5924                             u5221 4F88  
                           u5061 51FC                             u4261 2EA2  
                           u4181 2DE8                             u5141 49CA  
                           u6101 10BA                             u6021 0F1A  
                           u4430 4520                             u4350 5B2C  
                           u5230 4FE2                             u4510 33C2  
                           u5070 5234                             u4270 2EC0  
                           u4190 2E18                             u5150 4A02  
                           u5310 4CAC                             u6110 10F8  
                           u6030 0F2C                             u4431 451C  
                           u4351 5B28                             u5231 4FDE  
                           u4511 33BE                             u5071 5230  
                           u4271 2EBC                             u4191 2E14  
                           u5311 4CA6                             u6111 10F4  
                           u6031 0F28                             u7000 469C  
                           u6200 4302                             u4440 456A  
                           u5240 4FF2                             u4600 3562  
                           u4520 33D4                             u5080 4AEC  
                           u4280 2EFA                             u5160 4A30  
                           u5320 4CAE                             u5400 3DA6  
                           u4360 5A56                             u6120 1126  
                           u6040 0F48                             u7001 4698  
                           u6201 42FE                             u4441 4566  
                           u5241 4FEE                             u4601 355E  
                           u4521 33D0                             u5081 4AE8  
                           u4281 2EF6                             u5161 4A2C  
                           u5305 4C84                             u5401 3DA2  
                           u4361 5A50                             u6121 1122  
                           u6041 0F44                             u7010 46AA  
                           u6210 431E                             u4450 4742  
                           u5250 5986                             u4610 358C  
                           u4530 33E4                             u5090 4B2A  
                           u4290 2F0C                             u5170 4A44  
                           u5330 573A                             u4370 5A58  
                           u6130 11AA                             u6050 0F56  
                           u7011 46A6                             u6211 431A  
                           u4451 473E                             u5251 5982  
                           u4611 3588                             u4531 33E0  
                           u5091 4B26                             u4291 2F08  
                           u5171 4A40                             u5155 49F8  
                           u6131 11A6                             u6051 0F52  
                           u7020 46BC                             u5500 5866  
                           u6220 43D4                             u4380 4436  
                           u4460 4774                             u4700 3688  
                           u4620 35B0                             u4540 3428  
                           u5180 4A6C                             u5260 4C02  
                           u5420 3E14                             u5340 574C  
                           u6140 11C4                             u6060 0FAE  
                           u6300 4E6C                             u7021 46B8  
                           u5501 5862                             u6221 43CE  
                           u4381 4432                             u4461 4770  
                           u4701 3684                             u4621 35AC  
                           u4541 3424                             u5181 4A68  
                           u5421 3E10                             u5341 5748  
                           u6141 11C0                             u6061 0FAA  
                           u6301 4E68                             u7101 12A4  
                           u7030 46CA                             u5510 5894  
                           u6230 43D6                             u4390 4468  
                           u4470 47B2                             u3910 4EA2  
                           u4710 36D0                             u4630 35C6  
                           u4550 343A                             u5190 4A8C  
                           u5270 4C20                             u5430 3E38  
                           u5350 56C2                             u6150 11DC  
                           u6070 1080                             u6310 5950  
                           u7110 1314                             u7031 46C6  
                           u5511 5890                             u4391 4464  
                           u4471 47AE                             u3911 4E9E  
                           u4711 36CC                             u4631 35C2  
                           u4551 3436                             u5191 4A88  
                           u5271 4C1C                             u5415 3DBA  
                           u5351 56BC                             u6151 11D8  
                           u6071 107C                             u6311 594C  
                           u7111 1310                             u6320 575E  
                           u7040 46DC                             u6240 43EC  
                           u4480 47DC                             u3920 4EB4  
                           u5600 3C40                             u5520 3A58  
                           u4720 3700                             u4640 35E4  
                           u4560 344A                             u4800 3052  
                           u5280 4C48                             u5440 3E54  
                           u5416 3DC4                             u5360 56C4  
                           u6160 123A                             u6080 109C  
                           u6400 52AE                             u7200 13DC  
                           u7120 133A                             u6321 575A  
                           u7041 46D8                             u6241 43E8  
                           u4481 47D8                             u3921 4EB0  
                           u5601 3C3C                             u5521 3A52  
                           u4721 36FC                             u4641 35E0  
                           u4561 3446                             u4801 304E  
                           u5281 4C44                             u5265 4BF8  
                           u5441 3E50                             u5417 3DD4  
                           u5337 5730                             u6161 1234  
                           u6081 1098                             u6401 52AA  
                           u7201 13D8                             u7121 1336  
                           u6330 5774                             u7050 46EA  
                           u6250 43FE                             u4490 480A  
                           u3930 4EDC                             u5610 3C5A  
                           u5530 3A5A                             u4730 372E  
                           u4650 3604                             u4570 348A  
                           u4810 3062                             u5290 4C72  
                           u5450 3EA8                             u5370 56DA  
                           u6170 123C                             u6090 10AE  
                           u6410 40F2                             u7210 13EC  
                           u7130 134C                             u6331 5770  
                           u7051 46E6                             u6251 43FA  
                           u4491 4806                             u3931 4ED8  
                           u5611 3C56                             u4731 372A  
                           u4651 3600                             u4571 3486  
                           u4811 305E                             u5291 4C6E  
                           u5435 3E2E                             u5371 56D6  
                           u6091 10AA                             u6411 40EE  
                           u7211 13E8                             u7131 1348  
                           u6340 578A                             u7060 46FC  
                           u3940 4F12                             u5620 3C74  
                           u5540 3A70                             u4660 3616  
                           u4580 34CA                             u4900 3322  
                           u4820 31DC                             u4740 2F98  
                           u5460 3EC4                             u5380 3D54  
                           u6180 1252                             u5700 0774  
                           u6260 4DE4                             u6500 4280  
                           u6420 4100                             u7300 1568  
                           u7220 141E                             u7140 136E  
                           u6341 5786                             u7061 46F8  
                           u3941 4F0E                             u5621 3C70  
                           u5541 3A6C                             u4661 3612  
                           u4581 34C6                             u4901 331E  
                           u4741 2F94                             u5461 3EC0  
                           u6181 124E                             u5701 0770  
                           u6261 4DE0                             u6501 427C  
                           u6421 40FC                             u7301 1564  
                           u7221 141A                             u7141 136A  
                           u6350 57A0                             u7070 470A  
                           u6190 42CC                             u5630 3C84  
                           u5550 3AA0                             u4670 3644  
                           u4590 3540                             u4910 3350  
                           u4830 3236                             u4750 2FAA  
                           u3950 2AD8                             u5470 3F00  
                           u5390 3D84                             u5710 07BC  
                           u6270 4E16                             u6510 24AC  
                           u6430 415C                             u7310 158E  
                           u7230 1430                             u7150 1380  
                           u6351 579C                             u7071 4706  
                           u6191 42C8                             u5631 3C80  
                           u5551 3A9C                             u4671 3640  
                           u4591 353C                             u4911 334C  
                           u4831 3232                             u4751 2FA6  
                           u3951 2AD4                             u5471 3EFC  
                           u5455 3E9E                             u5391 3D80  
                           u5711 07B8                             u6271 4E12  
                           u6511 24A8                             u6431 4158  
                           u7311 158A                             u7231 142C  
                           u7151 137C                             u7080 471C  
                           u5480 5AC6                             u5640 3C96  
                           u5560 3ABC                             u4680 365A  
                           u4920 338A                             u4840 3256  
                           u4760 2FBA                             u3960 2AEA  
                           u5800 09F0                             u5720 07EC  
                           u6280 4E32                             u6600 26DA  
                           u6520 24F4                             u6440 41B2  
                           u6360 5576                             u7400 16C6  
                           u7320 15A6                             u7240 1442  
                           u7160 1392                             u7081 4718  
                           u5481 5AC0                             u5641 3C92  
                           u5561 3AB8                             u4681 3656  
                           u4921 3386                             u4841 3252  
                           u4825 31D2                             u4761 2FB6  
                           u3961 2AE6                             u5385 3D4A  
                           u5801 09EC                             u5721 07E6  
                           u6281 4E2E                             u6521 24F0  
                           u6441 41AE                             u6361 5572  
                           u7401 16C2                             u7321 15A2  
                           u7241 143E                             u7161 138E  
                           u7090 472A                             u5490 5AC8  
                           u5650 3CA6                             u5570 3AEA  
                           u4930 5032                             u4690 366E  
                           u4850 3268                             u4770 2FFA  
                           u3970 2AFA                             u5810 0A62  
                           u5730 07EE                             u6290 4E44  
                           u6610 26F0                             u6530 2538  
                           u6450 41FC                             u6370 55B0  
                           u7410 16D8                             u7330 15B8  
                           u7250 145C                             u7170 13A2  
                           u7091 4726                             u5651 3CA2  
                           u5571 3AE6                             u4931 502E  
                           u4691 366A                             u4851 3264  
                           u4771 2FF6                             u3971 2AF6  
                           u5811 0A5E                             u6291 4E40  
                           u6611 26EC                             u6531 2534  
                           u6451 41F8                             u6371 55AC  
                           u7411 16D4                             u7331 15B4  
                           u7251 1458                             u7171 139E  
                           u5660 3CBE                             u5580 3AF8  
                           u4940 504C                             u4860 3296  
                           u4780 300C                             u3980 2B3C  
                           u5900 0B8A                             u5820 0A88  
                           u5740 0804                             u6700 299E  
                           u6620 2722                             u6540 25B6  
                           u6460 421A                             u6380 5264  
                           u7500 1930                             u7420 1746  
                           u7340 15DC                             u7260 1474  
                           u7180 13B8                             u5661 3CBA  
                           u5581 3AF4                             u4941 5048  
                           u4861 3292                             u4781 3008  
                           u3981 2B38                             u5901 0B86  
                           u5821 0A84                             u5741 0800  
                           u6701 299A                             u6621 271E  
                           u6541 25B0                             u6461 4216  
                           u6381 5260                             u7501 192C  
                           u7421 1742                             u7341 15D8  
                           u7261 1470                             u7181 13B4  
                           u5590 3C22                             u4950 5072  
                           u4870 32AC                             u4790 301C  
                           u3990 2B52                             u5910 0B98  
                           u5830 0A9C                             u5750 0890  
                           u5670 0700                             u6710 2A3A  
                           u6630 2764                             u6550 25B8  
                           u6470 422A                             u6390 5286  
                           u7510 194A                             u7430 17D0  
                           u7350 15EE                             u7270 1486  
                           u7190 13CA                             u5591 3C1E  
                           u4951 506E                             u4871 32A8  
                           u4791 3018                             u3991 2B4E  
                           u5911 0B94                             u5831 0A98  
                           u5751 088C                             u5671 06FC  
                           u6711 2A36                             u6631 2760  
                           u6471 4226                             u6391 5282  
                           u7511 1946                             u7431 17CC  
                           u7351 15EA                             u7271 1482  
                           u7191 13C6                             u6800 563E  
                           u4960 5090                             u4880 32C0  
                           u5920 0BAE                             u5840 0ABE  
                           u5760 08C0                             u5680 0750  
                           u6640 27BA                             u6560 25CE  
                           u6480 4238                             u6720 5488  
                           u7600 1ADE                             u7520 1958  
                           u7440 180C                             u7360 165E  
                           u7280 14C8                             u6801 563A  
                           u4961 508C                             u4881 32BC  
                           u5921 0BAA                             u5841 0ABA  
                           u5761 08BA                             u5681 074C  
                           u6641 27B6                             u6561 25CA  
                           u6481 4234                             u6721 5484  
                           u7601 1ADA                             u7521 1954  
                           u7441 1808                             u7361 165A  
                           u7281 14C4                             u6810 5672  
                           u4970 50AC                             u4890 32DA  
                           u5930 0BBC                             u5850 0AE8  
                           u5770 08C2                             u5690 0760  
                           u6650 27DE                             u6570 25F2  
                           u6490 4272                             u6730 540E  
                           u7610 1B40                             u7530 197A  
                           u7450 189C                             u7370 167A  
                           u7290 14DA                             u6811 566E  
                           u4971 50A8                             u4891 32D6  
                           u5931 0BB8                             u5851 0AE4  
                           u5691 075C                             u6651 27DA  
                           u6571 25EE                             u6491 426E  
                           u6731 540A                             u7611 1B3C  
                           u7531 1976                             u7451 1898  
                           u7371 1676                             u7291 14D6  
                           u6900 45FC                             u6820 53B0  
                           u4980 50D2                             u5940 0BE6  
                           u5860 0B00                             u5780 08D8  
                           u6660 2870                             u6580 262E  
                           u6740 406A                             u7620 1B72  
                           u7540 1990                             u7460 18C6  
                           u7380 1692                             u7700 4D08  
                           u6901 45F8                             u4981 50CE  
                           u5941 0BE2                             u5861 0AFC  
                           u5781 08D4                             u6661 286C  
                           u6581 262A                             u6741 4066  
                           u7621 1B6E                             u7541 198C  
                           u7461 18C2                             u7381 168E  
                           u7701 4D04                             u6910 460A  
                           u6830 53E4                             u4990 50F6  
                           u5950 0D2E                             u5870 0B1C  
                           u5790 095C                             u6670 291E  
                           u6590 26D8                             u6750 408E  
                           u7630 1BBA                             u7550 19A6  
                           u7470 18D8                             u7390 16A4  
                           u7710 4D1A                             u6911 4606  
                           u4991 50F2                             u5951 0D2A  
                           u5871 0B18                             u5791 0958  
                           u6671 291A                             u6591 26D2  
                           u6751 408A                             u7631 1BB6  
                           u7551 19A2                             u7471 18D4  
                           u7391 16A0                             u7711 4D16  
                           u6920 461C                             u6840 53F4  
                           u5960 0D94                             u5880 0B52  
                           u6680 2986                             u6760 40B2  
                           u7640 1BCA                             u7560 1A08  
                           u7480 18EA                             u7720 4D2C  
                           u6921 4618                             u6841 53F0  
                           u5961 0D90                             u5881 0B4E  
                           u6681 2980                             u6761 40AE  
                           u7641 1BC6                             u7561 1A04  
                           u7481 18E6                             u7721 4D28  
                           u6930 462A                             u5970 0DDC  
                           u5890 0B78                             u6690 2988  
                           u6770 40D6                             u7650 1C16  
                           u7570 1A3A                             u7490 18FC  
                           u6850 5C82                             u7730 4D3E  
                           u6931 4626                             u6827 53A6  
                           u5971 0DD8                             u5891 0B74  
                           u6771 40D2                             u7651 1C12  
                           u7571 1A36                             u7491 18F8  
                           u6851 5C7E                             u7731 4D3A  
                           u7660 5CB8                             u6940 463C  
                           u6860 45BC                             u5980 0DEC  
                           u6780 5622                             u7580 1A82  
                           u7740 4D4E                             u7661 5CB4  
                           u6941 4638                             u6861 45B8  
                           u6837 53DA                             u5981 0DE8  
                           u6781 561E                             u7581 1A7E  
                           u7741 4D4A                             u6950 464A  
                           u6870 45CA                             u6790 5BCC  
                           u5990 0E54                             u7590 1A92  
                           u7670 5502                             u7750 4D78  
                           u6951 4646                             u6871 45C6  
                           u6791 5BC8                             u5991 0E50  
                           u7591 1A8E                             u7671 54FE  
                           u7751 4D74                             u6960 465C  
                           u6880 45DC                             u7680 5526  
                           u7760 4DA6                             u6961 4658  
                           u6881 45D8                             u7681 5522  
                           u7817 4998                             u7761 4DA2  
                           u6970 466A                             u6890 45EA  
                           u7690 5546                             u6971 4666  
                           u6891 45E6                             u7827 5B56  
                           u7691 5542                             u6980 467C  
                           u6981 4678                             u7837 5B66  
                           u6990 468A                             u7847 530C  
                           u6991 4686                             u7857 5326  
                           u7867 533C                             u7877 5C98  
                           _TMR2 000FBC                             abs@a 0013  
              ?_Lcd_Write_String 0005                             _dbuf 0200  
                           _atoi 4294                             _main 4CC0  
                           _dtoa 3A28                             _prec 01B6  
                           _nout 01B2                             pad@i 0018  
                           pad@p 0015                             fsr1h 000FE2  
                           fsr2h 000FDA                             indf1 000FE7  
                           indf2 000FDF                             fsr1l 000FE1  
                           pad@w 001A                             fsr2l 000FD9  
                           btemp 005F                    ___fpclassifyf 4BC2  
                           prodh 000FF4                             prodl 000FF3  
                           start 0068               ??_Lcd_Write_String 0007  
                ___fldiv@new_exp 0046                  __end_of_Lcd_Cmd 5CA4  
                   _tolower$2667 000D                     ___param_bank 000000  
                          ??_abs 0015                            ??_pad 0017  
                   ?_menuControl 0001                    ___fltol@sign1 0056  
                __end_of___aodiv 45AC                            ?_atoi 0008  
                __end_of___fladd 2F7E                            ?_main 0001  
                          ?_dtoa 001C                  __end_of___aomod 4894  
                __end_of_adcInit 59EA                  __end_of___fldiv 3742  
                __end_of___awdiv 50E4                  __end_of___flneg 5A96  
                          _EEADR 000FA9                            STR_10 068A  
                          STR_11 0657                            STR_12 068A  
                          STR_21 06C8                            STR_13 0613  
                          STR_22 06D0                            STR_14 06A9  
                          STR_15 0613                            STR_16 06B7  
                          STR_25 06D4                            STR_17 06C4  
                          STR_18 06CC                            STR_27 06D4  
                __end_of___awmod 5194                  __end_of___flmul 33A8  
                __end_of___flsub 58E6                  __end_of___fltol 4ABE  
                __end_of___lldiv 52E2                            _T0CON 000FD5  
                ___awdiv@divisor 0003                            i2l482 0064  
                ___awdiv@counter 0005                     vfpfcnvrt@fmt 00A9  
                          _TMR0H 000FD7                            _TMR0L 000FD6  
        __size_of_Lcd_Set_Cursor 0066              ___lmul@multiplicand 0005  
                          _fabsf 5B70                            _flags 01B8  
                          _fputc 4E90                            _fputs 58E6  
                __end_of_isdigit 5ACE                      ?_PWM1_setDC 0058  
                   _adc_raw_data 0183                      ?_PWM2_setDC 0058  
                          atoi@n 0015                            pad@fp 0011  
                          atoi@s 0008                            _width 01B4  
                          _putch 5CDA                            dtoa@d 001E  
                          dtoa@i 003E                            dtoa@n 0036  
                          dtoa@p 0030                            dtoa@s 0034  
                          dtoa@w 0032                  __end_of_isspace 58A0  
                __end_of_isupper 5A5E                 __end_of_PWM_Init 5C22  
                          tablat 000FF5                            ttemp5 0060  
                          ttemp6 0063                            ttemp7 0067  
                          status 000FD8                            wtemp8 0060  
                __end_of_sprintf 584E                   ?___fpclassifyf 0001  
                __end_of_tolower 56F2                  __end_of_strncmp 4E90  
                  ?_readAdcValue 0001                 __end_of_Lcd_Port 57AA  
                __initialization 57AA                      _system_init 4894  
                   __end_of_atoi 4424                     __end_of_main 4DBA  
                   __end_of_dtoa 3D0C                           ??_atoi 000A  
                         ??_main 005F                           ??_dtoa 0026  
             __size_of_Lcd_Clear 000E                    __activetblptr 000002  
__size_of_calculatedAverageValue 02E6                           ?_fabsf 001C  
                         _ADCON0 000FC2                           _ADCON1 000FC1  
                         ?_fputc 0001                           ?_fputs 000A  
                         _ADRESH 000FC4                           _ADRESL 000FC3  
                         _EEDATA 000FA8                           _CCPR1L 000FBE  
                         _CCPR2L 000F67                           _EECON2 000FA7  
               ___awdiv@dividend 0001                           ?_putch 0001  
                         i2l6201 0028                           i2l6211 004C  
                         i2l6203 0030                           i2l6213 005C  
                         i2l6205 0034                           i2l6215 0060  
                         i2l6207 0042                           i2l6209 0048  
                         i2l6195 000A                           i2l6197 0018  
                         i2l6199 0026                        ??_Lcd_Cmd 0002  
                         _TIMER0 0008                   ??_readAdcValue 0003  
        __size_of_Lcd_Write_Char 0036                 __end_of___xxtofl 4294  
              _scanAdcConversion 1C82               _timer_counter_flag 01BE  
             ?_scanAdcConversion 0001             __size_of_eepromWrite 002E  
                   vfprintf@cfmt 00CD                 __end_of_lcd_init 5378  
                         ___flge 4ABE                           ___fleq 5194  
                         ___lmul 5558                        ??___aodiv 0011  
                      ??___fladd 003D                        ??___aomod 0011  
                         ___wmul 5C22                        ??_adcInit 0001  
                      ??___fldiv 003D                        ??___awdiv 0005  
                      ??___flneg 0005                        ??___awmod 0005  
                      ??___flmul 0024                        ??___flsub 004D  
                      ??___fltol 0052                        ??___lldiv 0009  
                         _efgtoa 06D8                           _floorf 3D0C  
            __size_of_PWM1_setDC 007A                           fabsf@u 0020  
                         fabsf@x 001C                 __end_of_mcu_init 5CBA  
            __size_of_PWM2_setDC 007A              ??_scanAdcConversion 0058  
                         clear_0 57D0                           clear_1 57DC  
                         clear_2 57E8                  eepromWrite@data 0001  
               ___awdiv@quotient 0007                  ___awmod@divisor 0003  
                ___awmod@counter 0005                           pad@buf 0013  
                         dtoa@fp 001C                           _strcpy 56F2  
                         _strlen 5B04                           fputc@c 0001  
           readAdcValue@adcValue 0006                           fputs@c 000E  
                         fputs@i 000F                           fputs@s 000A  
                      ??_isdigit 0003                  ___fpclassifyf@e 0009  
                ___fpclassifyf@u 000B                  ___fpclassifyf@x 0001  
                   __mediumconst 0000                        ??_isspace 0003  
                         tblptrh 000FF7                        ??_isupper 0003  
                         tblptrl 000FF6                           tblptru 000FF8  
                         putch@c 0001                 __end_of_vfprintf 562C  
                      ??_sprintf 005F                        ??_tolower 0009  
                      ??_strncmp 0007       __end_of_buttonControlFlags 4730  
                Lcd_Set_Cursor@a 0005                  Lcd_Set_Cursor@b 0004  
                Lcd_Set_Cursor@y 0007                  Lcd_Set_Cursor@z 0006  
                     ___flge@ff1 0035                       ___flge@ff2 0039  
                ??___fpclassifyf 0005                     ___xxtofl@arg 0018  
                   ___xxtofl@exp 0017                     ___xxtofl@val 000E  
                     ___fleq@ff1 0001                       ___fleq@ff2 0005  
      __end_of_scanAdcConversion 2488                       __accesstop 0060  
        __end_of__initialization 57EE                       ___flneg@f1 0001  
         _calculatedAverageValue 3742                __end_of_Lcd_Clear 5CDA  
                  ___rparam_used 000001                       ___fltol@f1 004E  
                 __pcstackCOMRAM 0001                     __pidataBANK1 5C48  
                  __end_of_fabsf 5BA4                    __end_of_fputc 4F5A  
                  __end_of_fputs 592A                    __end_of_putch 5CDC  
                      ?_PWM_Init 0001                   _Lcd_Set_Cursor 562C  
   _KP@fs_speed_controller$F1181 01D3     _KP@fs_speed_controller$F1782 01C3  
   _KP@fs_speed_controller$F1598 01CB                eepromRead@address 0001  
           __size_of_menuControl 006E                          ??_fabsf 0020  
                      ?_Lcd_Port 0001                          ??_fputc 0005  
                        ??_fputs 000E                          ??_putch 0001  
                     __pbssBANK0 00F3                       __pbssBANK1 0100  
                     __pbssBANK2 0200              PWM1_setDC@dutycycle 0058  
                        ?_TIMER0 0001                          ?___flge 0035  
                        ?___fleq 0001                          ?___lmul 0001  
                        ?___wmul 0001                          ?_efgtoa 0058  
                        _CCP1CON 000FBD                          _CCP2CON 000F66  
                        ?_floorf 004E                   ___lmul@product 0009  
      __size_of_Lcd_Write_String 007E           __end_of_Lcd_Set_Cursor 5692  
                     ??_PWM_Init 0001                          ?_strcpy 0001  
                        ?_strlen 0001             __end_of_readAdcValue 596C  
                     _eepromRead 5C68                        ?___xxtofl 000E  
             __size_of_vfpfcnvrt 0636                       ??_Lcd_Port 0001  
                   ??_PWM1_setDC 005A                     ??_PWM2_setDC 005A  
                      ?_lcd_init 0001          __size_of_menuInitialize 0028  
                  _menu_selected 01BB               __size_of_stopMotor 003C  
     __size_of_scanAdcConversion 0806                   _Lcd_Write_Char 5B3A  
                        _Lcd_Cmd 5C86                        ?_mcu_init 0001  
                __size_of_TIMER0 0060                stateMachine@F6401 0163  
                     _controller 0150                          __Hparam 0000  
                        __Lparam 0000              PWM2_setDC@dutycycle 0058  
                   ?_system_init 0001                  __size_of___flge 0104  
                __size_of___fleq 00AA                          ___aodiv 4424  
                        ___fladd 2ABE                          ___aomod 4730  
                        _adcInit 59AC                          ___fldiv 33A8  
                        ___awdiv 5020                          ___flneg 5A5E  
                __size_of___lmul 006A                          ___awmod 50E4  
                        ___flmul 2F7E                          ___flsub 58A0  
                        ___fltol 49B8                          ___lldiv 523E  
                __size_of___wmul 0026                        ?_vfprintf 00C7  
                   __psmallconst 0600                  __size_of_efgtoa 0BC6  
                __size_of_floorf 0216                          __pcinit 57AA  
             __end_of_PWM1_setDC 54EA                          __ramtop 0600  
                ?_Lcd_Set_Cursor 0004               __end_of_PWM2_setDC 5470  
                        __ptext0 4CC0                          __ptext1 5CBA  
                        __ptext2 4894                          __ptext3 5C68  
                        __ptext4 5BD2                          __ptext5 54EA  
                        __ptext6 129E                          __ptext7 59EA  
                        __ptext8 5ACE                          __ptext9 3F22  
                     _menu_flags 00FD                       _menu_value 01AF  
                __size_of_strcpy 005C                  __size_of_strlen 0036  
                        _counter 01AB          stateMachine@textCursor2 00E3  
                      _T2CONbits 000FBA                     __size_of_abs 0040  
                   __size_of_pad 00C6                          _isdigit 5A96  
                     ??___xxtofl 0012                 ___awmod@dividend 0001  
                        _isspace 584E                          _isupper 5A26  
                        efgtoa@c 005E                          efgtoa@d 0087  
                        efgtoa@e 009F                          efgtoa@f 005A  
                        efgtoa@g 009B                          efgtoa@h 0091  
                        efgtoa@i 0099                          efgtoa@l 0095  
                        efgtoa@m 0083                          efgtoa@n 00A1  
                        efgtoa@p 008B                          efgtoa@t 007F  
                        efgtoa@u 00A3                          efgtoa@w 008E  
                  ?_speedControl 0058                          atoi@neg 000E  
                  ?_timer_0_init 0001                          _sprintf 57FC  
                        _tolower 5692                       ??_lcd_init 0004  
         __end_of_Lcd_Write_Char 5B70                          _strncmp 4DBA  
           end_of_initialization 57EE             speedControl@position 0058  
                        floorf@e 0064                          floorf@m 0060  
                        floorf@u 0066                          floorf@x 004E  
                        fputc@fp 0003                       ??_mcu_init 0001  
                  __Lmediumconst 0000                          fputs@fp 000C  
                ___lldiv@divisor 0005                  ___lldiv@counter 000D  
              __end_of_vfpfcnvrt 2ABE                       efgtoa@mode 0090  
                     efgtoa@sign 0089                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
                      Lcd_Port@a 0001                       ??_vfprintf 005F  
                        strcpy@d 0009                          strlen@a 0003  
                        strcpy@s 0007                          strlen@s 0001  
              __end_of_stopMotor 5A26                        _PORTBbits 000F81  
                      _PORTDbits 000F83                      ?_eepromRead 0001  
                    ___fladd@grs 0044                    ___xxtofl@sign 0016  
                      _TRISAbits 000F92                   ??_speedControl 005C  
                      _TRISBbits 000F93                        _TRISCbits 000F94  
                      _TRISDbits 000F95                        _TRISEbits 000F96  
                 ??_timer_0_init 0001                      ___fldiv@grs 0048  
                    ___fldiv@rem 0041                       _startMotor 5ACE  
                ?_Lcd_Write_Char 0001          ?_calculatedAverageValue 0001  
              Lcd_Write_String@a 0005                Lcd_Write_String@i 0009  
                    ___flmul@grs 0029                    ??_eepromWrite 0002  
       _button_bounce_controller 00FE                   __end_of_TIMER0 0068  
                  ?_stateMachine 0001               _buttonControlFlags 45AC  
                      _Lcd_Clear 5CCC                     _convert_data 0100  
          __size_of_readAdcValue 0042                   __end_of___flge 4BC2  
                 __end_of___fleq 523E                   __end_of___lmul 55C2  
                    vfpfcnvrt@ap 00AB                      vfpfcnvrt@ct 00C3  
                    vfpfcnvrt@fp 00A7                      vfpfcnvrt@ll 00B1  
                 __end_of___wmul 5C48                 _Lcd_Write_String 5378  
                 __end_of_efgtoa 129E              ?_buttonControlFlags 0001  
                 __end_of_floorf 3F22                       floorf@F524 019F  
                 __end_of_strcpy 574E                   __end_of_strlen 5B3A  
              __size_of_PWM_Init 0028              start_initialization 57AA  
                    __end_of_abs 59AC                      __end_of_pad 5020  
 __end_of_calculatedAverageValue 3A28                   _menuInitialize 5BD2  
                   _driver_limit 0193                __size_of_Lcd_Port 005C  
           ??_buttonControlFlags 0001                         ??_TIMER0 0001  
          __end_of___fpclassifyf 4CC0                     _readAdcValue 592A  
                 ??_stateMachine 00E1              __size_of_eepromRead 001E  
                    vfprintf@fmt 00C9                       ?_Lcd_Clear 0001  
                       ??___flge 003D                         ??___fleq 0009  
                       ??___lmul 0009              __end_of_eepromWrite 5BD2  
                       ??___wmul 0005                         ??_efgtoa 006A  
                    __pdataBANK1 01BF                         ??_floorf 0052  
           __size_of_system_init 0124                  Lcd_Write_Char@a 0004  
                Lcd_Write_Char@y 0003                    ??_menuControl 005F  
                       ??_strcpy 0005                         ??_strlen 0003  
                      ___fladd@a 0039                        ___fladd@b 0035  
                      ___fldiv@a 0039                        ___fldiv@b 0035  
                      ___flmul@a 0020                        ___flmul@b 001C  
                      ___flsub@a 0049                        ___flsub@b 0045  
         __end_of_menuInitialize 5BFA                    __pcstackBANK0 0060  
               ___aodiv@dividend 0001                __size_of___xxtofl 01B4  
                    ?_startMotor 0001                         ?_Lcd_Cmd 0001  
              __size_of_lcd_init 0096                        _atoi$2572 0010  
                      _atoi$2573 0014                        _atoi$2574 0012  
              __size_of_mcu_init 0016                      _efgtoa$2510 0077  
                    _efgtoa$2505 0073                      _efgtoa$2514 0079  
                    _efgtoa$2506 0075                      _efgtoa$2515 007B  
                    _efgtoa$2516 007D                        _dtoa$2481 002E  
  stateMachine@secretMenuCounter 01BA             __end_of_speedControl 40E0  
               ??_Lcd_Set_Cursor 0005                        __pintcode 0008  
           __end_of_timer_0_init 5CCC                         ?___aodiv 0001  
                       ?___fladd 0035                         ?___aomod 0001  
                       ?_adcInit 0001                         ?___fldiv 0035  
                       ?___awdiv 0001                 ___aodiv@quotient 0013  
                       ?___flneg 0001                         ?___awmod 0001  
                       ?___flmul 001C                         ?___flsub 0045  
                       ?___fltol 004E                         ?___lldiv 0001  
              __size_of_vfprintf 006A                        fabsf@F463 01A7  
                    __smallconst 0600                         ?_isdigit 0001  
                       ?_isspace 0001                  ?_menuInitialize 0001  
                       ?_isupper 0001              __end_of_menuControl 5558  
                 __size_of_fabsf 0034                         ?_sprintf 00CF  
                       ?_tolower 0007                   __size_of_fputc 00CA  
                 __size_of_fputs 0044                         ?_strncmp 0001  
                 __size_of_putch 0002               eepromWrite@address 0002  
                 ___wmul@product 0005                         _LATCbits 000F8B  
                       _LATDbits 000F8C                      _eepromWrite 5BA4  
                 PWM1_setDC@duty 005C                         Lcd_Cmd@a 0003  
                       _PIR2bits 000FA1                         i2u780_40 005C  
                       i2u780_41 0058                         i2u777_40 0018  
                       i2u777_41 0014                         i2u778_40 0026  
                       i2u778_41 0022                         i2u779_40 0042  
                       i2u779_41 003E                      ??_Lcd_Clear 0004  
                   _pauseIsClick 00FF              __size_of_startMotor 0036  
                      _vfpfcnvrt 2488                       _ADCON0bits 000FC2  
                     _ADCON2bits 000FC0                         _PWM_Init 5BFA  
              ___wmul@multiplier 0001                     ??_eepromRead 0001  
               ??_Lcd_Write_Char 0002                   PWM2_setDC@duty 005C  
                      _stopMotor 59EA             __end_of_stateMachine 1C82  
                   _isspace$2603 0007                         _Lcd_Port 574E  
                     vfpfcnvrt@c 00C6                       vfpfcnvrt@f 00BF  
              ___lmul@multiplier 0001                        copy_data0 57BE  
       __end_of_Lcd_Write_String 53F6                 __size_of_Lcd_Cmd 001E  
                     _EECON1bits 000FA6                         __Hrparam 0000  
                     vfprintf@ap 00CB                         __Lrparam 0000  
                     vfprintf@fp 00C7               __end_of_eepromRead 5C86  
               __size_of___aodiv 0188                 __size_of___fladd 04C0  
               __size_of___aomod 0164                 __size_of_adcInit 003E  
               __size_of___fldiv 039A                 __size_of___awdiv 00C4  
               __size_of___flneg 0038                 __size_of___awmod 00B0  
               __size_of___flmul 042A                 __size_of___flsub 0046  
               __size_of___fltol 0106                 __size_of___lldiv 00A4  
                     ?_vfpfcnvrt 00A7                      _menuControl 54EA  
                ___aodiv@divisor 0009                  ___aodiv@counter 0011  
                     _ANSELAbits 000F38                       _ANSELBbits 000F39  
                     _ANSELCbits 000F3A                       _ANSELDbits 000F3B  
                     _ANSELEbits 000F3C               ___fpclassifyf@F463 01A3  
                     sprintf@fmt 00D1                         ___xxtofl 40E0  
                     ?_stopMotor 0001                 __size_of_isdigit 0038  
               __size_of_isspace 0052                         __ptext10 1C82  
                       __ptext11 592A                         __ptext20 55C2  
                       __ptext12 3742                         __ptext21 2488  
                       __ptext13 5558                         __ptext30 58A0  
                       __ptext22 4DBA                         __ptext14 523E  
                       __ptext31 2ABE                         __ptext23 06D8  
                       __ptext15 53F6                         __ptext40 4F5A  
                       __ptext32 5A5E                         __ptext24 5692  
                       __ptext16 5470                         __ptext41 5B04  
                       __ptext33 2F7E                         __ptext25 5A26  
                       __ptext17 5B70                         __ptext50 5A96  
                       __ptext42 58E6                         __ptext34 4ABE  
                       __ptext26 56F2                         __ptext18 40E0  
                       __ptext51 5C22                         __ptext43 4E90  
                       __ptext35 5194                         __ptext27 3D0C  
                       __ptext19 57FC                         __ptext60 5BFA  
                       __ptext52 5BA4                         __ptext44 5CDA  
                       __ptext36 33A8                         __ptext28 4BC2  
                       __ptext61 5CCC                         __ptext53 5378  
                       __ptext45 596C                         __ptext37 50E4  
                       __ptext29 49B8                         __ptext62 5C86  
                       __ptext54 5B3A                         __ptext46 4730  
                       __ptext38 5020                         __ptext63 574E  
                       __ptext55 562C                         __ptext47 4424  
                       __ptext39 3A28                         __ptext56 45AC  
                       __ptext48 4294                         __ptext57 5CA4  
                       __ptext49 584E                         __ptext58 52E2  
                       __ptext59 59AC                 __size_of_isupper 0038  
                       _lcd_init 52E2                 __size_of_sprintf 0052  
               __size_of_tolower 0060                       strcpy@dest 0001  
               __size_of_strncmp 00D6                         _mcu_init 5CA4  
                  __size_of_atoi 0190                    __size_of_main 00FA  
                  __size_of_dtoa 02E4            __size_of_speedControl 01BE  
          __size_of_timer_0_init 0012                         efgtoa@fp 0058  
                       efgtoa@ne 0085                         efgtoa@pp 0081  
                       efgtoa@ou 006F                         int$flags 005F  
                       _vfprintf 55C2           readAdcValue@adcChannel 0005  
               ___aomod@dividend 0001                   _vfpfcnvrt$2530 00B9  
                 _vfpfcnvrt$2531 00BB                   _vfpfcnvrt$2536 00BD  
                    _OSCTUNEbits 000F9B                       _INTCONbits 000FF2  
   _KD@fs_speed_controller$F1182 01CF     _KD@fs_speed_controller$F1783 01BF  
   _KD@fs_speed_controller$F1599 01C7                         isdigit@c 0001  
                   _speedControl 3F22                     _timer_0_init 5CBA  
                   ??_startMotor 005E               Lcd_Write_Char@temp 0002  
                       intlevel2 0000                        sprintf@ap 00D9  
    __size_of_buttonControlFlags 0184                         isspace@c 0001  
               ___lldiv@dividend 0001                        strcpy@src 0003  
                       isupper@c 0001                        strncmp@_l 0001  
                      strncmp@_r 0003                       _OSCCONbits 000FD3  
                  ??_system_init 0002                      efgtoa@nmode 008D  
                   _procces_data 0130                  ___aomod@divisor 0009  
                    ??_vfpfcnvrt 00AD                  ___aomod@counter 0011  
             Lcd_Set_Cursor@temp 0008                 ??_menuInitialize 0001  
             __end_of_startMotor 5B04            __size_of_stateMachine 09E4  
                       sprintf@f 00DB                         tolower@c 0007  
                       sprintf@s 00CF           __size_of___fpclassifyf 00FE  
               ___lldiv@quotient 0009                      ??_stopMotor 005E  
                       strncmp@l 0008                         strncmp@n 0005  
                       strncmp@r 000A                      _timer_value 00F3  
                  ___fladd@signs 0041                       _PWM1_setDC 5470  
                     _PWM2_setDC 53F6                     ___aodiv@sign 0012  
                    _textCursor2 0173                     ___fladd@aexp 0042  
                   ___fladd@bexp 0043                     ?_eepromWrite 0001  
                   ___aomod@sign 0012                     _stateMachine 129E  
