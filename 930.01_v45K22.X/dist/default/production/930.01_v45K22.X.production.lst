

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat Aug 15 15:31:56 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    81                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    82                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    83                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    84                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    85  0000                     
    86                           ; Version 2.20
    87                           ; Generated 05/05/2020 GMT
    88                           ; 
    89                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    90                           ; All rights reserved.
    91                           ; 
    92                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    93                           ; 
    94                           ; Redistribution and use in source and binary forms, with or without modification, are
    95                           ; permitted provided that the following conditions are met:
    96                           ; 
    97                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    98                           ;        conditions and the following disclaimer.
    99                           ; 
   100                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   101                           ;        of conditions and the following disclaimer in the documentation and/or other
   102                           ;        materials provided with the distribution.
   103                           ; 
   104                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   105                           ;        software without specific prior written permission.
   106                           ; 
   107                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   108                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   109                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   110                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   111                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   112                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   113                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   114                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   115                           ; 
   116                           ; 
   117                           ; Code-generator required, PIC18F45K22 Definitions
   118                           ; 
   119                           ; SFR Addresses
   120  0000                     
   121                           	psect	eeprom_data
   122  F00000  1E 0A 04 00 00 00 00 00 	db	30,10,4,0,0,0,0,0	;# 
   123  0000                     
   124                           	psect	idataBANK1
   125  005C58                     __pidataBANK1:
   126                           	callstack 0
   127                           
   128                           ;initializer for _KD@fs_speed_controller$F1781
   129  005C58  0000               	dw	0
   130  005C5A  3F80               	dw	16256
   131                           
   132                           ;initializer for _KP@fs_speed_controller$F1780
   133  005C5C  CCCD               	dw	52429
   134  005C5E  3E4C               	dw	15948
   135                           
   136                           ;initializer for _KD@fs_speed_controller$F1597
   137  005C60  0000               	dw	0
   138  005C62  3F80               	dw	16256
   139                           
   140                           ;initializer for _KP@fs_speed_controller$F1596
   141  005C64  CCCD               	dw	52429
   142  005C66  3E4C               	dw	15948
   143                           
   144                           ;initializer for _KD@fs_speed_controller$F1180
   145  005C68  0000               	dw	0
   146  005C6A  3F80               	dw	16256
   147                           
   148                           ;initializer for _KP@fs_speed_controller$F1179
   149  005C6C  CCCD               	dw	52429
   150  005C6E  3E4C               	dw	15948
   151                           
   152                           ;initializer for _KD
   153  005C70  0000               	dw	0
   154  005C72  3F80               	dw	16256
   155                           
   156                           ;initializer for _KP
   157  005C74  CCCD               	dw	52429
   158  005C76  3E4C               	dw	15948
   159  0000                     _ANSELCbits	set	3898
   160  0000                     _ANSELBbits	set	3897
   161  0000                     _ANSELDbits	set	3899
   162  0000                     _ANSELEbits	set	3900
   163  0000                     _ANSELAbits	set	3896
   164  0000                     _T0CON	set	4053
   165  0000                     _TMR0L	set	4054
   166  0000                     _TMR0H	set	4055
   167  0000                     _INTCONbits	set	4082
   168  0000                     _CCPR2L	set	3943
   169  0000                     _CCPR1L	set	4030
   170  0000                     _PR2	set	4027
   171  0000                     _TMR2	set	4028
   172  0000                     _T2CONbits	set	4026
   173  0000                     _CCP2CON	set	3942
   174  0000                     _CCP1CON	set	4029
   175  0000                     _LATCbits	set	3979
   176  0000                     _LATDbits	set	3980
   177  0000                     _TRISCbits	set	3988
   178  0000                     _OSCTUNEbits	set	3995
   179  0000                     _OSCCONbits	set	4051
   180  0000                     _TRISBbits	set	3987
   181  0000                     _TRISDbits	set	3989
   182  0000                     _PORTDbits	set	3971
   183  0000                     _PORTBbits	set	3969
   184  0000                     _PIR2bits	set	4001
   185  0000                     _EECON2	set	4007
   186  0000                     _EEDATA	set	4008
   187  0000                     _EECON1bits	set	4006
   188  0000                     _EEADR	set	4009
   189  0000                     _ADCON2bits	set	4032
   190  0000                     _ADCON1	set	4033
   191  0000                     _ADCON0	set	4034
   192  0000                     _TRISEbits	set	3990
   193  0000                     _TRISAbits	set	3986
   194  0000                     _ADRESL	set	4035
   195  0000                     _ADRESH	set	4036
   196  0000                     _ADCON0bits	set	4034
   197                           
   198                           	psect	smallconst
   199  000600                     __psmallconst:
   200                           	callstack 0
   201  000600  00                 	db	0
   202  000601                     STR_4:
   203  000601  25                 	db	37
   204  000602  64                 	db	100	;'d'
   205  000603  20                 	db	32
   206  000604  20                 	db	32
   207  000605  20                 	db	32
   208  000606  20                 	db	32
   209  000607  20                 	db	32
   210  000608  20                 	db	32
   211  000609  20                 	db	32
   212  00060A  20                 	db	32
   213  00060B  20                 	db	32
   214  00060C  20                 	db	32
   215  00060D  20                 	db	32
   216  00060E  20                 	db	32
   217  00060F  20                 	db	32
   218  000610  20                 	db	32
   219  000611  20                 	db	32
   220  000612  00                 	db	0
   221  000613                     STR_13:
   222  000613  50                 	db	80	;'P'
   223  000614  49                 	db	73	;'I'
   224  000615  44                 	db	68	;'D'
   225  000616  20                 	db	32
   226  000617  50                 	db	80	;'P'
   227  000618  41                 	db	65	;'A'
   228  000619  52                 	db	82	;'R'
   229  00061A  41                 	db	65	;'A'
   230  00061B  4D                 	db	77	;'M'
   231  00061C  20                 	db	32
   232  00061D  20                 	db	32
   233  00061E  20                 	db	32
   234  00061F  20                 	db	32
   235  000620  20                 	db	32
   236  000621  20                 	db	32
   237  000622  20                 	db	32
   238  000623  00                 	db	0
   239  000624                     STR_7:
   240  000624  48                 	db	72	;'H'
   241  000625  49                 	db	73	;'I'
   242  000626  5A                 	db	90	;'Z'
   243  000627  20                 	db	32
   244  000628  4C                 	db	76	;'L'
   245  000629  69                 	db	105	;'i'
   246  00062A  4D                 	db	77	;'M'
   247  00062B  69                 	db	105	;'i'
   248  00062C  54                 	db	84	;'T'
   249  00062D  69                 	db	105	;'i'
   250  00062E  20                 	db	32
   251  00062F  20                 	db	32
   252  000630  20                 	db	32
   253  000631  20                 	db	32
   254  000632  20                 	db	32
   255  000633  20                 	db	32
   256  000634  00                 	db	0
   257  000635                     STR_1:
   258  000635  4B                 	db	75	;'K'
   259  000636  41                 	db	65	;'A'
   260  000637  4C                 	db	76	;'L'
   261  000638  41                 	db	65	;'A'
   262  000639  4E                 	db	78	;'N'
   263  00063A  20                 	db	32
   264  00063B  5A                 	db	90	;'Z'
   265  00063C  41                 	db	65	;'A'
   266  00063D  4D                 	db	77	;'M'
   267  00063E  41                 	db	65	;'A'
   268  00063F  4E                 	db	78	;'N'
   269  000640  20                 	db	32
   270  000641  20                 	db	32
   271  000642  20                 	db	32
   272  000643  20                 	db	32
   273  000644  20                 	db	32
   274  000645  00                 	db	0
   275  000646                     STR_9:
   276  000646  5A                 	db	90	;'Z'
   277  000647  41                 	db	65	;'A'
   278  000648  4D                 	db	77	;'M'
   279  000649  41                 	db	65	;'A'
   280  00064A  4E                 	db	78	;'N'
   281  00064B  20                 	db	32
   282  00064C  44                 	db	68	;'D'
   283  00064D  4F                 	db	79	;'O'
   284  00064E  4C                 	db	76	;'L'
   285  00064F  44                 	db	68	;'D'
   286  000650  55                 	db	85	;'U'
   287  000651  20                 	db	32
   288  000652  20                 	db	32
   289  000653  20                 	db	32
   290  000654  20                 	db	32
   291  000655  20                 	db	32
   292  000656  00                 	db	0
   293  000657                     STR_11:
   294  000657  48                 	db	72	;'H'
   295  000658  41                 	db	65	;'A'
   296  000659  52                 	db	82	;'R'
   297  00065A  45                 	db	69	;'E'
   298  00065B  4B                 	db	75	;'K'
   299  00065C  45                 	db	69	;'E'
   300  00065D  54                 	db	84	;'T'
   301  00065E  20                 	db	32
   302  00065F  44                 	db	68	;'D'
   303  000660  55                 	db	85	;'U'
   304  000661  52                 	db	82	;'R'
   305  000662  44                 	db	68	;'D'
   306  000663  55                 	db	85	;'U'
   307  000664  20                 	db	32
   308  000665  20                 	db	32
   309  000666  20                 	db	32
   310  000667  00                 	db	0
   311  000668                     STR_3:
   312  000668  48                 	db	72	;'H'
   313  000669  41                 	db	65	;'A'
   314  00066A  52                 	db	82	;'R'
   315  00066B  45                 	db	69	;'E'
   316  00066C  4B                 	db	75	;'K'
   317  00066D  54                 	db	84	;'T'
   318  00066E  20                 	db	32
   319  00066F  5A                 	db	90	;'Z'
   320  000670  41                 	db	65	;'A'
   321  000671  4D                 	db	77	;'M'
   322  000672  41                 	db	65	;'A'
   323  000673  4E                 	db	78	;'N'
   324  000674  49                 	db	73	;'I'
   325  000675  20                 	db	32
   326  000676  64                 	db	100	;'d'
   327  000677  6B                 	db	107	;'k'
   328  000678  00                 	db	0
   329  000679                     STR_5:
   330  000679  44                 	db	68	;'D'
   331  00067A  55                 	db	85	;'U'
   332  00067B  52                 	db	82	;'R'
   333  00067C  4D                 	db	77	;'M'
   334  00067D  41                 	db	65	;'A'
   335  00067E  20                 	db	32
   336  00067F  5A                 	db	90	;'Z'
   337  000680  41                 	db	65	;'A'
   338  000681  4D                 	db	77	;'M'
   339  000682  41                 	db	65	;'A'
   340  000683  4E                 	db	78	;'N'
   341  000684  49                 	db	73	;'I'
   342  000685  20                 	db	32
   343  000686  20                 	db	32
   344  000687  6D                 	db	109	;'m'
   345  000688  73                 	db	115	;'s'
   346  000689  00                 	db	0
   347  00068A                     STR_10:
   348  00068A  20                 	db	32
   349  00068B  20                 	db	32
   350  00068C  20                 	db	32
   351  00068D  20                 	db	32
   352  00068E  20                 	db	32
   353  00068F  20                 	db	32
   354  000690  25                 	db	37
   355  000691  64                 	db	100	;'d'
   356  000692  3A                 	db	58	;':'
   357  000693  25                 	db	37
   358  000694  64                 	db	100	;'d'
   359  000695  20                 	db	32
   360  000696  20                 	db	32
   361  000697  20                 	db	32
   362  000698  20                 	db	32
   363  000699  00                 	db	0
   364  00069A                     STR_2:
   365  00069A  20                 	db	32
   366  00069B  20                 	db	32
   367  00069C  20                 	db	32
   368  00069D  20                 	db	32
   369  00069E  20                 	db	32
   370  00069F  20                 	db	32
   371  0006A0  25                 	db	37
   372  0006A1  64                 	db	100	;'d'
   373  0006A2  3A                 	db	58	;':'
   374  0006A3  25                 	db	37
   375  0006A4  64                 	db	100	;'d'
   376  0006A5  20                 	db	32
   377  0006A6  20                 	db	32
   378  0006A7  20                 	db	32
   379  0006A8  00                 	db	0
   380  0006A9                     STR_14:
   381  0006A9  4B                 	db	75	;'K'
   382  0006AA  70                 	db	112	;'p'
   383  0006AB  3A                 	db	58	;':'
   384  0006AC  25                 	db	37
   385  0006AD  35                 	db	53	;'5'
   386  0006AE  2E                 	db	46
   387  0006AF  31                 	db	49	;'1'
   388  0006B0  66                 	db	102	;'f'
   389  0006B1  20                 	db	32
   390  0006B2  20                 	db	32
   391  0006B3  20                 	db	32
   392  0006B4  20                 	db	32
   393  0006B5  20                 	db	32
   394  0006B6  00                 	db	0
   395  0006B7                     STR_16:
   396  0006B7  4B                 	db	75	;'K'
   397  0006B8  64                 	db	100	;'d'
   398  0006B9  3A                 	db	58	;':'
   399  0006BA  25                 	db	37
   400  0006BB  35                 	db	53	;'5'
   401  0006BC  2E                 	db	46
   402  0006BD  31                 	db	49	;'1'
   403  0006BE  66                 	db	102	;'f'
   404  0006BF  20                 	db	32
   405  0006C0  20                 	db	32
   406  0006C1  20                 	db	32
   407  0006C2  20                 	db	32
   408  0006C3  00                 	db	0
   409  0006C4                     STR_17:
   410  0006C4  49                 	db	73	;'I'
   411  0006C5  4E                 	db	78	;'N'
   412  0006C6  46                 	db	70	;'F'
   413  0006C7  00                 	db	0
   414  0006C8                     STR_21:
   415  0006C8  4E                 	db	78	;'N'
   416  0006C9  41                 	db	65	;'A'
   417  0006CA  4E                 	db	78	;'N'
   418  0006CB  00                 	db	0
   419  0006CC                     STR_18:
   420  0006CC  69                 	db	105	;'i'
   421  0006CD  6E                 	db	110	;'n'
   422  0006CE  66                 	db	102	;'f'
   423  0006CF  00                 	db	0
   424  0006D0                     STR_22:
   425  0006D0  6E                 	db	110	;'n'
   426  0006D1  61                 	db	97	;'a'
   427  0006D2  6E                 	db	110	;'n'
   428  0006D3  00                 	db	0
   429  0006D4                     STR_25:
   430  0006D4  6C                 	db	108	;'l'
   431  0006D5  66                 	db	102	;'f'
   432  0006D6  00                 	db	0
   433  0006D7  00                 	db	0	; dummy byte at the end
   434  0000                     
   435                           ; #config settings
   436                           
   437                           	psect	cinit
   438  0057B8                     __pcinit:
   439                           	callstack 0
   440  0057B8                     start_initialization:
   441                           	callstack 0
   442  0057B8                     __initialization:
   443                           	callstack 0
   444                           
   445                           ; Initialize objects allocated to BANK1 (32 bytes)
   446                           ; load TBLPTR registers with __pidataBANK1
   447  0057B8  0E58               	movlw	low __pidataBANK1
   448  0057BA  6EF6               	movwf	tblptrl,c
   449  0057BC  0E5C               	movlw	high __pidataBANK1
   450  0057BE  6EF7               	movwf	tblptrh,c
   451  0057C0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   452  0057C2  6EF8               	movwf	tblptru,c
   453  0057C4  EE01  F0AB         	lfsr	0,__pdataBANK1
   454  0057C8  EE10 F020          	lfsr	1,32
   455  0057CC                     copy_data0:
   456  0057CC  0009               	tblrd		*+
   457  0057CE  CFF5 FFEE          	movff	tablat,postinc0
   458  0057D2  50E5               	movf	postdec1,w,c
   459  0057D4  50E1               	movf	fsr1l,w,c
   460  0057D6  E1FA               	bnz	copy_data0
   461                           
   462                           ; Clear objects allocated to BANK2 (80 bytes)
   463  0057D8  EE02  F000         	lfsr	0,__pbssBANK2
   464  0057DC  0E50               	movlw	80
   465  0057DE                     clear_0:
   466  0057DE  6AEE               	clrf	postinc0,c
   467  0057E0  06E8               	decf	wreg,f,c
   468  0057E2  E1FD               	bnz	clear_0
   469                           
   470                           ; Clear objects allocated to BANK1 (171 bytes)
   471  0057E4  EE01  F000         	lfsr	0,__pbssBANK1
   472  0057E8  0EAB               	movlw	171
   473  0057EA                     clear_1:
   474  0057EA  6AEE               	clrf	postinc0,c
   475  0057EC  06E8               	decf	wreg,f,c
   476  0057EE  E1FD               	bnz	clear_1
   477                           
   478                           ; Clear objects allocated to BANK0 (13 bytes)
   479  0057F0  EE00  F0F3         	lfsr	0,__pbssBANK0
   480  0057F4  0E0D               	movlw	13
   481  0057F6                     clear_2:
   482  0057F6  6AEE               	clrf	postinc0,c
   483  0057F8  06E8               	decf	wreg,f,c
   484  0057FA  E1FD               	bnz	clear_2
   485  0057FC                     end_of_initialization:
   486                           	callstack 0
   487  0057FC                     __end_of__initialization:
   488                           	callstack 0
   489  0057FC  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   490  0057FE  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   491  005800  0E00               	movlw	low (__Lmediumconst shr (0+16))
   492  005802  6EF8               	movwf	tblptru,c
   493  005804  0100               	movlb	0
   494  005806  EF67  F026         	goto	_main	;jump to C main() function
   495                           
   496                           	psect	bssBANK0
   497  0000F3                     __pbssBANK0:
   498                           	callstack 0
   499  0000F3                     _timer_value:
   500                           	callstack 0
   501  0000F3                     	ds	10
   502  0000FD                     _menu_flags:
   503                           	callstack 0
   504  0000FD                     	ds	1
   505  0000FE                     _button_bounce_controller:
   506                           	callstack 0
   507  0000FE                     	ds	1
   508  0000FF                     _pauseIsClick:
   509                           	callstack 0
   510  0000FF                     	ds	1
   511                           
   512                           	psect	bssBANK1
   513  000100                     __pbssBANK1:
   514                           	callstack 0
   515  000100                     _convert_data:
   516                           	callstack 0
   517  000100                     	ds	48
   518  000130                     _procces_data:
   519                           	callstack 0
   520  000130                     	ds	32
   521  000150                     _controller:
   522                           	callstack 0
   523  000150                     	ds	19
   524  000163                     	ds	16
   525  000173                     _adc_raw_data:
   526                           	callstack 0
   527  000173                     	ds	16
   528  000183                     _driver_limit:
   529                           	callstack 0
   530  000183                     	ds	12
   531  00018F                     floorf@F524:
   532                           	callstack 0
   533  00018F                     	ds	4
   534  000193                     ___fpclassifyf@F463:
   535                           	callstack 0
   536  000193                     	ds	4
   537  000197                     fabsf@F463:
   538                           	callstack 0
   539  000197                     	ds	4
   540  00019B                     _menu_value:
   541                           	callstack 0
   542  00019B                     	ds	3
   543  00019E                     _nout:
   544                           	callstack 0
   545  00019E                     	ds	2
   546  0001A0                     _width:
   547                           	callstack 0
   548  0001A0                     	ds	2
   549  0001A2                     _prec:
   550                           	callstack 0
   551  0001A2                     	ds	2
   552  0001A4                     _flags:
   553                           	callstack 0
   554  0001A4                     	ds	2
   555  0001A6                     stateMachine@secretMenuCounter:
   556                           	callstack 0
   557  0001A6                     	ds	1
   558  0001A7                     _menu_selected:
   559                           	callstack 0
   560  0001A7                     	ds	1
   561  0001A8                     _stopIsClick:
   562                           	callstack 0
   563  0001A8                     	ds	1
   564  0001A9                     _startIsClick:
   565                           	callstack 0
   566  0001A9                     	ds	1
   567  0001AA                     _timer_counter_flag:
   568                           	callstack 0
   569  0001AA                     	ds	1
   570                           
   571                           	psect	dataBANK1
   572  0001AB                     __pdataBANK1:
   573                           	callstack 0
   574  0001AB                     	ds	4
   575  0001AF                     	ds	4
   576  0001B3                     _KD@fs_speed_controller$F1597:
   577                           	callstack 0
   578  0001B3                     	ds	4
   579  0001B7                     _KP@fs_speed_controller$F1596:
   580                           	callstack 0
   581  0001B7                     	ds	4
   582  0001BB                     	ds	4
   583  0001BF                     	ds	4
   584  0001C3                     	ds	4
   585  0001C7                     	ds	4
   586                           
   587                           	psect	bssBANK2
   588  000200                     __pbssBANK2:
   589                           	callstack 0
   590  000200                     _dbuf:
   591                           	callstack 0
   592  000200                     	ds	80
   593                           
   594                           	psect	cstackBANK0
   595  000060                     __pcstackBANK0:
   596                           	callstack 0
   597  000060                     floorf@m:
   598                           	callstack 0
   599                           
   600                           ; 4 bytes @ 0x0
   601  000060                     	ds	4
   602  000064                     floorf@e:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x4
   606  000064                     	ds	2
   607  000066                     floorf@u:
   608                           	callstack 0
   609                           
   610                           ; 4 bytes @ 0x6
   611  000066                     	ds	4
   612  00006A                     ??_efgtoa:
   613                           
   614                           ; 1 bytes @ 0xA
   615  00006A                     	ds	5
   616  00006F                     efgtoa@ou:
   617                           	callstack 0
   618                           
   619                           ; 4 bytes @ 0xF
   620  00006F                     	ds	4
   621  000073                     _efgtoa$2503:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x13
   625  000073                     	ds	2
   626  000075                     _efgtoa$2504:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x15
   630  000075                     	ds	2
   631  000077                     _efgtoa$2508:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0x17
   635  000077                     	ds	2
   636  000079                     _efgtoa$2512:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x19
   640  000079                     	ds	2
   641  00007B                     _efgtoa$2513:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x1B
   645  00007B                     	ds	2
   646  00007D                     _efgtoa$2514:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x1D
   650  00007D                     	ds	2
   651  00007F                     efgtoa@t:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x1F
   655  00007F                     	ds	2
   656  000081                     efgtoa@pp:
   657                           	callstack 0
   658                           
   659                           ; 2 bytes @ 0x21
   660  000081                     	ds	2
   661  000083                     efgtoa@m:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0x23
   665  000083                     	ds	2
   666  000085                     efgtoa@ne:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0x25
   670  000085                     	ds	2
   671  000087                     efgtoa@d:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x27
   675  000087                     	ds	2
   676  000089                     efgtoa@sign:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x29
   680  000089                     	ds	2
   681  00008B                     efgtoa@p:
   682                           	callstack 0
   683                           
   684                           ; 2 bytes @ 0x2B
   685  00008B                     	ds	2
   686  00008D                     efgtoa@nmode:
   687                           	callstack 0
   688                           
   689                           ; 1 bytes @ 0x2D
   690  00008D                     	ds	1
   691  00008E                     efgtoa@w:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x2E
   695  00008E                     	ds	2
   696  000090                     efgtoa@mode:
   697                           	callstack 0
   698                           
   699                           ; 1 bytes @ 0x30
   700  000090                     	ds	1
   701  000091                     efgtoa@h:
   702                           	callstack 0
   703                           
   704                           ; 4 bytes @ 0x31
   705  000091                     	ds	4
   706  000095                     efgtoa@l:
   707                           	callstack 0
   708                           
   709                           ; 4 bytes @ 0x35
   710  000095                     	ds	4
   711  000099                     efgtoa@i:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x39
   715  000099                     	ds	2
   716  00009B                     efgtoa@g:
   717                           	callstack 0
   718                           
   719                           ; 4 bytes @ 0x3B
   720  00009B                     	ds	4
   721  00009F                     efgtoa@e:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x3F
   725  00009F                     	ds	2
   726  0000A1                     efgtoa@n:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x41
   730  0000A1                     	ds	2
   731  0000A3                     efgtoa@u:
   732                           	callstack 0
   733                           
   734                           ; 4 bytes @ 0x43
   735  0000A3                     	ds	4
   736  0000A7                     ?_vfpfcnvrt:
   737                           	callstack 0
   738  0000A7                     vfpfcnvrt@fp:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0x47
   742  0000A7                     	ds	2
   743  0000A9                     vfpfcnvrt@fmt:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0x49
   747  0000A9                     	ds	2
   748  0000AB                     vfpfcnvrt@ap:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x4B
   752  0000AB                     	ds	2
   753  0000AD                     ??_vfpfcnvrt:
   754                           
   755                           ; 1 bytes @ 0x4D
   756  0000AD                     	ds	4
   757  0000B1                     vfpfcnvrt@ll:
   758                           	callstack 0
   759                           
   760                           ; 8 bytes @ 0x51
   761  0000B1                     	ds	8
   762  0000B9                     _vfpfcnvrt$2528:
   763                           	callstack 0
   764                           
   765                           ; 2 bytes @ 0x59
   766  0000B9                     	ds	2
   767  0000BB                     _vfpfcnvrt$2529:
   768                           	callstack 0
   769                           
   770                           ; 2 bytes @ 0x5B
   771  0000BB                     	ds	2
   772  0000BD                     _vfpfcnvrt$2534:
   773                           	callstack 0
   774                           
   775                           ; 2 bytes @ 0x5D
   776  0000BD                     	ds	2
   777  0000BF                     vfpfcnvrt@f:
   778                           	callstack 0
   779                           
   780                           ; 4 bytes @ 0x5F
   781  0000BF                     	ds	4
   782  0000C3                     vfpfcnvrt@ct:
   783                           	callstack 0
   784                           
   785                           ; 3 bytes @ 0x63
   786  0000C3                     	ds	3
   787  0000C6                     vfpfcnvrt@c:
   788                           	callstack 0
   789                           
   790                           ; 1 bytes @ 0x66
   791  0000C6                     	ds	1
   792  0000C7                     ?_vfprintf:
   793                           	callstack 0
   794  0000C7                     vfprintf@fp:
   795                           	callstack 0
   796                           
   797                           ; 2 bytes @ 0x67
   798  0000C7                     	ds	2
   799  0000C9                     vfprintf@fmt:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x69
   803  0000C9                     	ds	2
   804  0000CB                     vfprintf@ap:
   805                           	callstack 0
   806                           
   807                           ; 2 bytes @ 0x6B
   808  0000CB                     	ds	2
   809  0000CD                     vfprintf@cfmt:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0x6D
   813  0000CD                     	ds	2
   814  0000CF                     ?_sprintf:
   815                           	callstack 0
   816  0000CF                     sprintf@s:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x6F
   820  0000CF                     	ds	2
   821  0000D1                     sprintf@fmt:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0x71
   825  0000D1                     	ds	8
   826  0000D9                     sprintf@ap:
   827                           	callstack 0
   828                           
   829                           ; 2 bytes @ 0x79
   830  0000D9                     	ds	2
   831  0000DB                     sprintf@f:
   832                           	callstack 0
   833                           
   834                           ; 6 bytes @ 0x7B
   835  0000DB                     	ds	6
   836  0000E1                     ??_stateMachine:
   837                           
   838                           ; 1 bytes @ 0x81
   839  0000E1                     	ds	2
   840  0000E3                     stateMachine@textCursor2:
   841                           	callstack 0
   842                           
   843                           ; 16 bytes @ 0x83
   844  0000E3                     	ds	16
   845                           
   846                           	psect	cstackCOMRAM
   847  000001                     __pcstackCOMRAM:
   848                           	callstack 0
   849  000001                     ?_strlen:
   850                           	callstack 0
   851  000001                     ?___fpclassifyf:
   852                           	callstack 0
   853  000001                     ?_isupper:
   854                           	callstack 0
   855  000001                     ?_isdigit:
   856                           	callstack 0
   857  000001                     ?_strncmp:
   858                           	callstack 0
   859  000001                     ?_isspace:
   860                           	callstack 0
   861  000001                     ?_readAdcValue:
   862                           	callstack 0
   863  000001                     ?___wmul:
   864                           	callstack 0
   865  000001                     ?___awdiv:
   866                           	callstack 0
   867  000001                     ?___awmod:
   868                           	callstack 0
   869  000001                     ?___lmul:
   870                           	callstack 0
   871  000001                     ?___lldiv:
   872                           	callstack 0
   873  000001                     ?___flneg:
   874                           	callstack 0
   875  000001                     ?___aodiv:
   876                           	callstack 0
   877  000001                     ?___aomod:
   878                           	callstack 0
   879  000001                     eepromRead@address:
   880                           	callstack 0
   881  000001                     eepromWrite@data:
   882                           	callstack 0
   883  000001                     Lcd_Port@a:
   884                           	callstack 0
   885  000001                     ___wmul@multiplier:
   886                           	callstack 0
   887  000001                     ___awdiv@dividend:
   888                           	callstack 0
   889  000001                     ___awmod@dividend:
   890                           	callstack 0
   891  000001                     isdigit@c:
   892                           	callstack 0
   893  000001                     isspace@c:
   894                           	callstack 0
   895  000001                     isupper@c:
   896                           	callstack 0
   897  000001                     fputc@c:
   898                           	callstack 0
   899  000001                     strcpy@dest:
   900                           	callstack 0
   901  000001                     strlen@s:
   902                           	callstack 0
   903  000001                     strncmp@_l:
   904                           	callstack 0
   905  000001                     ___lmul@multiplier:
   906                           	callstack 0
   907  000001                     ___lldiv@dividend:
   908                           	callstack 0
   909  000001                     ___fleq@ff1:
   910                           	callstack 0
   911  000001                     ___flneg@f1:
   912                           	callstack 0
   913  000001                     ___fpclassifyf@x:
   914                           	callstack 0
   915  000001                     ___aodiv@dividend:
   916                           	callstack 0
   917  000001                     ___aomod@dividend:
   918                           	callstack 0
   919                           
   920                           ; 8 bytes @ 0x0
   921  000001                     	ds	1
   922  000002                     ??_system_init:
   923  000002                     ??_Lcd_Cmd:
   924  000002                     eepromWrite@address:
   925                           	callstack 0
   926  000002                     Lcd_Write_Char@temp:
   927                           	callstack 0
   928                           
   929                           ; 1 bytes @ 0x1
   930  000002                     	ds	1
   931  000003                     ??_isupper:
   932  000003                     ??_isdigit:
   933  000003                     ??_isspace:
   934  000003                     ??_readAdcValue:
   935  000003                     Lcd_Cmd@a:
   936                           	callstack 0
   937  000003                     Lcd_Write_Char@y:
   938                           	callstack 0
   939  000003                     ___wmul@multiplicand:
   940                           	callstack 0
   941  000003                     ___awdiv@divisor:
   942                           	callstack 0
   943  000003                     ___awmod@divisor:
   944                           	callstack 0
   945  000003                     fputc@fp:
   946                           	callstack 0
   947  000003                     strcpy@src:
   948                           	callstack 0
   949  000003                     strlen@a:
   950                           	callstack 0
   951  000003                     strncmp@_r:
   952                           	callstack 0
   953                           
   954                           ; 2 bytes @ 0x2
   955  000003                     	ds	1
   956  000004                     ??_lcd_init:
   957  000004                     Lcd_Set_Cursor@b:
   958                           	callstack 0
   959  000004                     Lcd_Write_Char@a:
   960                           	callstack 0
   961                           
   962                           ; 1 bytes @ 0x3
   963  000004                     	ds	1
   964  000005                     ??_fputc:
   965  000005                     ??___fpclassifyf:
   966  000005                     ??_strcpy:
   967  000005                     readAdcValue@adcChannel:
   968                           	callstack 0
   969  000005                     Lcd_Set_Cursor@a:
   970                           	callstack 0
   971  000005                     ___awdiv@counter:
   972                           	callstack 0
   973  000005                     ___awmod@counter:
   974                           	callstack 0
   975  000005                     Lcd_Write_String@a:
   976                           	callstack 0
   977  000005                     ___wmul@product:
   978                           	callstack 0
   979  000005                     strncmp@n:
   980                           	callstack 0
   981  000005                     ___lmul@multiplicand:
   982                           	callstack 0
   983  000005                     ___lldiv@divisor:
   984                           	callstack 0
   985  000005                     ___fleq@ff2:
   986                           	callstack 0
   987                           
   988                           ; 4 bytes @ 0x4
   989  000005                     	ds	1
   990  000006                     Lcd_Set_Cursor@z:
   991                           	callstack 0
   992  000006                     ___awdiv@sign:
   993                           	callstack 0
   994  000006                     ___awmod@sign:
   995                           	callstack 0
   996  000006                     readAdcValue@adcValue:
   997                           	callstack 0
   998                           
   999                           ; 2 bytes @ 0x5
  1000  000006                     	ds	1
  1001  000007                     ??_strncmp:
  1002  000007                     ??_Lcd_Write_String:
  1003  000007                     ?_tolower:
  1004                           	callstack 0
  1005  000007                     Lcd_Set_Cursor@y:
  1006                           	callstack 0
  1007  000007                     _isspace$2601:
  1008                           	callstack 0
  1009  000007                     ___awdiv@quotient:
  1010                           	callstack 0
  1011  000007                     strcpy@s:
  1012                           	callstack 0
  1013  000007                     tolower@c:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x6
  1017  000007                     	ds	1
  1018  000008                     ?_atoi:
  1019                           	callstack 0
  1020  000008                     Lcd_Set_Cursor@temp:
  1021                           	callstack 0
  1022  000008                     atoi@s:
  1023                           	callstack 0
  1024  000008                     strncmp@l:
  1025                           	callstack 0
  1026                           
  1027                           ; 2 bytes @ 0x7
  1028  000008                     	ds	1
  1029  000009                     ??_tolower:
  1030  000009                     ??___fleq:
  1031  000009                     Lcd_Write_String@i:
  1032                           	callstack 0
  1033  000009                     ___fpclassifyf@e:
  1034                           	callstack 0
  1035  000009                     strcpy@d:
  1036                           	callstack 0
  1037  000009                     ___lmul@product:
  1038                           	callstack 0
  1039  000009                     ___lldiv@quotient:
  1040                           	callstack 0
  1041  000009                     ___aodiv@divisor:
  1042                           	callstack 0
  1043  000009                     ___aomod@divisor:
  1044                           	callstack 0
  1045                           
  1046                           ; 8 bytes @ 0x8
  1047  000009                     	ds	1
  1048  00000A                     ??_atoi:
  1049  00000A                     fputs@s:
  1050                           	callstack 0
  1051  00000A                     strncmp@r:
  1052                           	callstack 0
  1053                           
  1054                           ; 2 bytes @ 0x9
  1055  00000A                     	ds	1
  1056  00000B                     ___fpclassifyf@u:
  1057                           	callstack 0
  1058                           
  1059                           ; 4 bytes @ 0xA
  1060  00000B                     	ds	1
  1061  00000C                     fputs@fp:
  1062                           	callstack 0
  1063                           
  1064                           ; 2 bytes @ 0xB
  1065  00000C                     	ds	1
  1066  00000D                     ___lldiv@counter:
  1067                           	callstack 0
  1068  00000D                     _tolower$2665:
  1069                           	callstack 0
  1070                           
  1071                           ; 2 bytes @ 0xC
  1072  00000D                     	ds	1
  1073  00000E                     ?___xxtofl:
  1074                           	callstack 0
  1075  00000E                     fputs@c:
  1076                           	callstack 0
  1077  00000E                     atoi@neg:
  1078                           	callstack 0
  1079  00000E                     ___xxtofl@val:
  1080                           	callstack 0
  1081                           
  1082                           ; 4 bytes @ 0xD
  1083  00000E                     	ds	1
  1084  00000F                     fputs@i:
  1085                           	callstack 0
  1086                           
  1087                           ; 2 bytes @ 0xE
  1088  00000F                     	ds	1
  1089  000010                     _atoi$2570:
  1090                           	callstack 0
  1091                           
  1092                           ; 2 bytes @ 0xF
  1093  000010                     	ds	1
  1094  000011                     ?_pad:
  1095                           	callstack 0
  1096  000011                     ___aodiv@counter:
  1097                           	callstack 0
  1098  000011                     ___aomod@counter:
  1099                           	callstack 0
  1100  000011                     pad@fp:
  1101                           	callstack 0
  1102                           
  1103                           ; 2 bytes @ 0x10
  1104  000011                     	ds	1
  1105  000012                     ??___xxtofl:
  1106  000012                     ___aodiv@sign:
  1107                           	callstack 0
  1108  000012                     ___aomod@sign:
  1109                           	callstack 0
  1110  000012                     _atoi$2572:
  1111                           	callstack 0
  1112                           
  1113                           ; 2 bytes @ 0x11
  1114  000012                     	ds	1
  1115  000013                     ?_abs:
  1116                           	callstack 0
  1117  000013                     pad@buf:
  1118                           	callstack 0
  1119  000013                     abs@a:
  1120                           	callstack 0
  1121  000013                     ___aodiv@quotient:
  1122                           	callstack 0
  1123                           
  1124                           ; 8 bytes @ 0x12
  1125  000013                     	ds	1
  1126  000014                     _atoi$2571:
  1127                           	callstack 0
  1128                           
  1129                           ; 1 bytes @ 0x13
  1130  000014                     	ds	1
  1131  000015                     ??_abs:
  1132  000015                     pad@p:
  1133                           	callstack 0
  1134  000015                     atoi@n:
  1135                           	callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x14
  1138  000015                     	ds	1
  1139  000016                     ___xxtofl@sign:
  1140                           	callstack 0
  1141                           
  1142                           ; 1 bytes @ 0x15
  1143  000016                     	ds	1
  1144  000017                     ??_pad:
  1145  000017                     ___xxtofl@exp:
  1146                           	callstack 0
  1147                           
  1148                           ; 1 bytes @ 0x16
  1149  000017                     	ds	1
  1150  000018                     pad@i:
  1151                           	callstack 0
  1152  000018                     ___xxtofl@arg:
  1153                           	callstack 0
  1154                           
  1155                           ; 4 bytes @ 0x17
  1156  000018                     	ds	2
  1157  00001A                     pad@w:
  1158                           	callstack 0
  1159                           
  1160                           ; 2 bytes @ 0x19
  1161  00001A                     	ds	2
  1162  00001C                     ??_calculatedAverageValue:
  1163  00001C                     ?_dtoa:
  1164                           	callstack 0
  1165  00001C                     ?_fabsf:
  1166                           	callstack 0
  1167  00001C                     ?___flmul:
  1168                           	callstack 0
  1169  00001C                     dtoa@fp:
  1170                           	callstack 0
  1171  00001C                     ___flmul@b:
  1172                           	callstack 0
  1173  00001C                     fabsf@x:
  1174                           	callstack 0
  1175                           
  1176                           ; 4 bytes @ 0x1B
  1177  00001C                     	ds	2
  1178  00001E                     dtoa@d:
  1179                           	callstack 0
  1180                           
  1181                           ; 8 bytes @ 0x1D
  1182  00001E                     	ds	2
  1183  000020                     ___flmul@a:
  1184                           	callstack 0
  1185  000020                     fabsf@u:
  1186                           	callstack 0
  1187                           
  1188                           ; 4 bytes @ 0x1F
  1189  000020                     	ds	4
  1190  000024                     ??___flmul:
  1191                           
  1192                           ; 1 bytes @ 0x23
  1193  000024                     	ds	2
  1194  000026                     ??_dtoa:
  1195                           
  1196                           ; 1 bytes @ 0x25
  1197  000026                     	ds	2
  1198  000028                     ___flmul@sign:
  1199                           	callstack 0
  1200                           
  1201                           ; 1 bytes @ 0x27
  1202  000028                     	ds	1
  1203  000029                     ___flmul@grs:
  1204                           	callstack 0
  1205                           
  1206                           ; 4 bytes @ 0x28
  1207  000029                     	ds	4
  1208  00002D                     ___flmul@aexp:
  1209                           	callstack 0
  1210                           
  1211                           ; 1 bytes @ 0x2C
  1212  00002D                     	ds	1
  1213  00002E                     ___flmul@bexp:
  1214                           	callstack 0
  1215  00002E                     _dtoa$2479:
  1216                           	callstack 0
  1217                           
  1218                           ; 2 bytes @ 0x2D
  1219  00002E                     	ds	1
  1220  00002F                     ___flmul@prod:
  1221                           	callstack 0
  1222                           
  1223                           ; 4 bytes @ 0x2E
  1224  00002F                     	ds	1
  1225  000030                     dtoa@p:
  1226                           	callstack 0
  1227                           
  1228                           ; 2 bytes @ 0x2F
  1229  000030                     	ds	2
  1230  000032                     dtoa@w:
  1231                           	callstack 0
  1232                           
  1233                           ; 2 bytes @ 0x31
  1234  000032                     	ds	1
  1235  000033                     ___flmul@temp:
  1236                           	callstack 0
  1237                           
  1238                           ; 2 bytes @ 0x32
  1239  000033                     	ds	1
  1240  000034                     dtoa@s:
  1241                           	callstack 0
  1242                           
  1243                           ; 2 bytes @ 0x33
  1244  000034                     	ds	1
  1245  000035                     ?___fladd:
  1246                           	callstack 0
  1247  000035                     ?___fldiv:
  1248                           	callstack 0
  1249  000035                     ___flge@ff1:
  1250                           	callstack 0
  1251  000035                     ___fladd@b:
  1252                           	callstack 0
  1253  000035                     ___fldiv@b:
  1254                           	callstack 0
  1255                           
  1256                           ; 4 bytes @ 0x34
  1257  000035                     	ds	1
  1258  000036                     dtoa@n:
  1259                           	callstack 0
  1260                           
  1261                           ; 8 bytes @ 0x35
  1262  000036                     	ds	3
  1263  000039                     ___flge@ff2:
  1264                           	callstack 0
  1265  000039                     ___fladd@a:
  1266                           	callstack 0
  1267  000039                     ___fldiv@a:
  1268                           	callstack 0
  1269                           
  1270                           ; 4 bytes @ 0x38
  1271  000039                     	ds	4
  1272  00003D                     ??___fladd:
  1273  00003D                     ??___fldiv:
  1274  00003D                     ??___flge:
  1275                           
  1276                           ; 1 bytes @ 0x3C
  1277  00003D                     	ds	1
  1278  00003E                     dtoa@i:
  1279                           	callstack 0
  1280                           
  1281                           ; 2 bytes @ 0x3D
  1282  00003E                     	ds	3
  1283  000041                     ___fladd@signs:
  1284                           	callstack 0
  1285  000041                     ___fldiv@rem:
  1286                           	callstack 0
  1287                           
  1288                           ; 4 bytes @ 0x40
  1289  000041                     	ds	1
  1290  000042                     ___fladd@aexp:
  1291                           	callstack 0
  1292                           
  1293                           ; 1 bytes @ 0x41
  1294  000042                     	ds	1
  1295  000043                     ___fladd@bexp:
  1296                           	callstack 0
  1297                           
  1298                           ; 1 bytes @ 0x42
  1299  000043                     	ds	1
  1300  000044                     ___fladd@grs:
  1301                           	callstack 0
  1302                           
  1303                           ; 1 bytes @ 0x43
  1304  000044                     	ds	1
  1305  000045                     ?___flsub:
  1306                           	callstack 0
  1307  000045                     ___fldiv@sign:
  1308                           	callstack 0
  1309  000045                     ___flsub@b:
  1310                           	callstack 0
  1311                           
  1312                           ; 4 bytes @ 0x44
  1313  000045                     	ds	1
  1314  000046                     ___fldiv@new_exp:
  1315                           	callstack 0
  1316                           
  1317                           ; 2 bytes @ 0x45
  1318  000046                     	ds	2
  1319  000048                     ___fldiv@grs:
  1320                           	callstack 0
  1321                           
  1322                           ; 4 bytes @ 0x47
  1323  000048                     	ds	1
  1324  000049                     ___flsub@a:
  1325                           	callstack 0
  1326                           
  1327                           ; 4 bytes @ 0x48
  1328  000049                     	ds	3
  1329  00004C                     ___fldiv@bexp:
  1330                           	callstack 0
  1331                           
  1332                           ; 1 bytes @ 0x4B
  1333  00004C                     	ds	1
  1334  00004D                     ___fldiv@aexp:
  1335                           	callstack 0
  1336                           
  1337                           ; 1 bytes @ 0x4C
  1338  00004D                     	ds	1
  1339  00004E                     ?_floorf:
  1340                           	callstack 0
  1341  00004E                     ?___fltol:
  1342                           	callstack 0
  1343  00004E                     ___fltol@f1:
  1344                           	callstack 0
  1345  00004E                     floorf@x:
  1346                           	callstack 0
  1347                           
  1348                           ; 4 bytes @ 0x4D
  1349  00004E                     	ds	4
  1350  000052                     ??_floorf:
  1351  000052                     ??___fltol:
  1352                           
  1353                           ; 1 bytes @ 0x51
  1354  000052                     	ds	4
  1355  000056                     ___fltol@sign1:
  1356                           	callstack 0
  1357                           
  1358                           ; 1 bytes @ 0x55
  1359  000056                     	ds	1
  1360  000057                     ___fltol@exp1:
  1361                           	callstack 0
  1362                           
  1363                           ; 1 bytes @ 0x56
  1364  000057                     	ds	1
  1365  000058                     ??_scanAdcConversion:
  1366  000058                     ?_efgtoa:
  1367                           	callstack 0
  1368  000058                     PWM1_setDC@dutycycle:
  1369                           	callstack 0
  1370  000058                     PWM2_setDC@dutycycle:
  1371                           	callstack 0
  1372  000058                     efgtoa@fp:
  1373                           	callstack 0
  1374  000058                     speedControl@position:
  1375                           	callstack 0
  1376                           
  1377                           ; 4 bytes @ 0x57
  1378  000058                     	ds	2
  1379  00005A                     ??_PWM1_setDC:
  1380  00005A                     ??_PWM2_setDC:
  1381  00005A                     efgtoa@f:
  1382                           	callstack 0
  1383                           
  1384                           ; 4 bytes @ 0x59
  1385  00005A                     	ds	2
  1386  00005C                     ??_speedControl:
  1387  00005C                     PWM1_setDC@duty:
  1388                           	callstack 0
  1389  00005C                     PWM2_setDC@duty:
  1390                           	callstack 0
  1391                           
  1392                           ; 2 bytes @ 0x5B
  1393  00005C                     	ds	2
  1394  00005E                     efgtoa@c:
  1395                           	callstack 0
  1396                           
  1397                           ; 1 bytes @ 0x5D
  1398  00005E                     	ds	1
  1399  00005F                     
  1400                           ; 1 bytes @ 0x5E
  1401 ;;
  1402 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1403 ;;
  1404 ;; *************** function _main *****************
  1405 ;; Defined at:
  1406 ;;		line 40 in file "fs_main.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;		None
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;		None
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  1    wreg      void 
  1413 ;; Registers used:
  1414 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1420 ;;      Params:         0       0       0       0       0       0       0
  1421 ;;      Locals:         0       0       0       0       0       0       0
  1422 ;;      Temps:          0       0       0       0       0       0       0
  1423 ;;      Totals:         0       0       0       0       0       0       0
  1424 ;;Total ram usage:        0 bytes
  1425 ;; Hardware stack levels required when called:   11
  1426 ;; This function calls:
  1427 ;;		_Lcd_Clear
  1428 ;;		_PWM1_setDC
  1429 ;;		_PWM2_setDC
  1430 ;;		_PWM_Init
  1431 ;;		_adcInit
  1432 ;;		_lcd_init
  1433 ;;		_mcu_init
  1434 ;;		_menuControl
  1435 ;;		_menuInitialize
  1436 ;;		_system_init
  1437 ;;		_timer_0_init
  1438 ;; This function is called by:
  1439 ;;		Startup code after reset
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           	psect	text0
  1444  004CCE                     __ptext0:
  1445                           	callstack 0
  1446  004CCE                     _main:
  1447                           	callstack 20
  1448  004CCE                     
  1449                           ;fs_main.c: 42:     mcu_init();
  1450  004CCE  EC5A  F02E         	call	_mcu_init	;wreg free
  1451  004CD2                     
  1452                           ;fs_main.c: 43:     menuInitialize();
  1453  004CD2  ECF1  F02D         	call	_menuInitialize	;wreg free
  1454  004CD6                     
  1455                           ;fs_main.c: 45:     adcInit();
  1456  004CD6  ECDD  F02C         	call	_adcInit	;wreg free
  1457  004CDA                     
  1458                           ;fs_main.c: 47:     timer_0_init();
  1459  004CDA  EC65  F02E         	call	_timer_0_init	;wreg free
  1460  004CDE                     
  1461                           ;fs_main.c: 48:     lcd_init();
  1462  004CDE  EC78  F029         	call	_lcd_init	;wreg free
  1463  004CE2                     
  1464                           ;fs_main.c: 49:     system_init();
  1465  004CE2  EC51  F024         	call	_system_init	;wreg free
  1466  004CE6                     
  1467                           ;fs_main.c: 50:     Lcd_Clear();
  1468  004CE6  EC6E  F02E         	call	_Lcd_Clear	;wreg free
  1469  004CEA                     
  1470                           ;fs_main.c: 52:     PWM_Init();
  1471  004CEA  EC05  F02E         	call	_PWM_Init	;wreg free
  1472  004CEE                     
  1473                           ;fs_main.c: 53:     PWM1_setDC(0);
  1474  004CEE  0E00               	movlw	0
  1475  004CF0  6E59               	movwf	(PWM1_setDC@dutycycle+1)^0,c
  1476  004CF2  0E00               	movlw	0
  1477  004CF4  6E58               	movwf	PWM1_setDC@dutycycle^0,c
  1478  004CF6  EC3F  F02A         	call	_PWM1_setDC	;wreg free
  1479  004CFA                     
  1480                           ;fs_main.c: 54:     PWM2_setDC(0);
  1481  004CFA  0E00               	movlw	0
  1482  004CFC  6E59               	movwf	(PWM2_setDC@dutycycle+1)^0,c
  1483  004CFE  0E00               	movlw	0
  1484  004D00  6E58               	movwf	PWM2_setDC@dutycycle^0,c
  1485  004D02  EC02  F02A         	call	_PWM2_setDC	;wreg free
  1486  004D06                     l6191:
  1487                           
  1488                           ;fs_main.c: 57: {;fs_main.c: 58:     if (timer_counter_flag.one_second_flag == 1)
  1489  004D06  0101               	movlb	1	; () banked
  1490  004D08  A1AA               	btfss	_timer_counter_flag& (0+255),0,b
  1491  004D0A  EF89  F026         	goto	u7701
  1492  004D0E  EF8B  F026         	goto	u7700
  1493  004D12                     u7701:
  1494  004D12  EFDE  F026         	goto	l6217
  1495  004D16                     u7700:
  1496  004D16                     
  1497                           ; BSR set to: 1
  1498                           ;fs_main.c: 59:     {;fs_main.c: 60:         timer_counter_flag.one_second_flag = 0;
  1499  004D16  91AA               	bcf	_timer_counter_flag& (0+255),0,b
  1500  004D18                     
  1501                           ; BSR set to: 1
  1502                           ;fs_main.c: 62:         if ( (startIsClick == 1) && (pauseIsClick == 0) && (stopIsClick 
      +                          == 0) && (menu_selected == MAIN_MENU) )
  1503  004D18  05A9               	decf	_startIsClick& (0+255),w,b
  1504  004D1A  A4D8               	btfss	status,2,c
  1505  004D1C  EF92  F026         	goto	u7711
  1506  004D20  EF94  F026         	goto	u7710
  1507  004D24                     u7711:
  1508  004D24  EFDE  F026         	goto	l6217
  1509  004D28                     u7710:
  1510  004D28                     
  1511                           ; BSR set to: 1
  1512  004D28  0100               	movlb	0	; () banked
  1513  004D2A  51FF               	movf	_pauseIsClick& (0+255),w,b
  1514  004D2C  A4D8               	btfss	status,2,c
  1515  004D2E  EF9B  F026         	goto	u7721
  1516  004D32  EF9D  F026         	goto	u7720
  1517  004D36                     u7721:
  1518  004D36  EFDE  F026         	goto	l6217
  1519  004D3A                     u7720:
  1520  004D3A                     
  1521                           ; BSR set to: 0
  1522  004D3A  0101               	movlb	1	; () banked
  1523  004D3C  51A8               	movf	_stopIsClick& (0+255),w,b
  1524  004D3E  A4D8               	btfss	status,2,c
  1525  004D40  EFA4  F026         	goto	u7731
  1526  004D44  EFA6  F026         	goto	u7730
  1527  004D48                     u7731:
  1528  004D48  EFDE  F026         	goto	l6217
  1529  004D4C                     u7730:
  1530  004D4C                     
  1531                           ; BSR set to: 1
  1532  004D4C  51A7               	movf	_menu_selected& (0+255),w,b
  1533  004D4E  A4D8               	btfss	status,2,c
  1534  004D50  EFAC  F026         	goto	u7741
  1535  004D54  EFAE  F026         	goto	u7740
  1536  004D58                     u7741:
  1537  004D58  EFDE  F026         	goto	l6217
  1538  004D5C                     u7740:
  1539  004D5C                     
  1540                           ; BSR set to: 1
  1541                           ;fs_main.c: 63:         {;fs_main.c: 64:             timer_value.second++;
  1542  004D5C  0100               	movlb	0	; () banked
  1543  004D5E  4BF3               	infsnz	_timer_value& (0+255),f,b
  1544  004D60  2BF4               	incf	(_timer_value+1)& (0+255),f,b
  1545  004D62                     
  1546                           ; BSR set to: 0
  1547                           ;fs_main.c: 65:             timer_value.remainingSecond = 60 - timer_value.second;
  1548  004D62  51F3               	movf	_timer_value& (0+255),w,b
  1549  004D64  083C               	sublw	60
  1550  004D66  6FF7               	movwf	(_timer_value+4)& (0+255),b
  1551  004D68  51F4               	movf	(_timer_value+1)& (0+255),w,b
  1552  004D6A  A0D8               	btfss	status,0,c
  1553  004D6C  2AE8               	incf	wreg,f,c
  1554  004D6E  0800               	sublw	0
  1555  004D70  6FF8               	movwf	(_timer_value+5)& (0+255),b
  1556  004D72                     
  1557                           ; BSR set to: 0
  1558                           ;fs_main.c: 67:             if (timer_value.remainingSecond == 59 )
  1559  004D72  0E3B               	movlw	59
  1560  004D74  19F7               	xorwf	(_timer_value+4)& (0+255),w,b
  1561  004D76  11F8               	iorwf	(_timer_value+5)& (0+255),w,b
  1562  004D78  A4D8               	btfss	status,2,c
  1563  004D7A  EFC1  F026         	goto	u7751
  1564  004D7E  EFC3  F026         	goto	u7750
  1565  004D82                     u7751:
  1566  004D82  EFCF  F026         	goto	l6213
  1567  004D86                     u7750:
  1568  004D86                     
  1569                           ; BSR set to: 0
  1570                           ;fs_main.c: 68:             {;fs_main.c: 69:                 timer_value.minute++;
  1571  004D86  4BF5               	infsnz	(_timer_value+2)& (0+255),f,b
  1572  004D88  2BF6               	incf	(_timer_value+3)& (0+255),f,b
  1573  004D8A                     
  1574                           ; BSR set to: 0
  1575                           ;fs_main.c: 70:                 timer_value.remainingMinute = menu_value.driver_time - t
      +                          imer_value.minute;
  1576  004D8A  51F5               	movf	(_timer_value+2)& (0+255),w,b
  1577  004D8C  0101               	movlb	1	; () banked
  1578  004D8E  5D9B               	subwf	_menu_value& (0+255),w,b
  1579  004D90  0100               	movlb	0	; () banked
  1580  004D92  6FF9               	movwf	(_timer_value+6)& (0+255),b
  1581  004D94  51F6               	movf	(_timer_value+3)& (0+255),w,b
  1582  004D96  A0D8               	btfss	status,0,c
  1583  004D98  29F6               	incf	(_timer_value+3)& (0+255),w,b
  1584  004D9A  6BFA               	clrf	(_timer_value+7)& (0+255),b
  1585  004D9C  5FFA               	subwf	(_timer_value+7)& (0+255),f,b
  1586  004D9E                     l6213:
  1587                           
  1588                           ; BSR set to: 0
  1589                           ;fs_main.c: 73:             if (timer_value.second > 59)
  1590  004D9E  51F4               	movf	(_timer_value+1)& (0+255),w,b
  1591  004DA0  E109               	bnz	u7760
  1592  004DA2  0E3C               	movlw	60
  1593  004DA4  5DF3               	subwf	_timer_value& (0+255),w,b
  1594  004DA6  A0D8               	btfss	status,0,c
  1595  004DA8  EFD8  F026         	goto	u7761
  1596  004DAC  EFDA  F026         	goto	u7760
  1597  004DB0                     u7761:
  1598  004DB0  EFDE  F026         	goto	l6217
  1599  004DB4                     u7760:
  1600  004DB4                     
  1601                           ; BSR set to: 0
  1602                           ;fs_main.c: 74:             {;fs_main.c: 75:                 timer_value.second = 0;
  1603  004DB4  0E00               	movlw	0
  1604  004DB6  6FF4               	movwf	(_timer_value+1)& (0+255),b
  1605  004DB8  0E00               	movlw	0
  1606  004DBA  6FF3               	movwf	_timer_value& (0+255),b
  1607  004DBC                     l6217:
  1608                           
  1609                           ;fs_main.c: 80:     menuControl();
  1610  004DBC  EC7C  F02A         	call	_menuControl	;wreg free
  1611  004DC0  EF83  F026         	goto	l6191
  1612  004DC4  EF34  F000         	goto	start
  1613  004DC8                     __end_of_main:
  1614                           	callstack 0
  1615                           
  1616 ;; *************** function _timer_0_init *****************
  1617 ;; Defined at:
  1618 ;;		line 67 in file "fs_timer.c"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;		None
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;		None
  1623 ;; Return value:  Size  Location     Type
  1624 ;;                  1    wreg      void 
  1625 ;; Registers used:
  1626 ;;		wreg, status,2
  1627 ;; Tracked objects:
  1628 ;;		On entry : 0/0
  1629 ;;		On exit  : 0/0
  1630 ;;		Unchanged: 0/0
  1631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1632 ;;      Params:         0       0       0       0       0       0       0
  1633 ;;      Locals:         0       0       0       0       0       0       0
  1634 ;;      Temps:          0       0       0       0       0       0       0
  1635 ;;      Totals:         0       0       0       0       0       0       0
  1636 ;;Total ram usage:        0 bytes
  1637 ;; Hardware stack levels used:    1
  1638 ;; Hardware stack levels required when called:    1
  1639 ;; This function calls:
  1640 ;;		Nothing
  1641 ;; This function is called by:
  1642 ;;		_main
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646                           	psect	text1
  1647  005CCA                     __ptext1:
  1648                           	callstack 0
  1649  005CCA                     _timer_0_init:
  1650                           	callstack 29
  1651  005CCA                     
  1652                           ;fs_timer.c: 69:   T0CON = 0x81;
  1653  005CCA  0E81               	movlw	129
  1654  005CCC  6ED5               	movwf	213,c	;volatile
  1655                           
  1656                           ;fs_timer.c: 70:   TMR0H = 0x63;
  1657  005CCE  0E63               	movlw	99
  1658  005CD0  6ED7               	movwf	215,c	;volatile
  1659                           
  1660                           ;fs_timer.c: 71:   TMR0L = 0xC0;
  1661  005CD2  0EC0               	movlw	192
  1662  005CD4  6ED6               	movwf	214,c	;volatile
  1663  005CD6                     
  1664                           ;fs_timer.c: 72:   INTCONbits.GIE = 1;
  1665  005CD6  8EF2               	bsf	242,7,c	;volatile
  1666  005CD8                     
  1667                           ;fs_timer.c: 73:   INTCONbits.TMR0IE = 1;
  1668  005CD8  8AF2               	bsf	242,5,c	;volatile
  1669  005CDA  0012               	return		;funcret
  1670  005CDC                     __end_of_timer_0_init:
  1671                           	callstack 0
  1672                           
  1673 ;; *************** function _system_init *****************
  1674 ;; Defined at:
  1675 ;;		line 56 in file "fs_mcu.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;		None
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;		None
  1680 ;; Return value:  Size  Location     Type
  1681 ;;                  1    wreg      void 
  1682 ;; Registers used:
  1683 ;;		wreg, status,2, cstack
  1684 ;; Tracked objects:
  1685 ;;		On entry : 0/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1689 ;;      Params:         0       0       0       0       0       0       0
  1690 ;;      Locals:         0       0       0       0       0       0       0
  1691 ;;      Temps:          2       0       0       0       0       0       0
  1692 ;;      Totals:         2       0       0       0       0       0       0
  1693 ;;Total ram usage:        2 bytes
  1694 ;; Hardware stack levels used:    1
  1695 ;; Hardware stack levels required when called:    2
  1696 ;; This function calls:
  1697 ;;		_eepromRead
  1698 ;; This function is called by:
  1699 ;;		_main
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           	psect	text2
  1704  0048A2                     __ptext2:
  1705                           	callstack 0
  1706  0048A2                     _system_init:
  1707                           	callstack 28
  1708  0048A2                     
  1709                           ;fs_mcu.c: 58:     driver_limit.pay = 0;
  1710  0048A2  0E00               	movlw	0
  1711  0048A4  0101               	movlb	1	; () banked
  1712  0048A6  6F83               	movwf	_driver_limit& (0+255),b
  1713  0048A8  0E00               	movlw	0
  1714  0048AA  6F84               	movwf	(_driver_limit+1)& (0+255),b
  1715  0048AC  0E00               	movlw	0
  1716  0048AE  6F85               	movwf	(_driver_limit+2)& (0+255),b
  1717  0048B0  0E00               	movlw	0
  1718  0048B2  6F86               	movwf	(_driver_limit+3)& (0+255),b
  1719                           
  1720                           ;fs_mcu.c: 59:     driver_limit.payda = 0;
  1721  0048B4  0E00               	movlw	0
  1722  0048B6  6F87               	movwf	(_driver_limit+4)& (0+255),b
  1723  0048B8  0E00               	movlw	0
  1724  0048BA  6F88               	movwf	(_driver_limit+5)& (0+255),b
  1725  0048BC  0E00               	movlw	0
  1726  0048BE  6F89               	movwf	(_driver_limit+6)& (0+255),b
  1727  0048C0  0E00               	movlw	0
  1728  0048C2  6F8A               	movwf	(_driver_limit+7)& (0+255),b
  1729                           
  1730                           ;fs_mcu.c: 60:     driver_limit.ortalama = 0;
  1731  0048C4  0E00               	movlw	0
  1732  0048C6  6F8B               	movwf	(_driver_limit+8)& (0+255),b
  1733  0048C8  0E00               	movlw	0
  1734  0048CA  6F8C               	movwf	(_driver_limit+9)& (0+255),b
  1735  0048CC  0E00               	movlw	0
  1736  0048CE  6F8D               	movwf	(_driver_limit+10)& (0+255),b
  1737  0048D0  0E00               	movlw	0
  1738  0048D2  6F8E               	movwf	(_driver_limit+11)& (0+255),b
  1739                           
  1740                           ;fs_mcu.c: 61:     convert_data.convert_channel_0 = 0;
  1741  0048D4  0E00               	movlw	0
  1742  0048D6  6F00               	movwf	_convert_data& (0+255),b
  1743  0048D8  0E00               	movlw	0
  1744  0048DA  6F01               	movwf	(_convert_data+1)& (0+255),b
  1745  0048DC  0E00               	movlw	0
  1746  0048DE  6F02               	movwf	(_convert_data+2)& (0+255),b
  1747  0048E0  0E00               	movlw	0
  1748  0048E2  6F03               	movwf	(_convert_data+3)& (0+255),b
  1749                           
  1750                           ;fs_mcu.c: 62:     convert_data.convert_channel_1 = 0;
  1751  0048E4  0E00               	movlw	0
  1752  0048E6  6F04               	movwf	(_convert_data+4)& (0+255),b
  1753  0048E8  0E00               	movlw	0
  1754  0048EA  6F05               	movwf	(_convert_data+5)& (0+255),b
  1755  0048EC  0E00               	movlw	0
  1756  0048EE  6F06               	movwf	(_convert_data+6)& (0+255),b
  1757  0048F0  0E00               	movlw	0
  1758  0048F2  6F07               	movwf	(_convert_data+7)& (0+255),b
  1759                           
  1760                           ;fs_mcu.c: 63:     convert_data.convert_channel_2 = 0;
  1761  0048F4  0E00               	movlw	0
  1762  0048F6  6F08               	movwf	(_convert_data+8)& (0+255),b
  1763  0048F8  0E00               	movlw	0
  1764  0048FA  6F09               	movwf	(_convert_data+9)& (0+255),b
  1765  0048FC  0E00               	movlw	0
  1766  0048FE  6F0A               	movwf	(_convert_data+10)& (0+255),b
  1767  004900  0E00               	movlw	0
  1768  004902  6F0B               	movwf	(_convert_data+11)& (0+255),b
  1769                           
  1770                           ;fs_mcu.c: 64:     convert_data.convert_channel_3 = 0;
  1771  004904  0E00               	movlw	0
  1772  004906  6F0C               	movwf	(_convert_data+12)& (0+255),b
  1773  004908  0E00               	movlw	0
  1774  00490A  6F0D               	movwf	(_convert_data+13)& (0+255),b
  1775  00490C  0E00               	movlw	0
  1776  00490E  6F0E               	movwf	(_convert_data+14)& (0+255),b
  1777  004910  0E00               	movlw	0
  1778  004912  6F0F               	movwf	(_convert_data+15)& (0+255),b
  1779                           
  1780                           ;fs_mcu.c: 65:     convert_data.convert_channel_4 = 0;
  1781  004914  0E00               	movlw	0
  1782  004916  6F10               	movwf	(_convert_data+16)& (0+255),b
  1783  004918  0E00               	movlw	0
  1784  00491A  6F11               	movwf	(_convert_data+17)& (0+255),b
  1785  00491C  0E00               	movlw	0
  1786  00491E  6F12               	movwf	(_convert_data+18)& (0+255),b
  1787  004920  0E00               	movlw	0
  1788  004922  6F13               	movwf	(_convert_data+19)& (0+255),b
  1789                           
  1790                           ;fs_mcu.c: 66:     convert_data.convert_channel_5 = 0;
  1791  004924  0E00               	movlw	0
  1792  004926  6F14               	movwf	(_convert_data+20)& (0+255),b
  1793  004928  0E00               	movlw	0
  1794  00492A  6F15               	movwf	(_convert_data+21)& (0+255),b
  1795  00492C  0E00               	movlw	0
  1796  00492E  6F16               	movwf	(_convert_data+22)& (0+255),b
  1797  004930  0E00               	movlw	0
  1798  004932  6F17               	movwf	(_convert_data+23)& (0+255),b
  1799                           
  1800                           ;fs_mcu.c: 67:     convert_data.convert_channel_6 = 0;
  1801  004934  0E00               	movlw	0
  1802  004936  6F18               	movwf	(_convert_data+24)& (0+255),b
  1803  004938  0E00               	movlw	0
  1804  00493A  6F19               	movwf	(_convert_data+25)& (0+255),b
  1805  00493C  0E00               	movlw	0
  1806  00493E  6F1A               	movwf	(_convert_data+26)& (0+255),b
  1807  004940  0E00               	movlw	0
  1808  004942  6F1B               	movwf	(_convert_data+27)& (0+255),b
  1809                           
  1810                           ;fs_mcu.c: 68:     convert_data.convert_channel_7 = 0;
  1811  004944  0E00               	movlw	0
  1812  004946  6F1C               	movwf	(_convert_data+28)& (0+255),b
  1813  004948  0E00               	movlw	0
  1814  00494A  6F1D               	movwf	(_convert_data+29)& (0+255),b
  1815  00494C  0E00               	movlw	0
  1816  00494E  6F1E               	movwf	(_convert_data+30)& (0+255),b
  1817  004950  0E00               	movlw	0
  1818  004952  6F1F               	movwf	(_convert_data+31)& (0+255),b
  1819                           
  1820                           ;fs_mcu.c: 69:     controller.leftMotorSpeed = 0;
  1821  004954  0E00               	movlw	0
  1822  004956  6F57               	movwf	(_controller+7)& (0+255),b
  1823  004958  0E00               	movlw	0
  1824  00495A  6F56               	movwf	(_controller+6)& (0+255),b
  1825                           
  1826                           ;fs_mcu.c: 70:     controller.rightMotorSpeed = 0;
  1827  00495C  0E00               	movlw	0
  1828  00495E  6F59               	movwf	(_controller+9)& (0+255),b
  1829  004960  0E00               	movlw	0
  1830  004962  6F58               	movwf	(_controller+8)& (0+255),b
  1831                           
  1832                           ;fs_mcu.c: 71:     timer_value.timer_0_counter = 0;
  1833  004964  0E00               	movlw	0
  1834  004966  0100               	movlb	0	; () banked
  1835  004968  6FFC               	movwf	(_timer_value+9)& (0+255),b
  1836                           
  1837                           ;fs_mcu.c: 72:     controller.error = 0;
  1838  00496A  0E00               	movlw	0
  1839  00496C  0101               	movlb	1	; () banked
  1840  00496E  6F51               	movwf	(_controller+1)& (0+255),b
  1841  004970  0E00               	movlw	0
  1842  004972  6F50               	movwf	_controller& (0+255),b
  1843  004974                     
  1844                           ; BSR set to: 1
  1845                           ;fs_mcu.c: 74:     button_bounce_controller.menu = 0;
  1846  004974  0100               	movlb	0	; () banked
  1847  004976  91FE               	bcf	_button_bounce_controller& (0+255),0,b
  1848  004978                     
  1849                           ; BSR set to: 0
  1850                           ;fs_mcu.c: 75:     button_bounce_controller.pause = 0;
  1851  004978  97FE               	bcf	_button_bounce_controller& (0+255),3,b
  1852  00497A                     
  1853                           ; BSR set to: 0
  1854                           ;fs_mcu.c: 76:     button_bounce_controller.start = 0;
  1855  00497A  93FE               	bcf	_button_bounce_controller& (0+255),1,b
  1856  00497C                     
  1857                           ; BSR set to: 0
  1858                           ;fs_mcu.c: 77:     button_bounce_controller.stop = 0;
  1859  00497C  95FE               	bcf	_button_bounce_controller& (0+255),2,b
  1860  00497E                     
  1861                           ; BSR set to: 0
  1862                           ;fs_mcu.c: 78:     menu_value.driver_time = (uint8_t)eepromRead(0x00);
  1863  00497E  0E00               	movlw	0
  1864  004980  EC3C  F02E         	call	_eepromRead
  1865  004984  0101               	movlb	1	; () banked
  1866  004986  6F9B               	movwf	_menu_value& (0+255),b
  1867  004988                     
  1868                           ; BSR set to: 1
  1869                           ;fs_mcu.c: 79:     menu_value.stop_time = (uint8_t)eepromRead(0x01);
  1870  004988  0E01               	movlw	1
  1871  00498A  EC3C  F02E         	call	_eepromRead
  1872  00498E  0101               	movlb	1	; () banked
  1873  004990  6F9C               	movwf	(_menu_value+1)& (0+255),b
  1874  004992                     
  1875                           ; BSR set to: 1
  1876                           ;fs_mcu.c: 80:     menu_value.speed_limit = (uint8_t)eepromRead(0x02);
  1877  004992  0E02               	movlw	2
  1878  004994  EC3C  F02E         	call	_eepromRead
  1879  004998  0101               	movlb	1	; () banked
  1880  00499A  6F9D               	movwf	(_menu_value+2)& (0+255),b
  1881  00499C                     
  1882                           ; BSR set to: 1
  1883                           ;fs_mcu.c: 82:     _delay((unsigned long)((700)*(64000000UL/4000.0)));
  1884  00499C  0E39               	movlw	57
  1885  00499E  6E03               	movwf	(??_system_init+1)^0,c
  1886  0049A0  0ED2               	movlw	210
  1887  0049A2  6E02               	movwf	??_system_init^0,c
  1888  0049A4  0E4C               	movlw	76
  1889  0049A6                     u7817:
  1890  0049A6  2EE8               	decfsz	wreg,f,c
  1891  0049A8  D7FE               	bra	u7817
  1892  0049AA  2E02               	decfsz	??_system_init^0,f,c
  1893  0049AC  D7FC               	bra	u7817
  1894  0049AE  2E03               	decfsz	(??_system_init+1)^0,f,c
  1895  0049B0  D7FA               	bra	u7817
  1896  0049B2  D000               	nop2	
  1897  0049B4                     
  1898                           ;fs_mcu.c: 83:     timer_value.remainingMinute = menu_value.driver_time;
  1899  0049B4  C19B  F0F9         	movff	_menu_value,_timer_value+6
  1900  0049B8  0100               	movlb	0	; () banked
  1901  0049BA  6BFA               	clrf	(_timer_value+7)& (0+255),b
  1902  0049BC                     
  1903                           ; BSR set to: 0
  1904                           ;fs_mcu.c: 84:     timer_value.remainingSecond = 0;
  1905  0049BC  0E00               	movlw	0
  1906  0049BE  6FF8               	movwf	(_timer_value+5)& (0+255),b
  1907  0049C0  0E00               	movlw	0
  1908  0049C2  6FF7               	movwf	(_timer_value+4)& (0+255),b
  1909  0049C4                     
  1910                           ; BSR set to: 0
  1911  0049C4  0012               	return		;funcret
  1912  0049C6                     __end_of_system_init:
  1913                           	callstack 0
  1914                           
  1915 ;; *************** function _eepromRead *****************
  1916 ;; Defined at:
  1917 ;;		line 36 in file "fs_eeprom.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;  address         1    wreg     unsigned char 
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;  address         1    0[COMRAM] unsigned char 
  1922 ;; Return value:  Size  Location     Type
  1923 ;;                  1    wreg      unsigned char 
  1924 ;; Registers used:
  1925 ;;		wreg, status,2
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1931 ;;      Params:         0       0       0       0       0       0       0
  1932 ;;      Locals:         1       0       0       0       0       0       0
  1933 ;;      Temps:          0       0       0       0       0       0       0
  1934 ;;      Totals:         1       0       0       0       0       0       0
  1935 ;;Total ram usage:        1 bytes
  1936 ;; Hardware stack levels used:    1
  1937 ;; Hardware stack levels required when called:    1
  1938 ;; This function calls:
  1939 ;;		Nothing
  1940 ;; This function is called by:
  1941 ;;		_system_init
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945                           	psect	text3
  1946  005C78                     __ptext3:
  1947                           	callstack 0
  1948  005C78                     _eepromRead:
  1949                           	callstack 28
  1950                           
  1951                           ; BSR set to: 0
  1952                           ;incstack = 0
  1953                           ;eepromRead@address stored from wreg
  1954  005C78  6E01               	movwf	eepromRead@address^0,c
  1955  005C7A                     
  1956                           ;fs_eeprom.c: 36: uint8_t eepromRead(uint8_t address);fs_eeprom.c: 37: {;fs_eeprom.c: 41
      +                          :     EEADR = (uint8_t)address;
  1957  005C7A  C001  FFA9         	movff	eepromRead@address,4009	;volatile
  1958  005C7E                     
  1959                           ;fs_eeprom.c: 43:     EECON1bits.EEPGD = 0;
  1960  005C7E  9EA6               	bcf	166,7,c	;volsfr
  1961  005C80                     
  1962                           ;fs_eeprom.c: 44:     EECON1bits.CFGS = 0;
  1963  005C80  9CA6               	bcf	166,6,c	;volsfr
  1964  005C82                     
  1965                           ;fs_eeprom.c: 45:     EECON1bits.RD = 1;
  1966  005C82  80A6               	bsf	166,0,c	;volsfr
  1967  005C84                     l70:
  1968  005C84  B0A6               	btfsc	166,0,c	;volsfr
  1969  005C86  EF47  F02E         	goto	u6851
  1970  005C8A  EF49  F02E         	goto	u6850
  1971  005C8E                     u6851:
  1972  005C8E  EF42  F02E         	goto	l70
  1973  005C92                     u6850:
  1974  005C92                     
  1975                           ;fs_eeprom.c: 51:     return EEDATA;
  1976  005C92  50A8               	movf	168,w,c	;volatile
  1977  005C94  0012               	return		;funcret
  1978  005C96                     __end_of_eepromRead:
  1979                           	callstack 0
  1980                           
  1981 ;; *************** function _menuInitialize *****************
  1982 ;; Defined at:
  1983 ;;		line 38 in file "fs_menu_controller.c"
  1984 ;; Parameters:    Size  Location     Type
  1985 ;;		None
  1986 ;; Auto vars:     Size  Location     Type
  1987 ;;		None
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  1    wreg      void 
  1990 ;; Registers used:
  1991 ;;		None
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1997 ;;      Params:         0       0       0       0       0       0       0
  1998 ;;      Locals:         0       0       0       0       0       0       0
  1999 ;;      Temps:          0       0       0       0       0       0       0
  2000 ;;      Totals:         0       0       0       0       0       0       0
  2001 ;;Total ram usage:        0 bytes
  2002 ;; Hardware stack levels used:    1
  2003 ;; Hardware stack levels required when called:    1
  2004 ;; This function calls:
  2005 ;;		Nothing
  2006 ;; This function is called by:
  2007 ;;		_main
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011                           	psect	text4
  2012  005BE2                     __ptext4:
  2013                           	callstack 0
  2014  005BE2                     _menuInitialize:
  2015                           	callstack 29
  2016  005BE2                     
  2017                           ;fs_menu_controller.c: 41:     TRISBbits.RB6 = 1;
  2018  005BE2  8C93               	bsf	147,6,c	;volatile
  2019                           
  2020                           ;fs_menu_controller.c: 44:     TRISBbits.RB7 = 1;
  2021  005BE4  8E93               	bsf	147,7,c	;volatile
  2022                           
  2023                           ;fs_menu_controller.c: 46:     ANSELDbits.ANSD4 = 0;
  2024  005BE6  010F               	movlb	15	; () banked
  2025  005BE8  993B               	bcf	59,4,b	;volatile
  2026                           
  2027                           ;fs_menu_controller.c: 47:     TRISDbits.RD4 = 1;
  2028  005BEA  8895               	bsf	149,4,c	;volatile
  2029                           
  2030                           ;fs_menu_controller.c: 49:     ANSELDbits.ANSD0 = 0;
  2031  005BEC  913B               	bcf	59,0,b	;volatile
  2032                           
  2033                           ;fs_menu_controller.c: 50:     TRISDbits.RD0 = 1;
  2034  005BEE  8095               	bsf	149,0,c	;volatile
  2035                           
  2036                           ;fs_menu_controller.c: 52:     ANSELDbits.ANSD1 = 0;
  2037  005BF0  933B               	bcf	59,1,b	;volatile
  2038                           
  2039                           ;fs_menu_controller.c: 53:     TRISDbits.RD1 = 1;
  2040  005BF2  8295               	bsf	149,1,c	;volatile
  2041                           
  2042                           ;fs_menu_controller.c: 55:     ANSELDbits.ANSD2 = 0;
  2043  005BF4  953B               	bcf	59,2,b	;volatile
  2044                           
  2045                           ;fs_menu_controller.c: 56:     TRISDbits.RD2 = 1;
  2046  005BF6  8495               	bsf	149,2,c	;volatile
  2047                           
  2048                           ;fs_menu_controller.c: 58:     ANSELDbits.ANSD3 = 0;
  2049  005BF8  973B               	bcf	59,3,b	;volatile
  2050                           
  2051                           ;fs_menu_controller.c: 59:     TRISDbits.RD3 = 1;
  2052  005BFA  8695               	bsf	149,3,c	;volatile
  2053                           
  2054                           ;fs_menu_controller.c: 61:     ANSELDbits.ANSD5 = 0;
  2055  005BFC  9B3B               	bcf	59,5,b	;volatile
  2056                           
  2057                           ;fs_menu_controller.c: 62:     TRISDbits.RD5 = 0;
  2058  005BFE  9A95               	bcf	149,5,c	;volatile
  2059                           
  2060                           ;fs_menu_controller.c: 64:     ANSELCbits.ANSC5 = 0;
  2061  005C00  9B3A               	bcf	58,5,b	;volatile
  2062                           
  2063                           ;fs_menu_controller.c: 65:     TRISCbits.RC5 = 0;
  2064  005C02  9A94               	bcf	148,5,c	;volatile
  2065                           
  2066                           ;fs_menu_controller.c: 67:     ANSELCbits.ANSC4 = 0;
  2067  005C04  993A               	bcf	58,4,b	;volatile
  2068                           
  2069                           ;fs_menu_controller.c: 68:     TRISCbits.RC4 = 0;
  2070  005C06  9894               	bcf	148,4,c	;volatile
  2071  005C08                     
  2072                           ; BSR set to: 15
  2073  005C08  0012               	return		;funcret
  2074  005C0A                     __end_of_menuInitialize:
  2075                           	callstack 0
  2076                           
  2077 ;; *************** function _menuControl *****************
  2078 ;; Defined at:
  2079 ;;		line 162 in file "fs_menu_controller.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;		None
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;		None
  2084 ;; Return value:  Size  Location     Type
  2085 ;;                  1    wreg      void 
  2086 ;; Registers used:
  2087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2093 ;;      Params:         0       0       0       0       0       0       0
  2094 ;;      Locals:         0       0       0       0       0       0       0
  2095 ;;      Temps:          0       0       0       0       0       0       0
  2096 ;;      Totals:         0       0       0       0       0       0       0
  2097 ;;Total ram usage:        0 bytes
  2098 ;; Hardware stack levels used:    1
  2099 ;; Hardware stack levels required when called:   10
  2100 ;; This function calls:
  2101 ;;		_buttonControlFlags
  2102 ;;		_stateMachine
  2103 ;; This function is called by:
  2104 ;;		_main
  2105 ;; This function uses a non-reentrant model
  2106 ;;
  2107                           
  2108                           	psect	text5
  2109  0054F8                     __ptext5:
  2110                           	callstack 0
  2111  0054F8                     _menuControl:
  2112                           	callstack 20
  2113  0054F8                     
  2114                           ;fs_menu_controller.c: 164:     buttonControlFlags();
  2115  0054F8  ECDD  F022         	call	_buttonControlFlags	;wreg free
  2116  0054FC                     
  2117                           ;fs_menu_controller.c: 165:     stateMachine();
  2118  0054FC  EC4F  F009         	call	_stateMachine	;wreg free
  2119  005500                     
  2120                           ;fs_menu_controller.c: 167:     if (menu_flags.menu_start_flag == 1)
  2121  005500  0100               	movlb	0	; () banked
  2122  005502  A3FD               	btfss	_menu_flags& (0+255),1,b
  2123  005504  EF86  F02A         	goto	u7671
  2124  005508  EF88  F02A         	goto	u7670
  2125  00550C                     u7671:
  2126  00550C  EF92  F02A         	goto	l6155
  2127  005510                     u7670:
  2128  005510                     
  2129                           ; BSR set to: 0
  2130                           ;fs_menu_controller.c: 168:     {;fs_menu_controller.c: 169:         menu_flags.menu_sta
      +                          rt_flag = 0;
  2131  005510  93FD               	bcf	_menu_flags& (0+255),1,b
  2132  005512                     
  2133                           ; BSR set to: 0
  2134                           ;fs_menu_controller.c: 170:         startIsClick = 1;
  2135  005512  0E01               	movlw	1
  2136  005514  0101               	movlb	1	; () banked
  2137  005516  6FA9               	movwf	_startIsClick& (0+255),b
  2138                           
  2139                           ;fs_menu_controller.c: 171:         pauseIsClick = 0;
  2140  005518  0E00               	movlw	0
  2141  00551A  0100               	movlb	0	; () banked
  2142  00551C  6FFF               	movwf	_pauseIsClick& (0+255),b
  2143                           
  2144                           ;fs_menu_controller.c: 172:         stopIsClick = 0;
  2145  00551E  0E00               	movlw	0
  2146  005520  0101               	movlb	1	; () banked
  2147  005522  6FA8               	movwf	_stopIsClick& (0+255),b
  2148  005524                     l6155:
  2149                           
  2150                           ;fs_menu_controller.c: 175:     if (menu_flags.menu_pause_flag == 1)
  2151  005524  0100               	movlb	0	; () banked
  2152  005526  A7FD               	btfss	_menu_flags& (0+255),3,b
  2153  005528  EF98  F02A         	goto	u7681
  2154  00552C  EF9A  F02A         	goto	u7680
  2155  005530                     u7681:
  2156  005530  EFA2  F02A         	goto	l6161
  2157  005534                     u7680:
  2158  005534                     
  2159                           ; BSR set to: 0
  2160                           ;fs_menu_controller.c: 176:     {;fs_menu_controller.c: 177:         menu_flags.menu_pau
      +                          se_flag = 0;
  2161  005534  97FD               	bcf	_menu_flags& (0+255),3,b
  2162  005536                     
  2163                           ; BSR set to: 0
  2164                           ;fs_menu_controller.c: 178:         pauseIsClick = 1;
  2165  005536  0E01               	movlw	1
  2166  005538  6FFF               	movwf	_pauseIsClick& (0+255),b
  2167                           
  2168                           ;fs_menu_controller.c: 179:         startIsClick = 0;
  2169  00553A  0E00               	movlw	0
  2170  00553C  0101               	movlb	1	; () banked
  2171  00553E  6FA9               	movwf	_startIsClick& (0+255),b
  2172                           
  2173                           ;fs_menu_controller.c: 180:         stopIsClick = 0;
  2174  005540  0E00               	movlw	0
  2175  005542  6FA8               	movwf	_stopIsClick& (0+255),b
  2176  005544                     l6161:
  2177                           
  2178                           ;fs_menu_controller.c: 183:     if (menu_flags.menu_stop_flag == 1)
  2179  005544  0100               	movlb	0	; () banked
  2180  005546  A5FD               	btfss	_menu_flags& (0+255),2,b
  2181  005548  EFA8  F02A         	goto	u7691
  2182  00554C  EFAA  F02A         	goto	u7690
  2183  005550                     u7691:
  2184  005550  EFB2  F02A         	goto	l329
  2185  005554                     u7690:
  2186  005554                     
  2187                           ; BSR set to: 0
  2188                           ;fs_menu_controller.c: 184:     {;fs_menu_controller.c: 185:         menu_flags.menu_sto
      +                          p_flag = 0;
  2189  005554  95FD               	bcf	_menu_flags& (0+255),2,b
  2190  005556                     
  2191                           ; BSR set to: 0
  2192                           ;fs_menu_controller.c: 186:         pauseIsClick = 0;
  2193  005556  0E00               	movlw	0
  2194  005558  6FFF               	movwf	_pauseIsClick& (0+255),b
  2195                           
  2196                           ;fs_menu_controller.c: 187:         startIsClick = 0;
  2197  00555A  0E00               	movlw	0
  2198  00555C  0101               	movlb	1	; () banked
  2199  00555E  6FA9               	movwf	_startIsClick& (0+255),b
  2200                           
  2201                           ;fs_menu_controller.c: 188:         stopIsClick = 1;
  2202  005560  0E01               	movlw	1
  2203  005562  6FA8               	movwf	_stopIsClick& (0+255),b
  2204  005564                     l329:
  2205  005564  0012               	return		;funcret
  2206  005566                     __end_of_menuControl:
  2207                           	callstack 0
  2208                           
  2209 ;; *************** function _stateMachine *****************
  2210 ;; Defined at:
  2211 ;;		line 199 in file "fs_menu_controller.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;		None
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;  textCursor2    16  131[BANK0 ] unsigned char [16]
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  1    wreg      void 
  2218 ;; Registers used:
  2219 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/0
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2225 ;;      Params:         0       0       0       0       0       0       0
  2226 ;;      Locals:         0      16       0       0       0       0       0
  2227 ;;      Temps:          0       2       0       0       0       0       0
  2228 ;;      Totals:         0      18       0       0       0       0       0
  2229 ;;Total ram usage:       18 bytes
  2230 ;; Hardware stack levels used:    1
  2231 ;; Hardware stack levels required when called:    9
  2232 ;; This function calls:
  2233 ;;		_Lcd_Set_Cursor
  2234 ;;		_Lcd_Write_String
  2235 ;;		___fladd
  2236 ;;		___flge
  2237 ;;		___flsub
  2238 ;;		_eepromWrite
  2239 ;;		_sprintf
  2240 ;;		_startMotor
  2241 ;;		_stopMotor
  2242 ;; This function is called by:
  2243 ;;		_menuControl
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           	psect	text6
  2248  00129E                     __ptext6:
  2249                           	callstack 0
  2250  00129E                     _stateMachine:
  2251                           	callstack 20
  2252  00129E                     
  2253                           ;fs_menu_controller.c: 201:     char textCursor2[16] = {0};
  2254  00129E  EE20  F0E3         	lfsr	2,stateMachine@textCursor2
  2255  0012A2  0E0F               	movlw	15
  2256  0012A4                     u7101:
  2257  0012A4  6ADE               	clrf	postinc2,c
  2258  0012A6  06E8               	decf	wreg,f,c
  2259  0012A8  E2FD               	bc	u7101
  2260                           
  2261                           ;fs_menu_controller.c: 202:     static uint8_t secretMenuCounter = 0;;fs_menu_controller
      +                          .c: 204:     switch (menu_selected)
  2262  0012AA  EF14  F00E         	goto	l6061
  2263  0012AE                     l5717:
  2264                           
  2265                           ; BSR set to: 0
  2266                           ;fs_menu_controller.c: 208:             Lcd_Set_Cursor(1,1);
  2267  0012AE  0E01               	movlw	1
  2268  0012B0  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2269  0012B2  0E01               	movlw	1
  2270  0012B4  EC1D  F02B         	call	_Lcd_Set_Cursor
  2271  0012B8                     
  2272                           ;fs_menu_controller.c: 209:             Lcd_Write_String("KALAN ZAMAN     ");
  2273  0012B8  0E35               	movlw	low STR_1
  2274  0012BA  6E05               	movwf	Lcd_Write_String@a^0,c
  2275  0012BC  0E06               	movlw	high STR_1
  2276  0012BE  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2277  0012C0  ECC3  F029         	call	_Lcd_Write_String	;wreg free
  2278  0012C4                     
  2279                           ;fs_menu_controller.c: 210:             Lcd_Set_Cursor(2,1);
  2280  0012C4  0E01               	movlw	1
  2281  0012C6  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2282  0012C8  0E02               	movlw	2
  2283  0012CA  EC1D  F02B         	call	_Lcd_Set_Cursor
  2284  0012CE                     
  2285                           ;fs_menu_controller.c: 211:             sprintf(textCursor2,"      %d:%d   ",timer_value
      +                          .remainingMinute,timer_value.remainingSecond);
  2286  0012CE  0EE3               	movlw	low stateMachine@textCursor2
  2287  0012D0  0100               	movlb	0	; () banked
  2288  0012D2  6FCF               	movwf	sprintf@s& (0+255),b
  2289  0012D4  0E00               	movlw	high stateMachine@textCursor2
  2290  0012D6  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2291  0012D8  0E9A               	movlw	low STR_2
  2292  0012DA  6FD1               	movwf	sprintf@fmt& (0+255),b
  2293  0012DC  0E06               	movlw	high STR_2
  2294  0012DE  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2295  0012E0  C0F9  F0D3         	movff	_timer_value+6,?_sprintf+4
  2296  0012E4  C0FA  F0D4         	movff	_timer_value+7,?_sprintf+5
  2297  0012E8  C0F7  F0D5         	movff	_timer_value+4,?_sprintf+6
  2298  0012EC  C0F8  F0D6         	movff	_timer_value+5,?_sprintf+7
  2299  0012F0  EC05  F02C         	call	_sprintf	;wreg free
  2300  0012F4                     
  2301                           ;fs_menu_controller.c: 212:             Lcd_Write_String(textCursor2);
  2302  0012F4  0EE3               	movlw	low stateMachine@textCursor2
  2303  0012F6  6E05               	movwf	Lcd_Write_String@a^0,c
  2304  0012F8  0E00               	movlw	high stateMachine@textCursor2
  2305  0012FA  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2306  0012FC  ECC3  F029         	call	_Lcd_Write_String	;wreg free
  2307  001300                     
  2308                           ;fs_menu_controller.c: 214:             if ( timer_value.menu_login_delay == 100)
  2309  001300  0E64               	movlw	100
  2310  001302  0100               	movlb	0	; () banked
  2311  001304  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  2312  001306  A4D8               	btfss	status,2,c
  2313  001308  EF88  F009         	goto	u7111
  2314  00130C  EF8A  F009         	goto	u7110
  2315  001310                     u7111:
  2316  001310  EF8F  F009         	goto	l5731
  2317  001314                     u7110:
  2318  001314                     
  2319                           ; BSR set to: 0
  2320                           ;fs_menu_controller.c: 215:             {;fs_menu_controller.c: 216:                 tim
      +                          er_value.menu_login_delay = 0;
  2321  001314  0E00               	movlw	0
  2322  001316  6FFB               	movwf	(_timer_value+8)& (0+255),b
  2323                           
  2324                           ;fs_menu_controller.c: 217:                 menu_selected = DRIVER_TIME_SETTING;
  2325  001318  0E01               	movlw	1
  2326  00131A  0101               	movlb	1	; () banked
  2327  00131C  6FA7               	movwf	_menu_selected& (0+255),b
  2328  00131E                     l5731:
  2329                           
  2330                           ;fs_menu_controller.c: 220:             if ((timer_value.remainingMinute <= 0) && (timer
      +                          _value.remainingSecond == 0) )
  2331  00131E  0100               	movlb	0	; () banked
  2332  001320  BFFA               	btfsc	(_timer_value+7)& (0+255),7,b
  2333  001322  EF9D  F009         	goto	u7120
  2334  001326  51FA               	movf	(_timer_value+7)& (0+255),w,b
  2335  001328  E106               	bnz	u7121
  2336  00132A  05F9               	decf	(_timer_value+6)& (0+255),w,b
  2337  00132C  B0D8               	btfsc	status,0,c
  2338  00132E  EF9B  F009         	goto	u7121
  2339  001332  EF9D  F009         	goto	u7120
  2340  001336                     u7121:
  2341  001336  EFAE  F009         	goto	l339
  2342  00133A                     u7120:
  2343  00133A                     
  2344                           ; BSR set to: 0
  2345  00133A  51F7               	movf	(_timer_value+4)& (0+255),w,b
  2346  00133C  11F8               	iorwf	(_timer_value+5)& (0+255),w,b
  2347  00133E  A4D8               	btfss	status,2,c
  2348  001340  EFA4  F009         	goto	u7131
  2349  001344  EFA6  F009         	goto	u7130
  2350  001348                     u7131:
  2351  001348  EFAE  F009         	goto	l339
  2352  00134C                     u7130:
  2353  00134C                     
  2354                           ; BSR set to: 0
  2355                           ;fs_menu_controller.c: 221:             {;fs_menu_controller.c: 222:                 men
      +                          u_selected = STOP_MENU;
  2356  00134C  0E04               	movlw	4
  2357  00134E  0101               	movlb	1	; () banked
  2358  001350  6FA7               	movwf	_menu_selected& (0+255),b
  2359                           
  2360                           ;fs_menu_controller.c: 223:                 timer_value.minute = 0;
  2361  001352  0E00               	movlw	0
  2362  001354  0100               	movlb	0	; () banked
  2363  001356  6FF6               	movwf	(_timer_value+3)& (0+255),b
  2364  001358  0E00               	movlw	0
  2365  00135A  6FF5               	movwf	(_timer_value+2)& (0+255),b
  2366  00135C                     l339:
  2367                           
  2368                           ; BSR set to: 0
  2369                           ;fs_menu_controller.c: 226:             if ( (startIsClick == 0) && (pauseIsClick == 1) 
      +                          && (stopIsClick == 0) && (menu_selected == MAIN_MENU))
  2370  00135C  0101               	movlb	1	; () banked
  2371  00135E  51A9               	movf	_startIsClick& (0+255),w,b
  2372  001360  A4D8               	btfss	status,2,c
  2373  001362  EFB5  F009         	goto	u7141
  2374  001366  EFB7  F009         	goto	u7140
  2375  00136A                     u7141:
  2376  00136A  EFD6  F009         	goto	l340
  2377  00136E                     u7140:
  2378  00136E                     
  2379                           ; BSR set to: 1
  2380  00136E  0100               	movlb	0	; () banked
  2381  001370  05FF               	decf	_pauseIsClick& (0+255),w,b
  2382  001372  A4D8               	btfss	status,2,c
  2383  001374  EFBE  F009         	goto	u7151
  2384  001378  EFC0  F009         	goto	u7150
  2385  00137C                     u7151:
  2386  00137C  EFD6  F009         	goto	l340
  2387  001380                     u7150:
  2388  001380                     
  2389                           ; BSR set to: 0
  2390  001380  0101               	movlb	1	; () banked
  2391  001382  51A8               	movf	_stopIsClick& (0+255),w,b
  2392  001384  A4D8               	btfss	status,2,c
  2393  001386  EFC7  F009         	goto	u7161
  2394  00138A  EFC9  F009         	goto	u7160
  2395  00138E                     u7161:
  2396  00138E  EFD6  F009         	goto	l340
  2397  001392                     u7160:
  2398  001392                     
  2399                           ; BSR set to: 1
  2400  001392  51A7               	movf	_menu_selected& (0+255),w,b
  2401  001394  A4D8               	btfss	status,2,c
  2402  001396  EFCF  F009         	goto	u7171
  2403  00139A  EFD1  F009         	goto	u7170
  2404  00139E                     u7171:
  2405  00139E  EFD6  F009         	goto	l340
  2406  0013A2                     u7170:
  2407  0013A2                     
  2408                           ; BSR set to: 1
  2409                           ;fs_menu_controller.c: 227:             {;fs_menu_controller.c: 228:                 men
      +                          u_selected = PAUSE_MENU;
  2410  0013A2  0E06               	movlw	6
  2411  0013A4  6FA7               	movwf	_menu_selected& (0+255),b
  2412  0013A6                     
  2413                           ; BSR set to: 1
  2414                           ;fs_menu_controller.c: 229:                 LATDbits.LATD5 = 0;
  2415  0013A6  9A8C               	bcf	140,5,c	;volatile
  2416  0013A8                     
  2417                           ; BSR set to: 1
  2418                           ;fs_menu_controller.c: 230:                 LATCbits.LATC5 = 0;
  2419  0013A8  9A8B               	bcf	139,5,c	;volatile
  2420  0013AA                     
  2421                           ; BSR set to: 1
  2422                           ;fs_menu_controller.c: 231:                 LATCbits.LATC4 = 0;
  2423  0013AA  988B               	bcf	139,4,c	;volatile
  2424  0013AC                     l340:
  2425                           
  2426                           ;fs_menu_controller.c: 234:             if ( (startIsClick == 0) && (pauseIsClick == 0) 
      +                          && (stopIsClick == 1) && (menu_selected == MAIN_MENU) )
  2427  0013AC  0101               	movlb	1	; () banked
  2428  0013AE  51A9               	movf	_startIsClick& (0+255),w,b
  2429  0013B0  A4D8               	btfss	status,2,c
  2430  0013B2  EFDD  F009         	goto	u7181
  2431  0013B6  EFDF  F009         	goto	u7180
  2432  0013BA                     u7181:
  2433  0013BA  EF0C  F00A         	goto	l5767
  2434  0013BE                     u7180:
  2435  0013BE                     
  2436                           ; BSR set to: 1
  2437  0013BE  0100               	movlb	0	; () banked
  2438  0013C0  51FF               	movf	_pauseIsClick& (0+255),w,b
  2439  0013C2  A4D8               	btfss	status,2,c
  2440  0013C4  EFE6  F009         	goto	u7191
  2441  0013C8  EFE8  F009         	goto	u7190
  2442  0013CC                     u7191:
  2443  0013CC  EF0C  F00A         	goto	l5767
  2444  0013D0                     u7190:
  2445  0013D0                     
  2446                           ; BSR set to: 0
  2447  0013D0  0101               	movlb	1	; () banked
  2448  0013D2  05A8               	decf	_stopIsClick& (0+255),w,b
  2449  0013D4  A4D8               	btfss	status,2,c
  2450  0013D6  EFEF  F009         	goto	u7201
  2451  0013DA  EFF1  F009         	goto	u7200
  2452  0013DE                     u7201:
  2453  0013DE  EF0C  F00A         	goto	l5767
  2454  0013E2                     u7200:
  2455  0013E2                     
  2456                           ; BSR set to: 1
  2457  0013E2  51A7               	movf	_menu_selected& (0+255),w,b
  2458  0013E4  A4D8               	btfss	status,2,c
  2459  0013E6  EFF7  F009         	goto	u7211
  2460  0013EA  EFF9  F009         	goto	u7210
  2461  0013EE                     u7211:
  2462  0013EE  EF0C  F00A         	goto	l5767
  2463  0013F2                     u7210:
  2464  0013F2                     
  2465                           ; BSR set to: 1
  2466                           ;fs_menu_controller.c: 235:             {;fs_menu_controller.c: 236:                  ti
      +                          mer_value.remainingMinute = menu_value.driver_time;
  2467  0013F2  C19B  F0F9         	movff	_menu_value,_timer_value+6
  2468  0013F6  0100               	movlb	0	; () banked
  2469  0013F8  6BFA               	clrf	(_timer_value+7)& (0+255),b
  2470  0013FA                     
  2471                           ; BSR set to: 0
  2472                           ;fs_menu_controller.c: 237:                  timer_value.remainingSecond = 0;
  2473  0013FA  0E00               	movlw	0
  2474  0013FC  6FF8               	movwf	(_timer_value+5)& (0+255),b
  2475  0013FE  0E00               	movlw	0
  2476  001400  6FF7               	movwf	(_timer_value+4)& (0+255),b
  2477                           
  2478                           ;fs_menu_controller.c: 238:                  timer_value.second = 0;
  2479  001402  0E00               	movlw	0
  2480  001404  6FF4               	movwf	(_timer_value+1)& (0+255),b
  2481  001406  0E00               	movlw	0
  2482  001408  6FF3               	movwf	_timer_value& (0+255),b
  2483                           
  2484                           ;fs_menu_controller.c: 239:                  timer_value.minute = 0;
  2485  00140A  0E00               	movlw	0
  2486  00140C  6FF6               	movwf	(_timer_value+3)& (0+255),b
  2487  00140E  0E00               	movlw	0
  2488  001410  6FF5               	movwf	(_timer_value+2)& (0+255),b
  2489  001412                     
  2490                           ; BSR set to: 0
  2491                           ;fs_menu_controller.c: 240:                  LATDbits.LATD5 = 0;
  2492  001412  9A8C               	bcf	140,5,c	;volatile
  2493  001414                     
  2494                           ; BSR set to: 0
  2495                           ;fs_menu_controller.c: 241:                  LATCbits.LATC5 = 0;
  2496  001414  9A8B               	bcf	139,5,c	;volatile
  2497  001416                     
  2498                           ; BSR set to: 0
  2499                           ;fs_menu_controller.c: 242:                  LATCbits.LATC4 = 0;
  2500  001416  988B               	bcf	139,4,c	;volatile
  2501  001418                     l5767:
  2502                           
  2503                           ;fs_menu_controller.c: 245:             if ( (startIsClick == 1) && (pauseIsClick == 0) 
      +                          && (stopIsClick == 0) )
  2504  001418  0101               	movlb	1	; () banked
  2505  00141A  05A9               	decf	_startIsClick& (0+255),w,b
  2506  00141C  A4D8               	btfss	status,2,c
  2507  00141E  EF13  F00A         	goto	u7221
  2508  001422  EF15  F00A         	goto	u7220
  2509  001426                     u7221:
  2510  001426  EF47  F00E         	goto	l379
  2511  00142A                     u7220:
  2512  00142A                     
  2513                           ; BSR set to: 1
  2514  00142A  0100               	movlb	0	; () banked
  2515  00142C  51FF               	movf	_pauseIsClick& (0+255),w,b
  2516  00142E  A4D8               	btfss	status,2,c
  2517  001430  EF1C  F00A         	goto	u7231
  2518  001434  EF1E  F00A         	goto	u7230
  2519  001438                     u7231:
  2520  001438  EF47  F00E         	goto	l379
  2521  00143C                     u7230:
  2522  00143C                     
  2523                           ; BSR set to: 0
  2524  00143C  0101               	movlb	1	; () banked
  2525  00143E  51A8               	movf	_stopIsClick& (0+255),w,b
  2526  001440  A4D8               	btfss	status,2,c
  2527  001442  EF25  F00A         	goto	u7241
  2528  001446  EF27  F00A         	goto	u7240
  2529  00144A                     u7241:
  2530  00144A  EF47  F00E         	goto	l379
  2531  00144E                     u7240:
  2532  00144E                     
  2533                           ; BSR set to: 1
  2534                           ;fs_menu_controller.c: 246:             {;fs_menu_controller.c: 247:                 sta
      +                          rtMotor();
  2535  00144E  EC8A  F02D         	call	_startMotor	;wreg free
  2536  001452                     
  2537                           ;fs_menu_controller.c: 248:                 LATDbits.LATD5 = 1;
  2538  001452  8A8C               	bsf	140,5,c	;volatile
  2539  001454                     
  2540                           ;fs_menu_controller.c: 249:                 LATCbits.LATC5 = 1;
  2541  001454  8A8B               	bsf	139,5,c	;volatile
  2542  001456                     
  2543                           ;fs_menu_controller.c: 250:                 LATCbits.LATC4 = 1;
  2544  001456  888B               	bsf	139,4,c	;volatile
  2545  001458  EF47  F00E         	goto	l379
  2546  00145C                     l344:
  2547                           
  2548                           ; BSR set to: 0
  2549                           ;fs_menu_controller.c: 258:             if (menu_flags.menu_input_flag == 1)
  2550  00145C  A1FD               	btfss	_menu_flags& (0+255),0,b
  2551  00145E  EF33  F00A         	goto	u7251
  2552  001462  EF35  F00A         	goto	u7250
  2553  001466                     u7251:
  2554  001466  EF39  F00A         	goto	l5785
  2555  00146A                     u7250:
  2556  00146A                     
  2557                           ; BSR set to: 0
  2558                           ;fs_menu_controller.c: 259:             {;fs_menu_controller.c: 260:                 men
      +                          u_flags.menu_input_flag = 0;
  2559  00146A  91FD               	bcf	_menu_flags& (0+255),0,b
  2560  00146C                     
  2561                           ; BSR set to: 0
  2562                           ;fs_menu_controller.c: 261:                 menu_selected = STOP_TIME_SETTING;
  2563  00146C  0E02               	movlw	2
  2564  00146E  0101               	movlb	1	; () banked
  2565  001470  6FA7               	movwf	_menu_selected& (0+255),b
  2566  001472                     l5785:
  2567                           
  2568                           ;fs_menu_controller.c: 264:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_value.driver_time < 30))
  2569  001472  0100               	movlb	0	; () banked
  2570  001474  A9FD               	btfss	_menu_flags& (0+255),4,b
  2571  001476  EF3F  F00A         	goto	u7261
  2572  00147A  EF41  F00A         	goto	u7260
  2573  00147E                     u7261:
  2574  00147E  EF63  F00A         	goto	l5803
  2575  001482                     u7260:
  2576  001482                     
  2577                           ; BSR set to: 0
  2578  001482  0E1E               	movlw	30
  2579  001484  0101               	movlb	1	; () banked
  2580  001486  619B               	cpfslt	_menu_value& (0+255),b
  2581  001488  EF48  F00A         	goto	u7271
  2582  00148C  EF4A  F00A         	goto	u7270
  2583  001490                     u7271:
  2584  001490  EF63  F00A         	goto	l5803
  2585  001494                     u7270:
  2586  001494                     
  2587                           ; BSR set to: 1
  2588                           ;fs_menu_controller.c: 265:             {;fs_menu_controller.c: 266:                 men
      +                          u_flags.menu_increase_flag = 0;
  2589  001494  0100               	movlb	0	; () banked
  2590  001496  99FD               	bcf	_menu_flags& (0+255),4,b
  2591  001498                     
  2592                           ; BSR set to: 0
  2593                           ;fs_menu_controller.c: 267:                 menu_value.driver_time++;
  2594  001498  0101               	movlb	1	; () banked
  2595  00149A  2B9B               	incf	_menu_value& (0+255),f,b
  2596  00149C                     
  2597                           ; BSR set to: 1
  2598                           ;fs_menu_controller.c: 268:                 eepromWrite(0x00,(uint8_t)menu_value.driver_
      +                          time);
  2599  00149C  C19B  F001         	movff	_menu_value,eepromWrite@data
  2600  0014A0  0E00               	movlw	0
  2601  0014A2  ECDA  F02D         	call	_eepromWrite
  2602  0014A6                     
  2603                           ;fs_menu_controller.c: 269:                 timer_value.minute =0 ;
  2604  0014A6  0E00               	movlw	0
  2605  0014A8  0100               	movlb	0	; () banked
  2606  0014AA  6FF6               	movwf	(_timer_value+3)& (0+255),b
  2607  0014AC  0E00               	movlw	0
  2608  0014AE  6FF5               	movwf	(_timer_value+2)& (0+255),b
  2609  0014B0                     
  2610                           ; BSR set to: 0
  2611                           ;fs_menu_controller.c: 270:                 timer_value.second = 0;
  2612  0014B0  0E00               	movlw	0
  2613  0014B2  6FF4               	movwf	(_timer_value+1)& (0+255),b
  2614  0014B4  0E00               	movlw	0
  2615  0014B6  6FF3               	movwf	_timer_value& (0+255),b
  2616  0014B8                     
  2617                           ; BSR set to: 0
  2618                           ;fs_menu_controller.c: 271:                 timer_value.remainingSecond = 0;
  2619  0014B8  0E00               	movlw	0
  2620  0014BA  6FF8               	movwf	(_timer_value+5)& (0+255),b
  2621  0014BC  0E00               	movlw	0
  2622  0014BE  6FF7               	movwf	(_timer_value+4)& (0+255),b
  2623  0014C0                     
  2624                           ; BSR set to: 0
  2625                           ;fs_menu_controller.c: 272:                 timer_value.remainingMinute = menu_value.dri
      +                          ver_time;
  2626  0014C0  C19B  F0F9         	movff	_menu_value,_timer_value+6
  2627  0014C4  6BFA               	clrf	(_timer_value+7)& (0+255),b
  2628  0014C6                     l5803:
  2629                           
  2630                           ;fs_menu_controller.c: 275:             if ((menu_flags.menu_decrease_flag == 1) && (men
      +                          u_value.driver_time > 1))
  2631  0014C6  0100               	movlb	0	; () banked
  2632  0014C8  ABFD               	btfss	_menu_flags& (0+255),5,b
  2633  0014CA  EF69  F00A         	goto	u7281
  2634  0014CE  EF6B  F00A         	goto	u7280
  2635  0014D2                     u7281:
  2636  0014D2  EF8D  F00A         	goto	l5821
  2637  0014D6                     u7280:
  2638  0014D6                     
  2639                           ; BSR set to: 0
  2640  0014D6  0E01               	movlw	1
  2641  0014D8  0101               	movlb	1	; () banked
  2642  0014DA  659B               	cpfsgt	_menu_value& (0+255),b
  2643  0014DC  EF72  F00A         	goto	u7291
  2644  0014E0  EF74  F00A         	goto	u7290
  2645  0014E4                     u7291:
  2646  0014E4  EF8D  F00A         	goto	l5821
  2647  0014E8                     u7290:
  2648  0014E8                     
  2649                           ; BSR set to: 1
  2650                           ;fs_menu_controller.c: 276:             {;fs_menu_controller.c: 277:                  me
      +                          nu_flags.menu_decrease_flag = 0;
  2651  0014E8  0100               	movlb	0	; () banked
  2652  0014EA  9BFD               	bcf	_menu_flags& (0+255),5,b
  2653  0014EC                     
  2654                           ; BSR set to: 0
  2655                           ;fs_menu_controller.c: 278:                  menu_value.driver_time--;
  2656  0014EC  0101               	movlb	1	; () banked
  2657  0014EE  079B               	decf	_menu_value& (0+255),f,b
  2658  0014F0                     
  2659                           ; BSR set to: 1
  2660                           ;fs_menu_controller.c: 279:                  eepromWrite(0x00,(uint8_t)menu_value.driver
      +                          _time);
  2661  0014F0  C19B  F001         	movff	_menu_value,eepromWrite@data
  2662  0014F4  0E00               	movlw	0
  2663  0014F6  ECDA  F02D         	call	_eepromWrite
  2664  0014FA                     
  2665                           ;fs_menu_controller.c: 280:                  timer_value.minute =0 ;
  2666  0014FA  0E00               	movlw	0
  2667  0014FC  0100               	movlb	0	; () banked
  2668  0014FE  6FF6               	movwf	(_timer_value+3)& (0+255),b
  2669  001500  0E00               	movlw	0
  2670  001502  6FF5               	movwf	(_timer_value+2)& (0+255),b
  2671  001504                     
  2672                           ; BSR set to: 0
  2673                           ;fs_menu_controller.c: 281:                  timer_value.second = 0;
  2674  001504  0E00               	movlw	0
  2675  001506  6FF4               	movwf	(_timer_value+1)& (0+255),b
  2676  001508  0E00               	movlw	0
  2677  00150A  6FF3               	movwf	_timer_value& (0+255),b
  2678  00150C                     
  2679                           ; BSR set to: 0
  2680                           ;fs_menu_controller.c: 282:                  timer_value.remainingSecond = 0;
  2681  00150C  0E00               	movlw	0
  2682  00150E  6FF8               	movwf	(_timer_value+5)& (0+255),b
  2683  001510  0E00               	movlw	0
  2684  001512  6FF7               	movwf	(_timer_value+4)& (0+255),b
  2685  001514                     
  2686                           ; BSR set to: 0
  2687                           ;fs_menu_controller.c: 283:                  timer_value.remainingMinute = menu_value.dr
      +                          iver_time;
  2688  001514  C19B  F0F9         	movff	_menu_value,_timer_value+6
  2689  001518  6BFA               	clrf	(_timer_value+7)& (0+255),b
  2690  00151A                     l5821:
  2691                           
  2692                           ;fs_menu_controller.c: 287:             Lcd_Set_Cursor(1,1);
  2693  00151A  0E01               	movlw	1
  2694  00151C  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2695  00151E  0E01               	movlw	1
  2696  001520  EC1D  F02B         	call	_Lcd_Set_Cursor
  2697  001524                     
  2698                           ;fs_menu_controller.c: 288:             Lcd_Write_String("HAREKT ZAMANI dk");
  2699  001524  0E68               	movlw	low STR_3
  2700  001526  6E05               	movwf	Lcd_Write_String@a^0,c
  2701  001528  0E06               	movlw	high STR_3
  2702  00152A  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2703  00152C  ECC3  F029         	call	_Lcd_Write_String	;wreg free
  2704  001530                     
  2705                           ;fs_menu_controller.c: 289:             Lcd_Set_Cursor(2,1);
  2706  001530  0E01               	movlw	1
  2707  001532  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2708  001534  0E02               	movlw	2
  2709  001536  EC1D  F02B         	call	_Lcd_Set_Cursor
  2710  00153A                     
  2711                           ;fs_menu_controller.c: 290:             sprintf(textCursor2,"%d               ",menu_val
      +                          ue.driver_time);
  2712  00153A  0EE3               	movlw	low stateMachine@textCursor2
  2713  00153C  0100               	movlb	0	; () banked
  2714  00153E  6FCF               	movwf	sprintf@s& (0+255),b
  2715  001540  0E00               	movlw	high stateMachine@textCursor2
  2716  001542  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2717  001544  0E01               	movlw	low STR_4
  2718  001546  6FD1               	movwf	sprintf@fmt& (0+255),b
  2719  001548  0E06               	movlw	high STR_4
  2720  00154A  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2721  00154C  C19B  F0D3         	movff	_menu_value,?_sprintf+4
  2722  001550  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  2723  001552  EC05  F02C         	call	_sprintf	;wreg free
  2724  001556                     
  2725                           ;fs_menu_controller.c: 291:             Lcd_Write_String(textCursor2);
  2726  001556  0EE3               	movlw	low stateMachine@textCursor2
  2727  001558  6E05               	movwf	Lcd_Write_String@a^0,c
  2728  00155A  0E00               	movlw	high stateMachine@textCursor2
  2729  00155C  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2730  00155E  ECC3  F029         	call	_Lcd_Write_String	;wreg free
  2731  001562                     
  2732                           ;fs_menu_controller.c: 293:             if(timer_value.menu_login_delay == 100)
  2733  001562  0E64               	movlw	100
  2734  001564  0100               	movlb	0	; () banked
  2735  001566  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  2736  001568  A4D8               	btfss	status,2,c
  2737  00156A  EFB9  F00A         	goto	u7301
  2738  00156E  EFBB  F00A         	goto	u7300
  2739  001572                     u7301:
  2740  001572  EFC0  F00A         	goto	l5835
  2741  001576                     u7300:
  2742  001576                     l5833:
  2743                           
  2744                           ; BSR set to: 0
  2745                           ;fs_menu_controller.c: 294:             {;fs_menu_controller.c: 295:                 tim
      +                          er_value.menu_login_delay = 0;
  2746  001576  0E00               	movlw	0
  2747  001578  6FFB               	movwf	(_timer_value+8)& (0+255),b
  2748                           
  2749                           ;fs_menu_controller.c: 296:                 menu_selected = PAUSE_MENU;
  2750  00157A  0E06               	movlw	6
  2751  00157C  0101               	movlb	1	; () banked
  2752  00157E  6FA7               	movwf	_menu_selected& (0+255),b
  2753  001580                     l5835:
  2754                           
  2755                           ;fs_menu_controller.c: 299:         stopMotor();
  2756  001580  ECFC  F02C         	call	_stopMotor	;wreg free
  2757                           
  2758                           ;fs_menu_controller.c: 301:         break;
  2759  001584  EF47  F00E         	goto	l379
  2760  001588                     l5837:
  2761                           
  2762                           ; BSR set to: 0
  2763                           ;fs_menu_controller.c: 305:             stopMotor();
  2764  001588  ECFC  F02C         	call	_stopMotor	;wreg free
  2765  00158C                     
  2766                           ;fs_menu_controller.c: 307:             if (menu_flags.menu_input_flag == 1)
  2767  00158C  0100               	movlb	0	; () banked
  2768  00158E  A1FD               	btfss	_menu_flags& (0+255),0,b
  2769  001590  EFCC  F00A         	goto	u7311
  2770  001594  EFCE  F00A         	goto	u7310
  2771  001598                     u7311:
  2772  001598  EFD2  F00A         	goto	l5845
  2773  00159C                     u7310:
  2774  00159C                     
  2775                           ; BSR set to: 0
  2776                           ;fs_menu_controller.c: 308:             {;fs_menu_controller.c: 309:                 men
      +                          u_flags.menu_input_flag = 0;
  2777  00159C  91FD               	bcf	_menu_flags& (0+255),0,b
  2778  00159E                     
  2779                           ; BSR set to: 0
  2780                           ;fs_menu_controller.c: 310:                 menu_selected = SPEED_LIMIT_SETTING;
  2781  00159E  0E03               	movlw	3
  2782  0015A0  0101               	movlb	1	; () banked
  2783  0015A2  6FA7               	movwf	_menu_selected& (0+255),b
  2784  0015A4                     l5845:
  2785                           
  2786                           ;fs_menu_controller.c: 313:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_value.stop_time < 250))
  2787  0015A4  0100               	movlb	0	; () banked
  2788  0015A6  A9FD               	btfss	_menu_flags& (0+255),4,b
  2789  0015A8  EFD8  F00A         	goto	u7321
  2790  0015AC  EFDA  F00A         	goto	u7320
  2791  0015B0                     u7321:
  2792  0015B0  EFED  F00A         	goto	l5855
  2793  0015B4                     u7320:
  2794  0015B4                     
  2795                           ; BSR set to: 0
  2796  0015B4  0EFA               	movlw	250
  2797  0015B6  0101               	movlb	1	; () banked
  2798  0015B8  619C               	cpfslt	(_menu_value+1)& (0+255),b
  2799  0015BA  EFE1  F00A         	goto	u7331
  2800  0015BE  EFE3  F00A         	goto	u7330
  2801  0015C2                     u7331:
  2802  0015C2  EFED  F00A         	goto	l5855
  2803  0015C6                     u7330:
  2804  0015C6                     
  2805                           ; BSR set to: 1
  2806                           ;fs_menu_controller.c: 314:             {;fs_menu_controller.c: 315:                 men
      +                          u_flags.menu_increase_flag = 0;
  2807  0015C6  0100               	movlb	0	; () banked
  2808  0015C8  99FD               	bcf	_menu_flags& (0+255),4,b
  2809  0015CA                     
  2810                           ; BSR set to: 0
  2811                           ;fs_menu_controller.c: 316:                 menu_value.stop_time += 10;
  2812  0015CA  0E0A               	movlw	10
  2813  0015CC  0101               	movlb	1	; () banked
  2814  0015CE  279C               	addwf	(_menu_value+1)& (0+255),f,b
  2815  0015D0                     
  2816                           ; BSR set to: 1
  2817                           ;fs_menu_controller.c: 317:                 eepromWrite(0x01,(uint8_t)menu_value.stop_ti
      +                          me);
  2818  0015D0  C19C  F001         	movff	_menu_value+1,eepromWrite@data
  2819  0015D4  0E01               	movlw	1
  2820  0015D6  ECDA  F02D         	call	_eepromWrite
  2821  0015DA                     l5855:
  2822                           
  2823                           ;fs_menu_controller.c: 320:             if ((menu_flags.menu_decrease_flag == 1) && (men
      +                          u_value.stop_time > 10))
  2824  0015DA  0100               	movlb	0	; () banked
  2825  0015DC  ABFD               	btfss	_menu_flags& (0+255),5,b
  2826  0015DE  EFF3  F00A         	goto	u7341
  2827  0015E2  EFF5  F00A         	goto	u7340
  2828  0015E6                     u7341:
  2829  0015E6  EF08  F00B         	goto	l5865
  2830  0015EA                     u7340:
  2831  0015EA                     
  2832                           ; BSR set to: 0
  2833  0015EA  0E0A               	movlw	10
  2834  0015EC  0101               	movlb	1	; () banked
  2835  0015EE  659C               	cpfsgt	(_menu_value+1)& (0+255),b
  2836  0015F0  EFFC  F00A         	goto	u7351
  2837  0015F4  EFFE  F00A         	goto	u7350
  2838  0015F8                     u7351:
  2839  0015F8  EF08  F00B         	goto	l5865
  2840  0015FC                     u7350:
  2841  0015FC                     
  2842                           ; BSR set to: 1
  2843                           ;fs_menu_controller.c: 321:             {;fs_menu_controller.c: 322:                  me
      +                          nu_flags.menu_decrease_flag = 0;
  2844  0015FC  0100               	movlb	0	; () banked
  2845  0015FE  9BFD               	bcf	_menu_flags& (0+255),5,b
  2846  001600                     
  2847                           ; BSR set to: 0
  2848                           ;fs_menu_controller.c: 323:                  menu_value.stop_time -= 10;
  2849  001600  0E0A               	movlw	10
  2850  001602  0101               	movlb	1	; () banked
  2851  001604  5F9C               	subwf	(_menu_value+1)& (0+255),f,b
  2852  001606                     
  2853                           ; BSR set to: 1
  2854                           ;fs_menu_controller.c: 324:                  eepromWrite(0x01,(uint8_t)menu_value.stop_t
      +                          ime);
  2855  001606  C19C  F001         	movff	_menu_value+1,eepromWrite@data
  2856  00160A  0E01               	movlw	1
  2857  00160C  ECDA  F02D         	call	_eepromWrite
  2858  001610                     l5865:
  2859                           
  2860                           ;fs_menu_controller.c: 326:             Lcd_Set_Cursor(1,1);
  2861  001610  0E01               	movlw	1
  2862  001612  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2863  001614  0E01               	movlw	1
  2864  001616  EC1D  F02B         	call	_Lcd_Set_Cursor
  2865  00161A                     
  2866                           ;fs_menu_controller.c: 327:             Lcd_Write_String("DURMA ZAMANI  ms");
  2867  00161A  0E79               	movlw	low STR_5
  2868  00161C  6E05               	movwf	Lcd_Write_String@a^0,c
  2869  00161E  0E06               	movlw	high STR_5
  2870  001620  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2871  001622  ECC3  F029         	call	_Lcd_Write_String	;wreg free
  2872  001626                     
  2873                           ;fs_menu_controller.c: 328:             Lcd_Set_Cursor(2,1);
  2874  001626  0E01               	movlw	1
  2875  001628  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2876  00162A  0E02               	movlw	2
  2877  00162C  EC1D  F02B         	call	_Lcd_Set_Cursor
  2878  001630                     
  2879                           ;fs_menu_controller.c: 329:             sprintf(textCursor2,"%d               ",menu_val
      +                          ue.stop_time);
  2880  001630  0EE3               	movlw	low stateMachine@textCursor2
  2881  001632  0100               	movlb	0	; () banked
  2882  001634  6FCF               	movwf	sprintf@s& (0+255),b
  2883  001636  0E00               	movlw	high stateMachine@textCursor2
  2884  001638  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2885  00163A  0E01               	movlw	low STR_4
  2886  00163C  6FD1               	movwf	sprintf@fmt& (0+255),b
  2887  00163E  0E06               	movlw	high STR_4
  2888  001640  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2889  001642  C19C  F0D3         	movff	_menu_value+1,?_sprintf+4
  2890  001646  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  2891  001648  EC05  F02C         	call	_sprintf	;wreg free
  2892  00164C                     
  2893                           ;fs_menu_controller.c: 330:             Lcd_Write_String(textCursor2);
  2894  00164C  0EE3               	movlw	low stateMachine@textCursor2
  2895  00164E  6E05               	movwf	Lcd_Write_String@a^0,c
  2896  001650  0E00               	movlw	high stateMachine@textCursor2
  2897  001652  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2898  001654  ECC3  F029         	call	_Lcd_Write_String	;wreg free
  2899  001658                     
  2900                           ;fs_menu_controller.c: 332:             if(timer_value.menu_login_delay == 100)
  2901  001658  0E64               	movlw	100
  2902  00165A  0100               	movlb	0	; () banked
  2903  00165C  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  2904  00165E  A4D8               	btfss	status,2,c
  2905  001660  EF34  F00B         	goto	u7361
  2906  001664  EF36  F00B         	goto	u7360
  2907  001668                     u7361:
  2908  001668  EF47  F00E         	goto	l379
  2909  00166C                     u7360:
  2910  00166C                     l5877:
  2911                           
  2912                           ; BSR set to: 0
  2913                           ;fs_menu_controller.c: 333:             {;fs_menu_controller.c: 334:                 tim
      +                          er_value.menu_login_delay = 0;
  2914  00166C  0E00               	movlw	0
  2915  00166E  6FFB               	movwf	(_timer_value+8)& (0+255),b
  2916                           
  2917                           ;fs_menu_controller.c: 335:                 menu_selected = PAUSE_MENU;
  2918  001670  0E06               	movlw	6
  2919  001672  0101               	movlb	1	; () banked
  2920  001674  6FA7               	movwf	_menu_selected& (0+255),b
  2921  001676  EF47  F00E         	goto	l379
  2922  00167A                     l354:
  2923                           
  2924                           ; BSR set to: 0
  2925                           ;fs_menu_controller.c: 341:             if (menu_flags.menu_input_flag == 1)
  2926  00167A  A1FD               	btfss	_menu_flags& (0+255),0,b
  2927  00167C  EF42  F00B         	goto	u7371
  2928  001680  EF44  F00B         	goto	u7370
  2929  001684                     u7371:
  2930  001684  EF48  F00B         	goto	l5883
  2931  001688                     u7370:
  2932  001688                     
  2933                           ; BSR set to: 0
  2934                           ;fs_menu_controller.c: 342:             {;fs_menu_controller.c: 343:                 men
      +                          u_flags.menu_input_flag = 0;
  2935  001688  91FD               	bcf	_menu_flags& (0+255),0,b
  2936  00168A                     
  2937                           ; BSR set to: 0
  2938                           ;fs_menu_controller.c: 344:                 menu_selected = DRIVER_TIME_SETTING;
  2939  00168A  0E01               	movlw	1
  2940  00168C  0101               	movlb	1	; () banked
  2941  00168E  6FA7               	movwf	_menu_selected& (0+255),b
  2942  001690                     l5883:
  2943                           
  2944                           ;fs_menu_controller.c: 347:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_value.speed_limit < 5))
  2945  001690  0100               	movlb	0	; () banked
  2946  001692  A9FD               	btfss	_menu_flags& (0+255),4,b
  2947  001694  EF4E  F00B         	goto	u7381
  2948  001698  EF50  F00B         	goto	u7380
  2949  00169C                     u7381:
  2950  00169C  EF62  F00B         	goto	l5893
  2951  0016A0                     u7380:
  2952  0016A0                     
  2953                           ; BSR set to: 0
  2954  0016A0  0E05               	movlw	5
  2955  0016A2  0101               	movlb	1	; () banked
  2956  0016A4  619D               	cpfslt	(_menu_value+2)& (0+255),b
  2957  0016A6  EF57  F00B         	goto	u7391
  2958  0016AA  EF59  F00B         	goto	u7390
  2959  0016AE                     u7391:
  2960  0016AE  EF62  F00B         	goto	l5893
  2961  0016B2                     u7390:
  2962  0016B2                     
  2963                           ; BSR set to: 1
  2964                           ;fs_menu_controller.c: 348:             {;fs_menu_controller.c: 349:                 men
      +                          u_flags.menu_increase_flag = 0;
  2965  0016B2  0100               	movlb	0	; () banked
  2966  0016B4  99FD               	bcf	_menu_flags& (0+255),4,b
  2967  0016B6                     
  2968                           ; BSR set to: 0
  2969                           ;fs_menu_controller.c: 350:                 menu_value.speed_limit += 1;
  2970  0016B6  0101               	movlb	1	; () banked
  2971  0016B8  2B9D               	incf	(_menu_value+2)& (0+255),f,b
  2972  0016BA                     
  2973                           ; BSR set to: 1
  2974                           ;fs_menu_controller.c: 351:                 eepromWrite(0x02,menu_value.speed_limit);
  2975  0016BA  C19D  F001         	movff	_menu_value+2,eepromWrite@data
  2976  0016BE  0E02               	movlw	2
  2977  0016C0  ECDA  F02D         	call	_eepromWrite
  2978  0016C4                     l5893:
  2979                           
  2980                           ;fs_menu_controller.c: 354:             if ((menu_flags.menu_decrease_flag == 1) && (men
      +                          u_value.speed_limit > 1))
  2981  0016C4  0100               	movlb	0	; () banked
  2982  0016C6  ABFD               	btfss	_menu_flags& (0+255),5,b
  2983  0016C8  EF68  F00B         	goto	u7401
  2984  0016CC  EF6A  F00B         	goto	u7400
  2985  0016D0                     u7401:
  2986  0016D0  EF7C  F00B         	goto	l5903
  2987  0016D4                     u7400:
  2988  0016D4                     
  2989                           ; BSR set to: 0
  2990  0016D4  0E01               	movlw	1
  2991  0016D6  0101               	movlb	1	; () banked
  2992  0016D8  659D               	cpfsgt	(_menu_value+2)& (0+255),b
  2993  0016DA  EF71  F00B         	goto	u7411
  2994  0016DE  EF73  F00B         	goto	u7410
  2995  0016E2                     u7411:
  2996  0016E2  EF7C  F00B         	goto	l5903
  2997  0016E6                     u7410:
  2998  0016E6                     
  2999                           ; BSR set to: 1
  3000                           ;fs_menu_controller.c: 355:             {;fs_menu_controller.c: 356:                  me
      +                          nu_flags.menu_decrease_flag = 0;
  3001  0016E6  0100               	movlb	0	; () banked
  3002  0016E8  9BFD               	bcf	_menu_flags& (0+255),5,b
  3003  0016EA                     
  3004                           ; BSR set to: 0
  3005                           ;fs_menu_controller.c: 357:                  menu_value.speed_limit -= 1;
  3006  0016EA  0101               	movlb	1	; () banked
  3007  0016EC  079D               	decf	(_menu_value+2)& (0+255),f,b
  3008  0016EE                     
  3009                           ; BSR set to: 1
  3010                           ;fs_menu_controller.c: 358:                  eepromWrite(0x02,menu_value.speed_limit);
  3011  0016EE  C19D  F001         	movff	_menu_value+2,eepromWrite@data
  3012  0016F2  0E02               	movlw	2
  3013  0016F4  ECDA  F02D         	call	_eepromWrite
  3014  0016F8                     l5903:
  3015                           
  3016                           ;fs_menu_controller.c: 360:             Lcd_Set_Cursor(1,1);
  3017  0016F8  0E01               	movlw	1
  3018  0016FA  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3019  0016FC  0E01               	movlw	1
  3020  0016FE  EC1D  F02B         	call	_Lcd_Set_Cursor
  3021  001702                     
  3022                           ;fs_menu_controller.c: 361:             Lcd_Write_String("HIZ LiMiTi      ");
  3023  001702  0E24               	movlw	low STR_7
  3024  001704  6E05               	movwf	Lcd_Write_String@a^0,c
  3025  001706  0E06               	movlw	high STR_7
  3026  001708  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3027  00170A  ECC3  F029         	call	_Lcd_Write_String	;wreg free
  3028  00170E                     
  3029                           ;fs_menu_controller.c: 362:             Lcd_Set_Cursor(2,1);
  3030  00170E  0E01               	movlw	1
  3031  001710  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3032  001712  0E02               	movlw	2
  3033  001714  EC1D  F02B         	call	_Lcd_Set_Cursor
  3034  001718                     
  3035                           ;fs_menu_controller.c: 363:             sprintf(textCursor2,"%d               ",menu_val
      +                          ue.speed_limit);
  3036  001718  0EE3               	movlw	low stateMachine@textCursor2
  3037  00171A  0100               	movlb	0	; () banked
  3038  00171C  6FCF               	movwf	sprintf@s& (0+255),b
  3039  00171E  0E00               	movlw	high stateMachine@textCursor2
  3040  001720  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3041  001722  0E01               	movlw	low STR_4
  3042  001724  6FD1               	movwf	sprintf@fmt& (0+255),b
  3043  001726  0E06               	movlw	high STR_4
  3044  001728  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3045  00172A  C19D  F0D3         	movff	_menu_value+2,?_sprintf+4
  3046  00172E  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  3047  001730  EC05  F02C         	call	_sprintf	;wreg free
  3048  001734                     
  3049                           ;fs_menu_controller.c: 364:             Lcd_Write_String(textCursor2);
  3050  001734  0EE3               	movlw	low stateMachine@textCursor2
  3051  001736  6E05               	movwf	Lcd_Write_String@a^0,c
  3052  001738  0E00               	movlw	high stateMachine@textCursor2
  3053  00173A  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3054  00173C  ECC3  F029         	call	_Lcd_Write_String	;wreg free
  3055  001740                     
  3056                           ;fs_menu_controller.c: 366:             if(timer_value.menu_login_delay == 100)
  3057  001740  0E64               	movlw	100
  3058  001742  0100               	movlb	0	; () banked
  3059  001744  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  3060  001746  A4D8               	btfss	status,2,c
  3061  001748  EFA8  F00B         	goto	u7421
  3062  00174C  EFAA  F00B         	goto	u7420
  3063  001750                     u7421:
  3064  001750  EFC0  F00A         	goto	l5835
  3065  001754                     u7420:
  3066  001754  EFBB  F00A         	goto	l5833
  3067  001758                     l5919:
  3068                           
  3069                           ; BSR set to: 0
  3070                           ;fs_menu_controller.c: 377:             startIsClick = 0;
  3071  001758  0E00               	movlw	0
  3072  00175A  0101               	movlb	1	; () banked
  3073  00175C  6FA9               	movwf	_startIsClick& (0+255),b
  3074                           
  3075                           ;fs_menu_controller.c: 378:             pauseIsClick = 0;
  3076  00175E  0E00               	movlw	0
  3077  001760  0100               	movlb	0	; () banked
  3078  001762  6FFF               	movwf	_pauseIsClick& (0+255),b
  3079                           
  3080                           ;fs_menu_controller.c: 379:             stopIsClick = 1;
  3081  001764  0E01               	movlw	1
  3082  001766  0101               	movlb	1	; () banked
  3083  001768  6FA8               	movwf	_stopIsClick& (0+255),b
  3084  00176A                     
  3085                           ; BSR set to: 1
  3086                           ;fs_menu_controller.c: 381:             Lcd_Set_Cursor(1,1);
  3087  00176A  0E01               	movlw	1
  3088  00176C  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3089  00176E  0E01               	movlw	1
  3090  001770  EC1D  F02B         	call	_Lcd_Set_Cursor
  3091  001774                     
  3092                           ;fs_menu_controller.c: 382:             Lcd_Write_String("ZAMAN DOLDU     ");
  3093  001774  0E46               	movlw	low STR_9
  3094  001776  6E05               	movwf	Lcd_Write_String@a^0,c
  3095  001778  0E06               	movlw	high STR_9
  3096  00177A  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3097  00177C  ECC3  F029         	call	_Lcd_Write_String	;wreg free
  3098  001780                     
  3099                           ;fs_menu_controller.c: 384:             timer_value.remainingSecond = 0;
  3100  001780  0E00               	movlw	0
  3101  001782  0100               	movlb	0	; () banked
  3102  001784  6FF8               	movwf	(_timer_value+5)& (0+255),b
  3103  001786  0E00               	movlw	0
  3104  001788  6FF7               	movwf	(_timer_value+4)& (0+255),b
  3105  00178A                     
  3106                           ; BSR set to: 0
  3107                           ;fs_menu_controller.c: 385:             timer_value.remainingMinute = 0;
  3108  00178A  0E00               	movlw	0
  3109  00178C  6FFA               	movwf	(_timer_value+7)& (0+255),b
  3110  00178E  0E00               	movlw	0
  3111  001790  6FF9               	movwf	(_timer_value+6)& (0+255),b
  3112  001792                     
  3113                           ; BSR set to: 0
  3114                           ;fs_menu_controller.c: 386:              Lcd_Set_Cursor(2,1);
  3115  001792  0E01               	movlw	1
  3116  001794  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3117  001796  0E02               	movlw	2
  3118  001798  EC1D  F02B         	call	_Lcd_Set_Cursor
  3119  00179C                     
  3120                           ;fs_menu_controller.c: 387:             sprintf(textCursor2,"      %d:%d    ",timer_valu
      +                          e.remainingMinute,timer_value.remainingSecond);
  3121  00179C  0EE3               	movlw	low stateMachine@textCursor2
  3122  00179E  0100               	movlb	0	; () banked
  3123  0017A0  6FCF               	movwf	sprintf@s& (0+255),b
  3124  0017A2  0E00               	movlw	high stateMachine@textCursor2
  3125  0017A4  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3126  0017A6  0E8A               	movlw	low STR_10
  3127  0017A8  6FD1               	movwf	sprintf@fmt& (0+255),b
  3128  0017AA  0E06               	movlw	high STR_10
  3129  0017AC  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3130  0017AE  C0F9  F0D3         	movff	_timer_value+6,?_sprintf+4
  3131  0017B2  C0FA  F0D4         	movff	_timer_value+7,?_sprintf+5
  3132  0017B6  C0F7  F0D5         	movff	_timer_value+4,?_sprintf+6
  3133  0017BA  C0F8  F0D6         	movff	_timer_value+5,?_sprintf+7
  3134  0017BE  EC05  F02C         	call	_sprintf	;wreg free
  3135  0017C2                     
  3136                           ;fs_menu_controller.c: 388:             Lcd_Write_String(textCursor2);
  3137  0017C2  0EE3               	movlw	low stateMachine@textCursor2
  3138  0017C4  6E05               	movwf	Lcd_Write_String@a^0,c
  3139  0017C6  0E00               	movlw	high stateMachine@textCursor2
  3140  0017C8  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3141  0017CA  ECC3  F029         	call	_Lcd_Write_String	;wreg free
  3142  0017CE                     
  3143                           ;fs_menu_controller.c: 390:         if (menu_flags.menu_start_flag == 1)
  3144  0017CE  0100               	movlb	0	; () banked
  3145  0017D0  A3FD               	btfss	_menu_flags& (0+255),1,b
  3146  0017D2  EFED  F00B         	goto	u7431
  3147  0017D6  EFEF  F00B         	goto	u7430
  3148  0017DA                     u7431:
  3149  0017DA  EF04  F00C         	goto	l5941
  3150  0017DE                     u7430:
  3151  0017DE                     
  3152                           ; BSR set to: 0
  3153                           ;fs_menu_controller.c: 391:         {;fs_menu_controller.c: 392:             menu_flags.
      +                          menu_start_flag = 0;
  3154  0017DE  93FD               	bcf	_menu_flags& (0+255),1,b
  3155  0017E0                     
  3156                           ; BSR set to: 0
  3157                           ;fs_menu_controller.c: 393:             menu_selected = START_MENU;
  3158  0017E0  0E05               	movlw	5
  3159  0017E2  0101               	movlb	1	; () banked
  3160  0017E4  6FA7               	movwf	_menu_selected& (0+255),b
  3161                           
  3162                           ;fs_menu_controller.c: 395:             startIsClick = 1;
  3163  0017E6  0E01               	movlw	1
  3164  0017E8  6FA9               	movwf	_startIsClick& (0+255),b
  3165                           
  3166                           ;fs_menu_controller.c: 396:             pauseIsClick = 0;
  3167  0017EA  0E00               	movlw	0
  3168  0017EC  0100               	movlb	0	; () banked
  3169  0017EE  6FFF               	movwf	_pauseIsClick& (0+255),b
  3170                           
  3171                           ;fs_menu_controller.c: 397:             stopIsClick = 0;
  3172  0017F0  0E00               	movlw	0
  3173  0017F2  0101               	movlb	1	; () banked
  3174  0017F4  6FA8               	movwf	_stopIsClick& (0+255),b
  3175                           
  3176                           ;fs_menu_controller.c: 398:             timer_value.second = 0;
  3177  0017F6  0E00               	movlw	0
  3178  0017F8  0100               	movlb	0	; () banked
  3179  0017FA  6FF4               	movwf	(_timer_value+1)& (0+255),b
  3180  0017FC  0E00               	movlw	0
  3181  0017FE  6FF3               	movwf	_timer_value& (0+255),b
  3182                           
  3183                           ;fs_menu_controller.c: 399:             timer_value.minute = 0;
  3184  001800  0E00               	movlw	0
  3185  001802  6FF6               	movwf	(_timer_value+3)& (0+255),b
  3186  001804  0E00               	movlw	0
  3187  001806  6FF5               	movwf	(_timer_value+2)& (0+255),b
  3188  001808                     l5941:
  3189                           
  3190                           ; BSR set to: 0
  3191                           ;fs_menu_controller.c: 402:         if ( timer_value.menu_login_delay == 100)
  3192  001808  0E64               	movlw	100
  3193  00180A  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  3194  00180C  A4D8               	btfss	status,2,c
  3195  00180E  EF0B  F00C         	goto	u7441
  3196  001812  EF0D  F00C         	goto	u7440
  3197  001816                     u7441:
  3198  001816  EFC0  F00A         	goto	l5835
  3199  00181A                     u7440:
  3200  00181A                     
  3201                           ; BSR set to: 0
  3202                           ;fs_menu_controller.c: 403:         {;fs_menu_controller.c: 404:             timer_value
      +                          .menu_login_delay = 0;
  3203  00181A  0E00               	movlw	0
  3204  00181C  6FFB               	movwf	(_timer_value+8)& (0+255),b
  3205                           
  3206                           ;fs_menu_controller.c: 405:             menu_selected = DRIVER_TIME_SETTING;
  3207  00181E  0E01               	movlw	1
  3208  001820  0101               	movlb	1	; () banked
  3209  001822  6FA7               	movwf	_menu_selected& (0+255),b
  3210  001824  EFC0  F00A         	goto	l5835
  3211  001828                     l362:
  3212                           
  3213                           ; BSR set to: 0
  3214                           ;fs_menu_controller.c: 413:             timer_value.remainingMinute = menu_value.driver_
      +                          time;
  3215  001828  C19B  F0F9         	movff	_menu_value,_timer_value+6
  3216  00182C  6BFA               	clrf	(_timer_value+7)& (0+255),b
  3217  00182E                     
  3218                           ; BSR set to: 0
  3219                           ;fs_menu_controller.c: 414:             timer_value.remainingSecond = 0;
  3220  00182E  0E00               	movlw	0
  3221  001830  6FF8               	movwf	(_timer_value+5)& (0+255),b
  3222  001832  0E00               	movlw	0
  3223  001834  6FF7               	movwf	(_timer_value+4)& (0+255),b
  3224                           
  3225                           ;fs_menu_controller.c: 415:             startIsClick = 1;
  3226  001836  0E01               	movlw	1
  3227  001838  0101               	movlb	1	; () banked
  3228  00183A  6FA9               	movwf	_startIsClick& (0+255),b
  3229                           
  3230                           ;fs_menu_controller.c: 416:             stopIsClick = 0;
  3231  00183C  0E00               	movlw	0
  3232  00183E  6FA8               	movwf	_stopIsClick& (0+255),b
  3233                           
  3234                           ;fs_menu_controller.c: 417:             menu_selected = MAIN_MENU;
  3235  001840  0E00               	movlw	0
  3236  001842  6FA7               	movwf	_menu_selected& (0+255),b
  3237                           
  3238                           ;fs_menu_controller.c: 418:         break;
  3239  001844  EF47  F00E         	goto	l379
  3240  001848                     l5949:
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;fs_menu_controller.c: 425:             Lcd_Set_Cursor(1,1);
  3244  001848  0E01               	movlw	1
  3245  00184A  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3246  00184C  0E01               	movlw	1
  3247  00184E  EC1D  F02B         	call	_Lcd_Set_Cursor
  3248  001852                     
  3249                           ;fs_menu_controller.c: 426:             Lcd_Write_String("HAREKET DURDU   ");
  3250  001852  0E57               	movlw	low STR_11
  3251  001854  6E05               	movwf	Lcd_Write_String@a^0,c
  3252  001856  0E06               	movlw	high STR_11
  3253  001858  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3254  00185A  ECC3  F029         	call	_Lcd_Write_String	;wreg free
  3255  00185E                     
  3256                           ;fs_menu_controller.c: 427:             Lcd_Set_Cursor(2,1);
  3257  00185E  0E01               	movlw	1
  3258  001860  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3259  001862  0E02               	movlw	2
  3260  001864  EC1D  F02B         	call	_Lcd_Set_Cursor
  3261  001868                     
  3262                           ;fs_menu_controller.c: 428:             sprintf(textCursor2,"      %d:%d    ",timer_valu
      +                          e.remainingMinute,timer_value.remainingSecond);
  3263  001868  0EE3               	movlw	low stateMachine@textCursor2
  3264  00186A  0100               	movlb	0	; () banked
  3265  00186C  6FCF               	movwf	sprintf@s& (0+255),b
  3266  00186E  0E00               	movlw	high stateMachine@textCursor2
  3267  001870  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3268  001872  0E8A               	movlw	low STR_10
  3269  001874  6FD1               	movwf	sprintf@fmt& (0+255),b
  3270  001876  0E06               	movlw	high STR_10
  3271  001878  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3272  00187A  C0F9  F0D3         	movff	_timer_value+6,?_sprintf+4
  3273  00187E  C0FA  F0D4         	movff	_timer_value+7,?_sprintf+5
  3274  001882  C0F7  F0D5         	movff	_timer_value+4,?_sprintf+6
  3275  001886  C0F8  F0D6         	movff	_timer_value+5,?_sprintf+7
  3276  00188A  EC05  F02C         	call	_sprintf	;wreg free
  3277  00188E                     
  3278                           ;fs_menu_controller.c: 429:             Lcd_Write_String(textCursor2);
  3279  00188E  0EE3               	movlw	low stateMachine@textCursor2
  3280  001890  6E05               	movwf	Lcd_Write_String@a^0,c
  3281  001892  0E00               	movlw	high stateMachine@textCursor2
  3282  001894  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3283  001896  ECC3  F029         	call	_Lcd_Write_String	;wreg free
  3284  00189A                     
  3285                           ;fs_menu_controller.c: 431:             if (menu_flags.menu_start_flag == 1)
  3286  00189A  0100               	movlb	0	; () banked
  3287  00189C  A3FD               	btfss	_menu_flags& (0+255),1,b
  3288  00189E  EF53  F00C         	goto	u7451
  3289  0018A2  EF55  F00C         	goto	u7450
  3290  0018A6                     u7451:
  3291  0018A6  EF61  F00C         	goto	l364
  3292  0018AA                     u7450:
  3293  0018AA                     
  3294                           ; BSR set to: 0
  3295                           ;fs_menu_controller.c: 432:             {;fs_menu_controller.c: 433:                 men
      +                          u_flags.menu_start_flag = 0;
  3296  0018AA  93FD               	bcf	_menu_flags& (0+255),1,b
  3297  0018AC                     
  3298                           ; BSR set to: 0
  3299                           ;fs_menu_controller.c: 434:                 menu_selected = MAIN_MENU;
  3300  0018AC  0E00               	movlw	0
  3301  0018AE  0101               	movlb	1	; () banked
  3302  0018B0  6FA7               	movwf	_menu_selected& (0+255),b
  3303                           
  3304                           ;fs_menu_controller.c: 436:                 startIsClick = 1;
  3305  0018B2  0E01               	movlw	1
  3306  0018B4  6FA9               	movwf	_startIsClick& (0+255),b
  3307                           
  3308                           ;fs_menu_controller.c: 437:                 pauseIsClick = 0;
  3309  0018B6  0E00               	movlw	0
  3310  0018B8  0100               	movlb	0	; () banked
  3311  0018BA  6FFF               	movwf	_pauseIsClick& (0+255),b
  3312                           
  3313                           ;fs_menu_controller.c: 438:                 stopIsClick = 0;
  3314  0018BC  0E00               	movlw	0
  3315  0018BE  0101               	movlb	1	; () banked
  3316  0018C0  6FA8               	movwf	_stopIsClick& (0+255),b
  3317  0018C2                     l364:
  3318                           
  3319                           ;fs_menu_controller.c: 441:             if ( (startIsClick == 0) && (pauseIsClick == 0) 
      +                          && (stopIsClick == 1) && (menu_selected == PAUSE_MENU))
  3320  0018C2  0101               	movlb	1	; () banked
  3321  0018C4  51A9               	movf	_startIsClick& (0+255),w,b
  3322  0018C6  A4D8               	btfss	status,2,c
  3323  0018C8  EF68  F00C         	goto	u7461
  3324  0018CC  EF6A  F00C         	goto	u7460
  3325  0018D0                     u7461:
  3326  0018D0  EF95  F00C         	goto	l5975
  3327  0018D4                     u7460:
  3328  0018D4                     
  3329                           ; BSR set to: 1
  3330  0018D4  0100               	movlb	0	; () banked
  3331  0018D6  51FF               	movf	_pauseIsClick& (0+255),w,b
  3332  0018D8  A4D8               	btfss	status,2,c
  3333  0018DA  EF71  F00C         	goto	u7471
  3334  0018DE  EF73  F00C         	goto	u7470
  3335  0018E2                     u7471:
  3336  0018E2  EF95  F00C         	goto	l5975
  3337  0018E6                     u7470:
  3338  0018E6                     
  3339                           ; BSR set to: 0
  3340  0018E6  0101               	movlb	1	; () banked
  3341  0018E8  05A8               	decf	_stopIsClick& (0+255),w,b
  3342  0018EA  A4D8               	btfss	status,2,c
  3343  0018EC  EF7A  F00C         	goto	u7481
  3344  0018F0  EF7C  F00C         	goto	u7480
  3345  0018F4                     u7481:
  3346  0018F4  EF95  F00C         	goto	l5975
  3347  0018F8                     u7480:
  3348  0018F8                     
  3349                           ; BSR set to: 1
  3350  0018F8  0E06               	movlw	6
  3351  0018FA  19A7               	xorwf	_menu_selected& (0+255),w,b
  3352  0018FC  A4D8               	btfss	status,2,c
  3353  0018FE  EF83  F00C         	goto	u7491
  3354  001902  EF85  F00C         	goto	u7490
  3355  001906                     u7491:
  3356  001906  EF95  F00C         	goto	l5975
  3357  00190A                     u7490:
  3358  00190A                     
  3359                           ; BSR set to: 1
  3360                           ;fs_menu_controller.c: 442:             {;fs_menu_controller.c: 443:                  ti
      +                          mer_value.remainingMinute = menu_value.driver_time;
  3361  00190A  C19B  F0F9         	movff	_menu_value,_timer_value+6
  3362  00190E  0100               	movlb	0	; () banked
  3363  001910  6BFA               	clrf	(_timer_value+7)& (0+255),b
  3364  001912                     
  3365                           ; BSR set to: 0
  3366                           ;fs_menu_controller.c: 444:                  timer_value.remainingSecond = 0;
  3367  001912  0E00               	movlw	0
  3368  001914  6FF8               	movwf	(_timer_value+5)& (0+255),b
  3369  001916  0E00               	movlw	0
  3370  001918  6FF7               	movwf	(_timer_value+4)& (0+255),b
  3371                           
  3372                           ;fs_menu_controller.c: 445:                  timer_value.second = 0;
  3373  00191A  0E00               	movlw	0
  3374  00191C  6FF4               	movwf	(_timer_value+1)& (0+255),b
  3375  00191E  0E00               	movlw	0
  3376  001920  6FF3               	movwf	_timer_value& (0+255),b
  3377                           
  3378                           ;fs_menu_controller.c: 446:                  timer_value.minute = 0;
  3379  001922  0E00               	movlw	0
  3380  001924  6FF6               	movwf	(_timer_value+3)& (0+255),b
  3381  001926  0E00               	movlw	0
  3382  001928  6FF5               	movwf	(_timer_value+2)& (0+255),b
  3383  00192A                     l5975:
  3384                           
  3385                           ;fs_menu_controller.c: 450:             if ( timer_value.menu_login_delay == 100)
  3386  00192A  0E64               	movlw	100
  3387  00192C  0100               	movlb	0	; () banked
  3388  00192E  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  3389  001930  A4D8               	btfss	status,2,c
  3390  001932  EF9D  F00C         	goto	u7501
  3391  001936  EF9F  F00C         	goto	u7500
  3392  00193A                     u7501:
  3393  00193A  EFA4  F00C         	goto	l5979
  3394  00193E                     u7500:
  3395  00193E                     
  3396                           ; BSR set to: 0
  3397                           ;fs_menu_controller.c: 451:             {;fs_menu_controller.c: 452:                 tim
      +                          er_value.menu_login_delay = 0;
  3398  00193E  0E00               	movlw	0
  3399  001940  6FFB               	movwf	(_timer_value+8)& (0+255),b
  3400                           
  3401                           ;fs_menu_controller.c: 453:                 menu_selected = DRIVER_TIME_SETTING;
  3402  001942  0E01               	movlw	1
  3403  001944  0101               	movlb	1	; () banked
  3404  001946  6FA7               	movwf	_menu_selected& (0+255),b
  3405  001948                     l5979:
  3406                           
  3407                           ;fs_menu_controller.c: 456:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_flags.menu_decrease_flag == 1))
  3408  001948  0100               	movlb	0	; () banked
  3409  00194A  A9FD               	btfss	_menu_flags& (0+255),4,b
  3410  00194C  EFAA  F00C         	goto	u7511
  3411  001950  EFAC  F00C         	goto	u7510
  3412  001954                     u7511:
  3413  001954  EFC0  F00A         	goto	l5835
  3414  001958                     u7510:
  3415  001958                     
  3416                           ; BSR set to: 0
  3417  001958  ABFD               	btfss	_menu_flags& (0+255),5,b
  3418  00195A  EFB1  F00C         	goto	u7521
  3419  00195E  EFB3  F00C         	goto	u7520
  3420  001962                     u7521:
  3421  001962  EFC0  F00A         	goto	l5835
  3422  001966                     u7520:
  3423  001966                     
  3424                           ; BSR set to: 0
  3425                           ;fs_menu_controller.c: 457:             {;fs_menu_controller.c: 458:                 men
      +                          u_selected = SECRET_MENU;
  3426  001966  0E08               	movlw	8
  3427  001968  0101               	movlb	1	; () banked
  3428  00196A  6FA7               	movwf	_menu_selected& (0+255),b
  3429                           
  3430                           ;fs_menu_controller.c: 459:                 secretMenuCounter = 1;
  3431  00196C  0E01               	movlw	1
  3432  00196E  6FA6               	movwf	stateMachine@secretMenuCounter& (0+255),b
  3433  001970  EFC0  F00A         	goto	l5835
  3434  001974                     l5987:
  3435                           
  3436                           ; BSR set to: 0
  3437                           ;fs_menu_controller.c: 472:             stopMotor();
  3438  001974  ECFC  F02C         	call	_stopMotor	;wreg free
  3439  001978                     
  3440                           ;fs_menu_controller.c: 474:             if (menu_flags.menu_input_flag == 1)
  3441  001978  0100               	movlb	0	; () banked
  3442  00197A  A1FD               	btfss	_menu_flags& (0+255),0,b
  3443  00197C  EFC2  F00C         	goto	u7531
  3444  001980  EFC4  F00C         	goto	u7530
  3445  001984                     u7531:
  3446  001984  EFD1  F00C         	goto	l5999
  3447  001988                     u7530:
  3448  001988                     
  3449                           ; BSR set to: 0
  3450                           ;fs_menu_controller.c: 475:             {;fs_menu_controller.c: 476:                 men
      +                          u_flags.menu_input_flag = 0;
  3451  001988  91FD               	bcf	_menu_flags& (0+255),0,b
  3452  00198A                     
  3453                           ; BSR set to: 0
  3454                           ;fs_menu_controller.c: 477:                 secretMenuCounter++;
  3455  00198A  0101               	movlb	1	; () banked
  3456  00198C  2BA6               	incf	stateMachine@secretMenuCounter& (0+255),f,b
  3457  00198E                     
  3458                           ; BSR set to: 1
  3459                           ;fs_menu_controller.c: 479:                 if (secretMenuCounter >2)
  3460  00198E  0E02               	movlw	2
  3461  001990  65A6               	cpfsgt	stateMachine@secretMenuCounter& (0+255),b
  3462  001992  EFCD  F00C         	goto	u7541
  3463  001996  EFCF  F00C         	goto	u7540
  3464  00199A                     u7541:
  3465  00199A  EFD1  F00C         	goto	l5999
  3466  00199E                     u7540:
  3467  00199E                     
  3468                           ; BSR set to: 1
  3469                           ;fs_menu_controller.c: 480:                 {;fs_menu_controller.c: 481:                
      +                               secretMenuCounter = 1;
  3470  00199E  0E01               	movlw	1
  3471  0019A0  6FA6               	movwf	stateMachine@secretMenuCounter& (0+255),b
  3472  0019A2                     l5999:
  3473                           
  3474                           ;fs_menu_controller.c: 485:             if (secretMenuCounter == 1)
  3475  0019A2  0101               	movlb	1	; () banked
  3476  0019A4  05A6               	decf	stateMachine@secretMenuCounter& (0+255),w,b
  3477  0019A6  A4D8               	btfss	status,2,c
  3478  0019A8  EFD8  F00C         	goto	u7551
  3479  0019AC  EFDA  F00C         	goto	u7550
  3480  0019B0                     u7551:
  3481  0019B0  EF6C  F00D         	goto	l6027
  3482  0019B4                     u7550:
  3483  0019B4                     
  3484                           ; BSR set to: 1
  3485                           ;fs_menu_controller.c: 486:             {;fs_menu_controller.c: 487:                 Lcd
      +                          _Set_Cursor(1,1);
  3486  0019B4  0E01               	movlw	1
  3487  0019B6  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3488  0019B8  0E01               	movlw	1
  3489  0019BA  EC1D  F02B         	call	_Lcd_Set_Cursor
  3490  0019BE                     
  3491                           ;fs_menu_controller.c: 488:                 Lcd_Write_String("PID PARAM       ");
  3492  0019BE  0E13               	movlw	low STR_13
  3493  0019C0  6E05               	movwf	Lcd_Write_String@a^0,c
  3494  0019C2  0E06               	movlw	high STR_13
  3495  0019C4  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3496  0019C6  ECC3  F029         	call	_Lcd_Write_String	;wreg free
  3497  0019CA                     
  3498                           ;fs_menu_controller.c: 489:                 Lcd_Set_Cursor(2,1);
  3499  0019CA  0E01               	movlw	1
  3500  0019CC  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3501  0019CE  0E02               	movlw	2
  3502  0019D0  EC1D  F02B         	call	_Lcd_Set_Cursor
  3503  0019D4                     
  3504                           ;fs_menu_controller.c: 490:                 sprintf(textCursor2,"Kp:%5.1f     ",KP);
  3505  0019D4  0EE3               	movlw	low stateMachine@textCursor2
  3506  0019D6  0100               	movlb	0	; () banked
  3507  0019D8  6FCF               	movwf	sprintf@s& (0+255),b
  3508  0019DA  0E00               	movlw	high stateMachine@textCursor2
  3509  0019DC  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3510  0019DE  0EA9               	movlw	low STR_14
  3511  0019E0  6FD1               	movwf	sprintf@fmt& (0+255),b
  3512  0019E2  0E06               	movlw	high STR_14
  3513  0019E4  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3514  0019E6  C1B7  F0D3         	movff	_KP@fs_speed_controller$F1596,?_sprintf+4
  3515  0019EA  C1B8  F0D4         	movff	_KP@fs_speed_controller$F1596+1,?_sprintf+5
  3516  0019EE  C1B9  F0D5         	movff	_KP@fs_speed_controller$F1596+2,?_sprintf+6
  3517  0019F2  C1BA  F0D6         	movff	_KP@fs_speed_controller$F1596+3,?_sprintf+7
  3518  0019F6  EC05  F02C         	call	_sprintf	;wreg free
  3519  0019FA                     
  3520                           ;fs_menu_controller.c: 491:                 Lcd_Write_String(textCursor2);
  3521  0019FA  0EE3               	movlw	low stateMachine@textCursor2
  3522  0019FC  6E05               	movwf	Lcd_Write_String@a^0,c
  3523  0019FE  0E00               	movlw	high stateMachine@textCursor2
  3524  001A00  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3525  001A02  ECC3  F029         	call	_Lcd_Write_String	;wreg free
  3526  001A06                     
  3527                           ;fs_menu_controller.c: 493:                 if ((menu_flags.menu_increase_flag == 1) && 
      +                          (KP < 2.5))
  3528  001A06  0100               	movlb	0	; () banked
  3529  001A08  A9FD               	btfss	_menu_flags& (0+255),4,b
  3530  001A0A  EF09  F00D         	goto	u7561
  3531  001A0E  EF0B  F00D         	goto	u7560
  3532  001A12                     u7561:
  3533  001A12  EF40  F00D         	goto	l6019
  3534  001A16                     u7560:
  3535  001A16                     
  3536                           ; BSR set to: 0
  3537  001A16  C1B7  F035         	movff	_KP@fs_speed_controller$F1596,___flge@ff1
  3538  001A1A  C1B8  F036         	movff	_KP@fs_speed_controller$F1596+1,___flge@ff1+1
  3539  001A1E  C1B9  F037         	movff	_KP@fs_speed_controller$F1596+2,___flge@ff1+2
  3540  001A22  C1BA  F038         	movff	_KP@fs_speed_controller$F1596+3,___flge@ff1+3
  3541  001A26  0E00               	movlw	0
  3542  001A28  6E39               	movwf	___flge@ff2^0,c
  3543  001A2A  0E00               	movlw	0
  3544  001A2C  6E3A               	movwf	(___flge@ff2+1)^0,c
  3545  001A2E  0E20               	movlw	32
  3546  001A30  6E3B               	movwf	(___flge@ff2+2)^0,c
  3547  001A32  0E40               	movlw	64
  3548  001A34  6E3C               	movwf	(___flge@ff2+3)^0,c
  3549  001A36  EC66  F025         	call	___flge	;wreg free
  3550  001A3A  B0D8               	btfsc	status,0,c
  3551  001A3C  EF22  F00D         	goto	u7571
  3552  001A40  EF24  F00D         	goto	u7570
  3553  001A44                     u7571:
  3554  001A44  EF40  F00D         	goto	l6019
  3555  001A48                     u7570:
  3556  001A48                     
  3557                           ;fs_menu_controller.c: 494:                 {;fs_menu_controller.c: 495:                
      +                               menu_flags.menu_increase_flag = 0;
  3558  001A48  0100               	movlb	0	; () banked
  3559  001A4A  99FD               	bcf	_menu_flags& (0+255),4,b
  3560  001A4C                     
  3561                           ; BSR set to: 0
  3562                           ;fs_menu_controller.c: 496:                     KP += 0.1;
  3563  001A4C  C1B7  F035         	movff	_KP@fs_speed_controller$F1596,___fladd@b
  3564  001A50  C1B8  F036         	movff	_KP@fs_speed_controller$F1596+1,___fladd@b+1
  3565  001A54  C1B9  F037         	movff	_KP@fs_speed_controller$F1596+2,___fladd@b+2
  3566  001A58  C1BA  F038         	movff	_KP@fs_speed_controller$F1596+3,___fladd@b+3
  3567  001A5C  0ECD               	movlw	205
  3568  001A5E  6E39               	movwf	___fladd@a^0,c
  3569  001A60  0ECC               	movlw	204
  3570  001A62  6E3A               	movwf	(___fladd@a+1)^0,c
  3571  001A64  0ECC               	movlw	204
  3572  001A66  6E3B               	movwf	(___fladd@a+2)^0,c
  3573  001A68  0E3D               	movlw	61
  3574  001A6A  6E3C               	movwf	(___fladd@a+3)^0,c
  3575  001A6C  EC66  F015         	call	___fladd	;wreg free
  3576  001A70  C035  F1B7         	movff	?___fladd,_KP@fs_speed_controller$F1596
  3577  001A74  C036  F1B8         	movff	?___fladd+1,_KP@fs_speed_controller$F1596+1
  3578  001A78  C037  F1B9         	movff	?___fladd+2,_KP@fs_speed_controller$F1596+2
  3579  001A7C  C038  F1BA         	movff	?___fladd+3,_KP@fs_speed_controller$F1596+3
  3580  001A80                     l6019:
  3581                           
  3582                           ;fs_menu_controller.c: 499:                 if ((menu_flags.menu_decrease_flag == 1) && 
      +                          (KP >= 0))
  3583  001A80  0100               	movlb	0	; () banked
  3584  001A82  ABFD               	btfss	_menu_flags& (0+255),5,b
  3585  001A84  EF46  F00D         	goto	u7581
  3586  001A88  EF48  F00D         	goto	u7580
  3587  001A8C                     u7581:
  3588  001A8C  EF6C  F00D         	goto	l6027
  3589  001A90                     u7580:
  3590  001A90                     
  3591                           ; BSR set to: 0
  3592  001A90  0101               	movlb	1	; () banked
  3593  001A92  BFBA               	btfsc	(_KP@fs_speed_controller$F1596+3)& (0+255),7,b
  3594  001A94  EF4E  F00D         	goto	u7591
  3595  001A98  EF50  F00D         	goto	u7590
  3596  001A9C                     u7591:
  3597  001A9C  EF6C  F00D         	goto	l6027
  3598  001AA0                     u7590:
  3599  001AA0                     
  3600                           ; BSR set to: 1
  3601                           ;fs_menu_controller.c: 500:                 {;fs_menu_controller.c: 501:                
      +                               menu_flags.menu_decrease_flag = 0;
  3602  001AA0  0100               	movlb	0	; () banked
  3603  001AA2  9BFD               	bcf	_menu_flags& (0+255),5,b
  3604  001AA4                     
  3605                           ; BSR set to: 0
  3606                           ;fs_menu_controller.c: 502:                      KP -= 0.1;
  3607  001AA4  C1B7  F045         	movff	_KP@fs_speed_controller$F1596,___flsub@b
  3608  001AA8  C1B8  F046         	movff	_KP@fs_speed_controller$F1596+1,___flsub@b+1
  3609  001AAC  C1B9  F047         	movff	_KP@fs_speed_controller$F1596+2,___flsub@b+2
  3610  001AB0  C1BA  F048         	movff	_KP@fs_speed_controller$F1596+3,___flsub@b+3
  3611  001AB4  0ECD               	movlw	205
  3612  001AB6  6E49               	movwf	___flsub@a^0,c
  3613  001AB8  0ECC               	movlw	204
  3614  001ABA  6E4A               	movwf	(___flsub@a+1)^0,c
  3615  001ABC  0ECC               	movlw	204
  3616  001ABE  6E4B               	movwf	(___flsub@a+2)^0,c
  3617  001AC0  0E3D               	movlw	61
  3618  001AC2  6E4C               	movwf	(___flsub@a+3)^0,c
  3619  001AC4  EC57  F02C         	call	___flsub	;wreg free
  3620  001AC8  C045  F1B7         	movff	?___flsub,_KP@fs_speed_controller$F1596
  3621  001ACC  C046  F1B8         	movff	?___flsub+1,_KP@fs_speed_controller$F1596+1
  3622  001AD0  C047  F1B9         	movff	?___flsub+2,_KP@fs_speed_controller$F1596+2
  3623  001AD4  C048  F1BA         	movff	?___flsub+3,_KP@fs_speed_controller$F1596+3
  3624  001AD8                     l6027:
  3625                           
  3626                           ;fs_menu_controller.c: 506:             if (secretMenuCounter == 2)
  3627  001AD8  0E02               	movlw	2
  3628  001ADA  0101               	movlb	1	; () banked
  3629  001ADC  19A6               	xorwf	stateMachine@secretMenuCounter& (0+255),w,b
  3630  001ADE  A4D8               	btfss	status,2,c
  3631  001AE0  EF74  F00D         	goto	u7601
  3632  001AE4  EF76  F00D         	goto	u7600
  3633  001AE8                     u7601:
  3634  001AE8  EF08  F00E         	goto	l6055
  3635  001AEC                     u7600:
  3636  001AEC                     
  3637                           ; BSR set to: 1
  3638                           ;fs_menu_controller.c: 507:             {;fs_menu_controller.c: 508:                 Lcd
      +                          _Set_Cursor(1,1);
  3639  001AEC  0E01               	movlw	1
  3640  001AEE  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3641  001AF0  0E01               	movlw	1
  3642  001AF2  EC1D  F02B         	call	_Lcd_Set_Cursor
  3643  001AF6                     
  3644                           ;fs_menu_controller.c: 509:                 Lcd_Write_String("PID PARAM       ");
  3645  001AF6  0E13               	movlw	low STR_13
  3646  001AF8  6E05               	movwf	Lcd_Write_String@a^0,c
  3647  001AFA  0E06               	movlw	high STR_13
  3648  001AFC  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3649  001AFE  ECC3  F029         	call	_Lcd_Write_String	;wreg free
  3650  001B02                     
  3651                           ;fs_menu_controller.c: 510:                 Lcd_Set_Cursor(2,1);
  3652  001B02  0E01               	movlw	1
  3653  001B04  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3654  001B06  0E02               	movlw	2
  3655  001B08  EC1D  F02B         	call	_Lcd_Set_Cursor
  3656  001B0C                     
  3657                           ;fs_menu_controller.c: 511:                 sprintf(textCursor2,"Kd:%5.1f    ",KD);
  3658  001B0C  0EE3               	movlw	low stateMachine@textCursor2
  3659  001B0E  0100               	movlb	0	; () banked
  3660  001B10  6FCF               	movwf	sprintf@s& (0+255),b
  3661  001B12  0E00               	movlw	high stateMachine@textCursor2
  3662  001B14  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3663  001B16  0EB7               	movlw	low STR_16
  3664  001B18  6FD1               	movwf	sprintf@fmt& (0+255),b
  3665  001B1A  0E06               	movlw	high STR_16
  3666  001B1C  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3667  001B1E  C1B3  F0D3         	movff	_KD@fs_speed_controller$F1597,?_sprintf+4
  3668  001B22  C1B4  F0D4         	movff	_KD@fs_speed_controller$F1597+1,?_sprintf+5
  3669  001B26  C1B5  F0D5         	movff	_KD@fs_speed_controller$F1597+2,?_sprintf+6
  3670  001B2A  C1B6  F0D6         	movff	_KD@fs_speed_controller$F1597+3,?_sprintf+7
  3671  001B2E  EC05  F02C         	call	_sprintf	;wreg free
  3672  001B32                     
  3673                           ;fs_menu_controller.c: 512:                 Lcd_Write_String(textCursor2);
  3674  001B32  0EE3               	movlw	low stateMachine@textCursor2
  3675  001B34  6E05               	movwf	Lcd_Write_String@a^0,c
  3676  001B36  0E00               	movlw	high stateMachine@textCursor2
  3677  001B38  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3678  001B3A  ECC3  F029         	call	_Lcd_Write_String	;wreg free
  3679  001B3E                     
  3680                           ;fs_menu_controller.c: 514:                 if ((menu_flags.menu_increase_flag == 1) && 
      +                          (KD < 2.5))
  3681  001B3E  0100               	movlb	0	; () banked
  3682  001B40  A9FD               	btfss	_menu_flags& (0+255),4,b
  3683  001B42  EFA5  F00D         	goto	u7611
  3684  001B46  EFA7  F00D         	goto	u7610
  3685  001B4A                     u7611:
  3686  001B4A  EFDC  F00D         	goto	l6047
  3687  001B4E                     u7610:
  3688  001B4E                     
  3689                           ; BSR set to: 0
  3690  001B4E  C1B3  F035         	movff	_KD@fs_speed_controller$F1597,___flge@ff1
  3691  001B52  C1B4  F036         	movff	_KD@fs_speed_controller$F1597+1,___flge@ff1+1
  3692  001B56  C1B5  F037         	movff	_KD@fs_speed_controller$F1597+2,___flge@ff1+2
  3693  001B5A  C1B6  F038         	movff	_KD@fs_speed_controller$F1597+3,___flge@ff1+3
  3694  001B5E  0E00               	movlw	0
  3695  001B60  6E39               	movwf	___flge@ff2^0,c
  3696  001B62  0E00               	movlw	0
  3697  001B64  6E3A               	movwf	(___flge@ff2+1)^0,c
  3698  001B66  0E20               	movlw	32
  3699  001B68  6E3B               	movwf	(___flge@ff2+2)^0,c
  3700  001B6A  0E40               	movlw	64
  3701  001B6C  6E3C               	movwf	(___flge@ff2+3)^0,c
  3702  001B6E  EC66  F025         	call	___flge	;wreg free
  3703  001B72  B0D8               	btfsc	status,0,c
  3704  001B74  EFBE  F00D         	goto	u7621
  3705  001B78  EFC0  F00D         	goto	u7620
  3706  001B7C                     u7621:
  3707  001B7C  EFDC  F00D         	goto	l6047
  3708  001B80                     u7620:
  3709  001B80                     
  3710                           ;fs_menu_controller.c: 515:                 {;fs_menu_controller.c: 516:                
      +                               menu_flags.menu_increase_flag = 0;
  3711  001B80  0100               	movlb	0	; () banked
  3712  001B82  99FD               	bcf	_menu_flags& (0+255),4,b
  3713  001B84                     
  3714                           ; BSR set to: 0
  3715                           ;fs_menu_controller.c: 517:                     KD += 0.1;
  3716  001B84  C1B3  F035         	movff	_KD@fs_speed_controller$F1597,___fladd@b
  3717  001B88  C1B4  F036         	movff	_KD@fs_speed_controller$F1597+1,___fladd@b+1
  3718  001B8C  C1B5  F037         	movff	_KD@fs_speed_controller$F1597+2,___fladd@b+2
  3719  001B90  C1B6  F038         	movff	_KD@fs_speed_controller$F1597+3,___fladd@b+3
  3720  001B94  0ECD               	movlw	205
  3721  001B96  6E39               	movwf	___fladd@a^0,c
  3722  001B98  0ECC               	movlw	204
  3723  001B9A  6E3A               	movwf	(___fladd@a+1)^0,c
  3724  001B9C  0ECC               	movlw	204
  3725  001B9E  6E3B               	movwf	(___fladd@a+2)^0,c
  3726  001BA0  0E3D               	movlw	61
  3727  001BA2  6E3C               	movwf	(___fladd@a+3)^0,c
  3728  001BA4  EC66  F015         	call	___fladd	;wreg free
  3729  001BA8  C035  F1B3         	movff	?___fladd,_KD@fs_speed_controller$F1597
  3730  001BAC  C036  F1B4         	movff	?___fladd+1,_KD@fs_speed_controller$F1597+1
  3731  001BB0  C037  F1B5         	movff	?___fladd+2,_KD@fs_speed_controller$F1597+2
  3732  001BB4  C038  F1B6         	movff	?___fladd+3,_KD@fs_speed_controller$F1597+3
  3733  001BB8                     l6047:
  3734                           
  3735                           ;fs_menu_controller.c: 520:                 if ((menu_flags.menu_decrease_flag == 1) && 
      +                          (KD >= 0))
  3736  001BB8  0100               	movlb	0	; () banked
  3737  001BBA  ABFD               	btfss	_menu_flags& (0+255),5,b
  3738  001BBC  EFE2  F00D         	goto	u7631
  3739  001BC0  EFE4  F00D         	goto	u7630
  3740  001BC4                     u7631:
  3741  001BC4  EF08  F00E         	goto	l6055
  3742  001BC8                     u7630:
  3743  001BC8                     
  3744                           ; BSR set to: 0
  3745  001BC8  0101               	movlb	1	; () banked
  3746  001BCA  BFB6               	btfsc	(_KD@fs_speed_controller$F1597+3)& (0+255),7,b
  3747  001BCC  EFEA  F00D         	goto	u7641
  3748  001BD0  EFEC  F00D         	goto	u7640
  3749  001BD4                     u7641:
  3750  001BD4  EF08  F00E         	goto	l6055
  3751  001BD8                     u7640:
  3752  001BD8                     
  3753                           ; BSR set to: 1
  3754                           ;fs_menu_controller.c: 521:                 {;fs_menu_controller.c: 522:                
      +                               menu_flags.menu_decrease_flag = 0;
  3755  001BD8  0100               	movlb	0	; () banked
  3756  001BDA  9BFD               	bcf	_menu_flags& (0+255),5,b
  3757  001BDC                     
  3758                           ; BSR set to: 0
  3759                           ;fs_menu_controller.c: 523:                      KD -= 0.1;
  3760  001BDC  C1B3  F045         	movff	_KD@fs_speed_controller$F1597,___flsub@b
  3761  001BE0  C1B4  F046         	movff	_KD@fs_speed_controller$F1597+1,___flsub@b+1
  3762  001BE4  C1B5  F047         	movff	_KD@fs_speed_controller$F1597+2,___flsub@b+2
  3763  001BE8  C1B6  F048         	movff	_KD@fs_speed_controller$F1597+3,___flsub@b+3
  3764  001BEC  0ECD               	movlw	205
  3765  001BEE  6E49               	movwf	___flsub@a^0,c
  3766  001BF0  0ECC               	movlw	204
  3767  001BF2  6E4A               	movwf	(___flsub@a+1)^0,c
  3768  001BF4  0ECC               	movlw	204
  3769  001BF6  6E4B               	movwf	(___flsub@a+2)^0,c
  3770  001BF8  0E3D               	movlw	61
  3771  001BFA  6E4C               	movwf	(___flsub@a+3)^0,c
  3772  001BFC  EC57  F02C         	call	___flsub	;wreg free
  3773  001C00  C045  F1B3         	movff	?___flsub,_KD@fs_speed_controller$F1597
  3774  001C04  C046  F1B4         	movff	?___flsub+1,_KD@fs_speed_controller$F1597+1
  3775  001C08  C047  F1B5         	movff	?___flsub+2,_KD@fs_speed_controller$F1597+2
  3776  001C0C  C048  F1B6         	movff	?___flsub+3,_KD@fs_speed_controller$F1597+3
  3777  001C10                     l6055:
  3778                           
  3779                           ;fs_menu_controller.c: 527:             if ( timer_value.menu_login_delay == 100)
  3780  001C10  0E64               	movlw	100
  3781  001C12  0100               	movlb	0	; () banked
  3782  001C14  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  3783  001C16  A4D8               	btfss	status,2,c
  3784  001C18  EF10  F00E         	goto	u7651
  3785  001C1C  EF12  F00E         	goto	u7650
  3786  001C20                     u7651:
  3787  001C20  EF47  F00E         	goto	l379
  3788  001C24                     u7650:
  3789  001C24  EF36  F00B         	goto	l5877
  3790  001C28                     l6061:
  3791  001C28  0101               	movlb	1	; () banked
  3792  001C2A  51A7               	movf	_menu_selected& (0+255),w,b
  3793  001C2C  0100               	movlb	0	; () banked
  3794  001C2E  6FE1               	movwf	??_stateMachine& (0+255),b
  3795  001C30  6BE2               	clrf	(??_stateMachine+1)& (0+255),b
  3796                           
  3797                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3798                           ; Switch size 1, requested type "simple"
  3799                           ; Number of cases is 1, Range of values is 0 to 0
  3800                           ; switch strategies available:
  3801                           ; Name         Instructions Cycles
  3802                           ; simple_byte            4     3 (average)
  3803                           ;	Chosen strategy is simple_byte
  3804  001C32  51E2               	movf	(??_stateMachine+1)& (0+255),w,b
  3805  001C34  0A00               	xorlw	0	; case 0
  3806  001C36  B4D8               	btfsc	status,2,c
  3807  001C38  EF20  F00E         	goto	l6301
  3808  001C3C  EF47  F00E         	goto	l379
  3809  001C40                     l6301:
  3810                           
  3811                           ; BSR set to: 0
  3812                           ; Switch size 1, requested type "simple"
  3813                           ; Number of cases is 9, Range of values is 0 to 8
  3814                           ; switch strategies available:
  3815                           ; Name         Instructions Cycles
  3816                           ; simple_byte           28    15 (average)
  3817                           ;	Chosen strategy is simple_byte
  3818  001C40  51E1               	movf	??_stateMachine& (0+255),w,b
  3819  001C42  0A00               	xorlw	0	; case 0
  3820  001C44  B4D8               	btfsc	status,2,c
  3821  001C46  EF57  F009         	goto	l5717
  3822  001C4A  0A01               	xorlw	1	; case 1
  3823  001C4C  B4D8               	btfsc	status,2,c
  3824  001C4E  EF2E  F00A         	goto	l344
  3825  001C52  0A03               	xorlw	3	; case 2
  3826  001C54  B4D8               	btfsc	status,2,c
  3827  001C56  EFC4  F00A         	goto	l5837
  3828  001C5A  0A01               	xorlw	1	; case 3
  3829  001C5C  B4D8               	btfsc	status,2,c
  3830  001C5E  EF3D  F00B         	goto	l354
  3831  001C62  0A07               	xorlw	7	; case 4
  3832  001C64  B4D8               	btfsc	status,2,c
  3833  001C66  EFAC  F00B         	goto	l5919
  3834  001C6A  0A01               	xorlw	1	; case 5
  3835  001C6C  B4D8               	btfsc	status,2,c
  3836  001C6E  EF14  F00C         	goto	l362
  3837  001C72  0A03               	xorlw	3	; case 6
  3838  001C74  B4D8               	btfsc	status,2,c
  3839  001C76  EF24  F00C         	goto	l5949
  3840  001C7A  0A01               	xorlw	1	; case 7
  3841  001C7C  B4D8               	btfsc	status,2,c
  3842  001C7E  EF47  F00E         	goto	l379
  3843  001C82  0A0F               	xorlw	15	; case 8
  3844  001C84  B4D8               	btfsc	status,2,c
  3845  001C86  EFBA  F00C         	goto	l5987
  3846  001C8A  EF47  F00E         	goto	l379
  3847  001C8E                     l379:
  3848  001C8E  0012               	return		;funcret
  3849  001C90                     __end_of_stateMachine:
  3850                           	callstack 0
  3851                           
  3852 ;; *************** function _stopMotor *****************
  3853 ;; Defined at:
  3854 ;;		line 79 in file "fs_speed_controller.c"
  3855 ;; Parameters:    Size  Location     Type
  3856 ;;		None
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;		None
  3859 ;; Return value:  Size  Location     Type
  3860 ;;                  1    wreg      void 
  3861 ;; Registers used:
  3862 ;;		wreg, status,2, status,0, cstack
  3863 ;; Tracked objects:
  3864 ;;		On entry : 0/0
  3865 ;;		On exit  : 0/0
  3866 ;;		Unchanged: 0/0
  3867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3868 ;;      Params:         0       0       0       0       0       0       0
  3869 ;;      Locals:         0       0       0       0       0       0       0
  3870 ;;      Temps:          0       0       0       0       0       0       0
  3871 ;;      Totals:         0       0       0       0       0       0       0
  3872 ;;Total ram usage:        0 bytes
  3873 ;; Hardware stack levels used:    1
  3874 ;; Hardware stack levels required when called:    3
  3875 ;; This function calls:
  3876 ;;		_PWM1_setDC
  3877 ;;		_PWM2_setDC
  3878 ;; This function is called by:
  3879 ;;		_stateMachine
  3880 ;; This function uses a non-reentrant model
  3881 ;;
  3882                           
  3883                           	psect	text7
  3884  0059F8                     __ptext7:
  3885                           	callstack 0
  3886  0059F8                     _stopMotor:
  3887                           	callstack 25
  3888  0059F8                     
  3889                           ;fs_speed_controller.c: 81:     controller.rightMotorSpeed = 0;
  3890  0059F8  0E00               	movlw	0
  3891  0059FA  0101               	movlb	1	; () banked
  3892  0059FC  6F59               	movwf	(_controller+9)& (0+255),b
  3893  0059FE  0E00               	movlw	0
  3894  005A00  6F58               	movwf	(_controller+8)& (0+255),b
  3895                           
  3896                           ;fs_speed_controller.c: 82:     controller.leftMotorSpeed = 0;
  3897  005A02  0E00               	movlw	0
  3898  005A04  6F57               	movwf	(_controller+7)& (0+255),b
  3899  005A06  0E00               	movlw	0
  3900  005A08  6F56               	movwf	(_controller+6)& (0+255),b
  3901                           
  3902                           ;fs_speed_controller.c: 83:     driver_limit.ortalama = 0;
  3903  005A0A  0E00               	movlw	0
  3904  005A0C  6F8B               	movwf	(_driver_limit+8)& (0+255),b
  3905  005A0E  0E00               	movlw	0
  3906  005A10  6F8C               	movwf	(_driver_limit+9)& (0+255),b
  3907  005A12  0E00               	movlw	0
  3908  005A14  6F8D               	movwf	(_driver_limit+10)& (0+255),b
  3909  005A16  0E00               	movlw	0
  3910  005A18  6F8E               	movwf	(_driver_limit+11)& (0+255),b
  3911  005A1A                     
  3912                           ; BSR set to: 1
  3913                           ;fs_speed_controller.c: 84:     PWM1_setDC(controller.leftMotorSpeed);
  3914  005A1A  C156  F058         	movff	_controller+6,PWM1_setDC@dutycycle
  3915  005A1E  C157  F059         	movff	_controller+7,PWM1_setDC@dutycycle+1
  3916  005A22  EC3F  F02A         	call	_PWM1_setDC	;wreg free
  3917  005A26                     
  3918                           ;fs_speed_controller.c: 85:     PWM2_setDC(controller.rightMotorSpeed);
  3919  005A26  C158  F058         	movff	_controller+8,PWM2_setDC@dutycycle
  3920  005A2A  C159  F059         	movff	_controller+9,PWM2_setDC@dutycycle+1
  3921  005A2E  EC02  F02A         	call	_PWM2_setDC	;wreg free
  3922  005A32  0012               	return		;funcret
  3923  005A34                     __end_of_stopMotor:
  3924                           	callstack 0
  3925                           
  3926 ;; *************** function _startMotor *****************
  3927 ;; Defined at:
  3928 ;;		line 95 in file "fs_speed_controller.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;		None
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;		None
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  1    wreg      void 
  3935 ;; Registers used:
  3936 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3942 ;;      Params:         0       0       0       0       0       0       0
  3943 ;;      Locals:         0       0       0       0       0       0       0
  3944 ;;      Temps:          0       0       0       0       0       0       0
  3945 ;;      Totals:         0       0       0       0       0       0       0
  3946 ;;Total ram usage:        0 bytes
  3947 ;; Hardware stack levels used:    1
  3948 ;; Hardware stack levels required when called:    3
  3949 ;; This function calls:
  3950 ;;		_PWM1_setDC
  3951 ;;		_PWM2_setDC
  3952 ;;		_calculatedAverageValue
  3953 ;;		_scanAdcConversion
  3954 ;;		_speedControl
  3955 ;; This function is called by:
  3956 ;;		_stateMachine
  3957 ;; This function uses a non-reentrant model
  3958 ;;
  3959                           
  3960                           	psect	text8
  3961  005B14                     __ptext8:
  3962                           	callstack 0
  3963  005B14                     _startMotor:
  3964                           	callstack 25
  3965  005B14                     
  3966                           ;fs_speed_controller.c: 97:         scanAdcConversion();
  3967  005B14  EC48  F00E         	call	_scanAdcConversion	;wreg free
  3968  005B18                     
  3969                           ;fs_speed_controller.c: 98:         calculatedAverageValue();
  3970  005B18  ECA8  F01B         	call	_calculatedAverageValue	;wreg free
  3971  005B1C                     
  3972                           ;fs_speed_controller.c: 99:         speedControl(driver_limit.ortalama);
  3973  005B1C  C18B  F058         	movff	_driver_limit+8,speedControl@position
  3974  005B20  C18C  F059         	movff	_driver_limit+9,speedControl@position+1
  3975  005B24  C18D  F05A         	movff	_driver_limit+10,speedControl@position+2
  3976  005B28  C18E  F05B         	movff	_driver_limit+11,speedControl@position+3
  3977  005B2C  EC98  F01F         	call	_speedControl	;wreg free
  3978                           
  3979                           ;fs_speed_controller.c: 100:         PWM1_setDC(controller.leftMotorSpeed);
  3980  005B30  C156  F058         	movff	_controller+6,PWM1_setDC@dutycycle
  3981  005B34  C157  F059         	movff	_controller+7,PWM1_setDC@dutycycle+1
  3982  005B38  EC3F  F02A         	call	_PWM1_setDC	;wreg free
  3983                           
  3984                           ;fs_speed_controller.c: 101:         PWM2_setDC(controller.rightMotorSpeed);
  3985  005B3C  C158  F058         	movff	_controller+8,PWM2_setDC@dutycycle
  3986  005B40  C159  F059         	movff	_controller+9,PWM2_setDC@dutycycle+1
  3987  005B44  EC02  F02A         	call	_PWM2_setDC	;wreg free
  3988  005B48  0012               	return		;funcret
  3989  005B4A                     __end_of_startMotor:
  3990                           	callstack 0
  3991                           
  3992 ;; *************** function _speedControl *****************
  3993 ;; Defined at:
  3994 ;;		line 38 in file "fs_speed_controller.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;  position        4   87[COMRAM] float 
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;  pos             4    0        float 
  3999 ;; Return value:  Size  Location     Type
  4000 ;;                  1    wreg      void 
  4001 ;; Registers used:
  4002 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4003 ;; Tracked objects:
  4004 ;;		On entry : 0/0
  4005 ;;		On exit  : 0/0
  4006 ;;		Unchanged: 0/0
  4007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4008 ;;      Params:         4       0       0       0       0       0       0
  4009 ;;      Locals:         0       4       0       0       0       0       0
  4010 ;;      Temps:          2       0       0       0       0       0       0
  4011 ;;      Totals:         6       4       0       0       0       0       0
  4012 ;;Total ram usage:       10 bytes
  4013 ;; Hardware stack levels used:    1
  4014 ;; Hardware stack levels required when called:    2
  4015 ;; This function calls:
  4016 ;;		___fladd
  4017 ;;		___flmul
  4018 ;;		___fltol
  4019 ;;		___xxtofl
  4020 ;; This function is called by:
  4021 ;;		_startMotor
  4022 ;; This function uses a non-reentrant model
  4023 ;;
  4024                           
  4025                           	psect	text9
  4026  003F30                     __ptext9:
  4027                           	callstack 0
  4028  003F30                     _speedControl:
  4029                           	callstack 25
  4030  003F30                     
  4031                           ;fs_speed_controller.c: 44:     controller.error = (int16_t)(position - 3400.0);
  4032  003F30  0E00               	movlw	0
  4033  003F32  6E39               	movwf	___fladd@a^0,c
  4034  003F34  0E80               	movlw	128
  4035  003F36  6E3A               	movwf	(___fladd@a+1)^0,c
  4036  003F38  0E54               	movlw	84
  4037  003F3A  6E3B               	movwf	(___fladd@a+2)^0,c
  4038  003F3C  0EC5               	movlw	197
  4039  003F3E  6E3C               	movwf	(___fladd@a+3)^0,c
  4040  003F40  C058  F035         	movff	speedControl@position,___fladd@b
  4041  003F44  C059  F036         	movff	speedControl@position+1,___fladd@b+1
  4042  003F48  C05A  F037         	movff	speedControl@position+2,___fladd@b+2
  4043  003F4C  C05B  F038         	movff	speedControl@position+3,___fladd@b+3
  4044  003F50  EC66  F015         	call	___fladd	;wreg free
  4045  003F54  C035  F04E         	movff	?___fladd,___fltol@f1
  4046  003F58  C036  F04F         	movff	?___fladd+1,___fltol@f1+1
  4047  003F5C  C037  F050         	movff	?___fladd+2,___fltol@f1+2
  4048  003F60  C038  F051         	movff	?___fladd+3,___fltol@f1+3
  4049  003F64  ECE3  F024         	call	___fltol	;wreg free
  4050  003F68  C04E  F150         	movff	?___fltol,_controller
  4051  003F6C  C04F  F151         	movff	?___fltol+1,_controller+1
  4052  003F70  0E00               	movlw	0
  4053  003F72  6E20               	movwf	___flmul@a^0,c
  4054  003F74  0E00               	movlw	0
  4055  003F76  6E21               	movwf	(___flmul@a+1)^0,c
  4056  003F78  0E80               	movlw	128
  4057  003F7A  6E22               	movwf	(___flmul@a+2)^0,c
  4058  003F7C  0E3F               	movlw	63
  4059  003F7E  6E23               	movwf	(___flmul@a+3)^0,c
  4060  003F80  0101               	movlb	1	; () banked
  4061  003F82  5152               	movf	(_controller+2)& (0+255),w,b
  4062  003F84  5D50               	subwf	_controller& (0+255),w,b
  4063  003F86  6E5C               	movwf	??_speedControl^0,c
  4064  003F88  5153               	movf	(_controller+3)& (0+255),w,b
  4065  003F8A  5951               	subwfb	(_controller+1)& (0+255),w,b
  4066  003F8C  6E5D               	movwf	(??_speedControl+1)^0,c
  4067  003F8E  C05C  F00E         	movff	??_speedControl,___xxtofl@val
  4068  003F92  C05D  F00F         	movff	??_speedControl+1,___xxtofl@val+1
  4069  003F96  0E00               	movlw	0
  4070  003F98  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  4071  003F9A  0EFF               	movlw	-1
  4072  003F9C  6E10               	movwf	(___xxtofl@val+2)^0,c
  4073  003F9E  6E11               	movwf	(___xxtofl@val+3)^0,c
  4074  003FA0  0E01               	movlw	1
  4075  003FA2  EC77  F020         	call	___xxtofl
  4076  003FA6  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4077  003FAA  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4078  003FAE  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4079  003FB2  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4080  003FB6  ECC6  F017         	call	___flmul	;wreg free
  4081  003FBA  C01C  F039         	movff	?___flmul,___fladd@a
  4082  003FBE  C01D  F03A         	movff	?___flmul+1,___fladd@a+1
  4083  003FC2  C01E  F03B         	movff	?___flmul+2,___fladd@a+2
  4084  003FC6  C01F  F03C         	movff	?___flmul+3,___fladd@a+3
  4085  003FCA  0ECD               	movlw	205
  4086  003FCC  6E20               	movwf	___flmul@a^0,c
  4087  003FCE  0ECC               	movlw	204
  4088  003FD0  6E21               	movwf	(___flmul@a+1)^0,c
  4089  003FD2  0E4C               	movlw	76
  4090  003FD4  6E22               	movwf	(___flmul@a+2)^0,c
  4091  003FD6  0E3E               	movlw	62
  4092  003FD8  6E23               	movwf	(___flmul@a+3)^0,c
  4093  003FDA  C150  F00E         	movff	_controller,___xxtofl@val
  4094  003FDE  C151  F00F         	movff	_controller+1,___xxtofl@val+1
  4095  003FE2  0E00               	movlw	0
  4096  003FE4  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  4097  003FE6  0EFF               	movlw	-1
  4098  003FE8  6E10               	movwf	(___xxtofl@val+2)^0,c
  4099  003FEA  6E11               	movwf	(___xxtofl@val+3)^0,c
  4100  003FEC  0E01               	movlw	1
  4101  003FEE  EC77  F020         	call	___xxtofl
  4102  003FF2  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4103  003FF6  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4104  003FFA  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4105  003FFE  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4106  004002  ECC6  F017         	call	___flmul	;wreg free
  4107  004006  C01C  F035         	movff	?___flmul,___fladd@b
  4108  00400A  C01D  F036         	movff	?___flmul+1,___fladd@b+1
  4109  00400E  C01E  F037         	movff	?___flmul+2,___fladd@b+2
  4110  004012  C01F  F038         	movff	?___flmul+3,___fladd@b+3
  4111  004016  EC66  F015         	call	___fladd	;wreg free
  4112  00401A  C035  F04E         	movff	?___fladd,___fltol@f1
  4113  00401E  C036  F04F         	movff	?___fladd+1,___fltol@f1+1
  4114  004022  C037  F050         	movff	?___fladd+2,___fltol@f1+2
  4115  004026  C038  F051         	movff	?___fladd+3,___fltol@f1+3
  4116  00402A  ECE3  F024         	call	___fltol	;wreg free
  4117  00402E  C04E  F154         	movff	?___fltol,_controller+4
  4118  004032  C04F  F155         	movff	?___fltol+1,_controller+5
  4119  004036                     
  4120                           ;fs_speed_controller.c: 46:     controller.lastError = controller.error;
  4121  004036  C150  F152         	movff	_controller,_controller+2
  4122  00403A  C151  F153         	movff	_controller+1,_controller+3
  4123  00403E                     
  4124                           ;fs_speed_controller.c: 48:    controller.leftMotorSpeed =(int16_t) (200 + controller.mo
      +                          torSpeed + 70);
  4125  00403E  0E0E               	movlw	14
  4126  004040  0101               	movlb	1	; () banked
  4127  004042  2554               	addwf	(_controller+4)& (0+255),w,b
  4128  004044  6F56               	movwf	(_controller+6)& (0+255),b
  4129  004046  0E01               	movlw	1
  4130  004048  2155               	addwfc	(_controller+5)& (0+255),w,b
  4131  00404A  6F57               	movwf	(_controller+7)& (0+255),b
  4132  00404C                     
  4133                           ; BSR set to: 1
  4134                           ;fs_speed_controller.c: 49:    controller.rightMotorSpeed =(int16_t) (200 - controller.m
      +                          otorSpeed);
  4135  00404C  5154               	movf	(_controller+4)& (0+255),w,b
  4136  00404E  08C8               	sublw	200
  4137  004050  6F58               	movwf	(_controller+8)& (0+255),b
  4138  004052  5155               	movf	(_controller+5)& (0+255),w,b
  4139  004054  A0D8               	btfss	status,0,c
  4140  004056  2AE8               	incf	wreg,f,c
  4141  004058  0800               	sublw	0
  4142  00405A  6F59               	movwf	(_controller+9)& (0+255),b
  4143  00405C                     
  4144                           ; BSR set to: 1
  4145                           ;fs_speed_controller.c: 51:     if (controller.leftMotorSpeed < 50)
  4146  00405C  BF57               	btfsc	(_controller+7)& (0+255),7,b
  4147  00405E  EF3C  F020         	goto	u6740
  4148  004062  5157               	movf	(_controller+7)& (0+255),w,b
  4149  004064  E107               	bnz	u6741
  4150  004066  0E32               	movlw	50
  4151  004068  5D56               	subwf	(_controller+6)& (0+255),w,b
  4152  00406A  B0D8               	btfsc	status,0,c
  4153  00406C  EF3A  F020         	goto	u6741
  4154  004070  EF3C  F020         	goto	u6740
  4155  004074                     u6741:
  4156  004074  EF40  F020         	goto	l5573
  4157  004078                     u6740:
  4158  004078                     
  4159                           ; BSR set to: 1
  4160                           ;fs_speed_controller.c: 52:     {;fs_speed_controller.c: 53:         controller.leftMoto
      +                          rSpeed = 50;
  4161  004078  0E00               	movlw	0
  4162  00407A  6F57               	movwf	(_controller+7)& (0+255),b
  4163  00407C  0E32               	movlw	50
  4164  00407E  6F56               	movwf	(_controller+6)& (0+255),b
  4165  004080                     l5573:
  4166                           
  4167                           ; BSR set to: 1
  4168                           ;fs_speed_controller.c: 56:     if (controller.rightMotorSpeed < 50)
  4169  004080  BF59               	btfsc	(_controller+9)& (0+255),7,b
  4170  004082  EF4E  F020         	goto	u6750
  4171  004086  5159               	movf	(_controller+9)& (0+255),w,b
  4172  004088  E107               	bnz	u6751
  4173  00408A  0E32               	movlw	50
  4174  00408C  5D58               	subwf	(_controller+8)& (0+255),w,b
  4175  00408E  B0D8               	btfsc	status,0,c
  4176  004090  EF4C  F020         	goto	u6751
  4177  004094  EF4E  F020         	goto	u6750
  4178  004098                     u6751:
  4179  004098  EF52  F020         	goto	l5577
  4180  00409C                     u6750:
  4181  00409C                     
  4182                           ; BSR set to: 1
  4183                           ;fs_speed_controller.c: 57:     {;fs_speed_controller.c: 58:       controller.rightMotor
      +                          Speed = 50;
  4184  00409C  0E00               	movlw	0
  4185  00409E  6F59               	movwf	(_controller+9)& (0+255),b
  4186  0040A0  0E32               	movlw	50
  4187  0040A2  6F58               	movwf	(_controller+8)& (0+255),b
  4188  0040A4                     l5577:
  4189                           
  4190                           ; BSR set to: 1
  4191                           ;fs_speed_controller.c: 61:     if (controller.leftMotorSpeed > 350)
  4192  0040A4  BF57               	btfsc	(_controller+7)& (0+255),7,b
  4193  0040A6  EF5E  F020         	goto	u6761
  4194  0040AA  0E5F               	movlw	95
  4195  0040AC  5D56               	subwf	(_controller+6)& (0+255),w,b
  4196  0040AE  0E01               	movlw	1
  4197  0040B0  5957               	subwfb	(_controller+7)& (0+255),w,b
  4198  0040B2  A0D8               	btfss	status,0,c
  4199  0040B4  EF5E  F020         	goto	u6761
  4200  0040B8  EF60  F020         	goto	u6760
  4201  0040BC                     u6761:
  4202  0040BC  EF64  F020         	goto	l5581
  4203  0040C0                     u6760:
  4204  0040C0                     
  4205                           ; BSR set to: 1
  4206                           ;fs_speed_controller.c: 62:    {;fs_speed_controller.c: 63:         controller.leftMotor
      +                          Speed = 350;
  4207  0040C0  0E01               	movlw	1
  4208  0040C2  6F57               	movwf	(_controller+7)& (0+255),b
  4209  0040C4  0E5E               	movlw	94
  4210  0040C6  6F56               	movwf	(_controller+6)& (0+255),b
  4211  0040C8                     l5581:
  4212                           
  4213                           ; BSR set to: 1
  4214                           ;fs_speed_controller.c: 66:     if (controller.rightMotorSpeed > 350)
  4215  0040C8  BF59               	btfsc	(_controller+9)& (0+255),7,b
  4216  0040CA  EF70  F020         	goto	u6771
  4217  0040CE  0E5F               	movlw	95
  4218  0040D0  5D58               	subwf	(_controller+8)& (0+255),w,b
  4219  0040D2  0E01               	movlw	1
  4220  0040D4  5959               	subwfb	(_controller+9)& (0+255),w,b
  4221  0040D6  A0D8               	btfss	status,0,c
  4222  0040D8  EF70  F020         	goto	u6771
  4223  0040DC  EF72  F020         	goto	u6770
  4224  0040E0                     u6771:
  4225  0040E0  EF76  F020         	goto	l437
  4226  0040E4                     u6770:
  4227  0040E4                     
  4228                           ; BSR set to: 1
  4229                           ;fs_speed_controller.c: 67:     {;fs_speed_controller.c: 68:         controller.rightMot
      +                          orSpeed = 350;
  4230  0040E4  0E01               	movlw	1
  4231  0040E6  6F59               	movwf	(_controller+9)& (0+255),b
  4232  0040E8  0E5E               	movlw	94
  4233  0040EA  6F58               	movwf	(_controller+8)& (0+255),b
  4234  0040EC                     l437:
  4235                           
  4236                           ; BSR set to: 1
  4237  0040EC  0012               	return		;funcret
  4238  0040EE                     __end_of_speedControl:
  4239                           	callstack 0
  4240                           
  4241 ;; *************** function _scanAdcConversion *****************
  4242 ;; Defined at:
  4243 ;;		line 93 in file "fs_adc.c"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;		None
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;		None
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  1    wreg      void 
  4250 ;; Registers used:
  4251 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4257 ;;      Params:         0       0       0       0       0       0       0
  4258 ;;      Locals:         0       0       0       0       0       0       0
  4259 ;;      Temps:          2       0       0       0       0       0       0
  4260 ;;      Totals:         2       0       0       0       0       0       0
  4261 ;;Total ram usage:        2 bytes
  4262 ;; Hardware stack levels used:    1
  4263 ;; Hardware stack levels required when called:    2
  4264 ;; This function calls:
  4265 ;;		___fldiv
  4266 ;;		___flmul
  4267 ;;		___fltol
  4268 ;;		___xxtofl
  4269 ;;		_readAdcValue
  4270 ;; This function is called by:
  4271 ;;		_startMotor
  4272 ;; This function uses a non-reentrant model
  4273 ;;
  4274                           
  4275                           	psect	text10
  4276  001C90                     __ptext10:
  4277                           	callstack 0
  4278  001C90                     _scanAdcConversion:
  4279                           	callstack 25
  4280  001C90                     
  4281                           ;fs_adc.c: 95:     switch(timer_value.timer_0_counter)
  4282  001C90  EF1C  F012         	goto	l5493
  4283  001C94                     l5441:
  4284                           
  4285                           ; BSR set to: 0
  4286                           ;fs_adc.c: 98:             adc_raw_data.channel_0 = readAdcValue(0);
  4287  001C94  0E00               	movlw	0
  4288  001C96  EC9C  F02C         	call	_readAdcValue
  4289  001C9A  C001  F173         	movff	?_readAdcValue,_adc_raw_data
  4290  001C9E  C002  F174         	movff	?_readAdcValue+1,_adc_raw_data+1
  4291  001CA2                     
  4292                           ;fs_adc.c: 99:             procces_data.channel_0 = (float)((adc_raw_data.channel_0*5.0)
      +                          /1024.0);
  4293  001CA2  0E00               	movlw	0
  4294  001CA4  6E20               	movwf	___flmul@a^0,c
  4295  001CA6  0E00               	movlw	0
  4296  001CA8  6E21               	movwf	(___flmul@a+1)^0,c
  4297  001CAA  0EA0               	movlw	160
  4298  001CAC  6E22               	movwf	(___flmul@a+2)^0,c
  4299  001CAE  0E40               	movlw	64
  4300  001CB0  6E23               	movwf	(___flmul@a+3)^0,c
  4301  001CB2  C173  F00E         	movff	_adc_raw_data,___xxtofl@val
  4302  001CB6  C174  F00F         	movff	_adc_raw_data+1,___xxtofl@val+1
  4303  001CBA  6A10               	clrf	(___xxtofl@val+2)^0,c
  4304  001CBC  6A11               	clrf	(___xxtofl@val+3)^0,c
  4305  001CBE  0E00               	movlw	0
  4306  001CC0  EC77  F020         	call	___xxtofl
  4307  001CC4  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4308  001CC8  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4309  001CCC  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4310  001CD0  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4311  001CD4  ECC6  F017         	call	___flmul	;wreg free
  4312  001CD8  C01C  F035         	movff	?___flmul,___fldiv@b
  4313  001CDC  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4314  001CE0  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4315  001CE4  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4316  001CE8  0E00               	movlw	0
  4317  001CEA  6E39               	movwf	___fldiv@a^0,c
  4318  001CEC  0E00               	movlw	0
  4319  001CEE  6E3A               	movwf	(___fldiv@a+1)^0,c
  4320  001CF0  0E80               	movlw	128
  4321  001CF2  6E3B               	movwf	(___fldiv@a+2)^0,c
  4322  001CF4  0E44               	movlw	68
  4323  001CF6  6E3C               	movwf	(___fldiv@a+3)^0,c
  4324  001CF8  ECDB  F019         	call	___fldiv	;wreg free
  4325  001CFC  C035  F130         	movff	?___fldiv,_procces_data
  4326  001D00  C036  F131         	movff	?___fldiv+1,_procces_data+1
  4327  001D04  C037  F132         	movff	?___fldiv+2,_procces_data+2
  4328  001D08  C038  F133         	movff	?___fldiv+3,_procces_data+3
  4329  001D0C                     
  4330                           ;fs_adc.c: 100:             convert_data.convert_channel_0 = (uint32_t)((procces_data.ch
      +                          annel_0*999)/5);
  4331  001D0C  0E00               	movlw	0
  4332  001D0E  6E39               	movwf	___fldiv@a^0,c
  4333  001D10  0E00               	movlw	0
  4334  001D12  6E3A               	movwf	(___fldiv@a+1)^0,c
  4335  001D14  0EA0               	movlw	160
  4336  001D16  6E3B               	movwf	(___fldiv@a+2)^0,c
  4337  001D18  0E40               	movlw	64
  4338  001D1A  6E3C               	movwf	(___fldiv@a+3)^0,c
  4339  001D1C  0E00               	movlw	0
  4340  001D1E  6E20               	movwf	___flmul@a^0,c
  4341  001D20  0EC0               	movlw	192
  4342  001D22  6E21               	movwf	(___flmul@a+1)^0,c
  4343  001D24  0E79               	movlw	121
  4344  001D26  6E22               	movwf	(___flmul@a+2)^0,c
  4345  001D28  0E44               	movlw	68
  4346  001D2A  6E23               	movwf	(___flmul@a+3)^0,c
  4347  001D2C  C130  F01C         	movff	_procces_data,___flmul@b
  4348  001D30  C131  F01D         	movff	_procces_data+1,___flmul@b+1
  4349  001D34  C132  F01E         	movff	_procces_data+2,___flmul@b+2
  4350  001D38  C133  F01F         	movff	_procces_data+3,___flmul@b+3
  4351  001D3C  ECC6  F017         	call	___flmul	;wreg free
  4352  001D40  C01C  F035         	movff	?___flmul,___fldiv@b
  4353  001D44  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4354  001D48  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4355  001D4C  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4356  001D50  ECDB  F019         	call	___fldiv	;wreg free
  4357  001D54  C035  F04E         	movff	?___fldiv,___fltol@f1
  4358  001D58  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4359  001D5C  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4360  001D60  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4361  001D64  ECE3  F024         	call	___fltol	;wreg free
  4362  001D68  C04E  F100         	movff	?___fltol,_convert_data
  4363  001D6C  C04F  F101         	movff	?___fltol+1,_convert_data+1
  4364  001D70  C050  F102         	movff	?___fltol+2,_convert_data+2
  4365  001D74  C051  F103         	movff	?___fltol+3,_convert_data+3
  4366                           
  4367                           ;fs_adc.c: 101:         break;
  4368  001D78  EF4A  F012         	goto	l54
  4369  001D7C                     l5447:
  4370                           
  4371                           ; BSR set to: 0
  4372                           ;fs_adc.c: 104:             adc_raw_data.channel_1 = readAdcValue(1);
  4373  001D7C  0E01               	movlw	1
  4374  001D7E  EC9C  F02C         	call	_readAdcValue
  4375  001D82  C001  F175         	movff	?_readAdcValue,_adc_raw_data+2
  4376  001D86  C002  F176         	movff	?_readAdcValue+1,_adc_raw_data+3
  4377  001D8A                     
  4378                           ;fs_adc.c: 105:             procces_data.channel_1 = (float)((adc_raw_data.channel_1*5.0
      +                          )/1024.0);
  4379  001D8A  0E00               	movlw	0
  4380  001D8C  6E20               	movwf	___flmul@a^0,c
  4381  001D8E  0E00               	movlw	0
  4382  001D90  6E21               	movwf	(___flmul@a+1)^0,c
  4383  001D92  0EA0               	movlw	160
  4384  001D94  6E22               	movwf	(___flmul@a+2)^0,c
  4385  001D96  0E40               	movlw	64
  4386  001D98  6E23               	movwf	(___flmul@a+3)^0,c
  4387  001D9A  C175  F00E         	movff	_adc_raw_data+2,___xxtofl@val
  4388  001D9E  C176  F00F         	movff	_adc_raw_data+3,___xxtofl@val+1
  4389  001DA2  6A10               	clrf	(___xxtofl@val+2)^0,c
  4390  001DA4  6A11               	clrf	(___xxtofl@val+3)^0,c
  4391  001DA6  0E00               	movlw	0
  4392  001DA8  EC77  F020         	call	___xxtofl
  4393  001DAC  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4394  001DB0  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4395  001DB4  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4396  001DB8  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4397  001DBC  ECC6  F017         	call	___flmul	;wreg free
  4398  001DC0  C01C  F035         	movff	?___flmul,___fldiv@b
  4399  001DC4  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4400  001DC8  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4401  001DCC  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4402  001DD0  0E00               	movlw	0
  4403  001DD2  6E39               	movwf	___fldiv@a^0,c
  4404  001DD4  0E00               	movlw	0
  4405  001DD6  6E3A               	movwf	(___fldiv@a+1)^0,c
  4406  001DD8  0E80               	movlw	128
  4407  001DDA  6E3B               	movwf	(___fldiv@a+2)^0,c
  4408  001DDC  0E44               	movlw	68
  4409  001DDE  6E3C               	movwf	(___fldiv@a+3)^0,c
  4410  001DE0  ECDB  F019         	call	___fldiv	;wreg free
  4411  001DE4  C035  F134         	movff	?___fldiv,_procces_data+4
  4412  001DE8  C036  F135         	movff	?___fldiv+1,_procces_data+5
  4413  001DEC  C037  F136         	movff	?___fldiv+2,_procces_data+6
  4414  001DF0  C038  F137         	movff	?___fldiv+3,_procces_data+7
  4415  001DF4                     
  4416                           ;fs_adc.c: 106:             convert_data.convert_channel_1 = (uint32_t)((procces_data.ch
      +                          annel_1*999)/5);
  4417  001DF4  0E00               	movlw	0
  4418  001DF6  6E39               	movwf	___fldiv@a^0,c
  4419  001DF8  0E00               	movlw	0
  4420  001DFA  6E3A               	movwf	(___fldiv@a+1)^0,c
  4421  001DFC  0EA0               	movlw	160
  4422  001DFE  6E3B               	movwf	(___fldiv@a+2)^0,c
  4423  001E00  0E40               	movlw	64
  4424  001E02  6E3C               	movwf	(___fldiv@a+3)^0,c
  4425  001E04  0E00               	movlw	0
  4426  001E06  6E20               	movwf	___flmul@a^0,c
  4427  001E08  0EC0               	movlw	192
  4428  001E0A  6E21               	movwf	(___flmul@a+1)^0,c
  4429  001E0C  0E79               	movlw	121
  4430  001E0E  6E22               	movwf	(___flmul@a+2)^0,c
  4431  001E10  0E44               	movlw	68
  4432  001E12  6E23               	movwf	(___flmul@a+3)^0,c
  4433  001E14  C134  F01C         	movff	_procces_data+4,___flmul@b
  4434  001E18  C135  F01D         	movff	_procces_data+5,___flmul@b+1
  4435  001E1C  C136  F01E         	movff	_procces_data+6,___flmul@b+2
  4436  001E20  C137  F01F         	movff	_procces_data+7,___flmul@b+3
  4437  001E24  ECC6  F017         	call	___flmul	;wreg free
  4438  001E28  C01C  F035         	movff	?___flmul,___fldiv@b
  4439  001E2C  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4440  001E30  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4441  001E34  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4442  001E38  ECDB  F019         	call	___fldiv	;wreg free
  4443  001E3C  C035  F04E         	movff	?___fldiv,___fltol@f1
  4444  001E40  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4445  001E44  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4446  001E48  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4447  001E4C  ECE3  F024         	call	___fltol	;wreg free
  4448  001E50  C04E  F104         	movff	?___fltol,_convert_data+4
  4449  001E54  C04F  F105         	movff	?___fltol+1,_convert_data+5
  4450  001E58  C050  F106         	movff	?___fltol+2,_convert_data+6
  4451  001E5C  C051  F107         	movff	?___fltol+3,_convert_data+7
  4452                           
  4453                           ;fs_adc.c: 107:         break;
  4454  001E60  EF4A  F012         	goto	l54
  4455  001E64                     l5453:
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;fs_adc.c: 110:             adc_raw_data.channel_2 = readAdcValue(2);
  4459  001E64  0E02               	movlw	2
  4460  001E66  EC9C  F02C         	call	_readAdcValue
  4461  001E6A  C001  F177         	movff	?_readAdcValue,_adc_raw_data+4
  4462  001E6E  C002  F178         	movff	?_readAdcValue+1,_adc_raw_data+5
  4463  001E72                     
  4464                           ;fs_adc.c: 111:             procces_data.channel_2 = (float)((adc_raw_data.channel_2*5.0
      +                          )/1024.0);
  4465  001E72  0E00               	movlw	0
  4466  001E74  6E20               	movwf	___flmul@a^0,c
  4467  001E76  0E00               	movlw	0
  4468  001E78  6E21               	movwf	(___flmul@a+1)^0,c
  4469  001E7A  0EA0               	movlw	160
  4470  001E7C  6E22               	movwf	(___flmul@a+2)^0,c
  4471  001E7E  0E40               	movlw	64
  4472  001E80  6E23               	movwf	(___flmul@a+3)^0,c
  4473  001E82  C177  F00E         	movff	_adc_raw_data+4,___xxtofl@val
  4474  001E86  C178  F00F         	movff	_adc_raw_data+5,___xxtofl@val+1
  4475  001E8A  6A10               	clrf	(___xxtofl@val+2)^0,c
  4476  001E8C  6A11               	clrf	(___xxtofl@val+3)^0,c
  4477  001E8E  0E00               	movlw	0
  4478  001E90  EC77  F020         	call	___xxtofl
  4479  001E94  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4480  001E98  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4481  001E9C  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4482  001EA0  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4483  001EA4  ECC6  F017         	call	___flmul	;wreg free
  4484  001EA8  C01C  F035         	movff	?___flmul,___fldiv@b
  4485  001EAC  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4486  001EB0  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4487  001EB4  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4488  001EB8  0E00               	movlw	0
  4489  001EBA  6E39               	movwf	___fldiv@a^0,c
  4490  001EBC  0E00               	movlw	0
  4491  001EBE  6E3A               	movwf	(___fldiv@a+1)^0,c
  4492  001EC0  0E80               	movlw	128
  4493  001EC2  6E3B               	movwf	(___fldiv@a+2)^0,c
  4494  001EC4  0E44               	movlw	68
  4495  001EC6  6E3C               	movwf	(___fldiv@a+3)^0,c
  4496  001EC8  ECDB  F019         	call	___fldiv	;wreg free
  4497  001ECC  C035  F138         	movff	?___fldiv,_procces_data+8
  4498  001ED0  C036  F139         	movff	?___fldiv+1,_procces_data+9
  4499  001ED4  C037  F13A         	movff	?___fldiv+2,_procces_data+10
  4500  001ED8  C038  F13B         	movff	?___fldiv+3,_procces_data+11
  4501  001EDC                     
  4502                           ;fs_adc.c: 112:             convert_data.convert_channel_2 = (uint32_t)((procces_data.ch
      +                          annel_2*999)/5);
  4503  001EDC  0E00               	movlw	0
  4504  001EDE  6E39               	movwf	___fldiv@a^0,c
  4505  001EE0  0E00               	movlw	0
  4506  001EE2  6E3A               	movwf	(___fldiv@a+1)^0,c
  4507  001EE4  0EA0               	movlw	160
  4508  001EE6  6E3B               	movwf	(___fldiv@a+2)^0,c
  4509  001EE8  0E40               	movlw	64
  4510  001EEA  6E3C               	movwf	(___fldiv@a+3)^0,c
  4511  001EEC  0E00               	movlw	0
  4512  001EEE  6E20               	movwf	___flmul@a^0,c
  4513  001EF0  0EC0               	movlw	192
  4514  001EF2  6E21               	movwf	(___flmul@a+1)^0,c
  4515  001EF4  0E79               	movlw	121
  4516  001EF6  6E22               	movwf	(___flmul@a+2)^0,c
  4517  001EF8  0E44               	movlw	68
  4518  001EFA  6E23               	movwf	(___flmul@a+3)^0,c
  4519  001EFC  C138  F01C         	movff	_procces_data+8,___flmul@b
  4520  001F00  C139  F01D         	movff	_procces_data+9,___flmul@b+1
  4521  001F04  C13A  F01E         	movff	_procces_data+10,___flmul@b+2
  4522  001F08  C13B  F01F         	movff	_procces_data+11,___flmul@b+3
  4523  001F0C  ECC6  F017         	call	___flmul	;wreg free
  4524  001F10  C01C  F035         	movff	?___flmul,___fldiv@b
  4525  001F14  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4526  001F18  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4527  001F1C  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4528  001F20  ECDB  F019         	call	___fldiv	;wreg free
  4529  001F24  C035  F04E         	movff	?___fldiv,___fltol@f1
  4530  001F28  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4531  001F2C  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4532  001F30  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4533  001F34  ECE3  F024         	call	___fltol	;wreg free
  4534  001F38  C04E  F108         	movff	?___fltol,_convert_data+8
  4535  001F3C  C04F  F109         	movff	?___fltol+1,_convert_data+9
  4536  001F40  C050  F10A         	movff	?___fltol+2,_convert_data+10
  4537  001F44  C051  F10B         	movff	?___fltol+3,_convert_data+11
  4538  001F48                     
  4539                           ;fs_adc.c: 113:             convert_data.convert_channel_2_f = (uint16_t)((procces_data.
      +                          channel_2*999)/5);
  4540  001F48  0E00               	movlw	0
  4541  001F4A  6E39               	movwf	___fldiv@a^0,c
  4542  001F4C  0E00               	movlw	0
  4543  001F4E  6E3A               	movwf	(___fldiv@a+1)^0,c
  4544  001F50  0EA0               	movlw	160
  4545  001F52  6E3B               	movwf	(___fldiv@a+2)^0,c
  4546  001F54  0E40               	movlw	64
  4547  001F56  6E3C               	movwf	(___fldiv@a+3)^0,c
  4548  001F58  0E00               	movlw	0
  4549  001F5A  6E20               	movwf	___flmul@a^0,c
  4550  001F5C  0EC0               	movlw	192
  4551  001F5E  6E21               	movwf	(___flmul@a+1)^0,c
  4552  001F60  0E79               	movlw	121
  4553  001F62  6E22               	movwf	(___flmul@a+2)^0,c
  4554  001F64  0E44               	movlw	68
  4555  001F66  6E23               	movwf	(___flmul@a+3)^0,c
  4556  001F68  C138  F01C         	movff	_procces_data+8,___flmul@b
  4557  001F6C  C139  F01D         	movff	_procces_data+9,___flmul@b+1
  4558  001F70  C13A  F01E         	movff	_procces_data+10,___flmul@b+2
  4559  001F74  C13B  F01F         	movff	_procces_data+11,___flmul@b+3
  4560  001F78  ECC6  F017         	call	___flmul	;wreg free
  4561  001F7C  C01C  F035         	movff	?___flmul,___fldiv@b
  4562  001F80  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4563  001F84  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4564  001F88  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4565  001F8C  ECDB  F019         	call	___fldiv	;wreg free
  4566  001F90  C035  F04E         	movff	?___fldiv,___fltol@f1
  4567  001F94  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4568  001F98  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4569  001F9C  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4570  001FA0  ECE3  F024         	call	___fltol	;wreg free
  4571  001FA4  C04E  F124         	movff	?___fltol,_convert_data+36
  4572  001FA8  C04F  F125         	movff	?___fltol+1,_convert_data+37
  4573                           
  4574                           ;fs_adc.c: 114:         break;
  4575  001FAC  EF4A  F012         	goto	l54
  4576  001FB0                     l5461:
  4577                           
  4578                           ; BSR set to: 0
  4579                           ;fs_adc.c: 117:             adc_raw_data.channel_3 = readAdcValue(3);
  4580  001FB0  0E03               	movlw	3
  4581  001FB2  EC9C  F02C         	call	_readAdcValue
  4582  001FB6  C001  F179         	movff	?_readAdcValue,_adc_raw_data+6
  4583  001FBA  C002  F17A         	movff	?_readAdcValue+1,_adc_raw_data+7
  4584  001FBE                     
  4585                           ;fs_adc.c: 118:             procces_data.channel_3 = (float)((adc_raw_data.channel_3*5.0
      +                          )/1024.0);
  4586  001FBE  0E00               	movlw	0
  4587  001FC0  6E20               	movwf	___flmul@a^0,c
  4588  001FC2  0E00               	movlw	0
  4589  001FC4  6E21               	movwf	(___flmul@a+1)^0,c
  4590  001FC6  0EA0               	movlw	160
  4591  001FC8  6E22               	movwf	(___flmul@a+2)^0,c
  4592  001FCA  0E40               	movlw	64
  4593  001FCC  6E23               	movwf	(___flmul@a+3)^0,c
  4594  001FCE  C179  F00E         	movff	_adc_raw_data+6,___xxtofl@val
  4595  001FD2  C17A  F00F         	movff	_adc_raw_data+7,___xxtofl@val+1
  4596  001FD6  6A10               	clrf	(___xxtofl@val+2)^0,c
  4597  001FD8  6A11               	clrf	(___xxtofl@val+3)^0,c
  4598  001FDA  0E00               	movlw	0
  4599  001FDC  EC77  F020         	call	___xxtofl
  4600  001FE0  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4601  001FE4  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4602  001FE8  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4603  001FEC  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4604  001FF0  ECC6  F017         	call	___flmul	;wreg free
  4605  001FF4  C01C  F035         	movff	?___flmul,___fldiv@b
  4606  001FF8  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4607  001FFC  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4608  002000  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4609  002004  0E00               	movlw	0
  4610  002006  6E39               	movwf	___fldiv@a^0,c
  4611  002008  0E00               	movlw	0
  4612  00200A  6E3A               	movwf	(___fldiv@a+1)^0,c
  4613  00200C  0E80               	movlw	128
  4614  00200E  6E3B               	movwf	(___fldiv@a+2)^0,c
  4615  002010  0E44               	movlw	68
  4616  002012  6E3C               	movwf	(___fldiv@a+3)^0,c
  4617  002014  ECDB  F019         	call	___fldiv	;wreg free
  4618  002018  C035  F13C         	movff	?___fldiv,_procces_data+12
  4619  00201C  C036  F13D         	movff	?___fldiv+1,_procces_data+13
  4620  002020  C037  F13E         	movff	?___fldiv+2,_procces_data+14
  4621  002024  C038  F13F         	movff	?___fldiv+3,_procces_data+15
  4622  002028                     
  4623                           ;fs_adc.c: 119:             convert_data.convert_channel_3 = (uint32_t)((procces_data.ch
      +                          annel_3*999)/5);
  4624  002028  0E00               	movlw	0
  4625  00202A  6E39               	movwf	___fldiv@a^0,c
  4626  00202C  0E00               	movlw	0
  4627  00202E  6E3A               	movwf	(___fldiv@a+1)^0,c
  4628  002030  0EA0               	movlw	160
  4629  002032  6E3B               	movwf	(___fldiv@a+2)^0,c
  4630  002034  0E40               	movlw	64
  4631  002036  6E3C               	movwf	(___fldiv@a+3)^0,c
  4632  002038  0E00               	movlw	0
  4633  00203A  6E20               	movwf	___flmul@a^0,c
  4634  00203C  0EC0               	movlw	192
  4635  00203E  6E21               	movwf	(___flmul@a+1)^0,c
  4636  002040  0E79               	movlw	121
  4637  002042  6E22               	movwf	(___flmul@a+2)^0,c
  4638  002044  0E44               	movlw	68
  4639  002046  6E23               	movwf	(___flmul@a+3)^0,c
  4640  002048  C13C  F01C         	movff	_procces_data+12,___flmul@b
  4641  00204C  C13D  F01D         	movff	_procces_data+13,___flmul@b+1
  4642  002050  C13E  F01E         	movff	_procces_data+14,___flmul@b+2
  4643  002054  C13F  F01F         	movff	_procces_data+15,___flmul@b+3
  4644  002058  ECC6  F017         	call	___flmul	;wreg free
  4645  00205C  C01C  F035         	movff	?___flmul,___fldiv@b
  4646  002060  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4647  002064  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4648  002068  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4649  00206C  ECDB  F019         	call	___fldiv	;wreg free
  4650  002070  C035  F04E         	movff	?___fldiv,___fltol@f1
  4651  002074  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4652  002078  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4653  00207C  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4654  002080  ECE3  F024         	call	___fltol	;wreg free
  4655  002084  C04E  F10C         	movff	?___fltol,_convert_data+12
  4656  002088  C04F  F10D         	movff	?___fltol+1,_convert_data+13
  4657  00208C  C050  F10E         	movff	?___fltol+2,_convert_data+14
  4658  002090  C051  F10F         	movff	?___fltol+3,_convert_data+15
  4659                           
  4660                           ;fs_adc.c: 120:         break;
  4661  002094  EF4A  F012         	goto	l54
  4662  002098                     l5467:
  4663                           
  4664                           ; BSR set to: 0
  4665                           ;fs_adc.c: 123:             adc_raw_data.channel_4 = readAdcValue(4);
  4666  002098  0E04               	movlw	4
  4667  00209A  EC9C  F02C         	call	_readAdcValue
  4668  00209E  C001  F17B         	movff	?_readAdcValue,_adc_raw_data+8
  4669  0020A2  C002  F17C         	movff	?_readAdcValue+1,_adc_raw_data+9
  4670  0020A6                     
  4671                           ;fs_adc.c: 124:             procces_data.channel_4 = (float)((adc_raw_data.channel_4*5.0
      +                          )/1024.0);
  4672  0020A6  0E00               	movlw	0
  4673  0020A8  6E20               	movwf	___flmul@a^0,c
  4674  0020AA  0E00               	movlw	0
  4675  0020AC  6E21               	movwf	(___flmul@a+1)^0,c
  4676  0020AE  0EA0               	movlw	160
  4677  0020B0  6E22               	movwf	(___flmul@a+2)^0,c
  4678  0020B2  0E40               	movlw	64
  4679  0020B4  6E23               	movwf	(___flmul@a+3)^0,c
  4680  0020B6  C17B  F00E         	movff	_adc_raw_data+8,___xxtofl@val
  4681  0020BA  C17C  F00F         	movff	_adc_raw_data+9,___xxtofl@val+1
  4682  0020BE  6A10               	clrf	(___xxtofl@val+2)^0,c
  4683  0020C0  6A11               	clrf	(___xxtofl@val+3)^0,c
  4684  0020C2  0E00               	movlw	0
  4685  0020C4  EC77  F020         	call	___xxtofl
  4686  0020C8  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4687  0020CC  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4688  0020D0  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4689  0020D4  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4690  0020D8  ECC6  F017         	call	___flmul	;wreg free
  4691  0020DC  C01C  F035         	movff	?___flmul,___fldiv@b
  4692  0020E0  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4693  0020E4  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4694  0020E8  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4695  0020EC  0E00               	movlw	0
  4696  0020EE  6E39               	movwf	___fldiv@a^0,c
  4697  0020F0  0E00               	movlw	0
  4698  0020F2  6E3A               	movwf	(___fldiv@a+1)^0,c
  4699  0020F4  0E80               	movlw	128
  4700  0020F6  6E3B               	movwf	(___fldiv@a+2)^0,c
  4701  0020F8  0E44               	movlw	68
  4702  0020FA  6E3C               	movwf	(___fldiv@a+3)^0,c
  4703  0020FC  ECDB  F019         	call	___fldiv	;wreg free
  4704  002100  C035  F140         	movff	?___fldiv,_procces_data+16
  4705  002104  C036  F141         	movff	?___fldiv+1,_procces_data+17
  4706  002108  C037  F142         	movff	?___fldiv+2,_procces_data+18
  4707  00210C  C038  F143         	movff	?___fldiv+3,_procces_data+19
  4708  002110                     
  4709                           ;fs_adc.c: 125:             convert_data.convert_channel_4 = (uint32_t)((procces_data.ch
      +                          annel_4*999)/5);
  4710  002110  0E00               	movlw	0
  4711  002112  6E39               	movwf	___fldiv@a^0,c
  4712  002114  0E00               	movlw	0
  4713  002116  6E3A               	movwf	(___fldiv@a+1)^0,c
  4714  002118  0EA0               	movlw	160
  4715  00211A  6E3B               	movwf	(___fldiv@a+2)^0,c
  4716  00211C  0E40               	movlw	64
  4717  00211E  6E3C               	movwf	(___fldiv@a+3)^0,c
  4718  002120  0E00               	movlw	0
  4719  002122  6E20               	movwf	___flmul@a^0,c
  4720  002124  0EC0               	movlw	192
  4721  002126  6E21               	movwf	(___flmul@a+1)^0,c
  4722  002128  0E79               	movlw	121
  4723  00212A  6E22               	movwf	(___flmul@a+2)^0,c
  4724  00212C  0E44               	movlw	68
  4725  00212E  6E23               	movwf	(___flmul@a+3)^0,c
  4726  002130  C140  F01C         	movff	_procces_data+16,___flmul@b
  4727  002134  C141  F01D         	movff	_procces_data+17,___flmul@b+1
  4728  002138  C142  F01E         	movff	_procces_data+18,___flmul@b+2
  4729  00213C  C143  F01F         	movff	_procces_data+19,___flmul@b+3
  4730  002140  ECC6  F017         	call	___flmul	;wreg free
  4731  002144  C01C  F035         	movff	?___flmul,___fldiv@b
  4732  002148  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4733  00214C  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4734  002150  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4735  002154  ECDB  F019         	call	___fldiv	;wreg free
  4736  002158  C035  F04E         	movff	?___fldiv,___fltol@f1
  4737  00215C  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4738  002160  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4739  002164  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4740  002168  ECE3  F024         	call	___fltol	;wreg free
  4741  00216C  C04E  F110         	movff	?___fltol,_convert_data+16
  4742  002170  C04F  F111         	movff	?___fltol+1,_convert_data+17
  4743  002174  C050  F112         	movff	?___fltol+2,_convert_data+18
  4744  002178  C051  F113         	movff	?___fltol+3,_convert_data+19
  4745                           
  4746                           ;fs_adc.c: 126:         break;
  4747  00217C  EF4A  F012         	goto	l54
  4748  002180                     l5473:
  4749                           
  4750                           ; BSR set to: 0
  4751                           ;fs_adc.c: 129:            adc_raw_data.channel_5 = readAdcValue(5);
  4752  002180  0E05               	movlw	5
  4753  002182  EC9C  F02C         	call	_readAdcValue
  4754  002186  C001  F17D         	movff	?_readAdcValue,_adc_raw_data+10
  4755  00218A  C002  F17E         	movff	?_readAdcValue+1,_adc_raw_data+11
  4756  00218E                     
  4757                           ;fs_adc.c: 130:            procces_data.channel_5 = (float)((adc_raw_data.channel_5*5.0)
      +                          /1024.0);
  4758  00218E  0E00               	movlw	0
  4759  002190  6E20               	movwf	___flmul@a^0,c
  4760  002192  0E00               	movlw	0
  4761  002194  6E21               	movwf	(___flmul@a+1)^0,c
  4762  002196  0EA0               	movlw	160
  4763  002198  6E22               	movwf	(___flmul@a+2)^0,c
  4764  00219A  0E40               	movlw	64
  4765  00219C  6E23               	movwf	(___flmul@a+3)^0,c
  4766  00219E  C17D  F00E         	movff	_adc_raw_data+10,___xxtofl@val
  4767  0021A2  C17E  F00F         	movff	_adc_raw_data+11,___xxtofl@val+1
  4768  0021A6  6A10               	clrf	(___xxtofl@val+2)^0,c
  4769  0021A8  6A11               	clrf	(___xxtofl@val+3)^0,c
  4770  0021AA  0E00               	movlw	0
  4771  0021AC  EC77  F020         	call	___xxtofl
  4772  0021B0  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4773  0021B4  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4774  0021B8  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4775  0021BC  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4776  0021C0  ECC6  F017         	call	___flmul	;wreg free
  4777  0021C4  C01C  F035         	movff	?___flmul,___fldiv@b
  4778  0021C8  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4779  0021CC  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4780  0021D0  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4781  0021D4  0E00               	movlw	0
  4782  0021D6  6E39               	movwf	___fldiv@a^0,c
  4783  0021D8  0E00               	movlw	0
  4784  0021DA  6E3A               	movwf	(___fldiv@a+1)^0,c
  4785  0021DC  0E80               	movlw	128
  4786  0021DE  6E3B               	movwf	(___fldiv@a+2)^0,c
  4787  0021E0  0E44               	movlw	68
  4788  0021E2  6E3C               	movwf	(___fldiv@a+3)^0,c
  4789  0021E4  ECDB  F019         	call	___fldiv	;wreg free
  4790  0021E8  C035  F144         	movff	?___fldiv,_procces_data+20
  4791  0021EC  C036  F145         	movff	?___fldiv+1,_procces_data+21
  4792  0021F0  C037  F146         	movff	?___fldiv+2,_procces_data+22
  4793  0021F4  C038  F147         	movff	?___fldiv+3,_procces_data+23
  4794  0021F8                     
  4795                           ;fs_adc.c: 131:            convert_data.convert_channel_5 = (uint32_t)((procces_data.cha
      +                          nnel_5*999)/5);
  4796  0021F8  0E00               	movlw	0
  4797  0021FA  6E39               	movwf	___fldiv@a^0,c
  4798  0021FC  0E00               	movlw	0
  4799  0021FE  6E3A               	movwf	(___fldiv@a+1)^0,c
  4800  002200  0EA0               	movlw	160
  4801  002202  6E3B               	movwf	(___fldiv@a+2)^0,c
  4802  002204  0E40               	movlw	64
  4803  002206  6E3C               	movwf	(___fldiv@a+3)^0,c
  4804  002208  0E00               	movlw	0
  4805  00220A  6E20               	movwf	___flmul@a^0,c
  4806  00220C  0EC0               	movlw	192
  4807  00220E  6E21               	movwf	(___flmul@a+1)^0,c
  4808  002210  0E79               	movlw	121
  4809  002212  6E22               	movwf	(___flmul@a+2)^0,c
  4810  002214  0E44               	movlw	68
  4811  002216  6E23               	movwf	(___flmul@a+3)^0,c
  4812  002218  C144  F01C         	movff	_procces_data+20,___flmul@b
  4813  00221C  C145  F01D         	movff	_procces_data+21,___flmul@b+1
  4814  002220  C146  F01E         	movff	_procces_data+22,___flmul@b+2
  4815  002224  C147  F01F         	movff	_procces_data+23,___flmul@b+3
  4816  002228  ECC6  F017         	call	___flmul	;wreg free
  4817  00222C  C01C  F035         	movff	?___flmul,___fldiv@b
  4818  002230  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4819  002234  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4820  002238  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4821  00223C  ECDB  F019         	call	___fldiv	;wreg free
  4822  002240  C035  F04E         	movff	?___fldiv,___fltol@f1
  4823  002244  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4824  002248  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4825  00224C  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4826  002250  ECE3  F024         	call	___fltol	;wreg free
  4827  002254  C04E  F114         	movff	?___fltol,_convert_data+20
  4828  002258  C04F  F115         	movff	?___fltol+1,_convert_data+21
  4829  00225C  C050  F116         	movff	?___fltol+2,_convert_data+22
  4830  002260  C051  F117         	movff	?___fltol+3,_convert_data+23
  4831                           
  4832                           ;fs_adc.c: 132:         break;
  4833  002264  EF4A  F012         	goto	l54
  4834  002268                     l5479:
  4835                           
  4836                           ; BSR set to: 0
  4837                           ;fs_adc.c: 135:             adc_raw_data.channel_6 = readAdcValue(6);
  4838  002268  0E06               	movlw	6
  4839  00226A  EC9C  F02C         	call	_readAdcValue
  4840  00226E  C001  F17F         	movff	?_readAdcValue,_adc_raw_data+12
  4841  002272  C002  F180         	movff	?_readAdcValue+1,_adc_raw_data+13
  4842  002276                     
  4843                           ;fs_adc.c: 136:             procces_data.channel_6 = (float)((adc_raw_data.channel_6*5.0
      +                          )/1024.0);
  4844  002276  0E00               	movlw	0
  4845  002278  6E20               	movwf	___flmul@a^0,c
  4846  00227A  0E00               	movlw	0
  4847  00227C  6E21               	movwf	(___flmul@a+1)^0,c
  4848  00227E  0EA0               	movlw	160
  4849  002280  6E22               	movwf	(___flmul@a+2)^0,c
  4850  002282  0E40               	movlw	64
  4851  002284  6E23               	movwf	(___flmul@a+3)^0,c
  4852  002286  C17F  F00E         	movff	_adc_raw_data+12,___xxtofl@val
  4853  00228A  C180  F00F         	movff	_adc_raw_data+13,___xxtofl@val+1
  4854  00228E  6A10               	clrf	(___xxtofl@val+2)^0,c
  4855  002290  6A11               	clrf	(___xxtofl@val+3)^0,c
  4856  002292  0E00               	movlw	0
  4857  002294  EC77  F020         	call	___xxtofl
  4858  002298  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4859  00229C  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4860  0022A0  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4861  0022A4  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4862  0022A8  ECC6  F017         	call	___flmul	;wreg free
  4863  0022AC  C01C  F035         	movff	?___flmul,___fldiv@b
  4864  0022B0  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4865  0022B4  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4866  0022B8  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4867  0022BC  0E00               	movlw	0
  4868  0022BE  6E39               	movwf	___fldiv@a^0,c
  4869  0022C0  0E00               	movlw	0
  4870  0022C2  6E3A               	movwf	(___fldiv@a+1)^0,c
  4871  0022C4  0E80               	movlw	128
  4872  0022C6  6E3B               	movwf	(___fldiv@a+2)^0,c
  4873  0022C8  0E44               	movlw	68
  4874  0022CA  6E3C               	movwf	(___fldiv@a+3)^0,c
  4875  0022CC  ECDB  F019         	call	___fldiv	;wreg free
  4876  0022D0  C035  F148         	movff	?___fldiv,_procces_data+24
  4877  0022D4  C036  F149         	movff	?___fldiv+1,_procces_data+25
  4878  0022D8  C037  F14A         	movff	?___fldiv+2,_procces_data+26
  4879  0022DC  C038  F14B         	movff	?___fldiv+3,_procces_data+27
  4880  0022E0                     
  4881                           ;fs_adc.c: 137:             convert_data.convert_channel_6 = (uint32_t)((procces_data.ch
      +                          annel_6*999)/5);
  4882  0022E0  0E00               	movlw	0
  4883  0022E2  6E39               	movwf	___fldiv@a^0,c
  4884  0022E4  0E00               	movlw	0
  4885  0022E6  6E3A               	movwf	(___fldiv@a+1)^0,c
  4886  0022E8  0EA0               	movlw	160
  4887  0022EA  6E3B               	movwf	(___fldiv@a+2)^0,c
  4888  0022EC  0E40               	movlw	64
  4889  0022EE  6E3C               	movwf	(___fldiv@a+3)^0,c
  4890  0022F0  0E00               	movlw	0
  4891  0022F2  6E20               	movwf	___flmul@a^0,c
  4892  0022F4  0EC0               	movlw	192
  4893  0022F6  6E21               	movwf	(___flmul@a+1)^0,c
  4894  0022F8  0E79               	movlw	121
  4895  0022FA  6E22               	movwf	(___flmul@a+2)^0,c
  4896  0022FC  0E44               	movlw	68
  4897  0022FE  6E23               	movwf	(___flmul@a+3)^0,c
  4898  002300  C148  F01C         	movff	_procces_data+24,___flmul@b
  4899  002304  C149  F01D         	movff	_procces_data+25,___flmul@b+1
  4900  002308  C14A  F01E         	movff	_procces_data+26,___flmul@b+2
  4901  00230C  C14B  F01F         	movff	_procces_data+27,___flmul@b+3
  4902  002310  ECC6  F017         	call	___flmul	;wreg free
  4903  002314  C01C  F035         	movff	?___flmul,___fldiv@b
  4904  002318  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4905  00231C  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4906  002320  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4907  002324  ECDB  F019         	call	___fldiv	;wreg free
  4908  002328  C035  F04E         	movff	?___fldiv,___fltol@f1
  4909  00232C  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4910  002330  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4911  002334  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4912  002338  ECE3  F024         	call	___fltol	;wreg free
  4913  00233C  C04E  F118         	movff	?___fltol,_convert_data+24
  4914  002340  C04F  F119         	movff	?___fltol+1,_convert_data+25
  4915  002344  C050  F11A         	movff	?___fltol+2,_convert_data+26
  4916  002348  C051  F11B         	movff	?___fltol+3,_convert_data+27
  4917                           
  4918                           ;fs_adc.c: 138:         break;
  4919  00234C  EF4A  F012         	goto	l54
  4920  002350                     l5485:
  4921                           
  4922                           ; BSR set to: 0
  4923                           ;fs_adc.c: 141:             adc_raw_data.channel_7 = readAdcValue(7);
  4924  002350  0E07               	movlw	7
  4925  002352  EC9C  F02C         	call	_readAdcValue
  4926  002356  C001  F181         	movff	?_readAdcValue,_adc_raw_data+14
  4927  00235A  C002  F182         	movff	?_readAdcValue+1,_adc_raw_data+15
  4928  00235E                     
  4929                           ;fs_adc.c: 142:             procces_data.channel_7 = (float)((adc_raw_data.channel_7*5.0
      +                          )/1024.0);
  4930  00235E  0E00               	movlw	0
  4931  002360  6E20               	movwf	___flmul@a^0,c
  4932  002362  0E00               	movlw	0
  4933  002364  6E21               	movwf	(___flmul@a+1)^0,c
  4934  002366  0EA0               	movlw	160
  4935  002368  6E22               	movwf	(___flmul@a+2)^0,c
  4936  00236A  0E40               	movlw	64
  4937  00236C  6E23               	movwf	(___flmul@a+3)^0,c
  4938  00236E  C181  F00E         	movff	_adc_raw_data+14,___xxtofl@val
  4939  002372  C182  F00F         	movff	_adc_raw_data+15,___xxtofl@val+1
  4940  002376  6A10               	clrf	(___xxtofl@val+2)^0,c
  4941  002378  6A11               	clrf	(___xxtofl@val+3)^0,c
  4942  00237A  0E00               	movlw	0
  4943  00237C  EC77  F020         	call	___xxtofl
  4944  002380  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4945  002384  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4946  002388  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4947  00238C  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4948  002390  ECC6  F017         	call	___flmul	;wreg free
  4949  002394  C01C  F035         	movff	?___flmul,___fldiv@b
  4950  002398  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4951  00239C  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4952  0023A0  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4953  0023A4  0E00               	movlw	0
  4954  0023A6  6E39               	movwf	___fldiv@a^0,c
  4955  0023A8  0E00               	movlw	0
  4956  0023AA  6E3A               	movwf	(___fldiv@a+1)^0,c
  4957  0023AC  0E80               	movlw	128
  4958  0023AE  6E3B               	movwf	(___fldiv@a+2)^0,c
  4959  0023B0  0E44               	movlw	68
  4960  0023B2  6E3C               	movwf	(___fldiv@a+3)^0,c
  4961  0023B4  ECDB  F019         	call	___fldiv	;wreg free
  4962  0023B8  C035  F14C         	movff	?___fldiv,_procces_data+28
  4963  0023BC  C036  F14D         	movff	?___fldiv+1,_procces_data+29
  4964  0023C0  C037  F14E         	movff	?___fldiv+2,_procces_data+30
  4965  0023C4  C038  F14F         	movff	?___fldiv+3,_procces_data+31
  4966  0023C8                     
  4967                           ;fs_adc.c: 143:             convert_data.convert_channel_7 = (uint32_t)((procces_data.ch
      +                          annel_7*999)/5);
  4968  0023C8  0E00               	movlw	0
  4969  0023CA  6E39               	movwf	___fldiv@a^0,c
  4970  0023CC  0E00               	movlw	0
  4971  0023CE  6E3A               	movwf	(___fldiv@a+1)^0,c
  4972  0023D0  0EA0               	movlw	160
  4973  0023D2  6E3B               	movwf	(___fldiv@a+2)^0,c
  4974  0023D4  0E40               	movlw	64
  4975  0023D6  6E3C               	movwf	(___fldiv@a+3)^0,c
  4976  0023D8  0E00               	movlw	0
  4977  0023DA  6E20               	movwf	___flmul@a^0,c
  4978  0023DC  0EC0               	movlw	192
  4979  0023DE  6E21               	movwf	(___flmul@a+1)^0,c
  4980  0023E0  0E79               	movlw	121
  4981  0023E2  6E22               	movwf	(___flmul@a+2)^0,c
  4982  0023E4  0E44               	movlw	68
  4983  0023E6  6E23               	movwf	(___flmul@a+3)^0,c
  4984  0023E8  C14C  F01C         	movff	_procces_data+28,___flmul@b
  4985  0023EC  C14D  F01D         	movff	_procces_data+29,___flmul@b+1
  4986  0023F0  C14E  F01E         	movff	_procces_data+30,___flmul@b+2
  4987  0023F4  C14F  F01F         	movff	_procces_data+31,___flmul@b+3
  4988  0023F8  ECC6  F017         	call	___flmul	;wreg free
  4989  0023FC  C01C  F035         	movff	?___flmul,___fldiv@b
  4990  002400  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4991  002404  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4992  002408  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4993  00240C  ECDB  F019         	call	___fldiv	;wreg free
  4994  002410  C035  F04E         	movff	?___fldiv,___fltol@f1
  4995  002414  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4996  002418  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4997  00241C  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4998  002420  ECE3  F024         	call	___fltol	;wreg free
  4999  002424  C04E  F11C         	movff	?___fltol,_convert_data+28
  5000  002428  C04F  F11D         	movff	?___fltol+1,_convert_data+29
  5001  00242C  C050  F11E         	movff	?___fltol+2,_convert_data+30
  5002  002430  C051  F11F         	movff	?___fltol+3,_convert_data+31
  5003                           
  5004                           ;fs_adc.c: 144:         break;
  5005  002434  EF4A  F012         	goto	l54
  5006  002438                     l5493:
  5007  002438  0100               	movlb	0	; () banked
  5008  00243A  51FC               	movf	(_timer_value+9)& (0+255),w,b
  5009  00243C  6E58               	movwf	??_scanAdcConversion^0,c
  5010  00243E  6A59               	clrf	(??_scanAdcConversion+1)^0,c
  5011                           
  5012                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5013                           ; Switch size 1, requested type "simple"
  5014                           ; Number of cases is 1, Range of values is 0 to 0
  5015                           ; switch strategies available:
  5016                           ; Name         Instructions Cycles
  5017                           ; simple_byte            4     3 (average)
  5018                           ;	Chosen strategy is simple_byte
  5019  002440  5059               	movf	(??_scanAdcConversion+1)^0,w,c
  5020  002442  0A00               	xorlw	0	; case 0
  5021  002444  B4D8               	btfsc	status,2,c
  5022  002446  EF27  F012         	goto	l6303
  5023  00244A  EF4A  F012         	goto	l54
  5024  00244E                     l6303:
  5025                           
  5026                           ; BSR set to: 0
  5027                           ; Switch size 1, requested type "simple"
  5028                           ; Number of cases is 8, Range of values is 1 to 8
  5029                           ; switch strategies available:
  5030                           ; Name         Instructions Cycles
  5031                           ; simple_byte           25    13 (average)
  5032                           ;	Chosen strategy is simple_byte
  5033  00244E  5058               	movf	??_scanAdcConversion^0,w,c
  5034  002450  0A01               	xorlw	1	; case 1
  5035  002452  B4D8               	btfsc	status,2,c
  5036  002454  EF4A  F00E         	goto	l5441
  5037  002458  0A03               	xorlw	3	; case 2
  5038  00245A  B4D8               	btfsc	status,2,c
  5039  00245C  EFBE  F00E         	goto	l5447
  5040  002460  0A01               	xorlw	1	; case 3
  5041  002462  B4D8               	btfsc	status,2,c
  5042  002464  EF32  F00F         	goto	l5453
  5043  002468  0A07               	xorlw	7	; case 4
  5044  00246A  B4D8               	btfsc	status,2,c
  5045  00246C  EFD8  F00F         	goto	l5461
  5046  002470  0A01               	xorlw	1	; case 5
  5047  002472  B4D8               	btfsc	status,2,c
  5048  002474  EF4C  F010         	goto	l5467
  5049  002478  0A03               	xorlw	3	; case 6
  5050  00247A  B4D8               	btfsc	status,2,c
  5051  00247C  EFC0  F010         	goto	l5473
  5052  002480  0A01               	xorlw	1	; case 7
  5053  002482  B4D8               	btfsc	status,2,c
  5054  002484  EF34  F011         	goto	l5479
  5055  002488  0A0F               	xorlw	15	; case 8
  5056  00248A  B4D8               	btfsc	status,2,c
  5057  00248C  EFA8  F011         	goto	l5485
  5058  002490  EF4A  F012         	goto	l54
  5059  002494                     l54:
  5060  002494  0012               	return		;funcret
  5061  002496                     __end_of_scanAdcConversion:
  5062                           	callstack 0
  5063                           
  5064 ;; *************** function _readAdcValue *****************
  5065 ;; Defined at:
  5066 ;;		line 34 in file "fs_adc.c"
  5067 ;; Parameters:    Size  Location     Type
  5068 ;;  adcChannel      1    wreg     unsigned char 
  5069 ;; Auto vars:     Size  Location     Type
  5070 ;;  adcChannel      1    4[COMRAM] unsigned char 
  5071 ;;  adcValue        2    5[COMRAM] unsigned short 
  5072 ;; Return value:  Size  Location     Type
  5073 ;;                  2    0[COMRAM] unsigned short 
  5074 ;; Registers used:
  5075 ;;		wreg, status,2, status,0
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5081 ;;      Params:         2       0       0       0       0       0       0
  5082 ;;      Locals:         3       0       0       0       0       0       0
  5083 ;;      Temps:          2       0       0       0       0       0       0
  5084 ;;      Totals:         7       0       0       0       0       0       0
  5085 ;;Total ram usage:        7 bytes
  5086 ;; Hardware stack levels used:    1
  5087 ;; Hardware stack levels required when called:    1
  5088 ;; This function calls:
  5089 ;;		Nothing
  5090 ;; This function is called by:
  5091 ;;		_scanAdcConversion
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095                           	psect	text11
  5096  005938                     __ptext11:
  5097                           	callstack 0
  5098  005938                     _readAdcValue:
  5099                           	callstack 25
  5100                           
  5101                           ;incstack = 0
  5102                           ;readAdcValue@adcChannel stored from wreg
  5103  005938  6E05               	movwf	readAdcValue@adcChannel^0,c
  5104  00593A                     
  5105                           ;fs_adc.c: 38:  ADCON0bits.CHS = adcChannel;
  5106  00593A  C005  F003         	movff	readAdcValue@adcChannel,??_readAdcValue
  5107  00593E  4603               	rlncf	??_readAdcValue^0,f,c
  5108  005940  4603               	rlncf	??_readAdcValue^0,f,c
  5109  005942  50C2               	movf	194,w,c	;volatile
  5110  005944  1803               	xorwf	??_readAdcValue^0,w,c
  5111  005946  0B83               	andlw	-125
  5112  005948  1803               	xorwf	??_readAdcValue^0,w,c
  5113  00594A  6EC2               	movwf	194,c	;volatile
  5114  00594C                     
  5115                           ;fs_adc.c: 39:  ADCON0bits.ADON = 1;
  5116  00594C  80C2               	bsf	194,0,c	;volatile
  5117  00594E                     
  5118                           ;fs_adc.c: 40:  ADCON0bits.GO_nDONE = 1;
  5119  00594E  82C2               	bsf	194,1,c	;volatile
  5120  005950                     l35:
  5121  005950  B2C2               	btfsc	194,1,c	;volatile
  5122  005952  EFAD  F02C         	goto	u6311
  5123  005956  EFAF  F02C         	goto	u6310
  5124  00595A                     u6311:
  5125  00595A  EFA8  F02C         	goto	l35
  5126  00595E                     u6310:
  5127  00595E                     
  5128                           ;fs_adc.c: 42:  adcValue = (uint16_t)((ADRESH << 8) + ADRESL);
  5129  00595E  50C4               	movf	196,w,c	;volatile
  5130  005960  6E04               	movwf	(??_readAdcValue+1)^0,c
  5131  005962  6A03               	clrf	??_readAdcValue^0,c
  5132  005964  50C3               	movf	195,w,c	;volatile
  5133  005966  2403               	addwf	??_readAdcValue^0,w,c
  5134  005968  6E06               	movwf	readAdcValue@adcValue^0,c
  5135  00596A  0E00               	movlw	0
  5136  00596C  2004               	addwfc	(??_readAdcValue+1)^0,w,c
  5137  00596E  6E07               	movwf	(readAdcValue@adcValue+1)^0,c
  5138  005970                     
  5139                           ;fs_adc.c: 43:     return adcValue;
  5140  005970  C006  F001         	movff	readAdcValue@adcValue,?_readAdcValue
  5141  005974  C007  F002         	movff	readAdcValue@adcValue+1,?_readAdcValue+1
  5142  005978  0012               	return		;funcret
  5143  00597A                     __end_of_readAdcValue:
  5144                           	callstack 0
  5145                           
  5146 ;; *************** function _calculatedAverageValue *****************
  5147 ;; Defined at:
  5148 ;;		line 154 in file "fs_adc.c"
  5149 ;; Parameters:    Size  Location     Type
  5150 ;;		None
  5151 ;; Auto vars:     Size  Location     Type
  5152 ;;		None
  5153 ;; Return value:  Size  Location     Type
  5154 ;;                  1    wreg      void 
  5155 ;; Registers used:
  5156 ;;		wreg, status,2, status,0, cstack
  5157 ;; Tracked objects:
  5158 ;;		On entry : 0/0
  5159 ;;		On exit  : 0/0
  5160 ;;		Unchanged: 0/0
  5161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5162 ;;      Params:         0       0       0       0       0       0       0
  5163 ;;      Locals:         0       0       0       0       0       0       0
  5164 ;;      Temps:         24       0       0       0       0       0       0
  5165 ;;      Totals:        24       0       0       0       0       0       0
  5166 ;;Total ram usage:       24 bytes
  5167 ;; Hardware stack levels used:    1
  5168 ;; Hardware stack levels required when called:    2
  5169 ;; This function calls:
  5170 ;;		___lldiv
  5171 ;;		___lmul
  5172 ;;		___xxtofl
  5173 ;; This function is called by:
  5174 ;;		_startMotor
  5175 ;; This function uses a non-reentrant model
  5176 ;;
  5177                           
  5178                           	psect	text12
  5179  003750                     __ptext12:
  5180                           	callstack 0
  5181  003750                     _calculatedAverageValue:
  5182                           	callstack 25
  5183  003750                     
  5184                           ;fs_adc.c: 156:     driver_limit.pay = 0;
  5185  003750  0E00               	movlw	0
  5186  003752  0101               	movlb	1	; () banked
  5187  003754  6F83               	movwf	_driver_limit& (0+255),b
  5188  003756  0E00               	movlw	0
  5189  003758  6F84               	movwf	(_driver_limit+1)& (0+255),b
  5190  00375A  0E00               	movlw	0
  5191  00375C  6F85               	movwf	(_driver_limit+2)& (0+255),b
  5192  00375E  0E00               	movlw	0
  5193  003760  6F86               	movwf	(_driver_limit+3)& (0+255),b
  5194                           
  5195                           ;fs_adc.c: 157:     driver_limit.payda = 0;
  5196  003762  0E00               	movlw	0
  5197  003764  6F87               	movwf	(_driver_limit+4)& (0+255),b
  5198  003766  0E00               	movlw	0
  5199  003768  6F88               	movwf	(_driver_limit+5)& (0+255),b
  5200  00376A  0E00               	movlw	0
  5201  00376C  6F89               	movwf	(_driver_limit+6)& (0+255),b
  5202  00376E  0E00               	movlw	0
  5203  003770  6F8A               	movwf	(_driver_limit+7)& (0+255),b
  5204                           
  5205                           ;fs_adc.c: 158:     driver_limit.ortalama = 0;
  5206  003772  0E00               	movlw	0
  5207  003774  6F8B               	movwf	(_driver_limit+8)& (0+255),b
  5208  003776  0E00               	movlw	0
  5209  003778  6F8C               	movwf	(_driver_limit+9)& (0+255),b
  5210  00377A  0E00               	movlw	0
  5211  00377C  6F8D               	movwf	(_driver_limit+10)& (0+255),b
  5212  00377E  0E00               	movlw	0
  5213  003780  6F8E               	movwf	(_driver_limit+11)& (0+255),b
  5214  003782                     
  5215                           ; BSR set to: 1
  5216                           ;fs_adc.c: 161:    driver_limit.pay =(uint32_t) ( (convert_data.convert_channel_0 *1) +
  5217  003782  C10C  F001         	movff	_convert_data+12,___lmul@multiplier
  5218  003786  C10D  F002         	movff	_convert_data+13,___lmul@multiplier+1
  5219  00378A  C10E  F003         	movff	_convert_data+14,___lmul@multiplier+2
  5220  00378E  C10F  F004         	movff	_convert_data+15,___lmul@multiplier+3
  5221  003792  0EB8               	movlw	184
  5222  003794  6E05               	movwf	___lmul@multiplicand^0,c
  5223  003796  0E0B               	movlw	11
  5224  003798  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5225  00379A  0E00               	movlw	0
  5226  00379C  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5227  00379E  0E00               	movlw	0
  5228  0037A0  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5229  0037A2  ECB3  F02A         	call	___lmul	;wreg free
  5230  0037A6  C001  F01C         	movff	?___lmul,??_calculatedAverageValue
  5231  0037AA  C002  F01D         	movff	?___lmul+1,??_calculatedAverageValue+1
  5232  0037AE  C003  F01E         	movff	?___lmul+2,??_calculatedAverageValue+2
  5233  0037B2  C004  F01F         	movff	?___lmul+3,??_calculatedAverageValue+3
  5234  0037B6  C108  F001         	movff	_convert_data+8,___lmul@multiplier
  5235  0037BA  C109  F002         	movff	_convert_data+9,___lmul@multiplier+1
  5236  0037BE  C10A  F003         	movff	_convert_data+10,___lmul@multiplier+2
  5237  0037C2  C10B  F004         	movff	_convert_data+11,___lmul@multiplier+3
  5238  0037C6  0ED0               	movlw	208
  5239  0037C8  6E05               	movwf	___lmul@multiplicand^0,c
  5240  0037CA  0E07               	movlw	7
  5241  0037CC  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5242  0037CE  0E00               	movlw	0
  5243  0037D0  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5244  0037D2  0E00               	movlw	0
  5245  0037D4  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5246  0037D6  ECB3  F02A         	call	___lmul	;wreg free
  5247  0037DA  5001               	movf	?___lmul^0,w,c
  5248  0037DC  241C               	addwf	??_calculatedAverageValue^0,w,c
  5249  0037DE  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5250  0037E0  5002               	movf	(?___lmul+1)^0,w,c
  5251  0037E2  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5252  0037E4  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5253  0037E6  5003               	movf	(?___lmul+2)^0,w,c
  5254  0037E8  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5255  0037EA  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5256  0037EC  5004               	movf	(?___lmul+3)^0,w,c
  5257  0037EE  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5258  0037F0  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5259  0037F2  C104  F001         	movff	_convert_data+4,___lmul@multiplier
  5260  0037F6  C105  F002         	movff	_convert_data+5,___lmul@multiplier+1
  5261  0037FA  C106  F003         	movff	_convert_data+6,___lmul@multiplier+2
  5262  0037FE  C107  F004         	movff	_convert_data+7,___lmul@multiplier+3
  5263  003802  0EE8               	movlw	232
  5264  003804  6E05               	movwf	___lmul@multiplicand^0,c
  5265  003806  0E03               	movlw	3
  5266  003808  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5267  00380A  0E00               	movlw	0
  5268  00380C  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5269  00380E  0E00               	movlw	0
  5270  003810  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5271  003812  ECB3  F02A         	call	___lmul	;wreg free
  5272  003816  5001               	movf	?___lmul^0,w,c
  5273  003818  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5274  00381A  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5275  00381C  5002               	movf	(?___lmul+1)^0,w,c
  5276  00381E  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5277  003820  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5278  003822  5003               	movf	(?___lmul+2)^0,w,c
  5279  003824  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5280  003826  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5281  003828  5004               	movf	(?___lmul+3)^0,w,c
  5282  00382A  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5283  00382C  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5284  00382E  0101               	movlb	1	; () banked
  5285  003830  5100               	movf	_convert_data& (0+255),w,b
  5286  003832  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5287  003834  6F83               	movwf	_driver_limit& (0+255),b
  5288  003836  5101               	movf	(_convert_data+1)& (0+255),w,b
  5289  003838  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5290  00383A  6F84               	movwf	(_driver_limit+1)& (0+255),b
  5291  00383C  5102               	movf	(_convert_data+2)& (0+255),w,b
  5292  00383E  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5293  003840  6F85               	movwf	(_driver_limit+2)& (0+255),b
  5294  003842  5103               	movf	(_convert_data+3)& (0+255),w,b
  5295  003844  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5296  003846  6F86               	movwf	(_driver_limit+3)& (0+255),b
  5297  003848                     
  5298                           ; BSR set to: 1
  5299                           ;fs_adc.c: 166:    driver_limit.pay += (uint32_t)( (convert_data.convert_channel_4 * 400
      +                          0) +
  5300  003848  C11C  F001         	movff	_convert_data+28,___lmul@multiplier
  5301  00384C  C11D  F002         	movff	_convert_data+29,___lmul@multiplier+1
  5302  003850  C11E  F003         	movff	_convert_data+30,___lmul@multiplier+2
  5303  003854  C11F  F004         	movff	_convert_data+31,___lmul@multiplier+3
  5304  003858  0E58               	movlw	88
  5305  00385A  6E05               	movwf	___lmul@multiplicand^0,c
  5306  00385C  0E1B               	movlw	27
  5307  00385E  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5308  003860  0E00               	movlw	0
  5309  003862  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5310  003864  0E00               	movlw	0
  5311  003866  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5312  003868  ECB3  F02A         	call	___lmul	;wreg free
  5313  00386C  C001  F01C         	movff	?___lmul,??_calculatedAverageValue
  5314  003870  C002  F01D         	movff	?___lmul+1,??_calculatedAverageValue+1
  5315  003874  C003  F01E         	movff	?___lmul+2,??_calculatedAverageValue+2
  5316  003878  C004  F01F         	movff	?___lmul+3,??_calculatedAverageValue+3
  5317  00387C  C118  F001         	movff	_convert_data+24,___lmul@multiplier
  5318  003880  C119  F002         	movff	_convert_data+25,___lmul@multiplier+1
  5319  003884  C11A  F003         	movff	_convert_data+26,___lmul@multiplier+2
  5320  003888  C11B  F004         	movff	_convert_data+27,___lmul@multiplier+3
  5321  00388C  0E70               	movlw	112
  5322  00388E  6E05               	movwf	___lmul@multiplicand^0,c
  5323  003890  0E17               	movlw	23
  5324  003892  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5325  003894  0E00               	movlw	0
  5326  003896  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5327  003898  0E00               	movlw	0
  5328  00389A  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5329  00389C  ECB3  F02A         	call	___lmul	;wreg free
  5330  0038A0  5001               	movf	?___lmul^0,w,c
  5331  0038A2  241C               	addwf	??_calculatedAverageValue^0,w,c
  5332  0038A4  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5333  0038A6  5002               	movf	(?___lmul+1)^0,w,c
  5334  0038A8  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5335  0038AA  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5336  0038AC  5003               	movf	(?___lmul+2)^0,w,c
  5337  0038AE  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5338  0038B0  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5339  0038B2  5004               	movf	(?___lmul+3)^0,w,c
  5340  0038B4  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5341  0038B6  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5342  0038B8  C114  F001         	movff	_convert_data+20,___lmul@multiplier
  5343  0038BC  C115  F002         	movff	_convert_data+21,___lmul@multiplier+1
  5344  0038C0  C116  F003         	movff	_convert_data+22,___lmul@multiplier+2
  5345  0038C4  C117  F004         	movff	_convert_data+23,___lmul@multiplier+3
  5346  0038C8  0E88               	movlw	136
  5347  0038CA  6E05               	movwf	___lmul@multiplicand^0,c
  5348  0038CC  0E13               	movlw	19
  5349  0038CE  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5350  0038D0  0E00               	movlw	0
  5351  0038D2  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5352  0038D4  0E00               	movlw	0
  5353  0038D6  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5354  0038D8  ECB3  F02A         	call	___lmul	;wreg free
  5355  0038DC  5001               	movf	?___lmul^0,w,c
  5356  0038DE  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5357  0038E0  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5358  0038E2  5002               	movf	(?___lmul+1)^0,w,c
  5359  0038E4  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5360  0038E6  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5361  0038E8  5003               	movf	(?___lmul+2)^0,w,c
  5362  0038EA  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5363  0038EC  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5364  0038EE  5004               	movf	(?___lmul+3)^0,w,c
  5365  0038F0  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5366  0038F2  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5367  0038F4  C110  F001         	movff	_convert_data+16,___lmul@multiplier
  5368  0038F8  C111  F002         	movff	_convert_data+17,___lmul@multiplier+1
  5369  0038FC  C112  F003         	movff	_convert_data+18,___lmul@multiplier+2
  5370  003900  C113  F004         	movff	_convert_data+19,___lmul@multiplier+3
  5371  003904  0EA0               	movlw	160
  5372  003906  6E05               	movwf	___lmul@multiplicand^0,c
  5373  003908  0E0F               	movlw	15
  5374  00390A  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5375  00390C  0E00               	movlw	0
  5376  00390E  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5377  003910  0E00               	movlw	0
  5378  003912  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5379  003914  ECB3  F02A         	call	___lmul	;wreg free
  5380  003918  5001               	movf	?___lmul^0,w,c
  5381  00391A  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5382  00391C  6E28               	movwf	(??_calculatedAverageValue+12)^0,c
  5383  00391E  5002               	movf	(?___lmul+1)^0,w,c
  5384  003920  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5385  003922  6E29               	movwf	(??_calculatedAverageValue+13)^0,c
  5386  003924  5003               	movf	(?___lmul+2)^0,w,c
  5387  003926  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5388  003928  6E2A               	movwf	(??_calculatedAverageValue+14)^0,c
  5389  00392A  5004               	movf	(?___lmul+3)^0,w,c
  5390  00392C  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5391  00392E  6E2B               	movwf	(??_calculatedAverageValue+15)^0,c
  5392  003930  5028               	movf	(??_calculatedAverageValue+12)^0,w,c
  5393  003932  0101               	movlb	1	; () banked
  5394  003934  2783               	addwf	_driver_limit& (0+255),f,b
  5395  003936  5029               	movf	(??_calculatedAverageValue+13)^0,w,c
  5396  003938  2384               	addwfc	(_driver_limit+1)& (0+255),f,b
  5397  00393A  502A               	movf	(??_calculatedAverageValue+14)^0,w,c
  5398  00393C  2385               	addwfc	(_driver_limit+2)& (0+255),f,b
  5399  00393E  502B               	movf	(??_calculatedAverageValue+15)^0,w,c
  5400  003940  2386               	addwfc	(_driver_limit+3)& (0+255),f,b
  5401  003942                     
  5402                           ; BSR set to: 1
  5403                           ;fs_adc.c: 171:     driver_limit.payda = (uint32_t) (convert_data.convert_channel_0 + co
      +                          nvert_data.convert_channel_1 +
  5404  003942  5108               	movf	(_convert_data+8)& (0+255),w,b
  5405  003944  2504               	addwf	(_convert_data+4)& (0+255),w,b
  5406  003946  6E1C               	movwf	??_calculatedAverageValue^0,c
  5407  003948  5109               	movf	(_convert_data+9)& (0+255),w,b
  5408  00394A  2105               	addwfc	(_convert_data+5)& (0+255),w,b
  5409  00394C  6E1D               	movwf	(??_calculatedAverageValue+1)^0,c
  5410  00394E  510A               	movf	(_convert_data+10)& (0+255),w,b
  5411  003950  2106               	addwfc	(_convert_data+6)& (0+255),w,b
  5412  003952  6E1E               	movwf	(??_calculatedAverageValue+2)^0,c
  5413  003954  510B               	movf	(_convert_data+11)& (0+255),w,b
  5414  003956  2107               	addwfc	(_convert_data+7)& (0+255),w,b
  5415  003958  6E1F               	movwf	(??_calculatedAverageValue+3)^0,c
  5416  00395A  510C               	movf	(_convert_data+12)& (0+255),w,b
  5417  00395C  241C               	addwf	??_calculatedAverageValue^0,w,c
  5418  00395E  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5419  003960  510D               	movf	(_convert_data+13)& (0+255),w,b
  5420  003962  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5421  003964  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5422  003966  510E               	movf	(_convert_data+14)& (0+255),w,b
  5423  003968  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5424  00396A  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5425  00396C  510F               	movf	(_convert_data+15)& (0+255),w,b
  5426  00396E  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5427  003970  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5428  003972  5110               	movf	(_convert_data+16)& (0+255),w,b
  5429  003974  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5430  003976  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5431  003978  5111               	movf	(_convert_data+17)& (0+255),w,b
  5432  00397A  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5433  00397C  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5434  00397E  5112               	movf	(_convert_data+18)& (0+255),w,b
  5435  003980  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5436  003982  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5437  003984  5113               	movf	(_convert_data+19)& (0+255),w,b
  5438  003986  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5439  003988  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5440  00398A  5114               	movf	(_convert_data+20)& (0+255),w,b
  5441  00398C  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5442  00398E  6E28               	movwf	(??_calculatedAverageValue+12)^0,c
  5443  003990  5115               	movf	(_convert_data+21)& (0+255),w,b
  5444  003992  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5445  003994  6E29               	movwf	(??_calculatedAverageValue+13)^0,c
  5446  003996  5116               	movf	(_convert_data+22)& (0+255),w,b
  5447  003998  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5448  00399A  6E2A               	movwf	(??_calculatedAverageValue+14)^0,c
  5449  00399C  5117               	movf	(_convert_data+23)& (0+255),w,b
  5450  00399E  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5451  0039A0  6E2B               	movwf	(??_calculatedAverageValue+15)^0,c
  5452  0039A2  5118               	movf	(_convert_data+24)& (0+255),w,b
  5453  0039A4  2428               	addwf	(??_calculatedAverageValue+12)^0,w,c
  5454  0039A6  6E2C               	movwf	(??_calculatedAverageValue+16)^0,c
  5455  0039A8  5119               	movf	(_convert_data+25)& (0+255),w,b
  5456  0039AA  2029               	addwfc	(??_calculatedAverageValue+13)^0,w,c
  5457  0039AC  6E2D               	movwf	(??_calculatedAverageValue+17)^0,c
  5458  0039AE  511A               	movf	(_convert_data+26)& (0+255),w,b
  5459  0039B0  202A               	addwfc	(??_calculatedAverageValue+14)^0,w,c
  5460  0039B2  6E2E               	movwf	(??_calculatedAverageValue+18)^0,c
  5461  0039B4  511B               	movf	(_convert_data+27)& (0+255),w,b
  5462  0039B6  202B               	addwfc	(??_calculatedAverageValue+15)^0,w,c
  5463  0039B8  6E2F               	movwf	(??_calculatedAverageValue+19)^0,c
  5464  0039BA  511C               	movf	(_convert_data+28)& (0+255),w,b
  5465  0039BC  242C               	addwf	(??_calculatedAverageValue+16)^0,w,c
  5466  0039BE  6E30               	movwf	(??_calculatedAverageValue+20)^0,c
  5467  0039C0  511D               	movf	(_convert_data+29)& (0+255),w,b
  5468  0039C2  202D               	addwfc	(??_calculatedAverageValue+17)^0,w,c
  5469  0039C4  6E31               	movwf	(??_calculatedAverageValue+21)^0,c
  5470  0039C6  511E               	movf	(_convert_data+30)& (0+255),w,b
  5471  0039C8  202E               	addwfc	(??_calculatedAverageValue+18)^0,w,c
  5472  0039CA  6E32               	movwf	(??_calculatedAverageValue+22)^0,c
  5473  0039CC  511F               	movf	(_convert_data+31)& (0+255),w,b
  5474  0039CE  202F               	addwfc	(??_calculatedAverageValue+19)^0,w,c
  5475  0039D0  6E33               	movwf	(??_calculatedAverageValue+23)^0,c
  5476  0039D2  5100               	movf	_convert_data& (0+255),w,b
  5477  0039D4  2430               	addwf	(??_calculatedAverageValue+20)^0,w,c
  5478  0039D6  6F87               	movwf	(_driver_limit+4)& (0+255),b
  5479  0039D8  5101               	movf	(_convert_data+1)& (0+255),w,b
  5480  0039DA  2031               	addwfc	(??_calculatedAverageValue+21)^0,w,c
  5481  0039DC  6F88               	movwf	(_driver_limit+5)& (0+255),b
  5482  0039DE  5102               	movf	(_convert_data+2)& (0+255),w,b
  5483  0039E0  2032               	addwfc	(??_calculatedAverageValue+22)^0,w,c
  5484  0039E2  6F89               	movwf	(_driver_limit+6)& (0+255),b
  5485  0039E4  5103               	movf	(_convert_data+3)& (0+255),w,b
  5486  0039E6  2033               	addwfc	(??_calculatedAverageValue+23)^0,w,c
  5487  0039E8  6F8A               	movwf	(_driver_limit+7)& (0+255),b
  5488  0039EA                     
  5489                           ; BSR set to: 1
  5490                           ;fs_adc.c: 176:     driver_limit.ortalama = (float)(driver_limit.pay/driver_limit.payda)
      +                          ;
  5491  0039EA  C187  F005         	movff	_driver_limit+4,___lldiv@divisor
  5492  0039EE  C188  F006         	movff	_driver_limit+5,___lldiv@divisor+1
  5493  0039F2  C189  F007         	movff	_driver_limit+6,___lldiv@divisor+2
  5494  0039F6  C18A  F008         	movff	_driver_limit+7,___lldiv@divisor+3
  5495  0039FA  C183  F001         	movff	_driver_limit,___lldiv@dividend
  5496  0039FE  C184  F002         	movff	_driver_limit+1,___lldiv@dividend+1
  5497  003A02  C185  F003         	movff	_driver_limit+2,___lldiv@dividend+2
  5498  003A06  C186  F004         	movff	_driver_limit+3,___lldiv@dividend+3
  5499  003A0A  EC26  F029         	call	___lldiv	;wreg free
  5500  003A0E  C001  F00E         	movff	?___lldiv,___xxtofl@val
  5501  003A12  C002  F00F         	movff	?___lldiv+1,___xxtofl@val+1
  5502  003A16  C003  F010         	movff	?___lldiv+2,___xxtofl@val+2
  5503  003A1A  C004  F011         	movff	?___lldiv+3,___xxtofl@val+3
  5504  003A1E  0E00               	movlw	0
  5505  003A20  EC77  F020         	call	___xxtofl
  5506  003A24  C00E  F18B         	movff	?___xxtofl,_driver_limit+8
  5507  003A28  C00F  F18C         	movff	?___xxtofl+1,_driver_limit+9
  5508  003A2C  C010  F18D         	movff	?___xxtofl+2,_driver_limit+10
  5509  003A30  C011  F18E         	movff	?___xxtofl+3,_driver_limit+11
  5510  003A34  0012               	return		;funcret
  5511  003A36                     __end_of_calculatedAverageValue:
  5512                           	callstack 0
  5513                           
  5514 ;; *************** function ___lmul *****************
  5515 ;; Defined at:
  5516 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul32.c"
  5517 ;; Parameters:    Size  Location     Type
  5518 ;;  multiplier      4    0[COMRAM] unsigned long 
  5519 ;;  multiplicand    4    4[COMRAM] unsigned long 
  5520 ;; Auto vars:     Size  Location     Type
  5521 ;;  product         4    8[COMRAM] unsigned long 
  5522 ;; Return value:  Size  Location     Type
  5523 ;;                  4    0[COMRAM] unsigned long 
  5524 ;; Registers used:
  5525 ;;		wreg, status,2, status,0
  5526 ;; Tracked objects:
  5527 ;;		On entry : 0/0
  5528 ;;		On exit  : 0/0
  5529 ;;		Unchanged: 0/0
  5530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5531 ;;      Params:         8       0       0       0       0       0       0
  5532 ;;      Locals:         4       0       0       0       0       0       0
  5533 ;;      Temps:          0       0       0       0       0       0       0
  5534 ;;      Totals:        12       0       0       0       0       0       0
  5535 ;;Total ram usage:       12 bytes
  5536 ;; Hardware stack levels used:    1
  5537 ;; Hardware stack levels required when called:    1
  5538 ;; This function calls:
  5539 ;;		Nothing
  5540 ;; This function is called by:
  5541 ;;		_calculatedAverageValue
  5542 ;; This function uses a non-reentrant model
  5543 ;;
  5544                           
  5545                           	psect	text13
  5546  005566                     __ptext13:
  5547                           	callstack 0
  5548  005566                     ___lmul:
  5549                           	callstack 25
  5550  005566  0E00               	movlw	0
  5551  005568  6E09               	movwf	___lmul@product^0,c
  5552  00556A  0E00               	movlw	0
  5553  00556C  6E0A               	movwf	(___lmul@product+1)^0,c
  5554  00556E  0E00               	movlw	0
  5555  005570  6E0B               	movwf	(___lmul@product+2)^0,c
  5556  005572  0E00               	movlw	0
  5557  005574  6E0C               	movwf	(___lmul@product+3)^0,c
  5558  005576                     l5245:
  5559  005576  A001               	btfss	___lmul@multiplier^0,0,c
  5560  005578  EFC0  F02A         	goto	u6361
  5561  00557C  EFC2  F02A         	goto	u6360
  5562  005580                     u6361:
  5563  005580  EFCA  F02A         	goto	l5249
  5564  005584                     u6360:
  5565  005584  5005               	movf	___lmul@multiplicand^0,w,c
  5566  005586  2609               	addwf	___lmul@product^0,f,c
  5567  005588  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  5568  00558A  220A               	addwfc	(___lmul@product+1)^0,f,c
  5569  00558C  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  5570  00558E  220B               	addwfc	(___lmul@product+2)^0,f,c
  5571  005590  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  5572  005592  220C               	addwfc	(___lmul@product+3)^0,f,c
  5573  005594                     l5249:
  5574  005594  90D8               	bcf	status,0,c
  5575  005596  3605               	rlcf	___lmul@multiplicand^0,f,c
  5576  005598  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  5577  00559A  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  5578  00559C  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  5579  00559E  90D8               	bcf	status,0,c
  5580  0055A0  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  5581  0055A2  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  5582  0055A4  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  5583  0055A6  3201               	rrcf	___lmul@multiplier^0,f,c
  5584  0055A8  5001               	movf	___lmul@multiplier^0,w,c
  5585  0055AA  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  5586  0055AC  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  5587  0055AE  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  5588  0055B0  A4D8               	btfss	status,2,c
  5589  0055B2  EFDD  F02A         	goto	u6371
  5590  0055B6  EFDF  F02A         	goto	u6370
  5591  0055BA                     u6371:
  5592  0055BA  EFBB  F02A         	goto	l5245
  5593  0055BE                     u6370:
  5594  0055BE  C009  F001         	movff	___lmul@product,?___lmul
  5595  0055C2  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  5596  0055C6  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  5597  0055CA  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  5598  0055CE  0012               	return		;funcret
  5599  0055D0                     __end_of___lmul:
  5600                           	callstack 0
  5601                           
  5602 ;; *************** function ___lldiv *****************
  5603 ;; Defined at:
  5604 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__lldiv.c"
  5605 ;; Parameters:    Size  Location     Type
  5606 ;;  dividend        4    0[COMRAM] unsigned long 
  5607 ;;  divisor         4    4[COMRAM] unsigned long 
  5608 ;; Auto vars:     Size  Location     Type
  5609 ;;  quotient        4    8[COMRAM] unsigned long 
  5610 ;;  counter         1   12[COMRAM] unsigned char 
  5611 ;; Return value:  Size  Location     Type
  5612 ;;                  4    0[COMRAM] unsigned long 
  5613 ;; Registers used:
  5614 ;;		wreg, status,2, status,0
  5615 ;; Tracked objects:
  5616 ;;		On entry : 0/0
  5617 ;;		On exit  : 0/0
  5618 ;;		Unchanged: 0/0
  5619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5620 ;;      Params:         8       0       0       0       0       0       0
  5621 ;;      Locals:         5       0       0       0       0       0       0
  5622 ;;      Temps:          0       0       0       0       0       0       0
  5623 ;;      Totals:        13       0       0       0       0       0       0
  5624 ;;Total ram usage:       13 bytes
  5625 ;; Hardware stack levels used:    1
  5626 ;; Hardware stack levels required when called:    1
  5627 ;; This function calls:
  5628 ;;		Nothing
  5629 ;; This function is called by:
  5630 ;;		_calculatedAverageValue
  5631 ;; This function uses a non-reentrant model
  5632 ;;
  5633                           
  5634                           	psect	text14
  5635  00524C                     __ptext14:
  5636                           	callstack 0
  5637  00524C                     ___lldiv:
  5638                           	callstack 25
  5639  00524C  0E00               	movlw	0
  5640  00524E  6E09               	movwf	___lldiv@quotient^0,c
  5641  005250  0E00               	movlw	0
  5642  005252  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  5643  005254  0E00               	movlw	0
  5644  005256  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  5645  005258  0E00               	movlw	0
  5646  00525A  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  5647  00525C  5005               	movf	___lldiv@divisor^0,w,c
  5648  00525E  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  5649  005260  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  5650  005262  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  5651  005264  B4D8               	btfsc	status,2,c
  5652  005266  EF37  F029         	goto	u6381
  5653  00526A  EF39  F029         	goto	u6380
  5654  00526E                     u6381:
  5655  00526E  EF6F  F029         	goto	l511
  5656  005272                     u6380:
  5657  005272  0E01               	movlw	1
  5658  005274  6E0D               	movwf	___lldiv@counter^0,c
  5659  005276  EF43  F029         	goto	l5261
  5660  00527A                     l5259:
  5661  00527A  90D8               	bcf	status,0,c
  5662  00527C  3605               	rlcf	___lldiv@divisor^0,f,c
  5663  00527E  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  5664  005280  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  5665  005282  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  5666  005284  2A0D               	incf	___lldiv@counter^0,f,c
  5667  005286                     l5261:
  5668  005286  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  5669  005288  EF48  F029         	goto	u6391
  5670  00528C  EF4A  F029         	goto	u6390
  5671  005290                     u6391:
  5672  005290  EF3D  F029         	goto	l5259
  5673  005294                     u6390:
  5674  005294                     l5263:
  5675  005294  90D8               	bcf	status,0,c
  5676  005296  3609               	rlcf	___lldiv@quotient^0,f,c
  5677  005298  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  5678  00529A  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  5679  00529C  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  5680  00529E  5005               	movf	___lldiv@divisor^0,w,c
  5681  0052A0  5C01               	subwf	___lldiv@dividend^0,w,c
  5682  0052A2  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5683  0052A4  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  5684  0052A6  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5685  0052A8  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  5686  0052AA  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5687  0052AC  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  5688  0052AE  A0D8               	btfss	status,0,c
  5689  0052B0  EF5C  F029         	goto	u6401
  5690  0052B4  EF5E  F029         	goto	u6400
  5691  0052B8                     u6401:
  5692  0052B8  EF67  F029         	goto	l5271
  5693  0052BC                     u6400:
  5694  0052BC  5005               	movf	___lldiv@divisor^0,w,c
  5695  0052BE  5E01               	subwf	___lldiv@dividend^0,f,c
  5696  0052C0  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5697  0052C2  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  5698  0052C4  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5699  0052C6  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  5700  0052C8  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5701  0052CA  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  5702  0052CC  8009               	bsf	___lldiv@quotient^0,0,c
  5703  0052CE                     l5271:
  5704  0052CE  90D8               	bcf	status,0,c
  5705  0052D0  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  5706  0052D2  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  5707  0052D4  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  5708  0052D6  3205               	rrcf	___lldiv@divisor^0,f,c
  5709  0052D8  2E0D               	decfsz	___lldiv@counter^0,f,c
  5710  0052DA  EF4A  F029         	goto	l5263
  5711  0052DE                     l511:
  5712  0052DE  C009  F001         	movff	___lldiv@quotient,?___lldiv
  5713  0052E2  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  5714  0052E6  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  5715  0052EA  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  5716  0052EE  0012               	return		;funcret
  5717  0052F0                     __end_of___lldiv:
  5718                           	callstack 0
  5719                           
  5720 ;; *************** function _PWM2_setDC *****************
  5721 ;; Defined at:
  5722 ;;		line 59 in file "fs_pwm.c"
  5723 ;; Parameters:    Size  Location     Type
  5724 ;;  dutycycle       2   87[COMRAM] short 
  5725 ;; Auto vars:     Size  Location     Type
  5726 ;;  duty            2   91[COMRAM] unsigned short 
  5727 ;; Return value:  Size  Location     Type
  5728 ;;                  1    wreg      void 
  5729 ;; Registers used:
  5730 ;;		wreg, status,2, status,0, cstack
  5731 ;; Tracked objects:
  5732 ;;		On entry : 0/0
  5733 ;;		On exit  : 0/0
  5734 ;;		Unchanged: 0/0
  5735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5736 ;;      Params:         2       0       0       0       0       0       0
  5737 ;;      Locals:         2       0       0       0       0       0       0
  5738 ;;      Temps:          2       0       0       0       0       0       0
  5739 ;;      Totals:         6       0       0       0       0       0       0
  5740 ;;Total ram usage:        6 bytes
  5741 ;; Hardware stack levels used:    1
  5742 ;; Hardware stack levels required when called:    2
  5743 ;; This function calls:
  5744 ;;		___fltol
  5745 ;;		___xxtofl
  5746 ;;		_fabsf
  5747 ;; This function is called by:
  5748 ;;		_main
  5749 ;;		_stopMotor
  5750 ;;		_startMotor
  5751 ;; This function uses a non-reentrant model
  5752 ;;
  5753                           
  5754                           	psect	text15
  5755  005404                     __ptext15:
  5756                           	callstack 0
  5757  005404                     _PWM2_setDC:
  5758                           	callstack 25
  5759  005404                     
  5760                           ;fs_pwm.c: 63:     if (dutycycle <= 1023)
  5761  005404  BE59               	btfsc	(PWM2_setDC@dutycycle+1)^0,7,c
  5762  005406  EF0E  F02A         	goto	u6730
  5763  00540A  0E04               	movlw	4
  5764  00540C  5C59               	subwf	(PWM2_setDC@dutycycle+1)^0,w,c
  5765  00540E  B0D8               	btfsc	status,0,c
  5766  005410  EF0C  F02A         	goto	u6731
  5767  005414  EF0E  F02A         	goto	u6730
  5768  005418                     u6731:
  5769  005418  EF3E  F02A         	goto	l408
  5770  00541C                     u6730:
  5771  00541C                     
  5772                           ;fs_pwm.c: 64:     {;fs_pwm.c: 65:         duty = (uint16_t) fabsf(dutycycle);
  5773  00541C  C058  F00E         	movff	PWM2_setDC@dutycycle,___xxtofl@val
  5774  005420  C059  F00F         	movff	PWM2_setDC@dutycycle+1,___xxtofl@val+1
  5775  005424  0E00               	movlw	0
  5776  005426  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  5777  005428  0EFF               	movlw	-1
  5778  00542A  6E10               	movwf	(___xxtofl@val+2)^0,c
  5779  00542C  6E11               	movwf	(___xxtofl@val+3)^0,c
  5780  00542E  0E01               	movlw	1
  5781  005430  EC77  F020         	call	___xxtofl
  5782  005434  C00E  F01C         	movff	?___xxtofl,fabsf@x
  5783  005438  C00F  F01D         	movff	?___xxtofl+1,fabsf@x+1
  5784  00543C  C010  F01E         	movff	?___xxtofl+2,fabsf@x+2
  5785  005440  C011  F01F         	movff	?___xxtofl+3,fabsf@x+3
  5786  005444  ECC0  F02D         	call	_fabsf	;wreg free
  5787  005448  C01C  F04E         	movff	?_fabsf,___fltol@f1
  5788  00544C  C01D  F04F         	movff	?_fabsf+1,___fltol@f1+1
  5789  005450  C01E  F050         	movff	?_fabsf+2,___fltol@f1+2
  5790  005454  C01F  F051         	movff	?_fabsf+3,___fltol@f1+3
  5791  005458  ECE3  F024         	call	___fltol	;wreg free
  5792  00545C  C04E  F05C         	movff	?___fltol,PWM2_setDC@duty
  5793  005460  C04F  F05D         	movff	?___fltol+1,PWM2_setDC@duty+1
  5794  005464                     
  5795                           ;fs_pwm.c: 66:         CCPR2L = duty>>2;
  5796  005464  C05C  F05A         	movff	PWM2_setDC@duty,??_PWM2_setDC
  5797  005468  C05D  F05B         	movff	PWM2_setDC@duty+1,??_PWM2_setDC+1
  5798  00546C  90D8               	bcf	status,0,c
  5799  00546E  325B               	rrcf	(??_PWM2_setDC+1)^0,f,c
  5800  005470  325A               	rrcf	??_PWM2_setDC^0,f,c
  5801  005472  90D8               	bcf	status,0,c
  5802  005474  325B               	rrcf	(??_PWM2_setDC+1)^0,f,c
  5803  005476  325A               	rrcf	??_PWM2_setDC^0,f,c
  5804  005478  505A               	movf	??_PWM2_setDC^0,w,c
  5805  00547A  6E67               	movwf	103,c	;volatile
  5806  00547C                     l408:
  5807  00547C  0012               	return		;funcret
  5808  00547E                     __end_of_PWM2_setDC:
  5809                           	callstack 0
  5810                           
  5811 ;; *************** function _PWM1_setDC *****************
  5812 ;; Defined at:
  5813 ;;		line 43 in file "fs_pwm.c"
  5814 ;; Parameters:    Size  Location     Type
  5815 ;;  dutycycle       2   87[COMRAM] short 
  5816 ;; Auto vars:     Size  Location     Type
  5817 ;;  duty            2   91[COMRAM] unsigned short 
  5818 ;; Return value:  Size  Location     Type
  5819 ;;                  1    wreg      void 
  5820 ;; Registers used:
  5821 ;;		wreg, status,2, status,0, cstack
  5822 ;; Tracked objects:
  5823 ;;		On entry : 0/0
  5824 ;;		On exit  : 0/0
  5825 ;;		Unchanged: 0/0
  5826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5827 ;;      Params:         2       0       0       0       0       0       0
  5828 ;;      Locals:         2       0       0       0       0       0       0
  5829 ;;      Temps:          2       0       0       0       0       0       0
  5830 ;;      Totals:         6       0       0       0       0       0       0
  5831 ;;Total ram usage:        6 bytes
  5832 ;; Hardware stack levels used:    1
  5833 ;; Hardware stack levels required when called:    2
  5834 ;; This function calls:
  5835 ;;		___fltol
  5836 ;;		___xxtofl
  5837 ;;		_fabsf
  5838 ;; This function is called by:
  5839 ;;		_main
  5840 ;;		_stopMotor
  5841 ;;		_startMotor
  5842 ;; This function uses a non-reentrant model
  5843 ;;
  5844                           
  5845                           	psect	text16
  5846  00547E                     __ptext16:
  5847                           	callstack 0
  5848  00547E                     _PWM1_setDC:
  5849                           	callstack 25
  5850  00547E                     
  5851                           ;fs_pwm.c: 47:     if (dutycycle <= 1023)
  5852  00547E  BE59               	btfsc	(PWM1_setDC@dutycycle+1)^0,7,c
  5853  005480  EF4B  F02A         	goto	u6720
  5854  005484  0E04               	movlw	4
  5855  005486  5C59               	subwf	(PWM1_setDC@dutycycle+1)^0,w,c
  5856  005488  B0D8               	btfsc	status,0,c
  5857  00548A  EF49  F02A         	goto	u6721
  5858  00548E  EF4B  F02A         	goto	u6720
  5859  005492                     u6721:
  5860  005492  EF7B  F02A         	goto	l404
  5861  005496                     u6720:
  5862  005496                     
  5863                           ;fs_pwm.c: 48:     {;fs_pwm.c: 49:         duty = (uint16_t) fabsf(dutycycle);
  5864  005496  C058  F00E         	movff	PWM1_setDC@dutycycle,___xxtofl@val
  5865  00549A  C059  F00F         	movff	PWM1_setDC@dutycycle+1,___xxtofl@val+1
  5866  00549E  0E00               	movlw	0
  5867  0054A0  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  5868  0054A2  0EFF               	movlw	-1
  5869  0054A4  6E10               	movwf	(___xxtofl@val+2)^0,c
  5870  0054A6  6E11               	movwf	(___xxtofl@val+3)^0,c
  5871  0054A8  0E01               	movlw	1
  5872  0054AA  EC77  F020         	call	___xxtofl
  5873  0054AE  C00E  F01C         	movff	?___xxtofl,fabsf@x
  5874  0054B2  C00F  F01D         	movff	?___xxtofl+1,fabsf@x+1
  5875  0054B6  C010  F01E         	movff	?___xxtofl+2,fabsf@x+2
  5876  0054BA  C011  F01F         	movff	?___xxtofl+3,fabsf@x+3
  5877  0054BE  ECC0  F02D         	call	_fabsf	;wreg free
  5878  0054C2  C01C  F04E         	movff	?_fabsf,___fltol@f1
  5879  0054C6  C01D  F04F         	movff	?_fabsf+1,___fltol@f1+1
  5880  0054CA  C01E  F050         	movff	?_fabsf+2,___fltol@f1+2
  5881  0054CE  C01F  F051         	movff	?_fabsf+3,___fltol@f1+3
  5882  0054D2  ECE3  F024         	call	___fltol	;wreg free
  5883  0054D6  C04E  F05C         	movff	?___fltol,PWM1_setDC@duty
  5884  0054DA  C04F  F05D         	movff	?___fltol+1,PWM1_setDC@duty+1
  5885  0054DE                     
  5886                           ;fs_pwm.c: 50:         CCPR1L = duty>>2;
  5887  0054DE  C05C  F05A         	movff	PWM1_setDC@duty,??_PWM1_setDC
  5888  0054E2  C05D  F05B         	movff	PWM1_setDC@duty+1,??_PWM1_setDC+1
  5889  0054E6  90D8               	bcf	status,0,c
  5890  0054E8  325B               	rrcf	(??_PWM1_setDC+1)^0,f,c
  5891  0054EA  325A               	rrcf	??_PWM1_setDC^0,f,c
  5892  0054EC  90D8               	bcf	status,0,c
  5893  0054EE  325B               	rrcf	(??_PWM1_setDC+1)^0,f,c
  5894  0054F0  325A               	rrcf	??_PWM1_setDC^0,f,c
  5895  0054F2  505A               	movf	??_PWM1_setDC^0,w,c
  5896  0054F4  6EBE               	movwf	190,c	;volatile
  5897  0054F6                     l404:
  5898  0054F6  0012               	return		;funcret
  5899  0054F8                     __end_of_PWM1_setDC:
  5900                           	callstack 0
  5901                           
  5902 ;; *************** function _fabsf *****************
  5903 ;; Defined at:
  5904 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fabsf.c"
  5905 ;; Parameters:    Size  Location     Type
  5906 ;;  x               4   27[COMRAM] float 
  5907 ;; Auto vars:     Size  Location     Type
  5908 ;;  u               4   31[COMRAM] struct .
  5909 ;; Return value:  Size  Location     Type
  5910 ;;                  4   27[COMRAM] float 
  5911 ;; Registers used:
  5912 ;;		status,2, status,0
  5913 ;; Tracked objects:
  5914 ;;		On entry : 0/0
  5915 ;;		On exit  : 0/0
  5916 ;;		Unchanged: 0/0
  5917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5918 ;;      Params:         4       0       0       0       0       0       0
  5919 ;;      Locals:         4       0       0       0       0       0       0
  5920 ;;      Temps:          0       0       0       0       0       0       0
  5921 ;;      Totals:         8       0       0       0       0       0       0
  5922 ;;Total ram usage:        8 bytes
  5923 ;; Hardware stack levels used:    1
  5924 ;; Hardware stack levels required when called:    1
  5925 ;; This function calls:
  5926 ;;		Nothing
  5927 ;; This function is called by:
  5928 ;;		_PWM1_setDC
  5929 ;;		_PWM2_setDC
  5930 ;; This function uses a non-reentrant model
  5931 ;;
  5932                           
  5933                           	psect	text17
  5934  005B80                     __ptext17:
  5935                           	callstack 0
  5936  005B80                     _fabsf:
  5937                           	callstack 25
  5938  005B80  C197  F020         	movff	fabsf@F463,fabsf@u
  5939  005B84  C198  F021         	movff	fabsf@F463+1,fabsf@u+1
  5940  005B88  C199  F022         	movff	fabsf@F463+2,fabsf@u+2
  5941  005B8C  C19A  F023         	movff	fabsf@F463+3,fabsf@u+3
  5942  005B90  C01C  F020         	movff	fabsf@x,fabsf@u
  5943  005B94  C01D  F021         	movff	fabsf@x+1,fabsf@u+1
  5944  005B98  C01E  F022         	movff	fabsf@x+2,fabsf@u+2
  5945  005B9C  C01F  F023         	movff	fabsf@x+3,fabsf@u+3
  5946  005BA0  9E23               	bcf	(fabsf@u+3)^0,7,c
  5947  005BA2  C020  F01C         	movff	fabsf@u,?_fabsf
  5948  005BA6  C021  F01D         	movff	fabsf@u+1,?_fabsf+1
  5949  005BAA  C022  F01E         	movff	fabsf@u+2,?_fabsf+2
  5950  005BAE  C023  F01F         	movff	fabsf@u+3,?_fabsf+3
  5951  005BB2  0012               	return		;funcret
  5952  005BB4                     __end_of_fabsf:
  5953                           	callstack 0
  5954                           
  5955 ;; *************** function ___xxtofl *****************
  5956 ;; Defined at:
  5957 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
  5958 ;; Parameters:    Size  Location     Type
  5959 ;;  sign            1    wreg     unsigned char 
  5960 ;;  val             4   13[COMRAM] long 
  5961 ;; Auto vars:     Size  Location     Type
  5962 ;;  sign            1   21[COMRAM] unsigned char 
  5963 ;;  arg             4   23[COMRAM] unsigned long 
  5964 ;;  exp             1   22[COMRAM] unsigned char 
  5965 ;; Return value:  Size  Location     Type
  5966 ;;                  4   13[COMRAM] unsigned char 
  5967 ;; Registers used:
  5968 ;;		wreg, status,2, status,0
  5969 ;; Tracked objects:
  5970 ;;		On entry : 0/0
  5971 ;;		On exit  : 0/0
  5972 ;;		Unchanged: 0/0
  5973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5974 ;;      Params:         4       0       0       0       0       0       0
  5975 ;;      Locals:         6       0       0       0       0       0       0
  5976 ;;      Temps:          4       0       0       0       0       0       0
  5977 ;;      Totals:        14       0       0       0       0       0       0
  5978 ;;Total ram usage:       14 bytes
  5979 ;; Hardware stack levels used:    1
  5980 ;; Hardware stack levels required when called:    1
  5981 ;; This function calls:
  5982 ;;		Nothing
  5983 ;; This function is called by:
  5984 ;;		_scanAdcConversion
  5985 ;;		_calculatedAverageValue
  5986 ;;		_PWM1_setDC
  5987 ;;		_PWM2_setDC
  5988 ;;		_speedControl
  5989 ;; This function uses a non-reentrant model
  5990 ;;
  5991                           
  5992                           	psect	text18
  5993  0040EE                     __ptext18:
  5994                           	callstack 0
  5995  0040EE                     ___xxtofl:
  5996                           	callstack 25
  5997                           
  5998                           ;incstack = 0
  5999                           ;___xxtofl@sign stored from wreg
  6000  0040EE  6E16               	movwf	___xxtofl@sign^0,c
  6001  0040F0  5016               	movf	___xxtofl@sign^0,w,c
  6002  0040F2  B4D8               	btfsc	status,2,c
  6003  0040F4  EF7E  F020         	goto	u6411
  6004  0040F8  EF80  F020         	goto	u6410
  6005  0040FC                     u6411:
  6006  0040FC  EFA2  F020         	goto	l1139
  6007  004100                     u6410:
  6008  004100  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
  6009  004102  EF87  F020         	goto	u6420
  6010  004106  EF85  F020         	goto	u6421
  6011  00410A                     u6421:
  6012  00410A  EFA2  F020         	goto	l1139
  6013  00410E                     u6420:
  6014  00410E  C00E  F012         	movff	___xxtofl@val,??___xxtofl
  6015  004112  C00F  F013         	movff	___xxtofl@val+1,??___xxtofl+1
  6016  004116  C010  F014         	movff	___xxtofl@val+2,??___xxtofl+2
  6017  00411A  C011  F015         	movff	___xxtofl@val+3,??___xxtofl+3
  6018  00411E  1E12               	comf	??___xxtofl^0,f,c
  6019  004120  1E13               	comf	(??___xxtofl+1)^0,f,c
  6020  004122  1E14               	comf	(??___xxtofl+2)^0,f,c
  6021  004124  1E15               	comf	(??___xxtofl+3)^0,f,c
  6022  004126  2A12               	incf	??___xxtofl^0,f,c
  6023  004128  0E00               	movlw	0
  6024  00412A  2213               	addwfc	(??___xxtofl+1)^0,f,c
  6025  00412C  2214               	addwfc	(??___xxtofl+2)^0,f,c
  6026  00412E  2215               	addwfc	(??___xxtofl+3)^0,f,c
  6027  004130  C012  F018         	movff	??___xxtofl,___xxtofl@arg
  6028  004134  C013  F019         	movff	??___xxtofl+1,___xxtofl@arg+1
  6029  004138  C014  F01A         	movff	??___xxtofl+2,___xxtofl@arg+2
  6030  00413C  C015  F01B         	movff	??___xxtofl+3,___xxtofl@arg+3
  6031  004140  EFAA  F020         	goto	l5281
  6032  004144                     l1139:
  6033  004144  C00E  F018         	movff	___xxtofl@val,___xxtofl@arg
  6034  004148  C00F  F019         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6035  00414C  C010  F01A         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6036  004150  C011  F01B         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6037  004154                     l5281:
  6038  004154  500E               	movf	___xxtofl@val^0,w,c
  6039  004156  100F               	iorwf	(___xxtofl@val+1)^0,w,c
  6040  004158  1010               	iorwf	(___xxtofl@val+2)^0,w,c
  6041  00415A  1011               	iorwf	(___xxtofl@val+3)^0,w,c
  6042  00415C  A4D8               	btfss	status,2,c
  6043  00415E  EFB3  F020         	goto	u6431
  6044  004162  EFB5  F020         	goto	u6430
  6045  004166                     u6431:
  6046  004166  EFBF  F020         	goto	l5287
  6047  00416A                     u6430:
  6048  00416A  0E00               	movlw	0
  6049  00416C  6E0E               	movwf	?___xxtofl^0,c
  6050  00416E  0E00               	movlw	0
  6051  004170  6E0F               	movwf	(?___xxtofl+1)^0,c
  6052  004172  0E00               	movlw	0
  6053  004174  6E10               	movwf	(?___xxtofl+2)^0,c
  6054  004176  0E00               	movlw	0
  6055  004178  6E11               	movwf	(?___xxtofl+3)^0,c
  6056  00417A  EF50  F021         	goto	l1142
  6057  00417E                     l5287:
  6058  00417E  0E96               	movlw	150
  6059  004180  6E17               	movwf	___xxtofl@exp^0,c
  6060  004182  EFC9  F020         	goto	l5291
  6061  004186                     l5289:
  6062  004186  2A17               	incf	___xxtofl@exp^0,f,c
  6063  004188  90D8               	bcf	status,0,c
  6064  00418A  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
  6065  00418C  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
  6066  00418E  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
  6067  004190  3218               	rrcf	___xxtofl@arg^0,f,c
  6068  004192                     l5291:
  6069  004192  0E00               	movlw	0
  6070  004194  1418               	andwf	___xxtofl@arg^0,w,c
  6071  004196  6E12               	movwf	??___xxtofl^0,c
  6072  004198  0E00               	movlw	0
  6073  00419A  1419               	andwf	(___xxtofl@arg+1)^0,w,c
  6074  00419C  6E13               	movwf	(??___xxtofl+1)^0,c
  6075  00419E  0E00               	movlw	0
  6076  0041A0  141A               	andwf	(___xxtofl@arg+2)^0,w,c
  6077  0041A2  6E14               	movwf	(??___xxtofl+2)^0,c
  6078  0041A4  0EFE               	movlw	254
  6079  0041A6  141B               	andwf	(___xxtofl@arg+3)^0,w,c
  6080  0041A8  6E15               	movwf	(??___xxtofl+3)^0,c
  6081  0041AA  5012               	movf	??___xxtofl^0,w,c
  6082  0041AC  1013               	iorwf	(??___xxtofl+1)^0,w,c
  6083  0041AE  1014               	iorwf	(??___xxtofl+2)^0,w,c
  6084  0041B0  1015               	iorwf	(??___xxtofl+3)^0,w,c
  6085  0041B2  A4D8               	btfss	status,2,c
  6086  0041B4  EFDE  F020         	goto	u6441
  6087  0041B8  EFE0  F020         	goto	u6440
  6088  0041BC                     u6441:
  6089  0041BC  EFC3  F020         	goto	l5289
  6090  0041C0                     u6440:
  6091  0041C0  EFEE  F020         	goto	l1146
  6092  0041C4                     l5293:
  6093  0041C4  2A17               	incf	___xxtofl@exp^0,f,c
  6094  0041C6  0E01               	movlw	1
  6095  0041C8  2618               	addwf	___xxtofl@arg^0,f,c
  6096  0041CA  0E00               	movlw	0
  6097  0041CC  2219               	addwfc	(___xxtofl@arg+1)^0,f,c
  6098  0041CE  221A               	addwfc	(___xxtofl@arg+2)^0,f,c
  6099  0041D0  221B               	addwfc	(___xxtofl@arg+3)^0,f,c
  6100  0041D2  90D8               	bcf	status,0,c
  6101  0041D4  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
  6102  0041D6  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
  6103  0041D8  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
  6104  0041DA  3218               	rrcf	___xxtofl@arg^0,f,c
  6105  0041DC                     l1146:
  6106  0041DC  0E00               	movlw	0
  6107  0041DE  1418               	andwf	___xxtofl@arg^0,w,c
  6108  0041E0  6E12               	movwf	??___xxtofl^0,c
  6109  0041E2  0E00               	movlw	0
  6110  0041E4  1419               	andwf	(___xxtofl@arg+1)^0,w,c
  6111  0041E6  6E13               	movwf	(??___xxtofl+1)^0,c
  6112  0041E8  0E00               	movlw	0
  6113  0041EA  141A               	andwf	(___xxtofl@arg+2)^0,w,c
  6114  0041EC  6E14               	movwf	(??___xxtofl+2)^0,c
  6115  0041EE  0EFF               	movlw	255
  6116  0041F0  141B               	andwf	(___xxtofl@arg+3)^0,w,c
  6117  0041F2  6E15               	movwf	(??___xxtofl+3)^0,c
  6118  0041F4  5012               	movf	??___xxtofl^0,w,c
  6119  0041F6  1013               	iorwf	(??___xxtofl+1)^0,w,c
  6120  0041F8  1014               	iorwf	(??___xxtofl+2)^0,w,c
  6121  0041FA  1015               	iorwf	(??___xxtofl+3)^0,w,c
  6122  0041FC  A4D8               	btfss	status,2,c
  6123  0041FE  EF03  F021         	goto	u6451
  6124  004202  EF05  F021         	goto	u6450
  6125  004206                     u6451:
  6126  004206  EFE2  F020         	goto	l5293
  6127  00420A                     u6450:
  6128  00420A  EF0D  F021         	goto	l5301
  6129  00420E                     l5299:
  6130  00420E  0617               	decf	___xxtofl@exp^0,f,c
  6131  004210  90D8               	bcf	status,0,c
  6132  004212  3618               	rlcf	___xxtofl@arg^0,f,c
  6133  004214  3619               	rlcf	(___xxtofl@arg+1)^0,f,c
  6134  004216  361A               	rlcf	(___xxtofl@arg+2)^0,f,c
  6135  004218  361B               	rlcf	(___xxtofl@arg+3)^0,f,c
  6136  00421A                     l5301:
  6137  00421A  BE1A               	btfsc	(___xxtofl@arg+2)^0,7,c
  6138  00421C  EF12  F021         	goto	u6461
  6139  004220  EF14  F021         	goto	u6460
  6140  004224                     u6461:
  6141  004224  EF1C  F021         	goto	l1153
  6142  004228                     u6460:
  6143  004228  0E02               	movlw	2
  6144  00422A  6017               	cpfslt	___xxtofl@exp^0,c
  6145  00422C  EF1A  F021         	goto	u6471
  6146  004230  EF1C  F021         	goto	u6470
  6147  004234                     u6471:
  6148  004234  EF07  F021         	goto	l5299
  6149  004238                     u6470:
  6150  004238                     l1153:
  6151  004238  B017               	btfsc	___xxtofl@exp^0,0,c
  6152  00423A  EF21  F021         	goto	u6481
  6153  00423E  EF23  F021         	goto	u6480
  6154  004242                     u6481:
  6155  004242  EF24  F021         	goto	l5307
  6156  004246                     u6480:
  6157  004246  9E1A               	bcf	(___xxtofl@arg+2)^0,7,c
  6158  004248                     l5307:
  6159  004248  90D8               	bcf	status,0,c
  6160  00424A  3217               	rrcf	___xxtofl@exp^0,f,c
  6161  00424C  C017  F012         	movff	___xxtofl@exp,??___xxtofl
  6162  004250  6A13               	clrf	(??___xxtofl+1)^0,c
  6163  004252  6A14               	clrf	(??___xxtofl+2)^0,c
  6164  004254  6A15               	clrf	(??___xxtofl+3)^0,c
  6165  004256  C012  F015         	movff	??___xxtofl,??___xxtofl+3
  6166  00425A  6A14               	clrf	(??___xxtofl+2)^0,c
  6167  00425C  6A13               	clrf	(??___xxtofl+1)^0,c
  6168  00425E  6A12               	clrf	??___xxtofl^0,c
  6169  004260  5012               	movf	??___xxtofl^0,w,c
  6170  004262  1218               	iorwf	___xxtofl@arg^0,f,c
  6171  004264  5013               	movf	(??___xxtofl+1)^0,w,c
  6172  004266  1219               	iorwf	(___xxtofl@arg+1)^0,f,c
  6173  004268  5014               	movf	(??___xxtofl+2)^0,w,c
  6174  00426A  121A               	iorwf	(___xxtofl@arg+2)^0,f,c
  6175  00426C  5015               	movf	(??___xxtofl+3)^0,w,c
  6176  00426E  121B               	iorwf	(___xxtofl@arg+3)^0,f,c
  6177  004270  5016               	movf	___xxtofl@sign^0,w,c
  6178  004272  B4D8               	btfsc	status,2,c
  6179  004274  EF3E  F021         	goto	u6491
  6180  004278  EF40  F021         	goto	u6490
  6181  00427C                     u6491:
  6182  00427C  EF48  F021         	goto	l5317
  6183  004280                     u6490:
  6184  004280  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
  6185  004282  EF47  F021         	goto	u6500
  6186  004286  EF45  F021         	goto	u6501
  6187  00428A                     u6501:
  6188  00428A  EF48  F021         	goto	l5317
  6189  00428E                     u6500:
  6190  00428E  8E1B               	bsf	(___xxtofl@arg+3)^0,7,c
  6191  004290                     l5317:
  6192  004290  C018  F00E         	movff	___xxtofl@arg,?___xxtofl
  6193  004294  C019  F00F         	movff	___xxtofl@arg+1,?___xxtofl+1
  6194  004298  C01A  F010         	movff	___xxtofl@arg+2,?___xxtofl+2
  6195  00429C  C01B  F011         	movff	___xxtofl@arg+3,?___xxtofl+3
  6196  0042A0                     l1142:
  6197  0042A0  0012               	return		;funcret
  6198  0042A2                     __end_of___xxtofl:
  6199                           	callstack 0
  6200                           
  6201 ;; *************** function _sprintf *****************
  6202 ;; Defined at:
  6203 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  6204 ;; Parameters:    Size  Location     Type
  6205 ;;  s               2  111[BANK0 ] PTR unsigned char 
  6206 ;;		 -> stateMachine@textCursor2(16), 
  6207 ;;  fmt             2  113[BANK0 ] PTR const unsigned char 
  6208 ;;		 -> STR_16(13), STR_14(14), STR_12(16), STR_10(16), 
  6209 ;;		 -> STR_8(18), STR_6(18), STR_4(18), STR_2(15), 
  6210 ;; Auto vars:     Size  Location     Type
  6211 ;;  f               6  123[BANK0 ] struct _IO_FILE
  6212 ;;  ap              2  121[BANK0 ] PTR void [1]
  6213 ;;		 -> ?_sprintf(2), 
  6214 ;;  ret             2    0        int 
  6215 ;; Return value:  Size  Location     Type
  6216 ;;                  2  111[BANK0 ] int 
  6217 ;; Registers used:
  6218 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6219 ;; Tracked objects:
  6220 ;;		On entry : 0/0
  6221 ;;		On exit  : 0/0
  6222 ;;		Unchanged: 0/0
  6223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6224 ;;      Params:         0       8       0       0       0       0       0
  6225 ;;      Locals:         0      10       0       0       0       0       0
  6226 ;;      Temps:          0       0       0       0       0       0       0
  6227 ;;      Totals:         0      18       0       0       0       0       0
  6228 ;;Total ram usage:       18 bytes
  6229 ;; Hardware stack levels used:    1
  6230 ;; Hardware stack levels required when called:    8
  6231 ;; This function calls:
  6232 ;;		_vfprintf
  6233 ;; This function is called by:
  6234 ;;		_stateMachine
  6235 ;; This function uses a non-reentrant model
  6236 ;;
  6237                           
  6238                           	psect	text19
  6239  00580A                     __ptext19:
  6240                           	callstack 0
  6241  00580A                     _sprintf:
  6242                           	callstack 20
  6243  00580A  0ED3               	movlw	low (?_sprintf+4)
  6244  00580C  0100               	movlb	0	; () banked
  6245  00580E  6FD9               	movwf	sprintf@ap& (0+255),b
  6246  005810  0E00               	movlw	high (?_sprintf+4)
  6247  005812  6FDA               	movwf	(sprintf@ap+1)& (0+255),b
  6248  005814  C0CF  F0DB         	movff	sprintf@s,sprintf@f
  6249  005818  C0D0  F0DC         	movff	sprintf@s+1,sprintf@f+1
  6250  00581C                     
  6251                           ; BSR set to: 0
  6252  00581C  0E00               	movlw	0
  6253  00581E  6FDE               	movwf	(sprintf@f+3)& (0+255),b
  6254  005820  0E00               	movlw	0
  6255  005822  6FDD               	movwf	(sprintf@f+2)& (0+255),b
  6256  005824                     
  6257                           ; BSR set to: 0
  6258  005824  0E00               	movlw	0
  6259  005826  6FE0               	movwf	(sprintf@f+5)& (0+255),b
  6260  005828  0E00               	movlw	0
  6261  00582A  6FDF               	movwf	(sprintf@f+4)& (0+255),b
  6262  00582C                     
  6263                           ; BSR set to: 0
  6264  00582C  0EDB               	movlw	low sprintf@f
  6265  00582E  6FC7               	movwf	vfprintf@fp& (0+255),b
  6266  005830  0E00               	movlw	high sprintf@f
  6267  005832  6FC8               	movwf	(vfprintf@fp+1)& (0+255),b
  6268  005834  C0D1  F0C9         	movff	sprintf@fmt,vfprintf@fmt
  6269  005838  C0D2  F0CA         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6270  00583C  0ED9               	movlw	low sprintf@ap
  6271  00583E  6FCB               	movwf	vfprintf@ap& (0+255),b
  6272  005840  0E00               	movlw	high sprintf@ap
  6273  005842  6FCC               	movwf	(vfprintf@ap+1)& (0+255),b
  6274  005844  ECE8  F02A         	call	_vfprintf	;wreg free
  6275  005848  0100               	movlb	0	; () banked
  6276  00584A  51DD               	movf	(sprintf@f+2)& (0+255),w,b
  6277  00584C  25CF               	addwf	sprintf@s& (0+255),w,b
  6278  00584E  6ED9               	movwf	fsr2l,c
  6279  005850  51DE               	movf	(sprintf@f+3)& (0+255),w,b
  6280  005852  21D0               	addwfc	(sprintf@s+1)& (0+255),w,b
  6281  005854  6EDA               	movwf	fsr2h,c
  6282  005856  0E00               	movlw	0
  6283  005858  6EDF               	movwf	indf2,c
  6284  00585A                     
  6285                           ; BSR set to: 0
  6286  00585A  0012               	return		;funcret
  6287  00585C                     __end_of_sprintf:
  6288                           	callstack 0
  6289                           
  6290 ;; *************** function _vfprintf *****************
  6291 ;; Defined at:
  6292 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6293 ;; Parameters:    Size  Location     Type
  6294 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  6295 ;;		 -> sprintf@f(6), 
  6296 ;;  fmt             2  105[BANK0 ] PTR const unsigned char 
  6297 ;;		 -> STR_16(13), STR_14(14), STR_12(16), STR_10(16), 
  6298 ;;		 -> STR_8(18), STR_6(18), STR_4(18), STR_2(15), 
  6299 ;;  ap              2  107[BANK0 ] PTR PTR void 
  6300 ;;		 -> sprintf@ap(2), 
  6301 ;; Auto vars:     Size  Location     Type
  6302 ;;  cfmt            2  109[BANK0 ] PTR unsigned char 
  6303 ;;		 -> STR_16(13), STR_14(14), STR_12(16), STR_10(16), 
  6304 ;;		 -> STR_8(18), STR_6(18), STR_4(18), STR_2(15), 
  6305 ;; Return value:  Size  Location     Type
  6306 ;;                  2  103[BANK0 ] int 
  6307 ;; Registers used:
  6308 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6309 ;; Tracked objects:
  6310 ;;		On entry : 0/0
  6311 ;;		On exit  : 0/0
  6312 ;;		Unchanged: 0/0
  6313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6314 ;;      Params:         0       6       0       0       0       0       0
  6315 ;;      Locals:         0       2       0       0       0       0       0
  6316 ;;      Temps:          0       0       0       0       0       0       0
  6317 ;;      Totals:         0       8       0       0       0       0       0
  6318 ;;Total ram usage:        8 bytes
  6319 ;; Hardware stack levels used:    1
  6320 ;; Hardware stack levels required when called:    7
  6321 ;; This function calls:
  6322 ;;		_vfpfcnvrt
  6323 ;; This function is called by:
  6324 ;;		_sprintf
  6325 ;; This function uses a non-reentrant model
  6326 ;;
  6327                           
  6328                           	psect	text20
  6329  0055D0                     __ptext20:
  6330                           	callstack 0
  6331  0055D0                     _vfprintf:
  6332                           	callstack 20
  6333  0055D0                     
  6334                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6335  0055D0  C0C9  F0CD         	movff	vfprintf@fmt,vfprintf@cfmt
  6336  0055D4  C0CA  F0CE         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6337  0055D8                     
  6338                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  6339  0055D8  0E00               	movlw	0
  6340  0055DA  0101               	movlb	1	; () banked
  6341  0055DC  6F9F               	movwf	(_nout+1)& (0+255),b
  6342  0055DE  0E00               	movlw	0
  6343  0055E0  6F9E               	movwf	_nout& (0+255),b
  6344                           
  6345                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  6346  0055E2  EF0A  F02B         	goto	l5591
  6347  0055E6                     l5589:
  6348                           
  6349                           ; BSR set to: 1
  6350                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6351  0055E6  C0C7  F0A7         	movff	vfprintf@fp,vfpfcnvrt@fp
  6352  0055EA  C0C8  F0A8         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6353  0055EE  0ECD               	movlw	low vfprintf@cfmt
  6354  0055F0  0100               	movlb	0	; () banked
  6355  0055F2  6FA9               	movwf	vfpfcnvrt@fmt& (0+255),b
  6356  0055F4  0E00               	movlw	high vfprintf@cfmt
  6357  0055F6  6FAA               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  6358  0055F8  C0CB  F0AB         	movff	vfprintf@ap,vfpfcnvrt@ap
  6359  0055FC  C0CC  F0AC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6360  005600  EC4B  F012         	call	_vfpfcnvrt	;wreg free
  6361  005604  0100               	movlb	0	; () banked
  6362  005606  51A7               	movf	?_vfpfcnvrt& (0+255),w,b
  6363  005608  0101               	movlb	1	; () banked
  6364  00560A  279E               	addwf	_nout& (0+255),f,b
  6365  00560C  0100               	movlb	0	; () banked
  6366  00560E  51A8               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  6367  005610  0101               	movlb	1	; () banked
  6368  005612  239F               	addwfc	(_nout+1)& (0+255),f,b
  6369  005614                     l5591:
  6370                           
  6371                           ; BSR set to: 1
  6372                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  6373  005614  C0CD  FFF6         	movff	vfprintf@cfmt,tblptrl
  6374  005618  C0CE  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6375  00561C                     	if	0	;tblptru may be non-zero
  6376  00561C                     	endif
  6377  00561C                     	if	0	;tblptru may be non-zero
  6378  00561C                     	endif
  6379  00561C  0008               	tblrd		*
  6380  00561E  50F5               	movf	tablat,w,c
  6381  005620  0900               	iorlw	0
  6382  005622  A4D8               	btfss	status,2,c
  6383  005624  EF16  F02B         	goto	u6781
  6384  005628  EF18  F02B         	goto	u6780
  6385  00562C                     u6781:
  6386  00562C  EFF3  F02A         	goto	l5589
  6387  005630                     u6780:
  6388  005630                     
  6389                           ; BSR set to: 1
  6390                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  6391  005630  C19E  F0C7         	movff	_nout,?_vfprintf
  6392  005634  C19F  F0C8         	movff	_nout+1,?_vfprintf+1
  6393  005638                     
  6394                           ; BSR set to: 1
  6395  005638  0012               	return		;funcret
  6396  00563A                     __end_of_vfprintf:
  6397                           	callstack 0
  6398                           
  6399 ;; *************** function _vfpfcnvrt *****************
  6400 ;; Defined at:
  6401 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6402 ;; Parameters:    Size  Location     Type
  6403 ;;  fp              2   71[BANK0 ] PTR struct _IO_FILE
  6404 ;;		 -> sprintf@f(6), 
  6405 ;;  fmt             2   73[BANK0 ] PTR PTR unsigned char 
  6406 ;;		 -> vfprintf@cfmt(2), 
  6407 ;;  ap              2   75[BANK0 ] PTR PTR void 
  6408 ;;		 -> sprintf@ap(2), 
  6409 ;; Auto vars:     Size  Location     Type
  6410 ;;  ll              8   81[BANK0 ] long long 
  6411 ;;  llu             8    0        unsigned long long 
  6412 ;;  f               4   95[BANK0 ] unsigned long long 
  6413 ;;  ct              3   99[BANK0 ] unsigned char [3]
  6414 ;;  vp              3    0        PTR void 
  6415 ;;  cp              3    0        PTR unsigned char 
  6416 ;;  i               2    0        int 
  6417 ;;  done            2    0        int 
  6418 ;;  c               1  102[BANK0 ] unsigned char 
  6419 ;; Return value:  Size  Location     Type
  6420 ;;                  2   71[BANK0 ] int 
  6421 ;; Registers used:
  6422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6423 ;; Tracked objects:
  6424 ;;		On entry : 0/0
  6425 ;;		On exit  : 0/0
  6426 ;;		Unchanged: 0/0
  6427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6428 ;;      Params:         0       6       0       0       0       0       0
  6429 ;;      Locals:         0      22       0       0       0       0       0
  6430 ;;      Temps:          0       4       0       0       0       0       0
  6431 ;;      Totals:         0      32       0       0       0       0       0
  6432 ;;Total ram usage:       32 bytes
  6433 ;; Hardware stack levels used:    1
  6434 ;; Hardware stack levels required when called:    6
  6435 ;; This function calls:
  6436 ;;		_atoi
  6437 ;;		_dtoa
  6438 ;;		_efgtoa
  6439 ;;		_fputc
  6440 ;;		_isdigit
  6441 ;;		_isupper
  6442 ;;		_strncmp
  6443 ;;		_tolower
  6444 ;; This function is called by:
  6445 ;;		_vfprintf
  6446 ;; This function uses a non-reentrant model
  6447 ;;
  6448                           
  6449                           	psect	text21
  6450  002496                     __ptext21:
  6451                           	callstack 0
  6452  002496                     _vfpfcnvrt:
  6453                           	callstack 20
  6454  002496                     
  6455                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  6456  002496  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6457  00249A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6458  00249E  CFDE FFF6          	movff	postinc2,tblptrl
  6459  0024A2  CFDD FFF7          	movff	postdec2,tblptrh
  6460  0024A6                     	if	0	;tblptru may be non-zero
  6461  0024A6                     	endif
  6462  0024A6                     	if	0	;tblptru may be non-zero
  6463  0024A6                     	endif
  6464  0024A6  0008               	tblrd		*
  6465  0024A8  50F5               	movf	tablat,w,c
  6466  0024AA  0A25               	xorlw	37
  6467  0024AC  A4D8               	btfss	status,2,c
  6468  0024AE  EF5B  F012         	goto	u6511
  6469  0024B2  EF5D  F012         	goto	u6510
  6470  0024B6                     u6511:
  6471  0024B6  EF4A  F015         	goto	l5431
  6472  0024BA                     u6510:
  6473  0024BA                     
  6474                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  6475  0024BA  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6476  0024BE  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6477  0024C2  2ADE               	incf	postinc2,f,c
  6478  0024C4  0E00               	movlw	0
  6479  0024C6  22DD               	addwfc	postdec2,f,c
  6480  0024C8                     
  6481                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  6482  0024C8  0E00               	movlw	0
  6483  0024CA  0101               	movlb	1	; () banked
  6484  0024CC  6FA1               	movwf	(_width+1)& (0+255),b
  6485  0024CE  0E00               	movlw	0
  6486  0024D0  6FA0               	movwf	_width& (0+255),b
  6487  0024D2  C1A0  F1A4         	movff	_width,_flags
  6488  0024D6  C1A1  F1A5         	movff	_width+1,_flags+1
  6489  0024DA                     
  6490                           ; BSR set to: 1
  6491                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  6492  0024DA  69A2               	setf	_prec& (0+255),b
  6493  0024DC  69A3               	setf	(_prec+1)& (0+255),b
  6494  0024DE                     
  6495                           ; BSR set to: 1
  6496                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  6497  0024DE  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6498  0024E2  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6499  0024E6  CFDE FFF6          	movff	postinc2,tblptrl
  6500  0024EA  CFDD FFF7          	movff	postdec2,tblptrh
  6501  0024EE                     	if	0	;tblptru may be non-zero
  6502  0024EE                     	endif
  6503  0024EE                     	if	0	;tblptru may be non-zero
  6504  0024EE                     	endif
  6505  0024EE  0008               	tblrd		*
  6506  0024F0  50F5               	movf	tablat,w,c
  6507  0024F2  0A2A               	xorlw	42
  6508  0024F4  A4D8               	btfss	status,2,c
  6509  0024F6  EF7F  F012         	goto	u6521
  6510  0024FA  EF81  F012         	goto	u6520
  6511  0024FE                     u6521:
  6512  0024FE  EFAA  F012         	goto	l5337
  6513  002502                     u6520:
  6514  002502                     
  6515                           ; BSR set to: 1
  6516                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  6517  002502  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6518  002506  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6519  00250A  2ADE               	incf	postinc2,f,c
  6520  00250C  0E00               	movlw	0
  6521  00250E  22DD               	addwfc	postdec2,f,c
  6522                           
  6523                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6524  002510  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6525  002514  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6526  002518  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6527  00251C  0E02               	movlw	2
  6528  00251E  26DE               	addwf	postinc2,f,c
  6529  002520  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6530  002524  0E00               	movlw	0
  6531  002526  22DD               	addwfc	postdec2,f,c
  6532  002528  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6533  00252C  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6534  002530  CFDE F1A0          	movff	postinc2,_width
  6535  002534  CFDD F1A1          	movff	postdec2,_width+1
  6536  002538                     
  6537                           ; BSR set to: 1
  6538                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  6539  002538  BFA1               	btfsc	(_width+1)& (0+255),7,b
  6540  00253A  EFA3  F012         	goto	u6530
  6541  00253E  EFA1  F012         	goto	u6531
  6542  002542                     u6531:
  6543  002542  EFEE  F012         	goto	l5347
  6544  002546                     u6530:
  6545  002546                     
  6546                           ; BSR set to: 1
  6547                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  6548  002546  81A4               	bsf	_flags& (0+255),0,b
  6549                           
  6550                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  6551  002548  6DA0               	negf	_width& (0+255),b
  6552  00254A  1FA1               	comf	(_width+1)& (0+255),f,b
  6553  00254C  B0D8               	btfsc	status,0,c
  6554  00254E  2BA1               	incf	(_width+1)& (0+255),f,b
  6555  002550  EFEE  F012         	goto	l5347
  6556  002554                     l5337:
  6557                           
  6558                           ; BSR set to: 1
  6559                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  6560  002554  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6561  002558  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6562  00255C  CFDE F008          	movff	postinc2,atoi@s
  6563  002560  CFDD F009          	movff	postdec2,atoi@s+1
  6564  002564  EC51  F021         	call	_atoi	;wreg free
  6565  002568  C008  F1A0         	movff	?_atoi,_width
  6566  00256C  C009  F1A1         	movff	?_atoi+1,_width+1
  6567                           
  6568                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6569  002570  EFC1  F012         	goto	l5341
  6570  002574                     l5339:
  6571                           
  6572                           ; BSR set to: 0
  6573                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  6574  002574  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6575  002578  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6576  00257C  2ADE               	incf	postinc2,f,c
  6577  00257E  0E00               	movlw	0
  6578  002580  22DD               	addwfc	postdec2,f,c
  6579  002582                     l5341:
  6580  002582  0ED0               	movlw	208
  6581  002584  0100               	movlb	0	; () banked
  6582  002586  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  6583  002588  0EFF               	movlw	255
  6584  00258A  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6585  00258C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6586  002590  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6587  002594  CFDE FFF6          	movff	postinc2,tblptrl
  6588  002598  CFDD FFF7          	movff	postdec2,tblptrh
  6589  00259C                     	if	0	;tblptru may be non-zero
  6590  00259C                     	endif
  6591  00259C                     	if	0	;tblptru may be non-zero
  6592  00259C                     	endif
  6593  00259C  0008               	tblrd		*
  6594  00259E  50F5               	movf	tablat,w,c
  6595  0025A0  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6596  0025A2  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  6597  0025A4  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  6598  0025A6  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  6599  0025A8  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6600  0025AA  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  6601  0025AC  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  6602  0025AE  E10A               	bnz	u6540
  6603  0025B0  0E0A               	movlw	10
  6604  0025B2  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  6605  0025B4  A0D8               	btfss	status,0,c
  6606  0025B6  EFDF  F012         	goto	u6541
  6607  0025BA  EFE2  F012         	goto	u6540
  6608  0025BE                     u6541:
  6609  0025BE  0E01               	movlw	1
  6610  0025C0  EFE3  F012         	goto	u6550
  6611  0025C4                     u6540:
  6612  0025C4  0E00               	movlw	0
  6613  0025C6                     u6550:
  6614  0025C6  6FB9               	movwf	_vfpfcnvrt$2528& (0+255),b
  6615  0025C8  6BBA               	clrf	(_vfpfcnvrt$2528+1)& (0+255),b
  6616  0025CA                     
  6617                           ; BSR set to: 0
  6618  0025CA  51B9               	movf	_vfpfcnvrt$2528& (0+255),w,b
  6619  0025CC  11BA               	iorwf	(_vfpfcnvrt$2528+1)& (0+255),w,b
  6620  0025CE  A4D8               	btfss	status,2,c
  6621  0025D0  EFEC  F012         	goto	u6561
  6622  0025D4  EFEE  F012         	goto	u6560
  6623  0025D8                     u6561:
  6624  0025D8  EFBA  F012         	goto	l5339
  6625  0025DC                     u6560:
  6626  0025DC                     l5347:
  6627                           
  6628                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  6629  0025DC  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6630  0025E0  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6631  0025E4  CFDE FFF6          	movff	postinc2,tblptrl
  6632  0025E8  CFDD FFF7          	movff	postdec2,tblptrh
  6633  0025EC                     	if	0	;tblptru may be non-zero
  6634  0025EC                     	endif
  6635  0025EC                     	if	0	;tblptru may be non-zero
  6636  0025EC                     	endif
  6637  0025EC  0008               	tblrd		*
  6638  0025EE  50F5               	movf	tablat,w,c
  6639  0025F0  0A2E               	xorlw	46
  6640  0025F2  A4D8               	btfss	status,2,c
  6641  0025F4  EFFE  F012         	goto	u6571
  6642  0025F8  EF00  F013         	goto	u6570
  6643  0025FC                     u6571:
  6644  0025FC  EF7F  F013         	goto	l5367
  6645  002600                     u6570:
  6646  002600                     
  6647                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  6648  002600  0E00               	movlw	0
  6649  002602  0101               	movlb	1	; () banked
  6650  002604  6FA3               	movwf	(_prec+1)& (0+255),b
  6651  002606  0E00               	movlw	0
  6652  002608  6FA2               	movwf	_prec& (0+255),b
  6653  00260A                     
  6654                           ; BSR set to: 1
  6655                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  6656  00260A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6657  00260E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6658  002612  2ADE               	incf	postinc2,f,c
  6659  002614  0E00               	movlw	0
  6660  002616  22DD               	addwfc	postdec2,f,c
  6661  002618                     
  6662                           ; BSR set to: 1
  6663                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  6664  002618  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6665  00261C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6666  002620  CFDE FFF6          	movff	postinc2,tblptrl
  6667  002624  CFDD FFF7          	movff	postdec2,tblptrh
  6668  002628                     	if	0	;tblptru may be non-zero
  6669  002628                     	endif
  6670  002628                     	if	0	;tblptru may be non-zero
  6671  002628                     	endif
  6672  002628  0008               	tblrd		*
  6673  00262A  50F5               	movf	tablat,w,c
  6674  00262C  0A2A               	xorlw	42
  6675  00262E  A4D8               	btfss	status,2,c
  6676  002630  EF1C  F013         	goto	u6581
  6677  002634  EF1E  F013         	goto	u6580
  6678  002638                     u6581:
  6679  002638  EF3B  F013         	goto	l5357
  6680  00263C                     u6580:
  6681  00263C                     
  6682                           ; BSR set to: 1
  6683                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  6684  00263C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6685  002640  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6686  002644  2ADE               	incf	postinc2,f,c
  6687  002646  0E00               	movlw	0
  6688  002648  22DD               	addwfc	postdec2,f,c
  6689                           
  6690                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  6691  00264A  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6692  00264E  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6693  002652  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6694  002656  0E02               	movlw	2
  6695  002658  26DE               	addwf	postinc2,f,c
  6696  00265A  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6697  00265E  0E00               	movlw	0
  6698  002660  22DD               	addwfc	postdec2,f,c
  6699  002662  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6700  002666  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6701  00266A  CFDE F1A2          	movff	postinc2,_prec
  6702  00266E  CFDD F1A3          	movff	postdec2,_prec+1
  6703                           
  6704                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  6705  002672  EF7F  F013         	goto	l5367
  6706  002676                     l5357:
  6707                           
  6708                           ; BSR set to: 1
  6709                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  6710  002676  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6711  00267A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6712  00267E  CFDE F008          	movff	postinc2,atoi@s
  6713  002682  CFDD F009          	movff	postdec2,atoi@s+1
  6714  002686  EC51  F021         	call	_atoi	;wreg free
  6715  00268A  C008  F1A2         	movff	?_atoi,_prec
  6716  00268E  C009  F1A3         	movff	?_atoi+1,_prec+1
  6717                           
  6718                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6719  002692  EF52  F013         	goto	l5361
  6720  002696                     l5359:
  6721                           
  6722                           ; BSR set to: 0
  6723                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  6724  002696  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6725  00269A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6726  00269E  2ADE               	incf	postinc2,f,c
  6727  0026A0  0E00               	movlw	0
  6728  0026A2  22DD               	addwfc	postdec2,f,c
  6729  0026A4                     l5361:
  6730  0026A4  0ED0               	movlw	208
  6731  0026A6  0100               	movlb	0	; () banked
  6732  0026A8  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  6733  0026AA  0EFF               	movlw	255
  6734  0026AC  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6735  0026AE  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6736  0026B2  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6737  0026B6  CFDE FFF6          	movff	postinc2,tblptrl
  6738  0026BA  CFDD FFF7          	movff	postdec2,tblptrh
  6739  0026BE                     	if	0	;tblptru may be non-zero
  6740  0026BE                     	endif
  6741  0026BE                     	if	0	;tblptru may be non-zero
  6742  0026BE                     	endif
  6743  0026BE  0008               	tblrd		*
  6744  0026C0  50F5               	movf	tablat,w,c
  6745  0026C2  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6746  0026C4  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  6747  0026C6  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  6748  0026C8  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  6749  0026CA  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6750  0026CC  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  6751  0026CE  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  6752  0026D0  E10A               	bnz	u6590
  6753  0026D2  0E0A               	movlw	10
  6754  0026D4  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  6755  0026D6  A0D8               	btfss	status,0,c
  6756  0026D8  EF70  F013         	goto	u6591
  6757  0026DC  EF73  F013         	goto	u6590
  6758  0026E0                     u6591:
  6759  0026E0  0E01               	movlw	1
  6760  0026E2  EF74  F013         	goto	u6600
  6761  0026E6                     u6590:
  6762  0026E6  0E00               	movlw	0
  6763  0026E8                     u6600:
  6764  0026E8  6FBB               	movwf	_vfpfcnvrt$2529& (0+255),b
  6765  0026EA  6BBC               	clrf	(_vfpfcnvrt$2529+1)& (0+255),b
  6766  0026EC                     
  6767                           ; BSR set to: 0
  6768  0026EC  51BB               	movf	_vfpfcnvrt$2529& (0+255),w,b
  6769  0026EE  11BC               	iorwf	(_vfpfcnvrt$2529+1)& (0+255),w,b
  6770  0026F0  A4D8               	btfss	status,2,c
  6771  0026F2  EF7D  F013         	goto	u6611
  6772  0026F6  EF7F  F013         	goto	u6610
  6773  0026FA                     u6611:
  6774  0026FA  EF4B  F013         	goto	l5359
  6775  0026FE                     u6610:
  6776  0026FE                     l5367:
  6777                           
  6778                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0
      +                          ] = tolower((int)(*fmt)[0]);
  6779  0026FE  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6780  002702  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6781  002706  CFDE FFF6          	movff	postinc2,tblptrl
  6782  00270A  CFDD FFF7          	movff	postdec2,tblptrh
  6783  00270E                     	if	0	;tblptru may be non-zero
  6784  00270E                     	endif
  6785  00270E                     	if	0	;tblptru may be non-zero
  6786  00270E                     	endif
  6787  00270E  0008               	tblrd		*
  6788  002710  50F5               	movf	tablat,w,c
  6789  002712  6E07               	movwf	tolower@c^0,c
  6790  002714  6A08               	clrf	(tolower@c+1)^0,c
  6791  002716  EC50  F02B         	call	_tolower	;wreg free
  6792  00271A  5007               	movf	?_tolower^0,w,c
  6793  00271C  0100               	movlb	0	; () banked
  6794  00271E  6FC3               	movwf	vfpfcnvrt@ct& (0+255),b
  6795  002720                     
  6796                           ; BSR set to: 0
  6797                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (
      +                          ct[0]) {
  6798  002720  51C3               	movf	vfpfcnvrt@ct& (0+255),w,b
  6799  002722  B4D8               	btfsc	status,2,c
  6800  002724  EF96  F013         	goto	u6621
  6801  002728  EF98  F013         	goto	u6620
  6802  00272C                     u6621:
  6803  00272C  EFD2  F013         	goto	l5377
  6804  002730                     u6620:
  6805  002730                     
  6806                           ; BSR set to: 0
  6807                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             
      +                          ct[1] = tolower((int)(*fmt)[1]);
  6808  002730  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6809  002734  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6810  002738  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  6811  00273C  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  6812  002740  0E01               	movlw	1
  6813  002742  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  6814  002744  0E00               	movlw	0
  6815  002746  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6816  002748  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6817  00274C  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6818  002750                     	if	0	;tblptru may be non-zero
  6819  002750                     	endif
  6820  002750                     	if	0	;tblptru may be non-zero
  6821  002750                     	endif
  6822  002750  0008               	tblrd		*
  6823  002752  50F5               	movf	tablat,w,c
  6824  002754  6E07               	movwf	tolower@c^0,c
  6825  002756  6A08               	clrf	(tolower@c+1)^0,c
  6826  002758  EC50  F02B         	call	_tolower	;wreg free
  6827  00275C  5007               	movf	?_tolower^0,w,c
  6828  00275E  0100               	movlb	0	; () banked
  6829  002760  6FC4               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  6830  002762                     
  6831                           ; BSR set to: 0
  6832                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             
      +                          if (ct[1]) {
  6833  002762  51C4               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  6834  002764  B4D8               	btfsc	status,2,c
  6835  002766  EFB7  F013         	goto	u6631
  6836  00276A  EFB9  F013         	goto	u6630
  6837  00276E                     u6631:
  6838  00276E  EFD2  F013         	goto	l5377
  6839  002772                     u6630:
  6840  002772                     
  6841                           ; BSR set to: 0
  6842                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:             
      +                              ct[2] = tolower((int)(*fmt)[2]);
  6843  002772  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6844  002776  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6845  00277A  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  6846  00277E  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  6847  002782  0E02               	movlw	2
  6848  002784  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  6849  002786  0E00               	movlw	0
  6850  002788  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6851  00278A  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6852  00278E  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6853  002792                     	if	0	;tblptru may be non-zero
  6854  002792                     	endif
  6855  002792                     	if	0	;tblptru may be non-zero
  6856  002792                     	endif
  6857  002792  0008               	tblrd		*
  6858  002794  50F5               	movf	tablat,w,c
  6859  002796  6E07               	movwf	tolower@c^0,c
  6860  002798  6A08               	clrf	(tolower@c+1)^0,c
  6861  00279A  EC50  F02B         	call	_tolower	;wreg free
  6862  00279E  5007               	movf	?_tolower^0,w,c
  6863  0027A0  0100               	movlb	0	; () banked
  6864  0027A2  6FC5               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  6865  0027A4                     l5377:
  6866                           
  6867                           ; BSR set to: 0
  6868                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6869  0027A4  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6870  0027A8  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6871  0027AC  CFDE FFF6          	movff	postinc2,tblptrl
  6872  0027B0  CFDD FFF7          	movff	postdec2,tblptrh
  6873  0027B4                     	if	0	;tblptru may be non-zero
  6874  0027B4                     	endif
  6875  0027B4                     	if	0	;tblptru may be non-zero
  6876  0027B4                     	endif
  6877  0027B4  0008               	tblrd		*
  6878  0027B6  50F5               	movf	tablat,w,c
  6879  0027B8  0A64               	xorlw	100
  6880  0027BA  B4D8               	btfsc	status,2,c
  6881  0027BC  EFE2  F013         	goto	u6641
  6882  0027C0  EFE4  F013         	goto	u6640
  6883  0027C4                     u6641:
  6884  0027C4  EFF6  F013         	goto	l5381
  6885  0027C8                     u6640:
  6886  0027C8                     
  6887                           ; BSR set to: 0
  6888  0027C8  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6889  0027CC  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6890  0027D0  CFDE FFF6          	movff	postinc2,tblptrl
  6891  0027D4  CFDD FFF7          	movff	postdec2,tblptrh
  6892  0027D8                     	if	0	;tblptru may be non-zero
  6893  0027D8                     	endif
  6894  0027D8                     	if	0	;tblptru may be non-zero
  6895  0027D8                     	endif
  6896  0027D8  0008               	tblrd		*
  6897  0027DA  50F5               	movf	tablat,w,c
  6898  0027DC  0A69               	xorlw	105
  6899  0027DE  A4D8               	btfss	status,2,c
  6900  0027E0  EFF4  F013         	goto	u6651
  6901  0027E4  EFF6  F013         	goto	u6650
  6902  0027E8                     u6651:
  6903  0027E8  EF36  F014         	goto	l5387
  6904  0027EC                     u6650:
  6905  0027EC                     l5381:
  6906                           
  6907                           ; BSR set to: 0
  6908                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  6909  0027EC  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6910  0027F0  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6911  0027F4  2ADE               	incf	postinc2,f,c
  6912  0027F6  0E00               	movlw	0
  6913  0027F8  22DD               	addwfc	postdec2,f,c
  6914                           
  6915                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6916  0027FA  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6917  0027FE  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6918  002802  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6919  002806  0E02               	movlw	2
  6920  002808  26DE               	addwf	postinc2,f,c
  6921  00280A  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6922  00280E  0E00               	movlw	0
  6923  002810  22DD               	addwfc	postdec2,f,c
  6924  002812  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6925  002816  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6926  00281A  CFDE F0B1          	movff	postinc2,vfpfcnvrt@ll
  6927  00281E  CFDD F0B2          	movff	postdec2,vfpfcnvrt@ll+1
  6928  002822  0E00               	movlw	0
  6929  002824  BFB2               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  6930  002826  0EFF               	movlw	-1
  6931  002828  6FB3               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  6932  00282A  6FB4               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  6933  00282C  6FB5               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  6934  00282E  6FB6               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  6935  002830  6FB7               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  6936  002832  6FB8               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  6937  002834                     
  6938                           ; BSR set to: 0
  6939                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  6940  002834  C0A7  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  6941  002838  C0A8  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6942  00283C  C0B1  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  6943  002840  C0B2  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  6944  002844  C0B3  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  6945  002848  C0B4  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  6946  00284C  C0B5  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  6947  002850  C0B6  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  6948  002854  C0B7  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  6949  002858  C0B8  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  6950  00285C  EC1B  F01D         	call	_dtoa	;wreg free
  6951  002860  C01C  F0A7         	movff	?_dtoa,?_vfpfcnvrt
  6952  002864  C01D  F0A8         	movff	?_dtoa+1,?_vfpfcnvrt+1
  6953  002868  EF65  F015         	goto	l1361
  6954  00286C                     l5387:
  6955                           
  6956                           ; BSR set to: 0
  6957                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (
      +                          ct[0] == 'f') {
  6958  00286C  0E66               	movlw	102
  6959  00286E  19C3               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  6960  002870  A4D8               	btfss	status,2,c
  6961  002872  EF3D  F014         	goto	u6661
  6962  002876  EF3F  F014         	goto	u6660
  6963  00287A                     u6661:
  6964  00287A  EF7F  F014         	goto	l5399
  6965  00287E                     u6660:
  6966  00287E                     
  6967                           ; BSR set to: 0
  6968                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             
      +                          c = (*fmt)[0];
  6969  00287E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6970  002882  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6971  002886  CFDE FFF6          	movff	postinc2,tblptrl
  6972  00288A  CFDD FFF7          	movff	postdec2,tblptrh
  6973  00288E                     	if	0	;tblptru may be non-zero
  6974  00288E                     	endif
  6975  00288E                     	if	0	;tblptru may be non-zero
  6976  00288E                     	endif
  6977  00288E  0008               	tblrd		*
  6978  002890  CFF5 F0C6          	movff	tablat,vfpfcnvrt@c
  6979  002894                     
  6980                           ; BSR set to: 0
  6981                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             
      +                          ++*fmt;
  6982  002894  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6983  002898  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6984  00289C  2ADE               	incf	postinc2,f,c
  6985  00289E  0E00               	movlw	0
  6986  0028A0  22DD               	addwfc	postdec2,f,c
  6987  0028A2                     
  6988                           ; BSR set to: 0
  6989                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  6990  0028A2  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6991  0028A6  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6992  0028AA  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6993  0028AE  0E04               	movlw	4
  6994  0028B0  26DE               	addwf	postinc2,f,c
  6995  0028B2  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6996  0028B6  0E00               	movlw	0
  6997  0028B8  22DD               	addwfc	postdec2,f,c
  6998  0028BA  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6999  0028BE  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7000  0028C2  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  7001  0028C6  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  7002  0028CA  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  7003  0028CE  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  7004  0028D2                     l5395:
  7005                           
  7006                           ; BSR set to: 0
  7007                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             
      +                          return efgtoa(fp, f, c);
  7008  0028D2  C0A7  F058         	movff	vfpfcnvrt@fp,efgtoa@fp
  7009  0028D6  C0A8  F059         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  7010  0028DA  C0BF  F05A         	movff	vfpfcnvrt@f,efgtoa@f
  7011  0028DE  C0C0  F05B         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  7012  0028E2  C0C1  F05C         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  7013  0028E6  C0C2  F05D         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  7014  0028EA  C0C6  F05E         	movff	vfpfcnvrt@c,efgtoa@c
  7015  0028EE  EC6C  F003         	call	_efgtoa	;wreg free
  7016  0028F2  C058  F0A7         	movff	?_efgtoa,?_vfpfcnvrt
  7017  0028F6  C059  F0A8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  7018  0028FA  EF65  F015         	goto	l1361
  7019  0028FE                     l5399:
  7020                           
  7021                           ; BSR set to: 0
  7022                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  7023  0028FE  0EC3               	movlw	low vfpfcnvrt@ct
  7024  002900  6E01               	movwf	strncmp@_l^0,c
  7025  002902  0E00               	movlw	high vfpfcnvrt@ct
  7026  002904  6E02               	movwf	(strncmp@_l+1)^0,c
  7027  002906  0ED4               	movlw	low STR_25
  7028  002908  6E03               	movwf	strncmp@_r^0,c
  7029  00290A  0E06               	movlw	high STR_25
  7030  00290C  6E04               	movwf	(strncmp@_r+1)^0,c
  7031  00290E  0E00               	movlw	0
  7032  002910  6E06               	movwf	(strncmp@n+1)^0,c
  7033  002912  0E02               	movlw	2
  7034  002914  6E05               	movwf	strncmp@n^0,c
  7035  002916  ECE4  F026         	call	_strncmp	;wreg free
  7036  00291A  5001               	movf	?_strncmp^0,w,c
  7037  00291C  1002               	iorwf	(?_strncmp+1)^0,w,c
  7038  00291E  A4D8               	btfss	status,2,c
  7039  002920  EF94  F014         	goto	u6671
  7040  002924  EF96  F014         	goto	u6670
  7041  002928                     u6671:
  7042  002928  EF12  F015         	goto	l5415
  7043  00292C                     u6670:
  7044  00292C                     
  7045                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  7046  00292C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7047  002930  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7048  002934  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  7049  002938  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  7050  00293C  0E01               	movlw	1
  7051  00293E  0100               	movlb	0	; () banked
  7052  002940  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  7053  002942  0E00               	movlw	0
  7054  002944  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  7055  002946  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  7056  00294A  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  7057  00294E                     	if	0	;tblptru may be non-zero
  7058  00294E                     	endif
  7059  00294E                     	if	0	;tblptru may be non-zero
  7060  00294E                     	endif
  7061  00294E  0008               	tblrd		*
  7062  002950  CFF5 F0C6          	movff	tablat,vfpfcnvrt@c
  7063  002954  0EBF               	movlw	191
  7064  002956  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  7065  002958  0EFF               	movlw	255
  7066  00295A  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7067  00295C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7068  002960  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7069  002964  CFDE FFF6          	movff	postinc2,tblptrl
  7070  002968  CFDD FFF7          	movff	postdec2,tblptrh
  7071  00296C                     	if	0	;tblptru may be non-zero
  7072  00296C                     	endif
  7073  00296C                     	if	0	;tblptru may be non-zero
  7074  00296C                     	endif
  7075  00296C  0008               	tblrd		*
  7076  00296E  50F5               	movf	tablat,w,c
  7077  002970  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  7078  002972  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  7079  002974  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  7080  002976  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  7081  002978  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7082  00297A  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  7083  00297C  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  7084  00297E  E10A               	bnz	u6680
  7085  002980  0E1A               	movlw	26
  7086  002982  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  7087  002984  A0D8               	btfss	status,0,c
  7088  002986  EFC7  F014         	goto	u6681
  7089  00298A  EFCA  F014         	goto	u6680
  7090  00298E                     u6681:
  7091  00298E  0E01               	movlw	1
  7092  002990  EFCB  F014         	goto	u6690
  7093  002994                     u6680:
  7094  002994  0E00               	movlw	0
  7095  002996                     u6690:
  7096  002996  6FBD               	movwf	_vfpfcnvrt$2534& (0+255),b
  7097  002998  6BBE               	clrf	(_vfpfcnvrt$2534+1)& (0+255),b
  7098  00299A                     
  7099                           ; BSR set to: 0
  7100  00299A  51BD               	movf	_vfpfcnvrt$2534& (0+255),w,b
  7101  00299C  11BE               	iorwf	(_vfpfcnvrt$2534+1)& (0+255),w,b
  7102  00299E  B4D8               	btfsc	status,2,c
  7103  0029A0  EFD4  F014         	goto	u6701
  7104  0029A4  EFD6  F014         	goto	u6700
  7105  0029A8                     u6701:
  7106  0029A8  EFF0  F014         	goto	l5409
  7107  0029AC                     u6700:
  7108  0029AC                     
  7109                           ; BSR set to: 0
  7110                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  7111  0029AC  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7112  0029B0  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7113  0029B4  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7114  0029B8  0E04               	movlw	4
  7115  0029BA  26DE               	addwf	postinc2,f,c
  7116  0029BC  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7117  0029C0  0E00               	movlw	0
  7118  0029C2  22DD               	addwfc	postdec2,f,c
  7119  0029C4  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7120  0029C8  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7121  0029CC  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  7122  0029D0  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  7123  0029D4  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  7124  0029D8  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  7125                           
  7126                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             
      +                          } else {
  7127  0029DC  EF08  F015         	goto	l1369
  7128  0029E0                     l5409:
  7129                           
  7130                           ; BSR set to: 0
  7131                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  7132  0029E0  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7133  0029E4  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7134  0029E8  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7135  0029EC  0E04               	movlw	4
  7136  0029EE  26DE               	addwf	postinc2,f,c
  7137  0029F0  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7138  0029F4  0E00               	movlw	0
  7139  0029F6  22DD               	addwfc	postdec2,f,c
  7140  0029F8  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7141  0029FC  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7142  002A00  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  7143  002A04  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  7144  002A08  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  7145  002A0C  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  7146  002A10                     l1369:
  7147                           
  7148                           ; BSR set to: 0
  7149                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  7150  002A10  0E02               	movlw	2
  7151  002A12  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7152  002A16  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7153  002A1A  26DE               	addwf	postinc2,f,c
  7154  002A1C  0E00               	movlw	0
  7155  002A1E  22DD               	addwfc	postdec2,f,c
  7156  002A20  EF69  F014         	goto	l5395
  7157  002A24                     l5415:
  7158                           
  7159                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  7160  002A24  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7161  002A28  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7162  002A2C  CFDE FFF6          	movff	postinc2,tblptrl
  7163  002A30  CFDD FFF7          	movff	postdec2,tblptrh
  7164  002A34                     	if	0	;tblptru may be non-zero
  7165  002A34                     	endif
  7166  002A34                     	if	0	;tblptru may be non-zero
  7167  002A34                     	endif
  7168  002A34  0008               	tblrd		*
  7169  002A36  50F5               	movf	tablat,w,c
  7170  002A38  0A25               	xorlw	37
  7171  002A3A  A4D8               	btfss	status,2,c
  7172  002A3C  EF22  F015         	goto	u6711
  7173  002A40  EF24  F015         	goto	u6710
  7174  002A44                     u6711:
  7175  002A44  EF3C  F015         	goto	l5425
  7176  002A48                     u6710:
  7177  002A48                     
  7178                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  7179  002A48  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7180  002A4C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7181  002A50  2ADE               	incf	postinc2,f,c
  7182  002A52  0E00               	movlw	0
  7183  002A54  22DD               	addwfc	postdec2,f,c
  7184  002A56                     
  7185                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  7186  002A56  0E00               	movlw	0
  7187  002A58  6E02               	movwf	(fputc@c+1)^0,c
  7188  002A5A  0E25               	movlw	37
  7189  002A5C  6E01               	movwf	fputc@c^0,c
  7190  002A5E  C0A7  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7191  002A62  C0A8  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7192  002A66  EC4F  F027         	call	_fputc	;wreg free
  7193  002A6A                     l5421:
  7194                           
  7195                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  7196  002A6A  0E00               	movlw	0
  7197  002A6C  0100               	movlb	0	; () banked
  7198  002A6E  6FA8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7199  002A70  0E01               	movlw	1
  7200  002A72  6FA7               	movwf	?_vfpfcnvrt& (0+255),b
  7201  002A74  EF65  F015         	goto	l1361
  7202  002A78                     l5425:
  7203                           
  7204                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  7205  002A78  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7206  002A7C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7207  002A80  2ADE               	incf	postinc2,f,c
  7208  002A82  0E00               	movlw	0
  7209  002A84  22DD               	addwfc	postdec2,f,c
  7210  002A86                     
  7211                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  7212  002A86  0E00               	movlw	0
  7213  002A88  0100               	movlb	0	; () banked
  7214  002A8A  6FA8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7215  002A8C  0E00               	movlw	0
  7216  002A8E  6FA7               	movwf	?_vfpfcnvrt& (0+255),b
  7217  002A90  EF65  F015         	goto	l1361
  7218  002A94                     l5431:
  7219                           
  7220                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  7221  002A94  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7222  002A98  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7223  002A9C  CFDE FFF6          	movff	postinc2,tblptrl
  7224  002AA0  CFDD FFF7          	movff	postdec2,tblptrh
  7225  002AA4                     	if	0	;tblptru may be non-zero
  7226  002AA4                     	endif
  7227  002AA4                     	if	0	;tblptru may be non-zero
  7228  002AA4                     	endif
  7229  002AA4  0008               	tblrd		*
  7230  002AA6  50F5               	movf	tablat,w,c
  7231  002AA8  6E01               	movwf	fputc@c^0,c
  7232  002AAA  6A02               	clrf	(fputc@c+1)^0,c
  7233  002AAC  C0A7  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7234  002AB0  C0A8  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7235  002AB4  EC4F  F027         	call	_fputc	;wreg free
  7236  002AB8                     
  7237                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  7238  002AB8  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7239  002ABC  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7240  002AC0  2ADE               	incf	postinc2,f,c
  7241  002AC2  0E00               	movlw	0
  7242  002AC4  22DD               	addwfc	postdec2,f,c
  7243  002AC6  EF35  F015         	goto	l5421
  7244  002ACA                     l1361:
  7245  002ACA  0012               	return		;funcret
  7246  002ACC                     __end_of_vfpfcnvrt:
  7247                           	callstack 0
  7248                           
  7249 ;; *************** function _strncmp *****************
  7250 ;; Defined at:
  7251 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  7252 ;; Parameters:    Size  Location     Type
  7253 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  7254 ;;		 -> vfpfcnvrt@ct(3), 
  7255 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  7256 ;;		 -> STR_27(3), 
  7257 ;;  n               2    4[COMRAM] unsigned int 
  7258 ;; Auto vars:     Size  Location     Type
  7259 ;;  r               2    9[COMRAM] PTR const unsigned char 
  7260 ;;		 -> STR_27(3), 
  7261 ;;  l               2    7[COMRAM] PTR const unsigned char 
  7262 ;;		 -> vfpfcnvrt@ct(3), 
  7263 ;; Return value:  Size  Location     Type
  7264 ;;                  2    0[COMRAM] int 
  7265 ;; Registers used:
  7266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7267 ;; Tracked objects:
  7268 ;;		On entry : 0/0
  7269 ;;		On exit  : 0/0
  7270 ;;		Unchanged: 0/0
  7271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7272 ;;      Params:         6       0       0       0       0       0       0
  7273 ;;      Locals:         4       0       0       0       0       0       0
  7274 ;;      Temps:          1       0       0       0       0       0       0
  7275 ;;      Totals:        11       0       0       0       0       0       0
  7276 ;;Total ram usage:       11 bytes
  7277 ;; Hardware stack levels used:    1
  7278 ;; Hardware stack levels required when called:    1
  7279 ;; This function calls:
  7280 ;;		Nothing
  7281 ;; This function is called by:
  7282 ;;		_vfpfcnvrt
  7283 ;; This function uses a non-reentrant model
  7284 ;;
  7285                           
  7286                           	psect	text22
  7287  004DC8                     __ptext22:
  7288                           	callstack 0
  7289  004DC8                     _strncmp:
  7290                           	callstack 24
  7291  004DC8  C001  F008         	movff	strncmp@_l,strncmp@l
  7292  004DCC  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  7293  004DD0  C003  F00A         	movff	strncmp@_r,strncmp@r
  7294  004DD4  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  7295  004DD8  0605               	decf	strncmp@n^0,f,c
  7296  004DDA  A0D8               	btfss	status,0,c
  7297  004DDC  0606               	decf	(strncmp@n+1)^0,f,c
  7298  004DDE  2805               	incf	strncmp@n^0,w,c
  7299  004DE0  E106               	bnz	u6261
  7300  004DE2  2806               	incf	(strncmp@n+1)^0,w,c
  7301  004DE4  A4D8               	btfss	status,2,c
  7302  004DE6  EFF7  F026         	goto	u6261
  7303  004DEA  EFF9  F026         	goto	u6260
  7304  004DEE                     u6261:
  7305  004DEE  EF06  F027         	goto	l5193
  7306  004DF2                     u6260:
  7307  004DF2  0E00               	movlw	0
  7308  004DF4  6E02               	movwf	(?_strncmp+1)^0,c
  7309  004DF6  0E00               	movlw	0
  7310  004DF8  6E01               	movwf	?_strncmp^0,c
  7311  004DFA  EF4E  F027         	goto	l1497
  7312  004DFE                     l5191:
  7313  004DFE  4A08               	infsnz	strncmp@l^0,f,c
  7314  004E00  2A09               	incf	(strncmp@l+1)^0,f,c
  7315  004E02  4A0A               	infsnz	strncmp@r^0,f,c
  7316  004E04  2A0B               	incf	(strncmp@r+1)^0,f,c
  7317  004E06  0605               	decf	strncmp@n^0,f,c
  7318  004E08  A0D8               	btfss	status,0,c
  7319  004E0A  0606               	decf	(strncmp@n+1)^0,f,c
  7320  004E0C                     l5193:
  7321  004E0C  C008  FFD9         	movff	strncmp@l,fsr2l
  7322  004E10  C009  FFDA         	movff	strncmp@l+1,fsr2h
  7323  004E14  50DF               	movf	indf2,w,c
  7324  004E16  B4D8               	btfsc	status,2,c
  7325  004E18  EF10  F027         	goto	u6271
  7326  004E1C  EF12  F027         	goto	u6270
  7327  004E20                     u6271:
  7328  004E20  EF3D  F027         	goto	l5201
  7329  004E24                     u6270:
  7330  004E24  C00A  FFF6         	movff	strncmp@r,tblptrl
  7331  004E28  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7332  004E2C                     	if	0	;tblptru may be non-zero
  7333  004E2C                     	endif
  7334  004E2C                     	if	0	;tblptru may be non-zero
  7335  004E2C                     	endif
  7336  004E2C  0008               	tblrd		*
  7337  004E2E  50F5               	movf	tablat,w,c
  7338  004E30  0900               	iorlw	0
  7339  004E32  B4D8               	btfsc	status,2,c
  7340  004E34  EF1E  F027         	goto	u6281
  7341  004E38  EF20  F027         	goto	u6280
  7342  004E3C                     u6281:
  7343  004E3C  EF3D  F027         	goto	l5201
  7344  004E40                     u6280:
  7345  004E40  5005               	movf	strncmp@n^0,w,c
  7346  004E42  1006               	iorwf	(strncmp@n+1)^0,w,c
  7347  004E44  B4D8               	btfsc	status,2,c
  7348  004E46  EF27  F027         	goto	u6291
  7349  004E4A  EF29  F027         	goto	u6290
  7350  004E4E                     u6291:
  7351  004E4E  EF3D  F027         	goto	l5201
  7352  004E52                     u6290:
  7353  004E52  C008  FFD9         	movff	strncmp@l,fsr2l
  7354  004E56  C009  FFDA         	movff	strncmp@l+1,fsr2h
  7355  004E5A  50DF               	movf	indf2,w,c
  7356  004E5C  6E07               	movwf	??_strncmp^0,c
  7357  004E5E  C00A  FFF6         	movff	strncmp@r,tblptrl
  7358  004E62  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7359  004E66                     	if	0	;tblptru may be non-zero
  7360  004E66                     	endif
  7361  004E66                     	if	0	;tblptru may be non-zero
  7362  004E66                     	endif
  7363  004E66  0008               	tblrd		*
  7364  004E68  50F5               	movf	tablat,w,c
  7365  004E6A  1807               	xorwf	??_strncmp^0,w,c
  7366  004E6C  B4D8               	btfsc	status,2,c
  7367  004E6E  EF3B  F027         	goto	u6301
  7368  004E72  EF3D  F027         	goto	u6300
  7369  004E76                     u6301:
  7370  004E76  EFFF  F026         	goto	l5191
  7371  004E7A                     u6300:
  7372  004E7A                     l5201:
  7373  004E7A  C008  FFD9         	movff	strncmp@l,fsr2l
  7374  004E7E  C009  FFDA         	movff	strncmp@l+1,fsr2h
  7375  004E82  50DF               	movf	indf2,w,c
  7376  004E84  6E07               	movwf	??_strncmp^0,c
  7377  004E86  C00A  FFF6         	movff	strncmp@r,tblptrl
  7378  004E8A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7379  004E8E                     	if	0	;tblptru may be non-zero
  7380  004E8E                     	endif
  7381  004E8E                     	if	0	;tblptru may be non-zero
  7382  004E8E                     	endif
  7383  004E8E  0008               	tblrd		*
  7384  004E90  50F5               	movf	tablat,w,c
  7385  004E92  5C07               	subwf	??_strncmp^0,w,c
  7386  004E94  6E01               	movwf	?_strncmp^0,c
  7387  004E96  6A02               	clrf	(?_strncmp+1)^0,c
  7388  004E98  A0D8               	btfss	status,0,c
  7389  004E9A  0602               	decf	(?_strncmp+1)^0,f,c
  7390  004E9C                     l1497:
  7391  004E9C  0012               	return		;funcret
  7392  004E9E                     __end_of_strncmp:
  7393                           	callstack 0
  7394                           
  7395 ;; *************** function _efgtoa *****************
  7396 ;; Defined at:
  7397 ;;		line 319 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7398 ;; Parameters:    Size  Location     Type
  7399 ;;  fp              2   87[COMRAM] PTR struct _IO_FILE
  7400 ;;		 -> sprintf@f(6), 
  7401 ;;  f               4   89[COMRAM] PTR struct _IO_FILE
  7402 ;;  c               1   93[COMRAM] unsigned char 
  7403 ;; Auto vars:     Size  Location     Type
  7404 ;;  u               4   67[BANK0 ] unsigned char 
  7405 ;;  g               4   59[BANK0 ] unsigned char 
  7406 ;;  l               4   53[BANK0 ] unsigned char 
  7407 ;;  h               4   49[BANK0 ] unsigned char 
  7408 ;;  ou              4   15[BANK0 ] unsigned char 
  7409 ;;  n               2   65[BANK0 ] int 
  7410 ;;  e               2   63[BANK0 ] int 
  7411 ;;  i               2   57[BANK0 ] int 
  7412 ;;  w               2   46[BANK0 ] int 
  7413 ;;  p               2   43[BANK0 ] int 
  7414 ;;  sign            2   41[BANK0 ] int 
  7415 ;;  d               2   39[BANK0 ] int 
  7416 ;;  ne              2   37[BANK0 ] int 
  7417 ;;  m               2   35[BANK0 ] int 
  7418 ;;  pp              2   33[BANK0 ] int 
  7419 ;;  t               2   31[BANK0 ] int 
  7420 ;;  mode            1   48[BANK0 ] unsigned char 
  7421 ;;  nmode           1   45[BANK0 ] unsigned char 
  7422 ;; Return value:  Size  Location     Type
  7423 ;;                  2   87[COMRAM] int 
  7424 ;; Registers used:
  7425 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7426 ;; Tracked objects:
  7427 ;;		On entry : 0/0
  7428 ;;		On exit  : 0/0
  7429 ;;		Unchanged: 0/0
  7430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7431 ;;      Params:         7       0       0       0       0       0       0
  7432 ;;      Locals:         0      56       0       0       0       0       0
  7433 ;;      Temps:          0       5       0       0       0       0       0
  7434 ;;      Totals:         7      61       0       0       0       0       0
  7435 ;;Total ram usage:       68 bytes
  7436 ;; Hardware stack levels used:    1
  7437 ;; Hardware stack levels required when called:    5
  7438 ;; This function calls:
  7439 ;;		___awdiv
  7440 ;;		___awmod
  7441 ;;		___fladd
  7442 ;;		___fldiv
  7443 ;;		___fleq
  7444 ;;		___flge
  7445 ;;		___flmul
  7446 ;;		___flneg
  7447 ;;		___flsub
  7448 ;;		___fltol
  7449 ;;		___fpclassifyf
  7450 ;;		_floorf
  7451 ;;		_isupper
  7452 ;;		_pad
  7453 ;;		_strcpy
  7454 ;;		_tolower
  7455 ;; This function is called by:
  7456 ;;		_vfpfcnvrt
  7457 ;; This function uses a non-reentrant model
  7458 ;;
  7459                           
  7460                           	psect	text23
  7461  0006D8                     __ptext23:
  7462                           	callstack 0
  7463  0006D8                     _efgtoa:
  7464                           	callstack 20
  7465  0006D8                     
  7466                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\
      +                          c99\common\doprnt.c: 320: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\
      +                          doprnt.c: 321:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c9
      +                          9\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;
  7467  0006D8  0E00               	movlw	0
  7468  0006DA  0100               	movlb	0	; () banked
  7469  0006DC  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  7470  0006DE  0E00               	movlw	0
  7471  0006E0  6F89               	movwf	efgtoa@sign& (0+255),b
  7472  0006E2                     
  7473                           ; BSR set to: 0
  7474                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  7475  0006E2  C05A  F09B         	movff	efgtoa@f,efgtoa@g
  7476  0006E6  C05B  F09C         	movff	efgtoa@f+1,efgtoa@g+1
  7477  0006EA  C05C  F09D         	movff	efgtoa@f+2,efgtoa@g+2
  7478  0006EE  C05D  F09E         	movff	efgtoa@f+3,efgtoa@g+3
  7479  0006F2                     
  7480                           ; BSR set to: 0
  7481                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 
      +                          0.0) {
  7482  0006F2  BF9E               	btfsc	(efgtoa@g+3)& (0+255),7,b
  7483  0006F4  EF80  F003         	goto	u5670
  7484  0006F8  EF7E  F003         	goto	u5671
  7485  0006FC                     u5671:
  7486  0006FC  EF96  F003         	goto	l4855
  7487  000700                     u5670:
  7488  000700                     
  7489                           ; BSR set to: 0
  7490                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign
      +                           = 1;
  7491  000700  0E00               	movlw	0
  7492  000702  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  7493  000704  0E01               	movlw	1
  7494  000706  6F89               	movwf	efgtoa@sign& (0+255),b
  7495  000708                     
  7496                           ; BSR set to: 0
  7497                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = 
      +                          -g;
  7498  000708  C09B  F001         	movff	efgtoa@g,___flneg@f1
  7499  00070C  C09C  F002         	movff	efgtoa@g+1,___flneg@f1+1
  7500  000710  C09D  F003         	movff	efgtoa@g+2,___flneg@f1+2
  7501  000714  C09E  F004         	movff	efgtoa@g+3,___flneg@f1+3
  7502  000718  EC36  F02D         	call	___flneg	;wreg free
  7503  00071C  C001  F09B         	movff	?___flneg,efgtoa@g
  7504  000720  C002  F09C         	movff	?___flneg+1,efgtoa@g+1
  7505  000724  C003  F09D         	movff	?___flneg+2,efgtoa@g+2
  7506  000728  C004  F09E         	movff	?___flneg+3,efgtoa@g+3
  7507  00072C                     l4855:
  7508                           
  7509                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  7510  00072C  0E00               	movlw	0
  7511  00072E  0100               	movlb	0	; () banked
  7512  000730  6FA2               	movwf	(efgtoa@n+1)& (0+255),b
  7513  000732  0E00               	movlw	0
  7514  000734  6FA1               	movwf	efgtoa@n& (0+255),b
  7515  000736                     
  7516                           ; BSR set to: 0
  7517                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = widt
      +                          h;
  7518  000736  C1A0  F08E         	movff	_width,efgtoa@w
  7519  00073A  C1A1  F08F         	movff	_width+1,efgtoa@w+1
  7520  00073E                     
  7521                           ; BSR set to: 0
  7522                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign
      +                           || (flags & (1 << 2))) {
  7523  00073E  5189               	movf	efgtoa@sign& (0+255),w,b
  7524  000740  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7525  000742  A4D8               	btfss	status,2,c
  7526  000744  EFA6  F003         	goto	u5681
  7527  000748  EFA8  F003         	goto	u5680
  7528  00074C                     u5681:
  7529  00074C  EFB0  F003         	goto	l4863
  7530  000750                     u5680:
  7531  000750                     
  7532                           ; BSR set to: 0
  7533  000750  0101               	movlb	1	; () banked
  7534  000752  A5A4               	btfss	_flags& (0+255),2,b
  7535  000754  EFAE  F003         	goto	u5691
  7536  000758  EFB0  F003         	goto	u5690
  7537  00075C                     u5691:
  7538  00075C  EFCB  F003         	goto	l4875
  7539  000760                     u5690:
  7540  000760                     l4863:
  7541                           
  7542                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf
      +                          [n] = sign ? '-' : '+';
  7543  000760  0100               	movlb	0	; () banked
  7544  000762  5189               	movf	efgtoa@sign& (0+255),w,b
  7545  000764  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7546  000766  A4D8               	btfss	status,2,c
  7547  000768  EFB8  F003         	goto	u5701
  7548  00076C  EFBA  F003         	goto	u5700
  7549  000770                     u5701:
  7550  000770  EFC0  F003         	goto	l4867
  7551  000774                     u5700:
  7552  000774                     
  7553                           ; BSR set to: 0
  7554  000774  0E00               	movlw	0
  7555  000776  6F74               	movwf	(_efgtoa$2503+1)& (0+255),b
  7556  000778  0E2B               	movlw	43
  7557  00077A  6F73               	movwf	_efgtoa$2503& (0+255),b
  7558  00077C  EFC4  F003         	goto	l4869
  7559  000780                     l4867:
  7560                           
  7561                           ; BSR set to: 0
  7562  000780  0E00               	movlw	0
  7563  000782  6F74               	movwf	(_efgtoa$2503+1)& (0+255),b
  7564  000784  0E2D               	movlw	45
  7565  000786  6F73               	movwf	_efgtoa$2503& (0+255),b
  7566  000788                     l4869:
  7567                           
  7568                           ; BSR set to: 0
  7569  000788  C073  F200         	movff	_efgtoa$2503,_dbuf
  7570  00078C                     
  7571                           ; BSR set to: 0
  7572                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  7573  00078C  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  7574  00078E  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  7575  000790                     
  7576                           ; BSR set to: 0
  7577                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  7578  000790  078E               	decf	efgtoa@w& (0+255),f,b
  7579  000792  A0D8               	btfss	status,0,c
  7580  000794  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  7581  000796                     l4875:
  7582                           
  7583                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  7584  000796  C09B  F001         	movff	efgtoa@g,___fpclassifyf@x
  7585  00079A  C09C  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7586  00079E  C09D  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7587  0007A2  C09E  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7588  0007A6  ECE8  F025         	call	___fpclassifyf	;wreg free
  7589  0007AA  0401               	decf	?___fpclassifyf^0,w,c
  7590  0007AC  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  7591  0007AE  A4D8               	btfss	status,2,c
  7592  0007B0  EFDC  F003         	goto	u5711
  7593  0007B4  EFDE  F003         	goto	u5710
  7594  0007B8                     u5711:
  7595  0007B8  EF35  F004         	goto	l4893
  7596  0007BC                     u5710:
  7597  0007BC  0EBF               	movlw	191
  7598  0007BE  0100               	movlb	0	; () banked
  7599  0007C0  6F6A               	movwf	??_efgtoa& (0+255),b
  7600  0007C2  0EFF               	movlw	255
  7601  0007C4  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  7602  0007C6  505E               	movf	efgtoa@c^0,w,c
  7603  0007C8  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  7604  0007CA  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  7605  0007CC  516A               	movf	??_efgtoa& (0+255),w,b
  7606  0007CE  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  7607  0007D0  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  7608  0007D2  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7609  0007D4  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  7610  0007D6  E10A               	bnz	u5720
  7611  0007D8  0E1A               	movlw	26
  7612  0007DA  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  7613  0007DC  A0D8               	btfss	status,0,c
  7614  0007DE  EFF3  F003         	goto	u5721
  7615  0007E2  EFF6  F003         	goto	u5720
  7616  0007E6                     u5721:
  7617  0007E6  0E01               	movlw	1
  7618  0007E8  EFF7  F003         	goto	u5730
  7619  0007EC                     u5720:
  7620  0007EC  0E00               	movlw	0
  7621  0007EE                     u5730:
  7622  0007EE  6F75               	movwf	_efgtoa$2504& (0+255),b
  7623  0007F0  6B76               	clrf	(_efgtoa$2504+1)& (0+255),b
  7624  0007F2                     
  7625                           ; BSR set to: 0
  7626  0007F2  5175               	movf	_efgtoa$2504& (0+255),w,b
  7627  0007F4  1176               	iorwf	(_efgtoa$2504+1)& (0+255),w,b
  7628  0007F6  B4D8               	btfsc	status,2,c
  7629  0007F8  EF00  F004         	goto	u5741
  7630  0007FC  EF02  F004         	goto	u5740
  7631  000800                     u5741:
  7632  000800  EF10  F004         	goto	l4885
  7633  000804                     u5740:
  7634  000804                     
  7635                           ; BSR set to: 0
  7636                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             
      +                          strcpy(&dbuf[n], "INF");
  7637  000804  0E00               	movlw	low _dbuf
  7638  000806  25A1               	addwf	efgtoa@n& (0+255),w,b
  7639  000808  6E01               	movwf	strcpy@dest^0,c
  7640  00080A  0E02               	movlw	high _dbuf
  7641  00080C  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7642  00080E  6E02               	movwf	(strcpy@dest+1)^0,c
  7643  000810  0EC4               	movlw	low STR_17
  7644  000812  6E03               	movwf	strcpy@src^0,c
  7645  000814  0E06               	movlw	high STR_17
  7646  000816  6E04               	movwf	(strcpy@src+1)^0,c
  7647  000818  EC80  F02B         	call	_strcpy	;wreg free
  7648                           
  7649                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } el
      +                          se {
  7650  00081C  EF1C  F004         	goto	l4887
  7651  000820                     l4885:
  7652                           
  7653                           ; BSR set to: 0
  7654                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             
      +                          strcpy(&dbuf[n], "inf");
  7655  000820  0E00               	movlw	low _dbuf
  7656  000822  25A1               	addwf	efgtoa@n& (0+255),w,b
  7657  000824  6E01               	movwf	strcpy@dest^0,c
  7658  000826  0E02               	movlw	high _dbuf
  7659  000828  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7660  00082A  6E02               	movwf	(strcpy@dest+1)^0,c
  7661  00082C  0ECC               	movlw	low STR_18
  7662  00082E  6E03               	movwf	strcpy@src^0,c
  7663  000830  0E06               	movlw	high STR_18
  7664  000832  6E04               	movwf	(strcpy@src+1)^0,c
  7665  000834  EC80  F02B         	call	_strcpy	;wreg free
  7666  000838                     l4887:
  7667                           
  7668                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  7669  000838  0100               	movlb	0	; () banked
  7670  00083A  0EFD               	movlw	253
  7671  00083C  278E               	addwf	efgtoa@w& (0+255),f,b
  7672  00083E  0EFF               	movlw	255
  7673  000840  238F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  7674  000842                     l4889:
  7675                           
  7676                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         retu
      +                          rn pad(fp, &dbuf[0], w);
  7677  000842  C058  F011         	movff	efgtoa@fp,pad@fp
  7678  000846  C059  F012         	movff	efgtoa@fp+1,pad@fp+1
  7679  00084A  0E00               	movlw	low _dbuf
  7680  00084C  6E13               	movwf	pad@buf^0,c
  7681  00084E  0E02               	movlw	high _dbuf
  7682  000850  6E14               	movwf	(pad@buf+1)^0,c
  7683  000852  C08E  F015         	movff	efgtoa@w,pad@p
  7684  000856  C08F  F016         	movff	efgtoa@w+1,pad@p+1
  7685  00085A  ECB4  F027         	call	_pad	;wreg free
  7686  00085E  C011  F058         	movff	?_pad,?_efgtoa
  7687  000862  C012  F059         	movff	?_pad+1,?_efgtoa+1
  7688  000866  EF4E  F009         	goto	l1259
  7689  00086A                     l4893:
  7690                           
  7691                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  7692  00086A  C09B  F001         	movff	efgtoa@g,___fpclassifyf@x
  7693  00086E  C09C  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7694  000872  C09D  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7695  000876  C09E  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7696  00087A  ECE8  F025         	call	___fpclassifyf	;wreg free
  7697  00087E  5001               	movf	?___fpclassifyf^0,w,c
  7698  000880  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  7699  000882  A4D8               	btfss	status,2,c
  7700  000884  EF46  F004         	goto	u5751
  7701  000888  EF48  F004         	goto	u5750
  7702  00088C                     u5751:
  7703  00088C  EF88  F004         	goto	l4911
  7704  000890                     u5750:
  7705  000890  0EBF               	movlw	191
  7706  000892  0100               	movlb	0	; () banked
  7707  000894  6F6A               	movwf	??_efgtoa& (0+255),b
  7708  000896  0EFF               	movlw	255
  7709  000898  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  7710  00089A  505E               	movf	efgtoa@c^0,w,c
  7711  00089C  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  7712  00089E  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  7713  0008A0  516A               	movf	??_efgtoa& (0+255),w,b
  7714  0008A2  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  7715  0008A4  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  7716  0008A6  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7717  0008A8  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  7718  0008AA  E10A               	bnz	u5760
  7719  0008AC  0E1A               	movlw	26
  7720  0008AE  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  7721  0008B0  A0D8               	btfss	status,0,c
  7722  0008B2  EF5D  F004         	goto	u5761
  7723  0008B6  EF60  F004         	goto	u5760
  7724  0008BA                     u5761:
  7725  0008BA  0E01               	movlw	1
  7726  0008BC  EF61  F004         	goto	u5770
  7727  0008C0                     u5760:
  7728  0008C0  0E00               	movlw	0
  7729  0008C2                     u5770:
  7730  0008C2  6F77               	movwf	_efgtoa$2508& (0+255),b
  7731  0008C4  6B78               	clrf	(_efgtoa$2508+1)& (0+255),b
  7732  0008C6                     
  7733                           ; BSR set to: 0
  7734  0008C6  5177               	movf	_efgtoa$2508& (0+255),w,b
  7735  0008C8  1178               	iorwf	(_efgtoa$2508+1)& (0+255),w,b
  7736  0008CA  B4D8               	btfsc	status,2,c
  7737  0008CC  EF6A  F004         	goto	u5781
  7738  0008D0  EF6C  F004         	goto	u5780
  7739  0008D4                     u5781:
  7740  0008D4  EF7A  F004         	goto	l4903
  7741  0008D8                     u5780:
  7742  0008D8                     
  7743                           ; BSR set to: 0
  7744                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             
      +                          strcpy(&dbuf[n], "NAN");
  7745  0008D8  0E00               	movlw	low _dbuf
  7746  0008DA  25A1               	addwf	efgtoa@n& (0+255),w,b
  7747  0008DC  6E01               	movwf	strcpy@dest^0,c
  7748  0008DE  0E02               	movlw	high _dbuf
  7749  0008E0  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7750  0008E2  6E02               	movwf	(strcpy@dest+1)^0,c
  7751  0008E4  0EC8               	movlw	low STR_21
  7752  0008E6  6E03               	movwf	strcpy@src^0,c
  7753  0008E8  0E06               	movlw	high STR_21
  7754  0008EA  6E04               	movwf	(strcpy@src+1)^0,c
  7755  0008EC  EC80  F02B         	call	_strcpy	;wreg free
  7756                           
  7757                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } el
      +                          se {
  7758  0008F0  EF1C  F004         	goto	l4887
  7759  0008F4                     l4903:
  7760                           
  7761                           ; BSR set to: 0
  7762                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             
      +                          strcpy(&dbuf[n], "nan");
  7763  0008F4  0E00               	movlw	low _dbuf
  7764  0008F6  25A1               	addwf	efgtoa@n& (0+255),w,b
  7765  0008F8  6E01               	movwf	strcpy@dest^0,c
  7766  0008FA  0E02               	movlw	high _dbuf
  7767  0008FC  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7768  0008FE  6E02               	movwf	(strcpy@dest+1)^0,c
  7769  000900  0ED0               	movlw	low STR_22
  7770  000902  6E03               	movwf	strcpy@src^0,c
  7771  000904  0E06               	movlw	high STR_22
  7772  000906  6E04               	movwf	(strcpy@src+1)^0,c
  7773  000908  EC80  F02B         	call	_strcpy	;wreg free
  7774  00090C  EF1C  F004         	goto	l4887
  7775  000910                     l4911:
  7776                           
  7777                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  7778  000910  0E00               	movlw	0
  7779  000912  0100               	movlb	0	; () banked
  7780  000914  6FA3               	movwf	efgtoa@u& (0+255),b
  7781  000916  0E00               	movlw	0
  7782  000918  6FA4               	movwf	(efgtoa@u+1)& (0+255),b
  7783  00091A  0E80               	movlw	128
  7784  00091C  6FA5               	movwf	(efgtoa@u+2)& (0+255),b
  7785  00091E  0E3F               	movlw	63
  7786  000920  6FA6               	movwf	(efgtoa@u+3)& (0+255),b
  7787                           
  7788                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  7789  000922  0E00               	movlw	0
  7790  000924  6FA0               	movwf	(efgtoa@e+1)& (0+255),b
  7791  000926  0E00               	movlw	0
  7792  000928  6F9F               	movwf	efgtoa@e& (0+255),b
  7793  00092A                     
  7794                           ; BSR set to: 0
  7795                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g 
      +                          == 0.0)) {
  7796  00092A  C09B  F001         	movff	efgtoa@g,___fleq@ff1
  7797  00092E  C09C  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  7798  000932  C09D  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  7799  000936  C09E  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  7800  00093A  0E00               	movlw	0
  7801  00093C  6E05               	movwf	___fleq@ff2^0,c
  7802  00093E  0E00               	movlw	0
  7803  000940  6E06               	movwf	(___fleq@ff2+1)^0,c
  7804  000942  0E00               	movlw	0
  7805  000944  6E07               	movwf	(___fleq@ff2+2)^0,c
  7806  000946  0E00               	movlw	0
  7807  000948  6E08               	movwf	(___fleq@ff2+3)^0,c
  7808  00094A  ECD1  F028         	call	___fleq	;wreg free
  7809  00094E  B0D8               	btfsc	status,0,c
  7810  000950  EFAC  F004         	goto	u5791
  7811  000954  EFAE  F004         	goto	u5790
  7812  000958                     u5791:
  7813  000958  EF31  F005         	goto	l4929
  7814  00095C                     u5790:
  7815  00095C  EFCD  F004         	goto	l4921
  7816  000960                     l4917:
  7817                           
  7818                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             
      +                          u = u*10.0;
  7819  000960  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  7820  000964  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  7821  000968  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  7822  00096C  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  7823  000970  0E00               	movlw	0
  7824  000972  6E20               	movwf	___flmul@a^0,c
  7825  000974  0E00               	movlw	0
  7826  000976  6E21               	movwf	(___flmul@a+1)^0,c
  7827  000978  0E20               	movlw	32
  7828  00097A  6E22               	movwf	(___flmul@a+2)^0,c
  7829  00097C  0E41               	movlw	65
  7830  00097E  6E23               	movwf	(___flmul@a+3)^0,c
  7831  000980  ECC6  F017         	call	___flmul	;wreg free
  7832  000984  C01C  F0A3         	movff	?___flmul,efgtoa@u
  7833  000988  C01D  F0A4         	movff	?___flmul+1,efgtoa@u+1
  7834  00098C  C01E  F0A5         	movff	?___flmul+2,efgtoa@u+2
  7835  000990  C01F  F0A6         	movff	?___flmul+3,efgtoa@u+3
  7836  000994                     
  7837                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             
      +                          ++e;
  7838  000994  0100               	movlb	0	; () banked
  7839  000996  4B9F               	infsnz	efgtoa@e& (0+255),f,b
  7840  000998  2BA0               	incf	(efgtoa@e+1)& (0+255),f,b
  7841  00099A                     l4921:
  7842                           
  7843                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         whil
      +                          e (!(g < (u*10.0))) {
  7844  00099A  C09B  F035         	movff	efgtoa@g,___flge@ff1
  7845  00099E  C09C  F036         	movff	efgtoa@g+1,___flge@ff1+1
  7846  0009A2  C09D  F037         	movff	efgtoa@g+2,___flge@ff1+2
  7847  0009A6  C09E  F038         	movff	efgtoa@g+3,___flge@ff1+3
  7848  0009AA  0E00               	movlw	0
  7849  0009AC  6E20               	movwf	___flmul@a^0,c
  7850  0009AE  0E00               	movlw	0
  7851  0009B0  6E21               	movwf	(___flmul@a+1)^0,c
  7852  0009B2  0E20               	movlw	32
  7853  0009B4  6E22               	movwf	(___flmul@a+2)^0,c
  7854  0009B6  0E41               	movlw	65
  7855  0009B8  6E23               	movwf	(___flmul@a+3)^0,c
  7856  0009BA  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  7857  0009BE  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  7858  0009C2  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  7859  0009C6  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  7860  0009CA  ECC6  F017         	call	___flmul	;wreg free
  7861  0009CE  C01C  F039         	movff	?___flmul,___flge@ff2
  7862  0009D2  C01D  F03A         	movff	?___flmul+1,___flge@ff2+1
  7863  0009D6  C01E  F03B         	movff	?___flmul+2,___flge@ff2+2
  7864  0009DA  C01F  F03C         	movff	?___flmul+3,___flge@ff2+3
  7865  0009DE  EC66  F025         	call	___flge	;wreg free
  7866  0009E2  B0D8               	btfsc	status,0,c
  7867  0009E4  EFF6  F004         	goto	u5801
  7868  0009E8  EFF8  F004         	goto	u5800
  7869  0009EC                     u5801:
  7870  0009EC  EFB0  F004         	goto	l4917
  7871  0009F0                     u5800:
  7872  0009F0  EF18  F005         	goto	l4927
  7873  0009F4                     l4923:
  7874                           
  7875                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             
      +                          u = u/10.0;
  7876  0009F4  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  7877  0009F8  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  7878  0009FC  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  7879  000A00  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  7880  000A04  0E00               	movlw	0
  7881  000A06  6E39               	movwf	___fldiv@a^0,c
  7882  000A08  0E00               	movlw	0
  7883  000A0A  6E3A               	movwf	(___fldiv@a+1)^0,c
  7884  000A0C  0E20               	movlw	32
  7885  000A0E  6E3B               	movwf	(___fldiv@a+2)^0,c
  7886  000A10  0E41               	movlw	65
  7887  000A12  6E3C               	movwf	(___fldiv@a+3)^0,c
  7888  000A14  ECDB  F019         	call	___fldiv	;wreg free
  7889  000A18  C035  F0A3         	movff	?___fldiv,efgtoa@u
  7890  000A1C  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  7891  000A20  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  7892  000A24  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  7893  000A28                     
  7894                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             
      +                          --e;
  7895  000A28  0100               	movlb	0	; () banked
  7896  000A2A  079F               	decf	efgtoa@e& (0+255),f,b
  7897  000A2C  A0D8               	btfss	status,0,c
  7898  000A2E  07A0               	decf	(efgtoa@e+1)& (0+255),f,b
  7899  000A30                     l4927:
  7900                           
  7901                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         whil
      +                          e (g < u) {
  7902  000A30  C09B  F035         	movff	efgtoa@g,___flge@ff1
  7903  000A34  C09C  F036         	movff	efgtoa@g+1,___flge@ff1+1
  7904  000A38  C09D  F037         	movff	efgtoa@g+2,___flge@ff1+2
  7905  000A3C  C09E  F038         	movff	efgtoa@g+3,___flge@ff1+3
  7906  000A40  C0A3  F039         	movff	efgtoa@u,___flge@ff2
  7907  000A44  C0A4  F03A         	movff	efgtoa@u+1,___flge@ff2+1
  7908  000A48  C0A5  F03B         	movff	efgtoa@u+2,___flge@ff2+2
  7909  000A4C  C0A6  F03C         	movff	efgtoa@u+3,___flge@ff2+3
  7910  000A50  EC66  F025         	call	___flge	;wreg free
  7911  000A54  A0D8               	btfss	status,0,c
  7912  000A56  EF2F  F005         	goto	u5811
  7913  000A5A  EF31  F005         	goto	u5810
  7914  000A5E                     u5811:
  7915  000A5E  EFFA  F004         	goto	l4923
  7916  000A62                     u5810:
  7917  000A62                     l4929:
  7918                           
  7919                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = t
      +                          olower((int)c);
  7920  000A62  C05E  F007         	movff	efgtoa@c,tolower@c
  7921  000A66  6A08               	clrf	(tolower@c+1)^0,c
  7922  000A68  EC50  F02B         	call	_tolower	;wreg free
  7923  000A6C  5007               	movf	?_tolower^0,w,c
  7924  000A6E  0100               	movlb	0	; () banked
  7925  000A70  6F90               	movwf	efgtoa@mode& (0+255),b
  7926  000A72                     
  7927                           ; BSR set to: 0
  7928                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = 
      +                          mode;
  7929  000A72  C090  F08D         	movff	efgtoa@mode,efgtoa@nmode
  7930  000A76                     
  7931                           ; BSR set to: 0
  7932                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode
      +                           == 'g') {
  7933  000A76  0E67               	movlw	103
  7934  000A78  1990               	xorwf	efgtoa@mode& (0+255),w,b
  7935  000A7A  A4D8               	btfss	status,2,c
  7936  000A7C  EF42  F005         	goto	u5821
  7937  000A80  EF44  F005         	goto	u5820
  7938  000A84                     u5821:
  7939  000A84  EF6C  F005         	goto	l4943
  7940  000A88                     u5820:
  7941  000A88                     
  7942                           ; BSR set to: 0
  7943                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec =
      +                          = 0) {
  7944  000A88  0101               	movlb	1	; () banked
  7945  000A8A  51A2               	movf	_prec& (0+255),w,b
  7946  000A8C  11A3               	iorwf	(_prec+1)& (0+255),w,b
  7947  000A8E  A4D8               	btfss	status,2,c
  7948  000A90  EF4C  F005         	goto	u5831
  7949  000A94  EF4E  F005         	goto	u5830
  7950  000A98                     u5831:
  7951  000A98  EF52  F005         	goto	l4939
  7952  000A9C                     u5830:
  7953  000A9C                     
  7954                           ; BSR set to: 1
  7955                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  7956  000A9C  0E00               	movlw	0
  7957  000A9E  6FA3               	movwf	(_prec+1)& (0+255),b
  7958  000AA0  0E01               	movlw	1
  7959  000AA2  6FA2               	movwf	_prec& (0+255),b
  7960  000AA4                     l4939:
  7961                           
  7962                           ; BSR set to: 1
  7963                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = 
      +                          (0 < prec) ? prec : 6;
  7964  000AA4  BFA3               	btfsc	(_prec+1)& (0+255),7,b
  7965  000AA6  EF5F  F005         	goto	u5840
  7966  000AAA  51A3               	movf	(_prec+1)& (0+255),w,b
  7967  000AAC  E106               	bnz	u5841
  7968  000AAE  05A2               	decf	_prec& (0+255),w,b
  7969  000AB0  B0D8               	btfsc	status,0,c
  7970  000AB2  EF5D  F005         	goto	u5841
  7971  000AB6  EF5F  F005         	goto	u5840
  7972  000ABA                     u5841:
  7973  000ABA  EF66  F005         	goto	l1277
  7974  000ABE                     u5840:
  7975  000ABE                     l4941:
  7976                           
  7977                           ; BSR set to: 1
  7978  000ABE  0E00               	movlw	0
  7979  000AC0  0100               	movlb	0	; () banked
  7980  000AC2  6F8C               	movwf	(efgtoa@p+1)& (0+255),b
  7981  000AC4  0E06               	movlw	6
  7982  000AC6  6F8B               	movwf	efgtoa@p& (0+255),b
  7983  000AC8  EF76  F005         	goto	l4949
  7984  000ACC                     l1277:
  7985                           
  7986                           ; BSR set to: 1
  7987  000ACC  C1A2  F08B         	movff	_prec,efgtoa@p
  7988  000AD0  C1A3  F08C         	movff	_prec+1,efgtoa@p+1
  7989  000AD4  EF76  F005         	goto	l4949
  7990  000AD8                     l4943:
  7991                           
  7992                           ; BSR set to: 0
  7993                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = 
      +                          (prec < 0) ? 6 : prec;
  7994  000AD8  0101               	movlb	1	; () banked
  7995  000ADA  BFA3               	btfsc	(_prec+1)& (0+255),7,b
  7996  000ADC  EF72  F005         	goto	u5851
  7997  000AE0  EF74  F005         	goto	u5850
  7998  000AE4                     u5851:
  7999  000AE4  EF5F  F005         	goto	l4941
  8000  000AE8                     u5850:
  8001  000AE8  EF66  F005         	goto	l1277
  8002  000AEC                     l4949:
  8003                           
  8004                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode
      +                           == 'g') {
  8005  000AEC  0E67               	movlw	103
  8006  000AEE  0100               	movlb	0	; () banked
  8007  000AF0  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8008  000AF2  A4D8               	btfss	status,2,c
  8009  000AF4  EF7E  F005         	goto	u5861
  8010  000AF8  EF80  F005         	goto	u5860
  8011  000AFC                     u5861:
  8012  000AFC  EFAF  F005         	goto	l4959
  8013  000B00                     u5860:
  8014  000B00                     
  8015                           ; BSR set to: 0
  8016                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  8017  000B00  AFA0               	btfss	(efgtoa@e+1)& (0+255),7,b
  8018  000B02  EF8E  F005         	goto	u5870
  8019  000B06  0EFC               	movlw	252
  8020  000B08  5D9F               	subwf	efgtoa@e& (0+255),w,b
  8021  000B0A  0EFF               	movlw	255
  8022  000B0C  59A0               	subwfb	(efgtoa@e+1)& (0+255),w,b
  8023  000B0E  A0D8               	btfss	status,0,c
  8024  000B10  EF8C  F005         	goto	u5871
  8025  000B14  EF8E  F005         	goto	u5870
  8026  000B18                     u5871:
  8027  000B18  EFAD  F005         	goto	l4957
  8028  000B1C                     u5870:
  8029  000B1C                     
  8030                           ; BSR set to: 0
  8031  000B1C  0EFF               	movlw	255
  8032  000B1E  6F6A               	movwf	??_efgtoa& (0+255),b
  8033  000B20  0EFF               	movlw	255
  8034  000B22  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  8035  000B24  C08B  F06C         	movff	efgtoa@p,??_efgtoa+2
  8036  000B28  C08C  F06D         	movff	efgtoa@p+1,??_efgtoa+3
  8037  000B2C  516A               	movf	??_efgtoa& (0+255),w,b
  8038  000B2E  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  8039  000B30  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  8040  000B32  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8041  000B34  519F               	movf	efgtoa@e& (0+255),w,b
  8042  000B36  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  8043  000B38  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  8044  000B3A  0A80               	xorlw	128
  8045  000B3C  6F6E               	movwf	(??_efgtoa+4)& (0+255),b
  8046  000B3E  51A0               	movf	(efgtoa@e+1)& (0+255),w,b
  8047  000B40  0A80               	xorlw	128
  8048  000B42  596E               	subwfb	(??_efgtoa+4)& (0+255),w,b
  8049  000B44  A0D8               	btfss	status,0,c
  8050  000B46  EFA7  F005         	goto	u5881
  8051  000B4A  EFA9  F005         	goto	u5880
  8052  000B4E                     u5881:
  8053  000B4E  EFAD  F005         	goto	l4957
  8054  000B52                     u5880:
  8055  000B52                     
  8056                           ; BSR set to: 0
  8057                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             
      +                          nmode = 'f';
  8058  000B52  0E66               	movlw	102
  8059  000B54  6F8D               	movwf	efgtoa@nmode& (0+255),b
  8060                           
  8061                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } el
      +                          se {
  8062  000B56  EFAF  F005         	goto	l4959
  8063  000B5A                     l4957:
  8064                           
  8065                           ; BSR set to: 0
  8066                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             
      +                          nmode = 'e';
  8067  000B5A  0E65               	movlw	101
  8068  000B5C  6F8D               	movwf	efgtoa@nmode& (0+255),b
  8069  000B5E                     l4959:
  8070                           
  8071                           ; BSR set to: 0
  8072                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  8073  000B5E  C08B  F083         	movff	efgtoa@p,efgtoa@m
  8074  000B62  C08C  F084         	movff	efgtoa@p+1,efgtoa@m+1
  8075  000B66                     
  8076                           ; BSR set to: 0
  8077                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  8078  000B66  0E67               	movlw	103
  8079  000B68  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8080  000B6A  A4D8               	btfss	status,2,c
  8081  000B6C  EFBA  F005         	goto	u5891
  8082  000B70  EFBC  F005         	goto	u5890
  8083  000B74                     u5891:
  8084  000B74  EFCC  F005         	goto	l4967
  8085  000B78                     u5890:
  8086  000B78                     
  8087                           ; BSR set to: 0
  8088  000B78  0E66               	movlw	102
  8089  000B7A  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8090  000B7C  A4D8               	btfss	status,2,c
  8091  000B7E  EFC3  F005         	goto	u5901
  8092  000B82  EFC5  F005         	goto	u5900
  8093  000B86                     u5901:
  8094  000B86  EFCE  F005         	goto	l4969
  8095  000B8A                     u5900:
  8096  000B8A                     
  8097                           ; BSR set to: 0
  8098  000B8A  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8099  000B8C  EFCC  F005         	goto	u5910
  8100  000B90  EFCA  F005         	goto	u5911
  8101  000B94                     u5911:
  8102  000B94  EFCE  F005         	goto	l4969
  8103  000B98                     u5910:
  8104  000B98                     l4967:
  8105                           
  8106                           ; BSR set to: 0
  8107                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  8108  000B98  4B83               	infsnz	efgtoa@m& (0+255),f,b
  8109  000B9A  2B84               	incf	(efgtoa@m+1)& (0+255),f,b
  8110  000B9C                     l4969:
  8111                           
  8112                           ; BSR set to: 0
  8113                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmod
      +                          e == 'f') {
  8114  000B9C  0E66               	movlw	102
  8115  000B9E  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8116  000BA0  A4D8               	btfss	status,2,c
  8117  000BA2  EFD5  F005         	goto	u5921
  8118  000BA6  EFD7  F005         	goto	u5920
  8119  000BAA                     u5921:
  8120  000BAA  EFF7  F005         	goto	l4979
  8121  000BAE                     u5920:
  8122  000BAE                     
  8123                           ; BSR set to: 0
  8124                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (
      +                          e < 0) {
  8125  000BAE  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8126  000BB0  EFDE  F005         	goto	u5930
  8127  000BB4  EFDC  F005         	goto	u5931
  8128  000BB8                     u5931:
  8129  000BB8  EFEA  F005         	goto	l4975
  8130  000BBC                     u5930:
  8131  000BBC                     
  8132                           ; BSR set to: 0
  8133                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             
      +                          u = 1.0;
  8134  000BBC  0E00               	movlw	0
  8135  000BBE  6FA3               	movwf	efgtoa@u& (0+255),b
  8136  000BC0  0E00               	movlw	0
  8137  000BC2  6FA4               	movwf	(efgtoa@u+1)& (0+255),b
  8138  000BC4  0E80               	movlw	128
  8139  000BC6  6FA5               	movwf	(efgtoa@u+2)& (0+255),b
  8140  000BC8  0E3F               	movlw	63
  8141  000BCA  6FA6               	movwf	(efgtoa@u+3)& (0+255),b
  8142                           
  8143                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             
      +                          e = 0;
  8144  000BCC  0E00               	movlw	0
  8145  000BCE  6FA0               	movwf	(efgtoa@e+1)& (0+255),b
  8146  000BD0  0E00               	movlw	0
  8147  000BD2  6F9F               	movwf	efgtoa@e& (0+255),b
  8148  000BD4                     l4975:
  8149                           
  8150                           ; BSR set to: 0
  8151                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (
      +                          !(mode == 'g')) {
  8152  000BD4  0E67               	movlw	103
  8153  000BD6  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8154  000BD8  B4D8               	btfsc	status,2,c
  8155  000BDA  EFF1  F005         	goto	u5941
  8156  000BDE  EFF3  F005         	goto	u5940
  8157  000BE2                     u5941:
  8158  000BE2  EFF7  F005         	goto	l4979
  8159  000BE6                     u5940:
  8160  000BE6                     
  8161                           ; BSR set to: 0
  8162                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             
      +                          m += e;
  8163  000BE6  519F               	movf	efgtoa@e& (0+255),w,b
  8164  000BE8  2783               	addwf	efgtoa@m& (0+255),f,b
  8165  000BEA  51A0               	movf	(efgtoa@e+1)& (0+255),w,b
  8166  000BEC  2384               	addwfc	(efgtoa@m+1)& (0+255),f,b
  8167  000BEE                     l4979:
  8168                           
  8169                           ; BSR set to: 0
  8170                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  8171  000BEE  0E00               	movlw	0
  8172  000BF0  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  8173  000BF2  0E00               	movlw	0
  8174  000BF4  6F99               	movwf	efgtoa@i& (0+255),b
  8175  000BF6                     
  8176                           ; BSR set to: 0
  8177                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  8178  000BF6  C09B  F091         	movff	efgtoa@g,efgtoa@h
  8179  000BFA  C09C  F092         	movff	efgtoa@g+1,efgtoa@h+1
  8180  000BFE  C09D  F093         	movff	efgtoa@g+2,efgtoa@h+2
  8181  000C02  C09E  F094         	movff	efgtoa@g+3,efgtoa@h+3
  8182  000C06                     
  8183                           ; BSR set to: 0
  8184                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  8185  000C06  C0A3  F06F         	movff	efgtoa@u,efgtoa@ou
  8186  000C0A  C0A4  F070         	movff	efgtoa@u+1,efgtoa@ou+1
  8187  000C0E  C0A5  F071         	movff	efgtoa@u+2,efgtoa@ou+2
  8188  000C12  C0A6  F072         	movff	efgtoa@u+3,efgtoa@ou+3
  8189                           
  8190                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  8191  000C16  EF88  F006         	goto	l4993
  8192  000C1A                     l4985:
  8193                           
  8194                           ; BSR set to: 0
  8195                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = 
      +                          floorf(h/u);
  8196  000C1A  C091  F035         	movff	efgtoa@h,___fldiv@b
  8197  000C1E  C092  F036         	movff	efgtoa@h+1,___fldiv@b+1
  8198  000C22  C093  F037         	movff	efgtoa@h+2,___fldiv@b+2
  8199  000C26  C094  F038         	movff	efgtoa@h+3,___fldiv@b+3
  8200  000C2A  C0A3  F039         	movff	efgtoa@u,___fldiv@a
  8201  000C2E  C0A4  F03A         	movff	efgtoa@u+1,___fldiv@a+1
  8202  000C32  C0A5  F03B         	movff	efgtoa@u+2,___fldiv@a+2
  8203  000C36  C0A6  F03C         	movff	efgtoa@u+3,___fldiv@a+3
  8204  000C3A  ECDB  F019         	call	___fldiv	;wreg free
  8205  000C3E  C035  F04E         	movff	?___fldiv,floorf@x
  8206  000C42  C036  F04F         	movff	?___fldiv+1,floorf@x+1
  8207  000C46  C037  F050         	movff	?___fldiv+2,floorf@x+2
  8208  000C4A  C038  F051         	movff	?___fldiv+3,floorf@x+3
  8209  000C4E  EC8D  F01E         	call	_floorf	;wreg free
  8210  000C52  C04E  F095         	movff	?_floorf,efgtoa@l
  8211  000C56  C04F  F096         	movff	?_floorf+1,efgtoa@l+1
  8212  000C5A  C050  F097         	movff	?_floorf+2,efgtoa@l+2
  8213  000C5E  C051  F098         	movff	?_floorf+3,efgtoa@l+3
  8214                           
  8215                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = 
      +                          (int)l;
  8216  000C62  C095  F04E         	movff	efgtoa@l,___fltol@f1
  8217  000C66  C096  F04F         	movff	efgtoa@l+1,___fltol@f1+1
  8218  000C6A  C097  F050         	movff	efgtoa@l+2,___fltol@f1+2
  8219  000C6E  C098  F051         	movff	efgtoa@l+3,___fltol@f1+3
  8220  000C72  ECE3  F024         	call	___fltol	;wreg free
  8221  000C76  C04E  F087         	movff	?___fltol,efgtoa@d
  8222  000C7A  C04F  F088         	movff	?___fltol+1,efgtoa@d+1
  8223  000C7E                     
  8224                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -=
      +                           l*u;
  8225  000C7E  C091  F045         	movff	efgtoa@h,___flsub@b
  8226  000C82  C092  F046         	movff	efgtoa@h+1,___flsub@b+1
  8227  000C86  C093  F047         	movff	efgtoa@h+2,___flsub@b+2
  8228  000C8A  C094  F048         	movff	efgtoa@h+3,___flsub@b+3
  8229  000C8E  C0A3  F020         	movff	efgtoa@u,___flmul@a
  8230  000C92  C0A4  F021         	movff	efgtoa@u+1,___flmul@a+1
  8231  000C96  C0A5  F022         	movff	efgtoa@u+2,___flmul@a+2
  8232  000C9A  C0A6  F023         	movff	efgtoa@u+3,___flmul@a+3
  8233  000C9E  C095  F01C         	movff	efgtoa@l,___flmul@b
  8234  000CA2  C096  F01D         	movff	efgtoa@l+1,___flmul@b+1
  8235  000CA6  C097  F01E         	movff	efgtoa@l+2,___flmul@b+2
  8236  000CAA  C098  F01F         	movff	efgtoa@l+3,___flmul@b+3
  8237  000CAE  ECC6  F017         	call	___flmul	;wreg free
  8238  000CB2  C01C  F049         	movff	?___flmul,___flsub@a
  8239  000CB6  C01D  F04A         	movff	?___flmul+1,___flsub@a+1
  8240  000CBA  C01E  F04B         	movff	?___flmul+2,___flsub@a+2
  8241  000CBE  C01F  F04C         	movff	?___flmul+3,___flsub@a+3
  8242  000CC2  EC57  F02C         	call	___flsub	;wreg free
  8243  000CC6  C045  F091         	movff	?___flsub,efgtoa@h
  8244  000CCA  C046  F092         	movff	?___flsub+1,efgtoa@h+1
  8245  000CCE  C047  F093         	movff	?___flsub+2,efgtoa@h+2
  8246  000CD2  C048  F094         	movff	?___flsub+3,efgtoa@h+3
  8247  000CD6                     
  8248                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = 
      +                          u/10.0;
  8249  000CD6  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  8250  000CDA  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  8251  000CDE  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  8252  000CE2  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  8253  000CE6  0E00               	movlw	0
  8254  000CE8  6E39               	movwf	___fldiv@a^0,c
  8255  000CEA  0E00               	movlw	0
  8256  000CEC  6E3A               	movwf	(___fldiv@a+1)^0,c
  8257  000CEE  0E20               	movlw	32
  8258  000CF0  6E3B               	movwf	(___fldiv@a+2)^0,c
  8259  000CF2  0E41               	movlw	65
  8260  000CF4  6E3C               	movwf	(___fldiv@a+3)^0,c
  8261  000CF6  ECDB  F019         	call	___fldiv	;wreg free
  8262  000CFA  C035  F0A3         	movff	?___fldiv,efgtoa@u
  8263  000CFE  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  8264  000D02  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  8265  000D06  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  8266  000D0A                     
  8267                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  8268  000D0A  0100               	movlb	0	; () banked
  8269  000D0C  4B99               	infsnz	efgtoa@i& (0+255),f,b
  8270  000D0E  2B9A               	incf	(efgtoa@i+1)& (0+255),f,b
  8271  000D10                     l4993:
  8272                           
  8273                           ; BSR set to: 0
  8274                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  8275  000D10  5183               	movf	efgtoa@m& (0+255),w,b
  8276  000D12  5D99               	subwf	efgtoa@i& (0+255),w,b
  8277  000D14  519A               	movf	(efgtoa@i+1)& (0+255),w,b
  8278  000D16  0A80               	xorlw	128
  8279  000D18  6F6A               	movwf	??_efgtoa& (0+255),b
  8280  000D1A  5184               	movf	(efgtoa@m+1)& (0+255),w,b
  8281  000D1C  0A80               	xorlw	128
  8282  000D1E  596A               	subwfb	??_efgtoa& (0+255),w,b
  8283  000D20  A0D8               	btfss	status,0,c
  8284  000D22  EF95  F006         	goto	u5951
  8285  000D26  EF97  F006         	goto	u5950
  8286  000D2A                     u5951:
  8287  000D2A  EF0D  F006         	goto	l4985
  8288  000D2E                     u5950:
  8289  000D2E                     
  8290                           ; BSR set to: 0
  8291                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.
      +                          0;
  8292  000D2E  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  8293  000D32  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  8294  000D36  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  8295  000D3A  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  8296  000D3E  0E00               	movlw	0
  8297  000D40  6E20               	movwf	___flmul@a^0,c
  8298  000D42  0E00               	movlw	0
  8299  000D44  6E21               	movwf	(___flmul@a+1)^0,c
  8300  000D46  0EA0               	movlw	160
  8301  000D48  6E22               	movwf	(___flmul@a+2)^0,c
  8302  000D4A  0E40               	movlw	64
  8303  000D4C  6E23               	movwf	(___flmul@a+3)^0,c
  8304  000D4E  ECC6  F017         	call	___flmul	;wreg free
  8305  000D52  C01C  F095         	movff	?___flmul,efgtoa@l
  8306  000D56  C01D  F096         	movff	?___flmul+1,efgtoa@l+1
  8307  000D5A  C01E  F097         	movff	?___flmul+2,efgtoa@l+2
  8308  000D5E  C01F  F098         	movff	?___flmul+3,efgtoa@l+3
  8309  000D62                     
  8310                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < 
      +                          l) {
  8311  000D62  C091  F035         	movff	efgtoa@h,___flge@ff1
  8312  000D66  C092  F036         	movff	efgtoa@h+1,___flge@ff1+1
  8313  000D6A  C093  F037         	movff	efgtoa@h+2,___flge@ff1+2
  8314  000D6E  C094  F038         	movff	efgtoa@h+3,___flge@ff1+3
  8315  000D72  C095  F039         	movff	efgtoa@l,___flge@ff2
  8316  000D76  C096  F03A         	movff	efgtoa@l+1,___flge@ff2+1
  8317  000D7A  C097  F03B         	movff	efgtoa@l+2,___flge@ff2+2
  8318  000D7E  C098  F03C         	movff	efgtoa@l+3,___flge@ff2+3
  8319  000D82  EC66  F025         	call	___flge	;wreg free
  8320  000D86  B0D8               	btfsc	status,0,c
  8321  000D88  EFC8  F006         	goto	u5961
  8322  000D8C  EFCA  F006         	goto	u5960
  8323  000D90                     u5961:
  8324  000D90  EFD5  F006         	goto	l5001
  8325  000D94                     u5960:
  8326  000D94                     
  8327                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 
      +                          0.0;
  8328  000D94  0E00               	movlw	0
  8329  000D96  0100               	movlb	0	; () banked
  8330  000D98  6F95               	movwf	efgtoa@l& (0+255),b
  8331  000D9A  0E00               	movlw	0
  8332  000D9C  6F96               	movwf	(efgtoa@l+1)& (0+255),b
  8333  000D9E  0E00               	movlw	0
  8334  000DA0  6F97               	movwf	(efgtoa@l+2)& (0+255),b
  8335  000DA2  0E00               	movlw	0
  8336  000DA4  6F98               	movwf	(efgtoa@l+3)& (0+255),b
  8337                           
  8338                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  8339  000DA6  EFFE  F006         	goto	l5007
  8340  000DAA                     l5001:
  8341                           
  8342                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if (
      +                          (h == l) && !(d % 2)) {
  8343  000DAA  C091  F001         	movff	efgtoa@h,___fleq@ff1
  8344  000DAE  C092  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  8345  000DB2  C093  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  8346  000DB6  C094  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  8347  000DBA  C095  F005         	movff	efgtoa@l,___fleq@ff2
  8348  000DBE  C096  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  8349  000DC2  C097  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  8350  000DC6  C098  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  8351  000DCA  ECD1  F028         	call	___fleq	;wreg free
  8352  000DCE  A0D8               	btfss	status,0,c
  8353  000DD0  EFEC  F006         	goto	u5971
  8354  000DD4  EFEE  F006         	goto	u5970
  8355  000DD8                     u5971:
  8356  000DD8  EFFE  F006         	goto	l5007
  8357  000DDC                     u5970:
  8358  000DDC  0100               	movlb	0	; () banked
  8359  000DDE  B187               	btfsc	efgtoa@d& (0+255),0,b
  8360  000DE0  EFF4  F006         	goto	u5981
  8361  000DE4  EFF6  F006         	goto	u5980
  8362  000DE8                     u5981:
  8363  000DE8  EFFE  F006         	goto	l5007
  8364  000DEC                     u5980:
  8365  000DEC                     
  8366                           ; BSR set to: 0
  8367                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             
      +                          l = 0.0;
  8368  000DEC  0E00               	movlw	0
  8369  000DEE  6F95               	movwf	efgtoa@l& (0+255),b
  8370  000DF0  0E00               	movlw	0
  8371  000DF2  6F96               	movwf	(efgtoa@l+1)& (0+255),b
  8372  000DF4  0E00               	movlw	0
  8373  000DF6  6F97               	movwf	(efgtoa@l+2)& (0+255),b
  8374  000DF8  0E00               	movlw	0
  8375  000DFA  6F98               	movwf	(efgtoa@l+3)& (0+255),b
  8376  000DFC                     l5007:
  8377                           
  8378                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + 
      +                          l;
  8379  000DFC  C09B  F035         	movff	efgtoa@g,___fladd@b
  8380  000E00  C09C  F036         	movff	efgtoa@g+1,___fladd@b+1
  8381  000E04  C09D  F037         	movff	efgtoa@g+2,___fladd@b+2
  8382  000E08  C09E  F038         	movff	efgtoa@g+3,___fladd@b+3
  8383  000E0C  C095  F039         	movff	efgtoa@l,___fladd@a
  8384  000E10  C096  F03A         	movff	efgtoa@l+1,___fladd@a+1
  8385  000E14  C097  F03B         	movff	efgtoa@l+2,___fladd@a+2
  8386  000E18  C098  F03C         	movff	efgtoa@l+3,___fladd@a+3
  8387  000E1C  EC66  F015         	call	___fladd	;wreg free
  8388  000E20  C035  F091         	movff	?___fladd,efgtoa@h
  8389  000E24  C036  F092         	movff	?___fladd+1,efgtoa@h+1
  8390  000E28  C037  F093         	movff	?___fladd+2,efgtoa@h+2
  8391  000E2C  C038  F094         	movff	?___fladd+3,efgtoa@h+3
  8392  000E30                     
  8393                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  8394  000E30  C06F  F0A3         	movff	efgtoa@ou,efgtoa@u
  8395  000E34  C070  F0A4         	movff	efgtoa@ou+1,efgtoa@u+1
  8396  000E38  C071  F0A5         	movff	efgtoa@ou+2,efgtoa@u+2
  8397  000E3C  C072  F0A6         	movff	efgtoa@ou+3,efgtoa@u+3
  8398  000E40                     
  8399                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  8400  000E40  0E65               	movlw	101
  8401  000E42  0100               	movlb	0	; () banked
  8402  000E44  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8403  000E46  B4D8               	btfsc	status,2,c
  8404  000E48  EF28  F007         	goto	u5991
  8405  000E4C  EF2A  F007         	goto	u5990
  8406  000E50                     u5991:
  8407  000E50  EF30  F007         	goto	l5015
  8408  000E54                     u5990:
  8409  000E54                     
  8410                           ; BSR set to: 0
  8411  000E54  C09F  F085         	movff	efgtoa@e,efgtoa@ne
  8412  000E58  C0A0  F086         	movff	efgtoa@e+1,efgtoa@ne+1
  8413  000E5C  EF34  F007         	goto	l1303
  8414  000E60                     l5015:
  8415                           
  8416                           ; BSR set to: 0
  8417  000E60  0E00               	movlw	0
  8418  000E62  6F86               	movwf	(efgtoa@ne+1)& (0+255),b
  8419  000E64  0E00               	movlw	0
  8420  000E66  6F85               	movwf	efgtoa@ne& (0+255),b
  8421  000E68                     l1303:
  8422                           
  8423                           ; BSR set to: 0
  8424                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  8425  000E68  0E00               	movlw	0
  8426  000E6A  6F82               	movwf	(efgtoa@pp+1)& (0+255),b
  8427  000E6C  0E00               	movlw	0
  8428  000E6E  6F81               	movwf	efgtoa@pp& (0+255),b
  8429                           
  8430                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  8431  000E70  0E00               	movlw	0
  8432  000E72  6F80               	movwf	(efgtoa@t+1)& (0+255),b
  8433  000E74  0E00               	movlw	0
  8434  000E76  6F7F               	movwf	efgtoa@t& (0+255),b
  8435                           
  8436                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  8437  000E78  0E00               	movlw	0
  8438  000E7A  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  8439  000E7C  0E00               	movlw	0
  8440  000E7E  6F99               	movwf	efgtoa@i& (0+255),b
  8441                           
  8442                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  8443  000E80  EF31  F008         	goto	l5065
  8444  000E84                     l5017:
  8445                           
  8446                           ; BSR set to: 0
  8447                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = 
      +                          floorf(h/u);
  8448  000E84  C091  F035         	movff	efgtoa@h,___fldiv@b
  8449  000E88  C092  F036         	movff	efgtoa@h+1,___fldiv@b+1
  8450  000E8C  C093  F037         	movff	efgtoa@h+2,___fldiv@b+2
  8451  000E90  C094  F038         	movff	efgtoa@h+3,___fldiv@b+3
  8452  000E94  C0A3  F039         	movff	efgtoa@u,___fldiv@a
  8453  000E98  C0A4  F03A         	movff	efgtoa@u+1,___fldiv@a+1
  8454  000E9C  C0A5  F03B         	movff	efgtoa@u+2,___fldiv@a+2
  8455  000EA0  C0A6  F03C         	movff	efgtoa@u+3,___fldiv@a+3
  8456  000EA4  ECDB  F019         	call	___fldiv	;wreg free
  8457  000EA8  C035  F04E         	movff	?___fldiv,floorf@x
  8458  000EAC  C036  F04F         	movff	?___fldiv+1,floorf@x+1
  8459  000EB0  C037  F050         	movff	?___fldiv+2,floorf@x+2
  8460  000EB4  C038  F051         	movff	?___fldiv+3,floorf@x+3
  8461  000EB8  EC8D  F01E         	call	_floorf	;wreg free
  8462  000EBC  C04E  F095         	movff	?_floorf,efgtoa@l
  8463  000EC0  C04F  F096         	movff	?_floorf+1,efgtoa@l+1
  8464  000EC4  C050  F097         	movff	?_floorf+2,efgtoa@l+2
  8465  000EC8  C051  F098         	movff	?_floorf+3,efgtoa@l+3
  8466                           
  8467                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = 
      +                          (int)l;
  8468  000ECC  C095  F04E         	movff	efgtoa@l,___fltol@f1
  8469  000ED0  C096  F04F         	movff	efgtoa@l+1,___fltol@f1+1
  8470  000ED4  C097  F050         	movff	efgtoa@l+2,___fltol@f1+2
  8471  000ED8  C098  F051         	movff	efgtoa@l+3,___fltol@f1+3
  8472  000EDC  ECE3  F024         	call	___fltol	;wreg free
  8473  000EE0  C04E  F087         	movff	?___fltol,efgtoa@d
  8474  000EE4  C04F  F088         	movff	?___fltol+1,efgtoa@d+1
  8475  000EE8                     
  8476                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  8477  000EE8  0101               	movlb	1	; () banked
  8478  000EEA  B9A4               	btfsc	_flags& (0+255),4,b
  8479  000EEC  EF7A  F007         	goto	u6001
  8480  000EF0  EF7C  F007         	goto	u6000
  8481  000EF4                     u6001:
  8482  000EF4  EF9A  F007         	goto	l5029
  8483  000EF8                     u6000:
  8484  000EF8                     
  8485                           ; BSR set to: 1
  8486  000EF8  0100               	movlb	0	; () banked
  8487  000EFA  5187               	movf	efgtoa@d& (0+255),w,b
  8488  000EFC  1188               	iorwf	(efgtoa@d+1)& (0+255),w,b
  8489  000EFE  A4D8               	btfss	status,2,c
  8490  000F00  EF84  F007         	goto	u6011
  8491  000F04  EF86  F007         	goto	u6010
  8492  000F08                     u6011:
  8493  000F08  EF9A  F007         	goto	l5029
  8494  000F0C                     u6010:
  8495  000F0C                     
  8496                           ; BSR set to: 0
  8497  000F0C  0E67               	movlw	103
  8498  000F0E  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8499  000F10  A4D8               	btfss	status,2,c
  8500  000F12  EF8D  F007         	goto	u6021
  8501  000F16  EF8F  F007         	goto	u6020
  8502  000F1A                     u6021:
  8503  000F1A  EF9A  F007         	goto	l5029
  8504  000F1E                     u6020:
  8505  000F1E                     
  8506                           ; BSR set to: 0
  8507  000F1E  BF86               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  8508  000F20  EF96  F007         	goto	u6030
  8509  000F24  EF94  F007         	goto	u6031
  8510  000F28                     u6031:
  8511  000F28  EF9A  F007         	goto	l5029
  8512  000F2C                     u6030:
  8513  000F2C                     
  8514                           ; BSR set to: 0
  8515                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             
      +                          ++t;
  8516  000F2C  4B7F               	infsnz	efgtoa@t& (0+255),f,b
  8517  000F2E  2B80               	incf	(efgtoa@t+1)& (0+255),f,b
  8518                           
  8519                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } el
      +                          se {
  8520  000F30  EFE5  F007         	goto	l5057
  8521  000F34                     l5029:
  8522                           
  8523                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             
      +                          if (!pp && (ne < 0)) {
  8524  000F34  0100               	movlb	0	; () banked
  8525  000F36  5181               	movf	efgtoa@pp& (0+255),w,b
  8526  000F38  1182               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  8527  000F3A  A4D8               	btfss	status,2,c
  8528  000F3C  EFA2  F007         	goto	u6041
  8529  000F40  EFA4  F007         	goto	u6040
  8530  000F44                     u6041:
  8531  000F44  EFCE  F007         	goto	l5049
  8532  000F48                     u6040:
  8533  000F48                     
  8534                           ; BSR set to: 0
  8535  000F48  BF86               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  8536  000F4A  EFAB  F007         	goto	u6050
  8537  000F4E  EFA9  F007         	goto	u6051
  8538  000F52                     u6051:
  8539  000F52  EFCE  F007         	goto	l5049
  8540  000F56                     u6050:
  8541  000F56                     
  8542                           ; BSR set to: 0
  8543                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:             
      +                              dbuf[n++] = '.';
  8544  000F56  0E00               	movlw	low _dbuf
  8545  000F58  25A1               	addwf	efgtoa@n& (0+255),w,b
  8546  000F5A  6ED9               	movwf	fsr2l,c
  8547  000F5C  0E02               	movlw	high _dbuf
  8548  000F5E  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8549  000F60  6EDA               	movwf	fsr2h,c
  8550  000F62  0E2E               	movlw	46
  8551  000F64  6EDF               	movwf	indf2,c
  8552  000F66                     
  8553                           ; BSR set to: 0
  8554  000F66  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8555  000F68  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8556  000F6A                     
  8557                           ; BSR set to: 0
  8558                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:             
      +                              --w;
  8559  000F6A  078E               	decf	efgtoa@w& (0+255),f,b
  8560  000F6C  A0D8               	btfss	status,0,c
  8561  000F6E  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8562  000F70                     
  8563                           ; BSR set to: 0
  8564                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:             
      +                              pp = 1;
  8565  000F70  0E00               	movlw	0
  8566  000F72  6F82               	movwf	(efgtoa@pp+1)& (0+255),b
  8567  000F74  0E01               	movlw	1
  8568  000F76  6F81               	movwf	efgtoa@pp& (0+255),b
  8569  000F78  EFCE  F007         	goto	l5049
  8570  000F7C                     l5041:
  8571                           
  8572                           ; BSR set to: 0
  8573                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:             
      +                              dbuf[n++] = '0';
  8574  000F7C  0E00               	movlw	low _dbuf
  8575  000F7E  25A1               	addwf	efgtoa@n& (0+255),w,b
  8576  000F80  6ED9               	movwf	fsr2l,c
  8577  000F82  0E02               	movlw	high _dbuf
  8578  000F84  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8579  000F86  6EDA               	movwf	fsr2h,c
  8580  000F88  0E30               	movlw	48
  8581  000F8A  6EDF               	movwf	indf2,c
  8582  000F8C                     
  8583                           ; BSR set to: 0
  8584  000F8C  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8585  000F8E  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8586  000F90                     
  8587                           ; BSR set to: 0
  8588                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:             
      +                              --w;
  8589  000F90  078E               	decf	efgtoa@w& (0+255),f,b
  8590  000F92  A0D8               	btfss	status,0,c
  8591  000F94  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8592  000F96                     
  8593                           ; BSR set to: 0
  8594                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:             
      +                              --t;
  8595  000F96  077F               	decf	efgtoa@t& (0+255),f,b
  8596  000F98  A0D8               	btfss	status,0,c
  8597  000F9A  0780               	decf	(efgtoa@t+1)& (0+255),f,b
  8598  000F9C                     l5049:
  8599                           
  8600                           ; BSR set to: 0
  8601                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             
      +                          while (t) {
  8602  000F9C  517F               	movf	efgtoa@t& (0+255),w,b
  8603  000F9E  1180               	iorwf	(efgtoa@t+1)& (0+255),w,b
  8604  000FA0  A4D8               	btfss	status,2,c
  8605  000FA2  EFD5  F007         	goto	u6061
  8606  000FA6  EFD7  F007         	goto	u6060
  8607  000FAA                     u6061:
  8608  000FAA  EFBE  F007         	goto	l5041
  8609  000FAE                     u6060:
  8610  000FAE                     
  8611                           ; BSR set to: 0
  8612                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             
      +                          dbuf[n++] = '0' + d;
  8613  000FAE  0E00               	movlw	low _dbuf
  8614  000FB0  25A1               	addwf	efgtoa@n& (0+255),w,b
  8615  000FB2  6ED9               	movwf	fsr2l,c
  8616  000FB4  0E02               	movlw	high _dbuf
  8617  000FB6  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8618  000FB8  6EDA               	movwf	fsr2h,c
  8619  000FBA  5187               	movf	efgtoa@d& (0+255),w,b
  8620  000FBC  0F30               	addlw	48
  8621  000FBE  6EDF               	movwf	indf2,c
  8622  000FC0                     
  8623                           ; BSR set to: 0
  8624  000FC0  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8625  000FC2  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8626  000FC4                     
  8627                           ; BSR set to: 0
  8628                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             
      +                          --w;
  8629  000FC4  078E               	decf	efgtoa@w& (0+255),f,b
  8630  000FC6  A0D8               	btfss	status,0,c
  8631  000FC8  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8632  000FCA                     l5057:
  8633                           
  8634                           ; BSR set to: 0
  8635                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -=
      +                           l*u;
  8636  000FCA  C091  F045         	movff	efgtoa@h,___flsub@b
  8637  000FCE  C092  F046         	movff	efgtoa@h+1,___flsub@b+1
  8638  000FD2  C093  F047         	movff	efgtoa@h+2,___flsub@b+2
  8639  000FD6  C094  F048         	movff	efgtoa@h+3,___flsub@b+3
  8640  000FDA  C0A3  F020         	movff	efgtoa@u,___flmul@a
  8641  000FDE  C0A4  F021         	movff	efgtoa@u+1,___flmul@a+1
  8642  000FE2  C0A5  F022         	movff	efgtoa@u+2,___flmul@a+2
  8643  000FE6  C0A6  F023         	movff	efgtoa@u+3,___flmul@a+3
  8644  000FEA  C095  F01C         	movff	efgtoa@l,___flmul@b
  8645  000FEE  C096  F01D         	movff	efgtoa@l+1,___flmul@b+1
  8646  000FF2  C097  F01E         	movff	efgtoa@l+2,___flmul@b+2
  8647  000FF6  C098  F01F         	movff	efgtoa@l+3,___flmul@b+3
  8648  000FFA  ECC6  F017         	call	___flmul	;wreg free
  8649  000FFE  C01C  F049         	movff	?___flmul,___flsub@a
  8650  001002  C01D  F04A         	movff	?___flmul+1,___flsub@a+1
  8651  001006  C01E  F04B         	movff	?___flmul+2,___flsub@a+2
  8652  00100A  C01F  F04C         	movff	?___flmul+3,___flsub@a+3
  8653  00100E  EC57  F02C         	call	___flsub	;wreg free
  8654  001012  C045  F091         	movff	?___flsub,efgtoa@h
  8655  001016  C046  F092         	movff	?___flsub+1,efgtoa@h+1
  8656  00101A  C047  F093         	movff	?___flsub+2,efgtoa@h+2
  8657  00101E  C048  F094         	movff	?___flsub+3,efgtoa@h+3
  8658  001022                     
  8659                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = 
      +                          u/10.0;
  8660  001022  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  8661  001026  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  8662  00102A  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  8663  00102E  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  8664  001032  0E00               	movlw	0
  8665  001034  6E39               	movwf	___fldiv@a^0,c
  8666  001036  0E00               	movlw	0
  8667  001038  6E3A               	movwf	(___fldiv@a+1)^0,c
  8668  00103A  0E20               	movlw	32
  8669  00103C  6E3B               	movwf	(___fldiv@a+2)^0,c
  8670  00103E  0E41               	movlw	65
  8671  001040  6E3C               	movwf	(___fldiv@a+3)^0,c
  8672  001042  ECDB  F019         	call	___fldiv	;wreg free
  8673  001046  C035  F0A3         	movff	?___fldiv,efgtoa@u
  8674  00104A  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  8675  00104E  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  8676  001052  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  8677  001056                     
  8678                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne
      +                          ;
  8679  001056  0100               	movlb	0	; () banked
  8680  001058  0785               	decf	efgtoa@ne& (0+255),f,b
  8681  00105A  A0D8               	btfss	status,0,c
  8682  00105C  0786               	decf	(efgtoa@ne+1)& (0+255),f,b
  8683  00105E                     
  8684                           ; BSR set to: 0
  8685                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  8686  00105E  4B99               	infsnz	efgtoa@i& (0+255),f,b
  8687  001060  2B9A               	incf	(efgtoa@i+1)& (0+255),f,b
  8688  001062                     l5065:
  8689                           
  8690                           ; BSR set to: 0
  8691                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  8692  001062  5183               	movf	efgtoa@m& (0+255),w,b
  8693  001064  5D99               	subwf	efgtoa@i& (0+255),w,b
  8694  001066  519A               	movf	(efgtoa@i+1)& (0+255),w,b
  8695  001068  0A80               	xorlw	128
  8696  00106A  6F6A               	movwf	??_efgtoa& (0+255),b
  8697  00106C  5184               	movf	(efgtoa@m+1)& (0+255),w,b
  8698  00106E  0A80               	xorlw	128
  8699  001070  596A               	subwfb	??_efgtoa& (0+255),w,b
  8700  001072  B0D8               	btfsc	status,0,c
  8701  001074  EF3E  F008         	goto	u6071
  8702  001078  EF40  F008         	goto	u6070
  8703  00107C                     u6071:
  8704  00107C  EF4E  F008         	goto	l5069
  8705  001080                     u6070:
  8706  001080                     
  8707                           ; BSR set to: 0
  8708  001080  BFA2               	btfsc	(efgtoa@n+1)& (0+255),7,b
  8709  001082  EF4C  F008         	goto	u6081
  8710  001086  51A2               	movf	(efgtoa@n+1)& (0+255),w,b
  8711  001088  E109               	bnz	u6080
  8712  00108A  0E4B               	movlw	75
  8713  00108C  5DA1               	subwf	efgtoa@n& (0+255),w,b
  8714  00108E  A0D8               	btfss	status,0,c
  8715  001090  EF4C  F008         	goto	u6081
  8716  001094  EF4E  F008         	goto	u6080
  8717  001098                     u6081:
  8718  001098  EF42  F007         	goto	l5017
  8719  00109C                     u6080:
  8720  00109C                     l5069:
  8721                           
  8722                           ; BSR set to: 0
  8723                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp 
      +                          && (flags & (1 << 4))) {
  8724  00109C  5181               	movf	efgtoa@pp& (0+255),w,b
  8725  00109E  1182               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  8726  0010A0  A4D8               	btfss	status,2,c
  8727  0010A2  EF55  F008         	goto	u6091
  8728  0010A6  EF57  F008         	goto	u6090
  8729  0010AA                     u6091:
  8730  0010AA  EF6A  F008         	goto	l5077
  8731  0010AE                     u6090:
  8732  0010AE                     
  8733                           ; BSR set to: 0
  8734  0010AE  0101               	movlb	1	; () banked
  8735  0010B0  A9A4               	btfss	_flags& (0+255),4,b
  8736  0010B2  EF5D  F008         	goto	u6101
  8737  0010B6  EF5F  F008         	goto	u6100
  8738  0010BA                     u6101:
  8739  0010BA  EF6A  F008         	goto	l5077
  8740  0010BE                     u6100:
  8741  0010BE                     
  8742                           ; BSR set to: 1
  8743                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf
      +                          [n++] = '.';
  8744  0010BE  0E00               	movlw	low _dbuf
  8745  0010C0  0100               	movlb	0	; () banked
  8746  0010C2  25A1               	addwf	efgtoa@n& (0+255),w,b
  8747  0010C4  6ED9               	movwf	fsr2l,c
  8748  0010C6  0E02               	movlw	high _dbuf
  8749  0010C8  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8750  0010CA  6EDA               	movwf	fsr2h,c
  8751  0010CC  0E2E               	movlw	46
  8752  0010CE  6EDF               	movwf	indf2,c
  8753  0010D0                     
  8754                           ; BSR set to: 0
  8755  0010D0  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8756  0010D2  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8757  0010D4                     l5077:
  8758                           
  8759                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] 
      +                          = '\0';
  8760  0010D4  0E00               	movlw	low _dbuf
  8761  0010D6  0100               	movlb	0	; () banked
  8762  0010D8  25A1               	addwf	efgtoa@n& (0+255),w,b
  8763  0010DA  6ED9               	movwf	fsr2l,c
  8764  0010DC  0E02               	movlw	high _dbuf
  8765  0010DE  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8766  0010E0  6EDA               	movwf	fsr2h,c
  8767  0010E2  0E00               	movlw	0
  8768  0010E4  6EDF               	movwf	indf2,c
  8769  0010E6                     
  8770                           ; BSR set to: 0
  8771                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmod
      +                          e == 'e') {
  8772  0010E6  0E65               	movlw	101
  8773  0010E8  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8774  0010EA  A4D8               	btfss	status,2,c
  8775  0010EC  EF7A  F008         	goto	u6111
  8776  0010F0  EF7C  F008         	goto	u6110
  8777  0010F4                     u6111:
  8778  0010F4  EF21  F004         	goto	l4889
  8779  0010F8                     u6110:
  8780  0010F8                     
  8781                           ; BSR set to: 0
  8782                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = 
      +                          sizeof(dbuf) - 1;
  8783  0010F8  0E00               	movlw	0
  8784  0010FA  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  8785  0010FC  0E4F               	movlw	79
  8786  0010FE  6F99               	movwf	efgtoa@i& (0+255),b
  8787  001100                     
  8788                           ; BSR set to: 0
  8789                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf
      +                          [i] = '\0';
  8790  001100  0E00               	movlw	low _dbuf
  8791  001102  2599               	addwf	efgtoa@i& (0+255),w,b
  8792  001104  6ED9               	movwf	fsr2l,c
  8793  001106  0E02               	movlw	high _dbuf
  8794  001108  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8795  00110A  6EDA               	movwf	fsr2h,c
  8796  00110C  0E00               	movlw	0
  8797  00110E  6EDF               	movwf	indf2,c
  8798  001110                     
  8799                           ; BSR set to: 0
  8800                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign
      +                           = 0;
  8801  001110  0E00               	movlw	0
  8802  001112  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  8803  001114  0E00               	movlw	0
  8804  001116  6F89               	movwf	efgtoa@sign& (0+255),b
  8805  001118                     
  8806                           ; BSR set to: 0
  8807                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (
      +                          e < 0) {
  8808  001118  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8809  00111A  EF93  F008         	goto	u6120
  8810  00111E  EF91  F008         	goto	u6121
  8811  001122                     u6121:
  8812  001122  EF9B  F008         	goto	l5093
  8813  001126                     u6120:
  8814  001126                     
  8815                           ; BSR set to: 0
  8816                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             
      +                          sign = 1;
  8817  001126  0E00               	movlw	0
  8818  001128  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  8819  00112A  0E01               	movlw	1
  8820  00112C  6F89               	movwf	efgtoa@sign& (0+255),b
  8821  00112E                     
  8822                           ; BSR set to: 0
  8823                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             
      +                          e = -e;
  8824  00112E  6D9F               	negf	efgtoa@e& (0+255),b
  8825  001130  1FA0               	comf	(efgtoa@e+1)& (0+255),f,b
  8826  001132  B0D8               	btfsc	status,0,c
  8827  001134  2BA0               	incf	(efgtoa@e+1)& (0+255),f,b
  8828  001136                     l5093:
  8829                           
  8830                           ; BSR set to: 0
  8831                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 
      +                          2;
  8832  001136  0E00               	movlw	0
  8833  001138  6F8C               	movwf	(efgtoa@p+1)& (0+255),b
  8834  00113A  0E02               	movlw	2
  8835  00113C  6F8B               	movwf	efgtoa@p& (0+255),b
  8836                           
  8837                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  8838  00113E  EFCC  F008         	goto	l5105
  8839  001142                     l5095:
  8840                           
  8841                           ; BSR set to: 0
  8842                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             
      +                          --i;
  8843  001142  0799               	decf	efgtoa@i& (0+255),f,b
  8844  001144  A0D8               	btfss	status,0,c
  8845  001146  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  8846  001148                     
  8847                           ; BSR set to: 0
  8848                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             
      +                          dbuf[i] = '0' + (e % 10);
  8849  001148  0E00               	movlw	low _dbuf
  8850  00114A  2599               	addwf	efgtoa@i& (0+255),w,b
  8851  00114C  6ED9               	movwf	fsr2l,c
  8852  00114E  0E02               	movlw	high _dbuf
  8853  001150  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8854  001152  6EDA               	movwf	fsr2h,c
  8855  001154  C09F  F001         	movff	efgtoa@e,___awmod@dividend
  8856  001158  C0A0  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  8857  00115C  0E00               	movlw	0
  8858  00115E  6E04               	movwf	(___awmod@divisor+1)^0,c
  8859  001160  0E0A               	movlw	10
  8860  001162  6E03               	movwf	___awmod@divisor^0,c
  8861  001164  EC79  F028         	call	___awmod	;wreg free
  8862  001168  5001               	movf	?___awmod^0,w,c
  8863  00116A  0F30               	addlw	48
  8864  00116C  6EDF               	movwf	indf2,c
  8865  00116E                     
  8866                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             
      +                          e = e / 10;
  8867  00116E  C09F  F001         	movff	efgtoa@e,___awdiv@dividend
  8868  001172  C0A0  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  8869  001176  0E00               	movlw	0
  8870  001178  6E04               	movwf	(___awdiv@divisor+1)^0,c
  8871  00117A  0E0A               	movlw	10
  8872  00117C  6E03               	movwf	___awdiv@divisor^0,c
  8873  00117E  EC17  F028         	call	___awdiv	;wreg free
  8874  001182  C001  F09F         	movff	?___awdiv,efgtoa@e
  8875  001186  C002  F0A0         	movff	?___awdiv+1,efgtoa@e+1
  8876  00118A                     
  8877                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             
      +                          --p;
  8878  00118A  0100               	movlb	0	; () banked
  8879  00118C  078B               	decf	efgtoa@p& (0+255),f,b
  8880  00118E  A0D8               	btfss	status,0,c
  8881  001190  078C               	decf	(efgtoa@p+1)& (0+255),f,b
  8882  001192                     
  8883                           ; BSR set to: 0
  8884                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             
      +                          --w;
  8885  001192  078E               	decf	efgtoa@w& (0+255),f,b
  8886  001194  A0D8               	btfss	status,0,c
  8887  001196  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8888  001198                     l5105:
  8889                           
  8890                           ; BSR set to: 0
  8891                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  8892  001198  519F               	movf	efgtoa@e& (0+255),w,b
  8893  00119A  11A0               	iorwf	(efgtoa@e+1)& (0+255),w,b
  8894  00119C  A4D8               	btfss	status,2,c
  8895  00119E  EFD3  F008         	goto	u6131
  8896  0011A2  EFD5  F008         	goto	u6130
  8897  0011A6                     u6131:
  8898  0011A6  EFA1  F008         	goto	l5095
  8899  0011AA                     u6130:
  8900  0011AA                     
  8901                           ; BSR set to: 0
  8902  0011AA  BF8C               	btfsc	(efgtoa@p+1)& (0+255),7,b
  8903  0011AC  EFE2  F008         	goto	u6140
  8904  0011B0  518C               	movf	(efgtoa@p+1)& (0+255),w,b
  8905  0011B2  E106               	bnz	u6141
  8906  0011B4  058B               	decf	efgtoa@p& (0+255),w,b
  8907  0011B6  B0D8               	btfsc	status,0,c
  8908  0011B8  EFE0  F008         	goto	u6141
  8909  0011BC  EFE2  F008         	goto	u6140
  8910  0011C0                     u6141:
  8911  0011C0  EFA1  F008         	goto	l5095
  8912  0011C4                     u6140:
  8913  0011C4                     
  8914                           ; BSR set to: 0
  8915                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  8916  0011C4  0799               	decf	efgtoa@i& (0+255),f,b
  8917  0011C6  A0D8               	btfss	status,0,c
  8918  0011C8  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  8919  0011CA                     
  8920                           ; BSR set to: 0
  8921                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [i] = sign ? '-' : '+';
  8922  0011CA  5189               	movf	efgtoa@sign& (0+255),w,b
  8923  0011CC  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8924  0011CE  A4D8               	btfss	status,2,c
  8925  0011D0  EFEC  F008         	goto	u6151
  8926  0011D4  EFEE  F008         	goto	u6150
  8927  0011D8                     u6151:
  8928  0011D8  EFF4  F008         	goto	l5115
  8929  0011DC                     u6150:
  8930  0011DC                     
  8931                           ; BSR set to: 0
  8932  0011DC  0E00               	movlw	0
  8933  0011DE  6F7A               	movwf	(_efgtoa$2512+1)& (0+255),b
  8934  0011E0  0E2B               	movlw	43
  8935  0011E2  6F79               	movwf	_efgtoa$2512& (0+255),b
  8936  0011E4  EFF8  F008         	goto	l5117
  8937  0011E8                     l5115:
  8938                           
  8939                           ; BSR set to: 0
  8940  0011E8  0E00               	movlw	0
  8941  0011EA  6F7A               	movwf	(_efgtoa$2512+1)& (0+255),b
  8942  0011EC  0E2D               	movlw	45
  8943  0011EE  6F79               	movwf	_efgtoa$2512& (0+255),b
  8944  0011F0                     l5117:
  8945                           
  8946                           ; BSR set to: 0
  8947  0011F0  0E00               	movlw	low _dbuf
  8948  0011F2  2599               	addwf	efgtoa@i& (0+255),w,b
  8949  0011F4  6ED9               	movwf	fsr2l,c
  8950  0011F6  0E02               	movlw	high _dbuf
  8951  0011F8  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8952  0011FA  6EDA               	movwf	fsr2h,c
  8953  0011FC  C079  FFDF         	movff	_efgtoa$2512,indf2
  8954  001200                     
  8955                           ; BSR set to: 0
  8956                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  8957  001200  078E               	decf	efgtoa@w& (0+255),f,b
  8958  001202  A0D8               	btfss	status,0,c
  8959  001204  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8960  001206                     
  8961                           ; BSR set to: 0
  8962                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  8963  001206  0799               	decf	efgtoa@i& (0+255),f,b
  8964  001208  A0D8               	btfss	status,0,c
  8965  00120A  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  8966  00120C                     
  8967                           ; BSR set to: 0
  8968  00120C  0EBF               	movlw	191
  8969  00120E  6F6A               	movwf	??_efgtoa& (0+255),b
  8970  001210  0EFF               	movlw	255
  8971  001212  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  8972  001214  505E               	movf	efgtoa@c^0,w,c
  8973  001216  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  8974  001218  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  8975  00121A  516A               	movf	??_efgtoa& (0+255),w,b
  8976  00121C  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  8977  00121E  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  8978  001220  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8979  001222  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  8980  001224  E10A               	bnz	u6160
  8981  001226  0E1A               	movlw	26
  8982  001228  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  8983  00122A  A0D8               	btfss	status,0,c
  8984  00122C  EF1A  F009         	goto	u6161
  8985  001230  EF1D  F009         	goto	u6160
  8986  001234                     u6161:
  8987  001234  0E01               	movlw	1
  8988  001236  EF1E  F009         	goto	u6170
  8989  00123A                     u6160:
  8990  00123A  0E00               	movlw	0
  8991  00123C                     u6170:
  8992  00123C  6F7D               	movwf	_efgtoa$2514& (0+255),b
  8993  00123E  6B7E               	clrf	(_efgtoa$2514+1)& (0+255),b
  8994  001240                     
  8995                           ; BSR set to: 0
  8996  001240  517D               	movf	_efgtoa$2514& (0+255),w,b
  8997  001242  117E               	iorwf	(_efgtoa$2514+1)& (0+255),w,b
  8998  001244  A4D8               	btfss	status,2,c
  8999  001246  EF27  F009         	goto	u6181
  9000  00124A  EF29  F009         	goto	u6180
  9001  00124E                     u6181:
  9002  00124E  EF2F  F009         	goto	l5131
  9003  001252                     u6180:
  9004  001252                     
  9005                           ; BSR set to: 0
  9006  001252  0E00               	movlw	0
  9007  001254  6F7C               	movwf	(_efgtoa$2513+1)& (0+255),b
  9008  001256  0E65               	movlw	101
  9009  001258  6F7B               	movwf	_efgtoa$2513& (0+255),b
  9010  00125A  EF33  F009         	goto	l5133
  9011  00125E                     l5131:
  9012                           
  9013                           ; BSR set to: 0
  9014  00125E  0E00               	movlw	0
  9015  001260  6F7C               	movwf	(_efgtoa$2513+1)& (0+255),b
  9016  001262  0E45               	movlw	69
  9017  001264  6F7B               	movwf	_efgtoa$2513& (0+255),b
  9018  001266                     l5133:
  9019                           
  9020                           ; BSR set to: 0
  9021  001266  0E00               	movlw	low _dbuf
  9022  001268  2599               	addwf	efgtoa@i& (0+255),w,b
  9023  00126A  6ED9               	movwf	fsr2l,c
  9024  00126C  0E02               	movlw	high _dbuf
  9025  00126E  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9026  001270  6EDA               	movwf	fsr2h,c
  9027  001272  C07B  FFDF         	movff	_efgtoa$2513,indf2
  9028  001276                     
  9029                           ; BSR set to: 0
  9030                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  9031  001276  078E               	decf	efgtoa@w& (0+255),f,b
  9032  001278  A0D8               	btfss	status,0,c
  9033  00127A  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  9034  00127C                     
  9035                           ; BSR set to: 0
  9036                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  9037  00127C  0E00               	movlw	low _dbuf
  9038  00127E  25A1               	addwf	efgtoa@n& (0+255),w,b
  9039  001280  6E01               	movwf	strcpy@dest^0,c
  9040  001282  0E02               	movlw	high _dbuf
  9041  001284  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9042  001286  6E02               	movwf	(strcpy@dest+1)^0,c
  9043  001288  0E00               	movlw	low _dbuf
  9044  00128A  2599               	addwf	efgtoa@i& (0+255),w,b
  9045  00128C  6E03               	movwf	strcpy@src^0,c
  9046  00128E  0E02               	movlw	high _dbuf
  9047  001290  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9048  001292  6E04               	movwf	(strcpy@src+1)^0,c
  9049  001294  EC80  F02B         	call	_strcpy	;wreg free
  9050  001298  EF21  F004         	goto	l4889
  9051  00129C                     l1259:
  9052  00129C  0012               	return		;funcret
  9053  00129E                     __end_of_efgtoa:
  9054                           	callstack 0
  9055                           
  9056 ;; *************** function _tolower *****************
  9057 ;; Defined at:
  9058 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\tolower.c"
  9059 ;; Parameters:    Size  Location     Type
  9060 ;;  c               2    6[COMRAM] int 
  9061 ;; Auto vars:     Size  Location     Type
  9062 ;;		None
  9063 ;; Return value:  Size  Location     Type
  9064 ;;                  2    6[COMRAM] int 
  9065 ;; Registers used:
  9066 ;;		wreg, status,2, status,0
  9067 ;; Tracked objects:
  9068 ;;		On entry : 0/0
  9069 ;;		On exit  : 0/0
  9070 ;;		Unchanged: 0/0
  9071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9072 ;;      Params:         2       0       0       0       0       0       0
  9073 ;;      Locals:         2       0       0       0       0       0       0
  9074 ;;      Temps:          4       0       0       0       0       0       0
  9075 ;;      Totals:         8       0       0       0       0       0       0
  9076 ;;Total ram usage:        8 bytes
  9077 ;; Hardware stack levels used:    1
  9078 ;; Hardware stack levels required when called:    2
  9079 ;; This function calls:
  9080 ;;		_isupper
  9081 ;; This function is called by:
  9082 ;;		_efgtoa
  9083 ;;		_vfpfcnvrt
  9084 ;; This function uses a non-reentrant model
  9085 ;;
  9086                           
  9087                           	psect	text24
  9088  0056A0                     __ptext24:
  9089                           	callstack 0
  9090  0056A0                     _tolower:
  9091                           	callstack 23
  9092  0056A0  0EBF               	movlw	191
  9093  0056A2  6E09               	movwf	??_tolower^0,c
  9094  0056A4  0EFF               	movlw	255
  9095  0056A6  6E0A               	movwf	(??_tolower+1)^0,c
  9096  0056A8  C007  F00B         	movff	tolower@c,??_tolower+2
  9097  0056AC  C008  F00C         	movff	tolower@c+1,??_tolower+3
  9098  0056B0  5009               	movf	??_tolower^0,w,c
  9099  0056B2  260B               	addwf	(??_tolower+2)^0,f,c
  9100  0056B4  500A               	movf	(??_tolower+1)^0,w,c
  9101  0056B6  220C               	addwfc	(??_tolower+3)^0,f,c
  9102  0056B8  500C               	movf	(??_tolower+3)^0,w,c
  9103  0056BA  E10A               	bnz	u5350
  9104  0056BC  0E1A               	movlw	26
  9105  0056BE  5C0B               	subwf	(??_tolower+2)^0,w,c
  9106  0056C0  A0D8               	btfss	status,0,c
  9107  0056C2  EF65  F02B         	goto	u5351
  9108  0056C6  EF68  F02B         	goto	u5350
  9109  0056CA                     u5351:
  9110  0056CA  0E01               	movlw	1
  9111  0056CC  EF69  F02B         	goto	u5360
  9112  0056D0                     u5350:
  9113  0056D0  0E00               	movlw	0
  9114  0056D2                     u5360:
  9115  0056D2  6E0D               	movwf	_tolower$2665^0,c
  9116  0056D4  6A0E               	clrf	(_tolower$2665+1)^0,c
  9117  0056D6  500D               	movf	_tolower$2665^0,w,c
  9118  0056D8  100E               	iorwf	(_tolower$2665+1)^0,w,c
  9119  0056DA  B4D8               	btfsc	status,2,c
  9120  0056DC  EF72  F02B         	goto	u5371
  9121  0056E0  EF74  F02B         	goto	u5370
  9122  0056E4                     u5371:
  9123  0056E4  EF7B  F02B         	goto	l1507
  9124  0056E8                     u5370:
  9125  0056E8  0E20               	movlw	32
  9126  0056EA  1007               	iorwf	tolower@c^0,w,c
  9127  0056EC  6E07               	movwf	?_tolower^0,c
  9128  0056EE  5008               	movf	(tolower@c+1)^0,w,c
  9129  0056F0  6E08               	movwf	(?_tolower+1)^0,c
  9130  0056F2  EF7F  F02B         	goto	l1512
  9131  0056F6                     l1507:
  9132  0056F6  C007  F007         	movff	tolower@c,?_tolower
  9133  0056FA  C008  F008         	movff	tolower@c+1,?_tolower+1
  9134  0056FE                     l1512:
  9135  0056FE  0012               	return		;funcret
  9136  005700                     __end_of_tolower:
  9137                           	callstack 0
  9138                           
  9139 ;; *************** function _isupper *****************
  9140 ;; Defined at:
  9141 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  9142 ;; Parameters:    Size  Location     Type
  9143 ;;  c               2    0[COMRAM] int 
  9144 ;; Auto vars:     Size  Location     Type
  9145 ;;		None
  9146 ;; Return value:  Size  Location     Type
  9147 ;;                  2    0[COMRAM] int 
  9148 ;; Registers used:
  9149 ;;		wreg, status,2, status,0
  9150 ;; Tracked objects:
  9151 ;;		On entry : 0/0
  9152 ;;		On exit  : 0/0
  9153 ;;		Unchanged: 0/0
  9154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9155 ;;      Params:         2       0       0       0       0       0       0
  9156 ;;      Locals:         0       0       0       0       0       0       0
  9157 ;;      Temps:          4       0       0       0       0       0       0
  9158 ;;      Totals:         6       0       0       0       0       0       0
  9159 ;;Total ram usage:        6 bytes
  9160 ;; Hardware stack levels used:    1
  9161 ;; Hardware stack levels required when called:    1
  9162 ;; This function calls:
  9163 ;;		Nothing
  9164 ;; This function is called by:
  9165 ;;		_efgtoa
  9166 ;;		_vfpfcnvrt
  9167 ;;		_tolower
  9168 ;; This function uses a non-reentrant model
  9169 ;;
  9170                           
  9171                           	psect	text25
  9172  005A34                     __ptext25:
  9173                           	callstack 0
  9174  005A34                     _isupper:
  9175                           	callstack 23
  9176  005A34  0EBF               	movlw	191
  9177  005A36  6E03               	movwf	??_isupper^0,c
  9178  005A38  0EFF               	movlw	255
  9179  005A3A  6E04               	movwf	(??_isupper+1)^0,c
  9180  005A3C  C001  F005         	movff	isupper@c,??_isupper+2
  9181  005A40  C002  F006         	movff	isupper@c+1,??_isupper+3
  9182  005A44  5003               	movf	??_isupper^0,w,c
  9183  005A46  2605               	addwf	(??_isupper+2)^0,f,c
  9184  005A48  5004               	movf	(??_isupper+1)^0,w,c
  9185  005A4A  2206               	addwfc	(??_isupper+3)^0,f,c
  9186  005A4C  5006               	movf	(??_isupper+3)^0,w,c
  9187  005A4E  E10A               	bnz	u4360
  9188  005A50  0E1A               	movlw	26
  9189  005A52  5C05               	subwf	(??_isupper+2)^0,w,c
  9190  005A54  A0D8               	btfss	status,0,c
  9191  005A56  EF2F  F02D         	goto	u4361
  9192  005A5A  EF32  F02D         	goto	u4360
  9193  005A5E                     u4361:
  9194  005A5E  0E01               	movlw	1
  9195  005A60  EF33  F02D         	goto	u4370
  9196  005A64                     u4360:
  9197  005A64  0E00               	movlw	0
  9198  005A66                     u4370:
  9199  005A66  6E01               	movwf	?_isupper^0,c
  9200  005A68  6A02               	clrf	(?_isupper+1)^0,c
  9201  005A6A  0012               	return		;funcret
  9202  005A6C                     __end_of_isupper:
  9203                           	callstack 0
  9204                           
  9205 ;; *************** function _strcpy *****************
  9206 ;; Defined at:
  9207 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  9208 ;; Parameters:    Size  Location     Type
  9209 ;;  dest            2    0[COMRAM] PTR unsigned char 
  9210 ;;		 -> dbuf(80), 
  9211 ;;  src             2    2[COMRAM] PTR const unsigned char 
  9212 ;;		 -> STR_22(4), STR_21(4), STR_18(4), STR_17(4), 
  9213 ;;		 -> dbuf(80), 
  9214 ;; Auto vars:     Size  Location     Type
  9215 ;;  d               2    8[COMRAM] PTR unsigned char 
  9216 ;;		 -> dbuf(80), 
  9217 ;;  s               2    6[COMRAM] PTR const unsigned char 
  9218 ;;		 -> STR_22(4), STR_21(4), STR_18(4), STR_17(4), 
  9219 ;;		 -> dbuf(80), 
  9220 ;; Return value:  Size  Location     Type
  9221 ;;                  2    0[COMRAM] PTR unsigned char 
  9222 ;; Registers used:
  9223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9224 ;; Tracked objects:
  9225 ;;		On entry : 0/0
  9226 ;;		On exit  : 0/0
  9227 ;;		Unchanged: 0/0
  9228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9229 ;;      Params:         4       0       0       0       0       0       0
  9230 ;;      Locals:         4       0       0       0       0       0       0
  9231 ;;      Temps:          2       0       0       0       0       0       0
  9232 ;;      Totals:        10       0       0       0       0       0       0
  9233 ;;Total ram usage:       10 bytes
  9234 ;; Hardware stack levels used:    1
  9235 ;; Hardware stack levels required when called:    1
  9236 ;; This function calls:
  9237 ;;		Nothing
  9238 ;; This function is called by:
  9239 ;;		_efgtoa
  9240 ;; This function uses a non-reentrant model
  9241 ;;
  9242                           
  9243                           	psect	text26
  9244  005700                     __ptext26:
  9245                           	callstack 0
  9246  005700                     _strcpy:
  9247                           	callstack 23
  9248  005700  C003  F007         	movff	strcpy@src,strcpy@s
  9249  005704  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  9250  005708  C001  F009         	movff	strcpy@dest,strcpy@d
  9251  00570C  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  9252  005710                     l4727:
  9253  005710  5007               	movf	strcpy@s^0,w,c
  9254  005712  6E05               	movwf	??_strcpy^0,c
  9255  005714  5008               	movf	(strcpy@s+1)^0,w,c
  9256  005716  6E06               	movwf	(??_strcpy+1)^0,c
  9257  005718  4A07               	infsnz	strcpy@s^0,f,c
  9258  00571A  2A08               	incf	(strcpy@s+1)^0,f,c
  9259  00571C  C005  FFF6         	movff	??_strcpy,tblptrl
  9260  005720  C006  FFF7         	movff	??_strcpy+1,tblptrh
  9261  005724  6AF8               	clrf	tblptru,c
  9262  005726  C009  FFD9         	movff	strcpy@d,fsr2l
  9263  00572A  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  9264  00572E  4A09               	infsnz	strcpy@d^0,f,c
  9265  005730  2A0A               	incf	(strcpy@d+1)^0,f,c
  9266  005732  0E05               	movlw	(high __ramtop+-1)
  9267  005734  64F7               	cpfsgt	tblptrh,c
  9268  005736  D003               	bra	u5337
  9269  005738  0008               	tblrd		*
  9270  00573A  50F5               	movf	tablat,w,c
  9271  00573C  D005               	bra	u5330
  9272  00573E                     u5337:
  9273  00573E  CFF6 FFE1          	movff	tblptrl,fsr1l
  9274  005742  CFF7 FFE2          	movff	tblptrh,fsr1h
  9275  005746  50E7               	movf	indf1,w,c
  9276  005748                     u5330:
  9277  005748  6EDF               	movwf	indf2,c
  9278  00574A  50DF               	movf	indf2,w,c
  9279  00574C  A4D8               	btfss	status,2,c
  9280  00574E  EFAB  F02B         	goto	u5341
  9281  005752  EFAD  F02B         	goto	u5340
  9282  005756                     u5341:
  9283  005756  EF88  F02B         	goto	l4727
  9284  00575A                     u5340:
  9285  00575A  0012               	return		;funcret
  9286  00575C                     __end_of_strcpy:
  9287                           	callstack 0
  9288                           
  9289 ;; *************** function _floorf *****************
  9290 ;; Defined at:
  9291 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\floorf.c"
  9292 ;; Parameters:    Size  Location     Type
  9293 ;;  x               4   77[COMRAM] float 
  9294 ;; Auto vars:     Size  Location     Type
  9295 ;;  u               4    6[BANK0 ] struct .
  9296 ;;  m               4    0[BANK0 ] unsigned long 
  9297 ;;  e               2    4[BANK0 ] int 
  9298 ;; Return value:  Size  Location     Type
  9299 ;;                  4   77[COMRAM] float 
  9300 ;; Registers used:
  9301 ;;		wreg, status,2, status,0
  9302 ;; Tracked objects:
  9303 ;;		On entry : 0/0
  9304 ;;		On exit  : 0/0
  9305 ;;		Unchanged: 0/0
  9306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9307 ;;      Params:         4       0       0       0       0       0       0
  9308 ;;      Locals:         0      10       0       0       0       0       0
  9309 ;;      Temps:          6       0       0       0       0       0       0
  9310 ;;      Totals:        10      10       0       0       0       0       0
  9311 ;;Total ram usage:       20 bytes
  9312 ;; Hardware stack levels used:    1
  9313 ;; Hardware stack levels required when called:    1
  9314 ;; This function calls:
  9315 ;;		Nothing
  9316 ;; This function is called by:
  9317 ;;		_efgtoa
  9318 ;; This function uses a non-reentrant model
  9319 ;;
  9320                           
  9321                           	psect	text27
  9322  003D1A                     __ptext27:
  9323                           	callstack 0
  9324  003D1A                     _floorf:
  9325                           	callstack 23
  9326  003D1A  C18F  F066         	movff	floorf@F524,floorf@u
  9327  003D1E  C190  F067         	movff	floorf@F524+1,floorf@u+1
  9328  003D22  C191  F068         	movff	floorf@F524+2,floorf@u+2
  9329  003D26  C192  F069         	movff	floorf@F524+3,floorf@u+3
  9330  003D2A  C04E  F066         	movff	floorf@x,floorf@u
  9331  003D2E  C04F  F067         	movff	floorf@x+1,floorf@u+1
  9332  003D32  C050  F068         	movff	floorf@x+2,floorf@u+2
  9333  003D36  C051  F069         	movff	floorf@x+3,floorf@u+3
  9334  003D3A  0E81               	movlw	129
  9335  003D3C  6E52               	movwf	??_floorf^0,c
  9336  003D3E  0EFF               	movlw	255
  9337  003D40  6E53               	movwf	(??_floorf+1)^0,c
  9338  003D42  C066  F054         	movff	floorf@u,??_floorf+2
  9339  003D46  C067  F055         	movff	floorf@u+1,??_floorf+3
  9340  003D4A  C068  F056         	movff	floorf@u+2,??_floorf+4
  9341  003D4E  C069  F057         	movff	floorf@u+3,??_floorf+5
  9342  003D52  0E18               	movlw	24
  9343  003D54  EFB1  F01E         	goto	u5380
  9344  003D58                     u5385:
  9345  003D58  90D8               	bcf	status,0,c
  9346  003D5A  3257               	rrcf	(??_floorf+5)^0,f,c
  9347  003D5C  3256               	rrcf	(??_floorf+4)^0,f,c
  9348  003D5E  3255               	rrcf	(??_floorf+3)^0,f,c
  9349  003D60  3254               	rrcf	(??_floorf+2)^0,f,c
  9350  003D62                     u5380:
  9351  003D62  2EE8               	decfsz	wreg,f,c
  9352  003D64  EFAC  F01E         	goto	u5385
  9353  003D68  5054               	movf	(??_floorf+2)^0,w,c
  9354  003D6A  2452               	addwf	??_floorf^0,w,c
  9355  003D6C  0100               	movlb	0	; () banked
  9356  003D6E  6F64               	movwf	floorf@e& (0+255),b
  9357  003D70  0E00               	movlw	0
  9358  003D72  2053               	addwfc	(??_floorf+1)^0,w,c
  9359  003D74  6F65               	movwf	(floorf@e+1)& (0+255),b
  9360  003D76  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  9361  003D78  EFC7  F01E         	goto	u5391
  9362  003D7C  5165               	movf	(floorf@e+1)& (0+255),w,b
  9363  003D7E  E109               	bnz	u5390
  9364  003D80  0E17               	movlw	23
  9365  003D82  5D64               	subwf	floorf@e& (0+255),w,b
  9366  003D84  A0D8               	btfss	status,0,c
  9367  003D86  EFC7  F01E         	goto	u5391
  9368  003D8A  EFC9  F01E         	goto	u5390
  9369  003D8E                     u5391:
  9370  003D8E  EFD3  F01E         	goto	l4745
  9371  003D92                     u5390:
  9372  003D92                     l4743:
  9373                           
  9374                           ; BSR set to: 0
  9375  003D92  C04E  F04E         	movff	floorf@x,?_floorf
  9376  003D96  C04F  F04F         	movff	floorf@x+1,?_floorf+1
  9377  003D9A  C050  F050         	movff	floorf@x+2,?_floorf+2
  9378  003D9E  C051  F051         	movff	floorf@x+3,?_floorf+3
  9379  003DA2  EF97  F01F         	goto	l1431
  9380  003DA6                     l4745:
  9381                           
  9382                           ; BSR set to: 0
  9383  003DA6  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  9384  003DA8  EFD8  F01E         	goto	u5401
  9385  003DAC  EFDA  F01E         	goto	u5400
  9386  003DB0                     u5401:
  9387  003DB0  EF4B  F01F         	goto	l4755
  9388  003DB4                     u5400:
  9389  003DB4                     
  9390                           ; BSR set to: 0
  9391  003DB4  C064  F052         	movff	floorf@e,??_floorf
  9392  003DB8  0EFF               	movlw	255
  9393  003DBA  6E53               	movwf	(??_floorf+1)^0,c
  9394  003DBC  0EFF               	movlw	255
  9395  003DBE  6E54               	movwf	(??_floorf+2)^0,c
  9396  003DC0  0E7F               	movlw	127
  9397  003DC2  6E55               	movwf	(??_floorf+3)^0,c
  9398  003DC4  0E00               	movlw	0
  9399  003DC6  6E56               	movwf	(??_floorf+4)^0,c
  9400  003DC8                     u5415:
  9401  003DC8  6652               	tstfsz	??_floorf^0,c
  9402  003DCA  EFE9  F01E         	goto	u5416
  9403  003DCE  EFF1  F01E         	goto	u5417
  9404  003DD2                     u5416:
  9405  003DD2  3456               	rlcf	(??_floorf+4)^0,w,c
  9406  003DD4  3256               	rrcf	(??_floorf+4)^0,f,c
  9407  003DD6  3255               	rrcf	(??_floorf+3)^0,f,c
  9408  003DD8  3254               	rrcf	(??_floorf+2)^0,f,c
  9409  003DDA  3253               	rrcf	(??_floorf+1)^0,f,c
  9410  003DDC  2E52               	decfsz	??_floorf^0,f,c
  9411  003DDE  EFE4  F01E         	goto	u5415
  9412  003DE2                     u5417:
  9413  003DE2  C053  F060         	movff	??_floorf+1,floorf@m
  9414  003DE6  C054  F061         	movff	??_floorf+2,floorf@m+1
  9415  003DEA  C055  F062         	movff	??_floorf+3,floorf@m+2
  9416  003DEE  C056  F063         	movff	??_floorf+4,floorf@m+3
  9417  003DF2  0100               	movlb	0	; () banked
  9418  003DF4  5160               	movf	floorf@m& (0+255),w,b
  9419  003DF6  1566               	andwf	floorf@u& (0+255),w,b
  9420  003DF8  6E52               	movwf	??_floorf^0,c
  9421  003DFA  5161               	movf	(floorf@m+1)& (0+255),w,b
  9422  003DFC  1567               	andwf	(floorf@u+1)& (0+255),w,b
  9423  003DFE  6E53               	movwf	(??_floorf+1)^0,c
  9424  003E00  5162               	movf	(floorf@m+2)& (0+255),w,b
  9425  003E02  1568               	andwf	(floorf@u+2)& (0+255),w,b
  9426  003E04  6E54               	movwf	(??_floorf+2)^0,c
  9427  003E06  5163               	movf	(floorf@m+3)& (0+255),w,b
  9428  003E08  1569               	andwf	(floorf@u+3)& (0+255),w,b
  9429  003E0A  6E55               	movwf	(??_floorf+3)^0,c
  9430  003E0C  5052               	movf	??_floorf^0,w,c
  9431  003E0E  1053               	iorwf	(??_floorf+1)^0,w,c
  9432  003E10  1054               	iorwf	(??_floorf+2)^0,w,c
  9433  003E12  1055               	iorwf	(??_floorf+3)^0,w,c
  9434  003E14  A4D8               	btfss	status,2,c
  9435  003E16  EF0F  F01F         	goto	u5421
  9436  003E1A  EF11  F01F         	goto	u5420
  9437  003E1E                     u5421:
  9438  003E1E  EF13  F01F         	goto	l4751
  9439  003E22                     u5420:
  9440  003E22  EFC9  F01E         	goto	l4743
  9441  003E26                     l4751:
  9442                           
  9443                           ; BSR set to: 0
  9444  003E26  C066  F052         	movff	floorf@u,??_floorf
  9445  003E2A  C067  F053         	movff	floorf@u+1,??_floorf+1
  9446  003E2E  C068  F054         	movff	floorf@u+2,??_floorf+2
  9447  003E32  C069  F055         	movff	floorf@u+3,??_floorf+3
  9448  003E36  0E20               	movlw	32
  9449  003E38  EF23  F01F         	goto	u5430
  9450  003E3C                     u5435:
  9451  003E3C  90D8               	bcf	status,0,c
  9452  003E3E  3255               	rrcf	(??_floorf+3)^0,f,c
  9453  003E40  3254               	rrcf	(??_floorf+2)^0,f,c
  9454  003E42  3253               	rrcf	(??_floorf+1)^0,f,c
  9455  003E44  3252               	rrcf	??_floorf^0,f,c
  9456  003E46                     u5430:
  9457  003E46  2EE8               	decfsz	wreg,f,c
  9458  003E48  EF1E  F01F         	goto	u5435
  9459  003E4C  5052               	movf	??_floorf^0,w,c
  9460  003E4E  1053               	iorwf	(??_floorf+1)^0,w,c
  9461  003E50  1054               	iorwf	(??_floorf+2)^0,w,c
  9462  003E52  1055               	iorwf	(??_floorf+3)^0,w,c
  9463  003E54  B4D8               	btfsc	status,2,c
  9464  003E56  EF2F  F01F         	goto	u5441
  9465  003E5A  EF31  F01F         	goto	u5440
  9466  003E5E                     u5441:
  9467  003E5E  EF39  F01F         	goto	l1434
  9468  003E62                     u5440:
  9469  003E62                     
  9470                           ; BSR set to: 0
  9471  003E62  5160               	movf	floorf@m& (0+255),w,b
  9472  003E64  2766               	addwf	floorf@u& (0+255),f,b
  9473  003E66  5161               	movf	(floorf@m+1)& (0+255),w,b
  9474  003E68  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  9475  003E6A  5162               	movf	(floorf@m+2)& (0+255),w,b
  9476  003E6C  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  9477  003E6E  5163               	movf	(floorf@m+3)& (0+255),w,b
  9478  003E70  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  9479  003E72                     l1434:
  9480                           
  9481                           ; BSR set to: 0
  9482  003E72  1D60               	comf	floorf@m& (0+255),w,b
  9483  003E74  6E52               	movwf	??_floorf^0,c
  9484  003E76  1D61               	comf	(floorf@m+1)& (0+255),w,b
  9485  003E78  6E53               	movwf	(??_floorf+1)^0,c
  9486  003E7A  1D62               	comf	(floorf@m+2)& (0+255),w,b
  9487  003E7C  6E54               	movwf	(??_floorf+2)^0,c
  9488  003E7E  1D63               	comf	(floorf@m+3)& (0+255),w,b
  9489  003E80  6E55               	movwf	(??_floorf+3)^0,c
  9490  003E82  5052               	movf	??_floorf^0,w,c
  9491  003E84  1766               	andwf	floorf@u& (0+255),f,b
  9492  003E86  5053               	movf	(??_floorf+1)^0,w,c
  9493  003E88  1767               	andwf	(floorf@u+1)& (0+255),f,b
  9494  003E8A  5054               	movf	(??_floorf+2)^0,w,c
  9495  003E8C  1768               	andwf	(floorf@u+2)& (0+255),f,b
  9496  003E8E  5055               	movf	(??_floorf+3)^0,w,c
  9497  003E90  1769               	andwf	(floorf@u+3)& (0+255),f,b
  9498  003E92  EF8F  F01F         	goto	l4763
  9499  003E96                     l4755:
  9500                           
  9501                           ; BSR set to: 0
  9502  003E96  C066  F052         	movff	floorf@u,??_floorf
  9503  003E9A  C067  F053         	movff	floorf@u+1,??_floorf+1
  9504  003E9E  C068  F054         	movff	floorf@u+2,??_floorf+2
  9505  003EA2  C069  F055         	movff	floorf@u+3,??_floorf+3
  9506  003EA6  0E20               	movlw	32
  9507  003EA8  EF5B  F01F         	goto	u5450
  9508  003EAC                     u5455:
  9509  003EAC  90D8               	bcf	status,0,c
  9510  003EAE  3255               	rrcf	(??_floorf+3)^0,f,c
  9511  003EB0  3254               	rrcf	(??_floorf+2)^0,f,c
  9512  003EB2  3253               	rrcf	(??_floorf+1)^0,f,c
  9513  003EB4  3252               	rrcf	??_floorf^0,f,c
  9514  003EB6                     u5450:
  9515  003EB6  2EE8               	decfsz	wreg,f,c
  9516  003EB8  EF56  F01F         	goto	u5455
  9517  003EBC  5052               	movf	??_floorf^0,w,c
  9518  003EBE  1053               	iorwf	(??_floorf+1)^0,w,c
  9519  003EC0  1054               	iorwf	(??_floorf+2)^0,w,c
  9520  003EC2  1055               	iorwf	(??_floorf+3)^0,w,c
  9521  003EC4  A4D8               	btfss	status,2,c
  9522  003EC6  EF67  F01F         	goto	u5461
  9523  003ECA  EF69  F01F         	goto	u5460
  9524  003ECE                     u5461:
  9525  003ECE  EF73  F01F         	goto	l4759
  9526  003ED2                     u5460:
  9527  003ED2                     
  9528                           ; BSR set to: 0
  9529  003ED2  0E00               	movlw	0
  9530  003ED4  6F66               	movwf	floorf@u& (0+255),b
  9531  003ED6  0E00               	movlw	0
  9532  003ED8  6F67               	movwf	(floorf@u+1)& (0+255),b
  9533  003EDA  0E00               	movlw	0
  9534  003EDC  6F68               	movwf	(floorf@u+2)& (0+255),b
  9535  003EDE  0E00               	movlw	0
  9536  003EE0  6F69               	movwf	(floorf@u+3)& (0+255),b
  9537  003EE2  EF8F  F01F         	goto	l4763
  9538  003EE6                     l4759:
  9539                           
  9540                           ; BSR set to: 0
  9541  003EE6  90D8               	bcf	status,0,c
  9542  003EE8  3566               	rlcf	floorf@u& (0+255),w,b
  9543  003EEA  6E52               	movwf	??_floorf^0,c
  9544  003EEC  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  9545  003EEE  6E53               	movwf	(??_floorf+1)^0,c
  9546  003EF0  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  9547  003EF2  6E54               	movwf	(??_floorf+2)^0,c
  9548  003EF4  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  9549  003EF6  6E55               	movwf	(??_floorf+3)^0,c
  9550  003EF8  5052               	movf	??_floorf^0,w,c
  9551  003EFA  1053               	iorwf	(??_floorf+1)^0,w,c
  9552  003EFC  1054               	iorwf	(??_floorf+2)^0,w,c
  9553  003EFE  1055               	iorwf	(??_floorf+3)^0,w,c
  9554  003F00  B4D8               	btfsc	status,2,c
  9555  003F02  EF85  F01F         	goto	u5471
  9556  003F06  EF87  F01F         	goto	u5470
  9557  003F0A                     u5471:
  9558  003F0A  EF8F  F01F         	goto	l4763
  9559  003F0E                     u5470:
  9560  003F0E                     
  9561                           ; BSR set to: 0
  9562  003F0E  0E00               	movlw	0
  9563  003F10  6F66               	movwf	floorf@u& (0+255),b
  9564  003F12  0E00               	movlw	0
  9565  003F14  6F67               	movwf	(floorf@u+1)& (0+255),b
  9566  003F16  0E80               	movlw	128
  9567  003F18  6F68               	movwf	(floorf@u+2)& (0+255),b
  9568  003F1A  0EBF               	movlw	191
  9569  003F1C  6F69               	movwf	(floorf@u+3)& (0+255),b
  9570  003F1E                     l4763:
  9571                           
  9572                           ; BSR set to: 0
  9573  003F1E  C066  F04E         	movff	floorf@u,?_floorf
  9574  003F22  C067  F04F         	movff	floorf@u+1,?_floorf+1
  9575  003F26  C068  F050         	movff	floorf@u+2,?_floorf+2
  9576  003F2A  C069  F051         	movff	floorf@u+3,?_floorf+3
  9577  003F2E                     l1431:
  9578                           
  9579                           ; BSR set to: 0
  9580  003F2E  0012               	return		;funcret
  9581  003F30                     __end_of_floorf:
  9582                           	callstack 0
  9583                           
  9584 ;; *************** function ___fpclassifyf *****************
  9585 ;; Defined at:
  9586 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
  9587 ;; Parameters:    Size  Location     Type
  9588 ;;  x               4    0[COMRAM] float 
  9589 ;; Auto vars:     Size  Location     Type
  9590 ;;  u               4   10[COMRAM] struct .
  9591 ;;  e               2    8[COMRAM] int 
  9592 ;; Return value:  Size  Location     Type
  9593 ;;                  2    0[COMRAM] int 
  9594 ;; Registers used:
  9595 ;;		wreg, status,2, status,0
  9596 ;; Tracked objects:
  9597 ;;		On entry : 0/0
  9598 ;;		On exit  : 0/0
  9599 ;;		Unchanged: 0/0
  9600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9601 ;;      Params:         4       0       0       0       0       0       0
  9602 ;;      Locals:         6       0       0       0       0       0       0
  9603 ;;      Temps:          4       0       0       0       0       0       0
  9604 ;;      Totals:        14       0       0       0       0       0       0
  9605 ;;Total ram usage:       14 bytes
  9606 ;; Hardware stack levels used:    1
  9607 ;; Hardware stack levels required when called:    1
  9608 ;; This function calls:
  9609 ;;		Nothing
  9610 ;; This function is called by:
  9611 ;;		_efgtoa
  9612 ;; This function uses a non-reentrant model
  9613 ;;
  9614                           
  9615                           	psect	text28
  9616  004BD0                     __ptext28:
  9617                           	callstack 0
  9618  004BD0                     ___fpclassifyf:
  9619                           	callstack 23
  9620  004BD0  C193  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  9621  004BD4  C194  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  9622  004BD8  C195  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  9623  004BDC  C196  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  9624  004BE0  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  9625  004BE4  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  9626  004BE8  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  9627  004BEC  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  9628  004BF0  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  9629  004BF4  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9630  004BF8  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9631  004BFC  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9632  004C00  0E18               	movlw	24
  9633  004C02  EF08  F026         	goto	u5260
  9634  004C06                     u5265:
  9635  004C06  90D8               	bcf	status,0,c
  9636  004C08  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  9637  004C0A  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  9638  004C0C  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  9639  004C0E  3205               	rrcf	??___fpclassifyf^0,f,c
  9640  004C10                     u5260:
  9641  004C10  2EE8               	decfsz	wreg,f,c
  9642  004C12  EF03  F026         	goto	u5265
  9643  004C16  5005               	movf	??___fpclassifyf^0,w,c
  9644  004C18  6E09               	movwf	___fpclassifyf@e^0,c
  9645  004C1A  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  9646  004C1C  5009               	movf	___fpclassifyf@e^0,w,c
  9647  004C1E  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9648  004C20  A4D8               	btfss	status,2,c
  9649  004C22  EF15  F026         	goto	u5271
  9650  004C26  EF17  F026         	goto	u5270
  9651  004C2A                     u5271:
  9652  004C2A  EF37  F026         	goto	l4715
  9653  004C2E                     u5270:
  9654  004C2E  90D8               	bcf	status,0,c
  9655  004C30  340B               	rlcf	___fpclassifyf@u^0,w,c
  9656  004C32  6E05               	movwf	??___fpclassifyf^0,c
  9657  004C34  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  9658  004C36  6E06               	movwf	(??___fpclassifyf+1)^0,c
  9659  004C38  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  9660  004C3A  6E07               	movwf	(??___fpclassifyf+2)^0,c
  9661  004C3C  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  9662  004C3E  6E08               	movwf	(??___fpclassifyf+3)^0,c
  9663  004C40  5005               	movf	??___fpclassifyf^0,w,c
  9664  004C42  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  9665  004C44  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  9666  004C46  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  9667  004C48  A4D8               	btfss	status,2,c
  9668  004C4A  EF29  F026         	goto	u5281
  9669  004C4E  EF2B  F026         	goto	u5280
  9670  004C52                     u5281:
  9671  004C52  EF31  F026         	goto	l4711
  9672  004C56                     u5280:
  9673  004C56  0E00               	movlw	0
  9674  004C58  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9675  004C5A  0E02               	movlw	2
  9676  004C5C  6E01               	movwf	?___fpclassifyf^0,c
  9677  004C5E  EF66  F026         	goto	l1386
  9678  004C62                     l4711:
  9679  004C62  0E00               	movlw	0
  9680  004C64  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9681  004C66  0E03               	movlw	3
  9682  004C68  6E01               	movwf	?___fpclassifyf^0,c
  9683  004C6A  EF66  F026         	goto	l1386
  9684  004C6E                     l4715:
  9685  004C6E  2809               	incf	___fpclassifyf@e^0,w,c
  9686  004C70  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9687  004C72  A4D8               	btfss	status,2,c
  9688  004C74  EF3E  F026         	goto	u5291
  9689  004C78  EF40  F026         	goto	u5290
  9690  004C7C                     u5291:
  9691  004C7C  EF62  F026         	goto	l4721
  9692  004C80                     u5290:
  9693  004C80  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  9694  004C84  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9695  004C88  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9696  004C8C  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9697  004C90  0E09               	movlw	9
  9698  004C92                     u5305:
  9699  004C92  90D8               	bcf	status,0,c
  9700  004C94  3605               	rlcf	??___fpclassifyf^0,f,c
  9701  004C96  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  9702  004C98  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  9703  004C9A  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  9704  004C9C  2EE8               	decfsz	wreg,f,c
  9705  004C9E  EF49  F026         	goto	u5305
  9706  004CA2  5005               	movf	??___fpclassifyf^0,w,c
  9707  004CA4  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  9708  004CA6  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  9709  004CA8  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  9710  004CAA  B4D8               	btfsc	status,2,c
  9711  004CAC  EF5A  F026         	goto	u5311
  9712  004CB0  EF5D  F026         	goto	u5310
  9713  004CB4                     u5311:
  9714  004CB4  0E01               	movlw	1
  9715  004CB6  EF5E  F026         	goto	u5320
  9716  004CBA                     u5310:
  9717  004CBA  0E00               	movlw	0
  9718  004CBC                     u5320:
  9719  004CBC  6E01               	movwf	?___fpclassifyf^0,c
  9720  004CBE  6A02               	clrf	(?___fpclassifyf+1)^0,c
  9721  004CC0  EF66  F026         	goto	l1386
  9722  004CC4                     l4721:
  9723  004CC4  0E00               	movlw	0
  9724  004CC6  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9725  004CC8  0E04               	movlw	4
  9726  004CCA  6E01               	movwf	?___fpclassifyf^0,c
  9727  004CCC                     l1386:
  9728  004CCC  0012               	return		;funcret
  9729  004CCE                     __end_of___fpclassifyf:
  9730                           	callstack 0
  9731                           
  9732 ;; *************** function ___fltol *****************
  9733 ;; Defined at:
  9734 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
  9735 ;; Parameters:    Size  Location     Type
  9736 ;;  f1              4   77[COMRAM] int 
  9737 ;; Auto vars:     Size  Location     Type
  9738 ;;  exp1            1   86[COMRAM] unsigned char 
  9739 ;;  sign1           1   85[COMRAM] unsigned char 
  9740 ;; Return value:  Size  Location     Type
  9741 ;;                  4   77[COMRAM] long 
  9742 ;; Registers used:
  9743 ;;		wreg, status,2, status,0
  9744 ;; Tracked objects:
  9745 ;;		On entry : 0/0
  9746 ;;		On exit  : 0/0
  9747 ;;		Unchanged: 0/0
  9748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9749 ;;      Params:         4       0       0       0       0       0       0
  9750 ;;      Locals:         2       0       0       0       0       0       0
  9751 ;;      Temps:          4       0       0       0       0       0       0
  9752 ;;      Totals:        10       0       0       0       0       0       0
  9753 ;;Total ram usage:       10 bytes
  9754 ;; Hardware stack levels used:    1
  9755 ;; Hardware stack levels required when called:    1
  9756 ;; This function calls:
  9757 ;;		Nothing
  9758 ;; This function is called by:
  9759 ;;		_scanAdcConversion
  9760 ;;		_PWM1_setDC
  9761 ;;		_PWM2_setDC
  9762 ;;		_speedControl
  9763 ;;		_efgtoa
  9764 ;; This function uses a non-reentrant model
  9765 ;;
  9766                           
  9767                           	psect	text29
  9768  0049C6                     __ptext29:
  9769                           	callstack 0
  9770  0049C6                     ___fltol:
  9771                           	callstack 25
  9772  0049C6  3450               	rlcf	(___fltol@f1+2)^0,w,c
  9773  0049C8  3451               	rlcf	(___fltol@f1+3)^0,w,c
  9774  0049CA  6E57               	movwf	___fltol@exp1^0,c
  9775  0049CC  5057               	movf	___fltol@exp1^0,w,c
  9776  0049CE  A4D8               	btfss	status,2,c
  9777  0049D0  EFEC  F024         	goto	u5141
  9778  0049D4  EFEE  F024         	goto	u5140
  9779  0049D8                     u5141:
  9780  0049D8  EFF8  F024         	goto	l4639
  9781  0049DC                     u5140:
  9782  0049DC                     l4635:
  9783  0049DC  0E00               	movlw	0
  9784  0049DE  6E4E               	movwf	?___fltol^0,c
  9785  0049E0  0E00               	movlw	0
  9786  0049E2  6E4F               	movwf	(?___fltol+1)^0,c
  9787  0049E4  0E00               	movlw	0
  9788  0049E6  6E50               	movwf	(?___fltol+2)^0,c
  9789  0049E8  0E00               	movlw	0
  9790  0049EA  6E51               	movwf	(?___fltol+3)^0,c
  9791  0049EC  EF65  F025         	goto	l781
  9792  0049F0                     l4639:
  9793  0049F0  C04E  F052         	movff	___fltol@f1,??___fltol
  9794  0049F4  C04F  F053         	movff	___fltol@f1+1,??___fltol+1
  9795  0049F8  C050  F054         	movff	___fltol@f1+2,??___fltol+2
  9796  0049FC  C051  F055         	movff	___fltol@f1+3,??___fltol+3
  9797  004A00  0E20               	movlw	32
  9798  004A02  EF08  F025         	goto	u5150
  9799  004A06                     u5155:
  9800  004A06  90D8               	bcf	status,0,c
  9801  004A08  3255               	rrcf	(??___fltol+3)^0,f,c
  9802  004A0A  3254               	rrcf	(??___fltol+2)^0,f,c
  9803  004A0C  3253               	rrcf	(??___fltol+1)^0,f,c
  9804  004A0E  3252               	rrcf	??___fltol^0,f,c
  9805  004A10                     u5150:
  9806  004A10  2EE8               	decfsz	wreg,f,c
  9807  004A12  EF03  F025         	goto	u5155
  9808  004A16  5052               	movf	??___fltol^0,w,c
  9809  004A18  6E56               	movwf	___fltol@sign1^0,c
  9810  004A1A  8E50               	bsf	(___fltol@f1+2)^0,7,c
  9811  004A1C  0EFF               	movlw	255
  9812  004A1E  164E               	andwf	___fltol@f1^0,f,c
  9813  004A20  0EFF               	movlw	255
  9814  004A22  164F               	andwf	(___fltol@f1+1)^0,f,c
  9815  004A24  0EFF               	movlw	255
  9816  004A26  1650               	andwf	(___fltol@f1+2)^0,f,c
  9817  004A28  0E00               	movlw	0
  9818  004A2A  1651               	andwf	(___fltol@f1+3)^0,f,c
  9819  004A2C  0E96               	movlw	150
  9820  004A2E  5E57               	subwf	___fltol@exp1^0,f,c
  9821  004A30  BE57               	btfsc	___fltol@exp1^0,7,c
  9822  004A32  EF1F  F025         	goto	u5160
  9823  004A36  EF1D  F025         	goto	u5161
  9824  004A3A                     u5161:
  9825  004A3A  EF35  F025         	goto	l4659
  9826  004A3E                     u5160:
  9827  004A3E  5057               	movf	___fltol@exp1^0,w,c
  9828  004A40  0A80               	xorlw	128
  9829  004A42  0F97               	addlw	151
  9830  004A44  B0D8               	btfsc	status,0,c
  9831  004A46  EF27  F025         	goto	u5171
  9832  004A4A  EF29  F025         	goto	u5170
  9833  004A4E                     u5171:
  9834  004A4E  EF2B  F025         	goto	l4655
  9835  004A52                     u5170:
  9836  004A52  EFEE  F024         	goto	l4635
  9837  004A56                     l4655:
  9838  004A56  90D8               	bcf	status,0,c
  9839  004A58  3251               	rrcf	(___fltol@f1+3)^0,f,c
  9840  004A5A  3250               	rrcf	(___fltol@f1+2)^0,f,c
  9841  004A5C  324F               	rrcf	(___fltol@f1+1)^0,f,c
  9842  004A5E  324E               	rrcf	___fltol@f1^0,f,c
  9843  004A60  3E57               	incfsz	___fltol@exp1^0,f,c
  9844  004A62  EF2B  F025         	goto	l4655
  9845  004A66  EF4D  F025         	goto	l4669
  9846  004A6A                     l4659:
  9847  004A6A  0E1F               	movlw	31
  9848  004A6C  6457               	cpfsgt	___fltol@exp1^0,c
  9849  004A6E  EF3B  F025         	goto	u5181
  9850  004A72  EF3D  F025         	goto	u5180
  9851  004A76                     u5181:
  9852  004A76  EF45  F025         	goto	l4667
  9853  004A7A                     u5180:
  9854  004A7A  EFEE  F024         	goto	l4635
  9855  004A7E                     l4665:
  9856  004A7E  90D8               	bcf	status,0,c
  9857  004A80  364E               	rlcf	___fltol@f1^0,f,c
  9858  004A82  364F               	rlcf	(___fltol@f1+1)^0,f,c
  9859  004A84  3650               	rlcf	(___fltol@f1+2)^0,f,c
  9860  004A86  3651               	rlcf	(___fltol@f1+3)^0,f,c
  9861  004A88  0657               	decf	___fltol@exp1^0,f,c
  9862  004A8A                     l4667:
  9863  004A8A  5057               	movf	___fltol@exp1^0,w,c
  9864  004A8C  A4D8               	btfss	status,2,c
  9865  004A8E  EF4B  F025         	goto	u5191
  9866  004A92  EF4D  F025         	goto	u5190
  9867  004A96                     u5191:
  9868  004A96  EF3F  F025         	goto	l4665
  9869  004A9A                     u5190:
  9870  004A9A                     l4669:
  9871  004A9A  5056               	movf	___fltol@sign1^0,w,c
  9872  004A9C  B4D8               	btfsc	status,2,c
  9873  004A9E  EF53  F025         	goto	u5201
  9874  004AA2  EF55  F025         	goto	u5200
  9875  004AA6                     u5201:
  9876  004AA6  EF5D  F025         	goto	l4673
  9877  004AAA                     u5200:
  9878  004AAA  1E51               	comf	(___fltol@f1+3)^0,f,c
  9879  004AAC  1E50               	comf	(___fltol@f1+2)^0,f,c
  9880  004AAE  1E4F               	comf	(___fltol@f1+1)^0,f,c
  9881  004AB0  6C4E               	negf	___fltol@f1^0,c
  9882  004AB2  0E00               	movlw	0
  9883  004AB4  224F               	addwfc	(___fltol@f1+1)^0,f,c
  9884  004AB6  2250               	addwfc	(___fltol@f1+2)^0,f,c
  9885  004AB8  2251               	addwfc	(___fltol@f1+3)^0,f,c
  9886  004ABA                     l4673:
  9887  004ABA  C04E  F04E         	movff	___fltol@f1,?___fltol
  9888  004ABE  C04F  F04F         	movff	___fltol@f1+1,?___fltol+1
  9889  004AC2  C050  F050         	movff	___fltol@f1+2,?___fltol+2
  9890  004AC6  C051  F051         	movff	___fltol@f1+3,?___fltol+3
  9891  004ACA                     l781:
  9892  004ACA  0012               	return		;funcret
  9893  004ACC                     __end_of___fltol:
  9894                           	callstack 0
  9895                           
  9896 ;; *************** function ___flsub *****************
  9897 ;; Defined at:
  9898 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  9899 ;; Parameters:    Size  Location     Type
  9900 ;;  b               4   68[COMRAM] long 
  9901 ;;  a               4   72[COMRAM] long 
  9902 ;; Auto vars:     Size  Location     Type
  9903 ;;		None
  9904 ;; Return value:  Size  Location     Type
  9905 ;;                  4   68[COMRAM] long 
  9906 ;; Registers used:
  9907 ;;		wreg, status,2, status,0, cstack
  9908 ;; Tracked objects:
  9909 ;;		On entry : 0/0
  9910 ;;		On exit  : 0/0
  9911 ;;		Unchanged: 0/0
  9912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9913 ;;      Params:         8       0       0       0       0       0       0
  9914 ;;      Locals:         0       0       0       0       0       0       0
  9915 ;;      Temps:          0       0       0       0       0       0       0
  9916 ;;      Totals:         8       0       0       0       0       0       0
  9917 ;;Total ram usage:        8 bytes
  9918 ;; Hardware stack levels used:    1
  9919 ;; Hardware stack levels required when called:    2
  9920 ;; This function calls:
  9921 ;;		___fladd
  9922 ;; This function is called by:
  9923 ;;		_stateMachine
  9924 ;;		_efgtoa
  9925 ;; This function uses a non-reentrant model
  9926 ;;
  9927                           
  9928                           	psect	text30
  9929  0058AE                     __ptext30:
  9930                           	callstack 0
  9931  0058AE                     ___flsub:
  9932                           	callstack 22
  9933  0058AE  0E00               	movlw	0
  9934  0058B0  1A49               	xorwf	___flsub@a^0,f,c
  9935  0058B2  0E00               	movlw	0
  9936  0058B4  1A4A               	xorwf	(___flsub@a+1)^0,f,c
  9937  0058B6  0E00               	movlw	0
  9938  0058B8  1A4B               	xorwf	(___flsub@a+2)^0,f,c
  9939  0058BA  0E80               	movlw	128
  9940  0058BC  1A4C               	xorwf	(___flsub@a+3)^0,f,c
  9941  0058BE  C045  F035         	movff	___flsub@b,___fladd@b
  9942  0058C2  C046  F036         	movff	___flsub@b+1,___fladd@b+1
  9943  0058C6  C047  F037         	movff	___flsub@b+2,___fladd@b+2
  9944  0058CA  C048  F038         	movff	___flsub@b+3,___fladd@b+3
  9945  0058CE  C049  F039         	movff	___flsub@a,___fladd@a
  9946  0058D2  C04A  F03A         	movff	___flsub@a+1,___fladd@a+1
  9947  0058D6  C04B  F03B         	movff	___flsub@a+2,___fladd@a+2
  9948  0058DA  C04C  F03C         	movff	___flsub@a+3,___fladd@a+3
  9949  0058DE  EC66  F015         	call	___fladd	;wreg free
  9950  0058E2  C035  F045         	movff	?___fladd,?___flsub
  9951  0058E6  C036  F046         	movff	?___fladd+1,?___flsub+1
  9952  0058EA  C037  F047         	movff	?___fladd+2,?___flsub+2
  9953  0058EE  C038  F048         	movff	?___fladd+3,?___flsub+3
  9954  0058F2  0012               	return		;funcret
  9955  0058F4                     __end_of___flsub:
  9956                           	callstack 0
  9957                           
  9958 ;; *************** function ___fladd *****************
  9959 ;; Defined at:
  9960 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  9961 ;; Parameters:    Size  Location     Type
  9962 ;;  b               4   52[COMRAM] long 
  9963 ;;  a               4   56[COMRAM] long 
  9964 ;; Auto vars:     Size  Location     Type
  9965 ;;  grs             1   67[COMRAM] unsigned char 
  9966 ;;  bexp            1   66[COMRAM] unsigned char 
  9967 ;;  aexp            1   65[COMRAM] unsigned char 
  9968 ;;  signs           1   64[COMRAM] unsigned char 
  9969 ;; Return value:  Size  Location     Type
  9970 ;;                  4   52[COMRAM] unsigned char 
  9971 ;; Registers used:
  9972 ;;		wreg, status,2, status,0
  9973 ;; Tracked objects:
  9974 ;;		On entry : 0/0
  9975 ;;		On exit  : 0/0
  9976 ;;		Unchanged: 0/0
  9977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9978 ;;      Params:         8       0       0       0       0       0       0
  9979 ;;      Locals:         4       0       0       0       0       0       0
  9980 ;;      Temps:          4       0       0       0       0       0       0
  9981 ;;      Totals:        16       0       0       0       0       0       0
  9982 ;;Total ram usage:       16 bytes
  9983 ;; Hardware stack levels used:    1
  9984 ;; Hardware stack levels required when called:    1
  9985 ;; This function calls:
  9986 ;;		Nothing
  9987 ;; This function is called by:
  9988 ;;		_stateMachine
  9989 ;;		_speedControl
  9990 ;;		___flsub
  9991 ;;		_efgtoa
  9992 ;; This function uses a non-reentrant model
  9993 ;;
  9994                           
  9995                           	psect	text31
  9996  002ACC                     __ptext31:
  9997                           	callstack 0
  9998  002ACC                     ___fladd:
  9999                           	callstack 25
 10000  002ACC  5038               	movf	(___fladd@b+3)^0,w,c
 10001  002ACE  0B80               	andlw	128
 10002  002AD0  6E41               	movwf	___fladd@signs^0,c
 10003  002AD2  5038               	movf	(___fladd@b+3)^0,w,c
 10004  002AD4  2438               	addwf	(___fladd@b+3)^0,w,c
 10005  002AD6  6E43               	movwf	___fladd@bexp^0,c
 10006  002AD8  AE37               	btfss	(___fladd@b+2)^0,7,c
 10007  002ADA  EF71  F015         	goto	u3951
 10008  002ADE  EF73  F015         	goto	u3950
 10009  002AE2                     u3951:
 10010  002AE2  EF74  F015         	goto	l3929
 10011  002AE6                     u3950:
 10012  002AE6  8043               	bsf	___fladd@bexp^0,0,c
 10013  002AE8                     l3929:
 10014  002AE8  5043               	movf	___fladd@bexp^0,w,c
 10015  002AEA  B4D8               	btfsc	status,2,c
 10016  002AEC  EF7A  F015         	goto	u3961
 10017  002AF0  EF7C  F015         	goto	u3960
 10018  002AF4                     u3961:
 10019  002AF4  EF91  F015         	goto	l3939
 10020  002AF8                     u3960:
 10021  002AF8  2843               	incf	___fladd@bexp^0,w,c
 10022  002AFA  A4D8               	btfss	status,2,c
 10023  002AFC  EF82  F015         	goto	u3971
 10024  002B00  EF84  F015         	goto	u3970
 10025  002B04                     u3971:
 10026  002B04  EF8C  F015         	goto	l3935
 10027  002B08                     u3970:
 10028  002B08  0E00               	movlw	0
 10029  002B0A  6E35               	movwf	___fladd@b^0,c
 10030  002B0C  0E00               	movlw	0
 10031  002B0E  6E36               	movwf	(___fladd@b+1)^0,c
 10032  002B10  0E00               	movlw	0
 10033  002B12  6E37               	movwf	(___fladd@b+2)^0,c
 10034  002B14  0E00               	movlw	0
 10035  002B16  6E38               	movwf	(___fladd@b+3)^0,c
 10036  002B18                     l3935:
 10037  002B18  8E37               	bsf	(___fladd@b+2)^0,7,c
 10038  002B1A  0E00               	movlw	0
 10039  002B1C  6E38               	movwf	(___fladd@b+3)^0,c
 10040  002B1E  EF99  F015         	goto	l3941
 10041  002B22                     l3939:
 10042  002B22  0E00               	movlw	0
 10043  002B24  6E35               	movwf	___fladd@b^0,c
 10044  002B26  0E00               	movlw	0
 10045  002B28  6E36               	movwf	(___fladd@b+1)^0,c
 10046  002B2A  0E00               	movlw	0
 10047  002B2C  6E37               	movwf	(___fladd@b+2)^0,c
 10048  002B2E  0E00               	movlw	0
 10049  002B30  6E38               	movwf	(___fladd@b+3)^0,c
 10050  002B32                     l3941:
 10051  002B32  503C               	movf	(___fladd@a+3)^0,w,c
 10052  002B34  0B80               	andlw	128
 10053  002B36  6E42               	movwf	___fladd@aexp^0,c
 10054  002B38  5041               	movf	___fladd@signs^0,w,c
 10055  002B3A  1842               	xorwf	___fladd@aexp^0,w,c
 10056  002B3C  B4D8               	btfsc	status,2,c
 10057  002B3E  EFA3  F015         	goto	u3981
 10058  002B42  EFA5  F015         	goto	u3980
 10059  002B46                     u3981:
 10060  002B46  EFA6  F015         	goto	l3947
 10061  002B4A                     u3980:
 10062  002B4A  8C41               	bsf	___fladd@signs^0,6,c
 10063  002B4C                     l3947:
 10064  002B4C  503C               	movf	(___fladd@a+3)^0,w,c
 10065  002B4E  243C               	addwf	(___fladd@a+3)^0,w,c
 10066  002B50  6E42               	movwf	___fladd@aexp^0,c
 10067  002B52  AE3B               	btfss	(___fladd@a+2)^0,7,c
 10068  002B54  EFAE  F015         	goto	u3991
 10069  002B58  EFB0  F015         	goto	u3990
 10070  002B5C                     u3991:
 10071  002B5C  EFB1  F015         	goto	l3953
 10072  002B60                     u3990:
 10073  002B60  8042               	bsf	___fladd@aexp^0,0,c
 10074  002B62                     l3953:
 10075  002B62  5042               	movf	___fladd@aexp^0,w,c
 10076  002B64  B4D8               	btfsc	status,2,c
 10077  002B66  EFB7  F015         	goto	u4001
 10078  002B6A  EFB9  F015         	goto	u4000
 10079  002B6E                     u4001:
 10080  002B6E  EFCE  F015         	goto	l3963
 10081  002B72                     u4000:
 10082  002B72  2842               	incf	___fladd@aexp^0,w,c
 10083  002B74  A4D8               	btfss	status,2,c
 10084  002B76  EFBF  F015         	goto	u4011
 10085  002B7A  EFC1  F015         	goto	u4010
 10086  002B7E                     u4011:
 10087  002B7E  EFC9  F015         	goto	l3959
 10088  002B82                     u4010:
 10089  002B82  0E00               	movlw	0
 10090  002B84  6E39               	movwf	___fladd@a^0,c
 10091  002B86  0E00               	movlw	0
 10092  002B88  6E3A               	movwf	(___fladd@a+1)^0,c
 10093  002B8A  0E00               	movlw	0
 10094  002B8C  6E3B               	movwf	(___fladd@a+2)^0,c
 10095  002B8E  0E00               	movlw	0
 10096  002B90  6E3C               	movwf	(___fladd@a+3)^0,c
 10097  002B92                     l3959:
 10098  002B92  8E3B               	bsf	(___fladd@a+2)^0,7,c
 10099  002B94  0E00               	movlw	0
 10100  002B96  6E3C               	movwf	(___fladd@a+3)^0,c
 10101  002B98  EFD6  F015         	goto	l3965
 10102  002B9C                     l3963:
 10103  002B9C  0E00               	movlw	0
 10104  002B9E  6E39               	movwf	___fladd@a^0,c
 10105  002BA0  0E00               	movlw	0
 10106  002BA2  6E3A               	movwf	(___fladd@a+1)^0,c
 10107  002BA4  0E00               	movlw	0
 10108  002BA6  6E3B               	movwf	(___fladd@a+2)^0,c
 10109  002BA8  0E00               	movlw	0
 10110  002BAA  6E3C               	movwf	(___fladd@a+3)^0,c
 10111  002BAC                     l3965:
 10112  002BAC  5043               	movf	___fladd@bexp^0,w,c
 10113  002BAE  5C42               	subwf	___fladd@aexp^0,w,c
 10114  002BB0  B0D8               	btfsc	status,0,c
 10115  002BB2  EFDD  F015         	goto	u4021
 10116  002BB6  EFDF  F015         	goto	u4020
 10117  002BBA                     u4021:
 10118  002BBA  EF06  F016         	goto	l4001
 10119  002BBE                     u4020:
 10120  002BBE  AC41               	btfss	___fladd@signs^0,6,c
 10121  002BC0  EFE4  F015         	goto	u4031
 10122  002BC4  EFE6  F015         	goto	u4030
 10123  002BC8                     u4031:
 10124  002BC8  EFE8  F015         	goto	l3971
 10125  002BCC                     u4030:
 10126  002BCC  0E80               	movlw	128
 10127  002BCE  1A41               	xorwf	___fladd@signs^0,f,c
 10128  002BD0                     l3971:
 10129  002BD0  C043  F044         	movff	___fladd@bexp,___fladd@grs
 10130  002BD4  C042  F043         	movff	___fladd@aexp,___fladd@bexp
 10131  002BD8  C044  F042         	movff	___fladd@grs,___fladd@aexp
 10132  002BDC  C035  F044         	movff	___fladd@b,___fladd@grs
 10133  002BE0  C039  F035         	movff	___fladd@a,___fladd@b
 10134  002BE4  C044  F039         	movff	___fladd@grs,___fladd@a
 10135  002BE8  C036  F044         	movff	___fladd@b+1,___fladd@grs
 10136  002BEC  C03A  F036         	movff	___fladd@a+1,___fladd@b+1
 10137  002BF0  C044  F03A         	movff	___fladd@grs,___fladd@a+1
 10138  002BF4  C037  F044         	movff	___fladd@b+2,___fladd@grs
 10139  002BF8  C03B  F037         	movff	___fladd@a+2,___fladd@b+2
 10140  002BFC  C044  F03B         	movff	___fladd@grs,___fladd@a+2
 10141  002C00  C038  F044         	movff	___fladd@b+3,___fladd@grs
 10142  002C04  C03C  F038         	movff	___fladd@a+3,___fladd@b+3
 10143  002C08  C044  F03C         	movff	___fladd@grs,___fladd@a+3
 10144  002C0C                     l4001:
 10145  002C0C  0E00               	movlw	0
 10146  002C0E  6E44               	movwf	___fladd@grs^0,c
 10147  002C10  5043               	movf	___fladd@bexp^0,w,c
 10148  002C12  C042  F03D         	movff	___fladd@aexp,??___fladd
 10149  002C16  6A3E               	clrf	(??___fladd+1)^0,c
 10150  002C18  5E3D               	subwf	??___fladd^0,f,c
 10151  002C1A  0E00               	movlw	0
 10152  002C1C  5A3E               	subwfb	(??___fladd+1)^0,f,c
 10153  002C1E  BE3E               	btfsc	(??___fladd+1)^0,7,c
 10154  002C20  EF1B  F016         	goto	u4041
 10155  002C24  503E               	movf	(??___fladd+1)^0,w,c
 10156  002C26  E109               	bnz	u4040
 10157  002C28  0E1A               	movlw	26
 10158  002C2A  5C3D               	subwf	??___fladd^0,w,c
 10159  002C2C  A0D8               	btfss	status,0,c
 10160  002C2E  EF1B  F016         	goto	u4041
 10161  002C32  EF1D  F016         	goto	u4040
 10162  002C36                     u4041:
 10163  002C36  EF54  F016         	goto	l1013
 10164  002C3A                     u4040:
 10165  002C3A  5035               	movf	___fladd@b^0,w,c
 10166  002C3C  1036               	iorwf	(___fladd@b+1)^0,w,c
 10167  002C3E  1037               	iorwf	(___fladd@b+2)^0,w,c
 10168  002C40  1038               	iorwf	(___fladd@b+3)^0,w,c
 10169  002C42  A4D8               	btfss	status,2,c
 10170  002C44  EF26  F016         	goto	u4051
 10171  002C48  EF29  F016         	goto	u4050
 10172  002C4C                     u4051:
 10173  002C4C  0E01               	movlw	1
 10174  002C4E  EF2A  F016         	goto	u4060
 10175  002C52                     u4050:
 10176  002C52  0E00               	movlw	0
 10177  002C54                     u4060:
 10178  002C54  6E44               	movwf	___fladd@grs^0,c
 10179  002C56  0E00               	movlw	0
 10180  002C58  6E35               	movwf	___fladd@b^0,c
 10181  002C5A  0E00               	movlw	0
 10182  002C5C  6E36               	movwf	(___fladd@b+1)^0,c
 10183  002C5E  0E00               	movlw	0
 10184  002C60  6E37               	movwf	(___fladd@b+2)^0,c
 10185  002C62  0E00               	movlw	0
 10186  002C64  6E38               	movwf	(___fladd@b+3)^0,c
 10187  002C66  C042  F043         	movff	___fladd@aexp,___fladd@bexp
 10188  002C6A  EF5D  F016         	goto	l1012
 10189  002C6E                     l1014:
 10190  002C6E  A044               	btfss	___fladd@grs^0,0,c
 10191  002C70  EF3C  F016         	goto	u4071
 10192  002C74  EF3E  F016         	goto	u4070
 10193  002C78                     u4071:
 10194  002C78  EF44  F016         	goto	l4013
 10195  002C7C                     u4070:
 10196  002C7C  90D8               	bcf	status,0,c
 10197  002C7E  3044               	rrcf	___fladd@grs^0,w,c
 10198  002C80  0901               	iorlw	1
 10199  002C82  6E44               	movwf	___fladd@grs^0,c
 10200  002C84  EF46  F016         	goto	l4015
 10201  002C88                     l4013:
 10202  002C88  90D8               	bcf	status,0,c
 10203  002C8A  3244               	rrcf	___fladd@grs^0,f,c
 10204  002C8C                     l4015:
 10205  002C8C  A035               	btfss	___fladd@b^0,0,c
 10206  002C8E  EF4B  F016         	goto	u4081
 10207  002C92  EF4D  F016         	goto	u4080
 10208  002C96                     u4081:
 10209  002C96  EF4E  F016         	goto	l4019
 10210  002C9A                     u4080:
 10211  002C9A  8E44               	bsf	___fladd@grs^0,7,c
 10212  002C9C                     l4019:
 10213  002C9C  3438               	rlcf	(___fladd@b+3)^0,w,c
 10214  002C9E  3238               	rrcf	(___fladd@b+3)^0,f,c
 10215  002CA0  3237               	rrcf	(___fladd@b+2)^0,f,c
 10216  002CA2  3236               	rrcf	(___fladd@b+1)^0,f,c
 10217  002CA4  3235               	rrcf	___fladd@b^0,f,c
 10218  002CA6  2A43               	incf	___fladd@bexp^0,f,c
 10219  002CA8                     l1013:
 10220  002CA8  5042               	movf	___fladd@aexp^0,w,c
 10221  002CAA  5C43               	subwf	___fladd@bexp^0,w,c
 10222  002CAC  A0D8               	btfss	status,0,c
 10223  002CAE  EF5B  F016         	goto	u4091
 10224  002CB2  EF5D  F016         	goto	u4090
 10225  002CB6                     u4091:
 10226  002CB6  EF37  F016         	goto	l1014
 10227  002CBA                     u4090:
 10228  002CBA                     l1012:
 10229  002CBA  BC41               	btfsc	___fladd@signs^0,6,c
 10230  002CBC  EF62  F016         	goto	u4101
 10231  002CC0  EF64  F016         	goto	u4100
 10232  002CC4                     u4101:
 10233  002CC4  EFA4  F016         	goto	l4047
 10234  002CC8                     u4100:
 10235  002CC8  5043               	movf	___fladd@bexp^0,w,c
 10236  002CCA  A4D8               	btfss	status,2,c
 10237  002CCC  EF6A  F016         	goto	u4111
 10238  002CD0  EF6C  F016         	goto	u4110
 10239  002CD4                     u4111:
 10240  002CD4  EF76  F016         	goto	l4029
 10241  002CD8                     u4110:
 10242  002CD8  0E00               	movlw	0
 10243  002CDA  6E35               	movwf	?___fladd^0,c
 10244  002CDC  0E00               	movlw	0
 10245  002CDE  6E36               	movwf	(?___fladd+1)^0,c
 10246  002CE0  0E00               	movlw	0
 10247  002CE2  6E37               	movwf	(?___fladd+2)^0,c
 10248  002CE4  0E00               	movlw	0
 10249  002CE6  6E38               	movwf	(?___fladd+3)^0,c
 10250  002CE8  EFC5  F017         	goto	l1021
 10251  002CEC                     l4029:
 10252  002CEC  5039               	movf	___fladd@a^0,w,c
 10253  002CEE  2635               	addwf	___fladd@b^0,f,c
 10254  002CF0  503A               	movf	(___fladd@a+1)^0,w,c
 10255  002CF2  2236               	addwfc	(___fladd@b+1)^0,f,c
 10256  002CF4  503B               	movf	(___fladd@a+2)^0,w,c
 10257  002CF6  2237               	addwfc	(___fladd@b+2)^0,f,c
 10258  002CF8  503C               	movf	(___fladd@a+3)^0,w,c
 10259  002CFA  2238               	addwfc	(___fladd@b+3)^0,f,c
 10260  002CFC  A038               	btfss	(___fladd@b+3)^0,0,c
 10261  002CFE  EF83  F016         	goto	u4121
 10262  002D02  EF85  F016         	goto	u4120
 10263  002D06                     u4121:
 10264  002D06  EF31  F017         	goto	l4083
 10265  002D0A                     u4120:
 10266  002D0A  A044               	btfss	___fladd@grs^0,0,c
 10267  002D0C  EF8A  F016         	goto	u4131
 10268  002D10  EF8C  F016         	goto	u4130
 10269  002D14                     u4131:
 10270  002D14  EF92  F016         	goto	l4037
 10271  002D18                     u4130:
 10272  002D18  90D8               	bcf	status,0,c
 10273  002D1A  3044               	rrcf	___fladd@grs^0,w,c
 10274  002D1C  0901               	iorlw	1
 10275  002D1E  6E44               	movwf	___fladd@grs^0,c
 10276  002D20  EF94  F016         	goto	l4039
 10277  002D24                     l4037:
 10278  002D24  90D8               	bcf	status,0,c
 10279  002D26  3244               	rrcf	___fladd@grs^0,f,c
 10280  002D28                     l4039:
 10281  002D28  A035               	btfss	___fladd@b^0,0,c
 10282  002D2A  EF99  F016         	goto	u4141
 10283  002D2E  EF9B  F016         	goto	u4140
 10284  002D32                     u4141:
 10285  002D32  EF9C  F016         	goto	l4043
 10286  002D36                     u4140:
 10287  002D36  8E44               	bsf	___fladd@grs^0,7,c
 10288  002D38                     l4043:
 10289  002D38  3438               	rlcf	(___fladd@b+3)^0,w,c
 10290  002D3A  3238               	rrcf	(___fladd@b+3)^0,f,c
 10291  002D3C  3237               	rrcf	(___fladd@b+2)^0,f,c
 10292  002D3E  3236               	rrcf	(___fladd@b+1)^0,f,c
 10293  002D40  3235               	rrcf	___fladd@b^0,f,c
 10294  002D42  2A43               	incf	___fladd@bexp^0,f,c
 10295  002D44  EF31  F017         	goto	l4083
 10296  002D48                     l4047:
 10297  002D48  5039               	movf	___fladd@a^0,w,c
 10298  002D4A  5C35               	subwf	___fladd@b^0,w,c
 10299  002D4C  503A               	movf	(___fladd@a+1)^0,w,c
 10300  002D4E  5836               	subwfb	(___fladd@b+1)^0,w,c
 10301  002D50  503B               	movf	(___fladd@a+2)^0,w,c
 10302  002D52  5837               	subwfb	(___fladd@b+2)^0,w,c
 10303  002D54  5038               	movf	(___fladd@b+3)^0,w,c
 10304  002D56  0A80               	xorlw	128
 10305  002D58  6E3D               	movwf	??___fladd^0,c
 10306  002D5A  503C               	movf	(___fladd@a+3)^0,w,c
 10307  002D5C  0A80               	xorlw	128
 10308  002D5E  583D               	subwfb	??___fladd^0,w,c
 10309  002D60  B0D8               	btfsc	status,0,c
 10310  002D62  EFB5  F016         	goto	u4151
 10311  002D66  EFB7  F016         	goto	u4150
 10312  002D6A                     u4151:
 10313  002D6A  EFE2  F016         	goto	l4057
 10314  002D6E                     u4150:
 10315  002D6E  5035               	movf	___fladd@b^0,w,c
 10316  002D70  5C39               	subwf	___fladd@a^0,w,c
 10317  002D72  6E3D               	movwf	??___fladd^0,c
 10318  002D74  5036               	movf	(___fladd@b+1)^0,w,c
 10319  002D76  583A               	subwfb	(___fladd@a+1)^0,w,c
 10320  002D78  6E3E               	movwf	(??___fladd+1)^0,c
 10321  002D7A  5037               	movf	(___fladd@b+2)^0,w,c
 10322  002D7C  583B               	subwfb	(___fladd@a+2)^0,w,c
 10323  002D7E  6E3F               	movwf	(??___fladd+2)^0,c
 10324  002D80  5038               	movf	(___fladd@b+3)^0,w,c
 10325  002D82  583C               	subwfb	(___fladd@a+3)^0,w,c
 10326  002D84  6E40               	movwf	(??___fladd+3)^0,c
 10327  002D86  0EFF               	movlw	255
 10328  002D88  243D               	addwf	??___fladd^0,w,c
 10329  002D8A  6E35               	movwf	___fladd@b^0,c
 10330  002D8C  0EFF               	movlw	255
 10331  002D8E  203E               	addwfc	(??___fladd+1)^0,w,c
 10332  002D90  6E36               	movwf	(___fladd@b+1)^0,c
 10333  002D92  0EFF               	movlw	255
 10334  002D94  203F               	addwfc	(??___fladd+2)^0,w,c
 10335  002D96  6E37               	movwf	(___fladd@b+2)^0,c
 10336  002D98  0EFF               	movlw	255
 10337  002D9A  2040               	addwfc	(??___fladd+3)^0,w,c
 10338  002D9C  6E38               	movwf	(___fladd@b+3)^0,c
 10339  002D9E  0E80               	movlw	128
 10340  002DA0  1A41               	xorwf	___fladd@signs^0,f,c
 10341  002DA2  6C44               	negf	___fladd@grs^0,c
 10342  002DA4  5044               	movf	___fladd@grs^0,w,c
 10343  002DA6  A4D8               	btfss	status,2,c
 10344  002DA8  EFD8  F016         	goto	u4161
 10345  002DAC  EFDA  F016         	goto	u4160
 10346  002DB0                     u4161:
 10347  002DB0  EFEA  F016         	goto	l1029
 10348  002DB4                     u4160:
 10349  002DB4  0E01               	movlw	1
 10350  002DB6  2635               	addwf	___fladd@b^0,f,c
 10351  002DB8  0E00               	movlw	0
 10352  002DBA  2236               	addwfc	(___fladd@b+1)^0,f,c
 10353  002DBC  2237               	addwfc	(___fladd@b+2)^0,f,c
 10354  002DBE  2238               	addwfc	(___fladd@b+3)^0,f,c
 10355  002DC0  EFEA  F016         	goto	l1029
 10356  002DC4                     l4057:
 10357  002DC4  5039               	movf	___fladd@a^0,w,c
 10358  002DC6  5E35               	subwf	___fladd@b^0,f,c
 10359  002DC8  503A               	movf	(___fladd@a+1)^0,w,c
 10360  002DCA  5A36               	subwfb	(___fladd@b+1)^0,f,c
 10361  002DCC  503B               	movf	(___fladd@a+2)^0,w,c
 10362  002DCE  5A37               	subwfb	(___fladd@b+2)^0,f,c
 10363  002DD0  503C               	movf	(___fladd@a+3)^0,w,c
 10364  002DD2  5A38               	subwfb	(___fladd@b+3)^0,f,c
 10365  002DD4                     l1029:
 10366  002DD4  5035               	movf	___fladd@b^0,w,c
 10367  002DD6  1036               	iorwf	(___fladd@b+1)^0,w,c
 10368  002DD8  1037               	iorwf	(___fladd@b+2)^0,w,c
 10369  002DDA  1038               	iorwf	(___fladd@b+3)^0,w,c
 10370  002DDC  A4D8               	btfss	status,2,c
 10371  002DDE  EFF3  F016         	goto	u4171
 10372  002DE2  EFF5  F016         	goto	u4170
 10373  002DE6                     u4171:
 10374  002DE6  EF2A  F017         	goto	l4081
 10375  002DEA                     u4170:
 10376  002DEA  5044               	movf	___fladd@grs^0,w,c
 10377  002DEC  A4D8               	btfss	status,2,c
 10378  002DEE  EFFB  F016         	goto	u4181
 10379  002DF2  EFFD  F016         	goto	u4180
 10380  002DF6                     u4181:
 10381  002DF6  EF2A  F017         	goto	l4081
 10382  002DFA                     u4180:
 10383  002DFA  0E00               	movlw	0
 10384  002DFC  6E35               	movwf	?___fladd^0,c
 10385  002DFE  0E00               	movlw	0
 10386  002E00  6E36               	movwf	(?___fladd+1)^0,c
 10387  002E02  0E00               	movlw	0
 10388  002E04  6E37               	movwf	(?___fladd+2)^0,c
 10389  002E06  0E00               	movlw	0
 10390  002E08  6E38               	movwf	(?___fladd+3)^0,c
 10391  002E0A  EFC5  F017         	goto	l1021
 10392  002E0E                     l4065:
 10393  002E0E  90D8               	bcf	status,0,c
 10394  002E10  3635               	rlcf	___fladd@b^0,f,c
 10395  002E12  3636               	rlcf	(___fladd@b+1)^0,f,c
 10396  002E14  3637               	rlcf	(___fladd@b+2)^0,f,c
 10397  002E16  3638               	rlcf	(___fladd@b+3)^0,f,c
 10398  002E18  AE44               	btfss	___fladd@grs^0,7,c
 10399  002E1A  EF11  F017         	goto	u4191
 10400  002E1E  EF13  F017         	goto	u4190
 10401  002E22                     u4191:
 10402  002E22  EF14  F017         	goto	l4071
 10403  002E26                     u4190:
 10404  002E26  8035               	bsf	___fladd@b^0,0,c
 10405  002E28                     l4071:
 10406  002E28  A044               	btfss	___fladd@grs^0,0,c
 10407  002E2A  EF19  F017         	goto	u4201
 10408  002E2E  EF1B  F017         	goto	u4200
 10409  002E32                     u4201:
 10410  002E32  EF1F  F017         	goto	l4075
 10411  002E36                     u4200:
 10412  002E36  80D8               	bsf	status,0,c
 10413  002E38  3644               	rlcf	___fladd@grs^0,f,c
 10414  002E3A  EF21  F017         	goto	l4077
 10415  002E3E                     l4075:
 10416  002E3E  90D8               	bcf	status,0,c
 10417  002E40  3644               	rlcf	___fladd@grs^0,f,c
 10418  002E42                     l4077:
 10419  002E42  5043               	movf	___fladd@bexp^0,w,c
 10420  002E44  B4D8               	btfsc	status,2,c
 10421  002E46  EF27  F017         	goto	u4211
 10422  002E4A  EF29  F017         	goto	u4210
 10423  002E4E                     u4211:
 10424  002E4E  EF2A  F017         	goto	l4081
 10425  002E52                     u4210:
 10426  002E52  0643               	decf	___fladd@bexp^0,f,c
 10427  002E54                     l4081:
 10428  002E54  AE37               	btfss	(___fladd@b+2)^0,7,c
 10429  002E56  EF2F  F017         	goto	u4221
 10430  002E5A  EF31  F017         	goto	u4220
 10431  002E5E                     u4221:
 10432  002E5E  EF07  F017         	goto	l4065
 10433  002E62                     u4220:
 10434  002E62                     l4083:
 10435  002E62  0E00               	movlw	0
 10436  002E64  6E42               	movwf	___fladd@aexp^0,c
 10437  002E66  AE44               	btfss	___fladd@grs^0,7,c
 10438  002E68  EF38  F017         	goto	u4231
 10439  002E6C  EF3A  F017         	goto	u4230
 10440  002E70                     u4231:
 10441  002E70  EF52  F017         	goto	l1038
 10442  002E74                     u4230:
 10443  002E74  C044  F03D         	movff	___fladd@grs,??___fladd
 10444  002E78  0E7F               	movlw	127
 10445  002E7A  163D               	andwf	??___fladd^0,f,c
 10446  002E7C  B4D8               	btfsc	status,2,c
 10447  002E7E  EF43  F017         	goto	u4241
 10448  002E82  EF45  F017         	goto	u4240
 10449  002E86                     u4241:
 10450  002E86  EF49  F017         	goto	l1039
 10451  002E8A                     u4240:
 10452  002E8A                     l4089:
 10453  002E8A  0E01               	movlw	1
 10454  002E8C  6E42               	movwf	___fladd@aexp^0,c
 10455  002E8E  EF52  F017         	goto	l1038
 10456  002E92                     l1039:
 10457  002E92  A035               	btfss	___fladd@b^0,0,c
 10458  002E94  EF4E  F017         	goto	u4251
 10459  002E98  EF50  F017         	goto	u4250
 10460  002E9C                     u4251:
 10461  002E9C  EF52  F017         	goto	l1038
 10462  002EA0                     u4250:
 10463  002EA0  EF45  F017         	goto	l4089
 10464  002EA4                     l1038:
 10465  002EA4  5042               	movf	___fladd@aexp^0,w,c
 10466  002EA6  B4D8               	btfsc	status,2,c
 10467  002EA8  EF58  F017         	goto	u4261
 10468  002EAC  EF5A  F017         	goto	u4260
 10469  002EB0                     u4261:
 10470  002EB0  EF85  F017         	goto	l4101
 10471  002EB4                     u4260:
 10472  002EB4  0E01               	movlw	1
 10473  002EB6  2635               	addwf	___fladd@b^0,f,c
 10474  002EB8  0E00               	movlw	0
 10475  002EBA  2236               	addwfc	(___fladd@b+1)^0,f,c
 10476  002EBC  2237               	addwfc	(___fladd@b+2)^0,f,c
 10477  002EBE  2238               	addwfc	(___fladd@b+3)^0,f,c
 10478  002EC0  A038               	btfss	(___fladd@b+3)^0,0,c
 10479  002EC2  EF65  F017         	goto	u4271
 10480  002EC6  EF67  F017         	goto	u4270
 10481  002ECA                     u4271:
 10482  002ECA  EF85  F017         	goto	l4101
 10483  002ECE                     u4270:
 10484  002ECE  C035  F03D         	movff	___fladd@b,??___fladd
 10485  002ED2  C036  F03E         	movff	___fladd@b+1,??___fladd+1
 10486  002ED6  C037  F03F         	movff	___fladd@b+2,??___fladd+2
 10487  002EDA  C038  F040         	movff	___fladd@b+3,??___fladd+3
 10488  002EDE  3440               	rlcf	(??___fladd+3)^0,w,c
 10489  002EE0  3240               	rrcf	(??___fladd+3)^0,f,c
 10490  002EE2  323F               	rrcf	(??___fladd+2)^0,f,c
 10491  002EE4  323E               	rrcf	(??___fladd+1)^0,f,c
 10492  002EE6  323D               	rrcf	??___fladd^0,f,c
 10493  002EE8  C03D  F035         	movff	??___fladd,___fladd@b
 10494  002EEC  C03E  F036         	movff	??___fladd+1,___fladd@b+1
 10495  002EF0  C03F  F037         	movff	??___fladd+2,___fladd@b+2
 10496  002EF4  C040  F038         	movff	??___fladd+3,___fladd@b+3
 10497  002EF8  2843               	incf	___fladd@bexp^0,w,c
 10498  002EFA  B4D8               	btfsc	status,2,c
 10499  002EFC  EF82  F017         	goto	u4281
 10500  002F00  EF84  F017         	goto	u4280
 10501  002F04                     u4281:
 10502  002F04  EF85  F017         	goto	l4101
 10503  002F08                     u4280:
 10504  002F08  2A43               	incf	___fladd@bexp^0,f,c
 10505  002F0A                     l4101:
 10506  002F0A  2843               	incf	___fladd@bexp^0,w,c
 10507  002F0C  B4D8               	btfsc	status,2,c
 10508  002F0E  EF8B  F017         	goto	u4291
 10509  002F12  EF8D  F017         	goto	u4290
 10510  002F16                     u4291:
 10511  002F16  EF95  F017         	goto	l4105
 10512  002F1A                     u4290:
 10513  002F1A  5043               	movf	___fladd@bexp^0,w,c
 10514  002F1C  A4D8               	btfss	status,2,c
 10515  002F1E  EF93  F017         	goto	u4301
 10516  002F22  EF95  F017         	goto	u4300
 10517  002F26                     u4301:
 10518  002F26  EFA7  F017         	goto	l4109
 10519  002F2A                     u4300:
 10520  002F2A                     l4105:
 10521  002F2A  0E00               	movlw	0
 10522  002F2C  6E35               	movwf	___fladd@b^0,c
 10523  002F2E  0E00               	movlw	0
 10524  002F30  6E36               	movwf	(___fladd@b+1)^0,c
 10525  002F32  0E00               	movlw	0
 10526  002F34  6E37               	movwf	(___fladd@b+2)^0,c
 10527  002F36  0E00               	movlw	0
 10528  002F38  6E38               	movwf	(___fladd@b+3)^0,c
 10529  002F3A  5043               	movf	___fladd@bexp^0,w,c
 10530  002F3C  A4D8               	btfss	status,2,c
 10531  002F3E  EFA3  F017         	goto	u4311
 10532  002F42  EFA5  F017         	goto	u4310
 10533  002F46                     u4311:
 10534  002F46  EFA7  F017         	goto	l4109
 10535  002F4A                     u4310:
 10536  002F4A  0E00               	movlw	0
 10537  002F4C  6E41               	movwf	___fladd@signs^0,c
 10538  002F4E                     l4109:
 10539  002F4E  A043               	btfss	___fladd@bexp^0,0,c
 10540  002F50  EFAC  F017         	goto	u4321
 10541  002F54  EFAE  F017         	goto	u4320
 10542  002F58                     u4321:
 10543  002F58  EFB1  F017         	goto	l4113
 10544  002F5C                     u4320:
 10545  002F5C  8E37               	bsf	(___fladd@b+2)^0,7,c
 10546  002F5E  EFB2  F017         	goto	l4115
 10547  002F62                     l4113:
 10548  002F62  9E37               	bcf	(___fladd@b+2)^0,7,c
 10549  002F64                     l4115:
 10550  002F64  90D8               	bcf	status,0,c
 10551  002F66  3043               	rrcf	___fladd@bexp^0,w,c
 10552  002F68  6E38               	movwf	(___fladd@b+3)^0,c
 10553  002F6A  AE41               	btfss	___fladd@signs^0,7,c
 10554  002F6C  EFBA  F017         	goto	u4331
 10555  002F70  EFBC  F017         	goto	u4330
 10556  002F74                     u4331:
 10557  002F74  EFBD  F017         	goto	l4121
 10558  002F78                     u4330:
 10559  002F78  8E38               	bsf	(___fladd@b+3)^0,7,c
 10560  002F7A                     l4121:
 10561  002F7A  C035  F035         	movff	___fladd@b,?___fladd
 10562  002F7E  C036  F036         	movff	___fladd@b+1,?___fladd+1
 10563  002F82  C037  F037         	movff	___fladd@b+2,?___fladd+2
 10564  002F86  C038  F038         	movff	___fladd@b+3,?___fladd+3
 10565  002F8A                     l1021:
 10566  002F8A  0012               	return		;funcret
 10567  002F8C                     __end_of___fladd:
 10568                           	callstack 0
 10569                           
 10570 ;; *************** function ___flneg *****************
 10571 ;; Defined at:
 10572 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
 10573 ;; Parameters:    Size  Location     Type
 10574 ;;  f1              4    0[COMRAM] unsigned char 
 10575 ;; Auto vars:     Size  Location     Type
 10576 ;;		None
 10577 ;; Return value:  Size  Location     Type
 10578 ;;                  4    0[COMRAM] unsigned char 
 10579 ;; Registers used:
 10580 ;;		wreg, status,2, status,0
 10581 ;; Tracked objects:
 10582 ;;		On entry : 0/0
 10583 ;;		On exit  : 0/0
 10584 ;;		Unchanged: 0/0
 10585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10586 ;;      Params:         4       0       0       0       0       0       0
 10587 ;;      Locals:         0       0       0       0       0       0       0
 10588 ;;      Temps:          0       0       0       0       0       0       0
 10589 ;;      Totals:         4       0       0       0       0       0       0
 10590 ;;Total ram usage:        4 bytes
 10591 ;; Hardware stack levels used:    1
 10592 ;; Hardware stack levels required when called:    1
 10593 ;; This function calls:
 10594 ;;		Nothing
 10595 ;; This function is called by:
 10596 ;;		_efgtoa
 10597 ;; This function uses a non-reentrant model
 10598 ;;
 10599                           
 10600                           	psect	text32
 10601  005A6C                     __ptext32:
 10602                           	callstack 0
 10603  005A6C                     ___flneg:
 10604                           	callstack 23
 10605  005A6C  5001               	movf	___flneg@f1^0,w,c
 10606  005A6E  1002               	iorwf	(___flneg@f1+1)^0,w,c
 10607  005A70  1003               	iorwf	(___flneg@f1+2)^0,w,c
 10608  005A72  1004               	iorwf	(___flneg@f1+3)^0,w,c
 10609  005A74  B4D8               	btfsc	status,2,c
 10610  005A76  EF3F  F02D         	goto	u5131
 10611  005A7A  EF41  F02D         	goto	u5130
 10612  005A7E                     u5131:
 10613  005A7E  EF49  F02D         	goto	l4629
 10614  005A82                     u5130:
 10615  005A82  0E00               	movlw	0
 10616  005A84  1A01               	xorwf	___flneg@f1^0,f,c
 10617  005A86  0E00               	movlw	0
 10618  005A88  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 10619  005A8A  0E00               	movlw	0
 10620  005A8C  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 10621  005A8E  0E80               	movlw	128
 10622  005A90  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 10623  005A92                     l4629:
 10624  005A92  C001  F001         	movff	___flneg@f1,?___flneg
 10625  005A96  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 10626  005A9A  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 10627  005A9E  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 10628  005AA2  0012               	return		;funcret
 10629  005AA4                     __end_of___flneg:
 10630                           	callstack 0
 10631                           
 10632 ;; *************** function ___flmul *****************
 10633 ;; Defined at:
 10634 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
 10635 ;; Parameters:    Size  Location     Type
 10636 ;;  b               4   27[COMRAM] unsigned char 
 10637 ;;  a               4   31[COMRAM] unsigned char 
 10638 ;; Auto vars:     Size  Location     Type
 10639 ;;  prod            4   46[COMRAM] struct .
 10640 ;;  grs             4   40[COMRAM] unsigned long 
 10641 ;;  temp            2   50[COMRAM] struct .
 10642 ;;  bexp            1   45[COMRAM] unsigned char 
 10643 ;;  aexp            1   44[COMRAM] unsigned char 
 10644 ;;  sign            1   39[COMRAM] unsigned char 
 10645 ;; Return value:  Size  Location     Type
 10646 ;;                  4   27[COMRAM] unsigned char 
 10647 ;; Registers used:
 10648 ;;		wreg, status,2, status,0, prodl, prodh
 10649 ;; Tracked objects:
 10650 ;;		On entry : 0/0
 10651 ;;		On exit  : 0/0
 10652 ;;		Unchanged: 0/0
 10653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10654 ;;      Params:         8       0       0       0       0       0       0
 10655 ;;      Locals:        13       0       0       0       0       0       0
 10656 ;;      Temps:          4       0       0       0       0       0       0
 10657 ;;      Totals:        25       0       0       0       0       0       0
 10658 ;;Total ram usage:       25 bytes
 10659 ;; Hardware stack levels used:    1
 10660 ;; Hardware stack levels required when called:    1
 10661 ;; This function calls:
 10662 ;;		Nothing
 10663 ;; This function is called by:
 10664 ;;		_scanAdcConversion
 10665 ;;		_speedControl
 10666 ;;		_efgtoa
 10667 ;; This function uses a non-reentrant model
 10668 ;;
 10669                           
 10670                           	psect	text33
 10671  002F8C                     __ptext33:
 10672                           	callstack 0
 10673  002F8C                     ___flmul:
 10674                           	callstack 25
 10675  002F8C  501F               	movf	(___flmul@b+3)^0,w,c
 10676  002F8E  0B80               	andlw	128
 10677  002F90  6E28               	movwf	___flmul@sign^0,c
 10678  002F92  501F               	movf	(___flmul@b+3)^0,w,c
 10679  002F94  241F               	addwf	(___flmul@b+3)^0,w,c
 10680  002F96  6E2E               	movwf	___flmul@bexp^0,c
 10681  002F98  AE1E               	btfss	(___flmul@b+2)^0,7,c
 10682  002F9A  EFD1  F017         	goto	u4741
 10683  002F9E  EFD3  F017         	goto	u4740
 10684  002FA2                     u4741:
 10685  002FA2  EFD4  F017         	goto	l4377
 10686  002FA6                     u4740:
 10687  002FA6  802E               	bsf	___flmul@bexp^0,0,c
 10688  002FA8                     l4377:
 10689  002FA8  502E               	movf	___flmul@bexp^0,w,c
 10690  002FAA  B4D8               	btfsc	status,2,c
 10691  002FAC  EFDA  F017         	goto	u4751
 10692  002FB0  EFDC  F017         	goto	u4750
 10693  002FB4                     u4751:
 10694  002FB4  EFEF  F017         	goto	l4385
 10695  002FB8                     u4750:
 10696  002FB8  282E               	incf	___flmul@bexp^0,w,c
 10697  002FBA  A4D8               	btfss	status,2,c
 10698  002FBC  EFE2  F017         	goto	u4761
 10699  002FC0  EFE4  F017         	goto	u4760
 10700  002FC4                     u4761:
 10701  002FC4  EFEC  F017         	goto	l4383
 10702  002FC8                     u4760:
 10703  002FC8  0E00               	movlw	0
 10704  002FCA  6E1C               	movwf	___flmul@b^0,c
 10705  002FCC  0E00               	movlw	0
 10706  002FCE  6E1D               	movwf	(___flmul@b+1)^0,c
 10707  002FD0  0E00               	movlw	0
 10708  002FD2  6E1E               	movwf	(___flmul@b+2)^0,c
 10709  002FD4  0E00               	movlw	0
 10710  002FD6  6E1F               	movwf	(___flmul@b+3)^0,c
 10711  002FD8                     l4383:
 10712  002FD8  8E1E               	bsf	(___flmul@b+2)^0,7,c
 10713  002FDA  EFF7  F017         	goto	l4387
 10714  002FDE                     l4385:
 10715  002FDE  0E00               	movlw	0
 10716  002FE0  6E1C               	movwf	___flmul@b^0,c
 10717  002FE2  0E00               	movlw	0
 10718  002FE4  6E1D               	movwf	(___flmul@b+1)^0,c
 10719  002FE6  0E00               	movlw	0
 10720  002FE8  6E1E               	movwf	(___flmul@b+2)^0,c
 10721  002FEA  0E00               	movlw	0
 10722  002FEC  6E1F               	movwf	(___flmul@b+3)^0,c
 10723  002FEE                     l4387:
 10724  002FEE  5023               	movf	(___flmul@a+3)^0,w,c
 10725  002FF0  0B80               	andlw	128
 10726  002FF2  1A28               	xorwf	___flmul@sign^0,f,c
 10727  002FF4  5023               	movf	(___flmul@a+3)^0,w,c
 10728  002FF6  2423               	addwf	(___flmul@a+3)^0,w,c
 10729  002FF8  6E2D               	movwf	___flmul@aexp^0,c
 10730  002FFA  AE22               	btfss	(___flmul@a+2)^0,7,c
 10731  002FFC  EF02  F018         	goto	u4771
 10732  003000  EF04  F018         	goto	u4770
 10733  003004                     u4771:
 10734  003004  EF05  F018         	goto	l4395
 10735  003008                     u4770:
 10736  003008  802D               	bsf	___flmul@aexp^0,0,c
 10737  00300A                     l4395:
 10738  00300A  502D               	movf	___flmul@aexp^0,w,c
 10739  00300C  B4D8               	btfsc	status,2,c
 10740  00300E  EF0B  F018         	goto	u4781
 10741  003012  EF0D  F018         	goto	u4780
 10742  003016                     u4781:
 10743  003016  EF20  F018         	goto	l4403
 10744  00301A                     u4780:
 10745  00301A  282D               	incf	___flmul@aexp^0,w,c
 10746  00301C  A4D8               	btfss	status,2,c
 10747  00301E  EF13  F018         	goto	u4791
 10748  003022  EF15  F018         	goto	u4790
 10749  003026                     u4791:
 10750  003026  EF1D  F018         	goto	l4401
 10751  00302A                     u4790:
 10752  00302A  0E00               	movlw	0
 10753  00302C  6E20               	movwf	___flmul@a^0,c
 10754  00302E  0E00               	movlw	0
 10755  003030  6E21               	movwf	(___flmul@a+1)^0,c
 10756  003032  0E00               	movlw	0
 10757  003034  6E22               	movwf	(___flmul@a+2)^0,c
 10758  003036  0E00               	movlw	0
 10759  003038  6E23               	movwf	(___flmul@a+3)^0,c
 10760  00303A                     l4401:
 10761  00303A  8E22               	bsf	(___flmul@a+2)^0,7,c
 10762  00303C  EF28  F018         	goto	l1098
 10763  003040                     l4403:
 10764  003040  0E00               	movlw	0
 10765  003042  6E20               	movwf	___flmul@a^0,c
 10766  003044  0E00               	movlw	0
 10767  003046  6E21               	movwf	(___flmul@a+1)^0,c
 10768  003048  0E00               	movlw	0
 10769  00304A  6E22               	movwf	(___flmul@a+2)^0,c
 10770  00304C  0E00               	movlw	0
 10771  00304E  6E23               	movwf	(___flmul@a+3)^0,c
 10772  003050                     l1098:
 10773  003050  502D               	movf	___flmul@aexp^0,w,c
 10774  003052  B4D8               	btfsc	status,2,c
 10775  003054  EF2E  F018         	goto	u4801
 10776  003058  EF30  F018         	goto	u4800
 10777  00305C                     u4801:
 10778  00305C  EF38  F018         	goto	l4407
 10779  003060                     u4800:
 10780  003060  502E               	movf	___flmul@bexp^0,w,c
 10781  003062  A4D8               	btfss	status,2,c
 10782  003064  EF36  F018         	goto	u4811
 10783  003068  EF38  F018         	goto	u4810
 10784  00306C                     u4811:
 10785  00306C  EF42  F018         	goto	l4411
 10786  003070                     u4810:
 10787  003070                     l4407:
 10788  003070  0E00               	movlw	0
 10789  003072  6E1C               	movwf	?___flmul^0,c
 10790  003074  0E00               	movlw	0
 10791  003076  6E1D               	movwf	(?___flmul+1)^0,c
 10792  003078  0E00               	movlw	0
 10793  00307A  6E1E               	movwf	(?___flmul+2)^0,c
 10794  00307C  0E00               	movlw	0
 10795  00307E  6E1F               	movwf	(?___flmul+3)^0,c
 10796  003080  EFDA  F019         	goto	l1102
 10797  003084                     l4411:
 10798  003084  5022               	movf	(___flmul@a+2)^0,w,c
 10799  003086  021C               	mulwf	___flmul@b^0,c
 10800  003088  CFF3 F033          	movff	prodl,___flmul@temp
 10801  00308C  CFF4 F034          	movff	prodh,___flmul@temp+1
 10802  003090  5033               	movf	___flmul@temp^0,w,c
 10803  003092  6E29               	movwf	___flmul@grs^0,c
 10804  003094  6A2A               	clrf	(___flmul@grs+1)^0,c
 10805  003096  6A2B               	clrf	(___flmul@grs+2)^0,c
 10806  003098  6A2C               	clrf	(___flmul@grs+3)^0,c
 10807  00309A  5034               	movf	(___flmul@temp+1)^0,w,c
 10808  00309C  6E2F               	movwf	___flmul@prod^0,c
 10809  00309E  6A30               	clrf	(___flmul@prod+1)^0,c
 10810  0030A0  6A31               	clrf	(___flmul@prod+2)^0,c
 10811  0030A2  6A32               	clrf	(___flmul@prod+3)^0,c
 10812  0030A4  5021               	movf	(___flmul@a+1)^0,w,c
 10813  0030A6  021D               	mulwf	(___flmul@b+1)^0,c
 10814  0030A8  CFF3 F033          	movff	prodl,___flmul@temp
 10815  0030AC  CFF4 F034          	movff	prodh,___flmul@temp+1
 10816  0030B0  5033               	movf	___flmul@temp^0,w,c
 10817  0030B2  2629               	addwf	___flmul@grs^0,f,c
 10818  0030B4  0E00               	movlw	0
 10819  0030B6  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10820  0030B8  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10821  0030BA  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10822  0030BC  5034               	movf	(___flmul@temp+1)^0,w,c
 10823  0030BE  262F               	addwf	___flmul@prod^0,f,c
 10824  0030C0  0E00               	movlw	0
 10825  0030C2  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10826  0030C4  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10827  0030C6  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10828  0030C8  5020               	movf	___flmul@a^0,w,c
 10829  0030CA  021E               	mulwf	(___flmul@b+2)^0,c
 10830  0030CC  CFF3 F033          	movff	prodl,___flmul@temp
 10831  0030D0  CFF4 F034          	movff	prodh,___flmul@temp+1
 10832  0030D4  5033               	movf	___flmul@temp^0,w,c
 10833  0030D6  2629               	addwf	___flmul@grs^0,f,c
 10834  0030D8  0E00               	movlw	0
 10835  0030DA  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10836  0030DC  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10837  0030DE  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10838  0030E0  5034               	movf	(___flmul@temp+1)^0,w,c
 10839  0030E2  262F               	addwf	___flmul@prod^0,f,c
 10840  0030E4  0E00               	movlw	0
 10841  0030E6  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10842  0030E8  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10843  0030EA  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10844  0030EC  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 10845  0030F0  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 10846  0030F4  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 10847  0030F8  6A29               	clrf	___flmul@grs^0,c
 10848  0030FA  5020               	movf	___flmul@a^0,w,c
 10849  0030FC  021D               	mulwf	(___flmul@b+1)^0,c
 10850  0030FE  CFF3 F033          	movff	prodl,___flmul@temp
 10851  003102  CFF4 F034          	movff	prodh,___flmul@temp+1
 10852  003106  5033               	movf	___flmul@temp^0,w,c
 10853  003108  2629               	addwf	___flmul@grs^0,f,c
 10854  00310A  5034               	movf	(___flmul@temp+1)^0,w,c
 10855  00310C  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10856  00310E  0E00               	movlw	0
 10857  003110  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10858  003112  0E00               	movlw	0
 10859  003114  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10860  003116  5021               	movf	(___flmul@a+1)^0,w,c
 10861  003118  021C               	mulwf	___flmul@b^0,c
 10862  00311A  CFF3 F033          	movff	prodl,___flmul@temp
 10863  00311E  CFF4 F034          	movff	prodh,___flmul@temp+1
 10864  003122  5033               	movf	___flmul@temp^0,w,c
 10865  003124  2629               	addwf	___flmul@grs^0,f,c
 10866  003126  5034               	movf	(___flmul@temp+1)^0,w,c
 10867  003128  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10868  00312A  0E00               	movlw	0
 10869  00312C  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10870  00312E  0E00               	movlw	0
 10871  003130  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10872  003132  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 10873  003136  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 10874  00313A  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 10875  00313E  6A29               	clrf	___flmul@grs^0,c
 10876  003140  5020               	movf	___flmul@a^0,w,c
 10877  003142  021C               	mulwf	___flmul@b^0,c
 10878  003144  CFF3 F033          	movff	prodl,___flmul@temp
 10879  003148  CFF4 F034          	movff	prodh,___flmul@temp+1
 10880  00314C  5033               	movf	___flmul@temp^0,w,c
 10881  00314E  2629               	addwf	___flmul@grs^0,f,c
 10882  003150  5034               	movf	(___flmul@temp+1)^0,w,c
 10883  003152  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10884  003154  0E00               	movlw	0
 10885  003156  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10886  003158  0E00               	movlw	0
 10887  00315A  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10888  00315C  5022               	movf	(___flmul@a+2)^0,w,c
 10889  00315E  021D               	mulwf	(___flmul@b+1)^0,c
 10890  003160  CFF3 F033          	movff	prodl,___flmul@temp
 10891  003164  CFF4 F034          	movff	prodh,___flmul@temp+1
 10892  003168  5033               	movf	___flmul@temp^0,w,c
 10893  00316A  262F               	addwf	___flmul@prod^0,f,c
 10894  00316C  5034               	movf	(___flmul@temp+1)^0,w,c
 10895  00316E  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10896  003170  0E00               	movlw	0
 10897  003172  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10898  003174  0E00               	movlw	0
 10899  003176  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10900  003178  5021               	movf	(___flmul@a+1)^0,w,c
 10901  00317A  021E               	mulwf	(___flmul@b+2)^0,c
 10902  00317C  CFF3 F033          	movff	prodl,___flmul@temp
 10903  003180  CFF4 F034          	movff	prodh,___flmul@temp+1
 10904  003184  5033               	movf	___flmul@temp^0,w,c
 10905  003186  262F               	addwf	___flmul@prod^0,f,c
 10906  003188  5034               	movf	(___flmul@temp+1)^0,w,c
 10907  00318A  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10908  00318C  0E00               	movlw	0
 10909  00318E  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10910  003190  0E00               	movlw	0
 10911  003192  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10912  003194  5022               	movf	(___flmul@a+2)^0,w,c
 10913  003196  021E               	mulwf	(___flmul@b+2)^0,c
 10914  003198  CFF3 F033          	movff	prodl,___flmul@temp
 10915  00319C  CFF4 F034          	movff	prodh,___flmul@temp+1
 10916  0031A0  5033               	movf	___flmul@temp^0,w,c
 10917  0031A2  6E24               	movwf	??___flmul^0,c
 10918  0031A4  5034               	movf	(___flmul@temp+1)^0,w,c
 10919  0031A6  6E25               	movwf	(??___flmul+1)^0,c
 10920  0031A8  6A26               	clrf	(??___flmul+2)^0,c
 10921  0031AA  6A27               	clrf	(??___flmul+3)^0,c
 10922  0031AC  C026  F027         	movff	??___flmul+2,??___flmul+3
 10923  0031B0  C025  F026         	movff	??___flmul+1,??___flmul+2
 10924  0031B4  C024  F025         	movff	??___flmul,??___flmul+1
 10925  0031B8  6A24               	clrf	??___flmul^0,c
 10926  0031BA  5024               	movf	??___flmul^0,w,c
 10927  0031BC  262F               	addwf	___flmul@prod^0,f,c
 10928  0031BE  5025               	movf	(??___flmul+1)^0,w,c
 10929  0031C0  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10930  0031C2  5026               	movf	(??___flmul+2)^0,w,c
 10931  0031C4  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10932  0031C6  5027               	movf	(??___flmul+3)^0,w,c
 10933  0031C8  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10934  0031CA  C029  F024         	movff	___flmul@grs,??___flmul
 10935  0031CE  C02A  F025         	movff	___flmul@grs+1,??___flmul+1
 10936  0031D2  C02B  F026         	movff	___flmul@grs+2,??___flmul+2
 10937  0031D6  C02C  F027         	movff	___flmul@grs+3,??___flmul+3
 10938  0031DA  0E19               	movlw	25
 10939  0031DC  EFF5  F018         	goto	u4820
 10940  0031E0                     u4825:
 10941  0031E0  90D8               	bcf	status,0,c
 10942  0031E2  3227               	rrcf	(??___flmul+3)^0,f,c
 10943  0031E4  3226               	rrcf	(??___flmul+2)^0,f,c
 10944  0031E6  3225               	rrcf	(??___flmul+1)^0,f,c
 10945  0031E8  3224               	rrcf	??___flmul^0,f,c
 10946  0031EA                     u4820:
 10947  0031EA  2EE8               	decfsz	wreg,f,c
 10948  0031EC  EFF0  F018         	goto	u4825
 10949  0031F0  5024               	movf	??___flmul^0,w,c
 10950  0031F2  262F               	addwf	___flmul@prod^0,f,c
 10951  0031F4  5025               	movf	(??___flmul+1)^0,w,c
 10952  0031F6  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10953  0031F8  5026               	movf	(??___flmul+2)^0,w,c
 10954  0031FA  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10955  0031FC  5027               	movf	(??___flmul+3)^0,w,c
 10956  0031FE  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10957  003200  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 10958  003204  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 10959  003208  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 10960  00320C  6A29               	clrf	___flmul@grs^0,c
 10961  00320E  502D               	movf	___flmul@aexp^0,w,c
 10962  003210  C02E  F024         	movff	___flmul@bexp,??___flmul
 10963  003214  6A25               	clrf	(??___flmul+1)^0,c
 10964  003216  2624               	addwf	??___flmul^0,f,c
 10965  003218  0E00               	movlw	0
 10966  00321A  2225               	addwfc	(??___flmul+1)^0,f,c
 10967  00321C  0E82               	movlw	130
 10968  00321E  2424               	addwf	??___flmul^0,w,c
 10969  003220  6E33               	movwf	___flmul@temp^0,c
 10970  003222  0EFF               	movlw	255
 10971  003224  2025               	addwfc	(??___flmul+1)^0,w,c
 10972  003226  6E34               	movwf	(___flmul@temp+1)^0,c
 10973  003228  EF2B  F019         	goto	l4459
 10974  00322C                     l4453:
 10975  00322C  90D8               	bcf	status,0,c
 10976  00322E  362F               	rlcf	___flmul@prod^0,f,c
 10977  003230  3630               	rlcf	(___flmul@prod+1)^0,f,c
 10978  003232  3631               	rlcf	(___flmul@prod+2)^0,f,c
 10979  003234  3632               	rlcf	(___flmul@prod+3)^0,f,c
 10980  003236  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 10981  003238  EF20  F019         	goto	u4831
 10982  00323C  EF22  F019         	goto	u4830
 10983  003240                     u4831:
 10984  003240  EF23  F019         	goto	l1105
 10985  003244                     u4830:
 10986  003244  802F               	bsf	___flmul@prod^0,0,c
 10987  003246                     l1105:
 10988  003246  90D8               	bcf	status,0,c
 10989  003248  3629               	rlcf	___flmul@grs^0,f,c
 10990  00324A  362A               	rlcf	(___flmul@grs+1)^0,f,c
 10991  00324C  362B               	rlcf	(___flmul@grs+2)^0,f,c
 10992  00324E  362C               	rlcf	(___flmul@grs+3)^0,f,c
 10993  003250  0633               	decf	___flmul@temp^0,f,c
 10994  003252  A0D8               	btfss	status,0,c
 10995  003254  0634               	decf	(___flmul@temp+1)^0,f,c
 10996  003256                     l4459:
 10997  003256  AE31               	btfss	(___flmul@prod+2)^0,7,c
 10998  003258  EF30  F019         	goto	u4841
 10999  00325C  EF32  F019         	goto	u4840
 11000  003260                     u4841:
 11001  003260  EF16  F019         	goto	l4453
 11002  003264                     u4840:
 11003  003264  0E00               	movlw	0
 11004  003266  6E2D               	movwf	___flmul@aexp^0,c
 11005  003268  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 11006  00326A  EF39  F019         	goto	u4851
 11007  00326E  EF3B  F019         	goto	u4850
 11008  003272                     u4851:
 11009  003272  EF5F  F019         	goto	l1107
 11010  003276                     u4850:
 11011  003276  0EFF               	movlw	255
 11012  003278  1429               	andwf	___flmul@grs^0,w,c
 11013  00327A  6E24               	movwf	??___flmul^0,c
 11014  00327C  0EFF               	movlw	255
 11015  00327E  142A               	andwf	(___flmul@grs+1)^0,w,c
 11016  003280  6E25               	movwf	(??___flmul+1)^0,c
 11017  003282  0EFF               	movlw	255
 11018  003284  142B               	andwf	(___flmul@grs+2)^0,w,c
 11019  003286  6E26               	movwf	(??___flmul+2)^0,c
 11020  003288  0E7F               	movlw	127
 11021  00328A  142C               	andwf	(___flmul@grs+3)^0,w,c
 11022  00328C  6E27               	movwf	(??___flmul+3)^0,c
 11023  00328E  5024               	movf	??___flmul^0,w,c
 11024  003290  1025               	iorwf	(??___flmul+1)^0,w,c
 11025  003292  1026               	iorwf	(??___flmul+2)^0,w,c
 11026  003294  1027               	iorwf	(??___flmul+3)^0,w,c
 11027  003296  B4D8               	btfsc	status,2,c
 11028  003298  EF50  F019         	goto	u4861
 11029  00329C  EF52  F019         	goto	u4860
 11030  0032A0                     u4861:
 11031  0032A0  EF56  F019         	goto	l1108
 11032  0032A4                     u4860:
 11033  0032A4                     l4467:
 11034  0032A4  0E01               	movlw	1
 11035  0032A6  6E2D               	movwf	___flmul@aexp^0,c
 11036  0032A8  EF5F  F019         	goto	l1107
 11037  0032AC                     l1108:
 11038  0032AC  A02F               	btfss	___flmul@prod^0,0,c
 11039  0032AE  EF5B  F019         	goto	u4871
 11040  0032B2  EF5D  F019         	goto	u4870
 11041  0032B6                     u4871:
 11042  0032B6  EF5F  F019         	goto	l1107
 11043  0032BA                     u4870:
 11044  0032BA  EF52  F019         	goto	l4467
 11045  0032BE                     l1107:
 11046  0032BE  502D               	movf	___flmul@aexp^0,w,c
 11047  0032C0  B4D8               	btfsc	status,2,c
 11048  0032C2  EF65  F019         	goto	u4881
 11049  0032C6  EF67  F019         	goto	u4880
 11050  0032CA                     u4881:
 11051  0032CA  EF8B  F019         	goto	l4479
 11052  0032CE                     u4880:
 11053  0032CE  0E01               	movlw	1
 11054  0032D0  262F               	addwf	___flmul@prod^0,f,c
 11055  0032D2  0E00               	movlw	0
 11056  0032D4  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11057  0032D6  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11058  0032D8  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11059  0032DA  A032               	btfss	(___flmul@prod+3)^0,0,c
 11060  0032DC  EF72  F019         	goto	u4891
 11061  0032E0  EF74  F019         	goto	u4890
 11062  0032E4                     u4891:
 11063  0032E4  EF8B  F019         	goto	l4479
 11064  0032E8                     u4890:
 11065  0032E8  C02F  F024         	movff	___flmul@prod,??___flmul
 11066  0032EC  C030  F025         	movff	___flmul@prod+1,??___flmul+1
 11067  0032F0  C031  F026         	movff	___flmul@prod+2,??___flmul+2
 11068  0032F4  C032  F027         	movff	___flmul@prod+3,??___flmul+3
 11069  0032F8  3427               	rlcf	(??___flmul+3)^0,w,c
 11070  0032FA  3227               	rrcf	(??___flmul+3)^0,f,c
 11071  0032FC  3226               	rrcf	(??___flmul+2)^0,f,c
 11072  0032FE  3225               	rrcf	(??___flmul+1)^0,f,c
 11073  003300  3224               	rrcf	??___flmul^0,f,c
 11074  003302  C024  F02F         	movff	??___flmul,___flmul@prod
 11075  003306  C025  F030         	movff	??___flmul+1,___flmul@prod+1
 11076  00330A  C026  F031         	movff	??___flmul+2,___flmul@prod+2
 11077  00330E  C027  F032         	movff	??___flmul+3,___flmul@prod+3
 11078  003312  4A33               	infsnz	___flmul@temp^0,f,c
 11079  003314  2A34               	incf	(___flmul@temp+1)^0,f,c
 11080  003316                     l4479:
 11081  003316  BE34               	btfsc	(___flmul@temp+1)^0,7,c
 11082  003318  EF96  F019         	goto	u4901
 11083  00331C  5034               	movf	(___flmul@temp+1)^0,w,c
 11084  00331E  E108               	bnz	u4900
 11085  003320  2833               	incf	___flmul@temp^0,w,c
 11086  003322  A0D8               	btfss	status,0,c
 11087  003324  EF96  F019         	goto	u4901
 11088  003328  EF98  F019         	goto	u4900
 11089  00332C                     u4901:
 11090  00332C  EFA2  F019         	goto	l4483
 11091  003330                     u4900:
 11092  003330  0E00               	movlw	0
 11093  003332  6E2F               	movwf	___flmul@prod^0,c
 11094  003334  0E00               	movlw	0
 11095  003336  6E30               	movwf	(___flmul@prod+1)^0,c
 11096  003338  0E80               	movlw	128
 11097  00333A  6E31               	movwf	(___flmul@prod+2)^0,c
 11098  00333C  0E7F               	movlw	127
 11099  00333E  6E32               	movwf	(___flmul@prod+3)^0,c
 11100  003340  EFD0  F019         	goto	l4495
 11101  003344                     l4483:
 11102  003344  BE34               	btfsc	(___flmul@temp+1)^0,7,c
 11103  003346  EFAF  F019         	goto	u4910
 11104  00334A  5034               	movf	(___flmul@temp+1)^0,w,c
 11105  00334C  E106               	bnz	u4911
 11106  00334E  0433               	decf	___flmul@temp^0,w,c
 11107  003350  B0D8               	btfsc	status,0,c
 11108  003352  EFAD  F019         	goto	u4911
 11109  003356  EFAF  F019         	goto	u4910
 11110  00335A                     u4911:
 11111  00335A  EFBB  F019         	goto	l1115
 11112  00335E                     u4910:
 11113  00335E  0E00               	movlw	0
 11114  003360  6E2F               	movwf	___flmul@prod^0,c
 11115  003362  0E00               	movlw	0
 11116  003364  6E30               	movwf	(___flmul@prod+1)^0,c
 11117  003366  0E00               	movlw	0
 11118  003368  6E31               	movwf	(___flmul@prod+2)^0,c
 11119  00336A  0E00               	movlw	0
 11120  00336C  6E32               	movwf	(___flmul@prod+3)^0,c
 11121  00336E  0E00               	movlw	0
 11122  003370  6E28               	movwf	___flmul@sign^0,c
 11123  003372  EFD0  F019         	goto	l4495
 11124  003376                     l1115:
 11125  003376  C033  F02E         	movff	___flmul@temp,___flmul@bexp
 11126  00337A  0EFF               	movlw	255
 11127  00337C  162F               	andwf	___flmul@prod^0,f,c
 11128  00337E  0EFF               	movlw	255
 11129  003380  1630               	andwf	(___flmul@prod+1)^0,f,c
 11130  003382  0E7F               	movlw	127
 11131  003384  1631               	andwf	(___flmul@prod+2)^0,f,c
 11132  003386  0E00               	movlw	0
 11133  003388  1632               	andwf	(___flmul@prod+3)^0,f,c
 11134  00338A  A02E               	btfss	___flmul@bexp^0,0,c
 11135  00338C  EFCA  F019         	goto	u4921
 11136  003390  EFCC  F019         	goto	u4920
 11137  003394                     u4921:
 11138  003394  EFCD  F019         	goto	l4493
 11139  003398                     u4920:
 11140  003398  8E31               	bsf	(___flmul@prod+2)^0,7,c
 11141  00339A                     l4493:
 11142  00339A  90D8               	bcf	status,0,c
 11143  00339C  302E               	rrcf	___flmul@bexp^0,w,c
 11144  00339E  6E32               	movwf	(___flmul@prod+3)^0,c
 11145  0033A0                     l4495:
 11146  0033A0  5028               	movf	___flmul@sign^0,w,c
 11147  0033A2  1232               	iorwf	(___flmul@prod+3)^0,f,c
 11148  0033A4  C02F  F01C         	movff	___flmul@prod,?___flmul
 11149  0033A8  C030  F01D         	movff	___flmul@prod+1,?___flmul+1
 11150  0033AC  C031  F01E         	movff	___flmul@prod+2,?___flmul+2
 11151  0033B0  C032  F01F         	movff	___flmul@prod+3,?___flmul+3
 11152  0033B4                     l1102:
 11153  0033B4  0012               	return		;funcret
 11154  0033B6                     __end_of___flmul:
 11155                           	callstack 0
 11156                           
 11157 ;; *************** function ___flge *****************
 11158 ;; Defined at:
 11159 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
 11160 ;; Parameters:    Size  Location     Type
 11161 ;;  ff1             4   52[COMRAM] unsigned char 
 11162 ;;  ff2             4   56[COMRAM] unsigned char 
 11163 ;; Auto vars:     Size  Location     Type
 11164 ;;		None
 11165 ;; Return value:  Size  Location     Type
 11166 ;;		None               void
 11167 ;; Registers used:
 11168 ;;		wreg, status,2, status,0
 11169 ;; Tracked objects:
 11170 ;;		On entry : 0/0
 11171 ;;		On exit  : 0/0
 11172 ;;		Unchanged: 0/0
 11173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11174 ;;      Params:         8       0       0       0       0       0       0
 11175 ;;      Locals:         0       0       0       0       0       0       0
 11176 ;;      Temps:          4       0       0       0       0       0       0
 11177 ;;      Totals:        12       0       0       0       0       0       0
 11178 ;;Total ram usage:       12 bytes
 11179 ;; Hardware stack levels used:    1
 11180 ;; Hardware stack levels required when called:    1
 11181 ;; This function calls:
 11182 ;;		Nothing
 11183 ;; This function is called by:
 11184 ;;		_stateMachine
 11185 ;;		_efgtoa
 11186 ;; This function uses a non-reentrant model
 11187 ;;
 11188                           
 11189                           	psect	text34
 11190  004ACC                     __ptext34:
 11191                           	callstack 0
 11192  004ACC                     ___flge:
 11193                           	callstack 23
 11194  004ACC  0E00               	movlw	0
 11195  004ACE  1435               	andwf	___flge@ff1^0,w,c
 11196  004AD0  6E3D               	movwf	??___flge^0,c
 11197  004AD2  0E00               	movlw	0
 11198  004AD4  1436               	andwf	(___flge@ff1+1)^0,w,c
 11199  004AD6  6E3E               	movwf	(??___flge+1)^0,c
 11200  004AD8  0E80               	movlw	128
 11201  004ADA  1437               	andwf	(___flge@ff1+2)^0,w,c
 11202  004ADC  6E3F               	movwf	(??___flge+2)^0,c
 11203  004ADE  0E7F               	movlw	127
 11204  004AE0  1438               	andwf	(___flge@ff1+3)^0,w,c
 11205  004AE2  6E40               	movwf	(??___flge+3)^0,c
 11206  004AE4  503D               	movf	??___flge^0,w,c
 11207  004AE6  103E               	iorwf	(??___flge+1)^0,w,c
 11208  004AE8  103F               	iorwf	(??___flge+2)^0,w,c
 11209  004AEA  1040               	iorwf	(??___flge+3)^0,w,c
 11210  004AEC  A4D8               	btfss	status,2,c
 11211  004AEE  EF7B  F025         	goto	u5081
 11212  004AF2  EF7D  F025         	goto	u5080
 11213  004AF6                     u5081:
 11214  004AF6  EF85  F025         	goto	l4607
 11215  004AFA                     u5080:
 11216  004AFA  0E00               	movlw	0
 11217  004AFC  6E35               	movwf	___flge@ff1^0,c
 11218  004AFE  0E00               	movlw	0
 11219  004B00  6E36               	movwf	(___flge@ff1+1)^0,c
 11220  004B02  0E00               	movlw	0
 11221  004B04  6E37               	movwf	(___flge@ff1+2)^0,c
 11222  004B06  0E00               	movlw	0
 11223  004B08  6E38               	movwf	(___flge@ff1+3)^0,c
 11224  004B0A                     l4607:
 11225  004B0A  0E00               	movlw	0
 11226  004B0C  1439               	andwf	___flge@ff2^0,w,c
 11227  004B0E  6E3D               	movwf	??___flge^0,c
 11228  004B10  0E00               	movlw	0
 11229  004B12  143A               	andwf	(___flge@ff2+1)^0,w,c
 11230  004B14  6E3E               	movwf	(??___flge+1)^0,c
 11231  004B16  0E80               	movlw	128
 11232  004B18  143B               	andwf	(___flge@ff2+2)^0,w,c
 11233  004B1A  6E3F               	movwf	(??___flge+2)^0,c
 11234  004B1C  0E7F               	movlw	127
 11235  004B1E  143C               	andwf	(___flge@ff2+3)^0,w,c
 11236  004B20  6E40               	movwf	(??___flge+3)^0,c
 11237  004B22  503D               	movf	??___flge^0,w,c
 11238  004B24  103E               	iorwf	(??___flge+1)^0,w,c
 11239  004B26  103F               	iorwf	(??___flge+2)^0,w,c
 11240  004B28  1040               	iorwf	(??___flge+3)^0,w,c
 11241  004B2A  A4D8               	btfss	status,2,c
 11242  004B2C  EF9A  F025         	goto	u5091
 11243  004B30  EF9C  F025         	goto	u5090
 11244  004B34                     u5091:
 11245  004B34  EFA4  F025         	goto	l4611
 11246  004B38                     u5090:
 11247  004B38  0E00               	movlw	0
 11248  004B3A  6E39               	movwf	___flge@ff2^0,c
 11249  004B3C  0E00               	movlw	0
 11250  004B3E  6E3A               	movwf	(___flge@ff2+1)^0,c
 11251  004B40  0E00               	movlw	0
 11252  004B42  6E3B               	movwf	(___flge@ff2+2)^0,c
 11253  004B44  0E00               	movlw	0
 11254  004B46  6E3C               	movwf	(___flge@ff2+3)^0,c
 11255  004B48                     l4611:
 11256  004B48  AE38               	btfss	(___flge@ff1+3)^0,7,c
 11257  004B4A  EFA9  F025         	goto	u5101
 11258  004B4E  EFAB  F025         	goto	u5100
 11259  004B52                     u5101:
 11260  004B52  EFB4  F025         	goto	l4615
 11261  004B56                     u5100:
 11262  004B56  6C35               	negf	___flge@ff1^0,c
 11263  004B58  1E36               	comf	(___flge@ff1+1)^0,f,c
 11264  004B5A  B0D8               	btfsc	status,0,c
 11265  004B5C  2A36               	incf	(___flge@ff1+1)^0,f,c
 11266  004B5E  1E37               	comf	(___flge@ff1+2)^0,f,c
 11267  004B60  B0D8               	btfsc	status,0,c
 11268  004B62  2A37               	incf	(___flge@ff1+2)^0,f,c
 11269  004B64  0E80               	movlw	128
 11270  004B66  5638               	subfwb	(___flge@ff1+3)^0,f,c
 11271  004B68                     l4615:
 11272  004B68  AE3C               	btfss	(___flge@ff2+3)^0,7,c
 11273  004B6A  EFB9  F025         	goto	u5111
 11274  004B6E  EFBB  F025         	goto	u5110
 11275  004B72                     u5111:
 11276  004B72  EFC4  F025         	goto	l749
 11277  004B76                     u5110:
 11278  004B76  6C39               	negf	___flge@ff2^0,c
 11279  004B78  1E3A               	comf	(___flge@ff2+1)^0,f,c
 11280  004B7A  B0D8               	btfsc	status,0,c
 11281  004B7C  2A3A               	incf	(___flge@ff2+1)^0,f,c
 11282  004B7E  1E3B               	comf	(___flge@ff2+2)^0,f,c
 11283  004B80  B0D8               	btfsc	status,0,c
 11284  004B82  2A3B               	incf	(___flge@ff2+2)^0,f,c
 11285  004B84  0E80               	movlw	128
 11286  004B86  563C               	subfwb	(___flge@ff2+3)^0,f,c
 11287  004B88                     l749:
 11288  004B88  0E00               	movlw	0
 11289  004B8A  1A35               	xorwf	___flge@ff1^0,f,c
 11290  004B8C  0E00               	movlw	0
 11291  004B8E  1A36               	xorwf	(___flge@ff1+1)^0,f,c
 11292  004B90  0E00               	movlw	0
 11293  004B92  1A37               	xorwf	(___flge@ff1+2)^0,f,c
 11294  004B94  0E80               	movlw	128
 11295  004B96  1A38               	xorwf	(___flge@ff1+3)^0,f,c
 11296  004B98  0E00               	movlw	0
 11297  004B9A  1A39               	xorwf	___flge@ff2^0,f,c
 11298  004B9C  0E00               	movlw	0
 11299  004B9E  1A3A               	xorwf	(___flge@ff2+1)^0,f,c
 11300  004BA0  0E00               	movlw	0
 11301  004BA2  1A3B               	xorwf	(___flge@ff2+2)^0,f,c
 11302  004BA4  0E80               	movlw	128
 11303  004BA6  1A3C               	xorwf	(___flge@ff2+3)^0,f,c
 11304  004BA8  5039               	movf	___flge@ff2^0,w,c
 11305  004BAA  5C35               	subwf	___flge@ff1^0,w,c
 11306  004BAC  503A               	movf	(___flge@ff2+1)^0,w,c
 11307  004BAE  5836               	subwfb	(___flge@ff1+1)^0,w,c
 11308  004BB0  503B               	movf	(___flge@ff2+2)^0,w,c
 11309  004BB2  5837               	subwfb	(___flge@ff1+2)^0,w,c
 11310  004BB4  503C               	movf	(___flge@ff2+3)^0,w,c
 11311  004BB6  5838               	subwfb	(___flge@ff1+3)^0,w,c
 11312  004BB8  B0D8               	btfsc	status,0,c
 11313  004BBA  EFE1  F025         	goto	u5121
 11314  004BBE  EFE3  F025         	goto	u5120
 11315  004BC2                     u5121:
 11316  004BC2  EFE6  F025         	goto	l4621
 11317  004BC6                     u5120:
 11318  004BC6  90D8               	bcf	status,0,c
 11319  004BC8  EFE7  F025         	goto	l754
 11320  004BCC                     l4621:
 11321  004BCC  80D8               	bsf	status,0,c
 11322  004BCE                     l754:
 11323  004BCE  0012               	return		;funcret
 11324  004BD0                     __end_of___flge:
 11325                           	callstack 0
 11326                           
 11327 ;; *************** function ___fleq *****************
 11328 ;; Defined at:
 11329 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fleq.c"
 11330 ;; Parameters:    Size  Location     Type
 11331 ;;  ff1             4    0[COMRAM] unsigned char 
 11332 ;;  ff2             4    4[COMRAM] unsigned char 
 11333 ;; Auto vars:     Size  Location     Type
 11334 ;;		None
 11335 ;; Return value:  Size  Location     Type
 11336 ;;		None               void
 11337 ;; Registers used:
 11338 ;;		wreg, status,2, status,0
 11339 ;; Tracked objects:
 11340 ;;		On entry : 0/0
 11341 ;;		On exit  : 0/0
 11342 ;;		Unchanged: 0/0
 11343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11344 ;;      Params:         8       0       0       0       0       0       0
 11345 ;;      Locals:         0       0       0       0       0       0       0
 11346 ;;      Temps:          4       0       0       0       0       0       0
 11347 ;;      Totals:        12       0       0       0       0       0       0
 11348 ;;Total ram usage:       12 bytes
 11349 ;; Hardware stack levels used:    1
 11350 ;; Hardware stack levels required when called:    1
 11351 ;; This function calls:
 11352 ;;		Nothing
 11353 ;; This function is called by:
 11354 ;;		_efgtoa
 11355 ;; This function uses a non-reentrant model
 11356 ;;
 11357                           
 11358                           	psect	text35
 11359  0051A2                     __ptext35:
 11360                           	callstack 0
 11361  0051A2                     ___fleq:
 11362                           	callstack 23
 11363  0051A2  0E00               	movlw	0
 11364  0051A4  1401               	andwf	___fleq@ff1^0,w,c
 11365  0051A6  6E09               	movwf	??___fleq^0,c
 11366  0051A8  0E00               	movlw	0
 11367  0051AA  1402               	andwf	(___fleq@ff1+1)^0,w,c
 11368  0051AC  6E0A               	movwf	(??___fleq+1)^0,c
 11369  0051AE  0E80               	movlw	128
 11370  0051B0  1403               	andwf	(___fleq@ff1+2)^0,w,c
 11371  0051B2  6E0B               	movwf	(??___fleq+2)^0,c
 11372  0051B4  0E7F               	movlw	127
 11373  0051B6  1404               	andwf	(___fleq@ff1+3)^0,w,c
 11374  0051B8  6E0C               	movwf	(??___fleq+3)^0,c
 11375  0051BA  5009               	movf	??___fleq^0,w,c
 11376  0051BC  100A               	iorwf	(??___fleq+1)^0,w,c
 11377  0051BE  100B               	iorwf	(??___fleq+2)^0,w,c
 11378  0051C0  100C               	iorwf	(??___fleq+3)^0,w,c
 11379  0051C2  A4D8               	btfss	status,2,c
 11380  0051C4  EFE6  F028         	goto	u5051
 11381  0051C8  EFE8  F028         	goto	u5050
 11382  0051CC                     u5051:
 11383  0051CC  EFF0  F028         	goto	l4591
 11384  0051D0                     u5050:
 11385  0051D0  0E00               	movlw	0
 11386  0051D2  6E01               	movwf	___fleq@ff1^0,c
 11387  0051D4  0E00               	movlw	0
 11388  0051D6  6E02               	movwf	(___fleq@ff1+1)^0,c
 11389  0051D8  0E00               	movlw	0
 11390  0051DA  6E03               	movwf	(___fleq@ff1+2)^0,c
 11391  0051DC  0E00               	movlw	0
 11392  0051DE  6E04               	movwf	(___fleq@ff1+3)^0,c
 11393  0051E0                     l4591:
 11394  0051E0  0E00               	movlw	0
 11395  0051E2  1405               	andwf	___fleq@ff2^0,w,c
 11396  0051E4  6E09               	movwf	??___fleq^0,c
 11397  0051E6  0E00               	movlw	0
 11398  0051E8  1406               	andwf	(___fleq@ff2+1)^0,w,c
 11399  0051EA  6E0A               	movwf	(??___fleq+1)^0,c
 11400  0051EC  0E80               	movlw	128
 11401  0051EE  1407               	andwf	(___fleq@ff2+2)^0,w,c
 11402  0051F0  6E0B               	movwf	(??___fleq+2)^0,c
 11403  0051F2  0E7F               	movlw	127
 11404  0051F4  1408               	andwf	(___fleq@ff2+3)^0,w,c
 11405  0051F6  6E0C               	movwf	(??___fleq+3)^0,c
 11406  0051F8  5009               	movf	??___fleq^0,w,c
 11407  0051FA  100A               	iorwf	(??___fleq+1)^0,w,c
 11408  0051FC  100B               	iorwf	(??___fleq+2)^0,w,c
 11409  0051FE  100C               	iorwf	(??___fleq+3)^0,w,c
 11410  005200  A4D8               	btfss	status,2,c
 11411  005202  EF05  F029         	goto	u5061
 11412  005206  EF07  F029         	goto	u5060
 11413  00520A                     u5061:
 11414  00520A  EF0F  F029         	goto	l4595
 11415  00520E                     u5060:
 11416  00520E  0E00               	movlw	0
 11417  005210  6E05               	movwf	___fleq@ff2^0,c
 11418  005212  0E00               	movlw	0
 11419  005214  6E06               	movwf	(___fleq@ff2+1)^0,c
 11420  005216  0E00               	movlw	0
 11421  005218  6E07               	movwf	(___fleq@ff2+2)^0,c
 11422  00521A  0E00               	movlw	0
 11423  00521C  6E08               	movwf	(___fleq@ff2+3)^0,c
 11424  00521E                     l4595:
 11425  00521E  5005               	movf	___fleq@ff2^0,w,c
 11426  005220  1801               	xorwf	___fleq@ff1^0,w,c
 11427  005222  E10F               	bnz	u5070
 11428  005224  5006               	movf	(___fleq@ff2+1)^0,w,c
 11429  005226  1802               	xorwf	(___fleq@ff1+1)^0,w,c
 11430  005228  E10C               	bnz	u5070
 11431  00522A  5007               	movf	(___fleq@ff2+2)^0,w,c
 11432  00522C  1803               	xorwf	(___fleq@ff1+2)^0,w,c
 11433  00522E  E109               	bnz	u5070
 11434  005230  5008               	movf	(___fleq@ff2+3)^0,w,c
 11435  005232  1804               	xorwf	(___fleq@ff1+3)^0,w,c
 11436  005234  B4D8               	btfsc	status,2,c
 11437  005236  EF1F  F029         	goto	u5071
 11438  00523A  EF21  F029         	goto	u5070
 11439  00523E                     u5071:
 11440  00523E  EF24  F029         	goto	l4599
 11441  005242                     u5070:
 11442  005242  90D8               	bcf	status,0,c
 11443  005244  EF25  F029         	goto	l743
 11444  005248                     l4599:
 11445  005248  80D8               	bsf	status,0,c
 11446  00524A                     l743:
 11447  00524A  0012               	return		;funcret
 11448  00524C                     __end_of___fleq:
 11449                           	callstack 0
 11450                           
 11451 ;; *************** function ___fldiv *****************
 11452 ;; Defined at:
 11453 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
 11454 ;; Parameters:    Size  Location     Type
 11455 ;;  b               4   52[COMRAM] unsigned char 
 11456 ;;  a               4   56[COMRAM] unsigned char 
 11457 ;; Auto vars:     Size  Location     Type
 11458 ;;  grs             4   71[COMRAM] unsigned long 
 11459 ;;  rem             4   64[COMRAM] unsigned long 
 11460 ;;  new_exp         2   69[COMRAM] short 
 11461 ;;  aexp            1   76[COMRAM] unsigned char 
 11462 ;;  bexp            1   75[COMRAM] unsigned char 
 11463 ;;  sign            1   68[COMRAM] unsigned char 
 11464 ;; Return value:  Size  Location     Type
 11465 ;;                  4   52[COMRAM] unsigned char 
 11466 ;; Registers used:
 11467 ;;		wreg, status,2, status,0
 11468 ;; Tracked objects:
 11469 ;;		On entry : 0/0
 11470 ;;		On exit  : 0/0
 11471 ;;		Unchanged: 0/0
 11472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11473 ;;      Params:         8       0       0       0       0       0       0
 11474 ;;      Locals:        13       0       0       0       0       0       0
 11475 ;;      Temps:          4       0       0       0       0       0       0
 11476 ;;      Totals:        25       0       0       0       0       0       0
 11477 ;;Total ram usage:       25 bytes
 11478 ;; Hardware stack levels used:    1
 11479 ;; Hardware stack levels required when called:    1
 11480 ;; This function calls:
 11481 ;;		Nothing
 11482 ;; This function is called by:
 11483 ;;		_scanAdcConversion
 11484 ;;		_efgtoa
 11485 ;; This function uses a non-reentrant model
 11486 ;;
 11487                           
 11488                           	psect	text36
 11489  0033B6                     __ptext36:
 11490                           	callstack 0
 11491  0033B6                     ___fldiv:
 11492                           	callstack 25
 11493  0033B6  5038               	movf	(___fldiv@b+3)^0,w,c
 11494  0033B8  0B80               	andlw	128
 11495  0033BA  6E45               	movwf	___fldiv@sign^0,c
 11496  0033BC  5038               	movf	(___fldiv@b+3)^0,w,c
 11497  0033BE  2438               	addwf	(___fldiv@b+3)^0,w,c
 11498  0033C0  6E4C               	movwf	___fldiv@bexp^0,c
 11499  0033C2  AE37               	btfss	(___fldiv@b+2)^0,7,c
 11500  0033C4  EFE6  F019         	goto	u4511
 11501  0033C8  EFE8  F019         	goto	u4510
 11502  0033CC                     u4511:
 11503  0033CC  EFE9  F019         	goto	l4239
 11504  0033D0                     u4510:
 11505  0033D0  804C               	bsf	___fldiv@bexp^0,0,c
 11506  0033D2                     l4239:
 11507  0033D2  504C               	movf	___fldiv@bexp^0,w,c
 11508  0033D4  B4D8               	btfsc	status,2,c
 11509  0033D6  EFEF  F019         	goto	u4521
 11510  0033DA  EFF1  F019         	goto	u4520
 11511  0033DE                     u4521:
 11512  0033DE  EF06  F01A         	goto	l4249
 11513  0033E2                     u4520:
 11514  0033E2  284C               	incf	___fldiv@bexp^0,w,c
 11515  0033E4  A4D8               	btfss	status,2,c
 11516  0033E6  EFF7  F019         	goto	u4531
 11517  0033EA  EFF9  F019         	goto	u4530
 11518  0033EE                     u4531:
 11519  0033EE  EF01  F01A         	goto	l4245
 11520  0033F2                     u4530:
 11521  0033F2  0E00               	movlw	0
 11522  0033F4  6E35               	movwf	___fldiv@b^0,c
 11523  0033F6  0E00               	movlw	0
 11524  0033F8  6E36               	movwf	(___fldiv@b+1)^0,c
 11525  0033FA  0E00               	movlw	0
 11526  0033FC  6E37               	movwf	(___fldiv@b+2)^0,c
 11527  0033FE  0E00               	movlw	0
 11528  003400  6E38               	movwf	(___fldiv@b+3)^0,c
 11529  003402                     l4245:
 11530  003402  8E37               	bsf	(___fldiv@b+2)^0,7,c
 11531  003404  0E00               	movlw	0
 11532  003406  6E38               	movwf	(___fldiv@b+3)^0,c
 11533  003408  EF0E  F01A         	goto	l4251
 11534  00340C                     l4249:
 11535  00340C  0E00               	movlw	0
 11536  00340E  6E35               	movwf	___fldiv@b^0,c
 11537  003410  0E00               	movlw	0
 11538  003412  6E36               	movwf	(___fldiv@b+1)^0,c
 11539  003414  0E00               	movlw	0
 11540  003416  6E37               	movwf	(___fldiv@b+2)^0,c
 11541  003418  0E00               	movlw	0
 11542  00341A  6E38               	movwf	(___fldiv@b+3)^0,c
 11543  00341C                     l4251:
 11544  00341C  503C               	movf	(___fldiv@a+3)^0,w,c
 11545  00341E  0B80               	andlw	128
 11546  003420  1A45               	xorwf	___fldiv@sign^0,f,c
 11547  003422  503C               	movf	(___fldiv@a+3)^0,w,c
 11548  003424  243C               	addwf	(___fldiv@a+3)^0,w,c
 11549  003426  6E4D               	movwf	___fldiv@aexp^0,c
 11550  003428  AE3B               	btfss	(___fldiv@a+2)^0,7,c
 11551  00342A  EF19  F01A         	goto	u4541
 11552  00342E  EF1B  F01A         	goto	u4540
 11553  003432                     u4541:
 11554  003432  EF1C  F01A         	goto	l4259
 11555  003436                     u4540:
 11556  003436  804D               	bsf	___fldiv@aexp^0,0,c
 11557  003438                     l4259:
 11558  003438  504D               	movf	___fldiv@aexp^0,w,c
 11559  00343A  B4D8               	btfsc	status,2,c
 11560  00343C  EF22  F01A         	goto	u4551
 11561  003440  EF24  F01A         	goto	u4550
 11562  003444                     u4551:
 11563  003444  EF39  F01A         	goto	l4269
 11564  003448                     u4550:
 11565  003448  284D               	incf	___fldiv@aexp^0,w,c
 11566  00344A  A4D8               	btfss	status,2,c
 11567  00344C  EF2A  F01A         	goto	u4561
 11568  003450  EF2C  F01A         	goto	u4560
 11569  003454                     u4561:
 11570  003454  EF34  F01A         	goto	l4265
 11571  003458                     u4560:
 11572  003458  0E00               	movlw	0
 11573  00345A  6E39               	movwf	___fldiv@a^0,c
 11574  00345C  0E00               	movlw	0
 11575  00345E  6E3A               	movwf	(___fldiv@a+1)^0,c
 11576  003460  0E00               	movlw	0
 11577  003462  6E3B               	movwf	(___fldiv@a+2)^0,c
 11578  003464  0E00               	movlw	0
 11579  003466  6E3C               	movwf	(___fldiv@a+3)^0,c
 11580  003468                     l4265:
 11581  003468  8E3B               	bsf	(___fldiv@a+2)^0,7,c
 11582  00346A  0E00               	movlw	0
 11583  00346C  6E3C               	movwf	(___fldiv@a+3)^0,c
 11584  00346E  EF41  F01A         	goto	l4271
 11585  003472                     l4269:
 11586  003472  0E00               	movlw	0
 11587  003474  6E39               	movwf	___fldiv@a^0,c
 11588  003476  0E00               	movlw	0
 11589  003478  6E3A               	movwf	(___fldiv@a+1)^0,c
 11590  00347A  0E00               	movlw	0
 11591  00347C  6E3B               	movwf	(___fldiv@a+2)^0,c
 11592  00347E  0E00               	movlw	0
 11593  003480  6E3C               	movwf	(___fldiv@a+3)^0,c
 11594  003482                     l4271:
 11595  003482  5039               	movf	___fldiv@a^0,w,c
 11596  003484  103A               	iorwf	(___fldiv@a+1)^0,w,c
 11597  003486  103B               	iorwf	(___fldiv@a+2)^0,w,c
 11598  003488  103C               	iorwf	(___fldiv@a+3)^0,w,c
 11599  00348A  A4D8               	btfss	status,2,c
 11600  00348C  EF4A  F01A         	goto	u4571
 11601  003490  EF4C  F01A         	goto	u4570
 11602  003494                     u4571:
 11603  003494  EF64  F01A         	goto	l4283
 11604  003498                     u4570:
 11605  003498  0E00               	movlw	0
 11606  00349A  6E35               	movwf	___fldiv@b^0,c
 11607  00349C  0E00               	movlw	0
 11608  00349E  6E36               	movwf	(___fldiv@b+1)^0,c
 11609  0034A0  0E00               	movlw	0
 11610  0034A2  6E37               	movwf	(___fldiv@b+2)^0,c
 11611  0034A4  0E00               	movlw	0
 11612  0034A6  6E38               	movwf	(___fldiv@b+3)^0,c
 11613  0034A8  0E80               	movlw	128
 11614  0034AA  1237               	iorwf	(___fldiv@b+2)^0,f,c
 11615  0034AC  0E7F               	movlw	127
 11616  0034AE  1238               	iorwf	(___fldiv@b+3)^0,f,c
 11617  0034B0                     l4277:
 11618  0034B0  5045               	movf	___fldiv@sign^0,w,c
 11619  0034B2  1238               	iorwf	(___fldiv@b+3)^0,f,c
 11620  0034B4  C035  F035         	movff	___fldiv@b,?___fldiv
 11621  0034B8  C036  F036         	movff	___fldiv@b+1,?___fldiv+1
 11622  0034BC  C037  F037         	movff	___fldiv@b+2,?___fldiv+2
 11623  0034C0  C038  F038         	movff	___fldiv@b+3,?___fldiv+3
 11624  0034C4  EFA7  F01B         	goto	l1066
 11625  0034C8                     l4283:
 11626  0034C8  504C               	movf	___fldiv@bexp^0,w,c
 11627  0034CA  A4D8               	btfss	status,2,c
 11628  0034CC  EF6A  F01A         	goto	u4581
 11629  0034D0  EF6C  F01A         	goto	u4580
 11630  0034D4                     u4581:
 11631  0034D4  EF76  F01A         	goto	l4291
 11632  0034D8                     u4580:
 11633  0034D8  0E00               	movlw	0
 11634  0034DA  6E35               	movwf	?___fldiv^0,c
 11635  0034DC  0E00               	movlw	0
 11636  0034DE  6E36               	movwf	(?___fldiv+1)^0,c
 11637  0034E0  0E00               	movlw	0
 11638  0034E2  6E37               	movwf	(?___fldiv+2)^0,c
 11639  0034E4  0E00               	movlw	0
 11640  0034E6  6E38               	movwf	(?___fldiv+3)^0,c
 11641  0034E8  EFA7  F01B         	goto	l1066
 11642  0034EC                     l4291:
 11643  0034EC  504D               	movf	___fldiv@aexp^0,w,c
 11644  0034EE  C04C  F03D         	movff	___fldiv@bexp,??___fldiv
 11645  0034F2  6A3E               	clrf	(??___fldiv+1)^0,c
 11646  0034F4  5E3D               	subwf	??___fldiv^0,f,c
 11647  0034F6  0E00               	movlw	0
 11648  0034F8  5A3E               	subwfb	(??___fldiv+1)^0,f,c
 11649  0034FA  0E7F               	movlw	127
 11650  0034FC  243D               	addwf	??___fldiv^0,w,c
 11651  0034FE  6E46               	movwf	___fldiv@new_exp^0,c
 11652  003500  0E00               	movlw	0
 11653  003502  203E               	addwfc	(??___fldiv+1)^0,w,c
 11654  003504  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 11655  003506  C035  F041         	movff	___fldiv@b,___fldiv@rem
 11656  00350A  C036  F042         	movff	___fldiv@b+1,___fldiv@rem+1
 11657  00350E  C037  F043         	movff	___fldiv@b+2,___fldiv@rem+2
 11658  003512  C038  F044         	movff	___fldiv@b+3,___fldiv@rem+3
 11659  003516  0E00               	movlw	0
 11660  003518  6E35               	movwf	___fldiv@b^0,c
 11661  00351A  0E00               	movlw	0
 11662  00351C  6E36               	movwf	(___fldiv@b+1)^0,c
 11663  00351E  0E00               	movlw	0
 11664  003520  6E37               	movwf	(___fldiv@b+2)^0,c
 11665  003522  0E00               	movlw	0
 11666  003524  6E38               	movwf	(___fldiv@b+3)^0,c
 11667  003526  0E00               	movlw	0
 11668  003528  6E48               	movwf	___fldiv@grs^0,c
 11669  00352A  0E00               	movlw	0
 11670  00352C  6E49               	movwf	(___fldiv@grs+1)^0,c
 11671  00352E  0E00               	movlw	0
 11672  003530  6E4A               	movwf	(___fldiv@grs+2)^0,c
 11673  003532  0E00               	movlw	0
 11674  003534  6E4B               	movwf	(___fldiv@grs+3)^0,c
 11675  003536  0E00               	movlw	0
 11676  003538  6E4D               	movwf	___fldiv@aexp^0,c
 11677  00353A  EFD7  F01A         	goto	l1068
 11678  00353E                     l4301:
 11679  00353E  504D               	movf	___fldiv@aexp^0,w,c
 11680  003540  B4D8               	btfsc	status,2,c
 11681  003542  EFA5  F01A         	goto	u4591
 11682  003546  EFA7  F01A         	goto	u4590
 11683  00354A                     u4591:
 11684  00354A  EFBE  F01A         	goto	l4309
 11685  00354E                     u4590:
 11686  00354E  90D8               	bcf	status,0,c
 11687  003550  3641               	rlcf	___fldiv@rem^0,f,c
 11688  003552  3642               	rlcf	(___fldiv@rem+1)^0,f,c
 11689  003554  3643               	rlcf	(___fldiv@rem+2)^0,f,c
 11690  003556  3644               	rlcf	(___fldiv@rem+3)^0,f,c
 11691  003558  90D8               	bcf	status,0,c
 11692  00355A  3635               	rlcf	___fldiv@b^0,f,c
 11693  00355C  3636               	rlcf	(___fldiv@b+1)^0,f,c
 11694  00355E  3637               	rlcf	(___fldiv@b+2)^0,f,c
 11695  003560  3638               	rlcf	(___fldiv@b+3)^0,f,c
 11696  003562  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 11697  003564  EFB6  F01A         	goto	u4601
 11698  003568  EFB8  F01A         	goto	u4600
 11699  00356C                     u4601:
 11700  00356C  EFB9  F01A         	goto	l1071
 11701  003570                     u4600:
 11702  003570  8035               	bsf	___fldiv@b^0,0,c
 11703  003572                     l1071:
 11704  003572  90D8               	bcf	status,0,c
 11705  003574  3648               	rlcf	___fldiv@grs^0,f,c
 11706  003576  3649               	rlcf	(___fldiv@grs+1)^0,f,c
 11707  003578  364A               	rlcf	(___fldiv@grs+2)^0,f,c
 11708  00357A  364B               	rlcf	(___fldiv@grs+3)^0,f,c
 11709  00357C                     l4309:
 11710  00357C  5039               	movf	___fldiv@a^0,w,c
 11711  00357E  5C41               	subwf	___fldiv@rem^0,w,c
 11712  003580  503A               	movf	(___fldiv@a+1)^0,w,c
 11713  003582  5842               	subwfb	(___fldiv@rem+1)^0,w,c
 11714  003584  503B               	movf	(___fldiv@a+2)^0,w,c
 11715  003586  5843               	subwfb	(___fldiv@rem+2)^0,w,c
 11716  003588  503C               	movf	(___fldiv@a+3)^0,w,c
 11717  00358A  5844               	subwfb	(___fldiv@rem+3)^0,w,c
 11718  00358C  A0D8               	btfss	status,0,c
 11719  00358E  EFCB  F01A         	goto	u4611
 11720  003592  EFCD  F01A         	goto	u4610
 11721  003596                     u4611:
 11722  003596  EFD6  F01A         	goto	l4315
 11723  00359A                     u4610:
 11724  00359A  8C4B               	bsf	(___fldiv@grs+3)^0,6,c
 11725  00359C  5039               	movf	___fldiv@a^0,w,c
 11726  00359E  5E41               	subwf	___fldiv@rem^0,f,c
 11727  0035A0  503A               	movf	(___fldiv@a+1)^0,w,c
 11728  0035A2  5A42               	subwfb	(___fldiv@rem+1)^0,f,c
 11729  0035A4  503B               	movf	(___fldiv@a+2)^0,w,c
 11730  0035A6  5A43               	subwfb	(___fldiv@rem+2)^0,f,c
 11731  0035A8  503C               	movf	(___fldiv@a+3)^0,w,c
 11732  0035AA  5A44               	subwfb	(___fldiv@rem+3)^0,f,c
 11733  0035AC                     l4315:
 11734  0035AC  2A4D               	incf	___fldiv@aexp^0,f,c
 11735  0035AE                     l1068:
 11736  0035AE  0E19               	movlw	25
 11737  0035B0  644D               	cpfsgt	___fldiv@aexp^0,c
 11738  0035B2  EFDD  F01A         	goto	u4621
 11739  0035B6  EFDF  F01A         	goto	u4620
 11740  0035BA                     u4621:
 11741  0035BA  EF9F  F01A         	goto	l4301
 11742  0035BE                     u4620:
 11743  0035BE  5041               	movf	___fldiv@rem^0,w,c
 11744  0035C0  1042               	iorwf	(___fldiv@rem+1)^0,w,c
 11745  0035C2  1043               	iorwf	(___fldiv@rem+2)^0,w,c
 11746  0035C4  1044               	iorwf	(___fldiv@rem+3)^0,w,c
 11747  0035C6  B4D8               	btfsc	status,2,c
 11748  0035C8  EFE8  F01A         	goto	u4631
 11749  0035CC  EFEA  F01A         	goto	u4630
 11750  0035D0                     u4631:
 11751  0035D0  EF02  F01B         	goto	l4327
 11752  0035D4                     u4630:
 11753  0035D4  8048               	bsf	___fldiv@grs^0,0,c
 11754  0035D6  EF02  F01B         	goto	l4327
 11755  0035DA                     l4321:
 11756  0035DA  90D8               	bcf	status,0,c
 11757  0035DC  3635               	rlcf	___fldiv@b^0,f,c
 11758  0035DE  3636               	rlcf	(___fldiv@b+1)^0,f,c
 11759  0035E0  3637               	rlcf	(___fldiv@b+2)^0,f,c
 11760  0035E2  3638               	rlcf	(___fldiv@b+3)^0,f,c
 11761  0035E4  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 11762  0035E6  EFF7  F01A         	goto	u4641
 11763  0035EA  EFF9  F01A         	goto	u4640
 11764  0035EE                     u4641:
 11765  0035EE  EFFA  F01A         	goto	l1077
 11766  0035F2                     u4640:
 11767  0035F2  8035               	bsf	___fldiv@b^0,0,c
 11768  0035F4                     l1077:
 11769  0035F4  90D8               	bcf	status,0,c
 11770  0035F6  3648               	rlcf	___fldiv@grs^0,f,c
 11771  0035F8  3649               	rlcf	(___fldiv@grs+1)^0,f,c
 11772  0035FA  364A               	rlcf	(___fldiv@grs+2)^0,f,c
 11773  0035FC  364B               	rlcf	(___fldiv@grs+3)^0,f,c
 11774  0035FE  0646               	decf	___fldiv@new_exp^0,f,c
 11775  003600  A0D8               	btfss	status,0,c
 11776  003602  0647               	decf	(___fldiv@new_exp+1)^0,f,c
 11777  003604                     l4327:
 11778  003604  AE37               	btfss	(___fldiv@b+2)^0,7,c
 11779  003606  EF07  F01B         	goto	u4651
 11780  00360A  EF09  F01B         	goto	u4650
 11781  00360E                     u4651:
 11782  00360E  EFED  F01A         	goto	l4321
 11783  003612                     u4650:
 11784  003612  0E00               	movlw	0
 11785  003614  6E4D               	movwf	___fldiv@aexp^0,c
 11786  003616  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 11787  003618  EF10  F01B         	goto	u4661
 11788  00361C  EF12  F01B         	goto	u4660
 11789  003620                     u4661:
 11790  003620  EF36  F01B         	goto	l1079
 11791  003624                     u4660:
 11792  003624  0EFF               	movlw	255
 11793  003626  1448               	andwf	___fldiv@grs^0,w,c
 11794  003628  6E3D               	movwf	??___fldiv^0,c
 11795  00362A  0EFF               	movlw	255
 11796  00362C  1449               	andwf	(___fldiv@grs+1)^0,w,c
 11797  00362E  6E3E               	movwf	(??___fldiv+1)^0,c
 11798  003630  0EFF               	movlw	255
 11799  003632  144A               	andwf	(___fldiv@grs+2)^0,w,c
 11800  003634  6E3F               	movwf	(??___fldiv+2)^0,c
 11801  003636  0E7F               	movlw	127
 11802  003638  144B               	andwf	(___fldiv@grs+3)^0,w,c
 11803  00363A  6E40               	movwf	(??___fldiv+3)^0,c
 11804  00363C  503D               	movf	??___fldiv^0,w,c
 11805  00363E  103E               	iorwf	(??___fldiv+1)^0,w,c
 11806  003640  103F               	iorwf	(??___fldiv+2)^0,w,c
 11807  003642  1040               	iorwf	(??___fldiv+3)^0,w,c
 11808  003644  B4D8               	btfsc	status,2,c
 11809  003646  EF27  F01B         	goto	u4671
 11810  00364A  EF29  F01B         	goto	u4670
 11811  00364E                     u4671:
 11812  00364E  EF2D  F01B         	goto	l1080
 11813  003652                     u4670:
 11814  003652                     l4335:
 11815  003652  0E01               	movlw	1
 11816  003654  6E4D               	movwf	___fldiv@aexp^0,c
 11817  003656  EF36  F01B         	goto	l1079
 11818  00365A                     l1080:
 11819  00365A  A035               	btfss	___fldiv@b^0,0,c
 11820  00365C  EF32  F01B         	goto	u4681
 11821  003660  EF34  F01B         	goto	u4680
 11822  003664                     u4681:
 11823  003664  EF36  F01B         	goto	l1079
 11824  003668                     u4680:
 11825  003668  EF29  F01B         	goto	l4335
 11826  00366C                     l1079:
 11827  00366C  504D               	movf	___fldiv@aexp^0,w,c
 11828  00366E  B4D8               	btfsc	status,2,c
 11829  003670  EF3C  F01B         	goto	u4691
 11830  003674  EF3E  F01B         	goto	u4690
 11831  003678                     u4691:
 11832  003678  EF62  F01B         	goto	l4347
 11833  00367C                     u4690:
 11834  00367C  0E01               	movlw	1
 11835  00367E  2635               	addwf	___fldiv@b^0,f,c
 11836  003680  0E00               	movlw	0
 11837  003682  2236               	addwfc	(___fldiv@b+1)^0,f,c
 11838  003684  2237               	addwfc	(___fldiv@b+2)^0,f,c
 11839  003686  2238               	addwfc	(___fldiv@b+3)^0,f,c
 11840  003688  A038               	btfss	(___fldiv@b+3)^0,0,c
 11841  00368A  EF49  F01B         	goto	u4701
 11842  00368E  EF4B  F01B         	goto	u4700
 11843  003692                     u4701:
 11844  003692  EF62  F01B         	goto	l4347
 11845  003696                     u4700:
 11846  003696  C035  F03D         	movff	___fldiv@b,??___fldiv
 11847  00369A  C036  F03E         	movff	___fldiv@b+1,??___fldiv+1
 11848  00369E  C037  F03F         	movff	___fldiv@b+2,??___fldiv+2
 11849  0036A2  C038  F040         	movff	___fldiv@b+3,??___fldiv+3
 11850  0036A6  3440               	rlcf	(??___fldiv+3)^0,w,c
 11851  0036A8  3240               	rrcf	(??___fldiv+3)^0,f,c
 11852  0036AA  323F               	rrcf	(??___fldiv+2)^0,f,c
 11853  0036AC  323E               	rrcf	(??___fldiv+1)^0,f,c
 11854  0036AE  323D               	rrcf	??___fldiv^0,f,c
 11855  0036B0  C03D  F035         	movff	??___fldiv,___fldiv@b
 11856  0036B4  C03E  F036         	movff	??___fldiv+1,___fldiv@b+1
 11857  0036B8  C03F  F037         	movff	??___fldiv+2,___fldiv@b+2
 11858  0036BC  C040  F038         	movff	??___fldiv+3,___fldiv@b+3
 11859  0036C0  4A46               	infsnz	___fldiv@new_exp^0,f,c
 11860  0036C2  2A47               	incf	(___fldiv@new_exp+1)^0,f,c
 11861  0036C4                     l4347:
 11862  0036C4  BE47               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11863  0036C6  EF6D  F01B         	goto	u4711
 11864  0036CA  5047               	movf	(___fldiv@new_exp+1)^0,w,c
 11865  0036CC  E108               	bnz	u4710
 11866  0036CE  2846               	incf	___fldiv@new_exp^0,w,c
 11867  0036D0  A0D8               	btfss	status,0,c
 11868  0036D2  EF6D  F01B         	goto	u4711
 11869  0036D6  EF6F  F01B         	goto	u4710
 11870  0036DA                     u4711:
 11871  0036DA  EF7A  F01B         	goto	l4351
 11872  0036DE                     u4710:
 11873  0036DE  0E00               	movlw	0
 11874  0036E0  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 11875  0036E2  6846               	setf	___fldiv@new_exp^0,c
 11876  0036E4  0E00               	movlw	0
 11877  0036E6  6E35               	movwf	___fldiv@b^0,c
 11878  0036E8  0E00               	movlw	0
 11879  0036EA  6E36               	movwf	(___fldiv@b+1)^0,c
 11880  0036EC  0E00               	movlw	0
 11881  0036EE  6E37               	movwf	(___fldiv@b+2)^0,c
 11882  0036F0  0E00               	movlw	0
 11883  0036F2  6E38               	movwf	(___fldiv@b+3)^0,c
 11884  0036F4                     l4351:
 11885  0036F4  BE47               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11886  0036F6  EF87  F01B         	goto	u4720
 11887  0036FA  5047               	movf	(___fldiv@new_exp+1)^0,w,c
 11888  0036FC  E106               	bnz	u4721
 11889  0036FE  0446               	decf	___fldiv@new_exp^0,w,c
 11890  003700  B0D8               	btfsc	status,0,c
 11891  003702  EF85  F01B         	goto	u4721
 11892  003706  EF87  F01B         	goto	u4720
 11893  00370A                     u4721:
 11894  00370A  EF95  F01B         	goto	l4355
 11895  00370E                     u4720:
 11896  00370E  0E00               	movlw	0
 11897  003710  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 11898  003712  0E00               	movlw	0
 11899  003714  6E46               	movwf	___fldiv@new_exp^0,c
 11900  003716  0E00               	movlw	0
 11901  003718  6E35               	movwf	___fldiv@b^0,c
 11902  00371A  0E00               	movlw	0
 11903  00371C  6E36               	movwf	(___fldiv@b+1)^0,c
 11904  00371E  0E00               	movlw	0
 11905  003720  6E37               	movwf	(___fldiv@b+2)^0,c
 11906  003722  0E00               	movlw	0
 11907  003724  6E38               	movwf	(___fldiv@b+3)^0,c
 11908  003726  0E00               	movlw	0
 11909  003728  6E45               	movwf	___fldiv@sign^0,c
 11910  00372A                     l4355:
 11911  00372A  C046  F04C         	movff	___fldiv@new_exp,___fldiv@bexp
 11912  00372E  A04C               	btfss	___fldiv@bexp^0,0,c
 11913  003730  EF9C  F01B         	goto	u4731
 11914  003734  EF9E  F01B         	goto	u4730
 11915  003738                     u4731:
 11916  003738  EFA1  F01B         	goto	l4361
 11917  00373C                     u4730:
 11918  00373C  8E37               	bsf	(___fldiv@b+2)^0,7,c
 11919  00373E  EFA2  F01B         	goto	l4363
 11920  003742                     l4361:
 11921  003742  9E37               	bcf	(___fldiv@b+2)^0,7,c
 11922  003744                     l4363:
 11923  003744  90D8               	bcf	status,0,c
 11924  003746  304C               	rrcf	___fldiv@bexp^0,w,c
 11925  003748  6E38               	movwf	(___fldiv@b+3)^0,c
 11926  00374A  EF58  F01A         	goto	l4277
 11927  00374E                     l1066:
 11928  00374E  0012               	return		;funcret
 11929  003750                     __end_of___fldiv:
 11930                           	callstack 0
 11931                           
 11932 ;; *************** function ___awmod *****************
 11933 ;; Defined at:
 11934 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
 11935 ;; Parameters:    Size  Location     Type
 11936 ;;  dividend        2    0[COMRAM] int 
 11937 ;;  divisor         2    2[COMRAM] int 
 11938 ;; Auto vars:     Size  Location     Type
 11939 ;;  sign            1    5[COMRAM] unsigned char 
 11940 ;;  counter         1    4[COMRAM] unsigned char 
 11941 ;; Return value:  Size  Location     Type
 11942 ;;                  2    0[COMRAM] int 
 11943 ;; Registers used:
 11944 ;;		wreg, status,2, status,0
 11945 ;; Tracked objects:
 11946 ;;		On entry : 0/0
 11947 ;;		On exit  : 0/0
 11948 ;;		Unchanged: 0/0
 11949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11950 ;;      Params:         4       0       0       0       0       0       0
 11951 ;;      Locals:         2       0       0       0       0       0       0
 11952 ;;      Temps:          0       0       0       0       0       0       0
 11953 ;;      Totals:         6       0       0       0       0       0       0
 11954 ;;Total ram usage:        6 bytes
 11955 ;; Hardware stack levels used:    1
 11956 ;; Hardware stack levels required when called:    1
 11957 ;; This function calls:
 11958 ;;		Nothing
 11959 ;; This function is called by:
 11960 ;;		_efgtoa
 11961 ;; This function uses a non-reentrant model
 11962 ;;
 11963                           
 11964                           	psect	text37
 11965  0050F2                     __ptext37:
 11966                           	callstack 0
 11967  0050F2                     ___awmod:
 11968                           	callstack 23
 11969  0050F2  0E00               	movlw	0
 11970  0050F4  6E06               	movwf	___awmod@sign^0,c
 11971  0050F6  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
 11972  0050F8  EF82  F028         	goto	u4990
 11973  0050FC  EF80  F028         	goto	u4991
 11974  005100                     u4991:
 11975  005100  EF88  F028         	goto	l4559
 11976  005104                     u4990:
 11977  005104  6C01               	negf	___awmod@dividend^0,c
 11978  005106  1E02               	comf	(___awmod@dividend+1)^0,f,c
 11979  005108  B0D8               	btfsc	status,0,c
 11980  00510A  2A02               	incf	(___awmod@dividend+1)^0,f,c
 11981  00510C  0E01               	movlw	1
 11982  00510E  6E06               	movwf	___awmod@sign^0,c
 11983  005110                     l4559:
 11984  005110  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
 11985  005112  EF8F  F028         	goto	u5000
 11986  005116  EF8D  F028         	goto	u5001
 11987  00511A                     u5001:
 11988  00511A  EF93  F028         	goto	l4563
 11989  00511E                     u5000:
 11990  00511E  6C03               	negf	___awmod@divisor^0,c
 11991  005120  1E04               	comf	(___awmod@divisor+1)^0,f,c
 11992  005122  B0D8               	btfsc	status,0,c
 11993  005124  2A04               	incf	(___awmod@divisor+1)^0,f,c
 11994  005126                     l4563:
 11995  005126  5003               	movf	___awmod@divisor^0,w,c
 11996  005128  1004               	iorwf	(___awmod@divisor+1)^0,w,c
 11997  00512A  B4D8               	btfsc	status,2,c
 11998  00512C  EF9A  F028         	goto	u5011
 11999  005130  EF9C  F028         	goto	u5010
 12000  005134                     u5011:
 12001  005134  EFC0  F028         	goto	l4579
 12002  005138                     u5010:
 12003  005138  0E01               	movlw	1
 12004  00513A  6E05               	movwf	___awmod@counter^0,c
 12005  00513C  EFA4  F028         	goto	l4569
 12006  005140                     l4567:
 12007  005140  90D8               	bcf	status,0,c
 12008  005142  3603               	rlcf	___awmod@divisor^0,f,c
 12009  005144  3604               	rlcf	(___awmod@divisor+1)^0,f,c
 12010  005146  2A05               	incf	___awmod@counter^0,f,c
 12011  005148                     l4569:
 12012  005148  AE04               	btfss	(___awmod@divisor+1)^0,7,c
 12013  00514A  EFA9  F028         	goto	u5021
 12014  00514E  EFAB  F028         	goto	u5020
 12015  005152                     u5021:
 12016  005152  EFA0  F028         	goto	l4567
 12017  005156                     u5020:
 12018  005156                     l4571:
 12019  005156  5003               	movf	___awmod@divisor^0,w,c
 12020  005158  5C01               	subwf	___awmod@dividend^0,w,c
 12021  00515A  5004               	movf	(___awmod@divisor+1)^0,w,c
 12022  00515C  5802               	subwfb	(___awmod@dividend+1)^0,w,c
 12023  00515E  A0D8               	btfss	status,0,c
 12024  005160  EFB4  F028         	goto	u5031
 12025  005164  EFB6  F028         	goto	u5030
 12026  005168                     u5031:
 12027  005168  EFBA  F028         	goto	l4575
 12028  00516C                     u5030:
 12029  00516C  5003               	movf	___awmod@divisor^0,w,c
 12030  00516E  5E01               	subwf	___awmod@dividend^0,f,c
 12031  005170  5004               	movf	(___awmod@divisor+1)^0,w,c
 12032  005172  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
 12033  005174                     l4575:
 12034  005174  90D8               	bcf	status,0,c
 12035  005176  3204               	rrcf	(___awmod@divisor+1)^0,f,c
 12036  005178  3203               	rrcf	___awmod@divisor^0,f,c
 12037  00517A  2E05               	decfsz	___awmod@counter^0,f,c
 12038  00517C  EFAB  F028         	goto	l4571
 12039  005180                     l4579:
 12040  005180  5006               	movf	___awmod@sign^0,w,c
 12041  005182  B4D8               	btfsc	status,2,c
 12042  005184  EFC6  F028         	goto	u5041
 12043  005188  EFC8  F028         	goto	u5040
 12044  00518C                     u5041:
 12045  00518C  EFCC  F028         	goto	l4583
 12046  005190                     u5040:
 12047  005190  6C01               	negf	___awmod@dividend^0,c
 12048  005192  1E02               	comf	(___awmod@dividend+1)^0,f,c
 12049  005194  B0D8               	btfsc	status,0,c
 12050  005196  2A02               	incf	(___awmod@dividend+1)^0,f,c
 12051  005198                     l4583:
 12052  005198  C001  F001         	movff	___awmod@dividend,?___awmod
 12053  00519C  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
 12054  0051A0  0012               	return		;funcret
 12055  0051A2                     __end_of___awmod:
 12056                           	callstack 0
 12057                           
 12058 ;; *************** function ___awdiv *****************
 12059 ;; Defined at:
 12060 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
 12061 ;; Parameters:    Size  Location     Type
 12062 ;;  dividend        2    0[COMRAM] int 
 12063 ;;  divisor         2    2[COMRAM] int 
 12064 ;; Auto vars:     Size  Location     Type
 12065 ;;  quotient        2    6[COMRAM] int 
 12066 ;;  sign            1    5[COMRAM] unsigned char 
 12067 ;;  counter         1    4[COMRAM] unsigned char 
 12068 ;; Return value:  Size  Location     Type
 12069 ;;                  2    0[COMRAM] int 
 12070 ;; Registers used:
 12071 ;;		wreg, status,2, status,0
 12072 ;; Tracked objects:
 12073 ;;		On entry : 0/0
 12074 ;;		On exit  : 0/0
 12075 ;;		Unchanged: 0/0
 12076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12077 ;;      Params:         4       0       0       0       0       0       0
 12078 ;;      Locals:         4       0       0       0       0       0       0
 12079 ;;      Temps:          0       0       0       0       0       0       0
 12080 ;;      Totals:         8       0       0       0       0       0       0
 12081 ;;Total ram usage:        8 bytes
 12082 ;; Hardware stack levels used:    1
 12083 ;; Hardware stack levels required when called:    1
 12084 ;; This function calls:
 12085 ;;		Nothing
 12086 ;; This function is called by:
 12087 ;;		_efgtoa
 12088 ;; This function uses a non-reentrant model
 12089 ;;
 12090                           
 12091                           	psect	text38
 12092  00502E                     __ptext38:
 12093                           	callstack 0
 12094  00502E                     ___awdiv:
 12095                           	callstack 23
 12096  00502E  0E00               	movlw	0
 12097  005030  6E06               	movwf	___awdiv@sign^0,c
 12098  005032  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 12099  005034  EF20  F028         	goto	u4930
 12100  005038  EF1E  F028         	goto	u4931
 12101  00503C                     u4931:
 12102  00503C  EF26  F028         	goto	l4515
 12103  005040                     u4930:
 12104  005040  6C03               	negf	___awdiv@divisor^0,c
 12105  005042  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 12106  005044  B0D8               	btfsc	status,0,c
 12107  005046  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 12108  005048  0E01               	movlw	1
 12109  00504A  6E06               	movwf	___awdiv@sign^0,c
 12110  00504C                     l4515:
 12111  00504C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 12112  00504E  EF2D  F028         	goto	u4940
 12113  005052  EF2B  F028         	goto	u4941
 12114  005056                     u4941:
 12115  005056  EF33  F028         	goto	l4521
 12116  00505A                     u4940:
 12117  00505A  6C01               	negf	___awdiv@dividend^0,c
 12118  00505C  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 12119  00505E  B0D8               	btfsc	status,0,c
 12120  005060  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 12121  005062  0E01               	movlw	1
 12122  005064  1A06               	xorwf	___awdiv@sign^0,f,c
 12123  005066                     l4521:
 12124  005066  0E00               	movlw	0
 12125  005068  6E08               	movwf	(___awdiv@quotient+1)^0,c
 12126  00506A  0E00               	movlw	0
 12127  00506C  6E07               	movwf	___awdiv@quotient^0,c
 12128  00506E  5003               	movf	___awdiv@divisor^0,w,c
 12129  005070  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 12130  005072  B4D8               	btfsc	status,2,c
 12131  005074  EF3E  F028         	goto	u4951
 12132  005078  EF40  F028         	goto	u4950
 12133  00507C                     u4951:
 12134  00507C  EF68  F028         	goto	l4543
 12135  005080                     u4950:
 12136  005080  0E01               	movlw	1
 12137  005082  6E05               	movwf	___awdiv@counter^0,c
 12138  005084  EF48  F028         	goto	l4529
 12139  005088                     l4527:
 12140  005088  90D8               	bcf	status,0,c
 12141  00508A  3603               	rlcf	___awdiv@divisor^0,f,c
 12142  00508C  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 12143  00508E  2A05               	incf	___awdiv@counter^0,f,c
 12144  005090                     l4529:
 12145  005090  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 12146  005092  EF4D  F028         	goto	u4961
 12147  005096  EF4F  F028         	goto	u4960
 12148  00509A                     u4961:
 12149  00509A  EF44  F028         	goto	l4527
 12150  00509E                     u4960:
 12151  00509E                     l4531:
 12152  00509E  90D8               	bcf	status,0,c
 12153  0050A0  3607               	rlcf	___awdiv@quotient^0,f,c
 12154  0050A2  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 12155  0050A4  5003               	movf	___awdiv@divisor^0,w,c
 12156  0050A6  5C01               	subwf	___awdiv@dividend^0,w,c
 12157  0050A8  5004               	movf	(___awdiv@divisor+1)^0,w,c
 12158  0050AA  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 12159  0050AC  A0D8               	btfss	status,0,c
 12160  0050AE  EF5B  F028         	goto	u4971
 12161  0050B2  EF5D  F028         	goto	u4970
 12162  0050B6                     u4971:
 12163  0050B6  EF62  F028         	goto	l4539
 12164  0050BA                     u4970:
 12165  0050BA  5003               	movf	___awdiv@divisor^0,w,c
 12166  0050BC  5E01               	subwf	___awdiv@dividend^0,f,c
 12167  0050BE  5004               	movf	(___awdiv@divisor+1)^0,w,c
 12168  0050C0  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 12169  0050C2  8007               	bsf	___awdiv@quotient^0,0,c
 12170  0050C4                     l4539:
 12171  0050C4  90D8               	bcf	status,0,c
 12172  0050C6  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 12173  0050C8  3203               	rrcf	___awdiv@divisor^0,f,c
 12174  0050CA  2E05               	decfsz	___awdiv@counter^0,f,c
 12175  0050CC  EF4F  F028         	goto	l4531
 12176  0050D0                     l4543:
 12177  0050D0  5006               	movf	___awdiv@sign^0,w,c
 12178  0050D2  B4D8               	btfsc	status,2,c
 12179  0050D4  EF6E  F028         	goto	u4981
 12180  0050D8  EF70  F028         	goto	u4980
 12181  0050DC                     u4981:
 12182  0050DC  EF74  F028         	goto	l4547
 12183  0050E0                     u4980:
 12184  0050E0  6C07               	negf	___awdiv@quotient^0,c
 12185  0050E2  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 12186  0050E4  B0D8               	btfsc	status,0,c
 12187  0050E6  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 12188  0050E8                     l4547:
 12189  0050E8  C007  F001         	movff	___awdiv@quotient,?___awdiv
 12190  0050EC  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 12191  0050F0  0012               	return		;funcret
 12192  0050F2                     __end_of___awdiv:
 12193                           	callstack 0
 12194                           
 12195 ;; *************** function _dtoa *****************
 12196 ;; Defined at:
 12197 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 12198 ;; Parameters:    Size  Location     Type
 12199 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
 12200 ;;		 -> sprintf@f(6), 
 12201 ;;  d               8   29[COMRAM] long long 
 12202 ;; Auto vars:     Size  Location     Type
 12203 ;;  n               8   53[COMRAM] long long 
 12204 ;;  i               2   61[COMRAM] int 
 12205 ;;  s               2   51[COMRAM] int 
 12206 ;;  w               2   49[COMRAM] int 
 12207 ;;  p               2   47[COMRAM] int 
 12208 ;; Return value:  Size  Location     Type
 12209 ;;                  2   27[COMRAM] int 
 12210 ;; Registers used:
 12211 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12212 ;; Tracked objects:
 12213 ;;		On entry : 0/0
 12214 ;;		On exit  : 0/0
 12215 ;;		Unchanged: 0/0
 12216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12217 ;;      Params:        10       0       0       0       0       0       0
 12218 ;;      Locals:        18       0       0       0       0       0       0
 12219 ;;      Temps:          8       0       0       0       0       0       0
 12220 ;;      Totals:        36       0       0       0       0       0       0
 12221 ;;Total ram usage:       36 bytes
 12222 ;; Hardware stack levels used:    1
 12223 ;; Hardware stack levels required when called:    5
 12224 ;; This function calls:
 12225 ;;		___aodiv
 12226 ;;		___aomod
 12227 ;;		_abs
 12228 ;;		_pad
 12229 ;; This function is called by:
 12230 ;;		_vfpfcnvrt
 12231 ;; This function uses a non-reentrant model
 12232 ;;
 12233                           
 12234                           	psect	text39
 12235  003A36                     __ptext39:
 12236                           	callstack 0
 12237  003A36                     _dtoa:
 12238                           	callstack 20
 12239  003A36                     
 12240                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
 12241  003A36  C01E  F036         	movff	dtoa@d,dtoa@n
 12242  003A3A  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
 12243  003A3E  C020  F038         	movff	dtoa@d+2,dtoa@n+2
 12244  003A42  C021  F039         	movff	dtoa@d+3,dtoa@n+3
 12245  003A46  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
 12246  003A4A  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
 12247  003A4E  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
 12248  003A52  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
 12249  003A56                     
 12250                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
 12251  003A56  BE3D               	btfsc	(dtoa@n+7)^0,7,c
 12252  003A58  EF30  F01D         	goto	u5521
 12253  003A5C  EF33  F01D         	goto	u5520
 12254  003A60                     u5521:
 12255  003A60  0E01               	movlw	1
 12256  003A62  EF34  F01D         	goto	u5530
 12257  003A66                     u5520:
 12258  003A66  0E00               	movlw	0
 12259  003A68                     u5530:
 12260  003A68  6E34               	movwf	dtoa@s^0,c
 12261  003A6A  6A35               	clrf	(dtoa@s+1)^0,c
 12262                           
 12263                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
 12264  003A6C  5034               	movf	dtoa@s^0,w,c
 12265  003A6E  1035               	iorwf	(dtoa@s+1)^0,w,c
 12266  003A70  B4D8               	btfsc	status,2,c
 12267  003A72  EF3D  F01D         	goto	u5541
 12268  003A76  EF3F  F01D         	goto	u5540
 12269  003A7A                     u5541:
 12270  003A7A  EF4F  F01D         	goto	l4789
 12271  003A7E                     u5540:
 12272  003A7E                     
 12273                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
 12274  003A7E  1E3D               	comf	(dtoa@n+7)^0,f,c
 12275  003A80  1E3C               	comf	(dtoa@n+6)^0,f,c
 12276  003A82  1E3B               	comf	(dtoa@n+5)^0,f,c
 12277  003A84  1E3A               	comf	(dtoa@n+4)^0,f,c
 12278  003A86  1E39               	comf	(dtoa@n+3)^0,f,c
 12279  003A88  1E38               	comf	(dtoa@n+2)^0,f,c
 12280  003A8A  1E37               	comf	(dtoa@n+1)^0,f,c
 12281  003A8C  6C36               	negf	dtoa@n^0,c
 12282  003A8E  0E00               	movlw	0
 12283  003A90  2237               	addwfc	(dtoa@n+1)^0,f,c
 12284  003A92  2238               	addwfc	(dtoa@n+2)^0,f,c
 12285  003A94  2239               	addwfc	(dtoa@n+3)^0,f,c
 12286  003A96  223A               	addwfc	(dtoa@n+4)^0,f,c
 12287  003A98  223B               	addwfc	(dtoa@n+5)^0,f,c
 12288  003A9A  223C               	addwfc	(dtoa@n+6)^0,f,c
 12289  003A9C  223D               	addwfc	(dtoa@n+7)^0,f,c
 12290  003A9E                     l4789:
 12291                           
 12292                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
 12293  003A9E  0101               	movlb	1	; () banked
 12294  003AA0  BFA3               	btfsc	(_prec+1)& (0+255),7,b
 12295  003AA2  EF55  F01D         	goto	u5551
 12296  003AA6  EF57  F01D         	goto	u5550
 12297  003AAA                     u5551:
 12298  003AAA  EF58  F01D         	goto	l4793
 12299  003AAE                     u5550:
 12300  003AAE                     
 12301                           ; BSR set to: 1
 12302                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
 12303  003AAE  93A4               	bcf	_flags& (0+255),1,b
 12304  003AB0                     l4793:
 12305                           
 12306                           ; BSR set to: 1
 12307                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
 12308  003AB0  BFA3               	btfsc	(_prec+1)& (0+255),7,b
 12309  003AB2  EF65  F01D         	goto	u5560
 12310  003AB6  51A3               	movf	(_prec+1)& (0+255),w,b
 12311  003AB8  E106               	bnz	u5561
 12312  003ABA  05A2               	decf	_prec& (0+255),w,b
 12313  003ABC  B0D8               	btfsc	status,0,c
 12314  003ABE  EF63  F01D         	goto	u5561
 12315  003AC2  EF65  F01D         	goto	u5560
 12316  003AC6                     u5561:
 12317  003AC6  EF6B  F01D         	goto	l1221
 12318  003ACA                     u5560:
 12319  003ACA                     
 12320                           ; BSR set to: 1
 12321  003ACA  0E00               	movlw	0
 12322  003ACC  6E31               	movwf	(dtoa@p+1)^0,c
 12323  003ACE  0E01               	movlw	1
 12324  003AD0  6E30               	movwf	dtoa@p^0,c
 12325  003AD2  EF6F  F01D         	goto	l1223
 12326  003AD6                     l1221:
 12327                           
 12328                           ; BSR set to: 1
 12329  003AD6  C1A2  F030         	movff	_prec,dtoa@p
 12330  003ADA  C1A3  F031         	movff	_prec+1,dtoa@p+1
 12331  003ADE                     l1223:
 12332                           
 12333                           ; BSR set to: 1
 12334                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
 12335  003ADE  C1A0  F032         	movff	_width,dtoa@w
 12336  003AE2  C1A1  F033         	movff	_width+1,dtoa@w+1
 12337  003AE6                     
 12338                           ; BSR set to: 1
 12339                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
 12340  003AE6  5034               	movf	dtoa@s^0,w,c
 12341  003AE8  1035               	iorwf	(dtoa@s+1)^0,w,c
 12342  003AEA  A4D8               	btfss	status,2,c
 12343  003AEC  EF7A  F01D         	goto	u5571
 12344  003AF0  EF7C  F01D         	goto	u5570
 12345  003AF4                     u5571:
 12346  003AF4  EF83  F01D         	goto	l4801
 12347  003AF8                     u5570:
 12348  003AF8                     
 12349                           ; BSR set to: 1
 12350  003AF8  A5A4               	btfss	_flags& (0+255),2,b
 12351  003AFA  EF81  F01D         	goto	u5581
 12352  003AFE  EF83  F01D         	goto	u5580
 12353  003B02                     u5581:
 12354  003B02  EF86  F01D         	goto	l4803
 12355  003B06                     u5580:
 12356  003B06                     l4801:
 12357                           
 12358                           ; BSR set to: 1
 12359                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
 12360  003B06  0632               	decf	dtoa@w^0,f,c
 12361  003B08  A0D8               	btfss	status,0,c
 12362  003B0A  0633               	decf	(dtoa@w+1)^0,f,c
 12363  003B0C                     l4803:
 12364                           
 12365                           ; BSR set to: 1
 12366                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
 12367  003B0C  0E00               	movlw	0
 12368  003B0E  6E3F               	movwf	(dtoa@i+1)^0,c
 12369  003B10  0E4F               	movlw	79
 12370  003B12  6E3E               	movwf	dtoa@i^0,c
 12371  003B14                     
 12372                           ; BSR set to: 1
 12373                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
 12374  003B14  0E00               	movlw	0
 12375  003B16  0102               	movlb	2	; () banked
 12376  003B18  6F4F               	movwf	(_dbuf+79)& (0+255),b
 12377                           
 12378                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12379  003B1A  EF0B  F01E         	goto	l4817
 12380  003B1E                     l4807:
 12381                           
 12382                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
 12383  003B1E  063E               	decf	dtoa@i^0,f,c
 12384  003B20  A0D8               	btfss	status,0,c
 12385  003B22  063F               	decf	(dtoa@i+1)^0,f,c
 12386  003B24                     
 12387                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
 12388  003B24  0E00               	movlw	low _dbuf
 12389  003B26  243E               	addwf	dtoa@i^0,w,c
 12390  003B28  6ED9               	movwf	fsr2l,c
 12391  003B2A  0E02               	movlw	high _dbuf
 12392  003B2C  203F               	addwfc	(dtoa@i+1)^0,w,c
 12393  003B2E  6EDA               	movwf	fsr2h,c
 12394  003B30  C036  F001         	movff	dtoa@n,___aomod@dividend
 12395  003B34  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
 12396  003B38  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
 12397  003B3C  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
 12398  003B40  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
 12399  003B44  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
 12400  003B48  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
 12401  003B4C  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
 12402  003B50  0E0A               	movlw	10
 12403  003B52  6E09               	movwf	___aomod@divisor^0,c
 12404  003B54  0E00               	movlw	0
 12405  003B56  6E0A               	movwf	(___aomod@divisor+1)^0,c
 12406  003B58  0E00               	movlw	0
 12407  003B5A  6E0B               	movwf	(___aomod@divisor+2)^0,c
 12408  003B5C  0E00               	movlw	0
 12409  003B5E  6E0C               	movwf	(___aomod@divisor+3)^0,c
 12410  003B60  0E00               	movlw	0
 12411  003B62  6E0D               	movwf	(___aomod@divisor+4)^0,c
 12412  003B64  0E00               	movlw	0
 12413  003B66  6E0E               	movwf	(___aomod@divisor+5)^0,c
 12414  003B68  0E00               	movlw	0
 12415  003B6A  6E0F               	movwf	(___aomod@divisor+6)^0,c
 12416  003B6C  0E00               	movlw	0
 12417  003B6E  6E10               	movwf	(___aomod@divisor+7)^0,c
 12418  003B70  EC9F  F023         	call	___aomod	;wreg free
 12419  003B74  C001  F026         	movff	?___aomod,??_dtoa
 12420  003B78  C002  F027         	movff	?___aomod+1,??_dtoa+1
 12421  003B7C  C003  F028         	movff	?___aomod+2,??_dtoa+2
 12422  003B80  C004  F029         	movff	?___aomod+3,??_dtoa+3
 12423  003B84  C005  F02A         	movff	?___aomod+4,??_dtoa+4
 12424  003B88  C006  F02B         	movff	?___aomod+5,??_dtoa+5
 12425  003B8C  C007  F02C         	movff	?___aomod+6,??_dtoa+6
 12426  003B90  C008  F02D         	movff	?___aomod+7,??_dtoa+7
 12427  003B94  C026  F013         	movff	??_dtoa,abs@a
 12428  003B98  C028  F014         	movff	??_dtoa+2,abs@a+1
 12429  003B9C  ECBD  F02C         	call	_abs	;wreg free
 12430  003BA0  5013               	movf	?_abs^0,w,c
 12431  003BA2  0F30               	addlw	48
 12432  003BA4  6EDF               	movwf	indf2,c
 12433  003BA6                     
 12434                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
 12435  003BA6  0630               	decf	dtoa@p^0,f,c
 12436  003BA8  A0D8               	btfss	status,0,c
 12437  003BAA  0631               	decf	(dtoa@p+1)^0,f,c
 12438  003BAC                     
 12439                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
 12440  003BAC  0632               	decf	dtoa@w^0,f,c
 12441  003BAE  A0D8               	btfss	status,0,c
 12442  003BB0  0633               	decf	(dtoa@w+1)^0,f,c
 12443  003BB2                     
 12444                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
 12445  003BB2  C036  F001         	movff	dtoa@n,___aodiv@dividend
 12446  003BB6  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
 12447  003BBA  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
 12448  003BBE  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
 12449  003BC2  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
 12450  003BC6  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
 12451  003BCA  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
 12452  003BCE  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
 12453  003BD2  0E0A               	movlw	10
 12454  003BD4  6E09               	movwf	___aodiv@divisor^0,c
 12455  003BD6  0E00               	movlw	0
 12456  003BD8  6E0A               	movwf	(___aodiv@divisor+1)^0,c
 12457  003BDA  0E00               	movlw	0
 12458  003BDC  6E0B               	movwf	(___aodiv@divisor+2)^0,c
 12459  003BDE  0E00               	movlw	0
 12460  003BE0  6E0C               	movwf	(___aodiv@divisor+3)^0,c
 12461  003BE2  0E00               	movlw	0
 12462  003BE4  6E0D               	movwf	(___aodiv@divisor+4)^0,c
 12463  003BE6  0E00               	movlw	0
 12464  003BE8  6E0E               	movwf	(___aodiv@divisor+5)^0,c
 12465  003BEA  0E00               	movlw	0
 12466  003BEC  6E0F               	movwf	(___aodiv@divisor+6)^0,c
 12467  003BEE  0E00               	movlw	0
 12468  003BF0  6E10               	movwf	(___aodiv@divisor+7)^0,c
 12469  003BF2  EC19  F022         	call	___aodiv	;wreg free
 12470  003BF6  C001  F036         	movff	?___aodiv,dtoa@n
 12471  003BFA  C002  F037         	movff	?___aodiv+1,dtoa@n+1
 12472  003BFE  C003  F038         	movff	?___aodiv+2,dtoa@n+2
 12473  003C02  C004  F039         	movff	?___aodiv+3,dtoa@n+3
 12474  003C06  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
 12475  003C0A  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
 12476  003C0E  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
 12477  003C12  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
 12478  003C16                     l4817:
 12479                           
 12480                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12481  003C16  BE3F               	btfsc	(dtoa@i+1)^0,7,c
 12482  003C18  EF16  F01E         	goto	u5591
 12483  003C1C  503F               	movf	(dtoa@i+1)^0,w,c
 12484  003C1E  E108               	bnz	u5590
 12485  003C20  043E               	decf	dtoa@i^0,w,c
 12486  003C22  A0D8               	btfss	status,0,c
 12487  003C24  EF16  F01E         	goto	u5591
 12488  003C28  EF18  F01E         	goto	u5590
 12489  003C2C                     u5591:
 12490  003C2C  EF49  F01E         	goto	l4827
 12491  003C30                     u5590:
 12492  003C30  5036               	movf	dtoa@n^0,w,c
 12493  003C32  1037               	iorwf	(dtoa@n+1)^0,w,c
 12494  003C34  1038               	iorwf	(dtoa@n+2)^0,w,c
 12495  003C36  1039               	iorwf	(dtoa@n+3)^0,w,c
 12496  003C38  103A               	iorwf	(dtoa@n+4)^0,w,c
 12497  003C3A  103B               	iorwf	(dtoa@n+5)^0,w,c
 12498  003C3C  103C               	iorwf	(dtoa@n+6)^0,w,c
 12499  003C3E  103D               	iorwf	(dtoa@n+7)^0,w,c
 12500  003C40  A4D8               	btfss	status,2,c
 12501  003C42  EF25  F01E         	goto	u5601
 12502  003C46  EF27  F01E         	goto	u5600
 12503  003C4A                     u5601:
 12504  003C4A  EF8F  F01D         	goto	l4807
 12505  003C4E                     u5600:
 12506  003C4E  BE31               	btfsc	(dtoa@p+1)^0,7,c
 12507  003C50  EF34  F01E         	goto	u5610
 12508  003C54  5031               	movf	(dtoa@p+1)^0,w,c
 12509  003C56  E106               	bnz	u5611
 12510  003C58  0430               	decf	dtoa@p^0,w,c
 12511  003C5A  B0D8               	btfsc	status,0,c
 12512  003C5C  EF32  F01E         	goto	u5611
 12513  003C60  EF34  F01E         	goto	u5610
 12514  003C64                     u5611:
 12515  003C64  EF8F  F01D         	goto	l4807
 12516  003C68                     u5610:
 12517  003C68  BE33               	btfsc	(dtoa@w+1)^0,7,c
 12518  003C6A  EF3F  F01E         	goto	u5621
 12519  003C6E  5033               	movf	(dtoa@w+1)^0,w,c
 12520  003C70  E108               	bnz	u5620
 12521  003C72  0432               	decf	dtoa@w^0,w,c
 12522  003C74  A0D8               	btfss	status,0,c
 12523  003C76  EF3F  F01E         	goto	u5621
 12524  003C7A  EF41  F01E         	goto	u5620
 12525  003C7E                     u5621:
 12526  003C7E  EF49  F01E         	goto	l4827
 12527  003C82                     u5620:
 12528  003C82  0101               	movlb	1	; () banked
 12529  003C84  B3A4               	btfsc	_flags& (0+255),1,b
 12530  003C86  EF47  F01E         	goto	u5631
 12531  003C8A  EF49  F01E         	goto	u5630
 12532  003C8E                     u5631:
 12533  003C8E  EF8F  F01D         	goto	l4807
 12534  003C92                     u5630:
 12535  003C92                     l4827:
 12536                           
 12537                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
 12538  003C92  5034               	movf	dtoa@s^0,w,c
 12539  003C94  1035               	iorwf	(dtoa@s+1)^0,w,c
 12540  003C96  A4D8               	btfss	status,2,c
 12541  003C98  EF50  F01E         	goto	u5641
 12542  003C9C  EF52  F01E         	goto	u5640
 12543  003CA0                     u5641:
 12544  003CA0  EF5A  F01E         	goto	l4831
 12545  003CA4                     u5640:
 12546  003CA4  0101               	movlb	1	; () banked
 12547  003CA6  A5A4               	btfss	_flags& (0+255),2,b
 12548  003CA8  EF58  F01E         	goto	u5651
 12549  003CAC  EF5A  F01E         	goto	u5650
 12550  003CB0                     u5651:
 12551  003CB0  EF78  F01E         	goto	l4841
 12552  003CB4                     u5650:
 12553  003CB4                     l4831:
 12554                           
 12555                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
 12556  003CB4  063E               	decf	dtoa@i^0,f,c
 12557  003CB6  A0D8               	btfss	status,0,c
 12558  003CB8  063F               	decf	(dtoa@i+1)^0,f,c
 12559  003CBA                     
 12560                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
 12561  003CBA  5034               	movf	dtoa@s^0,w,c
 12562  003CBC  1035               	iorwf	(dtoa@s+1)^0,w,c
 12563  003CBE  A4D8               	btfss	status,2,c
 12564  003CC0  EF64  F01E         	goto	u5661
 12565  003CC4  EF66  F01E         	goto	u5660
 12566  003CC8                     u5661:
 12567  003CC8  EF6C  F01E         	goto	l4837
 12568  003CCC                     u5660:
 12569  003CCC  0E00               	movlw	0
 12570  003CCE  6E2F               	movwf	(_dtoa$2479+1)^0,c
 12571  003CD0  0E2B               	movlw	43
 12572  003CD2  6E2E               	movwf	_dtoa$2479^0,c
 12573  003CD4  EF70  F01E         	goto	l4839
 12574  003CD8                     l4837:
 12575  003CD8  0E00               	movlw	0
 12576  003CDA  6E2F               	movwf	(_dtoa$2479+1)^0,c
 12577  003CDC  0E2D               	movlw	45
 12578  003CDE  6E2E               	movwf	_dtoa$2479^0,c
 12579  003CE0                     l4839:
 12580  003CE0  0E00               	movlw	low _dbuf
 12581  003CE2  243E               	addwf	dtoa@i^0,w,c
 12582  003CE4  6ED9               	movwf	fsr2l,c
 12583  003CE6  0E02               	movlw	high _dbuf
 12584  003CE8  203F               	addwfc	(dtoa@i+1)^0,w,c
 12585  003CEA  6EDA               	movwf	fsr2h,c
 12586  003CEC  C02E  FFDF         	movff	_dtoa$2479,indf2
 12587  003CF0                     l4841:
 12588                           
 12589                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
 12590  003CF0  C01C  F011         	movff	dtoa@fp,pad@fp
 12591  003CF4  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
 12592  003CF8  0E00               	movlw	low _dbuf
 12593  003CFA  243E               	addwf	dtoa@i^0,w,c
 12594  003CFC  6E13               	movwf	pad@buf^0,c
 12595  003CFE  0E02               	movlw	high _dbuf
 12596  003D00  203F               	addwfc	(dtoa@i+1)^0,w,c
 12597  003D02  6E14               	movwf	(pad@buf+1)^0,c
 12598  003D04  C032  F015         	movff	dtoa@w,pad@p
 12599  003D08  C033  F016         	movff	dtoa@w+1,pad@p+1
 12600  003D0C  ECB4  F027         	call	_pad	;wreg free
 12601  003D10  C011  F01C         	movff	?_pad,?_dtoa
 12602  003D14  C012  F01D         	movff	?_pad+1,?_dtoa+1
 12603  003D18  0012               	return		;funcret
 12604  003D1A                     __end_of_dtoa:
 12605                           	callstack 0
 12606                           
 12607 ;; *************** function _pad *****************
 12608 ;; Defined at:
 12609 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 12610 ;; Parameters:    Size  Location     Type
 12611 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 12612 ;;		 -> sprintf@f(6), 
 12613 ;;  buf             2   18[COMRAM] PTR unsigned char 
 12614 ;;		 -> dbuf(80), 
 12615 ;;  p               2   20[COMRAM] int 
 12616 ;; Auto vars:     Size  Location     Type
 12617 ;;  w               2   25[COMRAM] int 
 12618 ;;  i               2   23[COMRAM] int 
 12619 ;; Return value:  Size  Location     Type
 12620 ;;                  2   16[COMRAM] int 
 12621 ;; Registers used:
 12622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12623 ;; Tracked objects:
 12624 ;;		On entry : 0/0
 12625 ;;		On exit  : 0/0
 12626 ;;		Unchanged: 0/0
 12627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12628 ;;      Params:         6       0       0       0       0       0       0
 12629 ;;      Locals:         4       0       0       0       0       0       0
 12630 ;;      Temps:          1       0       0       0       0       0       0
 12631 ;;      Totals:        11       0       0       0       0       0       0
 12632 ;;Total ram usage:       11 bytes
 12633 ;; Hardware stack levels used:    1
 12634 ;; Hardware stack levels required when called:    4
 12635 ;; This function calls:
 12636 ;;		_fputc
 12637 ;;		_fputs
 12638 ;;		_strlen
 12639 ;; This function is called by:
 12640 ;;		_dtoa
 12641 ;;		_efgtoa
 12642 ;; This function uses a non-reentrant model
 12643 ;;
 12644                           
 12645                           	psect	text40
 12646  004F68                     __ptext40:
 12647                           	callstack 0
 12648  004F68                     _pad:
 12649                           	callstack 20
 12650  004F68                     
 12651                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 12652  004F68  0101               	movlb	1	; () banked
 12653  004F6A  A1A4               	btfss	_flags& (0+255),0,b
 12654  004F6C  EFBA  F027         	goto	u5211
 12655  004F70  EFBC  F027         	goto	u5210
 12656  004F74                     u5211:
 12657  004F74  EFC6  F027         	goto	l4681
 12658  004F78                     u5210:
 12659  004F78                     
 12660                           ; BSR set to: 1
 12661                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 12662  004F78  C013  F00A         	movff	pad@buf,fputs@s
 12663  004F7C  C014  F00B         	movff	pad@buf+1,fputs@s+1
 12664  004F80  C011  F00C         	movff	pad@fp,fputs@fp
 12665  004F84  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 12666  004F88  EC7A  F02C         	call	_fputs	;wreg free
 12667  004F8C                     l4681:
 12668                           
 12669                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 12670  004F8C  BE16               	btfsc	(pad@p+1)^0,7,c
 12671  004F8E  EFCB  F027         	goto	u5221
 12672  004F92  EFCD  F027         	goto	u5220
 12673  004F96                     u5221:
 12674  004F96  EFD3  F027         	goto	l4685
 12675  004F9A                     u5220:
 12676  004F9A  C015  F01A         	movff	pad@p,pad@w
 12677  004F9E  C016  F01B         	movff	pad@p+1,pad@w+1
 12678  004FA2  EFD7  F027         	goto	l1210
 12679  004FA6                     l4685:
 12680  004FA6  0E00               	movlw	0
 12681  004FA8  6E1B               	movwf	(pad@w+1)^0,c
 12682  004FAA  0E00               	movlw	0
 12683  004FAC  6E1A               	movwf	pad@w^0,c
 12684  004FAE                     l1210:
 12685                           
 12686                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 12687  004FAE  0E00               	movlw	0
 12688  004FB0  6E19               	movwf	(pad@i+1)^0,c
 12689  004FB2  0E00               	movlw	0
 12690  004FB4  6E18               	movwf	pad@i^0,c
 12691                           
 12692                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12693  004FB6  EFE9  F027         	goto	l4691
 12694  004FBA                     l4687:
 12695                           
 12696                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 12697  004FBA  0E00               	movlw	0
 12698  004FBC  6E02               	movwf	(fputc@c+1)^0,c
 12699  004FBE  0E20               	movlw	32
 12700  004FC0  6E01               	movwf	fputc@c^0,c
 12701  004FC2  C011  F003         	movff	pad@fp,fputc@fp
 12702  004FC6  C012  F004         	movff	pad@fp+1,fputc@fp+1
 12703  004FCA  EC4F  F027         	call	_fputc	;wreg free
 12704  004FCE                     
 12705                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
 12706  004FCE  4A18               	infsnz	pad@i^0,f,c
 12707  004FD0  2A19               	incf	(pad@i+1)^0,f,c
 12708  004FD2                     l4691:
 12709                           
 12710                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12711  004FD2  501A               	movf	pad@w^0,w,c
 12712  004FD4  5C18               	subwf	pad@i^0,w,c
 12713  004FD6  5019               	movf	(pad@i+1)^0,w,c
 12714  004FD8  0A80               	xorlw	128
 12715  004FDA  6E17               	movwf	??_pad^0,c
 12716  004FDC  501B               	movf	(pad@w+1)^0,w,c
 12717  004FDE  0A80               	xorlw	128
 12718  004FE0  5817               	subwfb	??_pad^0,w,c
 12719  004FE2  A0D8               	btfss	status,0,c
 12720  004FE4  EFF6  F027         	goto	u5231
 12721  004FE8  EFF8  F027         	goto	u5230
 12722  004FEC                     u5231:
 12723  004FEC  EFDD  F027         	goto	l4687
 12724  004FF0                     u5230:
 12725  004FF0                     
 12726                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 12727  004FF0  0101               	movlb	1	; () banked
 12728  004FF2  B1A4               	btfsc	_flags& (0+255),0,b
 12729  004FF4  EFFE  F027         	goto	u5241
 12730  004FF8  EF00  F028         	goto	u5240
 12731  004FFC                     u5241:
 12732  004FFC  EF0A  F028         	goto	l4695
 12733  005000                     u5240:
 12734  005000                     
 12735                           ; BSR set to: 1
 12736                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 12737  005000  C013  F00A         	movff	pad@buf,fputs@s
 12738  005004  C014  F00B         	movff	pad@buf+1,fputs@s+1
 12739  005008  C011  F00C         	movff	pad@fp,fputs@fp
 12740  00500C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 12741  005010  EC7A  F02C         	call	_fputs	;wreg free
 12742  005014                     l4695:
 12743                           
 12744                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
 12745  005014  C013  F001         	movff	pad@buf,strlen@s
 12746  005018  C014  F002         	movff	pad@buf+1,strlen@s+1
 12747  00501C  ECA5  F02D         	call	_strlen	;wreg free
 12748  005020  501A               	movf	pad@w^0,w,c
 12749  005022  2401               	addwf	?_strlen^0,w,c
 12750  005024  6E11               	movwf	?_pad^0,c
 12751  005026  501B               	movf	(pad@w+1)^0,w,c
 12752  005028  2002               	addwfc	(?_strlen+1)^0,w,c
 12753  00502A  6E12               	movwf	(?_pad+1)^0,c
 12754  00502C  0012               	return		;funcret
 12755  00502E                     __end_of_pad:
 12756                           	callstack 0
 12757                           
 12758 ;; *************** function _strlen *****************
 12759 ;; Defined at:
 12760 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
 12761 ;; Parameters:    Size  Location     Type
 12762 ;;  s               2    0[COMRAM] PTR const unsigned char 
 12763 ;;		 -> dbuf(80), 
 12764 ;; Auto vars:     Size  Location     Type
 12765 ;;  a               2    2[COMRAM] PTR const unsigned char 
 12766 ;;		 -> dbuf(80), 
 12767 ;; Return value:  Size  Location     Type
 12768 ;;                  2    0[COMRAM] unsigned int 
 12769 ;; Registers used:
 12770 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12771 ;; Tracked objects:
 12772 ;;		On entry : 0/0
 12773 ;;		On exit  : 0/0
 12774 ;;		Unchanged: 0/0
 12775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12776 ;;      Params:         2       0       0       0       0       0       0
 12777 ;;      Locals:         2       0       0       0       0       0       0
 12778 ;;      Temps:          0       0       0       0       0       0       0
 12779 ;;      Totals:         4       0       0       0       0       0       0
 12780 ;;Total ram usage:        4 bytes
 12781 ;; Hardware stack levels used:    1
 12782 ;; Hardware stack levels required when called:    1
 12783 ;; This function calls:
 12784 ;;		Nothing
 12785 ;; This function is called by:
 12786 ;;		_pad
 12787 ;; This function uses a non-reentrant model
 12788 ;;
 12789                           
 12790                           	psect	text41
 12791  005B4A                     __ptext41:
 12792                           	callstack 0
 12793  005B4A                     _strlen:
 12794                           	callstack 22
 12795  005B4A  C001  F003         	movff	strlen@s,strlen@a
 12796  005B4E  C002  F004         	movff	strlen@s+1,strlen@a+1
 12797  005B52  EFAD  F02D         	goto	l4137
 12798  005B56                     l4135:
 12799  005B56  4A01               	infsnz	strlen@s^0,f,c
 12800  005B58  2A02               	incf	(strlen@s+1)^0,f,c
 12801  005B5A                     l4137:
 12802  005B5A  C001  FFD9         	movff	strlen@s,fsr2l
 12803  005B5E  C002  FFDA         	movff	strlen@s+1,fsr2h
 12804  005B62  50DF               	movf	indf2,w,c
 12805  005B64  A4D8               	btfss	status,2,c
 12806  005B66  EFB7  F02D         	goto	u4351
 12807  005B6A  EFB9  F02D         	goto	u4350
 12808  005B6E                     u4351:
 12809  005B6E  EFAB  F02D         	goto	l4135
 12810  005B72                     u4350:
 12811  005B72  5003               	movf	strlen@a^0,w,c
 12812  005B74  5C01               	subwf	strlen@s^0,w,c
 12813  005B76  6E01               	movwf	?_strlen^0,c
 12814  005B78  5004               	movf	(strlen@a+1)^0,w,c
 12815  005B7A  5802               	subwfb	(strlen@s+1)^0,w,c
 12816  005B7C  6E02               	movwf	(?_strlen+1)^0,c
 12817  005B7E  0012               	return		;funcret
 12818  005B80                     __end_of_strlen:
 12819                           	callstack 0
 12820                           
 12821 ;; *************** function _fputs *****************
 12822 ;; Defined at:
 12823 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
 12824 ;; Parameters:    Size  Location     Type
 12825 ;;  s               2    9[COMRAM] PTR const unsigned char 
 12826 ;;		 -> dbuf(80), 
 12827 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 12828 ;;		 -> sprintf@f(6), 
 12829 ;; Auto vars:     Size  Location     Type
 12830 ;;  i               2   14[COMRAM] int 
 12831 ;;  c               1   13[COMRAM] unsigned char 
 12832 ;; Return value:  Size  Location     Type
 12833 ;;                  2    9[COMRAM] int 
 12834 ;; Registers used:
 12835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12836 ;; Tracked objects:
 12837 ;;		On entry : 0/0
 12838 ;;		On exit  : 0/0
 12839 ;;		Unchanged: 0/0
 12840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12841 ;;      Params:         4       0       0       0       0       0       0
 12842 ;;      Locals:         3       0       0       0       0       0       0
 12843 ;;      Temps:          0       0       0       0       0       0       0
 12844 ;;      Totals:         7       0       0       0       0       0       0
 12845 ;;Total ram usage:        7 bytes
 12846 ;; Hardware stack levels used:    1
 12847 ;; Hardware stack levels required when called:    3
 12848 ;; This function calls:
 12849 ;;		_fputc
 12850 ;; This function is called by:
 12851 ;;		_pad
 12852 ;; This function uses a non-reentrant model
 12853 ;;
 12854                           
 12855                           	psect	text42
 12856  0058F4                     __ptext42:
 12857                           	callstack 0
 12858  0058F4                     _fputs:
 12859                           	callstack 20
 12860  0058F4  0E00               	movlw	0
 12861  0058F6  6E10               	movwf	(fputs@i+1)^0,c
 12862  0058F8  0E00               	movlw	0
 12863  0058FA  6E0F               	movwf	fputs@i^0,c
 12864  0058FC  EF8B  F02C         	goto	l4131
 12865  005900                     l4127:
 12866  005900  C00E  F001         	movff	fputs@c,fputc@c
 12867  005904  6A02               	clrf	(fputc@c+1)^0,c
 12868  005906  C00C  F003         	movff	fputs@fp,fputc@fp
 12869  00590A  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
 12870  00590E  EC4F  F027         	call	_fputc	;wreg free
 12871  005912  4A0F               	infsnz	fputs@i^0,f,c
 12872  005914  2A10               	incf	(fputs@i+1)^0,f,c
 12873  005916                     l4131:
 12874  005916  500F               	movf	fputs@i^0,w,c
 12875  005918  240A               	addwf	fputs@s^0,w,c
 12876  00591A  6ED9               	movwf	fsr2l,c
 12877  00591C  5010               	movf	(fputs@i+1)^0,w,c
 12878  00591E  200B               	addwfc	(fputs@s+1)^0,w,c
 12879  005920  6EDA               	movwf	fsr2h,c
 12880  005922  50DF               	movf	indf2,w,c
 12881  005924  6E0E               	movwf	fputs@c^0,c
 12882  005926  500E               	movf	fputs@c^0,w,c
 12883  005928  A4D8               	btfss	status,2,c
 12884  00592A  EF99  F02C         	goto	u4341
 12885  00592E  EF9B  F02C         	goto	u4340
 12886  005932                     u4341:
 12887  005932  EF80  F02C         	goto	l4127
 12888  005936                     u4340:
 12889  005936  0012               	return		;funcret
 12890  005938                     __end_of_fputs:
 12891                           	callstack 0
 12892                           
 12893 ;; *************** function _fputc *****************
 12894 ;; Defined at:
 12895 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
 12896 ;; Parameters:    Size  Location     Type
 12897 ;;  c               2    0[COMRAM] int 
 12898 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 12899 ;;		 -> sprintf@f(6), 
 12900 ;; Auto vars:     Size  Location     Type
 12901 ;;		None
 12902 ;; Return value:  Size  Location     Type
 12903 ;;                  2    0[COMRAM] int 
 12904 ;; Registers used:
 12905 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12906 ;; Tracked objects:
 12907 ;;		On entry : 0/0
 12908 ;;		On exit  : 0/0
 12909 ;;		Unchanged: 0/0
 12910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12911 ;;      Params:         4       0       0       0       0       0       0
 12912 ;;      Locals:         0       0       0       0       0       0       0
 12913 ;;      Temps:          5       0       0       0       0       0       0
 12914 ;;      Totals:         9       0       0       0       0       0       0
 12915 ;;Total ram usage:        9 bytes
 12916 ;; Hardware stack levels used:    1
 12917 ;; Hardware stack levels required when called:    2
 12918 ;; This function calls:
 12919 ;;		_putch
 12920 ;; This function is called by:
 12921 ;;		_pad
 12922 ;;		_vfpfcnvrt
 12923 ;;		_fputs
 12924 ;; This function uses a non-reentrant model
 12925 ;;
 12926                           
 12927                           	psect	text43
 12928  004E9E                     __ptext43:
 12929                           	callstack 0
 12930  004E9E                     _fputc:
 12931                           	callstack 23
 12932  004E9E  5003               	movf	fputc@fp^0,w,c
 12933  004EA0  1004               	iorwf	(fputc@fp+1)^0,w,c
 12934  004EA2  B4D8               	btfsc	status,2,c
 12935  004EA4  EF56  F027         	goto	u3911
 12936  004EA8  EF58  F027         	goto	u3910
 12937  004EAC                     u3911:
 12938  004EAC  EF61  F027         	goto	l3913
 12939  004EB0                     u3910:
 12940  004EB0  5003               	movf	fputc@fp^0,w,c
 12941  004EB2  1004               	iorwf	(fputc@fp+1)^0,w,c
 12942  004EB4  A4D8               	btfss	status,2,c
 12943  004EB6  EF5F  F027         	goto	u3921
 12944  004EBA  EF61  F027         	goto	u3920
 12945  004EBE                     u3921:
 12946  004EBE  EF66  F027         	goto	l3915
 12947  004EC2                     u3920:
 12948  004EC2                     l3913:
 12949  004EC2  5001               	movf	fputc@c^0,w,c
 12950  004EC4  EC75  F02E         	call	_putch
 12951  004EC8  EFB3  F027         	goto	l1470
 12952  004ECC                     l3915:
 12953  004ECC  EE20 F004          	lfsr	2,4
 12954  004ED0  5003               	movf	fputc@fp^0,w,c
 12955  004ED2  26D9               	addwf	fsr2l,f,c
 12956  004ED4  5004               	movf	(fputc@fp+1)^0,w,c
 12957  004ED6  22DA               	addwfc	fsr2h,f,c
 12958  004ED8  50DE               	movf	postinc2,w,c
 12959  004EDA  10DE               	iorwf	postinc2,w,c
 12960  004EDC  B4D8               	btfsc	status,2,c
 12961  004EDE  EF73  F027         	goto	u3931
 12962  004EE2  EF75  F027         	goto	u3930
 12963  004EE6                     u3931:
 12964  004EE6  EF90  F027         	goto	l3919
 12965  004EEA                     u3930:
 12966  004EEA  EE20 F004          	lfsr	2,4
 12967  004EEE  5003               	movf	fputc@fp^0,w,c
 12968  004EF0  26D9               	addwf	fsr2l,f,c
 12969  004EF2  5004               	movf	(fputc@fp+1)^0,w,c
 12970  004EF4  22DA               	addwfc	fsr2h,f,c
 12971  004EF6  EE10 F002          	lfsr	1,2
 12972  004EFA  5003               	movf	fputc@fp^0,w,c
 12973  004EFC  26E1               	addwf	fsr1l,f,c
 12974  004EFE  5004               	movf	(fputc@fp+1)^0,w,c
 12975  004F00  22E2               	addwfc	fsr1h,f,c
 12976  004F02  50DE               	movf	postinc2,w,c
 12977  004F04  5CE6               	subwf	postinc1,w,c
 12978  004F06  50E6               	movf	postinc1,w,c
 12979  004F08  0A80               	xorlw	128
 12980  004F0A  6E09               	movwf	(??_fputc+4)^0,c
 12981  004F0C  50DE               	movf	postinc2,w,c
 12982  004F0E  0A80               	xorlw	128
 12983  004F10  5809               	subwfb	(??_fputc+4)^0,w,c
 12984  004F12  B0D8               	btfsc	status,0,c
 12985  004F14  EF8E  F027         	goto	u3941
 12986  004F18  EF90  F027         	goto	u3940
 12987  004F1C                     u3941:
 12988  004F1C  EFB3  F027         	goto	l1470
 12989  004F20                     u3940:
 12990  004F20                     l3919:
 12991  004F20  EE20 F002          	lfsr	2,2
 12992  004F24  5003               	movf	fputc@fp^0,w,c
 12993  004F26  26D9               	addwf	fsr2l,f,c
 12994  004F28  5004               	movf	(fputc@fp+1)^0,w,c
 12995  004F2A  22DA               	addwfc	fsr2h,f,c
 12996  004F2C  CFDE F005          	movff	postinc2,??_fputc
 12997  004F30  CFDD F006          	movff	postdec2,??_fputc+1
 12998  004F34  C003  FFD9         	movff	fputc@fp,fsr2l
 12999  004F38  C004  FFDA         	movff	fputc@fp+1,fsr2h
 13000  004F3C  CFDE F007          	movff	postinc2,??_fputc+2
 13001  004F40  CFDD F008          	movff	postdec2,??_fputc+3
 13002  004F44  5005               	movf	??_fputc^0,w,c
 13003  004F46  2407               	addwf	(??_fputc+2)^0,w,c
 13004  004F48  6ED9               	movwf	fsr2l,c
 13005  004F4A  5006               	movf	(??_fputc+1)^0,w,c
 13006  004F4C  2008               	addwfc	(??_fputc+3)^0,w,c
 13007  004F4E  6EDA               	movwf	fsr2h,c
 13008  004F50  C001  FFDF         	movff	fputc@c,indf2
 13009  004F54  EE20 F002          	lfsr	2,2
 13010  004F58  5003               	movf	fputc@fp^0,w,c
 13011  004F5A  26D9               	addwf	fsr2l,f,c
 13012  004F5C  5004               	movf	(fputc@fp+1)^0,w,c
 13013  004F5E  22DA               	addwfc	fsr2h,f,c
 13014  004F60  2ADE               	incf	postinc2,f,c
 13015  004F62  0E00               	movlw	0
 13016  004F64  22DD               	addwfc	postdec2,f,c
 13017  004F66                     l1470:
 13018  004F66  0012               	return		;funcret
 13019  004F68                     __end_of_fputc:
 13020                           	callstack 0
 13021                           
 13022 ;; *************** function _putch *****************
 13023 ;; Defined at:
 13024 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
 13025 ;; Parameters:    Size  Location     Type
 13026 ;;  c               1    wreg     unsigned char 
 13027 ;; Auto vars:     Size  Location     Type
 13028 ;;  c               1    0[COMRAM] unsigned char 
 13029 ;; Return value:  Size  Location     Type
 13030 ;;                  1    wreg      void 
 13031 ;; Registers used:
 13032 ;;		wreg
 13033 ;; Tracked objects:
 13034 ;;		On entry : 0/0
 13035 ;;		On exit  : 0/0
 13036 ;;		Unchanged: 0/0
 13037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13038 ;;      Params:         0       0       0       0       0       0       0
 13039 ;;      Locals:         0       0       0       0       0       0       0
 13040 ;;      Temps:          0       0       0       0       0       0       0
 13041 ;;      Totals:         0       0       0       0       0       0       0
 13042 ;;Total ram usage:        0 bytes
 13043 ;; Hardware stack levels used:    1
 13044 ;; Hardware stack levels required when called:    1
 13045 ;; This function calls:
 13046 ;;		Nothing
 13047 ;; This function is called by:
 13048 ;;		_fputc
 13049 ;; This function uses a non-reentrant model
 13050 ;;
 13051                           
 13052                           	psect	text44
 13053  005CEA                     __ptext44:
 13054                           	callstack 0
 13055  005CEA                     _putch:
 13056                           	callstack 23
 13057  005CEA  0012               	return		;funcret
 13058  005CEC                     __end_of_putch:
 13059                           	callstack 0
 13060                           
 13061 ;; *************** function _abs *****************
 13062 ;; Defined at:
 13063 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
 13064 ;; Parameters:    Size  Location     Type
 13065 ;;  a               2   18[COMRAM] int 
 13066 ;; Auto vars:     Size  Location     Type
 13067 ;;		None
 13068 ;; Return value:  Size  Location     Type
 13069 ;;                  2   18[COMRAM] int 
 13070 ;; Registers used:
 13071 ;;		wreg, status,2, status,0
 13072 ;; Tracked objects:
 13073 ;;		On entry : 0/0
 13074 ;;		On exit  : 0/0
 13075 ;;		Unchanged: 0/0
 13076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13077 ;;      Params:         2       0       0       0       0       0       0
 13078 ;;      Locals:         0       0       0       0       0       0       0
 13079 ;;      Temps:          2       0       0       0       0       0       0
 13080 ;;      Totals:         4       0       0       0       0       0       0
 13081 ;;Total ram usage:        4 bytes
 13082 ;; Hardware stack levels used:    1
 13083 ;; Hardware stack levels required when called:    1
 13084 ;; This function calls:
 13085 ;;		Nothing
 13086 ;; This function is called by:
 13087 ;;		_dtoa
 13088 ;; This function uses a non-reentrant model
 13089 ;;
 13090                           
 13091                           	psect	text45
 13092  00597A                     __ptext45:
 13093                           	callstack 0
 13094  00597A                     _abs:
 13095                           	callstack 23
 13096  00597A  BE14               	btfsc	(abs@a+1)^0,7,c
 13097  00597C  EFCA  F02C         	goto	u5250
 13098  005980  5014               	movf	(abs@a+1)^0,w,c
 13099  005982  E106               	bnz	u5251
 13100  005984  0413               	decf	abs@a^0,w,c
 13101  005986  B0D8               	btfsc	status,0,c
 13102  005988  EFC8  F02C         	goto	u5251
 13103  00598C  EFCA  F02C         	goto	u5250
 13104  005990                     u5251:
 13105  005990  EFD8  F02C         	goto	l1391
 13106  005994                     u5250:
 13107  005994  C013  F015         	movff	abs@a,??_abs
 13108  005998  C014  F016         	movff	abs@a+1,??_abs+1
 13109  00599C  1E15               	comf	??_abs^0,f,c
 13110  00599E  1E16               	comf	(??_abs+1)^0,f,c
 13111  0059A0  4A15               	infsnz	??_abs^0,f,c
 13112  0059A2  2A16               	incf	(??_abs+1)^0,f,c
 13113  0059A4  C015  F013         	movff	??_abs,?_abs
 13114  0059A8  C016  F014         	movff	??_abs+1,?_abs+1
 13115  0059AC  EFDC  F02C         	goto	l1394
 13116  0059B0                     l1391:
 13117  0059B0  C013  F013         	movff	abs@a,?_abs
 13118  0059B4  C014  F014         	movff	abs@a+1,?_abs+1
 13119  0059B8                     l1394:
 13120  0059B8  0012               	return		;funcret
 13121  0059BA                     __end_of_abs:
 13122                           	callstack 0
 13123                           
 13124 ;; *************** function ___aomod *****************
 13125 ;; Defined at:
 13126 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
 13127 ;; Parameters:    Size  Location     Type
 13128 ;;  dividend        8    0[COMRAM] long long 
 13129 ;;  divisor         8    8[COMRAM] long long 
 13130 ;; Auto vars:     Size  Location     Type
 13131 ;;  sign            1   17[COMRAM] unsigned char 
 13132 ;;  counter         1   16[COMRAM] unsigned char 
 13133 ;; Return value:  Size  Location     Type
 13134 ;;                  8    0[COMRAM] long long 
 13135 ;; Registers used:
 13136 ;;		wreg, status,2, status,0
 13137 ;; Tracked objects:
 13138 ;;		On entry : 0/0
 13139 ;;		On exit  : 0/0
 13140 ;;		Unchanged: 0/0
 13141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13142 ;;      Params:        16       0       0       0       0       0       0
 13143 ;;      Locals:         2       0       0       0       0       0       0
 13144 ;;      Temps:          0       0       0       0       0       0       0
 13145 ;;      Totals:        18       0       0       0       0       0       0
 13146 ;;Total ram usage:       18 bytes
 13147 ;; Hardware stack levels used:    1
 13148 ;; Hardware stack levels required when called:    1
 13149 ;; This function calls:
 13150 ;;		Nothing
 13151 ;; This function is called by:
 13152 ;;		_dtoa
 13153 ;; This function uses a non-reentrant model
 13154 ;;
 13155                           
 13156                           	psect	text46
 13157  00473E                     __ptext46:
 13158                           	callstack 0
 13159  00473E                     ___aomod:
 13160                           	callstack 23
 13161  00473E  0E00               	movlw	0
 13162  004740  6E12               	movwf	___aomod@sign^0,c
 13163  004742  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 13164  004744  EFA8  F023         	goto	u4450
 13165  004748  EFA6  F023         	goto	u4451
 13166  00474C                     u4451:
 13167  00474C  EFBA  F023         	goto	l4205
 13168  004750                     u4450:
 13169  004750  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13170  004752  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13171  004754  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13172  004756  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13173  004758  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13174  00475A  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13175  00475C  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13176  00475E  6C01               	negf	___aomod@dividend^0,c
 13177  004760  0E00               	movlw	0
 13178  004762  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13179  004764  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13180  004766  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13181  004768  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13182  00476A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13183  00476C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13184  00476E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13185  004770  0E01               	movlw	1
 13186  004772  6E12               	movwf	___aomod@sign^0,c
 13187  004774                     l4205:
 13188  004774  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 13189  004776  EFC1  F023         	goto	u4460
 13190  00477A  EFBF  F023         	goto	u4461
 13191  00477E                     u4461:
 13192  00477E  EFD1  F023         	goto	l4209
 13193  004782                     u4460:
 13194  004782  1E10               	comf	(___aomod@divisor+7)^0,f,c
 13195  004784  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 13196  004786  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 13197  004788  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 13198  00478A  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 13199  00478C  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 13200  00478E  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 13201  004790  6C09               	negf	___aomod@divisor^0,c
 13202  004792  0E00               	movlw	0
 13203  004794  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 13204  004796  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 13205  004798  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 13206  00479A  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 13207  00479C  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 13208  00479E  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 13209  0047A0  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 13210  0047A2                     l4209:
 13211  0047A2  5009               	movf	___aomod@divisor^0,w,c
 13212  0047A4  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 13213  0047A6  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 13214  0047A8  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 13215  0047AA  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 13216  0047AC  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 13217  0047AE  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 13218  0047B0  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 13219  0047B2  B4D8               	btfsc	status,2,c
 13220  0047B4  EFDE  F023         	goto	u4471
 13221  0047B8  EFE0  F023         	goto	u4470
 13222  0047BC                     u4471:
 13223  0047BC  EF28  F024         	goto	l4225
 13224  0047C0                     u4470:
 13225  0047C0  0E01               	movlw	1
 13226  0047C2  6E11               	movwf	___aomod@counter^0,c
 13227  0047C4  EFEE  F023         	goto	l4215
 13228  0047C8                     l4213:
 13229  0047C8  90D8               	bcf	status,0,c
 13230  0047CA  3609               	rlcf	___aomod@divisor^0,f,c
 13231  0047CC  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 13232  0047CE  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 13233  0047D0  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 13234  0047D2  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 13235  0047D4  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 13236  0047D6  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 13237  0047D8  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 13238  0047DA  2A11               	incf	___aomod@counter^0,f,c
 13239  0047DC                     l4215:
 13240  0047DC  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 13241  0047DE  EFF3  F023         	goto	u4481
 13242  0047E2  EFF5  F023         	goto	u4480
 13243  0047E6                     u4481:
 13244  0047E6  EFE4  F023         	goto	l4213
 13245  0047EA                     u4480:
 13246  0047EA                     l4217:
 13247  0047EA  5009               	movf	___aomod@divisor^0,w,c
 13248  0047EC  5C01               	subwf	___aomod@dividend^0,w,c
 13249  0047EE  500A               	movf	(___aomod@divisor+1)^0,w,c
 13250  0047F0  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 13251  0047F2  500B               	movf	(___aomod@divisor+2)^0,w,c
 13252  0047F4  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 13253  0047F6  500C               	movf	(___aomod@divisor+3)^0,w,c
 13254  0047F8  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 13255  0047FA  500D               	movf	(___aomod@divisor+4)^0,w,c
 13256  0047FC  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 13257  0047FE  500E               	movf	(___aomod@divisor+5)^0,w,c
 13258  004800  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 13259  004802  500F               	movf	(___aomod@divisor+6)^0,w,c
 13260  004804  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 13261  004806  5010               	movf	(___aomod@divisor+7)^0,w,c
 13262  004808  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 13263  00480A  A0D8               	btfss	status,0,c
 13264  00480C  EF0A  F024         	goto	u4491
 13265  004810  EF0C  F024         	goto	u4490
 13266  004814                     u4491:
 13267  004814  EF1C  F024         	goto	l4221
 13268  004818                     u4490:
 13269  004818  5009               	movf	___aomod@divisor^0,w,c
 13270  00481A  5E01               	subwf	___aomod@dividend^0,f,c
 13271  00481C  500A               	movf	(___aomod@divisor+1)^0,w,c
 13272  00481E  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 13273  004820  500B               	movf	(___aomod@divisor+2)^0,w,c
 13274  004822  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 13275  004824  500C               	movf	(___aomod@divisor+3)^0,w,c
 13276  004826  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 13277  004828  500D               	movf	(___aomod@divisor+4)^0,w,c
 13278  00482A  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 13279  00482C  500E               	movf	(___aomod@divisor+5)^0,w,c
 13280  00482E  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 13281  004830  500F               	movf	(___aomod@divisor+6)^0,w,c
 13282  004832  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 13283  004834  5010               	movf	(___aomod@divisor+7)^0,w,c
 13284  004836  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 13285  004838                     l4221:
 13286  004838  90D8               	bcf	status,0,c
 13287  00483A  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 13288  00483C  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 13289  00483E  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 13290  004840  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 13291  004842  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 13292  004844  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 13293  004846  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 13294  004848  3209               	rrcf	___aomod@divisor^0,f,c
 13295  00484A  2E11               	decfsz	___aomod@counter^0,f,c
 13296  00484C  EFF5  F023         	goto	l4217
 13297  004850                     l4225:
 13298  004850  5012               	movf	___aomod@sign^0,w,c
 13299  004852  B4D8               	btfsc	status,2,c
 13300  004854  EF2E  F024         	goto	u4501
 13301  004858  EF30  F024         	goto	u4500
 13302  00485C                     u4501:
 13303  00485C  EF40  F024         	goto	l4229
 13304  004860                     u4500:
 13305  004860  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13306  004862  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13307  004864  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13308  004866  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13309  004868  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13310  00486A  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13311  00486C  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13312  00486E  6C01               	negf	___aomod@dividend^0,c
 13313  004870  0E00               	movlw	0
 13314  004872  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13315  004874  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13316  004876  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13317  004878  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13318  00487A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13319  00487C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13320  00487E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13321  004880                     l4229:
 13322  004880  C001  F001         	movff	___aomod@dividend,?___aomod
 13323  004884  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 13324  004888  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 13325  00488C  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 13326  004890  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 13327  004894  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 13328  004898  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 13329  00489C  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 13330  0048A0  0012               	return		;funcret
 13331  0048A2                     __end_of___aomod:
 13332                           	callstack 0
 13333                           
 13334 ;; *************** function ___aodiv *****************
 13335 ;; Defined at:
 13336 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
 13337 ;; Parameters:    Size  Location     Type
 13338 ;;  dividend        8    0[COMRAM] long long 
 13339 ;;  divisor         8    8[COMRAM] long long 
 13340 ;; Auto vars:     Size  Location     Type
 13341 ;;  quotient        8   18[COMRAM] long long 
 13342 ;;  sign            1   17[COMRAM] unsigned char 
 13343 ;;  counter         1   16[COMRAM] unsigned char 
 13344 ;; Return value:  Size  Location     Type
 13345 ;;                  8    0[COMRAM] long long 
 13346 ;; Registers used:
 13347 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13348 ;; Tracked objects:
 13349 ;;		On entry : 0/0
 13350 ;;		On exit  : 0/0
 13351 ;;		Unchanged: 0/0
 13352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13353 ;;      Params:        16       0       0       0       0       0       0
 13354 ;;      Locals:        10       0       0       0       0       0       0
 13355 ;;      Temps:          0       0       0       0       0       0       0
 13356 ;;      Totals:        26       0       0       0       0       0       0
 13357 ;;Total ram usage:       26 bytes
 13358 ;; Hardware stack levels used:    1
 13359 ;; Hardware stack levels required when called:    1
 13360 ;; This function calls:
 13361 ;;		Nothing
 13362 ;; This function is called by:
 13363 ;;		_dtoa
 13364 ;; This function uses a non-reentrant model
 13365 ;;
 13366                           
 13367                           	psect	text47
 13368  004432                     __ptext47:
 13369                           	callstack 0
 13370  004432                     ___aodiv:
 13371                           	callstack 23
 13372  004432  0E00               	movlw	0
 13373  004434  6E12               	movwf	___aodiv@sign^0,c
 13374  004436  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 13375  004438  EF22  F022         	goto	u4380
 13376  00443C  EF20  F022         	goto	u4381
 13377  004440                     u4381:
 13378  004440  EF34  F022         	goto	l4161
 13379  004444                     u4380:
 13380  004444  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 13381  004446  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 13382  004448  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 13383  00444A  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 13384  00444C  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 13385  00444E  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 13386  004450  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 13387  004452  6C09               	negf	___aodiv@divisor^0,c
 13388  004454  0E00               	movlw	0
 13389  004456  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 13390  004458  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 13391  00445A  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 13392  00445C  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 13393  00445E  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 13394  004460  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 13395  004462  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 13396  004464  0E01               	movlw	1
 13397  004466  6E12               	movwf	___aodiv@sign^0,c
 13398  004468                     l4161:
 13399  004468  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 13400  00446A  EF3B  F022         	goto	u4390
 13401  00446E  EF39  F022         	goto	u4391
 13402  004472                     u4391:
 13403  004472  EF4D  F022         	goto	l4167
 13404  004476                     u4390:
 13405  004476  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 13406  004478  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 13407  00447A  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 13408  00447C  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 13409  00447E  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 13410  004480  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 13411  004482  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 13412  004484  6C01               	negf	___aodiv@dividend^0,c
 13413  004486  0E00               	movlw	0
 13414  004488  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 13415  00448A  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 13416  00448C  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 13417  00448E  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 13418  004490  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 13419  004492  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 13420  004494  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 13421  004496  0E01               	movlw	1
 13422  004498  1A12               	xorwf	___aodiv@sign^0,f,c
 13423  00449A                     l4167:
 13424  00449A  EE20  F013         	lfsr	2,___aodiv@quotient
 13425  00449E  0E07               	movlw	7
 13426  0044A0                     u4401:
 13427  0044A0  6ADE               	clrf	postinc2,c
 13428  0044A2  06E8               	decf	wreg,f,c
 13429  0044A4  E2FD               	bc	u4401
 13430  0044A6  5009               	movf	___aodiv@divisor^0,w,c
 13431  0044A8  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 13432  0044AA  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 13433  0044AC  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 13434  0044AE  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 13435  0044B0  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 13436  0044B2  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 13437  0044B4  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 13438  0044B6  B4D8               	btfsc	status,2,c
 13439  0044B8  EF60  F022         	goto	u4411
 13440  0044BC  EF62  F022         	goto	u4410
 13441  0044C0                     u4411:
 13442  0044C0  EFB4  F022         	goto	l4189
 13443  0044C4                     u4410:
 13444  0044C4  0E01               	movlw	1
 13445  0044C6  6E11               	movwf	___aodiv@counter^0,c
 13446  0044C8  EF70  F022         	goto	l4175
 13447  0044CC                     l4173:
 13448  0044CC  90D8               	bcf	status,0,c
 13449  0044CE  3609               	rlcf	___aodiv@divisor^0,f,c
 13450  0044D0  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 13451  0044D2  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 13452  0044D4  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 13453  0044D6  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 13454  0044D8  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 13455  0044DA  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 13456  0044DC  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 13457  0044DE  2A11               	incf	___aodiv@counter^0,f,c
 13458  0044E0                     l4175:
 13459  0044E0  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 13460  0044E2  EF75  F022         	goto	u4421
 13461  0044E6  EF77  F022         	goto	u4420
 13462  0044EA                     u4421:
 13463  0044EA  EF66  F022         	goto	l4173
 13464  0044EE                     u4420:
 13465  0044EE                     l4177:
 13466  0044EE  90D8               	bcf	status,0,c
 13467  0044F0  3613               	rlcf	___aodiv@quotient^0,f,c
 13468  0044F2  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 13469  0044F4  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 13470  0044F6  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 13471  0044F8  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 13472  0044FA  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 13473  0044FC  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 13474  0044FE  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 13475  004500  5009               	movf	___aodiv@divisor^0,w,c
 13476  004502  5C01               	subwf	___aodiv@dividend^0,w,c
 13477  004504  500A               	movf	(___aodiv@divisor+1)^0,w,c
 13478  004506  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 13479  004508  500B               	movf	(___aodiv@divisor+2)^0,w,c
 13480  00450A  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 13481  00450C  500C               	movf	(___aodiv@divisor+3)^0,w,c
 13482  00450E  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 13483  004510  500D               	movf	(___aodiv@divisor+4)^0,w,c
 13484  004512  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 13485  004514  500E               	movf	(___aodiv@divisor+5)^0,w,c
 13486  004516  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 13487  004518  500F               	movf	(___aodiv@divisor+6)^0,w,c
 13488  00451A  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 13489  00451C  5010               	movf	(___aodiv@divisor+7)^0,w,c
 13490  00451E  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 13491  004520  A0D8               	btfss	status,0,c
 13492  004522  EF95  F022         	goto	u4431
 13493  004526  EF97  F022         	goto	u4430
 13494  00452A                     u4431:
 13495  00452A  EFA8  F022         	goto	l4185
 13496  00452E                     u4430:
 13497  00452E  5009               	movf	___aodiv@divisor^0,w,c
 13498  004530  5E01               	subwf	___aodiv@dividend^0,f,c
 13499  004532  500A               	movf	(___aodiv@divisor+1)^0,w,c
 13500  004534  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 13501  004536  500B               	movf	(___aodiv@divisor+2)^0,w,c
 13502  004538  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 13503  00453A  500C               	movf	(___aodiv@divisor+3)^0,w,c
 13504  00453C  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 13505  00453E  500D               	movf	(___aodiv@divisor+4)^0,w,c
 13506  004540  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 13507  004542  500E               	movf	(___aodiv@divisor+5)^0,w,c
 13508  004544  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 13509  004546  500F               	movf	(___aodiv@divisor+6)^0,w,c
 13510  004548  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 13511  00454A  5010               	movf	(___aodiv@divisor+7)^0,w,c
 13512  00454C  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 13513  00454E  8013               	bsf	___aodiv@quotient^0,0,c
 13514  004550                     l4185:
 13515  004550  90D8               	bcf	status,0,c
 13516  004552  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 13517  004554  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 13518  004556  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 13519  004558  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 13520  00455A  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 13521  00455C  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 13522  00455E  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 13523  004560  3209               	rrcf	___aodiv@divisor^0,f,c
 13524  004562  2E11               	decfsz	___aodiv@counter^0,f,c
 13525  004564  EF77  F022         	goto	l4177
 13526  004568                     l4189:
 13527  004568  5012               	movf	___aodiv@sign^0,w,c
 13528  00456A  B4D8               	btfsc	status,2,c
 13529  00456C  EFBA  F022         	goto	u4441
 13530  004570  EFBC  F022         	goto	u4440
 13531  004574                     u4441:
 13532  004574  EFCC  F022         	goto	l4193
 13533  004578                     u4440:
 13534  004578  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 13535  00457A  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 13536  00457C  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 13537  00457E  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 13538  004580  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 13539  004582  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 13540  004584  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 13541  004586  6C13               	negf	___aodiv@quotient^0,c
 13542  004588  0E00               	movlw	0
 13543  00458A  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 13544  00458C  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 13545  00458E  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 13546  004590  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 13547  004592  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 13548  004594  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 13549  004596  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 13550  004598                     l4193:
 13551  004598  C013  F001         	movff	___aodiv@quotient,?___aodiv
 13552  00459C  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 13553  0045A0  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 13554  0045A4  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 13555  0045A8  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 13556  0045AC  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 13557  0045B0  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 13558  0045B4  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 13559  0045B8  0012               	return		;funcret
 13560  0045BA                     __end_of___aodiv:
 13561                           	callstack 0
 13562                           
 13563 ;; *************** function _atoi *****************
 13564 ;; Defined at:
 13565 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
 13566 ;; Parameters:    Size  Location     Type
 13567 ;;  s               2    7[COMRAM] PTR const unsigned char 
 13568 ;;		 -> STR_16(13), STR_14(14), STR_12(16), STR_10(16), 
 13569 ;;		 -> STR_8(18), STR_6(18), STR_4(18), STR_2(15), 
 13570 ;; Auto vars:     Size  Location     Type
 13571 ;;  n               2   20[COMRAM] int 
 13572 ;;  neg             2   13[COMRAM] int 
 13573 ;; Return value:  Size  Location     Type
 13574 ;;                  2    7[COMRAM] int 
 13575 ;; Registers used:
 13576 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13577 ;; Tracked objects:
 13578 ;;		On entry : 0/0
 13579 ;;		On exit  : 0/0
 13580 ;;		Unchanged: 0/0
 13581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13582 ;;      Params:         2       0       0       0       0       0       0
 13583 ;;      Locals:         9       0       0       0       0       0       0
 13584 ;;      Temps:          4       0       0       0       0       0       0
 13585 ;;      Totals:        15       0       0       0       0       0       0
 13586 ;;Total ram usage:       15 bytes
 13587 ;; Hardware stack levels used:    1
 13588 ;; Hardware stack levels required when called:    2
 13589 ;; This function calls:
 13590 ;;		___wmul
 13591 ;;		_isdigit
 13592 ;;		_isspace
 13593 ;; This function is called by:
 13594 ;;		_vfpfcnvrt
 13595 ;; This function uses a non-reentrant model
 13596 ;;
 13597                           
 13598                           	psect	text48
 13599  0042A2                     __ptext48:
 13600                           	callstack 0
 13601  0042A2                     _atoi:
 13602                           	callstack 23
 13603  0042A2  0E00               	movlw	0
 13604  0042A4  6E16               	movwf	(atoi@n+1)^0,c
 13605  0042A6  0E00               	movlw	0
 13606  0042A8  6E15               	movwf	atoi@n^0,c
 13607  0042AA  0E00               	movlw	0
 13608  0042AC  6E0F               	movwf	(atoi@neg+1)^0,c
 13609  0042AE  0E00               	movlw	0
 13610  0042B0  6E0E               	movwf	atoi@neg^0,c
 13611  0042B2  EF5D  F021         	goto	l5147
 13612  0042B6                     l5145:
 13613  0042B6  4A08               	infsnz	atoi@s^0,f,c
 13614  0042B8  2A09               	incf	(atoi@s+1)^0,f,c
 13615  0042BA                     l5147:
 13616  0042BA  0E01               	movlw	1
 13617  0042BC  6E14               	movwf	_atoi$2571^0,c
 13618  0042BE  C008  FFF6         	movff	atoi@s,tblptrl
 13619  0042C2  C009  FFF7         	movff	atoi@s+1,tblptrh
 13620  0042C6                     	if	0	;tblptru may be non-zero
 13621  0042C6                     	endif
 13622  0042C6                     	if	0	;tblptru may be non-zero
 13623  0042C6                     	endif
 13624  0042C6  0008               	tblrd		*
 13625  0042C8  50F5               	movf	tablat,w,c
 13626  0042CA  0A20               	xorlw	32
 13627  0042CC  B4D8               	btfsc	status,2,c
 13628  0042CE  EF6B  F021         	goto	u6191
 13629  0042D2  EF6D  F021         	goto	u6190
 13630  0042D6                     u6191:
 13631  0042D6  EF8A  F021         	goto	l5155
 13632  0042DA                     u6190:
 13633  0042DA  0EF7               	movlw	247
 13634  0042DC  6E0A               	movwf	??_atoi^0,c
 13635  0042DE  0EFF               	movlw	255
 13636  0042E0  6E0B               	movwf	(??_atoi+1)^0,c
 13637  0042E2  C008  FFF6         	movff	atoi@s,tblptrl
 13638  0042E6  C009  FFF7         	movff	atoi@s+1,tblptrh
 13639  0042EA                     	if	0	;tblptru may be non-zero
 13640  0042EA                     	endif
 13641  0042EA                     	if	0	;tblptru may be non-zero
 13642  0042EA                     	endif
 13643  0042EA  0008               	tblrd		*
 13644  0042EC  50F5               	movf	tablat,w,c
 13645  0042EE  6E0C               	movwf	(??_atoi+2)^0,c
 13646  0042F0  6A0D               	clrf	(??_atoi+3)^0,c
 13647  0042F2  500A               	movf	??_atoi^0,w,c
 13648  0042F4  260C               	addwf	(??_atoi+2)^0,f,c
 13649  0042F6  500B               	movf	(??_atoi+1)^0,w,c
 13650  0042F8  220D               	addwfc	(??_atoi+3)^0,f,c
 13651  0042FA  500D               	movf	(??_atoi+3)^0,w,c
 13652  0042FC  E109               	bnz	u6200
 13653  0042FE  0E05               	movlw	5
 13654  004300  5C0C               	subwf	(??_atoi+2)^0,w,c
 13655  004302  A0D8               	btfss	status,0,c
 13656  004304  EF86  F021         	goto	u6201
 13657  004308  EF88  F021         	goto	u6200
 13658  00430C                     u6201:
 13659  00430C  EF8A  F021         	goto	l5155
 13660  004310                     u6200:
 13661  004310  0E00               	movlw	0
 13662  004312  6E14               	movwf	_atoi$2571^0,c
 13663  004314                     l5155:
 13664  004314  C014  F010         	movff	_atoi$2571,_atoi$2570
 13665  004318  6A11               	clrf	(_atoi$2570+1)^0,c
 13666  00431A  5010               	movf	_atoi$2570^0,w,c
 13667  00431C  1011               	iorwf	(_atoi$2570+1)^0,w,c
 13668  00431E  A4D8               	btfss	status,2,c
 13669  004320  EF94  F021         	goto	u6211
 13670  004324  EF96  F021         	goto	u6210
 13671  004328                     u6211:
 13672  004328  EF5B  F021         	goto	l5145
 13673  00432C                     u6210:
 13674  00432C  EFA0  F021         	goto	l5165
 13675  004330                     l5161:
 13676  004330  0E00               	movlw	0
 13677  004332  6E0F               	movwf	(atoi@neg+1)^0,c
 13678  004334  0E01               	movlw	1
 13679  004336  6E0E               	movwf	atoi@neg^0,c
 13680  004338                     l5163:
 13681  004338  4A08               	infsnz	atoi@s^0,f,c
 13682  00433A  2A09               	incf	(atoi@s+1)^0,f,c
 13683  00433C  EFD5  F021         	goto	l5171
 13684  004340                     l5165:
 13685  004340  C008  FFF6         	movff	atoi@s,tblptrl
 13686  004344  C009  FFF7         	movff	atoi@s+1,tblptrh
 13687  004348                     	if	0	;tblptru may be non-zero
 13688  004348                     	endif
 13689  004348                     	if	0	;tblptru may be non-zero
 13690  004348                     	endif
 13691  004348  0008               	tblrd		*
 13692  00434A  50F5               	movf	tablat,w,c
 13693  00434C  6E0A               	movwf	??_atoi^0,c
 13694  00434E  6A0B               	clrf	(??_atoi+1)^0,c
 13695                           
 13696                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13697                           ; Switch size 1, requested type "simple"
 13698                           ; Number of cases is 1, Range of values is 0 to 0
 13699                           ; switch strategies available:
 13700                           ; Name         Instructions Cycles
 13701                           ; simple_byte            4     3 (average)
 13702                           ;	Chosen strategy is simple_byte
 13703  004350  500B               	movf	(??_atoi+1)^0,w,c
 13704  004352  0A00               	xorlw	0	; case 0
 13705  004354  B4D8               	btfsc	status,2,c
 13706  004356  EFAF  F021         	goto	l6305
 13707  00435A  EFD5  F021         	goto	l5171
 13708  00435E                     l6305:
 13709                           
 13710                           ; Switch size 1, requested type "simple"
 13711                           ; Number of cases is 2, Range of values is 43 to 45
 13712                           ; switch strategies available:
 13713                           ; Name         Instructions Cycles
 13714                           ; simple_byte            7     4 (average)
 13715                           ;	Chosen strategy is simple_byte
 13716  00435E  500A               	movf	??_atoi^0,w,c
 13717  004360  0A2B               	xorlw	43	; case 43
 13718  004362  B4D8               	btfsc	status,2,c
 13719  004364  EF9C  F021         	goto	l5163
 13720  004368  0A06               	xorlw	6	; case 45
 13721  00436A  B4D8               	btfsc	status,2,c
 13722  00436C  EF98  F021         	goto	l5161
 13723  004370  EFD5  F021         	goto	l5171
 13724  004374                     l5167:
 13725  004374  C015  F001         	movff	atoi@n,___wmul@multiplier
 13726  004378  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 13727  00437C  0E00               	movlw	0
 13728  00437E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 13729  004380  0E0A               	movlw	10
 13730  004382  6E03               	movwf	___wmul@multiplicand^0,c
 13731  004384  EC19  F02E         	call	___wmul	;wreg free
 13732  004388  C008  FFF6         	movff	atoi@s,tblptrl
 13733  00438C  C009  FFF7         	movff	atoi@s+1,tblptrh
 13734  004390                     	if	0	;tblptru may be non-zero
 13735  004390                     	endif
 13736  004390                     	if	0	;tblptru may be non-zero
 13737  004390                     	endif
 13738  004390  0008               	tblrd		*
 13739  004392  50F5               	movf	tablat,w,c
 13740  004394  5E01               	subwf	?___wmul^0,f,c
 13741  004396  0E00               	movlw	0
 13742  004398  5A02               	subwfb	(?___wmul+1)^0,f,c
 13743  00439A  0E30               	movlw	48
 13744  00439C  2401               	addwf	?___wmul^0,w,c
 13745  00439E  6E15               	movwf	atoi@n^0,c
 13746  0043A0  0E00               	movlw	0
 13747  0043A2  2002               	addwfc	(?___wmul+1)^0,w,c
 13748  0043A4  6E16               	movwf	(atoi@n+1)^0,c
 13749  0043A6  EF9C  F021         	goto	l5163
 13750  0043AA                     l5171:
 13751  0043AA  0ED0               	movlw	208
 13752  0043AC  6E0A               	movwf	??_atoi^0,c
 13753  0043AE  0EFF               	movlw	255
 13754  0043B0  6E0B               	movwf	(??_atoi+1)^0,c
 13755  0043B2  C008  FFF6         	movff	atoi@s,tblptrl
 13756  0043B6  C009  FFF7         	movff	atoi@s+1,tblptrh
 13757  0043BA                     	if	0	;tblptru may be non-zero
 13758  0043BA                     	endif
 13759  0043BA                     	if	0	;tblptru may be non-zero
 13760  0043BA                     	endif
 13761  0043BA  0008               	tblrd		*
 13762  0043BC  50F5               	movf	tablat,w,c
 13763  0043BE  6E0C               	movwf	(??_atoi+2)^0,c
 13764  0043C0  6A0D               	clrf	(??_atoi+3)^0,c
 13765  0043C2  500A               	movf	??_atoi^0,w,c
 13766  0043C4  260C               	addwf	(??_atoi+2)^0,f,c
 13767  0043C6  500B               	movf	(??_atoi+1)^0,w,c
 13768  0043C8  220D               	addwfc	(??_atoi+3)^0,f,c
 13769  0043CA  500D               	movf	(??_atoi+3)^0,w,c
 13770  0043CC  E10A               	bnz	u6220
 13771  0043CE  0E0A               	movlw	10
 13772  0043D0  5C0C               	subwf	(??_atoi+2)^0,w,c
 13773  0043D2  A0D8               	btfss	status,0,c
 13774  0043D4  EFEE  F021         	goto	u6221
 13775  0043D8  EFF1  F021         	goto	u6220
 13776  0043DC                     u6221:
 13777  0043DC  0E01               	movlw	1
 13778  0043DE  EFF2  F021         	goto	u6230
 13779  0043E2                     u6220:
 13780  0043E2  0E00               	movlw	0
 13781  0043E4                     u6230:
 13782  0043E4  6E12               	movwf	_atoi$2572^0,c
 13783  0043E6  6A13               	clrf	(_atoi$2572+1)^0,c
 13784  0043E8  5012               	movf	_atoi$2572^0,w,c
 13785  0043EA  1013               	iorwf	(_atoi$2572+1)^0,w,c
 13786  0043EC  A4D8               	btfss	status,2,c
 13787  0043EE  EFFB  F021         	goto	u6241
 13788  0043F2  EFFD  F021         	goto	u6240
 13789  0043F6                     u6241:
 13790  0043F6  EFBA  F021         	goto	l5167
 13791  0043FA                     u6240:
 13792  0043FA  500E               	movf	atoi@neg^0,w,c
 13793  0043FC  100F               	iorwf	(atoi@neg+1)^0,w,c
 13794  0043FE  A4D8               	btfss	status,2,c
 13795  004400  EF04  F022         	goto	u6251
 13796  004404  EF06  F022         	goto	u6250
 13797  004408                     u6251:
 13798  004408  EF14  F022         	goto	l1422
 13799  00440C                     u6250:
 13800  00440C  C015  F00A         	movff	atoi@n,??_atoi
 13801  004410  C016  F00B         	movff	atoi@n+1,??_atoi+1
 13802  004414  1E0A               	comf	??_atoi^0,f,c
 13803  004416  1E0B               	comf	(??_atoi+1)^0,f,c
 13804  004418  4A0A               	infsnz	??_atoi^0,f,c
 13805  00441A  2A0B               	incf	(??_atoi+1)^0,f,c
 13806  00441C  C00A  F008         	movff	??_atoi,?_atoi
 13807  004420  C00B  F009         	movff	??_atoi+1,?_atoi+1
 13808  004424  EF18  F022         	goto	l1425
 13809  004428                     l1422:
 13810  004428  C015  F008         	movff	atoi@n,?_atoi
 13811  00442C  C016  F009         	movff	atoi@n+1,?_atoi+1
 13812  004430                     l1425:
 13813  004430  0012               	return		;funcret
 13814  004432                     __end_of_atoi:
 13815                           	callstack 0
 13816                           
 13817 ;; *************** function _isspace *****************
 13818 ;; Defined at:
 13819 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
 13820 ;; Parameters:    Size  Location     Type
 13821 ;;  c               2    0[COMRAM] int 
 13822 ;; Auto vars:     Size  Location     Type
 13823 ;;		None
 13824 ;; Return value:  Size  Location     Type
 13825 ;;                  2    0[COMRAM] int 
 13826 ;; Registers used:
 13827 ;;		wreg, status,2, status,0
 13828 ;; Tracked objects:
 13829 ;;		On entry : 0/0
 13830 ;;		On exit  : 0/0
 13831 ;;		Unchanged: 0/0
 13832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13833 ;;      Params:         2       0       0       0       0       0       0
 13834 ;;      Locals:         1       0       0       0       0       0       0
 13835 ;;      Temps:          4       0       0       0       0       0       0
 13836 ;;      Totals:         7       0       0       0       0       0       0
 13837 ;;Total ram usage:        7 bytes
 13838 ;; Hardware stack levels used:    1
 13839 ;; Hardware stack levels required when called:    1
 13840 ;; This function calls:
 13841 ;;		Nothing
 13842 ;; This function is called by:
 13843 ;;		_atoi
 13844 ;; This function uses a non-reentrant model
 13845 ;;
 13846                           
 13847                           	psect	text49
 13848  00585C                     __ptext49:
 13849                           	callstack 0
 13850  00585C                     _isspace:
 13851                           	callstack 23
 13852  00585C  0E01               	movlw	1
 13853  00585E  6E07               	movwf	_isspace$2601^0,c
 13854  005860  0E20               	movlw	32
 13855  005862  1801               	xorwf	isspace@c^0,w,c
 13856  005864  1002               	iorwf	(isspace@c+1)^0,w,c
 13857  005866  B4D8               	btfsc	status,2,c
 13858  005868  EF38  F02C         	goto	u5501
 13859  00586C  EF3A  F02C         	goto	u5500
 13860  005870                     u5501:
 13861  005870  EF53  F02C         	goto	l4779
 13862  005874                     u5500:
 13863  005874  0EF7               	movlw	247
 13864  005876  6E03               	movwf	??_isspace^0,c
 13865  005878  0EFF               	movlw	255
 13866  00587A  6E04               	movwf	(??_isspace+1)^0,c
 13867  00587C  C001  F005         	movff	isspace@c,??_isspace+2
 13868  005880  C002  F006         	movff	isspace@c+1,??_isspace+3
 13869  005884  5003               	movf	??_isspace^0,w,c
 13870  005886  2605               	addwf	(??_isspace+2)^0,f,c
 13871  005888  5004               	movf	(??_isspace+1)^0,w,c
 13872  00588A  2206               	addwfc	(??_isspace+3)^0,f,c
 13873  00588C  5006               	movf	(??_isspace+3)^0,w,c
 13874  00588E  E109               	bnz	u5510
 13875  005890  0E05               	movlw	5
 13876  005892  5C05               	subwf	(??_isspace+2)^0,w,c
 13877  005894  A0D8               	btfss	status,0,c
 13878  005896  EF4F  F02C         	goto	u5511
 13879  00589A  EF51  F02C         	goto	u5510
 13880  00589E                     u5511:
 13881  00589E  EF53  F02C         	goto	l4779
 13882  0058A2                     u5510:
 13883  0058A2  0E00               	movlw	0
 13884  0058A4  6E07               	movwf	_isspace$2601^0,c
 13885  0058A6                     l4779:
 13886  0058A6  C007  F001         	movff	_isspace$2601,?_isspace
 13887  0058AA  6A02               	clrf	(?_isspace+1)^0,c
 13888  0058AC  0012               	return		;funcret
 13889  0058AE                     __end_of_isspace:
 13890                           	callstack 0
 13891                           
 13892 ;; *************** function _isdigit *****************
 13893 ;; Defined at:
 13894 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
 13895 ;; Parameters:    Size  Location     Type
 13896 ;;  c               2    0[COMRAM] int 
 13897 ;; Auto vars:     Size  Location     Type
 13898 ;;		None
 13899 ;; Return value:  Size  Location     Type
 13900 ;;                  2    0[COMRAM] int 
 13901 ;; Registers used:
 13902 ;;		wreg, status,2, status,0
 13903 ;; Tracked objects:
 13904 ;;		On entry : 0/0
 13905 ;;		On exit  : 0/0
 13906 ;;		Unchanged: 0/0
 13907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13908 ;;      Params:         2       0       0       0       0       0       0
 13909 ;;      Locals:         0       0       0       0       0       0       0
 13910 ;;      Temps:          4       0       0       0       0       0       0
 13911 ;;      Totals:         6       0       0       0       0       0       0
 13912 ;;Total ram usage:        6 bytes
 13913 ;; Hardware stack levels used:    1
 13914 ;; Hardware stack levels required when called:    1
 13915 ;; This function calls:
 13916 ;;		Nothing
 13917 ;; This function is called by:
 13918 ;;		_vfpfcnvrt
 13919 ;;		_atoi
 13920 ;; This function uses a non-reentrant model
 13921 ;;
 13922                           
 13923                           	psect	text50
 13924  005AA4                     __ptext50:
 13925                           	callstack 0
 13926  005AA4                     _isdigit:
 13927                           	callstack 24
 13928  005AA4  0ED0               	movlw	208
 13929  005AA6  6E03               	movwf	??_isdigit^0,c
 13930  005AA8  0EFF               	movlw	255
 13931  005AAA  6E04               	movwf	(??_isdigit+1)^0,c
 13932  005AAC  C001  F005         	movff	isdigit@c,??_isdigit+2
 13933  005AB0  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 13934  005AB4  5003               	movf	??_isdigit^0,w,c
 13935  005AB6  2605               	addwf	(??_isdigit+2)^0,f,c
 13936  005AB8  5004               	movf	(??_isdigit+1)^0,w,c
 13937  005ABA  2206               	addwfc	(??_isdigit+3)^0,f,c
 13938  005ABC  5006               	movf	(??_isdigit+3)^0,w,c
 13939  005ABE  E10A               	bnz	u5480
 13940  005AC0  0E0A               	movlw	10
 13941  005AC2  5C05               	subwf	(??_isdigit+2)^0,w,c
 13942  005AC4  A0D8               	btfss	status,0,c
 13943  005AC6  EF67  F02D         	goto	u5481
 13944  005ACA  EF6A  F02D         	goto	u5480
 13945  005ACE                     u5481:
 13946  005ACE  0E01               	movlw	1
 13947  005AD0  EF6B  F02D         	goto	u5490
 13948  005AD4                     u5480:
 13949  005AD4  0E00               	movlw	0
 13950  005AD6                     u5490:
 13951  005AD6  6E01               	movwf	?_isdigit^0,c
 13952  005AD8  6A02               	clrf	(?_isdigit+1)^0,c
 13953  005ADA  0012               	return		;funcret
 13954  005ADC                     __end_of_isdigit:
 13955                           	callstack 0
 13956                           
 13957 ;; *************** function ___wmul *****************
 13958 ;; Defined at:
 13959 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
 13960 ;; Parameters:    Size  Location     Type
 13961 ;;  multiplier      2    0[COMRAM] unsigned int 
 13962 ;;  multiplicand    2    2[COMRAM] unsigned int 
 13963 ;; Auto vars:     Size  Location     Type
 13964 ;;  product         2    4[COMRAM] unsigned int 
 13965 ;; Return value:  Size  Location     Type
 13966 ;;                  2    0[COMRAM] unsigned int 
 13967 ;; Registers used:
 13968 ;;		wreg, status,2, status,0, prodl, prodh
 13969 ;; Tracked objects:
 13970 ;;		On entry : 0/0
 13971 ;;		On exit  : 0/0
 13972 ;;		Unchanged: 0/0
 13973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13974 ;;      Params:         4       0       0       0       0       0       0
 13975 ;;      Locals:         2       0       0       0       0       0       0
 13976 ;;      Temps:          0       0       0       0       0       0       0
 13977 ;;      Totals:         6       0       0       0       0       0       0
 13978 ;;Total ram usage:        6 bytes
 13979 ;; Hardware stack levels used:    1
 13980 ;; Hardware stack levels required when called:    1
 13981 ;; This function calls:
 13982 ;;		Nothing
 13983 ;; This function is called by:
 13984 ;;		_atoi
 13985 ;; This function uses a non-reentrant model
 13986 ;;
 13987                           
 13988                           	psect	text51
 13989  005C32                     __ptext51:
 13990                           	callstack 0
 13991  005C32                     ___wmul:
 13992                           	callstack 23
 13993  005C32  5001               	movf	___wmul@multiplier^0,w,c
 13994  005C34  0203               	mulwf	___wmul@multiplicand^0,c
 13995  005C36  CFF3 F005          	movff	prodl,___wmul@product
 13996  005C3A  CFF4 F006          	movff	prodh,___wmul@product+1
 13997  005C3E  5001               	movf	___wmul@multiplier^0,w,c
 13998  005C40  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 13999  005C42  50F3               	movf	243,w,c
 14000  005C44  2606               	addwf	(___wmul@product+1)^0,f,c
 14001  005C46  5002               	movf	(___wmul@multiplier+1)^0,w,c
 14002  005C48  0203               	mulwf	___wmul@multiplicand^0,c
 14003  005C4A  50F3               	movf	243,w,c
 14004  005C4C  2606               	addwf	(___wmul@product+1)^0,f,c
 14005  005C4E  C005  F001         	movff	___wmul@product,?___wmul
 14006  005C52  C006  F002         	movff	___wmul@product+1,?___wmul+1
 14007  005C56  0012               	return		;funcret
 14008  005C58                     __end_of___wmul:
 14009                           	callstack 0
 14010                           
 14011 ;; *************** function _eepromWrite *****************
 14012 ;; Defined at:
 14013 ;;		line 62 in file "fs_eeprom.c"
 14014 ;; Parameters:    Size  Location     Type
 14015 ;;  address         1    wreg     unsigned char 
 14016 ;;  data            1    0[COMRAM] unsigned char 
 14017 ;; Auto vars:     Size  Location     Type
 14018 ;;  address         1    1[COMRAM] unsigned char 
 14019 ;; Return value:  Size  Location     Type
 14020 ;;                  1    wreg      void 
 14021 ;; Registers used:
 14022 ;;		wreg, status,2
 14023 ;; Tracked objects:
 14024 ;;		On entry : 0/0
 14025 ;;		On exit  : 0/0
 14026 ;;		Unchanged: 0/0
 14027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14028 ;;      Params:         1       0       0       0       0       0       0
 14029 ;;      Locals:         1       0       0       0       0       0       0
 14030 ;;      Temps:          0       0       0       0       0       0       0
 14031 ;;      Totals:         2       0       0       0       0       0       0
 14032 ;;Total ram usage:        2 bytes
 14033 ;; Hardware stack levels used:    1
 14034 ;; Hardware stack levels required when called:    1
 14035 ;; This function calls:
 14036 ;;		Nothing
 14037 ;; This function is called by:
 14038 ;;		_stateMachine
 14039 ;; This function uses a non-reentrant model
 14040 ;;
 14041                           
 14042                           	psect	text52
 14043  005BB4                     __ptext52:
 14044                           	callstack 0
 14045  005BB4                     _eepromWrite:
 14046                           	callstack 27
 14047                           
 14048                           ;incstack = 0
 14049                           ;eepromWrite@address stored from wreg
 14050  005BB4  6E02               	movwf	eepromWrite@address^0,c
 14051  005BB6                     
 14052                           ;fs_eeprom.c: 62: void eepromWrite(uint8_t address, uint8_t data);fs_eeprom.c: 63: {;fs_
      +                          eeprom.c: 66:     EEADR = (uint8_t)address;
 14053  005BB6  C002  FFA9         	movff	eepromWrite@address,4009	;volatile
 14054  005BBA                     
 14055                           ;fs_eeprom.c: 68:     EEDATA = data;
 14056  005BBA  C001  FFA8         	movff	eepromWrite@data,4008	;volatile
 14057  005BBE                     
 14058                           ;fs_eeprom.c: 69:     EECON1bits.EEPGD = 0;
 14059  005BBE  9EA6               	bcf	166,7,c	;volsfr
 14060  005BC0                     
 14061                           ;fs_eeprom.c: 70:     EECON1bits.CFGS = 0;
 14062  005BC0  9CA6               	bcf	166,6,c	;volsfr
 14063  005BC2                     
 14064                           ;fs_eeprom.c: 71:     EECON1bits.WREN = 1;
 14065  005BC2  84A6               	bsf	166,2,c	;volsfr
 14066  005BC4                     
 14067                           ;fs_eeprom.c: 75:     EECON2 = 0x55;
 14068  005BC4  0E55               	movlw	85
 14069  005BC6  6EA7               	movwf	167,c	;volsfr
 14070  005BC8                     
 14071                           ;fs_eeprom.c: 76:     EECON2 = 0xAA;
 14072  005BC8  0EAA               	movlw	170
 14073  005BCA  6EA7               	movwf	167,c	;volsfr
 14074  005BCC                     
 14075                           ;fs_eeprom.c: 77:     EECON1bits.WR = 1;
 14076  005BCC  82A6               	bsf	166,1,c	;volsfr
 14077  005BCE                     l76:
 14078                           
 14079                           ;fs_eeprom.c: 80:     while(PIR2bits.EEIF == 0)
 14080  005BCE  A8A1               	btfss	161,4,c	;volatile
 14081  005BD0  EFEC  F02D         	goto	u6791
 14082  005BD4  EFEE  F02D         	goto	u6790
 14083  005BD8                     u6791:
 14084  005BD8  EFE7  F02D         	goto	l76
 14085  005BDC                     u6790:
 14086  005BDC                     
 14087                           ;fs_eeprom.c: 85:     PIR2bits.EEIF = 0;
 14088  005BDC  98A1               	bcf	161,4,c	;volatile
 14089                           
 14090                           ;fs_eeprom.c: 86:     EECON1bits.WREN = 0;
 14091  005BDE  94A6               	bcf	166,2,c	;volsfr
 14092  005BE0  0012               	return		;funcret
 14093  005BE2                     __end_of_eepromWrite:
 14094                           	callstack 0
 14095                           
 14096 ;; *************** function _Lcd_Write_String *****************
 14097 ;; Defined at:
 14098 ;;		line 155 in file "fs_lcd.c"
 14099 ;; Parameters:    Size  Location     Type
 14100 ;;  a               2    4[COMRAM] PTR unsigned char 
 14101 ;;		 -> STR_15(17), STR_13(17), STR_11(17), STR_9(17), 
 14102 ;;		 -> STR_7(17), STR_5(17), STR_3(17), STR_1(17), 
 14103 ;;		 -> stateMachine@textCursor2(16), 
 14104 ;; Auto vars:     Size  Location     Type
 14105 ;;  i               2    8[COMRAM] int 
 14106 ;; Return value:  Size  Location     Type
 14107 ;;                  1    wreg      void 
 14108 ;; Registers used:
 14109 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14110 ;; Tracked objects:
 14111 ;;		On entry : 0/0
 14112 ;;		On exit  : 0/0
 14113 ;;		Unchanged: 0/0
 14114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14115 ;;      Params:         2       0       0       0       0       0       0
 14116 ;;      Locals:         2       0       0       0       0       0       0
 14117 ;;      Temps:          2       0       0       0       0       0       0
 14118 ;;      Totals:         6       0       0       0       0       0       0
 14119 ;;Total ram usage:        6 bytes
 14120 ;; Hardware stack levels used:    1
 14121 ;; Hardware stack levels required when called:    3
 14122 ;; This function calls:
 14123 ;;		_Lcd_Write_Char
 14124 ;; This function is called by:
 14125 ;;		_stateMachine
 14126 ;; This function uses a non-reentrant model
 14127 ;;
 14128                           
 14129                           	psect	text53
 14130  005386                     __ptext53:
 14131                           	callstack 0
 14132  005386                     _Lcd_Write_String:
 14133                           	callstack 25
 14134  005386                     
 14135                           ;fs_lcd.c: 155: void Lcd_Write_String(char *a);fs_lcd.c: 156: {;fs_lcd.c: 157:    int i;
      +                          ;fs_lcd.c: 158:    for(i=0;a[i]!='\0';i++)
 14136  005386  0E00               	movlw	0
 14137  005388  6E0A               	movwf	(Lcd_Write_String@i+1)^0,c
 14138  00538A  0E00               	movlw	0
 14139  00538C  6E09               	movwf	Lcd_Write_String@i^0,c
 14140  00538E  EFE3  F029         	goto	l5631
 14141  005392                     l5627:
 14142                           
 14143                           ;fs_lcd.c: 159:    Lcd_Write_Char(a[i]);
 14144  005392  5009               	movf	Lcd_Write_String@i^0,w,c
 14145  005394  2405               	addwf	Lcd_Write_String@a^0,w,c
 14146  005396  6E07               	movwf	??_Lcd_Write_String^0,c
 14147  005398  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
 14148  00539A  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 14149  00539C  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
 14150  00539E  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
 14151  0053A2  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 14152  0053A6  6AF8               	clrf	tblptru,c
 14153  0053A8  0E05               	movlw	(high __ramtop+-1)
 14154  0053AA  64F7               	cpfsgt	tblptrh,c
 14155  0053AC  D003               	bra	u6827
 14156  0053AE  0008               	tblrd		*
 14157  0053B0  50F5               	movf	tablat,w,c
 14158  0053B2  D005               	bra	u6820
 14159  0053B4                     u6827:
 14160  0053B4  CFF6 FFE1          	movff	tblptrl,fsr1l
 14161  0053B8  CFF7 FFE2          	movff	tblptrh,fsr1h
 14162  0053BC  50E7               	movf	indf1,w,c
 14163  0053BE                     u6820:
 14164  0053BE  EC6E  F02D         	call	_Lcd_Write_Char
 14165  0053C2  4A09               	infsnz	Lcd_Write_String@i^0,f,c
 14166  0053C4  2A0A               	incf	(Lcd_Write_String@i+1)^0,f,c
 14167  0053C6                     l5631:
 14168  0053C6  5009               	movf	Lcd_Write_String@i^0,w,c
 14169  0053C8  2405               	addwf	Lcd_Write_String@a^0,w,c
 14170  0053CA  6E07               	movwf	??_Lcd_Write_String^0,c
 14171  0053CC  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
 14172  0053CE  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 14173  0053D0  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
 14174  0053D2  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
 14175  0053D6  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 14176  0053DA  6AF8               	clrf	tblptru,c
 14177  0053DC  0E05               	movlw	(high __ramtop+-1)
 14178  0053DE  64F7               	cpfsgt	tblptrh,c
 14179  0053E0  D003               	bra	u6837
 14180  0053E2  0008               	tblrd		*
 14181  0053E4  50F5               	movf	tablat,w,c
 14182  0053E6  D005               	bra	u6830
 14183  0053E8                     u6837:
 14184  0053E8  CFF6 FFE1          	movff	tblptrl,fsr1l
 14185  0053EC  CFF7 FFE2          	movff	tblptrh,fsr1h
 14186  0053F0  50E7               	movf	indf1,w,c
 14187  0053F2                     u6830:
 14188  0053F2  0900               	iorlw	0
 14189  0053F4  A4D8               	btfss	status,2,c
 14190  0053F6  EFFF  F029         	goto	u6841
 14191  0053FA  EF01  F02A         	goto	u6840
 14192  0053FE                     u6841:
 14193  0053FE  EFC9  F029         	goto	l5627
 14194  005402                     u6840:
 14195  005402  0012               	return		;funcret
 14196  005404                     __end_of_Lcd_Write_String:
 14197                           	callstack 0
 14198                           
 14199 ;; *************** function _Lcd_Write_Char *****************
 14200 ;; Defined at:
 14201 ;;		line 132 in file "fs_lcd.c"
 14202 ;; Parameters:    Size  Location     Type
 14203 ;;  a               1    wreg     unsigned char 
 14204 ;; Auto vars:     Size  Location     Type
 14205 ;;  a               1    3[COMRAM] unsigned char 
 14206 ;;  y               1    2[COMRAM] unsigned char 
 14207 ;;  temp            1    1[COMRAM] unsigned char 
 14208 ;; Return value:  Size  Location     Type
 14209 ;;                  1    wreg      void 
 14210 ;; Registers used:
 14211 ;;		wreg, status,2, status,0, cstack
 14212 ;; Tracked objects:
 14213 ;;		On entry : 0/0
 14214 ;;		On exit  : 0/0
 14215 ;;		Unchanged: 0/0
 14216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14217 ;;      Params:         0       0       0       0       0       0       0
 14218 ;;      Locals:         3       0       0       0       0       0       0
 14219 ;;      Temps:          0       0       0       0       0       0       0
 14220 ;;      Totals:         3       0       0       0       0       0       0
 14221 ;;Total ram usage:        3 bytes
 14222 ;; Hardware stack levels used:    1
 14223 ;; Hardware stack levels required when called:    2
 14224 ;; This function calls:
 14225 ;;		_Lcd_Port
 14226 ;; This function is called by:
 14227 ;;		_Lcd_Write_String
 14228 ;; This function uses a non-reentrant model
 14229 ;;
 14230                           
 14231                           	psect	text54
 14232  005ADC                     __ptext54:
 14233                           	callstack 0
 14234  005ADC                     _Lcd_Write_Char:
 14235                           	callstack 25
 14236                           
 14237                           ;incstack = 0
 14238                           ;Lcd_Write_Char@a stored from wreg
 14239  005ADC  6E04               	movwf	Lcd_Write_Char@a^0,c
 14240  005ADE                     
 14241                           ;fs_lcd.c: 132: void Lcd_Write_Char(char a);fs_lcd.c: 133: {;fs_lcd.c: 134:    char temp
      +                          ,y;;fs_lcd.c: 135:    temp = a&0x0F;
 14242  005ADE  5004               	movf	Lcd_Write_Char@a^0,w,c
 14243  005AE0  0B0F               	andlw	15
 14244  005AE2  6E02               	movwf	Lcd_Write_Char@temp^0,c
 14245                           
 14246                           ;fs_lcd.c: 136:    y = a&0xF0;
 14247  005AE4  5004               	movf	Lcd_Write_Char@a^0,w,c
 14248  005AE6  0BF0               	andlw	240
 14249  005AE8  6E03               	movwf	Lcd_Write_Char@y^0,c
 14250  005AEA                     
 14251                           ;fs_lcd.c: 137:    PORTDbits.RD6 = 1;
 14252  005AEA  8C83               	bsf	131,6,c	;volatile
 14253  005AEC                     
 14254                           ;fs_lcd.c: 138:    Lcd_Port(y>>4);
 14255  005AEC  3803               	swapf	Lcd_Write_Char@y^0,w,c
 14256  005AEE  0B0F               	andlw	15
 14257  005AF0  ECAE  F02B         	call	_Lcd_Port
 14258  005AF4                     
 14259                           ;fs_lcd.c: 139:    PORTDbits.RD7 = 1;
 14260  005AF4  8E83               	bsf	131,7,c	;volatile
 14261  005AF6                     
 14262                           ;fs_lcd.c: 140:    _delay((unsigned long)((40)*(64000000UL/4000000.0)));
 14263  005AF6  0ED5               	movlw	213
 14264  005AF8                     u7827:
 14265  005AF8  2EE8               	decfsz	wreg,f,c
 14266  005AFA  D7FE               	bra	u7827
 14267  005AFC  F000               	nop	
 14268  005AFE                     
 14269                           ;fs_lcd.c: 141:    PORTDbits.RD7 = 0;
 14270  005AFE  9E83               	bcf	131,7,c	;volatile
 14271  005B00                     
 14272                           ;fs_lcd.c: 142:    Lcd_Port(temp);
 14273  005B00  5002               	movf	Lcd_Write_Char@temp^0,w,c
 14274  005B02  ECAE  F02B         	call	_Lcd_Port
 14275  005B06                     
 14276                           ;fs_lcd.c: 143:    PORTDbits.RD7 = 1;
 14277  005B06  8E83               	bsf	131,7,c	;volatile
 14278  005B08                     
 14279                           ;fs_lcd.c: 144:    _delay((unsigned long)((40)*(64000000UL/4000000.0)));
 14280  005B08  0ED5               	movlw	213
 14281  005B0A                     u7837:
 14282  005B0A  2EE8               	decfsz	wreg,f,c
 14283  005B0C  D7FE               	bra	u7837
 14284  005B0E  F000               	nop	
 14285  005B10                     
 14286                           ;fs_lcd.c: 145:    PORTDbits.RD7 = 0;
 14287  005B10  9E83               	bcf	131,7,c	;volatile
 14288  005B12  0012               	return		;funcret
 14289  005B14                     __end_of_Lcd_Write_Char:
 14290                           	callstack 0
 14291                           
 14292 ;; *************** function _Lcd_Set_Cursor *****************
 14293 ;; Defined at:
 14294 ;;		line 62 in file "fs_lcd.c"
 14295 ;; Parameters:    Size  Location     Type
 14296 ;;  a               1    wreg     unsigned char 
 14297 ;;  b               1    3[COMRAM] unsigned char 
 14298 ;; Auto vars:     Size  Location     Type
 14299 ;;  a               1    4[COMRAM] unsigned char 
 14300 ;;  temp            1    7[COMRAM] unsigned char 
 14301 ;;  y               1    6[COMRAM] unsigned char 
 14302 ;;  z               1    5[COMRAM] unsigned char 
 14303 ;; Return value:  Size  Location     Type
 14304 ;;                  1    wreg      void 
 14305 ;; Registers used:
 14306 ;;		wreg, status,2, status,0, cstack
 14307 ;; Tracked objects:
 14308 ;;		On entry : 0/0
 14309 ;;		On exit  : 0/0
 14310 ;;		Unchanged: 0/0
 14311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14312 ;;      Params:         1       0       0       0       0       0       0
 14313 ;;      Locals:         4       0       0       0       0       0       0
 14314 ;;      Temps:          0       0       0       0       0       0       0
 14315 ;;      Totals:         5       0       0       0       0       0       0
 14316 ;;Total ram usage:        5 bytes
 14317 ;; Hardware stack levels used:    1
 14318 ;; Hardware stack levels required when called:    3
 14319 ;; This function calls:
 14320 ;;		_Lcd_Cmd
 14321 ;; This function is called by:
 14322 ;;		_stateMachine
 14323 ;; This function uses a non-reentrant model
 14324 ;;
 14325                           
 14326                           	psect	text55
 14327  00563A                     __ptext55:
 14328                           	callstack 0
 14329  00563A                     _Lcd_Set_Cursor:
 14330                           	callstack 25
 14331                           
 14332                           ;incstack = 0
 14333                           ;Lcd_Set_Cursor@a stored from wreg
 14334  00563A  6E05               	movwf	Lcd_Set_Cursor@a^0,c
 14335  00563C                     
 14336                           ;fs_lcd.c: 62: void Lcd_Set_Cursor(char a, char b);fs_lcd.c: 63: {;fs_lcd.c: 64:    char
      +                           temp,z,y;;fs_lcd.c: 65:    if(a == 1)
 14337  00563C  0405               	decf	Lcd_Set_Cursor@a^0,w,c
 14338  00563E  A4D8               	btfss	status,2,c
 14339  005640  EF24  F02B         	goto	u6801
 14340  005644  EF26  F02B         	goto	u6800
 14341  005648                     u6801:
 14342  005648  EF37  F02B         	goto	l5617
 14343  00564C                     u6800:
 14344  00564C                     
 14345                           ;fs_lcd.c: 66:    {;fs_lcd.c: 67:      temp = 0x80 + b - 1;
 14346  00564C  5004               	movf	Lcd_Set_Cursor@b^0,w,c
 14347  00564E  0F7F               	addlw	127
 14348  005650  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
 14349                           
 14350                           ;fs_lcd.c: 68:       z = temp>>4;
 14351  005652  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
 14352  005654  0B0F               	andlw	15
 14353  005656  6E06               	movwf	Lcd_Set_Cursor@z^0,c
 14354                           
 14355                           ;fs_lcd.c: 69:       y = temp & 0x0F;
 14356  005658  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
 14357  00565A  0B0F               	andlw	15
 14358  00565C  6E07               	movwf	Lcd_Set_Cursor@y^0,c
 14359  00565E                     
 14360                           ;fs_lcd.c: 70:       Lcd_Cmd(z);
 14361  00565E  5006               	movf	Lcd_Set_Cursor@z^0,w,c
 14362  005660  EC4B  F02E         	call	_Lcd_Cmd
 14363  005664                     
 14364                           ;fs_lcd.c: 71:       Lcd_Cmd(y);
 14365  005664  5007               	movf	Lcd_Set_Cursor@y^0,w,c
 14366  005666  EC4B  F02E         	call	_Lcd_Cmd
 14367                           
 14368                           ;fs_lcd.c: 72:    }
 14369  00566A  EF4F  F02B         	goto	l116
 14370  00566E                     l5617:
 14371  00566E  0E02               	movlw	2
 14372  005670  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
 14373  005672  A4D8               	btfss	status,2,c
 14374  005674  EF3E  F02B         	goto	u6811
 14375  005678  EF40  F02B         	goto	u6810
 14376  00567C                     u6811:
 14377  00567C  EF4F  F02B         	goto	l116
 14378  005680                     u6810:
 14379  005680                     
 14380                           ;fs_lcd.c: 74:    {;fs_lcd.c: 75:       temp = 0xC0 + b - 1;
 14381  005680  5004               	movf	Lcd_Set_Cursor@b^0,w,c
 14382  005682  0FBF               	addlw	191
 14383  005684  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
 14384                           
 14385                           ;fs_lcd.c: 76:       z = temp>>4;
 14386  005686  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
 14387  005688  0B0F               	andlw	15
 14388  00568A  6E06               	movwf	Lcd_Set_Cursor@z^0,c
 14389                           
 14390                           ;fs_lcd.c: 77:       y = temp & 0x0F;
 14391  00568C  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
 14392  00568E  0B0F               	andlw	15
 14393  005690  6E07               	movwf	Lcd_Set_Cursor@y^0,c
 14394  005692                     
 14395                           ;fs_lcd.c: 78:       Lcd_Cmd(z);
 14396  005692  5006               	movf	Lcd_Set_Cursor@z^0,w,c
 14397  005694  EC4B  F02E         	call	_Lcd_Cmd
 14398  005698                     
 14399                           ;fs_lcd.c: 79:       Lcd_Cmd(y);
 14400  005698  5007               	movf	Lcd_Set_Cursor@y^0,w,c
 14401  00569A  EC4B  F02E         	call	_Lcd_Cmd
 14402  00569E                     l116:
 14403  00569E  0012               	return		;funcret
 14404  0056A0                     __end_of_Lcd_Set_Cursor:
 14405                           	callstack 0
 14406                           
 14407 ;; *************** function _buttonControlFlags *****************
 14408 ;; Defined at:
 14409 ;;		line 79 in file "fs_menu_controller.c"
 14410 ;; Parameters:    Size  Location     Type
 14411 ;;		None
 14412 ;; Auto vars:     Size  Location     Type
 14413 ;;		None
 14414 ;; Return value:  Size  Location     Type
 14415 ;;                  1    wreg      void 
 14416 ;; Registers used:
 14417 ;;		None
 14418 ;; Tracked objects:
 14419 ;;		On entry : 0/0
 14420 ;;		On exit  : 0/0
 14421 ;;		Unchanged: 0/0
 14422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14423 ;;      Params:         0       0       0       0       0       0       0
 14424 ;;      Locals:         0       0       0       0       0       0       0
 14425 ;;      Temps:          0       0       0       0       0       0       0
 14426 ;;      Totals:         0       0       0       0       0       0       0
 14427 ;;Total ram usage:        0 bytes
 14428 ;; Hardware stack levels used:    1
 14429 ;; Hardware stack levels required when called:    1
 14430 ;; This function calls:
 14431 ;;		Nothing
 14432 ;; This function is called by:
 14433 ;;		_menuControl
 14434 ;; This function uses a non-reentrant model
 14435 ;;
 14436                           
 14437                           	psect	text56
 14438  0045BA                     __ptext56:
 14439                           	callstack 0
 14440  0045BA                     _buttonControlFlags:
 14441                           	callstack 28
 14442  0045BA                     
 14443                           ;fs_menu_controller.c: 82:     if ((button_bounce_controller.menu == 0) && (PORTBbits.RB
      +                          7 == 0))
 14444  0045BA  0100               	movlb	0	; () banked
 14445  0045BC  B1FE               	btfsc	_button_bounce_controller& (0+255),0,b
 14446  0045BE  EFE3  F022         	goto	u6861
 14447  0045C2  EFE5  F022         	goto	u6860
 14448  0045C6                     u6861:
 14449  0045C6  EFEE  F022         	goto	l311
 14450  0045CA                     u6860:
 14451  0045CA                     
 14452                           ; BSR set to: 0
 14453  0045CA  BE81               	btfsc	129,7,c	;volatile
 14454  0045CC  EFEA  F022         	goto	u6871
 14455  0045D0  EFEC  F022         	goto	u6870
 14456  0045D4                     u6871:
 14457  0045D4  EFEE  F022         	goto	l311
 14458  0045D8                     u6870:
 14459  0045D8                     
 14460                           ; BSR set to: 0
 14461                           ;fs_menu_controller.c: 83:     {;fs_menu_controller.c: 84:         button_bounce_control
      +                          ler.menu = 1;
 14462  0045D8  81FE               	bsf	_button_bounce_controller& (0+255),0,b
 14463                           
 14464                           ;fs_menu_controller.c: 85:         menu_flags.menu_input_flag = 1;
 14465  0045DA  81FD               	bsf	_menu_flags& (0+255),0,b
 14466  0045DC                     l311:
 14467                           
 14468                           ; BSR set to: 0
 14469                           ;fs_menu_controller.c: 88:     if ((PORTBbits.RB7 == 1) && (button_bounce_controller.men
      +                          u == 1))
 14470  0045DC  AE81               	btfss	129,7,c	;volatile
 14471  0045DE  EFF3  F022         	goto	u6881
 14472  0045E2  EFF5  F022         	goto	u6880
 14473  0045E6                     u6881:
 14474  0045E6  EFFE  F022         	goto	l312
 14475  0045EA                     u6880:
 14476  0045EA                     
 14477                           ; BSR set to: 0
 14478  0045EA  A1FE               	btfss	_button_bounce_controller& (0+255),0,b
 14479  0045EC  EFFA  F022         	goto	u6891
 14480  0045F0  EFFC  F022         	goto	u6890
 14481  0045F4                     u6891:
 14482  0045F4  EFFE  F022         	goto	l312
 14483  0045F8                     u6890:
 14484  0045F8                     
 14485                           ; BSR set to: 0
 14486                           ;fs_menu_controller.c: 89:     {;fs_menu_controller.c: 90:         button_bounce_control
      +                          ler.menu = 0;
 14487  0045F8  91FE               	bcf	_button_bounce_controller& (0+255),0,b
 14488                           
 14489                           ;fs_menu_controller.c: 91:         menu_flags.menu_input_flag = 0;
 14490  0045FA  91FD               	bcf	_menu_flags& (0+255),0,b
 14491  0045FC                     l312:
 14492                           
 14493                           ; BSR set to: 0
 14494                           ;fs_menu_controller.c: 95:     if ((button_bounce_controller.pause == 0) && (PORTDbits.R
      +                          D2 == 0))
 14495  0045FC  B7FE               	btfsc	_button_bounce_controller& (0+255),3,b
 14496  0045FE  EF03  F023         	goto	u6901
 14497  004602  EF05  F023         	goto	u6900
 14498  004606                     u6901:
 14499  004606  EF0E  F023         	goto	l313
 14500  00460A                     u6900:
 14501  00460A                     
 14502                           ; BSR set to: 0
 14503  00460A  B483               	btfsc	131,2,c	;volatile
 14504  00460C  EF0A  F023         	goto	u6911
 14505  004610  EF0C  F023         	goto	u6910
 14506  004614                     u6911:
 14507  004614  EF0E  F023         	goto	l313
 14508  004618                     u6910:
 14509  004618                     
 14510                           ; BSR set to: 0
 14511                           ;fs_menu_controller.c: 96:     {;fs_menu_controller.c: 97:         button_bounce_control
      +                          ler.pause = 1;
 14512  004618  87FE               	bsf	_button_bounce_controller& (0+255),3,b
 14513                           
 14514                           ;fs_menu_controller.c: 98:         menu_flags.menu_pause_flag = 1;
 14515  00461A  87FD               	bsf	_menu_flags& (0+255),3,b
 14516  00461C                     l313:
 14517                           
 14518                           ; BSR set to: 0
 14519                           ;fs_menu_controller.c: 100:     if ((PORTDbits.RD2 == 1) && (button_bounce_controller.pa
      +                          use == 1))
 14520  00461C  A483               	btfss	131,2,c	;volatile
 14521  00461E  EF13  F023         	goto	u6921
 14522  004622  EF15  F023         	goto	u6920
 14523  004626                     u6921:
 14524  004626  EF1E  F023         	goto	l314
 14525  00462A                     u6920:
 14526  00462A                     
 14527                           ; BSR set to: 0
 14528  00462A  A7FE               	btfss	_button_bounce_controller& (0+255),3,b
 14529  00462C  EF1A  F023         	goto	u6931
 14530  004630  EF1C  F023         	goto	u6930
 14531  004634                     u6931:
 14532  004634  EF1E  F023         	goto	l314
 14533  004638                     u6930:
 14534  004638                     
 14535                           ; BSR set to: 0
 14536                           ;fs_menu_controller.c: 101:     {;fs_menu_controller.c: 102:         button_bounce_contr
      +                          oller.pause = 0;
 14537  004638  97FE               	bcf	_button_bounce_controller& (0+255),3,b
 14538                           
 14539                           ;fs_menu_controller.c: 103:         menu_flags.menu_pause_flag = 0;
 14540  00463A  97FD               	bcf	_menu_flags& (0+255),3,b
 14541  00463C                     l314:
 14542                           
 14543                           ; BSR set to: 0
 14544                           ;fs_menu_controller.c: 107:     if ((button_bounce_controller.start == 0) && (PORTDbits.
      +                          RD0 == 0))
 14545  00463C  B3FE               	btfsc	_button_bounce_controller& (0+255),1,b
 14546  00463E  EF23  F023         	goto	u6941
 14547  004642  EF25  F023         	goto	u6940
 14548  004646                     u6941:
 14549  004646  EF2E  F023         	goto	l315
 14550  00464A                     u6940:
 14551  00464A                     
 14552                           ; BSR set to: 0
 14553  00464A  B083               	btfsc	131,0,c	;volatile
 14554  00464C  EF2A  F023         	goto	u6951
 14555  004650  EF2C  F023         	goto	u6950
 14556  004654                     u6951:
 14557  004654  EF2E  F023         	goto	l315
 14558  004658                     u6950:
 14559  004658                     
 14560                           ; BSR set to: 0
 14561                           ;fs_menu_controller.c: 108:     {;fs_menu_controller.c: 109:         button_bounce_contr
      +                          oller.start = 1;
 14562  004658  83FE               	bsf	_button_bounce_controller& (0+255),1,b
 14563                           
 14564                           ;fs_menu_controller.c: 110:         menu_flags.menu_start_flag = 1;
 14565  00465A  83FD               	bsf	_menu_flags& (0+255),1,b
 14566  00465C                     l315:
 14567                           
 14568                           ; BSR set to: 0
 14569                           ;fs_menu_controller.c: 112:     if ((PORTDbits.RD0 == 1) && (button_bounce_controller.st
      +                          art == 1))
 14570  00465C  A083               	btfss	131,0,c	;volatile
 14571  00465E  EF33  F023         	goto	u6961
 14572  004662  EF35  F023         	goto	u6960
 14573  004666                     u6961:
 14574  004666  EF3E  F023         	goto	l316
 14575  00466A                     u6960:
 14576  00466A                     
 14577                           ; BSR set to: 0
 14578  00466A  A3FE               	btfss	_button_bounce_controller& (0+255),1,b
 14579  00466C  EF3A  F023         	goto	u6971
 14580  004670  EF3C  F023         	goto	u6970
 14581  004674                     u6971:
 14582  004674  EF3E  F023         	goto	l316
 14583  004678                     u6970:
 14584  004678                     
 14585                           ; BSR set to: 0
 14586                           ;fs_menu_controller.c: 113:     {;fs_menu_controller.c: 114:         button_bounce_contr
      +                          oller.start = 0;
 14587  004678  93FE               	bcf	_button_bounce_controller& (0+255),1,b
 14588                           
 14589                           ;fs_menu_controller.c: 115:         menu_flags.menu_start_flag = 0;
 14590  00467A  93FD               	bcf	_menu_flags& (0+255),1,b
 14591  00467C                     l316:
 14592                           
 14593                           ; BSR set to: 0
 14594                           ;fs_menu_controller.c: 119:     if ((button_bounce_controller.stop == 0) && (PORTDbits.R
      +                          D1 == 0))
 14595  00467C  B5FE               	btfsc	_button_bounce_controller& (0+255),2,b
 14596  00467E  EF43  F023         	goto	u6981
 14597  004682  EF45  F023         	goto	u6980
 14598  004686                     u6981:
 14599  004686  EF4E  F023         	goto	l317
 14600  00468A                     u6980:
 14601  00468A                     
 14602                           ; BSR set to: 0
 14603  00468A  B283               	btfsc	131,1,c	;volatile
 14604  00468C  EF4A  F023         	goto	u6991
 14605  004690  EF4C  F023         	goto	u6990
 14606  004694                     u6991:
 14607  004694  EF4E  F023         	goto	l317
 14608  004698                     u6990:
 14609  004698                     
 14610                           ; BSR set to: 0
 14611                           ;fs_menu_controller.c: 120:     {;fs_menu_controller.c: 121:         button_bounce_contr
      +                          oller.stop = 1;
 14612  004698  85FE               	bsf	_button_bounce_controller& (0+255),2,b
 14613                           
 14614                           ;fs_menu_controller.c: 122:         menu_flags.menu_stop_flag = 1;
 14615  00469A  85FD               	bsf	_menu_flags& (0+255),2,b
 14616  00469C                     l317:
 14617                           
 14618                           ; BSR set to: 0
 14619                           ;fs_menu_controller.c: 124:     if ((PORTDbits.RD1 == 1) && (button_bounce_controller.st
      +                          op == 1))
 14620  00469C  A283               	btfss	131,1,c	;volatile
 14621  00469E  EF53  F023         	goto	u7001
 14622  0046A2  EF55  F023         	goto	u7000
 14623  0046A6                     u7001:
 14624  0046A6  EF5E  F023         	goto	l318
 14625  0046AA                     u7000:
 14626  0046AA                     
 14627                           ; BSR set to: 0
 14628  0046AA  A5FE               	btfss	_button_bounce_controller& (0+255),2,b
 14629  0046AC  EF5A  F023         	goto	u7011
 14630  0046B0  EF5C  F023         	goto	u7010
 14631  0046B4                     u7011:
 14632  0046B4  EF5E  F023         	goto	l318
 14633  0046B8                     u7010:
 14634  0046B8                     
 14635                           ; BSR set to: 0
 14636                           ;fs_menu_controller.c: 125:     {;fs_menu_controller.c: 126:         button_bounce_contr
      +                          oller.stop = 0;
 14637  0046B8  95FE               	bcf	_button_bounce_controller& (0+255),2,b
 14638                           
 14639                           ;fs_menu_controller.c: 127:         menu_flags.menu_stop_flag = 0;
 14640  0046BA  95FD               	bcf	_menu_flags& (0+255),2,b
 14641  0046BC                     l318:
 14642                           
 14643                           ; BSR set to: 0
 14644                           ;fs_menu_controller.c: 131:     if ((button_bounce_controller.increase == 0) && (PORTBbi
      +                          ts.RB6 == 0))
 14645  0046BC  BBFE               	btfsc	_button_bounce_controller& (0+255),5,b
 14646  0046BE  EF63  F023         	goto	u7021
 14647  0046C2  EF65  F023         	goto	u7020
 14648  0046C6                     u7021:
 14649  0046C6  EF6E  F023         	goto	l319
 14650  0046CA                     u7020:
 14651  0046CA                     
 14652                           ; BSR set to: 0
 14653  0046CA  BC81               	btfsc	129,6,c	;volatile
 14654  0046CC  EF6A  F023         	goto	u7031
 14655  0046D0  EF6C  F023         	goto	u7030
 14656  0046D4                     u7031:
 14657  0046D4  EF6E  F023         	goto	l319
 14658  0046D8                     u7030:
 14659  0046D8                     
 14660                           ; BSR set to: 0
 14661                           ;fs_menu_controller.c: 132:     {;fs_menu_controller.c: 133:         button_bounce_contr
      +                          oller.increase = 1;
 14662  0046D8  8BFE               	bsf	_button_bounce_controller& (0+255),5,b
 14663                           
 14664                           ;fs_menu_controller.c: 134:         menu_flags.menu_increase_flag = 1;
 14665  0046DA  89FD               	bsf	_menu_flags& (0+255),4,b
 14666  0046DC                     l319:
 14667                           
 14668                           ; BSR set to: 0
 14669                           ;fs_menu_controller.c: 136:     if ((PORTBbits.RB6 == 1) && (button_bounce_controller.in
      +                          crease == 1))
 14670  0046DC  AC81               	btfss	129,6,c	;volatile
 14671  0046DE  EF73  F023         	goto	u7041
 14672  0046E2  EF75  F023         	goto	u7040
 14673  0046E6                     u7041:
 14674  0046E6  EF7E  F023         	goto	l320
 14675  0046EA                     u7040:
 14676  0046EA                     
 14677                           ; BSR set to: 0
 14678  0046EA  ABFE               	btfss	_button_bounce_controller& (0+255),5,b
 14679  0046EC  EF7A  F023         	goto	u7051
 14680  0046F0  EF7C  F023         	goto	u7050
 14681  0046F4                     u7051:
 14682  0046F4  EF7E  F023         	goto	l320
 14683  0046F8                     u7050:
 14684  0046F8                     
 14685                           ; BSR set to: 0
 14686                           ;fs_menu_controller.c: 137:     {;fs_menu_controller.c: 138:         button_bounce_contr
      +                          oller.increase = 0;
 14687  0046F8  9BFE               	bcf	_button_bounce_controller& (0+255),5,b
 14688                           
 14689                           ;fs_menu_controller.c: 139:         menu_flags.menu_increase_flag = 0;
 14690  0046FA  99FD               	bcf	_menu_flags& (0+255),4,b
 14691  0046FC                     l320:
 14692                           
 14693                           ; BSR set to: 0
 14694                           ;fs_menu_controller.c: 143:     if ((button_bounce_controller.decrease == 0) && (PORTDbi
      +                          ts.RD4 == 0))
 14695  0046FC  B9FE               	btfsc	_button_bounce_controller& (0+255),4,b
 14696  0046FE  EF83  F023         	goto	u7061
 14697  004702  EF85  F023         	goto	u7060
 14698  004706                     u7061:
 14699  004706  EF8E  F023         	goto	l321
 14700  00470A                     u7060:
 14701  00470A                     
 14702                           ; BSR set to: 0
 14703  00470A  B883               	btfsc	131,4,c	;volatile
 14704  00470C  EF8A  F023         	goto	u7071
 14705  004710  EF8C  F023         	goto	u7070
 14706  004714                     u7071:
 14707  004714  EF8E  F023         	goto	l321
 14708  004718                     u7070:
 14709  004718                     
 14710                           ; BSR set to: 0
 14711                           ;fs_menu_controller.c: 144:     {;fs_menu_controller.c: 145:         button_bounce_contr
      +                          oller.decrease = 1;
 14712  004718  89FE               	bsf	_button_bounce_controller& (0+255),4,b
 14713                           
 14714                           ;fs_menu_controller.c: 146:         menu_flags.menu_decrease_flag = 1;
 14715  00471A  8BFD               	bsf	_menu_flags& (0+255),5,b
 14716  00471C                     l321:
 14717                           
 14718                           ; BSR set to: 0
 14719                           ;fs_menu_controller.c: 148:     if ((PORTDbits.RD4 == 1) && (button_bounce_controller.de
      +                          crease == 1))
 14720  00471C  A883               	btfss	131,4,c	;volatile
 14721  00471E  EF93  F023         	goto	u7081
 14722  004722  EF95  F023         	goto	u7080
 14723  004726                     u7081:
 14724  004726  EF9E  F023         	goto	l323
 14725  00472A                     u7080:
 14726  00472A                     
 14727                           ; BSR set to: 0
 14728  00472A  A9FE               	btfss	_button_bounce_controller& (0+255),4,b
 14729  00472C  EF9A  F023         	goto	u7091
 14730  004730  EF9C  F023         	goto	u7090
 14731  004734                     u7091:
 14732  004734  EF9E  F023         	goto	l323
 14733  004738                     u7090:
 14734  004738                     
 14735                           ; BSR set to: 0
 14736                           ;fs_menu_controller.c: 149:     {;fs_menu_controller.c: 150:         button_bounce_contr
      +                          oller.decrease = 0;
 14737  004738  99FE               	bcf	_button_bounce_controller& (0+255),4,b
 14738                           
 14739                           ;fs_menu_controller.c: 151:         menu_flags.menu_decrease_flag = 0;
 14740  00473A  9BFD               	bcf	_menu_flags& (0+255),5,b
 14741  00473C                     l323:
 14742                           
 14743                           ; BSR set to: 0
 14744  00473C  0012               	return		;funcret
 14745  00473E                     __end_of_buttonControlFlags:
 14746                           	callstack 0
 14747                           
 14748 ;; *************** function _mcu_init *****************
 14749 ;; Defined at:
 14750 ;;		line 42 in file "fs_mcu.c"
 14751 ;; Parameters:    Size  Location     Type
 14752 ;;		None
 14753 ;; Auto vars:     Size  Location     Type
 14754 ;;		None
 14755 ;; Return value:  Size  Location     Type
 14756 ;;                  1    wreg      void 
 14757 ;; Registers used:
 14758 ;;		wreg, status,2
 14759 ;; Tracked objects:
 14760 ;;		On entry : 0/0
 14761 ;;		On exit  : 0/0
 14762 ;;		Unchanged: 0/0
 14763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14764 ;;      Params:         0       0       0       0       0       0       0
 14765 ;;      Locals:         0       0       0       0       0       0       0
 14766 ;;      Temps:          0       0       0       0       0       0       0
 14767 ;;      Totals:         0       0       0       0       0       0       0
 14768 ;;Total ram usage:        0 bytes
 14769 ;; Hardware stack levels used:    1
 14770 ;; Hardware stack levels required when called:    1
 14771 ;; This function calls:
 14772 ;;		Nothing
 14773 ;; This function is called by:
 14774 ;;		_main
 14775 ;; This function uses a non-reentrant model
 14776 ;;
 14777                           
 14778                           	psect	text57
 14779  005CB4                     __ptext57:
 14780                           	callstack 0
 14781  005CB4                     _mcu_init:
 14782                           	callstack 29
 14783  005CB4                     
 14784                           ;fs_mcu.c: 44:    OSCCONbits.IRCF = 0b111;
 14785  005CB4  0E70               	movlw	112
 14786  005CB6  12D3               	iorwf	211,f,c	;volatile
 14787  005CB8                     
 14788                           ;fs_mcu.c: 45:    OSCTUNEbits.PLLEN = 0b1;
 14789  005CB8  8C9B               	bsf	155,6,c	;volatile
 14790  005CBA                     l243:
 14791  005CBA  A4D3               	btfss	211,2,c	;volatile
 14792  005CBC  EF62  F02E         	goto	u7661
 14793  005CC0  EF64  F02E         	goto	u7660
 14794  005CC4                     u7661:
 14795  005CC4  EF5D  F02E         	goto	l243
 14796  005CC8                     u7660:
 14797  005CC8  0012               	return		;funcret
 14798  005CCA                     __end_of_mcu_init:
 14799                           	callstack 0
 14800                           
 14801 ;; *************** function _lcd_init *****************
 14802 ;; Defined at:
 14803 ;;		line 88 in file "fs_lcd.c"
 14804 ;; Parameters:    Size  Location     Type
 14805 ;;		None
 14806 ;; Auto vars:     Size  Location     Type
 14807 ;;		None
 14808 ;; Return value:  Size  Location     Type
 14809 ;;                  1    wreg      void 
 14810 ;; Registers used:
 14811 ;;		wreg, status,2, cstack
 14812 ;; Tracked objects:
 14813 ;;		On entry : 0/0
 14814 ;;		On exit  : 0/0
 14815 ;;		Unchanged: 0/0
 14816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14817 ;;      Params:         0       0       0       0       0       0       0
 14818 ;;      Locals:         0       0       0       0       0       0       0
 14819 ;;      Temps:          2       0       0       0       0       0       0
 14820 ;;      Totals:         2       0       0       0       0       0       0
 14821 ;;Total ram usage:        2 bytes
 14822 ;; Hardware stack levels used:    1
 14823 ;; Hardware stack levels required when called:    3
 14824 ;; This function calls:
 14825 ;;		_Lcd_Cmd
 14826 ;;		_Lcd_Port
 14827 ;; This function is called by:
 14828 ;;		_main
 14829 ;; This function uses a non-reentrant model
 14830 ;;
 14831                           
 14832                           	psect	text58
 14833  0052F0                     __ptext58:
 14834                           	callstack 0
 14835  0052F0                     _lcd_init:
 14836                           	callstack 27
 14837  0052F0                     
 14838                           ;fs_lcd.c: 90:     TRISDbits.RD6 = 0;
 14839  0052F0  9C95               	bcf	149,6,c	;volatile
 14840                           
 14841                           ;fs_lcd.c: 91:     ANSELDbits.ANSD6 = 0;
 14842  0052F2  010F               	movlb	15	; () banked
 14843  0052F4  9D3B               	bcf	59,6,b	;volatile
 14844                           
 14845                           ;fs_lcd.c: 93:     TRISDbits.RD7 = 0;
 14846  0052F6  9E95               	bcf	149,7,c	;volatile
 14847                           
 14848                           ;fs_lcd.c: 94:     ANSELDbits.ANSD7 = 0;
 14849  0052F8  9F3B               	bcf	59,7,b	;volatile
 14850                           
 14851                           ;fs_lcd.c: 96:     TRISBbits.RB0 = 0;
 14852  0052FA  9093               	bcf	147,0,c	;volatile
 14853                           
 14854                           ;fs_lcd.c: 97:     ANSELBbits.ANSB0 = 0;
 14855  0052FC  9139               	bcf	57,0,b	;volatile
 14856                           
 14857                           ;fs_lcd.c: 99:     TRISBbits.RB1 = 0;
 14858  0052FE  9293               	bcf	147,1,c	;volatile
 14859                           
 14860                           ;fs_lcd.c: 100:     ANSELBbits.ANSB1 = 0;
 14861  005300  9339               	bcf	57,1,b	;volatile
 14862                           
 14863                           ;fs_lcd.c: 102:     TRISBbits.RB2 = 0;
 14864  005302  9493               	bcf	147,2,c	;volatile
 14865                           
 14866                           ;fs_lcd.c: 103:     ANSELBbits.ANSB2 = 0;
 14867  005304  9539               	bcf	57,2,b	;volatile
 14868                           
 14869                           ;fs_lcd.c: 105:     TRISBbits.RB3 = 0;
 14870  005306  9693               	bcf	147,3,c	;volatile
 14871                           
 14872                           ;fs_lcd.c: 106:     ANSELBbits.ANSB3 = 0;
 14873  005308  9739               	bcf	57,3,b	;volatile
 14874  00530A                     
 14875                           ; BSR set to: 15
 14876                           ;fs_lcd.c: 109:     Lcd_Port(0x00);
 14877  00530A  0E00               	movlw	0
 14878  00530C  ECAE  F02B         	call	_Lcd_Port
 14879  005310                     
 14880                           ;fs_lcd.c: 110:      _delay((unsigned long)((20)*(64000000UL/4000.0)));
 14881  005310  0E02               	movlw	2
 14882  005312  6E05               	movwf	(??_lcd_init+1)^0,c
 14883  005314  0EA0               	movlw	160
 14884  005316  6E04               	movwf	??_lcd_init^0,c
 14885  005318  0E92               	movlw	146
 14886  00531A                     u7847:
 14887  00531A  2EE8               	decfsz	wreg,f,c
 14888  00531C  D7FE               	bra	u7847
 14889  00531E  2E04               	decfsz	??_lcd_init^0,f,c
 14890  005320  D7FC               	bra	u7847
 14891  005322  2E05               	decfsz	(??_lcd_init+1)^0,f,c
 14892  005324  D7FA               	bra	u7847
 14893  005326  D000               	nop2	
 14894  005328                     
 14895                           ;fs_lcd.c: 111:     Lcd_Cmd(0x03);
 14896  005328  0E03               	movlw	3
 14897  00532A  EC4B  F02E         	call	_Lcd_Cmd
 14898  00532E                     
 14899                           ;fs_lcd.c: 112:      _delay((unsigned long)((5)*(64000000UL/4000.0)));
 14900  00532E  0E68               	movlw	104
 14901  005330  6E04               	movwf	??_lcd_init^0,c
 14902  005332  0EE4               	movlw	228
 14903  005334                     u7857:
 14904  005334  2EE8               	decfsz	wreg,f,c
 14905  005336  D7FE               	bra	u7857
 14906  005338  2E04               	decfsz	??_lcd_init^0,f,c
 14907  00533A  D7FC               	bra	u7857
 14908  00533C  D000               	nop2	
 14909  00533E                     
 14910                           ;fs_lcd.c: 113:     Lcd_Cmd(0x03);
 14911  00533E  0E03               	movlw	3
 14912  005340  EC4B  F02E         	call	_Lcd_Cmd
 14913  005344                     
 14914                           ;fs_lcd.c: 114:      _delay((unsigned long)((11)*(64000000UL/4000.0)));
 14915  005344  0EE5               	movlw	229
 14916  005346  6E04               	movwf	??_lcd_init^0,c
 14917  005348  0E91               	movlw	145
 14918  00534A                     u7867:
 14919  00534A  2EE8               	decfsz	wreg,f,c
 14920  00534C  D7FE               	bra	u7867
 14921  00534E  2E04               	decfsz	??_lcd_init^0,f,c
 14922  005350  D7FC               	bra	u7867
 14923  005352  F000               	nop	
 14924  005354                     
 14925                           ;fs_lcd.c: 115:     Lcd_Cmd(0x03);
 14926  005354  0E03               	movlw	3
 14927  005356  EC4B  F02E         	call	_Lcd_Cmd
 14928  00535A                     
 14929                           ;fs_lcd.c: 116:     Lcd_Cmd(0x02);
 14930  00535A  0E02               	movlw	2
 14931  00535C  EC4B  F02E         	call	_Lcd_Cmd
 14932  005360                     
 14933                           ;fs_lcd.c: 117:     Lcd_Cmd(0x02);
 14934  005360  0E02               	movlw	2
 14935  005362  EC4B  F02E         	call	_Lcd_Cmd
 14936  005366                     
 14937                           ;fs_lcd.c: 118:     Lcd_Cmd(0x08);
 14938  005366  0E08               	movlw	8
 14939  005368  EC4B  F02E         	call	_Lcd_Cmd
 14940  00536C                     
 14941                           ;fs_lcd.c: 119:     Lcd_Cmd(0x00);
 14942  00536C  0E00               	movlw	0
 14943  00536E  EC4B  F02E         	call	_Lcd_Cmd
 14944  005372                     
 14945                           ;fs_lcd.c: 120:     Lcd_Cmd(0x0C);
 14946  005372  0E0C               	movlw	12
 14947  005374  EC4B  F02E         	call	_Lcd_Cmd
 14948  005378                     
 14949                           ;fs_lcd.c: 121:     Lcd_Cmd(0x00);
 14950  005378  0E00               	movlw	0
 14951  00537A  EC4B  F02E         	call	_Lcd_Cmd
 14952  00537E                     
 14953                           ;fs_lcd.c: 122:     Lcd_Cmd(0x06);
 14954  00537E  0E06               	movlw	6
 14955  005380  EC4B  F02E         	call	_Lcd_Cmd
 14956  005384  0012               	return		;funcret
 14957  005386                     __end_of_lcd_init:
 14958                           	callstack 0
 14959                           
 14960 ;; *************** function _adcInit *****************
 14961 ;; Defined at:
 14962 ;;		line 53 in file "fs_adc.c"
 14963 ;; Parameters:    Size  Location     Type
 14964 ;;		None
 14965 ;; Auto vars:     Size  Location     Type
 14966 ;;		None
 14967 ;; Return value:  Size  Location     Type
 14968 ;;                  1    wreg      void 
 14969 ;; Registers used:
 14970 ;;		wreg, status,2
 14971 ;; Tracked objects:
 14972 ;;		On entry : 0/0
 14973 ;;		On exit  : 0/0
 14974 ;;		Unchanged: 0/0
 14975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14976 ;;      Params:         0       0       0       0       0       0       0
 14977 ;;      Locals:         0       0       0       0       0       0       0
 14978 ;;      Temps:          0       0       0       0       0       0       0
 14979 ;;      Totals:         0       0       0       0       0       0       0
 14980 ;;Total ram usage:        0 bytes
 14981 ;; Hardware stack levels used:    1
 14982 ;; Hardware stack levels required when called:    1
 14983 ;; This function calls:
 14984 ;;		Nothing
 14985 ;; This function is called by:
 14986 ;;		_main
 14987 ;; This function uses a non-reentrant model
 14988 ;;
 14989                           
 14990                           	psect	text59
 14991  0059BA                     __ptext59:
 14992                           	callstack 0
 14993  0059BA                     _adcInit:
 14994                           	callstack 29
 14995  0059BA                     
 14996                           ;fs_adc.c: 55:     TRISAbits.TRISA0 = 1;
 14997  0059BA  8092               	bsf	146,0,c	;volatile
 14998                           
 14999                           ;fs_adc.c: 56:     ANSELAbits.ANSA0 = 1;
 15000  0059BC  010F               	movlb	15	; () banked
 15001  0059BE  8138               	bsf	56,0,b	;volatile
 15002                           
 15003                           ;fs_adc.c: 58:     TRISAbits.TRISA1 = 1;
 15004  0059C0  8292               	bsf	146,1,c	;volatile
 15005                           
 15006                           ;fs_adc.c: 59:     ANSELAbits.ANSA1 = 1;
 15007  0059C2  8338               	bsf	56,1,b	;volatile
 15008                           
 15009                           ;fs_adc.c: 61:     TRISAbits.TRISA2 = 1;
 15010  0059C4  8492               	bsf	146,2,c	;volatile
 15011                           
 15012                           ;fs_adc.c: 62:     ANSELAbits.ANSA2 = 1;
 15013  0059C6  8538               	bsf	56,2,b	;volatile
 15014                           
 15015                           ;fs_adc.c: 64:     TRISAbits.TRISA3 = 1;
 15016  0059C8  8692               	bsf	146,3,c	;volatile
 15017                           
 15018                           ;fs_adc.c: 65:     ANSELAbits.ANSA3 = 1;
 15019  0059CA  8738               	bsf	56,3,b	;volatile
 15020                           
 15021                           ;fs_adc.c: 67:     TRISAbits.TRISA5 = 1;
 15022  0059CC  8A92               	bsf	146,5,c	;volatile
 15023                           
 15024                           ;fs_adc.c: 68:     ANSELAbits.ANSA5 = 1;
 15025  0059CE  8B38               	bsf	56,5,b	;volatile
 15026                           
 15027                           ;fs_adc.c: 70:     TRISEbits.TRISE0 = 1;
 15028  0059D0  8096               	bsf	150,0,c	;volatile
 15029                           
 15030                           ;fs_adc.c: 71:     ANSELEbits.ANSE0 = 1;
 15031  0059D2  813C               	bsf	60,0,b	;volatile
 15032                           
 15033                           ;fs_adc.c: 73:     TRISEbits.TRISE1 = 1;
 15034  0059D4  8296               	bsf	150,1,c	;volatile
 15035                           
 15036                           ;fs_adc.c: 74:     ANSELEbits.ANSE1 = 1;
 15037  0059D6  833C               	bsf	60,1,b	;volatile
 15038                           
 15039                           ;fs_adc.c: 76:     TRISEbits.TRISE2 = 1;
 15040  0059D8  8496               	bsf	150,2,c	;volatile
 15041                           
 15042                           ;fs_adc.c: 77:     ANSELEbits.ANSE2 = 1;
 15043  0059DA  853C               	bsf	60,2,b	;volatile
 15044  0059DC                     
 15045                           ; BSR set to: 15
 15046                           ;fs_adc.c: 79:     ADCON0 = 0x01;
 15047  0059DC  0E01               	movlw	1
 15048  0059DE  6EC2               	movwf	194,c	;volatile
 15049                           
 15050                           ;fs_adc.c: 80:     ADCON1=0x00;
 15051  0059E0  0E00               	movlw	0
 15052  0059E2  6EC1               	movwf	193,c	;volatile
 15053  0059E4                     
 15054                           ; BSR set to: 15
 15055                           ;fs_adc.c: 81:  ADCON2bits.ADFM = 1;
 15056  0059E4  8EC0               	bsf	192,7,c	;volatile
 15057                           
 15058                           ;fs_adc.c: 82:     ADCON2bits.ACQT = 0b010;
 15059  0059E6  50C0               	movf	192,w,c	;volatile
 15060  0059E8  0BC7               	andlw	-57
 15061  0059EA  0910               	iorlw	16
 15062  0059EC  6EC0               	movwf	192,c	;volatile
 15063                           
 15064                           ;fs_adc.c: 83:     ADCON2bits.ADCS = 0b110;
 15065  0059EE  50C0               	movf	192,w,c	;volatile
 15066  0059F0  0BF8               	andlw	-8
 15067  0059F2  0906               	iorlw	6
 15068  0059F4  6EC0               	movwf	192,c	;volatile
 15069  0059F6                     
 15070                           ; BSR set to: 15
 15071  0059F6  0012               	return		;funcret
 15072  0059F8                     __end_of_adcInit:
 15073                           	callstack 0
 15074                           
 15075 ;; *************** function _PWM_Init *****************
 15076 ;; Defined at:
 15077 ;;		line 17 in file "fs_pwm.c"
 15078 ;; Parameters:    Size  Location     Type
 15079 ;;		None
 15080 ;; Auto vars:     Size  Location     Type
 15081 ;;		None
 15082 ;; Return value:  Size  Location     Type
 15083 ;;                  1    wreg      void 
 15084 ;; Registers used:
 15085 ;;		wreg, status,2
 15086 ;; Tracked objects:
 15087 ;;		On entry : 0/0
 15088 ;;		On exit  : 0/0
 15089 ;;		Unchanged: 0/0
 15090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15091 ;;      Params:         0       0       0       0       0       0       0
 15092 ;;      Locals:         0       0       0       0       0       0       0
 15093 ;;      Temps:          0       0       0       0       0       0       0
 15094 ;;      Totals:         0       0       0       0       0       0       0
 15095 ;;Total ram usage:        0 bytes
 15096 ;; Hardware stack levels used:    1
 15097 ;; Hardware stack levels required when called:    1
 15098 ;; This function calls:
 15099 ;;		Nothing
 15100 ;; This function is called by:
 15101 ;;		_main
 15102 ;; This function uses a non-reentrant model
 15103 ;;
 15104                           
 15105                           	psect	text60
 15106  005C0A                     __ptext60:
 15107                           	callstack 0
 15108  005C0A                     _PWM_Init:
 15109                           	callstack 29
 15110  005C0A                     
 15111                           ;fs_pwm.c: 19:     TRISCbits.RC2 = 0;
 15112  005C0A  9494               	bcf	148,2,c	;volatile
 15113                           
 15114                           ;fs_pwm.c: 20:     TRISCbits.RC1 = 0;
 15115  005C0C  9294               	bcf	148,1,c	;volatile
 15116  005C0E                     
 15117                           ;fs_pwm.c: 23:     CCP1CON = 0b00001100;
 15118  005C0E  0E0C               	movlw	12
 15119  005C10  6EBD               	movwf	189,c	;volatile
 15120                           
 15121                           ;fs_pwm.c: 25:     CCP2CON = 0b00001100;
 15122  005C12  0E0C               	movlw	12
 15123  005C14  6E66               	movwf	102,c	;volatile
 15124                           
 15125                           ;fs_pwm.c: 29:     T2CONbits.T2CKPS = 0b01;
 15126  005C16  50BA               	movf	186,w,c	;volatile
 15127  005C18  0BFC               	andlw	-4
 15128  005C1A  0901               	iorlw	1
 15129  005C1C  6EBA               	movwf	186,c	;volatile
 15130  005C1E                     
 15131                           ;fs_pwm.c: 30:     T2CONbits.TMR2ON = 1;
 15132  005C1E  84BA               	bsf	186,2,c	;volatile
 15133                           
 15134                           ;fs_pwm.c: 32:     TMR2 = 0;
 15135  005C20  0E00               	movlw	0
 15136  005C22  6EBC               	movwf	188,c	;volatile
 15137                           
 15138                           ;fs_pwm.c: 33:     PR2 = 199;
 15139  005C24  0EC7               	movlw	199
 15140  005C26  6EBB               	movwf	187,c	;volatile
 15141                           
 15142                           ;fs_pwm.c: 34:     CCPR1L = 0;
 15143  005C28  0E00               	movlw	0
 15144  005C2A  6EBE               	movwf	190,c	;volatile
 15145                           
 15146                           ;fs_pwm.c: 35:     CCPR2L = 0;
 15147  005C2C  0E00               	movlw	0
 15148  005C2E  6E67               	movwf	103,c	;volatile
 15149  005C30  0012               	return		;funcret
 15150  005C32                     __end_of_PWM_Init:
 15151                           	callstack 0
 15152                           
 15153 ;; *************** function _Lcd_Clear *****************
 15154 ;; Defined at:
 15155 ;;		line 51 in file "fs_lcd.c"
 15156 ;; Parameters:    Size  Location     Type
 15157 ;;		None
 15158 ;; Auto vars:     Size  Location     Type
 15159 ;;		None
 15160 ;; Return value:  Size  Location     Type
 15161 ;;                  1    wreg      void 
 15162 ;; Registers used:
 15163 ;;		wreg, status,2, cstack
 15164 ;; Tracked objects:
 15165 ;;		On entry : 0/0
 15166 ;;		On exit  : 0/0
 15167 ;;		Unchanged: 0/0
 15168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15169 ;;      Params:         0       0       0       0       0       0       0
 15170 ;;      Locals:         0       0       0       0       0       0       0
 15171 ;;      Temps:          0       0       0       0       0       0       0
 15172 ;;      Totals:         0       0       0       0       0       0       0
 15173 ;;Total ram usage:        0 bytes
 15174 ;; Hardware stack levels used:    1
 15175 ;; Hardware stack levels required when called:    3
 15176 ;; This function calls:
 15177 ;;		_Lcd_Cmd
 15178 ;; This function is called by:
 15179 ;;		_main
 15180 ;; This function uses a non-reentrant model
 15181 ;;
 15182                           
 15183                           	psect	text61
 15184  005CDC                     __ptext61:
 15185                           	callstack 0
 15186  005CDC                     _Lcd_Clear:
 15187                           	callstack 27
 15188  005CDC                     
 15189                           ;fs_lcd.c: 53:    Lcd_Cmd(0);
 15190  005CDC  0E00               	movlw	0
 15191  005CDE  EC4B  F02E         	call	_Lcd_Cmd
 15192                           
 15193                           ;fs_lcd.c: 54:    Lcd_Cmd(1);
 15194  005CE2  0E01               	movlw	1
 15195  005CE4  EC4B  F02E         	call	_Lcd_Cmd
 15196  005CE8  0012               	return		;funcret
 15197  005CEA                     __end_of_Lcd_Clear:
 15198                           	callstack 0
 15199                           
 15200 ;; *************** function _Lcd_Cmd *****************
 15201 ;; Defined at:
 15202 ;;		line 35 in file "fs_lcd.c"
 15203 ;; Parameters:    Size  Location     Type
 15204 ;;  a               1    wreg     unsigned char 
 15205 ;; Auto vars:     Size  Location     Type
 15206 ;;  a               1    2[COMRAM] unsigned char 
 15207 ;; Return value:  Size  Location     Type
 15208 ;;                  1    wreg      void 
 15209 ;; Registers used:
 15210 ;;		wreg, status,2, cstack
 15211 ;; Tracked objects:
 15212 ;;		On entry : 0/0
 15213 ;;		On exit  : 0/0
 15214 ;;		Unchanged: 0/0
 15215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15216 ;;      Params:         0       0       0       0       0       0       0
 15217 ;;      Locals:         1       0       0       0       0       0       0
 15218 ;;      Temps:          1       0       0       0       0       0       0
 15219 ;;      Totals:         2       0       0       0       0       0       0
 15220 ;;Total ram usage:        2 bytes
 15221 ;; Hardware stack levels used:    1
 15222 ;; Hardware stack levels required when called:    2
 15223 ;; This function calls:
 15224 ;;		_Lcd_Port
 15225 ;; This function is called by:
 15226 ;;		_Lcd_Clear
 15227 ;;		_Lcd_Set_Cursor
 15228 ;;		_lcd_init
 15229 ;;		_Lcd_Shift_Right
 15230 ;;		_Lcd_Shift_Left
 15231 ;; This function uses a non-reentrant model
 15232 ;;
 15233                           
 15234                           	psect	text62
 15235  005C96                     __ptext62:
 15236                           	callstack 0
 15237  005C96                     _Lcd_Cmd:
 15238                           	callstack 25
 15239                           
 15240                           ;incstack = 0
 15241                           ;Lcd_Cmd@a stored from wreg
 15242  005C96  6E03               	movwf	Lcd_Cmd@a^0,c
 15243  005C98                     
 15244                           ;fs_lcd.c: 35: void Lcd_Cmd(char a);fs_lcd.c: 36: {;fs_lcd.c: 37:    PORTDbits.RD6 = 0;
 15245  005C98  9C83               	bcf	131,6,c	;volatile
 15246  005C9A                     
 15247                           ;fs_lcd.c: 38:    Lcd_Port(a);
 15248  005C9A  5003               	movf	Lcd_Cmd@a^0,w,c
 15249  005C9C  ECAE  F02B         	call	_Lcd_Port
 15250  005CA0                     
 15251                           ;fs_lcd.c: 39:    PORTDbits.RD7 = 1;
 15252  005CA0  8E83               	bsf	131,7,c	;volatile
 15253  005CA2                     
 15254                           ;fs_lcd.c: 40:    _delay((unsigned long)((2)*(64000000UL/4000.0)));
 15255  005CA2  0E2A               	movlw	42
 15256  005CA4  6E02               	movwf	??_Lcd_Cmd^0,c
 15257  005CA6  0E8E               	movlw	142
 15258  005CA8                     u7877:
 15259  005CA8  2EE8               	decfsz	wreg,f,c
 15260  005CAA  D7FE               	bra	u7877
 15261  005CAC  2E02               	decfsz	??_Lcd_Cmd^0,f,c
 15262  005CAE  D7FC               	bra	u7877
 15263  005CB0                     
 15264                           ;fs_lcd.c: 41:    PORTDbits.RD7 = 0;
 15265  005CB0  9E83               	bcf	131,7,c	;volatile
 15266  005CB2  0012               	return		;funcret
 15267  005CB4                     __end_of_Lcd_Cmd:
 15268                           	callstack 0
 15269                           
 15270 ;; *************** function _Lcd_Port *****************
 15271 ;; Defined at:
 15272 ;;		line 12 in file "fs_lcd.c"
 15273 ;; Parameters:    Size  Location     Type
 15274 ;;  a               1    wreg     unsigned char 
 15275 ;; Auto vars:     Size  Location     Type
 15276 ;;  a               1    0[COMRAM] unsigned char 
 15277 ;; Return value:  Size  Location     Type
 15278 ;;                  1    wreg      void 
 15279 ;; Registers used:
 15280 ;;		wreg
 15281 ;; Tracked objects:
 15282 ;;		On entry : 0/0
 15283 ;;		On exit  : 0/0
 15284 ;;		Unchanged: 0/0
 15285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15286 ;;      Params:         0       0       0       0       0       0       0
 15287 ;;      Locals:         1       0       0       0       0       0       0
 15288 ;;      Temps:          0       0       0       0       0       0       0
 15289 ;;      Totals:         1       0       0       0       0       0       0
 15290 ;;Total ram usage:        1 bytes
 15291 ;; Hardware stack levels used:    1
 15292 ;; Hardware stack levels required when called:    1
 15293 ;; This function calls:
 15294 ;;		Nothing
 15295 ;; This function is called by:
 15296 ;;		_Lcd_Cmd
 15297 ;;		_lcd_init
 15298 ;;		_Lcd_Write_Char
 15299 ;; This function uses a non-reentrant model
 15300 ;;
 15301                           
 15302                           	psect	text63
 15303  00575C                     __ptext63:
 15304                           	callstack 0
 15305  00575C                     _Lcd_Port:
 15306                           	callstack 25
 15307                           
 15308                           ;incstack = 0
 15309                           ;Lcd_Port@a stored from wreg
 15310  00575C  6E01               	movwf	Lcd_Port@a^0,c
 15311  00575E                     
 15312                           ;fs_lcd.c: 12: void Lcd_Port(char a);fs_lcd.c: 13: {;fs_lcd.c: 14:    if(a & 1) { PORTBb
      +                          its.RB0 = 1;}
 15313  00575E  A001               	btfss	Lcd_Port@a^0,0,c
 15314  005760  EFB4  F02B         	goto	u6321
 15315  005764  EFB6  F02B         	goto	u6320
 15316  005768                     u6321:
 15317  005768  EFB9  F02B         	goto	l96
 15318  00576C                     u6320:
 15319  00576C  8081               	bsf	129,0,c	;volatile
 15320  00576E  EFBA  F02B         	goto	l5223
 15321  005772                     l96:
 15322  005772  9081               	bcf	129,0,c	;volatile
 15323  005774                     l5223:
 15324                           
 15325                           ;fs_lcd.c: 17:    if(a & 2) { PORTBbits.RB1 = 1;}
 15326  005774  A201               	btfss	Lcd_Port@a^0,1,c
 15327  005776  EFBF  F02B         	goto	u6331
 15328  00577A  EFC1  F02B         	goto	u6330
 15329  00577E                     u6331:
 15330  00577E  EFC4  F02B         	goto	l98
 15331  005782                     u6330:
 15332  005782  8281               	bsf	129,1,c	;volatile
 15333  005784  EFC5  F02B         	goto	l5227
 15334  005788                     l98:
 15335  005788  9281               	bcf	129,1,c	;volatile
 15336  00578A                     l5227:
 15337                           
 15338                           ;fs_lcd.c: 20:    if(a & 4) {PORTBbits.RB2 = 1;}
 15339  00578A  A401               	btfss	Lcd_Port@a^0,2,c
 15340  00578C  EFCA  F02B         	goto	u6341
 15341  005790  EFCC  F02B         	goto	u6340
 15342  005794                     u6341:
 15343  005794  EFCF  F02B         	goto	l100
 15344  005798                     u6340:
 15345  005798  8481               	bsf	129,2,c	;volatile
 15346  00579A  EFD0  F02B         	goto	l5231
 15347  00579E                     l100:
 15348  00579E  9481               	bcf	129,2,c	;volatile
 15349  0057A0                     l5231:
 15350                           
 15351                           ;fs_lcd.c: 23:    if(a & 8) {PORTBbits.RB3 = 1;}
 15352  0057A0  A601               	btfss	Lcd_Port@a^0,3,c
 15353  0057A2  EFD5  F02B         	goto	u6351
 15354  0057A6  EFD7  F02B         	goto	u6350
 15355  0057AA                     u6351:
 15356  0057AA  EFDA  F02B         	goto	l102
 15357  0057AE                     u6350:
 15358  0057AE  8681               	bsf	129,3,c	;volatile
 15359  0057B0  EFDB  F02B         	goto	l104
 15360  0057B4                     l102:
 15361  0057B4  9681               	bcf	129,3,c	;volatile
 15362  0057B6                     l104:
 15363  0057B6  0012               	return		;funcret
 15364  0057B8                     __end_of_Lcd_Port:
 15365                           	callstack 0
 15366                           
 15367 ;; *************** function _TIMER0 *****************
 15368 ;; Defined at:
 15369 ;;		line 33 in file "fs_timer.c"
 15370 ;; Parameters:    Size  Location     Type
 15371 ;;		None
 15372 ;; Auto vars:     Size  Location     Type
 15373 ;;		None
 15374 ;; Return value:  Size  Location     Type
 15375 ;;                  1    wreg      void 
 15376 ;; Registers used:
 15377 ;;		wreg, status,2, status,0
 15378 ;; Tracked objects:
 15379 ;;		On entry : 0/0
 15380 ;;		On exit  : 0/0
 15381 ;;		Unchanged: 0/0
 15382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15383 ;;      Params:         0       0       0       0       0       0       0
 15384 ;;      Locals:         0       0       0       0       0       0       0
 15385 ;;      Temps:          0       0       0       0       0       0       0
 15386 ;;      Totals:         0       0       0       0       0       0       0
 15387 ;;Total ram usage:        0 bytes
 15388 ;; Hardware stack levels used:    1
 15389 ;; This function calls:
 15390 ;;		Nothing
 15391 ;; This function is called by:
 15392 ;;		Interrupt level 2
 15393 ;; This function uses a non-reentrant model
 15394 ;;
 15395                           
 15396                           	psect	intcode
 15397  000008                     __pintcode:
 15398                           	callstack 0
 15399  000008                     _TIMER0:
 15400                           	callstack 20
 15401                           
 15402                           ;incstack = 0
 15403  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15404  00000A                     
 15405                           ;fs_timer.c: 35:     if ((INTCONbits.TMR0IF)&&(INTCONbits.TMR0IE))
 15406  00000A  A4F2               	btfss	242,2,c	;volatile
 15407  00000C  EF0A  F000         	goto	i2u777_41
 15408  000010  EF0C  F000         	goto	i2u777_40
 15409  000014                     i2u777_41:
 15410  000014  EF32  F000         	goto	i2l478
 15411  000018                     i2u777_40:
 15412  000018  AAF2               	btfss	242,5,c	;volatile
 15413  00001A  EF11  F000         	goto	i2u778_41
 15414  00001E  EF13  F000         	goto	i2u778_40
 15415  000022                     i2u778_41:
 15416  000022  EF32  F000         	goto	i2l478
 15417  000026                     i2u778_40:
 15418  000026                     
 15419                           ;fs_timer.c: 36:     {;fs_timer.c: 37:         INTCONbits.TMR0IF = 0;
 15420  000026  94F2               	bcf	242,2,c	;volatile
 15421  000028                     
 15422                           ;fs_timer.c: 38:         TMR0H = 0x63;
 15423  000028  0E63               	movlw	99
 15424  00002A  6ED7               	movwf	215,c	;volatile
 15425                           
 15426                           ;fs_timer.c: 39:         TMR0L = 0xC0;
 15427  00002C  0EC0               	movlw	192
 15428  00002E  6ED6               	movwf	214,c	;volatile
 15429  000030                     
 15430                           ;fs_timer.c: 41:         timer_value.timer_0_counter++;
 15431  000030  0100               	movlb	0	; () banked
 15432  000032  2BFC               	incf	(_timer_value+9)& (0+255),f,b
 15433  000034                     
 15434                           ; BSR set to: 0
 15435                           ;fs_timer.c: 43:         if(button_bounce_controller.menu == 1)
 15436  000034  A1FE               	btfss	_button_bounce_controller& (0+255),0,b
 15437  000036  EF1F  F000         	goto	i2u779_41
 15438  00003A  EF21  F000         	goto	i2u779_40
 15439  00003E                     i2u779_41:
 15440  00003E  EF24  F000         	goto	i2l6233
 15441  000042                     i2u779_40:
 15442  000042                     
 15443                           ; BSR set to: 0
 15444                           ;fs_timer.c: 44:         {;fs_timer.c: 45:              timer_value.menu_login_delay++;
 15445  000042  2BFB               	incf	(_timer_value+8)& (0+255),f,b
 15446                           
 15447                           ;fs_timer.c: 46:         }
 15448  000044  EF26  F000         	goto	i2l6235
 15449  000048                     i2l6233:
 15450                           
 15451                           ; BSR set to: 0
 15452                           ;fs_timer.c: 48:         {;fs_timer.c: 49:              timer_value.menu_login_delay = 0
      +                          ;
 15453  000048  0E00               	movlw	0
 15454  00004A  6FFB               	movwf	(_timer_value+8)& (0+255),b
 15455  00004C                     i2l6235:
 15456                           
 15457                           ; BSR set to: 0
 15458                           ;fs_timer.c: 52:         if (timer_value.timer_0_counter >= 100)
 15459  00004C  0E63               	movlw	99
 15460  00004E  65FC               	cpfsgt	(_timer_value+9)& (0+255),b
 15461  000050  EF2C  F000         	goto	i2u780_41
 15462  000054  EF2E  F000         	goto	i2u780_40
 15463  000058                     i2u780_41:
 15464  000058  EF32  F000         	goto	i2l478
 15465  00005C                     i2u780_40:
 15466  00005C                     
 15467                           ; BSR set to: 0
 15468                           ;fs_timer.c: 53:         {;fs_timer.c: 54:             timer_value.timer_0_counter = 0;
 15469  00005C  0E00               	movlw	0
 15470  00005E  6FFC               	movwf	(_timer_value+9)& (0+255),b
 15471  000060                     
 15472                           ; BSR set to: 0
 15473                           ;fs_timer.c: 55:             timer_counter_flag.one_second_flag = 1;
 15474  000060  0101               	movlb	1	; () banked
 15475  000062  81AA               	bsf	_timer_counter_flag& (0+255),0,b
 15476  000064                     i2l478:
 15477  000064  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15478  000066  0011               	retfie		f
 15479  000068                     __end_of_TIMER0:
 15480                           	callstack 0
 15481                           
 15482                           	psect	rparam
 15483  0000                     
 15484                           	psect	temp
 15485  00005F                     btemp:
 15486                           	callstack 0
 15487  00005F                     	ds	1
 15488  0000                     int$flags	set	btemp
 15489  0000                     wtemp8	set	btemp+1
 15490  0000                     ttemp5	set	btemp+1
 15491  0000                     ttemp6	set	btemp+4
 15492  0000                     ttemp7	set	btemp+8
 15493                           
 15494                           	psect	idloc
 15495                           
 15496                           ;Config register IDLOC0 @ 0x200000
 15497                           ;	unspecified, using default values
 15498  200000                     	org	2097152
 15499  200000  FF                 	db	255
 15500                           
 15501                           ;Config register IDLOC1 @ 0x200001
 15502                           ;	unspecified, using default values
 15503  200001                     	org	2097153
 15504  200001  FF                 	db	255
 15505                           
 15506                           ;Config register IDLOC2 @ 0x200002
 15507                           ;	unspecified, using default values
 15508  200002                     	org	2097154
 15509  200002  FF                 	db	255
 15510                           
 15511                           ;Config register IDLOC3 @ 0x200003
 15512                           ;	unspecified, using default values
 15513  200003                     	org	2097155
 15514  200003  FF                 	db	255
 15515                           
 15516                           ;Config register IDLOC4 @ 0x200004
 15517                           ;	unspecified, using default values
 15518  200004                     	org	2097156
 15519  200004  FF                 	db	255
 15520                           
 15521                           ;Config register IDLOC5 @ 0x200005
 15522                           ;	unspecified, using default values
 15523  200005                     	org	2097157
 15524  200005  FF                 	db	255
 15525                           
 15526                           ;Config register IDLOC6 @ 0x200006
 15527                           ;	unspecified, using default values
 15528  200006                     	org	2097158
 15529  200006  FF                 	db	255
 15530                           
 15531                           ;Config register IDLOC7 @ 0x200007
 15532                           ;	unspecified, using default values
 15533  200007                     	org	2097159
 15534  200007  FF                 	db	255
 15535                           
 15536                           	psect	config
 15537                           
 15538                           ; Padding undefined space
 15539  300000                     	org	3145728
 15540  300000  FF                 	db	255
 15541                           
 15542                           ;Config register CONFIG1H @ 0x300001
 15543                           ;	Oscillator Selection bits
 15544                           ;	FOSC = INTIO67, Internal oscillator block
 15545                           ;	4X PLL Enable
 15546                           ;	PLLCFG = ON, Oscillator multiplied by 4
 15547                           ;	Primary clock enable bit
 15548                           ;	PRICLKEN = ON, Primary clock is always enabled
 15549                           ;	Fail-Safe Clock Monitor Enable bit
 15550                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 15551                           ;	Internal/External Oscillator Switchover bit
 15552                           ;	IESO = ON, Oscillator Switchover mode enabled
 15553  300001                     	org	3145729
 15554  300001  B8                 	db	184
 15555                           
 15556                           ;Config register CONFIG2L @ 0x300002
 15557                           ;	Power-up Timer Enable bit
 15558                           ;	PWRTEN = OFF, Power up timer disabled
 15559                           ;	Brown-out Reset Enable bits
 15560                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 15561                           ;	Brown Out Reset Voltage bits
 15562                           ;	BORV = 190, VBOR set to 1.90 V nominal
 15563  300002                     	org	3145730
 15564  300002  1F                 	db	31
 15565                           
 15566                           ;Config register CONFIG2H @ 0x300003
 15567                           ;	Watchdog Timer Enable bits
 15568                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 15569                           ;	Watchdog Timer Postscale Select bits
 15570                           ;	WDTPS = 32768, 1:32768
 15571  300003                     	org	3145731
 15572  300003  3C                 	db	60
 15573                           
 15574                           ; Padding undefined space
 15575  300004                     	org	3145732
 15576  300004  FF                 	db	255
 15577                           
 15578                           ;Config register CONFIG3H @ 0x300005
 15579                           ;	CCP2 MUX bit
 15580                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 15581                           ;	PORTB A/D Enable bit
 15582                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
 15583                           ;	P3A/CCP3 Mux bit
 15584                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 15585                           ;	HFINTOSC Fast Start-up
 15586                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 15587                           ;	Timer3 Clock input mux bit
 15588                           ;	T3CMX = PORTC0, T3CKI is on RC0
 15589                           ;	ECCP2 B output mux bit
 15590                           ;	P2BMX = PORTD2, P2B is on RD2
 15591                           ;	MCLR Pin Enable bit
 15592                           ;	MCLRE = INTMCLR, RE3 input pin enabled; MCLR disabled
 15593  300005                     	org	3145733
 15594  300005  3D                 	db	61
 15595                           
 15596                           ;Config register CONFIG4L @ 0x300006
 15597                           ;	Stack Full/Underflow Reset Enable bit
 15598                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
 15599                           ;	Single-Supply ICSP Enable bit
 15600                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 15601                           ;	Extended Instruction Set Enable bit
 15602                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 15603                           ;	Background Debug
 15604                           ;	DEBUG = 0x1, unprogrammed default
 15605  300006                     	org	3145734
 15606  300006  84                 	db	132
 15607                           
 15608                           ; Padding undefined space
 15609  300007                     	org	3145735
 15610  300007  FF                 	db	255
 15611                           
 15612                           ;Config register CONFIG5L @ 0x300008
 15613                           ;	Code Protection Block 0
 15614                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 15615                           ;	Code Protection Block 1
 15616                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 15617                           ;	Code Protection Block 2
 15618                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 15619                           ;	Code Protection Block 3
 15620                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 15621  300008                     	org	3145736
 15622  300008  0F                 	db	15
 15623                           
 15624                           ;Config register CONFIG5H @ 0x300009
 15625                           ;	Boot Block Code Protection bit
 15626                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 15627                           ;	Data EEPROM Code Protection bit
 15628                           ;	CPD = OFF, Data EEPROM not code-protected
 15629  300009                     	org	3145737
 15630  300009  C0                 	db	192
 15631                           
 15632                           ;Config register CONFIG6L @ 0x30000A
 15633                           ;	Write Protection Block 0
 15634                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 15635                           ;	Write Protection Block 1
 15636                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 15637                           ;	Write Protection Block 2
 15638                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 15639                           ;	Write Protection Block 3
 15640                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 15641  30000A                     	org	3145738
 15642  30000A  0F                 	db	15
 15643                           
 15644                           ;Config register CONFIG6H @ 0x30000B
 15645                           ;	Configuration Register Write Protection bit
 15646                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 15647                           ;	Boot Block Write Protection bit
 15648                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 15649                           ;	Data EEPROM Write Protection bit
 15650                           ;	WRTD = OFF, Data EEPROM not write-protected
 15651  30000B                     	org	3145739
 15652  30000B  E0                 	db	224
 15653                           
 15654                           ;Config register CONFIG7L @ 0x30000C
 15655                           ;	Table Read Protection Block 0
 15656                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 15657                           ;	Table Read Protection Block 1
 15658                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 15659                           ;	Table Read Protection Block 2
 15660                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 15661                           ;	Table Read Protection Block 3
 15662                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 15663  30000C                     	org	3145740
 15664  30000C  0F                 	db	15
 15665                           
 15666                           ;Config register CONFIG7H @ 0x30000D
 15667                           ;	Boot Block Table Read Protection bit
 15668                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 15669  30000D                     	org	3145741
 15670  30000D  40                 	db	64
 15671                           tosu	equ	0xFFF
 15672                           tosh	equ	0xFFE
 15673                           tosl	equ	0xFFD
 15674                           stkptr	equ	0xFFC
 15675                           pclatu	equ	0xFFB
 15676                           pclath	equ	0xFFA
 15677                           pcl	equ	0xFF9
 15678                           tblptru	equ	0xFF8
 15679                           tblptrh	equ	0xFF7
 15680                           tblptrl	equ	0xFF6
 15681                           tablat	equ	0xFF5
 15682                           prodh	equ	0xFF4
 15683                           prodl	equ	0xFF3
 15684                           indf0	equ	0xFEF
 15685                           postinc0	equ	0xFEE
 15686                           postdec0	equ	0xFED
 15687                           preinc0	equ	0xFEC
 15688                           plusw0	equ	0xFEB
 15689                           fsr0h	equ	0xFEA
 15690                           fsr0l	equ	0xFE9
 15691                           wreg	equ	0xFE8
 15692                           indf1	equ	0xFE7
 15693                           postinc1	equ	0xFE6
 15694                           postdec1	equ	0xFE5
 15695                           preinc1	equ	0xFE4
 15696                           plusw1	equ	0xFE3
 15697                           fsr1h	equ	0xFE2
 15698                           fsr1l	equ	0xFE1
 15699                           bsr	equ	0xFE0
 15700                           indf2	equ	0xFDF
 15701                           postinc2	equ	0xFDE
 15702                           postdec2	equ	0xFDD
 15703                           preinc2	equ	0xFDC
 15704                           plusw2	equ	0xFDB
 15705                           fsr2h	equ	0xFDA
 15706                           fsr2l	equ	0xFD9
 15707                           status	equ	0xFD8

Data Sizes:
    Strings     214
    Constant    0
    Data        32
    BSS         264
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    147     160
    BANK1           256      0     203
    BANK2           256      0      80
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_27(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_27(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_22(CODE[4]), STR_21(CODE[4]), STR_18(CODE[4]), STR_17(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_22(CODE[4]), STR_21(CODE[4]), STR_18(CODE[4]), STR_17(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[13]), STR_14(CODE[14]), STR_12(CODE[16]), STR_10(CODE[16]), 
		 -> STR_8(CODE[18]), STR_6(CODE[18]), STR_4(CODE[18]), STR_2(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[13]), STR_14(CODE[14]), STR_12(CODE[16]), STR_10(CODE[16]), 
		 -> STR_8(CODE[18]), STR_6(CODE[18]), STR_4(CODE[18]), STR_2(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[13]), STR_14(CODE[14]), STR_12(CODE[16]), STR_10(CODE[16]), 
		 -> STR_8(CODE[18]), STR_6(CODE[18]), STR_4(CODE[18]), STR_2(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[13]), STR_14(CODE[14]), STR_12(CODE[16]), STR_10(CODE[16]), 
		 -> STR_8(CODE[18]), STR_6(CODE[18]), STR_4(CODE[18]), STR_2(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2363_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_15(CODE[17]), STR_13(CODE[17]), STR_11(CODE[17]), STR_9(CODE[17]), 
		 -> STR_7(CODE[17]), STR_5(CODE[17]), STR_3(CODE[17]), STR_1(CODE[17]), 
		 -> stateMachine@textCursor2(BANK0[16]), 


Critical Paths under _main in COMRAM

    _system_init->_eepromRead
    _stopMotor->_PWM1_setDC
    _stopMotor->_PWM2_setDC
    _startMotor->_PWM1_setDC
    _startMotor->_PWM2_setDC
    _startMotor->_speedControl
    _speedControl->___fltol
    _scanAdcConversion->___fltol
    _calculatedAverageValue->___xxtofl
    _PWM2_setDC->___fltol
    _PWM1_setDC->___fltol
    _fabsf->___xxtofl
    ___xxtofl->___lldiv
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___fltol->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _lcd_init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _TIMER0 in COMRAM

    None.

Critical Paths under _main in BANK0

    _menuControl->_stateMachine
    _stateMachine->_sprintf
    _startMotor->_speedControl
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _TIMER0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TIMER0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TIMER0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TIMER0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TIMER0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TIMER0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  100437
                          _Lcd_Clear
                         _PWM1_setDC
                         _PWM2_setDC
                           _PWM_Init
                            _adcInit
                           _lcd_init
                           _mcu_init
                        _menuControl
                     _menuInitialize
                        _system_init
                       _timer_0_init
 ---------------------------------------------------------------------------------
 (1) _timer_0_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_init                                          2     2      0      22
                                              1 COMRAM     2     2      0
                         _eepromRead
 ---------------------------------------------------------------------------------
 (2) _eepromRead                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _menuInitialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _menuControl                                          0     0      0   93759
                 _buttonControlFlags
                       _stateMachine
 ---------------------------------------------------------------------------------
 (2) _stateMachine                                        18    18      0   93759
                                            129 BANK0     18    18      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fladd
                             ___flge
                            ___flsub
                        _eepromWrite
                            _sprintf
                         _startMotor
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _stopMotor                                            0     0      0    6348
                         _PWM1_setDC
                         _PWM2_setDC
 ---------------------------------------------------------------------------------
 (3) _startMotor                                           0     0      0   32873
                         _PWM1_setDC
                         _PWM2_setDC
             _calculatedAverageValue
                  _scanAdcConversion
                       _speedControl
 ---------------------------------------------------------------------------------
 (4) _speedControl                                        10     6      4   11063
                                             87 COMRAM     6     2      4
                                              0 BANK0      4     4      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) _scanAdcConversion                                    2     2      0   12556
                                             87 COMRAM     2     2      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                       _readAdcValue
 ---------------------------------------------------------------------------------
 (5) _readAdcValue                                         7     5      2      46
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _calculatedAverageValue                              24    24      0    2906
                                             27 COMRAM    24    24      0
                            ___lldiv
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8    1282
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) _PWM2_setDC                                           6     4      2    3174
                                             87 COMRAM     6     4      2
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (4) _PWM1_setDC                                           6     4      2    3174
                                             87 COMRAM     6     4      2
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (5) _fabsf                                                8     4      4     199
                                             27 COMRAM     8     4      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4    1310
                                             13 COMRAM    14    10      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    10      8   42834
                                            111 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   41409
                                            103 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           50    44      6   41025
                                             71 BANK0     32    26      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   30053
                                             87 COMRAM     7     0      7
                                             10 BANK0     61    61      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     490
                                             77 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4    1369
                                             77 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _fabsf (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    3801
                                             68 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    3022
                                             52 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    5240
                                             27 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8     942
                                             52 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    4591
                                             52 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5042
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1396
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eepromWrite                                          2     1      1     500
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_String                                     6     4      2    1484
                                              4 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (4) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Set_Cursor                                       5     4      1    1596
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _buttonControlFlags                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mcu_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     198
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (4) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (5) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _TIMER0                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _PWM1_setDC
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
       _fabsf (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
     ___xxtofl
       ___lldiv (ARG)
     _fabsf
       ___xxtofl (ARG)
         ___lldiv (ARG)
   _PWM2_setDC
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
       _fabsf (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
     ___xxtofl
       ___lldiv (ARG)
     _fabsf
       ___xxtofl (ARG)
         ___lldiv (ARG)
   _PWM_Init
   _adcInit
   _lcd_init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _mcu_init
   _menuControl
     _buttonControlFlags
     _stateMachine
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___flge
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
       _eepromWrite
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fleq
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
                 _fabsf (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper
       _startMotor
         _PWM1_setDC
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
           _fabsf
             ___xxtofl (ARG)
               ___lldiv (ARG)
         _PWM2_setDC
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
           _fabsf
             ___xxtofl (ARG)
               ___lldiv (ARG)
         _calculatedAverageValue
           ___lldiv
           ___lmul
           ___xxtofl
             ___lldiv (ARG)
         _scanAdcConversion
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
           _readAdcValue
         _speedControl
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
       _stopMotor
         _PWM1_setDC
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
           _fabsf
             ___xxtofl (ARG)
               ___lldiv (ARG)
         _PWM2_setDC
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
           _fabsf
             ___xxtofl (ARG)
               ___lldiv (ARG)
   _menuInitialize
   _system_init
     _eepromRead
   _timer_0_init

 _TIMER0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      50       8       31.2%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      CB       6       79.3%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     93      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     219       9        0.0%
DATA                 0      0     219      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat Aug 15 15:31:56 2020

                   ___fldiv@aexp 004D                     ___fldiv@bexp 004C  
                   ___fldiv@sign 0045                               l41 59F6  
                             l35 5950                               l38 5978  
                             l54 2494                               l70 5C84  
                             l72 5C92                               l57 3A34  
                             l73 5C94                               l76 5BCE  
                             l78 5BDC                               _KD 01C3  
                             l79 5BE0                               l96 5772  
                             l98 5788                               _KP 01C7  
                   ___awdiv@sign 0006              ___wmul@multiplicand 0003  
            __end_of_system_init 49C6                              l100 579E  
                            l102 57B4                              l110 5CE8  
                            l104 57B6         ??_calculatedAverageValue 001C  
                            l122 5B12                              l107 5CB2  
                            l116 569E                              l119 5384  
                            l311 45DC                              l400 5C30  
                            l320 46FC                              l312 45FC  
                            l128 5402                              l321 471C  
                            l313 461C                              l314 463C  
                            l243 5CBA                              l323 473C  
                            l315 465C                              l316 467C  
                            l404 54F6                              l340 13AC  
                            l308 5C08                              l317 469C  
                            l246 5CC8                              l318 46BC  
                            l319 46DC                              l511 52DE  
                            l408 547C                              l440 5A32  
                            l344 145C                              l329 5564  
                            l249 49C4                              l362 1828  
                            l354 167A                              l611 48A0  
                            l443 5B48                              l339 135C  
                            l364 18C2                              l437 40EC  
                            l518 52EE                     _startIsClick 01A9  
                            l481 5CDA                              l715 50F0  
                            l379 1C8E                              l484 5C56  
                            l743 524A                              l495 55BE  
                            l728 51A0                              l496 55CE  
                            l754 4BCE                              l749 4B88  
                            l781 4ACA                              l598 45B8  
                            l758 5AA2                              _PR2 000FBB  
                            _abs 597A                              _pad 4F68  
                   ___awmod@sign 0006                              wreg 000FE8  
                   ___flmul@aexp 002D                     ___flmul@bexp 002E  
                   ___flmul@sign 0028                     ___flmul@temp 0033  
                   ___flmul@prod 002F                      _stopIsClick 01A8  
                   ___fltol@exp1 0057                             l1012 2CBA  
                           l1021 2F8A                             l1013 2CA8  
                           l1102 33B4                             l1014 2C6E  
                           l1105 3246                             l1210 4FAE  
                           l1115 3376                             l1107 32BE  
                           ?_abs 0013                             l1108 32AC  
                           l1213 4FF0                             l1221 3AD6  
                           l1029 2DD4                             l1038 2EA4  
                           l1054 58F2                             l1142 42A0  
                           l1215 502C                             l1223 3ADE  
                           l1071 3572                             l1039 2E92  
                           l1303 0E68                             l1080 365A  
                           l1160 5BB2                             l1241 3D18  
                           l1153 4238                             l1066 374E  
                           l1146 41DC                             l1139 4144  
                           l1068 35AE                             l1077 35F4  
                           l1422 4428                             l1079 366C  
                           l1431 3F2E                             l1167 585A  
                           l1512 56FE                             l1441 5ADA  
                           l1425 4430                             l4001 2C0C  
                           l1361 2ACA                             l1098 3050  
                           l1434 3E72                             l4011 2C7C  
                           l4003 2C10                             l1507 56F6  
                           l1259 129C                             l4101 2F0A  
                           l4021 2CA6                             l4013 2C88  
                           l4005 2C3A                             l1277 0ACC  
                           l1470 4F66                             l1391 59B0  
                           l4111 2F5C                             l4103 2F1A  
                           l4031 2CFC                             l4023 2CC8  
                           l4015 2C8C                             l4007 2C56  
                           l1455 5A6A                             l1375 5630  
                           l1376 5638                             l1449 58AC  
                           l4201 4750                             l1481 5CEA  
                           l4121 2F7A                             l4113 2F62  
                           l4105 2F2A                             l4041 2D36  
                           l4033 2D0A                             l4025 2CD8  
                           l4017 2C9A                             l4009 2C66  
                           l5001 0DAA                             l1369 2A10  
                           l1394 59B8                             l1386 4CCC  
                           l4211 47C0                             l4203 4770  
                           l4131 5916                             l4115 2F64  
                           l4107 2F4A                             l4051 2DA2  
                           l4043 2D38                             l4035 2D18  
                           l4019 2C9C                             l5011 0E40  
                           l5003 0DDC                             l4221 4838  
                           l4213 47C8                             l4205 4774  
                           l4125 58F4                             l1493 5B7E  
                           l4133 5B4A                             l4301 353E  
                           l4117 2F6A                             l4109 2F4E  
                           l4061 2DFA                             l4053 2DA4  
                           l4045 2D42                             l4037 2D24  
                           l4029 2CEC                             l5101 118A  
                           l5021 0EF8                             l5013 0E54  
                           l5005 0DEC                             l1478 5936  
                           l4223 484A                             l4215 47DC  
                           l4207 4782                             l4127 5900  
                           l4135 5B56                             l4311 359A  
                           l4303 354E                             l4119 2F78  
                           l4071 2E28                             l4055 2DB4  
                           l4039 2D28                             l4047 2D48  
                           l1487 575A                             l4143 5A34  
                           l5111 11CA                             l5103 1192  
                           l5031 0F48                             l5023 0F0C  
                           l5015 0E60                             l5007 0DFC  
                           l4161 4468                             l4153 4432  
                           l4217 47EA                             l4225 4850  
                           l4209 47A2                             l4129 5912  
                           l4137 5B5A                             l4321 35DA  
                           l4313 359C                             l4305 3562  
                           l4241 33E2                             l4233 33B6  
                           l4401 303A                             l4073 2E36  
                           l4065 2E0E                             l4081 2E54  
                           l4049 2D6E                             l4057 2DC4  
                           l5121 1206                             l5113 11DC  
                           l5105 1198                             l5041 0F7C  
                           l5033 0F56                             l5025 0F1E  
                           l5017 0E84                             l5009 0E30  
                           l5201 4E7A                             l1497 4E9C  
                           l6001 19B4                             l4147 5C32  
                           l4171 44C4                             l4163 4476  
                           l4155 4436                             l4227 4860  
                           l4219 4818                             l4139 5B72  
                           l4331 3616                             l4323 35E4  
                           l4315 35AC                             l4307 3570  
                           l4251 341C                             l4243 33F2  
                           l4235 33C2                             l4411 3084  
                           l4403 3040                             l4075 2E3E  
                           l4067 2E18                             l4059 2DEA  
                           l4083 2E62                             l5131 125E  
                           l5123 120C                             l5115 11E8  
                           l5107 11AA                             l5051 0FAE  
                           l5043 0F8C                             l5035 0F66  
                           l5027 0F2C                             l5019 0EE8  
                           l5211 594E                             l6011 1A06  
                           l6003 19BE                             l5221 576C  
                           l6101 5378                             l4149 5C4E  
                           l4181 452E                             l4173 44CC  
                           l4165 4496                             l4157 4444  
                           l4229 4880                             l4341 3688  
                           l4333 3624                             l4325 35F2  
                           l4317 35BE                             l4309 357C  
                           l4261 3448                             l4253 3422  
                           l4245 3402                             l4237 33D0  
                           l4421 30D4                             l4413 3090  
                           l4405 3060                             l4093 2EB4  
                           l4085 2E66                             l4077 2E42  
                           l4069 2E26                             l4501 58AE  
                           l5133 1266                             l5117 11F0  
                           l5109 11C4                             l5061 1056  
                           l5053 0FC0                             l5045 0F90  
                           l5037 0F6A                             l5029 0F34  
                           l5301 421A                             l5213 595E  
                           l5205 593A                             l6021 1A90  
                           l6013 1A16                             l6005 19CA  
                           l5231 57A0                             l5223 5774  
                           l6103 537E                             l5151 42DA  
                           l5143 42A2                             l4191 4578  
                           l4183 454E                             l4175 44E0  
                           l4167 449A                             l4159 4464  
                           l4511 5040                             l4351 36F4  
                           l4343 3696                             l4335 3652  
                           l4319 35D4                             l4327 3604  
                           l4271 3482                             l4263 3458  
                           l4255 3428                             l4247 3404  
                           l4239 33D2                             l4431 3116  
                           l4423 30E0                             l4415 309A  
                           l4407 3070                             l4095 2EC0  
                           l4087 2E74                             l4079 2E52  
                           l4503 58BE                             l5135 1276  
                           l5127 1240                             l5119 1200  
                           l5071 10AE                             l5063 105E  
                           l5055 0FC4                             l5047 0F96  
                           l5039 0F70                             l5311 4270  
                           l5303 4228                             l5215 5970  
                           l5207 593A                             l6031 1AF6  
                           l6023 1AA0                             l6015 1A48  
                           l6007 19D4                             l6111 5CCA  
                           l5233 57AE                             l5225 5782  
                           l6105 5CB4                             l5161 4330  
                           l5153 4310                             l5145 42B6  
                           l4193 4598                             l4185 4550  
                           l4177 44EE                             l4169 44A6  
                           l4521 5066                             l4513 5048  
                           l4361 3742                             l4353 370E  
                           l4345 36C0                             l4329 3612  
                           l4273 3498                             l4265 3468  
                           l4257 3436                             l4249 340C  
                           l4441 3178                             l4433 3122  
                           l4425 30EC                             l4417 30B0  
                           l4097 2ECE                             l4089 2E8A  
                           l5137 127C                             l5129 1252  
                           l5081 10F8                             l5073 10BE  
                           l5049 0F9C                             l5057 0FCA  
                           l5065 1062                             l5401 292C  
                           l5321 2496                             l5313 4280  
                           l5305 4246                             l5209 594C  
                           l6041 1B4E                             l6033 1B02  
                           l6025 1AA4                             l6017 1A4C  
                           l6009 19FA                             l6121 4978  
                           l6113 5CD6                             l6201 4D4C  
                           l5227 578A                             l5219 575E  
                           l6107 5CB8                             l5171 43AA  
                           l5163 4338                             l5155 4314  
                           l5147 42BA                             l4187 4562  
                           l4179 4500                             l4531 509E  
                           l4523 506E                             l4515 504C  
                           l4507 502E                             l4363 3744  
                           l4355 372A                             l4339 367C  
                           l4347 36C4                             l4291 34EC  
                           l4275 34A8                             l4283 34C8  
                           l4267 346A                             l4259 3438  
                           l4611 4B48                             l4603 4ACC  
                           l4451 320E                             l4443 3184  
                           l4435 3132                             l4427 30FA  
                           l4419 30BC                             l4371 2F8C  
                           l4099 2F08                             l5091 112E  
                           l5083 1100                             l5075 10D0  
                           l5067 1080                             l5059 1022  
                           l5331 2502                             l5323 24BA  
                           l5315 428E                             l5307 4248  
                           l5235 5B80                             l5251 559E  
                           l5243 5566                             l6051 1BD8  
                           l6043 1B80                             l6035 1B0C  
                           l6019 1A80                             l6027 1AD8  
                           l6131 4992                             l6123 497A  
                           l6115 5CD8                             l6211 4D8A  
                           l6203 4D5C                             l5229 5798  
                           l6141 5C0E                             l5165 4340  
                           l5149 42BE                             l4189 4568  
                           l4197 473E                             l4701 5994  
                           l4541 50CA                             l4533 50A4  
                           l4525 5080                             l4517 505A  
                           l4509 5032                             l4357 372E  
                           l4349 36DE                             l4293 3506  
                           l4285 34D8                             l4277 34B0  
                           l4269 3472                             l4621 4BCC  
                           l4613 4B56                             l4605 4AFA  
                           l4461 3264                             l4453 322C  
                           l4445 31A0                             l4437 314C  
                           l4429 3106                             l4381 2FC8  
                           l4373 2F98                             l5093 1136  
                           l5085 1110                             l5077 10D4  
                           l5069 109C                             l5421 2A6A  
                           l5405 299A                             l5341 2582  
                           l5333 2538                             l5325 24C8  
                           l5317 4290                             l5309 424C  
                           l5237 5BA0                             l5261 5286  
                           l5253 524C                             l5245 5576  
                           l5501 3782                             l6301 1C40  
                           l6053 1BDC                             l6045 1B84  
                           l6037 1B32                             l6029 1AEC  
                           l6061 1C28                             l6109 5BE2  
                           l6133 499C                             l6125 497C  
                           l6117 48A2                             l6213 4D9E  
                           l6205 4D62                             ?_pad 0011  
                           l5511 5C9A                             l6143 5C1E  
                           l6071 59E4                             l5175 43E8  
                           l5167 4374                             l5159 431A  
                           l4199 4742                             l3911 4EB0  
                           l4535 50BA                             l4527 5088  
                           l4543 50D0                             l4519 5062  
                           l4551 50F2                             l4359 373C  
                           l4295 3516                             l4287 34D8  
                           l4279 34B4                             l4615 4B68  
                           l4607 4B0A                             l4471 32CE  
                           l4463 3268                             l4455 3236  
                           l4447 31CA                             l4439 315C  
                           l4391 2FFA                             l4383 2FD8  
                           l4375 2FA6                             l4711 4C62  
                           l4703 4BD0                             l5095 1142  
                           l5087 1118                             l5079 10E6  
                           l5191 4DFE                             l5407 29AC  
                           l5415 2A24                             l5351 260A  
                           l5335 2546                             l5327 24DA  
                           l5431 2A94                             l5239 5BA2  
                           l5271 52CE                             l5263 5294  
                           l5255 525C                             l5247 5584  
                           l5503 3848                             l6303 244E  
                           l6047 1BB8                             l6039 1B3E  
                           l6055 1C10                             l6151 5510  
                           l6135 49B4                             l6127 497E  
                           l6119 4974                             l6215 4DB4  
                           l6207 4D72                             l5513 5CA0  
                           l6073 5CDC                             l6081 5328  
                           l5521 5AEA                             l5601 5BC2  
                           l5177 43FA                             l6305 435E  
                           l3913 4EC2                             l4801 3B06  
                           l4545 50E0                             l4537 50C2  
                           l4529 5090                             l4561 511E  
                           l4553 50F6                             l4297 3526  
                           l4617 4B76                             l4609 4B38  
                           l4481 3330                             l4473 32DA  
                           l4465 3276                             l4457 3244  
                           l4449 3200                             l4393 3008  
                           l4385 2FDE                             l4377 2FA8  
                           l4625 5A6C                             l4641 4A1A  
                           l4633 49C6                             l4721 4CC4  
                           l4705 4BF0                             l5097 1148  
                           l5089 1126                             l5193 4E0C  
                           l5185 4DC8                             l5433 2AB8  
                           l5417 2A48                             l5425 2A78  
                           l5409 29E0                             l5361 26A4  
                           l5353 2618                             l5345 25CA  
                           l5337 2554                             l5329 24DE  
                           l5281 4154                             l5273 52D8  
                           l5265 529E                             l5257 5272  
                           l5249 5594                             l5505 3942  
                           l5441 1C94                             l6049 1BC8  
                           l6161 5544                             l6153 5512  
                           l6145 54F8                             l6137 49BC  
                           l6129 4988                             l6209 4D86  
                           l6217 4DBC                             l5515 5CA2  
                           l6139 5C0A                             l6067 59BA  
                           l6091 535A                             l6083 532E  
                           l6075 52F0                             l5611 564C  
                           l5531 5B00                             l5523 5AEC  
                           l5603 5BC4                             l5179 440C  
                           l3915 4ECC                             l4811 3BA6  
                           l4803 3B0C                             l4547 50E8  
                           l4539 50C4                             l4571 5156  
                           l4563 5126                             l4555 5104  
                           l4299 3536                             l4619 4BC6  
                           l4491 3398                             l4483 3344  
                           l4475 32E8                             l4467 32A4  
                           l4459 3256                             l4395 300A  
                           l4387 2FEE                             l4379 2FB8  
                           l4627 5A82                             l3931 2AF8  
                           l3923 2ACC                             l4643 4A1C  
                           l4635 49DC                             l4707 4C2E  
                           l4715 4C6E                             l5099 116E  
                           l5195 4E24                             l5187 4DF2  
                           l5427 2A86                             l5419 2A56  
                           l5371 2730                             l5355 263C  
                           l5339 2574                             l5347 25DC  
                           l5291 4192                             l5283 416A  
                           l5275 40F0                             l5267 52BC  
                           l5259 527A                             l5507 39EA  
                           l5451 1DF4                             l5443 1CA2  
                           l6163 5554                             l6155 5524  
                           l6147 54FC                             l6171 4CCE  
                           l5517 5CB0                             l5509 5C98  
                           l6069 59DC                             l6093 5360  
                           l6085 533E                             l6077 530A  
                           l5701 46D8                             l5621 5692  
                           l5613 565E                             l5533 5B06  
                           l5525 5AF4                             l5605 5BC8  
                           l3917 4EEA                             l3909 4E9E  
                           l4821 3C4E                             l4813 3BAC  
                           l4805 3B14                             l4581 5190  
                           l4573 516C                             l4565 5138  
                           l4557 510C                             l4493 339A  
                           l4485 335E                             l4477 3312  
                           l4397 301A                             l4389 2FF4  
                           l4629 5A92                             l3941 2B32  
                           l3933 2B08                             l3925 2AD8  
                           l4645 4A2C                             l4717 4C80  
                           l4709 4C56                             l4741 3D3A  
                           l4725 5700                             l4733 56D6  
                           l4901 08D8                             l5197 4E40  
                           l5381 27EC                             l5373 2762  
                           l5365 26EC                             l5357 2676  
                           l5349 2600                             l5293 41C4  
                           l5277 4100                             l5541 547E  
                           l5269 52CC                             l5461 1FB0  
                           l5453 1E64                             l5445 1D0C  
                           l6165 5556                             l6157 5534  
                           l6149 5500                             l6181 4CE2  
                           l6173 4CD2                             l6095 5366  
                           l6087 5344                             l6079 5310  
                           l5711 472A                             l5703 46EA  
                           l5623 5698                             l5615 5664  
                           l5535 5B08                             l5527 5AF6  
                           l5519 5ADE                             l5631 53C6  
                           l5607 5BCC                             l3919 4F20  
                           l4831 3CB4                             l4823 3C68  
                           l4815 3BB2                             l4807 3B1E  
                           l4583 5198                             l4575 5174  
                           l4567 5140                             l4559 5110  
                           l4591 51E0                             l4487 337A  
                           l4495 33A0                             l4479 3316  
                           l4399 302A                             l3951 2B60  
                           l3943 2B38                             l3935 2B18  
                           l3927 2AE6                             l4671 4AAA  
                           l4655 4A56                             l4647 4A30  
                           l4639 49F0                             l4751 3E26  
                           l4743 3D92                             l4727 5710  
                           l4735 56E8                             l4903 08F4  
                           l4911 0910                             l5199 4E52  
                           l5391 2894                             l5383 2834  
                           l5375 2772                             l5359 2696  
                           l5367 26FE                             l5295 41C6  
                           l5287 417E                             l5279 410E  
                           l5543 5496                             l5551 541C  
                           l5471 2110                             l5463 1FBE  
                           l5455 1E72                             l5447 1D7C  
                           l5439 1C90                             l6159 5536  
                           l6191 4D06                             l6183 4CE6  
                           l6175 4CD6                             l6097 536C  
                           l6089 5354                             l5713 4738  
                           l5705 46F8                             l5617 566E  
                           l5609 563C                             l5537 5B10  
                           l5529 5AFE                             l5625 5386  
                           l4681 4F8C                             l4833 3CBA  
                           l4841 3CF0                             l4825 3C82  
                           l4809 3B24                             l4817 3C16  
                           l4577 517A                             l4569 5148  
                           l4593 520E                             l4497 33A4  
                           l4489 338A                             l3961 2B94  
                           l3953 2B62                             l3945 2B4A  
                           l3937 2B1A                             l3929 2AE8  
                           l4673 4ABA                             l4665 4A7E  
                           l4657 4A60                             l4649 4A3E  
                           l4761 3F0E                             l4753 3E62  
                           l4745 3DA6                             l4729 56A0  
                           l4921 099A                             l4913 092A  
                           l5393 28A2                             l5377 27A4  
                           l5369 2720                             l5641 5848  
                           l5633 580A                             l5297 41D2  
                           l5289 4186                             l5545 54DE  
                           l5553 5464                             l5481 2276  
                           l5473 2180                             l5465 2028  
                           l5457 1EDC                             l5449 1D8A  
                           l5561 3F70                             l5801 14C0  
                           l5721 12C4                             l6193 4D16  
                           l6185 4CEA                             l6177 4CDA  
                           l6099 5372                             l5707 470A  
                           l5619 5680                             l5627 5392  
                           l4771 585C                             l4691 4FD2  
                           l4683 4F9A                             l4835 3CCC  
                           l4819 3C30                             l4827 3C92  
                           l4579 5180                             l4595 521E  
                           l4587 51A2                             l3971 2BD0  
                           l3955 2B72                             l3963 2B9C  
                           l3947 2B4C                             l3939 2B22  
                           l4667 4A8A                             l4659 4A6A  
                           l4763 3F1E                             l4747 3DB4  
                           l4755 3E96                             l4739 3D1A  
                           l4931 0A72                             l4923 09F4  
                           l4851 0700                             l5395 28D2  
                           l5387 286C                             l5379 27C8  
                           l5635 581C                             l5299 420E  
                           l5539 547E                             l5547 5404  
                           l5483 22E0                             l5475 218E  
                           l5467 2098                             l5459 1F48  
                           l5571 4078                             l5563 4036  
                           l5555 3F30                             l5651 59F8  
                           l5811 14F0                             l5803 14C6  
                           l5731 131E                             l5723 12CE  
                           l5715 129E                             l6195 4D18  
                           l6187 4CEE                             l6179 4CDE  
                           l5709 4718                             l5629 53C2  
                           l4773 5860                             l4693 5000  
                           l4685 4FA6                             l4677 4F68  
                           l4837 3CD8                             l4829 3CA4  
                           l4597 5242                             l4589 51D0  
                           l3981 2BE4                             l3973 2BD4  
                           l3965 2BAC                             l3957 2B82  
                           l3949 2B52                             l4669 4A9A  
                           l4757 3ED2                             l4941 0ABE  
                           l4933 0A76                             l4925 0A28  
                           l4917 0960                             l4861 0750  
                           l4853 0708                             l4845 06D8  
                           l5389 287E                             l5637 5824  
                           l5549 5404                             l5485 2350  
                           l5477 21F8                             l5469 20A6  
                           l5493 2438                             l5581 40C8  
                           l5573 4080                             l5565 403E  
                           l5557 3F30                             l5645 5B14  
                           l5653 5A1A                             l5901 16EE  
                           l5813 14FA                             l5805 14D6  
                           l5821 151A                             l5741 1392  
                           l5733 133A                             l5725 12F4  
                           l5717 12AE                             l5661 5C80  
                           l6197 4D28                             l6189 4CFA  
                           l5671 45EA                             l4767 5AA4  
                           l4775 5874                             l4695 5014  
                           l4687 4FBA                             l4679 4F78  
                           l4839 3CE0                             l4791 3AAE  
                           l4783 3A36                             l4599 5248  
                           l3991 2BF8                             l3983 2BE8  
                           l3975 2BD8                             l3967 2BBE  
                           l3959 2B92                             l4759 3EE6  
                           l4951 0B00                             l4935 0A88  
                           l4943 0AD8                             l4927 0A30  
                           l4919 0994                             l4871 078C  
                           l4863 0760                             l4855 072C  
                           l4847 06E2                             l5399 28FE  
                           l5591 5614                             l5639 582C  
                           l5487 235E                             l5479 2268  
                           l5583 40E4                             l5575 409C  
                           l5567 404C                             l5559 3F30  
                           l5647 5B18                             l5655 5A26  
                           l5911 1734                             l5903 16F8  
                           l5831 1562                             l5823 1524  
                           l5815 1504                             l5807 14E8  
                           l5751 13BE                             l5743 13A2  
                           l5735 134C                             l5727 1300  
                           l5719 12B8                             l5663 5C82  
                           l6199 4D3A                             l5681 4638  
                           l5673 45F8                             l5665 45BA  
                           l5593 5BB6                             l4777 58A2  
                           l4689 4FCE                             l4793 3AB0  
                           l4785 3A56                             l3993 2BFC  
                           l3985 2BEC                             l3977 2BDC  
                           l3969 2BCC                             l4961 0B66  
                           l4953 0B1C                             l4937 0A9C  
                           l4929 0A62                             l4881 07F2  
                           l4873 0790                             l4865 0774  
                           l4857 0736                             l4849 06F2  
                           l5585 55D0                             l5489 23C8  
                           l5577 40A4                             l5569 405C  
                           l5649 5B1C                             l5921 176A  
                           l5913 1740                             l5905 1702  
                           l5841 159C                             l5833 1576  
                           l5825 1530                             l5817 150C  
                           l5809 14EC                             l5761 1412  
                           l5753 13D0                             l5745 13A6  
                           l5737 136E                             l5729 1314  
                           l5657 5C7A                             l5691 468A  
                           l5683 464A                             l5675 460A  
                           l5667 45CA                             l5595 5BBA  
                           l4779 58A6                             l4699 597A  
                           l4795 3ACA                             l4787 3A7E  
                           l3995 2C00                             l3987 2BF0  
                           l3979 2BE0                             l4971 0BAE  
                           l4963 0B78                             l4955 0B52  
                           l4939 0AA4                             l4883 0804  
                           l4867 0780                             l4875 0796  
                           l4859 073E                             l5587 55D8  
                           l5499 3750                             l5579 40C0  
                           l5931 179C                             l5923 1774  
                           l5907 170E                             l5851 15CA  
                           l5843 159E                             l5835 1580  
                           l5827 153A                             l5819 1514  
                           l5771 143C                             l5763 1414  
                           l5755 13E2                             l5747 13A8  
                           l5739 1380                             l5659 5C7E  
                           l5693 4698                             l5685 4658  
                           l5677 4618                             l5669 45D8  
                           l5597 5BBE                             l4797 3AE6  
                           l4789 3A9E                             l3997 2C04  
                           l3989 2BF4                             l4981 0BF6  
                           l4973 0BBC                             l4965 0B8A  
                           l4957 0B5A                             l4949 0AEC  
                           l4885 0820                             l4877 07BC  
                           l4893 086A                             l4869 0788  
                           l5589 55E6                             l5941 1808  
                           l5933 17C2                             l5925 1780  
                           l5909 1718                             l5861 1600  
                           l5853 15D0                             l5845 15A4  
                           l5837 1588                             l5829 1556  
                           l5781 146A                             l5773 144E  
                           l5765 1416                             l5757 13F2  
                           l5749 13AA                             l5695 46AA  
                           l5687 466A                             l5679 462A  
                           l5599 5BC0                             l4799 3AF8  
                           l3999 2C08                             l4991 0D0A  
                           l4983 0C06                             l4975 0BD4  
                           l4967 0B98                             l4959 0B5E  
                           l4895 0890                             l4887 0838  
                           l5951 1852                             l5943 181A  
                           l5935 17CE                             l5927 178A  
                           l5919 1758                             l5871 1630  
                           l5863 1606                             l5847 15B4  
                           l5855 15DA                             l5839 158C  
                           l5791 1498                             l5783 146C  
                           l5775 1452                             l5759 13FA  
                           l5767 1418                             l5697 46B8  
                           l5689 4678                             l4985 0C1A  
                           l4993 0D10                             l4977 0BE6  
                           l4969 0B9C                             l4889 0842  
                           l5961 18AA                             l5953 185E  
                           l5937 17DE                             l5929 1792  
                           l5881 168A                             l5873 164C  
                           l5857 15EA                             l5865 1610  
                           l5849 15C6                             l5793 149C  
                           l5785 1472                             l5777 1454  
                           l5769 142A                             l5699 46CA  
                           l4995 0D2E                             l4987 0C7E  
                           l4979 0BEE                             l4899 08C6  
                           l5971 190A                             l5963 18AC  
                           l5955 1868                             l5947 182E  
                           l5939 17E0                             l5891 16BA  
                           l5883 1690                             l5875 1658  
                           l5867 161A                             l5859 15FC  
                           l5795 14A6                             l5787 1482  
                           l5779 1456                             l4997 0D62  
                           l4989 0CD6                             l5981 1958  
                           l5973 1912                             l5965 18D4  
                           l5957 188E                             l5949 1848  
                           l5885 16A0                             l5893 16C4  
                           l5877 166C                             l5869 1626  
                           l5797 14B0                             l5789 1494  
                           l4999 0D94                             l5991 1988  
                           l5983 1966                             l5967 18E6  
                           l5975 192A                             l5959 189A  
                           l5895 16D4                             l5887 16B2  
                           l5879 1688                             l5799 14B8  
                           l5993 198A                             l5977 193E  
                           l5969 18F8                             l5897 16E6  
                           l5889 16B6                             l5995 198E  
                           l5987 1974                             l5979 1948  
                           l5899 16EA                             l5997 199E  
                           l5989 1978                             l5999 19A2  
                           STR_1 0635                             STR_2 069A  
                           STR_3 0668                             STR_4 0601  
                           STR_5 0679                             STR_6 0601  
                           STR_7 0624                             STR_8 0601  
                           STR_9 0646                             u4000 2B72  
                           u4001 2B6E                             u4010 2B82  
                           u4011 2B7E                             u4100 2CC8  
                           u4020 2BBE                             u4101 2CC4  
                           u4021 2BBA                             u4110 2CD8  
                           u4030 2BCC                             u4111 2CD4  
                           u4031 2BC8                             u5000 511E  
                           u4200 2E36                             u4120 2D0A  
                           u4040 2C3A                             u5001 511A  
                           u4201 2E32                             u4121 2D06  
                           u4041 2C36                             u5010 5138  
                           u4210 2E52                             u4130 2D18  
                           u4050 2C52                             u5011 5134  
                           u4211 2E4E                             u4131 2D14  
                           u4051 2C4C                             u5020 5156  
                           u5100 4B56                             u4300 2F2A  
                           u4220 2E62                             u4140 2D36  
                           u4060 2C54                             u5021 5152  
                           u5101 4B52                             u4301 2F26  
                           u4221 2E5E                             u4141 2D32  
                           u5030 516C                             u5110 4B76  
                           u4310 2F4A                             u4230 2E74  
                           u4150 2D6E                             u4070 2C7C  
                           u5031 5168                             u5111 4B72  
                           u4311 2F46                             u4231 2E70  
                           u4151 2D6A                             u4071 2C78  
                           u5040 5190                             u5120 4BC6  
                           u4320 2F5C                             u4240 2E8A  
                           u4160 2DB4                             u4080 2C9A  
                           u5200 4AAA                             u6000 0EF8  
                           u4401 44A0                             u5041 518C  
                           u5121 4BC2                             u4321 2F58  
                           u4241 2E86                             u4161 2DB0  
                           u4081 2C96                             u5201 4AA6  
                           u6001 0EF4                             u4410 44C4  
                           u5210 4F78                             u5050 51D0  
                           u5130 5A82                             u4330 2F78  
                           u4250 2EA0                             u4170 2DEA  
                           u4090 2CBA                             u6010 0F0C  
                           u4411 44C0                             u5211 4F74  
                           u5051 51CC                             u5131 5A7E  
                           u4331 2F74                             u4251 2E9C  
                           u4171 2DE6                             u4091 2CB6  
                           u6011 0F08                             u4420 44EE  
                           u4500 4860                             u4340 5936  
                           u5220 4F9A                             u5060 520E  
                           u4260 2EB4                             u4180 2DFA  
                           u5140 49DC                             u6100 10BE  
                           u6020 0F1E                             u4421 44EA  
                           u4501 485C                             u4341 5932  
                           u5221 4F96                             u5061 520A  
                           u4261 2EB0                             u4181 2DF6  
                           u5141 49D8                             u6101 10BA  
                           u6021 0F1A                             u4430 452E  
                           u4350 5B72                             u5230 4FF0  
                           u4510 33D0                             u5070 5242  
                           u4270 2ECE                             u4190 2E26  
                           u5150 4A10                             u5310 4CBA  
                           u6110 10F8                             u6030 0F2C  
                           u4431 452A                             u4351 5B6E  
                           u5231 4FEC                             u4511 33CC  
                           u5071 523E                             u4271 2ECA  
                           u4191 2E22                             u5311 4CB4  
                           u6111 10F4                             u6031 0F28  
                           u7000 46AA                             u6200 4310  
                           u4440 4578                             u5240 5000  
                           u4600 3570                             u4520 33E2  
                           u5080 4AFA                             u4280 2F08  
                           u5160 4A3E                             u5320 4CBC  
                           u5400 3DB4                             u4360 5A64  
                           u6120 1126                             u6040 0F48  
                           u7001 46A6                             u6201 430C  
                           u4441 4574                             u5241 4FFC  
                           u4601 356C                             u4521 33DE  
                           u5081 4AF6                             u4281 2F04  
                           u5161 4A3A                             u5305 4C92  
                           u5401 3DB0                             u4361 5A5E  
                           u6121 1122                             u6041 0F44  
                           u7010 46B8                             u6210 432C  
                           u4450 4750                             u5250 5994  
                           u4610 359A                             u4530 33F2  
                           u5090 4B38                             u4290 2F1A  
                           u5170 4A52                             u5330 5748  
                           u4370 5A66                             u6130 11AA  
                           u6050 0F56                             u7011 46B4  
                           u6211 4328                             u4451 474C  
                           u5251 5990                             u4611 3596  
                           u4531 33EE                             u5091 4B34  
                           u4291 2F16                             u5171 4A4E  
                           u5155 4A06                             u6131 11A6  
                           u6051 0F52                             u7020 46CA  
                           u5500 5874                             u6220 43E2  
                           u4380 4444                             u4460 4782  
                           u4700 3696                             u4620 35BE  
                           u4540 3436                             u5180 4A7A  
                           u5260 4C10                             u5420 3E22  
                           u5340 575A                             u6140 11C4  
                           u6060 0FAE                             u6300 4E7A  
                           u7021 46C6                             u5501 5870  
                           u6221 43DC                             u4381 4440  
                           u4461 477E                             u4701 3692  
                           u4621 35BA                             u4541 3432  
                           u5181 4A76                             u5421 3E1E  
                           u5341 5756                             u6141 11C0  
                           u6061 0FAA                             u6301 4E76  
                           u7101 12A4                             u7030 46D8  
                           u5510 58A2                             u6230 43E4  
                           u4390 4476                             u4470 47C0  
                           u3910 4EB0                             u4710 36DE  
                           u4630 35D4                             u4550 3448  
                           u5190 4A9A                             u5270 4C2E  
                           u5430 3E46                             u5350 56D0  
                           u6150 11DC                             u6070 1080  
                           u6310 595E                             u7110 1314  
                           u7031 46D4                             u5511 589E  
                           u4391 4472                             u4471 47BC  
                           u3911 4EAC                             u4711 36DA  
                           u4631 35D0                             u4551 3444  
                           u5191 4A96                             u5271 4C2A  
                           u5415 3DC8                             u5351 56CA  
                           u6151 11D8                             u6071 107C  
                           u6311 595A                             u7111 1310  
                           u6320 576C                             u7040 46EA  
                           u6240 43FA                             u4480 47EA  
                           u3920 4EC2                             u5600 3C4E  
                           u5520 3A66                             u4720 370E  
                           u4640 35F2                             u4560 3458  
                           u4800 3060                             u5280 4C56  
                           u5440 3E62                             u5416 3DD2  
                           u5360 56D2                             u6160 123A  
                           u6080 109C                             u6400 52BC  
                           u7200 13E2                             u7120 133A  
                           u6321 5768                             u7041 46E6  
                           u6241 43F6                             u4481 47E6  
                           u3921 4EBE                             u5601 3C4A  
                           u5521 3A60                             u4721 370A  
                           u4641 35EE                             u4561 3454  
                           u4801 305C                             u5281 4C52  
                           u5265 4C06                             u5441 3E5E  
                           u5417 3DE2                             u5337 573E  
                           u6161 1234                             u6081 1098  
                           u6401 52B8                             u7201 13DE  
                           u7121 1336                             u6330 5782  
                           u7050 46F8                             u6250 440C  
                           u4490 4818                             u3930 4EEA  
                           u5610 3C68                             u5530 3A68  
                           u4730 373C                             u4650 3612  
                           u4570 3498                             u4810 3070  
                           u5290 4C80                             u5450 3EB6  
                           u5370 56E8                             u6170 123C  
                           u6090 10AE                             u6410 4100  
                           u7210 13F2                             u7130 134C  
                           u6331 577E                             u7051 46F4  
                           u6251 4408                             u4491 4814  
                           u3931 4EE6                             u5611 3C64  
                           u4731 3738                             u4651 360E  
                           u4571 3494                             u4811 306C  
                           u5291 4C7C                             u5435 3E3C  
                           u5371 56E4                             u6091 10AA  
                           u6411 40FC                             u7211 13EE  
                           u7131 1348                             u6340 5798  
                           u7060 470A                             u3940 4F20  
                           u5620 3C82                             u5540 3A7E  
                           u4660 3624                             u4580 34D8  
                           u4900 3330                             u4820 31EA  
                           u4740 2FA6                             u5460 3ED2  
                           u5380 3D62                             u6180 1252  
                           u5700 0774                             u6260 4DF2  
                           u6500 428E                             u6420 410E  
                           u7300 1576                             u7220 142A  
                           u7140 136E                             u6341 5794  
                           u7061 4706                             u3941 4F1C  
                           u5621 3C7E                             u5541 3A7A  
                           u4661 3620                             u4581 34D4  
                           u4901 332C                             u4741 2FA2  
                           u5461 3ECE                             u6181 124E  
                           u5701 0770                             u6261 4DEE  
                           u6501 428A                             u6421 410A  
                           u7301 1572                             u7221 1426  
                           u7141 136A                             u6350 57AE  
                           u7070 4718                             u6190 42DA  
                           u5630 3C92                             u5550 3AAE  
                           u4670 3652                             u4590 354E  
                           u4910 335E                             u4830 3244  
                           u4750 2FB8                             u3950 2AE6  
                           u5470 3F0E                             u5390 3D92  
                           u5710 07BC                             u6270 4E24  
                           u6510 24BA                             u6430 416A  
                           u7310 159C                             u7230 143C  
                           u7150 1380                             u6351 57AA  
                           u7071 4714                             u6191 42D6  
                           u5631 3C8E                             u5551 3AAA  
                           u4671 364E                             u4591 354A  
                           u4911 335A                             u4831 3240  
                           u4751 2FB4                             u3951 2AE2  
                           u5471 3F0A                             u5455 3EAC  
                           u5391 3D8E                             u5711 07B8  
                           u6271 4E20                             u6511 24B6  
                           u6431 4166                             u7311 1598  
                           u7231 1438                             u7151 137C  
                           u7080 472A                             u5480 5AD4  
                           u5640 3CA4                             u5560 3ACA  
                           u4680 3668                             u4920 3398  
                           u4840 3264                             u4760 2FC8  
                           u3960 2AF8                             u5800 09F0  
                           u5720 07EC                             u6280 4E40  
                           u6600 26E8                             u6520 2502  
                           u6440 41C0                             u6360 5584  
                           u7400 16D4                             u7320 15B4  
                           u7240 144E                             u7160 1392  
                           u7081 4726                             u5481 5ACE  
                           u5641 3CA0                             u5561 3AC6  
                           u4681 3664                             u4921 3394  
                           u4841 3260                             u4825 31E0  
                           u4761 2FC4                             u3961 2AF4  
                           u5385 3D58                             u5801 09EC  
                           u5721 07E6                             u6281 4E3C  
                           u6521 24FE                             u6441 41BC  
                           u6361 5580                             u7401 16D0  
                           u7321 15B0                             u7241 144A  
                           u7161 138E                             u7090 4738  
                           u5490 5AD6                             u5650 3CB4  
                           u5570 3AF8                             u4930 5040  
                           u4690 367C                             u4850 3276  
                           u4770 3008                             u3970 2B08  
                           u5810 0A62                             u5730 07EE  
                           u6290 4E52                             u6610 26FE  
                           u6530 2546                             u6450 420A  
                           u6370 55BE                             u7410 16E6  
                           u7330 15C6                             u7250 146A  
                           u7170 13A2                             u7091 4734  
                           u5651 3CB0                             u5571 3AF4  
                           u4931 503C                             u4691 3678  
                           u4851 3272                             u4771 3004  
                           u3971 2B04                             u5811 0A5E  
                           u6291 4E4E                             u6611 26FA  
                           u6531 2542                             u6451 4206  
                           u6371 55BA                             u7411 16E2  
                           u7331 15C2                             u7251 1466  
                           u7171 139E                             u5660 3CCC  
                           u5580 3B06                             u4940 505A  
                           u4860 32A4                             u4780 301A  
                           u3980 2B4A                             u5900 0B8A  
                           u5820 0A88                             u5740 0804  
                           u6700 29AC                             u6620 2730  
                           u6540 25C4                             u6460 4228  
                           u6380 5272                             u7500 193E  
                           u7420 1754                             u7340 15EA  
                           u7260 1482                             u7180 13BE  
                           u5661 3CC8                             u5581 3B02  
                           u4941 5056                             u4861 32A0  
                           u4781 3016                             u3981 2B46  
                           u5901 0B86                             u5821 0A84  
                           u5741 0800                             u6701 29A8  
                           u6621 272C                             u6541 25BE  
                           u6461 4224                             u6381 526E  
                           u7501 193A                             u7421 1750  
                           u7341 15E6                             u7261 147E  
                           u7181 13BA                             u5590 3C30  
                           u4950 5080                             u4870 32BA  
                           u4790 302A                             u3990 2B60  
                           u5910 0B98                             u5830 0A9C  
                           u5750 0890                             u5670 0700  
                           u6710 2A48                             u6630 2772  
                           u6550 25C6                             u6470 4238  
                           u6390 5294                             u7510 1958  
                           u7430 17DE                             u7350 15FC  
                           u7270 1494                             u7190 13D0  
                           u5591 3C2C                             u4951 507C  
                           u4871 32B6                             u4791 3026  
                           u3991 2B5C                             u5911 0B94  
                           u5831 0A98                             u5751 088C  
                           u5671 06FC                             u6711 2A44  
                           u6631 276E                             u6471 4234  
                           u6391 5290                             u7511 1954  
                           u7431 17DA                             u7351 15F8  
                           u7271 1490                             u7191 13CC  
                           u6800 564C                             u4960 509E  
                           u4880 32CE                             u5920 0BAE  
                           u5840 0ABE                             u5760 08C0  
                           u5680 0750                             u6640 27C8  
                           u6560 25DC                             u6480 4246  
                           u6720 5496                             u7600 1AEC  
                           u7520 1966                             u7440 181A  
                           u7360 166C                             u7280 14D6  
                           u6801 5648                             u4961 509A  
                           u4881 32CA                             u5921 0BAA  
                           u5841 0ABA                             u5761 08BA  
                           u5681 074C                             u6641 27C4  
                           u6561 25D8                             u6481 4242  
                           u6721 5492                             u7601 1AE8  
                           u7521 1962                             u7441 1816  
                           u7361 1668                             u7281 14D2  
                           u6810 5680                             u4970 50BA  
                           u4890 32E8                             u5930 0BBC  
                           u5850 0AE8                             u5770 08C2  
                           u5690 0760                             u6650 27EC  
                           u6570 2600                             u6490 4280  
                           u6730 541C                             u7610 1B4E  
                           u7530 1988                             u7450 18AA  
                           u7370 1688                             u7290 14E8  
                           u6811 567C                             u4971 50B6  
                           u4891 32E4                             u5931 0BB8  
                           u5851 0AE4                             u5691 075C  
                           u6651 27E8                             u6571 25FC  
                           u6491 427C                             u6731 5418  
                           u7611 1B4A                             u7531 1984  
                           u7451 18A6                             u7371 1684  
                           u7291 14E4                             u6900 460A  
                           u6820 53BE                             u4980 50E0  
                           u5940 0BE6                             u5860 0B00  
                           u5780 08D8                             u6660 287E  
                           u6580 263C                             u6740 4078  
                           u7620 1B80                             u7540 199E  
                           u7460 18D4                             u7380 16A0  
                           u7700 4D16                             u6901 4606  
                           u4981 50DC                             u5941 0BE2  
                           u5861 0AFC                             u5781 08D4  
                           u6661 287A                             u6581 2638  
                           u6741 4074                             u7621 1B7C  
                           u7541 199A                             u7461 18D0  
                           u7381 169C                             u7701 4D12  
                           u6910 4618                             u6830 53F2  
                           u4990 5104                             u5950 0D2E  
                           u5870 0B1C                             u5790 095C  
                           u6670 292C                             u6590 26E6  
                           u6750 409C                             u7630 1BC8  
                           u7550 19B4                             u7470 18E6  
                           u7390 16B2                             u7710 4D28  
                           u6911 4614                             u4991 5100  
                           u5951 0D2A                             u5871 0B18  
                           u5791 0958                             u6671 2928  
                           u6591 26E0                             u6751 4098  
                           u7631 1BC4                             u7551 19B0  
                           u7471 18E2                             u7391 16AE  
                           u7711 4D24                             u6920 462A  
                           u6840 5402                             u5960 0D94  
                           u5880 0B52                             u6680 2994  
                           u6760 40C0                             u7640 1BD8  
                           u7560 1A16                             u7480 18F8  
                           u7720 4D3A                             u6921 4626  
                           u6841 53FE                             u5961 0D90  
                           u5881 0B4E                             u6681 298E  
                           u6761 40BC                             u7641 1BD4  
                           u7561 1A12                             u7481 18F4  
                           u7721 4D36                             u6930 4638  
                           u5970 0DDC                             u5890 0B78  
                           u6690 2996                             u6770 40E4  
                           u7650 1C24                             u7570 1A48  
                           u7490 190A                             u6850 5C92  
                           u7730 4D4C                             u6931 4634  
                           u6827 53B4                             u5971 0DD8  
                           u5891 0B74                             u6771 40E0  
                           u7651 1C20                             u7571 1A44  
                           u7491 1906                             u6851 5C8E  
                           u7731 4D48                             u7660 5CC8  
                           u6940 464A                             u6860 45CA  
                           u5980 0DEC                             u6780 5630  
                           u7580 1A90                             u7740 4D5C  
                           u7661 5CC4                             u6941 4646  
                           u6861 45C6                             u6837 53E8  
                           u5981 0DE8                             u6781 562C  
                           u7581 1A8C                             u7741 4D58  
                           u6950 4658                             u6870 45D8  
                           u6790 5BDC                             u5990 0E54  
                           u7590 1AA0                             u7670 5510  
                           u7750 4D86                             u6951 4654  
                           u6871 45D4                             u6791 5BD8  
                           u5991 0E50                             u7591 1A9C  
                           u7671 550C                             u7751 4D82  
                           u6960 466A                             u6880 45EA  
                           u7680 5534                             u7760 4DB4  
                           u6961 4666                             u6881 45E6  
                           u7681 5530                             u7817 49A6  
                           u7761 4DB0                             u6970 4678  
                           u6890 45F8                             u7690 5554  
                           u6971 4674                             u6891 45F4  
                           u7827 5AF8                             u7691 5550  
                           u6980 468A                             u6981 4686  
                           u7837 5B0A                             u6990 4698  
                           u7847 531A                             u6991 4694  
                           u7857 5334                             u7867 534A  
                           u7877 5CA8                             _TMR2 000FBC  
                           abs@a 0013                ?_Lcd_Write_String 0005  
                           _dbuf 0200                             _atoi 42A2  
                           _main 4CCE                             _dtoa 3A36  
                           _prec 01A2                             _nout 019E  
                           pad@i 0018                             pad@p 0015  
                           fsr1h 000FE2                             fsr2h 000FDA  
                           indf1 000FE7                             indf2 000FDF  
                           fsr1l 000FE1                             pad@w 001A  
                           fsr2l 000FD9                             btemp 005F  
                  ___fpclassifyf 4BD0                             prodh 000FF4  
                           prodl 000FF3                             start 0068  
             ??_Lcd_Write_String 0007                  ___fldiv@new_exp 0046  
                __end_of_Lcd_Cmd 5CB4                     _tolower$2665 000D  
                   ___param_bank 000000                            ??_abs 0015  
                          ??_pad 0017                     ?_menuControl 0001  
                  ___fltol@sign1 0056                  __end_of___aodiv 45BA  
                          ?_atoi 0008                  __end_of___fladd 2F8C  
                          ?_main 0001                            ?_dtoa 001C  
                __end_of___aomod 48A2                  __end_of_adcInit 59F8  
                __end_of___fldiv 3750                  __end_of___awdiv 50F2  
                __end_of___flneg 5AA4                            _EEADR 000FA9  
                          STR_10 068A                            STR_11 0657  
                          STR_12 068A                            STR_21 06C8  
                          STR_13 0613                            STR_22 06D0  
                          STR_14 06A9                            STR_15 0613  
                          STR_16 06B7                            STR_25 06D4  
                          STR_17 06C4                            STR_18 06CC  
                          STR_27 06D4                  __end_of___awmod 51A2  
                __end_of___flmul 33B6                  __end_of___flsub 58F4  
                __end_of___fltol 4ACC                  __end_of___lldiv 52F0  
                          _T0CON 000FD5                  ___awdiv@divisor 0003  
                          i2l478 0064                  ___awdiv@counter 0005  
                   vfpfcnvrt@fmt 00A9                            _TMR0H 000FD7  
                          _TMR0L 000FD6          __size_of_Lcd_Set_Cursor 0066  
            ___lmul@multiplicand 0005                            _fabsf 5B80  
                          _flags 01A4                            _fputc 4E9E  
                          _fputs 58F4                  __end_of_isdigit 5ADC  
                    ?_PWM1_setDC 0058                     _adc_raw_data 0173  
                    ?_PWM2_setDC 0058                            atoi@n 0015  
                          pad@fp 0011                            atoi@s 0008  
                          _width 01A0                            _putch 5CEA  
                          dtoa@d 001E                            dtoa@i 003E  
                          dtoa@n 0036                            dtoa@p 0030  
                          dtoa@s 0034                            dtoa@w 0032  
                __end_of_isspace 58AE                  __end_of_isupper 5A6C  
               __end_of_PWM_Init 5C32                            tablat 000FF5  
                          ttemp5 0060                            ttemp6 0063  
                          ttemp7 0067                            status 000FD8  
                          wtemp8 0060                  __end_of_sprintf 585C  
                 ?___fpclassifyf 0001                  __end_of_tolower 5700  
                __end_of_strncmp 4E9E                    ?_readAdcValue 0001  
               __end_of_Lcd_Port 57B8                  __initialization 57B8  
                    _system_init 48A2                     __end_of_atoi 4432  
                   __end_of_main 4DC8                     __end_of_dtoa 3D1A  
                         ??_atoi 000A                           ??_main 005F  
                         ??_dtoa 0026               __size_of_Lcd_Clear 000E  
                  __activetblptr 000002  __size_of_calculatedAverageValue 02E6  
                         ?_fabsf 001C                           _ADCON0 000FC2  
                         _ADCON1 000FC1                           ?_fputc 0001  
                         ?_fputs 000A                           _ADRESH 000FC4  
                         _ADRESL 000FC3                           _EEDATA 000FA8  
                         _CCPR1L 000FBE                           _CCPR2L 000F67  
                         _EECON2 000FA7                 ___awdiv@dividend 0001  
                         ?_putch 0001                           i2l6221 0018  
                         i2l6231 0042                           i2l6223 0026  
                         i2l6233 0048                           i2l6225 0028  
                         i2l6235 004C                           i2l6227 0030  
                         i2l6219 000A                           i2l6237 005C  
                         i2l6229 0034                           i2l6239 0060  
                      ??_Lcd_Cmd 0002                           _TIMER0 0008  
                 ??_readAdcValue 0003          __size_of_Lcd_Write_Char 0038  
               __end_of___xxtofl 42A2                _scanAdcConversion 1C90  
             _timer_counter_flag 01AA               ?_scanAdcConversion 0001  
           __size_of_eepromWrite 002E                     vfprintf@cfmt 00CD  
               __end_of_lcd_init 5386                           ___flge 4ACC  
                         ___fleq 51A2                           ___lmul 5566  
                      ??___aodiv 0011                        ??___fladd 003D  
                      ??___aomod 0011                           ___wmul 5C32  
                      ??_adcInit 0001                        ??___fldiv 003D  
                      ??___awdiv 0005                        ??___flneg 0005  
                      ??___awmod 0005                        ??___flmul 0024  
                      ??___flsub 004D                        ??___fltol 0052  
                      ??___lldiv 0009                           _efgtoa 06D8  
                         _floorf 3D1A              __size_of_PWM1_setDC 007A  
                         fabsf@u 0020                           fabsf@x 001C  
               __end_of_mcu_init 5CCA              __size_of_PWM2_setDC 007A  
            ??_scanAdcConversion 0058                           clear_0 57DE  
                         clear_1 57EA                           clear_2 57F6  
                eepromWrite@data 0001                 ___awdiv@quotient 0007  
                ___awmod@divisor 0003                  ___awmod@counter 0005  
                         pad@buf 0013                           dtoa@fp 001C  
                         _strcpy 5700                           _strlen 5B4A  
                         fputc@c 0001             readAdcValue@adcValue 0006  
                         fputs@c 000E                           fputs@i 000F  
                         fputs@s 000A                        ??_isdigit 0003  
                ___fpclassifyf@e 0009                  ___fpclassifyf@u 000B  
                ___fpclassifyf@x 0001                     __mediumconst 0000  
                      ??_isspace 0003                           tblptrh 000FF7  
                      ??_isupper 0003                           tblptrl 000FF6  
                         tblptru 000FF8                           putch@c 0001  
               __end_of_vfprintf 563A                        ??_sprintf 005F  
                      ??_tolower 0009                        ??_strncmp 0007  
     __end_of_buttonControlFlags 473E                  Lcd_Set_Cursor@a 0005  
                Lcd_Set_Cursor@b 0004                  Lcd_Set_Cursor@y 0007  
                Lcd_Set_Cursor@z 0006                       ___flge@ff1 0035  
                     ___flge@ff2 0039                  ??___fpclassifyf 0005  
                   ___xxtofl@arg 0018                     ___xxtofl@exp 0017  
                   ___xxtofl@val 000E                       ___fleq@ff1 0001  
                     ___fleq@ff2 0005        __end_of_scanAdcConversion 2496  
                     __accesstop 0060          __end_of__initialization 57FC  
                     ___flneg@f1 0001           _calculatedAverageValue 3750  
              __end_of_Lcd_Clear 5CEA                    ___rparam_used 000001  
                     ___fltol@f1 004E                   __pcstackCOMRAM 0001  
                   __pidataBANK1 5C58                    __end_of_fabsf 5BB4  
                  __end_of_fputc 4F68                    __end_of_fputs 5938  
                  __end_of_putch 5CEC                        ?_PWM_Init 0001  
                 _Lcd_Set_Cursor 563A     _KP@fs_speed_controller$F1179 01BF  
   _KP@fs_speed_controller$F1780 01AF     _KP@fs_speed_controller$F1596 01B7  
              eepromRead@address 0001             __size_of_menuControl 006E  
                        ??_fabsf 0020                        ?_Lcd_Port 0001  
                        ??_fputc 0005                          ??_fputs 000E  
                        ??_putch 0001                       __pbssBANK0 00F3  
                     __pbssBANK1 0100                       __pbssBANK2 0200  
            PWM1_setDC@dutycycle 0058                          ?_TIMER0 0001  
                        ?___flge 0035                          ?___fleq 0001  
                        ?___lmul 0001                          ?___wmul 0001  
                        ?_efgtoa 0058                          _CCP1CON 000FBD  
                        _CCP2CON 000F66                          ?_floorf 004E  
                 ___lmul@product 0009        __size_of_Lcd_Write_String 007E  
         __end_of_Lcd_Set_Cursor 56A0                       ??_PWM_Init 0001  
                        ?_strcpy 0001                          ?_strlen 0001  
           __end_of_readAdcValue 597A                       _eepromRead 5C78  
                      ?___xxtofl 000E               __size_of_vfpfcnvrt 0636  
                     ??_Lcd_Port 0001                     ??_PWM1_setDC 005A  
                   ??_PWM2_setDC 005A                        ?_lcd_init 0001  
        __size_of_menuInitialize 0028                    _menu_selected 01A7  
             __size_of_stopMotor 003C       __size_of_scanAdcConversion 0806  
                 _Lcd_Write_Char 5ADC                          _Lcd_Cmd 5C96  
                      ?_mcu_init 0001                  __size_of_TIMER0 0060  
              stateMachine@F6401 0163                       _controller 0150  
                        __Hparam 0000                          __Lparam 0000  
            PWM2_setDC@dutycycle 0058                     ?_system_init 0001  
                __size_of___flge 0104                  __size_of___fleq 00AA  
                        ___aodiv 4432                          ___fladd 2ACC  
                        ___aomod 473E                          _adcInit 59BA  
                        ___fldiv 33B6                          ___awdiv 502E  
                        ___flneg 5A6C                  __size_of___lmul 006A  
                        ___awmod 50F2                          ___flmul 2F8C  
                        ___flsub 58AE                          ___fltol 49C6  
                        ___lldiv 524C                  __size_of___wmul 0026  
                      ?_vfprintf 00C7                     __psmallconst 0600  
                __size_of_efgtoa 0BC6                  __size_of_floorf 0216  
                        __pcinit 57B8               __end_of_PWM1_setDC 54F8  
                        __ramtop 0600                  ?_Lcd_Set_Cursor 0004  
             __end_of_PWM2_setDC 547E                          __ptext0 4CCE  
                        __ptext1 5CCA                          __ptext2 48A2  
                        __ptext3 5C78                          __ptext4 5BE2  
                        __ptext5 54F8                          __ptext6 129E  
                        __ptext7 59F8                          __ptext8 5B14  
                        __ptext9 3F30                       _menu_flags 00FD  
                     _menu_value 019B                  __size_of_strcpy 005C  
                __size_of_strlen 0036          stateMachine@textCursor2 00E3  
                      _T2CONbits 000FBA                     __size_of_abs 0040  
                   __size_of_pad 00C6                          _isdigit 5AA4  
                     ??___xxtofl 0012                 ___awmod@dividend 0001  
                        _isspace 585C                          _isupper 5A34  
                        efgtoa@c 005E                          efgtoa@d 0087  
                        efgtoa@e 009F                          efgtoa@f 005A  
                        efgtoa@g 009B                          efgtoa@h 0091  
                        efgtoa@i 0099                          efgtoa@l 0095  
                        efgtoa@m 0083                          efgtoa@n 00A1  
                        efgtoa@p 008B                          efgtoa@t 007F  
                        efgtoa@u 00A3                          efgtoa@w 008E  
                  ?_speedControl 0058                          atoi@neg 000E  
                  ?_timer_0_init 0001                          _sprintf 580A  
                        _tolower 56A0                       ??_lcd_init 0004  
         __end_of_Lcd_Write_Char 5B14                          _strncmp 4DC8  
           end_of_initialization 57FC             speedControl@position 0058  
                        floorf@e 0064                          floorf@m 0060  
                        floorf@u 0066                          floorf@x 004E  
                        fputc@fp 0003                       ??_mcu_init 0001  
                  __Lmediumconst 0000                          fputs@fp 000C  
                ___lldiv@divisor 0005                  ___lldiv@counter 000D  
              __end_of_vfpfcnvrt 2ACC                       efgtoa@mode 0090  
                     efgtoa@sign 0089                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
                      Lcd_Port@a 0001                       ??_vfprintf 005F  
                        strcpy@d 0009                          strlen@a 0003  
                        strcpy@s 0007                          strlen@s 0001  
              __end_of_stopMotor 5A34                        _PORTBbits 000F81  
                      _PORTDbits 000F83                      ?_eepromRead 0001  
                    ___fladd@grs 0044                    ___xxtofl@sign 0016  
                      _TRISAbits 000F92                   ??_speedControl 005C  
                      _TRISBbits 000F93                        _TRISCbits 000F94  
                      _TRISDbits 000F95                        _TRISEbits 000F96  
                 ??_timer_0_init 0001                      ___fldiv@grs 0048  
                    ___fldiv@rem 0041                       _startMotor 5B14  
                ?_Lcd_Write_Char 0001          ?_calculatedAverageValue 0001  
              Lcd_Write_String@a 0005                Lcd_Write_String@i 0009  
                    ___flmul@grs 0029                    ??_eepromWrite 0002  
       _button_bounce_controller 00FE                   __end_of_TIMER0 0068  
                  ?_stateMachine 0001               _buttonControlFlags 45BA  
                      _Lcd_Clear 5CDC                     _convert_data 0100  
          __size_of_readAdcValue 0042                   __end_of___flge 4BD0  
                 __end_of___fleq 524C                   __end_of___lmul 55D0  
                    vfpfcnvrt@ap 00AB                      vfpfcnvrt@ct 00C3  
                    vfpfcnvrt@fp 00A7                      vfpfcnvrt@ll 00B1  
                 __end_of___wmul 5C58                 _Lcd_Write_String 5386  
                 __end_of_efgtoa 129E              ?_buttonControlFlags 0001  
                 __end_of_floorf 3F30                       floorf@F524 018F  
                 __end_of_strcpy 575C                   __end_of_strlen 5B80  
              __size_of_PWM_Init 0028              start_initialization 57B8  
                    __end_of_abs 59BA                      __end_of_pad 502E  
 __end_of_calculatedAverageValue 3A36                   _menuInitialize 5BE2  
                   _driver_limit 0183                __size_of_Lcd_Port 005C  
           ??_buttonControlFlags 0001                         ??_TIMER0 0001  
          __end_of___fpclassifyf 4CCE                     _readAdcValue 5938  
                 ??_stateMachine 00E1              __size_of_eepromRead 001E  
                    vfprintf@fmt 00C9                       ?_Lcd_Clear 0001  
                       ??___flge 003D                         ??___fleq 0009  
                       ??___lmul 0009              __end_of_eepromWrite 5BE2  
                       ??___wmul 0005                         ??_efgtoa 006A  
                    __pdataBANK1 01AB                         ??_floorf 0052  
           __size_of_system_init 0124                  Lcd_Write_Char@a 0004  
                Lcd_Write_Char@y 0003                    ??_menuControl 005F  
                       ??_strcpy 0005                         ??_strlen 0003  
                      ___fladd@a 0039                        ___fladd@b 0035  
                      ___fldiv@a 0039                        ___fldiv@b 0035  
                      ___flmul@a 0020                        ___flmul@b 001C  
                      ___flsub@a 0049                        ___flsub@b 0045  
         __end_of_menuInitialize 5C0A                    __pcstackBANK0 0060  
               ___aodiv@dividend 0001                __size_of___xxtofl 01B4  
                    ?_startMotor 0001                         ?_Lcd_Cmd 0001  
              __size_of_lcd_init 0096                        _atoi$2570 0010  
                      _atoi$2571 0014                        _atoi$2572 0012  
              __size_of_mcu_init 0016                      _efgtoa$2503 0073  
                    _efgtoa$2512 0079                      _efgtoa$2504 0075  
                    _efgtoa$2513 007B                      _efgtoa$2514 007D  
                    _efgtoa$2508 0077                        _dtoa$2479 002E  
  stateMachine@secretMenuCounter 01A6             __end_of_speedControl 40EE  
               ??_Lcd_Set_Cursor 0005                        __pintcode 0008  
           __end_of_timer_0_init 5CDC                         ?___aodiv 0001  
                       ?___fladd 0035                         ?___aomod 0001  
                       ?_adcInit 0001                         ?___fldiv 0035  
                       ?___awdiv 0001                 ___aodiv@quotient 0013  
                       ?___flneg 0001                         ?___awmod 0001  
                       ?___flmul 001C                         ?___flsub 0045  
                       ?___fltol 004E                         ?___lldiv 0001  
              __size_of_vfprintf 006A                        fabsf@F463 0197  
                    __smallconst 0600                         ?_isdigit 0001  
                       ?_isspace 0001                  ?_menuInitialize 0001  
                       ?_isupper 0001              __end_of_menuControl 5566  
                 __size_of_fabsf 0034                         ?_sprintf 00CF  
                       ?_tolower 0007                   __size_of_fputc 00CA  
                 __size_of_fputs 0044                         ?_strncmp 0001  
                 __size_of_putch 0002               eepromWrite@address 0002  
                 ___wmul@product 0005                         _LATCbits 000F8B  
                       _LATDbits 000F8C                      _eepromWrite 5BB4  
                 PWM1_setDC@duty 005C                         Lcd_Cmd@a 0003  
                       _PIR2bits 000FA1                         i2u780_40 005C  
                       i2u780_41 0058                         i2u777_40 0018  
                       i2u777_41 0014                         i2u778_40 0026  
                       i2u778_41 0022                         i2u779_40 0042  
                       i2u779_41 003E                      ??_Lcd_Clear 0004  
                   _pauseIsClick 00FF              __size_of_startMotor 0036  
                      _vfpfcnvrt 2496                       _ADCON0bits 000FC2  
                     _ADCON2bits 000FC0                         _PWM_Init 5C0A  
              ___wmul@multiplier 0001                     ??_eepromRead 0001  
               ??_Lcd_Write_Char 0002                   PWM2_setDC@duty 005C  
                      _stopMotor 59F8             __end_of_stateMachine 1C90  
                   _isspace$2601 0007                         _Lcd_Port 575C  
                     vfpfcnvrt@c 00C6                       vfpfcnvrt@f 00BF  
              ___lmul@multiplier 0001                        copy_data0 57CC  
       __end_of_Lcd_Write_String 5404                 __size_of_Lcd_Cmd 001E  
                     _EECON1bits 000FA6                         __Hrparam 0000  
                     vfprintf@ap 00CB                         __Lrparam 0000  
                     vfprintf@fp 00C7               __end_of_eepromRead 5C96  
               __size_of___aodiv 0188                 __size_of___fladd 04C0  
               __size_of___aomod 0164                 __size_of_adcInit 003E  
               __size_of___fldiv 039A                 __size_of___awdiv 00C4  
               __size_of___flneg 0038                 __size_of___awmod 00B0  
               __size_of___flmul 042A                 __size_of___flsub 0046  
               __size_of___fltol 0106                 __size_of___lldiv 00A4  
                     ?_vfpfcnvrt 00A7                      _menuControl 54F8  
                ___aodiv@divisor 0009                  ___aodiv@counter 0011  
                     _ANSELAbits 000F38                       _ANSELBbits 000F39  
                     _ANSELCbits 000F3A                       _ANSELDbits 000F3B  
                     _ANSELEbits 000F3C               ___fpclassifyf@F463 0193  
                     sprintf@fmt 00D1                         ___xxtofl 40EE  
                     ?_stopMotor 0001                 __size_of_isdigit 0038  
               __size_of_isspace 0052                         __ptext10 1C90  
                       __ptext11 5938                         __ptext20 55D0  
                       __ptext12 3750                         __ptext21 2496  
                       __ptext13 5566                         __ptext30 58AE  
                       __ptext22 4DC8                         __ptext14 524C  
                       __ptext31 2ACC                         __ptext23 06D8  
                       __ptext15 5404                         __ptext40 4F68  
                       __ptext32 5A6C                         __ptext24 56A0  
                       __ptext16 547E                         __ptext41 5B4A  
                       __ptext33 2F8C                         __ptext25 5A34  
                       __ptext17 5B80                         __ptext50 5AA4  
                       __ptext42 58F4                         __ptext34 4ACC  
                       __ptext26 5700                         __ptext18 40EE  
                       __ptext51 5C32                         __ptext43 4E9E  
                       __ptext35 51A2                         __ptext27 3D1A  
                       __ptext19 580A                         __ptext60 5C0A  
                       __ptext52 5BB4                         __ptext44 5CEA  
                       __ptext36 33B6                         __ptext28 4BD0  
                       __ptext61 5CDC                         __ptext53 5386  
                       __ptext45 597A                         __ptext37 50F2  
                       __ptext29 49C6                         __ptext62 5C96  
                       __ptext54 5ADC                         __ptext46 473E  
                       __ptext38 502E                         __ptext63 575C  
                       __ptext55 563A                         __ptext47 4432  
                       __ptext39 3A36                         __ptext56 45BA  
                       __ptext48 42A2                         __ptext57 5CB4  
                       __ptext49 585C                         __ptext58 52F0  
                       __ptext59 59BA                 __size_of_isupper 0038  
                       _lcd_init 52F0                 __size_of_sprintf 0052  
               __size_of_tolower 0060                       strcpy@dest 0001  
               __size_of_strncmp 00D6                         _mcu_init 5CB4  
                  __size_of_atoi 0190                    __size_of_main 00FA  
                  __size_of_dtoa 02E4            __size_of_speedControl 01BE  
          __size_of_timer_0_init 0012                         efgtoa@fp 0058  
                       efgtoa@ne 0085                         efgtoa@pp 0081  
                       efgtoa@ou 006F                         int$flags 005F  
                       _vfprintf 55D0           readAdcValue@adcChannel 0005  
               ___aomod@dividend 0001                   _vfpfcnvrt$2534 00BD  
                 _vfpfcnvrt$2528 00B9                   _vfpfcnvrt$2529 00BB  
                    _OSCTUNEbits 000F9B                       _INTCONbits 000FF2  
   _KD@fs_speed_controller$F1180 01BB     _KD@fs_speed_controller$F1781 01AB  
   _KD@fs_speed_controller$F1597 01B3                         isdigit@c 0001  
                   _speedControl 3F30                     _timer_0_init 5CCA  
                   ??_startMotor 005E               Lcd_Write_Char@temp 0002  
                       intlevel2 0000                        sprintf@ap 00D9  
    __size_of_buttonControlFlags 0184                         isspace@c 0001  
               ___lldiv@dividend 0001                        strcpy@src 0003  
                       isupper@c 0001                        strncmp@_l 0001  
                      strncmp@_r 0003                       _OSCCONbits 000FD3  
                  ??_system_init 0002                      efgtoa@nmode 008D  
                   _procces_data 0130                  ___aomod@divisor 0009  
                    ??_vfpfcnvrt 00AD                  ___aomod@counter 0011  
             Lcd_Set_Cursor@temp 0008                 ??_menuInitialize 0001  
             __end_of_startMotor 5B4A            __size_of_stateMachine 09F2  
                       sprintf@f 00DB                         tolower@c 0007  
                       sprintf@s 00CF           __size_of___fpclassifyf 00FE  
               ___lldiv@quotient 0009                      ??_stopMotor 005E  
                       strncmp@l 0008                         strncmp@n 0005  
                       strncmp@r 000A                      _timer_value 00F3  
                  ___fladd@signs 0041                       _PWM1_setDC 547E  
                     _PWM2_setDC 5404                     ___aodiv@sign 0012  
                   ___fladd@aexp 0042                     ___fladd@bexp 0043  
                   ?_eepromWrite 0001                     ___aomod@sign 0012  
                   _stateMachine 129E  
