

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Aug 07 14:22:23 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    68                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    69                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    70                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    71  0000                     
    72                           ; Version 2.20
    73                           ; Generated 05/05/2020 GMT
    74                           ; 
    75                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC18F45K22 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106  0000                     
   107                           	psect	eeprom_data
   108  F00000  1E 02 04 00 00 00 00 00 	db	30,2,4,0,0,0,0,0	;# 
   109  0000                     
   110                           	psect	idataBANK0
   111  004A06                     __pidataBANK0:
   112                           	callstack 0
   113                           
   114                           ;initializer for _KD
   115  004A06  0000               	dw	0
   116  004A08  3F80               	dw	16256
   117                           
   118                           ;initializer for _KP
   119  004A0A  CCCD               	dw	52429
   120  004A0C  3E4C               	dw	15948
   121  0000                     _ANSELBbits	set	3897
   122  0000                     _ANSELCbits	set	3898
   123  0000                     _ANSELB	set	3897
   124  0000                     _ANSELDbits	set	3899
   125  0000                     _ANSELEbits	set	3900
   126  0000                     _ANSELAbits	set	3896
   127  0000                     _T0CON	set	4053
   128  0000                     _TMR0L	set	4054
   129  0000                     _TMR0H	set	4055
   130  0000                     _INTCONbits	set	4082
   131  0000                     _CCPR2L	set	3943
   132  0000                     _CCPR1L	set	4030
   133  0000                     _PR2	set	4027
   134  0000                     _TMR2	set	4028
   135  0000                     _T2CONbits	set	4026
   136  0000                     _CCP2CON	set	3942
   137  0000                     _CCP1CON	set	4029
   138  0000                     _LATEbits	set	3981
   139  0000                     _LATAbits	set	3977
   140  0000                     _LATBbits	set	3978
   141  0000                     _PORTBbits	set	3969
   142  0000                     _TRISCbits	set	3988
   143  0000                     _TRISBbits	set	3987
   144  0000                     _OSCTUNEbits	set	3995
   145  0000                     _OSCCONbits	set	4051
   146  0000                     _TRISDbits	set	3989
   147  0000                     _PORTAbits	set	3968
   148  0000                     _PORTEbits	set	3972
   149  0000                     _PORTDbits	set	3971
   150  0000                     _PIR2bits	set	4001
   151  0000                     _EECON2	set	4007
   152  0000                     _EEDATA	set	4008
   153  0000                     _EECON1bits	set	4006
   154  0000                     _EEADR	set	4009
   155  0000                     _ADCON2bits	set	4032
   156  0000                     _ADCON1	set	4033
   157  0000                     _ADCON0	set	4034
   158  0000                     _TRISEbits	set	3990
   159  0000                     _TRISAbits	set	3986
   160  0000                     _ADRESL	set	4035
   161  0000                     _ADRESH	set	4036
   162  0000                     _ADCON0bits	set	4034
   163                           
   164                           	psect	smallconst
   165  000600                     __psmallconst:
   166                           	callstack 0
   167  000600  00                 	db	0
   168  000601                     STR_4:
   169  000601  25                 	db	37
   170  000602  64                 	db	100	;'d'
   171  000603  20                 	db	32
   172  000604  20                 	db	32
   173  000605  20                 	db	32
   174  000606  20                 	db	32
   175  000607  20                 	db	32
   176  000608  20                 	db	32
   177  000609  20                 	db	32
   178  00060A  20                 	db	32
   179  00060B  20                 	db	32
   180  00060C  20                 	db	32
   181  00060D  20                 	db	32
   182  00060E  20                 	db	32
   183  00060F  20                 	db	32
   184  000610  20                 	db	32
   185  000611  20                 	db	32
   186  000612  00                 	db	0
   187  000613                     STR_13:
   188  000613  50                 	db	80	;'P'
   189  000614  49                 	db	73	;'I'
   190  000615  44                 	db	68	;'D'
   191  000616  20                 	db	32
   192  000617  50                 	db	80	;'P'
   193  000618  41                 	db	65	;'A'
   194  000619  52                 	db	82	;'R'
   195  00061A  41                 	db	65	;'A'
   196  00061B  4D                 	db	77	;'M'
   197  00061C  20                 	db	32
   198  00061D  20                 	db	32
   199  00061E  20                 	db	32
   200  00061F  20                 	db	32
   201  000620  20                 	db	32
   202  000621  20                 	db	32
   203  000622  20                 	db	32
   204  000623  00                 	db	0
   205  000624                     STR_7:
   206  000624  48                 	db	72	;'H'
   207  000625  49                 	db	73	;'I'
   208  000626  5A                 	db	90	;'Z'
   209  000627  20                 	db	32
   210  000628  4C                 	db	76	;'L'
   211  000629  69                 	db	105	;'i'
   212  00062A  4D                 	db	77	;'M'
   213  00062B  69                 	db	105	;'i'
   214  00062C  54                 	db	84	;'T'
   215  00062D  69                 	db	105	;'i'
   216  00062E  20                 	db	32
   217  00062F  20                 	db	32
   218  000630  20                 	db	32
   219  000631  20                 	db	32
   220  000632  20                 	db	32
   221  000633  20                 	db	32
   222  000634  00                 	db	0
   223  000635                     STR_1:
   224  000635  4B                 	db	75	;'K'
   225  000636  41                 	db	65	;'A'
   226  000637  4C                 	db	76	;'L'
   227  000638  41                 	db	65	;'A'
   228  000639  4E                 	db	78	;'N'
   229  00063A  20                 	db	32
   230  00063B  5A                 	db	90	;'Z'
   231  00063C  41                 	db	65	;'A'
   232  00063D  4D                 	db	77	;'M'
   233  00063E  41                 	db	65	;'A'
   234  00063F  4E                 	db	78	;'N'
   235  000640  20                 	db	32
   236  000641  20                 	db	32
   237  000642  20                 	db	32
   238  000643  20                 	db	32
   239  000644  20                 	db	32
   240  000645  00                 	db	0
   241  000646                     STR_9:
   242  000646  5A                 	db	90	;'Z'
   243  000647  41                 	db	65	;'A'
   244  000648  4D                 	db	77	;'M'
   245  000649  41                 	db	65	;'A'
   246  00064A  4E                 	db	78	;'N'
   247  00064B  20                 	db	32
   248  00064C  44                 	db	68	;'D'
   249  00064D  4F                 	db	79	;'O'
   250  00064E  4C                 	db	76	;'L'
   251  00064F  44                 	db	68	;'D'
   252  000650  55                 	db	85	;'U'
   253  000651  20                 	db	32
   254  000652  20                 	db	32
   255  000653  20                 	db	32
   256  000654  20                 	db	32
   257  000655  20                 	db	32
   258  000656  00                 	db	0
   259  000657                     STR_11:
   260  000657  48                 	db	72	;'H'
   261  000658  41                 	db	65	;'A'
   262  000659  52                 	db	82	;'R'
   263  00065A  45                 	db	69	;'E'
   264  00065B  4B                 	db	75	;'K'
   265  00065C  45                 	db	69	;'E'
   266  00065D  54                 	db	84	;'T'
   267  00065E  20                 	db	32
   268  00065F  44                 	db	68	;'D'
   269  000660  55                 	db	85	;'U'
   270  000661  52                 	db	82	;'R'
   271  000662  44                 	db	68	;'D'
   272  000663  55                 	db	85	;'U'
   273  000664  20                 	db	32
   274  000665  20                 	db	32
   275  000666  20                 	db	32
   276  000667  00                 	db	0
   277  000668                     STR_3:
   278  000668  48                 	db	72	;'H'
   279  000669  41                 	db	65	;'A'
   280  00066A  52                 	db	82	;'R'
   281  00066B  45                 	db	69	;'E'
   282  00066C  4B                 	db	75	;'K'
   283  00066D  54                 	db	84	;'T'
   284  00066E  20                 	db	32
   285  00066F  5A                 	db	90	;'Z'
   286  000670  41                 	db	65	;'A'
   287  000671  4D                 	db	77	;'M'
   288  000672  41                 	db	65	;'A'
   289  000673  4E                 	db	78	;'N'
   290  000674  49                 	db	73	;'I'
   291  000675  20                 	db	32
   292  000676  64                 	db	100	;'d'
   293  000677  6B                 	db	107	;'k'
   294  000678  00                 	db	0
   295  000679                     STR_5:
   296  000679  44                 	db	68	;'D'
   297  00067A  55                 	db	85	;'U'
   298  00067B  52                 	db	82	;'R'
   299  00067C  4D                 	db	77	;'M'
   300  00067D  41                 	db	65	;'A'
   301  00067E  20                 	db	32
   302  00067F  5A                 	db	90	;'Z'
   303  000680  41                 	db	65	;'A'
   304  000681  4D                 	db	77	;'M'
   305  000682  41                 	db	65	;'A'
   306  000683  4E                 	db	78	;'N'
   307  000684  49                 	db	73	;'I'
   308  000685  20                 	db	32
   309  000686  20                 	db	32
   310  000687  6D                 	db	109	;'m'
   311  000688  73                 	db	115	;'s'
   312  000689  00                 	db	0
   313  00068A                     STR_10:
   314  00068A  20                 	db	32
   315  00068B  20                 	db	32
   316  00068C  20                 	db	32
   317  00068D  20                 	db	32
   318  00068E  20                 	db	32
   319  00068F  20                 	db	32
   320  000690  25                 	db	37
   321  000691  64                 	db	100	;'d'
   322  000692  3A                 	db	58	;':'
   323  000693  25                 	db	37
   324  000694  64                 	db	100	;'d'
   325  000695  20                 	db	32
   326  000696  20                 	db	32
   327  000697  20                 	db	32
   328  000698  20                 	db	32
   329  000699  00                 	db	0
   330  00069A                     STR_2:
   331  00069A  20                 	db	32
   332  00069B  20                 	db	32
   333  00069C  20                 	db	32
   334  00069D  20                 	db	32
   335  00069E  20                 	db	32
   336  00069F  20                 	db	32
   337  0006A0  25                 	db	37
   338  0006A1  64                 	db	100	;'d'
   339  0006A2  3A                 	db	58	;':'
   340  0006A3  25                 	db	37
   341  0006A4  64                 	db	100	;'d'
   342  0006A5  20                 	db	32
   343  0006A6  20                 	db	32
   344  0006A7  20                 	db	32
   345  0006A8  00                 	db	0
   346  0006A9                     STR_14:
   347  0006A9  4B                 	db	75	;'K'
   348  0006AA  70                 	db	112	;'p'
   349  0006AB  3A                 	db	58	;':'
   350  0006AC  25                 	db	37
   351  0006AD  35                 	db	53	;'5'
   352  0006AE  2E                 	db	46
   353  0006AF  31                 	db	49	;'1'
   354  0006B0  66                 	db	102	;'f'
   355  0006B1  20                 	db	32
   356  0006B2  20                 	db	32
   357  0006B3  20                 	db	32
   358  0006B4  20                 	db	32
   359  0006B5  20                 	db	32
   360  0006B6  00                 	db	0
   361  0006B7                     STR_16:
   362  0006B7  4B                 	db	75	;'K'
   363  0006B8  64                 	db	100	;'d'
   364  0006B9  3A                 	db	58	;':'
   365  0006BA  25                 	db	37
   366  0006BB  35                 	db	53	;'5'
   367  0006BC  2E                 	db	46
   368  0006BD  31                 	db	49	;'1'
   369  0006BE  66                 	db	102	;'f'
   370  0006BF  20                 	db	32
   371  0006C0  20                 	db	32
   372  0006C1  20                 	db	32
   373  0006C2  20                 	db	32
   374  0006C3  00                 	db	0
   375  0006C4                     STR_17:
   376  0006C4  49                 	db	73	;'I'
   377  0006C5  4E                 	db	78	;'N'
   378  0006C6  46                 	db	70	;'F'
   379  0006C7  00                 	db	0
   380  0006C8                     STR_21:
   381  0006C8  4E                 	db	78	;'N'
   382  0006C9  41                 	db	65	;'A'
   383  0006CA  4E                 	db	78	;'N'
   384  0006CB  00                 	db	0
   385  0006CC                     STR_18:
   386  0006CC  69                 	db	105	;'i'
   387  0006CD  6E                 	db	110	;'n'
   388  0006CE  66                 	db	102	;'f'
   389  0006CF  00                 	db	0
   390  0006D0                     STR_22:
   391  0006D0  6E                 	db	110	;'n'
   392  0006D1  61                 	db	97	;'a'
   393  0006D2  6E                 	db	110	;'n'
   394  0006D3  00                 	db	0
   395  0006D4                     STR_25:
   396  0006D4  6C                 	db	108	;'l'
   397  0006D5  66                 	db	102	;'f'
   398  0006D6  00                 	db	0
   399  0006D7  00                 	db	0	; dummy byte at the end
   400  0000                     
   401                           ; #config settings
   402                           
   403                           	psect	cinit
   404  0046F6                     __pcinit:
   405                           	callstack 0
   406  0046F6                     start_initialization:
   407                           	callstack 0
   408  0046F6                     __initialization:
   409                           	callstack 0
   410                           
   411                           ; Initialize objects allocated to BANK0 (8 bytes)
   412                           ; load TBLPTR registers with __pidataBANK0
   413  0046F6  0E06               	movlw	low __pidataBANK0
   414  0046F8  6EF6               	movwf	tblptrl,c
   415  0046FA  0E4A               	movlw	high __pidataBANK0
   416  0046FC  6EF7               	movwf	tblptrh,c
   417  0046FE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   418  004700  6EF8               	movwf	tblptru,c
   419  004702  EE00  F0F6         	lfsr	0,__pdataBANK0
   420  004706  EE10 F008          	lfsr	1,8
   421  00470A                     copy_data0:
   422  00470A  0009               	tblrd		*+
   423  00470C  CFF5 FFEE          	movff	tablat,postinc0
   424  004710  50E5               	movf	postdec1,w,c
   425  004712  50E1               	movf	fsr1l,w,c
   426  004714  E1FA               	bnz	copy_data0
   427                           
   428                           ; Clear objects allocated to BANK1 (251 bytes)
   429  004716  EE01  F000         	lfsr	0,__pbssBANK1
   430  00471A  0EFB               	movlw	251
   431  00471C                     clear_0:
   432  00471C  6AEE               	clrf	postinc0,c
   433  00471E  06E8               	decf	wreg,f,c
   434  004720  E1FD               	bnz	clear_0
   435                           
   436                           ; Clear objects allocated to BANK0 (48 bytes)
   437  004722  EE00  F0C6         	lfsr	0,__pbssBANK0
   438  004726  0E30               	movlw	48
   439  004728                     clear_1:
   440  004728  6AEE               	clrf	postinc0,c
   441  00472A  06E8               	decf	wreg,f,c
   442  00472C  E1FD               	bnz	clear_1
   443                           
   444                           ; Clear objects allocated to COMRAM (1 bytes)
   445  00472E  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   446  004730                     end_of_initialization:
   447                           	callstack 0
   448  004730                     __end_of__initialization:
   449                           	callstack 0
   450  004730  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   451  004732  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   452  004734  0E00               	movlw	low (__Lmediumconst shr (0+16))
   453  004736  6EF8               	movwf	tblptru,c
   454  004738  0100               	movlb	0
   455  00473A  EF41  F01F         	goto	_main	;jump to C main() function
   456                           
   457                           	psect	bssCOMRAM
   458  00005E                     __pbssCOMRAM:
   459                           	callstack 0
   460  00005E                     _button_bounce_controller:
   461                           	callstack 0
   462  00005E                     	ds	1
   463                           
   464                           	psect	bssBANK0
   465  0000C6                     __pbssBANK0:
   466                           	callstack 0
   467  0000C6                     _driver_limit:
   468                           	callstack 0
   469  0000C6                     	ds	12
   470  0000D2                     _timer_value:
   471                           	callstack 0
   472  0000D2                     	ds	10
   473  0000DC                     floorf@F524:
   474                           	callstack 0
   475  0000DC                     	ds	4
   476  0000E0                     ___fpclassifyf@F463:
   477                           	callstack 0
   478  0000E0                     	ds	4
   479  0000E4                     _menu_value:
   480                           	callstack 0
   481  0000E4                     	ds	3
   482  0000E7                     _nout:
   483                           	callstack 0
   484  0000E7                     	ds	2
   485  0000E9                     _width:
   486                           	callstack 0
   487  0000E9                     	ds	2
   488  0000EB                     _prec:
   489                           	callstack 0
   490  0000EB                     	ds	2
   491  0000ED                     _flags:
   492                           	callstack 0
   493  0000ED                     	ds	2
   494  0000EF                     stateMachine@secretMenuCounter:
   495                           	callstack 0
   496  0000EF                     	ds	1
   497  0000F0                     _menu_flags:
   498                           	callstack 0
   499  0000F0                     	ds	1
   500  0000F1                     _menu_selected:
   501                           	callstack 0
   502  0000F1                     	ds	1
   503  0000F2                     _stopIsClick:
   504                           	callstack 0
   505  0000F2                     	ds	1
   506  0000F3                     _startIsClick:
   507                           	callstack 0
   508  0000F3                     	ds	1
   509  0000F4                     _pauseIsClick:
   510                           	callstack 0
   511  0000F4                     	ds	1
   512  0000F5                     _timer_counter_flag:
   513                           	callstack 0
   514  0000F5                     	ds	1
   515                           
   516                           	psect	dataBANK0
   517  0000F6                     __pdataBANK0:
   518                           	callstack 0
   519  0000F6                     _KD:
   520                           	callstack 0
   521  0000F6                     	ds	4
   522  0000FA                     _KP:
   523                           	callstack 0
   524  0000FA                     	ds	4
   525                           
   526                           	psect	bssBANK1
   527  000100                     __pbssBANK1:
   528                           	callstack 0
   529  000100                     _convert_data:
   530                           	callstack 0
   531  000100                     	ds	48
   532  000130                     _procces_data:
   533                           	callstack 0
   534  000130                     	ds	32
   535  000150                     _controller:
   536                           	callstack 0
   537  000150                     	ds	19
   538  000163                     	ds	16
   539  000173                     	ds	16
   540  000183                     _textCursor2:
   541                           	callstack 0
   542  000183                     	ds	16
   543  000193                     _adc_raw_data:
   544                           	callstack 0
   545  000193                     	ds	16
   546  0001A3                     fabsf@F463:
   547                           	callstack 0
   548  0001A3                     	ds	4
   549  0001A7                     _counter:
   550                           	callstack 0
   551  0001A7                     	ds	4
   552  0001AB                     _dbuf:
   553                           	callstack 0
   554  0001AB                     	ds	80
   555                           
   556                           	psect	cstackBANK0
   557  000060                     __pcstackBANK0:
   558                           	callstack 0
   559  000060                     efgtoa@ou:
   560                           	callstack 0
   561                           
   562                           ; 4 bytes @ 0x0
   563  000060                     	ds	4
   564  000064                     _efgtoa$2869:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x4
   568  000064                     	ds	2
   569  000066                     _efgtoa$2870:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x6
   573  000066                     	ds	2
   574  000068                     _efgtoa$2874:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x8
   578  000068                     	ds	2
   579  00006A                     _efgtoa$2878:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0xA
   583  00006A                     	ds	2
   584  00006C                     _efgtoa$2879:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0xC
   588  00006C                     	ds	2
   589  00006E                     _efgtoa$2880:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0xE
   593  00006E                     	ds	2
   594  000070                     efgtoa@t:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x10
   598  000070                     	ds	2
   599  000072                     efgtoa@pp:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x12
   603  000072                     	ds	2
   604  000074                     efgtoa@m:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x14
   608  000074                     	ds	2
   609  000076                     efgtoa@ne:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x16
   613  000076                     	ds	2
   614  000078                     efgtoa@d:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x18
   618  000078                     	ds	2
   619  00007A                     efgtoa@sign:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x1A
   623  00007A                     	ds	2
   624  00007C                     efgtoa@p:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x1C
   628  00007C                     	ds	2
   629  00007E                     efgtoa@nmode:
   630                           	callstack 0
   631                           
   632                           ; 1 bytes @ 0x1E
   633  00007E                     	ds	1
   634  00007F                     efgtoa@w:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x1F
   638  00007F                     	ds	2
   639  000081                     efgtoa@mode:
   640                           	callstack 0
   641                           
   642                           ; 1 bytes @ 0x21
   643  000081                     	ds	1
   644  000082                     efgtoa@h:
   645                           	callstack 0
   646                           
   647                           ; 4 bytes @ 0x22
   648  000082                     	ds	4
   649  000086                     efgtoa@l:
   650                           	callstack 0
   651                           
   652                           ; 4 bytes @ 0x26
   653  000086                     	ds	4
   654  00008A                     efgtoa@i:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x2A
   658  00008A                     	ds	2
   659  00008C                     efgtoa@g:
   660                           	callstack 0
   661                           
   662                           ; 4 bytes @ 0x2C
   663  00008C                     	ds	4
   664  000090                     efgtoa@e:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x30
   668  000090                     	ds	2
   669  000092                     efgtoa@n:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x32
   673  000092                     	ds	2
   674  000094                     efgtoa@u:
   675                           	callstack 0
   676                           
   677                           ; 4 bytes @ 0x34
   678  000094                     	ds	4
   679  000098                     vfpfcnvrt@ll:
   680                           	callstack 0
   681                           
   682                           ; 8 bytes @ 0x38
   683  000098                     	ds	8
   684  0000A0                     _vfpfcnvrt$2894:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x40
   688  0000A0                     	ds	2
   689  0000A2                     _vfpfcnvrt$2895:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x42
   693  0000A2                     	ds	2
   694  0000A4                     _vfpfcnvrt$2900:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x44
   698  0000A4                     	ds	2
   699  0000A6                     vfpfcnvrt@f:
   700                           	callstack 0
   701                           
   702                           ; 4 bytes @ 0x46
   703  0000A6                     	ds	4
   704  0000AA                     vfpfcnvrt@ct:
   705                           	callstack 0
   706                           
   707                           ; 3 bytes @ 0x4A
   708  0000AA                     	ds	3
   709  0000AD                     vfpfcnvrt@c:
   710                           	callstack 0
   711                           
   712                           ; 1 bytes @ 0x4D
   713  0000AD                     	ds	1
   714  0000AE                     ?_sprintf:
   715                           	callstack 0
   716  0000AE                     sprintf@s:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0x4E
   720  0000AE                     	ds	2
   721  0000B0                     sprintf@fmt:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x50
   725  0000B0                     	ds	6
   726  0000B6                     stateMachine@textCursor2:
   727                           	callstack 0
   728                           
   729                           ; 16 bytes @ 0x56
   730  0000B6                     	ds	16
   731                           
   732                           	psect	cstackCOMRAM
   733  000001                     __pcstackCOMRAM:
   734                           	callstack 0
   735  000001                     ?_strlen:
   736                           	callstack 0
   737  000001                     ?___fpclassifyf:
   738                           	callstack 0
   739  000001                     ?_isupper:
   740                           	callstack 0
   741  000001                     ?_isdigit:
   742                           	callstack 0
   743  000001                     ?_strncmp:
   744                           	callstack 0
   745  000001                     ?_isspace:
   746                           	callstack 0
   747  000001                     ?___wmul:
   748                           	callstack 0
   749  000001                     ?___awdiv:
   750                           	callstack 0
   751  000001                     ?___awmod:
   752                           	callstack 0
   753  000001                     ?___fladd:
   754                           	callstack 0
   755  000001                     ?___fldiv:
   756                           	callstack 0
   757  000001                     ?___flmul:
   758                           	callstack 0
   759  000001                     ?___flneg:
   760                           	callstack 0
   761  000001                     ?___fltol:
   762                           	callstack 0
   763  000001                     ?___aodiv:
   764                           	callstack 0
   765  000001                     ?___aomod:
   766                           	callstack 0
   767  000001                     eepromRead@address:
   768                           	callstack 0
   769  000001                     eepromWrite@data:
   770                           	callstack 0
   771  000001                     Lcd_Port@a:
   772                           	callstack 0
   773  000001                     ___wmul@multiplier:
   774                           	callstack 0
   775  000001                     ___awdiv@dividend:
   776                           	callstack 0
   777  000001                     ___awmod@dividend:
   778                           	callstack 0
   779  000001                     isdigit@c:
   780                           	callstack 0
   781  000001                     isspace@c:
   782                           	callstack 0
   783  000001                     isupper@c:
   784                           	callstack 0
   785  000001                     fputc@c:
   786                           	callstack 0
   787  000001                     strcpy@dest:
   788                           	callstack 0
   789  000001                     strlen@s:
   790                           	callstack 0
   791  000001                     strncmp@_l:
   792                           	callstack 0
   793  000001                     ___fleq@ff1:
   794                           	callstack 0
   795  000001                     ___flneg@f1:
   796                           	callstack 0
   797  000001                     ___fltol@f1:
   798                           	callstack 0
   799  000001                     ___fladd@b:
   800                           	callstack 0
   801  000001                     ___fldiv@b:
   802                           	callstack 0
   803  000001                     ___flmul@b:
   804                           	callstack 0
   805  000001                     ___fpclassifyf@x:
   806                           	callstack 0
   807  000001                     ___aodiv@dividend:
   808                           	callstack 0
   809  000001                     ___aomod@dividend:
   810                           	callstack 0
   811  000001                     buttonControlFlags@textCursor2:
   812                           	callstack 0
   813                           
   814                           ; 16 bytes @ 0x0
   815  000001                     	ds	1
   816  000002                     ??_system_init:
   817  000002                     ??_Lcd_Cmd:
   818  000002                     eepromWrite@address:
   819                           	callstack 0
   820  000002                     Lcd_Write_Char@temp:
   821                           	callstack 0
   822                           
   823                           ; 1 bytes @ 0x1
   824  000002                     	ds	1
   825  000003                     ??_isupper:
   826  000003                     ??_isdigit:
   827  000003                     ??_isspace:
   828  000003                     Lcd_Cmd@a:
   829                           	callstack 0
   830  000003                     Lcd_Write_Char@y:
   831                           	callstack 0
   832  000003                     ___wmul@multiplicand:
   833                           	callstack 0
   834  000003                     ___awdiv@divisor:
   835                           	callstack 0
   836  000003                     ___awmod@divisor:
   837                           	callstack 0
   838  000003                     fputc@fp:
   839                           	callstack 0
   840  000003                     strcpy@src:
   841                           	callstack 0
   842  000003                     strlen@a:
   843                           	callstack 0
   844  000003                     strncmp@_r:
   845                           	callstack 0
   846                           
   847                           ; 2 bytes @ 0x2
   848  000003                     	ds	1
   849  000004                     ??_lcd_init:
   850  000004                     Lcd_Set_Cursor@b:
   851                           	callstack 0
   852  000004                     Lcd_Write_Char@a:
   853                           	callstack 0
   854                           
   855                           ; 1 bytes @ 0x3
   856  000004                     	ds	1
   857  000005                     ??_fputc:
   858  000005                     ??___fpclassifyf:
   859  000005                     ??_strcpy:
   860  000005                     ??___fltol:
   861  000005                     Lcd_Set_Cursor@a:
   862                           	callstack 0
   863  000005                     ___awdiv@counter:
   864                           	callstack 0
   865  000005                     ___awmod@counter:
   866                           	callstack 0
   867  000005                     Lcd_Write_String@a:
   868                           	callstack 0
   869  000005                     ___wmul@product:
   870                           	callstack 0
   871  000005                     strncmp@n:
   872                           	callstack 0
   873  000005                     ___fleq@ff2:
   874                           	callstack 0
   875  000005                     ___fladd@a:
   876                           	callstack 0
   877  000005                     ___fldiv@a:
   878                           	callstack 0
   879  000005                     ___flmul@a:
   880                           	callstack 0
   881                           
   882                           ; 4 bytes @ 0x4
   883  000005                     	ds	1
   884  000006                     Lcd_Set_Cursor@z:
   885                           	callstack 0
   886  000006                     ___awdiv@sign:
   887                           	callstack 0
   888  000006                     ___awmod@sign:
   889                           	callstack 0
   890                           
   891                           ; 1 bytes @ 0x5
   892  000006                     	ds	1
   893  000007                     ??_strncmp:
   894  000007                     ??_Lcd_Write_String:
   895  000007                     ?_tolower:
   896                           	callstack 0
   897  000007                     Lcd_Set_Cursor@y:
   898                           	callstack 0
   899  000007                     _isspace$2967:
   900                           	callstack 0
   901  000007                     ___awdiv@quotient:
   902                           	callstack 0
   903  000007                     strcpy@s:
   904                           	callstack 0
   905  000007                     tolower@c:
   906                           	callstack 0
   907                           
   908                           ; 2 bytes @ 0x6
   909  000007                     	ds	1
   910  000008                     ?_atoi:
   911                           	callstack 0
   912  000008                     Lcd_Set_Cursor@temp:
   913                           	callstack 0
   914  000008                     atoi@s:
   915                           	callstack 0
   916  000008                     strncmp@l:
   917                           	callstack 0
   918                           
   919                           ; 2 bytes @ 0x7
   920  000008                     	ds	1
   921  000009                     ??___fladd:
   922  000009                     ??___fldiv:
   923  000009                     ??___flmul:
   924  000009                     ??_tolower:
   925  000009                     ??___fleq:
   926  000009                     ___fltol@sign1:
   927                           	callstack 0
   928  000009                     Lcd_Write_String@i:
   929                           	callstack 0
   930  000009                     ___fpclassifyf@e:
   931                           	callstack 0
   932  000009                     strcpy@d:
   933                           	callstack 0
   934  000009                     ___aodiv@divisor:
   935                           	callstack 0
   936  000009                     ___aomod@divisor:
   937                           	callstack 0
   938                           
   939                           ; 8 bytes @ 0x8
   940  000009                     	ds	1
   941  00000A                     ??_atoi:
   942  00000A                     ___fltol@exp1:
   943                           	callstack 0
   944  00000A                     fputs@s:
   945                           	callstack 0
   946  00000A                     strncmp@r:
   947                           	callstack 0
   948                           
   949                           ; 2 bytes @ 0x9
   950  00000A                     	ds	1
   951  00000B                     ___fpclassifyf@u:
   952                           	callstack 0
   953                           
   954                           ; 4 bytes @ 0xA
   955  00000B                     	ds	1
   956  00000C                     fputs@fp:
   957                           	callstack 0
   958                           
   959                           ; 2 bytes @ 0xB
   960  00000C                     	ds	1
   961  00000D                     ___fladd@signs:
   962                           	callstack 0
   963  00000D                     ___flmul@sign:
   964                           	callstack 0
   965  00000D                     _tolower$3031:
   966                           	callstack 0
   967  00000D                     ___fldiv@rem:
   968                           	callstack 0
   969                           
   970                           ; 4 bytes @ 0xC
   971  00000D                     	ds	1
   972  00000E                     ___fladd@aexp:
   973                           	callstack 0
   974  00000E                     fputs@c:
   975                           	callstack 0
   976  00000E                     atoi@neg:
   977                           	callstack 0
   978  00000E                     ___flmul@grs:
   979                           	callstack 0
   980                           
   981                           ; 4 bytes @ 0xD
   982  00000E                     	ds	1
   983  00000F                     ___fladd@bexp:
   984                           	callstack 0
   985  00000F                     fputs@i:
   986                           	callstack 0
   987                           
   988                           ; 2 bytes @ 0xE
   989  00000F                     	ds	1
   990  000010                     ___fladd@grs:
   991                           	callstack 0
   992  000010                     _atoi$2936:
   993                           	callstack 0
   994                           
   995                           ; 2 bytes @ 0xF
   996  000010                     	ds	1
   997  000011                     ?_pad:
   998                           	callstack 0
   999  000011                     ___aodiv@counter:
  1000                           	callstack 0
  1001  000011                     ___aomod@counter:
  1002                           	callstack 0
  1003  000011                     ___fldiv@sign:
  1004                           	callstack 0
  1005  000011                     pad@fp:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x10
  1009  000011                     	ds	1
  1010  000012                     ___aodiv@sign:
  1011                           	callstack 0
  1012  000012                     ___aomod@sign:
  1013                           	callstack 0
  1014  000012                     ___flmul@aexp:
  1015                           	callstack 0
  1016  000012                     ___fldiv@new_exp:
  1017                           	callstack 0
  1018  000012                     _atoi$2938:
  1019                           	callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x11
  1022  000012                     	ds	1
  1023  000013                     ?_abs:
  1024                           	callstack 0
  1025  000013                     ___flmul@bexp:
  1026                           	callstack 0
  1027  000013                     pad@buf:
  1028                           	callstack 0
  1029  000013                     abs@a:
  1030                           	callstack 0
  1031  000013                     ___aodiv@quotient:
  1032                           	callstack 0
  1033                           
  1034                           ; 8 bytes @ 0x12
  1035  000013                     	ds	1
  1036  000014                     _atoi$2937:
  1037                           	callstack 0
  1038  000014                     ___fldiv@grs:
  1039                           	callstack 0
  1040  000014                     ___flmul@prod:
  1041                           	callstack 0
  1042                           
  1043                           ; 4 bytes @ 0x13
  1044  000014                     	ds	1
  1045  000015                     ??_abs:
  1046  000015                     pad@p:
  1047                           	callstack 0
  1048  000015                     atoi@n:
  1049                           	callstack 0
  1050                           
  1051                           ; 2 bytes @ 0x14
  1052  000015                     	ds	2
  1053  000017                     ??_pad:
  1054                           
  1055                           ; 1 bytes @ 0x16
  1056  000017                     	ds	1
  1057  000018                     ___fldiv@bexp:
  1058                           	callstack 0
  1059  000018                     ___flmul@temp:
  1060                           	callstack 0
  1061  000018                     pad@i:
  1062                           	callstack 0
  1063                           
  1064                           ; 2 bytes @ 0x17
  1065  000018                     	ds	1
  1066  000019                     ___fldiv@aexp:
  1067                           	callstack 0
  1068                           
  1069                           ; 1 bytes @ 0x18
  1070  000019                     	ds	1
  1071  00001A                     ?___flsub:
  1072                           	callstack 0
  1073  00001A                     ?_floorf:
  1074                           	callstack 0
  1075  00001A                     pad@w:
  1076                           	callstack 0
  1077  00001A                     ___flge@ff1:
  1078                           	callstack 0
  1079  00001A                     ___flsub@b:
  1080                           	callstack 0
  1081  00001A                     floorf@x:
  1082                           	callstack 0
  1083                           
  1084                           ; 4 bytes @ 0x19
  1085  00001A                     	ds	2
  1086  00001C                     ?_dtoa:
  1087                           	callstack 0
  1088  00001C                     dtoa@fp:
  1089                           	callstack 0
  1090                           
  1091                           ; 2 bytes @ 0x1B
  1092  00001C                     	ds	2
  1093  00001E                     ??_floorf:
  1094  00001E                     ___flge@ff2:
  1095                           	callstack 0
  1096  00001E                     ___flsub@a:
  1097                           	callstack 0
  1098  00001E                     dtoa@d:
  1099                           	callstack 0
  1100                           
  1101                           ; 8 bytes @ 0x1D
  1102  00001E                     	ds	4
  1103  000022                     ??___flge:
  1104                           
  1105                           ; 1 bytes @ 0x21
  1106  000022                     	ds	2
  1107  000024                     floorf@m:
  1108                           	callstack 0
  1109                           
  1110                           ; 4 bytes @ 0x23
  1111  000024                     	ds	2
  1112  000026                     ??_dtoa:
  1113                           
  1114                           ; 1 bytes @ 0x25
  1115  000026                     	ds	2
  1116  000028                     floorf@e:
  1117                           	callstack 0
  1118                           
  1119                           ; 2 bytes @ 0x27
  1120  000028                     	ds	2
  1121  00002A                     floorf@u:
  1122                           	callstack 0
  1123                           
  1124                           ; 4 bytes @ 0x29
  1125  00002A                     	ds	4
  1126  00002E                     ?_efgtoa:
  1127                           	callstack 0
  1128  00002E                     _dtoa$2845:
  1129                           	callstack 0
  1130  00002E                     efgtoa@fp:
  1131                           	callstack 0
  1132                           
  1133                           ; 2 bytes @ 0x2D
  1134  00002E                     	ds	2
  1135  000030                     dtoa@p:
  1136                           	callstack 0
  1137  000030                     efgtoa@f:
  1138                           	callstack 0
  1139                           
  1140                           ; 4 bytes @ 0x2F
  1141  000030                     	ds	2
  1142  000032                     dtoa@w:
  1143                           	callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x31
  1146  000032                     	ds	2
  1147  000034                     efgtoa@c:
  1148                           	callstack 0
  1149  000034                     dtoa@s:
  1150                           	callstack 0
  1151                           
  1152                           ; 2 bytes @ 0x33
  1153  000034                     	ds	1
  1154  000035                     ??_efgtoa:
  1155                           
  1156                           ; 1 bytes @ 0x34
  1157  000035                     	ds	1
  1158  000036                     dtoa@n:
  1159                           	callstack 0
  1160                           
  1161                           ; 8 bytes @ 0x35
  1162  000036                     	ds	8
  1163  00003E                     dtoa@i:
  1164                           	callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x3D
  1167  00003E                     	ds	2
  1168  000040                     ?_vfpfcnvrt:
  1169                           	callstack 0
  1170  000040                     vfpfcnvrt@fp:
  1171                           	callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x3F
  1174  000040                     	ds	2
  1175  000042                     vfpfcnvrt@fmt:
  1176                           	callstack 0
  1177                           
  1178                           ; 2 bytes @ 0x41
  1179  000042                     	ds	2
  1180  000044                     vfpfcnvrt@ap:
  1181                           	callstack 0
  1182                           
  1183                           ; 2 bytes @ 0x43
  1184  000044                     	ds	2
  1185  000046                     ??_vfpfcnvrt:
  1186                           
  1187                           ; 1 bytes @ 0x45
  1188  000046                     	ds	4
  1189  00004A                     ?_vfprintf:
  1190                           	callstack 0
  1191  00004A                     vfprintf@fp:
  1192                           	callstack 0
  1193                           
  1194                           ; 2 bytes @ 0x49
  1195  00004A                     	ds	2
  1196  00004C                     vfprintf@fmt:
  1197                           	callstack 0
  1198                           
  1199                           ; 2 bytes @ 0x4B
  1200  00004C                     	ds	2
  1201  00004E                     vfprintf@ap:
  1202                           	callstack 0
  1203                           
  1204                           ; 2 bytes @ 0x4D
  1205  00004E                     	ds	2
  1206  000050                     vfprintf@cfmt:
  1207                           	callstack 0
  1208                           
  1209                           ; 2 bytes @ 0x4F
  1210  000050                     	ds	2
  1211  000052                     
  1212                           ; 1 bytes @ 0x51
  1213  000052                     	ds	2
  1214  000054                     sprintf@ap:
  1215                           	callstack 0
  1216                           
  1217                           ; 2 bytes @ 0x53
  1218  000054                     	ds	2
  1219  000056                     sprintf@f:
  1220                           	callstack 0
  1221                           
  1222                           ; 6 bytes @ 0x55
  1223  000056                     	ds	6
  1224  00005C                     ??_stateMachine:
  1225                           
  1226                           ; 1 bytes @ 0x5B
  1227  00005C                     	ds	2
  1228  00005E                     
  1229                           ; 1 bytes @ 0x5D
  1230 ;;
  1231 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1232 ;;
  1233 ;; *************** function _main *****************
  1234 ;; Defined at:
  1235 ;;		line 43 in file "fs_main.c"
  1236 ;; Parameters:    Size  Location     Type
  1237 ;;		None
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;		None
  1240 ;; Return value:  Size  Location     Type
  1241 ;;                  1    wreg      void 
  1242 ;; Registers used:
  1243 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1244 ;; Tracked objects:
  1245 ;;		On entry : 0/0
  1246 ;;		On exit  : 0/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1249 ;;      Params:         0       0       0       0       0       0       0
  1250 ;;      Locals:         0       0       0       0       0       0       0
  1251 ;;      Temps:          0       0       0       0       0       0       0
  1252 ;;      Totals:         0       0       0       0       0       0       0
  1253 ;;Total ram usage:        0 bytes
  1254 ;; Hardware stack levels required when called:   11
  1255 ;; This function calls:
  1256 ;;		_Lcd_Clear
  1257 ;;		_lcd_init
  1258 ;;		_mcu_init
  1259 ;;		_menuControl
  1260 ;;		_menuInitialize
  1261 ;;		_system_init
  1262 ;;		_timer_0_init
  1263 ;; This function is called by:
  1264 ;;		Startup code after reset
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268                           	psect	text0
  1269  003E82                     __ptext0:
  1270                           	callstack 0
  1271  003E82                     _main:
  1272                           	callstack 20
  1273  003E82                     
  1274                           ;fs_main.c: 45:     mcu_init();
  1275  003E82  ECE8  F024         	call	_mcu_init	;wreg free
  1276  003E86                     
  1277                           ;fs_main.c: 46:     menuInitialize();
  1278  003E86  ECB8  F024         	call	_menuInitialize	;wreg free
  1279  003E8A                     
  1280                           ;fs_main.c: 50:     timer_0_init();
  1281  003E8A  ECF3  F024         	call	_timer_0_init	;wreg free
  1282  003E8E                     
  1283                           ;fs_main.c: 51:     lcd_init();
  1284  003E8E  EC80  F021         	call	_lcd_init	;wreg free
  1285  003E92                     
  1286                           ;fs_main.c: 52:     system_init();
  1287  003E92  ECC0  F01C         	call	_system_init	;wreg free
  1288  003E96                     
  1289                           ;fs_main.c: 53:     Lcd_Clear();
  1290  003E96  ECFC  F024         	call	_Lcd_Clear	;wreg free
  1291  003E9A                     l5894:
  1292                           
  1293                           ;fs_main.c: 61: {;fs_main.c: 63:     if (timer_counter_flag.one_second_flag == 1)
  1294  003E9A  0100               	movlb	0	; () banked
  1295  003E9C  A1F5               	btfss	_timer_counter_flag& (0+255),0,b
  1296  003E9E  EF53  F01F         	goto	u7341
  1297  003EA2  EF55  F01F         	goto	u7340
  1298  003EA6                     u7341:
  1299  003EA6  EFA3  F01F         	goto	l5920
  1300  003EAA                     u7340:
  1301  003EAA                     
  1302                           ; BSR set to: 0
  1303                           ;fs_main.c: 64:     {;fs_main.c: 65:         timer_counter_flag.one_second_flag = 0;
  1304  003EAA  91F5               	bcf	_timer_counter_flag& (0+255),0,b
  1305  003EAC                     
  1306                           ; BSR set to: 0
  1307                           ;fs_main.c: 67:         if ( (startIsClick == 1) && (pauseIsClick == 0) && (stopIsClick 
      +                          == 0) && (menu_selected == MAIN_MENU) )
  1308  003EAC  05F3               	decf	_startIsClick& (0+255),w,b
  1309  003EAE  A4D8               	btfss	status,2,c
  1310  003EB0  EF5C  F01F         	goto	u7351
  1311  003EB4  EF5E  F01F         	goto	u7350
  1312  003EB8                     u7351:
  1313  003EB8  EFA3  F01F         	goto	l5920
  1314  003EBC                     u7350:
  1315  003EBC                     
  1316                           ; BSR set to: 0
  1317  003EBC  51F4               	movf	_pauseIsClick& (0+255),w,b
  1318  003EBE  A4D8               	btfss	status,2,c
  1319  003EC0  EF64  F01F         	goto	u7361
  1320  003EC4  EF66  F01F         	goto	u7360
  1321  003EC8                     u7361:
  1322  003EC8  EFA3  F01F         	goto	l5920
  1323  003ECC                     u7360:
  1324  003ECC                     
  1325                           ; BSR set to: 0
  1326  003ECC  51F2               	movf	_stopIsClick& (0+255),w,b
  1327  003ECE  A4D8               	btfss	status,2,c
  1328  003ED0  EF6C  F01F         	goto	u7371
  1329  003ED4  EF6E  F01F         	goto	u7370
  1330  003ED8                     u7371:
  1331  003ED8  EFA3  F01F         	goto	l5920
  1332  003EDC                     u7370:
  1333  003EDC                     
  1334                           ; BSR set to: 0
  1335  003EDC  51F1               	movf	_menu_selected& (0+255),w,b
  1336  003EDE  A4D8               	btfss	status,2,c
  1337  003EE0  EF74  F01F         	goto	u7381
  1338  003EE4  EF76  F01F         	goto	u7380
  1339  003EE8                     u7381:
  1340  003EE8  EFA3  F01F         	goto	l5920
  1341  003EEC                     u7380:
  1342  003EEC                     
  1343                           ; BSR set to: 0
  1344                           ;fs_main.c: 68:         {;fs_main.c: 69:             timer_value.second++;
  1345  003EEC  4BD2               	infsnz	_timer_value& (0+255),f,b
  1346  003EEE  2BD3               	incf	(_timer_value+1)& (0+255),f,b
  1347  003EF0                     
  1348                           ; BSR set to: 0
  1349                           ;fs_main.c: 70:             timer_value.remainingSecond = 60 - timer_value.second;
  1350  003EF0  51D2               	movf	_timer_value& (0+255),w,b
  1351  003EF2  083C               	sublw	60
  1352  003EF4  6FD6               	movwf	(_timer_value+4)& (0+255),b
  1353  003EF6  51D3               	movf	(_timer_value+1)& (0+255),w,b
  1354  003EF8  A0D8               	btfss	status,0,c
  1355  003EFA  2AE8               	incf	wreg,f,c
  1356  003EFC  0800               	sublw	0
  1357  003EFE  6FD7               	movwf	(_timer_value+5)& (0+255),b
  1358  003F00                     
  1359                           ; BSR set to: 0
  1360                           ;fs_main.c: 72:             if (timer_value.remainingSecond == 59 )
  1361  003F00  0E3B               	movlw	59
  1362  003F02  19D6               	xorwf	(_timer_value+4)& (0+255),w,b
  1363  003F04  11D7               	iorwf	(_timer_value+5)& (0+255),w,b
  1364  003F06  A4D8               	btfss	status,2,c
  1365  003F08  EF88  F01F         	goto	u7391
  1366  003F0C  EF8A  F01F         	goto	u7390
  1367  003F10                     u7391:
  1368  003F10  EF94  F01F         	goto	l5916
  1369  003F14                     u7390:
  1370  003F14                     
  1371                           ; BSR set to: 0
  1372                           ;fs_main.c: 73:             {;fs_main.c: 74:                 timer_value.minute++;
  1373  003F14  4BD4               	infsnz	(_timer_value+2)& (0+255),f,b
  1374  003F16  2BD5               	incf	(_timer_value+3)& (0+255),f,b
  1375  003F18                     
  1376                           ; BSR set to: 0
  1377                           ;fs_main.c: 75:                 timer_value.remainingMinute = menu_value.driver_time - t
      +                          imer_value.minute;
  1378  003F18  51D4               	movf	(_timer_value+2)& (0+255),w,b
  1379  003F1A  5DE4               	subwf	_menu_value& (0+255),w,b
  1380  003F1C  6FD8               	movwf	(_timer_value+6)& (0+255),b
  1381  003F1E  51D5               	movf	(_timer_value+3)& (0+255),w,b
  1382  003F20  A0D8               	btfss	status,0,c
  1383  003F22  29D5               	incf	(_timer_value+3)& (0+255),w,b
  1384  003F24  6BD9               	clrf	(_timer_value+7)& (0+255),b
  1385  003F26  5FD9               	subwf	(_timer_value+7)& (0+255),f,b
  1386  003F28                     l5916:
  1387                           
  1388                           ; BSR set to: 0
  1389                           ;fs_main.c: 78:             if (timer_value.second > 59)
  1390  003F28  51D3               	movf	(_timer_value+1)& (0+255),w,b
  1391  003F2A  E109               	bnz	u7400
  1392  003F2C  0E3C               	movlw	60
  1393  003F2E  5DD2               	subwf	_timer_value& (0+255),w,b
  1394  003F30  A0D8               	btfss	status,0,c
  1395  003F32  EF9D  F01F         	goto	u7401
  1396  003F36  EF9F  F01F         	goto	u7400
  1397  003F3A                     u7401:
  1398  003F3A  EFA3  F01F         	goto	l5920
  1399  003F3E                     u7400:
  1400  003F3E                     
  1401                           ; BSR set to: 0
  1402                           ;fs_main.c: 79:             {;fs_main.c: 80:                 timer_value.second = 0;
  1403  003F3E  0E00               	movlw	0
  1404  003F40  6FD3               	movwf	(_timer_value+1)& (0+255),b
  1405  003F42  0E00               	movlw	0
  1406  003F44  6FD2               	movwf	_timer_value& (0+255),b
  1407  003F46                     l5920:
  1408                           
  1409                           ; BSR set to: 0
  1410                           ;fs_main.c: 85:     menuControl();
  1411  003F46  EC6E  F022         	call	_menuControl	;wreg free
  1412  003F4A  EF4D  F01F         	goto	l5894
  1413  003F4E  EF33  F000         	goto	start
  1414  003F52                     __end_of_main:
  1415                           	callstack 0
  1416                           
  1417 ;; *************** function _timer_0_init *****************
  1418 ;; Defined at:
  1419 ;;		line 67 in file "fs_timer.c"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;		None
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;		None
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  1    wreg      void 
  1426 ;; Registers used:
  1427 ;;		wreg, status,2
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1433 ;;      Params:         0       0       0       0       0       0       0
  1434 ;;      Locals:         0       0       0       0       0       0       0
  1435 ;;      Temps:          0       0       0       0       0       0       0
  1436 ;;      Totals:         0       0       0       0       0       0       0
  1437 ;;Total ram usage:        0 bytes
  1438 ;; Hardware stack levels used:    1
  1439 ;; Hardware stack levels required when called:    1
  1440 ;; This function calls:
  1441 ;;		Nothing
  1442 ;; This function is called by:
  1443 ;;		_main
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           	psect	text1
  1448  0049E6                     __ptext1:
  1449                           	callstack 0
  1450  0049E6                     _timer_0_init:
  1451                           	callstack 29
  1452  0049E6                     
  1453                           ;fs_timer.c: 69:   T0CON = 0x81;
  1454  0049E6  0E81               	movlw	129
  1455  0049E8  6ED5               	movwf	213,c	;volatile
  1456                           
  1457                           ;fs_timer.c: 70:   TMR0H = 0x63;
  1458  0049EA  0E63               	movlw	99
  1459  0049EC  6ED7               	movwf	215,c	;volatile
  1460                           
  1461                           ;fs_timer.c: 71:   TMR0L = 0xC0;
  1462  0049EE  0EC0               	movlw	192
  1463  0049F0  6ED6               	movwf	214,c	;volatile
  1464  0049F2                     
  1465                           ;fs_timer.c: 72:   INTCONbits.GIE = 1;
  1466  0049F2  8EF2               	bsf	242,7,c	;volatile
  1467  0049F4                     
  1468                           ;fs_timer.c: 73:   INTCONbits.TMR0IE = 1;
  1469  0049F4  8AF2               	bsf	242,5,c	;volatile
  1470  0049F6  0012               	return		;funcret
  1471  0049F8                     __end_of_timer_0_init:
  1472                           	callstack 0
  1473                           
  1474 ;; *************** function _system_init *****************
  1475 ;; Defined at:
  1476 ;;		line 83 in file "fs_mcu.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;		None
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;		None
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      void 
  1483 ;; Registers used:
  1484 ;;		wreg, status,2, cstack
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1490 ;;      Params:         0       0       0       0       0       0       0
  1491 ;;      Locals:         0       0       0       0       0       0       0
  1492 ;;      Temps:          2       0       0       0       0       0       0
  1493 ;;      Totals:         2       0       0       0       0       0       0
  1494 ;;Total ram usage:        2 bytes
  1495 ;; Hardware stack levels used:    1
  1496 ;; Hardware stack levels required when called:    2
  1497 ;; This function calls:
  1498 ;;		_eepromRead
  1499 ;; This function is called by:
  1500 ;;		_main
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           	psect	text2
  1505  003980                     __ptext2:
  1506                           	callstack 0
  1507  003980                     _system_init:
  1508                           	callstack 28
  1509  003980                     
  1510                           ;fs_mcu.c: 85:     driver_limit.pay = 0;
  1511  003980  0E00               	movlw	0
  1512  003982  0100               	movlb	0	; () banked
  1513  003984  6FC6               	movwf	_driver_limit& (0+255),b
  1514  003986  0E00               	movlw	0
  1515  003988  6FC7               	movwf	(_driver_limit+1)& (0+255),b
  1516  00398A  0E00               	movlw	0
  1517  00398C  6FC8               	movwf	(_driver_limit+2)& (0+255),b
  1518  00398E  0E00               	movlw	0
  1519  003990  6FC9               	movwf	(_driver_limit+3)& (0+255),b
  1520                           
  1521                           ;fs_mcu.c: 86:     driver_limit.payda = 0;
  1522  003992  0E00               	movlw	0
  1523  003994  6FCA               	movwf	(_driver_limit+4)& (0+255),b
  1524  003996  0E00               	movlw	0
  1525  003998  6FCB               	movwf	(_driver_limit+5)& (0+255),b
  1526  00399A  0E00               	movlw	0
  1527  00399C  6FCC               	movwf	(_driver_limit+6)& (0+255),b
  1528  00399E  0E00               	movlw	0
  1529  0039A0  6FCD               	movwf	(_driver_limit+7)& (0+255),b
  1530                           
  1531                           ;fs_mcu.c: 87:     driver_limit.ortalama = 0;
  1532  0039A2  0E00               	movlw	0
  1533  0039A4  6FCE               	movwf	(_driver_limit+8)& (0+255),b
  1534  0039A6  0E00               	movlw	0
  1535  0039A8  6FCF               	movwf	(_driver_limit+9)& (0+255),b
  1536  0039AA  0E00               	movlw	0
  1537  0039AC  6FD0               	movwf	(_driver_limit+10)& (0+255),b
  1538  0039AE  0E00               	movlw	0
  1539  0039B0  6FD1               	movwf	(_driver_limit+11)& (0+255),b
  1540                           
  1541                           ;fs_mcu.c: 88:     convert_data.convert_channel_0 = 0;
  1542  0039B2  0E00               	movlw	0
  1543  0039B4  0101               	movlb	1	; () banked
  1544  0039B6  6F00               	movwf	_convert_data& (0+255),b
  1545  0039B8  0E00               	movlw	0
  1546  0039BA  6F01               	movwf	(_convert_data+1)& (0+255),b
  1547  0039BC  0E00               	movlw	0
  1548  0039BE  6F02               	movwf	(_convert_data+2)& (0+255),b
  1549  0039C0  0E00               	movlw	0
  1550  0039C2  6F03               	movwf	(_convert_data+3)& (0+255),b
  1551                           
  1552                           ;fs_mcu.c: 89:     convert_data.convert_channel_1 = 0;
  1553  0039C4  0E00               	movlw	0
  1554  0039C6  6F04               	movwf	(_convert_data+4)& (0+255),b
  1555  0039C8  0E00               	movlw	0
  1556  0039CA  6F05               	movwf	(_convert_data+5)& (0+255),b
  1557  0039CC  0E00               	movlw	0
  1558  0039CE  6F06               	movwf	(_convert_data+6)& (0+255),b
  1559  0039D0  0E00               	movlw	0
  1560  0039D2  6F07               	movwf	(_convert_data+7)& (0+255),b
  1561                           
  1562                           ;fs_mcu.c: 90:     convert_data.convert_channel_2 = 0;
  1563  0039D4  0E00               	movlw	0
  1564  0039D6  6F08               	movwf	(_convert_data+8)& (0+255),b
  1565  0039D8  0E00               	movlw	0
  1566  0039DA  6F09               	movwf	(_convert_data+9)& (0+255),b
  1567  0039DC  0E00               	movlw	0
  1568  0039DE  6F0A               	movwf	(_convert_data+10)& (0+255),b
  1569  0039E0  0E00               	movlw	0
  1570  0039E2  6F0B               	movwf	(_convert_data+11)& (0+255),b
  1571                           
  1572                           ;fs_mcu.c: 91:     convert_data.convert_channel_3 = 0;
  1573  0039E4  0E00               	movlw	0
  1574  0039E6  6F0C               	movwf	(_convert_data+12)& (0+255),b
  1575  0039E8  0E00               	movlw	0
  1576  0039EA  6F0D               	movwf	(_convert_data+13)& (0+255),b
  1577  0039EC  0E00               	movlw	0
  1578  0039EE  6F0E               	movwf	(_convert_data+14)& (0+255),b
  1579  0039F0  0E00               	movlw	0
  1580  0039F2  6F0F               	movwf	(_convert_data+15)& (0+255),b
  1581                           
  1582                           ;fs_mcu.c: 92:     convert_data.convert_channel_4 = 0;
  1583  0039F4  0E00               	movlw	0
  1584  0039F6  6F10               	movwf	(_convert_data+16)& (0+255),b
  1585  0039F8  0E00               	movlw	0
  1586  0039FA  6F11               	movwf	(_convert_data+17)& (0+255),b
  1587  0039FC  0E00               	movlw	0
  1588  0039FE  6F12               	movwf	(_convert_data+18)& (0+255),b
  1589  003A00  0E00               	movlw	0
  1590  003A02  6F13               	movwf	(_convert_data+19)& (0+255),b
  1591                           
  1592                           ;fs_mcu.c: 93:     convert_data.convert_channel_5 = 0;
  1593  003A04  0E00               	movlw	0
  1594  003A06  6F14               	movwf	(_convert_data+20)& (0+255),b
  1595  003A08  0E00               	movlw	0
  1596  003A0A  6F15               	movwf	(_convert_data+21)& (0+255),b
  1597  003A0C  0E00               	movlw	0
  1598  003A0E  6F16               	movwf	(_convert_data+22)& (0+255),b
  1599  003A10  0E00               	movlw	0
  1600  003A12  6F17               	movwf	(_convert_data+23)& (0+255),b
  1601                           
  1602                           ;fs_mcu.c: 94:     convert_data.convert_channel_6 = 0;
  1603  003A14  0E00               	movlw	0
  1604  003A16  6F18               	movwf	(_convert_data+24)& (0+255),b
  1605  003A18  0E00               	movlw	0
  1606  003A1A  6F19               	movwf	(_convert_data+25)& (0+255),b
  1607  003A1C  0E00               	movlw	0
  1608  003A1E  6F1A               	movwf	(_convert_data+26)& (0+255),b
  1609  003A20  0E00               	movlw	0
  1610  003A22  6F1B               	movwf	(_convert_data+27)& (0+255),b
  1611                           
  1612                           ;fs_mcu.c: 95:     convert_data.convert_channel_7 = 0;
  1613  003A24  0E00               	movlw	0
  1614  003A26  6F1C               	movwf	(_convert_data+28)& (0+255),b
  1615  003A28  0E00               	movlw	0
  1616  003A2A  6F1D               	movwf	(_convert_data+29)& (0+255),b
  1617  003A2C  0E00               	movlw	0
  1618  003A2E  6F1E               	movwf	(_convert_data+30)& (0+255),b
  1619  003A30  0E00               	movlw	0
  1620  003A32  6F1F               	movwf	(_convert_data+31)& (0+255),b
  1621                           
  1622                           ;fs_mcu.c: 96:     controller.leftMotorSpeed = 0;
  1623  003A34  0E00               	movlw	0
  1624  003A36  6F57               	movwf	(_controller+7)& (0+255),b
  1625  003A38  0E00               	movlw	0
  1626  003A3A  6F56               	movwf	(_controller+6)& (0+255),b
  1627                           
  1628                           ;fs_mcu.c: 97:     controller.rightMotorSpeed = 0;
  1629  003A3C  0E00               	movlw	0
  1630  003A3E  6F59               	movwf	(_controller+9)& (0+255),b
  1631  003A40  0E00               	movlw	0
  1632  003A42  6F58               	movwf	(_controller+8)& (0+255),b
  1633                           
  1634                           ;fs_mcu.c: 98:     timer_value.timer_0_counter = 0;
  1635  003A44  0E00               	movlw	0
  1636  003A46  0100               	movlb	0	; () banked
  1637  003A48  6FDB               	movwf	(_timer_value+9)& (0+255),b
  1638                           
  1639                           ;fs_mcu.c: 99:     controller.error = 0;
  1640  003A4A  0E00               	movlw	0
  1641  003A4C  0101               	movlb	1	; () banked
  1642  003A4E  6F51               	movwf	(_controller+1)& (0+255),b
  1643  003A50  0E00               	movlw	0
  1644  003A52  6F50               	movwf	_controller& (0+255),b
  1645  003A54                     
  1646                           ; BSR set to: 1
  1647                           ;fs_mcu.c: 101:     button_bounce_controller.menu = 0;
  1648  003A54  905E               	bcf	_button_bounce_controller^0,0,c
  1649  003A56                     
  1650                           ; BSR set to: 1
  1651                           ;fs_mcu.c: 102:     button_bounce_controller.pause = 0;
  1652  003A56  965E               	bcf	_button_bounce_controller^0,3,c
  1653  003A58                     
  1654                           ; BSR set to: 1
  1655                           ;fs_mcu.c: 103:     button_bounce_controller.start = 0;
  1656  003A58  925E               	bcf	_button_bounce_controller^0,1,c
  1657  003A5A                     
  1658                           ; BSR set to: 1
  1659                           ;fs_mcu.c: 104:     button_bounce_controller.stop = 0;
  1660  003A5A  945E               	bcf	_button_bounce_controller^0,2,c
  1661  003A5C                     
  1662                           ; BSR set to: 1
  1663                           ;fs_mcu.c: 105:     menu_value.driver_time = (uint8_t)eepromRead(0x00);
  1664  003A5C  0E00               	movlw	0
  1665  003A5E  ECCA  F024         	call	_eepromRead
  1666  003A62  0100               	movlb	0	; () banked
  1667  003A64  6FE4               	movwf	_menu_value& (0+255),b
  1668  003A66                     
  1669                           ; BSR set to: 0
  1670                           ;fs_mcu.c: 106:     menu_value.stop_time = (uint8_t)eepromRead(0x01);
  1671  003A66  0E01               	movlw	1
  1672  003A68  ECCA  F024         	call	_eepromRead
  1673  003A6C  0100               	movlb	0	; () banked
  1674  003A6E  6FE5               	movwf	(_menu_value+1)& (0+255),b
  1675  003A70                     
  1676                           ; BSR set to: 0
  1677                           ;fs_mcu.c: 107:     menu_value.speed_limit = (uint8_t)eepromRead(0x02);
  1678  003A70  0E02               	movlw	2
  1679  003A72  ECCA  F024         	call	_eepromRead
  1680  003A76  0100               	movlb	0	; () banked
  1681  003A78  6FE6               	movwf	(_menu_value+2)& (0+255),b
  1682  003A7A                     
  1683                           ; BSR set to: 0
  1684                           ;fs_mcu.c: 109:     _delay((unsigned long)((700)*(64000000UL/4000.0)));
  1685  003A7A  0E39               	movlw	57
  1686  003A7C  6E03               	movwf	(??_system_init+1)^0,c
  1687  003A7E  0ED2               	movlw	210
  1688  003A80  6E02               	movwf	??_system_init^0,c
  1689  003A82  0E4C               	movlw	76
  1690  003A84                     u7667:
  1691  003A84  2EE8               	decfsz	wreg,f,c
  1692  003A86  D7FE               	bra	u7667
  1693  003A88  2E02               	decfsz	??_system_init^0,f,c
  1694  003A8A  D7FC               	bra	u7667
  1695  003A8C  2E03               	decfsz	(??_system_init+1)^0,f,c
  1696  003A8E  D7FA               	bra	u7667
  1697  003A90  D000               	nop2	
  1698  003A92                     
  1699                           ;fs_mcu.c: 110:     timer_value.remainingMinute = menu_value.driver_time;
  1700  003A92  C0E4  F0D8         	movff	_menu_value,_timer_value+6
  1701  003A96  0100               	movlb	0	; () banked
  1702  003A98  6BD9               	clrf	(_timer_value+7)& (0+255),b
  1703  003A9A                     
  1704                           ; BSR set to: 0
  1705                           ;fs_mcu.c: 111:     timer_value.remainingSecond = 0;
  1706  003A9A  0E00               	movlw	0
  1707  003A9C  6FD7               	movwf	(_timer_value+5)& (0+255),b
  1708  003A9E  0E00               	movlw	0
  1709  003AA0  6FD6               	movwf	(_timer_value+4)& (0+255),b
  1710  003AA2                     
  1711                           ; BSR set to: 0
  1712  003AA2  0012               	return		;funcret
  1713  003AA4                     __end_of_system_init:
  1714                           	callstack 0
  1715                           
  1716 ;; *************** function _eepromRead *****************
  1717 ;; Defined at:
  1718 ;;		line 36 in file "fs_eeprom.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;  address         1    wreg     unsigned char 
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;  address         1    0[COMRAM] unsigned char 
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  1    wreg      unsigned char 
  1725 ;; Registers used:
  1726 ;;		wreg, status,2
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1732 ;;      Params:         0       0       0       0       0       0       0
  1733 ;;      Locals:         1       0       0       0       0       0       0
  1734 ;;      Temps:          0       0       0       0       0       0       0
  1735 ;;      Totals:         1       0       0       0       0       0       0
  1736 ;;Total ram usage:        1 bytes
  1737 ;; Hardware stack levels used:    1
  1738 ;; Hardware stack levels required when called:    1
  1739 ;; This function calls:
  1740 ;;		Nothing
  1741 ;; This function is called by:
  1742 ;;		_system_init
  1743 ;; This function uses a non-reentrant model
  1744 ;;
  1745                           
  1746                           	psect	text3
  1747  004994                     __ptext3:
  1748                           	callstack 0
  1749  004994                     _eepromRead:
  1750                           	callstack 28
  1751                           
  1752                           ; BSR set to: 0
  1753                           ;incstack = 0
  1754                           ;eepromRead@address stored from wreg
  1755  004994  6E01               	movwf	eepromRead@address^0,c
  1756  004996                     
  1757                           ;fs_eeprom.c: 36: uint8_t eepromRead(uint8_t address);fs_eeprom.c: 37: {;fs_eeprom.c: 41
      +                          :     EEADR = (uint8_t)address;
  1758  004996  C001  FFA9         	movff	eepromRead@address,4009	;volatile
  1759  00499A                     
  1760                           ;fs_eeprom.c: 43:     EECON1bits.EEPGD = 0;
  1761  00499A  9EA6               	bcf	166,7,c	;volsfr
  1762  00499C                     
  1763                           ;fs_eeprom.c: 44:     EECON1bits.CFGS = 0;
  1764  00499C  9CA6               	bcf	166,6,c	;volsfr
  1765  00499E                     
  1766                           ;fs_eeprom.c: 45:     EECON1bits.RD = 1;
  1767  00499E  80A6               	bsf	166,0,c	;volsfr
  1768  0049A0                     l70:
  1769  0049A0  B0A6               	btfsc	166,0,c	;volsfr
  1770  0049A2  EFD5  F024         	goto	u6481
  1771  0049A6  EFD7  F024         	goto	u6480
  1772  0049AA                     u6481:
  1773  0049AA  EFD0  F024         	goto	l70
  1774  0049AE                     u6480:
  1775  0049AE                     
  1776                           ;fs_eeprom.c: 51:     return EEDATA;
  1777  0049AE  50A8               	movf	168,w,c	;volatile
  1778  0049B0  0012               	return		;funcret
  1779  0049B2                     __end_of_eepromRead:
  1780                           	callstack 0
  1781                           
  1782 ;; *************** function _menuInitialize *****************
  1783 ;; Defined at:
  1784 ;;		line 38 in file "fs_menu_controller.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;		None
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;		None
  1789 ;; Return value:  Size  Location     Type
  1790 ;;                  1    wreg      void 
  1791 ;; Registers used:
  1792 ;;		None
  1793 ;; Tracked objects:
  1794 ;;		On entry : 0/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1798 ;;      Params:         0       0       0       0       0       0       0
  1799 ;;      Locals:         0       0       0       0       0       0       0
  1800 ;;      Temps:          0       0       0       0       0       0       0
  1801 ;;      Totals:         0       0       0       0       0       0       0
  1802 ;;Total ram usage:        0 bytes
  1803 ;; Hardware stack levels used:    1
  1804 ;; Hardware stack levels required when called:    1
  1805 ;; This function calls:
  1806 ;;		Nothing
  1807 ;; This function is called by:
  1808 ;;		_main
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           	psect	text4
  1813  004970                     __ptext4:
  1814                           	callstack 0
  1815  004970                     _menuInitialize:
  1816                           	callstack 29
  1817  004970                     
  1818                           ;fs_menu_controller.c: 40:     ANSELBbits.ANSB5 = 0;
  1819  004970  010F               	movlb	15	; () banked
  1820  004972  9B39               	bcf	57,5,b	;volatile
  1821                           
  1822                           ;fs_menu_controller.c: 41:     TRISBbits.RB5 = 1;
  1823  004974  8A93               	bsf	147,5,c	;volatile
  1824                           
  1825                           ;fs_menu_controller.c: 43:     ANSELBbits.ANSB4 = 0;
  1826  004976  9939               	bcf	57,4,b	;volatile
  1827                           
  1828                           ;fs_menu_controller.c: 44:     TRISBbits.RB4 = 1;
  1829  004978  8893               	bsf	147,4,c	;volatile
  1830                           
  1831                           ;fs_menu_controller.c: 46:     ANSELBbits.ANSB3 = 0;
  1832  00497A  9739               	bcf	57,3,b	;volatile
  1833                           
  1834                           ;fs_menu_controller.c: 47:     TRISBbits.RB3 = 1;
  1835  00497C  8693               	bsf	147,3,c	;volatile
  1836                           
  1837                           ;fs_menu_controller.c: 49:     ANSELAbits.ANSA0 = 0;
  1838  00497E  9138               	bcf	56,0,b	;volatile
  1839                           
  1840                           ;fs_menu_controller.c: 50:     TRISAbits.RA0 = 1;
  1841  004980  8092               	bsf	146,0,c	;volatile
  1842                           
  1843                           ;fs_menu_controller.c: 52:     ANSELAbits.ANSA5 = 0;
  1844  004982  9B38               	bcf	56,5,b	;volatile
  1845                           
  1846                           ;fs_menu_controller.c: 53:     TRISAbits.RA5 = 1;
  1847  004984  8A92               	bsf	146,5,c	;volatile
  1848                           
  1849                           ;fs_menu_controller.c: 55:     ANSELBbits.ANSB2 = 0;
  1850  004986  9539               	bcf	57,2,b	;volatile
  1851                           
  1852                           ;fs_menu_controller.c: 56:     TRISBbits.RB2 = 1;
  1853  004988  8493               	bsf	147,2,c	;volatile
  1854                           
  1855                           ;fs_menu_controller.c: 58:     ANSELEbits.ANSE2 = 0;
  1856  00498A  953C               	bcf	60,2,b	;volatile
  1857                           
  1858                           ;fs_menu_controller.c: 59:     TRISEbits.RE2 = 0;
  1859  00498C  9496               	bcf	150,2,c	;volatile
  1860                           
  1861                           ;fs_menu_controller.c: 61:     TRISAbits.RA4 = 0;
  1862  00498E  9892               	bcf	146,4,c	;volatile
  1863                           
  1864                           ;fs_menu_controller.c: 62:     TRISBbits.RB6 = 0;
  1865  004990  9C93               	bcf	147,6,c	;volatile
  1866  004992                     
  1867                           ; BSR set to: 15
  1868  004992  0012               	return		;funcret
  1869  004994                     __end_of_menuInitialize:
  1870                           	callstack 0
  1871                           
  1872 ;; *************** function _menuControl *****************
  1873 ;; Defined at:
  1874 ;;		line 155 in file "fs_menu_controller.c"
  1875 ;; Parameters:    Size  Location     Type
  1876 ;;		None
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;		None
  1879 ;; Return value:  Size  Location     Type
  1880 ;;                  1    wreg      void 
  1881 ;; Registers used:
  1882 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1883 ;; Tracked objects:
  1884 ;;		On entry : 0/0
  1885 ;;		On exit  : 0/0
  1886 ;;		Unchanged: 0/0
  1887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1888 ;;      Params:         0       0       0       0       0       0       0
  1889 ;;      Locals:         0       0       0       0       0       0       0
  1890 ;;      Temps:          0       0       0       0       0       0       0
  1891 ;;      Totals:         0       0       0       0       0       0       0
  1892 ;;Total ram usage:        0 bytes
  1893 ;; Hardware stack levels used:    1
  1894 ;; Hardware stack levels required when called:   10
  1895 ;; This function calls:
  1896 ;;		_buttonControlFlags
  1897 ;;		_stateMachine
  1898 ;; This function is called by:
  1899 ;;		_main
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           	psect	text5
  1904  0044DC                     __ptext5:
  1905                           	callstack 0
  1906  0044DC                     _menuControl:
  1907                           	callstack 20
  1908  0044DC                     
  1909                           ;fs_menu_controller.c: 157:     buttonControlFlags();
  1910  0044DC  ECAF  F019         	call	_buttonControlFlags	;wreg free
  1911  0044E0                     
  1912                           ;fs_menu_controller.c: 158:     stateMachine();
  1913  0044E0  EC44  F009         	call	_stateMachine	;wreg free
  1914  0044E4                     
  1915                           ;fs_menu_controller.c: 160:     if (menu_flags.menu_start_flag == 1)
  1916  0044E4  0100               	movlb	0	; () banked
  1917  0044E6  A3F0               	btfss	_menu_flags& (0+255),1,b
  1918  0044E8  EF78  F022         	goto	u7291
  1919  0044EC  EF7A  F022         	goto	u7290
  1920  0044F0                     u7291:
  1921  0044F0  EF81  F022         	goto	l5786
  1922  0044F4                     u7290:
  1923  0044F4                     
  1924                           ; BSR set to: 0
  1925                           ;fs_menu_controller.c: 161:     {;fs_menu_controller.c: 162:         menu_flags.menu_sta
      +                          rt_flag = 0;
  1926  0044F4  93F0               	bcf	_menu_flags& (0+255),1,b
  1927  0044F6                     
  1928                           ; BSR set to: 0
  1929                           ;fs_menu_controller.c: 163:         startIsClick = 1;
  1930  0044F6  0E01               	movlw	1
  1931  0044F8  6FF3               	movwf	_startIsClick& (0+255),b
  1932                           
  1933                           ;fs_menu_controller.c: 164:         pauseIsClick = 0;
  1934  0044FA  0E00               	movlw	0
  1935  0044FC  6FF4               	movwf	_pauseIsClick& (0+255),b
  1936                           
  1937                           ;fs_menu_controller.c: 165:         stopIsClick = 0;
  1938  0044FE  0E00               	movlw	0
  1939  004500  6FF2               	movwf	_stopIsClick& (0+255),b
  1940  004502                     l5786:
  1941                           
  1942                           ; BSR set to: 0
  1943                           ;fs_menu_controller.c: 169:     if (menu_flags.menu_pause_flag == 1)
  1944  004502  A7F0               	btfss	_menu_flags& (0+255),3,b
  1945  004504  EF86  F022         	goto	u7301
  1946  004508  EF88  F022         	goto	u7300
  1947  00450C                     u7301:
  1948  00450C  EF8F  F022         	goto	l5792
  1949  004510                     u7300:
  1950  004510                     
  1951                           ; BSR set to: 0
  1952                           ;fs_menu_controller.c: 170:     {;fs_menu_controller.c: 171:         menu_flags.menu_pau
      +                          se_flag = 0;
  1953  004510  97F0               	bcf	_menu_flags& (0+255),3,b
  1954  004512                     
  1955                           ; BSR set to: 0
  1956                           ;fs_menu_controller.c: 172:         pauseIsClick = 1;
  1957  004512  0E01               	movlw	1
  1958  004514  6FF4               	movwf	_pauseIsClick& (0+255),b
  1959                           
  1960                           ;fs_menu_controller.c: 173:         startIsClick = 0;
  1961  004516  0E00               	movlw	0
  1962  004518  6FF3               	movwf	_startIsClick& (0+255),b
  1963                           
  1964                           ;fs_menu_controller.c: 174:         stopIsClick = 0;
  1965  00451A  0E00               	movlw	0
  1966  00451C  6FF2               	movwf	_stopIsClick& (0+255),b
  1967  00451E                     l5792:
  1968                           
  1969                           ; BSR set to: 0
  1970                           ;fs_menu_controller.c: 177:     if (menu_flags.menu_stop_flag == 1)
  1971  00451E  A5F0               	btfss	_menu_flags& (0+255),2,b
  1972  004520  EF94  F022         	goto	u7311
  1973  004524  EF96  F022         	goto	u7310
  1974  004528                     u7311:
  1975  004528  EF9D  F022         	goto	l348
  1976  00452C                     u7310:
  1977  00452C                     
  1978                           ; BSR set to: 0
  1979                           ;fs_menu_controller.c: 178:     {;fs_menu_controller.c: 179:         menu_flags.menu_sto
      +                          p_flag = 0;
  1980  00452C  95F0               	bcf	_menu_flags& (0+255),2,b
  1981  00452E                     
  1982                           ; BSR set to: 0
  1983                           ;fs_menu_controller.c: 180:         pauseIsClick = 0;
  1984  00452E  0E00               	movlw	0
  1985  004530  6FF4               	movwf	_pauseIsClick& (0+255),b
  1986                           
  1987                           ;fs_menu_controller.c: 181:         startIsClick = 0;
  1988  004532  0E00               	movlw	0
  1989  004534  6FF3               	movwf	_startIsClick& (0+255),b
  1990                           
  1991                           ;fs_menu_controller.c: 182:         stopIsClick = 1;
  1992  004536  0E01               	movlw	1
  1993  004538  6FF2               	movwf	_stopIsClick& (0+255),b
  1994  00453A                     l348:
  1995                           
  1996                           ; BSR set to: 0
  1997  00453A  0012               	return		;funcret
  1998  00453C                     __end_of_menuControl:
  1999                           	callstack 0
  2000                           
  2001 ;; *************** function _stateMachine *****************
  2002 ;; Defined at:
  2003 ;;		line 193 in file "fs_menu_controller.c"
  2004 ;; Parameters:    Size  Location     Type
  2005 ;;		None
  2006 ;; Auto vars:     Size  Location     Type
  2007 ;;  textCursor2    16   86[BANK0 ] unsigned char [16]
  2008 ;; Return value:  Size  Location     Type
  2009 ;;                  1    wreg      void 
  2010 ;; Registers used:
  2011 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2012 ;; Tracked objects:
  2013 ;;		On entry : 0/0
  2014 ;;		On exit  : 0/0
  2015 ;;		Unchanged: 0/0
  2016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2017 ;;      Params:         0       0       0       0       0       0       0
  2018 ;;      Locals:         0      16       0       0       0       0       0
  2019 ;;      Temps:          2       0       0       0       0       0       0
  2020 ;;      Totals:         2      16       0       0       0       0       0
  2021 ;;Total ram usage:       18 bytes
  2022 ;; Hardware stack levels used:    1
  2023 ;; Hardware stack levels required when called:    9
  2024 ;; This function calls:
  2025 ;;		_Lcd_Set_Cursor
  2026 ;;		_Lcd_Write_String
  2027 ;;		___fladd
  2028 ;;		___flge
  2029 ;;		___flsub
  2030 ;;		_eepromWrite
  2031 ;;		_sprintf
  2032 ;; This function is called by:
  2033 ;;		_menuControl
  2034 ;; This function uses a non-reentrant model
  2035 ;;
  2036                           
  2037                           	psect	text6
  2038  001288                     __ptext6:
  2039                           	callstack 0
  2040  001288                     _stateMachine:
  2041                           	callstack 20
  2042  001288                     
  2043                           ;fs_menu_controller.c: 195:     char textCursor2[16] = {0};
  2044  001288  EE20  F0B6         	lfsr	2,stateMachine@textCursor2
  2045  00128C  0E0F               	movlw	15
  2046  00128E                     u6741:
  2047  00128E  6ADE               	clrf	postinc2,c
  2048  001290  06E8               	decf	wreg,f,c
  2049  001292  E2FD               	bc	u6741
  2050                           
  2051                           ;fs_menu_controller.c: 196:     static uint8_t secretMenuCounter = 0;;fs_menu_controller
      +                          .c: 198:     switch (menu_selected)
  2052  001294  EFA7  F00D         	goto	l5688
  2053  001298                     l356:
  2054                           
  2055                           ; BSR set to: 0
  2056                           ;fs_menu_controller.c: 202:             LATBbits.LATB6 = 0;
  2057  001298  9C8A               	bcf	138,6,c	;volatile
  2058                           
  2059                           ;fs_menu_controller.c: 203:             LATAbits.LATA4 = 1;
  2060  00129A  8889               	bsf	137,4,c	;volatile
  2061                           
  2062                           ;fs_menu_controller.c: 204:             LATEbits.LATE2 = 0;
  2063  00129C  948D               	bcf	141,2,c	;volatile
  2064  00129E                     
  2065                           ; BSR set to: 0
  2066                           ;fs_menu_controller.c: 205:             Lcd_Set_Cursor(1,1);
  2067  00129E  0E01               	movlw	1
  2068  0012A0  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2069  0012A2  0E01               	movlw	1
  2070  0012A4  EC0A  F022         	call	_Lcd_Set_Cursor
  2071  0012A8                     
  2072                           ;fs_menu_controller.c: 206:             Lcd_Write_String("KALAN ZAMAN     ");
  2073  0012A8  0E35               	movlw	low STR_1
  2074  0012AA  6E05               	movwf	Lcd_Write_String@a^0,c
  2075  0012AC  0E06               	movlw	high STR_1
  2076  0012AE  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2077  0012B0  ECCB  F021         	call	_Lcd_Write_String	;wreg free
  2078  0012B4                     
  2079                           ;fs_menu_controller.c: 207:             Lcd_Set_Cursor(2,1);
  2080  0012B4  0E01               	movlw	1
  2081  0012B6  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2082  0012B8  0E02               	movlw	2
  2083  0012BA  EC0A  F022         	call	_Lcd_Set_Cursor
  2084  0012BE                     
  2085                           ;fs_menu_controller.c: 208:             sprintf(textCursor2,"      %d:%d   ",timer_value
      +                          .remainingMinute,timer_value.remainingSecond);
  2086  0012BE  0EB6               	movlw	low stateMachine@textCursor2
  2087  0012C0  0100               	movlb	0	; () banked
  2088  0012C2  6FAE               	movwf	sprintf@s& (0+255),b
  2089  0012C4  0E00               	movlw	high stateMachine@textCursor2
  2090  0012C6  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2091  0012C8  0E9A               	movlw	low STR_2
  2092  0012CA  6FB0               	movwf	sprintf@fmt& (0+255),b
  2093  0012CC  0E06               	movlw	high STR_2
  2094  0012CE  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2095  0012D0  C0D8  F0B2         	movff	_timer_value+6,?_sprintf+4
  2096  0012D4  C0D9  F0B3         	movff	_timer_value+7,?_sprintf+5
  2097  0012D8  C0D6  F0B4         	movff	_timer_value+4,?_sprintf+6
  2098  0012DC  C0D7  F0B5         	movff	_timer_value+5,?_sprintf+7
  2099  0012E0  EC53  F023         	call	_sprintf	;wreg free
  2100  0012E4                     
  2101                           ;fs_menu_controller.c: 209:             Lcd_Write_String(textCursor2);
  2102  0012E4  0EB6               	movlw	low stateMachine@textCursor2
  2103  0012E6  6E05               	movwf	Lcd_Write_String@a^0,c
  2104  0012E8  0E00               	movlw	high stateMachine@textCursor2
  2105  0012EA  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2106  0012EC  ECCB  F021         	call	_Lcd_Write_String	;wreg free
  2107  0012F0                     
  2108                           ;fs_menu_controller.c: 211:             if ( timer_value.menu_login_delay == 100)
  2109  0012F0  0E64               	movlw	100
  2110  0012F2  0100               	movlb	0	; () banked
  2111  0012F4  19DA               	xorwf	(_timer_value+8)& (0+255),w,b
  2112  0012F6  A4D8               	btfss	status,2,c
  2113  0012F8  EF80  F009         	goto	u6751
  2114  0012FC  EF82  F009         	goto	u6750
  2115  001300                     u6751:
  2116  001300  EF86  F009         	goto	l5394
  2117  001304                     u6750:
  2118  001304                     
  2119                           ; BSR set to: 0
  2120                           ;fs_menu_controller.c: 212:             {;fs_menu_controller.c: 213:                 tim
      +                          er_value.menu_login_delay = 0;
  2121  001304  0E00               	movlw	0
  2122  001306  6FDA               	movwf	(_timer_value+8)& (0+255),b
  2123                           
  2124                           ;fs_menu_controller.c: 214:                 menu_selected = DRIVER_TIME_SETTING;
  2125  001308  0E01               	movlw	1
  2126  00130A  6FF1               	movwf	_menu_selected& (0+255),b
  2127  00130C                     l5394:
  2128                           
  2129                           ; BSR set to: 0
  2130                           ;fs_menu_controller.c: 217:             if ((timer_value.remainingMinute <= 0) && (timer
      +                          _value.remainingSecond == 0) )
  2131  00130C  BFD9               	btfsc	(_timer_value+7)& (0+255),7,b
  2132  00130E  EF93  F009         	goto	u6760
  2133  001312  51D9               	movf	(_timer_value+7)& (0+255),w,b
  2134  001314  E106               	bnz	u6761
  2135  001316  05D8               	decf	(_timer_value+6)& (0+255),w,b
  2136  001318  B0D8               	btfsc	status,0,c
  2137  00131A  EF91  F009         	goto	u6761
  2138  00131E  EF93  F009         	goto	u6760
  2139  001322                     u6761:
  2140  001322  EFA2  F009         	goto	l358
  2141  001326                     u6760:
  2142  001326                     
  2143                           ; BSR set to: 0
  2144  001326  51D6               	movf	(_timer_value+4)& (0+255),w,b
  2145  001328  11D7               	iorwf	(_timer_value+5)& (0+255),w,b
  2146  00132A  A4D8               	btfss	status,2,c
  2147  00132C  EF9A  F009         	goto	u6771
  2148  001330  EF9C  F009         	goto	u6770
  2149  001334                     u6771:
  2150  001334  EFA2  F009         	goto	l358
  2151  001338                     u6770:
  2152  001338                     
  2153                           ; BSR set to: 0
  2154                           ;fs_menu_controller.c: 218:             {;fs_menu_controller.c: 219:                    
      +                           menu_selected = STOP_MENU;
  2155  001338  0E04               	movlw	4
  2156  00133A  6FF1               	movwf	_menu_selected& (0+255),b
  2157                           
  2158                           ;fs_menu_controller.c: 220:                     timer_value.minute = 0;
  2159  00133C  0E00               	movlw	0
  2160  00133E  6FD5               	movwf	(_timer_value+3)& (0+255),b
  2161  001340  0E00               	movlw	0
  2162  001342  6FD4               	movwf	(_timer_value+2)& (0+255),b
  2163  001344                     l358:
  2164                           
  2165                           ; BSR set to: 0
  2166                           ;fs_menu_controller.c: 223:             if ( (startIsClick == 0) && (pauseIsClick == 1) 
      +                          && (stopIsClick == 0) && (menu_selected == MAIN_MENU))
  2167  001344  51F3               	movf	_startIsClick& (0+255),w,b
  2168  001346  A4D8               	btfss	status,2,c
  2169  001348  EFA8  F009         	goto	u6781
  2170  00134C  EFAA  F009         	goto	u6780
  2171  001350                     u6781:
  2172  001350  EFC4  F009         	goto	l359
  2173  001354                     u6780:
  2174  001354                     
  2175                           ; BSR set to: 0
  2176  001354  05F4               	decf	_pauseIsClick& (0+255),w,b
  2177  001356  A4D8               	btfss	status,2,c
  2178  001358  EFB0  F009         	goto	u6791
  2179  00135C  EFB2  F009         	goto	u6790
  2180  001360                     u6791:
  2181  001360  EFC4  F009         	goto	l359
  2182  001364                     u6790:
  2183  001364                     
  2184                           ; BSR set to: 0
  2185  001364  51F2               	movf	_stopIsClick& (0+255),w,b
  2186  001366  A4D8               	btfss	status,2,c
  2187  001368  EFB8  F009         	goto	u6801
  2188  00136C  EFBA  F009         	goto	u6800
  2189  001370                     u6801:
  2190  001370  EFC4  F009         	goto	l359
  2191  001374                     u6800:
  2192  001374                     
  2193                           ; BSR set to: 0
  2194  001374  51F1               	movf	_menu_selected& (0+255),w,b
  2195  001376  A4D8               	btfss	status,2,c
  2196  001378  EFC0  F009         	goto	u6811
  2197  00137C  EFC2  F009         	goto	u6810
  2198  001380                     u6811:
  2199  001380  EFC4  F009         	goto	l359
  2200  001384                     u6810:
  2201  001384                     
  2202                           ; BSR set to: 0
  2203                           ;fs_menu_controller.c: 224:             {;fs_menu_controller.c: 225:                 men
      +                          u_selected = PAUSE_MENU;
  2204  001384  0E06               	movlw	6
  2205  001386  6FF1               	movwf	_menu_selected& (0+255),b
  2206  001388                     l359:
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;fs_menu_controller.c: 228:             if ( (startIsClick == 0) && (pauseIsClick == 0) 
      +                          && (stopIsClick == 1) && (menu_selected == MAIN_MENU) )
  2210  001388  51F3               	movf	_startIsClick& (0+255),w,b
  2211  00138A  A4D8               	btfss	status,2,c
  2212  00138C  EFCA  F009         	goto	u6821
  2213  001390  EFCC  F009         	goto	u6820
  2214  001394                     u6821:
  2215  001394  EFD9  F00D         	goto	l397
  2216  001398                     u6820:
  2217  001398                     
  2218                           ; BSR set to: 0
  2219  001398  51F4               	movf	_pauseIsClick& (0+255),w,b
  2220  00139A  A4D8               	btfss	status,2,c
  2221  00139C  EFD2  F009         	goto	u6831
  2222  0013A0  EFD4  F009         	goto	u6830
  2223  0013A4                     u6831:
  2224  0013A4  EFD9  F00D         	goto	l397
  2225  0013A8                     u6830:
  2226  0013A8                     
  2227                           ; BSR set to: 0
  2228  0013A8  05F2               	decf	_stopIsClick& (0+255),w,b
  2229  0013AA  A4D8               	btfss	status,2,c
  2230  0013AC  EFDA  F009         	goto	u6841
  2231  0013B0  EFDC  F009         	goto	u6840
  2232  0013B4                     u6841:
  2233  0013B4  EFD9  F00D         	goto	l397
  2234  0013B8                     u6840:
  2235  0013B8                     
  2236                           ; BSR set to: 0
  2237  0013B8  51F1               	movf	_menu_selected& (0+255),w,b
  2238  0013BA  A4D8               	btfss	status,2,c
  2239  0013BC  EFE2  F009         	goto	u6851
  2240  0013C0  EFE4  F009         	goto	u6850
  2241  0013C4                     u6851:
  2242  0013C4  EFD9  F00D         	goto	l397
  2243  0013C8                     u6850:
  2244  0013C8                     
  2245                           ; BSR set to: 0
  2246                           ;fs_menu_controller.c: 229:             {;fs_menu_controller.c: 230:                  ti
      +                          mer_value.remainingMinute = menu_value.driver_time;
  2247  0013C8  C0E4  F0D8         	movff	_menu_value,_timer_value+6
  2248  0013CC  6BD9               	clrf	(_timer_value+7)& (0+255),b
  2249  0013CE                     
  2250                           ; BSR set to: 0
  2251                           ;fs_menu_controller.c: 231:                  timer_value.remainingSecond = 0;
  2252  0013CE  0E00               	movlw	0
  2253  0013D0  6FD7               	movwf	(_timer_value+5)& (0+255),b
  2254  0013D2  0E00               	movlw	0
  2255  0013D4  6FD6               	movwf	(_timer_value+4)& (0+255),b
  2256                           
  2257                           ;fs_menu_controller.c: 232:                  timer_value.second = 0;
  2258  0013D6  0E00               	movlw	0
  2259  0013D8  6FD3               	movwf	(_timer_value+1)& (0+255),b
  2260  0013DA  0E00               	movlw	0
  2261  0013DC  6FD2               	movwf	_timer_value& (0+255),b
  2262                           
  2263                           ;fs_menu_controller.c: 233:                  timer_value.minute = 0;
  2264  0013DE  0E00               	movlw	0
  2265  0013E0  6FD5               	movwf	(_timer_value+3)& (0+255),b
  2266  0013E2  0E00               	movlw	0
  2267  0013E4  6FD4               	movwf	(_timer_value+2)& (0+255),b
  2268  0013E6  EFD9  F00D         	goto	l397
  2269  0013EA                     l362:
  2270                           
  2271                           ; BSR set to: 0
  2272                           ;fs_menu_controller.c: 241:             LATBbits.LATB6 = 0;
  2273  0013EA  9C8A               	bcf	138,6,c	;volatile
  2274                           
  2275                           ;fs_menu_controller.c: 242:             LATAbits.LATA4 = 0;
  2276  0013EC  9889               	bcf	137,4,c	;volatile
  2277                           
  2278                           ;fs_menu_controller.c: 243:             LATEbits.LATE2 = 1;
  2279  0013EE  848D               	bsf	141,2,c	;volatile
  2280                           
  2281                           ;fs_menu_controller.c: 245:             if (menu_flags.menu_input_flag == 1)
  2282  0013F0  A1F0               	btfss	_menu_flags& (0+255),0,b
  2283  0013F2  EFFD  F009         	goto	u6861
  2284  0013F6  EFFF  F009         	goto	u6860
  2285  0013FA                     u6861:
  2286  0013FA  EF02  F00A         	goto	l5422
  2287  0013FE                     u6860:
  2288  0013FE                     
  2289                           ; BSR set to: 0
  2290                           ;fs_menu_controller.c: 246:             {;fs_menu_controller.c: 247:                 men
      +                          u_flags.menu_input_flag = 0;
  2291  0013FE  91F0               	bcf	_menu_flags& (0+255),0,b
  2292  001400                     
  2293                           ; BSR set to: 0
  2294                           ;fs_menu_controller.c: 248:                 menu_selected = STOP_TIME_SETTING;
  2295  001400  0E02               	movlw	2
  2296  001402  6FF1               	movwf	_menu_selected& (0+255),b
  2297  001404                     l5422:
  2298                           
  2299                           ; BSR set to: 0
  2300                           ;fs_menu_controller.c: 251:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_value.driver_time < 30))
  2301  001404  A9F0               	btfss	_menu_flags& (0+255),4,b
  2302  001406  EF07  F00A         	goto	u6871
  2303  00140A  EF09  F00A         	goto	u6870
  2304  00140E                     u6871:
  2305  00140E  EF28  F00A         	goto	l5440
  2306  001412                     u6870:
  2307  001412                     
  2308                           ; BSR set to: 0
  2309  001412  0E1E               	movlw	30
  2310  001414  61E4               	cpfslt	_menu_value& (0+255),b
  2311  001416  EF0F  F00A         	goto	u6881
  2312  00141A  EF11  F00A         	goto	u6880
  2313  00141E                     u6881:
  2314  00141E  EF28  F00A         	goto	l5440
  2315  001422                     u6880:
  2316  001422                     
  2317                           ; BSR set to: 0
  2318                           ;fs_menu_controller.c: 252:             {;fs_menu_controller.c: 253:                 men
      +                          u_flags.menu_increase_flag = 0;
  2319  001422  99F0               	bcf	_menu_flags& (0+255),4,b
  2320  001424                     
  2321                           ; BSR set to: 0
  2322                           ;fs_menu_controller.c: 254:                 menu_value.driver_time++;
  2323  001424  2BE4               	incf	_menu_value& (0+255),f,b
  2324  001426                     
  2325                           ; BSR set to: 0
  2326                           ;fs_menu_controller.c: 255:                 eepromWrite(0x00,(uint8_t)menu_value.driver_
      +                          time);
  2327  001426  C0E4  F001         	movff	_menu_value,eepromWrite@data
  2328  00142A  0E00               	movlw	0
  2329  00142C  EC8E  F024         	call	_eepromWrite
  2330  001430                     
  2331                           ;fs_menu_controller.c: 256:                 timer_value.minute =0 ;
  2332  001430  0E00               	movlw	0
  2333  001432  0100               	movlb	0	; () banked
  2334  001434  6FD5               	movwf	(_timer_value+3)& (0+255),b
  2335  001436  0E00               	movlw	0
  2336  001438  6FD4               	movwf	(_timer_value+2)& (0+255),b
  2337  00143A                     
  2338                           ; BSR set to: 0
  2339                           ;fs_menu_controller.c: 257:                 timer_value.second = 0;
  2340  00143A  0E00               	movlw	0
  2341  00143C  6FD3               	movwf	(_timer_value+1)& (0+255),b
  2342  00143E  0E00               	movlw	0
  2343  001440  6FD2               	movwf	_timer_value& (0+255),b
  2344  001442                     
  2345                           ; BSR set to: 0
  2346                           ;fs_menu_controller.c: 258:                 timer_value.remainingSecond = 0;
  2347  001442  0E00               	movlw	0
  2348  001444  6FD7               	movwf	(_timer_value+5)& (0+255),b
  2349  001446  0E00               	movlw	0
  2350  001448  6FD6               	movwf	(_timer_value+4)& (0+255),b
  2351  00144A                     
  2352                           ; BSR set to: 0
  2353                           ;fs_menu_controller.c: 259:                 timer_value.remainingMinute = menu_value.dri
      +                          ver_time;
  2354  00144A  C0E4  F0D8         	movff	_menu_value,_timer_value+6
  2355  00144E  6BD9               	clrf	(_timer_value+7)& (0+255),b
  2356  001450                     l5440:
  2357                           
  2358                           ; BSR set to: 0
  2359                           ;fs_menu_controller.c: 262:             if ((menu_flags.menu_decrease_flag == 1) && (men
      +                          u_value.driver_time > 1))
  2360  001450  ABF0               	btfss	_menu_flags& (0+255),5,b
  2361  001452  EF2D  F00A         	goto	u6891
  2362  001456  EF2F  F00A         	goto	u6890
  2363  00145A                     u6891:
  2364  00145A  EF4E  F00A         	goto	l5458
  2365  00145E                     u6890:
  2366  00145E                     
  2367                           ; BSR set to: 0
  2368  00145E  0E01               	movlw	1
  2369  001460  65E4               	cpfsgt	_menu_value& (0+255),b
  2370  001462  EF35  F00A         	goto	u6901
  2371  001466  EF37  F00A         	goto	u6900
  2372  00146A                     u6901:
  2373  00146A  EF4E  F00A         	goto	l5458
  2374  00146E                     u6900:
  2375  00146E                     
  2376                           ; BSR set to: 0
  2377                           ;fs_menu_controller.c: 263:             {;fs_menu_controller.c: 264:                  me
      +                          nu_flags.menu_decrease_flag = 0;
  2378  00146E  9BF0               	bcf	_menu_flags& (0+255),5,b
  2379  001470                     
  2380                           ; BSR set to: 0
  2381                           ;fs_menu_controller.c: 265:                  menu_value.driver_time--;
  2382  001470  07E4               	decf	_menu_value& (0+255),f,b
  2383  001472                     
  2384                           ; BSR set to: 0
  2385                           ;fs_menu_controller.c: 266:                  eepromWrite(0x00,(uint8_t)menu_value.driver
      +                          _time);
  2386  001472  C0E4  F001         	movff	_menu_value,eepromWrite@data
  2387  001476  0E00               	movlw	0
  2388  001478  EC8E  F024         	call	_eepromWrite
  2389  00147C                     
  2390                           ;fs_menu_controller.c: 267:                  timer_value.minute =0 ;
  2391  00147C  0E00               	movlw	0
  2392  00147E  0100               	movlb	0	; () banked
  2393  001480  6FD5               	movwf	(_timer_value+3)& (0+255),b
  2394  001482  0E00               	movlw	0
  2395  001484  6FD4               	movwf	(_timer_value+2)& (0+255),b
  2396  001486                     
  2397                           ; BSR set to: 0
  2398                           ;fs_menu_controller.c: 268:                  timer_value.second = 0;
  2399  001486  0E00               	movlw	0
  2400  001488  6FD3               	movwf	(_timer_value+1)& (0+255),b
  2401  00148A  0E00               	movlw	0
  2402  00148C  6FD2               	movwf	_timer_value& (0+255),b
  2403  00148E                     
  2404                           ; BSR set to: 0
  2405                           ;fs_menu_controller.c: 269:                  timer_value.remainingSecond = 0;
  2406  00148E  0E00               	movlw	0
  2407  001490  6FD7               	movwf	(_timer_value+5)& (0+255),b
  2408  001492  0E00               	movlw	0
  2409  001494  6FD6               	movwf	(_timer_value+4)& (0+255),b
  2410  001496                     
  2411                           ; BSR set to: 0
  2412                           ;fs_menu_controller.c: 270:                  timer_value.remainingMinute = menu_value.dr
      +                          iver_time;
  2413  001496  C0E4  F0D8         	movff	_menu_value,_timer_value+6
  2414  00149A  6BD9               	clrf	(_timer_value+7)& (0+255),b
  2415  00149C                     l5458:
  2416                           
  2417                           ; BSR set to: 0
  2418                           ;fs_menu_controller.c: 274:             Lcd_Set_Cursor(1,1);
  2419  00149C  0E01               	movlw	1
  2420  00149E  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2421  0014A0  0E01               	movlw	1
  2422  0014A2  EC0A  F022         	call	_Lcd_Set_Cursor
  2423  0014A6                     
  2424                           ;fs_menu_controller.c: 275:             Lcd_Write_String("HAREKT ZAMANI dk");
  2425  0014A6  0E68               	movlw	low STR_3
  2426  0014A8  6E05               	movwf	Lcd_Write_String@a^0,c
  2427  0014AA  0E06               	movlw	high STR_3
  2428  0014AC  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2429  0014AE  ECCB  F021         	call	_Lcd_Write_String	;wreg free
  2430  0014B2                     
  2431                           ;fs_menu_controller.c: 276:             Lcd_Set_Cursor(2,1);
  2432  0014B2  0E01               	movlw	1
  2433  0014B4  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2434  0014B6  0E02               	movlw	2
  2435  0014B8  EC0A  F022         	call	_Lcd_Set_Cursor
  2436  0014BC                     
  2437                           ;fs_menu_controller.c: 277:             sprintf(textCursor2,"%d               ",menu_val
      +                          ue.driver_time);
  2438  0014BC  0EB6               	movlw	low stateMachine@textCursor2
  2439  0014BE  0100               	movlb	0	; () banked
  2440  0014C0  6FAE               	movwf	sprintf@s& (0+255),b
  2441  0014C2  0E00               	movlw	high stateMachine@textCursor2
  2442  0014C4  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2443  0014C6  0E01               	movlw	low STR_4
  2444  0014C8  6FB0               	movwf	sprintf@fmt& (0+255),b
  2445  0014CA  0E06               	movlw	high STR_4
  2446  0014CC  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2447  0014CE  C0E4  F0B2         	movff	_menu_value,?_sprintf+4
  2448  0014D2  6BB3               	clrf	(?_sprintf+5)& (0+255),b
  2449  0014D4  EC53  F023         	call	_sprintf	;wreg free
  2450  0014D8                     
  2451                           ;fs_menu_controller.c: 278:             Lcd_Write_String(textCursor2);
  2452  0014D8  0EB6               	movlw	low stateMachine@textCursor2
  2453  0014DA  6E05               	movwf	Lcd_Write_String@a^0,c
  2454  0014DC  0E00               	movlw	high stateMachine@textCursor2
  2455  0014DE  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2456  0014E0  ECCB  F021         	call	_Lcd_Write_String	;wreg free
  2457  0014E4                     
  2458                           ;fs_menu_controller.c: 280:             if(timer_value.menu_login_delay == 100)
  2459  0014E4  0E64               	movlw	100
  2460  0014E6  0100               	movlb	0	; () banked
  2461  0014E8  19DA               	xorwf	(_timer_value+8)& (0+255),w,b
  2462  0014EA  A4D8               	btfss	status,2,c
  2463  0014EC  EF7A  F00A         	goto	u6911
  2464  0014F0  EF7C  F00A         	goto	u6910
  2465  0014F4                     u6911:
  2466  0014F4  EFD9  F00D         	goto	l397
  2467  0014F8                     u6910:
  2468  0014F8                     l5470:
  2469                           
  2470                           ; BSR set to: 0
  2471                           ;fs_menu_controller.c: 281:             {;fs_menu_controller.c: 282:                 tim
      +                          er_value.menu_login_delay = 0;
  2472  0014F8  0E00               	movlw	0
  2473  0014FA  6FDA               	movwf	(_timer_value+8)& (0+255),b
  2474                           
  2475                           ;fs_menu_controller.c: 283:                 menu_selected = PAUSE_MENU;
  2476  0014FC  0E06               	movlw	6
  2477  0014FE  6FF1               	movwf	_menu_selected& (0+255),b
  2478  001500  EFD9  F00D         	goto	l397
  2479  001504                     l367:
  2480                           
  2481                           ; BSR set to: 0
  2482                           ;fs_menu_controller.c: 290:             LATBbits.LATB6 = 0;
  2483  001504  9C8A               	bcf	138,6,c	;volatile
  2484                           
  2485                           ;fs_menu_controller.c: 291:             LATAbits.LATA4 = 0;
  2486  001506  9889               	bcf	137,4,c	;volatile
  2487                           
  2488                           ;fs_menu_controller.c: 292:             LATEbits.LATE2 = 1;
  2489  001508  848D               	bsf	141,2,c	;volatile
  2490                           
  2491                           ;fs_menu_controller.c: 294:             if (menu_flags.menu_input_flag == 1)
  2492  00150A  A1F0               	btfss	_menu_flags& (0+255),0,b
  2493  00150C  EF8A  F00A         	goto	u6921
  2494  001510  EF8C  F00A         	goto	u6920
  2495  001514                     u6921:
  2496  001514  EF8F  F00A         	goto	l5476
  2497  001518                     u6920:
  2498  001518                     
  2499                           ; BSR set to: 0
  2500                           ;fs_menu_controller.c: 295:             {;fs_menu_controller.c: 296:                 men
      +                          u_flags.menu_input_flag = 0;
  2501  001518  91F0               	bcf	_menu_flags& (0+255),0,b
  2502  00151A                     
  2503                           ; BSR set to: 0
  2504                           ;fs_menu_controller.c: 297:                 menu_selected = SPEED_LIMIT_SETTING;
  2505  00151A  0E03               	movlw	3
  2506  00151C  6FF1               	movwf	_menu_selected& (0+255),b
  2507  00151E                     l5476:
  2508                           
  2509                           ; BSR set to: 0
  2510                           ;fs_menu_controller.c: 300:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_value.stop_time < 100))
  2511  00151E  A9F0               	btfss	_menu_flags& (0+255),4,b
  2512  001520  EF94  F00A         	goto	u6931
  2513  001524  EF96  F00A         	goto	u6930
  2514  001528                     u6931:
  2515  001528  EFA5  F00A         	goto	l5486
  2516  00152C                     u6930:
  2517  00152C                     
  2518                           ; BSR set to: 0
  2519  00152C  0E64               	movlw	100
  2520  00152E  61E5               	cpfslt	(_menu_value+1)& (0+255),b
  2521  001530  EF9C  F00A         	goto	u6941
  2522  001534  EF9E  F00A         	goto	u6940
  2523  001538                     u6941:
  2524  001538  EFA5  F00A         	goto	l5486
  2525  00153C                     u6940:
  2526  00153C                     
  2527                           ; BSR set to: 0
  2528                           ;fs_menu_controller.c: 301:             {;fs_menu_controller.c: 302:                 men
      +                          u_flags.menu_increase_flag = 0;
  2529  00153C  99F0               	bcf	_menu_flags& (0+255),4,b
  2530  00153E                     
  2531                           ; BSR set to: 0
  2532                           ;fs_menu_controller.c: 303:                 menu_value.stop_time += 1;
  2533  00153E  2BE5               	incf	(_menu_value+1)& (0+255),f,b
  2534  001540                     
  2535                           ; BSR set to: 0
  2536                           ;fs_menu_controller.c: 304:                 eepromWrite(0x01,(uint8_t)menu_value.stop_ti
      +                          me);
  2537  001540  C0E5  F001         	movff	_menu_value+1,eepromWrite@data
  2538  001544  0E01               	movlw	1
  2539  001546  EC8E  F024         	call	_eepromWrite
  2540  00154A                     l5486:
  2541                           
  2542                           ;fs_menu_controller.c: 307:             if ((menu_flags.menu_decrease_flag == 1) && (men
      +                          u_value.stop_time > 0))
  2543  00154A  0100               	movlb	0	; () banked
  2544  00154C  ABF0               	btfss	_menu_flags& (0+255),5,b
  2545  00154E  EFAB  F00A         	goto	u6951
  2546  001552  EFAD  F00A         	goto	u6950
  2547  001556                     u6951:
  2548  001556  EFBC  F00A         	goto	l5496
  2549  00155A                     u6950:
  2550  00155A                     
  2551                           ; BSR set to: 0
  2552  00155A  51E5               	movf	(_menu_value+1)& (0+255),w,b
  2553  00155C  B4D8               	btfsc	status,2,c
  2554  00155E  EFB3  F00A         	goto	u6961
  2555  001562  EFB5  F00A         	goto	u6960
  2556  001566                     u6961:
  2557  001566  EFBC  F00A         	goto	l5496
  2558  00156A                     u6960:
  2559  00156A                     
  2560                           ; BSR set to: 0
  2561                           ;fs_menu_controller.c: 308:             {;fs_menu_controller.c: 309:                  me
      +                          nu_flags.menu_decrease_flag = 0;
  2562  00156A  9BF0               	bcf	_menu_flags& (0+255),5,b
  2563  00156C                     
  2564                           ; BSR set to: 0
  2565                           ;fs_menu_controller.c: 310:                  menu_value.stop_time -= 1;
  2566  00156C  07E5               	decf	(_menu_value+1)& (0+255),f,b
  2567  00156E                     
  2568                           ; BSR set to: 0
  2569                           ;fs_menu_controller.c: 311:                  eepromWrite(0x01,(uint8_t)menu_value.stop_t
      +                          ime);
  2570  00156E  C0E5  F001         	movff	_menu_value+1,eepromWrite@data
  2571  001572  0E01               	movlw	1
  2572  001574  EC8E  F024         	call	_eepromWrite
  2573  001578                     l5496:
  2574                           
  2575                           ;fs_menu_controller.c: 313:             Lcd_Set_Cursor(1,1);
  2576  001578  0E01               	movlw	1
  2577  00157A  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2578  00157C  0E01               	movlw	1
  2579  00157E  EC0A  F022         	call	_Lcd_Set_Cursor
  2580  001582                     
  2581                           ;fs_menu_controller.c: 314:             Lcd_Write_String("DURMA ZAMANI  ms");
  2582  001582  0E79               	movlw	low STR_5
  2583  001584  6E05               	movwf	Lcd_Write_String@a^0,c
  2584  001586  0E06               	movlw	high STR_5
  2585  001588  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2586  00158A  ECCB  F021         	call	_Lcd_Write_String	;wreg free
  2587  00158E                     
  2588                           ;fs_menu_controller.c: 315:             Lcd_Set_Cursor(2,1);
  2589  00158E  0E01               	movlw	1
  2590  001590  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2591  001592  0E02               	movlw	2
  2592  001594  EC0A  F022         	call	_Lcd_Set_Cursor
  2593  001598                     
  2594                           ;fs_menu_controller.c: 316:             sprintf(textCursor2,"%d               ",menu_val
      +                          ue.stop_time);
  2595  001598  0EB6               	movlw	low stateMachine@textCursor2
  2596  00159A  0100               	movlb	0	; () banked
  2597  00159C  6FAE               	movwf	sprintf@s& (0+255),b
  2598  00159E  0E00               	movlw	high stateMachine@textCursor2
  2599  0015A0  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2600  0015A2  0E01               	movlw	low STR_4
  2601  0015A4  6FB0               	movwf	sprintf@fmt& (0+255),b
  2602  0015A6  0E06               	movlw	high STR_4
  2603  0015A8  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2604  0015AA  C0E5  F0B2         	movff	_menu_value+1,?_sprintf+4
  2605  0015AE  6BB3               	clrf	(?_sprintf+5)& (0+255),b
  2606  0015B0  EC53  F023         	call	_sprintf	;wreg free
  2607  0015B4                     
  2608                           ;fs_menu_controller.c: 317:             Lcd_Write_String(textCursor2);
  2609  0015B4  0EB6               	movlw	low stateMachine@textCursor2
  2610  0015B6  6E05               	movwf	Lcd_Write_String@a^0,c
  2611  0015B8  0E00               	movlw	high stateMachine@textCursor2
  2612  0015BA  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2613  0015BC  ECCB  F021         	call	_Lcd_Write_String	;wreg free
  2614  0015C0                     
  2615                           ;fs_menu_controller.c: 319:             if(timer_value.menu_login_delay == 100)
  2616  0015C0  0E64               	movlw	100
  2617  0015C2  0100               	movlb	0	; () banked
  2618  0015C4  19DA               	xorwf	(_timer_value+8)& (0+255),w,b
  2619  0015C6  A4D8               	btfss	status,2,c
  2620  0015C8  EFE8  F00A         	goto	u6971
  2621  0015CC  EFEA  F00A         	goto	u6970
  2622  0015D0                     u6971:
  2623  0015D0  EFD9  F00D         	goto	l397
  2624  0015D4                     u6970:
  2625  0015D4  EF7C  F00A         	goto	l5470
  2626  0015D8                     l372:
  2627                           
  2628                           ; BSR set to: 0
  2629                           ;fs_menu_controller.c: 328:             LATBbits.LATB6 = 0;
  2630  0015D8  9C8A               	bcf	138,6,c	;volatile
  2631                           
  2632                           ;fs_menu_controller.c: 329:             LATAbits.LATA4 = 0;
  2633  0015DA  9889               	bcf	137,4,c	;volatile
  2634                           
  2635                           ;fs_menu_controller.c: 330:             LATEbits.LATE2 = 1;
  2636  0015DC  848D               	bsf	141,2,c	;volatile
  2637                           
  2638                           ;fs_menu_controller.c: 332:             if (menu_flags.menu_input_flag == 1)
  2639  0015DE  A1F0               	btfss	_menu_flags& (0+255),0,b
  2640  0015E0  EFF4  F00A         	goto	u6981
  2641  0015E4  EFF6  F00A         	goto	u6980
  2642  0015E8                     u6981:
  2643  0015E8  EFF9  F00A         	goto	l5514
  2644  0015EC                     u6980:
  2645  0015EC                     
  2646                           ; BSR set to: 0
  2647                           ;fs_menu_controller.c: 333:             {;fs_menu_controller.c: 334:                 men
      +                          u_flags.menu_input_flag = 0;
  2648  0015EC  91F0               	bcf	_menu_flags& (0+255),0,b
  2649  0015EE                     
  2650                           ; BSR set to: 0
  2651                           ;fs_menu_controller.c: 335:                 menu_selected = DRIVER_TIME_SETTING;
  2652  0015EE  0E01               	movlw	1
  2653  0015F0  6FF1               	movwf	_menu_selected& (0+255),b
  2654  0015F2                     l5514:
  2655                           
  2656                           ; BSR set to: 0
  2657                           ;fs_menu_controller.c: 338:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_value.speed_limit < 5))
  2658  0015F2  A9F0               	btfss	_menu_flags& (0+255),4,b
  2659  0015F4  EFFE  F00A         	goto	u6991
  2660  0015F8  EF00  F00B         	goto	u6990
  2661  0015FC                     u6991:
  2662  0015FC  EF0F  F00B         	goto	l5524
  2663  001600                     u6990:
  2664  001600                     
  2665                           ; BSR set to: 0
  2666  001600  0E05               	movlw	5
  2667  001602  61E6               	cpfslt	(_menu_value+2)& (0+255),b
  2668  001604  EF06  F00B         	goto	u7001
  2669  001608  EF08  F00B         	goto	u7000
  2670  00160C                     u7001:
  2671  00160C  EF0F  F00B         	goto	l5524
  2672  001610                     u7000:
  2673  001610                     
  2674                           ; BSR set to: 0
  2675                           ;fs_menu_controller.c: 339:             {;fs_menu_controller.c: 340:                 men
      +                          u_flags.menu_increase_flag = 0;
  2676  001610  99F0               	bcf	_menu_flags& (0+255),4,b
  2677  001612                     
  2678                           ; BSR set to: 0
  2679                           ;fs_menu_controller.c: 341:                 menu_value.speed_limit += 1;
  2680  001612  2BE6               	incf	(_menu_value+2)& (0+255),f,b
  2681  001614                     
  2682                           ; BSR set to: 0
  2683                           ;fs_menu_controller.c: 342:                 eepromWrite(0x02,menu_value.speed_limit);
  2684  001614  C0E6  F001         	movff	_menu_value+2,eepromWrite@data
  2685  001618  0E02               	movlw	2
  2686  00161A  EC8E  F024         	call	_eepromWrite
  2687  00161E                     l5524:
  2688                           
  2689                           ;fs_menu_controller.c: 345:             if ((menu_flags.menu_decrease_flag == 1) && (men
      +                          u_value.speed_limit > 0))
  2690  00161E  0100               	movlb	0	; () banked
  2691  001620  ABF0               	btfss	_menu_flags& (0+255),5,b
  2692  001622  EF15  F00B         	goto	u7011
  2693  001626  EF17  F00B         	goto	u7010
  2694  00162A                     u7011:
  2695  00162A  EF26  F00B         	goto	l5534
  2696  00162E                     u7010:
  2697  00162E                     
  2698                           ; BSR set to: 0
  2699  00162E  51E6               	movf	(_menu_value+2)& (0+255),w,b
  2700  001630  B4D8               	btfsc	status,2,c
  2701  001632  EF1D  F00B         	goto	u7021
  2702  001636  EF1F  F00B         	goto	u7020
  2703  00163A                     u7021:
  2704  00163A  EF26  F00B         	goto	l5534
  2705  00163E                     u7020:
  2706  00163E                     
  2707                           ; BSR set to: 0
  2708                           ;fs_menu_controller.c: 346:             {;fs_menu_controller.c: 347:                  me
      +                          nu_flags.menu_decrease_flag = 0;
  2709  00163E  9BF0               	bcf	_menu_flags& (0+255),5,b
  2710  001640                     
  2711                           ; BSR set to: 0
  2712                           ;fs_menu_controller.c: 348:                  menu_value.speed_limit -= 1;
  2713  001640  07E6               	decf	(_menu_value+2)& (0+255),f,b
  2714  001642                     
  2715                           ; BSR set to: 0
  2716                           ;fs_menu_controller.c: 349:                  eepromWrite(0x02,menu_value.speed_limit);
  2717  001642  C0E6  F001         	movff	_menu_value+2,eepromWrite@data
  2718  001646  0E02               	movlw	2
  2719  001648  EC8E  F024         	call	_eepromWrite
  2720  00164C                     l5534:
  2721                           
  2722                           ;fs_menu_controller.c: 351:             Lcd_Set_Cursor(1,1);
  2723  00164C  0E01               	movlw	1
  2724  00164E  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2725  001650  0E01               	movlw	1
  2726  001652  EC0A  F022         	call	_Lcd_Set_Cursor
  2727  001656                     
  2728                           ;fs_menu_controller.c: 352:             Lcd_Write_String("HIZ LiMiTi      ");
  2729  001656  0E24               	movlw	low STR_7
  2730  001658  6E05               	movwf	Lcd_Write_String@a^0,c
  2731  00165A  0E06               	movlw	high STR_7
  2732  00165C  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2733  00165E  ECCB  F021         	call	_Lcd_Write_String	;wreg free
  2734  001662                     
  2735                           ;fs_menu_controller.c: 353:             Lcd_Set_Cursor(2,1);
  2736  001662  0E01               	movlw	1
  2737  001664  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2738  001666  0E02               	movlw	2
  2739  001668  EC0A  F022         	call	_Lcd_Set_Cursor
  2740  00166C                     
  2741                           ;fs_menu_controller.c: 354:             sprintf(textCursor2,"%d               ",menu_val
      +                          ue.speed_limit);
  2742  00166C  0EB6               	movlw	low stateMachine@textCursor2
  2743  00166E  0100               	movlb	0	; () banked
  2744  001670  6FAE               	movwf	sprintf@s& (0+255),b
  2745  001672  0E00               	movlw	high stateMachine@textCursor2
  2746  001674  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2747  001676  0E01               	movlw	low STR_4
  2748  001678  6FB0               	movwf	sprintf@fmt& (0+255),b
  2749  00167A  0E06               	movlw	high STR_4
  2750  00167C  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2751  00167E  C0E6  F0B2         	movff	_menu_value+2,?_sprintf+4
  2752  001682  6BB3               	clrf	(?_sprintf+5)& (0+255),b
  2753  001684  EC53  F023         	call	_sprintf	;wreg free
  2754  001688                     
  2755                           ;fs_menu_controller.c: 355:             Lcd_Write_String(textCursor2);
  2756  001688  0EB6               	movlw	low stateMachine@textCursor2
  2757  00168A  6E05               	movwf	Lcd_Write_String@a^0,c
  2758  00168C  0E00               	movlw	high stateMachine@textCursor2
  2759  00168E  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2760  001690  ECCB  F021         	call	_Lcd_Write_String	;wreg free
  2761  001694                     
  2762                           ;fs_menu_controller.c: 357:             if(timer_value.menu_login_delay == 100)
  2763  001694  0E64               	movlw	100
  2764  001696  0100               	movlb	0	; () banked
  2765  001698  19DA               	xorwf	(_timer_value+8)& (0+255),w,b
  2766  00169A  A4D8               	btfss	status,2,c
  2767  00169C  EF52  F00B         	goto	u7031
  2768  0016A0  EF54  F00B         	goto	u7030
  2769  0016A4                     u7031:
  2770  0016A4  EFD9  F00D         	goto	l397
  2771  0016A8                     u7030:
  2772  0016A8  EF7C  F00A         	goto	l5470
  2773  0016AC                     l5548:
  2774                           
  2775                           ; BSR set to: 0
  2776                           ;fs_menu_controller.c: 365:             startIsClick = 0;
  2777  0016AC  0E00               	movlw	0
  2778  0016AE  6FF3               	movwf	_startIsClick& (0+255),b
  2779                           
  2780                           ;fs_menu_controller.c: 366:             pauseIsClick = 0;
  2781  0016B0  0E00               	movlw	0
  2782  0016B2  6FF4               	movwf	_pauseIsClick& (0+255),b
  2783                           
  2784                           ;fs_menu_controller.c: 367:             stopIsClick = 1;
  2785  0016B4  0E01               	movlw	1
  2786  0016B6  6FF2               	movwf	_stopIsClick& (0+255),b
  2787  0016B8                     
  2788                           ; BSR set to: 0
  2789                           ;fs_menu_controller.c: 369:             Lcd_Set_Cursor(1,1);
  2790  0016B8  0E01               	movlw	1
  2791  0016BA  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2792  0016BC  0E01               	movlw	1
  2793  0016BE  EC0A  F022         	call	_Lcd_Set_Cursor
  2794  0016C2                     
  2795                           ;fs_menu_controller.c: 370:             Lcd_Write_String("ZAMAN DOLDU     ");
  2796  0016C2  0E46               	movlw	low STR_9
  2797  0016C4  6E05               	movwf	Lcd_Write_String@a^0,c
  2798  0016C6  0E06               	movlw	high STR_9
  2799  0016C8  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2800  0016CA  ECCB  F021         	call	_Lcd_Write_String	;wreg free
  2801  0016CE                     
  2802                           ;fs_menu_controller.c: 371:             LATBbits.LATB6 = 1;
  2803  0016CE  8C8A               	bsf	138,6,c	;volatile
  2804  0016D0                     
  2805                           ;fs_menu_controller.c: 372:             LATEbits.LATE2 = 0;
  2806  0016D0  948D               	bcf	141,2,c	;volatile
  2807  0016D2                     
  2808                           ;fs_menu_controller.c: 373:             LATAbits.LATA4 = 0;
  2809  0016D2  9889               	bcf	137,4,c	;volatile
  2810  0016D4                     
  2811                           ;fs_menu_controller.c: 374:             timer_value.remainingSecond = 0;
  2812  0016D4  0E00               	movlw	0
  2813  0016D6  0100               	movlb	0	; () banked
  2814  0016D8  6FD7               	movwf	(_timer_value+5)& (0+255),b
  2815  0016DA  0E00               	movlw	0
  2816  0016DC  6FD6               	movwf	(_timer_value+4)& (0+255),b
  2817  0016DE                     
  2818                           ; BSR set to: 0
  2819                           ;fs_menu_controller.c: 375:             timer_value.remainingMinute = 0;
  2820  0016DE  0E00               	movlw	0
  2821  0016E0  6FD9               	movwf	(_timer_value+7)& (0+255),b
  2822  0016E2  0E00               	movlw	0
  2823  0016E4  6FD8               	movwf	(_timer_value+6)& (0+255),b
  2824  0016E6                     
  2825                           ; BSR set to: 0
  2826                           ;fs_menu_controller.c: 376:              Lcd_Set_Cursor(2,1);
  2827  0016E6  0E01               	movlw	1
  2828  0016E8  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2829  0016EA  0E02               	movlw	2
  2830  0016EC  EC0A  F022         	call	_Lcd_Set_Cursor
  2831  0016F0                     
  2832                           ;fs_menu_controller.c: 377:             sprintf(textCursor2,"      %d:%d    ",timer_valu
      +                          e.remainingMinute,timer_value.remainingSecond);
  2833  0016F0  0EB6               	movlw	low stateMachine@textCursor2
  2834  0016F2  0100               	movlb	0	; () banked
  2835  0016F4  6FAE               	movwf	sprintf@s& (0+255),b
  2836  0016F6  0E00               	movlw	high stateMachine@textCursor2
  2837  0016F8  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2838  0016FA  0E8A               	movlw	low STR_10
  2839  0016FC  6FB0               	movwf	sprintf@fmt& (0+255),b
  2840  0016FE  0E06               	movlw	high STR_10
  2841  001700  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2842  001702  C0D8  F0B2         	movff	_timer_value+6,?_sprintf+4
  2843  001706  C0D9  F0B3         	movff	_timer_value+7,?_sprintf+5
  2844  00170A  C0D6  F0B4         	movff	_timer_value+4,?_sprintf+6
  2845  00170E  C0D7  F0B5         	movff	_timer_value+5,?_sprintf+7
  2846  001712  EC53  F023         	call	_sprintf	;wreg free
  2847  001716                     
  2848                           ;fs_menu_controller.c: 378:             Lcd_Write_String(textCursor2);
  2849  001716  0EB6               	movlw	low stateMachine@textCursor2
  2850  001718  6E05               	movwf	Lcd_Write_String@a^0,c
  2851  00171A  0E00               	movlw	high stateMachine@textCursor2
  2852  00171C  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2853  00171E  ECCB  F021         	call	_Lcd_Write_String	;wreg free
  2854  001722                     
  2855                           ;fs_menu_controller.c: 380:         if (menu_flags.menu_start_flag == 1)
  2856  001722  0100               	movlb	0	; () banked
  2857  001724  A3F0               	btfss	_menu_flags& (0+255),1,b
  2858  001726  EF97  F00B         	goto	u7041
  2859  00172A  EF99  F00B         	goto	u7040
  2860  00172E                     u7041:
  2861  00172E  EFAA  F00B         	goto	l5576
  2862  001732                     u7040:
  2863  001732                     
  2864                           ; BSR set to: 0
  2865                           ;fs_menu_controller.c: 381:         {;fs_menu_controller.c: 382:             menu_flags.
      +                          menu_start_flag = 0;
  2866  001732  93F0               	bcf	_menu_flags& (0+255),1,b
  2867  001734                     
  2868                           ; BSR set to: 0
  2869                           ;fs_menu_controller.c: 383:             menu_selected = START_MENU;
  2870  001734  0E05               	movlw	5
  2871  001736  6FF1               	movwf	_menu_selected& (0+255),b
  2872                           
  2873                           ;fs_menu_controller.c: 385:             startIsClick = 1;
  2874  001738  0E01               	movlw	1
  2875  00173A  6FF3               	movwf	_startIsClick& (0+255),b
  2876                           
  2877                           ;fs_menu_controller.c: 386:             pauseIsClick = 0;
  2878  00173C  0E00               	movlw	0
  2879  00173E  6FF4               	movwf	_pauseIsClick& (0+255),b
  2880                           
  2881                           ;fs_menu_controller.c: 387:             stopIsClick = 0;
  2882  001740  0E00               	movlw	0
  2883  001742  6FF2               	movwf	_stopIsClick& (0+255),b
  2884                           
  2885                           ;fs_menu_controller.c: 388:             timer_value.second = 0;
  2886  001744  0E00               	movlw	0
  2887  001746  6FD3               	movwf	(_timer_value+1)& (0+255),b
  2888  001748  0E00               	movlw	0
  2889  00174A  6FD2               	movwf	_timer_value& (0+255),b
  2890                           
  2891                           ;fs_menu_controller.c: 389:             timer_value.minute = 0;
  2892  00174C  0E00               	movlw	0
  2893  00174E  6FD5               	movwf	(_timer_value+3)& (0+255),b
  2894  001750  0E00               	movlw	0
  2895  001752  6FD4               	movwf	(_timer_value+2)& (0+255),b
  2896  001754                     l5576:
  2897                           
  2898                           ; BSR set to: 0
  2899                           ;fs_menu_controller.c: 392:         if ( timer_value.menu_login_delay == 100)
  2900  001754  0E64               	movlw	100
  2901  001756  19DA               	xorwf	(_timer_value+8)& (0+255),w,b
  2902  001758  A4D8               	btfss	status,2,c
  2903  00175A  EFB1  F00B         	goto	u7051
  2904  00175E  EFB3  F00B         	goto	u7050
  2905  001762                     u7051:
  2906  001762  EFD9  F00D         	goto	l397
  2907  001766                     u7050:
  2908  001766                     
  2909                           ; BSR set to: 0
  2910                           ;fs_menu_controller.c: 393:         {;fs_menu_controller.c: 394:             timer_value
      +                          .menu_login_delay = 0;
  2911  001766  0E00               	movlw	0
  2912  001768  6FDA               	movwf	(_timer_value+8)& (0+255),b
  2913                           
  2914                           ;fs_menu_controller.c: 395:             menu_selected = DRIVER_TIME_SETTING;
  2915  00176A  0E01               	movlw	1
  2916  00176C  6FF1               	movwf	_menu_selected& (0+255),b
  2917  00176E  EFD9  F00D         	goto	l397
  2918  001772                     l380:
  2919                           
  2920                           ; BSR set to: 0
  2921                           ;fs_menu_controller.c: 401:             timer_value.remainingMinute = menu_value.driver_
      +                          time;
  2922  001772  C0E4  F0D8         	movff	_menu_value,_timer_value+6
  2923  001776  6BD9               	clrf	(_timer_value+7)& (0+255),b
  2924  001778                     
  2925                           ; BSR set to: 0
  2926                           ;fs_menu_controller.c: 402:             timer_value.remainingSecond = 0;
  2927  001778  0E00               	movlw	0
  2928  00177A  6FD7               	movwf	(_timer_value+5)& (0+255),b
  2929  00177C  0E00               	movlw	0
  2930  00177E  6FD6               	movwf	(_timer_value+4)& (0+255),b
  2931                           
  2932                           ;fs_menu_controller.c: 403:             startIsClick = 1;
  2933  001780  0E01               	movlw	1
  2934  001782  6FF3               	movwf	_startIsClick& (0+255),b
  2935                           
  2936                           ;fs_menu_controller.c: 404:             stopIsClick = 0;
  2937  001784  0E00               	movlw	0
  2938  001786  6FF2               	movwf	_stopIsClick& (0+255),b
  2939                           
  2940                           ;fs_menu_controller.c: 405:             menu_selected = MAIN_MENU;
  2941  001788  0E00               	movlw	0
  2942  00178A  6FF1               	movwf	_menu_selected& (0+255),b
  2943                           
  2944                           ;fs_menu_controller.c: 406:         break;
  2945  00178C  EFD9  F00D         	goto	l397
  2946  001790                     l381:
  2947                           
  2948                           ; BSR set to: 0
  2949                           ;fs_menu_controller.c: 410:             LATBbits.LATB6 = 1;
  2950  001790  8C8A               	bsf	138,6,c	;volatile
  2951                           
  2952                           ;fs_menu_controller.c: 411:             LATAbits.LATA4 = 1;
  2953  001792  8889               	bsf	137,4,c	;volatile
  2954                           
  2955                           ;fs_menu_controller.c: 412:             LATEbits.LATE2 = 1;
  2956  001794  848D               	bsf	141,2,c	;volatile
  2957  001796                     
  2958                           ; BSR set to: 0
  2959                           ;fs_menu_controller.c: 416:             Lcd_Set_Cursor(1,1);
  2960  001796  0E01               	movlw	1
  2961  001798  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2962  00179A  0E01               	movlw	1
  2963  00179C  EC0A  F022         	call	_Lcd_Set_Cursor
  2964  0017A0                     
  2965                           ;fs_menu_controller.c: 417:             Lcd_Write_String("HAREKET DURDU   ");
  2966  0017A0  0E57               	movlw	low STR_11
  2967  0017A2  6E05               	movwf	Lcd_Write_String@a^0,c
  2968  0017A4  0E06               	movlw	high STR_11
  2969  0017A6  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2970  0017A8  ECCB  F021         	call	_Lcd_Write_String	;wreg free
  2971  0017AC                     
  2972                           ;fs_menu_controller.c: 418:             Lcd_Set_Cursor(2,1);
  2973  0017AC  0E01               	movlw	1
  2974  0017AE  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2975  0017B0  0E02               	movlw	2
  2976  0017B2  EC0A  F022         	call	_Lcd_Set_Cursor
  2977  0017B6                     
  2978                           ;fs_menu_controller.c: 419:             sprintf(textCursor2,"      %d:%d    ",timer_valu
      +                          e.remainingMinute,timer_value.remainingSecond);
  2979  0017B6  0EB6               	movlw	low stateMachine@textCursor2
  2980  0017B8  0100               	movlb	0	; () banked
  2981  0017BA  6FAE               	movwf	sprintf@s& (0+255),b
  2982  0017BC  0E00               	movlw	high stateMachine@textCursor2
  2983  0017BE  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2984  0017C0  0E8A               	movlw	low STR_10
  2985  0017C2  6FB0               	movwf	sprintf@fmt& (0+255),b
  2986  0017C4  0E06               	movlw	high STR_10
  2987  0017C6  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2988  0017C8  C0D8  F0B2         	movff	_timer_value+6,?_sprintf+4
  2989  0017CC  C0D9  F0B3         	movff	_timer_value+7,?_sprintf+5
  2990  0017D0  C0D6  F0B4         	movff	_timer_value+4,?_sprintf+6
  2991  0017D4  C0D7  F0B5         	movff	_timer_value+5,?_sprintf+7
  2992  0017D8  EC53  F023         	call	_sprintf	;wreg free
  2993  0017DC                     
  2994                           ;fs_menu_controller.c: 420:             Lcd_Write_String(textCursor2);
  2995  0017DC  0EB6               	movlw	low stateMachine@textCursor2
  2996  0017DE  6E05               	movwf	Lcd_Write_String@a^0,c
  2997  0017E0  0E00               	movlw	high stateMachine@textCursor2
  2998  0017E2  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2999  0017E4  ECCB  F021         	call	_Lcd_Write_String	;wreg free
  3000  0017E8                     
  3001                           ;fs_menu_controller.c: 422:             if (menu_flags.menu_start_flag == 1)
  3002  0017E8  0100               	movlb	0	; () banked
  3003  0017EA  A3F0               	btfss	_menu_flags& (0+255),1,b
  3004  0017EC  EFFA  F00B         	goto	u7061
  3005  0017F0  EFFC  F00B         	goto	u7060
  3006  0017F4                     u7061:
  3007  0017F4  EF05  F00C         	goto	l382
  3008  0017F8                     u7060:
  3009  0017F8                     
  3010                           ; BSR set to: 0
  3011                           ;fs_menu_controller.c: 423:             {;fs_menu_controller.c: 424:                 men
      +                          u_flags.menu_start_flag = 0;
  3012  0017F8  93F0               	bcf	_menu_flags& (0+255),1,b
  3013  0017FA                     
  3014                           ; BSR set to: 0
  3015                           ;fs_menu_controller.c: 425:                 menu_selected = MAIN_MENU;
  3016  0017FA  0E00               	movlw	0
  3017  0017FC  6FF1               	movwf	_menu_selected& (0+255),b
  3018                           
  3019                           ;fs_menu_controller.c: 427:                 startIsClick = 1;
  3020  0017FE  0E01               	movlw	1
  3021  001800  6FF3               	movwf	_startIsClick& (0+255),b
  3022                           
  3023                           ;fs_menu_controller.c: 428:                 pauseIsClick = 0;
  3024  001802  0E00               	movlw	0
  3025  001804  6FF4               	movwf	_pauseIsClick& (0+255),b
  3026                           
  3027                           ;fs_menu_controller.c: 429:                 stopIsClick = 0;
  3028  001806  0E00               	movlw	0
  3029  001808  6FF2               	movwf	_stopIsClick& (0+255),b
  3030  00180A                     l382:
  3031                           
  3032                           ; BSR set to: 0
  3033                           ;fs_menu_controller.c: 432:             if ( (startIsClick == 0) && (pauseIsClick == 0) 
      +                          && (stopIsClick == 1) && (menu_selected == PAUSE_MENU))
  3034  00180A  51F3               	movf	_startIsClick& (0+255),w,b
  3035  00180C  A4D8               	btfss	status,2,c
  3036  00180E  EF0B  F00C         	goto	u7071
  3037  001812  EF0D  F00C         	goto	u7070
  3038  001816                     u7071:
  3039  001816  EF35  F00C         	goto	l5608
  3040  00181A                     u7070:
  3041  00181A                     
  3042                           ; BSR set to: 0
  3043  00181A  51F4               	movf	_pauseIsClick& (0+255),w,b
  3044  00181C  A4D8               	btfss	status,2,c
  3045  00181E  EF13  F00C         	goto	u7081
  3046  001822  EF15  F00C         	goto	u7080
  3047  001826                     u7081:
  3048  001826  EF35  F00C         	goto	l5608
  3049  00182A                     u7080:
  3050  00182A                     
  3051                           ; BSR set to: 0
  3052  00182A  05F2               	decf	_stopIsClick& (0+255),w,b
  3053  00182C  A4D8               	btfss	status,2,c
  3054  00182E  EF1B  F00C         	goto	u7091
  3055  001832  EF1D  F00C         	goto	u7090
  3056  001836                     u7091:
  3057  001836  EF35  F00C         	goto	l5608
  3058  00183A                     u7090:
  3059  00183A                     
  3060                           ; BSR set to: 0
  3061  00183A  0E06               	movlw	6
  3062  00183C  19F1               	xorwf	_menu_selected& (0+255),w,b
  3063  00183E  A4D8               	btfss	status,2,c
  3064  001840  EF24  F00C         	goto	u7101
  3065  001844  EF26  F00C         	goto	u7100
  3066  001848                     u7101:
  3067  001848  EF35  F00C         	goto	l5608
  3068  00184C                     u7100:
  3069  00184C                     
  3070                           ; BSR set to: 0
  3071                           ;fs_menu_controller.c: 433:             {;fs_menu_controller.c: 434:                  ti
      +                          mer_value.remainingMinute = menu_value.driver_time;
  3072  00184C  C0E4  F0D8         	movff	_menu_value,_timer_value+6
  3073  001850  6BD9               	clrf	(_timer_value+7)& (0+255),b
  3074  001852                     
  3075                           ; BSR set to: 0
  3076                           ;fs_menu_controller.c: 435:                  timer_value.remainingSecond = 0;
  3077  001852  0E00               	movlw	0
  3078  001854  6FD7               	movwf	(_timer_value+5)& (0+255),b
  3079  001856  0E00               	movlw	0
  3080  001858  6FD6               	movwf	(_timer_value+4)& (0+255),b
  3081                           
  3082                           ;fs_menu_controller.c: 436:                  timer_value.second = 0;
  3083  00185A  0E00               	movlw	0
  3084  00185C  6FD3               	movwf	(_timer_value+1)& (0+255),b
  3085  00185E  0E00               	movlw	0
  3086  001860  6FD2               	movwf	_timer_value& (0+255),b
  3087                           
  3088                           ;fs_menu_controller.c: 437:                  timer_value.minute = 0;
  3089  001862  0E00               	movlw	0
  3090  001864  6FD5               	movwf	(_timer_value+3)& (0+255),b
  3091  001866  0E00               	movlw	0
  3092  001868  6FD4               	movwf	(_timer_value+2)& (0+255),b
  3093  00186A                     l5608:
  3094                           
  3095                           ; BSR set to: 0
  3096                           ;fs_menu_controller.c: 441:             if ( timer_value.menu_login_delay == 100)
  3097  00186A  0E64               	movlw	100
  3098  00186C  19DA               	xorwf	(_timer_value+8)& (0+255),w,b
  3099  00186E  A4D8               	btfss	status,2,c
  3100  001870  EF3C  F00C         	goto	u7111
  3101  001874  EF3E  F00C         	goto	u7110
  3102  001878                     u7111:
  3103  001878  EF42  F00C         	goto	l5612
  3104  00187C                     u7110:
  3105  00187C                     
  3106                           ; BSR set to: 0
  3107                           ;fs_menu_controller.c: 442:             {;fs_menu_controller.c: 443:                 tim
      +                          er_value.menu_login_delay = 0;
  3108  00187C  0E00               	movlw	0
  3109  00187E  6FDA               	movwf	(_timer_value+8)& (0+255),b
  3110                           
  3111                           ;fs_menu_controller.c: 444:                 menu_selected = DRIVER_TIME_SETTING;
  3112  001880  0E01               	movlw	1
  3113  001882  6FF1               	movwf	_menu_selected& (0+255),b
  3114  001884                     l5612:
  3115                           
  3116                           ; BSR set to: 0
  3117                           ;fs_menu_controller.c: 447:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_flags.menu_decrease_flag == 1))
  3118  001884  A9F0               	btfss	_menu_flags& (0+255),4,b
  3119  001886  EF47  F00C         	goto	u7121
  3120  00188A  EF49  F00C         	goto	u7120
  3121  00188E                     u7121:
  3122  00188E  EFD9  F00D         	goto	l397
  3123  001892                     u7120:
  3124  001892                     
  3125                           ; BSR set to: 0
  3126  001892  ABF0               	btfss	_menu_flags& (0+255),5,b
  3127  001894  EF4E  F00C         	goto	u7131
  3128  001898  EF50  F00C         	goto	u7130
  3129  00189C                     u7131:
  3130  00189C  EFD9  F00D         	goto	l397
  3131  0018A0                     u7130:
  3132  0018A0                     
  3133                           ; BSR set to: 0
  3134                           ;fs_menu_controller.c: 448:             {;fs_menu_controller.c: 449:                 men
      +                          u_selected = SECRET_MENU;
  3135  0018A0  0E08               	movlw	8
  3136  0018A2  6FF1               	movwf	_menu_selected& (0+255),b
  3137                           
  3138                           ;fs_menu_controller.c: 450:                 secretMenuCounter = 1;
  3139  0018A4  0E01               	movlw	1
  3140  0018A6  6FEF               	movwf	stateMachine@secretMenuCounter& (0+255),b
  3141  0018A8  EFD9  F00D         	goto	l397
  3142  0018AC                     l387:
  3143                           
  3144                           ; BSR set to: 0
  3145                           ;fs_menu_controller.c: 462:             if (menu_flags.menu_input_flag == 1)
  3146  0018AC  A1F0               	btfss	_menu_flags& (0+255),0,b
  3147  0018AE  EF5B  F00C         	goto	u7141
  3148  0018B2  EF5D  F00C         	goto	u7140
  3149  0018B6                     u7141:
  3150  0018B6  EF69  F00C         	goto	l5626
  3151  0018BA                     u7140:
  3152  0018BA                     
  3153                           ; BSR set to: 0
  3154                           ;fs_menu_controller.c: 463:             {;fs_menu_controller.c: 464:                 men
      +                          u_flags.menu_input_flag = 0;
  3155  0018BA  91F0               	bcf	_menu_flags& (0+255),0,b
  3156  0018BC                     
  3157                           ; BSR set to: 0
  3158                           ;fs_menu_controller.c: 465:                 secretMenuCounter++;
  3159  0018BC  2BEF               	incf	stateMachine@secretMenuCounter& (0+255),f,b
  3160  0018BE                     
  3161                           ; BSR set to: 0
  3162                           ;fs_menu_controller.c: 467:                 if (secretMenuCounter >2)
  3163  0018BE  0E02               	movlw	2
  3164  0018C0  65EF               	cpfsgt	stateMachine@secretMenuCounter& (0+255),b
  3165  0018C2  EF65  F00C         	goto	u7151
  3166  0018C6  EF67  F00C         	goto	u7150
  3167  0018CA                     u7151:
  3168  0018CA  EF69  F00C         	goto	l5626
  3169  0018CE                     u7150:
  3170  0018CE                     
  3171                           ; BSR set to: 0
  3172                           ;fs_menu_controller.c: 468:                 {;fs_menu_controller.c: 469:                
      +                               secretMenuCounter = 1;
  3173  0018CE  0E01               	movlw	1
  3174  0018D0  6FEF               	movwf	stateMachine@secretMenuCounter& (0+255),b
  3175  0018D2                     l5626:
  3176                           
  3177                           ; BSR set to: 0
  3178                           ;fs_menu_controller.c: 473:             if (secretMenuCounter == 1)
  3179  0018D2  05EF               	decf	stateMachine@secretMenuCounter& (0+255),w,b
  3180  0018D4  A4D8               	btfss	status,2,c
  3181  0018D6  EF6F  F00C         	goto	u7161
  3182  0018DA  EF71  F00C         	goto	u7160
  3183  0018DE                     u7161:
  3184  0018DE  EF01  F00D         	goto	l5654
  3185  0018E2                     u7160:
  3186  0018E2                     
  3187                           ; BSR set to: 0
  3188                           ;fs_menu_controller.c: 474:             {;fs_menu_controller.c: 475:                 Lcd
      +                          _Set_Cursor(1,1);
  3189  0018E2  0E01               	movlw	1
  3190  0018E4  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3191  0018E6  0E01               	movlw	1
  3192  0018E8  EC0A  F022         	call	_Lcd_Set_Cursor
  3193  0018EC                     
  3194                           ;fs_menu_controller.c: 476:                 Lcd_Write_String("PID PARAM       ");
  3195  0018EC  0E13               	movlw	low STR_13
  3196  0018EE  6E05               	movwf	Lcd_Write_String@a^0,c
  3197  0018F0  0E06               	movlw	high STR_13
  3198  0018F2  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3199  0018F4  ECCB  F021         	call	_Lcd_Write_String	;wreg free
  3200  0018F8                     
  3201                           ;fs_menu_controller.c: 477:                 Lcd_Set_Cursor(2,1);
  3202  0018F8  0E01               	movlw	1
  3203  0018FA  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3204  0018FC  0E02               	movlw	2
  3205  0018FE  EC0A  F022         	call	_Lcd_Set_Cursor
  3206  001902                     
  3207                           ;fs_menu_controller.c: 478:                 sprintf(textCursor2,"Kp:%5.1f     ",KP);
  3208  001902  0EB6               	movlw	low stateMachine@textCursor2
  3209  001904  0100               	movlb	0	; () banked
  3210  001906  6FAE               	movwf	sprintf@s& (0+255),b
  3211  001908  0E00               	movlw	high stateMachine@textCursor2
  3212  00190A  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  3213  00190C  0EA9               	movlw	low STR_14
  3214  00190E  6FB0               	movwf	sprintf@fmt& (0+255),b
  3215  001910  0E06               	movlw	high STR_14
  3216  001912  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  3217  001914  C0FA  F0B2         	movff	_KP,?_sprintf+4
  3218  001918  C0FB  F0B3         	movff	_KP+1,?_sprintf+5
  3219  00191C  C0FC  F0B4         	movff	_KP+2,?_sprintf+6
  3220  001920  C0FD  F0B5         	movff	_KP+3,?_sprintf+7
  3221  001924  EC53  F023         	call	_sprintf	;wreg free
  3222  001928                     
  3223                           ;fs_menu_controller.c: 479:                 Lcd_Write_String(textCursor2);
  3224  001928  0EB6               	movlw	low stateMachine@textCursor2
  3225  00192A  6E05               	movwf	Lcd_Write_String@a^0,c
  3226  00192C  0E00               	movlw	high stateMachine@textCursor2
  3227  00192E  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3228  001930  ECCB  F021         	call	_Lcd_Write_String	;wreg free
  3229  001934                     
  3230                           ;fs_menu_controller.c: 481:                 if ((menu_flags.menu_increase_flag == 1) && 
      +                          (KP < 2.5))
  3231  001934  0100               	movlb	0	; () banked
  3232  001936  A9F0               	btfss	_menu_flags& (0+255),4,b
  3233  001938  EFA0  F00C         	goto	u7171
  3234  00193C  EFA2  F00C         	goto	u7170
  3235  001940                     u7171:
  3236  001940  EFD7  F00C         	goto	l5646
  3237  001944                     u7170:
  3238  001944                     
  3239                           ; BSR set to: 0
  3240  001944  C0FA  F01A         	movff	_KP,___flge@ff1
  3241  001948  C0FB  F01B         	movff	_KP+1,___flge@ff1+1
  3242  00194C  C0FC  F01C         	movff	_KP+2,___flge@ff1+2
  3243  001950  C0FD  F01D         	movff	_KP+3,___flge@ff1+3
  3244  001954  0E00               	movlw	0
  3245  001956  6E1E               	movwf	___flge@ff2^0,c
  3246  001958  0E00               	movlw	0
  3247  00195A  6E1F               	movwf	(___flge@ff2+1)^0,c
  3248  00195C  0E20               	movlw	32
  3249  00195E  6E20               	movwf	(___flge@ff2+2)^0,c
  3250  001960  0E40               	movlw	64
  3251  001962  6E21               	movwf	(___flge@ff2+3)^0,c
  3252  001964  ECD5  F01D         	call	___flge	;wreg free
  3253  001968  B0D8               	btfsc	status,0,c
  3254  00196A  EFB9  F00C         	goto	u7181
  3255  00196E  EFBB  F00C         	goto	u7180
  3256  001972                     u7181:
  3257  001972  EFD7  F00C         	goto	l5646
  3258  001976                     u7180:
  3259  001976                     
  3260                           ;fs_menu_controller.c: 482:                 {;fs_menu_controller.c: 483:                
      +                               menu_flags.menu_increase_flag = 0;
  3261  001976  0100               	movlb	0	; () banked
  3262  001978  99F0               	bcf	_menu_flags& (0+255),4,b
  3263  00197A                     
  3264                           ; BSR set to: 0
  3265                           ;fs_menu_controller.c: 484:                     KP += 0.1;
  3266  00197A  C0FA  F001         	movff	_KP,___fladd@b
  3267  00197E  C0FB  F002         	movff	_KP+1,___fladd@b+1
  3268  001982  C0FC  F003         	movff	_KP+2,___fladd@b+2
  3269  001986  C0FD  F004         	movff	_KP+3,___fladd@b+3
  3270  00198A  0ECD               	movlw	205
  3271  00198C  6E05               	movwf	___fladd@a^0,c
  3272  00198E  0ECC               	movlw	204
  3273  001990  6E06               	movwf	(___fladd@a+1)^0,c
  3274  001992  0ECC               	movlw	204
  3275  001994  6E07               	movwf	(___fladd@a+2)^0,c
  3276  001996  0E3D               	movlw	61
  3277  001998  6E08               	movwf	(___fladd@a+3)^0,c
  3278  00199A  ECF2  F010         	call	___fladd	;wreg free
  3279  00199E  C001  F0FA         	movff	?___fladd,_KP
  3280  0019A2  C002  F0FB         	movff	?___fladd+1,_KP+1
  3281  0019A6  C003  F0FC         	movff	?___fladd+2,_KP+2
  3282  0019AA  C004  F0FD         	movff	?___fladd+3,_KP+3
  3283  0019AE                     l5646:
  3284                           
  3285                           ;fs_menu_controller.c: 487:                 if ((menu_flags.menu_decrease_flag == 1) && 
      +                          (KP >= 0))
  3286  0019AE  0100               	movlb	0	; () banked
  3287  0019B0  ABF0               	btfss	_menu_flags& (0+255),5,b
  3288  0019B2  EFDD  F00C         	goto	u7191
  3289  0019B6  EFDF  F00C         	goto	u7190
  3290  0019BA                     u7191:
  3291  0019BA  EF01  F00D         	goto	l5654
  3292  0019BE                     u7190:
  3293  0019BE                     
  3294                           ; BSR set to: 0
  3295  0019BE  BFFD               	btfsc	(_KP+3)& (0+255),7,b
  3296  0019C0  EFE4  F00C         	goto	u7201
  3297  0019C4  EFE6  F00C         	goto	u7200
  3298  0019C8                     u7201:
  3299  0019C8  EF01  F00D         	goto	l5654
  3300  0019CC                     u7200:
  3301  0019CC                     
  3302                           ; BSR set to: 0
  3303                           ;fs_menu_controller.c: 488:                 {;fs_menu_controller.c: 489:                
      +                               menu_flags.menu_decrease_flag = 0;
  3304  0019CC  9BF0               	bcf	_menu_flags& (0+255),5,b
  3305  0019CE                     
  3306                           ; BSR set to: 0
  3307                           ;fs_menu_controller.c: 490:                      KP -= 0.1;
  3308  0019CE  C0FA  F01A         	movff	_KP,___flsub@b
  3309  0019D2  C0FB  F01B         	movff	_KP+1,___flsub@b+1
  3310  0019D6  C0FC  F01C         	movff	_KP+2,___flsub@b+2
  3311  0019DA  C0FD  F01D         	movff	_KP+3,___flsub@b+3
  3312  0019DE  0ECD               	movlw	205
  3313  0019E0  6E1E               	movwf	___flsub@a^0,c
  3314  0019E2  0ECC               	movlw	204
  3315  0019E4  6E1F               	movwf	(___flsub@a+1)^0,c
  3316  0019E6  0ECC               	movlw	204
  3317  0019E8  6E20               	movwf	(___flsub@a+2)^0,c
  3318  0019EA  0E3D               	movlw	61
  3319  0019EC  6E21               	movwf	(___flsub@a+3)^0,c
  3320  0019EE  EC9F  F023         	call	___flsub	;wreg free
  3321  0019F2  C01A  F0FA         	movff	?___flsub,_KP
  3322  0019F6  C01B  F0FB         	movff	?___flsub+1,_KP+1
  3323  0019FA  C01C  F0FC         	movff	?___flsub+2,_KP+2
  3324  0019FE  C01D  F0FD         	movff	?___flsub+3,_KP+3
  3325  001A02                     l5654:
  3326                           
  3327                           ;fs_menu_controller.c: 494:             if (secretMenuCounter == 2)
  3328  001A02  0E02               	movlw	2
  3329  001A04  0100               	movlb	0	; () banked
  3330  001A06  19EF               	xorwf	stateMachine@secretMenuCounter& (0+255),w,b
  3331  001A08  A4D8               	btfss	status,2,c
  3332  001A0A  EF09  F00D         	goto	u7211
  3333  001A0E  EF0B  F00D         	goto	u7210
  3334  001A12                     u7211:
  3335  001A12  EF9B  F00D         	goto	l5682
  3336  001A16                     u7210:
  3337  001A16                     
  3338                           ; BSR set to: 0
  3339                           ;fs_menu_controller.c: 495:             {;fs_menu_controller.c: 496:                 Lcd
      +                          _Set_Cursor(1,1);
  3340  001A16  0E01               	movlw	1
  3341  001A18  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3342  001A1A  0E01               	movlw	1
  3343  001A1C  EC0A  F022         	call	_Lcd_Set_Cursor
  3344  001A20                     
  3345                           ;fs_menu_controller.c: 497:                 Lcd_Write_String("PID PARAM       ");
  3346  001A20  0E13               	movlw	low STR_13
  3347  001A22  6E05               	movwf	Lcd_Write_String@a^0,c
  3348  001A24  0E06               	movlw	high STR_13
  3349  001A26  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3350  001A28  ECCB  F021         	call	_Lcd_Write_String	;wreg free
  3351  001A2C                     
  3352                           ;fs_menu_controller.c: 498:                 Lcd_Set_Cursor(2,1);
  3353  001A2C  0E01               	movlw	1
  3354  001A2E  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3355  001A30  0E02               	movlw	2
  3356  001A32  EC0A  F022         	call	_Lcd_Set_Cursor
  3357  001A36                     
  3358                           ;fs_menu_controller.c: 499:                 sprintf(textCursor2,"Kd:%5.1f    ",KD);
  3359  001A36  0EB6               	movlw	low stateMachine@textCursor2
  3360  001A38  0100               	movlb	0	; () banked
  3361  001A3A  6FAE               	movwf	sprintf@s& (0+255),b
  3362  001A3C  0E00               	movlw	high stateMachine@textCursor2
  3363  001A3E  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  3364  001A40  0EB7               	movlw	low STR_16
  3365  001A42  6FB0               	movwf	sprintf@fmt& (0+255),b
  3366  001A44  0E06               	movlw	high STR_16
  3367  001A46  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  3368  001A48  C0F6  F0B2         	movff	_KD,?_sprintf+4
  3369  001A4C  C0F7  F0B3         	movff	_KD+1,?_sprintf+5
  3370  001A50  C0F8  F0B4         	movff	_KD+2,?_sprintf+6
  3371  001A54  C0F9  F0B5         	movff	_KD+3,?_sprintf+7
  3372  001A58  EC53  F023         	call	_sprintf	;wreg free
  3373  001A5C                     
  3374                           ;fs_menu_controller.c: 500:                 Lcd_Write_String(textCursor2);
  3375  001A5C  0EB6               	movlw	low stateMachine@textCursor2
  3376  001A5E  6E05               	movwf	Lcd_Write_String@a^0,c
  3377  001A60  0E00               	movlw	high stateMachine@textCursor2
  3378  001A62  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3379  001A64  ECCB  F021         	call	_Lcd_Write_String	;wreg free
  3380  001A68                     
  3381                           ;fs_menu_controller.c: 502:                 if ((menu_flags.menu_increase_flag == 1) && 
      +                          (KD < 2.5))
  3382  001A68  0100               	movlb	0	; () banked
  3383  001A6A  A9F0               	btfss	_menu_flags& (0+255),4,b
  3384  001A6C  EF3A  F00D         	goto	u7221
  3385  001A70  EF3C  F00D         	goto	u7220
  3386  001A74                     u7221:
  3387  001A74  EF71  F00D         	goto	l5674
  3388  001A78                     u7220:
  3389  001A78                     
  3390                           ; BSR set to: 0
  3391  001A78  C0F6  F01A         	movff	_KD,___flge@ff1
  3392  001A7C  C0F7  F01B         	movff	_KD+1,___flge@ff1+1
  3393  001A80  C0F8  F01C         	movff	_KD+2,___flge@ff1+2
  3394  001A84  C0F9  F01D         	movff	_KD+3,___flge@ff1+3
  3395  001A88  0E00               	movlw	0
  3396  001A8A  6E1E               	movwf	___flge@ff2^0,c
  3397  001A8C  0E00               	movlw	0
  3398  001A8E  6E1F               	movwf	(___flge@ff2+1)^0,c
  3399  001A90  0E20               	movlw	32
  3400  001A92  6E20               	movwf	(___flge@ff2+2)^0,c
  3401  001A94  0E40               	movlw	64
  3402  001A96  6E21               	movwf	(___flge@ff2+3)^0,c
  3403  001A98  ECD5  F01D         	call	___flge	;wreg free
  3404  001A9C  B0D8               	btfsc	status,0,c
  3405  001A9E  EF53  F00D         	goto	u7231
  3406  001AA2  EF55  F00D         	goto	u7230
  3407  001AA6                     u7231:
  3408  001AA6  EF71  F00D         	goto	l5674
  3409  001AAA                     u7230:
  3410  001AAA                     
  3411                           ;fs_menu_controller.c: 503:                 {;fs_menu_controller.c: 504:                
      +                               menu_flags.menu_increase_flag = 0;
  3412  001AAA  0100               	movlb	0	; () banked
  3413  001AAC  99F0               	bcf	_menu_flags& (0+255),4,b
  3414  001AAE                     
  3415                           ; BSR set to: 0
  3416                           ;fs_menu_controller.c: 505:                     KD += 0.1;
  3417  001AAE  C0F6  F001         	movff	_KD,___fladd@b
  3418  001AB2  C0F7  F002         	movff	_KD+1,___fladd@b+1
  3419  001AB6  C0F8  F003         	movff	_KD+2,___fladd@b+2
  3420  001ABA  C0F9  F004         	movff	_KD+3,___fladd@b+3
  3421  001ABE  0ECD               	movlw	205
  3422  001AC0  6E05               	movwf	___fladd@a^0,c
  3423  001AC2  0ECC               	movlw	204
  3424  001AC4  6E06               	movwf	(___fladd@a+1)^0,c
  3425  001AC6  0ECC               	movlw	204
  3426  001AC8  6E07               	movwf	(___fladd@a+2)^0,c
  3427  001ACA  0E3D               	movlw	61
  3428  001ACC  6E08               	movwf	(___fladd@a+3)^0,c
  3429  001ACE  ECF2  F010         	call	___fladd	;wreg free
  3430  001AD2  C001  F0F6         	movff	?___fladd,_KD
  3431  001AD6  C002  F0F7         	movff	?___fladd+1,_KD+1
  3432  001ADA  C003  F0F8         	movff	?___fladd+2,_KD+2
  3433  001ADE  C004  F0F9         	movff	?___fladd+3,_KD+3
  3434  001AE2                     l5674:
  3435                           
  3436                           ;fs_menu_controller.c: 508:                 if ((menu_flags.menu_decrease_flag == 1) && 
      +                          (KD >= 0))
  3437  001AE2  0100               	movlb	0	; () banked
  3438  001AE4  ABF0               	btfss	_menu_flags& (0+255),5,b
  3439  001AE6  EF77  F00D         	goto	u7241
  3440  001AEA  EF79  F00D         	goto	u7240
  3441  001AEE                     u7241:
  3442  001AEE  EF9B  F00D         	goto	l5682
  3443  001AF2                     u7240:
  3444  001AF2                     
  3445                           ; BSR set to: 0
  3446  001AF2  BFF9               	btfsc	(_KD+3)& (0+255),7,b
  3447  001AF4  EF7E  F00D         	goto	u7251
  3448  001AF8  EF80  F00D         	goto	u7250
  3449  001AFC                     u7251:
  3450  001AFC  EF9B  F00D         	goto	l5682
  3451  001B00                     u7250:
  3452  001B00                     
  3453                           ; BSR set to: 0
  3454                           ;fs_menu_controller.c: 509:                 {;fs_menu_controller.c: 510:                
      +                               menu_flags.menu_decrease_flag = 0;
  3455  001B00  9BF0               	bcf	_menu_flags& (0+255),5,b
  3456  001B02                     
  3457                           ; BSR set to: 0
  3458                           ;fs_menu_controller.c: 511:                      KD -= 0.1;
  3459  001B02  C0F6  F01A         	movff	_KD,___flsub@b
  3460  001B06  C0F7  F01B         	movff	_KD+1,___flsub@b+1
  3461  001B0A  C0F8  F01C         	movff	_KD+2,___flsub@b+2
  3462  001B0E  C0F9  F01D         	movff	_KD+3,___flsub@b+3
  3463  001B12  0ECD               	movlw	205
  3464  001B14  6E1E               	movwf	___flsub@a^0,c
  3465  001B16  0ECC               	movlw	204
  3466  001B18  6E1F               	movwf	(___flsub@a+1)^0,c
  3467  001B1A  0ECC               	movlw	204
  3468  001B1C  6E20               	movwf	(___flsub@a+2)^0,c
  3469  001B1E  0E3D               	movlw	61
  3470  001B20  6E21               	movwf	(___flsub@a+3)^0,c
  3471  001B22  EC9F  F023         	call	___flsub	;wreg free
  3472  001B26  C01A  F0F6         	movff	?___flsub,_KD
  3473  001B2A  C01B  F0F7         	movff	?___flsub+1,_KD+1
  3474  001B2E  C01C  F0F8         	movff	?___flsub+2,_KD+2
  3475  001B32  C01D  F0F9         	movff	?___flsub+3,_KD+3
  3476  001B36                     l5682:
  3477                           
  3478                           ;fs_menu_controller.c: 515:             if ( timer_value.menu_login_delay == 100)
  3479  001B36  0E64               	movlw	100
  3480  001B38  0100               	movlb	0	; () banked
  3481  001B3A  19DA               	xorwf	(_timer_value+8)& (0+255),w,b
  3482  001B3C  A4D8               	btfss	status,2,c
  3483  001B3E  EFA3  F00D         	goto	u7261
  3484  001B42  EFA5  F00D         	goto	u7260
  3485  001B46                     u7261:
  3486  001B46  EFD9  F00D         	goto	l397
  3487  001B4A                     u7260:
  3488  001B4A  EF7C  F00A         	goto	l5470
  3489  001B4E                     l5688:
  3490  001B4E  0100               	movlb	0	; () banked
  3491  001B50  51F1               	movf	_menu_selected& (0+255),w,b
  3492  001B52  6E5C               	movwf	??_stateMachine^0,c
  3493  001B54  6A5D               	clrf	(??_stateMachine+1)^0,c
  3494                           
  3495                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3496                           ; Switch size 1, requested type "simple"
  3497                           ; Number of cases is 1, Range of values is 0 to 0
  3498                           ; switch strategies available:
  3499                           ; Name         Instructions Cycles
  3500                           ; simple_byte            4     3 (average)
  3501                           ;	Chosen strategy is simple_byte
  3502  001B56  505D               	movf	(??_stateMachine+1)^0,w,c
  3503  001B58  0A00               	xorlw	0	; case 0
  3504  001B5A  B4D8               	btfsc	status,2,c
  3505  001B5C  EFB2  F00D         	goto	l6124
  3506  001B60  EFD9  F00D         	goto	l397
  3507  001B64                     l6124:
  3508                           
  3509                           ; BSR set to: 0
  3510                           ; Switch size 1, requested type "simple"
  3511                           ; Number of cases is 9, Range of values is 0 to 8
  3512                           ; switch strategies available:
  3513                           ; Name         Instructions Cycles
  3514                           ; simple_byte           28    15 (average)
  3515                           ;	Chosen strategy is simple_byte
  3516  001B64  505C               	movf	??_stateMachine^0,w,c
  3517  001B66  0A00               	xorlw	0	; case 0
  3518  001B68  B4D8               	btfsc	status,2,c
  3519  001B6A  EF4C  F009         	goto	l356
  3520  001B6E  0A01               	xorlw	1	; case 1
  3521  001B70  B4D8               	btfsc	status,2,c
  3522  001B72  EFF5  F009         	goto	l362
  3523  001B76  0A03               	xorlw	3	; case 2
  3524  001B78  B4D8               	btfsc	status,2,c
  3525  001B7A  EF82  F00A         	goto	l367
  3526  001B7E  0A01               	xorlw	1	; case 3
  3527  001B80  B4D8               	btfsc	status,2,c
  3528  001B82  EFEC  F00A         	goto	l372
  3529  001B86  0A07               	xorlw	7	; case 4
  3530  001B88  B4D8               	btfsc	status,2,c
  3531  001B8A  EF56  F00B         	goto	l5548
  3532  001B8E  0A01               	xorlw	1	; case 5
  3533  001B90  B4D8               	btfsc	status,2,c
  3534  001B92  EFB9  F00B         	goto	l380
  3535  001B96  0A03               	xorlw	3	; case 6
  3536  001B98  B4D8               	btfsc	status,2,c
  3537  001B9A  EFC8  F00B         	goto	l381
  3538  001B9E  0A01               	xorlw	1	; case 7
  3539  001BA0  B4D8               	btfsc	status,2,c
  3540  001BA2  EFD9  F00D         	goto	l397
  3541  001BA6  0A0F               	xorlw	15	; case 8
  3542  001BA8  B4D8               	btfsc	status,2,c
  3543  001BAA  EF56  F00C         	goto	l387
  3544  001BAE  EFD9  F00D         	goto	l397
  3545  001BB2                     l397:
  3546                           
  3547                           ; BSR set to: 0
  3548  001BB2  0012               	return		;funcret
  3549  001BB4                     __end_of_stateMachine:
  3550                           	callstack 0
  3551                           
  3552 ;; *************** function _sprintf *****************
  3553 ;; Defined at:
  3554 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;  s               2   78[BANK0 ] PTR unsigned char 
  3557 ;;		 -> stateMachine@textCursor2(16), 
  3558 ;;  fmt             2   80[BANK0 ] PTR const unsigned char 
  3559 ;;		 -> STR_16(13), STR_14(14), STR_12(16), STR_10(16), 
  3560 ;;		 -> STR_8(18), STR_6(18), STR_4(18), STR_2(15), 
  3561 ;; Auto vars:     Size  Location     Type
  3562 ;;  f               6   85[COMRAM] struct _IO_FILE
  3563 ;;  ap              2   83[COMRAM] PTR void [1]
  3564 ;;		 -> ?_sprintf(2), 
  3565 ;;  ret             2    0        int 
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  2   78[BANK0 ] int 
  3568 ;; Registers used:
  3569 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3570 ;; Tracked objects:
  3571 ;;		On entry : 0/0
  3572 ;;		On exit  : 0/0
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3575 ;;      Params:         0       8       0       0       0       0       0
  3576 ;;      Locals:        10       0       0       0       0       0       0
  3577 ;;      Temps:          0       0       0       0       0       0       0
  3578 ;;      Totals:        10       8       0       0       0       0       0
  3579 ;;Total ram usage:       18 bytes
  3580 ;; Hardware stack levels used:    1
  3581 ;; Hardware stack levels required when called:    8
  3582 ;; This function calls:
  3583 ;;		_vfprintf
  3584 ;; This function is called by:
  3585 ;;		_stateMachine
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           
  3589                           	psect	text7
  3590  0046A6                     __ptext7:
  3591                           	callstack 0
  3592  0046A6                     _sprintf:
  3593                           	callstack 20
  3594  0046A6  0EB2               	movlw	low (?_sprintf+4)
  3595  0046A8  6E54               	movwf	sprintf@ap^0,c
  3596  0046AA  0E00               	movlw	high (?_sprintf+4)
  3597  0046AC  6E55               	movwf	(sprintf@ap+1)^0,c
  3598  0046AE  C0AE  F056         	movff	sprintf@s,sprintf@f
  3599  0046B2  C0AF  F057         	movff	sprintf@s+1,sprintf@f+1
  3600  0046B6  0E00               	movlw	0
  3601  0046B8  6E59               	movwf	(sprintf@f+3)^0,c
  3602  0046BA  0E00               	movlw	0
  3603  0046BC  6E58               	movwf	(sprintf@f+2)^0,c
  3604  0046BE  0E00               	movlw	0
  3605  0046C0  6E5B               	movwf	(sprintf@f+5)^0,c
  3606  0046C2  0E00               	movlw	0
  3607  0046C4  6E5A               	movwf	(sprintf@f+4)^0,c
  3608  0046C6  0E56               	movlw	low sprintf@f
  3609  0046C8  6E4A               	movwf	vfprintf@fp^0,c
  3610  0046CA  0E00               	movlw	high sprintf@f
  3611  0046CC  6E4B               	movwf	(vfprintf@fp+1)^0,c
  3612  0046CE  C0B0  F04C         	movff	sprintf@fmt,vfprintf@fmt
  3613  0046D2  C0B1  F04D         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3614  0046D6  0E54               	movlw	low sprintf@ap
  3615  0046D8  6E4E               	movwf	vfprintf@ap^0,c
  3616  0046DA  0E00               	movlw	high sprintf@ap
  3617  0046DC  6E4F               	movwf	(vfprintf@ap+1)^0,c
  3618  0046DE  EC3D  F022         	call	_vfprintf	;wreg free
  3619  0046E2  5058               	movf	(sprintf@f+2)^0,w,c
  3620  0046E4  0100               	movlb	0	; () banked
  3621  0046E6  25AE               	addwf	sprintf@s& (0+255),w,b
  3622  0046E8  6ED9               	movwf	fsr2l,c
  3623  0046EA  5059               	movf	(sprintf@f+3)^0,w,c
  3624  0046EC  21AF               	addwfc	(sprintf@s+1)& (0+255),w,b
  3625  0046EE  6EDA               	movwf	fsr2h,c
  3626  0046F0  0E00               	movlw	0
  3627  0046F2  6EDF               	movwf	indf2,c
  3628  0046F4                     
  3629                           ; BSR set to: 0
  3630  0046F4  0012               	return		;funcret
  3631  0046F6                     __end_of_sprintf:
  3632                           	callstack 0
  3633                           
  3634 ;; *************** function _vfprintf *****************
  3635 ;; Defined at:
  3636 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;  fp              2   73[COMRAM] PTR struct _IO_FILE
  3639 ;;		 -> sprintf@f(6), 
  3640 ;;  fmt             2   75[COMRAM] PTR const unsigned char 
  3641 ;;		 -> STR_16(13), STR_14(14), STR_12(16), STR_10(16), 
  3642 ;;		 -> STR_8(18), STR_6(18), STR_4(18), STR_2(15), 
  3643 ;;  ap              2   77[COMRAM] PTR PTR void 
  3644 ;;		 -> sprintf@ap(2), 
  3645 ;; Auto vars:     Size  Location     Type
  3646 ;;  cfmt            2   79[COMRAM] PTR unsigned char 
  3647 ;;		 -> STR_16(13), STR_14(14), STR_12(16), STR_10(16), 
  3648 ;;		 -> STR_8(18), STR_6(18), STR_4(18), STR_2(15), 
  3649 ;; Return value:  Size  Location     Type
  3650 ;;                  2   73[COMRAM] int 
  3651 ;; Registers used:
  3652 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3653 ;; Tracked objects:
  3654 ;;		On entry : 0/0
  3655 ;;		On exit  : 0/0
  3656 ;;		Unchanged: 0/0
  3657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3658 ;;      Params:         6       0       0       0       0       0       0
  3659 ;;      Locals:         2       0       0       0       0       0       0
  3660 ;;      Temps:          0       0       0       0       0       0       0
  3661 ;;      Totals:         8       0       0       0       0       0       0
  3662 ;;Total ram usage:        8 bytes
  3663 ;; Hardware stack levels used:    1
  3664 ;; Hardware stack levels required when called:    7
  3665 ;; This function calls:
  3666 ;;		_vfpfcnvrt
  3667 ;; This function is called by:
  3668 ;;		_sprintf
  3669 ;; This function uses a non-reentrant model
  3670 ;;
  3671                           
  3672                           	psect	text8
  3673  00447A                     __ptext8:
  3674                           	callstack 0
  3675  00447A                     _vfprintf:
  3676                           	callstack 20
  3677  00447A                     
  3678                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3679  00447A  C04C  F050         	movff	vfprintf@fmt,vfprintf@cfmt
  3680  00447E  C04D  F051         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3681  004482                     
  3682                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  3683  004482  0E00               	movlw	0
  3684  004484  0100               	movlb	0	; () banked
  3685  004486  6FE8               	movwf	(_nout+1)& (0+255),b
  3686  004488  0E00               	movlw	0
  3687  00448A  6FE7               	movwf	_nout& (0+255),b
  3688                           
  3689                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  3690  00448C  EF5B  F022         	goto	l5264
  3691  004490                     l5262:
  3692                           
  3693                           ; BSR set to: 0
  3694                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3695  004490  C04A  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  3696  004494  C04B  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3697  004498  0E50               	movlw	low vfprintf@cfmt
  3698  00449A  6E42               	movwf	vfpfcnvrt@fmt^0,c
  3699  00449C  0E00               	movlw	high vfprintf@cfmt
  3700  00449E  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3701  0044A0  C04E  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  3702  0044A4  C04F  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3703  0044A8  ECDA  F00D         	call	_vfpfcnvrt	;wreg free
  3704  0044AC  5040               	movf	?_vfpfcnvrt^0,w,c
  3705  0044AE  0100               	movlb	0	; () banked
  3706  0044B0  27E7               	addwf	_nout& (0+255),f,b
  3707  0044B2  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  3708  0044B4  23E8               	addwfc	(_nout+1)& (0+255),f,b
  3709  0044B6                     l5264:
  3710                           
  3711                           ; BSR set to: 0
  3712                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  3713  0044B6  C050  FFF6         	movff	vfprintf@cfmt,tblptrl
  3714  0044BA  C051  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3715  0044BE                     	if	0	;tblptru may be non-zero
  3716  0044BE                     	endif
  3717  0044BE                     	if	0	;tblptru may be non-zero
  3718  0044BE                     	endif
  3719  0044BE  0008               	tblrd		*
  3720  0044C0  50F5               	movf	tablat,w,c
  3721  0044C2  0900               	iorlw	0
  3722  0044C4  A4D8               	btfss	status,2,c
  3723  0044C6  EF67  F022         	goto	u6411
  3724  0044CA  EF69  F022         	goto	u6410
  3725  0044CE                     u6411:
  3726  0044CE  EF48  F022         	goto	l5262
  3727  0044D2                     u6410:
  3728  0044D2                     
  3729                           ; BSR set to: 0
  3730                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  3731  0044D2  C0E7  F04A         	movff	_nout,?_vfprintf
  3732  0044D6  C0E8  F04B         	movff	_nout+1,?_vfprintf+1
  3733  0044DA                     
  3734                           ; BSR set to: 0
  3735  0044DA  0012               	return		;funcret
  3736  0044DC                     __end_of_vfprintf:
  3737                           	callstack 0
  3738                           
  3739 ;; *************** function _vfpfcnvrt *****************
  3740 ;; Defined at:
  3741 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3742 ;; Parameters:    Size  Location     Type
  3743 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  3744 ;;		 -> sprintf@f(6), 
  3745 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  3746 ;;		 -> vfprintf@cfmt(2), 
  3747 ;;  ap              2   67[COMRAM] PTR PTR void 
  3748 ;;		 -> sprintf@ap(2), 
  3749 ;; Auto vars:     Size  Location     Type
  3750 ;;  ll              8   56[BANK0 ] long long 
  3751 ;;  llu             8    0        unsigned long long 
  3752 ;;  f               4   70[BANK0 ] unsigned long long 
  3753 ;;  ct              3   74[BANK0 ] unsigned char [3]
  3754 ;;  vp              3    0        PTR void 
  3755 ;;  cp              3    0        PTR unsigned char 
  3756 ;;  i               2    0        int 
  3757 ;;  done            2    0        int 
  3758 ;;  c               1   77[BANK0 ] unsigned char 
  3759 ;; Return value:  Size  Location     Type
  3760 ;;                  2   63[COMRAM] int 
  3761 ;; Registers used:
  3762 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3763 ;; Tracked objects:
  3764 ;;		On entry : 0/0
  3765 ;;		On exit  : 0/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3768 ;;      Params:         6       0       0       0       0       0       0
  3769 ;;      Locals:         0      22       0       0       0       0       0
  3770 ;;      Temps:          4       0       0       0       0       0       0
  3771 ;;      Totals:        10      22       0       0       0       0       0
  3772 ;;Total ram usage:       32 bytes
  3773 ;; Hardware stack levels used:    1
  3774 ;; Hardware stack levels required when called:    6
  3775 ;; This function calls:
  3776 ;;		_atoi
  3777 ;;		_dtoa
  3778 ;;		_efgtoa
  3779 ;;		_fputc
  3780 ;;		_isdigit
  3781 ;;		_isupper
  3782 ;;		_strncmp
  3783 ;;		_tolower
  3784 ;; This function is called by:
  3785 ;;		_vfprintf
  3786 ;; This function uses a non-reentrant model
  3787 ;;
  3788                           
  3789                           	psect	text9
  3790  001BB4                     __ptext9:
  3791                           	callstack 0
  3792  001BB4                     _vfpfcnvrt:
  3793                           	callstack 20
  3794  001BB4                     
  3795                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  3796  001BB4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3797  001BB8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3798  001BBC  CFDE FFF6          	movff	postinc2,tblptrl
  3799  001BC0  CFDD FFF7          	movff	postdec2,tblptrh
  3800  001BC4                     	if	0	;tblptru may be non-zero
  3801  001BC4                     	endif
  3802  001BC4                     	if	0	;tblptru may be non-zero
  3803  001BC4                     	endif
  3804  001BC4  0008               	tblrd		*
  3805  001BC6  50F5               	movf	tablat,w,c
  3806  001BC8  0A25               	xorlw	37
  3807  001BCA  A4D8               	btfss	status,2,c
  3808  001BCC  EFEA  F00D         	goto	u6201
  3809  001BD0  EFEC  F00D         	goto	u6200
  3810  001BD4                     u6201:
  3811  001BD4  EFD6  F010         	goto	l5220
  3812  001BD8                     u6200:
  3813  001BD8                     
  3814                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  3815  001BD8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3816  001BDC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3817  001BE0  2ADE               	incf	postinc2,f,c
  3818  001BE2  0E00               	movlw	0
  3819  001BE4  22DD               	addwfc	postdec2,f,c
  3820  001BE6                     
  3821                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  3822  001BE6  0E00               	movlw	0
  3823  001BE8  0100               	movlb	0	; () banked
  3824  001BEA  6FEA               	movwf	(_width+1)& (0+255),b
  3825  001BEC  0E00               	movlw	0
  3826  001BEE  6FE9               	movwf	_width& (0+255),b
  3827  001BF0  C0E9  F0ED         	movff	_width,_flags
  3828  001BF4  C0EA  F0EE         	movff	_width+1,_flags+1
  3829  001BF8                     
  3830                           ; BSR set to: 0
  3831                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  3832  001BF8  69EB               	setf	_prec& (0+255),b
  3833  001BFA  69EC               	setf	(_prec+1)& (0+255),b
  3834  001BFC                     
  3835                           ; BSR set to: 0
  3836                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  3837  001BFC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3838  001C00  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3839  001C04  CFDE FFF6          	movff	postinc2,tblptrl
  3840  001C08  CFDD FFF7          	movff	postdec2,tblptrh
  3841  001C0C                     	if	0	;tblptru may be non-zero
  3842  001C0C                     	endif
  3843  001C0C                     	if	0	;tblptru may be non-zero
  3844  001C0C                     	endif
  3845  001C0C  0008               	tblrd		*
  3846  001C0E  50F5               	movf	tablat,w,c
  3847  001C10  0A2A               	xorlw	42
  3848  001C12  A4D8               	btfss	status,2,c
  3849  001C14  EF0E  F00E         	goto	u6211
  3850  001C18  EF10  F00E         	goto	u6210
  3851  001C1C                     u6211:
  3852  001C1C  EF39  F00E         	goto	l5126
  3853  001C20                     u6210:
  3854  001C20                     
  3855                           ; BSR set to: 0
  3856                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  3857  001C20  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3858  001C24  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3859  001C28  2ADE               	incf	postinc2,f,c
  3860  001C2A  0E00               	movlw	0
  3861  001C2C  22DD               	addwfc	postdec2,f,c
  3862                           
  3863                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3864  001C2E  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3865  001C32  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3866  001C36  CFDF F046          	movff	indf2,??_vfpfcnvrt
  3867  001C3A  0E02               	movlw	2
  3868  001C3C  26DE               	addwf	postinc2,f,c
  3869  001C3E  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  3870  001C42  0E00               	movlw	0
  3871  001C44  22DD               	addwfc	postdec2,f,c
  3872  001C46  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3873  001C4A  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3874  001C4E  CFDE F0E9          	movff	postinc2,_width
  3875  001C52  CFDD F0EA          	movff	postdec2,_width+1
  3876  001C56                     
  3877                           ; BSR set to: 0
  3878                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  3879  001C56  BFEA               	btfsc	(_width+1)& (0+255),7,b
  3880  001C58  EF32  F00E         	goto	u6220
  3881  001C5C  EF30  F00E         	goto	u6221
  3882  001C60                     u6221:
  3883  001C60  EF7D  F00E         	goto	l5136
  3884  001C64                     u6220:
  3885  001C64                     
  3886                           ; BSR set to: 0
  3887                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  3888  001C64  81ED               	bsf	_flags& (0+255),0,b
  3889                           
  3890                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  3891  001C66  6DE9               	negf	_width& (0+255),b
  3892  001C68  1FEA               	comf	(_width+1)& (0+255),f,b
  3893  001C6A  B0D8               	btfsc	status,0,c
  3894  001C6C  2BEA               	incf	(_width+1)& (0+255),f,b
  3895  001C6E  EF7D  F00E         	goto	l5136
  3896  001C72                     l5126:
  3897                           
  3898                           ; BSR set to: 0
  3899                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  3900  001C72  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3901  001C76  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3902  001C7A  CFDE F008          	movff	postinc2,atoi@s
  3903  001C7E  CFDD F009          	movff	postdec2,atoi@s+1
  3904  001C82  EC82  F01A         	call	_atoi	;wreg free
  3905  001C86  C008  F0E9         	movff	?_atoi,_width
  3906  001C8A  C009  F0EA         	movff	?_atoi+1,_width+1
  3907                           
  3908                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3909  001C8E  EF50  F00E         	goto	l5130
  3910  001C92                     l5128:
  3911                           
  3912                           ; BSR set to: 0
  3913                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  3914  001C92  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3915  001C96  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3916  001C9A  2ADE               	incf	postinc2,f,c
  3917  001C9C  0E00               	movlw	0
  3918  001C9E  22DD               	addwfc	postdec2,f,c
  3919  001CA0                     l5130:
  3920  001CA0  0ED0               	movlw	208
  3921  001CA2  6E46               	movwf	??_vfpfcnvrt^0,c
  3922  001CA4  0EFF               	movlw	255
  3923  001CA6  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  3924  001CA8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3925  001CAC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3926  001CB0  CFDE FFF6          	movff	postinc2,tblptrl
  3927  001CB4  CFDD FFF7          	movff	postdec2,tblptrh
  3928  001CB8                     	if	0	;tblptru may be non-zero
  3929  001CB8                     	endif
  3930  001CB8                     	if	0	;tblptru may be non-zero
  3931  001CB8                     	endif
  3932  001CB8  0008               	tblrd		*
  3933  001CBA  50F5               	movf	tablat,w,c
  3934  001CBC  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  3935  001CBE  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  3936  001CC0  5046               	movf	??_vfpfcnvrt^0,w,c
  3937  001CC2  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3938  001CC4  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  3939  001CC6  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3940  001CC8  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  3941  001CCA  E10A               	bnz	u6230
  3942  001CCC  0E0A               	movlw	10
  3943  001CCE  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3944  001CD0  A0D8               	btfss	status,0,c
  3945  001CD2  EF6D  F00E         	goto	u6231
  3946  001CD6  EF70  F00E         	goto	u6230
  3947  001CDA                     u6231:
  3948  001CDA  0E01               	movlw	1
  3949  001CDC  EF71  F00E         	goto	u6240
  3950  001CE0                     u6230:
  3951  001CE0  0E00               	movlw	0
  3952  001CE2                     u6240:
  3953  001CE2  0100               	movlb	0	; () banked
  3954  001CE4  6FA0               	movwf	_vfpfcnvrt$2894& (0+255),b
  3955  001CE6  6BA1               	clrf	(_vfpfcnvrt$2894+1)& (0+255),b
  3956  001CE8                     
  3957                           ; BSR set to: 0
  3958  001CE8  51A0               	movf	_vfpfcnvrt$2894& (0+255),w,b
  3959  001CEA  11A1               	iorwf	(_vfpfcnvrt$2894+1)& (0+255),w,b
  3960  001CEC  A4D8               	btfss	status,2,c
  3961  001CEE  EF7B  F00E         	goto	u6251
  3962  001CF2  EF7D  F00E         	goto	u6250
  3963  001CF6                     u6251:
  3964  001CF6  EF49  F00E         	goto	l5128
  3965  001CFA                     u6250:
  3966  001CFA                     l5136:
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  3970  001CFA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3971  001CFE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3972  001D02  CFDE FFF6          	movff	postinc2,tblptrl
  3973  001D06  CFDD FFF7          	movff	postdec2,tblptrh
  3974  001D0A                     	if	0	;tblptru may be non-zero
  3975  001D0A                     	endif
  3976  001D0A                     	if	0	;tblptru may be non-zero
  3977  001D0A                     	endif
  3978  001D0A  0008               	tblrd		*
  3979  001D0C  50F5               	movf	tablat,w,c
  3980  001D0E  0A2E               	xorlw	46
  3981  001D10  A4D8               	btfss	status,2,c
  3982  001D12  EF8D  F00E         	goto	u6261
  3983  001D16  EF8F  F00E         	goto	u6260
  3984  001D1A                     u6261:
  3985  001D1A  EF0D  F00F         	goto	l5156
  3986  001D1E                     u6260:
  3987  001D1E                     
  3988                           ; BSR set to: 0
  3989                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  3990  001D1E  0E00               	movlw	0
  3991  001D20  6FEC               	movwf	(_prec+1)& (0+255),b
  3992  001D22  0E00               	movlw	0
  3993  001D24  6FEB               	movwf	_prec& (0+255),b
  3994  001D26                     
  3995                           ; BSR set to: 0
  3996                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  3997  001D26  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3998  001D2A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3999  001D2E  2ADE               	incf	postinc2,f,c
  4000  001D30  0E00               	movlw	0
  4001  001D32  22DD               	addwfc	postdec2,f,c
  4002  001D34                     
  4003                           ; BSR set to: 0
  4004                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  4005  001D34  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4006  001D38  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4007  001D3C  CFDE FFF6          	movff	postinc2,tblptrl
  4008  001D40  CFDD FFF7          	movff	postdec2,tblptrh
  4009  001D44                     	if	0	;tblptru may be non-zero
  4010  001D44                     	endif
  4011  001D44                     	if	0	;tblptru may be non-zero
  4012  001D44                     	endif
  4013  001D44  0008               	tblrd		*
  4014  001D46  50F5               	movf	tablat,w,c
  4015  001D48  0A2A               	xorlw	42
  4016  001D4A  A4D8               	btfss	status,2,c
  4017  001D4C  EFAA  F00E         	goto	u6271
  4018  001D50  EFAC  F00E         	goto	u6270
  4019  001D54                     u6271:
  4020  001D54  EFC9  F00E         	goto	l5146
  4021  001D58                     u6270:
  4022  001D58                     
  4023                           ; BSR set to: 0
  4024                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  4025  001D58  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4026  001D5C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4027  001D60  2ADE               	incf	postinc2,f,c
  4028  001D62  0E00               	movlw	0
  4029  001D64  22DD               	addwfc	postdec2,f,c
  4030                           
  4031                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4032  001D66  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4033  001D6A  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4034  001D6E  CFDF F046          	movff	indf2,??_vfpfcnvrt
  4035  001D72  0E02               	movlw	2
  4036  001D74  26DE               	addwf	postinc2,f,c
  4037  001D76  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  4038  001D7A  0E00               	movlw	0
  4039  001D7C  22DD               	addwfc	postdec2,f,c
  4040  001D7E  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4041  001D82  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4042  001D86  CFDE F0EB          	movff	postinc2,_prec
  4043  001D8A  CFDD F0EC          	movff	postdec2,_prec+1
  4044                           
  4045                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  4046  001D8E  EF0D  F00F         	goto	l5156
  4047  001D92                     l5146:
  4048                           
  4049                           ; BSR set to: 0
  4050                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  4051  001D92  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4052  001D96  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4053  001D9A  CFDE F008          	movff	postinc2,atoi@s
  4054  001D9E  CFDD F009          	movff	postdec2,atoi@s+1
  4055  001DA2  EC82  F01A         	call	_atoi	;wreg free
  4056  001DA6  C008  F0EB         	movff	?_atoi,_prec
  4057  001DAA  C009  F0EC         	movff	?_atoi+1,_prec+1
  4058                           
  4059                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4060  001DAE  EFE0  F00E         	goto	l5150
  4061  001DB2                     l5148:
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  4065  001DB2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4066  001DB6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4067  001DBA  2ADE               	incf	postinc2,f,c
  4068  001DBC  0E00               	movlw	0
  4069  001DBE  22DD               	addwfc	postdec2,f,c
  4070  001DC0                     l5150:
  4071  001DC0  0ED0               	movlw	208
  4072  001DC2  6E46               	movwf	??_vfpfcnvrt^0,c
  4073  001DC4  0EFF               	movlw	255
  4074  001DC6  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  4075  001DC8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4076  001DCC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4077  001DD0  CFDE FFF6          	movff	postinc2,tblptrl
  4078  001DD4  CFDD FFF7          	movff	postdec2,tblptrh
  4079  001DD8                     	if	0	;tblptru may be non-zero
  4080  001DD8                     	endif
  4081  001DD8                     	if	0	;tblptru may be non-zero
  4082  001DD8                     	endif
  4083  001DD8  0008               	tblrd		*
  4084  001DDA  50F5               	movf	tablat,w,c
  4085  001DDC  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  4086  001DDE  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  4087  001DE0  5046               	movf	??_vfpfcnvrt^0,w,c
  4088  001DE2  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4089  001DE4  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  4090  001DE6  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4091  001DE8  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  4092  001DEA  E10A               	bnz	u6280
  4093  001DEC  0E0A               	movlw	10
  4094  001DEE  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4095  001DF0  A0D8               	btfss	status,0,c
  4096  001DF2  EFFD  F00E         	goto	u6281
  4097  001DF6  EF00  F00F         	goto	u6280
  4098  001DFA                     u6281:
  4099  001DFA  0E01               	movlw	1
  4100  001DFC  EF01  F00F         	goto	u6290
  4101  001E00                     u6280:
  4102  001E00  0E00               	movlw	0
  4103  001E02                     u6290:
  4104  001E02  0100               	movlb	0	; () banked
  4105  001E04  6FA2               	movwf	_vfpfcnvrt$2895& (0+255),b
  4106  001E06  6BA3               	clrf	(_vfpfcnvrt$2895+1)& (0+255),b
  4107  001E08                     
  4108                           ; BSR set to: 0
  4109  001E08  51A2               	movf	_vfpfcnvrt$2895& (0+255),w,b
  4110  001E0A  11A3               	iorwf	(_vfpfcnvrt$2895+1)& (0+255),w,b
  4111  001E0C  A4D8               	btfss	status,2,c
  4112  001E0E  EF0B  F00F         	goto	u6301
  4113  001E12  EF0D  F00F         	goto	u6300
  4114  001E16                     u6301:
  4115  001E16  EFD9  F00E         	goto	l5148
  4116  001E1A                     u6300:
  4117  001E1A                     l5156:
  4118                           
  4119                           ; BSR set to: 0
  4120                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0
      +                          ] = tolower((int)(*fmt)[0]);
  4121  001E1A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4122  001E1E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4123  001E22  CFDE FFF6          	movff	postinc2,tblptrl
  4124  001E26  CFDD FFF7          	movff	postdec2,tblptrh
  4125  001E2A                     	if	0	;tblptru may be non-zero
  4126  001E2A                     	endif
  4127  001E2A                     	if	0	;tblptru may be non-zero
  4128  001E2A                     	endif
  4129  001E2A  0008               	tblrd		*
  4130  001E2C  50F5               	movf	tablat,w,c
  4131  001E2E  6E07               	movwf	tolower@c^0,c
  4132  001E30  6A08               	clrf	(tolower@c+1)^0,c
  4133  001E32  EC9E  F022         	call	_tolower	;wreg free
  4134  001E36  5007               	movf	?_tolower^0,w,c
  4135  001E38  0100               	movlb	0	; () banked
  4136  001E3A  6FAA               	movwf	vfpfcnvrt@ct& (0+255),b
  4137  001E3C                     
  4138                           ; BSR set to: 0
  4139                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (
      +                          ct[0]) {
  4140  001E3C  51AA               	movf	vfpfcnvrt@ct& (0+255),w,b
  4141  001E3E  B4D8               	btfsc	status,2,c
  4142  001E40  EF24  F00F         	goto	u6311
  4143  001E44  EF26  F00F         	goto	u6310
  4144  001E48                     u6311:
  4145  001E48  EF60  F00F         	goto	l5166
  4146  001E4C                     u6310:
  4147  001E4C                     
  4148                           ; BSR set to: 0
  4149                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             
      +                          ct[1] = tolower((int)(*fmt)[1]);
  4150  001E4C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4151  001E50  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4152  001E54  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  4153  001E58  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  4154  001E5C  0E01               	movlw	1
  4155  001E5E  2646               	addwf	??_vfpfcnvrt^0,f,c
  4156  001E60  0E00               	movlw	0
  4157  001E62  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4158  001E64  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4159  001E68  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4160  001E6C                     	if	0	;tblptru may be non-zero
  4161  001E6C                     	endif
  4162  001E6C                     	if	0	;tblptru may be non-zero
  4163  001E6C                     	endif
  4164  001E6C  0008               	tblrd		*
  4165  001E6E  50F5               	movf	tablat,w,c
  4166  001E70  6E07               	movwf	tolower@c^0,c
  4167  001E72  6A08               	clrf	(tolower@c+1)^0,c
  4168  001E74  EC9E  F022         	call	_tolower	;wreg free
  4169  001E78  5007               	movf	?_tolower^0,w,c
  4170  001E7A  0100               	movlb	0	; () banked
  4171  001E7C  6FAB               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  4172  001E7E                     
  4173                           ; BSR set to: 0
  4174                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             
      +                          if (ct[1]) {
  4175  001E7E  51AB               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  4176  001E80  B4D8               	btfsc	status,2,c
  4177  001E82  EF45  F00F         	goto	u6321
  4178  001E86  EF47  F00F         	goto	u6320
  4179  001E8A                     u6321:
  4180  001E8A  EF60  F00F         	goto	l5166
  4181  001E8E                     u6320:
  4182  001E8E                     
  4183                           ; BSR set to: 0
  4184                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:             
      +                              ct[2] = tolower((int)(*fmt)[2]);
  4185  001E8E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4186  001E92  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4187  001E96  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  4188  001E9A  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  4189  001E9E  0E02               	movlw	2
  4190  001EA0  2646               	addwf	??_vfpfcnvrt^0,f,c
  4191  001EA2  0E00               	movlw	0
  4192  001EA4  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4193  001EA6  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4194  001EAA  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4195  001EAE                     	if	0	;tblptru may be non-zero
  4196  001EAE                     	endif
  4197  001EAE                     	if	0	;tblptru may be non-zero
  4198  001EAE                     	endif
  4199  001EAE  0008               	tblrd		*
  4200  001EB0  50F5               	movf	tablat,w,c
  4201  001EB2  6E07               	movwf	tolower@c^0,c
  4202  001EB4  6A08               	clrf	(tolower@c+1)^0,c
  4203  001EB6  EC9E  F022         	call	_tolower	;wreg free
  4204  001EBA  5007               	movf	?_tolower^0,w,c
  4205  001EBC  0100               	movlb	0	; () banked
  4206  001EBE  6FAC               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  4207  001EC0                     l5166:
  4208                           
  4209                           ; BSR set to: 0
  4210                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4211  001EC0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4212  001EC4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4213  001EC8  CFDE FFF6          	movff	postinc2,tblptrl
  4214  001ECC  CFDD FFF7          	movff	postdec2,tblptrh
  4215  001ED0                     	if	0	;tblptru may be non-zero
  4216  001ED0                     	endif
  4217  001ED0                     	if	0	;tblptru may be non-zero
  4218  001ED0                     	endif
  4219  001ED0  0008               	tblrd		*
  4220  001ED2  50F5               	movf	tablat,w,c
  4221  001ED4  0A64               	xorlw	100
  4222  001ED6  B4D8               	btfsc	status,2,c
  4223  001ED8  EF70  F00F         	goto	u6331
  4224  001EDC  EF72  F00F         	goto	u6330
  4225  001EE0                     u6331:
  4226  001EE0  EF84  F00F         	goto	l5170
  4227  001EE4                     u6330:
  4228  001EE4                     
  4229                           ; BSR set to: 0
  4230  001EE4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4231  001EE8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4232  001EEC  CFDE FFF6          	movff	postinc2,tblptrl
  4233  001EF0  CFDD FFF7          	movff	postdec2,tblptrh
  4234  001EF4                     	if	0	;tblptru may be non-zero
  4235  001EF4                     	endif
  4236  001EF4                     	if	0	;tblptru may be non-zero
  4237  001EF4                     	endif
  4238  001EF4  0008               	tblrd		*
  4239  001EF6  50F5               	movf	tablat,w,c
  4240  001EF8  0A69               	xorlw	105
  4241  001EFA  A4D8               	btfss	status,2,c
  4242  001EFC  EF82  F00F         	goto	u6341
  4243  001F00  EF84  F00F         	goto	u6340
  4244  001F04                     u6341:
  4245  001F04  EFC4  F00F         	goto	l5176
  4246  001F08                     u6340:
  4247  001F08                     l5170:
  4248                           
  4249                           ; BSR set to: 0
  4250                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  4251  001F08  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4252  001F0C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4253  001F10  2ADE               	incf	postinc2,f,c
  4254  001F12  0E00               	movlw	0
  4255  001F14  22DD               	addwfc	postdec2,f,c
  4256                           
  4257                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4258  001F16  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4259  001F1A  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4260  001F1E  CFDF F046          	movff	indf2,??_vfpfcnvrt
  4261  001F22  0E02               	movlw	2
  4262  001F24  26DE               	addwf	postinc2,f,c
  4263  001F26  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  4264  001F2A  0E00               	movlw	0
  4265  001F2C  22DD               	addwfc	postdec2,f,c
  4266  001F2E  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4267  001F32  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4268  001F36  CFDE F098          	movff	postinc2,vfpfcnvrt@ll
  4269  001F3A  CFDD F099          	movff	postdec2,vfpfcnvrt@ll+1
  4270  001F3E  0E00               	movlw	0
  4271  001F40  BF99               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4272  001F42  0EFF               	movlw	-1
  4273  001F44  6F9A               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4274  001F46  6F9B               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4275  001F48  6F9C               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4276  001F4A  6F9D               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4277  001F4C  6F9E               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4278  001F4E  6F9F               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4279  001F50                     
  4280                           ; BSR set to: 0
  4281                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  4282  001F50  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  4283  001F54  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4284  001F58  C098  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  4285  001F5C  C099  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4286  001F60  C09A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4287  001F64  C09B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4288  001F68  C09C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4289  001F6C  C09D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4290  001F70  C09E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4291  001F74  C09F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4292  001F78  EC34  F017         	call	_dtoa	;wreg free
  4293  001F7C  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  4294  001F80  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4295  001F84  EFF1  F010         	goto	l1372
  4296  001F88                     l5176:
  4297                           
  4298                           ; BSR set to: 0
  4299                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (
      +                          ct[0] == 'f') {
  4300  001F88  0E66               	movlw	102
  4301  001F8A  19AA               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  4302  001F8C  A4D8               	btfss	status,2,c
  4303  001F8E  EFCB  F00F         	goto	u6351
  4304  001F92  EFCD  F00F         	goto	u6350
  4305  001F96                     u6351:
  4306  001F96  EF0D  F010         	goto	l5188
  4307  001F9A                     u6350:
  4308  001F9A                     
  4309                           ; BSR set to: 0
  4310                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             
      +                          c = (*fmt)[0];
  4311  001F9A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4312  001F9E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4313  001FA2  CFDE FFF6          	movff	postinc2,tblptrl
  4314  001FA6  CFDD FFF7          	movff	postdec2,tblptrh
  4315  001FAA                     	if	0	;tblptru may be non-zero
  4316  001FAA                     	endif
  4317  001FAA                     	if	0	;tblptru may be non-zero
  4318  001FAA                     	endif
  4319  001FAA  0008               	tblrd		*
  4320  001FAC  CFF5 F0AD          	movff	tablat,vfpfcnvrt@c
  4321  001FB0                     
  4322                           ; BSR set to: 0
  4323                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             
      +                          ++*fmt;
  4324  001FB0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4325  001FB4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4326  001FB8  2ADE               	incf	postinc2,f,c
  4327  001FBA  0E00               	movlw	0
  4328  001FBC  22DD               	addwfc	postdec2,f,c
  4329  001FBE                     
  4330                           ; BSR set to: 0
  4331                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4332  001FBE  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4333  001FC2  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4334  001FC6  CFDF F046          	movff	indf2,??_vfpfcnvrt
  4335  001FCA  0E04               	movlw	4
  4336  001FCC  26DE               	addwf	postinc2,f,c
  4337  001FCE  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  4338  001FD2  0E00               	movlw	0
  4339  001FD4  22DD               	addwfc	postdec2,f,c
  4340  001FD6  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4341  001FDA  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4342  001FDE  CFDE F0A6          	movff	postinc2,vfpfcnvrt@f
  4343  001FE2  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f+1
  4344  001FE6  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f+2
  4345  001FEA  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+3
  4346  001FEE                     l5184:
  4347                           
  4348                           ; BSR set to: 0
  4349                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             
      +                          return efgtoa(fp, f, c);
  4350  001FEE  C040  F02E         	movff	vfpfcnvrt@fp,efgtoa@fp
  4351  001FF2  C041  F02F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  4352  001FF6  C0A6  F030         	movff	vfpfcnvrt@f,efgtoa@f
  4353  001FFA  C0A7  F031         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  4354  001FFE  C0A8  F032         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  4355  002002  C0A9  F033         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  4356  002006  C0AD  F034         	movff	vfpfcnvrt@c,efgtoa@c
  4357  00200A  EC6C  F003         	call	_efgtoa	;wreg free
  4358  00200E  C02E  F040         	movff	?_efgtoa,?_vfpfcnvrt
  4359  002012  C02F  F041         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  4360  002016  EFF1  F010         	goto	l1372
  4361  00201A                     l5188:
  4362                           
  4363                           ; BSR set to: 0
  4364                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  4365  00201A  0EAA               	movlw	low vfpfcnvrt@ct
  4366  00201C  6E01               	movwf	strncmp@_l^0,c
  4367  00201E  0E00               	movlw	high vfpfcnvrt@ct
  4368  002020  6E02               	movwf	(strncmp@_l+1)^0,c
  4369  002022  0ED4               	movlw	low STR_25
  4370  002024  6E03               	movwf	strncmp@_r^0,c
  4371  002026  0E06               	movlw	high STR_25
  4372  002028  6E04               	movwf	(strncmp@_r+1)^0,c
  4373  00202A  0E00               	movlw	0
  4374  00202C  6E06               	movwf	(strncmp@n+1)^0,c
  4375  00202E  0E02               	movlw	2
  4376  002030  6E05               	movwf	strncmp@n^0,c
  4377  002032  ECD6  F01E         	call	_strncmp	;wreg free
  4378  002036  5001               	movf	?_strncmp^0,w,c
  4379  002038  1002               	iorwf	(?_strncmp+1)^0,w,c
  4380  00203A  A4D8               	btfss	status,2,c
  4381  00203C  EF22  F010         	goto	u6361
  4382  002040  EF24  F010         	goto	u6360
  4383  002044                     u6361:
  4384  002044  EFA0  F010         	goto	l5204
  4385  002048                     u6360:
  4386  002048                     
  4387                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  4388  002048  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4389  00204C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4390  002050  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  4391  002054  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  4392  002058  0E01               	movlw	1
  4393  00205A  2646               	addwf	??_vfpfcnvrt^0,f,c
  4394  00205C  0E00               	movlw	0
  4395  00205E  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4396  002060  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4397  002064  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4398  002068                     	if	0	;tblptru may be non-zero
  4399  002068                     	endif
  4400  002068                     	if	0	;tblptru may be non-zero
  4401  002068                     	endif
  4402  002068  0008               	tblrd		*
  4403  00206A  CFF5 F0AD          	movff	tablat,vfpfcnvrt@c
  4404  00206E  0EBF               	movlw	191
  4405  002070  6E46               	movwf	??_vfpfcnvrt^0,c
  4406  002072  0EFF               	movlw	255
  4407  002074  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  4408  002076  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4409  00207A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4410  00207E  CFDE FFF6          	movff	postinc2,tblptrl
  4411  002082  CFDD FFF7          	movff	postdec2,tblptrh
  4412  002086                     	if	0	;tblptru may be non-zero
  4413  002086                     	endif
  4414  002086                     	if	0	;tblptru may be non-zero
  4415  002086                     	endif
  4416  002086  0008               	tblrd		*
  4417  002088  50F5               	movf	tablat,w,c
  4418  00208A  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  4419  00208C  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  4420  00208E  5046               	movf	??_vfpfcnvrt^0,w,c
  4421  002090  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4422  002092  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  4423  002094  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4424  002096  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  4425  002098  E10A               	bnz	u6370
  4426  00209A  0E1A               	movlw	26
  4427  00209C  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4428  00209E  A0D8               	btfss	status,0,c
  4429  0020A0  EF54  F010         	goto	u6371
  4430  0020A4  EF57  F010         	goto	u6370
  4431  0020A8                     u6371:
  4432  0020A8  0E01               	movlw	1
  4433  0020AA  EF58  F010         	goto	u6380
  4434  0020AE                     u6370:
  4435  0020AE  0E00               	movlw	0
  4436  0020B0                     u6380:
  4437  0020B0  0100               	movlb	0	; () banked
  4438  0020B2  6FA4               	movwf	_vfpfcnvrt$2900& (0+255),b
  4439  0020B4  6BA5               	clrf	(_vfpfcnvrt$2900+1)& (0+255),b
  4440  0020B6                     
  4441                           ; BSR set to: 0
  4442  0020B6  51A4               	movf	_vfpfcnvrt$2900& (0+255),w,b
  4443  0020B8  11A5               	iorwf	(_vfpfcnvrt$2900+1)& (0+255),w,b
  4444  0020BA  B4D8               	btfsc	status,2,c
  4445  0020BC  EF62  F010         	goto	u6391
  4446  0020C0  EF64  F010         	goto	u6390
  4447  0020C4                     u6391:
  4448  0020C4  EF7E  F010         	goto	l5198
  4449  0020C8                     u6390:
  4450  0020C8                     
  4451                           ; BSR set to: 0
  4452                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4453  0020C8  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4454  0020CC  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4455  0020D0  CFDF F046          	movff	indf2,??_vfpfcnvrt
  4456  0020D4  0E04               	movlw	4
  4457  0020D6  26DE               	addwf	postinc2,f,c
  4458  0020D8  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  4459  0020DC  0E00               	movlw	0
  4460  0020DE  22DD               	addwfc	postdec2,f,c
  4461  0020E0  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4462  0020E4  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4463  0020E8  CFDE F0A6          	movff	postinc2,vfpfcnvrt@f
  4464  0020EC  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f+1
  4465  0020F0  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f+2
  4466  0020F4  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+3
  4467                           
  4468                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             
      +                          } else {
  4469  0020F8  EF96  F010         	goto	l1380
  4470  0020FC                     l5198:
  4471                           
  4472                           ; BSR set to: 0
  4473                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4474  0020FC  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4475  002100  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4476  002104  CFDF F046          	movff	indf2,??_vfpfcnvrt
  4477  002108  0E04               	movlw	4
  4478  00210A  26DE               	addwf	postinc2,f,c
  4479  00210C  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  4480  002110  0E00               	movlw	0
  4481  002112  22DD               	addwfc	postdec2,f,c
  4482  002114  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4483  002118  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4484  00211C  CFDE F0A6          	movff	postinc2,vfpfcnvrt@f
  4485  002120  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f+1
  4486  002124  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f+2
  4487  002128  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+3
  4488  00212C                     l1380:
  4489                           
  4490                           ; BSR set to: 0
  4491                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  4492  00212C  0E02               	movlw	2
  4493  00212E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4494  002132  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4495  002136  26DE               	addwf	postinc2,f,c
  4496  002138  0E00               	movlw	0
  4497  00213A  22DD               	addwfc	postdec2,f,c
  4498  00213C  EFF7  F00F         	goto	l5184
  4499  002140                     l5204:
  4500                           
  4501                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  4502  002140  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4503  002144  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4504  002148  CFDE FFF6          	movff	postinc2,tblptrl
  4505  00214C  CFDD FFF7          	movff	postdec2,tblptrh
  4506  002150                     	if	0	;tblptru may be non-zero
  4507  002150                     	endif
  4508  002150                     	if	0	;tblptru may be non-zero
  4509  002150                     	endif
  4510  002150  0008               	tblrd		*
  4511  002152  50F5               	movf	tablat,w,c
  4512  002154  0A25               	xorlw	37
  4513  002156  A4D8               	btfss	status,2,c
  4514  002158  EFB0  F010         	goto	u6401
  4515  00215C  EFB2  F010         	goto	u6400
  4516  002160                     u6401:
  4517  002160  EFC9  F010         	goto	l5214
  4518  002164                     u6400:
  4519  002164                     
  4520                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  4521  002164  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4522  002168  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4523  00216C  2ADE               	incf	postinc2,f,c
  4524  00216E  0E00               	movlw	0
  4525  002170  22DD               	addwfc	postdec2,f,c
  4526  002172                     
  4527                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  4528  002172  0E00               	movlw	0
  4529  002174  6E02               	movwf	(fputc@c+1)^0,c
  4530  002176  0E25               	movlw	37
  4531  002178  6E01               	movwf	fputc@c^0,c
  4532  00217A  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4533  00217E  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4534  002182  ECA9  F01F         	call	_fputc	;wreg free
  4535  002186                     l5210:
  4536                           
  4537                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  4538  002186  0E00               	movlw	0
  4539  002188  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  4540  00218A  0E01               	movlw	1
  4541  00218C  6E40               	movwf	?_vfpfcnvrt^0,c
  4542  00218E  EFF1  F010         	goto	l1372
  4543  002192                     l5214:
  4544                           
  4545                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  4546  002192  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4547  002196  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4548  00219A  2ADE               	incf	postinc2,f,c
  4549  00219C  0E00               	movlw	0
  4550  00219E  22DD               	addwfc	postdec2,f,c
  4551  0021A0                     
  4552                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  4553  0021A0  0E00               	movlw	0
  4554  0021A2  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  4555  0021A4  0E00               	movlw	0
  4556  0021A6  6E40               	movwf	?_vfpfcnvrt^0,c
  4557  0021A8  EFF1  F010         	goto	l1372
  4558  0021AC                     l5220:
  4559                           
  4560                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  4561  0021AC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4562  0021B0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4563  0021B4  CFDE FFF6          	movff	postinc2,tblptrl
  4564  0021B8  CFDD FFF7          	movff	postdec2,tblptrh
  4565  0021BC                     	if	0	;tblptru may be non-zero
  4566  0021BC                     	endif
  4567  0021BC                     	if	0	;tblptru may be non-zero
  4568  0021BC                     	endif
  4569  0021BC  0008               	tblrd		*
  4570  0021BE  50F5               	movf	tablat,w,c
  4571  0021C0  6E01               	movwf	fputc@c^0,c
  4572  0021C2  6A02               	clrf	(fputc@c+1)^0,c
  4573  0021C4  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4574  0021C8  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4575  0021CC  ECA9  F01F         	call	_fputc	;wreg free
  4576  0021D0                     
  4577                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  4578  0021D0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4579  0021D4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4580  0021D8  2ADE               	incf	postinc2,f,c
  4581  0021DA  0E00               	movlw	0
  4582  0021DC  22DD               	addwfc	postdec2,f,c
  4583  0021DE  EFC3  F010         	goto	l5210
  4584  0021E2                     l1372:
  4585  0021E2  0012               	return		;funcret
  4586  0021E4                     __end_of_vfpfcnvrt:
  4587                           	callstack 0
  4588                           
  4589 ;; *************** function _strncmp *****************
  4590 ;; Defined at:
  4591 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  4592 ;; Parameters:    Size  Location     Type
  4593 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  4594 ;;		 -> vfpfcnvrt@ct(3), 
  4595 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  4596 ;;		 -> STR_27(3), 
  4597 ;;  n               2    4[COMRAM] unsigned int 
  4598 ;; Auto vars:     Size  Location     Type
  4599 ;;  r               2    9[COMRAM] PTR const unsigned char 
  4600 ;;		 -> STR_27(3), 
  4601 ;;  l               2    7[COMRAM] PTR const unsigned char 
  4602 ;;		 -> vfpfcnvrt@ct(3), 
  4603 ;; Return value:  Size  Location     Type
  4604 ;;                  2    0[COMRAM] int 
  4605 ;; Registers used:
  4606 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4607 ;; Tracked objects:
  4608 ;;		On entry : 0/0
  4609 ;;		On exit  : 0/0
  4610 ;;		Unchanged: 0/0
  4611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4612 ;;      Params:         6       0       0       0       0       0       0
  4613 ;;      Locals:         4       0       0       0       0       0       0
  4614 ;;      Temps:          1       0       0       0       0       0       0
  4615 ;;      Totals:        11       0       0       0       0       0       0
  4616 ;;Total ram usage:       11 bytes
  4617 ;; Hardware stack levels used:    1
  4618 ;; Hardware stack levels required when called:    1
  4619 ;; This function calls:
  4620 ;;		Nothing
  4621 ;; This function is called by:
  4622 ;;		_vfpfcnvrt
  4623 ;; This function uses a non-reentrant model
  4624 ;;
  4625                           
  4626                           	psect	text10
  4627  003DAC                     __ptext10:
  4628                           	callstack 0
  4629  003DAC                     _strncmp:
  4630                           	callstack 24
  4631  003DAC  C001  F008         	movff	strncmp@_l,strncmp@l
  4632  003DB0  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  4633  003DB4  C003  F00A         	movff	strncmp@_r,strncmp@r
  4634  003DB8  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  4635  003DBC  0605               	decf	strncmp@n^0,f,c
  4636  003DBE  A0D8               	btfss	status,0,c
  4637  003DC0  0606               	decf	(strncmp@n+1)^0,f,c
  4638  003DC2  2805               	incf	strncmp@n^0,w,c
  4639  003DC4  E106               	bnz	u6111
  4640  003DC6  2806               	incf	(strncmp@n+1)^0,w,c
  4641  003DC8  A4D8               	btfss	status,2,c
  4642  003DCA  EFE9  F01E         	goto	u6111
  4643  003DCE  EFEB  F01E         	goto	u6110
  4644  003DD2                     u6111:
  4645  003DD2  EFF8  F01E         	goto	l5082
  4646  003DD6                     u6110:
  4647  003DD6  0E00               	movlw	0
  4648  003DD8  6E02               	movwf	(?_strncmp+1)^0,c
  4649  003DDA  0E00               	movlw	0
  4650  003DDC  6E01               	movwf	?_strncmp^0,c
  4651  003DDE  EF40  F01F         	goto	l1508
  4652  003DE2                     l5080:
  4653  003DE2  4A08               	infsnz	strncmp@l^0,f,c
  4654  003DE4  2A09               	incf	(strncmp@l+1)^0,f,c
  4655  003DE6  4A0A               	infsnz	strncmp@r^0,f,c
  4656  003DE8  2A0B               	incf	(strncmp@r+1)^0,f,c
  4657  003DEA  0605               	decf	strncmp@n^0,f,c
  4658  003DEC  A0D8               	btfss	status,0,c
  4659  003DEE  0606               	decf	(strncmp@n+1)^0,f,c
  4660  003DF0                     l5082:
  4661  003DF0  C008  FFD9         	movff	strncmp@l,fsr2l
  4662  003DF4  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4663  003DF8  50DF               	movf	indf2,w,c
  4664  003DFA  B4D8               	btfsc	status,2,c
  4665  003DFC  EF02  F01F         	goto	u6121
  4666  003E00  EF04  F01F         	goto	u6120
  4667  003E04                     u6121:
  4668  003E04  EF2F  F01F         	goto	l5090
  4669  003E08                     u6120:
  4670  003E08  C00A  FFF6         	movff	strncmp@r,tblptrl
  4671  003E0C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4672  003E10                     	if	0	;tblptru may be non-zero
  4673  003E10                     	endif
  4674  003E10                     	if	0	;tblptru may be non-zero
  4675  003E10                     	endif
  4676  003E10  0008               	tblrd		*
  4677  003E12  50F5               	movf	tablat,w,c
  4678  003E14  0900               	iorlw	0
  4679  003E16  B4D8               	btfsc	status,2,c
  4680  003E18  EF10  F01F         	goto	u6131
  4681  003E1C  EF12  F01F         	goto	u6130
  4682  003E20                     u6131:
  4683  003E20  EF2F  F01F         	goto	l5090
  4684  003E24                     u6130:
  4685  003E24  5005               	movf	strncmp@n^0,w,c
  4686  003E26  1006               	iorwf	(strncmp@n+1)^0,w,c
  4687  003E28  B4D8               	btfsc	status,2,c
  4688  003E2A  EF19  F01F         	goto	u6141
  4689  003E2E  EF1B  F01F         	goto	u6140
  4690  003E32                     u6141:
  4691  003E32  EF2F  F01F         	goto	l5090
  4692  003E36                     u6140:
  4693  003E36  C008  FFD9         	movff	strncmp@l,fsr2l
  4694  003E3A  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4695  003E3E  50DF               	movf	indf2,w,c
  4696  003E40  6E07               	movwf	??_strncmp^0,c
  4697  003E42  C00A  FFF6         	movff	strncmp@r,tblptrl
  4698  003E46  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4699  003E4A                     	if	0	;tblptru may be non-zero
  4700  003E4A                     	endif
  4701  003E4A                     	if	0	;tblptru may be non-zero
  4702  003E4A                     	endif
  4703  003E4A  0008               	tblrd		*
  4704  003E4C  50F5               	movf	tablat,w,c
  4705  003E4E  1807               	xorwf	??_strncmp^0,w,c
  4706  003E50  B4D8               	btfsc	status,2,c
  4707  003E52  EF2D  F01F         	goto	u6151
  4708  003E56  EF2F  F01F         	goto	u6150
  4709  003E5A                     u6151:
  4710  003E5A  EFF1  F01E         	goto	l5080
  4711  003E5E                     u6150:
  4712  003E5E                     l5090:
  4713  003E5E  C008  FFD9         	movff	strncmp@l,fsr2l
  4714  003E62  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4715  003E66  50DF               	movf	indf2,w,c
  4716  003E68  6E07               	movwf	??_strncmp^0,c
  4717  003E6A  C00A  FFF6         	movff	strncmp@r,tblptrl
  4718  003E6E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4719  003E72                     	if	0	;tblptru may be non-zero
  4720  003E72                     	endif
  4721  003E72                     	if	0	;tblptru may be non-zero
  4722  003E72                     	endif
  4723  003E72  0008               	tblrd		*
  4724  003E74  50F5               	movf	tablat,w,c
  4725  003E76  5C07               	subwf	??_strncmp^0,w,c
  4726  003E78  6E01               	movwf	?_strncmp^0,c
  4727  003E7A  6A02               	clrf	(?_strncmp+1)^0,c
  4728  003E7C  A0D8               	btfss	status,0,c
  4729  003E7E  0602               	decf	(?_strncmp+1)^0,f,c
  4730  003E80                     l1508:
  4731  003E80  0012               	return		;funcret
  4732  003E82                     __end_of_strncmp:
  4733                           	callstack 0
  4734                           
  4735 ;; *************** function _efgtoa *****************
  4736 ;; Defined at:
  4737 ;;		line 319 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  4738 ;; Parameters:    Size  Location     Type
  4739 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  4740 ;;		 -> sprintf@f(6), 
  4741 ;;  f               4   47[COMRAM] PTR struct _IO_FILE
  4742 ;;  c               1   51[COMRAM] unsigned char 
  4743 ;; Auto vars:     Size  Location     Type
  4744 ;;  u               4   52[BANK0 ] unsigned char 
  4745 ;;  g               4   44[BANK0 ] unsigned char 
  4746 ;;  l               4   38[BANK0 ] unsigned char 
  4747 ;;  h               4   34[BANK0 ] unsigned char 
  4748 ;;  ou              4    0[BANK0 ] unsigned char 
  4749 ;;  n               2   50[BANK0 ] int 
  4750 ;;  e               2   48[BANK0 ] int 
  4751 ;;  i               2   42[BANK0 ] int 
  4752 ;;  w               2   31[BANK0 ] int 
  4753 ;;  p               2   28[BANK0 ] int 
  4754 ;;  sign            2   26[BANK0 ] int 
  4755 ;;  d               2   24[BANK0 ] int 
  4756 ;;  ne              2   22[BANK0 ] int 
  4757 ;;  m               2   20[BANK0 ] int 
  4758 ;;  pp              2   18[BANK0 ] int 
  4759 ;;  t               2   16[BANK0 ] int 
  4760 ;;  mode            1   33[BANK0 ] unsigned char 
  4761 ;;  nmode           1   30[BANK0 ] unsigned char 
  4762 ;; Return value:  Size  Location     Type
  4763 ;;                  2   45[COMRAM] int 
  4764 ;; Registers used:
  4765 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4766 ;; Tracked objects:
  4767 ;;		On entry : 0/0
  4768 ;;		On exit  : 0/0
  4769 ;;		Unchanged: 0/0
  4770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4771 ;;      Params:         7       0       0       0       0       0       0
  4772 ;;      Locals:         0      56       0       0       0       0       0
  4773 ;;      Temps:          5       0       0       0       0       0       0
  4774 ;;      Totals:        12      56       0       0       0       0       0
  4775 ;;Total ram usage:       68 bytes
  4776 ;; Hardware stack levels used:    1
  4777 ;; Hardware stack levels required when called:    5
  4778 ;; This function calls:
  4779 ;;		___awdiv
  4780 ;;		___awmod
  4781 ;;		___fladd
  4782 ;;		___fldiv
  4783 ;;		___fleq
  4784 ;;		___flge
  4785 ;;		___flmul
  4786 ;;		___flneg
  4787 ;;		___flsub
  4788 ;;		___fltol
  4789 ;;		___fpclassifyf
  4790 ;;		_floorf
  4791 ;;		_isupper
  4792 ;;		_pad
  4793 ;;		_strcpy
  4794 ;;		_tolower
  4795 ;; This function is called by:
  4796 ;;		_vfpfcnvrt
  4797 ;; This function uses a non-reentrant model
  4798 ;;
  4799                           
  4800                           	psect	text11
  4801  0006D8                     __ptext11:
  4802                           	callstack 0
  4803  0006D8                     _efgtoa:
  4804                           	callstack 20
  4805  0006D8                     
  4806                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\
      +                          c99\common\doprnt.c: 320: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\
      +                          doprnt.c: 321:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c9
      +                          9\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;
  4807  0006D8  0E00               	movlw	0
  4808  0006DA  0100               	movlb	0	; () banked
  4809  0006DC  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4810  0006DE  0E00               	movlw	0
  4811  0006E0  6F7A               	movwf	efgtoa@sign& (0+255),b
  4812  0006E2                     
  4813                           ; BSR set to: 0
  4814                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  4815  0006E2  C030  F08C         	movff	efgtoa@f,efgtoa@g
  4816  0006E6  C031  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  4817  0006EA  C032  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  4818  0006EE  C033  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  4819  0006F2                     
  4820                           ; BSR set to: 0
  4821                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 
      +                          0.0) {
  4822  0006F2  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  4823  0006F4  EF80  F003         	goto	u5520
  4824  0006F8  EF7E  F003         	goto	u5521
  4825  0006FC                     u5521:
  4826  0006FC  EF96  F003         	goto	l4744
  4827  000700                     u5520:
  4828  000700                     
  4829                           ; BSR set to: 0
  4830                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign
      +                           = 1;
  4831  000700  0E00               	movlw	0
  4832  000702  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4833  000704  0E01               	movlw	1
  4834  000706  6F7A               	movwf	efgtoa@sign& (0+255),b
  4835  000708                     
  4836                           ; BSR set to: 0
  4837                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = 
      +                          -g;
  4838  000708  C08C  F001         	movff	efgtoa@g,___flneg@f1
  4839  00070C  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  4840  000710  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  4841  000714  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  4842  000718  EC20  F024         	call	___flneg	;wreg free
  4843  00071C  C001  F08C         	movff	?___flneg,efgtoa@g
  4844  000720  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  4845  000724  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  4846  000728  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  4847  00072C                     l4744:
  4848                           
  4849                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  4850  00072C  0E00               	movlw	0
  4851  00072E  0100               	movlb	0	; () banked
  4852  000730  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  4853  000732  0E00               	movlw	0
  4854  000734  6F92               	movwf	efgtoa@n& (0+255),b
  4855  000736                     
  4856                           ; BSR set to: 0
  4857                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = widt
      +                          h;
  4858  000736  C0E9  F07F         	movff	_width,efgtoa@w
  4859  00073A  C0EA  F080         	movff	_width+1,efgtoa@w+1
  4860  00073E                     
  4861                           ; BSR set to: 0
  4862                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign
      +                           || (flags & (1 << 2))) {
  4863  00073E  517A               	movf	efgtoa@sign& (0+255),w,b
  4864  000740  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4865  000742  A4D8               	btfss	status,2,c
  4866  000744  EFA6  F003         	goto	u5531
  4867  000748  EFA8  F003         	goto	u5530
  4868  00074C                     u5531:
  4869  00074C  EFAF  F003         	goto	l4752
  4870  000750                     u5530:
  4871  000750                     
  4872                           ; BSR set to: 0
  4873  000750  A5ED               	btfss	_flags& (0+255),2,b
  4874  000752  EFAD  F003         	goto	u5541
  4875  000756  EFAF  F003         	goto	u5540
  4876  00075A                     u5541:
  4877  00075A  EFC9  F003         	goto	l4764
  4878  00075E                     u5540:
  4879  00075E                     l4752:
  4880                           
  4881                           ; BSR set to: 0
  4882                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf
      +                          [n] = sign ? '-' : '+';
  4883  00075E  517A               	movf	efgtoa@sign& (0+255),w,b
  4884  000760  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4885  000762  A4D8               	btfss	status,2,c
  4886  000764  EFB6  F003         	goto	u5551
  4887  000768  EFB8  F003         	goto	u5550
  4888  00076C                     u5551:
  4889  00076C  EFBE  F003         	goto	l4756
  4890  000770                     u5550:
  4891  000770                     
  4892                           ; BSR set to: 0
  4893  000770  0E00               	movlw	0
  4894  000772  6F65               	movwf	(_efgtoa$2869+1)& (0+255),b
  4895  000774  0E2B               	movlw	43
  4896  000776  6F64               	movwf	_efgtoa$2869& (0+255),b
  4897  000778  EFC2  F003         	goto	l4758
  4898  00077C                     l4756:
  4899                           
  4900                           ; BSR set to: 0
  4901  00077C  0E00               	movlw	0
  4902  00077E  6F65               	movwf	(_efgtoa$2869+1)& (0+255),b
  4903  000780  0E2D               	movlw	45
  4904  000782  6F64               	movwf	_efgtoa$2869& (0+255),b
  4905  000784                     l4758:
  4906                           
  4907                           ; BSR set to: 0
  4908  000784  C064  F1AB         	movff	_efgtoa$2869,_dbuf
  4909  000788                     
  4910                           ; BSR set to: 0
  4911                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  4912  000788  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4913  00078A  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4914  00078C                     
  4915                           ; BSR set to: 0
  4916                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  4917  00078C  077F               	decf	efgtoa@w& (0+255),f,b
  4918  00078E  A0D8               	btfss	status,0,c
  4919  000790  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4920  000792                     l4764:
  4921                           
  4922                           ; BSR set to: 0
  4923                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4924  000792  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  4925  000796  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4926  00079A  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4927  00079E  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4928  0007A2  EC57  F01E         	call	___fpclassifyf	;wreg free
  4929  0007A6  0401               	decf	?___fpclassifyf^0,w,c
  4930  0007A8  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4931  0007AA  A4D8               	btfss	status,2,c
  4932  0007AC  EFDA  F003         	goto	u5561
  4933  0007B0  EFDC  F003         	goto	u5560
  4934  0007B4                     u5561:
  4935  0007B4  EF33  F004         	goto	l4782
  4936  0007B8                     u5560:
  4937  0007B8  0EBF               	movlw	191
  4938  0007BA  6E35               	movwf	??_efgtoa^0,c
  4939  0007BC  0EFF               	movlw	255
  4940  0007BE  6E36               	movwf	(??_efgtoa+1)^0,c
  4941  0007C0  5034               	movf	efgtoa@c^0,w,c
  4942  0007C2  6E37               	movwf	(??_efgtoa+2)^0,c
  4943  0007C4  6A38               	clrf	(??_efgtoa+3)^0,c
  4944  0007C6  5035               	movf	??_efgtoa^0,w,c
  4945  0007C8  2637               	addwf	(??_efgtoa+2)^0,f,c
  4946  0007CA  5036               	movf	(??_efgtoa+1)^0,w,c
  4947  0007CC  2238               	addwfc	(??_efgtoa+3)^0,f,c
  4948  0007CE  5038               	movf	(??_efgtoa+3)^0,w,c
  4949  0007D0  E10A               	bnz	u5570
  4950  0007D2  0E1A               	movlw	26
  4951  0007D4  5C37               	subwf	(??_efgtoa+2)^0,w,c
  4952  0007D6  A0D8               	btfss	status,0,c
  4953  0007D8  EFF0  F003         	goto	u5571
  4954  0007DC  EFF3  F003         	goto	u5570
  4955  0007E0                     u5571:
  4956  0007E0  0E01               	movlw	1
  4957  0007E2  EFF4  F003         	goto	u5580
  4958  0007E6                     u5570:
  4959  0007E6  0E00               	movlw	0
  4960  0007E8                     u5580:
  4961  0007E8  0100               	movlb	0	; () banked
  4962  0007EA  6F66               	movwf	_efgtoa$2870& (0+255),b
  4963  0007EC  6B67               	clrf	(_efgtoa$2870+1)& (0+255),b
  4964  0007EE                     
  4965                           ; BSR set to: 0
  4966  0007EE  5166               	movf	_efgtoa$2870& (0+255),w,b
  4967  0007F0  1167               	iorwf	(_efgtoa$2870+1)& (0+255),w,b
  4968  0007F2  B4D8               	btfsc	status,2,c
  4969  0007F4  EFFE  F003         	goto	u5591
  4970  0007F8  EF00  F004         	goto	u5590
  4971  0007FC                     u5591:
  4972  0007FC  EF0E  F004         	goto	l4774
  4973  000800                     u5590:
  4974  000800                     
  4975                           ; BSR set to: 0
  4976                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             
      +                          strcpy(&dbuf[n], "INF");
  4977  000800  0EAB               	movlw	low _dbuf
  4978  000802  2592               	addwf	efgtoa@n& (0+255),w,b
  4979  000804  6E01               	movwf	strcpy@dest^0,c
  4980  000806  0E01               	movlw	high _dbuf
  4981  000808  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4982  00080A  6E02               	movwf	(strcpy@dest+1)^0,c
  4983  00080C  0EC4               	movlw	low STR_17
  4984  00080E  6E03               	movwf	strcpy@src^0,c
  4985  000810  0E06               	movlw	high STR_17
  4986  000812  6E04               	movwf	(strcpy@src+1)^0,c
  4987  000814  ECCE  F022         	call	_strcpy	;wreg free
  4988                           
  4989                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } el
      +                          se {
  4990  000818  EF1A  F004         	goto	l4776
  4991  00081C                     l4774:
  4992                           
  4993                           ; BSR set to: 0
  4994                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             
      +                          strcpy(&dbuf[n], "inf");
  4995  00081C  0EAB               	movlw	low _dbuf
  4996  00081E  2592               	addwf	efgtoa@n& (0+255),w,b
  4997  000820  6E01               	movwf	strcpy@dest^0,c
  4998  000822  0E01               	movlw	high _dbuf
  4999  000824  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5000  000826  6E02               	movwf	(strcpy@dest+1)^0,c
  5001  000828  0ECC               	movlw	low STR_18
  5002  00082A  6E03               	movwf	strcpy@src^0,c
  5003  00082C  0E06               	movlw	high STR_18
  5004  00082E  6E04               	movwf	(strcpy@src+1)^0,c
  5005  000830  ECCE  F022         	call	_strcpy	;wreg free
  5006  000834                     l4776:
  5007                           
  5008                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  5009  000834  0100               	movlb	0	; () banked
  5010  000836  0EFD               	movlw	253
  5011  000838  277F               	addwf	efgtoa@w& (0+255),f,b
  5012  00083A  0EFF               	movlw	255
  5013  00083C  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  5014  00083E                     l4778:
  5015                           
  5016                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         retu
      +                          rn pad(fp, &dbuf[0], w);
  5017  00083E  C02E  F011         	movff	efgtoa@fp,pad@fp
  5018  000842  C02F  F012         	movff	efgtoa@fp+1,pad@fp+1
  5019  000846  0EAB               	movlw	low _dbuf
  5020  000848  6E13               	movwf	pad@buf^0,c
  5021  00084A  0E01               	movlw	high _dbuf
  5022  00084C  6E14               	movwf	(pad@buf+1)^0,c
  5023  00084E  C07F  F015         	movff	efgtoa@w,pad@p
  5024  000852  C080  F016         	movff	efgtoa@w+1,pad@p+1
  5025  000856  EC0E  F020         	call	_pad	;wreg free
  5026  00085A  C011  F02E         	movff	?_pad,?_efgtoa
  5027  00085E  C012  F02F         	movff	?_pad+1,?_efgtoa+1
  5028  000862  EF43  F009         	goto	l1270
  5029  000866                     l4782:
  5030                           
  5031                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  5032  000866  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  5033  00086A  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  5034  00086E  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  5035  000872  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  5036  000876  EC57  F01E         	call	___fpclassifyf	;wreg free
  5037  00087A  5001               	movf	?___fpclassifyf^0,w,c
  5038  00087C  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  5039  00087E  A4D8               	btfss	status,2,c
  5040  000880  EF44  F004         	goto	u5601
  5041  000884  EF46  F004         	goto	u5600
  5042  000888                     u5601:
  5043  000888  EF86  F004         	goto	l4800
  5044  00088C                     u5600:
  5045  00088C  0EBF               	movlw	191
  5046  00088E  6E35               	movwf	??_efgtoa^0,c
  5047  000890  0EFF               	movlw	255
  5048  000892  6E36               	movwf	(??_efgtoa+1)^0,c
  5049  000894  5034               	movf	efgtoa@c^0,w,c
  5050  000896  6E37               	movwf	(??_efgtoa+2)^0,c
  5051  000898  6A38               	clrf	(??_efgtoa+3)^0,c
  5052  00089A  5035               	movf	??_efgtoa^0,w,c
  5053  00089C  2637               	addwf	(??_efgtoa+2)^0,f,c
  5054  00089E  5036               	movf	(??_efgtoa+1)^0,w,c
  5055  0008A0  2238               	addwfc	(??_efgtoa+3)^0,f,c
  5056  0008A2  5038               	movf	(??_efgtoa+3)^0,w,c
  5057  0008A4  E10A               	bnz	u5610
  5058  0008A6  0E1A               	movlw	26
  5059  0008A8  5C37               	subwf	(??_efgtoa+2)^0,w,c
  5060  0008AA  A0D8               	btfss	status,0,c
  5061  0008AC  EF5A  F004         	goto	u5611
  5062  0008B0  EF5D  F004         	goto	u5610
  5063  0008B4                     u5611:
  5064  0008B4  0E01               	movlw	1
  5065  0008B6  EF5E  F004         	goto	u5620
  5066  0008BA                     u5610:
  5067  0008BA  0E00               	movlw	0
  5068  0008BC                     u5620:
  5069  0008BC  0100               	movlb	0	; () banked
  5070  0008BE  6F68               	movwf	_efgtoa$2874& (0+255),b
  5071  0008C0  6B69               	clrf	(_efgtoa$2874+1)& (0+255),b
  5072  0008C2                     
  5073                           ; BSR set to: 0
  5074  0008C2  5168               	movf	_efgtoa$2874& (0+255),w,b
  5075  0008C4  1169               	iorwf	(_efgtoa$2874+1)& (0+255),w,b
  5076  0008C6  B4D8               	btfsc	status,2,c
  5077  0008C8  EF68  F004         	goto	u5631
  5078  0008CC  EF6A  F004         	goto	u5630
  5079  0008D0                     u5631:
  5080  0008D0  EF78  F004         	goto	l4792
  5081  0008D4                     u5630:
  5082  0008D4                     
  5083                           ; BSR set to: 0
  5084                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             
      +                          strcpy(&dbuf[n], "NAN");
  5085  0008D4  0EAB               	movlw	low _dbuf
  5086  0008D6  2592               	addwf	efgtoa@n& (0+255),w,b
  5087  0008D8  6E01               	movwf	strcpy@dest^0,c
  5088  0008DA  0E01               	movlw	high _dbuf
  5089  0008DC  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5090  0008DE  6E02               	movwf	(strcpy@dest+1)^0,c
  5091  0008E0  0EC8               	movlw	low STR_21
  5092  0008E2  6E03               	movwf	strcpy@src^0,c
  5093  0008E4  0E06               	movlw	high STR_21
  5094  0008E6  6E04               	movwf	(strcpy@src+1)^0,c
  5095  0008E8  ECCE  F022         	call	_strcpy	;wreg free
  5096                           
  5097                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } el
      +                          se {
  5098  0008EC  EF1A  F004         	goto	l4776
  5099  0008F0                     l4792:
  5100                           
  5101                           ; BSR set to: 0
  5102                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             
      +                          strcpy(&dbuf[n], "nan");
  5103  0008F0  0EAB               	movlw	low _dbuf
  5104  0008F2  2592               	addwf	efgtoa@n& (0+255),w,b
  5105  0008F4  6E01               	movwf	strcpy@dest^0,c
  5106  0008F6  0E01               	movlw	high _dbuf
  5107  0008F8  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5108  0008FA  6E02               	movwf	(strcpy@dest+1)^0,c
  5109  0008FC  0ED0               	movlw	low STR_22
  5110  0008FE  6E03               	movwf	strcpy@src^0,c
  5111  000900  0E06               	movlw	high STR_22
  5112  000902  6E04               	movwf	(strcpy@src+1)^0,c
  5113  000904  ECCE  F022         	call	_strcpy	;wreg free
  5114  000908  EF1A  F004         	goto	l4776
  5115  00090C                     l4800:
  5116                           
  5117                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  5118  00090C  0E00               	movlw	0
  5119  00090E  0100               	movlb	0	; () banked
  5120  000910  6F94               	movwf	efgtoa@u& (0+255),b
  5121  000912  0E00               	movlw	0
  5122  000914  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  5123  000916  0E80               	movlw	128
  5124  000918  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  5125  00091A  0E3F               	movlw	63
  5126  00091C  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  5127                           
  5128                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  5129  00091E  0E00               	movlw	0
  5130  000920  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  5131  000922  0E00               	movlw	0
  5132  000924  6F90               	movwf	efgtoa@e& (0+255),b
  5133  000926                     
  5134                           ; BSR set to: 0
  5135                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g 
      +                          == 0.0)) {
  5136  000926  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  5137  00092A  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  5138  00092E  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  5139  000932  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  5140  000936  0E00               	movlw	0
  5141  000938  6E05               	movwf	___fleq@ff2^0,c
  5142  00093A  0E00               	movlw	0
  5143  00093C  6E06               	movwf	(___fleq@ff2+1)^0,c
  5144  00093E  0E00               	movlw	0
  5145  000940  6E07               	movwf	(___fleq@ff2+2)^0,c
  5146  000942  0E00               	movlw	0
  5147  000944  6E08               	movwf	(___fleq@ff2+3)^0,c
  5148  000946  EC2B  F021         	call	___fleq	;wreg free
  5149  00094A  B0D8               	btfsc	status,0,c
  5150  00094C  EFAA  F004         	goto	u5641
  5151  000950  EFAC  F004         	goto	u5640
  5152  000954                     u5641:
  5153  000954  EF2F  F005         	goto	l4818
  5154  000958                     u5640:
  5155  000958  EFCB  F004         	goto	l4810
  5156  00095C                     l4806:
  5157                           
  5158                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             
      +                          u = u*10.0;
  5159  00095C  C094  F001         	movff	efgtoa@u,___flmul@b
  5160  000960  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  5161  000964  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  5162  000968  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  5163  00096C  0E00               	movlw	0
  5164  00096E  6E05               	movwf	___flmul@a^0,c
  5165  000970  0E00               	movlw	0
  5166  000972  6E06               	movwf	(___flmul@a+1)^0,c
  5167  000974  0E20               	movlw	32
  5168  000976  6E07               	movwf	(___flmul@a+2)^0,c
  5169  000978  0E41               	movlw	65
  5170  00097A  6E08               	movwf	(___flmul@a+3)^0,c
  5171  00097C  EC52  F013         	call	___flmul	;wreg free
  5172  000980  C001  F094         	movff	?___flmul,efgtoa@u
  5173  000984  C002  F095         	movff	?___flmul+1,efgtoa@u+1
  5174  000988  C003  F096         	movff	?___flmul+2,efgtoa@u+2
  5175  00098C  C004  F097         	movff	?___flmul+3,efgtoa@u+3
  5176  000990                     
  5177                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             
      +                          ++e;
  5178  000990  0100               	movlb	0	; () banked
  5179  000992  4B90               	infsnz	efgtoa@e& (0+255),f,b
  5180  000994  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  5181  000996                     l4810:
  5182                           
  5183                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         whil
      +                          e (!(g < (u*10.0))) {
  5184  000996  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  5185  00099A  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  5186  00099E  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  5187  0009A2  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  5188  0009A6  0E00               	movlw	0
  5189  0009A8  6E05               	movwf	___flmul@a^0,c
  5190  0009AA  0E00               	movlw	0
  5191  0009AC  6E06               	movwf	(___flmul@a+1)^0,c
  5192  0009AE  0E20               	movlw	32
  5193  0009B0  6E07               	movwf	(___flmul@a+2)^0,c
  5194  0009B2  0E41               	movlw	65
  5195  0009B4  6E08               	movwf	(___flmul@a+3)^0,c
  5196  0009B6  C094  F001         	movff	efgtoa@u,___flmul@b
  5197  0009BA  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  5198  0009BE  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  5199  0009C2  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  5200  0009C6  EC52  F013         	call	___flmul	;wreg free
  5201  0009CA  C001  F01E         	movff	?___flmul,___flge@ff2
  5202  0009CE  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  5203  0009D2  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  5204  0009D6  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  5205  0009DA  ECD5  F01D         	call	___flge	;wreg free
  5206  0009DE  B0D8               	btfsc	status,0,c
  5207  0009E0  EFF4  F004         	goto	u5651
  5208  0009E4  EFF6  F004         	goto	u5650
  5209  0009E8                     u5651:
  5210  0009E8  EFAE  F004         	goto	l4806
  5211  0009EC                     u5650:
  5212  0009EC  EF16  F005         	goto	l4816
  5213  0009F0                     l4812:
  5214                           
  5215                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             
      +                          u = u/10.0;
  5216  0009F0  C094  F001         	movff	efgtoa@u,___fldiv@b
  5217  0009F4  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  5218  0009F8  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  5219  0009FC  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  5220  000A00  0E00               	movlw	0
  5221  000A02  6E05               	movwf	___fldiv@a^0,c
  5222  000A04  0E00               	movlw	0
  5223  000A06  6E06               	movwf	(___fldiv@a+1)^0,c
  5224  000A08  0E20               	movlw	32
  5225  000A0A  6E07               	movwf	(___fldiv@a+2)^0,c
  5226  000A0C  0E41               	movlw	65
  5227  000A0E  6E08               	movwf	(___fldiv@a+3)^0,c
  5228  000A10  EC67  F015         	call	___fldiv	;wreg free
  5229  000A14  C001  F094         	movff	?___fldiv,efgtoa@u
  5230  000A18  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  5231  000A1C  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  5232  000A20  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  5233  000A24                     
  5234                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             
      +                          --e;
  5235  000A24  0100               	movlb	0	; () banked
  5236  000A26  0790               	decf	efgtoa@e& (0+255),f,b
  5237  000A28  A0D8               	btfss	status,0,c
  5238  000A2A  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  5239  000A2C                     l4816:
  5240                           
  5241                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         whil
      +                          e (g < u) {
  5242  000A2C  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  5243  000A30  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  5244  000A34  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  5245  000A38  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  5246  000A3C  C094  F01E         	movff	efgtoa@u,___flge@ff2
  5247  000A40  C095  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  5248  000A44  C096  F020         	movff	efgtoa@u+2,___flge@ff2+2
  5249  000A48  C097  F021         	movff	efgtoa@u+3,___flge@ff2+3
  5250  000A4C  ECD5  F01D         	call	___flge	;wreg free
  5251  000A50  A0D8               	btfss	status,0,c
  5252  000A52  EF2D  F005         	goto	u5661
  5253  000A56  EF2F  F005         	goto	u5660
  5254  000A5A                     u5661:
  5255  000A5A  EFF8  F004         	goto	l4812
  5256  000A5E                     u5660:
  5257  000A5E                     l4818:
  5258                           
  5259                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = t
      +                          olower((int)c);
  5260  000A5E  C034  F007         	movff	efgtoa@c,tolower@c
  5261  000A62  6A08               	clrf	(tolower@c+1)^0,c
  5262  000A64  EC9E  F022         	call	_tolower	;wreg free
  5263  000A68  5007               	movf	?_tolower^0,w,c
  5264  000A6A  0100               	movlb	0	; () banked
  5265  000A6C  6F81               	movwf	efgtoa@mode& (0+255),b
  5266  000A6E                     
  5267                           ; BSR set to: 0
  5268                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = 
      +                          mode;
  5269  000A6E  C081  F07E         	movff	efgtoa@mode,efgtoa@nmode
  5270  000A72                     
  5271                           ; BSR set to: 0
  5272                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode
      +                           == 'g') {
  5273  000A72  0E67               	movlw	103
  5274  000A74  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5275  000A76  A4D8               	btfss	status,2,c
  5276  000A78  EF40  F005         	goto	u5671
  5277  000A7C  EF42  F005         	goto	u5670
  5278  000A80                     u5671:
  5279  000A80  EF68  F005         	goto	l4832
  5280  000A84                     u5670:
  5281  000A84                     
  5282                           ; BSR set to: 0
  5283                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec =
      +                          = 0) {
  5284  000A84  51EB               	movf	_prec& (0+255),w,b
  5285  000A86  11EC               	iorwf	(_prec+1)& (0+255),w,b
  5286  000A88  A4D8               	btfss	status,2,c
  5287  000A8A  EF49  F005         	goto	u5681
  5288  000A8E  EF4B  F005         	goto	u5680
  5289  000A92                     u5681:
  5290  000A92  EF4F  F005         	goto	l4828
  5291  000A96                     u5680:
  5292  000A96                     
  5293                           ; BSR set to: 0
  5294                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  5295  000A96  0E00               	movlw	0
  5296  000A98  6FEC               	movwf	(_prec+1)& (0+255),b
  5297  000A9A  0E01               	movlw	1
  5298  000A9C  6FEB               	movwf	_prec& (0+255),b
  5299  000A9E                     l4828:
  5300                           
  5301                           ; BSR set to: 0
  5302                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = 
      +                          (0 < prec) ? prec : 6;
  5303  000A9E  BFEC               	btfsc	(_prec+1)& (0+255),7,b
  5304  000AA0  EF5C  F005         	goto	u5690
  5305  000AA4  51EC               	movf	(_prec+1)& (0+255),w,b
  5306  000AA6  E106               	bnz	u5691
  5307  000AA8  05EB               	decf	_prec& (0+255),w,b
  5308  000AAA  B0D8               	btfsc	status,0,c
  5309  000AAC  EF5A  F005         	goto	u5691
  5310  000AB0  EF5C  F005         	goto	u5690
  5311  000AB4                     u5691:
  5312  000AB4  EF62  F005         	goto	l1288
  5313  000AB8                     u5690:
  5314  000AB8                     l4830:
  5315                           
  5316                           ; BSR set to: 0
  5317  000AB8  0E00               	movlw	0
  5318  000ABA  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  5319  000ABC  0E06               	movlw	6
  5320  000ABE  6F7C               	movwf	efgtoa@p& (0+255),b
  5321  000AC0  EF71  F005         	goto	l4838
  5322  000AC4                     l1288:
  5323                           
  5324                           ; BSR set to: 0
  5325  000AC4  C0EB  F07C         	movff	_prec,efgtoa@p
  5326  000AC8  C0EC  F07D         	movff	_prec+1,efgtoa@p+1
  5327  000ACC  EF71  F005         	goto	l4838
  5328  000AD0                     l4832:
  5329                           
  5330                           ; BSR set to: 0
  5331                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = 
      +                          (prec < 0) ? 6 : prec;
  5332  000AD0  BFEC               	btfsc	(_prec+1)& (0+255),7,b
  5333  000AD2  EF6D  F005         	goto	u5701
  5334  000AD6  EF6F  F005         	goto	u5700
  5335  000ADA                     u5701:
  5336  000ADA  EF5C  F005         	goto	l4830
  5337  000ADE                     u5700:
  5338  000ADE  EF62  F005         	goto	l1288
  5339  000AE2                     l4838:
  5340                           
  5341                           ; BSR set to: 0
  5342                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode
      +                           == 'g') {
  5343  000AE2  0E67               	movlw	103
  5344  000AE4  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5345  000AE6  A4D8               	btfss	status,2,c
  5346  000AE8  EF78  F005         	goto	u5711
  5347  000AEC  EF7A  F005         	goto	u5710
  5348  000AF0                     u5711:
  5349  000AF0  EFA9  F005         	goto	l4848
  5350  000AF4                     u5710:
  5351  000AF4                     
  5352                           ; BSR set to: 0
  5353                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  5354  000AF4  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  5355  000AF6  EF88  F005         	goto	u5720
  5356  000AFA  0EFC               	movlw	252
  5357  000AFC  5D90               	subwf	efgtoa@e& (0+255),w,b
  5358  000AFE  0EFF               	movlw	255
  5359  000B00  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  5360  000B02  A0D8               	btfss	status,0,c
  5361  000B04  EF86  F005         	goto	u5721
  5362  000B08  EF88  F005         	goto	u5720
  5363  000B0C                     u5721:
  5364  000B0C  EFA7  F005         	goto	l4846
  5365  000B10                     u5720:
  5366  000B10                     
  5367                           ; BSR set to: 0
  5368  000B10  0EFF               	movlw	255
  5369  000B12  6E35               	movwf	??_efgtoa^0,c
  5370  000B14  0EFF               	movlw	255
  5371  000B16  6E36               	movwf	(??_efgtoa+1)^0,c
  5372  000B18  C07C  F037         	movff	efgtoa@p,??_efgtoa+2
  5373  000B1C  C07D  F038         	movff	efgtoa@p+1,??_efgtoa+3
  5374  000B20  5035               	movf	??_efgtoa^0,w,c
  5375  000B22  2637               	addwf	(??_efgtoa+2)^0,f,c
  5376  000B24  5036               	movf	(??_efgtoa+1)^0,w,c
  5377  000B26  2238               	addwfc	(??_efgtoa+3)^0,f,c
  5378  000B28  5190               	movf	efgtoa@e& (0+255),w,b
  5379  000B2A  5C37               	subwf	(??_efgtoa+2)^0,w,c
  5380  000B2C  5038               	movf	(??_efgtoa+3)^0,w,c
  5381  000B2E  0A80               	xorlw	128
  5382  000B30  6E39               	movwf	(??_efgtoa+4)^0,c
  5383  000B32  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  5384  000B34  0A80               	xorlw	128
  5385  000B36  5839               	subwfb	(??_efgtoa+4)^0,w,c
  5386  000B38  A0D8               	btfss	status,0,c
  5387  000B3A  EFA1  F005         	goto	u5731
  5388  000B3E  EFA3  F005         	goto	u5730
  5389  000B42                     u5731:
  5390  000B42  EFA7  F005         	goto	l4846
  5391  000B46                     u5730:
  5392  000B46                     
  5393                           ; BSR set to: 0
  5394                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             
      +                          nmode = 'f';
  5395  000B46  0E66               	movlw	102
  5396  000B48  6F7E               	movwf	efgtoa@nmode& (0+255),b
  5397                           
  5398                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } el
      +                          se {
  5399  000B4A  EFA9  F005         	goto	l4848
  5400  000B4E                     l4846:
  5401                           
  5402                           ; BSR set to: 0
  5403                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             
      +                          nmode = 'e';
  5404  000B4E  0E65               	movlw	101
  5405  000B50  6F7E               	movwf	efgtoa@nmode& (0+255),b
  5406  000B52                     l4848:
  5407                           
  5408                           ; BSR set to: 0
  5409                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  5410  000B52  C07C  F074         	movff	efgtoa@p,efgtoa@m
  5411  000B56  C07D  F075         	movff	efgtoa@p+1,efgtoa@m+1
  5412  000B5A                     
  5413                           ; BSR set to: 0
  5414                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  5415  000B5A  0E67               	movlw	103
  5416  000B5C  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5417  000B5E  A4D8               	btfss	status,2,c
  5418  000B60  EFB4  F005         	goto	u5741
  5419  000B64  EFB6  F005         	goto	u5740
  5420  000B68                     u5741:
  5421  000B68  EFC6  F005         	goto	l4856
  5422  000B6C                     u5740:
  5423  000B6C                     
  5424                           ; BSR set to: 0
  5425  000B6C  0E66               	movlw	102
  5426  000B6E  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  5427  000B70  A4D8               	btfss	status,2,c
  5428  000B72  EFBD  F005         	goto	u5751
  5429  000B76  EFBF  F005         	goto	u5750
  5430  000B7A                     u5751:
  5431  000B7A  EFC8  F005         	goto	l4858
  5432  000B7E                     u5750:
  5433  000B7E                     
  5434                           ; BSR set to: 0
  5435  000B7E  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5436  000B80  EFC6  F005         	goto	u5760
  5437  000B84  EFC4  F005         	goto	u5761
  5438  000B88                     u5761:
  5439  000B88  EFC8  F005         	goto	l4858
  5440  000B8C                     u5760:
  5441  000B8C                     l4856:
  5442                           
  5443                           ; BSR set to: 0
  5444                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  5445  000B8C  4B74               	infsnz	efgtoa@m& (0+255),f,b
  5446  000B8E  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  5447  000B90                     l4858:
  5448                           
  5449                           ; BSR set to: 0
  5450                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmod
      +                          e == 'f') {
  5451  000B90  0E66               	movlw	102
  5452  000B92  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  5453  000B94  A4D8               	btfss	status,2,c
  5454  000B96  EFCF  F005         	goto	u5771
  5455  000B9A  EFD1  F005         	goto	u5770
  5456  000B9E                     u5771:
  5457  000B9E  EFF1  F005         	goto	l4868
  5458  000BA2                     u5770:
  5459  000BA2                     
  5460                           ; BSR set to: 0
  5461                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (
      +                          e < 0) {
  5462  000BA2  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5463  000BA4  EFD8  F005         	goto	u5780
  5464  000BA8  EFD6  F005         	goto	u5781
  5465  000BAC                     u5781:
  5466  000BAC  EFE4  F005         	goto	l4864
  5467  000BB0                     u5780:
  5468  000BB0                     
  5469                           ; BSR set to: 0
  5470                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             
      +                          u = 1.0;
  5471  000BB0  0E00               	movlw	0
  5472  000BB2  6F94               	movwf	efgtoa@u& (0+255),b
  5473  000BB4  0E00               	movlw	0
  5474  000BB6  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  5475  000BB8  0E80               	movlw	128
  5476  000BBA  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  5477  000BBC  0E3F               	movlw	63
  5478  000BBE  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  5479                           
  5480                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             
      +                          e = 0;
  5481  000BC0  0E00               	movlw	0
  5482  000BC2  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  5483  000BC4  0E00               	movlw	0
  5484  000BC6  6F90               	movwf	efgtoa@e& (0+255),b
  5485  000BC8                     l4864:
  5486                           
  5487                           ; BSR set to: 0
  5488                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (
      +                          !(mode == 'g')) {
  5489  000BC8  0E67               	movlw	103
  5490  000BCA  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5491  000BCC  B4D8               	btfsc	status,2,c
  5492  000BCE  EFEB  F005         	goto	u5791
  5493  000BD2  EFED  F005         	goto	u5790
  5494  000BD6                     u5791:
  5495  000BD6  EFF1  F005         	goto	l4868
  5496  000BDA                     u5790:
  5497  000BDA                     
  5498                           ; BSR set to: 0
  5499                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             
      +                          m += e;
  5500  000BDA  5190               	movf	efgtoa@e& (0+255),w,b
  5501  000BDC  2774               	addwf	efgtoa@m& (0+255),f,b
  5502  000BDE  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  5503  000BE0  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5504  000BE2                     l4868:
  5505                           
  5506                           ; BSR set to: 0
  5507                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  5508  000BE2  0E00               	movlw	0
  5509  000BE4  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  5510  000BE6  0E00               	movlw	0
  5511  000BE8  6F8A               	movwf	efgtoa@i& (0+255),b
  5512  000BEA                     
  5513                           ; BSR set to: 0
  5514                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  5515  000BEA  C08C  F082         	movff	efgtoa@g,efgtoa@h
  5516  000BEE  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  5517  000BF2  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  5518  000BF6  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  5519  000BFA                     
  5520                           ; BSR set to: 0
  5521                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  5522  000BFA  C094  F060         	movff	efgtoa@u,efgtoa@ou
  5523  000BFE  C095  F061         	movff	efgtoa@u+1,efgtoa@ou+1
  5524  000C02  C096  F062         	movff	efgtoa@u+2,efgtoa@ou+2
  5525  000C06  C097  F063         	movff	efgtoa@u+3,efgtoa@ou+3
  5526                           
  5527                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  5528  000C0A  EF82  F006         	goto	l4882
  5529  000C0E                     l4874:
  5530                           
  5531                           ; BSR set to: 0
  5532                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = 
      +                          floorf(h/u);
  5533  000C0E  C082  F001         	movff	efgtoa@h,___fldiv@b
  5534  000C12  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  5535  000C16  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  5536  000C1A  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  5537  000C1E  C094  F005         	movff	efgtoa@u,___fldiv@a
  5538  000C22  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  5539  000C26  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  5540  000C2A  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  5541  000C2E  EC67  F015         	call	___fldiv	;wreg free
  5542  000C32  C001  F01A         	movff	?___fldiv,floorf@x
  5543  000C36  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  5544  000C3A  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  5545  000C3E  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  5546  000C42  ECA6  F018         	call	_floorf	;wreg free
  5547  000C46  C01A  F086         	movff	?_floorf,efgtoa@l
  5548  000C4A  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  5549  000C4E  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  5550  000C52  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  5551                           
  5552                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = 
      +                          (int)l;
  5553  000C56  C086  F001         	movff	efgtoa@l,___fltol@f1
  5554  000C5A  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  5555  000C5E  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  5556  000C62  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  5557  000C66  EC52  F01D         	call	___fltol	;wreg free
  5558  000C6A  C001  F078         	movff	?___fltol,efgtoa@d
  5559  000C6E  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  5560  000C72                     
  5561                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -=
      +                           l*u;
  5562  000C72  C082  F01A         	movff	efgtoa@h,___flsub@b
  5563  000C76  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  5564  000C7A  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  5565  000C7E  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  5566  000C82  C094  F005         	movff	efgtoa@u,___flmul@a
  5567  000C86  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  5568  000C8A  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  5569  000C8E  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  5570  000C92  C086  F001         	movff	efgtoa@l,___flmul@b
  5571  000C96  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  5572  000C9A  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  5573  000C9E  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  5574  000CA2  EC52  F013         	call	___flmul	;wreg free
  5575  000CA6  C001  F01E         	movff	?___flmul,___flsub@a
  5576  000CAA  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  5577  000CAE  C003  F020         	movff	?___flmul+2,___flsub@a+2
  5578  000CB2  C004  F021         	movff	?___flmul+3,___flsub@a+3
  5579  000CB6  EC9F  F023         	call	___flsub	;wreg free
  5580  000CBA  C01A  F082         	movff	?___flsub,efgtoa@h
  5581  000CBE  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  5582  000CC2  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  5583  000CC6  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  5584  000CCA                     
  5585                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = 
      +                          u/10.0;
  5586  000CCA  C094  F001         	movff	efgtoa@u,___fldiv@b
  5587  000CCE  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  5588  000CD2  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  5589  000CD6  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  5590  000CDA  0E00               	movlw	0
  5591  000CDC  6E05               	movwf	___fldiv@a^0,c
  5592  000CDE  0E00               	movlw	0
  5593  000CE0  6E06               	movwf	(___fldiv@a+1)^0,c
  5594  000CE2  0E20               	movlw	32
  5595  000CE4  6E07               	movwf	(___fldiv@a+2)^0,c
  5596  000CE6  0E41               	movlw	65
  5597  000CE8  6E08               	movwf	(___fldiv@a+3)^0,c
  5598  000CEA  EC67  F015         	call	___fldiv	;wreg free
  5599  000CEE  C001  F094         	movff	?___fldiv,efgtoa@u
  5600  000CF2  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  5601  000CF6  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  5602  000CFA  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  5603  000CFE                     
  5604                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  5605  000CFE  0100               	movlb	0	; () banked
  5606  000D00  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  5607  000D02  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  5608  000D04                     l4882:
  5609                           
  5610                           ; BSR set to: 0
  5611                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  5612  000D04  5174               	movf	efgtoa@m& (0+255),w,b
  5613  000D06  5D8A               	subwf	efgtoa@i& (0+255),w,b
  5614  000D08  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  5615  000D0A  0A80               	xorlw	128
  5616  000D0C  6E35               	movwf	??_efgtoa^0,c
  5617  000D0E  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  5618  000D10  0A80               	xorlw	128
  5619  000D12  5835               	subwfb	??_efgtoa^0,w,c
  5620  000D14  A0D8               	btfss	status,0,c
  5621  000D16  EF8F  F006         	goto	u5801
  5622  000D1A  EF91  F006         	goto	u5800
  5623  000D1E                     u5801:
  5624  000D1E  EF07  F006         	goto	l4874
  5625  000D22                     u5800:
  5626  000D22                     
  5627                           ; BSR set to: 0
  5628                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.
      +                          0;
  5629  000D22  C094  F001         	movff	efgtoa@u,___flmul@b
  5630  000D26  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  5631  000D2A  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  5632  000D2E  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  5633  000D32  0E00               	movlw	0
  5634  000D34  6E05               	movwf	___flmul@a^0,c
  5635  000D36  0E00               	movlw	0
  5636  000D38  6E06               	movwf	(___flmul@a+1)^0,c
  5637  000D3A  0EA0               	movlw	160
  5638  000D3C  6E07               	movwf	(___flmul@a+2)^0,c
  5639  000D3E  0E40               	movlw	64
  5640  000D40  6E08               	movwf	(___flmul@a+3)^0,c
  5641  000D42  EC52  F013         	call	___flmul	;wreg free
  5642  000D46  C001  F086         	movff	?___flmul,efgtoa@l
  5643  000D4A  C002  F087         	movff	?___flmul+1,efgtoa@l+1
  5644  000D4E  C003  F088         	movff	?___flmul+2,efgtoa@l+2
  5645  000D52  C004  F089         	movff	?___flmul+3,efgtoa@l+3
  5646  000D56                     
  5647                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < 
      +                          l) {
  5648  000D56  C082  F01A         	movff	efgtoa@h,___flge@ff1
  5649  000D5A  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  5650  000D5E  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  5651  000D62  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  5652  000D66  C086  F01E         	movff	efgtoa@l,___flge@ff2
  5653  000D6A  C087  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  5654  000D6E  C088  F020         	movff	efgtoa@l+2,___flge@ff2+2
  5655  000D72  C089  F021         	movff	efgtoa@l+3,___flge@ff2+3
  5656  000D76  ECD5  F01D         	call	___flge	;wreg free
  5657  000D7A  B0D8               	btfsc	status,0,c
  5658  000D7C  EFC2  F006         	goto	u5811
  5659  000D80  EFC4  F006         	goto	u5810
  5660  000D84                     u5811:
  5661  000D84  EFCF  F006         	goto	l4890
  5662  000D88                     u5810:
  5663  000D88                     
  5664                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 
      +                          0.0;
  5665  000D88  0E00               	movlw	0
  5666  000D8A  0100               	movlb	0	; () banked
  5667  000D8C  6F86               	movwf	efgtoa@l& (0+255),b
  5668  000D8E  0E00               	movlw	0
  5669  000D90  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  5670  000D92  0E00               	movlw	0
  5671  000D94  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  5672  000D96  0E00               	movlw	0
  5673  000D98  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  5674                           
  5675                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  5676  000D9A  EFF8  F006         	goto	l4896
  5677  000D9E                     l4890:
  5678                           
  5679                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if (
      +                          (h == l) && !(d % 2)) {
  5680  000D9E  C082  F001         	movff	efgtoa@h,___fleq@ff1
  5681  000DA2  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  5682  000DA6  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  5683  000DAA  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  5684  000DAE  C086  F005         	movff	efgtoa@l,___fleq@ff2
  5685  000DB2  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  5686  000DB6  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  5687  000DBA  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  5688  000DBE  EC2B  F021         	call	___fleq	;wreg free
  5689  000DC2  A0D8               	btfss	status,0,c
  5690  000DC4  EFE6  F006         	goto	u5821
  5691  000DC8  EFE8  F006         	goto	u5820
  5692  000DCC                     u5821:
  5693  000DCC  EFF8  F006         	goto	l4896
  5694  000DD0                     u5820:
  5695  000DD0  0100               	movlb	0	; () banked
  5696  000DD2  B178               	btfsc	efgtoa@d& (0+255),0,b
  5697  000DD4  EFEE  F006         	goto	u5831
  5698  000DD8  EFF0  F006         	goto	u5830
  5699  000DDC                     u5831:
  5700  000DDC  EFF8  F006         	goto	l4896
  5701  000DE0                     u5830:
  5702  000DE0                     
  5703                           ; BSR set to: 0
  5704                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             
      +                          l = 0.0;
  5705  000DE0  0E00               	movlw	0
  5706  000DE2  6F86               	movwf	efgtoa@l& (0+255),b
  5707  000DE4  0E00               	movlw	0
  5708  000DE6  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  5709  000DE8  0E00               	movlw	0
  5710  000DEA  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  5711  000DEC  0E00               	movlw	0
  5712  000DEE  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  5713  000DF0                     l4896:
  5714                           
  5715                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + 
      +                          l;
  5716  000DF0  C08C  F001         	movff	efgtoa@g,___fladd@b
  5717  000DF4  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  5718  000DF8  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  5719  000DFC  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  5720  000E00  C086  F005         	movff	efgtoa@l,___fladd@a
  5721  000E04  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  5722  000E08  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  5723  000E0C  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  5724  000E10  ECF2  F010         	call	___fladd	;wreg free
  5725  000E14  C001  F082         	movff	?___fladd,efgtoa@h
  5726  000E18  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  5727  000E1C  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  5728  000E20  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  5729  000E24                     
  5730                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  5731  000E24  C060  F094         	movff	efgtoa@ou,efgtoa@u
  5732  000E28  C061  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  5733  000E2C  C062  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  5734  000E30  C063  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  5735  000E34                     
  5736                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  5737  000E34  0E65               	movlw	101
  5738  000E36  0100               	movlb	0	; () banked
  5739  000E38  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  5740  000E3A  B4D8               	btfsc	status,2,c
  5741  000E3C  EF22  F007         	goto	u5841
  5742  000E40  EF24  F007         	goto	u5840
  5743  000E44                     u5841:
  5744  000E44  EF2A  F007         	goto	l4904
  5745  000E48                     u5840:
  5746  000E48                     
  5747                           ; BSR set to: 0
  5748  000E48  C090  F076         	movff	efgtoa@e,efgtoa@ne
  5749  000E4C  C091  F077         	movff	efgtoa@e+1,efgtoa@ne+1
  5750  000E50  EF2E  F007         	goto	l1314
  5751  000E54                     l4904:
  5752                           
  5753                           ; BSR set to: 0
  5754  000E54  0E00               	movlw	0
  5755  000E56  6F77               	movwf	(efgtoa@ne+1)& (0+255),b
  5756  000E58  0E00               	movlw	0
  5757  000E5A  6F76               	movwf	efgtoa@ne& (0+255),b
  5758  000E5C                     l1314:
  5759                           
  5760                           ; BSR set to: 0
  5761                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  5762  000E5C  0E00               	movlw	0
  5763  000E5E  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  5764  000E60  0E00               	movlw	0
  5765  000E62  6F72               	movwf	efgtoa@pp& (0+255),b
  5766                           
  5767                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  5768  000E64  0E00               	movlw	0
  5769  000E66  6F71               	movwf	(efgtoa@t+1)& (0+255),b
  5770  000E68  0E00               	movlw	0
  5771  000E6A  6F70               	movwf	efgtoa@t& (0+255),b
  5772                           
  5773                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  5774  000E6C  0E00               	movlw	0
  5775  000E6E  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  5776  000E70  0E00               	movlw	0
  5777  000E72  6F8A               	movwf	efgtoa@i& (0+255),b
  5778                           
  5779                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5780  000E74  EF29  F008         	goto	l4954
  5781  000E78                     l4906:
  5782                           
  5783                           ; BSR set to: 0
  5784                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = 
      +                          floorf(h/u);
  5785  000E78  C082  F001         	movff	efgtoa@h,___fldiv@b
  5786  000E7C  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  5787  000E80  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  5788  000E84  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  5789  000E88  C094  F005         	movff	efgtoa@u,___fldiv@a
  5790  000E8C  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  5791  000E90  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  5792  000E94  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  5793  000E98  EC67  F015         	call	___fldiv	;wreg free
  5794  000E9C  C001  F01A         	movff	?___fldiv,floorf@x
  5795  000EA0  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  5796  000EA4  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  5797  000EA8  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  5798  000EAC  ECA6  F018         	call	_floorf	;wreg free
  5799  000EB0  C01A  F086         	movff	?_floorf,efgtoa@l
  5800  000EB4  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  5801  000EB8  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  5802  000EBC  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  5803                           
  5804                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = 
      +                          (int)l;
  5805  000EC0  C086  F001         	movff	efgtoa@l,___fltol@f1
  5806  000EC4  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  5807  000EC8  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  5808  000ECC  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  5809  000ED0  EC52  F01D         	call	___fltol	;wreg free
  5810  000ED4  C001  F078         	movff	?___fltol,efgtoa@d
  5811  000ED8  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  5812  000EDC                     
  5813                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5814  000EDC  0100               	movlb	0	; () banked
  5815  000EDE  B9ED               	btfsc	_flags& (0+255),4,b
  5816  000EE0  EF74  F007         	goto	u5851
  5817  000EE4  EF76  F007         	goto	u5850
  5818  000EE8                     u5851:
  5819  000EE8  EF93  F007         	goto	l4918
  5820  000EEC                     u5850:
  5821  000EEC                     
  5822                           ; BSR set to: 0
  5823  000EEC  5178               	movf	efgtoa@d& (0+255),w,b
  5824  000EEE  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5825  000EF0  A4D8               	btfss	status,2,c
  5826  000EF2  EF7D  F007         	goto	u5861
  5827  000EF6  EF7F  F007         	goto	u5860
  5828  000EFA                     u5861:
  5829  000EFA  EF93  F007         	goto	l4918
  5830  000EFE                     u5860:
  5831  000EFE                     
  5832                           ; BSR set to: 0
  5833  000EFE  0E67               	movlw	103
  5834  000F00  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5835  000F02  A4D8               	btfss	status,2,c
  5836  000F04  EF86  F007         	goto	u5871
  5837  000F08  EF88  F007         	goto	u5870
  5838  000F0C                     u5871:
  5839  000F0C  EF93  F007         	goto	l4918
  5840  000F10                     u5870:
  5841  000F10                     
  5842                           ; BSR set to: 0
  5843  000F10  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5844  000F12  EF8F  F007         	goto	u5880
  5845  000F16  EF8D  F007         	goto	u5881
  5846  000F1A                     u5881:
  5847  000F1A  EF93  F007         	goto	l4918
  5848  000F1E                     u5880:
  5849  000F1E                     
  5850                           ; BSR set to: 0
  5851                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             
      +                          ++t;
  5852  000F1E  4B70               	infsnz	efgtoa@t& (0+255),f,b
  5853  000F20  2B71               	incf	(efgtoa@t+1)& (0+255),f,b
  5854                           
  5855                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } el
      +                          se {
  5856  000F22  EFDD  F007         	goto	l4946
  5857  000F26                     l4918:
  5858                           
  5859                           ; BSR set to: 0
  5860                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             
      +                          if (!pp && (ne < 0)) {
  5861  000F26  5172               	movf	efgtoa@pp& (0+255),w,b
  5862  000F28  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5863  000F2A  A4D8               	btfss	status,2,c
  5864  000F2C  EF9A  F007         	goto	u5891
  5865  000F30  EF9C  F007         	goto	u5890
  5866  000F34                     u5891:
  5867  000F34  EFC6  F007         	goto	l4938
  5868  000F38                     u5890:
  5869  000F38                     
  5870                           ; BSR set to: 0
  5871  000F38  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5872  000F3A  EFA3  F007         	goto	u5900
  5873  000F3E  EFA1  F007         	goto	u5901
  5874  000F42                     u5901:
  5875  000F42  EFC6  F007         	goto	l4938
  5876  000F46                     u5900:
  5877  000F46                     
  5878                           ; BSR set to: 0
  5879                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:             
      +                              dbuf[n++] = '.';
  5880  000F46  0EAB               	movlw	low _dbuf
  5881  000F48  2592               	addwf	efgtoa@n& (0+255),w,b
  5882  000F4A  6ED9               	movwf	fsr2l,c
  5883  000F4C  0E01               	movlw	high _dbuf
  5884  000F4E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5885  000F50  6EDA               	movwf	fsr2h,c
  5886  000F52  0E2E               	movlw	46
  5887  000F54  6EDF               	movwf	indf2,c
  5888  000F56                     
  5889                           ; BSR set to: 0
  5890  000F56  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5891  000F58  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5892  000F5A                     
  5893                           ; BSR set to: 0
  5894                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:             
      +                              --w;
  5895  000F5A  077F               	decf	efgtoa@w& (0+255),f,b
  5896  000F5C  A0D8               	btfss	status,0,c
  5897  000F5E  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  5898  000F60                     
  5899                           ; BSR set to: 0
  5900                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:             
      +                              pp = 1;
  5901  000F60  0E00               	movlw	0
  5902  000F62  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  5903  000F64  0E01               	movlw	1
  5904  000F66  6F72               	movwf	efgtoa@pp& (0+255),b
  5905  000F68  EFC6  F007         	goto	l4938
  5906  000F6C                     l4930:
  5907                           
  5908                           ; BSR set to: 0
  5909                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:             
      +                              dbuf[n++] = '0';
  5910  000F6C  0EAB               	movlw	low _dbuf
  5911  000F6E  2592               	addwf	efgtoa@n& (0+255),w,b
  5912  000F70  6ED9               	movwf	fsr2l,c
  5913  000F72  0E01               	movlw	high _dbuf
  5914  000F74  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5915  000F76  6EDA               	movwf	fsr2h,c
  5916  000F78  0E30               	movlw	48
  5917  000F7A  6EDF               	movwf	indf2,c
  5918  000F7C                     
  5919                           ; BSR set to: 0
  5920  000F7C  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5921  000F7E  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5922  000F80                     
  5923                           ; BSR set to: 0
  5924                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:             
      +                              --w;
  5925  000F80  077F               	decf	efgtoa@w& (0+255),f,b
  5926  000F82  A0D8               	btfss	status,0,c
  5927  000F84  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  5928  000F86                     
  5929                           ; BSR set to: 0
  5930                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:             
      +                              --t;
  5931  000F86  0770               	decf	efgtoa@t& (0+255),f,b
  5932  000F88  A0D8               	btfss	status,0,c
  5933  000F8A  0771               	decf	(efgtoa@t+1)& (0+255),f,b
  5934  000F8C                     l4938:
  5935                           
  5936                           ; BSR set to: 0
  5937                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             
      +                          while (t) {
  5938  000F8C  5170               	movf	efgtoa@t& (0+255),w,b
  5939  000F8E  1171               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5940  000F90  A4D8               	btfss	status,2,c
  5941  000F92  EFCD  F007         	goto	u5911
  5942  000F96  EFCF  F007         	goto	u5910
  5943  000F9A                     u5911:
  5944  000F9A  EFB6  F007         	goto	l4930
  5945  000F9E                     u5910:
  5946  000F9E                     
  5947                           ; BSR set to: 0
  5948                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             
      +                          dbuf[n++] = '0' + d;
  5949  000F9E  0EAB               	movlw	low _dbuf
  5950  000FA0  2592               	addwf	efgtoa@n& (0+255),w,b
  5951  000FA2  6ED9               	movwf	fsr2l,c
  5952  000FA4  0E01               	movlw	high _dbuf
  5953  000FA6  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5954  000FA8  6EDA               	movwf	fsr2h,c
  5955  000FAA  5178               	movf	efgtoa@d& (0+255),w,b
  5956  000FAC  0F30               	addlw	48
  5957  000FAE  6EDF               	movwf	indf2,c
  5958  000FB0                     
  5959                           ; BSR set to: 0
  5960  000FB0  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5961  000FB2  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5962  000FB4                     
  5963                           ; BSR set to: 0
  5964                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             
      +                          --w;
  5965  000FB4  077F               	decf	efgtoa@w& (0+255),f,b
  5966  000FB6  A0D8               	btfss	status,0,c
  5967  000FB8  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  5968  000FBA                     l4946:
  5969                           
  5970                           ; BSR set to: 0
  5971                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -=
      +                           l*u;
  5972  000FBA  C082  F01A         	movff	efgtoa@h,___flsub@b
  5973  000FBE  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  5974  000FC2  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  5975  000FC6  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  5976  000FCA  C094  F005         	movff	efgtoa@u,___flmul@a
  5977  000FCE  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  5978  000FD2  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  5979  000FD6  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  5980  000FDA  C086  F001         	movff	efgtoa@l,___flmul@b
  5981  000FDE  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  5982  000FE2  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  5983  000FE6  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  5984  000FEA  EC52  F013         	call	___flmul	;wreg free
  5985  000FEE  C001  F01E         	movff	?___flmul,___flsub@a
  5986  000FF2  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  5987  000FF6  C003  F020         	movff	?___flmul+2,___flsub@a+2
  5988  000FFA  C004  F021         	movff	?___flmul+3,___flsub@a+3
  5989  000FFE  EC9F  F023         	call	___flsub	;wreg free
  5990  001002  C01A  F082         	movff	?___flsub,efgtoa@h
  5991  001006  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  5992  00100A  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  5993  00100E  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  5994  001012                     
  5995                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = 
      +                          u/10.0;
  5996  001012  C094  F001         	movff	efgtoa@u,___fldiv@b
  5997  001016  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  5998  00101A  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  5999  00101E  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  6000  001022  0E00               	movlw	0
  6001  001024  6E05               	movwf	___fldiv@a^0,c
  6002  001026  0E00               	movlw	0
  6003  001028  6E06               	movwf	(___fldiv@a+1)^0,c
  6004  00102A  0E20               	movlw	32
  6005  00102C  6E07               	movwf	(___fldiv@a+2)^0,c
  6006  00102E  0E41               	movlw	65
  6007  001030  6E08               	movwf	(___fldiv@a+3)^0,c
  6008  001032  EC67  F015         	call	___fldiv	;wreg free
  6009  001036  C001  F094         	movff	?___fldiv,efgtoa@u
  6010  00103A  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  6011  00103E  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  6012  001042  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  6013  001046                     
  6014                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne
      +                          ;
  6015  001046  0100               	movlb	0	; () banked
  6016  001048  0776               	decf	efgtoa@ne& (0+255),f,b
  6017  00104A  A0D8               	btfss	status,0,c
  6018  00104C  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
  6019  00104E                     
  6020                           ; BSR set to: 0
  6021                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  6022  00104E  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  6023  001050  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  6024  001052                     l4954:
  6025                           
  6026                           ; BSR set to: 0
  6027                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  6028  001052  5174               	movf	efgtoa@m& (0+255),w,b
  6029  001054  5D8A               	subwf	efgtoa@i& (0+255),w,b
  6030  001056  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  6031  001058  0A80               	xorlw	128
  6032  00105A  6E35               	movwf	??_efgtoa^0,c
  6033  00105C  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  6034  00105E  0A80               	xorlw	128
  6035  001060  5835               	subwfb	??_efgtoa^0,w,c
  6036  001062  B0D8               	btfsc	status,0,c
  6037  001064  EF36  F008         	goto	u5921
  6038  001068  EF38  F008         	goto	u5920
  6039  00106C                     u5921:
  6040  00106C  EF46  F008         	goto	l4958
  6041  001070                     u5920:
  6042  001070                     
  6043                           ; BSR set to: 0
  6044  001070  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  6045  001072  EF44  F008         	goto	u5931
  6046  001076  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  6047  001078  E109               	bnz	u5930
  6048  00107A  0E4B               	movlw	75
  6049  00107C  5D92               	subwf	efgtoa@n& (0+255),w,b
  6050  00107E  A0D8               	btfss	status,0,c
  6051  001080  EF44  F008         	goto	u5931
  6052  001084  EF46  F008         	goto	u5930
  6053  001088                     u5931:
  6054  001088  EF3C  F007         	goto	l4906
  6055  00108C                     u5930:
  6056  00108C                     l4958:
  6057                           
  6058                           ; BSR set to: 0
  6059                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp 
      +                          && (flags & (1 << 4))) {
  6060  00108C  5172               	movf	efgtoa@pp& (0+255),w,b
  6061  00108E  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6062  001090  A4D8               	btfss	status,2,c
  6063  001092  EF4D  F008         	goto	u5941
  6064  001096  EF4F  F008         	goto	u5940
  6065  00109A                     u5941:
  6066  00109A  EF60  F008         	goto	l4966
  6067  00109E                     u5940:
  6068  00109E                     
  6069                           ; BSR set to: 0
  6070  00109E  A9ED               	btfss	_flags& (0+255),4,b
  6071  0010A0  EF54  F008         	goto	u5951
  6072  0010A4  EF56  F008         	goto	u5950
  6073  0010A8                     u5951:
  6074  0010A8  EF60  F008         	goto	l4966
  6075  0010AC                     u5950:
  6076  0010AC                     
  6077                           ; BSR set to: 0
  6078                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf
      +                          [n++] = '.';
  6079  0010AC  0EAB               	movlw	low _dbuf
  6080  0010AE  2592               	addwf	efgtoa@n& (0+255),w,b
  6081  0010B0  6ED9               	movwf	fsr2l,c
  6082  0010B2  0E01               	movlw	high _dbuf
  6083  0010B4  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6084  0010B6  6EDA               	movwf	fsr2h,c
  6085  0010B8  0E2E               	movlw	46
  6086  0010BA  6EDF               	movwf	indf2,c
  6087  0010BC                     
  6088                           ; BSR set to: 0
  6089  0010BC  4B92               	infsnz	efgtoa@n& (0+255),f,b
  6090  0010BE  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  6091  0010C0                     l4966:
  6092                           
  6093                           ; BSR set to: 0
  6094                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] 
      +                          = '\0';
  6095  0010C0  0EAB               	movlw	low _dbuf
  6096  0010C2  2592               	addwf	efgtoa@n& (0+255),w,b
  6097  0010C4  6ED9               	movwf	fsr2l,c
  6098  0010C6  0E01               	movlw	high _dbuf
  6099  0010C8  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6100  0010CA  6EDA               	movwf	fsr2h,c
  6101  0010CC  0E00               	movlw	0
  6102  0010CE  6EDF               	movwf	indf2,c
  6103  0010D0                     
  6104                           ; BSR set to: 0
  6105                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmod
      +                          e == 'e') {
  6106  0010D0  0E65               	movlw	101
  6107  0010D2  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  6108  0010D4  A4D8               	btfss	status,2,c
  6109  0010D6  EF6F  F008         	goto	u5961
  6110  0010DA  EF71  F008         	goto	u5960
  6111  0010DE                     u5961:
  6112  0010DE  EF1F  F004         	goto	l4778
  6113  0010E2                     u5960:
  6114  0010E2                     
  6115                           ; BSR set to: 0
  6116                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = 
      +                          sizeof(dbuf) - 1;
  6117  0010E2  0E00               	movlw	0
  6118  0010E4  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  6119  0010E6  0E4F               	movlw	79
  6120  0010E8  6F8A               	movwf	efgtoa@i& (0+255),b
  6121  0010EA                     
  6122                           ; BSR set to: 0
  6123                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf
      +                          [i] = '\0';
  6124  0010EA  0EAB               	movlw	low _dbuf
  6125  0010EC  258A               	addwf	efgtoa@i& (0+255),w,b
  6126  0010EE  6ED9               	movwf	fsr2l,c
  6127  0010F0  0E01               	movlw	high _dbuf
  6128  0010F2  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6129  0010F4  6EDA               	movwf	fsr2h,c
  6130  0010F6  0E00               	movlw	0
  6131  0010F8  6EDF               	movwf	indf2,c
  6132  0010FA                     
  6133                           ; BSR set to: 0
  6134                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign
      +                           = 0;
  6135  0010FA  0E00               	movlw	0
  6136  0010FC  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  6137  0010FE  0E00               	movlw	0
  6138  001100  6F7A               	movwf	efgtoa@sign& (0+255),b
  6139  001102                     
  6140                           ; BSR set to: 0
  6141                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (
      +                          e < 0) {
  6142  001102  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6143  001104  EF88  F008         	goto	u5970
  6144  001108  EF86  F008         	goto	u5971
  6145  00110C                     u5971:
  6146  00110C  EF90  F008         	goto	l4982
  6147  001110                     u5970:
  6148  001110                     
  6149                           ; BSR set to: 0
  6150                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             
      +                          sign = 1;
  6151  001110  0E00               	movlw	0
  6152  001112  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  6153  001114  0E01               	movlw	1
  6154  001116  6F7A               	movwf	efgtoa@sign& (0+255),b
  6155  001118                     
  6156                           ; BSR set to: 0
  6157                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             
      +                          e = -e;
  6158  001118  6D90               	negf	efgtoa@e& (0+255),b
  6159  00111A  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  6160  00111C  B0D8               	btfsc	status,0,c
  6161  00111E  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  6162  001120                     l4982:
  6163                           
  6164                           ; BSR set to: 0
  6165                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 
      +                          2;
  6166  001120  0E00               	movlw	0
  6167  001122  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  6168  001124  0E02               	movlw	2
  6169  001126  6F7C               	movwf	efgtoa@p& (0+255),b
  6170                           
  6171                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  6172  001128  EFC1  F008         	goto	l4994
  6173  00112C                     l4984:
  6174                           
  6175                           ; BSR set to: 0
  6176                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             
      +                          --i;
  6177  00112C  078A               	decf	efgtoa@i& (0+255),f,b
  6178  00112E  A0D8               	btfss	status,0,c
  6179  001130  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  6180  001132                     
  6181                           ; BSR set to: 0
  6182                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             
      +                          dbuf[i] = '0' + (e % 10);
  6183  001132  0EAB               	movlw	low _dbuf
  6184  001134  258A               	addwf	efgtoa@i& (0+255),w,b
  6185  001136  6ED9               	movwf	fsr2l,c
  6186  001138  0E01               	movlw	high _dbuf
  6187  00113A  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6188  00113C  6EDA               	movwf	fsr2h,c
  6189  00113E  C090  F001         	movff	efgtoa@e,___awmod@dividend
  6190  001142  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  6191  001146  0E00               	movlw	0
  6192  001148  6E04               	movwf	(___awmod@divisor+1)^0,c
  6193  00114A  0E0A               	movlw	10
  6194  00114C  6E03               	movwf	___awmod@divisor^0,c
  6195  00114E  ECD3  F020         	call	___awmod	;wreg free
  6196  001152  5001               	movf	?___awmod^0,w,c
  6197  001154  0F30               	addlw	48
  6198  001156  6EDF               	movwf	indf2,c
  6199  001158                     
  6200                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             
      +                          e = e / 10;
  6201  001158  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  6202  00115C  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  6203  001160  0E00               	movlw	0
  6204  001162  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6205  001164  0E0A               	movlw	10
  6206  001166  6E03               	movwf	___awdiv@divisor^0,c
  6207  001168  EC71  F020         	call	___awdiv	;wreg free
  6208  00116C  C001  F090         	movff	?___awdiv,efgtoa@e
  6209  001170  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  6210  001174                     
  6211                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             
      +                          --p;
  6212  001174  0100               	movlb	0	; () banked
  6213  001176  077C               	decf	efgtoa@p& (0+255),f,b
  6214  001178  A0D8               	btfss	status,0,c
  6215  00117A  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  6216  00117C                     
  6217                           ; BSR set to: 0
  6218                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             
      +                          --w;
  6219  00117C  077F               	decf	efgtoa@w& (0+255),f,b
  6220  00117E  A0D8               	btfss	status,0,c
  6221  001180  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  6222  001182                     l4994:
  6223                           
  6224                           ; BSR set to: 0
  6225                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  6226  001182  5190               	movf	efgtoa@e& (0+255),w,b
  6227  001184  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  6228  001186  A4D8               	btfss	status,2,c
  6229  001188  EFC8  F008         	goto	u5981
  6230  00118C  EFCA  F008         	goto	u5980
  6231  001190                     u5981:
  6232  001190  EF96  F008         	goto	l4984
  6233  001194                     u5980:
  6234  001194                     
  6235                           ; BSR set to: 0
  6236  001194  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  6237  001196  EFD7  F008         	goto	u5990
  6238  00119A  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  6239  00119C  E106               	bnz	u5991
  6240  00119E  057C               	decf	efgtoa@p& (0+255),w,b
  6241  0011A0  B0D8               	btfsc	status,0,c
  6242  0011A2  EFD5  F008         	goto	u5991
  6243  0011A6  EFD7  F008         	goto	u5990
  6244  0011AA                     u5991:
  6245  0011AA  EF96  F008         	goto	l4984
  6246  0011AE                     u5990:
  6247  0011AE                     
  6248                           ; BSR set to: 0
  6249                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  6250  0011AE  078A               	decf	efgtoa@i& (0+255),f,b
  6251  0011B0  A0D8               	btfss	status,0,c
  6252  0011B2  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  6253  0011B4                     
  6254                           ; BSR set to: 0
  6255                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [i] = sign ? '-' : '+';
  6256  0011B4  517A               	movf	efgtoa@sign& (0+255),w,b
  6257  0011B6  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6258  0011B8  A4D8               	btfss	status,2,c
  6259  0011BA  EFE1  F008         	goto	u6001
  6260  0011BE  EFE3  F008         	goto	u6000
  6261  0011C2                     u6001:
  6262  0011C2  EFE9  F008         	goto	l5004
  6263  0011C6                     u6000:
  6264  0011C6                     
  6265                           ; BSR set to: 0
  6266  0011C6  0E00               	movlw	0
  6267  0011C8  6F6B               	movwf	(_efgtoa$2878+1)& (0+255),b
  6268  0011CA  0E2B               	movlw	43
  6269  0011CC  6F6A               	movwf	_efgtoa$2878& (0+255),b
  6270  0011CE  EFED  F008         	goto	l5006
  6271  0011D2                     l5004:
  6272                           
  6273                           ; BSR set to: 0
  6274  0011D2  0E00               	movlw	0
  6275  0011D4  6F6B               	movwf	(_efgtoa$2878+1)& (0+255),b
  6276  0011D6  0E2D               	movlw	45
  6277  0011D8  6F6A               	movwf	_efgtoa$2878& (0+255),b
  6278  0011DA                     l5006:
  6279                           
  6280                           ; BSR set to: 0
  6281  0011DA  0EAB               	movlw	low _dbuf
  6282  0011DC  258A               	addwf	efgtoa@i& (0+255),w,b
  6283  0011DE  6ED9               	movwf	fsr2l,c
  6284  0011E0  0E01               	movlw	high _dbuf
  6285  0011E2  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6286  0011E4  6EDA               	movwf	fsr2h,c
  6287  0011E6  C06A  FFDF         	movff	_efgtoa$2878,indf2
  6288  0011EA                     
  6289                           ; BSR set to: 0
  6290                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  6291  0011EA  077F               	decf	efgtoa@w& (0+255),f,b
  6292  0011EC  A0D8               	btfss	status,0,c
  6293  0011EE  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  6294  0011F0                     
  6295                           ; BSR set to: 0
  6296                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  6297  0011F0  078A               	decf	efgtoa@i& (0+255),f,b
  6298  0011F2  A0D8               	btfss	status,0,c
  6299  0011F4  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  6300  0011F6                     
  6301                           ; BSR set to: 0
  6302  0011F6  0EBF               	movlw	191
  6303  0011F8  6E35               	movwf	??_efgtoa^0,c
  6304  0011FA  0EFF               	movlw	255
  6305  0011FC  6E36               	movwf	(??_efgtoa+1)^0,c
  6306  0011FE  5034               	movf	efgtoa@c^0,w,c
  6307  001200  6E37               	movwf	(??_efgtoa+2)^0,c
  6308  001202  6A38               	clrf	(??_efgtoa+3)^0,c
  6309  001204  5035               	movf	??_efgtoa^0,w,c
  6310  001206  2637               	addwf	(??_efgtoa+2)^0,f,c
  6311  001208  5036               	movf	(??_efgtoa+1)^0,w,c
  6312  00120A  2238               	addwfc	(??_efgtoa+3)^0,f,c
  6313  00120C  5038               	movf	(??_efgtoa+3)^0,w,c
  6314  00120E  E10A               	bnz	u6010
  6315  001210  0E1A               	movlw	26
  6316  001212  5C37               	subwf	(??_efgtoa+2)^0,w,c
  6317  001214  A0D8               	btfss	status,0,c
  6318  001216  EF0F  F009         	goto	u6011
  6319  00121A  EF12  F009         	goto	u6010
  6320  00121E                     u6011:
  6321  00121E  0E01               	movlw	1
  6322  001220  EF13  F009         	goto	u6020
  6323  001224                     u6010:
  6324  001224  0E00               	movlw	0
  6325  001226                     u6020:
  6326  001226  6F6E               	movwf	_efgtoa$2880& (0+255),b
  6327  001228  6B6F               	clrf	(_efgtoa$2880+1)& (0+255),b
  6328  00122A                     
  6329                           ; BSR set to: 0
  6330  00122A  516E               	movf	_efgtoa$2880& (0+255),w,b
  6331  00122C  116F               	iorwf	(_efgtoa$2880+1)& (0+255),w,b
  6332  00122E  A4D8               	btfss	status,2,c
  6333  001230  EF1C  F009         	goto	u6031
  6334  001234  EF1E  F009         	goto	u6030
  6335  001238                     u6031:
  6336  001238  EF24  F009         	goto	l5020
  6337  00123C                     u6030:
  6338  00123C                     
  6339                           ; BSR set to: 0
  6340  00123C  0E00               	movlw	0
  6341  00123E  6F6D               	movwf	(_efgtoa$2879+1)& (0+255),b
  6342  001240  0E65               	movlw	101
  6343  001242  6F6C               	movwf	_efgtoa$2879& (0+255),b
  6344  001244  EF28  F009         	goto	l5022
  6345  001248                     l5020:
  6346                           
  6347                           ; BSR set to: 0
  6348  001248  0E00               	movlw	0
  6349  00124A  6F6D               	movwf	(_efgtoa$2879+1)& (0+255),b
  6350  00124C  0E45               	movlw	69
  6351  00124E  6F6C               	movwf	_efgtoa$2879& (0+255),b
  6352  001250                     l5022:
  6353                           
  6354                           ; BSR set to: 0
  6355  001250  0EAB               	movlw	low _dbuf
  6356  001252  258A               	addwf	efgtoa@i& (0+255),w,b
  6357  001254  6ED9               	movwf	fsr2l,c
  6358  001256  0E01               	movlw	high _dbuf
  6359  001258  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6360  00125A  6EDA               	movwf	fsr2h,c
  6361  00125C  C06C  FFDF         	movff	_efgtoa$2879,indf2
  6362  001260                     
  6363                           ; BSR set to: 0
  6364                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  6365  001260  077F               	decf	efgtoa@w& (0+255),f,b
  6366  001262  A0D8               	btfss	status,0,c
  6367  001264  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  6368  001266                     
  6369                           ; BSR set to: 0
  6370                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  6371  001266  0EAB               	movlw	low _dbuf
  6372  001268  2592               	addwf	efgtoa@n& (0+255),w,b
  6373  00126A  6E01               	movwf	strcpy@dest^0,c
  6374  00126C  0E01               	movlw	high _dbuf
  6375  00126E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6376  001270  6E02               	movwf	(strcpy@dest+1)^0,c
  6377  001272  0EAB               	movlw	low _dbuf
  6378  001274  258A               	addwf	efgtoa@i& (0+255),w,b
  6379  001276  6E03               	movwf	strcpy@src^0,c
  6380  001278  0E01               	movlw	high _dbuf
  6381  00127A  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6382  00127C  6E04               	movwf	(strcpy@src+1)^0,c
  6383  00127E  ECCE  F022         	call	_strcpy	;wreg free
  6384  001282  EF1F  F004         	goto	l4778
  6385  001286                     l1270:
  6386  001286  0012               	return		;funcret
  6387  001288                     __end_of_efgtoa:
  6388                           	callstack 0
  6389                           
  6390 ;; *************** function _tolower *****************
  6391 ;; Defined at:
  6392 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\tolower.c"
  6393 ;; Parameters:    Size  Location     Type
  6394 ;;  c               2    6[COMRAM] int 
  6395 ;; Auto vars:     Size  Location     Type
  6396 ;;		None
  6397 ;; Return value:  Size  Location     Type
  6398 ;;                  2    6[COMRAM] int 
  6399 ;; Registers used:
  6400 ;;		wreg, status,2, status,0
  6401 ;; Tracked objects:
  6402 ;;		On entry : 0/0
  6403 ;;		On exit  : 0/0
  6404 ;;		Unchanged: 0/0
  6405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6406 ;;      Params:         2       0       0       0       0       0       0
  6407 ;;      Locals:         2       0       0       0       0       0       0
  6408 ;;      Temps:          4       0       0       0       0       0       0
  6409 ;;      Totals:         8       0       0       0       0       0       0
  6410 ;;Total ram usage:        8 bytes
  6411 ;; Hardware stack levels used:    1
  6412 ;; Hardware stack levels required when called:    2
  6413 ;; This function calls:
  6414 ;;		_isupper
  6415 ;; This function is called by:
  6416 ;;		_efgtoa
  6417 ;;		_vfpfcnvrt
  6418 ;; This function uses a non-reentrant model
  6419 ;;
  6420                           
  6421                           	psect	text12
  6422  00453C                     __ptext12:
  6423                           	callstack 0
  6424  00453C                     _tolower:
  6425                           	callstack 23
  6426  00453C  0EBF               	movlw	191
  6427  00453E  6E09               	movwf	??_tolower^0,c
  6428  004540  0EFF               	movlw	255
  6429  004542  6E0A               	movwf	(??_tolower+1)^0,c
  6430  004544  C007  F00B         	movff	tolower@c,??_tolower+2
  6431  004548  C008  F00C         	movff	tolower@c+1,??_tolower+3
  6432  00454C  5009               	movf	??_tolower^0,w,c
  6433  00454E  260B               	addwf	(??_tolower+2)^0,f,c
  6434  004550  500A               	movf	(??_tolower+1)^0,w,c
  6435  004552  220C               	addwfc	(??_tolower+3)^0,f,c
  6436  004554  500C               	movf	(??_tolower+3)^0,w,c
  6437  004556  E10A               	bnz	u5200
  6438  004558  0E1A               	movlw	26
  6439  00455A  5C0B               	subwf	(??_tolower+2)^0,w,c
  6440  00455C  A0D8               	btfss	status,0,c
  6441  00455E  EFB3  F022         	goto	u5201
  6442  004562  EFB6  F022         	goto	u5200
  6443  004566                     u5201:
  6444  004566  0E01               	movlw	1
  6445  004568  EFB7  F022         	goto	u5210
  6446  00456C                     u5200:
  6447  00456C  0E00               	movlw	0
  6448  00456E                     u5210:
  6449  00456E  6E0D               	movwf	_tolower$3031^0,c
  6450  004570  6A0E               	clrf	(_tolower$3031+1)^0,c
  6451  004572  500D               	movf	_tolower$3031^0,w,c
  6452  004574  100E               	iorwf	(_tolower$3031+1)^0,w,c
  6453  004576  B4D8               	btfsc	status,2,c
  6454  004578  EFC0  F022         	goto	u5221
  6455  00457C  EFC2  F022         	goto	u5220
  6456  004580                     u5221:
  6457  004580  EFC9  F022         	goto	l1518
  6458  004584                     u5220:
  6459  004584  0E20               	movlw	32
  6460  004586  1007               	iorwf	tolower@c^0,w,c
  6461  004588  6E07               	movwf	?_tolower^0,c
  6462  00458A  5008               	movf	(tolower@c+1)^0,w,c
  6463  00458C  6E08               	movwf	(?_tolower+1)^0,c
  6464  00458E  EFCD  F022         	goto	l1523
  6465  004592                     l1518:
  6466  004592  C007  F007         	movff	tolower@c,?_tolower
  6467  004596  C008  F008         	movff	tolower@c+1,?_tolower+1
  6468  00459A                     l1523:
  6469  00459A  0012               	return		;funcret
  6470  00459C                     __end_of_tolower:
  6471                           	callstack 0
  6472                           
  6473 ;; *************** function _isupper *****************
  6474 ;; Defined at:
  6475 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  6476 ;; Parameters:    Size  Location     Type
  6477 ;;  c               2    0[COMRAM] int 
  6478 ;; Auto vars:     Size  Location     Type
  6479 ;;		None
  6480 ;; Return value:  Size  Location     Type
  6481 ;;                  2    0[COMRAM] int 
  6482 ;; Registers used:
  6483 ;;		wreg, status,2, status,0
  6484 ;; Tracked objects:
  6485 ;;		On entry : 0/0
  6486 ;;		On exit  : 0/0
  6487 ;;		Unchanged: 0/0
  6488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6489 ;;      Params:         2       0       0       0       0       0       0
  6490 ;;      Locals:         0       0       0       0       0       0       0
  6491 ;;      Temps:          4       0       0       0       0       0       0
  6492 ;;      Totals:         6       0       0       0       0       0       0
  6493 ;;Total ram usage:        6 bytes
  6494 ;; Hardware stack levels used:    1
  6495 ;; Hardware stack levels required when called:    1
  6496 ;; This function calls:
  6497 ;;		Nothing
  6498 ;; This function is called by:
  6499 ;;		_efgtoa
  6500 ;;		_vfpfcnvrt
  6501 ;;		_tolower
  6502 ;; This function uses a non-reentrant model
  6503 ;;
  6504                           
  6505                           	psect	text13
  6506  004808                     __ptext13:
  6507                           	callstack 0
  6508  004808                     _isupper:
  6509                           	callstack 23
  6510  004808  0EBF               	movlw	191
  6511  00480A  6E03               	movwf	??_isupper^0,c
  6512  00480C  0EFF               	movlw	255
  6513  00480E  6E04               	movwf	(??_isupper+1)^0,c
  6514  004810  C001  F005         	movff	isupper@c,??_isupper+2
  6515  004814  C002  F006         	movff	isupper@c+1,??_isupper+3
  6516  004818  5003               	movf	??_isupper^0,w,c
  6517  00481A  2605               	addwf	(??_isupper+2)^0,f,c
  6518  00481C  5004               	movf	(??_isupper+1)^0,w,c
  6519  00481E  2206               	addwfc	(??_isupper+3)^0,f,c
  6520  004820  5006               	movf	(??_isupper+3)^0,w,c
  6521  004822  E10A               	bnz	u4210
  6522  004824  0E1A               	movlw	26
  6523  004826  5C05               	subwf	(??_isupper+2)^0,w,c
  6524  004828  A0D8               	btfss	status,0,c
  6525  00482A  EF19  F024         	goto	u4211
  6526  00482E  EF1C  F024         	goto	u4210
  6527  004832                     u4211:
  6528  004832  0E01               	movlw	1
  6529  004834  EF1D  F024         	goto	u4220
  6530  004838                     u4210:
  6531  004838  0E00               	movlw	0
  6532  00483A                     u4220:
  6533  00483A  6E01               	movwf	?_isupper^0,c
  6534  00483C  6A02               	clrf	(?_isupper+1)^0,c
  6535  00483E  0012               	return		;funcret
  6536  004840                     __end_of_isupper:
  6537                           	callstack 0
  6538                           
  6539 ;; *************** function _strcpy *****************
  6540 ;; Defined at:
  6541 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  6542 ;; Parameters:    Size  Location     Type
  6543 ;;  dest            2    0[COMRAM] PTR unsigned char 
  6544 ;;		 -> dbuf(80), 
  6545 ;;  src             2    2[COMRAM] PTR const unsigned char 
  6546 ;;		 -> STR_22(4), STR_21(4), STR_18(4), STR_17(4), 
  6547 ;;		 -> dbuf(80), 
  6548 ;; Auto vars:     Size  Location     Type
  6549 ;;  d               2    8[COMRAM] PTR unsigned char 
  6550 ;;		 -> dbuf(80), 
  6551 ;;  s               2    6[COMRAM] PTR const unsigned char 
  6552 ;;		 -> STR_22(4), STR_21(4), STR_18(4), STR_17(4), 
  6553 ;;		 -> dbuf(80), 
  6554 ;; Return value:  Size  Location     Type
  6555 ;;                  2    0[COMRAM] PTR unsigned char 
  6556 ;; Registers used:
  6557 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6558 ;; Tracked objects:
  6559 ;;		On entry : 0/0
  6560 ;;		On exit  : 0/0
  6561 ;;		Unchanged: 0/0
  6562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6563 ;;      Params:         4       0       0       0       0       0       0
  6564 ;;      Locals:         4       0       0       0       0       0       0
  6565 ;;      Temps:          2       0       0       0       0       0       0
  6566 ;;      Totals:        10       0       0       0       0       0       0
  6567 ;;Total ram usage:       10 bytes
  6568 ;; Hardware stack levels used:    1
  6569 ;; Hardware stack levels required when called:    1
  6570 ;; This function calls:
  6571 ;;		Nothing
  6572 ;; This function is called by:
  6573 ;;		_efgtoa
  6574 ;; This function uses a non-reentrant model
  6575 ;;
  6576                           
  6577                           	psect	text14
  6578  00459C                     __ptext14:
  6579                           	callstack 0
  6580  00459C                     _strcpy:
  6581                           	callstack 23
  6582  00459C  C003  F007         	movff	strcpy@src,strcpy@s
  6583  0045A0  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  6584  0045A4  C001  F009         	movff	strcpy@dest,strcpy@d
  6585  0045A8  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  6586  0045AC                     l4616:
  6587  0045AC  5007               	movf	strcpy@s^0,w,c
  6588  0045AE  6E05               	movwf	??_strcpy^0,c
  6589  0045B0  5008               	movf	(strcpy@s+1)^0,w,c
  6590  0045B2  6E06               	movwf	(??_strcpy+1)^0,c
  6591  0045B4  4A07               	infsnz	strcpy@s^0,f,c
  6592  0045B6  2A08               	incf	(strcpy@s+1)^0,f,c
  6593  0045B8  C005  FFF6         	movff	??_strcpy,tblptrl
  6594  0045BC  C006  FFF7         	movff	??_strcpy+1,tblptrh
  6595  0045C0  6AF8               	clrf	tblptru,c
  6596  0045C2  C009  FFD9         	movff	strcpy@d,fsr2l
  6597  0045C6  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  6598  0045CA  4A09               	infsnz	strcpy@d^0,f,c
  6599  0045CC  2A0A               	incf	(strcpy@d+1)^0,f,c
  6600  0045CE  0E05               	movlw	(high __ramtop+-1)
  6601  0045D0  64F7               	cpfsgt	tblptrh,c
  6602  0045D2  D003               	bra	u5187
  6603  0045D4  0008               	tblrd		*
  6604  0045D6  50F5               	movf	tablat,w,c
  6605  0045D8  D005               	bra	u5180
  6606  0045DA                     u5187:
  6607  0045DA  CFF6 FFE9          	movff	tblptrl,fsr0l
  6608  0045DE  CFF7 FFEA          	movff	tblptrh,fsr0h
  6609  0045E2  50EF               	movf	indf0,w,c
  6610  0045E4                     u5180:
  6611  0045E4  6EDF               	movwf	indf2,c
  6612  0045E6  50DF               	movf	indf2,w,c
  6613  0045E8  A4D8               	btfss	status,2,c
  6614  0045EA  EFF9  F022         	goto	u5191
  6615  0045EE  EFFB  F022         	goto	u5190
  6616  0045F2                     u5191:
  6617  0045F2  EFD6  F022         	goto	l4616
  6618  0045F6                     u5190:
  6619  0045F6  0012               	return		;funcret
  6620  0045F8                     __end_of_strcpy:
  6621                           	callstack 0
  6622                           
  6623 ;; *************** function _floorf *****************
  6624 ;; Defined at:
  6625 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\floorf.c"
  6626 ;; Parameters:    Size  Location     Type
  6627 ;;  x               4   25[COMRAM] float 
  6628 ;; Auto vars:     Size  Location     Type
  6629 ;;  u               4   41[COMRAM] struct .
  6630 ;;  m               4   35[COMRAM] unsigned long 
  6631 ;;  e               2   39[COMRAM] int 
  6632 ;; Return value:  Size  Location     Type
  6633 ;;                  4   25[COMRAM] float 
  6634 ;; Registers used:
  6635 ;;		wreg, status,2, status,0
  6636 ;; Tracked objects:
  6637 ;;		On entry : 0/0
  6638 ;;		On exit  : 0/0
  6639 ;;		Unchanged: 0/0
  6640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6641 ;;      Params:         4       0       0       0       0       0       0
  6642 ;;      Locals:        10       0       0       0       0       0       0
  6643 ;;      Temps:          6       0       0       0       0       0       0
  6644 ;;      Totals:        20       0       0       0       0       0       0
  6645 ;;Total ram usage:       20 bytes
  6646 ;; Hardware stack levels used:    1
  6647 ;; Hardware stack levels required when called:    1
  6648 ;; This function calls:
  6649 ;;		Nothing
  6650 ;; This function is called by:
  6651 ;;		_efgtoa
  6652 ;; This function uses a non-reentrant model
  6653 ;;
  6654                           
  6655                           	psect	text15
  6656  00314C                     __ptext15:
  6657                           	callstack 0
  6658  00314C                     _floorf:
  6659                           	callstack 23
  6660  00314C  C0DC  F02A         	movff	floorf@F524,floorf@u
  6661  003150  C0DD  F02B         	movff	floorf@F524+1,floorf@u+1
  6662  003154  C0DE  F02C         	movff	floorf@F524+2,floorf@u+2
  6663  003158  C0DF  F02D         	movff	floorf@F524+3,floorf@u+3
  6664  00315C  C01A  F02A         	movff	floorf@x,floorf@u
  6665  003160  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  6666  003164  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  6667  003168  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  6668  00316C  0E81               	movlw	129
  6669  00316E  6E1E               	movwf	??_floorf^0,c
  6670  003170  0EFF               	movlw	255
  6671  003172  6E1F               	movwf	(??_floorf+1)^0,c
  6672  003174  C02A  F020         	movff	floorf@u,??_floorf+2
  6673  003178  C02B  F021         	movff	floorf@u+1,??_floorf+3
  6674  00317C  C02C  F022         	movff	floorf@u+2,??_floorf+4
  6675  003180  C02D  F023         	movff	floorf@u+3,??_floorf+5
  6676  003184  0E18               	movlw	24
  6677  003186  EFCA  F018         	goto	u5230
  6678  00318A                     u5235:
  6679  00318A  90D8               	bcf	status,0,c
  6680  00318C  3223               	rrcf	(??_floorf+5)^0,f,c
  6681  00318E  3222               	rrcf	(??_floorf+4)^0,f,c
  6682  003190  3221               	rrcf	(??_floorf+3)^0,f,c
  6683  003192  3220               	rrcf	(??_floorf+2)^0,f,c
  6684  003194                     u5230:
  6685  003194  2EE8               	decfsz	wreg,f,c
  6686  003196  EFC5  F018         	goto	u5235
  6687  00319A  5020               	movf	(??_floorf+2)^0,w,c
  6688  00319C  241E               	addwf	??_floorf^0,w,c
  6689  00319E  6E28               	movwf	floorf@e^0,c
  6690  0031A0  0E00               	movlw	0
  6691  0031A2  201F               	addwfc	(??_floorf+1)^0,w,c
  6692  0031A4  6E29               	movwf	(floorf@e+1)^0,c
  6693  0031A6  BE29               	btfsc	(floorf@e+1)^0,7,c
  6694  0031A8  EFDF  F018         	goto	u5241
  6695  0031AC  5029               	movf	(floorf@e+1)^0,w,c
  6696  0031AE  E109               	bnz	u5240
  6697  0031B0  0E17               	movlw	23
  6698  0031B2  5C28               	subwf	floorf@e^0,w,c
  6699  0031B4  A0D8               	btfss	status,0,c
  6700  0031B6  EFDF  F018         	goto	u5241
  6701  0031BA  EFE1  F018         	goto	u5240
  6702  0031BE                     u5241:
  6703  0031BE  EFEB  F018         	goto	l4634
  6704  0031C2                     u5240:
  6705  0031C2                     l4632:
  6706  0031C2  C01A  F01A         	movff	floorf@x,?_floorf
  6707  0031C6  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  6708  0031CA  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  6709  0031CE  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  6710  0031D2  EFAE  F019         	goto	l1442
  6711  0031D6                     l4634:
  6712  0031D6  BE29               	btfsc	(floorf@e+1)^0,7,c
  6713  0031D8  EFF0  F018         	goto	u5251
  6714  0031DC  EFF2  F018         	goto	u5250
  6715  0031E0                     u5251:
  6716  0031E0  EF62  F019         	goto	l4644
  6717  0031E4                     u5250:
  6718  0031E4  C028  F01E         	movff	floorf@e,??_floorf
  6719  0031E8  0EFF               	movlw	255
  6720  0031EA  6E1F               	movwf	(??_floorf+1)^0,c
  6721  0031EC  0EFF               	movlw	255
  6722  0031EE  6E20               	movwf	(??_floorf+2)^0,c
  6723  0031F0  0E7F               	movlw	127
  6724  0031F2  6E21               	movwf	(??_floorf+3)^0,c
  6725  0031F4  0E00               	movlw	0
  6726  0031F6  6E22               	movwf	(??_floorf+4)^0,c
  6727  0031F8                     u5265:
  6728  0031F8  661E               	tstfsz	??_floorf^0,c
  6729  0031FA  EF01  F019         	goto	u5266
  6730  0031FE  EF09  F019         	goto	u5267
  6731  003202                     u5266:
  6732  003202  3422               	rlcf	(??_floorf+4)^0,w,c
  6733  003204  3222               	rrcf	(??_floorf+4)^0,f,c
  6734  003206  3221               	rrcf	(??_floorf+3)^0,f,c
  6735  003208  3220               	rrcf	(??_floorf+2)^0,f,c
  6736  00320A  321F               	rrcf	(??_floorf+1)^0,f,c
  6737  00320C  2E1E               	decfsz	??_floorf^0,f,c
  6738  00320E  EFFC  F018         	goto	u5265
  6739  003212                     u5267:
  6740  003212  C01F  F024         	movff	??_floorf+1,floorf@m
  6741  003216  C020  F025         	movff	??_floorf+2,floorf@m+1
  6742  00321A  C021  F026         	movff	??_floorf+3,floorf@m+2
  6743  00321E  C022  F027         	movff	??_floorf+4,floorf@m+3
  6744  003222  5024               	movf	floorf@m^0,w,c
  6745  003224  142A               	andwf	floorf@u^0,w,c
  6746  003226  6E1E               	movwf	??_floorf^0,c
  6747  003228  5025               	movf	(floorf@m+1)^0,w,c
  6748  00322A  142B               	andwf	(floorf@u+1)^0,w,c
  6749  00322C  6E1F               	movwf	(??_floorf+1)^0,c
  6750  00322E  5026               	movf	(floorf@m+2)^0,w,c
  6751  003230  142C               	andwf	(floorf@u+2)^0,w,c
  6752  003232  6E20               	movwf	(??_floorf+2)^0,c
  6753  003234  5027               	movf	(floorf@m+3)^0,w,c
  6754  003236  142D               	andwf	(floorf@u+3)^0,w,c
  6755  003238  6E21               	movwf	(??_floorf+3)^0,c
  6756  00323A  501E               	movf	??_floorf^0,w,c
  6757  00323C  101F               	iorwf	(??_floorf+1)^0,w,c
  6758  00323E  1020               	iorwf	(??_floorf+2)^0,w,c
  6759  003240  1021               	iorwf	(??_floorf+3)^0,w,c
  6760  003242  A4D8               	btfss	status,2,c
  6761  003244  EF26  F019         	goto	u5271
  6762  003248  EF28  F019         	goto	u5270
  6763  00324C                     u5271:
  6764  00324C  EF2A  F019         	goto	l4640
  6765  003250                     u5270:
  6766  003250  EFE1  F018         	goto	l4632
  6767  003254                     l4640:
  6768  003254  C02A  F01E         	movff	floorf@u,??_floorf
  6769  003258  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  6770  00325C  C02C  F020         	movff	floorf@u+2,??_floorf+2
  6771  003260  C02D  F021         	movff	floorf@u+3,??_floorf+3
  6772  003264  0E20               	movlw	32
  6773  003266  EF3A  F019         	goto	u5280
  6774  00326A                     u5285:
  6775  00326A  90D8               	bcf	status,0,c
  6776  00326C  3221               	rrcf	(??_floorf+3)^0,f,c
  6777  00326E  3220               	rrcf	(??_floorf+2)^0,f,c
  6778  003270  321F               	rrcf	(??_floorf+1)^0,f,c
  6779  003272  321E               	rrcf	??_floorf^0,f,c
  6780  003274                     u5280:
  6781  003274  2EE8               	decfsz	wreg,f,c
  6782  003276  EF35  F019         	goto	u5285
  6783  00327A  501E               	movf	??_floorf^0,w,c
  6784  00327C  101F               	iorwf	(??_floorf+1)^0,w,c
  6785  00327E  1020               	iorwf	(??_floorf+2)^0,w,c
  6786  003280  1021               	iorwf	(??_floorf+3)^0,w,c
  6787  003282  B4D8               	btfsc	status,2,c
  6788  003284  EF46  F019         	goto	u5291
  6789  003288  EF48  F019         	goto	u5290
  6790  00328C                     u5291:
  6791  00328C  EF50  F019         	goto	l1445
  6792  003290                     u5290:
  6793  003290  5024               	movf	floorf@m^0,w,c
  6794  003292  262A               	addwf	floorf@u^0,f,c
  6795  003294  5025               	movf	(floorf@m+1)^0,w,c
  6796  003296  222B               	addwfc	(floorf@u+1)^0,f,c
  6797  003298  5026               	movf	(floorf@m+2)^0,w,c
  6798  00329A  222C               	addwfc	(floorf@u+2)^0,f,c
  6799  00329C  5027               	movf	(floorf@m+3)^0,w,c
  6800  00329E  222D               	addwfc	(floorf@u+3)^0,f,c
  6801  0032A0                     l1445:
  6802  0032A0  1C24               	comf	floorf@m^0,w,c
  6803  0032A2  6E1E               	movwf	??_floorf^0,c
  6804  0032A4  1C25               	comf	(floorf@m+1)^0,w,c
  6805  0032A6  6E1F               	movwf	(??_floorf+1)^0,c
  6806  0032A8  1C26               	comf	(floorf@m+2)^0,w,c
  6807  0032AA  6E20               	movwf	(??_floorf+2)^0,c
  6808  0032AC  1C27               	comf	(floorf@m+3)^0,w,c
  6809  0032AE  6E21               	movwf	(??_floorf+3)^0,c
  6810  0032B0  501E               	movf	??_floorf^0,w,c
  6811  0032B2  162A               	andwf	floorf@u^0,f,c
  6812  0032B4  501F               	movf	(??_floorf+1)^0,w,c
  6813  0032B6  162B               	andwf	(floorf@u+1)^0,f,c
  6814  0032B8  5020               	movf	(??_floorf+2)^0,w,c
  6815  0032BA  162C               	andwf	(floorf@u+2)^0,f,c
  6816  0032BC  5021               	movf	(??_floorf+3)^0,w,c
  6817  0032BE  162D               	andwf	(floorf@u+3)^0,f,c
  6818  0032C0  EFA6  F019         	goto	l4652
  6819  0032C4                     l4644:
  6820  0032C4  C02A  F01E         	movff	floorf@u,??_floorf
  6821  0032C8  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  6822  0032CC  C02C  F020         	movff	floorf@u+2,??_floorf+2
  6823  0032D0  C02D  F021         	movff	floorf@u+3,??_floorf+3
  6824  0032D4  0E20               	movlw	32
  6825  0032D6  EF72  F019         	goto	u5300
  6826  0032DA                     u5305:
  6827  0032DA  90D8               	bcf	status,0,c
  6828  0032DC  3221               	rrcf	(??_floorf+3)^0,f,c
  6829  0032DE  3220               	rrcf	(??_floorf+2)^0,f,c
  6830  0032E0  321F               	rrcf	(??_floorf+1)^0,f,c
  6831  0032E2  321E               	rrcf	??_floorf^0,f,c
  6832  0032E4                     u5300:
  6833  0032E4  2EE8               	decfsz	wreg,f,c
  6834  0032E6  EF6D  F019         	goto	u5305
  6835  0032EA  501E               	movf	??_floorf^0,w,c
  6836  0032EC  101F               	iorwf	(??_floorf+1)^0,w,c
  6837  0032EE  1020               	iorwf	(??_floorf+2)^0,w,c
  6838  0032F0  1021               	iorwf	(??_floorf+3)^0,w,c
  6839  0032F2  A4D8               	btfss	status,2,c
  6840  0032F4  EF7E  F019         	goto	u5311
  6841  0032F8  EF80  F019         	goto	u5310
  6842  0032FC                     u5311:
  6843  0032FC  EF8A  F019         	goto	l4648
  6844  003300                     u5310:
  6845  003300  0E00               	movlw	0
  6846  003302  6E2A               	movwf	floorf@u^0,c
  6847  003304  0E00               	movlw	0
  6848  003306  6E2B               	movwf	(floorf@u+1)^0,c
  6849  003308  0E00               	movlw	0
  6850  00330A  6E2C               	movwf	(floorf@u+2)^0,c
  6851  00330C  0E00               	movlw	0
  6852  00330E  6E2D               	movwf	(floorf@u+3)^0,c
  6853  003310  EFA6  F019         	goto	l4652
  6854  003314                     l4648:
  6855  003314  90D8               	bcf	status,0,c
  6856  003316  342A               	rlcf	floorf@u^0,w,c
  6857  003318  6E1E               	movwf	??_floorf^0,c
  6858  00331A  342B               	rlcf	(floorf@u+1)^0,w,c
  6859  00331C  6E1F               	movwf	(??_floorf+1)^0,c
  6860  00331E  342C               	rlcf	(floorf@u+2)^0,w,c
  6861  003320  6E20               	movwf	(??_floorf+2)^0,c
  6862  003322  342D               	rlcf	(floorf@u+3)^0,w,c
  6863  003324  6E21               	movwf	(??_floorf+3)^0,c
  6864  003326  501E               	movf	??_floorf^0,w,c
  6865  003328  101F               	iorwf	(??_floorf+1)^0,w,c
  6866  00332A  1020               	iorwf	(??_floorf+2)^0,w,c
  6867  00332C  1021               	iorwf	(??_floorf+3)^0,w,c
  6868  00332E  B4D8               	btfsc	status,2,c
  6869  003330  EF9C  F019         	goto	u5321
  6870  003334  EF9E  F019         	goto	u5320
  6871  003338                     u5321:
  6872  003338  EFA6  F019         	goto	l4652
  6873  00333C                     u5320:
  6874  00333C  0E00               	movlw	0
  6875  00333E  6E2A               	movwf	floorf@u^0,c
  6876  003340  0E00               	movlw	0
  6877  003342  6E2B               	movwf	(floorf@u+1)^0,c
  6878  003344  0E80               	movlw	128
  6879  003346  6E2C               	movwf	(floorf@u+2)^0,c
  6880  003348  0EBF               	movlw	191
  6881  00334A  6E2D               	movwf	(floorf@u+3)^0,c
  6882  00334C                     l4652:
  6883  00334C  C02A  F01A         	movff	floorf@u,?_floorf
  6884  003350  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  6885  003354  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  6886  003358  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  6887  00335C                     l1442:
  6888  00335C  0012               	return		;funcret
  6889  00335E                     __end_of_floorf:
  6890                           	callstack 0
  6891                           
  6892 ;; *************** function ___fpclassifyf *****************
  6893 ;; Defined at:
  6894 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
  6895 ;; Parameters:    Size  Location     Type
  6896 ;;  x               4    0[COMRAM] float 
  6897 ;; Auto vars:     Size  Location     Type
  6898 ;;  u               4   10[COMRAM] struct .
  6899 ;;  e               2    8[COMRAM] int 
  6900 ;; Return value:  Size  Location     Type
  6901 ;;                  2    0[COMRAM] int 
  6902 ;; Registers used:
  6903 ;;		wreg, status,2, status,0
  6904 ;; Tracked objects:
  6905 ;;		On entry : 0/0
  6906 ;;		On exit  : 0/0
  6907 ;;		Unchanged: 0/0
  6908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6909 ;;      Params:         4       0       0       0       0       0       0
  6910 ;;      Locals:         6       0       0       0       0       0       0
  6911 ;;      Temps:          4       0       0       0       0       0       0
  6912 ;;      Totals:        14       0       0       0       0       0       0
  6913 ;;Total ram usage:       14 bytes
  6914 ;; Hardware stack levels used:    1
  6915 ;; Hardware stack levels required when called:    1
  6916 ;; This function calls:
  6917 ;;		Nothing
  6918 ;; This function is called by:
  6919 ;;		_efgtoa
  6920 ;; This function uses a non-reentrant model
  6921 ;;
  6922                           
  6923                           	psect	text16
  6924  003CAE                     __ptext16:
  6925                           	callstack 0
  6926  003CAE                     ___fpclassifyf:
  6927                           	callstack 23
  6928  003CAE  C0E0  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  6929  003CB2  C0E1  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  6930  003CB6  C0E2  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  6931  003CBA  C0E3  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  6932  003CBE  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  6933  003CC2  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6934  003CC6  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6935  003CCA  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6936  003CCE  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6937  003CD2  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6938  003CD6  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6939  003CDA  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6940  003CDE  0E18               	movlw	24
  6941  003CE0  EF77  F01E         	goto	u5110
  6942  003CE4                     u5115:
  6943  003CE4  90D8               	bcf	status,0,c
  6944  003CE6  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  6945  003CE8  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  6946  003CEA  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  6947  003CEC  3205               	rrcf	??___fpclassifyf^0,f,c
  6948  003CEE                     u5110:
  6949  003CEE  2EE8               	decfsz	wreg,f,c
  6950  003CF0  EF72  F01E         	goto	u5115
  6951  003CF4  5005               	movf	??___fpclassifyf^0,w,c
  6952  003CF6  6E09               	movwf	___fpclassifyf@e^0,c
  6953  003CF8  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  6954  003CFA  5009               	movf	___fpclassifyf@e^0,w,c
  6955  003CFC  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6956  003CFE  A4D8               	btfss	status,2,c
  6957  003D00  EF84  F01E         	goto	u5121
  6958  003D04  EF86  F01E         	goto	u5120
  6959  003D08                     u5121:
  6960  003D08  EFA6  F01E         	goto	l4604
  6961  003D0C                     u5120:
  6962  003D0C  90D8               	bcf	status,0,c
  6963  003D0E  340B               	rlcf	___fpclassifyf@u^0,w,c
  6964  003D10  6E05               	movwf	??___fpclassifyf^0,c
  6965  003D12  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6966  003D14  6E06               	movwf	(??___fpclassifyf+1)^0,c
  6967  003D16  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6968  003D18  6E07               	movwf	(??___fpclassifyf+2)^0,c
  6969  003D1A  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6970  003D1C  6E08               	movwf	(??___fpclassifyf+3)^0,c
  6971  003D1E  5005               	movf	??___fpclassifyf^0,w,c
  6972  003D20  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6973  003D22  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6974  003D24  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6975  003D26  A4D8               	btfss	status,2,c
  6976  003D28  EF98  F01E         	goto	u5131
  6977  003D2C  EF9A  F01E         	goto	u5130
  6978  003D30                     u5131:
  6979  003D30  EFA0  F01E         	goto	l4600
  6980  003D34                     u5130:
  6981  003D34  0E00               	movlw	0
  6982  003D36  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6983  003D38  0E02               	movlw	2
  6984  003D3A  6E01               	movwf	?___fpclassifyf^0,c
  6985  003D3C  EFD5  F01E         	goto	l1397
  6986  003D40                     l4600:
  6987  003D40  0E00               	movlw	0
  6988  003D42  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6989  003D44  0E03               	movlw	3
  6990  003D46  6E01               	movwf	?___fpclassifyf^0,c
  6991  003D48  EFD5  F01E         	goto	l1397
  6992  003D4C                     l4604:
  6993  003D4C  2809               	incf	___fpclassifyf@e^0,w,c
  6994  003D4E  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6995  003D50  A4D8               	btfss	status,2,c
  6996  003D52  EFAD  F01E         	goto	u5141
  6997  003D56  EFAF  F01E         	goto	u5140
  6998  003D5A                     u5141:
  6999  003D5A  EFD1  F01E         	goto	l4610
  7000  003D5E                     u5140:
  7001  003D5E  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  7002  003D62  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7003  003D66  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7004  003D6A  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7005  003D6E  0E09               	movlw	9
  7006  003D70                     u5155:
  7007  003D70  90D8               	bcf	status,0,c
  7008  003D72  3605               	rlcf	??___fpclassifyf^0,f,c
  7009  003D74  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  7010  003D76  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  7011  003D78  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  7012  003D7A  2EE8               	decfsz	wreg,f,c
  7013  003D7C  EFB8  F01E         	goto	u5155
  7014  003D80  5005               	movf	??___fpclassifyf^0,w,c
  7015  003D82  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  7016  003D84  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  7017  003D86  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  7018  003D88  B4D8               	btfsc	status,2,c
  7019  003D8A  EFC9  F01E         	goto	u5161
  7020  003D8E  EFCC  F01E         	goto	u5160
  7021  003D92                     u5161:
  7022  003D92  0E01               	movlw	1
  7023  003D94  EFCD  F01E         	goto	u5170
  7024  003D98                     u5160:
  7025  003D98  0E00               	movlw	0
  7026  003D9A                     u5170:
  7027  003D9A  6E01               	movwf	?___fpclassifyf^0,c
  7028  003D9C  6A02               	clrf	(?___fpclassifyf+1)^0,c
  7029  003D9E  EFD5  F01E         	goto	l1397
  7030  003DA2                     l4610:
  7031  003DA2  0E00               	movlw	0
  7032  003DA4  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7033  003DA6  0E04               	movlw	4
  7034  003DA8  6E01               	movwf	?___fpclassifyf^0,c
  7035  003DAA                     l1397:
  7036  003DAA  0012               	return		;funcret
  7037  003DAC                     __end_of___fpclassifyf:
  7038                           	callstack 0
  7039                           
  7040 ;; *************** function ___fltol *****************
  7041 ;; Defined at:
  7042 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
  7043 ;; Parameters:    Size  Location     Type
  7044 ;;  f1              4    0[COMRAM] int 
  7045 ;; Auto vars:     Size  Location     Type
  7046 ;;  exp1            1    9[COMRAM] unsigned char 
  7047 ;;  sign1           1    8[COMRAM] unsigned char 
  7048 ;; Return value:  Size  Location     Type
  7049 ;;                  4    0[COMRAM] long 
  7050 ;; Registers used:
  7051 ;;		wreg, status,2, status,0
  7052 ;; Tracked objects:
  7053 ;;		On entry : 0/0
  7054 ;;		On exit  : 0/0
  7055 ;;		Unchanged: 0/0
  7056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7057 ;;      Params:         4       0       0       0       0       0       0
  7058 ;;      Locals:         2       0       0       0       0       0       0
  7059 ;;      Temps:          4       0       0       0       0       0       0
  7060 ;;      Totals:        10       0       0       0       0       0       0
  7061 ;;Total ram usage:       10 bytes
  7062 ;; Hardware stack levels used:    1
  7063 ;; Hardware stack levels required when called:    1
  7064 ;; This function calls:
  7065 ;;		Nothing
  7066 ;; This function is called by:
  7067 ;;		_efgtoa
  7068 ;;		_scanAdcConversion
  7069 ;;		_PWM1_setDC
  7070 ;;		_PWM2_setDC
  7071 ;;		_speedControl
  7072 ;; This function uses a non-reentrant model
  7073 ;;
  7074                           
  7075                           	psect	text17
  7076  003AA4                     __ptext17:
  7077                           	callstack 0
  7078  003AA4                     ___fltol:
  7079                           	callstack 23
  7080  003AA4  3403               	rlcf	(___fltol@f1+2)^0,w,c
  7081  003AA6  3404               	rlcf	(___fltol@f1+3)^0,w,c
  7082  003AA8  6E0A               	movwf	___fltol@exp1^0,c
  7083  003AAA  500A               	movf	___fltol@exp1^0,w,c
  7084  003AAC  A4D8               	btfss	status,2,c
  7085  003AAE  EF5B  F01D         	goto	u4991
  7086  003AB2  EF5D  F01D         	goto	u4990
  7087  003AB6                     u4991:
  7088  003AB6  EF67  F01D         	goto	l4528
  7089  003ABA                     u4990:
  7090  003ABA                     l4524:
  7091  003ABA  0E00               	movlw	0
  7092  003ABC  6E01               	movwf	?___fltol^0,c
  7093  003ABE  0E00               	movlw	0
  7094  003AC0  6E02               	movwf	(?___fltol+1)^0,c
  7095  003AC2  0E00               	movlw	0
  7096  003AC4  6E03               	movwf	(?___fltol+2)^0,c
  7097  003AC6  0E00               	movlw	0
  7098  003AC8  6E04               	movwf	(?___fltol+3)^0,c
  7099  003ACA  EFD4  F01D         	goto	l792
  7100  003ACE                     l4528:
  7101  003ACE  C001  F005         	movff	___fltol@f1,??___fltol
  7102  003AD2  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  7103  003AD6  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  7104  003ADA  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  7105  003ADE  0E20               	movlw	32
  7106  003AE0  EF77  F01D         	goto	u5000
  7107  003AE4                     u5005:
  7108  003AE4  90D8               	bcf	status,0,c
  7109  003AE6  3208               	rrcf	(??___fltol+3)^0,f,c
  7110  003AE8  3207               	rrcf	(??___fltol+2)^0,f,c
  7111  003AEA  3206               	rrcf	(??___fltol+1)^0,f,c
  7112  003AEC  3205               	rrcf	??___fltol^0,f,c
  7113  003AEE                     u5000:
  7114  003AEE  2EE8               	decfsz	wreg,f,c
  7115  003AF0  EF72  F01D         	goto	u5005
  7116  003AF4  5005               	movf	??___fltol^0,w,c
  7117  003AF6  6E09               	movwf	___fltol@sign1^0,c
  7118  003AF8  8E03               	bsf	(___fltol@f1+2)^0,7,c
  7119  003AFA  0EFF               	movlw	255
  7120  003AFC  1601               	andwf	___fltol@f1^0,f,c
  7121  003AFE  0EFF               	movlw	255
  7122  003B00  1602               	andwf	(___fltol@f1+1)^0,f,c
  7123  003B02  0EFF               	movlw	255
  7124  003B04  1603               	andwf	(___fltol@f1+2)^0,f,c
  7125  003B06  0E00               	movlw	0
  7126  003B08  1604               	andwf	(___fltol@f1+3)^0,f,c
  7127  003B0A  0E96               	movlw	150
  7128  003B0C  5E0A               	subwf	___fltol@exp1^0,f,c
  7129  003B0E  BE0A               	btfsc	___fltol@exp1^0,7,c
  7130  003B10  EF8E  F01D         	goto	u5010
  7131  003B14  EF8C  F01D         	goto	u5011
  7132  003B18                     u5011:
  7133  003B18  EFA4  F01D         	goto	l4548
  7134  003B1C                     u5010:
  7135  003B1C  500A               	movf	___fltol@exp1^0,w,c
  7136  003B1E  0A80               	xorlw	128
  7137  003B20  0F97               	addlw	151
  7138  003B22  B0D8               	btfsc	status,0,c
  7139  003B24  EF96  F01D         	goto	u5021
  7140  003B28  EF98  F01D         	goto	u5020
  7141  003B2C                     u5021:
  7142  003B2C  EF9A  F01D         	goto	l4544
  7143  003B30                     u5020:
  7144  003B30  EF5D  F01D         	goto	l4524
  7145  003B34                     l4544:
  7146  003B34  90D8               	bcf	status,0,c
  7147  003B36  3204               	rrcf	(___fltol@f1+3)^0,f,c
  7148  003B38  3203               	rrcf	(___fltol@f1+2)^0,f,c
  7149  003B3A  3202               	rrcf	(___fltol@f1+1)^0,f,c
  7150  003B3C  3201               	rrcf	___fltol@f1^0,f,c
  7151  003B3E  3E0A               	incfsz	___fltol@exp1^0,f,c
  7152  003B40  EF9A  F01D         	goto	l4544
  7153  003B44  EFBC  F01D         	goto	l4558
  7154  003B48                     l4548:
  7155  003B48  0E1F               	movlw	31
  7156  003B4A  640A               	cpfsgt	___fltol@exp1^0,c
  7157  003B4C  EFAA  F01D         	goto	u5031
  7158  003B50  EFAC  F01D         	goto	u5030
  7159  003B54                     u5031:
  7160  003B54  EFB4  F01D         	goto	l4556
  7161  003B58                     u5030:
  7162  003B58  EF5D  F01D         	goto	l4524
  7163  003B5C                     l4554:
  7164  003B5C  90D8               	bcf	status,0,c
  7165  003B5E  3601               	rlcf	___fltol@f1^0,f,c
  7166  003B60  3602               	rlcf	(___fltol@f1+1)^0,f,c
  7167  003B62  3603               	rlcf	(___fltol@f1+2)^0,f,c
  7168  003B64  3604               	rlcf	(___fltol@f1+3)^0,f,c
  7169  003B66  060A               	decf	___fltol@exp1^0,f,c
  7170  003B68                     l4556:
  7171  003B68  500A               	movf	___fltol@exp1^0,w,c
  7172  003B6A  A4D8               	btfss	status,2,c
  7173  003B6C  EFBA  F01D         	goto	u5041
  7174  003B70  EFBC  F01D         	goto	u5040
  7175  003B74                     u5041:
  7176  003B74  EFAE  F01D         	goto	l4554
  7177  003B78                     u5040:
  7178  003B78                     l4558:
  7179  003B78  5009               	movf	___fltol@sign1^0,w,c
  7180  003B7A  B4D8               	btfsc	status,2,c
  7181  003B7C  EFC2  F01D         	goto	u5051
  7182  003B80  EFC4  F01D         	goto	u5050
  7183  003B84                     u5051:
  7184  003B84  EFCC  F01D         	goto	l4562
  7185  003B88                     u5050:
  7186  003B88  1E04               	comf	(___fltol@f1+3)^0,f,c
  7187  003B8A  1E03               	comf	(___fltol@f1+2)^0,f,c
  7188  003B8C  1E02               	comf	(___fltol@f1+1)^0,f,c
  7189  003B8E  6C01               	negf	___fltol@f1^0,c
  7190  003B90  0E00               	movlw	0
  7191  003B92  2202               	addwfc	(___fltol@f1+1)^0,f,c
  7192  003B94  2203               	addwfc	(___fltol@f1+2)^0,f,c
  7193  003B96  2204               	addwfc	(___fltol@f1+3)^0,f,c
  7194  003B98                     l4562:
  7195  003B98  C001  F001         	movff	___fltol@f1,?___fltol
  7196  003B9C  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  7197  003BA0  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  7198  003BA4  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  7199  003BA8                     l792:
  7200  003BA8  0012               	return		;funcret
  7201  003BAA                     __end_of___fltol:
  7202                           	callstack 0
  7203                           
  7204 ;; *************** function ___flsub *****************
  7205 ;; Defined at:
  7206 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  7207 ;; Parameters:    Size  Location     Type
  7208 ;;  b               4   25[COMRAM] long 
  7209 ;;  a               4   29[COMRAM] long 
  7210 ;; Auto vars:     Size  Location     Type
  7211 ;;		None
  7212 ;; Return value:  Size  Location     Type
  7213 ;;                  4   25[COMRAM] long 
  7214 ;; Registers used:
  7215 ;;		wreg, status,2, status,0, cstack
  7216 ;; Tracked objects:
  7217 ;;		On entry : 0/0
  7218 ;;		On exit  : 0/0
  7219 ;;		Unchanged: 0/0
  7220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7221 ;;      Params:         8       0       0       0       0       0       0
  7222 ;;      Locals:         0       0       0       0       0       0       0
  7223 ;;      Temps:          0       0       0       0       0       0       0
  7224 ;;      Totals:         8       0       0       0       0       0       0
  7225 ;;Total ram usage:        8 bytes
  7226 ;; Hardware stack levels used:    1
  7227 ;; Hardware stack levels required when called:    2
  7228 ;; This function calls:
  7229 ;;		___fladd
  7230 ;; This function is called by:
  7231 ;;		_stateMachine
  7232 ;;		_efgtoa
  7233 ;; This function uses a non-reentrant model
  7234 ;;
  7235                           
  7236                           	psect	text18
  7237  00473E                     __ptext18:
  7238                           	callstack 0
  7239  00473E                     ___flsub:
  7240                           	callstack 22
  7241  00473E  0E00               	movlw	0
  7242  004740  1A1E               	xorwf	___flsub@a^0,f,c
  7243  004742  0E00               	movlw	0
  7244  004744  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  7245  004746  0E00               	movlw	0
  7246  004748  1A20               	xorwf	(___flsub@a+2)^0,f,c
  7247  00474A  0E80               	movlw	128
  7248  00474C  1A21               	xorwf	(___flsub@a+3)^0,f,c
  7249  00474E  C01A  F001         	movff	___flsub@b,___fladd@b
  7250  004752  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  7251  004756  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  7252  00475A  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  7253  00475E  C01E  F005         	movff	___flsub@a,___fladd@a
  7254  004762  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  7255  004766  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  7256  00476A  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  7257  00476E  ECF2  F010         	call	___fladd	;wreg free
  7258  004772  C001  F01A         	movff	?___fladd,?___flsub
  7259  004776  C002  F01B         	movff	?___fladd+1,?___flsub+1
  7260  00477A  C003  F01C         	movff	?___fladd+2,?___flsub+2
  7261  00477E  C004  F01D         	movff	?___fladd+3,?___flsub+3
  7262  004782  0012               	return		;funcret
  7263  004784                     __end_of___flsub:
  7264                           	callstack 0
  7265                           
  7266 ;; *************** function ___fladd *****************
  7267 ;; Defined at:
  7268 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  7269 ;; Parameters:    Size  Location     Type
  7270 ;;  b               4    0[COMRAM] long 
  7271 ;;  a               4    4[COMRAM] long 
  7272 ;; Auto vars:     Size  Location     Type
  7273 ;;  grs             1   15[COMRAM] unsigned char 
  7274 ;;  bexp            1   14[COMRAM] unsigned char 
  7275 ;;  aexp            1   13[COMRAM] unsigned char 
  7276 ;;  signs           1   12[COMRAM] unsigned char 
  7277 ;; Return value:  Size  Location     Type
  7278 ;;                  4    0[COMRAM] unsigned char 
  7279 ;; Registers used:
  7280 ;;		wreg, status,2, status,0
  7281 ;; Tracked objects:
  7282 ;;		On entry : 0/0
  7283 ;;		On exit  : 0/0
  7284 ;;		Unchanged: 0/0
  7285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7286 ;;      Params:         8       0       0       0       0       0       0
  7287 ;;      Locals:         4       0       0       0       0       0       0
  7288 ;;      Temps:          4       0       0       0       0       0       0
  7289 ;;      Totals:        16       0       0       0       0       0       0
  7290 ;;Total ram usage:       16 bytes
  7291 ;; Hardware stack levels used:    1
  7292 ;; Hardware stack levels required when called:    1
  7293 ;; This function calls:
  7294 ;;		Nothing
  7295 ;; This function is called by:
  7296 ;;		_stateMachine
  7297 ;;		___flsub
  7298 ;;		_efgtoa
  7299 ;;		_speedControl
  7300 ;; This function uses a non-reentrant model
  7301 ;;
  7302                           
  7303                           	psect	text19
  7304  0021E4                     __ptext19:
  7305                           	callstack 0
  7306  0021E4                     ___fladd:
  7307                           	callstack 22
  7308  0021E4  5004               	movf	(___fladd@b+3)^0,w,c
  7309  0021E6  0B80               	andlw	128
  7310  0021E8  6E0D               	movwf	___fladd@signs^0,c
  7311  0021EA  5004               	movf	(___fladd@b+3)^0,w,c
  7312  0021EC  2404               	addwf	(___fladd@b+3)^0,w,c
  7313  0021EE  6E0F               	movwf	___fladd@bexp^0,c
  7314  0021F0  AE03               	btfss	(___fladd@b+2)^0,7,c
  7315  0021F2  EFFD  F010         	goto	u3801
  7316  0021F6  EFFF  F010         	goto	u3800
  7317  0021FA                     u3801:
  7318  0021FA  EF00  F011         	goto	l3818
  7319  0021FE                     u3800:
  7320  0021FE  800F               	bsf	___fladd@bexp^0,0,c
  7321  002200                     l3818:
  7322  002200  500F               	movf	___fladd@bexp^0,w,c
  7323  002202  B4D8               	btfsc	status,2,c
  7324  002204  EF06  F011         	goto	u3811
  7325  002208  EF08  F011         	goto	u3810
  7326  00220C                     u3811:
  7327  00220C  EF1D  F011         	goto	l3828
  7328  002210                     u3810:
  7329  002210  280F               	incf	___fladd@bexp^0,w,c
  7330  002212  A4D8               	btfss	status,2,c
  7331  002214  EF0E  F011         	goto	u3821
  7332  002218  EF10  F011         	goto	u3820
  7333  00221C                     u3821:
  7334  00221C  EF18  F011         	goto	l3824
  7335  002220                     u3820:
  7336  002220  0E00               	movlw	0
  7337  002222  6E01               	movwf	___fladd@b^0,c
  7338  002224  0E00               	movlw	0
  7339  002226  6E02               	movwf	(___fladd@b+1)^0,c
  7340  002228  0E00               	movlw	0
  7341  00222A  6E03               	movwf	(___fladd@b+2)^0,c
  7342  00222C  0E00               	movlw	0
  7343  00222E  6E04               	movwf	(___fladd@b+3)^0,c
  7344  002230                     l3824:
  7345  002230  8E03               	bsf	(___fladd@b+2)^0,7,c
  7346  002232  0E00               	movlw	0
  7347  002234  6E04               	movwf	(___fladd@b+3)^0,c
  7348  002236  EF25  F011         	goto	l3830
  7349  00223A                     l3828:
  7350  00223A  0E00               	movlw	0
  7351  00223C  6E01               	movwf	___fladd@b^0,c
  7352  00223E  0E00               	movlw	0
  7353  002240  6E02               	movwf	(___fladd@b+1)^0,c
  7354  002242  0E00               	movlw	0
  7355  002244  6E03               	movwf	(___fladd@b+2)^0,c
  7356  002246  0E00               	movlw	0
  7357  002248  6E04               	movwf	(___fladd@b+3)^0,c
  7358  00224A                     l3830:
  7359  00224A  5008               	movf	(___fladd@a+3)^0,w,c
  7360  00224C  0B80               	andlw	128
  7361  00224E  6E0E               	movwf	___fladd@aexp^0,c
  7362  002250  500D               	movf	___fladd@signs^0,w,c
  7363  002252  180E               	xorwf	___fladd@aexp^0,w,c
  7364  002254  B4D8               	btfsc	status,2,c
  7365  002256  EF2F  F011         	goto	u3831
  7366  00225A  EF31  F011         	goto	u3830
  7367  00225E                     u3831:
  7368  00225E  EF32  F011         	goto	l3836
  7369  002262                     u3830:
  7370  002262  8C0D               	bsf	___fladd@signs^0,6,c
  7371  002264                     l3836:
  7372  002264  5008               	movf	(___fladd@a+3)^0,w,c
  7373  002266  2408               	addwf	(___fladd@a+3)^0,w,c
  7374  002268  6E0E               	movwf	___fladd@aexp^0,c
  7375  00226A  AE07               	btfss	(___fladd@a+2)^0,7,c
  7376  00226C  EF3A  F011         	goto	u3841
  7377  002270  EF3C  F011         	goto	u3840
  7378  002274                     u3841:
  7379  002274  EF3D  F011         	goto	l3842
  7380  002278                     u3840:
  7381  002278  800E               	bsf	___fladd@aexp^0,0,c
  7382  00227A                     l3842:
  7383  00227A  500E               	movf	___fladd@aexp^0,w,c
  7384  00227C  B4D8               	btfsc	status,2,c
  7385  00227E  EF43  F011         	goto	u3851
  7386  002282  EF45  F011         	goto	u3850
  7387  002286                     u3851:
  7388  002286  EF5A  F011         	goto	l3852
  7389  00228A                     u3850:
  7390  00228A  280E               	incf	___fladd@aexp^0,w,c
  7391  00228C  A4D8               	btfss	status,2,c
  7392  00228E  EF4B  F011         	goto	u3861
  7393  002292  EF4D  F011         	goto	u3860
  7394  002296                     u3861:
  7395  002296  EF55  F011         	goto	l3848
  7396  00229A                     u3860:
  7397  00229A  0E00               	movlw	0
  7398  00229C  6E05               	movwf	___fladd@a^0,c
  7399  00229E  0E00               	movlw	0
  7400  0022A0  6E06               	movwf	(___fladd@a+1)^0,c
  7401  0022A2  0E00               	movlw	0
  7402  0022A4  6E07               	movwf	(___fladd@a+2)^0,c
  7403  0022A6  0E00               	movlw	0
  7404  0022A8  6E08               	movwf	(___fladd@a+3)^0,c
  7405  0022AA                     l3848:
  7406  0022AA  8E07               	bsf	(___fladd@a+2)^0,7,c
  7407  0022AC  0E00               	movlw	0
  7408  0022AE  6E08               	movwf	(___fladd@a+3)^0,c
  7409  0022B0  EF62  F011         	goto	l3854
  7410  0022B4                     l3852:
  7411  0022B4  0E00               	movlw	0
  7412  0022B6  6E05               	movwf	___fladd@a^0,c
  7413  0022B8  0E00               	movlw	0
  7414  0022BA  6E06               	movwf	(___fladd@a+1)^0,c
  7415  0022BC  0E00               	movlw	0
  7416  0022BE  6E07               	movwf	(___fladd@a+2)^0,c
  7417  0022C0  0E00               	movlw	0
  7418  0022C2  6E08               	movwf	(___fladd@a+3)^0,c
  7419  0022C4                     l3854:
  7420  0022C4  500F               	movf	___fladd@bexp^0,w,c
  7421  0022C6  5C0E               	subwf	___fladd@aexp^0,w,c
  7422  0022C8  B0D8               	btfsc	status,0,c
  7423  0022CA  EF69  F011         	goto	u3871
  7424  0022CE  EF6B  F011         	goto	u3870
  7425  0022D2                     u3871:
  7426  0022D2  EF92  F011         	goto	l3890
  7427  0022D6                     u3870:
  7428  0022D6  AC0D               	btfss	___fladd@signs^0,6,c
  7429  0022D8  EF70  F011         	goto	u3881
  7430  0022DC  EF72  F011         	goto	u3880
  7431  0022E0                     u3881:
  7432  0022E0  EF74  F011         	goto	l3860
  7433  0022E4                     u3880:
  7434  0022E4  0E80               	movlw	128
  7435  0022E6  1A0D               	xorwf	___fladd@signs^0,f,c
  7436  0022E8                     l3860:
  7437  0022E8  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  7438  0022EC  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7439  0022F0  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  7440  0022F4  C001  F010         	movff	___fladd@b,___fladd@grs
  7441  0022F8  C005  F001         	movff	___fladd@a,___fladd@b
  7442  0022FC  C010  F005         	movff	___fladd@grs,___fladd@a
  7443  002300  C002  F010         	movff	___fladd@b+1,___fladd@grs
  7444  002304  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  7445  002308  C010  F006         	movff	___fladd@grs,___fladd@a+1
  7446  00230C  C003  F010         	movff	___fladd@b+2,___fladd@grs
  7447  002310  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  7448  002314  C010  F007         	movff	___fladd@grs,___fladd@a+2
  7449  002318  C004  F010         	movff	___fladd@b+3,___fladd@grs
  7450  00231C  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  7451  002320  C010  F008         	movff	___fladd@grs,___fladd@a+3
  7452  002324                     l3890:
  7453  002324  0E00               	movlw	0
  7454  002326  6E10               	movwf	___fladd@grs^0,c
  7455  002328  500F               	movf	___fladd@bexp^0,w,c
  7456  00232A  C00E  F009         	movff	___fladd@aexp,??___fladd
  7457  00232E  6A0A               	clrf	(??___fladd+1)^0,c
  7458  002330  5E09               	subwf	??___fladd^0,f,c
  7459  002332  0E00               	movlw	0
  7460  002334  5A0A               	subwfb	(??___fladd+1)^0,f,c
  7461  002336  BE0A               	btfsc	(??___fladd+1)^0,7,c
  7462  002338  EFA7  F011         	goto	u3891
  7463  00233C  500A               	movf	(??___fladd+1)^0,w,c
  7464  00233E  E109               	bnz	u3890
  7465  002340  0E1A               	movlw	26
  7466  002342  5C09               	subwf	??___fladd^0,w,c
  7467  002344  A0D8               	btfss	status,0,c
  7468  002346  EFA7  F011         	goto	u3891
  7469  00234A  EFA9  F011         	goto	u3890
  7470  00234E                     u3891:
  7471  00234E  EFE0  F011         	goto	l1024
  7472  002352                     u3890:
  7473  002352  5001               	movf	___fladd@b^0,w,c
  7474  002354  1002               	iorwf	(___fladd@b+1)^0,w,c
  7475  002356  1003               	iorwf	(___fladd@b+2)^0,w,c
  7476  002358  1004               	iorwf	(___fladd@b+3)^0,w,c
  7477  00235A  A4D8               	btfss	status,2,c
  7478  00235C  EFB2  F011         	goto	u3901
  7479  002360  EFB5  F011         	goto	u3900
  7480  002364                     u3901:
  7481  002364  0E01               	movlw	1
  7482  002366  EFB6  F011         	goto	u3910
  7483  00236A                     u3900:
  7484  00236A  0E00               	movlw	0
  7485  00236C                     u3910:
  7486  00236C  6E10               	movwf	___fladd@grs^0,c
  7487  00236E  0E00               	movlw	0
  7488  002370  6E01               	movwf	___fladd@b^0,c
  7489  002372  0E00               	movlw	0
  7490  002374  6E02               	movwf	(___fladd@b+1)^0,c
  7491  002376  0E00               	movlw	0
  7492  002378  6E03               	movwf	(___fladd@b+2)^0,c
  7493  00237A  0E00               	movlw	0
  7494  00237C  6E04               	movwf	(___fladd@b+3)^0,c
  7495  00237E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7496  002382  EFE9  F011         	goto	l1023
  7497  002386                     l1025:
  7498  002386  A010               	btfss	___fladd@grs^0,0,c
  7499  002388  EFC8  F011         	goto	u3921
  7500  00238C  EFCA  F011         	goto	u3920
  7501  002390                     u3921:
  7502  002390  EFD0  F011         	goto	l3902
  7503  002394                     u3920:
  7504  002394  90D8               	bcf	status,0,c
  7505  002396  3010               	rrcf	___fladd@grs^0,w,c
  7506  002398  0901               	iorlw	1
  7507  00239A  6E10               	movwf	___fladd@grs^0,c
  7508  00239C  EFD2  F011         	goto	l3904
  7509  0023A0                     l3902:
  7510  0023A0  90D8               	bcf	status,0,c
  7511  0023A2  3210               	rrcf	___fladd@grs^0,f,c
  7512  0023A4                     l3904:
  7513  0023A4  A001               	btfss	___fladd@b^0,0,c
  7514  0023A6  EFD7  F011         	goto	u3931
  7515  0023AA  EFD9  F011         	goto	u3930
  7516  0023AE                     u3931:
  7517  0023AE  EFDA  F011         	goto	l3908
  7518  0023B2                     u3930:
  7519  0023B2  8E10               	bsf	___fladd@grs^0,7,c
  7520  0023B4                     l3908:
  7521  0023B4  3404               	rlcf	(___fladd@b+3)^0,w,c
  7522  0023B6  3204               	rrcf	(___fladd@b+3)^0,f,c
  7523  0023B8  3203               	rrcf	(___fladd@b+2)^0,f,c
  7524  0023BA  3202               	rrcf	(___fladd@b+1)^0,f,c
  7525  0023BC  3201               	rrcf	___fladd@b^0,f,c
  7526  0023BE  2A0F               	incf	___fladd@bexp^0,f,c
  7527  0023C0                     l1024:
  7528  0023C0  500E               	movf	___fladd@aexp^0,w,c
  7529  0023C2  5C0F               	subwf	___fladd@bexp^0,w,c
  7530  0023C4  A0D8               	btfss	status,0,c
  7531  0023C6  EFE7  F011         	goto	u3941
  7532  0023CA  EFE9  F011         	goto	u3940
  7533  0023CE                     u3941:
  7534  0023CE  EFC3  F011         	goto	l1025
  7535  0023D2                     u3940:
  7536  0023D2                     l1023:
  7537  0023D2  BC0D               	btfsc	___fladd@signs^0,6,c
  7538  0023D4  EFEE  F011         	goto	u3951
  7539  0023D8  EFF0  F011         	goto	u3950
  7540  0023DC                     u3951:
  7541  0023DC  EF30  F012         	goto	l3936
  7542  0023E0                     u3950:
  7543  0023E0  500F               	movf	___fladd@bexp^0,w,c
  7544  0023E2  A4D8               	btfss	status,2,c
  7545  0023E4  EFF6  F011         	goto	u3961
  7546  0023E8  EFF8  F011         	goto	u3960
  7547  0023EC                     u3961:
  7548  0023EC  EF02  F012         	goto	l3918
  7549  0023F0                     u3960:
  7550  0023F0  0E00               	movlw	0
  7551  0023F2  6E01               	movwf	?___fladd^0,c
  7552  0023F4  0E00               	movlw	0
  7553  0023F6  6E02               	movwf	(?___fladd+1)^0,c
  7554  0023F8  0E00               	movlw	0
  7555  0023FA  6E03               	movwf	(?___fladd+2)^0,c
  7556  0023FC  0E00               	movlw	0
  7557  0023FE  6E04               	movwf	(?___fladd+3)^0,c
  7558  002400  EF51  F013         	goto	l1032
  7559  002404                     l3918:
  7560  002404  5005               	movf	___fladd@a^0,w,c
  7561  002406  2601               	addwf	___fladd@b^0,f,c
  7562  002408  5006               	movf	(___fladd@a+1)^0,w,c
  7563  00240A  2202               	addwfc	(___fladd@b+1)^0,f,c
  7564  00240C  5007               	movf	(___fladd@a+2)^0,w,c
  7565  00240E  2203               	addwfc	(___fladd@b+2)^0,f,c
  7566  002410  5008               	movf	(___fladd@a+3)^0,w,c
  7567  002412  2204               	addwfc	(___fladd@b+3)^0,f,c
  7568  002414  A004               	btfss	(___fladd@b+3)^0,0,c
  7569  002416  EF0F  F012         	goto	u3971
  7570  00241A  EF11  F012         	goto	u3970
  7571  00241E                     u3971:
  7572  00241E  EFBD  F012         	goto	l3972
  7573  002422                     u3970:
  7574  002422  A010               	btfss	___fladd@grs^0,0,c
  7575  002424  EF16  F012         	goto	u3981
  7576  002428  EF18  F012         	goto	u3980
  7577  00242C                     u3981:
  7578  00242C  EF1E  F012         	goto	l3926
  7579  002430                     u3980:
  7580  002430  90D8               	bcf	status,0,c
  7581  002432  3010               	rrcf	___fladd@grs^0,w,c
  7582  002434  0901               	iorlw	1
  7583  002436  6E10               	movwf	___fladd@grs^0,c
  7584  002438  EF20  F012         	goto	l3928
  7585  00243C                     l3926:
  7586  00243C  90D8               	bcf	status,0,c
  7587  00243E  3210               	rrcf	___fladd@grs^0,f,c
  7588  002440                     l3928:
  7589  002440  A001               	btfss	___fladd@b^0,0,c
  7590  002442  EF25  F012         	goto	u3991
  7591  002446  EF27  F012         	goto	u3990
  7592  00244A                     u3991:
  7593  00244A  EF28  F012         	goto	l3932
  7594  00244E                     u3990:
  7595  00244E  8E10               	bsf	___fladd@grs^0,7,c
  7596  002450                     l3932:
  7597  002450  3404               	rlcf	(___fladd@b+3)^0,w,c
  7598  002452  3204               	rrcf	(___fladd@b+3)^0,f,c
  7599  002454  3203               	rrcf	(___fladd@b+2)^0,f,c
  7600  002456  3202               	rrcf	(___fladd@b+1)^0,f,c
  7601  002458  3201               	rrcf	___fladd@b^0,f,c
  7602  00245A  2A0F               	incf	___fladd@bexp^0,f,c
  7603  00245C  EFBD  F012         	goto	l3972
  7604  002460                     l3936:
  7605  002460  5005               	movf	___fladd@a^0,w,c
  7606  002462  5C01               	subwf	___fladd@b^0,w,c
  7607  002464  5006               	movf	(___fladd@a+1)^0,w,c
  7608  002466  5802               	subwfb	(___fladd@b+1)^0,w,c
  7609  002468  5007               	movf	(___fladd@a+2)^0,w,c
  7610  00246A  5803               	subwfb	(___fladd@b+2)^0,w,c
  7611  00246C  5004               	movf	(___fladd@b+3)^0,w,c
  7612  00246E  0A80               	xorlw	128
  7613  002470  6E09               	movwf	??___fladd^0,c
  7614  002472  5008               	movf	(___fladd@a+3)^0,w,c
  7615  002474  0A80               	xorlw	128
  7616  002476  5809               	subwfb	??___fladd^0,w,c
  7617  002478  B0D8               	btfsc	status,0,c
  7618  00247A  EF41  F012         	goto	u4001
  7619  00247E  EF43  F012         	goto	u4000
  7620  002482                     u4001:
  7621  002482  EF6E  F012         	goto	l3946
  7622  002486                     u4000:
  7623  002486  5001               	movf	___fladd@b^0,w,c
  7624  002488  5C05               	subwf	___fladd@a^0,w,c
  7625  00248A  6E09               	movwf	??___fladd^0,c
  7626  00248C  5002               	movf	(___fladd@b+1)^0,w,c
  7627  00248E  5806               	subwfb	(___fladd@a+1)^0,w,c
  7628  002490  6E0A               	movwf	(??___fladd+1)^0,c
  7629  002492  5003               	movf	(___fladd@b+2)^0,w,c
  7630  002494  5807               	subwfb	(___fladd@a+2)^0,w,c
  7631  002496  6E0B               	movwf	(??___fladd+2)^0,c
  7632  002498  5004               	movf	(___fladd@b+3)^0,w,c
  7633  00249A  5808               	subwfb	(___fladd@a+3)^0,w,c
  7634  00249C  6E0C               	movwf	(??___fladd+3)^0,c
  7635  00249E  0EFF               	movlw	255
  7636  0024A0  2409               	addwf	??___fladd^0,w,c
  7637  0024A2  6E01               	movwf	___fladd@b^0,c
  7638  0024A4  0EFF               	movlw	255
  7639  0024A6  200A               	addwfc	(??___fladd+1)^0,w,c
  7640  0024A8  6E02               	movwf	(___fladd@b+1)^0,c
  7641  0024AA  0EFF               	movlw	255
  7642  0024AC  200B               	addwfc	(??___fladd+2)^0,w,c
  7643  0024AE  6E03               	movwf	(___fladd@b+2)^0,c
  7644  0024B0  0EFF               	movlw	255
  7645  0024B2  200C               	addwfc	(??___fladd+3)^0,w,c
  7646  0024B4  6E04               	movwf	(___fladd@b+3)^0,c
  7647  0024B6  0E80               	movlw	128
  7648  0024B8  1A0D               	xorwf	___fladd@signs^0,f,c
  7649  0024BA  6C10               	negf	___fladd@grs^0,c
  7650  0024BC  5010               	movf	___fladd@grs^0,w,c
  7651  0024BE  A4D8               	btfss	status,2,c
  7652  0024C0  EF64  F012         	goto	u4011
  7653  0024C4  EF66  F012         	goto	u4010
  7654  0024C8                     u4011:
  7655  0024C8  EF76  F012         	goto	l1040
  7656  0024CC                     u4010:
  7657  0024CC  0E01               	movlw	1
  7658  0024CE  2601               	addwf	___fladd@b^0,f,c
  7659  0024D0  0E00               	movlw	0
  7660  0024D2  2202               	addwfc	(___fladd@b+1)^0,f,c
  7661  0024D4  2203               	addwfc	(___fladd@b+2)^0,f,c
  7662  0024D6  2204               	addwfc	(___fladd@b+3)^0,f,c
  7663  0024D8  EF76  F012         	goto	l1040
  7664  0024DC                     l3946:
  7665  0024DC  5005               	movf	___fladd@a^0,w,c
  7666  0024DE  5E01               	subwf	___fladd@b^0,f,c
  7667  0024E0  5006               	movf	(___fladd@a+1)^0,w,c
  7668  0024E2  5A02               	subwfb	(___fladd@b+1)^0,f,c
  7669  0024E4  5007               	movf	(___fladd@a+2)^0,w,c
  7670  0024E6  5A03               	subwfb	(___fladd@b+2)^0,f,c
  7671  0024E8  5008               	movf	(___fladd@a+3)^0,w,c
  7672  0024EA  5A04               	subwfb	(___fladd@b+3)^0,f,c
  7673  0024EC                     l1040:
  7674  0024EC  5001               	movf	___fladd@b^0,w,c
  7675  0024EE  1002               	iorwf	(___fladd@b+1)^0,w,c
  7676  0024F0  1003               	iorwf	(___fladd@b+2)^0,w,c
  7677  0024F2  1004               	iorwf	(___fladd@b+3)^0,w,c
  7678  0024F4  A4D8               	btfss	status,2,c
  7679  0024F6  EF7F  F012         	goto	u4021
  7680  0024FA  EF81  F012         	goto	u4020
  7681  0024FE                     u4021:
  7682  0024FE  EFB6  F012         	goto	l3970
  7683  002502                     u4020:
  7684  002502  5010               	movf	___fladd@grs^0,w,c
  7685  002504  A4D8               	btfss	status,2,c
  7686  002506  EF87  F012         	goto	u4031
  7687  00250A  EF89  F012         	goto	u4030
  7688  00250E                     u4031:
  7689  00250E  EFB6  F012         	goto	l3970
  7690  002512                     u4030:
  7691  002512  0E00               	movlw	0
  7692  002514  6E01               	movwf	?___fladd^0,c
  7693  002516  0E00               	movlw	0
  7694  002518  6E02               	movwf	(?___fladd+1)^0,c
  7695  00251A  0E00               	movlw	0
  7696  00251C  6E03               	movwf	(?___fladd+2)^0,c
  7697  00251E  0E00               	movlw	0
  7698  002520  6E04               	movwf	(?___fladd+3)^0,c
  7699  002522  EF51  F013         	goto	l1032
  7700  002526                     l3954:
  7701  002526  90D8               	bcf	status,0,c
  7702  002528  3601               	rlcf	___fladd@b^0,f,c
  7703  00252A  3602               	rlcf	(___fladd@b+1)^0,f,c
  7704  00252C  3603               	rlcf	(___fladd@b+2)^0,f,c
  7705  00252E  3604               	rlcf	(___fladd@b+3)^0,f,c
  7706  002530  AE10               	btfss	___fladd@grs^0,7,c
  7707  002532  EF9D  F012         	goto	u4041
  7708  002536  EF9F  F012         	goto	u4040
  7709  00253A                     u4041:
  7710  00253A  EFA0  F012         	goto	l3960
  7711  00253E                     u4040:
  7712  00253E  8001               	bsf	___fladd@b^0,0,c
  7713  002540                     l3960:
  7714  002540  A010               	btfss	___fladd@grs^0,0,c
  7715  002542  EFA5  F012         	goto	u4051
  7716  002546  EFA7  F012         	goto	u4050
  7717  00254A                     u4051:
  7718  00254A  EFAB  F012         	goto	l3964
  7719  00254E                     u4050:
  7720  00254E  80D8               	bsf	status,0,c
  7721  002550  3610               	rlcf	___fladd@grs^0,f,c
  7722  002552  EFAD  F012         	goto	l3966
  7723  002556                     l3964:
  7724  002556  90D8               	bcf	status,0,c
  7725  002558  3610               	rlcf	___fladd@grs^0,f,c
  7726  00255A                     l3966:
  7727  00255A  500F               	movf	___fladd@bexp^0,w,c
  7728  00255C  B4D8               	btfsc	status,2,c
  7729  00255E  EFB3  F012         	goto	u4061
  7730  002562  EFB5  F012         	goto	u4060
  7731  002566                     u4061:
  7732  002566  EFB6  F012         	goto	l3970
  7733  00256A                     u4060:
  7734  00256A  060F               	decf	___fladd@bexp^0,f,c
  7735  00256C                     l3970:
  7736  00256C  AE03               	btfss	(___fladd@b+2)^0,7,c
  7737  00256E  EFBB  F012         	goto	u4071
  7738  002572  EFBD  F012         	goto	u4070
  7739  002576                     u4071:
  7740  002576  EF93  F012         	goto	l3954
  7741  00257A                     u4070:
  7742  00257A                     l3972:
  7743  00257A  0E00               	movlw	0
  7744  00257C  6E0E               	movwf	___fladd@aexp^0,c
  7745  00257E  AE10               	btfss	___fladd@grs^0,7,c
  7746  002580  EFC4  F012         	goto	u4081
  7747  002584  EFC6  F012         	goto	u4080
  7748  002588                     u4081:
  7749  002588  EFDE  F012         	goto	l1049
  7750  00258C                     u4080:
  7751  00258C  C010  F009         	movff	___fladd@grs,??___fladd
  7752  002590  0E7F               	movlw	127
  7753  002592  1609               	andwf	??___fladd^0,f,c
  7754  002594  B4D8               	btfsc	status,2,c
  7755  002596  EFCF  F012         	goto	u4091
  7756  00259A  EFD1  F012         	goto	u4090
  7757  00259E                     u4091:
  7758  00259E  EFD5  F012         	goto	l1050
  7759  0025A2                     u4090:
  7760  0025A2                     l3978:
  7761  0025A2  0E01               	movlw	1
  7762  0025A4  6E0E               	movwf	___fladd@aexp^0,c
  7763  0025A6  EFDE  F012         	goto	l1049
  7764  0025AA                     l1050:
  7765  0025AA  A001               	btfss	___fladd@b^0,0,c
  7766  0025AC  EFDA  F012         	goto	u4101
  7767  0025B0  EFDC  F012         	goto	u4100
  7768  0025B4                     u4101:
  7769  0025B4  EFDE  F012         	goto	l1049
  7770  0025B8                     u4100:
  7771  0025B8  EFD1  F012         	goto	l3978
  7772  0025BC                     l1049:
  7773  0025BC  500E               	movf	___fladd@aexp^0,w,c
  7774  0025BE  B4D8               	btfsc	status,2,c
  7775  0025C0  EFE4  F012         	goto	u4111
  7776  0025C4  EFE6  F012         	goto	u4110
  7777  0025C8                     u4111:
  7778  0025C8  EF11  F013         	goto	l3990
  7779  0025CC                     u4110:
  7780  0025CC  0E01               	movlw	1
  7781  0025CE  2601               	addwf	___fladd@b^0,f,c
  7782  0025D0  0E00               	movlw	0
  7783  0025D2  2202               	addwfc	(___fladd@b+1)^0,f,c
  7784  0025D4  2203               	addwfc	(___fladd@b+2)^0,f,c
  7785  0025D6  2204               	addwfc	(___fladd@b+3)^0,f,c
  7786  0025D8  A004               	btfss	(___fladd@b+3)^0,0,c
  7787  0025DA  EFF1  F012         	goto	u4121
  7788  0025DE  EFF3  F012         	goto	u4120
  7789  0025E2                     u4121:
  7790  0025E2  EF11  F013         	goto	l3990
  7791  0025E6                     u4120:
  7792  0025E6  C001  F009         	movff	___fladd@b,??___fladd
  7793  0025EA  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  7794  0025EE  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  7795  0025F2  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  7796  0025F6  340C               	rlcf	(??___fladd+3)^0,w,c
  7797  0025F8  320C               	rrcf	(??___fladd+3)^0,f,c
  7798  0025FA  320B               	rrcf	(??___fladd+2)^0,f,c
  7799  0025FC  320A               	rrcf	(??___fladd+1)^0,f,c
  7800  0025FE  3209               	rrcf	??___fladd^0,f,c
  7801  002600  C009  F001         	movff	??___fladd,___fladd@b
  7802  002604  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  7803  002608  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  7804  00260C  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  7805  002610  280F               	incf	___fladd@bexp^0,w,c
  7806  002612  B4D8               	btfsc	status,2,c
  7807  002614  EF0E  F013         	goto	u4131
  7808  002618  EF10  F013         	goto	u4130
  7809  00261C                     u4131:
  7810  00261C  EF11  F013         	goto	l3990
  7811  002620                     u4130:
  7812  002620  2A0F               	incf	___fladd@bexp^0,f,c
  7813  002622                     l3990:
  7814  002622  280F               	incf	___fladd@bexp^0,w,c
  7815  002624  B4D8               	btfsc	status,2,c
  7816  002626  EF17  F013         	goto	u4141
  7817  00262A  EF19  F013         	goto	u4140
  7818  00262E                     u4141:
  7819  00262E  EF21  F013         	goto	l3994
  7820  002632                     u4140:
  7821  002632  500F               	movf	___fladd@bexp^0,w,c
  7822  002634  A4D8               	btfss	status,2,c
  7823  002636  EF1F  F013         	goto	u4151
  7824  00263A  EF21  F013         	goto	u4150
  7825  00263E                     u4151:
  7826  00263E  EF33  F013         	goto	l3998
  7827  002642                     u4150:
  7828  002642                     l3994:
  7829  002642  0E00               	movlw	0
  7830  002644  6E01               	movwf	___fladd@b^0,c
  7831  002646  0E00               	movlw	0
  7832  002648  6E02               	movwf	(___fladd@b+1)^0,c
  7833  00264A  0E00               	movlw	0
  7834  00264C  6E03               	movwf	(___fladd@b+2)^0,c
  7835  00264E  0E00               	movlw	0
  7836  002650  6E04               	movwf	(___fladd@b+3)^0,c
  7837  002652  500F               	movf	___fladd@bexp^0,w,c
  7838  002654  A4D8               	btfss	status,2,c
  7839  002656  EF2F  F013         	goto	u4161
  7840  00265A  EF31  F013         	goto	u4160
  7841  00265E                     u4161:
  7842  00265E  EF33  F013         	goto	l3998
  7843  002662                     u4160:
  7844  002662  0E00               	movlw	0
  7845  002664  6E0D               	movwf	___fladd@signs^0,c
  7846  002666                     l3998:
  7847  002666  A00F               	btfss	___fladd@bexp^0,0,c
  7848  002668  EF38  F013         	goto	u4171
  7849  00266C  EF3A  F013         	goto	u4170
  7850  002670                     u4171:
  7851  002670  EF3D  F013         	goto	l4002
  7852  002674                     u4170:
  7853  002674  8E03               	bsf	(___fladd@b+2)^0,7,c
  7854  002676  EF3E  F013         	goto	l4004
  7855  00267A                     l4002:
  7856  00267A  9E03               	bcf	(___fladd@b+2)^0,7,c
  7857  00267C                     l4004:
  7858  00267C  90D8               	bcf	status,0,c
  7859  00267E  300F               	rrcf	___fladd@bexp^0,w,c
  7860  002680  6E04               	movwf	(___fladd@b+3)^0,c
  7861  002682  AE0D               	btfss	___fladd@signs^0,7,c
  7862  002684  EF46  F013         	goto	u4181
  7863  002688  EF48  F013         	goto	u4180
  7864  00268C                     u4181:
  7865  00268C  EF49  F013         	goto	l4010
  7866  002690                     u4180:
  7867  002690  8E04               	bsf	(___fladd@b+3)^0,7,c
  7868  002692                     l4010:
  7869  002692  C001  F001         	movff	___fladd@b,?___fladd
  7870  002696  C002  F002         	movff	___fladd@b+1,?___fladd+1
  7871  00269A  C003  F003         	movff	___fladd@b+2,?___fladd+2
  7872  00269E  C004  F004         	movff	___fladd@b+3,?___fladd+3
  7873  0026A2                     l1032:
  7874  0026A2  0012               	return		;funcret
  7875  0026A4                     __end_of___fladd:
  7876                           	callstack 0
  7877                           
  7878 ;; *************** function ___flneg *****************
  7879 ;; Defined at:
  7880 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
  7881 ;; Parameters:    Size  Location     Type
  7882 ;;  f1              4    0[COMRAM] unsigned char 
  7883 ;; Auto vars:     Size  Location     Type
  7884 ;;		None
  7885 ;; Return value:  Size  Location     Type
  7886 ;;                  4    0[COMRAM] unsigned char 
  7887 ;; Registers used:
  7888 ;;		wreg, status,2, status,0
  7889 ;; Tracked objects:
  7890 ;;		On entry : 0/0
  7891 ;;		On exit  : 0/0
  7892 ;;		Unchanged: 0/0
  7893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7894 ;;      Params:         4       0       0       0       0       0       0
  7895 ;;      Locals:         0       0       0       0       0       0       0
  7896 ;;      Temps:          0       0       0       0       0       0       0
  7897 ;;      Totals:         4       0       0       0       0       0       0
  7898 ;;Total ram usage:        4 bytes
  7899 ;; Hardware stack levels used:    1
  7900 ;; Hardware stack levels required when called:    1
  7901 ;; This function calls:
  7902 ;;		Nothing
  7903 ;; This function is called by:
  7904 ;;		_efgtoa
  7905 ;; This function uses a non-reentrant model
  7906 ;;
  7907                           
  7908                           	psect	text20
  7909  004840                     __ptext20:
  7910                           	callstack 0
  7911  004840                     ___flneg:
  7912                           	callstack 23
  7913  004840  5001               	movf	___flneg@f1^0,w,c
  7914  004842  1002               	iorwf	(___flneg@f1+1)^0,w,c
  7915  004844  1003               	iorwf	(___flneg@f1+2)^0,w,c
  7916  004846  1004               	iorwf	(___flneg@f1+3)^0,w,c
  7917  004848  B4D8               	btfsc	status,2,c
  7918  00484A  EF29  F024         	goto	u4981
  7919  00484E  EF2B  F024         	goto	u4980
  7920  004852                     u4981:
  7921  004852  EF33  F024         	goto	l4518
  7922  004856                     u4980:
  7923  004856  0E00               	movlw	0
  7924  004858  1A01               	xorwf	___flneg@f1^0,f,c
  7925  00485A  0E00               	movlw	0
  7926  00485C  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  7927  00485E  0E00               	movlw	0
  7928  004860  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  7929  004862  0E80               	movlw	128
  7930  004864  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  7931  004866                     l4518:
  7932  004866  C001  F001         	movff	___flneg@f1,?___flneg
  7933  00486A  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  7934  00486E  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  7935  004872  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  7936  004876  0012               	return		;funcret
  7937  004878                     __end_of___flneg:
  7938                           	callstack 0
  7939                           
  7940 ;; *************** function ___flmul *****************
  7941 ;; Defined at:
  7942 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
  7943 ;; Parameters:    Size  Location     Type
  7944 ;;  b               4    0[COMRAM] unsigned char 
  7945 ;;  a               4    4[COMRAM] unsigned char 
  7946 ;; Auto vars:     Size  Location     Type
  7947 ;;  prod            4   19[COMRAM] struct .
  7948 ;;  grs             4   13[COMRAM] unsigned long 
  7949 ;;  temp            2   23[COMRAM] struct .
  7950 ;;  bexp            1   18[COMRAM] unsigned char 
  7951 ;;  aexp            1   17[COMRAM] unsigned char 
  7952 ;;  sign            1   12[COMRAM] unsigned char 
  7953 ;; Return value:  Size  Location     Type
  7954 ;;                  4    0[COMRAM] unsigned char 
  7955 ;; Registers used:
  7956 ;;		wreg, status,2, status,0, prodl, prodh
  7957 ;; Tracked objects:
  7958 ;;		On entry : 0/0
  7959 ;;		On exit  : 0/0
  7960 ;;		Unchanged: 0/0
  7961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7962 ;;      Params:         8       0       0       0       0       0       0
  7963 ;;      Locals:        13       0       0       0       0       0       0
  7964 ;;      Temps:          4       0       0       0       0       0       0
  7965 ;;      Totals:        25       0       0       0       0       0       0
  7966 ;;Total ram usage:       25 bytes
  7967 ;; Hardware stack levels used:    1
  7968 ;; Hardware stack levels required when called:    1
  7969 ;; This function calls:
  7970 ;;		Nothing
  7971 ;; This function is called by:
  7972 ;;		_efgtoa
  7973 ;;		_scanAdcConversion
  7974 ;;		_speedControl
  7975 ;; This function uses a non-reentrant model
  7976 ;;
  7977                           
  7978                           	psect	text21
  7979  0026A4                     __ptext21:
  7980                           	callstack 0
  7981  0026A4                     ___flmul:
  7982                           	callstack 23
  7983  0026A4  5004               	movf	(___flmul@b+3)^0,w,c
  7984  0026A6  0B80               	andlw	128
  7985  0026A8  6E0D               	movwf	___flmul@sign^0,c
  7986  0026AA  5004               	movf	(___flmul@b+3)^0,w,c
  7987  0026AC  2404               	addwf	(___flmul@b+3)^0,w,c
  7988  0026AE  6E13               	movwf	___flmul@bexp^0,c
  7989  0026B0  AE03               	btfss	(___flmul@b+2)^0,7,c
  7990  0026B2  EF5D  F013         	goto	u4591
  7991  0026B6  EF5F  F013         	goto	u4590
  7992  0026BA                     u4591:
  7993  0026BA  EF60  F013         	goto	l4266
  7994  0026BE                     u4590:
  7995  0026BE  8013               	bsf	___flmul@bexp^0,0,c
  7996  0026C0                     l4266:
  7997  0026C0  5013               	movf	___flmul@bexp^0,w,c
  7998  0026C2  B4D8               	btfsc	status,2,c
  7999  0026C4  EF66  F013         	goto	u4601
  8000  0026C8  EF68  F013         	goto	u4600
  8001  0026CC                     u4601:
  8002  0026CC  EF7B  F013         	goto	l4274
  8003  0026D0                     u4600:
  8004  0026D0  2813               	incf	___flmul@bexp^0,w,c
  8005  0026D2  A4D8               	btfss	status,2,c
  8006  0026D4  EF6E  F013         	goto	u4611
  8007  0026D8  EF70  F013         	goto	u4610
  8008  0026DC                     u4611:
  8009  0026DC  EF78  F013         	goto	l4272
  8010  0026E0                     u4610:
  8011  0026E0  0E00               	movlw	0
  8012  0026E2  6E01               	movwf	___flmul@b^0,c
  8013  0026E4  0E00               	movlw	0
  8014  0026E6  6E02               	movwf	(___flmul@b+1)^0,c
  8015  0026E8  0E00               	movlw	0
  8016  0026EA  6E03               	movwf	(___flmul@b+2)^0,c
  8017  0026EC  0E00               	movlw	0
  8018  0026EE  6E04               	movwf	(___flmul@b+3)^0,c
  8019  0026F0                     l4272:
  8020  0026F0  8E03               	bsf	(___flmul@b+2)^0,7,c
  8021  0026F2  EF83  F013         	goto	l4276
  8022  0026F6                     l4274:
  8023  0026F6  0E00               	movlw	0
  8024  0026F8  6E01               	movwf	___flmul@b^0,c
  8025  0026FA  0E00               	movlw	0
  8026  0026FC  6E02               	movwf	(___flmul@b+1)^0,c
  8027  0026FE  0E00               	movlw	0
  8028  002700  6E03               	movwf	(___flmul@b+2)^0,c
  8029  002702  0E00               	movlw	0
  8030  002704  6E04               	movwf	(___flmul@b+3)^0,c
  8031  002706                     l4276:
  8032  002706  5008               	movf	(___flmul@a+3)^0,w,c
  8033  002708  0B80               	andlw	128
  8034  00270A  1A0D               	xorwf	___flmul@sign^0,f,c
  8035  00270C  5008               	movf	(___flmul@a+3)^0,w,c
  8036  00270E  2408               	addwf	(___flmul@a+3)^0,w,c
  8037  002710  6E12               	movwf	___flmul@aexp^0,c
  8038  002712  AE07               	btfss	(___flmul@a+2)^0,7,c
  8039  002714  EF8E  F013         	goto	u4621
  8040  002718  EF90  F013         	goto	u4620
  8041  00271C                     u4621:
  8042  00271C  EF91  F013         	goto	l4284
  8043  002720                     u4620:
  8044  002720  8012               	bsf	___flmul@aexp^0,0,c
  8045  002722                     l4284:
  8046  002722  5012               	movf	___flmul@aexp^0,w,c
  8047  002724  B4D8               	btfsc	status,2,c
  8048  002726  EF97  F013         	goto	u4631
  8049  00272A  EF99  F013         	goto	u4630
  8050  00272E                     u4631:
  8051  00272E  EFAC  F013         	goto	l4292
  8052  002732                     u4630:
  8053  002732  2812               	incf	___flmul@aexp^0,w,c
  8054  002734  A4D8               	btfss	status,2,c
  8055  002736  EF9F  F013         	goto	u4641
  8056  00273A  EFA1  F013         	goto	u4640
  8057  00273E                     u4641:
  8058  00273E  EFA9  F013         	goto	l4290
  8059  002742                     u4640:
  8060  002742  0E00               	movlw	0
  8061  002744  6E05               	movwf	___flmul@a^0,c
  8062  002746  0E00               	movlw	0
  8063  002748  6E06               	movwf	(___flmul@a+1)^0,c
  8064  00274A  0E00               	movlw	0
  8065  00274C  6E07               	movwf	(___flmul@a+2)^0,c
  8066  00274E  0E00               	movlw	0
  8067  002750  6E08               	movwf	(___flmul@a+3)^0,c
  8068  002752                     l4290:
  8069  002752  8E07               	bsf	(___flmul@a+2)^0,7,c
  8070  002754  EFB4  F013         	goto	l1109
  8071  002758                     l4292:
  8072  002758  0E00               	movlw	0
  8073  00275A  6E05               	movwf	___flmul@a^0,c
  8074  00275C  0E00               	movlw	0
  8075  00275E  6E06               	movwf	(___flmul@a+1)^0,c
  8076  002760  0E00               	movlw	0
  8077  002762  6E07               	movwf	(___flmul@a+2)^0,c
  8078  002764  0E00               	movlw	0
  8079  002766  6E08               	movwf	(___flmul@a+3)^0,c
  8080  002768                     l1109:
  8081  002768  5012               	movf	___flmul@aexp^0,w,c
  8082  00276A  B4D8               	btfsc	status,2,c
  8083  00276C  EFBA  F013         	goto	u4651
  8084  002770  EFBC  F013         	goto	u4650
  8085  002774                     u4651:
  8086  002774  EFC4  F013         	goto	l4296
  8087  002778                     u4650:
  8088  002778  5013               	movf	___flmul@bexp^0,w,c
  8089  00277A  A4D8               	btfss	status,2,c
  8090  00277C  EFC2  F013         	goto	u4661
  8091  002780  EFC4  F013         	goto	u4660
  8092  002784                     u4661:
  8093  002784  EFCE  F013         	goto	l4300
  8094  002788                     u4660:
  8095  002788                     l4296:
  8096  002788  0E00               	movlw	0
  8097  00278A  6E01               	movwf	?___flmul^0,c
  8098  00278C  0E00               	movlw	0
  8099  00278E  6E02               	movwf	(?___flmul+1)^0,c
  8100  002790  0E00               	movlw	0
  8101  002792  6E03               	movwf	(?___flmul+2)^0,c
  8102  002794  0E00               	movlw	0
  8103  002796  6E04               	movwf	(?___flmul+3)^0,c
  8104  002798  EF66  F015         	goto	l1113
  8105  00279C                     l4300:
  8106  00279C  5007               	movf	(___flmul@a+2)^0,w,c
  8107  00279E  0201               	mulwf	___flmul@b^0,c
  8108  0027A0  CFF3 F018          	movff	prodl,___flmul@temp
  8109  0027A4  CFF4 F019          	movff	prodh,___flmul@temp+1
  8110  0027A8  5018               	movf	___flmul@temp^0,w,c
  8111  0027AA  6E0E               	movwf	___flmul@grs^0,c
  8112  0027AC  6A0F               	clrf	(___flmul@grs+1)^0,c
  8113  0027AE  6A10               	clrf	(___flmul@grs+2)^0,c
  8114  0027B0  6A11               	clrf	(___flmul@grs+3)^0,c
  8115  0027B2  5019               	movf	(___flmul@temp+1)^0,w,c
  8116  0027B4  6E14               	movwf	___flmul@prod^0,c
  8117  0027B6  6A15               	clrf	(___flmul@prod+1)^0,c
  8118  0027B8  6A16               	clrf	(___flmul@prod+2)^0,c
  8119  0027BA  6A17               	clrf	(___flmul@prod+3)^0,c
  8120  0027BC  5006               	movf	(___flmul@a+1)^0,w,c
  8121  0027BE  0202               	mulwf	(___flmul@b+1)^0,c
  8122  0027C0  CFF3 F018          	movff	prodl,___flmul@temp
  8123  0027C4  CFF4 F019          	movff	prodh,___flmul@temp+1
  8124  0027C8  5018               	movf	___flmul@temp^0,w,c
  8125  0027CA  260E               	addwf	___flmul@grs^0,f,c
  8126  0027CC  0E00               	movlw	0
  8127  0027CE  220F               	addwfc	(___flmul@grs+1)^0,f,c
  8128  0027D0  2210               	addwfc	(___flmul@grs+2)^0,f,c
  8129  0027D2  2211               	addwfc	(___flmul@grs+3)^0,f,c
  8130  0027D4  5019               	movf	(___flmul@temp+1)^0,w,c
  8131  0027D6  2614               	addwf	___flmul@prod^0,f,c
  8132  0027D8  0E00               	movlw	0
  8133  0027DA  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8134  0027DC  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8135  0027DE  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8136  0027E0  5005               	movf	___flmul@a^0,w,c
  8137  0027E2  0203               	mulwf	(___flmul@b+2)^0,c
  8138  0027E4  CFF3 F018          	movff	prodl,___flmul@temp
  8139  0027E8  CFF4 F019          	movff	prodh,___flmul@temp+1
  8140  0027EC  5018               	movf	___flmul@temp^0,w,c
  8141  0027EE  260E               	addwf	___flmul@grs^0,f,c
  8142  0027F0  0E00               	movlw	0
  8143  0027F2  220F               	addwfc	(___flmul@grs+1)^0,f,c
  8144  0027F4  2210               	addwfc	(___flmul@grs+2)^0,f,c
  8145  0027F6  2211               	addwfc	(___flmul@grs+3)^0,f,c
  8146  0027F8  5019               	movf	(___flmul@temp+1)^0,w,c
  8147  0027FA  2614               	addwf	___flmul@prod^0,f,c
  8148  0027FC  0E00               	movlw	0
  8149  0027FE  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8150  002800  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8151  002802  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8152  002804  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  8153  002808  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  8154  00280C  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  8155  002810  6A0E               	clrf	___flmul@grs^0,c
  8156  002812  5005               	movf	___flmul@a^0,w,c
  8157  002814  0202               	mulwf	(___flmul@b+1)^0,c
  8158  002816  CFF3 F018          	movff	prodl,___flmul@temp
  8159  00281A  CFF4 F019          	movff	prodh,___flmul@temp+1
  8160  00281E  5018               	movf	___flmul@temp^0,w,c
  8161  002820  260E               	addwf	___flmul@grs^0,f,c
  8162  002822  5019               	movf	(___flmul@temp+1)^0,w,c
  8163  002824  220F               	addwfc	(___flmul@grs+1)^0,f,c
  8164  002826  0E00               	movlw	0
  8165  002828  2210               	addwfc	(___flmul@grs+2)^0,f,c
  8166  00282A  0E00               	movlw	0
  8167  00282C  2211               	addwfc	(___flmul@grs+3)^0,f,c
  8168  00282E  5006               	movf	(___flmul@a+1)^0,w,c
  8169  002830  0201               	mulwf	___flmul@b^0,c
  8170  002832  CFF3 F018          	movff	prodl,___flmul@temp
  8171  002836  CFF4 F019          	movff	prodh,___flmul@temp+1
  8172  00283A  5018               	movf	___flmul@temp^0,w,c
  8173  00283C  260E               	addwf	___flmul@grs^0,f,c
  8174  00283E  5019               	movf	(___flmul@temp+1)^0,w,c
  8175  002840  220F               	addwfc	(___flmul@grs+1)^0,f,c
  8176  002842  0E00               	movlw	0
  8177  002844  2210               	addwfc	(___flmul@grs+2)^0,f,c
  8178  002846  0E00               	movlw	0
  8179  002848  2211               	addwfc	(___flmul@grs+3)^0,f,c
  8180  00284A  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  8181  00284E  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  8182  002852  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  8183  002856  6A0E               	clrf	___flmul@grs^0,c
  8184  002858  5005               	movf	___flmul@a^0,w,c
  8185  00285A  0201               	mulwf	___flmul@b^0,c
  8186  00285C  CFF3 F018          	movff	prodl,___flmul@temp
  8187  002860  CFF4 F019          	movff	prodh,___flmul@temp+1
  8188  002864  5018               	movf	___flmul@temp^0,w,c
  8189  002866  260E               	addwf	___flmul@grs^0,f,c
  8190  002868  5019               	movf	(___flmul@temp+1)^0,w,c
  8191  00286A  220F               	addwfc	(___flmul@grs+1)^0,f,c
  8192  00286C  0E00               	movlw	0
  8193  00286E  2210               	addwfc	(___flmul@grs+2)^0,f,c
  8194  002870  0E00               	movlw	0
  8195  002872  2211               	addwfc	(___flmul@grs+3)^0,f,c
  8196  002874  5007               	movf	(___flmul@a+2)^0,w,c
  8197  002876  0202               	mulwf	(___flmul@b+1)^0,c
  8198  002878  CFF3 F018          	movff	prodl,___flmul@temp
  8199  00287C  CFF4 F019          	movff	prodh,___flmul@temp+1
  8200  002880  5018               	movf	___flmul@temp^0,w,c
  8201  002882  2614               	addwf	___flmul@prod^0,f,c
  8202  002884  5019               	movf	(___flmul@temp+1)^0,w,c
  8203  002886  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8204  002888  0E00               	movlw	0
  8205  00288A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8206  00288C  0E00               	movlw	0
  8207  00288E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8208  002890  5006               	movf	(___flmul@a+1)^0,w,c
  8209  002892  0203               	mulwf	(___flmul@b+2)^0,c
  8210  002894  CFF3 F018          	movff	prodl,___flmul@temp
  8211  002898  CFF4 F019          	movff	prodh,___flmul@temp+1
  8212  00289C  5018               	movf	___flmul@temp^0,w,c
  8213  00289E  2614               	addwf	___flmul@prod^0,f,c
  8214  0028A0  5019               	movf	(___flmul@temp+1)^0,w,c
  8215  0028A2  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8216  0028A4  0E00               	movlw	0
  8217  0028A6  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8218  0028A8  0E00               	movlw	0
  8219  0028AA  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8220  0028AC  5007               	movf	(___flmul@a+2)^0,w,c
  8221  0028AE  0203               	mulwf	(___flmul@b+2)^0,c
  8222  0028B0  CFF3 F018          	movff	prodl,___flmul@temp
  8223  0028B4  CFF4 F019          	movff	prodh,___flmul@temp+1
  8224  0028B8  5018               	movf	___flmul@temp^0,w,c
  8225  0028BA  6E09               	movwf	??___flmul^0,c
  8226  0028BC  5019               	movf	(___flmul@temp+1)^0,w,c
  8227  0028BE  6E0A               	movwf	(??___flmul+1)^0,c
  8228  0028C0  6A0B               	clrf	(??___flmul+2)^0,c
  8229  0028C2  6A0C               	clrf	(??___flmul+3)^0,c
  8230  0028C4  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  8231  0028C8  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  8232  0028CC  C009  F00A         	movff	??___flmul,??___flmul+1
  8233  0028D0  6A09               	clrf	??___flmul^0,c
  8234  0028D2  5009               	movf	??___flmul^0,w,c
  8235  0028D4  2614               	addwf	___flmul@prod^0,f,c
  8236  0028D6  500A               	movf	(??___flmul+1)^0,w,c
  8237  0028D8  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8238  0028DA  500B               	movf	(??___flmul+2)^0,w,c
  8239  0028DC  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8240  0028DE  500C               	movf	(??___flmul+3)^0,w,c
  8241  0028E0  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8242  0028E2  C00E  F009         	movff	___flmul@grs,??___flmul
  8243  0028E6  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  8244  0028EA  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  8245  0028EE  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  8246  0028F2  0E19               	movlw	25
  8247  0028F4  EF81  F014         	goto	u4670
  8248  0028F8                     u4675:
  8249  0028F8  90D8               	bcf	status,0,c
  8250  0028FA  320C               	rrcf	(??___flmul+3)^0,f,c
  8251  0028FC  320B               	rrcf	(??___flmul+2)^0,f,c
  8252  0028FE  320A               	rrcf	(??___flmul+1)^0,f,c
  8253  002900  3209               	rrcf	??___flmul^0,f,c
  8254  002902                     u4670:
  8255  002902  2EE8               	decfsz	wreg,f,c
  8256  002904  EF7C  F014         	goto	u4675
  8257  002908  5009               	movf	??___flmul^0,w,c
  8258  00290A  2614               	addwf	___flmul@prod^0,f,c
  8259  00290C  500A               	movf	(??___flmul+1)^0,w,c
  8260  00290E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8261  002910  500B               	movf	(??___flmul+2)^0,w,c
  8262  002912  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8263  002914  500C               	movf	(??___flmul+3)^0,w,c
  8264  002916  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8265  002918  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  8266  00291C  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  8267  002920  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  8268  002924  6A0E               	clrf	___flmul@grs^0,c
  8269  002926  5012               	movf	___flmul@aexp^0,w,c
  8270  002928  C013  F009         	movff	___flmul@bexp,??___flmul
  8271  00292C  6A0A               	clrf	(??___flmul+1)^0,c
  8272  00292E  2609               	addwf	??___flmul^0,f,c
  8273  002930  0E00               	movlw	0
  8274  002932  220A               	addwfc	(??___flmul+1)^0,f,c
  8275  002934  0E82               	movlw	130
  8276  002936  2409               	addwf	??___flmul^0,w,c
  8277  002938  6E18               	movwf	___flmul@temp^0,c
  8278  00293A  0EFF               	movlw	255
  8279  00293C  200A               	addwfc	(??___flmul+1)^0,w,c
  8280  00293E  6E19               	movwf	(___flmul@temp+1)^0,c
  8281  002940  EFB7  F014         	goto	l4348
  8282  002944                     l4342:
  8283  002944  90D8               	bcf	status,0,c
  8284  002946  3614               	rlcf	___flmul@prod^0,f,c
  8285  002948  3615               	rlcf	(___flmul@prod+1)^0,f,c
  8286  00294A  3616               	rlcf	(___flmul@prod+2)^0,f,c
  8287  00294C  3617               	rlcf	(___flmul@prod+3)^0,f,c
  8288  00294E  AE11               	btfss	(___flmul@grs+3)^0,7,c
  8289  002950  EFAC  F014         	goto	u4681
  8290  002954  EFAE  F014         	goto	u4680
  8291  002958                     u4681:
  8292  002958  EFAF  F014         	goto	l1116
  8293  00295C                     u4680:
  8294  00295C  8014               	bsf	___flmul@prod^0,0,c
  8295  00295E                     l1116:
  8296  00295E  90D8               	bcf	status,0,c
  8297  002960  360E               	rlcf	___flmul@grs^0,f,c
  8298  002962  360F               	rlcf	(___flmul@grs+1)^0,f,c
  8299  002964  3610               	rlcf	(___flmul@grs+2)^0,f,c
  8300  002966  3611               	rlcf	(___flmul@grs+3)^0,f,c
  8301  002968  0618               	decf	___flmul@temp^0,f,c
  8302  00296A  A0D8               	btfss	status,0,c
  8303  00296C  0619               	decf	(___flmul@temp+1)^0,f,c
  8304  00296E                     l4348:
  8305  00296E  AE16               	btfss	(___flmul@prod+2)^0,7,c
  8306  002970  EFBC  F014         	goto	u4691
  8307  002974  EFBE  F014         	goto	u4690
  8308  002978                     u4691:
  8309  002978  EFA2  F014         	goto	l4342
  8310  00297C                     u4690:
  8311  00297C  0E00               	movlw	0
  8312  00297E  6E12               	movwf	___flmul@aexp^0,c
  8313  002980  AE11               	btfss	(___flmul@grs+3)^0,7,c
  8314  002982  EFC5  F014         	goto	u4701
  8315  002986  EFC7  F014         	goto	u4700
  8316  00298A                     u4701:
  8317  00298A  EFEB  F014         	goto	l1118
  8318  00298E                     u4700:
  8319  00298E  0EFF               	movlw	255
  8320  002990  140E               	andwf	___flmul@grs^0,w,c
  8321  002992  6E09               	movwf	??___flmul^0,c
  8322  002994  0EFF               	movlw	255
  8323  002996  140F               	andwf	(___flmul@grs+1)^0,w,c
  8324  002998  6E0A               	movwf	(??___flmul+1)^0,c
  8325  00299A  0EFF               	movlw	255
  8326  00299C  1410               	andwf	(___flmul@grs+2)^0,w,c
  8327  00299E  6E0B               	movwf	(??___flmul+2)^0,c
  8328  0029A0  0E7F               	movlw	127
  8329  0029A2  1411               	andwf	(___flmul@grs+3)^0,w,c
  8330  0029A4  6E0C               	movwf	(??___flmul+3)^0,c
  8331  0029A6  5009               	movf	??___flmul^0,w,c
  8332  0029A8  100A               	iorwf	(??___flmul+1)^0,w,c
  8333  0029AA  100B               	iorwf	(??___flmul+2)^0,w,c
  8334  0029AC  100C               	iorwf	(??___flmul+3)^0,w,c
  8335  0029AE  B4D8               	btfsc	status,2,c
  8336  0029B0  EFDC  F014         	goto	u4711
  8337  0029B4  EFDE  F014         	goto	u4710
  8338  0029B8                     u4711:
  8339  0029B8  EFE2  F014         	goto	l1119
  8340  0029BC                     u4710:
  8341  0029BC                     l4356:
  8342  0029BC  0E01               	movlw	1
  8343  0029BE  6E12               	movwf	___flmul@aexp^0,c
  8344  0029C0  EFEB  F014         	goto	l1118
  8345  0029C4                     l1119:
  8346  0029C4  A014               	btfss	___flmul@prod^0,0,c
  8347  0029C6  EFE7  F014         	goto	u4721
  8348  0029CA  EFE9  F014         	goto	u4720
  8349  0029CE                     u4721:
  8350  0029CE  EFEB  F014         	goto	l1118
  8351  0029D2                     u4720:
  8352  0029D2  EFDE  F014         	goto	l4356
  8353  0029D6                     l1118:
  8354  0029D6  5012               	movf	___flmul@aexp^0,w,c
  8355  0029D8  B4D8               	btfsc	status,2,c
  8356  0029DA  EFF1  F014         	goto	u4731
  8357  0029DE  EFF3  F014         	goto	u4730
  8358  0029E2                     u4731:
  8359  0029E2  EF17  F015         	goto	l4368
  8360  0029E6                     u4730:
  8361  0029E6  0E01               	movlw	1
  8362  0029E8  2614               	addwf	___flmul@prod^0,f,c
  8363  0029EA  0E00               	movlw	0
  8364  0029EC  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8365  0029EE  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8366  0029F0  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8367  0029F2  A017               	btfss	(___flmul@prod+3)^0,0,c
  8368  0029F4  EFFE  F014         	goto	u4741
  8369  0029F8  EF00  F015         	goto	u4740
  8370  0029FC                     u4741:
  8371  0029FC  EF17  F015         	goto	l4368
  8372  002A00                     u4740:
  8373  002A00  C014  F009         	movff	___flmul@prod,??___flmul
  8374  002A04  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  8375  002A08  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  8376  002A0C  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  8377  002A10  340C               	rlcf	(??___flmul+3)^0,w,c
  8378  002A12  320C               	rrcf	(??___flmul+3)^0,f,c
  8379  002A14  320B               	rrcf	(??___flmul+2)^0,f,c
  8380  002A16  320A               	rrcf	(??___flmul+1)^0,f,c
  8381  002A18  3209               	rrcf	??___flmul^0,f,c
  8382  002A1A  C009  F014         	movff	??___flmul,___flmul@prod
  8383  002A1E  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  8384  002A22  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  8385  002A26  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  8386  002A2A  4A18               	infsnz	___flmul@temp^0,f,c
  8387  002A2C  2A19               	incf	(___flmul@temp+1)^0,f,c
  8388  002A2E                     l4368:
  8389  002A2E  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  8390  002A30  EF22  F015         	goto	u4751
  8391  002A34  5019               	movf	(___flmul@temp+1)^0,w,c
  8392  002A36  E108               	bnz	u4750
  8393  002A38  2818               	incf	___flmul@temp^0,w,c
  8394  002A3A  A0D8               	btfss	status,0,c
  8395  002A3C  EF22  F015         	goto	u4751
  8396  002A40  EF24  F015         	goto	u4750
  8397  002A44                     u4751:
  8398  002A44  EF2E  F015         	goto	l4372
  8399  002A48                     u4750:
  8400  002A48  0E00               	movlw	0
  8401  002A4A  6E14               	movwf	___flmul@prod^0,c
  8402  002A4C  0E00               	movlw	0
  8403  002A4E  6E15               	movwf	(___flmul@prod+1)^0,c
  8404  002A50  0E80               	movlw	128
  8405  002A52  6E16               	movwf	(___flmul@prod+2)^0,c
  8406  002A54  0E7F               	movlw	127
  8407  002A56  6E17               	movwf	(___flmul@prod+3)^0,c
  8408  002A58  EF5C  F015         	goto	l4384
  8409  002A5C                     l4372:
  8410  002A5C  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  8411  002A5E  EF3B  F015         	goto	u4760
  8412  002A62  5019               	movf	(___flmul@temp+1)^0,w,c
  8413  002A64  E106               	bnz	u4761
  8414  002A66  0418               	decf	___flmul@temp^0,w,c
  8415  002A68  B0D8               	btfsc	status,0,c
  8416  002A6A  EF39  F015         	goto	u4761
  8417  002A6E  EF3B  F015         	goto	u4760
  8418  002A72                     u4761:
  8419  002A72  EF47  F015         	goto	l1126
  8420  002A76                     u4760:
  8421  002A76  0E00               	movlw	0
  8422  002A78  6E14               	movwf	___flmul@prod^0,c
  8423  002A7A  0E00               	movlw	0
  8424  002A7C  6E15               	movwf	(___flmul@prod+1)^0,c
  8425  002A7E  0E00               	movlw	0
  8426  002A80  6E16               	movwf	(___flmul@prod+2)^0,c
  8427  002A82  0E00               	movlw	0
  8428  002A84  6E17               	movwf	(___flmul@prod+3)^0,c
  8429  002A86  0E00               	movlw	0
  8430  002A88  6E0D               	movwf	___flmul@sign^0,c
  8431  002A8A  EF5C  F015         	goto	l4384
  8432  002A8E                     l1126:
  8433  002A8E  C018  F013         	movff	___flmul@temp,___flmul@bexp
  8434  002A92  0EFF               	movlw	255
  8435  002A94  1614               	andwf	___flmul@prod^0,f,c
  8436  002A96  0EFF               	movlw	255
  8437  002A98  1615               	andwf	(___flmul@prod+1)^0,f,c
  8438  002A9A  0E7F               	movlw	127
  8439  002A9C  1616               	andwf	(___flmul@prod+2)^0,f,c
  8440  002A9E  0E00               	movlw	0
  8441  002AA0  1617               	andwf	(___flmul@prod+3)^0,f,c
  8442  002AA2  A013               	btfss	___flmul@bexp^0,0,c
  8443  002AA4  EF56  F015         	goto	u4771
  8444  002AA8  EF58  F015         	goto	u4770
  8445  002AAC                     u4771:
  8446  002AAC  EF59  F015         	goto	l4382
  8447  002AB0                     u4770:
  8448  002AB0  8E16               	bsf	(___flmul@prod+2)^0,7,c
  8449  002AB2                     l4382:
  8450  002AB2  90D8               	bcf	status,0,c
  8451  002AB4  3013               	rrcf	___flmul@bexp^0,w,c
  8452  002AB6  6E17               	movwf	(___flmul@prod+3)^0,c
  8453  002AB8                     l4384:
  8454  002AB8  500D               	movf	___flmul@sign^0,w,c
  8455  002ABA  1217               	iorwf	(___flmul@prod+3)^0,f,c
  8456  002ABC  C014  F001         	movff	___flmul@prod,?___flmul
  8457  002AC0  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  8458  002AC4  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  8459  002AC8  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  8460  002ACC                     l1113:
  8461  002ACC  0012               	return		;funcret
  8462  002ACE                     __end_of___flmul:
  8463                           	callstack 0
  8464                           
  8465 ;; *************** function ___flge *****************
  8466 ;; Defined at:
  8467 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
  8468 ;; Parameters:    Size  Location     Type
  8469 ;;  ff1             4   25[COMRAM] unsigned char 
  8470 ;;  ff2             4   29[COMRAM] unsigned char 
  8471 ;; Auto vars:     Size  Location     Type
  8472 ;;		None
  8473 ;; Return value:  Size  Location     Type
  8474 ;;		None               void
  8475 ;; Registers used:
  8476 ;;		wreg, status,2, status,0
  8477 ;; Tracked objects:
  8478 ;;		On entry : 0/0
  8479 ;;		On exit  : 0/0
  8480 ;;		Unchanged: 0/0
  8481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8482 ;;      Params:         8       0       0       0       0       0       0
  8483 ;;      Locals:         0       0       0       0       0       0       0
  8484 ;;      Temps:          4       0       0       0       0       0       0
  8485 ;;      Totals:        12       0       0       0       0       0       0
  8486 ;;Total ram usage:       12 bytes
  8487 ;; Hardware stack levels used:    1
  8488 ;; Hardware stack levels required when called:    1
  8489 ;; This function calls:
  8490 ;;		Nothing
  8491 ;; This function is called by:
  8492 ;;		_stateMachine
  8493 ;;		_efgtoa
  8494 ;; This function uses a non-reentrant model
  8495 ;;
  8496                           
  8497                           	psect	text22
  8498  003BAA                     __ptext22:
  8499                           	callstack 0
  8500  003BAA                     ___flge:
  8501                           	callstack 23
  8502  003BAA  0E00               	movlw	0
  8503  003BAC  141A               	andwf	___flge@ff1^0,w,c
  8504  003BAE  6E22               	movwf	??___flge^0,c
  8505  003BB0  0E00               	movlw	0
  8506  003BB2  141B               	andwf	(___flge@ff1+1)^0,w,c
  8507  003BB4  6E23               	movwf	(??___flge+1)^0,c
  8508  003BB6  0E80               	movlw	128
  8509  003BB8  141C               	andwf	(___flge@ff1+2)^0,w,c
  8510  003BBA  6E24               	movwf	(??___flge+2)^0,c
  8511  003BBC  0E7F               	movlw	127
  8512  003BBE  141D               	andwf	(___flge@ff1+3)^0,w,c
  8513  003BC0  6E25               	movwf	(??___flge+3)^0,c
  8514  003BC2  5022               	movf	??___flge^0,w,c
  8515  003BC4  1023               	iorwf	(??___flge+1)^0,w,c
  8516  003BC6  1024               	iorwf	(??___flge+2)^0,w,c
  8517  003BC8  1025               	iorwf	(??___flge+3)^0,w,c
  8518  003BCA  A4D8               	btfss	status,2,c
  8519  003BCC  EFEA  F01D         	goto	u4931
  8520  003BD0  EFEC  F01D         	goto	u4930
  8521  003BD4                     u4931:
  8522  003BD4  EFF4  F01D         	goto	l4496
  8523  003BD8                     u4930:
  8524  003BD8  0E00               	movlw	0
  8525  003BDA  6E1A               	movwf	___flge@ff1^0,c
  8526  003BDC  0E00               	movlw	0
  8527  003BDE  6E1B               	movwf	(___flge@ff1+1)^0,c
  8528  003BE0  0E00               	movlw	0
  8529  003BE2  6E1C               	movwf	(___flge@ff1+2)^0,c
  8530  003BE4  0E00               	movlw	0
  8531  003BE6  6E1D               	movwf	(___flge@ff1+3)^0,c
  8532  003BE8                     l4496:
  8533  003BE8  0E00               	movlw	0
  8534  003BEA  141E               	andwf	___flge@ff2^0,w,c
  8535  003BEC  6E22               	movwf	??___flge^0,c
  8536  003BEE  0E00               	movlw	0
  8537  003BF0  141F               	andwf	(___flge@ff2+1)^0,w,c
  8538  003BF2  6E23               	movwf	(??___flge+1)^0,c
  8539  003BF4  0E80               	movlw	128
  8540  003BF6  1420               	andwf	(___flge@ff2+2)^0,w,c
  8541  003BF8  6E24               	movwf	(??___flge+2)^0,c
  8542  003BFA  0E7F               	movlw	127
  8543  003BFC  1421               	andwf	(___flge@ff2+3)^0,w,c
  8544  003BFE  6E25               	movwf	(??___flge+3)^0,c
  8545  003C00  5022               	movf	??___flge^0,w,c
  8546  003C02  1023               	iorwf	(??___flge+1)^0,w,c
  8547  003C04  1024               	iorwf	(??___flge+2)^0,w,c
  8548  003C06  1025               	iorwf	(??___flge+3)^0,w,c
  8549  003C08  A4D8               	btfss	status,2,c
  8550  003C0A  EF09  F01E         	goto	u4941
  8551  003C0E  EF0B  F01E         	goto	u4940
  8552  003C12                     u4941:
  8553  003C12  EF13  F01E         	goto	l4500
  8554  003C16                     u4940:
  8555  003C16  0E00               	movlw	0
  8556  003C18  6E1E               	movwf	___flge@ff2^0,c
  8557  003C1A  0E00               	movlw	0
  8558  003C1C  6E1F               	movwf	(___flge@ff2+1)^0,c
  8559  003C1E  0E00               	movlw	0
  8560  003C20  6E20               	movwf	(___flge@ff2+2)^0,c
  8561  003C22  0E00               	movlw	0
  8562  003C24  6E21               	movwf	(___flge@ff2+3)^0,c
  8563  003C26                     l4500:
  8564  003C26  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  8565  003C28  EF18  F01E         	goto	u4951
  8566  003C2C  EF1A  F01E         	goto	u4950
  8567  003C30                     u4951:
  8568  003C30  EF23  F01E         	goto	l4504
  8569  003C34                     u4950:
  8570  003C34  6C1A               	negf	___flge@ff1^0,c
  8571  003C36  1E1B               	comf	(___flge@ff1+1)^0,f,c
  8572  003C38  B0D8               	btfsc	status,0,c
  8573  003C3A  2A1B               	incf	(___flge@ff1+1)^0,f,c
  8574  003C3C  1E1C               	comf	(___flge@ff1+2)^0,f,c
  8575  003C3E  B0D8               	btfsc	status,0,c
  8576  003C40  2A1C               	incf	(___flge@ff1+2)^0,f,c
  8577  003C42  0E80               	movlw	128
  8578  003C44  561D               	subfwb	(___flge@ff1+3)^0,f,c
  8579  003C46                     l4504:
  8580  003C46  AE21               	btfss	(___flge@ff2+3)^0,7,c
  8581  003C48  EF28  F01E         	goto	u4961
  8582  003C4C  EF2A  F01E         	goto	u4960
  8583  003C50                     u4961:
  8584  003C50  EF33  F01E         	goto	l760
  8585  003C54                     u4960:
  8586  003C54  6C1E               	negf	___flge@ff2^0,c
  8587  003C56  1E1F               	comf	(___flge@ff2+1)^0,f,c
  8588  003C58  B0D8               	btfsc	status,0,c
  8589  003C5A  2A1F               	incf	(___flge@ff2+1)^0,f,c
  8590  003C5C  1E20               	comf	(___flge@ff2+2)^0,f,c
  8591  003C5E  B0D8               	btfsc	status,0,c
  8592  003C60  2A20               	incf	(___flge@ff2+2)^0,f,c
  8593  003C62  0E80               	movlw	128
  8594  003C64  5621               	subfwb	(___flge@ff2+3)^0,f,c
  8595  003C66                     l760:
  8596  003C66  0E00               	movlw	0
  8597  003C68  1A1A               	xorwf	___flge@ff1^0,f,c
  8598  003C6A  0E00               	movlw	0
  8599  003C6C  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  8600  003C6E  0E00               	movlw	0
  8601  003C70  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  8602  003C72  0E80               	movlw	128
  8603  003C74  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  8604  003C76  0E00               	movlw	0
  8605  003C78  1A1E               	xorwf	___flge@ff2^0,f,c
  8606  003C7A  0E00               	movlw	0
  8607  003C7C  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  8608  003C7E  0E00               	movlw	0
  8609  003C80  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  8610  003C82  0E80               	movlw	128
  8611  003C84  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  8612  003C86  501E               	movf	___flge@ff2^0,w,c
  8613  003C88  5C1A               	subwf	___flge@ff1^0,w,c
  8614  003C8A  501F               	movf	(___flge@ff2+1)^0,w,c
  8615  003C8C  581B               	subwfb	(___flge@ff1+1)^0,w,c
  8616  003C8E  5020               	movf	(___flge@ff2+2)^0,w,c
  8617  003C90  581C               	subwfb	(___flge@ff1+2)^0,w,c
  8618  003C92  5021               	movf	(___flge@ff2+3)^0,w,c
  8619  003C94  581D               	subwfb	(___flge@ff1+3)^0,w,c
  8620  003C96  B0D8               	btfsc	status,0,c
  8621  003C98  EF50  F01E         	goto	u4971
  8622  003C9C  EF52  F01E         	goto	u4970
  8623  003CA0                     u4971:
  8624  003CA0  EF55  F01E         	goto	l4510
  8625  003CA4                     u4970:
  8626  003CA4  90D8               	bcf	status,0,c
  8627  003CA6  EF56  F01E         	goto	l765
  8628  003CAA                     l4510:
  8629  003CAA  80D8               	bsf	status,0,c
  8630  003CAC                     l765:
  8631  003CAC  0012               	return		;funcret
  8632  003CAE                     __end_of___flge:
  8633                           	callstack 0
  8634                           
  8635 ;; *************** function ___fleq *****************
  8636 ;; Defined at:
  8637 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fleq.c"
  8638 ;; Parameters:    Size  Location     Type
  8639 ;;  ff1             4    0[COMRAM] unsigned char 
  8640 ;;  ff2             4    4[COMRAM] unsigned char 
  8641 ;; Auto vars:     Size  Location     Type
  8642 ;;		None
  8643 ;; Return value:  Size  Location     Type
  8644 ;;		None               void
  8645 ;; Registers used:
  8646 ;;		wreg, status,2, status,0
  8647 ;; Tracked objects:
  8648 ;;		On entry : 0/0
  8649 ;;		On exit  : 0/0
  8650 ;;		Unchanged: 0/0
  8651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8652 ;;      Params:         8       0       0       0       0       0       0
  8653 ;;      Locals:         0       0       0       0       0       0       0
  8654 ;;      Temps:          4       0       0       0       0       0       0
  8655 ;;      Totals:        12       0       0       0       0       0       0
  8656 ;;Total ram usage:       12 bytes
  8657 ;; Hardware stack levels used:    1
  8658 ;; Hardware stack levels required when called:    1
  8659 ;; This function calls:
  8660 ;;		Nothing
  8661 ;; This function is called by:
  8662 ;;		_efgtoa
  8663 ;; This function uses a non-reentrant model
  8664 ;;
  8665                           
  8666                           	psect	text23
  8667  004256                     __ptext23:
  8668                           	callstack 0
  8669  004256                     ___fleq:
  8670                           	callstack 23
  8671  004256  0E00               	movlw	0
  8672  004258  1401               	andwf	___fleq@ff1^0,w,c
  8673  00425A  6E09               	movwf	??___fleq^0,c
  8674  00425C  0E00               	movlw	0
  8675  00425E  1402               	andwf	(___fleq@ff1+1)^0,w,c
  8676  004260  6E0A               	movwf	(??___fleq+1)^0,c
  8677  004262  0E80               	movlw	128
  8678  004264  1403               	andwf	(___fleq@ff1+2)^0,w,c
  8679  004266  6E0B               	movwf	(??___fleq+2)^0,c
  8680  004268  0E7F               	movlw	127
  8681  00426A  1404               	andwf	(___fleq@ff1+3)^0,w,c
  8682  00426C  6E0C               	movwf	(??___fleq+3)^0,c
  8683  00426E  5009               	movf	??___fleq^0,w,c
  8684  004270  100A               	iorwf	(??___fleq+1)^0,w,c
  8685  004272  100B               	iorwf	(??___fleq+2)^0,w,c
  8686  004274  100C               	iorwf	(??___fleq+3)^0,w,c
  8687  004276  A4D8               	btfss	status,2,c
  8688  004278  EF40  F021         	goto	u4901
  8689  00427C  EF42  F021         	goto	u4900
  8690  004280                     u4901:
  8691  004280  EF4A  F021         	goto	l4480
  8692  004284                     u4900:
  8693  004284  0E00               	movlw	0
  8694  004286  6E01               	movwf	___fleq@ff1^0,c
  8695  004288  0E00               	movlw	0
  8696  00428A  6E02               	movwf	(___fleq@ff1+1)^0,c
  8697  00428C  0E00               	movlw	0
  8698  00428E  6E03               	movwf	(___fleq@ff1+2)^0,c
  8699  004290  0E00               	movlw	0
  8700  004292  6E04               	movwf	(___fleq@ff1+3)^0,c
  8701  004294                     l4480:
  8702  004294  0E00               	movlw	0
  8703  004296  1405               	andwf	___fleq@ff2^0,w,c
  8704  004298  6E09               	movwf	??___fleq^0,c
  8705  00429A  0E00               	movlw	0
  8706  00429C  1406               	andwf	(___fleq@ff2+1)^0,w,c
  8707  00429E  6E0A               	movwf	(??___fleq+1)^0,c
  8708  0042A0  0E80               	movlw	128
  8709  0042A2  1407               	andwf	(___fleq@ff2+2)^0,w,c
  8710  0042A4  6E0B               	movwf	(??___fleq+2)^0,c
  8711  0042A6  0E7F               	movlw	127
  8712  0042A8  1408               	andwf	(___fleq@ff2+3)^0,w,c
  8713  0042AA  6E0C               	movwf	(??___fleq+3)^0,c
  8714  0042AC  5009               	movf	??___fleq^0,w,c
  8715  0042AE  100A               	iorwf	(??___fleq+1)^0,w,c
  8716  0042B0  100B               	iorwf	(??___fleq+2)^0,w,c
  8717  0042B2  100C               	iorwf	(??___fleq+3)^0,w,c
  8718  0042B4  A4D8               	btfss	status,2,c
  8719  0042B6  EF5F  F021         	goto	u4911
  8720  0042BA  EF61  F021         	goto	u4910
  8721  0042BE                     u4911:
  8722  0042BE  EF69  F021         	goto	l4484
  8723  0042C2                     u4910:
  8724  0042C2  0E00               	movlw	0
  8725  0042C4  6E05               	movwf	___fleq@ff2^0,c
  8726  0042C6  0E00               	movlw	0
  8727  0042C8  6E06               	movwf	(___fleq@ff2+1)^0,c
  8728  0042CA  0E00               	movlw	0
  8729  0042CC  6E07               	movwf	(___fleq@ff2+2)^0,c
  8730  0042CE  0E00               	movlw	0
  8731  0042D0  6E08               	movwf	(___fleq@ff2+3)^0,c
  8732  0042D2                     l4484:
  8733  0042D2  5005               	movf	___fleq@ff2^0,w,c
  8734  0042D4  1801               	xorwf	___fleq@ff1^0,w,c
  8735  0042D6  E10F               	bnz	u4920
  8736  0042D8  5006               	movf	(___fleq@ff2+1)^0,w,c
  8737  0042DA  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  8738  0042DC  E10C               	bnz	u4920
  8739  0042DE  5007               	movf	(___fleq@ff2+2)^0,w,c
  8740  0042E0  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  8741  0042E2  E109               	bnz	u4920
  8742  0042E4  5008               	movf	(___fleq@ff2+3)^0,w,c
  8743  0042E6  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  8744  0042E8  B4D8               	btfsc	status,2,c
  8745  0042EA  EF79  F021         	goto	u4921
  8746  0042EE  EF7B  F021         	goto	u4920
  8747  0042F2                     u4921:
  8748  0042F2  EF7E  F021         	goto	l4488
  8749  0042F6                     u4920:
  8750  0042F6  90D8               	bcf	status,0,c
  8751  0042F8  EF7F  F021         	goto	l754
  8752  0042FC                     l4488:
  8753  0042FC  80D8               	bsf	status,0,c
  8754  0042FE                     l754:
  8755  0042FE  0012               	return		;funcret
  8756  004300                     __end_of___fleq:
  8757                           	callstack 0
  8758                           
  8759 ;; *************** function ___fldiv *****************
  8760 ;; Defined at:
  8761 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
  8762 ;; Parameters:    Size  Location     Type
  8763 ;;  b               4    0[COMRAM] unsigned char 
  8764 ;;  a               4    4[COMRAM] unsigned char 
  8765 ;; Auto vars:     Size  Location     Type
  8766 ;;  grs             4   19[COMRAM] unsigned long 
  8767 ;;  rem             4   12[COMRAM] unsigned long 
  8768 ;;  new_exp         2   17[COMRAM] short 
  8769 ;;  aexp            1   24[COMRAM] unsigned char 
  8770 ;;  bexp            1   23[COMRAM] unsigned char 
  8771 ;;  sign            1   16[COMRAM] unsigned char 
  8772 ;; Return value:  Size  Location     Type
  8773 ;;                  4    0[COMRAM] unsigned char 
  8774 ;; Registers used:
  8775 ;;		wreg, status,2, status,0
  8776 ;; Tracked objects:
  8777 ;;		On entry : 0/0
  8778 ;;		On exit  : 0/0
  8779 ;;		Unchanged: 0/0
  8780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8781 ;;      Params:         8       0       0       0       0       0       0
  8782 ;;      Locals:        13       0       0       0       0       0       0
  8783 ;;      Temps:          4       0       0       0       0       0       0
  8784 ;;      Totals:        25       0       0       0       0       0       0
  8785 ;;Total ram usage:       25 bytes
  8786 ;; Hardware stack levels used:    1
  8787 ;; Hardware stack levels required when called:    1
  8788 ;; This function calls:
  8789 ;;		Nothing
  8790 ;; This function is called by:
  8791 ;;		_efgtoa
  8792 ;;		_scanAdcConversion
  8793 ;; This function uses a non-reentrant model
  8794 ;;
  8795                           
  8796                           	psect	text24
  8797  002ACE                     __ptext24:
  8798                           	callstack 0
  8799  002ACE                     ___fldiv:
  8800                           	callstack 23
  8801  002ACE  5004               	movf	(___fldiv@b+3)^0,w,c
  8802  002AD0  0B80               	andlw	128
  8803  002AD2  6E11               	movwf	___fldiv@sign^0,c
  8804  002AD4  5004               	movf	(___fldiv@b+3)^0,w,c
  8805  002AD6  2404               	addwf	(___fldiv@b+3)^0,w,c
  8806  002AD8  6E18               	movwf	___fldiv@bexp^0,c
  8807  002ADA  AE03               	btfss	(___fldiv@b+2)^0,7,c
  8808  002ADC  EF72  F015         	goto	u4361
  8809  002AE0  EF74  F015         	goto	u4360
  8810  002AE4                     u4361:
  8811  002AE4  EF75  F015         	goto	l4128
  8812  002AE8                     u4360:
  8813  002AE8  8018               	bsf	___fldiv@bexp^0,0,c
  8814  002AEA                     l4128:
  8815  002AEA  5018               	movf	___fldiv@bexp^0,w,c
  8816  002AEC  B4D8               	btfsc	status,2,c
  8817  002AEE  EF7B  F015         	goto	u4371
  8818  002AF2  EF7D  F015         	goto	u4370
  8819  002AF6                     u4371:
  8820  002AF6  EF92  F015         	goto	l4138
  8821  002AFA                     u4370:
  8822  002AFA  2818               	incf	___fldiv@bexp^0,w,c
  8823  002AFC  A4D8               	btfss	status,2,c
  8824  002AFE  EF83  F015         	goto	u4381
  8825  002B02  EF85  F015         	goto	u4380
  8826  002B06                     u4381:
  8827  002B06  EF8D  F015         	goto	l4134
  8828  002B0A                     u4380:
  8829  002B0A  0E00               	movlw	0
  8830  002B0C  6E01               	movwf	___fldiv@b^0,c
  8831  002B0E  0E00               	movlw	0
  8832  002B10  6E02               	movwf	(___fldiv@b+1)^0,c
  8833  002B12  0E00               	movlw	0
  8834  002B14  6E03               	movwf	(___fldiv@b+2)^0,c
  8835  002B16  0E00               	movlw	0
  8836  002B18  6E04               	movwf	(___fldiv@b+3)^0,c
  8837  002B1A                     l4134:
  8838  002B1A  8E03               	bsf	(___fldiv@b+2)^0,7,c
  8839  002B1C  0E00               	movlw	0
  8840  002B1E  6E04               	movwf	(___fldiv@b+3)^0,c
  8841  002B20  EF9A  F015         	goto	l4140
  8842  002B24                     l4138:
  8843  002B24  0E00               	movlw	0
  8844  002B26  6E01               	movwf	___fldiv@b^0,c
  8845  002B28  0E00               	movlw	0
  8846  002B2A  6E02               	movwf	(___fldiv@b+1)^0,c
  8847  002B2C  0E00               	movlw	0
  8848  002B2E  6E03               	movwf	(___fldiv@b+2)^0,c
  8849  002B30  0E00               	movlw	0
  8850  002B32  6E04               	movwf	(___fldiv@b+3)^0,c
  8851  002B34                     l4140:
  8852  002B34  5008               	movf	(___fldiv@a+3)^0,w,c
  8853  002B36  0B80               	andlw	128
  8854  002B38  1A11               	xorwf	___fldiv@sign^0,f,c
  8855  002B3A  5008               	movf	(___fldiv@a+3)^0,w,c
  8856  002B3C  2408               	addwf	(___fldiv@a+3)^0,w,c
  8857  002B3E  6E19               	movwf	___fldiv@aexp^0,c
  8858  002B40  AE07               	btfss	(___fldiv@a+2)^0,7,c
  8859  002B42  EFA5  F015         	goto	u4391
  8860  002B46  EFA7  F015         	goto	u4390
  8861  002B4A                     u4391:
  8862  002B4A  EFA8  F015         	goto	l4148
  8863  002B4E                     u4390:
  8864  002B4E  8019               	bsf	___fldiv@aexp^0,0,c
  8865  002B50                     l4148:
  8866  002B50  5019               	movf	___fldiv@aexp^0,w,c
  8867  002B52  B4D8               	btfsc	status,2,c
  8868  002B54  EFAE  F015         	goto	u4401
  8869  002B58  EFB0  F015         	goto	u4400
  8870  002B5C                     u4401:
  8871  002B5C  EFC5  F015         	goto	l4158
  8872  002B60                     u4400:
  8873  002B60  2819               	incf	___fldiv@aexp^0,w,c
  8874  002B62  A4D8               	btfss	status,2,c
  8875  002B64  EFB6  F015         	goto	u4411
  8876  002B68  EFB8  F015         	goto	u4410
  8877  002B6C                     u4411:
  8878  002B6C  EFC0  F015         	goto	l4154
  8879  002B70                     u4410:
  8880  002B70  0E00               	movlw	0
  8881  002B72  6E05               	movwf	___fldiv@a^0,c
  8882  002B74  0E00               	movlw	0
  8883  002B76  6E06               	movwf	(___fldiv@a+1)^0,c
  8884  002B78  0E00               	movlw	0
  8885  002B7A  6E07               	movwf	(___fldiv@a+2)^0,c
  8886  002B7C  0E00               	movlw	0
  8887  002B7E  6E08               	movwf	(___fldiv@a+3)^0,c
  8888  002B80                     l4154:
  8889  002B80  8E07               	bsf	(___fldiv@a+2)^0,7,c
  8890  002B82  0E00               	movlw	0
  8891  002B84  6E08               	movwf	(___fldiv@a+3)^0,c
  8892  002B86  EFCD  F015         	goto	l4160
  8893  002B8A                     l4158:
  8894  002B8A  0E00               	movlw	0
  8895  002B8C  6E05               	movwf	___fldiv@a^0,c
  8896  002B8E  0E00               	movlw	0
  8897  002B90  6E06               	movwf	(___fldiv@a+1)^0,c
  8898  002B92  0E00               	movlw	0
  8899  002B94  6E07               	movwf	(___fldiv@a+2)^0,c
  8900  002B96  0E00               	movlw	0
  8901  002B98  6E08               	movwf	(___fldiv@a+3)^0,c
  8902  002B9A                     l4160:
  8903  002B9A  5005               	movf	___fldiv@a^0,w,c
  8904  002B9C  1006               	iorwf	(___fldiv@a+1)^0,w,c
  8905  002B9E  1007               	iorwf	(___fldiv@a+2)^0,w,c
  8906  002BA0  1008               	iorwf	(___fldiv@a+3)^0,w,c
  8907  002BA2  A4D8               	btfss	status,2,c
  8908  002BA4  EFD6  F015         	goto	u4421
  8909  002BA8  EFD8  F015         	goto	u4420
  8910  002BAC                     u4421:
  8911  002BAC  EFF0  F015         	goto	l4172
  8912  002BB0                     u4420:
  8913  002BB0  0E00               	movlw	0
  8914  002BB2  6E01               	movwf	___fldiv@b^0,c
  8915  002BB4  0E00               	movlw	0
  8916  002BB6  6E02               	movwf	(___fldiv@b+1)^0,c
  8917  002BB8  0E00               	movlw	0
  8918  002BBA  6E03               	movwf	(___fldiv@b+2)^0,c
  8919  002BBC  0E00               	movlw	0
  8920  002BBE  6E04               	movwf	(___fldiv@b+3)^0,c
  8921  002BC0  0E80               	movlw	128
  8922  002BC2  1203               	iorwf	(___fldiv@b+2)^0,f,c
  8923  002BC4  0E7F               	movlw	127
  8924  002BC6  1204               	iorwf	(___fldiv@b+3)^0,f,c
  8925  002BC8                     l4166:
  8926  002BC8  5011               	movf	___fldiv@sign^0,w,c
  8927  002BCA  1204               	iorwf	(___fldiv@b+3)^0,f,c
  8928  002BCC  C001  F001         	movff	___fldiv@b,?___fldiv
  8929  002BD0  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  8930  002BD4  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  8931  002BD8  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  8932  002BDC  EF33  F017         	goto	l1077
  8933  002BE0                     l4172:
  8934  002BE0  5018               	movf	___fldiv@bexp^0,w,c
  8935  002BE2  A4D8               	btfss	status,2,c
  8936  002BE4  EFF6  F015         	goto	u4431
  8937  002BE8  EFF8  F015         	goto	u4430
  8938  002BEC                     u4431:
  8939  002BEC  EF02  F016         	goto	l4180
  8940  002BF0                     u4430:
  8941  002BF0  0E00               	movlw	0
  8942  002BF2  6E01               	movwf	?___fldiv^0,c
  8943  002BF4  0E00               	movlw	0
  8944  002BF6  6E02               	movwf	(?___fldiv+1)^0,c
  8945  002BF8  0E00               	movlw	0
  8946  002BFA  6E03               	movwf	(?___fldiv+2)^0,c
  8947  002BFC  0E00               	movlw	0
  8948  002BFE  6E04               	movwf	(?___fldiv+3)^0,c
  8949  002C00  EF33  F017         	goto	l1077
  8950  002C04                     l4180:
  8951  002C04  5019               	movf	___fldiv@aexp^0,w,c
  8952  002C06  C018  F009         	movff	___fldiv@bexp,??___fldiv
  8953  002C0A  6A0A               	clrf	(??___fldiv+1)^0,c
  8954  002C0C  5E09               	subwf	??___fldiv^0,f,c
  8955  002C0E  0E00               	movlw	0
  8956  002C10  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  8957  002C12  0E7F               	movlw	127
  8958  002C14  2409               	addwf	??___fldiv^0,w,c
  8959  002C16  6E12               	movwf	___fldiv@new_exp^0,c
  8960  002C18  0E00               	movlw	0
  8961  002C1A  200A               	addwfc	(??___fldiv+1)^0,w,c
  8962  002C1C  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8963  002C1E  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  8964  002C22  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  8965  002C26  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  8966  002C2A  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  8967  002C2E  0E00               	movlw	0
  8968  002C30  6E01               	movwf	___fldiv@b^0,c
  8969  002C32  0E00               	movlw	0
  8970  002C34  6E02               	movwf	(___fldiv@b+1)^0,c
  8971  002C36  0E00               	movlw	0
  8972  002C38  6E03               	movwf	(___fldiv@b+2)^0,c
  8973  002C3A  0E00               	movlw	0
  8974  002C3C  6E04               	movwf	(___fldiv@b+3)^0,c
  8975  002C3E  0E00               	movlw	0
  8976  002C40  6E14               	movwf	___fldiv@grs^0,c
  8977  002C42  0E00               	movlw	0
  8978  002C44  6E15               	movwf	(___fldiv@grs+1)^0,c
  8979  002C46  0E00               	movlw	0
  8980  002C48  6E16               	movwf	(___fldiv@grs+2)^0,c
  8981  002C4A  0E00               	movlw	0
  8982  002C4C  6E17               	movwf	(___fldiv@grs+3)^0,c
  8983  002C4E  0E00               	movlw	0
  8984  002C50  6E19               	movwf	___fldiv@aexp^0,c
  8985  002C52  EF63  F016         	goto	l1079
  8986  002C56                     l4190:
  8987  002C56  5019               	movf	___fldiv@aexp^0,w,c
  8988  002C58  B4D8               	btfsc	status,2,c
  8989  002C5A  EF31  F016         	goto	u4441
  8990  002C5E  EF33  F016         	goto	u4440
  8991  002C62                     u4441:
  8992  002C62  EF4A  F016         	goto	l4198
  8993  002C66                     u4440:
  8994  002C66  90D8               	bcf	status,0,c
  8995  002C68  360D               	rlcf	___fldiv@rem^0,f,c
  8996  002C6A  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  8997  002C6C  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  8998  002C6E  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  8999  002C70  90D8               	bcf	status,0,c
  9000  002C72  3601               	rlcf	___fldiv@b^0,f,c
  9001  002C74  3602               	rlcf	(___fldiv@b+1)^0,f,c
  9002  002C76  3603               	rlcf	(___fldiv@b+2)^0,f,c
  9003  002C78  3604               	rlcf	(___fldiv@b+3)^0,f,c
  9004  002C7A  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  9005  002C7C  EF42  F016         	goto	u4451
  9006  002C80  EF44  F016         	goto	u4450
  9007  002C84                     u4451:
  9008  002C84  EF45  F016         	goto	l1082
  9009  002C88                     u4450:
  9010  002C88  8001               	bsf	___fldiv@b^0,0,c
  9011  002C8A                     l1082:
  9012  002C8A  90D8               	bcf	status,0,c
  9013  002C8C  3614               	rlcf	___fldiv@grs^0,f,c
  9014  002C8E  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  9015  002C90  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  9016  002C92  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  9017  002C94                     l4198:
  9018  002C94  5005               	movf	___fldiv@a^0,w,c
  9019  002C96  5C0D               	subwf	___fldiv@rem^0,w,c
  9020  002C98  5006               	movf	(___fldiv@a+1)^0,w,c
  9021  002C9A  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  9022  002C9C  5007               	movf	(___fldiv@a+2)^0,w,c
  9023  002C9E  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  9024  002CA0  5008               	movf	(___fldiv@a+3)^0,w,c
  9025  002CA2  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  9026  002CA4  A0D8               	btfss	status,0,c
  9027  002CA6  EF57  F016         	goto	u4461
  9028  002CAA  EF59  F016         	goto	u4460
  9029  002CAE                     u4461:
  9030  002CAE  EF62  F016         	goto	l4204
  9031  002CB2                     u4460:
  9032  002CB2  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  9033  002CB4  5005               	movf	___fldiv@a^0,w,c
  9034  002CB6  5E0D               	subwf	___fldiv@rem^0,f,c
  9035  002CB8  5006               	movf	(___fldiv@a+1)^0,w,c
  9036  002CBA  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  9037  002CBC  5007               	movf	(___fldiv@a+2)^0,w,c
  9038  002CBE  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  9039  002CC0  5008               	movf	(___fldiv@a+3)^0,w,c
  9040  002CC2  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  9041  002CC4                     l4204:
  9042  002CC4  2A19               	incf	___fldiv@aexp^0,f,c
  9043  002CC6                     l1079:
  9044  002CC6  0E19               	movlw	25
  9045  002CC8  6419               	cpfsgt	___fldiv@aexp^0,c
  9046  002CCA  EF69  F016         	goto	u4471
  9047  002CCE  EF6B  F016         	goto	u4470
  9048  002CD2                     u4471:
  9049  002CD2  EF2B  F016         	goto	l4190
  9050  002CD6                     u4470:
  9051  002CD6  500D               	movf	___fldiv@rem^0,w,c
  9052  002CD8  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  9053  002CDA  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  9054  002CDC  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  9055  002CDE  B4D8               	btfsc	status,2,c
  9056  002CE0  EF74  F016         	goto	u4481
  9057  002CE4  EF76  F016         	goto	u4480
  9058  002CE8                     u4481:
  9059  002CE8  EF8E  F016         	goto	l4216
  9060  002CEC                     u4480:
  9061  002CEC  8014               	bsf	___fldiv@grs^0,0,c
  9062  002CEE  EF8E  F016         	goto	l4216
  9063  002CF2                     l4210:
  9064  002CF2  90D8               	bcf	status,0,c
  9065  002CF4  3601               	rlcf	___fldiv@b^0,f,c
  9066  002CF6  3602               	rlcf	(___fldiv@b+1)^0,f,c
  9067  002CF8  3603               	rlcf	(___fldiv@b+2)^0,f,c
  9068  002CFA  3604               	rlcf	(___fldiv@b+3)^0,f,c
  9069  002CFC  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  9070  002CFE  EF83  F016         	goto	u4491
  9071  002D02  EF85  F016         	goto	u4490
  9072  002D06                     u4491:
  9073  002D06  EF86  F016         	goto	l1088
  9074  002D0A                     u4490:
  9075  002D0A  8001               	bsf	___fldiv@b^0,0,c
  9076  002D0C                     l1088:
  9077  002D0C  90D8               	bcf	status,0,c
  9078  002D0E  3614               	rlcf	___fldiv@grs^0,f,c
  9079  002D10  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  9080  002D12  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  9081  002D14  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  9082  002D16  0612               	decf	___fldiv@new_exp^0,f,c
  9083  002D18  A0D8               	btfss	status,0,c
  9084  002D1A  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  9085  002D1C                     l4216:
  9086  002D1C  AE03               	btfss	(___fldiv@b+2)^0,7,c
  9087  002D1E  EF93  F016         	goto	u4501
  9088  002D22  EF95  F016         	goto	u4500
  9089  002D26                     u4501:
  9090  002D26  EF79  F016         	goto	l4210
  9091  002D2A                     u4500:
  9092  002D2A  0E00               	movlw	0
  9093  002D2C  6E19               	movwf	___fldiv@aexp^0,c
  9094  002D2E  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  9095  002D30  EF9C  F016         	goto	u4511
  9096  002D34  EF9E  F016         	goto	u4510
  9097  002D38                     u4511:
  9098  002D38  EFC2  F016         	goto	l1090
  9099  002D3C                     u4510:
  9100  002D3C  0EFF               	movlw	255
  9101  002D3E  1414               	andwf	___fldiv@grs^0,w,c
  9102  002D40  6E09               	movwf	??___fldiv^0,c
  9103  002D42  0EFF               	movlw	255
  9104  002D44  1415               	andwf	(___fldiv@grs+1)^0,w,c
  9105  002D46  6E0A               	movwf	(??___fldiv+1)^0,c
  9106  002D48  0EFF               	movlw	255
  9107  002D4A  1416               	andwf	(___fldiv@grs+2)^0,w,c
  9108  002D4C  6E0B               	movwf	(??___fldiv+2)^0,c
  9109  002D4E  0E7F               	movlw	127
  9110  002D50  1417               	andwf	(___fldiv@grs+3)^0,w,c
  9111  002D52  6E0C               	movwf	(??___fldiv+3)^0,c
  9112  002D54  5009               	movf	??___fldiv^0,w,c
  9113  002D56  100A               	iorwf	(??___fldiv+1)^0,w,c
  9114  002D58  100B               	iorwf	(??___fldiv+2)^0,w,c
  9115  002D5A  100C               	iorwf	(??___fldiv+3)^0,w,c
  9116  002D5C  B4D8               	btfsc	status,2,c
  9117  002D5E  EFB3  F016         	goto	u4521
  9118  002D62  EFB5  F016         	goto	u4520
  9119  002D66                     u4521:
  9120  002D66  EFB9  F016         	goto	l1091
  9121  002D6A                     u4520:
  9122  002D6A                     l4224:
  9123  002D6A  0E01               	movlw	1
  9124  002D6C  6E19               	movwf	___fldiv@aexp^0,c
  9125  002D6E  EFC2  F016         	goto	l1090
  9126  002D72                     l1091:
  9127  002D72  A001               	btfss	___fldiv@b^0,0,c
  9128  002D74  EFBE  F016         	goto	u4531
  9129  002D78  EFC0  F016         	goto	u4530
  9130  002D7C                     u4531:
  9131  002D7C  EFC2  F016         	goto	l1090
  9132  002D80                     u4530:
  9133  002D80  EFB5  F016         	goto	l4224
  9134  002D84                     l1090:
  9135  002D84  5019               	movf	___fldiv@aexp^0,w,c
  9136  002D86  B4D8               	btfsc	status,2,c
  9137  002D88  EFC8  F016         	goto	u4541
  9138  002D8C  EFCA  F016         	goto	u4540
  9139  002D90                     u4541:
  9140  002D90  EFEE  F016         	goto	l4236
  9141  002D94                     u4540:
  9142  002D94  0E01               	movlw	1
  9143  002D96  2601               	addwf	___fldiv@b^0,f,c
  9144  002D98  0E00               	movlw	0
  9145  002D9A  2202               	addwfc	(___fldiv@b+1)^0,f,c
  9146  002D9C  2203               	addwfc	(___fldiv@b+2)^0,f,c
  9147  002D9E  2204               	addwfc	(___fldiv@b+3)^0,f,c
  9148  002DA0  A004               	btfss	(___fldiv@b+3)^0,0,c
  9149  002DA2  EFD5  F016         	goto	u4551
  9150  002DA6  EFD7  F016         	goto	u4550
  9151  002DAA                     u4551:
  9152  002DAA  EFEE  F016         	goto	l4236
  9153  002DAE                     u4550:
  9154  002DAE  C001  F009         	movff	___fldiv@b,??___fldiv
  9155  002DB2  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  9156  002DB6  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  9157  002DBA  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  9158  002DBE  340C               	rlcf	(??___fldiv+3)^0,w,c
  9159  002DC0  320C               	rrcf	(??___fldiv+3)^0,f,c
  9160  002DC2  320B               	rrcf	(??___fldiv+2)^0,f,c
  9161  002DC4  320A               	rrcf	(??___fldiv+1)^0,f,c
  9162  002DC6  3209               	rrcf	??___fldiv^0,f,c
  9163  002DC8  C009  F001         	movff	??___fldiv,___fldiv@b
  9164  002DCC  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  9165  002DD0  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  9166  002DD4  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  9167  002DD8  4A12               	infsnz	___fldiv@new_exp^0,f,c
  9168  002DDA  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  9169  002DDC                     l4236:
  9170  002DDC  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9171  002DDE  EFF9  F016         	goto	u4561
  9172  002DE2  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  9173  002DE4  E108               	bnz	u4560
  9174  002DE6  2812               	incf	___fldiv@new_exp^0,w,c
  9175  002DE8  A0D8               	btfss	status,0,c
  9176  002DEA  EFF9  F016         	goto	u4561
  9177  002DEE  EFFB  F016         	goto	u4560
  9178  002DF2                     u4561:
  9179  002DF2  EF06  F017         	goto	l4240
  9180  002DF6                     u4560:
  9181  002DF6  0E00               	movlw	0
  9182  002DF8  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  9183  002DFA  6812               	setf	___fldiv@new_exp^0,c
  9184  002DFC  0E00               	movlw	0
  9185  002DFE  6E01               	movwf	___fldiv@b^0,c
  9186  002E00  0E00               	movlw	0
  9187  002E02  6E02               	movwf	(___fldiv@b+1)^0,c
  9188  002E04  0E00               	movlw	0
  9189  002E06  6E03               	movwf	(___fldiv@b+2)^0,c
  9190  002E08  0E00               	movlw	0
  9191  002E0A  6E04               	movwf	(___fldiv@b+3)^0,c
  9192  002E0C                     l4240:
  9193  002E0C  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9194  002E0E  EF13  F017         	goto	u4570
  9195  002E12  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  9196  002E14  E106               	bnz	u4571
  9197  002E16  0412               	decf	___fldiv@new_exp^0,w,c
  9198  002E18  B0D8               	btfsc	status,0,c
  9199  002E1A  EF11  F017         	goto	u4571
  9200  002E1E  EF13  F017         	goto	u4570
  9201  002E22                     u4571:
  9202  002E22  EF21  F017         	goto	l4244
  9203  002E26                     u4570:
  9204  002E26  0E00               	movlw	0
  9205  002E28  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  9206  002E2A  0E00               	movlw	0
  9207  002E2C  6E12               	movwf	___fldiv@new_exp^0,c
  9208  002E2E  0E00               	movlw	0
  9209  002E30  6E01               	movwf	___fldiv@b^0,c
  9210  002E32  0E00               	movlw	0
  9211  002E34  6E02               	movwf	(___fldiv@b+1)^0,c
  9212  002E36  0E00               	movlw	0
  9213  002E38  6E03               	movwf	(___fldiv@b+2)^0,c
  9214  002E3A  0E00               	movlw	0
  9215  002E3C  6E04               	movwf	(___fldiv@b+3)^0,c
  9216  002E3E  0E00               	movlw	0
  9217  002E40  6E11               	movwf	___fldiv@sign^0,c
  9218  002E42                     l4244:
  9219  002E42  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  9220  002E46  A018               	btfss	___fldiv@bexp^0,0,c
  9221  002E48  EF28  F017         	goto	u4581
  9222  002E4C  EF2A  F017         	goto	u4580
  9223  002E50                     u4581:
  9224  002E50  EF2D  F017         	goto	l4250
  9225  002E54                     u4580:
  9226  002E54  8E03               	bsf	(___fldiv@b+2)^0,7,c
  9227  002E56  EF2E  F017         	goto	l4252
  9228  002E5A                     l4250:
  9229  002E5A  9E03               	bcf	(___fldiv@b+2)^0,7,c
  9230  002E5C                     l4252:
  9231  002E5C  90D8               	bcf	status,0,c
  9232  002E5E  3018               	rrcf	___fldiv@bexp^0,w,c
  9233  002E60  6E04               	movwf	(___fldiv@b+3)^0,c
  9234  002E62  EFE4  F015         	goto	l4166
  9235  002E66                     l1077:
  9236  002E66  0012               	return		;funcret
  9237  002E68                     __end_of___fldiv:
  9238                           	callstack 0
  9239                           
  9240 ;; *************** function ___awmod *****************
  9241 ;; Defined at:
  9242 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
  9243 ;; Parameters:    Size  Location     Type
  9244 ;;  dividend        2    0[COMRAM] int 
  9245 ;;  divisor         2    2[COMRAM] int 
  9246 ;; Auto vars:     Size  Location     Type
  9247 ;;  sign            1    5[COMRAM] unsigned char 
  9248 ;;  counter         1    4[COMRAM] unsigned char 
  9249 ;; Return value:  Size  Location     Type
  9250 ;;                  2    0[COMRAM] int 
  9251 ;; Registers used:
  9252 ;;		wreg, status,2, status,0
  9253 ;; Tracked objects:
  9254 ;;		On entry : 0/0
  9255 ;;		On exit  : 0/0
  9256 ;;		Unchanged: 0/0
  9257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9258 ;;      Params:         4       0       0       0       0       0       0
  9259 ;;      Locals:         2       0       0       0       0       0       0
  9260 ;;      Temps:          0       0       0       0       0       0       0
  9261 ;;      Totals:         6       0       0       0       0       0       0
  9262 ;;Total ram usage:        6 bytes
  9263 ;; Hardware stack levels used:    1
  9264 ;; Hardware stack levels required when called:    1
  9265 ;; This function calls:
  9266 ;;		Nothing
  9267 ;; This function is called by:
  9268 ;;		_efgtoa
  9269 ;; This function uses a non-reentrant model
  9270 ;;
  9271                           
  9272                           	psect	text25
  9273  0041A6                     __ptext25:
  9274                           	callstack 0
  9275  0041A6                     ___awmod:
  9276                           	callstack 23
  9277  0041A6  0E00               	movlw	0
  9278  0041A8  6E06               	movwf	___awmod@sign^0,c
  9279  0041AA  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  9280  0041AC  EFDC  F020         	goto	u4840
  9281  0041B0  EFDA  F020         	goto	u4841
  9282  0041B4                     u4841:
  9283  0041B4  EFE2  F020         	goto	l4448
  9284  0041B8                     u4840:
  9285  0041B8  6C01               	negf	___awmod@dividend^0,c
  9286  0041BA  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9287  0041BC  B0D8               	btfsc	status,0,c
  9288  0041BE  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9289  0041C0  0E01               	movlw	1
  9290  0041C2  6E06               	movwf	___awmod@sign^0,c
  9291  0041C4                     l4448:
  9292  0041C4  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  9293  0041C6  EFE9  F020         	goto	u4850
  9294  0041CA  EFE7  F020         	goto	u4851
  9295  0041CE                     u4851:
  9296  0041CE  EFED  F020         	goto	l4452
  9297  0041D2                     u4850:
  9298  0041D2  6C03               	negf	___awmod@divisor^0,c
  9299  0041D4  1E04               	comf	(___awmod@divisor+1)^0,f,c
  9300  0041D6  B0D8               	btfsc	status,0,c
  9301  0041D8  2A04               	incf	(___awmod@divisor+1)^0,f,c
  9302  0041DA                     l4452:
  9303  0041DA  5003               	movf	___awmod@divisor^0,w,c
  9304  0041DC  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  9305  0041DE  B4D8               	btfsc	status,2,c
  9306  0041E0  EFF4  F020         	goto	u4861
  9307  0041E4  EFF6  F020         	goto	u4860
  9308  0041E8                     u4861:
  9309  0041E8  EF1A  F021         	goto	l4468
  9310  0041EC                     u4860:
  9311  0041EC  0E01               	movlw	1
  9312  0041EE  6E05               	movwf	___awmod@counter^0,c
  9313  0041F0  EFFE  F020         	goto	l4458
  9314  0041F4                     l4456:
  9315  0041F4  90D8               	bcf	status,0,c
  9316  0041F6  3603               	rlcf	___awmod@divisor^0,f,c
  9317  0041F8  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  9318  0041FA  2A05               	incf	___awmod@counter^0,f,c
  9319  0041FC                     l4458:
  9320  0041FC  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  9321  0041FE  EF03  F021         	goto	u4871
  9322  004202  EF05  F021         	goto	u4870
  9323  004206                     u4871:
  9324  004206  EFFA  F020         	goto	l4456
  9325  00420A                     u4870:
  9326  00420A                     l4460:
  9327  00420A  5003               	movf	___awmod@divisor^0,w,c
  9328  00420C  5C01               	subwf	___awmod@dividend^0,w,c
  9329  00420E  5004               	movf	(___awmod@divisor+1)^0,w,c
  9330  004210  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  9331  004212  A0D8               	btfss	status,0,c
  9332  004214  EF0E  F021         	goto	u4881
  9333  004218  EF10  F021         	goto	u4880
  9334  00421C                     u4881:
  9335  00421C  EF14  F021         	goto	l4464
  9336  004220                     u4880:
  9337  004220  5003               	movf	___awmod@divisor^0,w,c
  9338  004222  5E01               	subwf	___awmod@dividend^0,f,c
  9339  004224  5004               	movf	(___awmod@divisor+1)^0,w,c
  9340  004226  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  9341  004228                     l4464:
  9342  004228  90D8               	bcf	status,0,c
  9343  00422A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  9344  00422C  3203               	rrcf	___awmod@divisor^0,f,c
  9345  00422E  2E05               	decfsz	___awmod@counter^0,f,c
  9346  004230  EF05  F021         	goto	l4460
  9347  004234                     l4468:
  9348  004234  5006               	movf	___awmod@sign^0,w,c
  9349  004236  B4D8               	btfsc	status,2,c
  9350  004238  EF20  F021         	goto	u4891
  9351  00423C  EF22  F021         	goto	u4890
  9352  004240                     u4891:
  9353  004240  EF26  F021         	goto	l4472
  9354  004244                     u4890:
  9355  004244  6C01               	negf	___awmod@dividend^0,c
  9356  004246  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9357  004248  B0D8               	btfsc	status,0,c
  9358  00424A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9359  00424C                     l4472:
  9360  00424C  C001  F001         	movff	___awmod@dividend,?___awmod
  9361  004250  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  9362  004254  0012               	return		;funcret
  9363  004256                     __end_of___awmod:
  9364                           	callstack 0
  9365                           
  9366 ;; *************** function ___awdiv *****************
  9367 ;; Defined at:
  9368 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  9369 ;; Parameters:    Size  Location     Type
  9370 ;;  dividend        2    0[COMRAM] int 
  9371 ;;  divisor         2    2[COMRAM] int 
  9372 ;; Auto vars:     Size  Location     Type
  9373 ;;  quotient        2    6[COMRAM] int 
  9374 ;;  sign            1    5[COMRAM] unsigned char 
  9375 ;;  counter         1    4[COMRAM] unsigned char 
  9376 ;; Return value:  Size  Location     Type
  9377 ;;                  2    0[COMRAM] int 
  9378 ;; Registers used:
  9379 ;;		wreg, status,2, status,0
  9380 ;; Tracked objects:
  9381 ;;		On entry : 0/0
  9382 ;;		On exit  : 0/0
  9383 ;;		Unchanged: 0/0
  9384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9385 ;;      Params:         4       0       0       0       0       0       0
  9386 ;;      Locals:         4       0       0       0       0       0       0
  9387 ;;      Temps:          0       0       0       0       0       0       0
  9388 ;;      Totals:         8       0       0       0       0       0       0
  9389 ;;Total ram usage:        8 bytes
  9390 ;; Hardware stack levels used:    1
  9391 ;; Hardware stack levels required when called:    1
  9392 ;; This function calls:
  9393 ;;		Nothing
  9394 ;; This function is called by:
  9395 ;;		_efgtoa
  9396 ;; This function uses a non-reentrant model
  9397 ;;
  9398                           
  9399                           	psect	text26
  9400  0040E2                     __ptext26:
  9401                           	callstack 0
  9402  0040E2                     ___awdiv:
  9403                           	callstack 23
  9404  0040E2  0E00               	movlw	0
  9405  0040E4  6E06               	movwf	___awdiv@sign^0,c
  9406  0040E6  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  9407  0040E8  EF7A  F020         	goto	u4780
  9408  0040EC  EF78  F020         	goto	u4781
  9409  0040F0                     u4781:
  9410  0040F0  EF80  F020         	goto	l4404
  9411  0040F4                     u4780:
  9412  0040F4  6C03               	negf	___awdiv@divisor^0,c
  9413  0040F6  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  9414  0040F8  B0D8               	btfsc	status,0,c
  9415  0040FA  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  9416  0040FC  0E01               	movlw	1
  9417  0040FE  6E06               	movwf	___awdiv@sign^0,c
  9418  004100                     l4404:
  9419  004100  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  9420  004102  EF87  F020         	goto	u4790
  9421  004106  EF85  F020         	goto	u4791
  9422  00410A                     u4791:
  9423  00410A  EF8D  F020         	goto	l4410
  9424  00410E                     u4790:
  9425  00410E  6C01               	negf	___awdiv@dividend^0,c
  9426  004110  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  9427  004112  B0D8               	btfsc	status,0,c
  9428  004114  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  9429  004116  0E01               	movlw	1
  9430  004118  1A06               	xorwf	___awdiv@sign^0,f,c
  9431  00411A                     l4410:
  9432  00411A  0E00               	movlw	0
  9433  00411C  6E08               	movwf	(___awdiv@quotient+1)^0,c
  9434  00411E  0E00               	movlw	0
  9435  004120  6E07               	movwf	___awdiv@quotient^0,c
  9436  004122  5003               	movf	___awdiv@divisor^0,w,c
  9437  004124  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  9438  004126  B4D8               	btfsc	status,2,c
  9439  004128  EF98  F020         	goto	u4801
  9440  00412C  EF9A  F020         	goto	u4800
  9441  004130                     u4801:
  9442  004130  EFC2  F020         	goto	l4432
  9443  004134                     u4800:
  9444  004134  0E01               	movlw	1
  9445  004136  6E05               	movwf	___awdiv@counter^0,c
  9446  004138  EFA2  F020         	goto	l4418
  9447  00413C                     l4416:
  9448  00413C  90D8               	bcf	status,0,c
  9449  00413E  3603               	rlcf	___awdiv@divisor^0,f,c
  9450  004140  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  9451  004142  2A05               	incf	___awdiv@counter^0,f,c
  9452  004144                     l4418:
  9453  004144  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  9454  004146  EFA7  F020         	goto	u4811
  9455  00414A  EFA9  F020         	goto	u4810
  9456  00414E                     u4811:
  9457  00414E  EF9E  F020         	goto	l4416
  9458  004152                     u4810:
  9459  004152                     l4420:
  9460  004152  90D8               	bcf	status,0,c
  9461  004154  3607               	rlcf	___awdiv@quotient^0,f,c
  9462  004156  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  9463  004158  5003               	movf	___awdiv@divisor^0,w,c
  9464  00415A  5C01               	subwf	___awdiv@dividend^0,w,c
  9465  00415C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9466  00415E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  9467  004160  A0D8               	btfss	status,0,c
  9468  004162  EFB5  F020         	goto	u4821
  9469  004166  EFB7  F020         	goto	u4820
  9470  00416A                     u4821:
  9471  00416A  EFBC  F020         	goto	l4428
  9472  00416E                     u4820:
  9473  00416E  5003               	movf	___awdiv@divisor^0,w,c
  9474  004170  5E01               	subwf	___awdiv@dividend^0,f,c
  9475  004172  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9476  004174  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  9477  004176  8007               	bsf	___awdiv@quotient^0,0,c
  9478  004178                     l4428:
  9479  004178  90D8               	bcf	status,0,c
  9480  00417A  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  9481  00417C  3203               	rrcf	___awdiv@divisor^0,f,c
  9482  00417E  2E05               	decfsz	___awdiv@counter^0,f,c
  9483  004180  EFA9  F020         	goto	l4420
  9484  004184                     l4432:
  9485  004184  5006               	movf	___awdiv@sign^0,w,c
  9486  004186  B4D8               	btfsc	status,2,c
  9487  004188  EFC8  F020         	goto	u4831
  9488  00418C  EFCA  F020         	goto	u4830
  9489  004190                     u4831:
  9490  004190  EFCE  F020         	goto	l4436
  9491  004194                     u4830:
  9492  004194  6C07               	negf	___awdiv@quotient^0,c
  9493  004196  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  9494  004198  B0D8               	btfsc	status,0,c
  9495  00419A  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  9496  00419C                     l4436:
  9497  00419C  C007  F001         	movff	___awdiv@quotient,?___awdiv
  9498  0041A0  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  9499  0041A4  0012               	return		;funcret
  9500  0041A6                     __end_of___awdiv:
  9501                           	callstack 0
  9502                           
  9503 ;; *************** function _dtoa *****************
  9504 ;; Defined at:
  9505 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  9506 ;; Parameters:    Size  Location     Type
  9507 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  9508 ;;		 -> sprintf@f(6), 
  9509 ;;  d               8   29[COMRAM] long long 
  9510 ;; Auto vars:     Size  Location     Type
  9511 ;;  n               8   53[COMRAM] long long 
  9512 ;;  i               2   61[COMRAM] int 
  9513 ;;  s               2   51[COMRAM] int 
  9514 ;;  w               2   49[COMRAM] int 
  9515 ;;  p               2   47[COMRAM] int 
  9516 ;; Return value:  Size  Location     Type
  9517 ;;                  2   27[COMRAM] int 
  9518 ;; Registers used:
  9519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9520 ;; Tracked objects:
  9521 ;;		On entry : 0/0
  9522 ;;		On exit  : 0/0
  9523 ;;		Unchanged: 0/0
  9524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9525 ;;      Params:        10       0       0       0       0       0       0
  9526 ;;      Locals:        18       0       0       0       0       0       0
  9527 ;;      Temps:          8       0       0       0       0       0       0
  9528 ;;      Totals:        36       0       0       0       0       0       0
  9529 ;;Total ram usage:       36 bytes
  9530 ;; Hardware stack levels used:    1
  9531 ;; Hardware stack levels required when called:    5
  9532 ;; This function calls:
  9533 ;;		___aodiv
  9534 ;;		___aomod
  9535 ;;		_abs
  9536 ;;		_pad
  9537 ;; This function is called by:
  9538 ;;		_vfpfcnvrt
  9539 ;; This function uses a non-reentrant model
  9540 ;;
  9541                           
  9542                           	psect	text27
  9543  002E68                     __ptext27:
  9544                           	callstack 0
  9545  002E68                     _dtoa:
  9546                           	callstack 20
  9547  002E68                     
  9548                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
  9549  002E68  C01E  F036         	movff	dtoa@d,dtoa@n
  9550  002E6C  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  9551  002E70  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  9552  002E74  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  9553  002E78  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  9554  002E7C  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  9555  002E80  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  9556  002E84  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  9557  002E88                     
  9558                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
  9559  002E88  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  9560  002E8A  EF49  F017         	goto	u5371
  9561  002E8E  EF4C  F017         	goto	u5370
  9562  002E92                     u5371:
  9563  002E92  0E01               	movlw	1
  9564  002E94  EF4D  F017         	goto	u5380
  9565  002E98                     u5370:
  9566  002E98  0E00               	movlw	0
  9567  002E9A                     u5380:
  9568  002E9A  6E34               	movwf	dtoa@s^0,c
  9569  002E9C  6A35               	clrf	(dtoa@s+1)^0,c
  9570                           
  9571                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  9572  002E9E  5034               	movf	dtoa@s^0,w,c
  9573  002EA0  1035               	iorwf	(dtoa@s+1)^0,w,c
  9574  002EA2  B4D8               	btfsc	status,2,c
  9575  002EA4  EF56  F017         	goto	u5391
  9576  002EA8  EF58  F017         	goto	u5390
  9577  002EAC                     u5391:
  9578  002EAC  EF68  F017         	goto	l4678
  9579  002EB0                     u5390:
  9580  002EB0                     
  9581                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
  9582  002EB0  1E3D               	comf	(dtoa@n+7)^0,f,c
  9583  002EB2  1E3C               	comf	(dtoa@n+6)^0,f,c
  9584  002EB4  1E3B               	comf	(dtoa@n+5)^0,f,c
  9585  002EB6  1E3A               	comf	(dtoa@n+4)^0,f,c
  9586  002EB8  1E39               	comf	(dtoa@n+3)^0,f,c
  9587  002EBA  1E38               	comf	(dtoa@n+2)^0,f,c
  9588  002EBC  1E37               	comf	(dtoa@n+1)^0,f,c
  9589  002EBE  6C36               	negf	dtoa@n^0,c
  9590  002EC0  0E00               	movlw	0
  9591  002EC2  2237               	addwfc	(dtoa@n+1)^0,f,c
  9592  002EC4  2238               	addwfc	(dtoa@n+2)^0,f,c
  9593  002EC6  2239               	addwfc	(dtoa@n+3)^0,f,c
  9594  002EC8  223A               	addwfc	(dtoa@n+4)^0,f,c
  9595  002ECA  223B               	addwfc	(dtoa@n+5)^0,f,c
  9596  002ECC  223C               	addwfc	(dtoa@n+6)^0,f,c
  9597  002ECE  223D               	addwfc	(dtoa@n+7)^0,f,c
  9598  002ED0                     l4678:
  9599                           
  9600                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
  9601  002ED0  0100               	movlb	0	; () banked
  9602  002ED2  BFEC               	btfsc	(_prec+1)& (0+255),7,b
  9603  002ED4  EF6E  F017         	goto	u5401
  9604  002ED8  EF70  F017         	goto	u5400
  9605  002EDC                     u5401:
  9606  002EDC  EF71  F017         	goto	l4682
  9607  002EE0                     u5400:
  9608  002EE0                     
  9609                           ; BSR set to: 0
  9610                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
  9611  002EE0  93ED               	bcf	_flags& (0+255),1,b
  9612  002EE2                     l4682:
  9613                           
  9614                           ; BSR set to: 0
  9615                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
  9616  002EE2  BFEC               	btfsc	(_prec+1)& (0+255),7,b
  9617  002EE4  EF7E  F017         	goto	u5410
  9618  002EE8  51EC               	movf	(_prec+1)& (0+255),w,b
  9619  002EEA  E106               	bnz	u5411
  9620  002EEC  05EB               	decf	_prec& (0+255),w,b
  9621  002EEE  B0D8               	btfsc	status,0,c
  9622  002EF0  EF7C  F017         	goto	u5411
  9623  002EF4  EF7E  F017         	goto	u5410
  9624  002EF8                     u5411:
  9625  002EF8  EF84  F017         	goto	l1232
  9626  002EFC                     u5410:
  9627  002EFC                     
  9628                           ; BSR set to: 0
  9629  002EFC  0E00               	movlw	0
  9630  002EFE  6E31               	movwf	(dtoa@p+1)^0,c
  9631  002F00  0E01               	movlw	1
  9632  002F02  6E30               	movwf	dtoa@p^0,c
  9633  002F04  EF88  F017         	goto	l1234
  9634  002F08                     l1232:
  9635                           
  9636                           ; BSR set to: 0
  9637  002F08  C0EB  F030         	movff	_prec,dtoa@p
  9638  002F0C  C0EC  F031         	movff	_prec+1,dtoa@p+1
  9639  002F10                     l1234:
  9640                           
  9641                           ; BSR set to: 0
  9642                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
  9643  002F10  C0E9  F032         	movff	_width,dtoa@w
  9644  002F14  C0EA  F033         	movff	_width+1,dtoa@w+1
  9645  002F18                     
  9646                           ; BSR set to: 0
  9647                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
  9648  002F18  5034               	movf	dtoa@s^0,w,c
  9649  002F1A  1035               	iorwf	(dtoa@s+1)^0,w,c
  9650  002F1C  A4D8               	btfss	status,2,c
  9651  002F1E  EF93  F017         	goto	u5421
  9652  002F22  EF95  F017         	goto	u5420
  9653  002F26                     u5421:
  9654  002F26  EF9C  F017         	goto	l4690
  9655  002F2A                     u5420:
  9656  002F2A                     
  9657                           ; BSR set to: 0
  9658  002F2A  A5ED               	btfss	_flags& (0+255),2,b
  9659  002F2C  EF9A  F017         	goto	u5431
  9660  002F30  EF9C  F017         	goto	u5430
  9661  002F34                     u5431:
  9662  002F34  EF9F  F017         	goto	l4692
  9663  002F38                     u5430:
  9664  002F38                     l4690:
  9665                           
  9666                           ; BSR set to: 0
  9667                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
  9668  002F38  0632               	decf	dtoa@w^0,f,c
  9669  002F3A  A0D8               	btfss	status,0,c
  9670  002F3C  0633               	decf	(dtoa@w+1)^0,f,c
  9671  002F3E                     l4692:
  9672                           
  9673                           ; BSR set to: 0
  9674                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
  9675  002F3E  0E00               	movlw	0
  9676  002F40  6E3F               	movwf	(dtoa@i+1)^0,c
  9677  002F42  0E4F               	movlw	79
  9678  002F44  6E3E               	movwf	dtoa@i^0,c
  9679  002F46                     
  9680                           ; BSR set to: 0
  9681                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
  9682  002F46  0E00               	movlw	0
  9683  002F48  0101               	movlb	1	; () banked
  9684  002F4A  6FFA               	movwf	(_dbuf+79)& (0+255),b
  9685                           
  9686                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9687  002F4C  EF24  F018         	goto	l4706
  9688  002F50                     l4696:
  9689                           
  9690                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
  9691  002F50  063E               	decf	dtoa@i^0,f,c
  9692  002F52  A0D8               	btfss	status,0,c
  9693  002F54  063F               	decf	(dtoa@i+1)^0,f,c
  9694  002F56                     
  9695                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
  9696  002F56  0EAB               	movlw	low _dbuf
  9697  002F58  243E               	addwf	dtoa@i^0,w,c
  9698  002F5A  6ED9               	movwf	fsr2l,c
  9699  002F5C  0E01               	movlw	high _dbuf
  9700  002F5E  203F               	addwfc	(dtoa@i+1)^0,w,c
  9701  002F60  6EDA               	movwf	fsr2h,c
  9702  002F62  C036  F001         	movff	dtoa@n,___aomod@dividend
  9703  002F66  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  9704  002F6A  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  9705  002F6E  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  9706  002F72  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  9707  002F76  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  9708  002F7A  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  9709  002F7E  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  9710  002F82  0E0A               	movlw	10
  9711  002F84  6E09               	movwf	___aomod@divisor^0,c
  9712  002F86  0E00               	movlw	0
  9713  002F88  6E0A               	movwf	(___aomod@divisor+1)^0,c
  9714  002F8A  0E00               	movlw	0
  9715  002F8C  6E0B               	movwf	(___aomod@divisor+2)^0,c
  9716  002F8E  0E00               	movlw	0
  9717  002F90  6E0C               	movwf	(___aomod@divisor+3)^0,c
  9718  002F92  0E00               	movlw	0
  9719  002F94  6E0D               	movwf	(___aomod@divisor+4)^0,c
  9720  002F96  0E00               	movlw	0
  9721  002F98  6E0E               	movwf	(___aomod@divisor+5)^0,c
  9722  002F9A  0E00               	movlw	0
  9723  002F9C  6E0F               	movwf	(___aomod@divisor+6)^0,c
  9724  002F9E  0E00               	movlw	0
  9725  002FA0  6E10               	movwf	(___aomod@divisor+7)^0,c
  9726  002FA2  EC0E  F01C         	call	___aomod	;wreg free
  9727  002FA6  C001  F026         	movff	?___aomod,??_dtoa
  9728  002FAA  C002  F027         	movff	?___aomod+1,??_dtoa+1
  9729  002FAE  C003  F028         	movff	?___aomod+2,??_dtoa+2
  9730  002FB2  C004  F029         	movff	?___aomod+3,??_dtoa+3
  9731  002FB6  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  9732  002FBA  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  9733  002FBE  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  9734  002FC2  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  9735  002FC6  C026  F013         	movff	??_dtoa,abs@a
  9736  002FCA  C028  F014         	movff	??_dtoa+2,abs@a+1
  9737  002FCE  ECE4  F023         	call	_abs	;wreg free
  9738  002FD2  5013               	movf	?_abs^0,w,c
  9739  002FD4  0F30               	addlw	48
  9740  002FD6  6EDF               	movwf	indf2,c
  9741  002FD8                     
  9742                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
  9743  002FD8  0630               	decf	dtoa@p^0,f,c
  9744  002FDA  A0D8               	btfss	status,0,c
  9745  002FDC  0631               	decf	(dtoa@p+1)^0,f,c
  9746  002FDE                     
  9747                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
  9748  002FDE  0632               	decf	dtoa@w^0,f,c
  9749  002FE0  A0D8               	btfss	status,0,c
  9750  002FE2  0633               	decf	(dtoa@w+1)^0,f,c
  9751  002FE4                     
  9752                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
  9753  002FE4  C036  F001         	movff	dtoa@n,___aodiv@dividend
  9754  002FE8  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  9755  002FEC  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  9756  002FF0  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  9757  002FF4  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  9758  002FF8  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  9759  002FFC  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  9760  003000  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  9761  003004  0E0A               	movlw	10
  9762  003006  6E09               	movwf	___aodiv@divisor^0,c
  9763  003008  0E00               	movlw	0
  9764  00300A  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  9765  00300C  0E00               	movlw	0
  9766  00300E  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  9767  003010  0E00               	movlw	0
  9768  003012  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  9769  003014  0E00               	movlw	0
  9770  003016  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  9771  003018  0E00               	movlw	0
  9772  00301A  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  9773  00301C  0E00               	movlw	0
  9774  00301E  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  9775  003020  0E00               	movlw	0
  9776  003022  6E10               	movwf	(___aodiv@divisor+7)^0,c
  9777  003024  EC4A  F01B         	call	___aodiv	;wreg free
  9778  003028  C001  F036         	movff	?___aodiv,dtoa@n
  9779  00302C  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  9780  003030  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  9781  003034  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  9782  003038  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  9783  00303C  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  9784  003040  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  9785  003044  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  9786  003048                     l4706:
  9787                           
  9788                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9789  003048  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  9790  00304A  EF2F  F018         	goto	u5441
  9791  00304E  503F               	movf	(dtoa@i+1)^0,w,c
  9792  003050  E108               	bnz	u5440
  9793  003052  043E               	decf	dtoa@i^0,w,c
  9794  003054  A0D8               	btfss	status,0,c
  9795  003056  EF2F  F018         	goto	u5441
  9796  00305A  EF31  F018         	goto	u5440
  9797  00305E                     u5441:
  9798  00305E  EF62  F018         	goto	l4716
  9799  003062                     u5440:
  9800  003062  5036               	movf	dtoa@n^0,w,c
  9801  003064  1037               	iorwf	(dtoa@n+1)^0,w,c
  9802  003066  1038               	iorwf	(dtoa@n+2)^0,w,c
  9803  003068  1039               	iorwf	(dtoa@n+3)^0,w,c
  9804  00306A  103A               	iorwf	(dtoa@n+4)^0,w,c
  9805  00306C  103B               	iorwf	(dtoa@n+5)^0,w,c
  9806  00306E  103C               	iorwf	(dtoa@n+6)^0,w,c
  9807  003070  103D               	iorwf	(dtoa@n+7)^0,w,c
  9808  003072  A4D8               	btfss	status,2,c
  9809  003074  EF3E  F018         	goto	u5451
  9810  003078  EF40  F018         	goto	u5450
  9811  00307C                     u5451:
  9812  00307C  EFA8  F017         	goto	l4696
  9813  003080                     u5450:
  9814  003080  BE31               	btfsc	(dtoa@p+1)^0,7,c
  9815  003082  EF4D  F018         	goto	u5460
  9816  003086  5031               	movf	(dtoa@p+1)^0,w,c
  9817  003088  E106               	bnz	u5461
  9818  00308A  0430               	decf	dtoa@p^0,w,c
  9819  00308C  B0D8               	btfsc	status,0,c
  9820  00308E  EF4B  F018         	goto	u5461
  9821  003092  EF4D  F018         	goto	u5460
  9822  003096                     u5461:
  9823  003096  EFA8  F017         	goto	l4696
  9824  00309A                     u5460:
  9825  00309A  BE33               	btfsc	(dtoa@w+1)^0,7,c
  9826  00309C  EF58  F018         	goto	u5471
  9827  0030A0  5033               	movf	(dtoa@w+1)^0,w,c
  9828  0030A2  E108               	bnz	u5470
  9829  0030A4  0432               	decf	dtoa@w^0,w,c
  9830  0030A6  A0D8               	btfss	status,0,c
  9831  0030A8  EF58  F018         	goto	u5471
  9832  0030AC  EF5A  F018         	goto	u5470
  9833  0030B0                     u5471:
  9834  0030B0  EF62  F018         	goto	l4716
  9835  0030B4                     u5470:
  9836  0030B4  0100               	movlb	0	; () banked
  9837  0030B6  B3ED               	btfsc	_flags& (0+255),1,b
  9838  0030B8  EF60  F018         	goto	u5481
  9839  0030BC  EF62  F018         	goto	u5480
  9840  0030C0                     u5481:
  9841  0030C0  EFA8  F017         	goto	l4696
  9842  0030C4                     u5480:
  9843  0030C4                     l4716:
  9844                           
  9845                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
  9846  0030C4  5034               	movf	dtoa@s^0,w,c
  9847  0030C6  1035               	iorwf	(dtoa@s+1)^0,w,c
  9848  0030C8  A4D8               	btfss	status,2,c
  9849  0030CA  EF69  F018         	goto	u5491
  9850  0030CE  EF6B  F018         	goto	u5490
  9851  0030D2                     u5491:
  9852  0030D2  EF73  F018         	goto	l4720
  9853  0030D6                     u5490:
  9854  0030D6  0100               	movlb	0	; () banked
  9855  0030D8  A5ED               	btfss	_flags& (0+255),2,b
  9856  0030DA  EF71  F018         	goto	u5501
  9857  0030DE  EF73  F018         	goto	u5500
  9858  0030E2                     u5501:
  9859  0030E2  EF91  F018         	goto	l4730
  9860  0030E6                     u5500:
  9861  0030E6                     l4720:
  9862                           
  9863                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
  9864  0030E6  063E               	decf	dtoa@i^0,f,c
  9865  0030E8  A0D8               	btfss	status,0,c
  9866  0030EA  063F               	decf	(dtoa@i+1)^0,f,c
  9867  0030EC                     
  9868                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
  9869  0030EC  5034               	movf	dtoa@s^0,w,c
  9870  0030EE  1035               	iorwf	(dtoa@s+1)^0,w,c
  9871  0030F0  A4D8               	btfss	status,2,c
  9872  0030F2  EF7D  F018         	goto	u5511
  9873  0030F6  EF7F  F018         	goto	u5510
  9874  0030FA                     u5511:
  9875  0030FA  EF85  F018         	goto	l4726
  9876  0030FE                     u5510:
  9877  0030FE  0E00               	movlw	0
  9878  003100  6E2F               	movwf	(_dtoa$2845+1)^0,c
  9879  003102  0E2B               	movlw	43
  9880  003104  6E2E               	movwf	_dtoa$2845^0,c
  9881  003106  EF89  F018         	goto	l4728
  9882  00310A                     l4726:
  9883  00310A  0E00               	movlw	0
  9884  00310C  6E2F               	movwf	(_dtoa$2845+1)^0,c
  9885  00310E  0E2D               	movlw	45
  9886  003110  6E2E               	movwf	_dtoa$2845^0,c
  9887  003112                     l4728:
  9888  003112  0EAB               	movlw	low _dbuf
  9889  003114  243E               	addwf	dtoa@i^0,w,c
  9890  003116  6ED9               	movwf	fsr2l,c
  9891  003118  0E01               	movlw	high _dbuf
  9892  00311A  203F               	addwfc	(dtoa@i+1)^0,w,c
  9893  00311C  6EDA               	movwf	fsr2h,c
  9894  00311E  C02E  FFDF         	movff	_dtoa$2845,indf2
  9895  003122                     l4730:
  9896                           
  9897                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
  9898  003122  C01C  F011         	movff	dtoa@fp,pad@fp
  9899  003126  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  9900  00312A  0EAB               	movlw	low _dbuf
  9901  00312C  243E               	addwf	dtoa@i^0,w,c
  9902  00312E  6E13               	movwf	pad@buf^0,c
  9903  003130  0E01               	movlw	high _dbuf
  9904  003132  203F               	addwfc	(dtoa@i+1)^0,w,c
  9905  003134  6E14               	movwf	(pad@buf+1)^0,c
  9906  003136  C032  F015         	movff	dtoa@w,pad@p
  9907  00313A  C033  F016         	movff	dtoa@w+1,pad@p+1
  9908  00313E  EC0E  F020         	call	_pad	;wreg free
  9909  003142  C011  F01C         	movff	?_pad,?_dtoa
  9910  003146  C012  F01D         	movff	?_pad+1,?_dtoa+1
  9911  00314A  0012               	return		;funcret
  9912  00314C                     __end_of_dtoa:
  9913                           	callstack 0
  9914                           
  9915 ;; *************** function _pad *****************
  9916 ;; Defined at:
  9917 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  9918 ;; Parameters:    Size  Location     Type
  9919 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  9920 ;;		 -> sprintf@f(6), 
  9921 ;;  buf             2   18[COMRAM] PTR unsigned char 
  9922 ;;		 -> dbuf(80), 
  9923 ;;  p               2   20[COMRAM] int 
  9924 ;; Auto vars:     Size  Location     Type
  9925 ;;  w               2   25[COMRAM] int 
  9926 ;;  i               2   23[COMRAM] int 
  9927 ;; Return value:  Size  Location     Type
  9928 ;;                  2   16[COMRAM] int 
  9929 ;; Registers used:
  9930 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9931 ;; Tracked objects:
  9932 ;;		On entry : 0/0
  9933 ;;		On exit  : 0/0
  9934 ;;		Unchanged: 0/0
  9935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9936 ;;      Params:         6       0       0       0       0       0       0
  9937 ;;      Locals:         4       0       0       0       0       0       0
  9938 ;;      Temps:          1       0       0       0       0       0       0
  9939 ;;      Totals:        11       0       0       0       0       0       0
  9940 ;;Total ram usage:       11 bytes
  9941 ;; Hardware stack levels used:    1
  9942 ;; Hardware stack levels required when called:    4
  9943 ;; This function calls:
  9944 ;;		_fputc
  9945 ;;		_fputs
  9946 ;;		_strlen
  9947 ;; This function is called by:
  9948 ;;		_dtoa
  9949 ;;		_efgtoa
  9950 ;; This function uses a non-reentrant model
  9951 ;;
  9952                           
  9953                           	psect	text28
  9954  00401C                     __ptext28:
  9955                           	callstack 0
  9956  00401C                     _pad:
  9957                           	callstack 20
  9958  00401C                     
  9959                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  9960  00401C  0100               	movlb	0	; () banked
  9961  00401E  A1ED               	btfss	_flags& (0+255),0,b
  9962  004020  EF14  F020         	goto	u5061
  9963  004024  EF16  F020         	goto	u5060
  9964  004028                     u5061:
  9965  004028  EF20  F020         	goto	l4570
  9966  00402C                     u5060:
  9967  00402C                     
  9968                           ; BSR set to: 0
  9969                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  9970  00402C  C013  F00A         	movff	pad@buf,fputs@s
  9971  004030  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9972  004034  C011  F00C         	movff	pad@fp,fputs@fp
  9973  004038  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9974  00403C  ECC2  F023         	call	_fputs	;wreg free
  9975  004040                     l4570:
  9976                           
  9977                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  9978  004040  BE16               	btfsc	(pad@p+1)^0,7,c
  9979  004042  EF25  F020         	goto	u5071
  9980  004046  EF27  F020         	goto	u5070
  9981  00404A                     u5071:
  9982  00404A  EF2D  F020         	goto	l4574
  9983  00404E                     u5070:
  9984  00404E  C015  F01A         	movff	pad@p,pad@w
  9985  004052  C016  F01B         	movff	pad@p+1,pad@w+1
  9986  004056  EF31  F020         	goto	l1221
  9987  00405A                     l4574:
  9988  00405A  0E00               	movlw	0
  9989  00405C  6E1B               	movwf	(pad@w+1)^0,c
  9990  00405E  0E00               	movlw	0
  9991  004060  6E1A               	movwf	pad@w^0,c
  9992  004062                     l1221:
  9993                           
  9994                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  9995  004062  0E00               	movlw	0
  9996  004064  6E19               	movwf	(pad@i+1)^0,c
  9997  004066  0E00               	movlw	0
  9998  004068  6E18               	movwf	pad@i^0,c
  9999                           
 10000                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 10001  00406A  EF43  F020         	goto	l4580
 10002  00406E                     l4576:
 10003                           
 10004                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 10005  00406E  0E00               	movlw	0
 10006  004070  6E02               	movwf	(fputc@c+1)^0,c
 10007  004072  0E20               	movlw	32
 10008  004074  6E01               	movwf	fputc@c^0,c
 10009  004076  C011  F003         	movff	pad@fp,fputc@fp
 10010  00407A  C012  F004         	movff	pad@fp+1,fputc@fp+1
 10011  00407E  ECA9  F01F         	call	_fputc	;wreg free
 10012  004082                     
 10013                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
 10014  004082  4A18               	infsnz	pad@i^0,f,c
 10015  004084  2A19               	incf	(pad@i+1)^0,f,c
 10016  004086                     l4580:
 10017                           
 10018                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 10019  004086  501A               	movf	pad@w^0,w,c
 10020  004088  5C18               	subwf	pad@i^0,w,c
 10021  00408A  5019               	movf	(pad@i+1)^0,w,c
 10022  00408C  0A80               	xorlw	128
 10023  00408E  6E17               	movwf	??_pad^0,c
 10024  004090  501B               	movf	(pad@w+1)^0,w,c
 10025  004092  0A80               	xorlw	128
 10026  004094  5817               	subwfb	??_pad^0,w,c
 10027  004096  A0D8               	btfss	status,0,c
 10028  004098  EF50  F020         	goto	u5081
 10029  00409C  EF52  F020         	goto	u5080
 10030  0040A0                     u5081:
 10031  0040A0  EF37  F020         	goto	l4576
 10032  0040A4                     u5080:
 10033  0040A4                     
 10034                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 10035  0040A4  0100               	movlb	0	; () banked
 10036  0040A6  B1ED               	btfsc	_flags& (0+255),0,b
 10037  0040A8  EF58  F020         	goto	u5091
 10038  0040AC  EF5A  F020         	goto	u5090
 10039  0040B0                     u5091:
 10040  0040B0  EF64  F020         	goto	l4584
 10041  0040B4                     u5090:
 10042  0040B4                     
 10043                           ; BSR set to: 0
 10044                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 10045  0040B4  C013  F00A         	movff	pad@buf,fputs@s
 10046  0040B8  C014  F00B         	movff	pad@buf+1,fputs@s+1
 10047  0040BC  C011  F00C         	movff	pad@fp,fputs@fp
 10048  0040C0  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 10049  0040C4  ECC2  F023         	call	_fputs	;wreg free
 10050  0040C8                     l4584:
 10051                           
 10052                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
 10053  0040C8  C013  F001         	movff	pad@buf,strlen@s
 10054  0040CC  C014  F002         	movff	pad@buf+1,strlen@s+1
 10055  0040D0  EC58  F024         	call	_strlen	;wreg free
 10056  0040D4  501A               	movf	pad@w^0,w,c
 10057  0040D6  2401               	addwf	?_strlen^0,w,c
 10058  0040D8  6E11               	movwf	?_pad^0,c
 10059  0040DA  501B               	movf	(pad@w+1)^0,w,c
 10060  0040DC  2002               	addwfc	(?_strlen+1)^0,w,c
 10061  0040DE  6E12               	movwf	(?_pad+1)^0,c
 10062  0040E0  0012               	return		;funcret
 10063  0040E2                     __end_of_pad:
 10064                           	callstack 0
 10065                           
 10066 ;; *************** function _strlen *****************
 10067 ;; Defined at:
 10068 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
 10069 ;; Parameters:    Size  Location     Type
 10070 ;;  s               2    0[COMRAM] PTR const unsigned char 
 10071 ;;		 -> dbuf(80), 
 10072 ;; Auto vars:     Size  Location     Type
 10073 ;;  a               2    2[COMRAM] PTR const unsigned char 
 10074 ;;		 -> dbuf(80), 
 10075 ;; Return value:  Size  Location     Type
 10076 ;;                  2    0[COMRAM] unsigned int 
 10077 ;; Registers used:
 10078 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10079 ;; Tracked objects:
 10080 ;;		On entry : 0/0
 10081 ;;		On exit  : 0/0
 10082 ;;		Unchanged: 0/0
 10083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10084 ;;      Params:         2       0       0       0       0       0       0
 10085 ;;      Locals:         2       0       0       0       0       0       0
 10086 ;;      Temps:          0       0       0       0       0       0       0
 10087 ;;      Totals:         4       0       0       0       0       0       0
 10088 ;;Total ram usage:        4 bytes
 10089 ;; Hardware stack levels used:    1
 10090 ;; Hardware stack levels required when called:    1
 10091 ;; This function calls:
 10092 ;;		Nothing
 10093 ;; This function is called by:
 10094 ;;		_pad
 10095 ;; This function uses a non-reentrant model
 10096 ;;
 10097                           
 10098                           	psect	text29
 10099  0048B0                     __ptext29:
 10100                           	callstack 0
 10101  0048B0                     _strlen:
 10102                           	callstack 22
 10103  0048B0  C001  F003         	movff	strlen@s,strlen@a
 10104  0048B4  C002  F004         	movff	strlen@s+1,strlen@a+1
 10105  0048B8  EF60  F024         	goto	l4026
 10106  0048BC                     l4024:
 10107  0048BC  4A01               	infsnz	strlen@s^0,f,c
 10108  0048BE  2A02               	incf	(strlen@s+1)^0,f,c
 10109  0048C0                     l4026:
 10110  0048C0  C001  FFD9         	movff	strlen@s,fsr2l
 10111  0048C4  C002  FFDA         	movff	strlen@s+1,fsr2h
 10112  0048C8  50DF               	movf	indf2,w,c
 10113  0048CA  A4D8               	btfss	status,2,c
 10114  0048CC  EF6A  F024         	goto	u4201
 10115  0048D0  EF6C  F024         	goto	u4200
 10116  0048D4                     u4201:
 10117  0048D4  EF5E  F024         	goto	l4024
 10118  0048D8                     u4200:
 10119  0048D8  5003               	movf	strlen@a^0,w,c
 10120  0048DA  5C01               	subwf	strlen@s^0,w,c
 10121  0048DC  6E01               	movwf	?_strlen^0,c
 10122  0048DE  5004               	movf	(strlen@a+1)^0,w,c
 10123  0048E0  5802               	subwfb	(strlen@s+1)^0,w,c
 10124  0048E2  6E02               	movwf	(?_strlen+1)^0,c
 10125  0048E4  0012               	return		;funcret
 10126  0048E6                     __end_of_strlen:
 10127                           	callstack 0
 10128                           
 10129 ;; *************** function _fputs *****************
 10130 ;; Defined at:
 10131 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
 10132 ;; Parameters:    Size  Location     Type
 10133 ;;  s               2    9[COMRAM] PTR const unsigned char 
 10134 ;;		 -> dbuf(80), 
 10135 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 10136 ;;		 -> sprintf@f(6), 
 10137 ;; Auto vars:     Size  Location     Type
 10138 ;;  i               2   14[COMRAM] int 
 10139 ;;  c               1   13[COMRAM] unsigned char 
 10140 ;; Return value:  Size  Location     Type
 10141 ;;                  2    9[COMRAM] int 
 10142 ;; Registers used:
 10143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10144 ;; Tracked objects:
 10145 ;;		On entry : 0/0
 10146 ;;		On exit  : 0/0
 10147 ;;		Unchanged: 0/0
 10148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10149 ;;      Params:         4       0       0       0       0       0       0
 10150 ;;      Locals:         3       0       0       0       0       0       0
 10151 ;;      Temps:          0       0       0       0       0       0       0
 10152 ;;      Totals:         7       0       0       0       0       0       0
 10153 ;;Total ram usage:        7 bytes
 10154 ;; Hardware stack levels used:    1
 10155 ;; Hardware stack levels required when called:    3
 10156 ;; This function calls:
 10157 ;;		_fputc
 10158 ;; This function is called by:
 10159 ;;		_pad
 10160 ;; This function uses a non-reentrant model
 10161 ;;
 10162                           
 10163                           	psect	text30
 10164  004784                     __ptext30:
 10165                           	callstack 0
 10166  004784                     _fputs:
 10167                           	callstack 20
 10168  004784  0E00               	movlw	0
 10169  004786  6E10               	movwf	(fputs@i+1)^0,c
 10170  004788  0E00               	movlw	0
 10171  00478A  6E0F               	movwf	fputs@i^0,c
 10172  00478C  EFD3  F023         	goto	l4020
 10173  004790                     l4016:
 10174  004790  C00E  F001         	movff	fputs@c,fputc@c
 10175  004794  6A02               	clrf	(fputc@c+1)^0,c
 10176  004796  C00C  F003         	movff	fputs@fp,fputc@fp
 10177  00479A  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
 10178  00479E  ECA9  F01F         	call	_fputc	;wreg free
 10179  0047A2  4A0F               	infsnz	fputs@i^0,f,c
 10180  0047A4  2A10               	incf	(fputs@i+1)^0,f,c
 10181  0047A6                     l4020:
 10182  0047A6  500F               	movf	fputs@i^0,w,c
 10183  0047A8  240A               	addwf	fputs@s^0,w,c
 10184  0047AA  6ED9               	movwf	fsr2l,c
 10185  0047AC  5010               	movf	(fputs@i+1)^0,w,c
 10186  0047AE  200B               	addwfc	(fputs@s+1)^0,w,c
 10187  0047B0  6EDA               	movwf	fsr2h,c
 10188  0047B2  50DF               	movf	indf2,w,c
 10189  0047B4  6E0E               	movwf	fputs@c^0,c
 10190  0047B6  500E               	movf	fputs@c^0,w,c
 10191  0047B8  A4D8               	btfss	status,2,c
 10192  0047BA  EFE1  F023         	goto	u4191
 10193  0047BE  EFE3  F023         	goto	u4190
 10194  0047C2                     u4191:
 10195  0047C2  EFC8  F023         	goto	l4016
 10196  0047C6                     u4190:
 10197  0047C6  0012               	return		;funcret
 10198  0047C8                     __end_of_fputs:
 10199                           	callstack 0
 10200                           
 10201 ;; *************** function _fputc *****************
 10202 ;; Defined at:
 10203 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
 10204 ;; Parameters:    Size  Location     Type
 10205 ;;  c               2    0[COMRAM] int 
 10206 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 10207 ;;		 -> sprintf@f(6), 
 10208 ;; Auto vars:     Size  Location     Type
 10209 ;;		None
 10210 ;; Return value:  Size  Location     Type
 10211 ;;                  2    0[COMRAM] int 
 10212 ;; Registers used:
 10213 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10214 ;; Tracked objects:
 10215 ;;		On entry : 0/0
 10216 ;;		On exit  : 0/0
 10217 ;;		Unchanged: 0/0
 10218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10219 ;;      Params:         4       0       0       0       0       0       0
 10220 ;;      Locals:         0       0       0       0       0       0       0
 10221 ;;      Temps:          5       0       0       0       0       0       0
 10222 ;;      Totals:         9       0       0       0       0       0       0
 10223 ;;Total ram usage:        9 bytes
 10224 ;; Hardware stack levels used:    1
 10225 ;; Hardware stack levels required when called:    2
 10226 ;; This function calls:
 10227 ;;		_putch
 10228 ;; This function is called by:
 10229 ;;		_pad
 10230 ;;		_vfpfcnvrt
 10231 ;;		_fputs
 10232 ;; This function uses a non-reentrant model
 10233 ;;
 10234                           
 10235                           	psect	text31
 10236  003F52                     __ptext31:
 10237                           	callstack 0
 10238  003F52                     _fputc:
 10239                           	callstack 23
 10240  003F52  5003               	movf	fputc@fp^0,w,c
 10241  003F54  1004               	iorwf	(fputc@fp+1)^0,w,c
 10242  003F56  B4D8               	btfsc	status,2,c
 10243  003F58  EFB0  F01F         	goto	u3761
 10244  003F5C  EFB2  F01F         	goto	u3760
 10245  003F60                     u3761:
 10246  003F60  EFBB  F01F         	goto	l3802
 10247  003F64                     u3760:
 10248  003F64  5003               	movf	fputc@fp^0,w,c
 10249  003F66  1004               	iorwf	(fputc@fp+1)^0,w,c
 10250  003F68  A4D8               	btfss	status,2,c
 10251  003F6A  EFB9  F01F         	goto	u3771
 10252  003F6E  EFBB  F01F         	goto	u3770
 10253  003F72                     u3771:
 10254  003F72  EFC0  F01F         	goto	l3804
 10255  003F76                     u3770:
 10256  003F76                     l3802:
 10257  003F76  5001               	movf	fputc@c^0,w,c
 10258  003F78  EC07  F025         	call	_putch
 10259  003F7C  EF0D  F020         	goto	l1481
 10260  003F80                     l3804:
 10261  003F80  EE20 F004          	lfsr	2,4
 10262  003F84  5003               	movf	fputc@fp^0,w,c
 10263  003F86  26D9               	addwf	fsr2l,f,c
 10264  003F88  5004               	movf	(fputc@fp+1)^0,w,c
 10265  003F8A  22DA               	addwfc	fsr2h,f,c
 10266  003F8C  50DE               	movf	postinc2,w,c
 10267  003F8E  10DE               	iorwf	postinc2,w,c
 10268  003F90  B4D8               	btfsc	status,2,c
 10269  003F92  EFCD  F01F         	goto	u3781
 10270  003F96  EFCF  F01F         	goto	u3780
 10271  003F9A                     u3781:
 10272  003F9A  EFEA  F01F         	goto	l3808
 10273  003F9E                     u3780:
 10274  003F9E  EE20 F004          	lfsr	2,4
 10275  003FA2  5003               	movf	fputc@fp^0,w,c
 10276  003FA4  26D9               	addwf	fsr2l,f,c
 10277  003FA6  5004               	movf	(fputc@fp+1)^0,w,c
 10278  003FA8  22DA               	addwfc	fsr2h,f,c
 10279  003FAA  EE10 F002          	lfsr	1,2
 10280  003FAE  5003               	movf	fputc@fp^0,w,c
 10281  003FB0  26E1               	addwf	fsr1l,f,c
 10282  003FB2  5004               	movf	(fputc@fp+1)^0,w,c
 10283  003FB4  22E2               	addwfc	fsr1h,f,c
 10284  003FB6  50DE               	movf	postinc2,w,c
 10285  003FB8  5CE6               	subwf	postinc1,w,c
 10286  003FBA  50E6               	movf	postinc1,w,c
 10287  003FBC  0A80               	xorlw	128
 10288  003FBE  6E09               	movwf	(??_fputc+4)^0,c
 10289  003FC0  50DE               	movf	postinc2,w,c
 10290  003FC2  0A80               	xorlw	128
 10291  003FC4  5809               	subwfb	(??_fputc+4)^0,w,c
 10292  003FC6  B0D8               	btfsc	status,0,c
 10293  003FC8  EFE8  F01F         	goto	u3791
 10294  003FCC  EFEA  F01F         	goto	u3790
 10295  003FD0                     u3791:
 10296  003FD0  EF0D  F020         	goto	l1481
 10297  003FD4                     u3790:
 10298  003FD4                     l3808:
 10299  003FD4  EE20 F002          	lfsr	2,2
 10300  003FD8  5003               	movf	fputc@fp^0,w,c
 10301  003FDA  26D9               	addwf	fsr2l,f,c
 10302  003FDC  5004               	movf	(fputc@fp+1)^0,w,c
 10303  003FDE  22DA               	addwfc	fsr2h,f,c
 10304  003FE0  CFDE F005          	movff	postinc2,??_fputc
 10305  003FE4  CFDD F006          	movff	postdec2,??_fputc+1
 10306  003FE8  C003  FFD9         	movff	fputc@fp,fsr2l
 10307  003FEC  C004  FFDA         	movff	fputc@fp+1,fsr2h
 10308  003FF0  CFDE F007          	movff	postinc2,??_fputc+2
 10309  003FF4  CFDD F008          	movff	postdec2,??_fputc+3
 10310  003FF8  5005               	movf	??_fputc^0,w,c
 10311  003FFA  2407               	addwf	(??_fputc+2)^0,w,c
 10312  003FFC  6ED9               	movwf	fsr2l,c
 10313  003FFE  5006               	movf	(??_fputc+1)^0,w,c
 10314  004000  2008               	addwfc	(??_fputc+3)^0,w,c
 10315  004002  6EDA               	movwf	fsr2h,c
 10316  004004  C001  FFDF         	movff	fputc@c,indf2
 10317  004008  EE20 F002          	lfsr	2,2
 10318  00400C  5003               	movf	fputc@fp^0,w,c
 10319  00400E  26D9               	addwf	fsr2l,f,c
 10320  004010  5004               	movf	(fputc@fp+1)^0,w,c
 10321  004012  22DA               	addwfc	fsr2h,f,c
 10322  004014  2ADE               	incf	postinc2,f,c
 10323  004016  0E00               	movlw	0
 10324  004018  22DD               	addwfc	postdec2,f,c
 10325  00401A                     l1481:
 10326  00401A  0012               	return		;funcret
 10327  00401C                     __end_of_fputc:
 10328                           	callstack 0
 10329                           
 10330 ;; *************** function _putch *****************
 10331 ;; Defined at:
 10332 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
 10333 ;; Parameters:    Size  Location     Type
 10334 ;;  c               1    wreg     unsigned char 
 10335 ;; Auto vars:     Size  Location     Type
 10336 ;;  c               1    0[COMRAM] unsigned char 
 10337 ;; Return value:  Size  Location     Type
 10338 ;;                  1    wreg      void 
 10339 ;; Registers used:
 10340 ;;		wreg
 10341 ;; Tracked objects:
 10342 ;;		On entry : 0/0
 10343 ;;		On exit  : 0/0
 10344 ;;		Unchanged: 0/0
 10345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10346 ;;      Params:         0       0       0       0       0       0       0
 10347 ;;      Locals:         0       0       0       0       0       0       0
 10348 ;;      Temps:          0       0       0       0       0       0       0
 10349 ;;      Totals:         0       0       0       0       0       0       0
 10350 ;;Total ram usage:        0 bytes
 10351 ;; Hardware stack levels used:    1
 10352 ;; Hardware stack levels required when called:    1
 10353 ;; This function calls:
 10354 ;;		Nothing
 10355 ;; This function is called by:
 10356 ;;		_fputc
 10357 ;; This function uses a non-reentrant model
 10358 ;;
 10359                           
 10360                           	psect	text32
 10361  004A0E                     __ptext32:
 10362                           	callstack 0
 10363  004A0E                     _putch:
 10364                           	callstack 23
 10365  004A0E  0012               	return		;funcret
 10366  004A10                     __end_of_putch:
 10367                           	callstack 0
 10368                           
 10369 ;; *************** function _abs *****************
 10370 ;; Defined at:
 10371 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
 10372 ;; Parameters:    Size  Location     Type
 10373 ;;  a               2   18[COMRAM] int 
 10374 ;; Auto vars:     Size  Location     Type
 10375 ;;		None
 10376 ;; Return value:  Size  Location     Type
 10377 ;;                  2   18[COMRAM] int 
 10378 ;; Registers used:
 10379 ;;		wreg, status,2, status,0
 10380 ;; Tracked objects:
 10381 ;;		On entry : 0/0
 10382 ;;		On exit  : 0/0
 10383 ;;		Unchanged: 0/0
 10384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10385 ;;      Params:         2       0       0       0       0       0       0
 10386 ;;      Locals:         0       0       0       0       0       0       0
 10387 ;;      Temps:          2       0       0       0       0       0       0
 10388 ;;      Totals:         4       0       0       0       0       0       0
 10389 ;;Total ram usage:        4 bytes
 10390 ;; Hardware stack levels used:    1
 10391 ;; Hardware stack levels required when called:    1
 10392 ;; This function calls:
 10393 ;;		Nothing
 10394 ;; This function is called by:
 10395 ;;		_dtoa
 10396 ;; This function uses a non-reentrant model
 10397 ;;
 10398                           
 10399                           	psect	text33
 10400  0047C8                     __ptext33:
 10401                           	callstack 0
 10402  0047C8                     _abs:
 10403                           	callstack 23
 10404  0047C8  BE14               	btfsc	(abs@a+1)^0,7,c
 10405  0047CA  EFF1  F023         	goto	u5100
 10406  0047CE  5014               	movf	(abs@a+1)^0,w,c
 10407  0047D0  E106               	bnz	u5101
 10408  0047D2  0413               	decf	abs@a^0,w,c
 10409  0047D4  B0D8               	btfsc	status,0,c
 10410  0047D6  EFEF  F023         	goto	u5101
 10411  0047DA  EFF1  F023         	goto	u5100
 10412  0047DE                     u5101:
 10413  0047DE  EFFF  F023         	goto	l1402
 10414  0047E2                     u5100:
 10415  0047E2  C013  F015         	movff	abs@a,??_abs
 10416  0047E6  C014  F016         	movff	abs@a+1,??_abs+1
 10417  0047EA  1E15               	comf	??_abs^0,f,c
 10418  0047EC  1E16               	comf	(??_abs+1)^0,f,c
 10419  0047EE  4A15               	infsnz	??_abs^0,f,c
 10420  0047F0  2A16               	incf	(??_abs+1)^0,f,c
 10421  0047F2  C015  F013         	movff	??_abs,?_abs
 10422  0047F6  C016  F014         	movff	??_abs+1,?_abs+1
 10423  0047FA  EF03  F024         	goto	l1405
 10424  0047FE                     l1402:
 10425  0047FE  C013  F013         	movff	abs@a,?_abs
 10426  004802  C014  F014         	movff	abs@a+1,?_abs+1
 10427  004806                     l1405:
 10428  004806  0012               	return		;funcret
 10429  004808                     __end_of_abs:
 10430                           	callstack 0
 10431                           
 10432 ;; *************** function ___aomod *****************
 10433 ;; Defined at:
 10434 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
 10435 ;; Parameters:    Size  Location     Type
 10436 ;;  dividend        8    0[COMRAM] long long 
 10437 ;;  divisor         8    8[COMRAM] long long 
 10438 ;; Auto vars:     Size  Location     Type
 10439 ;;  sign            1   17[COMRAM] unsigned char 
 10440 ;;  counter         1   16[COMRAM] unsigned char 
 10441 ;; Return value:  Size  Location     Type
 10442 ;;                  8    0[COMRAM] long long 
 10443 ;; Registers used:
 10444 ;;		wreg, status,2, status,0
 10445 ;; Tracked objects:
 10446 ;;		On entry : 0/0
 10447 ;;		On exit  : 0/0
 10448 ;;		Unchanged: 0/0
 10449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10450 ;;      Params:        16       0       0       0       0       0       0
 10451 ;;      Locals:         2       0       0       0       0       0       0
 10452 ;;      Temps:          0       0       0       0       0       0       0
 10453 ;;      Totals:        18       0       0       0       0       0       0
 10454 ;;Total ram usage:       18 bytes
 10455 ;; Hardware stack levels used:    1
 10456 ;; Hardware stack levels required when called:    1
 10457 ;; This function calls:
 10458 ;;		Nothing
 10459 ;; This function is called by:
 10460 ;;		_dtoa
 10461 ;; This function uses a non-reentrant model
 10462 ;;
 10463                           
 10464                           	psect	text34
 10465  00381C                     __ptext34:
 10466                           	callstack 0
 10467  00381C                     ___aomod:
 10468                           	callstack 23
 10469  00381C  0E00               	movlw	0
 10470  00381E  6E12               	movwf	___aomod@sign^0,c
 10471  003820  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 10472  003822  EF17  F01C         	goto	u4300
 10473  003826  EF15  F01C         	goto	u4301
 10474  00382A                     u4301:
 10475  00382A  EF29  F01C         	goto	l4094
 10476  00382E                     u4300:
 10477  00382E  1E08               	comf	(___aomod@dividend+7)^0,f,c
 10478  003830  1E07               	comf	(___aomod@dividend+6)^0,f,c
 10479  003832  1E06               	comf	(___aomod@dividend+5)^0,f,c
 10480  003834  1E05               	comf	(___aomod@dividend+4)^0,f,c
 10481  003836  1E04               	comf	(___aomod@dividend+3)^0,f,c
 10482  003838  1E03               	comf	(___aomod@dividend+2)^0,f,c
 10483  00383A  1E02               	comf	(___aomod@dividend+1)^0,f,c
 10484  00383C  6C01               	negf	___aomod@dividend^0,c
 10485  00383E  0E00               	movlw	0
 10486  003840  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 10487  003842  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 10488  003844  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 10489  003846  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 10490  003848  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 10491  00384A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 10492  00384C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 10493  00384E  0E01               	movlw	1
 10494  003850  6E12               	movwf	___aomod@sign^0,c
 10495  003852                     l4094:
 10496  003852  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 10497  003854  EF30  F01C         	goto	u4310
 10498  003858  EF2E  F01C         	goto	u4311
 10499  00385C                     u4311:
 10500  00385C  EF40  F01C         	goto	l4098
 10501  003860                     u4310:
 10502  003860  1E10               	comf	(___aomod@divisor+7)^0,f,c
 10503  003862  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 10504  003864  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 10505  003866  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 10506  003868  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 10507  00386A  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 10508  00386C  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 10509  00386E  6C09               	negf	___aomod@divisor^0,c
 10510  003870  0E00               	movlw	0
 10511  003872  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 10512  003874  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 10513  003876  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 10514  003878  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 10515  00387A  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 10516  00387C  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 10517  00387E  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 10518  003880                     l4098:
 10519  003880  5009               	movf	___aomod@divisor^0,w,c
 10520  003882  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 10521  003884  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 10522  003886  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 10523  003888  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 10524  00388A  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 10525  00388C  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 10526  00388E  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 10527  003890  B4D8               	btfsc	status,2,c
 10528  003892  EF4D  F01C         	goto	u4321
 10529  003896  EF4F  F01C         	goto	u4320
 10530  00389A                     u4321:
 10531  00389A  EF97  F01C         	goto	l4114
 10532  00389E                     u4320:
 10533  00389E  0E01               	movlw	1
 10534  0038A0  6E11               	movwf	___aomod@counter^0,c
 10535  0038A2  EF5D  F01C         	goto	l4104
 10536  0038A6                     l4102:
 10537  0038A6  90D8               	bcf	status,0,c
 10538  0038A8  3609               	rlcf	___aomod@divisor^0,f,c
 10539  0038AA  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 10540  0038AC  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 10541  0038AE  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 10542  0038B0  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 10543  0038B2  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 10544  0038B4  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 10545  0038B6  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 10546  0038B8  2A11               	incf	___aomod@counter^0,f,c
 10547  0038BA                     l4104:
 10548  0038BA  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 10549  0038BC  EF62  F01C         	goto	u4331
 10550  0038C0  EF64  F01C         	goto	u4330
 10551  0038C4                     u4331:
 10552  0038C4  EF53  F01C         	goto	l4102
 10553  0038C8                     u4330:
 10554  0038C8                     l4106:
 10555  0038C8  5009               	movf	___aomod@divisor^0,w,c
 10556  0038CA  5C01               	subwf	___aomod@dividend^0,w,c
 10557  0038CC  500A               	movf	(___aomod@divisor+1)^0,w,c
 10558  0038CE  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 10559  0038D0  500B               	movf	(___aomod@divisor+2)^0,w,c
 10560  0038D2  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 10561  0038D4  500C               	movf	(___aomod@divisor+3)^0,w,c
 10562  0038D6  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 10563  0038D8  500D               	movf	(___aomod@divisor+4)^0,w,c
 10564  0038DA  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 10565  0038DC  500E               	movf	(___aomod@divisor+5)^0,w,c
 10566  0038DE  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 10567  0038E0  500F               	movf	(___aomod@divisor+6)^0,w,c
 10568  0038E2  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 10569  0038E4  5010               	movf	(___aomod@divisor+7)^0,w,c
 10570  0038E6  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 10571  0038E8  A0D8               	btfss	status,0,c
 10572  0038EA  EF79  F01C         	goto	u4341
 10573  0038EE  EF7B  F01C         	goto	u4340
 10574  0038F2                     u4341:
 10575  0038F2  EF8B  F01C         	goto	l4110
 10576  0038F6                     u4340:
 10577  0038F6  5009               	movf	___aomod@divisor^0,w,c
 10578  0038F8  5E01               	subwf	___aomod@dividend^0,f,c
 10579  0038FA  500A               	movf	(___aomod@divisor+1)^0,w,c
 10580  0038FC  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 10581  0038FE  500B               	movf	(___aomod@divisor+2)^0,w,c
 10582  003900  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 10583  003902  500C               	movf	(___aomod@divisor+3)^0,w,c
 10584  003904  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 10585  003906  500D               	movf	(___aomod@divisor+4)^0,w,c
 10586  003908  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 10587  00390A  500E               	movf	(___aomod@divisor+5)^0,w,c
 10588  00390C  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 10589  00390E  500F               	movf	(___aomod@divisor+6)^0,w,c
 10590  003910  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 10591  003912  5010               	movf	(___aomod@divisor+7)^0,w,c
 10592  003914  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 10593  003916                     l4110:
 10594  003916  90D8               	bcf	status,0,c
 10595  003918  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 10596  00391A  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 10597  00391C  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 10598  00391E  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 10599  003920  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 10600  003922  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 10601  003924  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 10602  003926  3209               	rrcf	___aomod@divisor^0,f,c
 10603  003928  2E11               	decfsz	___aomod@counter^0,f,c
 10604  00392A  EF64  F01C         	goto	l4106
 10605  00392E                     l4114:
 10606  00392E  5012               	movf	___aomod@sign^0,w,c
 10607  003930  B4D8               	btfsc	status,2,c
 10608  003932  EF9D  F01C         	goto	u4351
 10609  003936  EF9F  F01C         	goto	u4350
 10610  00393A                     u4351:
 10611  00393A  EFAF  F01C         	goto	l4118
 10612  00393E                     u4350:
 10613  00393E  1E08               	comf	(___aomod@dividend+7)^0,f,c
 10614  003940  1E07               	comf	(___aomod@dividend+6)^0,f,c
 10615  003942  1E06               	comf	(___aomod@dividend+5)^0,f,c
 10616  003944  1E05               	comf	(___aomod@dividend+4)^0,f,c
 10617  003946  1E04               	comf	(___aomod@dividend+3)^0,f,c
 10618  003948  1E03               	comf	(___aomod@dividend+2)^0,f,c
 10619  00394A  1E02               	comf	(___aomod@dividend+1)^0,f,c
 10620  00394C  6C01               	negf	___aomod@dividend^0,c
 10621  00394E  0E00               	movlw	0
 10622  003950  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 10623  003952  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 10624  003954  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 10625  003956  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 10626  003958  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 10627  00395A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 10628  00395C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 10629  00395E                     l4118:
 10630  00395E  C001  F001         	movff	___aomod@dividend,?___aomod
 10631  003962  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 10632  003966  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 10633  00396A  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 10634  00396E  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 10635  003972  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 10636  003976  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 10637  00397A  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 10638  00397E  0012               	return		;funcret
 10639  003980                     __end_of___aomod:
 10640                           	callstack 0
 10641                           
 10642 ;; *************** function ___aodiv *****************
 10643 ;; Defined at:
 10644 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
 10645 ;; Parameters:    Size  Location     Type
 10646 ;;  dividend        8    0[COMRAM] long long 
 10647 ;;  divisor         8    8[COMRAM] long long 
 10648 ;; Auto vars:     Size  Location     Type
 10649 ;;  quotient        8   18[COMRAM] long long 
 10650 ;;  sign            1   17[COMRAM] unsigned char 
 10651 ;;  counter         1   16[COMRAM] unsigned char 
 10652 ;; Return value:  Size  Location     Type
 10653 ;;                  8    0[COMRAM] long long 
 10654 ;; Registers used:
 10655 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10656 ;; Tracked objects:
 10657 ;;		On entry : 0/0
 10658 ;;		On exit  : 0/0
 10659 ;;		Unchanged: 0/0
 10660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10661 ;;      Params:        16       0       0       0       0       0       0
 10662 ;;      Locals:        10       0       0       0       0       0       0
 10663 ;;      Temps:          0       0       0       0       0       0       0
 10664 ;;      Totals:        26       0       0       0       0       0       0
 10665 ;;Total ram usage:       26 bytes
 10666 ;; Hardware stack levels used:    1
 10667 ;; Hardware stack levels required when called:    1
 10668 ;; This function calls:
 10669 ;;		Nothing
 10670 ;; This function is called by:
 10671 ;;		_dtoa
 10672 ;; This function uses a non-reentrant model
 10673 ;;
 10674                           
 10675                           	psect	text35
 10676  003694                     __ptext35:
 10677                           	callstack 0
 10678  003694                     ___aodiv:
 10679                           	callstack 23
 10680  003694  0E00               	movlw	0
 10681  003696  6E12               	movwf	___aodiv@sign^0,c
 10682  003698  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 10683  00369A  EF53  F01B         	goto	u4230
 10684  00369E  EF51  F01B         	goto	u4231
 10685  0036A2                     u4231:
 10686  0036A2  EF65  F01B         	goto	l4050
 10687  0036A6                     u4230:
 10688  0036A6  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 10689  0036A8  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 10690  0036AA  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 10691  0036AC  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 10692  0036AE  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 10693  0036B0  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 10694  0036B2  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 10695  0036B4  6C09               	negf	___aodiv@divisor^0,c
 10696  0036B6  0E00               	movlw	0
 10697  0036B8  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 10698  0036BA  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 10699  0036BC  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 10700  0036BE  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 10701  0036C0  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 10702  0036C2  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 10703  0036C4  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 10704  0036C6  0E01               	movlw	1
 10705  0036C8  6E12               	movwf	___aodiv@sign^0,c
 10706  0036CA                     l4050:
 10707  0036CA  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 10708  0036CC  EF6C  F01B         	goto	u4240
 10709  0036D0  EF6A  F01B         	goto	u4241
 10710  0036D4                     u4241:
 10711  0036D4  EF7E  F01B         	goto	l4056
 10712  0036D8                     u4240:
 10713  0036D8  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 10714  0036DA  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 10715  0036DC  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 10716  0036DE  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 10717  0036E0  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 10718  0036E2  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 10719  0036E4  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 10720  0036E6  6C01               	negf	___aodiv@dividend^0,c
 10721  0036E8  0E00               	movlw	0
 10722  0036EA  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 10723  0036EC  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 10724  0036EE  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 10725  0036F0  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 10726  0036F2  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 10727  0036F4  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 10728  0036F6  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 10729  0036F8  0E01               	movlw	1
 10730  0036FA  1A12               	xorwf	___aodiv@sign^0,f,c
 10731  0036FC                     l4056:
 10732  0036FC  EE20  F013         	lfsr	2,___aodiv@quotient
 10733  003700  0E07               	movlw	7
 10734  003702                     u4251:
 10735  003702  6ADE               	clrf	postinc2,c
 10736  003704  06E8               	decf	wreg,f,c
 10737  003706  E2FD               	bc	u4251
 10738  003708  5009               	movf	___aodiv@divisor^0,w,c
 10739  00370A  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 10740  00370C  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 10741  00370E  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 10742  003710  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 10743  003712  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 10744  003714  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 10745  003716  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 10746  003718  B4D8               	btfsc	status,2,c
 10747  00371A  EF91  F01B         	goto	u4261
 10748  00371E  EF93  F01B         	goto	u4260
 10749  003722                     u4261:
 10750  003722  EFE5  F01B         	goto	l4078
 10751  003726                     u4260:
 10752  003726  0E01               	movlw	1
 10753  003728  6E11               	movwf	___aodiv@counter^0,c
 10754  00372A  EFA1  F01B         	goto	l4064
 10755  00372E                     l4062:
 10756  00372E  90D8               	bcf	status,0,c
 10757  003730  3609               	rlcf	___aodiv@divisor^0,f,c
 10758  003732  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 10759  003734  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 10760  003736  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 10761  003738  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 10762  00373A  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 10763  00373C  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 10764  00373E  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 10765  003740  2A11               	incf	___aodiv@counter^0,f,c
 10766  003742                     l4064:
 10767  003742  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 10768  003744  EFA6  F01B         	goto	u4271
 10769  003748  EFA8  F01B         	goto	u4270
 10770  00374C                     u4271:
 10771  00374C  EF97  F01B         	goto	l4062
 10772  003750                     u4270:
 10773  003750                     l4066:
 10774  003750  90D8               	bcf	status,0,c
 10775  003752  3613               	rlcf	___aodiv@quotient^0,f,c
 10776  003754  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 10777  003756  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 10778  003758  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 10779  00375A  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 10780  00375C  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 10781  00375E  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 10782  003760  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 10783  003762  5009               	movf	___aodiv@divisor^0,w,c
 10784  003764  5C01               	subwf	___aodiv@dividend^0,w,c
 10785  003766  500A               	movf	(___aodiv@divisor+1)^0,w,c
 10786  003768  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 10787  00376A  500B               	movf	(___aodiv@divisor+2)^0,w,c
 10788  00376C  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 10789  00376E  500C               	movf	(___aodiv@divisor+3)^0,w,c
 10790  003770  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 10791  003772  500D               	movf	(___aodiv@divisor+4)^0,w,c
 10792  003774  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 10793  003776  500E               	movf	(___aodiv@divisor+5)^0,w,c
 10794  003778  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 10795  00377A  500F               	movf	(___aodiv@divisor+6)^0,w,c
 10796  00377C  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 10797  00377E  5010               	movf	(___aodiv@divisor+7)^0,w,c
 10798  003780  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 10799  003782  A0D8               	btfss	status,0,c
 10800  003784  EFC6  F01B         	goto	u4281
 10801  003788  EFC8  F01B         	goto	u4280
 10802  00378C                     u4281:
 10803  00378C  EFD9  F01B         	goto	l4074
 10804  003790                     u4280:
 10805  003790  5009               	movf	___aodiv@divisor^0,w,c
 10806  003792  5E01               	subwf	___aodiv@dividend^0,f,c
 10807  003794  500A               	movf	(___aodiv@divisor+1)^0,w,c
 10808  003796  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 10809  003798  500B               	movf	(___aodiv@divisor+2)^0,w,c
 10810  00379A  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 10811  00379C  500C               	movf	(___aodiv@divisor+3)^0,w,c
 10812  00379E  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 10813  0037A0  500D               	movf	(___aodiv@divisor+4)^0,w,c
 10814  0037A2  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 10815  0037A4  500E               	movf	(___aodiv@divisor+5)^0,w,c
 10816  0037A6  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 10817  0037A8  500F               	movf	(___aodiv@divisor+6)^0,w,c
 10818  0037AA  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 10819  0037AC  5010               	movf	(___aodiv@divisor+7)^0,w,c
 10820  0037AE  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 10821  0037B0  8013               	bsf	___aodiv@quotient^0,0,c
 10822  0037B2                     l4074:
 10823  0037B2  90D8               	bcf	status,0,c
 10824  0037B4  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 10825  0037B6  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 10826  0037B8  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 10827  0037BA  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 10828  0037BC  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 10829  0037BE  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 10830  0037C0  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 10831  0037C2  3209               	rrcf	___aodiv@divisor^0,f,c
 10832  0037C4  2E11               	decfsz	___aodiv@counter^0,f,c
 10833  0037C6  EFA8  F01B         	goto	l4066
 10834  0037CA                     l4078:
 10835  0037CA  5012               	movf	___aodiv@sign^0,w,c
 10836  0037CC  B4D8               	btfsc	status,2,c
 10837  0037CE  EFEB  F01B         	goto	u4291
 10838  0037D2  EFED  F01B         	goto	u4290
 10839  0037D6                     u4291:
 10840  0037D6  EFFD  F01B         	goto	l4082
 10841  0037DA                     u4290:
 10842  0037DA  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 10843  0037DC  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 10844  0037DE  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 10845  0037E0  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 10846  0037E2  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 10847  0037E4  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 10848  0037E6  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 10849  0037E8  6C13               	negf	___aodiv@quotient^0,c
 10850  0037EA  0E00               	movlw	0
 10851  0037EC  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 10852  0037EE  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 10853  0037F0  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 10854  0037F2  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 10855  0037F4  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 10856  0037F6  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 10857  0037F8  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 10858  0037FA                     l4082:
 10859  0037FA  C013  F001         	movff	___aodiv@quotient,?___aodiv
 10860  0037FE  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 10861  003802  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 10862  003806  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 10863  00380A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 10864  00380E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 10865  003812  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 10866  003816  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 10867  00381A  0012               	return		;funcret
 10868  00381C                     __end_of___aodiv:
 10869                           	callstack 0
 10870                           
 10871 ;; *************** function _atoi *****************
 10872 ;; Defined at:
 10873 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
 10874 ;; Parameters:    Size  Location     Type
 10875 ;;  s               2    7[COMRAM] PTR const unsigned char 
 10876 ;;		 -> STR_16(13), STR_14(14), STR_12(16), STR_10(16), 
 10877 ;;		 -> STR_8(18), STR_6(18), STR_4(18), STR_2(15), 
 10878 ;; Auto vars:     Size  Location     Type
 10879 ;;  n               2   20[COMRAM] int 
 10880 ;;  neg             2   13[COMRAM] int 
 10881 ;; Return value:  Size  Location     Type
 10882 ;;                  2    7[COMRAM] int 
 10883 ;; Registers used:
 10884 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10885 ;; Tracked objects:
 10886 ;;		On entry : 0/0
 10887 ;;		On exit  : 0/0
 10888 ;;		Unchanged: 0/0
 10889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10890 ;;      Params:         2       0       0       0       0       0       0
 10891 ;;      Locals:         9       0       0       0       0       0       0
 10892 ;;      Temps:          4       0       0       0       0       0       0
 10893 ;;      Totals:        15       0       0       0       0       0       0
 10894 ;;Total ram usage:       15 bytes
 10895 ;; Hardware stack levels used:    1
 10896 ;; Hardware stack levels required when called:    2
 10897 ;; This function calls:
 10898 ;;		___wmul
 10899 ;;		_isdigit
 10900 ;;		_isspace
 10901 ;; This function is called by:
 10902 ;;		_vfpfcnvrt
 10903 ;; This function uses a non-reentrant model
 10904 ;;
 10905                           
 10906                           	psect	text36
 10907  003504                     __ptext36:
 10908                           	callstack 0
 10909  003504                     _atoi:
 10910                           	callstack 23
 10911  003504  0E00               	movlw	0
 10912  003506  6E16               	movwf	(atoi@n+1)^0,c
 10913  003508  0E00               	movlw	0
 10914  00350A  6E15               	movwf	atoi@n^0,c
 10915  00350C  0E00               	movlw	0
 10916  00350E  6E0F               	movwf	(atoi@neg+1)^0,c
 10917  003510  0E00               	movlw	0
 10918  003512  6E0E               	movwf	atoi@neg^0,c
 10919  003514  EF8E  F01A         	goto	l5036
 10920  003518                     l5034:
 10921  003518  4A08               	infsnz	atoi@s^0,f,c
 10922  00351A  2A09               	incf	(atoi@s+1)^0,f,c
 10923  00351C                     l5036:
 10924  00351C  0E01               	movlw	1
 10925  00351E  6E14               	movwf	_atoi$2937^0,c
 10926  003520  C008  FFF6         	movff	atoi@s,tblptrl
 10927  003524  C009  FFF7         	movff	atoi@s+1,tblptrh
 10928  003528                     	if	0	;tblptru may be non-zero
 10929  003528                     	endif
 10930  003528                     	if	0	;tblptru may be non-zero
 10931  003528                     	endif
 10932  003528  0008               	tblrd		*
 10933  00352A  50F5               	movf	tablat,w,c
 10934  00352C  0A20               	xorlw	32
 10935  00352E  B4D8               	btfsc	status,2,c
 10936  003530  EF9C  F01A         	goto	u6041
 10937  003534  EF9E  F01A         	goto	u6040
 10938  003538                     u6041:
 10939  003538  EFBB  F01A         	goto	l5044
 10940  00353C                     u6040:
 10941  00353C  0EF7               	movlw	247
 10942  00353E  6E0A               	movwf	??_atoi^0,c
 10943  003540  0EFF               	movlw	255
 10944  003542  6E0B               	movwf	(??_atoi+1)^0,c
 10945  003544  C008  FFF6         	movff	atoi@s,tblptrl
 10946  003548  C009  FFF7         	movff	atoi@s+1,tblptrh
 10947  00354C                     	if	0	;tblptru may be non-zero
 10948  00354C                     	endif
 10949  00354C                     	if	0	;tblptru may be non-zero
 10950  00354C                     	endif
 10951  00354C  0008               	tblrd		*
 10952  00354E  50F5               	movf	tablat,w,c
 10953  003550  6E0C               	movwf	(??_atoi+2)^0,c
 10954  003552  6A0D               	clrf	(??_atoi+3)^0,c
 10955  003554  500A               	movf	??_atoi^0,w,c
 10956  003556  260C               	addwf	(??_atoi+2)^0,f,c
 10957  003558  500B               	movf	(??_atoi+1)^0,w,c
 10958  00355A  220D               	addwfc	(??_atoi+3)^0,f,c
 10959  00355C  500D               	movf	(??_atoi+3)^0,w,c
 10960  00355E  E109               	bnz	u6050
 10961  003560  0E05               	movlw	5
 10962  003562  5C0C               	subwf	(??_atoi+2)^0,w,c
 10963  003564  A0D8               	btfss	status,0,c
 10964  003566  EFB7  F01A         	goto	u6051
 10965  00356A  EFB9  F01A         	goto	u6050
 10966  00356E                     u6051:
 10967  00356E  EFBB  F01A         	goto	l5044
 10968  003572                     u6050:
 10969  003572  0E00               	movlw	0
 10970  003574  6E14               	movwf	_atoi$2937^0,c
 10971  003576                     l5044:
 10972  003576  C014  F010         	movff	_atoi$2937,_atoi$2936
 10973  00357A  6A11               	clrf	(_atoi$2936+1)^0,c
 10974  00357C  5010               	movf	_atoi$2936^0,w,c
 10975  00357E  1011               	iorwf	(_atoi$2936+1)^0,w,c
 10976  003580  A4D8               	btfss	status,2,c
 10977  003582  EFC5  F01A         	goto	u6061
 10978  003586  EFC7  F01A         	goto	u6060
 10979  00358A                     u6061:
 10980  00358A  EF8C  F01A         	goto	l5034
 10981  00358E                     u6060:
 10982  00358E  EFD1  F01A         	goto	l5054
 10983  003592                     l5050:
 10984  003592  0E00               	movlw	0
 10985  003594  6E0F               	movwf	(atoi@neg+1)^0,c
 10986  003596  0E01               	movlw	1
 10987  003598  6E0E               	movwf	atoi@neg^0,c
 10988  00359A                     l5052:
 10989  00359A  4A08               	infsnz	atoi@s^0,f,c
 10990  00359C  2A09               	incf	(atoi@s+1)^0,f,c
 10991  00359E  EF06  F01B         	goto	l5060
 10992  0035A2                     l5054:
 10993  0035A2  C008  FFF6         	movff	atoi@s,tblptrl
 10994  0035A6  C009  FFF7         	movff	atoi@s+1,tblptrh
 10995  0035AA                     	if	0	;tblptru may be non-zero
 10996  0035AA                     	endif
 10997  0035AA                     	if	0	;tblptru may be non-zero
 10998  0035AA                     	endif
 10999  0035AA  0008               	tblrd		*
 11000  0035AC  50F5               	movf	tablat,w,c
 11001  0035AE  6E0A               	movwf	??_atoi^0,c
 11002  0035B0  6A0B               	clrf	(??_atoi+1)^0,c
 11003                           
 11004                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11005                           ; Switch size 1, requested type "simple"
 11006                           ; Number of cases is 1, Range of values is 0 to 0
 11007                           ; switch strategies available:
 11008                           ; Name         Instructions Cycles
 11009                           ; simple_byte            4     3 (average)
 11010                           ;	Chosen strategy is simple_byte
 11011  0035B2  500B               	movf	(??_atoi+1)^0,w,c
 11012  0035B4  0A00               	xorlw	0	; case 0
 11013  0035B6  B4D8               	btfsc	status,2,c
 11014  0035B8  EFE0  F01A         	goto	l6126
 11015  0035BC  EF06  F01B         	goto	l5060
 11016  0035C0                     l6126:
 11017                           
 11018                           ; Switch size 1, requested type "simple"
 11019                           ; Number of cases is 2, Range of values is 43 to 45
 11020                           ; switch strategies available:
 11021                           ; Name         Instructions Cycles
 11022                           ; simple_byte            7     4 (average)
 11023                           ;	Chosen strategy is simple_byte
 11024  0035C0  500A               	movf	??_atoi^0,w,c
 11025  0035C2  0A2B               	xorlw	43	; case 43
 11026  0035C4  B4D8               	btfsc	status,2,c
 11027  0035C6  EFCD  F01A         	goto	l5052
 11028  0035CA  0A06               	xorlw	6	; case 45
 11029  0035CC  B4D8               	btfsc	status,2,c
 11030  0035CE  EFC9  F01A         	goto	l5050
 11031  0035D2  EF06  F01B         	goto	l5060
 11032  0035D6                     l5056:
 11033  0035D6  C015  F001         	movff	atoi@n,___wmul@multiplier
 11034  0035DA  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 11035  0035DE  0E00               	movlw	0
 11036  0035E0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11037  0035E2  0E0A               	movlw	10
 11038  0035E4  6E03               	movwf	___wmul@multiplicand^0,c
 11039  0035E6  ECA5  F024         	call	___wmul	;wreg free
 11040  0035EA  C008  FFF6         	movff	atoi@s,tblptrl
 11041  0035EE  C009  FFF7         	movff	atoi@s+1,tblptrh
 11042  0035F2                     	if	0	;tblptru may be non-zero
 11043  0035F2                     	endif
 11044  0035F2                     	if	0	;tblptru may be non-zero
 11045  0035F2                     	endif
 11046  0035F2  0008               	tblrd		*
 11047  0035F4  50F5               	movf	tablat,w,c
 11048  0035F6  5E01               	subwf	?___wmul^0,f,c
 11049  0035F8  0E00               	movlw	0
 11050  0035FA  5A02               	subwfb	(?___wmul+1)^0,f,c
 11051  0035FC  0E30               	movlw	48
 11052  0035FE  2401               	addwf	?___wmul^0,w,c
 11053  003600  6E15               	movwf	atoi@n^0,c
 11054  003602  0E00               	movlw	0
 11055  003604  2002               	addwfc	(?___wmul+1)^0,w,c
 11056  003606  6E16               	movwf	(atoi@n+1)^0,c
 11057  003608  EFCD  F01A         	goto	l5052
 11058  00360C                     l5060:
 11059  00360C  0ED0               	movlw	208
 11060  00360E  6E0A               	movwf	??_atoi^0,c
 11061  003610  0EFF               	movlw	255
 11062  003612  6E0B               	movwf	(??_atoi+1)^0,c
 11063  003614  C008  FFF6         	movff	atoi@s,tblptrl
 11064  003618  C009  FFF7         	movff	atoi@s+1,tblptrh
 11065  00361C                     	if	0	;tblptru may be non-zero
 11066  00361C                     	endif
 11067  00361C                     	if	0	;tblptru may be non-zero
 11068  00361C                     	endif
 11069  00361C  0008               	tblrd		*
 11070  00361E  50F5               	movf	tablat,w,c
 11071  003620  6E0C               	movwf	(??_atoi+2)^0,c
 11072  003622  6A0D               	clrf	(??_atoi+3)^0,c
 11073  003624  500A               	movf	??_atoi^0,w,c
 11074  003626  260C               	addwf	(??_atoi+2)^0,f,c
 11075  003628  500B               	movf	(??_atoi+1)^0,w,c
 11076  00362A  220D               	addwfc	(??_atoi+3)^0,f,c
 11077  00362C  500D               	movf	(??_atoi+3)^0,w,c
 11078  00362E  E10A               	bnz	u6070
 11079  003630  0E0A               	movlw	10
 11080  003632  5C0C               	subwf	(??_atoi+2)^0,w,c
 11081  003634  A0D8               	btfss	status,0,c
 11082  003636  EF1F  F01B         	goto	u6071
 11083  00363A  EF22  F01B         	goto	u6070
 11084  00363E                     u6071:
 11085  00363E  0E01               	movlw	1
 11086  003640  EF23  F01B         	goto	u6080
 11087  003644                     u6070:
 11088  003644  0E00               	movlw	0
 11089  003646                     u6080:
 11090  003646  6E12               	movwf	_atoi$2938^0,c
 11091  003648  6A13               	clrf	(_atoi$2938+1)^0,c
 11092  00364A  5012               	movf	_atoi$2938^0,w,c
 11093  00364C  1013               	iorwf	(_atoi$2938+1)^0,w,c
 11094  00364E  A4D8               	btfss	status,2,c
 11095  003650  EF2C  F01B         	goto	u6091
 11096  003654  EF2E  F01B         	goto	u6090
 11097  003658                     u6091:
 11098  003658  EFEB  F01A         	goto	l5056
 11099  00365C                     u6090:
 11100  00365C  500E               	movf	atoi@neg^0,w,c
 11101  00365E  100F               	iorwf	(atoi@neg+1)^0,w,c
 11102  003660  A4D8               	btfss	status,2,c
 11103  003662  EF35  F01B         	goto	u6101
 11104  003666  EF37  F01B         	goto	u6100
 11105  00366A                     u6101:
 11106  00366A  EF45  F01B         	goto	l1433
 11107  00366E                     u6100:
 11108  00366E  C015  F00A         	movff	atoi@n,??_atoi
 11109  003672  C016  F00B         	movff	atoi@n+1,??_atoi+1
 11110  003676  1E0A               	comf	??_atoi^0,f,c
 11111  003678  1E0B               	comf	(??_atoi+1)^0,f,c
 11112  00367A  4A0A               	infsnz	??_atoi^0,f,c
 11113  00367C  2A0B               	incf	(??_atoi+1)^0,f,c
 11114  00367E  C00A  F008         	movff	??_atoi,?_atoi
 11115  003682  C00B  F009         	movff	??_atoi+1,?_atoi+1
 11116  003686  EF49  F01B         	goto	l1436
 11117  00368A                     l1433:
 11118  00368A  C015  F008         	movff	atoi@n,?_atoi
 11119  00368E  C016  F009         	movff	atoi@n+1,?_atoi+1
 11120  003692                     l1436:
 11121  003692  0012               	return		;funcret
 11122  003694                     __end_of_atoi:
 11123                           	callstack 0
 11124                           
 11125 ;; *************** function _isspace *****************
 11126 ;; Defined at:
 11127 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
 11128 ;; Parameters:    Size  Location     Type
 11129 ;;  c               2    0[COMRAM] int 
 11130 ;; Auto vars:     Size  Location     Type
 11131 ;;		None
 11132 ;; Return value:  Size  Location     Type
 11133 ;;                  2    0[COMRAM] int 
 11134 ;; Registers used:
 11135 ;;		wreg, status,2, status,0
 11136 ;; Tracked objects:
 11137 ;;		On entry : 0/0
 11138 ;;		On exit  : 0/0
 11139 ;;		Unchanged: 0/0
 11140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11141 ;;      Params:         2       0       0       0       0       0       0
 11142 ;;      Locals:         1       0       0       0       0       0       0
 11143 ;;      Temps:          4       0       0       0       0       0       0
 11144 ;;      Totals:         7       0       0       0       0       0       0
 11145 ;;Total ram usage:        7 bytes
 11146 ;; Hardware stack levels used:    1
 11147 ;; Hardware stack levels required when called:    1
 11148 ;; This function calls:
 11149 ;;		Nothing
 11150 ;; This function is called by:
 11151 ;;		_atoi
 11152 ;; This function uses a non-reentrant model
 11153 ;;
 11154                           
 11155                           	psect	text37
 11156  004654                     __ptext37:
 11157                           	callstack 0
 11158  004654                     _isspace:
 11159                           	callstack 23
 11160  004654  0E01               	movlw	1
 11161  004656  6E07               	movwf	_isspace$2967^0,c
 11162  004658  0E20               	movlw	32
 11163  00465A  1801               	xorwf	isspace@c^0,w,c
 11164  00465C  1002               	iorwf	(isspace@c+1)^0,w,c
 11165  00465E  B4D8               	btfsc	status,2,c
 11166  004660  EF34  F023         	goto	u5351
 11167  004664  EF36  F023         	goto	u5350
 11168  004668                     u5351:
 11169  004668  EF4F  F023         	goto	l4668
 11170  00466C                     u5350:
 11171  00466C  0EF7               	movlw	247
 11172  00466E  6E03               	movwf	??_isspace^0,c
 11173  004670  0EFF               	movlw	255
 11174  004672  6E04               	movwf	(??_isspace+1)^0,c
 11175  004674  C001  F005         	movff	isspace@c,??_isspace+2
 11176  004678  C002  F006         	movff	isspace@c+1,??_isspace+3
 11177  00467C  5003               	movf	??_isspace^0,w,c
 11178  00467E  2605               	addwf	(??_isspace+2)^0,f,c
 11179  004680  5004               	movf	(??_isspace+1)^0,w,c
 11180  004682  2206               	addwfc	(??_isspace+3)^0,f,c
 11181  004684  5006               	movf	(??_isspace+3)^0,w,c
 11182  004686  E109               	bnz	u5360
 11183  004688  0E05               	movlw	5
 11184  00468A  5C05               	subwf	(??_isspace+2)^0,w,c
 11185  00468C  A0D8               	btfss	status,0,c
 11186  00468E  EF4B  F023         	goto	u5361
 11187  004692  EF4D  F023         	goto	u5360
 11188  004696                     u5361:
 11189  004696  EF4F  F023         	goto	l4668
 11190  00469A                     u5360:
 11191  00469A  0E00               	movlw	0
 11192  00469C  6E07               	movwf	_isspace$2967^0,c
 11193  00469E                     l4668:
 11194  00469E  C007  F001         	movff	_isspace$2967,?_isspace
 11195  0046A2  6A02               	clrf	(?_isspace+1)^0,c
 11196  0046A4  0012               	return		;funcret
 11197  0046A6                     __end_of_isspace:
 11198                           	callstack 0
 11199                           
 11200 ;; *************** function _isdigit *****************
 11201 ;; Defined at:
 11202 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
 11203 ;; Parameters:    Size  Location     Type
 11204 ;;  c               2    0[COMRAM] int 
 11205 ;; Auto vars:     Size  Location     Type
 11206 ;;		None
 11207 ;; Return value:  Size  Location     Type
 11208 ;;                  2    0[COMRAM] int 
 11209 ;; Registers used:
 11210 ;;		wreg, status,2, status,0
 11211 ;; Tracked objects:
 11212 ;;		On entry : 0/0
 11213 ;;		On exit  : 0/0
 11214 ;;		Unchanged: 0/0
 11215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11216 ;;      Params:         2       0       0       0       0       0       0
 11217 ;;      Locals:         0       0       0       0       0       0       0
 11218 ;;      Temps:          4       0       0       0       0       0       0
 11219 ;;      Totals:         6       0       0       0       0       0       0
 11220 ;;Total ram usage:        6 bytes
 11221 ;; Hardware stack levels used:    1
 11222 ;; Hardware stack levels required when called:    1
 11223 ;; This function calls:
 11224 ;;		Nothing
 11225 ;; This function is called by:
 11226 ;;		_vfpfcnvrt
 11227 ;;		_atoi
 11228 ;; This function uses a non-reentrant model
 11229 ;;
 11230                           
 11231                           	psect	text38
 11232  004878                     __ptext38:
 11233                           	callstack 0
 11234  004878                     _isdigit:
 11235                           	callstack 24
 11236  004878  0ED0               	movlw	208
 11237  00487A  6E03               	movwf	??_isdigit^0,c
 11238  00487C  0EFF               	movlw	255
 11239  00487E  6E04               	movwf	(??_isdigit+1)^0,c
 11240  004880  C001  F005         	movff	isdigit@c,??_isdigit+2
 11241  004884  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 11242  004888  5003               	movf	??_isdigit^0,w,c
 11243  00488A  2605               	addwf	(??_isdigit+2)^0,f,c
 11244  00488C  5004               	movf	(??_isdigit+1)^0,w,c
 11245  00488E  2206               	addwfc	(??_isdigit+3)^0,f,c
 11246  004890  5006               	movf	(??_isdigit+3)^0,w,c
 11247  004892  E10A               	bnz	u5330
 11248  004894  0E0A               	movlw	10
 11249  004896  5C05               	subwf	(??_isdigit+2)^0,w,c
 11250  004898  A0D8               	btfss	status,0,c
 11251  00489A  EF51  F024         	goto	u5331
 11252  00489E  EF54  F024         	goto	u5330
 11253  0048A2                     u5331:
 11254  0048A2  0E01               	movlw	1
 11255  0048A4  EF55  F024         	goto	u5340
 11256  0048A8                     u5330:
 11257  0048A8  0E00               	movlw	0
 11258  0048AA                     u5340:
 11259  0048AA  6E01               	movwf	?_isdigit^0,c
 11260  0048AC  6A02               	clrf	(?_isdigit+1)^0,c
 11261  0048AE  0012               	return		;funcret
 11262  0048B0                     __end_of_isdigit:
 11263                           	callstack 0
 11264                           
 11265 ;; *************** function ___wmul *****************
 11266 ;; Defined at:
 11267 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
 11268 ;; Parameters:    Size  Location     Type
 11269 ;;  multiplier      2    0[COMRAM] unsigned int 
 11270 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11271 ;; Auto vars:     Size  Location     Type
 11272 ;;  product         2    4[COMRAM] unsigned int 
 11273 ;; Return value:  Size  Location     Type
 11274 ;;                  2    0[COMRAM] unsigned int 
 11275 ;; Registers used:
 11276 ;;		wreg, status,2, status,0, prodl, prodh
 11277 ;; Tracked objects:
 11278 ;;		On entry : 0/0
 11279 ;;		On exit  : 0/0
 11280 ;;		Unchanged: 0/0
 11281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11282 ;;      Params:         4       0       0       0       0       0       0
 11283 ;;      Locals:         2       0       0       0       0       0       0
 11284 ;;      Temps:          0       0       0       0       0       0       0
 11285 ;;      Totals:         6       0       0       0       0       0       0
 11286 ;;Total ram usage:        6 bytes
 11287 ;; Hardware stack levels used:    1
 11288 ;; Hardware stack levels required when called:    1
 11289 ;; This function calls:
 11290 ;;		Nothing
 11291 ;; This function is called by:
 11292 ;;		_atoi
 11293 ;; This function uses a non-reentrant model
 11294 ;;
 11295                           
 11296                           	psect	text39
 11297  00494A                     __ptext39:
 11298                           	callstack 0
 11299  00494A                     ___wmul:
 11300                           	callstack 23
 11301  00494A  5001               	movf	___wmul@multiplier^0,w,c
 11302  00494C  0203               	mulwf	___wmul@multiplicand^0,c
 11303  00494E  CFF3 F005          	movff	prodl,___wmul@product
 11304  004952  CFF4 F006          	movff	prodh,___wmul@product+1
 11305  004956  5001               	movf	___wmul@multiplier^0,w,c
 11306  004958  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11307  00495A  50F3               	movf	243,w,c
 11308  00495C  2606               	addwf	(___wmul@product+1)^0,f,c
 11309  00495E  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11310  004960  0203               	mulwf	___wmul@multiplicand^0,c
 11311  004962  50F3               	movf	243,w,c
 11312  004964  2606               	addwf	(___wmul@product+1)^0,f,c
 11313  004966  C005  F001         	movff	___wmul@product,?___wmul
 11314  00496A  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11315  00496E  0012               	return		;funcret
 11316  004970                     __end_of___wmul:
 11317                           	callstack 0
 11318                           
 11319 ;; *************** function _eepromWrite *****************
 11320 ;; Defined at:
 11321 ;;		line 62 in file "fs_eeprom.c"
 11322 ;; Parameters:    Size  Location     Type
 11323 ;;  address         1    wreg     unsigned char 
 11324 ;;  data            1    0[COMRAM] unsigned char 
 11325 ;; Auto vars:     Size  Location     Type
 11326 ;;  address         1    1[COMRAM] unsigned char 
 11327 ;; Return value:  Size  Location     Type
 11328 ;;                  1    wreg      void 
 11329 ;; Registers used:
 11330 ;;		wreg, status,2
 11331 ;; Tracked objects:
 11332 ;;		On entry : 0/0
 11333 ;;		On exit  : 0/0
 11334 ;;		Unchanged: 0/0
 11335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11336 ;;      Params:         1       0       0       0       0       0       0
 11337 ;;      Locals:         1       0       0       0       0       0       0
 11338 ;;      Temps:          0       0       0       0       0       0       0
 11339 ;;      Totals:         2       0       0       0       0       0       0
 11340 ;;Total ram usage:        2 bytes
 11341 ;; Hardware stack levels used:    1
 11342 ;; Hardware stack levels required when called:    1
 11343 ;; This function calls:
 11344 ;;		Nothing
 11345 ;; This function is called by:
 11346 ;;		_stateMachine
 11347 ;; This function uses a non-reentrant model
 11348 ;;
 11349                           
 11350                           	psect	text40
 11351  00491C                     __ptext40:
 11352                           	callstack 0
 11353  00491C                     _eepromWrite:
 11354                           	callstack 27
 11355                           
 11356                           ;incstack = 0
 11357                           ;eepromWrite@address stored from wreg
 11358  00491C  6E02               	movwf	eepromWrite@address^0,c
 11359  00491E                     
 11360                           ;fs_eeprom.c: 62: void eepromWrite(uint8_t address, uint8_t data);fs_eeprom.c: 63: {;fs_
      +                          eeprom.c: 66:     EEADR = (uint8_t)address;
 11361  00491E  C002  FFA9         	movff	eepromWrite@address,4009	;volatile
 11362  004922                     
 11363                           ;fs_eeprom.c: 68:     EEDATA = data;
 11364  004922  C001  FFA8         	movff	eepromWrite@data,4008	;volatile
 11365  004926                     
 11366                           ;fs_eeprom.c: 69:     EECON1bits.EEPGD = 0;
 11367  004926  9EA6               	bcf	166,7,c	;volsfr
 11368  004928                     
 11369                           ;fs_eeprom.c: 70:     EECON1bits.CFGS = 0;
 11370  004928  9CA6               	bcf	166,6,c	;volsfr
 11371  00492A                     
 11372                           ;fs_eeprom.c: 71:     EECON1bits.WREN = 1;
 11373  00492A  84A6               	bsf	166,2,c	;volsfr
 11374  00492C                     
 11375                           ;fs_eeprom.c: 75:     EECON2 = 0x55;
 11376  00492C  0E55               	movlw	85
 11377  00492E  6EA7               	movwf	167,c	;volsfr
 11378  004930                     
 11379                           ;fs_eeprom.c: 76:     EECON2 = 0xAA;
 11380  004930  0EAA               	movlw	170
 11381  004932  6EA7               	movwf	167,c	;volsfr
 11382  004934                     
 11383                           ;fs_eeprom.c: 77:     EECON1bits.WR = 1;
 11384  004934  82A6               	bsf	166,1,c	;volsfr
 11385  004936                     l76:
 11386                           
 11387                           ;fs_eeprom.c: 80:     while(PIR2bits.EEIF == 0)
 11388  004936  A8A1               	btfss	161,4,c	;volatile
 11389  004938  EFA0  F024         	goto	u6421
 11390  00493C  EFA2  F024         	goto	u6420
 11391  004940                     u6421:
 11392  004940  EF9B  F024         	goto	l76
 11393  004944                     u6420:
 11394  004944                     
 11395                           ;fs_eeprom.c: 85:     PIR2bits.EEIF = 0;
 11396  004944  98A1               	bcf	161,4,c	;volatile
 11397                           
 11398                           ;fs_eeprom.c: 86:     EECON1bits.WREN = 0;
 11399  004946  94A6               	bcf	166,2,c	;volsfr
 11400  004948  0012               	return		;funcret
 11401  00494A                     __end_of_eepromWrite:
 11402                           	callstack 0
 11403                           
 11404 ;; *************** function _Lcd_Write_String *****************
 11405 ;; Defined at:
 11406 ;;		line 146 in file "fs_lcd.c"
 11407 ;; Parameters:    Size  Location     Type
 11408 ;;  a               2    4[COMRAM] PTR unsigned char 
 11409 ;;		 -> STR_15(17), STR_13(17), STR_11(17), STR_9(17), 
 11410 ;;		 -> STR_7(17), STR_5(17), STR_3(17), STR_1(17), 
 11411 ;;		 -> stateMachine@textCursor2(16), 
 11412 ;; Auto vars:     Size  Location     Type
 11413 ;;  i               2    8[COMRAM] int 
 11414 ;; Return value:  Size  Location     Type
 11415 ;;                  1    wreg      void 
 11416 ;; Registers used:
 11417 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11418 ;; Tracked objects:
 11419 ;;		On entry : 0/0
 11420 ;;		On exit  : 0/0
 11421 ;;		Unchanged: 0/0
 11422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11423 ;;      Params:         2       0       0       0       0       0       0
 11424 ;;      Locals:         2       0       0       0       0       0       0
 11425 ;;      Temps:          2       0       0       0       0       0       0
 11426 ;;      Totals:         6       0       0       0       0       0       0
 11427 ;;Total ram usage:        6 bytes
 11428 ;; Hardware stack levels used:    1
 11429 ;; Hardware stack levels required when called:    3
 11430 ;; This function calls:
 11431 ;;		_Lcd_Write_Char
 11432 ;; This function is called by:
 11433 ;;		_stateMachine
 11434 ;; This function uses a non-reentrant model
 11435 ;;
 11436                           
 11437                           	psect	text41
 11438  004396                     __ptext41:
 11439                           	callstack 0
 11440  004396                     _Lcd_Write_String:
 11441                           	callstack 25
 11442  004396                     
 11443                           ;fs_lcd.c: 146: void Lcd_Write_String(char *a);fs_lcd.c: 147: {;fs_lcd.c: 148:    int i;
      +                          ;fs_lcd.c: 149:    for(i=0;a[i]!='\0';i++)
 11444  004396  0E00               	movlw	0
 11445  004398  6E0A               	movwf	(Lcd_Write_String@i+1)^0,c
 11446  00439A  0E00               	movlw	0
 11447  00439C  6E09               	movwf	Lcd_Write_String@i^0,c
 11448  00439E  EFEB  F021         	goto	l5304
 11449  0043A2                     l5300:
 11450                           
 11451                           ;fs_lcd.c: 150:    Lcd_Write_Char(a[i]);
 11452  0043A2  5009               	movf	Lcd_Write_String@i^0,w,c
 11453  0043A4  2405               	addwf	Lcd_Write_String@a^0,w,c
 11454  0043A6  6E07               	movwf	??_Lcd_Write_String^0,c
 11455  0043A8  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
 11456  0043AA  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 11457  0043AC  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
 11458  0043AE  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
 11459  0043B2  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 11460  0043B6  6AF8               	clrf	tblptru,c
 11461  0043B8  0E05               	movlw	(high __ramtop+-1)
 11462  0043BA  64F7               	cpfsgt	tblptrh,c
 11463  0043BC  D003               	bra	u6457
 11464  0043BE  0008               	tblrd		*
 11465  0043C0  50F5               	movf	tablat,w,c
 11466  0043C2  D005               	bra	u6450
 11467  0043C4                     u6457:
 11468  0043C4  CFF6 FFE9          	movff	tblptrl,fsr0l
 11469  0043C8  CFF7 FFEA          	movff	tblptrh,fsr0h
 11470  0043CC  50EF               	movf	indf0,w,c
 11471  0043CE                     u6450:
 11472  0043CE  EC73  F024         	call	_Lcd_Write_Char
 11473  0043D2  4A09               	infsnz	Lcd_Write_String@i^0,f,c
 11474  0043D4  2A0A               	incf	(Lcd_Write_String@i+1)^0,f,c
 11475  0043D6                     l5304:
 11476  0043D6  5009               	movf	Lcd_Write_String@i^0,w,c
 11477  0043D8  2405               	addwf	Lcd_Write_String@a^0,w,c
 11478  0043DA  6E07               	movwf	??_Lcd_Write_String^0,c
 11479  0043DC  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
 11480  0043DE  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 11481  0043E0  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
 11482  0043E2  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
 11483  0043E6  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 11484  0043EA  6AF8               	clrf	tblptru,c
 11485  0043EC  0E05               	movlw	(high __ramtop+-1)
 11486  0043EE  64F7               	cpfsgt	tblptrh,c
 11487  0043F0  D003               	bra	u6467
 11488  0043F2  0008               	tblrd		*
 11489  0043F4  50F5               	movf	tablat,w,c
 11490  0043F6  D005               	bra	u6460
 11491  0043F8                     u6467:
 11492  0043F8  CFF6 FFE9          	movff	tblptrl,fsr0l
 11493  0043FC  CFF7 FFEA          	movff	tblptrh,fsr0h
 11494  004400  50EF               	movf	indf0,w,c
 11495  004402                     u6460:
 11496  004402  0900               	iorlw	0
 11497  004404  A4D8               	btfss	status,2,c
 11498  004406  EF07  F022         	goto	u6471
 11499  00440A  EF09  F022         	goto	u6470
 11500  00440E                     u6471:
 11501  00440E  EFD1  F021         	goto	l5300
 11502  004412                     u6470:
 11503  004412  0012               	return		;funcret
 11504  004414                     __end_of_Lcd_Write_String:
 11505                           	callstack 0
 11506                           
 11507 ;; *************** function _Lcd_Write_Char *****************
 11508 ;; Defined at:
 11509 ;;		line 123 in file "fs_lcd.c"
 11510 ;; Parameters:    Size  Location     Type
 11511 ;;  a               1    wreg     unsigned char 
 11512 ;; Auto vars:     Size  Location     Type
 11513 ;;  a               1    3[COMRAM] unsigned char 
 11514 ;;  y               1    2[COMRAM] unsigned char 
 11515 ;;  temp            1    1[COMRAM] unsigned char 
 11516 ;; Return value:  Size  Location     Type
 11517 ;;                  1    wreg      void 
 11518 ;; Registers used:
 11519 ;;		wreg, status,2, status,0, cstack
 11520 ;; Tracked objects:
 11521 ;;		On entry : 0/0
 11522 ;;		On exit  : 0/0
 11523 ;;		Unchanged: 0/0
 11524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11525 ;;      Params:         0       0       0       0       0       0       0
 11526 ;;      Locals:         3       0       0       0       0       0       0
 11527 ;;      Temps:          0       0       0       0       0       0       0
 11528 ;;      Totals:         3       0       0       0       0       0       0
 11529 ;;Total ram usage:        3 bytes
 11530 ;; Hardware stack levels used:    1
 11531 ;; Hardware stack levels required when called:    2
 11532 ;; This function calls:
 11533 ;;		_Lcd_Port
 11534 ;; This function is called by:
 11535 ;;		_Lcd_Write_String
 11536 ;; This function uses a non-reentrant model
 11537 ;;
 11538                           
 11539                           	psect	text42
 11540  0048E6                     __ptext42:
 11541                           	callstack 0
 11542  0048E6                     _Lcd_Write_Char:
 11543                           	callstack 25
 11544                           
 11545                           ;incstack = 0
 11546                           ;Lcd_Write_Char@a stored from wreg
 11547  0048E6  6E04               	movwf	Lcd_Write_Char@a^0,c
 11548  0048E8                     
 11549                           ;fs_lcd.c: 123: void Lcd_Write_Char(char a);fs_lcd.c: 124: {;fs_lcd.c: 125:    char temp
      +                          ,y;;fs_lcd.c: 126:    temp = a&0x0F;
 11550  0048E8  5004               	movf	Lcd_Write_Char@a^0,w,c
 11551  0048EA  0B0F               	andlw	15
 11552  0048EC  6E02               	movwf	Lcd_Write_Char@temp^0,c
 11553                           
 11554                           ;fs_lcd.c: 127:    y = a&0xF0;
 11555  0048EE  5004               	movf	Lcd_Write_Char@a^0,w,c
 11556  0048F0  0BF0               	andlw	240
 11557  0048F2  6E03               	movwf	Lcd_Write_Char@y^0,c
 11558  0048F4                     
 11559                           ;fs_lcd.c: 128:    PORTEbits.RE0 = 1;
 11560  0048F4  8084               	bsf	132,0,c	;volatile
 11561  0048F6                     
 11562                           ;fs_lcd.c: 129:    Lcd_Port(y>>4);
 11563  0048F6  3803               	swapf	Lcd_Write_Char@y^0,w,c
 11564  0048F8  0B0F               	andlw	15
 11565  0048FA  ECFC  F022         	call	_Lcd_Port
 11566  0048FE                     
 11567                           ;fs_lcd.c: 130:    PORTAbits.RA3 = 1;
 11568  0048FE  8680               	bsf	128,3,c	;volatile
 11569  004900                     
 11570                           ;fs_lcd.c: 131:    _delay((unsigned long)((30)*(64000000UL/4000000.0)));
 11571  004900  0EA0               	movlw	160
 11572  004902                     u7677:
 11573  004902  2EE8               	decfsz	wreg,f,c
 11574  004904  D7FE               	bra	u7677
 11575  004906                     
 11576                           ;fs_lcd.c: 132:    PORTAbits.RA3 = 0;
 11577  004906  9680               	bcf	128,3,c	;volatile
 11578  004908                     
 11579                           ;fs_lcd.c: 133:    Lcd_Port(temp);
 11580  004908  5002               	movf	Lcd_Write_Char@temp^0,w,c
 11581  00490A  ECFC  F022         	call	_Lcd_Port
 11582  00490E                     
 11583                           ;fs_lcd.c: 134:    PORTAbits.RA3 = 1;
 11584  00490E  8680               	bsf	128,3,c	;volatile
 11585  004910                     
 11586                           ;fs_lcd.c: 135:    _delay((unsigned long)((25)*(64000000UL/4000000.0)));
 11587  004910  0E85               	movlw	133
 11588  004912                     u7687:
 11589  004912  2EE8               	decfsz	wreg,f,c
 11590  004914  D7FE               	bra	u7687
 11591  004916  F000               	nop	
 11592  004918                     
 11593                           ;fs_lcd.c: 136:    PORTAbits.RA3 = 0;
 11594  004918  9680               	bcf	128,3,c	;volatile
 11595  00491A  0012               	return		;funcret
 11596  00491C                     __end_of_Lcd_Write_Char:
 11597                           	callstack 0
 11598                           
 11599 ;; *************** function _Lcd_Set_Cursor *****************
 11600 ;; Defined at:
 11601 ;;		line 53 in file "fs_lcd.c"
 11602 ;; Parameters:    Size  Location     Type
 11603 ;;  a               1    wreg     unsigned char 
 11604 ;;  b               1    3[COMRAM] unsigned char 
 11605 ;; Auto vars:     Size  Location     Type
 11606 ;;  a               1    4[COMRAM] unsigned char 
 11607 ;;  temp            1    7[COMRAM] unsigned char 
 11608 ;;  y               1    6[COMRAM] unsigned char 
 11609 ;;  z               1    5[COMRAM] unsigned char 
 11610 ;; Return value:  Size  Location     Type
 11611 ;;                  1    wreg      void 
 11612 ;; Registers used:
 11613 ;;		wreg, status,2, status,0, cstack
 11614 ;; Tracked objects:
 11615 ;;		On entry : 0/0
 11616 ;;		On exit  : 0/0
 11617 ;;		Unchanged: 0/0
 11618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11619 ;;      Params:         1       0       0       0       0       0       0
 11620 ;;      Locals:         4       0       0       0       0       0       0
 11621 ;;      Temps:          0       0       0       0       0       0       0
 11622 ;;      Totals:         5       0       0       0       0       0       0
 11623 ;;Total ram usage:        5 bytes
 11624 ;; Hardware stack levels used:    1
 11625 ;; Hardware stack levels required when called:    3
 11626 ;; This function calls:
 11627 ;;		_Lcd_Cmd
 11628 ;; This function is called by:
 11629 ;;		_stateMachine
 11630 ;; This function uses a non-reentrant model
 11631 ;;
 11632                           
 11633                           	psect	text43
 11634  004414                     __ptext43:
 11635                           	callstack 0
 11636  004414                     _Lcd_Set_Cursor:
 11637                           	callstack 25
 11638                           
 11639                           ;incstack = 0
 11640                           ;Lcd_Set_Cursor@a stored from wreg
 11641  004414  6E05               	movwf	Lcd_Set_Cursor@a^0,c
 11642  004416                     
 11643                           ;fs_lcd.c: 53: void Lcd_Set_Cursor(char a, char b);fs_lcd.c: 54: {;fs_lcd.c: 55:    char
      +                           temp,z,y;;fs_lcd.c: 56:    if(a == 1)
 11644  004416  0405               	decf	Lcd_Set_Cursor@a^0,w,c
 11645  004418  A4D8               	btfss	status,2,c
 11646  00441A  EF11  F022         	goto	u6431
 11647  00441E  EF13  F022         	goto	u6430
 11648  004422                     u6431:
 11649  004422  EF24  F022         	goto	l5290
 11650  004426                     u6430:
 11651  004426                     
 11652                           ;fs_lcd.c: 57:    {;fs_lcd.c: 58:      temp = 0x80 + b - 1;
 11653  004426  5004               	movf	Lcd_Set_Cursor@b^0,w,c
 11654  004428  0F7F               	addlw	127
 11655  00442A  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
 11656                           
 11657                           ;fs_lcd.c: 59:       z = temp>>4;
 11658  00442C  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
 11659  00442E  0B0F               	andlw	15
 11660  004430  6E06               	movwf	Lcd_Set_Cursor@z^0,c
 11661                           
 11662                           ;fs_lcd.c: 60:       y = temp & 0x0F;
 11663  004432  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
 11664  004434  0B0F               	andlw	15
 11665  004436  6E07               	movwf	Lcd_Set_Cursor@y^0,c
 11666  004438                     
 11667                           ;fs_lcd.c: 61:       Lcd_Cmd(z);
 11668  004438  5006               	movf	Lcd_Set_Cursor@z^0,w,c
 11669  00443A  ECD9  F024         	call	_Lcd_Cmd
 11670  00443E                     
 11671                           ;fs_lcd.c: 62:       Lcd_Cmd(y);
 11672  00443E  5007               	movf	Lcd_Set_Cursor@y^0,w,c
 11673  004440  ECD9  F024         	call	_Lcd_Cmd
 11674                           
 11675                           ;fs_lcd.c: 63:    }
 11676  004444  EF3C  F022         	goto	l122
 11677  004448                     l5290:
 11678  004448  0E02               	movlw	2
 11679  00444A  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
 11680  00444C  A4D8               	btfss	status,2,c
 11681  00444E  EF2B  F022         	goto	u6441
 11682  004452  EF2D  F022         	goto	u6440
 11683  004456                     u6441:
 11684  004456  EF3C  F022         	goto	l122
 11685  00445A                     u6440:
 11686  00445A                     
 11687                           ;fs_lcd.c: 65:    {;fs_lcd.c: 66:       temp = 0xC0 + b - 1;
 11688  00445A  5004               	movf	Lcd_Set_Cursor@b^0,w,c
 11689  00445C  0FBF               	addlw	191
 11690  00445E  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
 11691                           
 11692                           ;fs_lcd.c: 67:       z = temp>>4;
 11693  004460  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
 11694  004462  0B0F               	andlw	15
 11695  004464  6E06               	movwf	Lcd_Set_Cursor@z^0,c
 11696                           
 11697                           ;fs_lcd.c: 68:       y = temp & 0x0F;
 11698  004466  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
 11699  004468  0B0F               	andlw	15
 11700  00446A  6E07               	movwf	Lcd_Set_Cursor@y^0,c
 11701  00446C                     
 11702                           ;fs_lcd.c: 69:       Lcd_Cmd(z);
 11703  00446C  5006               	movf	Lcd_Set_Cursor@z^0,w,c
 11704  00446E  ECD9  F024         	call	_Lcd_Cmd
 11705  004472                     
 11706                           ;fs_lcd.c: 70:       Lcd_Cmd(y);
 11707  004472  5007               	movf	Lcd_Set_Cursor@y^0,w,c
 11708  004474  ECD9  F024         	call	_Lcd_Cmd
 11709  004478                     l122:
 11710  004478  0012               	return		;funcret
 11711  00447A                     __end_of_Lcd_Set_Cursor:
 11712                           	callstack 0
 11713                           
 11714 ;; *************** function _buttonControlFlags *****************
 11715 ;; Defined at:
 11716 ;;		line 72 in file "fs_menu_controller.c"
 11717 ;; Parameters:    Size  Location     Type
 11718 ;;		None
 11719 ;; Auto vars:     Size  Location     Type
 11720 ;;  textCursor2    16    0[COMRAM] unsigned char [16]
 11721 ;; Return value:  Size  Location     Type
 11722 ;;                  1    wreg      void 
 11723 ;; Registers used:
 11724 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11725 ;; Tracked objects:
 11726 ;;		On entry : 0/0
 11727 ;;		On exit  : 0/0
 11728 ;;		Unchanged: 0/0
 11729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11730 ;;      Params:         0       0       0       0       0       0       0
 11731 ;;      Locals:        16       0       0       0       0       0       0
 11732 ;;      Temps:          0       0       0       0       0       0       0
 11733 ;;      Totals:        16       0       0       0       0       0       0
 11734 ;;Total ram usage:       16 bytes
 11735 ;; Hardware stack levels used:    1
 11736 ;; Hardware stack levels required when called:    1
 11737 ;; This function calls:
 11738 ;;		Nothing
 11739 ;; This function is called by:
 11740 ;;		_menuControl
 11741 ;; This function uses a non-reentrant model
 11742 ;;
 11743                           
 11744                           	psect	text44
 11745  00335E                     __ptext44:
 11746                           	callstack 0
 11747  00335E                     _buttonControlFlags:
 11748                           	callstack 28
 11749  00335E                     
 11750                           ;fs_menu_controller.c: 74:     char textCursor2[16] = {0};
 11751  00335E  EE20  F001         	lfsr	2,buttonControlFlags@textCursor2
 11752  003362  0E0F               	movlw	15
 11753  003364                     u6491:
 11754  003364  6ADE               	clrf	postinc2,c
 11755  003366  06E8               	decf	wreg,f,c
 11756  003368  E2FD               	bc	u6491
 11757  00336A                     
 11758                           ;fs_menu_controller.c: 76:     if ((button_bounce_controller.menu == 0) && (PORTBbits.RB
      +                          2 == 0))
 11759  00336A  B05E               	btfsc	_button_bounce_controller^0,0,c
 11760  00336C  EFBA  F019         	goto	u6501
 11761  003370  EFBC  F019         	goto	u6500
 11762  003374                     u6501:
 11763  003374  EFC6  F019         	goto	l330
 11764  003378                     u6500:
 11765  003378  B481               	btfsc	129,2,c	;volatile
 11766  00337A  EFC1  F019         	goto	u6511
 11767  00337E  EFC3  F019         	goto	u6510
 11768  003382                     u6511:
 11769  003382  EFC6  F019         	goto	l330
 11770  003386                     u6510:
 11771  003386                     
 11772                           ;fs_menu_controller.c: 77:     {;fs_menu_controller.c: 78:         button_bounce_control
      +                          ler.menu = 1;
 11773  003386  805E               	bsf	_button_bounce_controller^0,0,c
 11774                           
 11775                           ;fs_menu_controller.c: 79:         menu_flags.menu_input_flag = 1;
 11776  003388  0100               	movlb	0	; () banked
 11777  00338A  81F0               	bsf	_menu_flags& (0+255),0,b
 11778  00338C                     l330:
 11779                           
 11780                           ;fs_menu_controller.c: 82:     if ((PORTBbits.RB2 == 1) && (button_bounce_controller.men
      +                          u == 1))
 11781  00338C  A481               	btfss	129,2,c	;volatile
 11782  00338E  EFCB  F019         	goto	u6521
 11783  003392  EFCD  F019         	goto	u6520
 11784  003396                     u6521:
 11785  003396  EFD7  F019         	goto	l331
 11786  00339A                     u6520:
 11787  00339A  A05E               	btfss	_button_bounce_controller^0,0,c
 11788  00339C  EFD2  F019         	goto	u6531
 11789  0033A0  EFD4  F019         	goto	u6530
 11790  0033A4                     u6531:
 11791  0033A4  EFD7  F019         	goto	l331
 11792  0033A8                     u6530:
 11793  0033A8                     
 11794                           ;fs_menu_controller.c: 83:     {;fs_menu_controller.c: 84:         button_bounce_control
      +                          ler.menu = 0;
 11795  0033A8  905E               	bcf	_button_bounce_controller^0,0,c
 11796                           
 11797                           ;fs_menu_controller.c: 85:         menu_flags.menu_input_flag = 0;
 11798  0033AA  0100               	movlb	0	; () banked
 11799  0033AC  91F0               	bcf	_menu_flags& (0+255),0,b
 11800  0033AE                     l331:
 11801                           
 11802                           ;fs_menu_controller.c: 88:     if ((button_bounce_controller.pause == 0) && (PORTBbits.R
      +                          B3 == 0))
 11803  0033AE  B65E               	btfsc	_button_bounce_controller^0,3,c
 11804  0033B0  EFDC  F019         	goto	u6541
 11805  0033B4  EFDE  F019         	goto	u6540
 11806  0033B8                     u6541:
 11807  0033B8  EFE8  F019         	goto	l332
 11808  0033BC                     u6540:
 11809  0033BC  B681               	btfsc	129,3,c	;volatile
 11810  0033BE  EFE3  F019         	goto	u6551
 11811  0033C2  EFE5  F019         	goto	u6550
 11812  0033C6                     u6551:
 11813  0033C6  EFE8  F019         	goto	l332
 11814  0033CA                     u6550:
 11815  0033CA                     
 11816                           ;fs_menu_controller.c: 89:     {;fs_menu_controller.c: 90:         button_bounce_control
      +                          ler.pause = 1;
 11817  0033CA  865E               	bsf	_button_bounce_controller^0,3,c
 11818                           
 11819                           ;fs_menu_controller.c: 91:         menu_flags.menu_pause_flag = 1;
 11820  0033CC  0100               	movlb	0	; () banked
 11821  0033CE  87F0               	bsf	_menu_flags& (0+255),3,b
 11822  0033D0                     l332:
 11823                           
 11824                           ;fs_menu_controller.c: 93:     if ((PORTBbits.RB3 == 1) && (button_bounce_controller.pau
      +                          se == 1))
 11825  0033D0  A681               	btfss	129,3,c	;volatile
 11826  0033D2  EFED  F019         	goto	u6561
 11827  0033D6  EFEF  F019         	goto	u6560
 11828  0033DA                     u6561:
 11829  0033DA  EFF9  F019         	goto	l333
 11830  0033DE                     u6560:
 11831  0033DE  A65E               	btfss	_button_bounce_controller^0,3,c
 11832  0033E0  EFF4  F019         	goto	u6571
 11833  0033E4  EFF6  F019         	goto	u6570
 11834  0033E8                     u6571:
 11835  0033E8  EFF9  F019         	goto	l333
 11836  0033EC                     u6570:
 11837  0033EC                     
 11838                           ;fs_menu_controller.c: 94:     {;fs_menu_controller.c: 95:         button_bounce_control
      +                          ler.pause = 0;
 11839  0033EC  965E               	bcf	_button_bounce_controller^0,3,c
 11840                           
 11841                           ;fs_menu_controller.c: 96:         menu_flags.menu_pause_flag = 0;
 11842  0033EE  0100               	movlb	0	; () banked
 11843  0033F0  97F0               	bcf	_menu_flags& (0+255),3,b
 11844  0033F2                     l333:
 11845                           
 11846                           ;fs_menu_controller.c: 100:     if ((button_bounce_controller.start == 0) && (PORTAbits.
      +                          RA0 == 0))
 11847  0033F2  B25E               	btfsc	_button_bounce_controller^0,1,c
 11848  0033F4  EFFE  F019         	goto	u6581
 11849  0033F8  EF00  F01A         	goto	u6580
 11850  0033FC                     u6581:
 11851  0033FC  EF0A  F01A         	goto	l334
 11852  003400                     u6580:
 11853  003400  B080               	btfsc	128,0,c	;volatile
 11854  003402  EF05  F01A         	goto	u6591
 11855  003406  EF07  F01A         	goto	u6590
 11856  00340A                     u6591:
 11857  00340A  EF0A  F01A         	goto	l334
 11858  00340E                     u6590:
 11859  00340E                     
 11860                           ;fs_menu_controller.c: 101:     {;fs_menu_controller.c: 102:         button_bounce_contr
      +                          oller.start = 1;
 11861  00340E  825E               	bsf	_button_bounce_controller^0,1,c
 11862                           
 11863                           ;fs_menu_controller.c: 103:         menu_flags.menu_start_flag = 1;
 11864  003410  0100               	movlb	0	; () banked
 11865  003412  83F0               	bsf	_menu_flags& (0+255),1,b
 11866  003414                     l334:
 11867                           
 11868                           ;fs_menu_controller.c: 105:     if ((PORTAbits.RA0 == 1) && (button_bounce_controller.st
      +                          art == 1))
 11869  003414  A080               	btfss	128,0,c	;volatile
 11870  003416  EF0F  F01A         	goto	u6601
 11871  00341A  EF11  F01A         	goto	u6600
 11872  00341E                     u6601:
 11873  00341E  EF1B  F01A         	goto	l335
 11874  003422                     u6600:
 11875  003422  A25E               	btfss	_button_bounce_controller^0,1,c
 11876  003424  EF16  F01A         	goto	u6611
 11877  003428  EF18  F01A         	goto	u6610
 11878  00342C                     u6611:
 11879  00342C  EF1B  F01A         	goto	l335
 11880  003430                     u6610:
 11881  003430                     
 11882                           ;fs_menu_controller.c: 106:     {;fs_menu_controller.c: 107:         button_bounce_contr
      +                          oller.start = 0;
 11883  003430  925E               	bcf	_button_bounce_controller^0,1,c
 11884                           
 11885                           ;fs_menu_controller.c: 108:         menu_flags.menu_start_flag = 0;
 11886  003432  0100               	movlb	0	; () banked
 11887  003434  93F0               	bcf	_menu_flags& (0+255),1,b
 11888  003436                     l335:
 11889                           
 11890                           ;fs_menu_controller.c: 112:     if ((button_bounce_controller.stop == 0) && (PORTAbits.R
      +                          A5 == 0))
 11891  003436  B45E               	btfsc	_button_bounce_controller^0,2,c
 11892  003438  EF20  F01A         	goto	u6621
 11893  00343C  EF22  F01A         	goto	u6620
 11894  003440                     u6621:
 11895  003440  EF2C  F01A         	goto	l336
 11896  003444                     u6620:
 11897  003444  BA80               	btfsc	128,5,c	;volatile
 11898  003446  EF27  F01A         	goto	u6631
 11899  00344A  EF29  F01A         	goto	u6630
 11900  00344E                     u6631:
 11901  00344E  EF2C  F01A         	goto	l336
 11902  003452                     u6630:
 11903  003452                     
 11904                           ;fs_menu_controller.c: 113:     {;fs_menu_controller.c: 114:         button_bounce_contr
      +                          oller.stop = 1;
 11905  003452  845E               	bsf	_button_bounce_controller^0,2,c
 11906                           
 11907                           ;fs_menu_controller.c: 115:         menu_flags.menu_stop_flag = 1;
 11908  003454  0100               	movlb	0	; () banked
 11909  003456  85F0               	bsf	_menu_flags& (0+255),2,b
 11910  003458                     l336:
 11911                           
 11912                           ;fs_menu_controller.c: 117:     if ((PORTAbits.RA5 == 1) && (button_bounce_controller.st
      +                          op == 1))
 11913  003458  AA80               	btfss	128,5,c	;volatile
 11914  00345A  EF31  F01A         	goto	u6641
 11915  00345E  EF33  F01A         	goto	u6640
 11916  003462                     u6641:
 11917  003462  EF3D  F01A         	goto	l337
 11918  003466                     u6640:
 11919  003466  A45E               	btfss	_button_bounce_controller^0,2,c
 11920  003468  EF38  F01A         	goto	u6651
 11921  00346C  EF3A  F01A         	goto	u6650
 11922  003470                     u6651:
 11923  003470  EF3D  F01A         	goto	l337
 11924  003474                     u6650:
 11925  003474                     
 11926                           ;fs_menu_controller.c: 118:     {;fs_menu_controller.c: 119:         button_bounce_contr
      +                          oller.stop = 0;
 11927  003474  945E               	bcf	_button_bounce_controller^0,2,c
 11928                           
 11929                           ;fs_menu_controller.c: 120:         menu_flags.menu_stop_flag = 0;
 11930  003476  0100               	movlb	0	; () banked
 11931  003478  95F0               	bcf	_menu_flags& (0+255),2,b
 11932  00347A                     l337:
 11933                           
 11934                           ;fs_menu_controller.c: 124:     if ((button_bounce_controller.increase == 0) && (PORTBbi
      +                          ts.RB5 == 0))
 11935  00347A  BA5E               	btfsc	_button_bounce_controller^0,5,c
 11936  00347C  EF42  F01A         	goto	u6661
 11937  003480  EF44  F01A         	goto	u6660
 11938  003484                     u6661:
 11939  003484  EF4E  F01A         	goto	l338
 11940  003488                     u6660:
 11941  003488  BA81               	btfsc	129,5,c	;volatile
 11942  00348A  EF49  F01A         	goto	u6671
 11943  00348E  EF4B  F01A         	goto	u6670
 11944  003492                     u6671:
 11945  003492  EF4E  F01A         	goto	l338
 11946  003496                     u6670:
 11947  003496                     
 11948                           ;fs_menu_controller.c: 125:     {;fs_menu_controller.c: 126:         button_bounce_contr
      +                          oller.increase = 1;
 11949  003496  8A5E               	bsf	_button_bounce_controller^0,5,c
 11950                           
 11951                           ;fs_menu_controller.c: 127:         menu_flags.menu_increase_flag = 1;
 11952  003498  0100               	movlb	0	; () banked
 11953  00349A  89F0               	bsf	_menu_flags& (0+255),4,b
 11954  00349C                     l338:
 11955                           
 11956                           ;fs_menu_controller.c: 129:     if ((PORTBbits.RB5 == 1) && (button_bounce_controller.in
      +                          crease == 1))
 11957  00349C  AA81               	btfss	129,5,c	;volatile
 11958  00349E  EF53  F01A         	goto	u6681
 11959  0034A2  EF55  F01A         	goto	u6680
 11960  0034A6                     u6681:
 11961  0034A6  EF5F  F01A         	goto	l339
 11962  0034AA                     u6680:
 11963  0034AA  AA5E               	btfss	_button_bounce_controller^0,5,c
 11964  0034AC  EF5A  F01A         	goto	u6691
 11965  0034B0  EF5C  F01A         	goto	u6690
 11966  0034B4                     u6691:
 11967  0034B4  EF5F  F01A         	goto	l339
 11968  0034B8                     u6690:
 11969  0034B8                     
 11970                           ;fs_menu_controller.c: 130:     {;fs_menu_controller.c: 131:         button_bounce_contr
      +                          oller.increase = 0;
 11971  0034B8  9A5E               	bcf	_button_bounce_controller^0,5,c
 11972                           
 11973                           ;fs_menu_controller.c: 132:         menu_flags.menu_increase_flag = 0;
 11974  0034BA  0100               	movlb	0	; () banked
 11975  0034BC  99F0               	bcf	_menu_flags& (0+255),4,b
 11976  0034BE                     l339:
 11977                           
 11978                           ;fs_menu_controller.c: 136:     if ((button_bounce_controller.decrease == 0) && (PORTBbi
      +                          ts.RB4 == 0))
 11979  0034BE  B85E               	btfsc	_button_bounce_controller^0,4,c
 11980  0034C0  EF64  F01A         	goto	u6701
 11981  0034C4  EF66  F01A         	goto	u6700
 11982  0034C8                     u6701:
 11983  0034C8  EF70  F01A         	goto	l340
 11984  0034CC                     u6700:
 11985  0034CC  B881               	btfsc	129,4,c	;volatile
 11986  0034CE  EF6B  F01A         	goto	u6711
 11987  0034D2  EF6D  F01A         	goto	u6710
 11988  0034D6                     u6711:
 11989  0034D6  EF70  F01A         	goto	l340
 11990  0034DA                     u6710:
 11991  0034DA                     
 11992                           ;fs_menu_controller.c: 137:     {;fs_menu_controller.c: 138:         button_bounce_contr
      +                          oller.decrease = 1;
 11993  0034DA  885E               	bsf	_button_bounce_controller^0,4,c
 11994                           
 11995                           ;fs_menu_controller.c: 139:         menu_flags.menu_decrease_flag = 1;
 11996  0034DC  0100               	movlb	0	; () banked
 11997  0034DE  8BF0               	bsf	_menu_flags& (0+255),5,b
 11998  0034E0                     l340:
 11999                           
 12000                           ;fs_menu_controller.c: 141:     if ((PORTBbits.RB4 == 1) && (button_bounce_controller.de
      +                          crease == 1))
 12001  0034E0  A881               	btfss	129,4,c	;volatile
 12002  0034E2  EF75  F01A         	goto	u6721
 12003  0034E6  EF77  F01A         	goto	u6720
 12004  0034EA                     u6721:
 12005  0034EA  EF81  F01A         	goto	l342
 12006  0034EE                     u6720:
 12007  0034EE  A85E               	btfss	_button_bounce_controller^0,4,c
 12008  0034F0  EF7C  F01A         	goto	u6731
 12009  0034F4  EF7E  F01A         	goto	u6730
 12010  0034F8                     u6731:
 12011  0034F8  EF81  F01A         	goto	l342
 12012  0034FC                     u6730:
 12013  0034FC                     
 12014                           ;fs_menu_controller.c: 142:     {;fs_menu_controller.c: 143:         button_bounce_contr
      +                          oller.decrease = 0;
 12015  0034FC  985E               	bcf	_button_bounce_controller^0,4,c
 12016                           
 12017                           ;fs_menu_controller.c: 144:         menu_flags.menu_decrease_flag = 0;
 12018  0034FE  0100               	movlb	0	; () banked
 12019  003500  9BF0               	bcf	_menu_flags& (0+255),5,b
 12020  003502                     l342:
 12021  003502  0012               	return		;funcret
 12022  003504                     __end_of_buttonControlFlags:
 12023                           	callstack 0
 12024                           
 12025 ;; *************** function _mcu_init *****************
 12026 ;; Defined at:
 12027 ;;		line 38 in file "fs_mcu.c"
 12028 ;; Parameters:    Size  Location     Type
 12029 ;;		None
 12030 ;; Auto vars:     Size  Location     Type
 12031 ;;		None
 12032 ;; Return value:  Size  Location     Type
 12033 ;;                  1    wreg      void 
 12034 ;; Registers used:
 12035 ;;		wreg, status,2
 12036 ;; Tracked objects:
 12037 ;;		On entry : 0/0
 12038 ;;		On exit  : 0/0
 12039 ;;		Unchanged: 0/0
 12040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12041 ;;      Params:         0       0       0       0       0       0       0
 12042 ;;      Locals:         0       0       0       0       0       0       0
 12043 ;;      Temps:          0       0       0       0       0       0       0
 12044 ;;      Totals:         0       0       0       0       0       0       0
 12045 ;;Total ram usage:        0 bytes
 12046 ;; Hardware stack levels used:    1
 12047 ;; Hardware stack levels required when called:    1
 12048 ;; This function calls:
 12049 ;;		Nothing
 12050 ;; This function is called by:
 12051 ;;		_main
 12052 ;; This function uses a non-reentrant model
 12053 ;;
 12054                           
 12055                           	psect	text45
 12056  0049D0                     __ptext45:
 12057                           	callstack 0
 12058  0049D0                     _mcu_init:
 12059                           	callstack 29
 12060  0049D0                     
 12061                           ;fs_mcu.c: 40:    OSCCONbits.IRCF = 0b111;
 12062  0049D0  0E70               	movlw	112
 12063  0049D2  12D3               	iorwf	211,f,c	;volatile
 12064  0049D4                     
 12065                           ;fs_mcu.c: 42:    OSCTUNEbits.PLLEN = 0b1;
 12066  0049D4  8C9B               	bsf	155,6,c	;volatile
 12067  0049D6                     l257:
 12068  0049D6  A4D3               	btfss	211,2,c	;volatile
 12069  0049D8  EFF0  F024         	goto	u7281
 12070  0049DC  EFF2  F024         	goto	u7280
 12071  0049E0                     u7281:
 12072  0049E0  EFEB  F024         	goto	l257
 12073  0049E4                     u7280:
 12074  0049E4  0012               	return		;funcret
 12075  0049E6                     __end_of_mcu_init:
 12076                           	callstack 0
 12077                           
 12078 ;; *************** function _lcd_init *****************
 12079 ;; Defined at:
 12080 ;;		line 79 in file "fs_lcd.c"
 12081 ;; Parameters:    Size  Location     Type
 12082 ;;		None
 12083 ;; Auto vars:     Size  Location     Type
 12084 ;;		None
 12085 ;; Return value:  Size  Location     Type
 12086 ;;                  1    wreg      void 
 12087 ;; Registers used:
 12088 ;;		wreg, status,2, cstack
 12089 ;; Tracked objects:
 12090 ;;		On entry : 0/0
 12091 ;;		On exit  : 0/0
 12092 ;;		Unchanged: 0/0
 12093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12094 ;;      Params:         0       0       0       0       0       0       0
 12095 ;;      Locals:         0       0       0       0       0       0       0
 12096 ;;      Temps:          2       0       0       0       0       0       0
 12097 ;;      Totals:         2       0       0       0       0       0       0
 12098 ;;Total ram usage:        2 bytes
 12099 ;; Hardware stack levels used:    1
 12100 ;; Hardware stack levels required when called:    3
 12101 ;; This function calls:
 12102 ;;		_Lcd_Cmd
 12103 ;;		_Lcd_Port
 12104 ;; This function is called by:
 12105 ;;		_main
 12106 ;; This function uses a non-reentrant model
 12107 ;;
 12108                           
 12109                           	psect	text46
 12110  004300                     __ptext46:
 12111                           	callstack 0
 12112  004300                     _lcd_init:
 12113                           	callstack 27
 12114  004300                     
 12115                           ;fs_lcd.c: 81:     TRISEbits.RE0 = 0;
 12116  004300  9096               	bcf	150,0,c	;volatile
 12117                           
 12118                           ;fs_lcd.c: 82:     ANSELEbits.ANSE0 = 0;
 12119  004302  010F               	movlb	15	; () banked
 12120  004304  913C               	bcf	60,0,b	;volatile
 12121                           
 12122                           ;fs_lcd.c: 84:     TRISAbits.RA3 = 0;
 12123  004306  9692               	bcf	146,3,c	;volatile
 12124                           
 12125                           ;fs_lcd.c: 85:     ANSELAbits.ANSA3 = 0;
 12126  004308  9738               	bcf	56,3,b	;volatile
 12127                           
 12128                           ;fs_lcd.c: 87:     TRISDbits.RD0 = 0;
 12129  00430A  9095               	bcf	149,0,c	;volatile
 12130                           
 12131                           ;fs_lcd.c: 88:     ANSELDbits.ANSD0 = 0;
 12132  00430C  913B               	bcf	59,0,b	;volatile
 12133                           
 12134                           ;fs_lcd.c: 90:     TRISDbits.RD1 = 0;
 12135  00430E  9295               	bcf	149,1,c	;volatile
 12136                           
 12137                           ;fs_lcd.c: 91:     ANSELDbits.ANSD1 = 0;
 12138  004310  933B               	bcf	59,1,b	;volatile
 12139                           
 12140                           ;fs_lcd.c: 93:     TRISDbits.RD2 = 0;
 12141  004312  9495               	bcf	149,2,c	;volatile
 12142                           
 12143                           ;fs_lcd.c: 94:     ANSELDbits.ANSD2 = 0;
 12144  004314  953B               	bcf	59,2,b	;volatile
 12145                           
 12146                           ;fs_lcd.c: 96:     TRISDbits.RD3 = 0;
 12147  004316  9695               	bcf	149,3,c	;volatile
 12148                           
 12149                           ;fs_lcd.c: 97:     ANSELDbits.ANSD3 = 0;
 12150  004318  973B               	bcf	59,3,b	;volatile
 12151  00431A                     
 12152                           ; BSR set to: 15
 12153                           ;fs_lcd.c: 100:     Lcd_Port(0x00);
 12154  00431A  0E00               	movlw	0
 12155  00431C  ECFC  F022         	call	_Lcd_Port
 12156  004320                     
 12157                           ;fs_lcd.c: 101:      _delay((unsigned long)((20)*(64000000UL/4000.0)));
 12158  004320  0E02               	movlw	2
 12159  004322  6E05               	movwf	(??_lcd_init+1)^0,c
 12160  004324  0EA0               	movlw	160
 12161  004326  6E04               	movwf	??_lcd_init^0,c
 12162  004328  0E92               	movlw	146
 12163  00432A                     u7697:
 12164  00432A  2EE8               	decfsz	wreg,f,c
 12165  00432C  D7FE               	bra	u7697
 12166  00432E  2E04               	decfsz	??_lcd_init^0,f,c
 12167  004330  D7FC               	bra	u7697
 12168  004332  2E05               	decfsz	(??_lcd_init+1)^0,f,c
 12169  004334  D7FA               	bra	u7697
 12170  004336  D000               	nop2	
 12171  004338                     
 12172                           ;fs_lcd.c: 102:     Lcd_Cmd(0x03);
 12173  004338  0E03               	movlw	3
 12174  00433A  ECD9  F024         	call	_Lcd_Cmd
 12175  00433E                     
 12176                           ;fs_lcd.c: 103:      _delay((unsigned long)((5)*(64000000UL/4000.0)));
 12177  00433E  0E68               	movlw	104
 12178  004340  6E04               	movwf	??_lcd_init^0,c
 12179  004342  0EE4               	movlw	228
 12180  004344                     u7707:
 12181  004344  2EE8               	decfsz	wreg,f,c
 12182  004346  D7FE               	bra	u7707
 12183  004348  2E04               	decfsz	??_lcd_init^0,f,c
 12184  00434A  D7FC               	bra	u7707
 12185  00434C  D000               	nop2	
 12186  00434E                     
 12187                           ;fs_lcd.c: 104:     Lcd_Cmd(0x03);
 12188  00434E  0E03               	movlw	3
 12189  004350  ECD9  F024         	call	_Lcd_Cmd
 12190  004354                     
 12191                           ;fs_lcd.c: 105:      _delay((unsigned long)((11)*(64000000UL/4000.0)));
 12192  004354  0EE5               	movlw	229
 12193  004356  6E04               	movwf	??_lcd_init^0,c
 12194  004358  0E91               	movlw	145
 12195  00435A                     u7717:
 12196  00435A  2EE8               	decfsz	wreg,f,c
 12197  00435C  D7FE               	bra	u7717
 12198  00435E  2E04               	decfsz	??_lcd_init^0,f,c
 12199  004360  D7FC               	bra	u7717
 12200  004362  F000               	nop	
 12201  004364                     
 12202                           ;fs_lcd.c: 106:     Lcd_Cmd(0x03);
 12203  004364  0E03               	movlw	3
 12204  004366  ECD9  F024         	call	_Lcd_Cmd
 12205  00436A                     
 12206                           ;fs_lcd.c: 107:     Lcd_Cmd(0x02);
 12207  00436A  0E02               	movlw	2
 12208  00436C  ECD9  F024         	call	_Lcd_Cmd
 12209  004370                     
 12210                           ;fs_lcd.c: 108:     Lcd_Cmd(0x02);
 12211  004370  0E02               	movlw	2
 12212  004372  ECD9  F024         	call	_Lcd_Cmd
 12213  004376                     
 12214                           ;fs_lcd.c: 109:     Lcd_Cmd(0x08);
 12215  004376  0E08               	movlw	8
 12216  004378  ECD9  F024         	call	_Lcd_Cmd
 12217  00437C                     
 12218                           ;fs_lcd.c: 110:     Lcd_Cmd(0x00);
 12219  00437C  0E00               	movlw	0
 12220  00437E  ECD9  F024         	call	_Lcd_Cmd
 12221  004382                     
 12222                           ;fs_lcd.c: 111:     Lcd_Cmd(0x0C);
 12223  004382  0E0C               	movlw	12
 12224  004384  ECD9  F024         	call	_Lcd_Cmd
 12225  004388                     
 12226                           ;fs_lcd.c: 112:     Lcd_Cmd(0x00);
 12227  004388  0E00               	movlw	0
 12228  00438A  ECD9  F024         	call	_Lcd_Cmd
 12229  00438E                     
 12230                           ;fs_lcd.c: 113:     Lcd_Cmd(0x06);
 12231  00438E  0E06               	movlw	6
 12232  004390  ECD9  F024         	call	_Lcd_Cmd
 12233  004394  0012               	return		;funcret
 12234  004396                     __end_of_lcd_init:
 12235                           	callstack 0
 12236                           
 12237 ;; *************** function _Lcd_Clear *****************
 12238 ;; Defined at:
 12239 ;;		line 42 in file "fs_lcd.c"
 12240 ;; Parameters:    Size  Location     Type
 12241 ;;		None
 12242 ;; Auto vars:     Size  Location     Type
 12243 ;;		None
 12244 ;; Return value:  Size  Location     Type
 12245 ;;                  1    wreg      void 
 12246 ;; Registers used:
 12247 ;;		wreg, status,2, cstack
 12248 ;; Tracked objects:
 12249 ;;		On entry : 0/0
 12250 ;;		On exit  : 0/0
 12251 ;;		Unchanged: 0/0
 12252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12253 ;;      Params:         0       0       0       0       0       0       0
 12254 ;;      Locals:         0       0       0       0       0       0       0
 12255 ;;      Temps:          0       0       0       0       0       0       0
 12256 ;;      Totals:         0       0       0       0       0       0       0
 12257 ;;Total ram usage:        0 bytes
 12258 ;; Hardware stack levels used:    1
 12259 ;; Hardware stack levels required when called:    3
 12260 ;; This function calls:
 12261 ;;		_Lcd_Cmd
 12262 ;; This function is called by:
 12263 ;;		_main
 12264 ;; This function uses a non-reentrant model
 12265 ;;
 12266                           
 12267                           	psect	text47
 12268  0049F8                     __ptext47:
 12269                           	callstack 0
 12270  0049F8                     _Lcd_Clear:
 12271                           	callstack 27
 12272  0049F8                     
 12273                           ;fs_lcd.c: 44:    Lcd_Cmd(0);
 12274  0049F8  0E00               	movlw	0
 12275  0049FA  ECD9  F024         	call	_Lcd_Cmd
 12276                           
 12277                           ;fs_lcd.c: 45:    Lcd_Cmd(1);
 12278  0049FE  0E01               	movlw	1
 12279  004A00  ECD9  F024         	call	_Lcd_Cmd
 12280  004A04  0012               	return		;funcret
 12281  004A06                     __end_of_Lcd_Clear:
 12282                           	callstack 0
 12283                           
 12284 ;; *************** function _Lcd_Cmd *****************
 12285 ;; Defined at:
 12286 ;;		line 28 in file "fs_lcd.c"
 12287 ;; Parameters:    Size  Location     Type
 12288 ;;  a               1    wreg     unsigned char 
 12289 ;; Auto vars:     Size  Location     Type
 12290 ;;  a               1    2[COMRAM] unsigned char 
 12291 ;; Return value:  Size  Location     Type
 12292 ;;                  1    wreg      void 
 12293 ;; Registers used:
 12294 ;;		wreg, status,2, cstack
 12295 ;; Tracked objects:
 12296 ;;		On entry : 0/0
 12297 ;;		On exit  : 0/0
 12298 ;;		Unchanged: 0/0
 12299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12300 ;;      Params:         0       0       0       0       0       0       0
 12301 ;;      Locals:         1       0       0       0       0       0       0
 12302 ;;      Temps:          1       0       0       0       0       0       0
 12303 ;;      Totals:         2       0       0       0       0       0       0
 12304 ;;Total ram usage:        2 bytes
 12305 ;; Hardware stack levels used:    1
 12306 ;; Hardware stack levels required when called:    2
 12307 ;; This function calls:
 12308 ;;		_Lcd_Port
 12309 ;; This function is called by:
 12310 ;;		_Lcd_Clear
 12311 ;;		_Lcd_Set_Cursor
 12312 ;;		_lcd_init
 12313 ;;		_Lcd_Shift_Right
 12314 ;;		_Lcd_Shift_Left
 12315 ;; This function uses a non-reentrant model
 12316 ;;
 12317                           
 12318                           	psect	text48
 12319  0049B2                     __ptext48:
 12320                           	callstack 0
 12321  0049B2                     _Lcd_Cmd:
 12322                           	callstack 25
 12323                           
 12324                           ;incstack = 0
 12325                           ;Lcd_Cmd@a stored from wreg
 12326  0049B2  6E03               	movwf	Lcd_Cmd@a^0,c
 12327  0049B4                     
 12328                           ;fs_lcd.c: 28: void Lcd_Cmd(char a);fs_lcd.c: 29: {;fs_lcd.c: 30:    PORTEbits.RE0 = 0;
 12329  0049B4  9084               	bcf	132,0,c	;volatile
 12330  0049B6                     
 12331                           ;fs_lcd.c: 31:    Lcd_Port(a);
 12332  0049B6  5003               	movf	Lcd_Cmd@a^0,w,c
 12333  0049B8  ECFC  F022         	call	_Lcd_Port
 12334  0049BC                     
 12335                           ;fs_lcd.c: 32:    PORTAbits.RA3 = 1;
 12336  0049BC  8680               	bsf	128,3,c	;volatile
 12337  0049BE                     
 12338                           ;fs_lcd.c: 33:    _delay((unsigned long)((2)*(64000000UL/4000.0)));
 12339  0049BE  0E2A               	movlw	42
 12340  0049C0  6E02               	movwf	??_Lcd_Cmd^0,c
 12341  0049C2  0E8E               	movlw	142
 12342  0049C4                     u7727:
 12343  0049C4  2EE8               	decfsz	wreg,f,c
 12344  0049C6  D7FE               	bra	u7727
 12345  0049C8  2E02               	decfsz	??_Lcd_Cmd^0,f,c
 12346  0049CA  D7FC               	bra	u7727
 12347  0049CC                     
 12348                           ;fs_lcd.c: 34:    PORTAbits.RA3 = 0;
 12349  0049CC  9680               	bcf	128,3,c	;volatile
 12350  0049CE  0012               	return		;funcret
 12351  0049D0                     __end_of_Lcd_Cmd:
 12352                           	callstack 0
 12353                           
 12354 ;; *************** function _Lcd_Port *****************
 12355 ;; Defined at:
 12356 ;;		line 12 in file "fs_lcd.c"
 12357 ;; Parameters:    Size  Location     Type
 12358 ;;  a               1    wreg     unsigned char 
 12359 ;; Auto vars:     Size  Location     Type
 12360 ;;  a               1    0[COMRAM] unsigned char 
 12361 ;; Return value:  Size  Location     Type
 12362 ;;                  1    wreg      void 
 12363 ;; Registers used:
 12364 ;;		wreg
 12365 ;; Tracked objects:
 12366 ;;		On entry : 0/0
 12367 ;;		On exit  : 0/0
 12368 ;;		Unchanged: 0/0
 12369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12370 ;;      Params:         0       0       0       0       0       0       0
 12371 ;;      Locals:         1       0       0       0       0       0       0
 12372 ;;      Temps:          0       0       0       0       0       0       0
 12373 ;;      Totals:         1       0       0       0       0       0       0
 12374 ;;Total ram usage:        1 bytes
 12375 ;; Hardware stack levels used:    1
 12376 ;; Hardware stack levels required when called:    1
 12377 ;; This function calls:
 12378 ;;		Nothing
 12379 ;; This function is called by:
 12380 ;;		_Lcd_Cmd
 12381 ;;		_lcd_init
 12382 ;;		_Lcd_Write_Char
 12383 ;; This function uses a non-reentrant model
 12384 ;;
 12385                           
 12386                           	psect	text49
 12387  0045F8                     __ptext49:
 12388                           	callstack 0
 12389  0045F8                     _Lcd_Port:
 12390                           	callstack 25
 12391                           
 12392                           ;incstack = 0
 12393                           ;Lcd_Port@a stored from wreg
 12394  0045F8  6E01               	movwf	Lcd_Port@a^0,c
 12395  0045FA                     
 12396                           ;fs_lcd.c: 12: void Lcd_Port(char a);fs_lcd.c: 13: {;fs_lcd.c: 14:    if(a & 1) { PORTDb
      +                          its.RD0 = 1;}
 12397  0045FA  A001               	btfss	Lcd_Port@a^0,0,c
 12398  0045FC  EF02  F023         	goto	u6161
 12399  004600  EF04  F023         	goto	u6160
 12400  004604                     u6161:
 12401  004604  EF07  F023         	goto	l102
 12402  004608                     u6160:
 12403  004608  8083               	bsf	131,0,c	;volatile
 12404  00460A  EF08  F023         	goto	l5098
 12405  00460E                     l102:
 12406  00460E  9083               	bcf	131,0,c	;volatile
 12407  004610                     l5098:
 12408                           
 12409                           ;fs_lcd.c: 17:    if(a & 2) { PORTDbits.RD1 = 1;}
 12410  004610  A201               	btfss	Lcd_Port@a^0,1,c
 12411  004612  EF0D  F023         	goto	u6171
 12412  004616  EF0F  F023         	goto	u6170
 12413  00461A                     u6171:
 12414  00461A  EF12  F023         	goto	l104
 12415  00461E                     u6170:
 12416  00461E  8283               	bsf	131,1,c	;volatile
 12417  004620  EF13  F023         	goto	l5102
 12418  004624                     l104:
 12419  004624  9283               	bcf	131,1,c	;volatile
 12420  004626                     l5102:
 12421                           
 12422                           ;fs_lcd.c: 20:    if(a & 4) {PORTDbits.RD2 = 1;}
 12423  004626  A401               	btfss	Lcd_Port@a^0,2,c
 12424  004628  EF18  F023         	goto	u6181
 12425  00462C  EF1A  F023         	goto	u6180
 12426  004630                     u6181:
 12427  004630  EF1D  F023         	goto	l106
 12428  004634                     u6180:
 12429  004634  8483               	bsf	131,2,c	;volatile
 12430  004636  EF1E  F023         	goto	l5106
 12431  00463A                     l106:
 12432  00463A  9483               	bcf	131,2,c	;volatile
 12433  00463C                     l5106:
 12434                           
 12435                           ;fs_lcd.c: 23:    if(a & 8) {PORTDbits.RD3 = 1;}
 12436  00463C  A601               	btfss	Lcd_Port@a^0,3,c
 12437  00463E  EF23  F023         	goto	u6191
 12438  004642  EF25  F023         	goto	u6190
 12439  004646                     u6191:
 12440  004646  EF28  F023         	goto	l108
 12441  00464A                     u6190:
 12442  00464A  8683               	bsf	131,3,c	;volatile
 12443  00464C  EF29  F023         	goto	l110
 12444  004650                     l108:
 12445  004650  9683               	bcf	131,3,c	;volatile
 12446  004652                     l110:
 12447  004652  0012               	return		;funcret
 12448  004654                     __end_of_Lcd_Port:
 12449                           	callstack 0
 12450                           
 12451 ;; *************** function _TIMER0 *****************
 12452 ;; Defined at:
 12453 ;;		line 33 in file "fs_timer.c"
 12454 ;; Parameters:    Size  Location     Type
 12455 ;;		None
 12456 ;; Auto vars:     Size  Location     Type
 12457 ;;		None
 12458 ;; Return value:  Size  Location     Type
 12459 ;;                  1    wreg      void 
 12460 ;; Registers used:
 12461 ;;		wreg, status,2, status,0
 12462 ;; Tracked objects:
 12463 ;;		On entry : 0/0
 12464 ;;		On exit  : 0/0
 12465 ;;		Unchanged: 0/0
 12466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12467 ;;      Params:         0       0       0       0       0       0       0
 12468 ;;      Locals:         0       0       0       0       0       0       0
 12469 ;;      Temps:          0       0       0       0       0       0       0
 12470 ;;      Totals:         0       0       0       0       0       0       0
 12471 ;;Total ram usage:        0 bytes
 12472 ;; Hardware stack levels used:    1
 12473 ;; This function calls:
 12474 ;;		Nothing
 12475 ;; This function is called by:
 12476 ;;		Interrupt level 2
 12477 ;; This function uses a non-reentrant model
 12478 ;;
 12479                           
 12480                           	psect	intcode
 12481  000008                     __pintcode:
 12482                           	callstack 0
 12483  000008                     _TIMER0:
 12484                           	callstack 20
 12485                           
 12486                           ;incstack = 0
 12487  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12488  00000A                     
 12489                           ;fs_timer.c: 35:     if ((INTCONbits.TMR0IF)&&(INTCONbits.TMR0IE))
 12490  00000A  A4F2               	btfss	242,2,c	;volatile
 12491  00000C  EF0A  F000         	goto	i2u749_41
 12492  000010  EF0C  F000         	goto	i2u749_40
 12493  000014                     i2u749_41:
 12494  000014  EF31  F000         	goto	i2l489
 12495  000018                     i2u749_40:
 12496  000018  AAF2               	btfss	242,5,c	;volatile
 12497  00001A  EF11  F000         	goto	i2u750_41
 12498  00001E  EF13  F000         	goto	i2u750_40
 12499  000022                     i2u750_41:
 12500  000022  EF31  F000         	goto	i2l489
 12501  000026                     i2u750_40:
 12502  000026                     
 12503                           ;fs_timer.c: 36:     {;fs_timer.c: 37:         INTCONbits.TMR0IF = 0;
 12504  000026  94F2               	bcf	242,2,c	;volatile
 12505  000028                     
 12506                           ;fs_timer.c: 38:         TMR0H = 0x63;
 12507  000028  0E63               	movlw	99
 12508  00002A  6ED7               	movwf	215,c	;volatile
 12509                           
 12510                           ;fs_timer.c: 39:         TMR0L = 0xC0;
 12511  00002C  0EC0               	movlw	192
 12512  00002E  6ED6               	movwf	214,c	;volatile
 12513  000030                     
 12514                           ;fs_timer.c: 41:         timer_value.timer_0_counter++;
 12515  000030  0100               	movlb	0	; () banked
 12516  000032  2BDB               	incf	(_timer_value+9)& (0+255),f,b
 12517  000034                     
 12518                           ; BSR set to: 0
 12519                           ;fs_timer.c: 43:         if(button_bounce_controller.menu == 1)
 12520  000034  A05E               	btfss	_button_bounce_controller^0,0,c
 12521  000036  EF1F  F000         	goto	i2u751_41
 12522  00003A  EF21  F000         	goto	i2u751_40
 12523  00003E                     i2u751_41:
 12524  00003E  EF24  F000         	goto	i2l5998
 12525  000042                     i2u751_40:
 12526  000042                     
 12527                           ; BSR set to: 0
 12528                           ;fs_timer.c: 44:         {;fs_timer.c: 45:              timer_value.menu_login_delay++;
 12529  000042  2BDA               	incf	(_timer_value+8)& (0+255),f,b
 12530                           
 12531                           ;fs_timer.c: 46:         }
 12532  000044  EF26  F000         	goto	i2l6000
 12533  000048                     i2l5998:
 12534                           
 12535                           ; BSR set to: 0
 12536                           ;fs_timer.c: 48:         {;fs_timer.c: 49:              timer_value.menu_login_delay = 0
      +                          ;
 12537  000048  0E00               	movlw	0
 12538  00004A  6FDA               	movwf	(_timer_value+8)& (0+255),b
 12539  00004C                     i2l6000:
 12540                           
 12541                           ; BSR set to: 0
 12542                           ;fs_timer.c: 52:         if (timer_value.timer_0_counter >= 100)
 12543  00004C  0E63               	movlw	99
 12544  00004E  65DB               	cpfsgt	(_timer_value+9)& (0+255),b
 12545  000050  EF2C  F000         	goto	i2u752_41
 12546  000054  EF2E  F000         	goto	i2u752_40
 12547  000058                     i2u752_41:
 12548  000058  EF31  F000         	goto	i2l489
 12549  00005C                     i2u752_40:
 12550  00005C                     
 12551                           ; BSR set to: 0
 12552                           ;fs_timer.c: 53:         {;fs_timer.c: 54:             timer_value.timer_0_counter = 0;
 12553  00005C  0E00               	movlw	0
 12554  00005E  6FDB               	movwf	(_timer_value+9)& (0+255),b
 12555  000060                     
 12556                           ; BSR set to: 0
 12557                           ;fs_timer.c: 55:             timer_counter_flag.one_second_flag = 1;
 12558  000060  81F5               	bsf	_timer_counter_flag& (0+255),0,b
 12559  000062                     i2l489:
 12560  000062  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12561  000064  0011               	retfie		f
 12562  000066                     __end_of_TIMER0:
 12563                           	callstack 0
 12564                           
 12565                           	psect	rparam
 12566  0000                     
 12567                           	psect	temp
 12568  00005F                     btemp:
 12569                           	callstack 0
 12570  00005F                     	ds	1
 12571  0000                     int$flags	set	btemp
 12572  0000                     wtemp8	set	btemp+1
 12573  0000                     ttemp5	set	btemp+1
 12574  0000                     ttemp6	set	btemp+4
 12575  0000                     ttemp7	set	btemp+8
 12576                           
 12577                           	psect	idloc
 12578                           
 12579                           ;Config register IDLOC0 @ 0x200000
 12580                           ;	unspecified, using default values
 12581  200000                     	org	2097152
 12582  200000  FF                 	db	255
 12583                           
 12584                           ;Config register IDLOC1 @ 0x200001
 12585                           ;	unspecified, using default values
 12586  200001                     	org	2097153
 12587  200001  FF                 	db	255
 12588                           
 12589                           ;Config register IDLOC2 @ 0x200002
 12590                           ;	unspecified, using default values
 12591  200002                     	org	2097154
 12592  200002  FF                 	db	255
 12593                           
 12594                           ;Config register IDLOC3 @ 0x200003
 12595                           ;	unspecified, using default values
 12596  200003                     	org	2097155
 12597  200003  FF                 	db	255
 12598                           
 12599                           ;Config register IDLOC4 @ 0x200004
 12600                           ;	unspecified, using default values
 12601  200004                     	org	2097156
 12602  200004  FF                 	db	255
 12603                           
 12604                           ;Config register IDLOC5 @ 0x200005
 12605                           ;	unspecified, using default values
 12606  200005                     	org	2097157
 12607  200005  FF                 	db	255
 12608                           
 12609                           ;Config register IDLOC6 @ 0x200006
 12610                           ;	unspecified, using default values
 12611  200006                     	org	2097158
 12612  200006  FF                 	db	255
 12613                           
 12614                           ;Config register IDLOC7 @ 0x200007
 12615                           ;	unspecified, using default values
 12616  200007                     	org	2097159
 12617  200007  FF                 	db	255
 12618                           
 12619                           	psect	config
 12620                           
 12621                           ; Padding undefined space
 12622  300000                     	org	3145728
 12623  300000  FF                 	db	255
 12624                           
 12625                           ;Config register CONFIG1H @ 0x300001
 12626                           ;	Oscillator Selection bits
 12627                           ;	FOSC = INTIO67, Internal oscillator block
 12628                           ;	4X PLL Enable
 12629                           ;	PLLCFG = ON, Oscillator multiplied by 4
 12630                           ;	Primary clock enable bit
 12631                           ;	PRICLKEN = ON, Primary clock is always enabled
 12632                           ;	Fail-Safe Clock Monitor Enable bit
 12633                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 12634                           ;	Internal/External Oscillator Switchover bit
 12635                           ;	IESO = ON, Oscillator Switchover mode enabled
 12636  300001                     	org	3145729
 12637  300001  B8                 	db	184
 12638                           
 12639                           ;Config register CONFIG2L @ 0x300002
 12640                           ;	Power-up Timer Enable bit
 12641                           ;	PWRTEN = OFF, Power up timer disabled
 12642                           ;	Brown-out Reset Enable bits
 12643                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 12644                           ;	Brown Out Reset Voltage bits
 12645                           ;	BORV = 190, VBOR set to 1.90 V nominal
 12646  300002                     	org	3145730
 12647  300002  1F                 	db	31
 12648                           
 12649                           ;Config register CONFIG2H @ 0x300003
 12650                           ;	Watchdog Timer Enable bits
 12651                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 12652                           ;	Watchdog Timer Postscale Select bits
 12653                           ;	WDTPS = 32768, 1:32768
 12654  300003                     	org	3145731
 12655  300003  3C                 	db	60
 12656                           
 12657                           ; Padding undefined space
 12658  300004                     	org	3145732
 12659  300004  FF                 	db	255
 12660                           
 12661                           ;Config register CONFIG3H @ 0x300005
 12662                           ;	CCP2 MUX bit
 12663                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 12664                           ;	PORTB A/D Enable bit
 12665                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
 12666                           ;	P3A/CCP3 Mux bit
 12667                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 12668                           ;	HFINTOSC Fast Start-up
 12669                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 12670                           ;	Timer3 Clock input mux bit
 12671                           ;	T3CMX = PORTC0, T3CKI is on RC0
 12672                           ;	ECCP2 B output mux bit
 12673                           ;	P2BMX = PORTD2, P2B is on RD2
 12674                           ;	MCLR Pin Enable bit
 12675                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 12676  300005                     	org	3145733
 12677  300005  BD                 	db	189
 12678                           
 12679                           ;Config register CONFIG4L @ 0x300006
 12680                           ;	Stack Full/Underflow Reset Enable bit
 12681                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
 12682                           ;	Single-Supply ICSP Enable bit
 12683                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 12684                           ;	Extended Instruction Set Enable bit
 12685                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 12686                           ;	Background Debug
 12687                           ;	DEBUG = 0x1, unprogrammed default
 12688  300006                     	org	3145734
 12689  300006  84                 	db	132
 12690                           
 12691                           ; Padding undefined space
 12692  300007                     	org	3145735
 12693  300007  FF                 	db	255
 12694                           
 12695                           ;Config register CONFIG5L @ 0x300008
 12696                           ;	Code Protection Block 0
 12697                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 12698                           ;	Code Protection Block 1
 12699                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 12700                           ;	Code Protection Block 2
 12701                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 12702                           ;	Code Protection Block 3
 12703                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 12704  300008                     	org	3145736
 12705  300008  0F                 	db	15
 12706                           
 12707                           ;Config register CONFIG5H @ 0x300009
 12708                           ;	Boot Block Code Protection bit
 12709                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 12710                           ;	Data EEPROM Code Protection bit
 12711                           ;	CPD = OFF, Data EEPROM not code-protected
 12712  300009                     	org	3145737
 12713  300009  C0                 	db	192
 12714                           
 12715                           ;Config register CONFIG6L @ 0x30000A
 12716                           ;	Write Protection Block 0
 12717                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 12718                           ;	Write Protection Block 1
 12719                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 12720                           ;	Write Protection Block 2
 12721                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 12722                           ;	Write Protection Block 3
 12723                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 12724  30000A                     	org	3145738
 12725  30000A  0F                 	db	15
 12726                           
 12727                           ;Config register CONFIG6H @ 0x30000B
 12728                           ;	Configuration Register Write Protection bit
 12729                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 12730                           ;	Boot Block Write Protection bit
 12731                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 12732                           ;	Data EEPROM Write Protection bit
 12733                           ;	WRTD = OFF, Data EEPROM not write-protected
 12734  30000B                     	org	3145739
 12735  30000B  E0                 	db	224
 12736                           
 12737                           ;Config register CONFIG7L @ 0x30000C
 12738                           ;	Table Read Protection Block 0
 12739                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 12740                           ;	Table Read Protection Block 1
 12741                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 12742                           ;	Table Read Protection Block 2
 12743                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 12744                           ;	Table Read Protection Block 3
 12745                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 12746  30000C                     	org	3145740
 12747  30000C  0F                 	db	15
 12748                           
 12749                           ;Config register CONFIG7H @ 0x30000D
 12750                           ;	Boot Block Table Read Protection bit
 12751                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 12752  30000D                     	org	3145741
 12753  30000D  40                 	db	64
 12754                           tosu	equ	0xFFF
 12755                           tosh	equ	0xFFE
 12756                           tosl	equ	0xFFD
 12757                           stkptr	equ	0xFFC
 12758                           pclatu	equ	0xFFB
 12759                           pclath	equ	0xFFA
 12760                           pcl	equ	0xFF9
 12761                           tblptru	equ	0xFF8
 12762                           tblptrh	equ	0xFF7
 12763                           tblptrl	equ	0xFF6
 12764                           tablat	equ	0xFF5
 12765                           prodh	equ	0xFF4
 12766                           prodl	equ	0xFF3
 12767                           indf0	equ	0xFEF
 12768                           postinc0	equ	0xFEE
 12769                           postdec0	equ	0xFED
 12770                           preinc0	equ	0xFEC
 12771                           plusw0	equ	0xFEB
 12772                           fsr0h	equ	0xFEA
 12773                           fsr0l	equ	0xFE9
 12774                           wreg	equ	0xFE8
 12775                           indf1	equ	0xFE7
 12776                           postinc1	equ	0xFE6
 12777                           postdec1	equ	0xFE5
 12778                           preinc1	equ	0xFE4
 12779                           plusw1	equ	0xFE3
 12780                           fsr1h	equ	0xFE2
 12781                           fsr1l	equ	0xFE1
 12782                           bsr	equ	0xFE0
 12783                           indf2	equ	0xFDF
 12784                           postinc2	equ	0xFDE
 12785                           postdec2	equ	0xFDD
 12786                           preinc2	equ	0xFDC
 12787                           plusw2	equ	0xFDB
 12788                           fsr2h	equ	0xFDA
 12789                           fsr2l	equ	0xFD9
 12790                           status	equ	0xFD8

Data Sizes:
    Strings     214
    Constant    0
    Data        8
    BSS         300
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160    102     158
    BANK1           256      0     251
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_27(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_27(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_22(CODE[4]), STR_21(CODE[4]), STR_18(CODE[4]), STR_17(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_22(CODE[4]), STR_21(CODE[4]), STR_18(CODE[4]), STR_17(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[13]), STR_14(CODE[14]), STR_12(CODE[16]), STR_10(CODE[16]), 
		 -> STR_8(CODE[18]), STR_6(CODE[18]), STR_4(CODE[18]), STR_2(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[13]), STR_14(CODE[14]), STR_12(CODE[16]), STR_10(CODE[16]), 
		 -> STR_8(CODE[18]), STR_6(CODE[18]), STR_4(CODE[18]), STR_2(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[13]), STR_14(CODE[14]), STR_12(CODE[16]), STR_10(CODE[16]), 
		 -> STR_8(CODE[18]), STR_6(CODE[18]), STR_4(CODE[18]), STR_2(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[13]), STR_14(CODE[14]), STR_12(CODE[16]), STR_10(CODE[16]), 
		 -> STR_8(CODE[18]), STR_6(CODE[18]), STR_4(CODE[18]), STR_2(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2729_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_15(CODE[17]), STR_13(CODE[17]), STR_11(CODE[17]), STR_9(CODE[17]), 
		 -> STR_7(CODE[17]), STR_5(CODE[17]), STR_3(CODE[17]), STR_1(CODE[17]), 
		 -> stateMachine@textCursor2(BANK0[16]), 


Critical Paths under _main in COMRAM

    _system_init->_eepromRead
    _menuControl->_stateMachine
    _stateMachine->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _lcd_init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _TIMER0 in COMRAM

    None.

Critical Paths under _main in BANK0

    _menuControl->_stateMachine
    _stateMachine->_sprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _TIMER0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TIMER0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TIMER0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TIMER0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TIMER0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TIMER0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   54869
                          _Lcd_Clear
                           _lcd_init
                           _mcu_init
                        _menuControl
                     _menuInitialize
                        _system_init
                       _timer_0_init
 ---------------------------------------------------------------------------------
 (1) _timer_0_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_init                                          2     2      0      22
                                              1 COMRAM     2     2      0
                         _eepromRead
 ---------------------------------------------------------------------------------
 (2) _eepromRead                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _menuInitialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _menuControl                                          0     0      0   54539
                 _buttonControlFlags
                       _stateMachine
 ---------------------------------------------------------------------------------
 (2) _stateMachine                                        18    18      0   54538
                                             91 COMRAM     2     2      0
                                             86 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fladd
                             ___flge
                            ___flsub
                        _eepromWrite
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    10      8   42834
                                             81 COMRAM    10    10      0
                                             78 BANK0      8     0      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   41409
                                             73 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           50    44      6   41025
                                             63 COMRAM    10     4      6
                                             56 BANK0     22    22      0
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   30053
                                             45 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4    1369
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    3801
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    3022
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    5240
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8     942
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             25    17      8    4591
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5042
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1396
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eepromWrite                                          2     1      1     500
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_String                                     6     4      2    1484
                                              4 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (4) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Set_Cursor                                       5     4      1    1596
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _buttonControlFlags                                  16    16      0       1
                                              0 COMRAM    16    16      0
 ---------------------------------------------------------------------------------
 (1) _mcu_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     198
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (4) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (5) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _TIMER0                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _lcd_init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _mcu_init
   _menuControl
     _buttonControlFlags
     _stateMachine
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       ___fladd
       ___flge
         ___flmul (ARG)
       ___flsub
         ___fladd
         ___flmul (ARG)
       _eepromWrite
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
                 ___flmul (ARG)
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper
   _menuInitialize
   _system_init
     _eepromRead
   _timer_0_init

 _TIMER0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      FB       6       98.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     66      9E       4       98.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5E       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1F7       9        0.0%
DATA                 0      0     1F7      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Aug 07 14:22:23 2020

                 ___fldiv@aexp 0019                   ___fldiv@bexp 0018                   ___fldiv@sign 0011  
                           l70 49A0                             l72 49AE                             l73 49B0  
                           l76 4936                             l78 4944                             _KD 00F6  
                           l79 4948                             _KP 00FA                   ___awdiv@sign 0006  
          ___wmul@multiplicand 0003            __end_of_system_init 3AA4                            l110 4652  
                          l102 460E                            l104 4624                            l113 49CE  
                          l106 463A                            l122 4478                            l108 4650  
                          l116 4A04                            l125 4394                            l134 4412  
                          l128 491A                            l330 338C                            l331 33AE  
                          l260 49E4                            l340 34E0                            l332 33D0  
                          l333 33F2                            l325 4992                            l342 3502  
                          l334 3414                            l335 3436                            l336 3458  
                          l257 49D6                            l337 347A                            l338 349C  
                          l362 13EA                            l266 3AA2                            l339 34BE  
                          l380 1772                            l372 15D8                            l356 1298  
                          l348 453A                            l381 1790                            l622 397E  
                          l382 180A                            l358 1344                            l367 1504  
                          l359 1388                   _startIsClick 00F3                            l609 381A  
                          l387 18AC                            l492 49F6                            l397 1BB2  
                          l726 41A4                            l495 496E                            l760 3C66  
                          l754 42FE                            l739 4254                            l765 3CAC  
                          l792 3BA8                            l769 4876                            _PR2 000FBB  
                          _abs 47C8                            _pad 401C                   ___awmod@sign 0006  
                          wreg 000FE8                   ___flmul@aexp 0012                   ___flmul@bexp 0013  
                 ___flmul@sign 000D                   ___flmul@temp 0018                   ___flmul@prod 0014  
                  _stopIsClick 00F2                   ___fltol@exp1 000A                           l1023 23D2  
                         l1040 24EC                           l1032 26A2                           l1024 23C0  
                         l1113 2ACC                           l1025 2386                           l1050 25AA  
                         ?_abs 0013                           l1116 295E                           l1221 4062  
                         l1109 2768                           l1126 2A8E                           l1118 29D6  
                         l1119 29C4                           l1224 40A4                           l1232 2F08  
                         l1049 25BC                           l1065 4782                           l1402 47FE  
                         l1226 40E0                           l1234 2F10                           l1090 2D84  
                         l1082 2C8A                           l1314 0E5C                           l1091 2D72  
                         l1252 314A                           l1405 4806                           l1077 2E66  
                         l1270 1286                           l1079 2CC6                           l1504 48E4  
                         l1088 2D0C                           l4000 2674                           l1433 368A  
                         l4010 2692                           l4002 267A                           l1442 335C  
                         l1178 46F4                           l1523 459A                           l1452 48AE  
                         l1460 46A4                           l1436 3692                           l4100 389E  
                         l4020 47A6                           l4004 267C                           l1508 3E80  
                         l1380 212C                           l1372 21E2                           l1445 32A0  
                         l4110 3916                           l4102 38A6                           l4014 4784  
                         l4022 48B0                           l4006 2682                           l1518 4592  
                         l4112 3928                           l4104 38BA                           l4016 4790  
                         l4024 48BC                           l4200 2CB2                           l4008 2690  
                         l4032 4808                           l5000 11B4                           l1288 0AC4  
                         l1481 401A                           l4050 36CA                           l4042 3694  
                         l4106 38C8                           l4114 392E                           l4018 47A2  
                         l4026 48C0                           l4210 2CF2                           l4202 2CB4  
                         l4130 2AFA                           l4122 2ACE                           l1466 483E  
                         l5010 11F0                           l5002 11C6                           l1386 44D2  
                         l1387 44DA                           l5100 461E                           l4036 494A  
                         l4060 3726                           l4052 36D8                           l4044 3698  
                         l4116 393E                           l4108 38F6                           l1492 4A0E  
                         l4028 48D8                           l4220 2D2E                           l4212 2CFC  
                         l4204 2CC4                           l4140 2B34                           l4132 2B0A  
                         l4124 2ADA                           l4300 279C                           l5020 1248  
                         l5012 11F6                           l5004 11D2                           l1397 3DAA  
                         l5102 4626                           l4038 4966                           l4070 3790  
                         l4062 372E                           l4054 36F8                           l4046 36A6  
                         l4118 395E                           l4230 2DA0                           l4222 2D3C  
                         l4214 2D0A                           l4206 2CD6                           l4150 2B60  
                         l4142 2B3A                           l4134 2B1A                           l4126 2AE8  
                         l4310 27EC                           l4302 27A8                           l5022 1250  
                         l5006 11DA                           l5110 1BB4                           l5104 4634  
                         l5040 353C                           l5032 3504                           l4080 37DA  
                         l4072 37B0                           l4064 3742                           l4056 36FC  
                         l4048 36C6                           l4400 40F4                           l4240 2E0C  
                         l4232 2DAE                           l4224 2D6A                           l4208 2CEC  
                         l4216 2D1C                           l4160 2B9A                           l4152 2B70  
                         l4144 2B40                           l4136 2B1C                           l4128 2AEA  
                         l4320 282E                           l4312 27F8                           l4304 27B2  
                         l5024 1260                           l5016 122A                           l5008 11EA  
                         l5120 1C20                           l5112 1BD8                           l1489 47C6  
                         l5106 463C                           l5050 3592                           l5042 3572  
                         l5034 3518                           l4082 37FA                           l4074 37B2  
                         l4066 3750                           l4058 3708                           l4090 382E  
                         l4410 411A                           l4402 40FC                           l4250 2E5A  
                         l4242 2E26                           l4234 2DD8                           l4218 2D2A  
                         l4162 2BB0                           l4154 2B80                           l4146 2B4E  
                         l4138 2B24                           l4330 2890                           l4322 283A  
                         l4314 2804                           l4306 27C8                           l1498 45F6  
                         l5026 1266                           l5018 123C                           l5210 2186  
                         l5130 1CA0                           l5122 1C56                           l5114 1BE6  
                         l5108 464A                           l5300 43A2                           l5060 360C  
                         l5052 359A                           l5044 3576                           l5036 351C  
                         l4076 37C4                           l4068 3762                           l4092 384E  
                         l4420 4152                           l4412 4122                           l4404 4100  
                         l4252 2E5C                           l4244 2E42                           l4228 2D94  
                         l4236 2DDC                           l4180 2C04                           l4164 2BC0  
                         l4172 2BE0                           l4156 2B82                           l4148 2B50  
                         l4500 3C26                           l4340 2926                           l4332 289C  
                         l4324 284A                           l4316 2812                           l4308 27D4  
                         l4260 26A4                           l5204 2140                           l5140 1D26  
                         l5124 1C64                           l5116 1BF8                           l5220 21AC  
                         l5230 49B6                           l5302 43D2                           l5054 35A2  
                         l5038 3520                           l4078 37CA                           l4094 3852  
                         l4086 381C                           l4430 417E                           l4422 4158  
                         l4414 4134                           l4406 410E                           l4246 2E46  
                         l4238 2DF6                           l4190 2C56                           l4182 2C1E  
                         l4174 2BF0                           l4166 2BC8                           l4158 2B8A  
                         l4510 3CAA                           l4502 3C34                           l4350 297C  
                         l4342 2944                           l4334 28B8                           l4326 2864  
                         l4318 281E                           l4270 26E0                           l4262 26B0  
                         l5222 21D0                           l5206 2164                           l5214 2192  
                         l5150 1DC0                           l5142 1D34                           l5134 1CE8  
                         l5126 1C72                           l5118 1BFC                           l5310 46BE  
                         l5232 49BC                           l5240 48F4                           l5304 43D6  
                         l5064 364A                           l5056 35D6                           l5048 357C  
                         l4096 3860                           l4088 3820                           l3800 3F64  
                         l4424 416E                           l4416 413C                           l4432 4184  
                         l4408 4116                           l4440 41A6                           l4248 2E54  
                         l4192 2C66                           l4184 2C2E                           l4176 2BF0  
                         l4168 2BCC                           l4504 3C46                           l4360 29E6  
                         l4352 2980                           l4344 294E                           l4336 28E2  
                         l4328 2874                           l4280 2712                           l4272 26F0  
                         l4264 26BE                           l4600 3D40                           l5080 3DE2  
                         l5216 21A0                           l5208 2172                           l5160 1E4C  
                         l5144 1D58                           l5128 1C92                           l5136 1CFA  
                         l5312 46C6                           l5400 1354                           l5320 499A  
                         l5234 49BE                           l5330 3378                           l5250 4908  
                         l5242 48F6                           l5066 365C                           l4098 3880  
                         l3802 3F76                           l4434 4194                           l4426 4176  
                         l4418 4144                           l4450 41D2                           l4442 41AA  
                         l4194 2C7A                           l4186 2C3E                           l4506 3C54  
                         l4370 2A48                           l4362 29F2                           l4354 298E  
                         l4346 295C                           l4338 2918                           l4290 2752  
                         l4282 2720                           l4274 26F6                           l4266 26C0  
                         l4514 4840                           l4530 3AF8                           l4522 3AA4  
                         l4610 3DA2                           l5090 3E5E                           l5082 3DF0  
                         l5074 3DAC                           l5170 1F08                           l5162 1E7E  
                         l5154 1E08                           l5146 1D92                           l5138 1D1E  
                         l5314 46E2                           l5306 46A6                           l5410 13A8  
                         l5402 1364                           l5322 499C                           l5236 49CC  
                         l5228 49B4                           l5340 33CA                           l5332 3386  
                         l5252 490E                           l5244 48FE                           l5068 366E  
                         l3804 3F80                           l4700 2FD8                           l4436 419C  
                         l4428 4178                           l4460 420A                           l4452 41DA  
                         l4444 41B8                           l4196 2C88                           l4188 2C4E  
                         l4508 3CA4                           l4380 2AB0                           l4372 2A5C  
                         l4364 2A00                           l4356 29BC                           l4348 296E  
                         l4292 2758                           l4284 2722                           l4276 2706  
                         l4268 26D0                           l4516 4856                           l3900 2394  
                         l3820 2210                           l3812 21E4                           l4532 3AFA  
                         l4524 3ABA                           l4604 3D4C                           l5084 3E08  
                         l5076 3DD6                           l5180 1FB0                           l5172 1F50  
                         l5164 1E8E                           l5148 1DB2                           l5156 1E1A  
                         l5260 4482                           l5308 46B6                           l6124 1B64  
                         l5500 158E                           l5420 1400                           l5412 13B8  
                         l5404 1374                           l5324 499E                           l5094 45FA  
                         l5350 3422                           l5342 33DE                           l5334 339A  
                         l5326 335E                           l5254 4910                           l5246 4900  
                         l5238 48E8                           l5270 4926                           l6126 35C0  
                         l3806 3F9E                           l4710 3080                           l4702 2FDE  
                         l4470 4244                           l4462 4220                           l4454 41EC  
                         l4446 41C0                           l4198 2C94                           l4382 2AB2  
                         l4374 2A76                           l4366 2A2A                           l4294 2778  
                         l4286 2732                           l4278 270C                           l4518 4866  
                         l3910 23BE                           l3902 23A0                           l3830 224A  
                         l3822 2220                           l3814 21F0                           l4390 473E  
                         l4534 3B0A                           l4606 3D5E                           l4630 316C  
                         l4614 459C                           l4622 4572                           l5086 3E24  
                         l5190 2048                           l5182 1FBE                           l5166 1EC0  
                         l5158 1E3C                           l5262 4490                           l5510 15EC  
                         l5502 1598                           l5430 1426                           l5422 1404  
                         l5414 13C8                           l5406 1384                           l5318 4996  
                         ?_pad 0011                           l5096 4608                           l5360 3474  
                         l5352 3430                           l5344 33EC                           l5336 33A8  
                         l5328 336A                           l5256 4918                           l5248 4906  
                         l5280 4934                           l5272 4928                           l3808 3FD4  
                         l4720 30E6                           l4712 309A                           l4704 2FE4  
                         l4472 424C                           l4464 4228                           l4456 41F4  
                         l4448 41C4                           l4480 4294                           l4376 2A92  
                         l4384 2AB8                           l4368 2A2E                           l4296 2788  
                         l4288 2742                           l3920 2414                           l3912 23E0  
                         l3904 23A4                           l3840 2278                           l3832 2250  
                         l3824 2230                           l3816 21FE                           l4392 474E  
                         l4560 3B88                           l4544 3B34                           l4536 3B0E  
                         l4528 3ACE                           l4640 3254                           l4632 31C2  
                         l4616 45AC                           l4624 4584                           l4800 090C  
                         l5088 3E36                           l5184 1FEE                           l5176 1F88  
                         l5168 1EE4                           l5264 44B6                           l5600 182A  
                         l5520 1612                           l5512 15EE                           l5504 15B4  
                         l5432 1430                           l5424 1412                           l5440 1450  
                         l5416 13CE                           l5408 1398                           l5098 4610  
                         l5370 34CC                           l5362 3488                           l5354 3444  
                         l5346 3400                           l5338 33BC                           l5290 4448  
                         l5282 4416                           l5274 492A                           l5266 491E  
                         l4570 4040                           l4722 30EC                           l4730 3122  
                         l4714 30B4                           l4706 3048                           l4466 422E  
                         l4458 41FC                           l4482 42C2                           l4386 2ABC  
                         l4378 2AA2                           l3930 244E                           l3922 2422  
                         l3914 23F0                           l3906 23B2                           l3850 22AC  
                         l3842 227A                           l3834 2262                           l3826 2232  
                         l3818 2200                           l4562 3B98                           l4554 3B5C  
                         l4546 3B3E                           l4538 3B1C                           l4650 333C  
                         l4642 3290                           l4634 31D6                           l4618 453C  
                         l4810 0996                           l4802 0926                           l5194 20B6  
                         l5178 1F9A                           l5258 447A                           l5610 187C  
                         l5602 183A                           l5530 1640                           l5522 1614  
                         l5514 15F2                           l5506 15C0                           l5450 147C  
                         l5442 145E                           l5434 143A                           l5426 1422  
                         l5418 13FE                           l5372 34DA                           l5364 3496  
                         l5356 3452                           l5348 340E                           l5292 445A  
                         l5284 4426                           l5276 492C                           l5268 4922  
                         l4660 4654                           l4580 4086                           l4572 404E  
                         l4724 30FE                           l4708 3062                           l4716 30C4  
                         l4396 40E2                           l4468 4234                           l4484 42D2  
                         l4476 4256                           l4492 3BAA                           l3940 24BA  
                         l3932 2450                           l3924 2430                           l3908 23B4  
                         l3860 22E8                           l3844 228A                           l3852 22B4  
                         l3836 2264                           l3828 223A                           l4556 3B68  
                         l4548 3B48                           l4652 334C                           l4636 31E4  
                         l4644 32C4                           l4628 314C                           l4900 0E34  
                         l4820 0A6E                           l4812 09F0                           l4740 0700  
                         l5196 20C8                           l5188 201A                           l5620 18BC  
                         l5612 1884                           l5604 184C                           l5540 166C  
                         l5532 1642                           l5516 1600                           l5524 161E  
                         l5460 14A6                           l5452 1486                           l5444 146E  
                         l5436 1442                           l5428 1424                           l5380 129E  
                         l5710 49F8                           l5374 34EE                           l5366 34AA  
                         l5358 3466                           l5294 446C                           l5286 4438  
                         l5278 4930                           l4662 4658                           l4590 47E2  
                         l4582 40B4                           l4574 405A                           l4566 401C  
                         l4726 310A                           l4718 30D6                           l4398 40E6  
                         l4486 42F6                           l4478 4284                           l4494 3BD8  
                         l3950 2512                           l3942 24BC                           l3934 245A  
                         l3926 243C                           l3918 2404                           l3870 22FC  
                         l3862 22EC                           l3854 22C4                           l3846 229A  
                         l3838 226A                           l4558 3B78                           l4646 3300  
                         l4910 0EEC                           l4902 0E48                           l4830 0AB8  
                         l4822 0A72                           l4814 0A24                           l4806 095C  
                         l4750 0750                           l4742 0708                           l4734 06D8  
                         l5198 20FC                           l5630 18EC                           l5622 18BE  
                         l5614 1892                           l5606 1852                           l5550 16B8  
                         l5542 1688                           l5526 162E                           l5534 164C  
                         l5518 1610                           l5470 14F8                           l5462 14B2  
                         l5454 148E                           l5446 1470                           l5438 144A  
                         l5390 12F0                           l5382 12A8                           l5720 433E  
                         l5712 4300                           l5376 34FC                           l5368 34B8  
                         l5296 4472                           l5288 443E                           l4656 4878  
                         l4664 466C                           l4584 40C8                           l4576 406E  
                         l4568 402C                           l4728 3112                           l4680 2EE0  
                         l4672 2E68                           l4488 42FC                           l4496 3BE8  
                         l3960 2540                           l3944 24CC                           l3928 2440  
                         l3936 2460                           l3880 2310                           l3872 2300  
                         l3864 22F0                           l3856 22D6                           l3848 22AA  
                         l4592 3CAE                           l4648 3314                           l4920 0F38  
                         l4912 0EFE                           l4904 0E54                           l4840 0AF4  
                         l4824 0A84                           l4832 0AD0                           l4816 0A2C  
                         l4808 0990                           l4760 0788                           l4752 075E  
                         l4744 072C                           l4736 06E2                           l5640 1944  
                         l5632 18F8                           l5624 18CE                           l5616 18A0  
                         l5608 186A                           l5560 16D4                           l5552 16C2  
                         l5544 1694                           l5536 1656                           l5528 163E  
                         l5480 153C                           l5472 1518                           l5464 14BC  
                         l5456 1496                           l5448 1472                           l5392 1304  
                         l5384 12B4                           l5730 4370                           l5722 434E  
                         l5714 431A                           l5298 4396                           l4666 469A  
                         l4578 4082                           l4690 2F38                           l4682 2EE2  
                         l4674 2E88                           l4498 3C16                           l3962 254E  
                         l3954 2526                           l3970 256C                           l3938 2486  
                         l3946 24DC                           l3882 2314                           l3874 2304  
                         l3866 22F4                           l3858 22E4                           l3890 2324  
                         l4594 3CCE                           l4930 0F6C                           l4922 0F46  
                         l4914 0F10                           l4906 0E78                           l4850 0B5A  
                         l4842 0B10                           l4826 0A96                           l4818 0A5E  
                         l4770 07EE                           l4762 078C                           l4754 0770  
                         l4746 0736                           l4738 06F2                           l5650 19CC  
                         l5642 1976                           l5634 1902                           l5618 18BA  
                         l5626 18D2                           l5570 1722                           l5562 16DE  
                         l5554 16CE                           l5538 1662                           l5490 156A  
                         l5482 153E                           l5474 151A                           l5466 14D8  
                         l5458 149C                           l5394 130C                           l5386 12BE  
                         l5378 1288                           l5740 438E                           l5732 4376  
                         l5724 4354                           l5716 4320                           l4668 469E  
                         l4588 47C8                           l4692 2F3E                           l4684 2EFC  
                         l4676 2EB0                           l3964 2556                           l3956 2530  
                         l3948 2502                           l3972 257A                           l3892 2328  
                         l3884 2318                           l3876 2308                           l3868 22F8  
                         l4596 3D0C                           l4940 0F9E                           l4932 0F7C  
                         l4924 0F56                           l4916 0F1E                           l4908 0EDC  
                         l4860 0BA2                           l4852 0B6C                           l4844 0B46  
                         l4828 0A9E                           l4772 0800                           l4756 077C  
                         l4764 0792                           l4748 073E                           l5660 1A2C  
                         l5652 19CE                           l5644 197A                           l5636 1928  
                         l5628 18E2                           l5580 1778                           l5572 1732  
                         l5564 16E6                           l5556 16D0                           l5548 16AC  
                         l5492 156C                           l5484 1540                           l5476 151E  
                         l5468 14E4                           l5396 1326                           l5388 12E4  
                         l5900 3EBC                           l5734 437C                           l5726 4364  
                         l5718 4338                           l5742 49D0                           l3798 3F52  
                         l4694 2F46                           l4686 2F18                           l4678 2ED0  
                         l3982 25CC                           l3990 2622                           l3974 257E  
                         l3966 255A                           l3958 253E                           l3894 2352  
                         l3886 231C                           l3878 230C                           l4598 3D34  
                         l4950 1046                           l4942 0FB0                           l4934 0F80  
                         l4926 0F5A                           l4918 0F26                           l4870 0BEA  
                         l4862 0BB0                           l4854 0B7E                           l4846 0B4E  
                         l4838 0AE2                           l4790 08D4                           l4774 081C  
                         l4766 07B8                           l4782 0866                           l4758 0784  
                         l5670 1AAA                           l5662 1A36                           l5646 19AE  
                         l5638 1934                           l5654 1A02                           l5590 17DC  
                         l5582 1796                           l5574 1734                           l5566 16F0  
                         l5558 16D2                           l5494 156E                           l5478 152C  
                         l5486 154A                           l5398 1338                           l5750 49F2  
                         l5910 3F00                           l5902 3ECC                           l5736 4382  
                         l5728 436A                           l5744 49D4                           l4696 2F50  
                         l4688 2F2A                           l3992 2632                           l3984 25D8  
                         l3976 258C                           l3968 256A                           l3896 236E  
                         l3888 2320                           l4960 109E                           l4952 104E  
                         l4944 0FB4                           l4936 0F86                           l4928 0F60  
                         l4880 0CFE                           l4872 0BFA                           l4864 0BC8  
                         l4856 0B8C                           l4848 0B52                           l4792 08F0  
                         l4784 088C                           l4776 0834                           l5680 1B02  
                         l5672 1AAE                           l5664 1A5C                           l5656 1A16  
                         l5648 19BE                           l5592 17E8                           l5584 17A0  
                         l5576 1754                           l5568 1716                           l5488 155A  
                         l5496 1578                           l5760 3A58                           l5752 49F4  
                         l5912 3F14                           l5904 3EDC                           l5920 3F46  
                         l5738 4388                           l4698 2F56                           l3994 2642  
                         l3986 25E6                           l3978 25A2                           l3898 237E  
                         l4970 10E2                           l4962 10AC                           l4938 0F8C  
                         l4946 0FBA                           l4954 1052                           l4890 0D9E  
                         l4874 0C0E                           l4882 0D04                           l4866 0BDA  
                         l4858 0B90                           l4778 083E                           l5674 1AE2  
                         l5666 1A68                           l5658 1A20                           l5682 1B36  
                         l5594 17F8                           l5586 17AC                           l5578 1766  
                         l5498 1582                           l5746 4970                           l5770 3A7A  
                         l5762 3A5A                           l5754 3980                           l5914 3F18  
                         l5906 3EEC                           l3996 2662                           l3988 2620  
                         l4980 1118                           l4972 10EA                           l4964 10BC  
                         l4956 1070                           l4948 1012                           l4892 0DD0  
                         l4884 0D22                           l4876 0C72                           l4868 0BE2  
                         l4788 08C2                           l5676 1AF2                           l5668 1A78  
                         l5596 17FA                           l5588 17B6                           l5780 44E4  
                         l5772 3A92                           l5764 3A5C                           l5756 3A54  
                         l5748 49E6                           l5916 3F28                           l5908 3EF0  
                         l3998 2666                           l4990 1174                           l4982 1120  
                         l4974 10FA                           l4966 10C0                           l4958 108C  
                         l4894 0DE0                           l4886 0D56                           l4878 0CCA  
                         l5678 1B00                           l5598 181A                           l5790 4512  
                         l5782 44F4                           l5774 3A9A                           l5766 3A66  
                         l5758 3A56                           l5918 3F3E                           l4992 117C  
                         l4984 112C                           l4976 1102                           l4968 10D0  
                         l4896 0DF0                           l4888 0D88                           l5688 1B4E  
                         l5792 451E                           l5784 44F6                           l5776 44DC  
                         l5768 3A70                           l4986 1132                           l4994 1182  
                         l4978 1110                           l4898 0E24                           l5794 452C  
                         l5786 4502                           l5778 44E0                           l5890 3E92  
                         l5882 3E82                           l4996 1194                           l4988 1158  
                         l5796 452E                           l5788 4510                           l5892 3E96  
                         l5884 3E86                           l4998 11AE                           l5894 3E9A  
                         l5886 3E8A                           l5896 3EAA                           l5888 3E8E  
                         l5898 3EAC                           STR_1 0635                           STR_2 069A  
                         STR_3 0668                           STR_4 0601                           STR_5 0679  
                         STR_6 0601                           STR_7 0624                           STR_8 0601  
                         STR_9 0646                           u4000 2486                           u4001 2482  
                         u4010 24CC                           u4011 24C8                           u4100 25B8  
                         u4020 2502                           u4101 25B4                           u4021 24FE  
                         u4110 25CC                           u4030 2512                           u4111 25C8  
                         u4031 250E                           u4200 48D8                           u4120 25E6  
                         u4040 253E                           u5000 3AEE                           u4201 48D4  
                         u4121 25E2                           u4041 253A                           u4130 2620  
                         u4050 254E                           u5010 3B1C                           u4210 4838  
                         u4131 261C                           u4051 254A                           u5011 3B18  
                         u4211 4832                           u4300 382E                           u5100 47E2  
                         u4140 2632                           u4060 256A                           u5020 3B30  
                         u4220 483A                           u4301 382A                           u5101 47DE  
                         u4141 262E                           u4061 2566                           u5021 3B2C  
                         u5005 3AE4                           u4230 36A6                           u4310 3860  
                         u4150 2642                           u4070 257A                           u5030 3B58  
                         u5110 3CEE                           u4231 36A2                           u4311 385C  
                         u4151 263E                           u4071 2576                           u5031 3B54  
                         u4240 36D8                           u4320 389E                           u4400 2B60  
                         u4160 2662                           u4080 258C                           u5040 3B78  
                         u5120 3D0C                           u5200 456C                           u6000 11C6  
                         u4241 36D4                           u4321 389A                           u4401 2B5C  
                         u4161 265E                           u4081 2588                           u5041 3B74  
                         u5121 3D08                           u5201 4566                           u6001 11C2  
                         u4330 38C8                           u4410 2B70                           u4170 2674  
                         u4090 25A2                           u5050 3B88                           u5130 3D34  
                         u5210 456E                           u6010 1224                           u4251 3702  
                         u4331 38C4                           u4411 2B6C                           u4171 2670  
                         u4091 259E                           u5051 3B84                           u5131 3D30  
                         u5115 3CE4                           u6011 121E                           u6100 366E  
                         u4260 3726                           u4340 38F6                           u5060 402C  
                         u4500 2D2A                           u4420 2BB0                           u4180 2690  
                         u5140 3D5E                           u5300 32E4                           u5220 4584  
                         u6020 1226                           u6101 366A                           u4261 3722  
                         u4341 38F2                           u5061 4028                           u4501 2D26  
                         u4421 2BAC                           u4181 268C                           u5141 3D5A  
                         u5221 4580                           u4270 3750                           u4350 393E  
                         u4190 47C6                           u5070 404E                           u4510 2D3C  
                         u4430 2BF0                           u5310 3300                           u5230 3194  
                         u6030 123C                           u6110 3DD6                           u4271 374C  
                         u4351 393A                           u4191 47C2                           u5071 404A  
                         u4511 2D38                           u4431 2BEC                           u5311 32FC  
                         u6031 1238                           u6111 3DD2                           u6040 353C  
                         u4280 3790                           u5080 40A4                           u5400 2EE0  
                         u4520 2D6A                           u4440 2C66                           u4360 2AE8  
                         u4600 26D0                           u3800 21FE                           u5160 3D98  
                         u5320 333C                           u5240 31C2                           u6120 3E08  
                         u6200 1BD8                           u7000 1610                           u6041 3538  
                         u4281 378C                           u5081 40A0                           u5401 2EDC  
                         u4521 2D66                           u4441 2C62                           u4361 2AE4  
                         u4601 26CC                           u3801 21FA                           u5161 3D92  
                         u5321 3338                           u5305 32DA                           u5241 31BE  
                         u6121 3E04                           u6201 1BD4                           u7001 160C  
                         u5330 48A8                           u6050 3572                           u4290 37DA  
                         u5090 40B4                           u5410 2EFC                           u4530 2D80  
                         u4450 2C88                           u4370 2AFA                           u4610 26E0  
                         u3810 2210                           u5170 3D9A                           u5250 31E4  
                         u6130 3E24                           u6210 1C20                           u7010 162E  
                         u5331 48A2                           u6051 356E                           u4291 37D6  
                         u5091 40B0                           u5411 2EF8                           u4531 2D7C  
                         u4451 2C84                           u4371 2AF6                           u4611 26DC  
                         u3811 220C                           u5155 3D70                           u5251 31E0  
                         u5235 318A                           u6131 3E20                           u6211 1C1C  
                         u7011 162A                           u5340 48AA                           u6060 358E  
                         u5500 30E6                           u5420 2F2A                           u4540 2D94  
                         u4460 2CB2                           u4380 2B0A                           u4700 298E  
                         u4620 2720                           u3900 236A                           u3820 2220  
                         u5180 45E4                           u6140 3E36                           u6300 1E1A  
                         u6220 1C64                           u7100 184C                           u7020 163E  
                         u6061 358A                           u5501 30E2                           u5421 2F26  
                         u4541 2D90                           u4461 2CAE                           u4381 2B06  
                         u4701 298A                           u4621 271C                           u3901 2364  
                         u3821 221C                           u6141 3E32                           u6301 1E16  
                         u6221 1C60                           u7101 1848                           u7021 163A  
                         u5350 466C                           u6070 3644                           u5510 30FE  
                         u5430 2F38                           u4550 2DAE                           u4470 2CD6  
                         u4390 2B4E                           u4710 29BC                           u4630 2732  
                         u3910 236C                           u3830 2262                           u5270 3250  
                         u5190 45F6                           u6150 3E5E                           u6310 1E4C  
                         u6230 1CE0                           u7110 187C                           u7030 16A8  
                         u5351 4668                           u6071 363E                           u5511 30FA  
                         u5431 2F34                           u4551 2DAA                           u4471 2CD2  
                         u4391 2B4A                           u4711 29B8                           u4631 272E  
                         u3831 225E                           u5271 324C                           u5191 45F2  
                         u6151 3E5A                           u6311 1E48                           u6231 1CDA  
                         u7111 1878                           u7031 16A4                           u6160 4608  
                         u5360 469A                           u6080 3646                           u3760 3F64  
                         u5440 3062                           u4800 4134                           u4560 2DF6  
                         u4480 2CEC                           u4720 29D2                           u4640 2742  
                         u3920 2394                           u3840 2278                           u5280 3274  
                         u5600 088C                           u5520 0700                           u6400 2164  
                         u6320 1E8E                           u6240 1CE2                           u7200 19CC  
                         u7120 1892                           u7040 1732                           u6161 4604  
                         u5361 4696                           u3761 3F60                           u5441 305E  
                         u4801 4130                           u4561 2DF2                           u4481 2CE8  
                         u4721 29CE                           u4641 273E                           u3921 2390  
                         u3841 2274                           u5265 31F8                           u5601 0888  
                         u5521 06FC                           u6401 2160                           u6321 1E8A  
                         u7201 19C8                           u7121 188E                           u7041 172E  
                         u6170 461E                           u6090 365C                           u3770 3F76  
                         u5450 3080                           u5370 2E98                           u4810 4152  
                         u4570 2E26                           u4490 2D0A                           u4730 29E6  
                         u4650 2778                           u3930 23B2                           u3850 228A  
                         u5290 3290                           u5266 3202                           u5610 08BA  
                         u5530 0750                           u6330 1EE4                           u6250 1CFA  
                         u6410 44D2                           u7210 1A16                           u7130 18A0  
                         u7050 1766                           u6171 461A                           u6091 3658  
                         u3771 3F72                           u5451 307C                           u5371 2E92  
                         u4811 414E                           u4571 2E22                           u4491 2D06  
                         u4731 29E2                           u4651 2774                           u3931 23AE  
                         u3851 2286                           u5291 328C                           u5267 3212  
                         u5187 45DA                           u5611 08B4                           u5531 074C  
                         u6331 1EE0                           u6251 1CF6                           u6411 44CE  
                         u7211 1A12                           u7131 189C                           u7051 1762  
                         u6180 4634                           u6500 3378                           u6420 4944  
                         u3780 3F9E                           u5460 309A                           u5380 2E9A  
                         u4820 416E                           u4580 2E54                           u4900 4284  
                         u4740 2A00                           u4660 2788                           u3940 23D2  
                         u3860 229A                           u5700 0ADE                           u5620 08BC  
                         u5540 075E                           u6340 1F08                           u6260 1D1E  
                         u7220 1A78                           u7140 18BA                           u7060 17F8  
                         u7300 4510                           u6181 4630                           u6501 3374  
                         u6421 4940                           u3781 3F9A                           u5461 3096  
                         u4821 416A                           u4581 2E50                           u4901 4280  
                         u4741 29FC                           u4661 2784                           u3941 23CE  
                         u3861 2296                           u5285 326A                           u5701 0ADA  
                         u5541 075A                           u6341 1F04                           u6261 1D1A  
                         u7221 1A74                           u7141 18B6                           u7061 17F4  
                         u7301 450C                           u6190 464A                           u6510 3386  
                         u6430 4426                           u3790 3FD4                           u5470 30B4  
                         u5390 2EB0                           u4830 4194                           u4910 42C2  
                         u4750 2A48                           u4670 2902                           u4590 26BE  
                         u3950 23E0                           u3870 22D6                           u5710 0AF4  
                         u5630 08D4                           u5550 0770                           u6350 1F9A  
                         u6270 1D58                           u7230 1AAA                           u7150 18CE  
                         u7070 181A                           u7310 452C                           u6191 4646  
                         u6511 3382                           u6431 4422                           u3791 3FD0  
                         u5471 30B0                           u5391 2EAC                           u4831 4190  
                         u4911 42BE                           u4751 2A44                           u4591 26BA  
                         u3951 23DC                           u3871 22D2                           u5711 0AF0  
                         u5631 08D0                           u5551 076C                           u6351 1F96  
                         u6271 1D54                           u7231 1AA6                           u7151 18CA  
                         u7071 1816                           u7311 4528                           u6600 3422  
                         u6520 339A                           u6440 445A                           u5480 30C4  
                         u4840 41B8                           u4920 42F6                           u4760 2A76  
                         u4680 295C                           u3960 23F0                           u3880 22E4  
                         u5800 0D22                           u5720 0B10                           u5640 0958  
                         u5560 07B8                           u6360 2048                           u6280 1E00  
                         u7240 1AF2                           u7160 18E2                           u7080 182A  
                         u7400 3F3E                           u6601 341E                           u6521 3396  
                         u6441 4456                           u5481 30C0                           u4841 41B4  
                         u4921 42F2                           u4761 2A72                           u4681 2958  
                         u3961 23EC                           u3881 22E0                           u5801 0D1E  
                         u5721 0B0C                           u5641 0954                           u5561 07B4  
                         u6361 2044                           u6281 1DFA                           u7241 1AEE  
                         u7161 18DE                           u7081 1826                           u7401 3F3A  
                         u6610 3430                           u6530 33A8                           u6450 43CE  
                         u5490 30D6                           u4850 41D2                           u4930 3BD8  
                         u4770 2AB0                           u4690 297C                           u3970 2422  
                         u3890 2352                           u5810 0D88                           u5730 0B46  
                         u5650 09EC                           u5570 07E6                           u6370 20AE  
                         u6290 1E02                           u7250 1B00                           u7170 1944  
                         u7090 183A                           u6611 342C                           u6531 33A4  
                         u5491 30D2                           u4851 41CE                           u4931 3BD4  
                         u4771 2AAC                           u4691 2978                           u4675 28F8  
                         u3971 241E                           u3891 234E                           u5811 0D84  
                         u5731 0B42                           u5651 09E8                           u5571 07E0  
                         u6371 20A8                           u7251 1AFC                           u7171 1940  
                         u7091 1836                           u6700 34CC                           u6620 3444  
                         u6540 33BC                           u6460 4402                           u4780 40F4  
                         u4860 41EC                           u4940 3C16                           u3980 2430  
                         u5900 0F46                           u5820 0DD0                           u5740 0B6C  
                         u5660 0A5E                           u5580 07E8                           u6380 20B0  
                         u7260 1B4A                           u7180 1976                           u7340 3EAA  
                         u6701 34C8                           u6621 3440                           u6541 33B8  
                         u4781 40F0                           u4861 41E8                           u4941 3C12  
                         u3981 242C                           u5901 0F42                           u5821 0DCC  
                         u5741 0B68                           u5661 0A5A                           u7261 1B46  
                         u7181 1972                           u7341 3EA6                           u6710 34DA  
                         u6630 3452                           u6550 33CA                           u6470 4412  
                         u4790 410E                           u4870 420A                           u4950 3C34  
                         u3990 244E                           u5910 0F9E                           u5830 0DE0  
                         u5750 0B7E                           u5670 0A84                           u5590 0800  
                         u6390 20C8                           u7190 19BE                           u7350 3EBC  
                         u6711 34D6                           u6631 344E                           u6551 33C6  
                         u6471 440E                           u4791 410A                           u4871 4206  
                         u4951 3C30                           u3991 244A                           u5911 0F9A  
                         u5831 0DDC                           u5751 0B7A                           u5671 0A80  
                         u5591 07FC                           u6391 20C4                           u7191 19BA  
                         u7351 3EB8                           u7280 49E4                           u6720 34EE  
                         u6640 3466                           u6560 33DE                           u4880 4220  
                         u4960 3C54                           u5920 1070                           u5840 0E48  
                         u5760 0B8C                           u5680 0A96                           u6800 1374  
                         u6480 49AE                           u7360 3ECC                           u7281 49E0  
                         u6721 34EA                           u6641 3462                           u6561 33DA  
                         u6457 43C4                           u4881 421C                           u4961 3C50  
                         u5921 106C                           u5841 0E44                           u5761 0B88  
                         u5681 0A92                           u6801 1370                           u6481 49AA  
                         u7361 3EC8                           u6730 34FC                           u6650 3474  
                         u6570 33EC                           u4890 4244                           u4970 3CA4  
                         u5930 108C                           u5850 0EEC                           u5770 0BA2  
                         u5690 0AB8                           u6810 1384                           u7290 44F4  
                         u7370 3EDC                           u6731 34F8                           u6651 3470  
                         u6571 33E8                           u6491 3364                           u6467 43F8  
                         u4891 4240                           u4971 3CA0                           u5931 1088  
                         u5851 0EE8                           u5771 0B9E                           u5691 0AB4  
                         u6811 1380                           u7291 44F0                           u7371 3ED8  
                         u6660 3488                           u6580 3400                           u4980 4856  
                         u5940 109E                           u5860 0EFE                           u5780 0BB0  
                         u6900 146E                           u6820 1398                           u7380 3EEC  
                         u6661 3484                           u6581 33FC                           u4981 4852  
                         u5941 109A                           u5861 0EFA                           u5781 0BAC  
                         u6901 146A                           u6821 1394                           u6741 128E  
                         u7381 3EE8                           u6670 3496                           u6590 340E  
                         u4990 3ABA                           u5950 10AC                           u5870 0F10  
                         u5790 0BDA                           u6910 14F8                           u6830 13A8  
                         u6750 1304                           u7390 3F14                           u6671 3492  
                         u6591 340A                           u4991 3AB6                           u5951 10A8  
                         u5871 0F0C                           u5791 0BD6                           u6911 14F4  
                         u6831 13A4                           u6751 1300                           u7391 3F10  
                         u6680 34AA                           u5960 10E2                           u5880 0F1E  
                         u6920 1518                           u6840 13B8                           u6760 1326  
                         u6681 34A6                           u5961 10DE                           u5881 0F1A  
                         u6921 1514                           u6841 13B4                           u6761 1322  
                         u6690 34B8                           u5970 1110                           u5890 0F38  
                         u6930 152C                           u6850 13C8                           u6770 1338  
                         u7707 4344                           u6691 34B4                           u5971 110C  
                         u5891 0F34                           u6931 1528                           u6851 13C4  
                         u6771 1334                           u5980 1194                           u6940 153C  
                         u6860 13FE                           u6780 1354                           u7717 435A  
                         u5981 1190                           u6941 1538                           u6861 13FA  
                         u6781 1350                           u5990 11AE                           u6950 155A  
                         u6870 1412                           u6790 1364                           u7727 49C4  
                         u5991 11AA                           u6951 1556                           u6871 140E  
                         u6791 1360                           u6960 156A                           u6880 1422  
                         u6961 1566                           u6881 141E                           u6970 15D4  
                         u6890 145E                           u6971 15D0                           u6891 145A  
                         u7667 3A84                           u6980 15EC                           u7677 4902  
                         u6981 15E8                           u6990 1600                           u7687 4912  
                         u6991 15FC                           u7697 432A                           _TMR2 000FBC  
                         abs@a 0013              ?_Lcd_Write_String 0005                           _dbuf 01AB  
                         _atoi 3504                           _main 3E82                           _dtoa 2E68  
                         _prec 00EB                           _nout 00E7                           pad@i 0018  
                         pad@p 0015                           fsr0h 000FEA                           fsr1h 000FE2  
                         indf0 000FEF                           fsr2h 000FDA                           fsr0l 000FE9  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 001A  
                         fsr2l 000FD9                           btemp 005F                  ___fpclassifyf 3CAE  
                         prodh 000FF4                           prodl 000FF3                           start 0066  
           ??_Lcd_Write_String 0007                ___fldiv@new_exp 0012                __end_of_Lcd_Cmd 49D0  
                 _tolower$3031 000D                   ___param_bank 000000                          ??_abs 0015  
                        ??_pad 0017                   ?_menuControl 0001                  ___fltol@sign1 0009  
              __end_of___aodiv 381C                          ?_atoi 0008                __end_of___fladd 26A4  
                        ?_main 0001                          ?_dtoa 001C                __end_of___aomod 3980  
              __end_of___fldiv 2E68                __end_of___awdiv 41A6                __end_of___flneg 4878  
                        _EEADR 000FA9                          STR_10 068A                          STR_11 0657  
                        STR_12 068A                          STR_21 06C8                          STR_13 0613  
                        STR_22 06D0                          STR_14 06A9                          STR_15 0613  
                        STR_16 06B7                          STR_25 06D4                          STR_17 06C4  
                        STR_18 06CC                          STR_27 06D4                __end_of___awmod 4256  
              __end_of___flmul 2ACE                __end_of___flsub 4784                __end_of___fltol 3BAA  
                        _T0CON 000FD5                ___awdiv@divisor 0003                          i2l489 0062  
              ___awdiv@counter 0005                   vfpfcnvrt@fmt 0042                          _TMR0H 000FD7  
                        _TMR0L 000FD6        __size_of_Lcd_Set_Cursor 0066                          _flags 00ED  
                        _fputc 3F52                          _fputs 4784                __end_of_isdigit 48B0  
                 _adc_raw_data 0193                          atoi@n 0015                          pad@fp 0011  
                        atoi@s 0008                          _width 00E9                          _putch 4A0E  
                        dtoa@d 001E                          dtoa@i 003E                          dtoa@n 0036  
                        dtoa@p 0030                          dtoa@s 0034                          dtoa@w 0032  
              __end_of_isspace 46A6                __end_of_isupper 4840                          tablat 000FF5  
                        ttemp5 0060                          ttemp6 0063                          ttemp7 0067  
                        status 000FD8                          wtemp8 0060                __end_of_sprintf 46F6  
               ?___fpclassifyf 0001                __end_of_tolower 459C                __end_of_strncmp 3E82  
             __end_of_Lcd_Port 4654                __initialization 46F6                    _system_init 3980  
                 __end_of_atoi 3694                   __end_of_main 3F52                   __end_of_dtoa 314C  
                       ??_atoi 000A                         ??_main 005E                         ??_dtoa 0026  
           __size_of_Lcd_Clear 000E                  __activetblptr 000002                         _ADCON0 000FC2  
                       _ADCON1 000FC1                         ?_fputc 0001                         ?_fputs 000A  
                       _ADRESH 000FC4                         _ADRESL 000FC3                         _EEDATA 000FA8  
                       _CCPR1L 000FBE                         _CCPR2L 000F67                         _EECON2 000FA7  
             ___awdiv@dividend 0001                         ?_putch 0001                         _ANSELB 000F39  
                       i2l6000 004C                         i2l6002 005C                         i2l6004 0060  
                       i2l5990 0028                         i2l5992 0030                         i2l5984 000A  
                       i2l5994 0034                         i2l5986 0018                         i2l5996 0042  
                       i2l5988 0026                         i2l5998 0048                      ??_Lcd_Cmd 0002  
                       _TIMER0 0008        __size_of_Lcd_Write_Char 0036             _timer_counter_flag 00F5  
         __size_of_eepromWrite 002E                   vfprintf@cfmt 0050               __end_of_lcd_init 4396  
                       ___flge 3BAA                         ___fleq 4256                      ??___aodiv 0011  
                    ??___fladd 0009                      ??___aomod 0011                         ___wmul 494A  
                    ??___fldiv 0009                      ??___awdiv 0005                      ??___flneg 0005  
                    ??___awmod 0005                      ??___flmul 0009                      ??___flsub 0022  
                    ??___fltol 0005                         _efgtoa 06D8                         _floorf 314C  
             __end_of_mcu_init 49E6                         clear_0 471C                         clear_1 4728  
              eepromWrite@data 0001               ___awdiv@quotient 0007                ___awmod@divisor 0003  
              ___awmod@counter 0005                         pad@buf 0013                         dtoa@fp 001C  
                       _strcpy 459C                         _strlen 48B0                         fputc@c 0001  
                       fputs@c 000E                         fputs@i 000F                         fputs@s 000A  
                    ??_isdigit 0003                ___fpclassifyf@e 0009                ___fpclassifyf@u 000B  
              ___fpclassifyf@x 0001                   __mediumconst 0000                      ??_isspace 0003  
                       tblptrh 000FF7                      ??_isupper 0003                         tblptrl 000FF6  
                       tblptru 000FF8                         putch@c 0001               __end_of_vfprintf 44DC  
                    ??_sprintf 0052                      ??_tolower 0009                      ??_strncmp 0007  
   __end_of_buttonControlFlags 3504                Lcd_Set_Cursor@a 0005                Lcd_Set_Cursor@b 0004  
              Lcd_Set_Cursor@y 0007                Lcd_Set_Cursor@z 0006                     ___flge@ff1 001A  
                   ___flge@ff2 001E                ??___fpclassifyf 0005                     ___fleq@ff1 0001  
                   ___fleq@ff2 0005                     __accesstop 0060        __end_of__initialization 4730  
                   ___flneg@f1 0001              __end_of_Lcd_Clear 4A06                  ___rparam_used 000001  
                   ___fltol@f1 0001                 __pcstackCOMRAM 0001                   __pidataBANK0 4A06  
                __end_of_fputc 401C                  __end_of_fputs 47C8                  __end_of_putch 4A10  
               _Lcd_Set_Cursor 4414              eepromRead@address 0001           __size_of_menuControl 0060  
                    ?_Lcd_Port 0001                        ??_fputc 0005                        ??_fputs 000E  
                      ??_putch 0001                     __pbssBANK0 00C6                     __pbssBANK1 0100  
                      ?_TIMER0 0001                        ?___flge 001A                        ?___fleq 0001  
                      ?___wmul 0001                        ?_efgtoa 002E                        _CCP1CON 000FBD  
                      _CCP2CON 000F66                        ?_floorf 001A      __size_of_Lcd_Write_String 007E  
       __end_of_Lcd_Set_Cursor 447A                        ?_strcpy 0001                        ?_strlen 0001  
                   _eepromRead 4994             __size_of_vfpfcnvrt 0630                     ??_Lcd_Port 0001  
                    ?_lcd_init 0001        __size_of_menuInitialize 0024                  _menu_selected 00F1  
               _Lcd_Write_Char 48E6                        _Lcd_Cmd 49B2                      ?_mcu_init 0001  
              __size_of_TIMER0 005E              stateMachine@F6402 0163                     _controller 0150  
                      __Hparam 0000                        __Lparam 0000                   ?_system_init 0001  
              __size_of___flge 0104                __size_of___fleq 00AA                        ___aodiv 3694  
                      ___fladd 21E4                        ___aomod 381C                        ___fldiv 2ACE  
                      ___awdiv 40E2                        ___flneg 4840                        ___awmod 41A6  
                      ___flmul 26A4                        ___flsub 473E                        ___fltol 3AA4  
              __size_of___wmul 0026                      ?_vfprintf 004A                   __psmallconst 0600  
              __size_of_efgtoa 0BB0                __size_of_floorf 0212                        __pcinit 46F6  
                      __ramtop 0600                ?_Lcd_Set_Cursor 0004                        __ptext0 3E82  
                      __ptext1 49E6                        __ptext2 3980                        __ptext3 4994  
                      __ptext4 4970                        __ptext5 44DC                        __ptext6 1288  
                      __ptext7 46A6                        __ptext8 447A                        __ptext9 1BB4  
                   _menu_flags 00F0                     _menu_value 00E4                __size_of_strcpy 005C  
              __size_of_strlen 0036                        _counter 01A7        stateMachine@textCursor2 00B6  
                    _T2CONbits 000FBA                   __size_of_abs 0040                   __size_of_pad 00C6  
                      _isdigit 4878               ___awmod@dividend 0001                        _isspace 4654  
                      _isupper 4808                        efgtoa@c 0034                        efgtoa@d 0078  
                      efgtoa@e 0090                        efgtoa@f 0030                        efgtoa@g 008C  
                      efgtoa@h 0082                        efgtoa@i 008A                        efgtoa@l 0086  
                      efgtoa@m 0074                        efgtoa@n 0092                        efgtoa@p 007C  
                      efgtoa@t 0070                        efgtoa@u 0094                        efgtoa@w 007F  
                      atoi@neg 000E                  ?_timer_0_init 0001                        _sprintf 46A6  
                      _tolower 453C                     ??_lcd_init 0004         __end_of_Lcd_Write_Char 491C  
                      _strncmp 3DAC           end_of_initialization 4730                        floorf@e 0028  
                      floorf@m 0024                        floorf@u 002A                        floorf@x 001A  
                      fputc@fp 0003                     ??_mcu_init 0001                  __Lmediumconst 0000  
                      fputs@fp 000C              __end_of_vfpfcnvrt 21E4                     efgtoa@mode 0081  
                   efgtoa@sign 007A                        postdec1 000FE5                        postdec2 000FDD  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
                    Lcd_Port@a 0001                     ??_vfprintf 0050                        strcpy@d 0009  
                      strlen@a 0003                        strcpy@s 0007                        strlen@s 0001  
                    _PORTAbits 000F80                      _PORTBbits 000F81                      _PORTDbits 000F83  
                    _PORTEbits 000F84                    ?_eepromRead 0001                    ___fladd@grs 0010  
                    _TRISAbits 000F92                      _TRISBbits 000F93                      _TRISCbits 000F94  
                    _TRISDbits 000F95                      _TRISEbits 000F96                 ??_timer_0_init 0001  
                  ___fldiv@grs 0014                    ___fldiv@rem 000D                ?_Lcd_Write_Char 0001  
            Lcd_Write_String@a 0005              Lcd_Write_String@i 0009                    ___flmul@grs 000E  
                ??_eepromWrite 0002       _button_bounce_controller 005E                 __end_of_TIMER0 0066  
                ?_stateMachine 0001             _buttonControlFlags 335E                      _Lcd_Clear 49F8  
                 _convert_data 0100                 __end_of___flge 3CAE                 __end_of___fleq 4300  
                  vfpfcnvrt@ap 0044                    vfpfcnvrt@ct 00AA                    vfpfcnvrt@fp 0040  
                  vfpfcnvrt@ll 0098                 __end_of___wmul 4970               _Lcd_Write_String 4396  
               __end_of_efgtoa 1288            ?_buttonControlFlags 0001                 __end_of_floorf 335E  
                   floorf@F524 00DC                 __end_of_strcpy 45F8                 __end_of_strlen 48E6  
          start_initialization 46F6                    __end_of_abs 4808                    __end_of_pad 40E2  
               _menuInitialize 4970                   _driver_limit 00C6              __size_of_Lcd_Port 005C  
         ??_buttonControlFlags 0001                       ??_TIMER0 0001          __end_of___fpclassifyf 3DAC  
               ??_stateMachine 005C            __size_of_eepromRead 001E                    vfprintf@fmt 004C  
                   ?_Lcd_Clear 0001                       ??___flge 0022                       ??___fleq 0009  
          __end_of_eepromWrite 494A                       ??___wmul 0005  buttonControlFlags@textCursor2 0001  
                     ??_efgtoa 0035                    __pdataBANK0 00F6                       ??_floorf 001E  
         __size_of_system_init 0124                Lcd_Write_Char@a 0004                Lcd_Write_Char@y 0003  
                ??_menuControl 005E                       ??_strcpy 0005                       ??_strlen 0003  
                    ___fladd@a 0005                      ___fladd@b 0001                      ___fldiv@a 0005  
                    ___fldiv@b 0001                      ___flmul@a 0005                      ___flmul@b 0001  
                  __pbssCOMRAM 005E                      ___flsub@a 001E                      ___flsub@b 001A  
       __end_of_menuInitialize 4994                  __pcstackBANK0 0060               ___aodiv@dividend 0001  
                     ?_Lcd_Cmd 0001              __size_of_lcd_init 0096                      _atoi$2936 0010  
                    _atoi$2937 0014                      _atoi$2938 0012              __size_of_mcu_init 0016  
                  _efgtoa$2870 0066                    _efgtoa$2880 006E                    _efgtoa$2874 0068  
                  _efgtoa$2869 0064                    _efgtoa$2878 006A                    _efgtoa$2879 006C  
                    _dtoa$2845 002E  stateMachine@secretMenuCounter 00EF               ??_Lcd_Set_Cursor 0005  
                    __pintcode 0008           __end_of_timer_0_init 49F8                       ?___aodiv 0001  
                     ?___fladd 0001                       ?___aomod 0001                       ?___fldiv 0001  
                     ?___awdiv 0001               ___aodiv@quotient 0013                       ?___flneg 0001  
                     ?___awmod 0001                       ?___flmul 0001                       ?___flsub 001A  
                     ?___fltol 0001              __size_of_vfprintf 0062                      fabsf@F463 01A3  
                  __smallconst 0600                       ?_isdigit 0001                       ?_isspace 0001  
              ?_menuInitialize 0001                       ?_isupper 0001            __end_of_menuControl 453C  
                     ?_sprintf 00AE                       ?_tolower 0007                 __size_of_fputc 00CA  
               __size_of_fputs 0044                       ?_strncmp 0001                 __size_of_putch 0002  
           eepromWrite@address 0002                 ___wmul@product 0005                       _LATAbits 000F89  
                     _LATBbits 000F8A                       _LATEbits 000F8D                    _eepromWrite 491C  
                     Lcd_Cmd@a 0003                       _PIR2bits 000FA1                       i2u750_40 0026  
                     i2u750_41 0022                       i2u751_40 0042                       i2u751_41 003E  
                     i2u752_40 005C                       i2u752_41 0058                       i2u749_40 0018  
                     i2u749_41 0014                    ??_Lcd_Clear 0004                   _pauseIsClick 00F4  
                    _vfpfcnvrt 1BB4                     _ADCON0bits 000FC2                     _ADCON2bits 000FC0  
            ___wmul@multiplier 0001                   ??_eepromRead 0001               ??_Lcd_Write_Char 0002  
         __end_of_stateMachine 1BB4                   _isspace$2967 0007                       _Lcd_Port 45F8  
                   vfpfcnvrt@c 00AD                     vfpfcnvrt@f 00A6                      copy_data0 470A  
     __end_of_Lcd_Write_String 4414               __size_of_Lcd_Cmd 001E                     _EECON1bits 000FA6  
                     __Hrparam 0000                     vfprintf@ap 004E                       __Lrparam 0000  
                   vfprintf@fp 004A             __end_of_eepromRead 49B2        buttonControlFlags@F6398 0173  
             __size_of___aodiv 0188               __size_of___fladd 04C0               __size_of___aomod 0164  
             __size_of___fldiv 039A               __size_of___awdiv 00C4               __size_of___flneg 0038  
             __size_of___awmod 00B0               __size_of___flmul 042A               __size_of___flsub 0046  
             __size_of___fltol 0106                     ?_vfpfcnvrt 0040                    _menuControl 44DC  
              ___aodiv@divisor 0009                ___aodiv@counter 0011                     _ANSELAbits 000F38  
                   _ANSELBbits 000F39                     _ANSELCbits 000F3A                     _ANSELDbits 000F3B  
                   _ANSELEbits 000F3C             ___fpclassifyf@F463 00E0                     sprintf@fmt 00B0  
             __size_of_isdigit 0038               __size_of_isspace 0052                       __ptext10 3DAC  
                     __ptext11 06D8                       __ptext20 4840                       __ptext12 453C  
                     __ptext21 26A4                       __ptext13 4808                       __ptext30 4784  
                     __ptext22 3BAA                       __ptext14 459C                       __ptext31 3F52  
                     __ptext23 4256                       __ptext15 314C                       __ptext40 491C  
                     __ptext32 4A0E                       __ptext24 2ACE                       __ptext16 3CAE  
                     __ptext41 4396                       __ptext33 47C8                       __ptext25 41A6  
                     __ptext17 3AA4                       __ptext42 48E6                       __ptext34 381C  
                     __ptext26 40E2                       __ptext18 473E                       __ptext43 4414  
                     __ptext35 3694                       __ptext27 2E68                       __ptext19 21E4  
                     __ptext44 335E                       __ptext36 3504                       __ptext28 401C  
                     __ptext45 49D0                       __ptext37 4654                       __ptext29 48B0  
                     __ptext46 4300                       __ptext38 4878                       __ptext47 49F8  
                     __ptext39 494A                       __ptext48 49B2                       __ptext49 45F8  
             __size_of_isupper 0038                       _lcd_init 4300               __size_of_sprintf 0050  
             __size_of_tolower 0060                     strcpy@dest 0001               __size_of_strncmp 00D6  
                     _mcu_init 49D0                  __size_of_atoi 0190                  __size_of_main 00D0  
                __size_of_dtoa 02E4          __size_of_timer_0_init 0012                       efgtoa@fp 002E  
                     efgtoa@ne 0076                       efgtoa@pp 0072                       efgtoa@ou 0060  
                     int$flags 005F                       _vfprintf 447A               ___aomod@dividend 0001  
               _vfpfcnvrt$2900 00A4                 _vfpfcnvrt$2894 00A0                 _vfpfcnvrt$2895 00A2  
                  _OSCTUNEbits 000F9B                     _INTCONbits 000FF2                       isdigit@c 0001  
                 _timer_0_init 49E6             Lcd_Write_Char@temp 0002                       intlevel2 0000  
                    sprintf@ap 0054    __size_of_buttonControlFlags 01A6                       isspace@c 0001  
                    strcpy@src 0003                       isupper@c 0001                      strncmp@_l 0001  
                    strncmp@_r 0003                     _OSCCONbits 000FD3                  ??_system_init 0002  
                  efgtoa@nmode 007E                   _procces_data 0130                ___aomod@divisor 0009  
                  ??_vfpfcnvrt 0046                ___aomod@counter 0011             Lcd_Set_Cursor@temp 0008  
             ??_menuInitialize 0001          __size_of_stateMachine 092C                       sprintf@f 0056  
                     tolower@c 0007                       sprintf@s 00AE         __size_of___fpclassifyf 00FE  
                     strncmp@l 0008                       strncmp@n 0005                       strncmp@r 000A  
                  _timer_value 00D2                  ___fladd@signs 000D                   ___aodiv@sign 0012  
                  _textCursor2 0183                   ___fladd@aexp 000E                   ___fladd@bexp 000F  
                 ?_eepromWrite 0001                   ___aomod@sign 0012                   _stateMachine 1288  
