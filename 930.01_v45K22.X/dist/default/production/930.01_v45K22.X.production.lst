

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Aug 16 02:22:42 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=3
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=3
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=3
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    92                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    93                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    94                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    95                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    96                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    97  0000                     
    98                           ; Version 2.20
    99                           ; Generated 05/05/2020 GMT
   100                           ; 
   101                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   102                           ; All rights reserved.
   103                           ; 
   104                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   105                           ; 
   106                           ; Redistribution and use in source and binary forms, with or without modification, are
   107                           ; permitted provided that the following conditions are met:
   108                           ; 
   109                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   110                           ;        conditions and the following disclaimer.
   111                           ; 
   112                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   113                           ;        of conditions and the following disclaimer in the documentation and/or other
   114                           ;        materials provided with the distribution.
   115                           ; 
   116                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   117                           ;        software without specific prior written permission.
   118                           ; 
   119                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   120                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   121                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   122                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   123                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   124                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   125                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   126                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   127                           ; 
   128                           ; 
   129                           ; Code-generator required, PIC18F45K22 Definitions
   130                           ; 
   131                           ; SFR Addresses
   132  0000                     
   133                           	psect	eeprom_data
   134  F00000  1E 0A 04 00 00 00 00 00 	db	30,10,4,0,0,0,0,0	;# 
   135  0000                     
   136                           	psect	idataBANK1
   137  0053DE                     __pidataBANK1:
   138                           	callstack 0
   139                           
   140                           ;initializer for _KD@fs_speed_controller$F2361
   141  0053DE  0000               	dw	0
   142  0053E0  3F80               	dw	16256
   143                           
   144                           ;initializer for _KP@fs_speed_controller$F2360
   145  0053E2  CCCD               	dw	52429
   146  0053E4  3E4C               	dw	15948
   147                           
   148                           ;initializer for _KD@fs_speed_controller$F2208
   149  0053E6  0000               	dw	0
   150  0053E8  3F80               	dw	16256
   151                           
   152                           ;initializer for _KP@fs_speed_controller$F2207
   153  0053EA  CCCD               	dw	52429
   154  0053EC  3E4C               	dw	15948
   155                           
   156                           ;initializer for _KD@fs_speed_controller$F2077
   157  0053EE  0000               	dw	0
   158  0053F0  3F80               	dw	16256
   159                           
   160                           ;initializer for _KP@fs_speed_controller$F2076
   161  0053F2  CCCD               	dw	52429
   162  0053F4  3E4C               	dw	15948
   163                           
   164                           ;initializer for _KD@fs_speed_controller$F1843
   165  0053F6  0000               	dw	0
   166  0053F8  3F80               	dw	16256
   167                           
   168                           ;initializer for _KP@fs_speed_controller$F1842
   169  0053FA  CCCD               	dw	52429
   170  0053FC  3E4C               	dw	15948
   171                           
   172                           ;initializer for _KD@fs_speed_controller$F1343
   173  0053FE  0000               	dw	0
   174  005400  3F80               	dw	16256
   175                           
   176                           ;initializer for _KP@fs_speed_controller$F1342
   177  005402  CCCD               	dw	52429
   178  005404  3E4C               	dw	15948
   179                           
   180                           ;initializer for _KD@fs_speed_controller$F1164
   181  005406  0000               	dw	0
   182  005408  3F80               	dw	16256
   183                           
   184                           ;initializer for _KP@fs_speed_controller$F1163
   185  00540A  CCCD               	dw	52429
   186  00540C  3E4C               	dw	15948
   187                           
   188                           ;initializer for _KD@fs_speed_controller$F950
   189  00540E  0000               	dw	0
   190  005410  3F80               	dw	16256
   191                           
   192                           ;initializer for _KP@fs_speed_controller$F949
   193  005412  CCCD               	dw	52429
   194  005414  3E4C               	dw	15948
   195                           
   196                           ;initializer for _KD
   197  005416  0000               	dw	0
   198  005418  3F80               	dw	16256
   199                           
   200                           ;initializer for _KP
   201  00541A  CCCD               	dw	52429
   202  00541C  3E4C               	dw	15948
   203  0000                     _ANSELCbits	set	3898
   204  0000                     _ANSELBbits	set	3897
   205  0000                     _ANSELDbits	set	3899
   206  0000                     _ANSELEbits	set	3900
   207  0000                     _ANSELAbits	set	3896
   208  0000                     _T0CON	set	4053
   209  0000                     _TMR0L	set	4054
   210  0000                     _TMR0H	set	4055
   211  0000                     _INTCONbits	set	4082
   212  0000                     _CCPR2L	set	3943
   213  0000                     _CCPR1L	set	4030
   214  0000                     _PR2	set	4027
   215  0000                     _TMR2	set	4028
   216  0000                     _T2CONbits	set	4026
   217  0000                     _CCP2CON	set	3942
   218  0000                     _CCP1CON	set	4029
   219  0000                     _LATCbits	set	3979
   220  0000                     _LATDbits	set	3980
   221  0000                     _TRISCbits	set	3988
   222  0000                     _OSCTUNEbits	set	3995
   223  0000                     _OSCCONbits	set	4051
   224  0000                     _TRISBbits	set	3987
   225  0000                     _TRISDbits	set	3989
   226  0000                     _PORTDbits	set	3971
   227  0000                     _PORTBbits	set	3969
   228  0000                     _PIR2bits	set	4001
   229  0000                     _EECON2	set	4007
   230  0000                     _EEDATA	set	4008
   231  0000                     _EECON1bits	set	4006
   232  0000                     _EEADR	set	4009
   233  0000                     _ADCON2bits	set	4032
   234  0000                     _ADCON1	set	4033
   235  0000                     _ADCON0	set	4034
   236  0000                     _TRISEbits	set	3990
   237  0000                     _TRISAbits	set	3986
   238  0000                     _ADRESL	set	4035
   239  0000                     _ADRESH	set	4036
   240  0000                     _ADCON0bits	set	4034
   241                           
   242                           	psect	mediumconst
   243  007EF6                     __pmediumconst:
   244                           	callstack 0
   245  007EF6  00                 	db	0
   246  007EF7                     STR_14:
   247  007EF7  25                 	db	37
   248  007EF8  64                 	db	100	;'d'
   249  007EF9  20                 	db	32
   250  007EFA  20                 	db	32
   251  007EFB  20                 	db	32
   252  007EFC  20                 	db	32
   253  007EFD  20                 	db	32
   254  007EFE  20                 	db	32
   255  007EFF  20                 	db	32
   256  007F00  20                 	db	32
   257  007F01  20                 	db	32
   258  007F02  20                 	db	32
   259  007F03  20                 	db	32
   260  007F04  20                 	db	32
   261  007F05  20                 	db	32
   262  007F06  20                 	db	32
   263  007F07  20                 	db	32
   264  007F08  00                 	db	0
   265  007F09                     STR_9:
   266  007F09  50                 	db	80	;'P'
   267  007F0A  49                 	db	73	;'I'
   268  007F0B  44                 	db	68	;'D'
   269  007F0C  20                 	db	32
   270  007F0D  50                 	db	80	;'P'
   271  007F0E  41                 	db	65	;'A'
   272  007F0F  52                 	db	82	;'R'
   273  007F10  41                 	db	65	;'A'
   274  007F11  4D                 	db	77	;'M'
   275  007F12  20                 	db	32
   276  007F13  20                 	db	32
   277  007F14  20                 	db	32
   278  007F15  20                 	db	32
   279  007F16  20                 	db	32
   280  007F17  20                 	db	32
   281  007F18  20                 	db	32
   282  007F19  00                 	db	0
   283  007F1A                     STR_13:
   284  007F1A  48                 	db	72	;'H'
   285  007F1B  49                 	db	73	;'I'
   286  007F1C  5A                 	db	90	;'Z'
   287  007F1D  20                 	db	32
   288  007F1E  4C                 	db	76	;'L'
   289  007F1F  69                 	db	105	;'i'
   290  007F20  4D                 	db	77	;'M'
   291  007F21  69                 	db	105	;'i'
   292  007F22  54                 	db	84	;'T'
   293  007F23  69                 	db	105	;'i'
   294  007F24  20                 	db	32
   295  007F25  20                 	db	32
   296  007F26  20                 	db	32
   297  007F27  20                 	db	32
   298  007F28  20                 	db	32
   299  007F29  20                 	db	32
   300  007F2A  00                 	db	0
   301  007F2B                     STR_3:
   302  007F2B  4B                 	db	75	;'K'
   303  007F2C  41                 	db	65	;'A'
   304  007F2D  4C                 	db	76	;'L'
   305  007F2E  41                 	db	65	;'A'
   306  007F2F  4E                 	db	78	;'N'
   307  007F30  20                 	db	32
   308  007F31  5A                 	db	90	;'Z'
   309  007F32  41                 	db	65	;'A'
   310  007F33  4D                 	db	77	;'M'
   311  007F34  41                 	db	65	;'A'
   312  007F35  4E                 	db	78	;'N'
   313  007F36  20                 	db	32
   314  007F37  20                 	db	32
   315  007F38  20                 	db	32
   316  007F39  20                 	db	32
   317  007F3A  20                 	db	32
   318  007F3B  00                 	db	0
   319  007F3C                     STR_5:
   320  007F3C  5A                 	db	90	;'Z'
   321  007F3D  41                 	db	65	;'A'
   322  007F3E  4D                 	db	77	;'M'
   323  007F3F  41                 	db	65	;'A'
   324  007F40  4E                 	db	78	;'N'
   325  007F41  20                 	db	32
   326  007F42  44                 	db	68	;'D'
   327  007F43  4F                 	db	79	;'O'
   328  007F44  4C                 	db	76	;'L'
   329  007F45  44                 	db	68	;'D'
   330  007F46  55                 	db	85	;'U'
   331  007F47  20                 	db	32
   332  007F48  20                 	db	32
   333  007F49  20                 	db	32
   334  007F4A  20                 	db	32
   335  007F4B  20                 	db	32
   336  007F4C  00                 	db	0
   337  007F4D                     STR_7:
   338  007F4D  48                 	db	72	;'H'
   339  007F4E  41                 	db	65	;'A'
   340  007F4F  52                 	db	82	;'R'
   341  007F50  45                 	db	69	;'E'
   342  007F51  4B                 	db	75	;'K'
   343  007F52  45                 	db	69	;'E'
   344  007F53  54                 	db	84	;'T'
   345  007F54  20                 	db	32
   346  007F55  44                 	db	68	;'D'
   347  007F56  55                 	db	85	;'U'
   348  007F57  52                 	db	82	;'R'
   349  007F58  44                 	db	68	;'D'
   350  007F59  55                 	db	85	;'U'
   351  007F5A  20                 	db	32
   352  007F5B  20                 	db	32
   353  007F5C  20                 	db	32
   354  007F5D  00                 	db	0
   355  007F5E                     STR_17:
   356  007F5E  48                 	db	72	;'H'
   357  007F5F  41                 	db	65	;'A'
   358  007F60  52                 	db	82	;'R'
   359  007F61  45                 	db	69	;'E'
   360  007F62  4B                 	db	75	;'K'
   361  007F63  54                 	db	84	;'T'
   362  007F64  20                 	db	32
   363  007F65  5A                 	db	90	;'Z'
   364  007F66  41                 	db	65	;'A'
   365  007F67  4D                 	db	77	;'M'
   366  007F68  41                 	db	65	;'A'
   367  007F69  4E                 	db	78	;'N'
   368  007F6A  49                 	db	73	;'I'
   369  007F6B  20                 	db	32
   370  007F6C  64                 	db	100	;'d'
   371  007F6D  6B                 	db	107	;'k'
   372  007F6E  00                 	db	0
   373  007F6F                     STR_15:
   374  007F6F  44                 	db	68	;'D'
   375  007F70  55                 	db	85	;'U'
   376  007F71  52                 	db	82	;'R'
   377  007F72  4D                 	db	77	;'M'
   378  007F73  41                 	db	65	;'A'
   379  007F74  20                 	db	32
   380  007F75  5A                 	db	90	;'Z'
   381  007F76  41                 	db	65	;'A'
   382  007F77  4D                 	db	77	;'M'
   383  007F78  41                 	db	65	;'A'
   384  007F79  4E                 	db	78	;'N'
   385  007F7A  49                 	db	73	;'I'
   386  007F7B  20                 	db	32
   387  007F7C  20                 	db	32
   388  007F7D  6D                 	db	109	;'m'
   389  007F7E  73                 	db	115	;'s'
   390  007F7F  00                 	db	0
   391  007F80                     STR_2:
   392  007F80  20                 	db	32
   393  007F81  69                 	db	105	;'i'
   394  007F82  59                 	db	89	;'Y'
   395  007F83  69                 	db	105	;'i'
   396  007F84  20                 	db	32
   397  007F85  45                 	db	69	;'E'
   398  007F86  67                 	db	103	;'g'
   399  007F87  6C                 	db	108	;'l'
   400  007F88  65                 	db	101	;'e'
   401  007F89  6E                 	db	110	;'n'
   402  007F8A  63                 	db	99	;'c'
   403  007F8B  65                 	db	101	;'e'
   404  007F8C  6C                 	db	108	;'l'
   405  007F8D  65                 	db	101	;'e'
   406  007F8E  72                 	db	114	;'r'
   407  007F8F  20                 	db	32
   408  007F90  00                 	db	0
   409  007F91                     STR_16:
   410  007F91  25                 	db	37
   411  007F92  64                 	db	100	;'d'
   412  007F93  20                 	db	32
   413  007F94  20                 	db	32
   414  007F95  20                 	db	32
   415  007F96  20                 	db	32
   416  007F97  20                 	db	32
   417  007F98  20                 	db	32
   418  007F99  20                 	db	32
   419  007F9A  20                 	db	32
   420  007F9B  20                 	db	32
   421  007F9C  20                 	db	32
   422  007F9D  20                 	db	32
   423  007F9E  20                 	db	32
   424  007F9F  20                 	db	32
   425  007FA0  00                 	db	0
   426  007FA1                     STR_6:
   427  007FA1  20                 	db	32
   428  007FA2  20                 	db	32
   429  007FA3  20                 	db	32
   430  007FA4  20                 	db	32
   431  007FA5  20                 	db	32
   432  007FA6  20                 	db	32
   433  007FA7  25                 	db	37
   434  007FA8  64                 	db	100	;'d'
   435  007FA9  3A                 	db	58	;':'
   436  007FAA  25                 	db	37
   437  007FAB  64                 	db	100	;'d'
   438  007FAC  20                 	db	32
   439  007FAD  20                 	db	32
   440  007FAE  20                 	db	32
   441  007FAF  20                 	db	32
   442  007FB0  00                 	db	0
   443  007FB1                     STR_1:
   444  007FB1  20                 	db	32
   445  007FB2  20                 	db	32
   446  007FB3  20                 	db	32
   447  007FB4  45                 	db	69	;'E'
   448  007FB5  72                 	db	114	;'r'
   449  007FB6  67                 	db	103	;'g'
   450  007FB7  69                 	db	105	;'i'
   451  007FB8  6E                 	db	110	;'n'
   452  007FB9  20                 	db	32
   453  007FBA  4F                 	db	79	;'O'
   454  007FBB  79                 	db	121	;'y'
   455  007FBC  75                 	db	117	;'u'
   456  007FBD  6E                 	db	110	;'n'
   457  007FBE  20                 	db	32
   458  007FBF  20                 	db	32
   459  007FC0  00                 	db	0
   460  007FC1                     STR_4:
   461  007FC1  20                 	db	32
   462  007FC2  20                 	db	32
   463  007FC3  20                 	db	32
   464  007FC4  20                 	db	32
   465  007FC5  20                 	db	32
   466  007FC6  20                 	db	32
   467  007FC7  25                 	db	37
   468  007FC8  64                 	db	100	;'d'
   469  007FC9  3A                 	db	58	;':'
   470  007FCA  25                 	db	37
   471  007FCB  64                 	db	100	;'d'
   472  007FCC  20                 	db	32
   473  007FCD  20                 	db	32
   474  007FCE  20                 	db	32
   475  007FCF  00                 	db	0
   476  007FD0                     STR_10:
   477  007FD0  4B                 	db	75	;'K'
   478  007FD1  70                 	db	112	;'p'
   479  007FD2  3A                 	db	58	;':'
   480  007FD3  25                 	db	37
   481  007FD4  35                 	db	53	;'5'
   482  007FD5  2E                 	db	46
   483  007FD6  31                 	db	49	;'1'
   484  007FD7  66                 	db	102	;'f'
   485  007FD8  20                 	db	32
   486  007FD9  20                 	db	32
   487  007FDA  20                 	db	32
   488  007FDB  20                 	db	32
   489  007FDC  20                 	db	32
   490  007FDD  00                 	db	0
   491  007FDE                     STR_12:
   492  007FDE  4B                 	db	75	;'K'
   493  007FDF  64                 	db	100	;'d'
   494  007FE0  3A                 	db	58	;':'
   495  007FE1  25                 	db	37
   496  007FE2  35                 	db	53	;'5'
   497  007FE3  2E                 	db	46
   498  007FE4  31                 	db	49	;'1'
   499  007FE5  66                 	db	102	;'f'
   500  007FE6  20                 	db	32
   501  007FE7  20                 	db	32
   502  007FE8  20                 	db	32
   503  007FE9  20                 	db	32
   504  007FEA  00                 	db	0
   505  007FEB                     STR_19:
   506  007FEB  49                 	db	73	;'I'
   507  007FEC  4E                 	db	78	;'N'
   508  007FED  46                 	db	70	;'F'
   509  007FEE  00                 	db	0
   510  007FEF                     STR_23:
   511  007FEF  4E                 	db	78	;'N'
   512  007FF0  41                 	db	65	;'A'
   513  007FF1  4E                 	db	78	;'N'
   514  007FF2  00                 	db	0
   515  007FF3                     STR_20:
   516  007FF3  69                 	db	105	;'i'
   517  007FF4  6E                 	db	110	;'n'
   518  007FF5  66                 	db	102	;'f'
   519  007FF6  00                 	db	0
   520  007FF7                     STR_24:
   521  007FF7  6E                 	db	110	;'n'
   522  007FF8  61                 	db	97	;'a'
   523  007FF9  6E                 	db	110	;'n'
   524  007FFA  00                 	db	0
   525  007FFB                     STR_27:
   526  007FFB  6C                 	db	108	;'l'
   527  007FFC  66                 	db	102	;'f'
   528  007FFD  00                 	db	0
   529  007FFE  00                 	db	0	; dummy byte at the end
   530  0000                     
   531                           ; #config settings
   532                           
   533                           	psect	cinit
   534  0051D2                     __pcinit:
   535                           	callstack 0
   536  0051D2                     start_initialization:
   537                           	callstack 0
   538  0051D2                     __initialization:
   539                           	callstack 0
   540                           
   541                           ; Initialize objects allocated to BANK1 (64 bytes)
   542                           ; load TBLPTR registers with __pidataBANK1
   543  0051D2  0EDE               	movlw	low __pidataBANK1
   544  0051D4  6EF6               	movwf	tblptrl,c
   545  0051D6  0E53               	movlw	high __pidataBANK1
   546  0051D8  6EF7               	movwf	tblptrh,c
   547  0051DA  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   548  0051DC  6EF8               	movwf	tblptru,c
   549  0051DE  EE01  F0B3         	lfsr	0,__pdataBANK1
   550  0051E2  EE10 F040          	lfsr	1,64
   551  0051E6                     copy_data0:
   552  0051E6  0009               	tblrd		*+
   553  0051E8  CFF5 FFEE          	movff	tablat,postinc0
   554  0051EC  50E5               	movf	postdec1,w,c
   555  0051EE  50E1               	movf	fsr1l,w,c
   556  0051F0  E1FA               	bnz	copy_data0
   557                           
   558                           ; Clear objects allocated to BANK2 (176 bytes)
   559  0051F2  EE02  F000         	lfsr	0,__pbssBANK2
   560  0051F6  0EB0               	movlw	176
   561  0051F8                     clear_0:
   562  0051F8  6AEE               	clrf	postinc0,c
   563  0051FA  06E8               	decf	wreg,f,c
   564  0051FC  E1FD               	bnz	clear_0
   565                           
   566                           ; Clear objects allocated to BANK1 (179 bytes)
   567  0051FE  EE01  F000         	lfsr	0,__pbssBANK1
   568  005202  0EB3               	movlw	179
   569  005204                     clear_1:
   570  005204  6AEE               	clrf	postinc0,c
   571  005206  06E8               	decf	wreg,f,c
   572  005208  E1FD               	bnz	clear_1
   573                           
   574                           ; Clear objects allocated to BANK0 (13 bytes)
   575  00520A  EE00  F0F3         	lfsr	0,__pbssBANK0
   576  00520E  0E0D               	movlw	13
   577  005210                     clear_2:
   578  005210  6AEE               	clrf	postinc0,c
   579  005212  06E8               	decf	wreg,f,c
   580  005214  E1FD               	bnz	clear_2
   581  005216                     end_of_initialization:
   582                           	callstack 0
   583  005216                     __end_of__initialization:
   584                           	callstack 0
   585  005216  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   586  005218  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   587  00521A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   588  00521C  6EF8               	movwf	tblptru,c
   589  00521E  0100               	movlb	0
   590  005220  EFD3  F02B         	goto	_main	;jump to C main() function
   591                           
   592                           	psect	bssBANK0
   593  0000F3                     __pbssBANK0:
   594                           	callstack 0
   595  0000F3                     _menu_value:
   596                           	callstack 0
   597  0000F3                     	ds	3
   598  0000F6                     _prec:
   599                           	callstack 0
   600  0000F6                     	ds	2
   601  0000F8                     _flags:
   602                           	callstack 0
   603  0000F8                     	ds	2
   604  0000FA                     _timer_counter_flag:
   605                           	callstack 0
   606  0000FA                     	ds	1
   607  0000FB                     _menu_selected:
   608                           	callstack 0
   609  0000FB                     	ds	1
   610  0000FC                     _secretMenuCounter:
   611                           	callstack 0
   612  0000FC                     	ds	1
   613  0000FD                     _stopIsClick:
   614                           	callstack 0
   615  0000FD                     	ds	1
   616  0000FE                     _startIsClick:
   617                           	callstack 0
   618  0000FE                     	ds	1
   619  0000FF                     _pauseIsClick:
   620                           	callstack 0
   621  0000FF                     	ds	1
   622                           
   623                           	psect	bssBANK1
   624  000100                     __pbssBANK1:
   625                           	callstack 0
   626  000100                     _convert_data:
   627                           	callstack 0
   628  000100                     	ds	48
   629  000130                     _procces_data:
   630                           	callstack 0
   631  000130                     	ds	32
   632  000150                     _controller:
   633                           	callstack 0
   634  000150                     	ds	19
   635  000163                     	ds	16
   636  000173                     _adc_raw_data:
   637                           	callstack 0
   638  000173                     	ds	16
   639  000183                     _driver_limit:
   640                           	callstack 0
   641  000183                     	ds	12
   642  00018F                     _timer_value:
   643                           	callstack 0
   644  00018F                     	ds	8
   645  000197                     _menu_flags:
   646                           	callstack 0
   647  000197                     	ds	6
   648  00019D                     _button_bounce_controller:
   649                           	callstack 0
   650  00019D                     	ds	6
   651  0001A3                     floorf@F524:
   652                           	callstack 0
   653  0001A3                     	ds	4
   654  0001A7                     ___fpclassifyf@F463:
   655                           	callstack 0
   656  0001A7                     	ds	4
   657  0001AB                     fabsf@F463:
   658                           	callstack 0
   659  0001AB                     	ds	4
   660  0001AF                     _nout:
   661                           	callstack 0
   662  0001AF                     	ds	2
   663  0001B1                     _width:
   664                           	callstack 0
   665  0001B1                     	ds	2
   666                           
   667                           	psect	dataBANK1
   668  0001B3                     __pdataBANK1:
   669                           	callstack 0
   670  0001B3                     	ds	4
   671  0001B7                     	ds	4
   672  0001BB                     	ds	4
   673  0001BF                     	ds	4
   674  0001C3                     	ds	4
   675  0001C7                     	ds	4
   676  0001CB                     _KD@fs_speed_controller$F1843:
   677                           	callstack 0
   678  0001CB                     	ds	4
   679  0001CF                     _KP@fs_speed_controller$F1842:
   680                           	callstack 0
   681  0001CF                     	ds	4
   682  0001D3                     	ds	4
   683  0001D7                     	ds	4
   684  0001DB                     	ds	4
   685  0001DF                     	ds	4
   686  0001E3                     	ds	4
   687  0001E7                     	ds	4
   688  0001EB                     	ds	4
   689  0001EF                     	ds	4
   690                           
   691                           	psect	bssBANK2
   692  000200                     __pbssBANK2:
   693                           	callstack 0
   694  000200                     	ds	16
   695  000210                     	ds	16
   696  000220                     	ds	16
   697  000230                     	ds	16
   698  000240                     	ds	16
   699  000250                     	ds	16
   700  000260                     _dbuf:
   701                           	callstack 0
   702  000260                     	ds	80
   703                           
   704                           	psect	cstackBANK0
   705  000060                     __pcstackBANK0:
   706                           	callstack 0
   707  000060                     floorf@m:
   708                           	callstack 0
   709                           
   710                           ; 4 bytes @ 0x0
   711  000060                     	ds	4
   712  000064                     floorf@e:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0x4
   716  000064                     	ds	2
   717  000066                     floorf@u:
   718                           	callstack 0
   719                           
   720                           ; 4 bytes @ 0x6
   721  000066                     	ds	4
   722  00006A                     ??_efgtoa:
   723                           
   724                           ; 1 bytes @ 0xA
   725  00006A                     	ds	5
   726  00006F                     efgtoa@ou:
   727                           	callstack 0
   728                           
   729                           ; 4 bytes @ 0xF
   730  00006F                     	ds	4
   731  000073                     _efgtoa$2983:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x13
   735  000073                     	ds	2
   736  000075                     _efgtoa$2984:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x15
   740  000075                     	ds	2
   741  000077                     _efgtoa$2988:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x17
   745  000077                     	ds	2
   746  000079                     _efgtoa$2992:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0x19
   750  000079                     	ds	2
   751  00007B                     _efgtoa$2993:
   752                           	callstack 0
   753                           
   754                           ; 2 bytes @ 0x1B
   755  00007B                     	ds	2
   756  00007D                     _efgtoa$2994:
   757                           	callstack 0
   758                           
   759                           ; 2 bytes @ 0x1D
   760  00007D                     	ds	2
   761  00007F                     efgtoa@t:
   762                           	callstack 0
   763                           
   764                           ; 2 bytes @ 0x1F
   765  00007F                     	ds	2
   766  000081                     efgtoa@pp:
   767                           	callstack 0
   768                           
   769                           ; 2 bytes @ 0x21
   770  000081                     	ds	2
   771  000083                     efgtoa@m:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0x23
   775  000083                     	ds	2
   776  000085                     efgtoa@ne:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x25
   780  000085                     	ds	2
   781  000087                     efgtoa@d:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x27
   785  000087                     	ds	2
   786  000089                     efgtoa@sign:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x29
   790  000089                     	ds	2
   791  00008B                     efgtoa@p:
   792                           	callstack 0
   793                           
   794                           ; 2 bytes @ 0x2B
   795  00008B                     	ds	2
   796  00008D                     efgtoa@nmode:
   797                           	callstack 0
   798                           
   799                           ; 1 bytes @ 0x2D
   800  00008D                     	ds	1
   801  00008E                     efgtoa@w:
   802                           	callstack 0
   803                           
   804                           ; 2 bytes @ 0x2E
   805  00008E                     	ds	2
   806  000090                     efgtoa@mode:
   807                           	callstack 0
   808                           
   809                           ; 1 bytes @ 0x30
   810  000090                     	ds	1
   811  000091                     efgtoa@h:
   812                           	callstack 0
   813                           
   814                           ; 4 bytes @ 0x31
   815  000091                     	ds	4
   816  000095                     efgtoa@l:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0x35
   820  000095                     	ds	4
   821  000099                     efgtoa@i:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0x39
   825  000099                     	ds	2
   826  00009B                     efgtoa@g:
   827                           	callstack 0
   828                           
   829                           ; 4 bytes @ 0x3B
   830  00009B                     	ds	4
   831  00009F                     efgtoa@e:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0x3F
   835  00009F                     	ds	2
   836  0000A1                     efgtoa@n:
   837                           	callstack 0
   838                           
   839                           ; 2 bytes @ 0x41
   840  0000A1                     	ds	2
   841  0000A3                     efgtoa@u:
   842                           	callstack 0
   843                           
   844                           ; 4 bytes @ 0x43
   845  0000A3                     	ds	4
   846  0000A7                     ?_vfpfcnvrt:
   847                           	callstack 0
   848  0000A7                     vfpfcnvrt@fp:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x47
   852  0000A7                     	ds	2
   853  0000A9                     vfpfcnvrt@fmt:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0x49
   857  0000A9                     	ds	2
   858  0000AB                     vfpfcnvrt@ap:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x4B
   862  0000AB                     	ds	2
   863  0000AD                     ??_vfpfcnvrt:
   864                           
   865                           ; 1 bytes @ 0x4D
   866  0000AD                     	ds	4
   867  0000B1                     vfpfcnvrt@ll:
   868                           	callstack 0
   869                           
   870                           ; 8 bytes @ 0x51
   871  0000B1                     	ds	8
   872  0000B9                     _vfpfcnvrt$3008:
   873                           	callstack 0
   874                           
   875                           ; 2 bytes @ 0x59
   876  0000B9                     	ds	2
   877  0000BB                     _vfpfcnvrt$3009:
   878                           	callstack 0
   879                           
   880                           ; 2 bytes @ 0x5B
   881  0000BB                     	ds	2
   882  0000BD                     _vfpfcnvrt$3014:
   883                           	callstack 0
   884                           
   885                           ; 2 bytes @ 0x5D
   886  0000BD                     	ds	2
   887  0000BF                     vfpfcnvrt@f:
   888                           	callstack 0
   889                           
   890                           ; 4 bytes @ 0x5F
   891  0000BF                     	ds	4
   892  0000C3                     vfpfcnvrt@ct:
   893                           	callstack 0
   894                           
   895                           ; 3 bytes @ 0x63
   896  0000C3                     	ds	3
   897  0000C6                     vfpfcnvrt@c:
   898                           	callstack 0
   899                           
   900                           ; 1 bytes @ 0x66
   901  0000C6                     	ds	1
   902  0000C7                     ?_vfprintf:
   903                           	callstack 0
   904  0000C7                     vfprintf@fp:
   905                           	callstack 0
   906                           
   907                           ; 2 bytes @ 0x67
   908  0000C7                     	ds	2
   909  0000C9                     vfprintf@fmt:
   910                           	callstack 0
   911                           
   912                           ; 2 bytes @ 0x69
   913  0000C9                     	ds	2
   914  0000CB                     vfprintf@ap:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x6B
   918  0000CB                     	ds	2
   919  0000CD                     vfprintf@cfmt:
   920                           	callstack 0
   921                           
   922                           ; 2 bytes @ 0x6D
   923  0000CD                     	ds	2
   924  0000CF                     ?_sprintf:
   925                           	callstack 0
   926  0000CF                     sprintf@s:
   927                           	callstack 0
   928                           
   929                           ; 2 bytes @ 0x6F
   930  0000CF                     	ds	2
   931  0000D1                     sprintf@fmt:
   932                           	callstack 0
   933                           
   934                           ; 2 bytes @ 0x71
   935  0000D1                     	ds	8
   936  0000D9                     sprintf@ap:
   937                           	callstack 0
   938                           
   939                           ; 2 bytes @ 0x79
   940  0000D9                     	ds	2
   941  0000DB                     sprintf@f:
   942                           	callstack 0
   943                           
   944                           ; 6 bytes @ 0x7B
   945  0000DB                     	ds	6
   946  0000E1                     mainMenu@textCursor2:
   947                           	callstack 0
   948  0000E1                     stopMenu@textCursor2:
   949                           	callstack 0
   950  0000E1                     pauseMenu@textCursor2:
   951                           	callstack 0
   952  0000E1                     secretMenu@textCursor2:
   953                           	callstack 0
   954  0000E1                     speedLimitSettingMenu@textCursor2:
   955                           	callstack 0
   956  0000E1                     stopTimeSettingMenu@textCursor2:
   957                           	callstack 0
   958  0000E1                     driverTimeSettingMenu@textCursor2:
   959                           	callstack 0
   960                           
   961                           ; 16 bytes @ 0x81
   962  0000E1                     	ds	16
   963  0000F1                     ??_stateMachine:
   964                           
   965                           ; 1 bytes @ 0x91
   966  0000F1                     	ds	2
   967                           
   968                           	psect	cstackCOMRAM
   969  000001                     __pcstackCOMRAM:
   970                           	callstack 0
   971  000001                     ?_strlen:
   972                           	callstack 0
   973  000001                     ?___fpclassifyf:
   974                           	callstack 0
   975  000001                     ?_isupper:
   976                           	callstack 0
   977  000001                     ?_isdigit:
   978                           	callstack 0
   979  000001                     ?_strncmp:
   980                           	callstack 0
   981  000001                     ?_isspace:
   982                           	callstack 0
   983  000001                     ?_readAdcValue:
   984                           	callstack 0
   985  000001                     ?___wmul:
   986                           	callstack 0
   987  000001                     ?___awdiv:
   988                           	callstack 0
   989  000001                     ?___awmod:
   990                           	callstack 0
   991  000001                     ?___lmul:
   992                           	callstack 0
   993  000001                     ?___lldiv:
   994                           	callstack 0
   995  000001                     ?___flneg:
   996                           	callstack 0
   997  000001                     ?___aodiv:
   998                           	callstack 0
   999  000001                     ?___aomod:
  1000                           	callstack 0
  1001  000001                     eepromRead@address:
  1002                           	callstack 0
  1003  000001                     eepromWrite@data:
  1004                           	callstack 0
  1005  000001                     Lcd_Port@a:
  1006                           	callstack 0
  1007  000001                     ___wmul@multiplier:
  1008                           	callstack 0
  1009  000001                     ___awdiv@dividend:
  1010                           	callstack 0
  1011  000001                     ___awmod@dividend:
  1012                           	callstack 0
  1013  000001                     isdigit@c:
  1014                           	callstack 0
  1015  000001                     isspace@c:
  1016                           	callstack 0
  1017  000001                     isupper@c:
  1018                           	callstack 0
  1019  000001                     fputc@c:
  1020                           	callstack 0
  1021  000001                     strcpy@dest:
  1022                           	callstack 0
  1023  000001                     strlen@s:
  1024                           	callstack 0
  1025  000001                     strncmp@_l:
  1026                           	callstack 0
  1027  000001                     ___lmul@multiplier:
  1028                           	callstack 0
  1029  000001                     ___lldiv@dividend:
  1030                           	callstack 0
  1031  000001                     ___fleq@ff1:
  1032                           	callstack 0
  1033  000001                     ___flneg@f1:
  1034                           	callstack 0
  1035  000001                     ___fpclassifyf@x:
  1036                           	callstack 0
  1037  000001                     ___aodiv@dividend:
  1038                           	callstack 0
  1039  000001                     ___aomod@dividend:
  1040                           	callstack 0
  1041                           
  1042                           ; 8 bytes @ 0x0
  1043  000001                     	ds	1
  1044  000002                     ??_system_init:
  1045  000002                     ??_Lcd_Cmd:
  1046  000002                     eepromWrite@address:
  1047                           	callstack 0
  1048  000002                     Lcd_Write_Char@temp:
  1049                           	callstack 0
  1050                           
  1051                           ; 1 bytes @ 0x1
  1052  000002                     	ds	1
  1053  000003                     ??_isupper:
  1054  000003                     ??_isdigit:
  1055  000003                     ??_isspace:
  1056  000003                     ??_readAdcValue:
  1057  000003                     Lcd_Cmd@a:
  1058                           	callstack 0
  1059  000003                     Lcd_Write_Char@y:
  1060                           	callstack 0
  1061  000003                     ___wmul@multiplicand:
  1062                           	callstack 0
  1063  000003                     ___awdiv@divisor:
  1064                           	callstack 0
  1065  000003                     ___awmod@divisor:
  1066                           	callstack 0
  1067  000003                     fputc@fp:
  1068                           	callstack 0
  1069  000003                     strcpy@src:
  1070                           	callstack 0
  1071  000003                     strlen@a:
  1072                           	callstack 0
  1073  000003                     strncmp@_r:
  1074                           	callstack 0
  1075                           
  1076                           ; 2 bytes @ 0x2
  1077  000003                     	ds	1
  1078  000004                     ??_lcd_init:
  1079  000004                     Lcd_Set_Cursor@b:
  1080                           	callstack 0
  1081  000004                     Lcd_Write_Char@a:
  1082                           	callstack 0
  1083                           
  1084                           ; 1 bytes @ 0x3
  1085  000004                     	ds	1
  1086  000005                     ??_fputc:
  1087  000005                     ??___fpclassifyf:
  1088  000005                     ??_strcpy:
  1089  000005                     readAdcValue@adcChannel:
  1090                           	callstack 0
  1091  000005                     Lcd_Set_Cursor@a:
  1092                           	callstack 0
  1093  000005                     ___awdiv@counter:
  1094                           	callstack 0
  1095  000005                     ___awmod@counter:
  1096                           	callstack 0
  1097  000005                     Lcd_Write_String@a:
  1098                           	callstack 0
  1099  000005                     ___wmul@product:
  1100                           	callstack 0
  1101  000005                     strncmp@n:
  1102                           	callstack 0
  1103  000005                     ___lmul@multiplicand:
  1104                           	callstack 0
  1105  000005                     ___lldiv@divisor:
  1106                           	callstack 0
  1107  000005                     ___fleq@ff2:
  1108                           	callstack 0
  1109                           
  1110                           ; 4 bytes @ 0x4
  1111  000005                     	ds	1
  1112  000006                     Lcd_Set_Cursor@z:
  1113                           	callstack 0
  1114  000006                     ___awdiv@sign:
  1115                           	callstack 0
  1116  000006                     ___awmod@sign:
  1117                           	callstack 0
  1118  000006                     readAdcValue@adcValue:
  1119                           	callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x5
  1122  000006                     	ds	1
  1123  000007                     ??_strncmp:
  1124  000007                     ??_Lcd_Write_String:
  1125  000007                     ?_tolower:
  1126                           	callstack 0
  1127  000007                     Lcd_Set_Cursor@y:
  1128                           	callstack 0
  1129  000007                     _isspace$3081:
  1130                           	callstack 0
  1131  000007                     ___awdiv@quotient:
  1132                           	callstack 0
  1133  000007                     strcpy@s:
  1134                           	callstack 0
  1135  000007                     tolower@c:
  1136                           	callstack 0
  1137                           
  1138                           ; 2 bytes @ 0x6
  1139  000007                     	ds	1
  1140  000008                     ?_atoi:
  1141                           	callstack 0
  1142  000008                     Lcd_Set_Cursor@temp:
  1143                           	callstack 0
  1144  000008                     atoi@s:
  1145                           	callstack 0
  1146  000008                     strncmp@l:
  1147                           	callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x7
  1150  000008                     	ds	1
  1151  000009                     ??_tolower:
  1152  000009                     ??___fleq:
  1153  000009                     Lcd_Write_String@i:
  1154                           	callstack 0
  1155  000009                     ___fpclassifyf@e:
  1156                           	callstack 0
  1157  000009                     strcpy@d:
  1158                           	callstack 0
  1159  000009                     ___lmul@product:
  1160                           	callstack 0
  1161  000009                     ___lldiv@quotient:
  1162                           	callstack 0
  1163  000009                     ___aodiv@divisor:
  1164                           	callstack 0
  1165  000009                     ___aomod@divisor:
  1166                           	callstack 0
  1167                           
  1168                           ; 8 bytes @ 0x8
  1169  000009                     	ds	1
  1170  00000A                     ??_atoi:
  1171  00000A                     fputs@s:
  1172                           	callstack 0
  1173  00000A                     strncmp@r:
  1174                           	callstack 0
  1175                           
  1176                           ; 2 bytes @ 0x9
  1177  00000A                     	ds	1
  1178  00000B                     ??_openLCD_Script:
  1179  00000B                     ___fpclassifyf@u:
  1180                           	callstack 0
  1181                           
  1182                           ; 4 bytes @ 0xA
  1183  00000B                     	ds	1
  1184  00000C                     fputs@fp:
  1185                           	callstack 0
  1186                           
  1187                           ; 2 bytes @ 0xB
  1188  00000C                     	ds	1
  1189  00000D                     ___lldiv@counter:
  1190                           	callstack 0
  1191  00000D                     _tolower$3145:
  1192                           	callstack 0
  1193                           
  1194                           ; 2 bytes @ 0xC
  1195  00000D                     	ds	1
  1196  00000E                     ?___xxtofl:
  1197                           	callstack 0
  1198  00000E                     fputs@c:
  1199                           	callstack 0
  1200  00000E                     atoi@neg:
  1201                           	callstack 0
  1202  00000E                     ___xxtofl@val:
  1203                           	callstack 0
  1204                           
  1205                           ; 4 bytes @ 0xD
  1206  00000E                     	ds	1
  1207  00000F                     fputs@i:
  1208                           	callstack 0
  1209                           
  1210                           ; 2 bytes @ 0xE
  1211  00000F                     	ds	1
  1212  000010                     _atoi$3050:
  1213                           	callstack 0
  1214                           
  1215                           ; 2 bytes @ 0xF
  1216  000010                     	ds	1
  1217  000011                     ?_pad:
  1218                           	callstack 0
  1219  000011                     ___aodiv@counter:
  1220                           	callstack 0
  1221  000011                     ___aomod@counter:
  1222                           	callstack 0
  1223  000011                     pad@fp:
  1224                           	callstack 0
  1225                           
  1226                           ; 2 bytes @ 0x10
  1227  000011                     	ds	1
  1228  000012                     ??___xxtofl:
  1229  000012                     ___aodiv@sign:
  1230                           	callstack 0
  1231  000012                     ___aomod@sign:
  1232                           	callstack 0
  1233  000012                     _atoi$3052:
  1234                           	callstack 0
  1235                           
  1236                           ; 2 bytes @ 0x11
  1237  000012                     	ds	1
  1238  000013                     ?_abs:
  1239                           	callstack 0
  1240  000013                     pad@buf:
  1241                           	callstack 0
  1242  000013                     abs@a:
  1243                           	callstack 0
  1244  000013                     ___aodiv@quotient:
  1245                           	callstack 0
  1246                           
  1247                           ; 8 bytes @ 0x12
  1248  000013                     	ds	1
  1249  000014                     _atoi$3051:
  1250                           	callstack 0
  1251                           
  1252                           ; 1 bytes @ 0x13
  1253  000014                     	ds	1
  1254  000015                     ??_abs:
  1255  000015                     pad@p:
  1256                           	callstack 0
  1257  000015                     atoi@n:
  1258                           	callstack 0
  1259                           
  1260                           ; 2 bytes @ 0x14
  1261  000015                     	ds	1
  1262  000016                     ___xxtofl@sign:
  1263                           	callstack 0
  1264                           
  1265                           ; 1 bytes @ 0x15
  1266  000016                     	ds	1
  1267  000017                     ??_pad:
  1268  000017                     ___xxtofl@exp:
  1269                           	callstack 0
  1270                           
  1271                           ; 1 bytes @ 0x16
  1272  000017                     	ds	1
  1273  000018                     pad@i:
  1274                           	callstack 0
  1275  000018                     ___xxtofl@arg:
  1276                           	callstack 0
  1277                           
  1278                           ; 4 bytes @ 0x17
  1279  000018                     	ds	2
  1280  00001A                     pad@w:
  1281                           	callstack 0
  1282                           
  1283                           ; 2 bytes @ 0x19
  1284  00001A                     	ds	2
  1285  00001C                     ??_calculatedAverageValue:
  1286  00001C                     ?_dtoa:
  1287                           	callstack 0
  1288  00001C                     ?_fabsf:
  1289                           	callstack 0
  1290  00001C                     ?___flmul:
  1291                           	callstack 0
  1292  00001C                     dtoa@fp:
  1293                           	callstack 0
  1294  00001C                     ___flmul@b:
  1295                           	callstack 0
  1296  00001C                     fabsf@x:
  1297                           	callstack 0
  1298                           
  1299                           ; 4 bytes @ 0x1B
  1300  00001C                     	ds	2
  1301  00001E                     dtoa@d:
  1302                           	callstack 0
  1303                           
  1304                           ; 8 bytes @ 0x1D
  1305  00001E                     	ds	2
  1306  000020                     ___flmul@a:
  1307                           	callstack 0
  1308  000020                     fabsf@u:
  1309                           	callstack 0
  1310                           
  1311                           ; 4 bytes @ 0x1F
  1312  000020                     	ds	4
  1313  000024                     ??___flmul:
  1314                           
  1315                           ; 1 bytes @ 0x23
  1316  000024                     	ds	2
  1317  000026                     ??_dtoa:
  1318                           
  1319                           ; 1 bytes @ 0x25
  1320  000026                     	ds	2
  1321  000028                     ___flmul@sign:
  1322                           	callstack 0
  1323                           
  1324                           ; 1 bytes @ 0x27
  1325  000028                     	ds	1
  1326  000029                     ___flmul@grs:
  1327                           	callstack 0
  1328                           
  1329                           ; 4 bytes @ 0x28
  1330  000029                     	ds	4
  1331  00002D                     ___flmul@aexp:
  1332                           	callstack 0
  1333                           
  1334                           ; 1 bytes @ 0x2C
  1335  00002D                     	ds	1
  1336  00002E                     ___flmul@bexp:
  1337                           	callstack 0
  1338  00002E                     _dtoa$2959:
  1339                           	callstack 0
  1340                           
  1341                           ; 2 bytes @ 0x2D
  1342  00002E                     	ds	1
  1343  00002F                     ___flmul@prod:
  1344                           	callstack 0
  1345                           
  1346                           ; 4 bytes @ 0x2E
  1347  00002F                     	ds	1
  1348  000030                     dtoa@p:
  1349                           	callstack 0
  1350                           
  1351                           ; 2 bytes @ 0x2F
  1352  000030                     	ds	2
  1353  000032                     dtoa@w:
  1354                           	callstack 0
  1355                           
  1356                           ; 2 bytes @ 0x31
  1357  000032                     	ds	1
  1358  000033                     ___flmul@temp:
  1359                           	callstack 0
  1360                           
  1361                           ; 2 bytes @ 0x32
  1362  000033                     	ds	1
  1363  000034                     dtoa@s:
  1364                           	callstack 0
  1365                           
  1366                           ; 2 bytes @ 0x33
  1367  000034                     	ds	1
  1368  000035                     ?___fladd:
  1369                           	callstack 0
  1370  000035                     ?___fldiv:
  1371                           	callstack 0
  1372  000035                     ___flge@ff1:
  1373                           	callstack 0
  1374  000035                     ___fladd@b:
  1375                           	callstack 0
  1376  000035                     ___fldiv@b:
  1377                           	callstack 0
  1378                           
  1379                           ; 4 bytes @ 0x34
  1380  000035                     	ds	1
  1381  000036                     dtoa@n:
  1382                           	callstack 0
  1383                           
  1384                           ; 8 bytes @ 0x35
  1385  000036                     	ds	3
  1386  000039                     ___flge@ff2:
  1387                           	callstack 0
  1388  000039                     ___fladd@a:
  1389                           	callstack 0
  1390  000039                     ___fldiv@a:
  1391                           	callstack 0
  1392                           
  1393                           ; 4 bytes @ 0x38
  1394  000039                     	ds	4
  1395  00003D                     ??___fladd:
  1396  00003D                     ??___fldiv:
  1397  00003D                     ??___flge:
  1398                           
  1399                           ; 1 bytes @ 0x3C
  1400  00003D                     	ds	1
  1401  00003E                     dtoa@i:
  1402                           	callstack 0
  1403                           
  1404                           ; 2 bytes @ 0x3D
  1405  00003E                     	ds	3
  1406  000041                     ___fladd@signs:
  1407                           	callstack 0
  1408  000041                     ___fldiv@rem:
  1409                           	callstack 0
  1410                           
  1411                           ; 4 bytes @ 0x40
  1412  000041                     	ds	1
  1413  000042                     ___fladd@aexp:
  1414                           	callstack 0
  1415                           
  1416                           ; 1 bytes @ 0x41
  1417  000042                     	ds	1
  1418  000043                     ___fladd@bexp:
  1419                           	callstack 0
  1420                           
  1421                           ; 1 bytes @ 0x42
  1422  000043                     	ds	1
  1423  000044                     ___fladd@grs:
  1424                           	callstack 0
  1425                           
  1426                           ; 1 bytes @ 0x43
  1427  000044                     	ds	1
  1428  000045                     ?___flsub:
  1429                           	callstack 0
  1430  000045                     ___fldiv@sign:
  1431                           	callstack 0
  1432  000045                     ___flsub@b:
  1433                           	callstack 0
  1434                           
  1435                           ; 4 bytes @ 0x44
  1436  000045                     	ds	1
  1437  000046                     ___fldiv@new_exp:
  1438                           	callstack 0
  1439                           
  1440                           ; 2 bytes @ 0x45
  1441  000046                     	ds	2
  1442  000048                     ___fldiv@grs:
  1443                           	callstack 0
  1444                           
  1445                           ; 4 bytes @ 0x47
  1446  000048                     	ds	1
  1447  000049                     ___flsub@a:
  1448                           	callstack 0
  1449                           
  1450                           ; 4 bytes @ 0x48
  1451  000049                     	ds	3
  1452  00004C                     ___fldiv@bexp:
  1453                           	callstack 0
  1454                           
  1455                           ; 1 bytes @ 0x4B
  1456  00004C                     	ds	1
  1457  00004D                     ___fldiv@aexp:
  1458                           	callstack 0
  1459                           
  1460                           ; 1 bytes @ 0x4C
  1461  00004D                     	ds	1
  1462  00004E                     ?_floorf:
  1463                           	callstack 0
  1464  00004E                     ?___fltol:
  1465                           	callstack 0
  1466  00004E                     ___fltol@f1:
  1467                           	callstack 0
  1468  00004E                     floorf@x:
  1469                           	callstack 0
  1470                           
  1471                           ; 4 bytes @ 0x4D
  1472  00004E                     	ds	4
  1473  000052                     ??_floorf:
  1474  000052                     ??___fltol:
  1475                           
  1476                           ; 1 bytes @ 0x51
  1477  000052                     	ds	4
  1478  000056                     ___fltol@sign1:
  1479                           	callstack 0
  1480                           
  1481                           ; 1 bytes @ 0x55
  1482  000056                     	ds	1
  1483  000057                     ___fltol@exp1:
  1484                           	callstack 0
  1485                           
  1486                           ; 1 bytes @ 0x56
  1487  000057                     	ds	1
  1488  000058                     ??_scanAdcConversion:
  1489  000058                     ?_efgtoa:
  1490                           	callstack 0
  1491  000058                     PWM1_setDC@dutycycle:
  1492                           	callstack 0
  1493  000058                     PWM2_setDC@dutycycle:
  1494                           	callstack 0
  1495  000058                     efgtoa@fp:
  1496                           	callstack 0
  1497  000058                     speedControl@position:
  1498                           	callstack 0
  1499                           
  1500                           ; 4 bytes @ 0x57
  1501  000058                     	ds	2
  1502  00005A                     ??_PWM1_setDC:
  1503  00005A                     ??_PWM2_setDC:
  1504  00005A                     efgtoa@f:
  1505                           	callstack 0
  1506                           
  1507                           ; 4 bytes @ 0x59
  1508  00005A                     	ds	2
  1509  00005C                     ??_speedControl:
  1510  00005C                     PWM1_setDC@duty:
  1511                           	callstack 0
  1512  00005C                     PWM2_setDC@duty:
  1513                           	callstack 0
  1514                           
  1515                           ; 2 bytes @ 0x5B
  1516  00005C                     	ds	2
  1517  00005E                     efgtoa@c:
  1518                           	callstack 0
  1519                           
  1520                           ; 1 bytes @ 0x5D
  1521  00005E                     	ds	1
  1522  00005F                     
  1523                           ; 1 bytes @ 0x5E
  1524 ;;
  1525 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1526 ;;
  1527 ;; *************** function _main *****************
  1528 ;; Defined at:
  1529 ;;		line 102 in file "fs_main.c"
  1530 ;; Parameters:    Size  Location     Type
  1531 ;;		None
  1532 ;; Auto vars:     Size  Location     Type
  1533 ;;		None
  1534 ;; Return value:  Size  Location     Type
  1535 ;;                  1    wreg      void 
  1536 ;; Registers used:
  1537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1543 ;;      Params:         0       0       0       0       0       0       0
  1544 ;;      Locals:         0       0       0       0       0       0       0
  1545 ;;      Temps:          0       0       0       0       0       0       0
  1546 ;;      Totals:         0       0       0       0       0       0       0
  1547 ;;Total ram usage:        0 bytes
  1548 ;; Hardware stack levels required when called:   12
  1549 ;; This function calls:
  1550 ;;		_loopTaskInit
  1551 ;;		_loopTaskMenuControl
  1552 ;;		_loopTaskTimeMachine
  1553 ;; This function is called by:
  1554 ;;		Startup code after reset
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           	psect	text0
  1559  0057A6                     __ptext0:
  1560                           	callstack 0
  1561  0057A6                     _main:
  1562                           	callstack 19
  1563  0057A6                     
  1564                           ;fs_main.c: 104:     loopTaskInit();
  1565  0057A6  EC2F  F02A         	call	_loopTaskInit	;wreg free
  1566  0057AA                     l6504:
  1567                           
  1568                           ;fs_main.c: 107:     {;fs_main.c: 108:         loopTaskTimeMachine();
  1569  0057AA  EC84  F026         	call	_loopTaskTimeMachine	;wreg free
  1570  0057AE                     
  1571                           ;fs_main.c: 109:         loopTaskMenuControl();
  1572  0057AE  EC85  F027         	call	_loopTaskMenuControl	;wreg free
  1573  0057B2  EFD5  F02B         	goto	l6504
  1574  0057B6  EF4D  F000         	goto	start
  1575  0057BA                     __end_of_main:
  1576                           	callstack 0
  1577                           
  1578 ;; *************** function _loopTaskTimeMachine *****************
  1579 ;; Defined at:
  1580 ;;		line 47 in file "fs_main.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;		None
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;		None
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  1    wreg      void 
  1587 ;; Registers used:
  1588 ;;		wreg, status,2, status,0
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1594 ;;      Params:         0       0       0       0       0       0       0
  1595 ;;      Locals:         0       0       0       0       0       0       0
  1596 ;;      Temps:          0       0       0       0       0       0       0
  1597 ;;      Totals:         0       0       0       0       0       0       0
  1598 ;;Total ram usage:        0 bytes
  1599 ;; Hardware stack levels used:    1
  1600 ;; Hardware stack levels required when called:    1
  1601 ;; This function calls:
  1602 ;;		Nothing
  1603 ;; This function is called by:
  1604 ;;		_main
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           	psect	text1
  1609  004D08                     __ptext1:
  1610                           	callstack 0
  1611  004D08                     _loopTaskTimeMachine:
  1612                           	callstack 29
  1613  004D08                     
  1614                           ;fs_main.c: 49:     if (timer_counter_flag.one_second_flag == 1)
  1615  004D08  0100               	movlb	0	; () banked
  1616  004D0A  A1FA               	btfss	_timer_counter_flag& (0+255),0,b
  1617  004D0C  EF8A  F026         	goto	u7801
  1618  004D10  EF8C  F026         	goto	u7800
  1619  004D14                     u7801:
  1620  004D14  EFCB  F026         	goto	l255
  1621  004D18                     u7800:
  1622  004D18                     
  1623                           ; BSR set to: 0
  1624                           ;fs_main.c: 50:     {;fs_main.c: 51:         timer_counter_flag.one_second_flag = 0;
  1625  004D18  91FA               	bcf	_timer_counter_flag& (0+255),0,b
  1626  004D1A                     
  1627                           ; BSR set to: 0
  1628                           ;fs_main.c: 53:         if ( (startIsClick == 1) && (pauseIsClick == 0) && (stopIsClick 
      +                          == 0) && (menu_selected == MAIN_MENU) )
  1629  004D1A  05FE               	decf	_startIsClick& (0+255),w,b
  1630  004D1C  A4D8               	btfss	status,2,c
  1631  004D1E  EF93  F026         	goto	u7811
  1632  004D22  EF95  F026         	goto	u7810
  1633  004D26                     u7811:
  1634  004D26  EFCB  F026         	goto	l255
  1635  004D2A                     u7810:
  1636  004D2A                     
  1637                           ; BSR set to: 0
  1638  004D2A  51FF               	movf	_pauseIsClick& (0+255),w,b
  1639  004D2C  A4D8               	btfss	status,2,c
  1640  004D2E  EF9B  F026         	goto	u7821
  1641  004D32  EF9D  F026         	goto	u7820
  1642  004D36                     u7821:
  1643  004D36  EFCB  F026         	goto	l255
  1644  004D3A                     u7820:
  1645  004D3A                     
  1646                           ; BSR set to: 0
  1647  004D3A  51FD               	movf	_stopIsClick& (0+255),w,b
  1648  004D3C  A4D8               	btfss	status,2,c
  1649  004D3E  EFA3  F026         	goto	u7831
  1650  004D42  EFA5  F026         	goto	u7830
  1651  004D46                     u7831:
  1652  004D46  EFCB  F026         	goto	l255
  1653  004D4A                     u7830:
  1654  004D4A                     
  1655                           ; BSR set to: 0
  1656  004D4A  51FB               	movf	_menu_selected& (0+255),w,b
  1657  004D4C  A4D8               	btfss	status,2,c
  1658  004D4E  EFAB  F026         	goto	u7841
  1659  004D52  EFAD  F026         	goto	u7840
  1660  004D56                     u7841:
  1661  004D56  EFCB  F026         	goto	l255
  1662  004D5A                     u7840:
  1663  004D5A                     
  1664                           ; BSR set to: 0
  1665                           ;fs_main.c: 54:         {;fs_main.c: 55:             timer_value.second++;
  1666  004D5A  0101               	movlb	1	; () banked
  1667  004D5C  2B8F               	incf	_timer_value& (0+255),f,b
  1668  004D5E                     
  1669                           ; BSR set to: 1
  1670                           ;fs_main.c: 56:             timer_value.remainingSecond = (uint8_t)60 - timer_value.seco
      +                          nd;
  1671  004D5E  518F               	movf	_timer_value& (0+255),w,b
  1672  004D60  083C               	sublw	60
  1673  004D62  6F91               	movwf	(_timer_value+2)& (0+255),b
  1674  004D64                     
  1675                           ; BSR set to: 1
  1676                           ;fs_main.c: 58:             if (timer_value.remainingSecond == 59 )
  1677  004D64  0E3B               	movlw	59
  1678  004D66  1991               	xorwf	(_timer_value+2)& (0+255),w,b
  1679  004D68  A4D8               	btfss	status,2,c
  1680  004D6A  EFB9  F026         	goto	u7851
  1681  004D6E  EFBB  F026         	goto	u7850
  1682  004D72                     u7851:
  1683  004D72  EFC1  F026         	goto	l6456
  1684  004D76                     u7850:
  1685  004D76                     
  1686                           ; BSR set to: 1
  1687                           ;fs_main.c: 59:             {;fs_main.c: 60:                 timer_value.minute++;
  1688  004D76  2B90               	incf	(_timer_value+1)& (0+255),f,b
  1689  004D78                     
  1690                           ; BSR set to: 1
  1691                           ;fs_main.c: 61:                 timer_value.remainingMinute = (int8_t)menu_value.driver_
      +                          time - timer_value.minute;
  1692  004D78  5190               	movf	(_timer_value+1)& (0+255),w,b
  1693  004D7A  0100               	movlb	0	; () banked
  1694  004D7C  5DF3               	subwf	_menu_value& (0+255),w,b
  1695  004D7E  0101               	movlb	1	; () banked
  1696  004D80  6F92               	movwf	(_timer_value+3)& (0+255),b
  1697  004D82                     l6456:
  1698                           
  1699                           ; BSR set to: 1
  1700                           ;fs_main.c: 64:             if (timer_value.second > 59)
  1701  004D82  0E3B               	movlw	59
  1702  004D84  658F               	cpfsgt	_timer_value& (0+255),b
  1703  004D86  EFC7  F026         	goto	u7861
  1704  004D8A  EFC9  F026         	goto	u7860
  1705  004D8E                     u7861:
  1706  004D8E  EFCB  F026         	goto	l255
  1707  004D92                     u7860:
  1708  004D92                     
  1709                           ; BSR set to: 1
  1710                           ;fs_main.c: 65:             {;fs_main.c: 66:                 timer_value.second = 0;
  1711  004D92  0E00               	movlw	0
  1712  004D94  6F8F               	movwf	_timer_value& (0+255),b
  1713  004D96                     l255:
  1714  004D96  0012               	return		;funcret
  1715  004D98                     __end_of_loopTaskTimeMachine:
  1716                           	callstack 0
  1717                           
  1718 ;; *************** function _loopTaskMenuControl *****************
  1719 ;; Defined at:
  1720 ;;		line 159 in file "fs_menu_controller.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;		None
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;		None
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1    wreg      void 
  1727 ;; Registers used:
  1728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1734 ;;      Params:         0       0       0       0       0       0       0
  1735 ;;      Locals:         0       0       0       0       0       0       0
  1736 ;;      Temps:          0       0       0       0       0       0       0
  1737 ;;      Totals:         0       0       0       0       0       0       0
  1738 ;;Total ram usage:        0 bytes
  1739 ;; Hardware stack levels used:    1
  1740 ;; Hardware stack levels required when called:   11
  1741 ;; This function calls:
  1742 ;;		_buttonControlFlags
  1743 ;;		_stateMachine
  1744 ;; This function is called by:
  1745 ;;		_main
  1746 ;; This function uses a non-reentrant model
  1747 ;;
  1748                           
  1749                           	psect	text2
  1750  004F0A                     __ptext2:
  1751                           	callstack 0
  1752  004F0A                     _loopTaskMenuControl:
  1753                           	callstack 19
  1754  004F0A                     
  1755                           ;fs_menu_controller.c: 161:     buttonControlFlags();
  1756  004F0A  ECE7  F018         	call	_buttonControlFlags	;wreg free
  1757  004F0E                     
  1758                           ;fs_menu_controller.c: 162:     stateMachine();
  1759  004F0E  ECE1  F024         	call	_stateMachine	;wreg free
  1760  004F12                     
  1761                           ;fs_menu_controller.c: 164:     if (menu_flags.menu_start_flag == 1)
  1762  004F12  0101               	movlb	1	; () banked
  1763  004F14  0598               	decf	(_menu_flags+1)& (0+255),w,b
  1764  004F16  A4D8               	btfss	status,2,c
  1765  004F18  EF90  F027         	goto	u7871
  1766  004F1C  EF92  F027         	goto	u7870
  1767  004F20                     u7871:
  1768  004F20  EF9B  F027         	goto	l6490
  1769  004F24                     u7870:
  1770  004F24                     
  1771                           ; BSR set to: 1
  1772                           ;fs_menu_controller.c: 165:     {;fs_menu_controller.c: 166:         menu_flags.menu_sta
      +                          rt_flag = 0;
  1773  004F24  0E00               	movlw	0
  1774  004F26  6F98               	movwf	(_menu_flags+1)& (0+255),b
  1775                           
  1776                           ;fs_menu_controller.c: 167:         startIsClick = 1;
  1777  004F28  0E01               	movlw	1
  1778  004F2A  0100               	movlb	0	; () banked
  1779  004F2C  6FFE               	movwf	_startIsClick& (0+255),b
  1780                           
  1781                           ;fs_menu_controller.c: 168:         pauseIsClick = 0;
  1782  004F2E  0E00               	movlw	0
  1783  004F30  6FFF               	movwf	_pauseIsClick& (0+255),b
  1784                           
  1785                           ;fs_menu_controller.c: 169:         stopIsClick = 0;
  1786  004F32  0E00               	movlw	0
  1787  004F34  6FFD               	movwf	_stopIsClick& (0+255),b
  1788  004F36                     l6490:
  1789                           
  1790                           ;fs_menu_controller.c: 172:     if (menu_flags.menu_pause_flag == 1)
  1791  004F36  0101               	movlb	1	; () banked
  1792  004F38  059A               	decf	(_menu_flags+3)& (0+255),w,b
  1793  004F3A  A4D8               	btfss	status,2,c
  1794  004F3C  EFA2  F027         	goto	u7881
  1795  004F40  EFA4  F027         	goto	u7880
  1796  004F44                     u7881:
  1797  004F44  EFAD  F027         	goto	l6494
  1798  004F48                     u7880:
  1799  004F48                     
  1800                           ; BSR set to: 1
  1801                           ;fs_menu_controller.c: 173:     {;fs_menu_controller.c: 174:         menu_flags.menu_pau
      +                          se_flag = 0;
  1802  004F48  0E00               	movlw	0
  1803  004F4A  6F9A               	movwf	(_menu_flags+3)& (0+255),b
  1804                           
  1805                           ;fs_menu_controller.c: 175:         pauseIsClick = 1;
  1806  004F4C  0E01               	movlw	1
  1807  004F4E  0100               	movlb	0	; () banked
  1808  004F50  6FFF               	movwf	_pauseIsClick& (0+255),b
  1809                           
  1810                           ;fs_menu_controller.c: 176:         startIsClick = 0;
  1811  004F52  0E00               	movlw	0
  1812  004F54  6FFE               	movwf	_startIsClick& (0+255),b
  1813                           
  1814                           ;fs_menu_controller.c: 177:         stopIsClick = 0;
  1815  004F56  0E00               	movlw	0
  1816  004F58  6FFD               	movwf	_stopIsClick& (0+255),b
  1817  004F5A                     l6494:
  1818                           
  1819                           ;fs_menu_controller.c: 180:     if (menu_flags.menu_stop_flag == 1)
  1820  004F5A  0101               	movlb	1	; () banked
  1821  004F5C  0599               	decf	(_menu_flags+2)& (0+255),w,b
  1822  004F5E  A4D8               	btfss	status,2,c
  1823  004F60  EFB4  F027         	goto	u7891
  1824  004F64  EFB6  F027         	goto	u7890
  1825  004F68                     u7891:
  1826  004F68  EFBF  F027         	goto	l434
  1827  004F6C                     u7890:
  1828  004F6C                     
  1829                           ; BSR set to: 1
  1830                           ;fs_menu_controller.c: 181:     {;fs_menu_controller.c: 182:         menu_flags.menu_sto
      +                          p_flag = 0;
  1831  004F6C  0E00               	movlw	0
  1832  004F6E  6F99               	movwf	(_menu_flags+2)& (0+255),b
  1833                           
  1834                           ;fs_menu_controller.c: 183:         pauseIsClick = 0;
  1835  004F70  0E00               	movlw	0
  1836  004F72  0100               	movlb	0	; () banked
  1837  004F74  6FFF               	movwf	_pauseIsClick& (0+255),b
  1838                           
  1839                           ;fs_menu_controller.c: 184:         startIsClick = 0;
  1840  004F76  0E00               	movlw	0
  1841  004F78  6FFE               	movwf	_startIsClick& (0+255),b
  1842                           
  1843                           ;fs_menu_controller.c: 185:         stopIsClick = 1;
  1844  004F7A  0E01               	movlw	1
  1845  004F7C  6FFD               	movwf	_stopIsClick& (0+255),b
  1846  004F7E                     l434:
  1847  004F7E  0012               	return		;funcret
  1848  004F80                     __end_of_loopTaskMenuControl:
  1849                           	callstack 0
  1850                           
  1851 ;; *************** function _stateMachine *****************
  1852 ;; Defined at:
  1853 ;;		line 196 in file "fs_menu_controller.c"
  1854 ;; Parameters:    Size  Location     Type
  1855 ;;		None
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;		None
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  1    wreg      void 
  1860 ;; Registers used:
  1861 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1867 ;;      Params:         0       0       0       0       0       0       0
  1868 ;;      Locals:         0       0       0       0       0       0       0
  1869 ;;      Temps:          0       2       0       0       0       0       0
  1870 ;;      Totals:         0       2       0       0       0       0       0
  1871 ;;Total ram usage:        2 bytes
  1872 ;; Hardware stack levels used:    1
  1873 ;; Hardware stack levels required when called:   10
  1874 ;; This function calls:
  1875 ;;		_driverTimeSettingMenu
  1876 ;;		_exitLine
  1877 ;;		_mainMenu
  1878 ;;		_pauseMenu
  1879 ;;		_secretMenu
  1880 ;;		_speedLimitSettingMenu
  1881 ;;		_startMenu
  1882 ;;		_stopMenu
  1883 ;;		_stopTimeSettingMenu
  1884 ;; This function is called by:
  1885 ;;		_loopTaskMenuControl
  1886 ;; This function uses a non-reentrant model
  1887 ;;
  1888                           
  1889                           	psect	text3
  1890  0049C2                     __ptext3:
  1891                           	callstack 0
  1892  0049C2                     _stateMachine:
  1893                           	callstack 19
  1894  0049C2                     
  1895                           ;fs_menu_controller.c: 198:     switch (menu_selected)
  1896  0049C2  EF07  F025         	goto	l6428
  1897  0049C6                     l6408:
  1898                           
  1899                           ; BSR set to: 0
  1900                           ;fs_menu_controller.c: 201:             mainMenu();
  1901  0049C6  EC86  F01B         	call	_mainMenu	;wreg free
  1902                           
  1903                           ;fs_menu_controller.c: 202:         break;
  1904  0049CA  EF39  F025         	goto	l448
  1905  0049CE                     l6410:
  1906                           
  1907                           ; BSR set to: 0
  1908                           ;fs_menu_controller.c: 205:             driverTimeSettingMenu();
  1909  0049CE  EC2F  F01F         	call	_driverTimeSettingMenu	;wreg free
  1910                           
  1911                           ;fs_menu_controller.c: 206:         break;
  1912  0049D2  EF39  F025         	goto	l448
  1913  0049D6                     l6412:
  1914                           
  1915                           ; BSR set to: 0
  1916                           ;fs_menu_controller.c: 209:             stopTimeSettingMenu();
  1917  0049D6  EC55  F020         	call	_stopTimeSettingMenu	;wreg free
  1918                           
  1919                           ;fs_menu_controller.c: 210:         break;
  1920  0049DA  EF39  F025         	goto	l448
  1921  0049DE                     l6414:
  1922                           
  1923                           ; BSR set to: 0
  1924                           ;fs_menu_controller.c: 213:             speedLimitSettingMenu();
  1925  0049DE  ECDB  F020         	call	_speedLimitSettingMenu	;wreg free
  1926                           
  1927                           ;fs_menu_controller.c: 214:         break;
  1928  0049E2  EF39  F025         	goto	l448
  1929  0049E6                     l6416:
  1930                           
  1931                           ; BSR set to: 0
  1932                           ;fs_menu_controller.c: 217:             stopMenu();
  1933  0049E6  EC4E  F023         	call	_stopMenu	;wreg free
  1934                           
  1935                           ;fs_menu_controller.c: 218:         break;
  1936  0049EA  EF39  F025         	goto	l448
  1937  0049EE                     l6418:
  1938                           
  1939                           ; BSR set to: 0
  1940                           ;fs_menu_controller.c: 221:             startMenu();
  1941  0049EE  ECBB  F02B         	call	_startMenu	;wreg free
  1942                           
  1943                           ;fs_menu_controller.c: 222:         break;
  1944  0049F2  EF39  F025         	goto	l448
  1945  0049F6                     l6420:
  1946                           
  1947                           ; BSR set to: 0
  1948                           ;fs_menu_controller.c: 225:             pauseMenu();
  1949  0049F6  EC92  F01E         	call	_pauseMenu	;wreg free
  1950                           
  1951                           ;fs_menu_controller.c: 226:         break;
  1952  0049FA  EF39  F025         	goto	l448
  1953  0049FE                     l6422:
  1954                           
  1955                           ; BSR set to: 0
  1956                           ;fs_menu_controller.c: 229:             exitLine();
  1957  0049FE  ECED  F02B         	call	_exitLine	;wreg free
  1958                           
  1959                           ;fs_menu_controller.c: 230:         break;
  1960  004A02  EF39  F025         	goto	l448
  1961  004A06                     l6424:
  1962                           
  1963                           ; BSR set to: 0
  1964                           ;fs_menu_controller.c: 233:             secretMenu();
  1965  004A06  EC70  F016         	call	_secretMenu	;wreg free
  1966                           
  1967                           ;fs_menu_controller.c: 234:         break;
  1968  004A0A  EF39  F025         	goto	l448
  1969  004A0E                     l6428:
  1970  004A0E  0100               	movlb	0	; () banked
  1971  004A10  51FB               	movf	_menu_selected& (0+255),w,b
  1972  004A12  6FF1               	movwf	??_stateMachine& (0+255),b
  1973  004A14  6BF2               	clrf	(??_stateMachine+1)& (0+255),b
  1974                           
  1975                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1976                           ; Switch size 1, requested type "simple"
  1977                           ; Number of cases is 1, Range of values is 0 to 0
  1978                           ; switch strategies available:
  1979                           ; Name         Instructions Cycles
  1980                           ; simple_byte            4     3 (average)
  1981                           ;	Chosen strategy is simple_byte
  1982  004A16  51F2               	movf	(??_stateMachine+1)& (0+255),w,b
  1983  004A18  0A00               	xorlw	0	; case 0
  1984  004A1A  B4D8               	btfsc	status,2,c
  1985  004A1C  EF12  F025         	goto	l6606
  1986  004A20  EF39  F025         	goto	l448
  1987  004A24                     l6606:
  1988                           
  1989                           ; BSR set to: 0
  1990                           ; Switch size 1, requested type "simple"
  1991                           ; Number of cases is 9, Range of values is 0 to 8
  1992                           ; switch strategies available:
  1993                           ; Name         Instructions Cycles
  1994                           ; simple_byte           28    15 (average)
  1995                           ;	Chosen strategy is simple_byte
  1996  004A24  51F1               	movf	??_stateMachine& (0+255),w,b
  1997  004A26  0A00               	xorlw	0	; case 0
  1998  004A28  B4D8               	btfsc	status,2,c
  1999  004A2A  EFE3  F024         	goto	l6408
  2000  004A2E  0A01               	xorlw	1	; case 1
  2001  004A30  B4D8               	btfsc	status,2,c
  2002  004A32  EFE7  F024         	goto	l6410
  2003  004A36  0A03               	xorlw	3	; case 2
  2004  004A38  B4D8               	btfsc	status,2,c
  2005  004A3A  EFEB  F024         	goto	l6412
  2006  004A3E  0A01               	xorlw	1	; case 3
  2007  004A40  B4D8               	btfsc	status,2,c
  2008  004A42  EFEF  F024         	goto	l6414
  2009  004A46  0A07               	xorlw	7	; case 4
  2010  004A48  B4D8               	btfsc	status,2,c
  2011  004A4A  EFF3  F024         	goto	l6416
  2012  004A4E  0A01               	xorlw	1	; case 5
  2013  004A50  B4D8               	btfsc	status,2,c
  2014  004A52  EFF7  F024         	goto	l6418
  2015  004A56  0A03               	xorlw	3	; case 6
  2016  004A58  B4D8               	btfsc	status,2,c
  2017  004A5A  EFFB  F024         	goto	l6420
  2018  004A5E  0A01               	xorlw	1	; case 7
  2019  004A60  B4D8               	btfsc	status,2,c
  2020  004A62  EFFF  F024         	goto	l6422
  2021  004A66  0A0F               	xorlw	15	; case 8
  2022  004A68  B4D8               	btfsc	status,2,c
  2023  004A6A  EF03  F025         	goto	l6424
  2024  004A6E  EF39  F025         	goto	l448
  2025  004A72                     l448:
  2026  004A72  0012               	return		;funcret
  2027  004A74                     __end_of_stateMachine:
  2028                           	callstack 0
  2029                           
  2030 ;; *************** function _stopTimeSettingMenu *****************
  2031 ;; Defined at:
  2032 ;;		line 536 in file "fs_menu_controller.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;		None
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      void 
  2039 ;; Registers used:
  2040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2046 ;;      Params:         0       0       0       0       0       0       0
  2047 ;;      Locals:         0      16       0       0       0       0       0
  2048 ;;      Temps:          0       0       0       0       0       0       0
  2049 ;;      Totals:         0      16       0       0       0       0       0
  2050 ;;Total ram usage:       16 bytes
  2051 ;; Hardware stack levels used:    1
  2052 ;; Hardware stack levels required when called:    9
  2053 ;; This function calls:
  2054 ;;		_Lcd_Set_Cursor
  2055 ;;		_Lcd_Write_String
  2056 ;;		_eepromWrite
  2057 ;;		_sprintf
  2058 ;;		_stopMotor
  2059 ;; This function is called by:
  2060 ;;		_stateMachine
  2061 ;; This function uses a non-reentrant model
  2062 ;;
  2063                           
  2064                           	psect	text4
  2065  0040AA                     __ptext4:
  2066                           	callstack 0
  2067  0040AA                     _stopTimeSettingMenu:
  2068                           	callstack 19
  2069  0040AA                     
  2070                           ;fs_menu_controller.c: 538:     char textCursor2[16] = {0};
  2071  0040AA  EE20  F0E1         	lfsr	2,stopTimeSettingMenu@textCursor2
  2072  0040AE  0E0F               	movlw	15
  2073  0040B0                     u7161:
  2074  0040B0  6ADE               	clrf	postinc2,c
  2075  0040B2  06E8               	decf	wreg,f,c
  2076  0040B4  E2FD               	bc	u7161
  2077  0040B6                     
  2078                           ;fs_menu_controller.c: 540:     stopMotor();
  2079  0040B6  EC6D  F02A         	call	_stopMotor	;wreg free
  2080  0040BA                     
  2081                           ;fs_menu_controller.c: 542:     if (menu_flags.menu_input_flag == 1)
  2082  0040BA  0101               	movlb	1	; () banked
  2083  0040BC  0597               	decf	_menu_flags& (0+255),w,b
  2084  0040BE  A4D8               	btfss	status,2,c
  2085  0040C0  EF64  F020         	goto	u7171
  2086  0040C4  EF66  F020         	goto	u7170
  2087  0040C8                     u7171:
  2088  0040C8  EF6B  F020         	goto	l6066
  2089  0040CC                     u7170:
  2090  0040CC                     
  2091                           ; BSR set to: 1
  2092                           ;fs_menu_controller.c: 543:     {;fs_menu_controller.c: 544:         menu_flags.menu_inp
      +                          ut_flag = 0;
  2093  0040CC  0E00               	movlw	0
  2094  0040CE  6F97               	movwf	_menu_flags& (0+255),b
  2095                           
  2096                           ;fs_menu_controller.c: 545:         menu_selected = SPEED_LIMIT_SETTING;
  2097  0040D0  0E03               	movlw	3
  2098  0040D2  0100               	movlb	0	; () banked
  2099  0040D4  6FFB               	movwf	_menu_selected& (0+255),b
  2100  0040D6                     l6066:
  2101                           
  2102                           ;fs_menu_controller.c: 548:     if ((menu_flags.menu_increase_flag == 1) && (menu_value.
      +                          stop_time < 250))
  2103  0040D6  0101               	movlb	1	; () banked
  2104  0040D8  059B               	decf	(_menu_flags+4)& (0+255),w,b
  2105  0040DA  A4D8               	btfss	status,2,c
  2106  0040DC  EF72  F020         	goto	u7181
  2107  0040E0  EF74  F020         	goto	u7180
  2108  0040E4                     u7181:
  2109  0040E4  EF88  F020         	goto	l6076
  2110  0040E8                     u7180:
  2111  0040E8                     
  2112                           ; BSR set to: 1
  2113  0040E8  0EFA               	movlw	250
  2114  0040EA  0100               	movlb	0	; () banked
  2115  0040EC  61F4               	cpfslt	(_menu_value+1)& (0+255),b
  2116  0040EE  EF7B  F020         	goto	u7191
  2117  0040F2  EF7D  F020         	goto	u7190
  2118  0040F6                     u7191:
  2119  0040F6  EF88  F020         	goto	l6076
  2120  0040FA                     u7190:
  2121  0040FA                     
  2122                           ; BSR set to: 0
  2123                           ;fs_menu_controller.c: 549:     {;fs_menu_controller.c: 550:         menu_flags.menu_inc
      +                          rease_flag = 0;
  2124  0040FA  0E00               	movlw	0
  2125  0040FC  0101               	movlb	1	; () banked
  2126  0040FE  6F9B               	movwf	(_menu_flags+4)& (0+255),b
  2127  004100                     
  2128                           ; BSR set to: 1
  2129                           ;fs_menu_controller.c: 551:         menu_value.stop_time += 10;
  2130  004100  0E0A               	movlw	10
  2131  004102  0100               	movlb	0	; () banked
  2132  004104  27F4               	addwf	(_menu_value+1)& (0+255),f,b
  2133  004106                     
  2134                           ; BSR set to: 0
  2135                           ;fs_menu_controller.c: 552:         eepromWrite(0x01,(uint8_t)menu_value.stop_time);
  2136  004106  C0F4  F001         	movff	_menu_value+1,eepromWrite@data
  2137  00410A  0E01               	movlw	1
  2138  00410C  EC4B  F02B         	call	_eepromWrite
  2139  004110                     l6076:
  2140                           
  2141                           ;fs_menu_controller.c: 555:     if ((menu_flags.menu_decrease_flag == 1) && (menu_value.
      +                          stop_time > 10))
  2142  004110  0101               	movlb	1	; () banked
  2143  004112  059C               	decf	(_menu_flags+5)& (0+255),w,b
  2144  004114  A4D8               	btfss	status,2,c
  2145  004116  EF8F  F020         	goto	u7201
  2146  00411A  EF91  F020         	goto	u7200
  2147  00411E                     u7201:
  2148  00411E  EFA5  F020         	goto	l507
  2149  004122                     u7200:
  2150  004122                     
  2151                           ; BSR set to: 1
  2152  004122  0E0A               	movlw	10
  2153  004124  0100               	movlb	0	; () banked
  2154  004126  65F4               	cpfsgt	(_menu_value+1)& (0+255),b
  2155  004128  EF98  F020         	goto	u7211
  2156  00412C  EF9A  F020         	goto	u7210
  2157  004130                     u7211:
  2158  004130  EFA5  F020         	goto	l507
  2159  004134                     u7210:
  2160  004134                     
  2161                           ; BSR set to: 0
  2162                           ;fs_menu_controller.c: 556:     {;fs_menu_controller.c: 557:          menu_flags.menu_de
      +                          crease_flag = 0;
  2163  004134  0E00               	movlw	0
  2164  004136  0101               	movlb	1	; () banked
  2165  004138  6F9C               	movwf	(_menu_flags+5)& (0+255),b
  2166  00413A                     
  2167                           ; BSR set to: 1
  2168                           ;fs_menu_controller.c: 558:          menu_value.stop_time -= 10;
  2169  00413A  0E0A               	movlw	10
  2170  00413C  0100               	movlb	0	; () banked
  2171  00413E  5FF4               	subwf	(_menu_value+1)& (0+255),f,b
  2172  004140                     
  2173                           ; BSR set to: 0
  2174                           ;fs_menu_controller.c: 559:          eepromWrite(0x01,(uint8_t)menu_value.stop_time);
  2175  004140  C0F4  F001         	movff	_menu_value+1,eepromWrite@data
  2176  004144  0E01               	movlw	1
  2177  004146  EC4B  F02B         	call	_eepromWrite
  2178  00414A                     l507:
  2179                           
  2180                           ;fs_menu_controller.c: 561:     Lcd_Set_Cursor(1,1);
  2181  00414A  0E01               	movlw	1
  2182  00414C  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2183  00414E  0E01               	movlw	1
  2184  004150  EC2A  F028         	call	_Lcd_Set_Cursor
  2185  004154                     
  2186                           ;fs_menu_controller.c: 562:     Lcd_Write_String("DURMA ZAMANI  ms");
  2187  004154  0E6F               	movlw	low STR_15
  2188  004156  6E05               	movwf	Lcd_Write_String@a^0,c
  2189  004158  0E7F               	movlw	high STR_15
  2190  00415A  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2191  00415C  ECCC  F026         	call	_Lcd_Write_String	;wreg free
  2192  004160                     
  2193                           ;fs_menu_controller.c: 563:     Lcd_Set_Cursor(2,1);
  2194  004160  0E01               	movlw	1
  2195  004162  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2196  004164  0E02               	movlw	2
  2197  004166  EC2A  F028         	call	_Lcd_Set_Cursor
  2198  00416A                     
  2199                           ;fs_menu_controller.c: 564:     sprintf(textCursor2,"%d             ",menu_value.stop_ti
      +                          me);
  2200  00416A  0EE1               	movlw	low stopTimeSettingMenu@textCursor2
  2201  00416C  0100               	movlb	0	; () banked
  2202  00416E  6FCF               	movwf	sprintf@s& (0+255),b
  2203  004170  0E00               	movlw	high stopTimeSettingMenu@textCursor2
  2204  004172  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2205  004174  0E91               	movlw	low STR_16
  2206  004176  6FD1               	movwf	sprintf@fmt& (0+255),b
  2207  004178  0E7F               	movlw	high STR_16
  2208  00417A  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2209  00417C  C0F4  F0D3         	movff	_menu_value+1,?_sprintf+4
  2210  004180  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  2211  004182  EC12  F029         	call	_sprintf	;wreg free
  2212  004186                     
  2213                           ;fs_menu_controller.c: 565:     Lcd_Write_String(textCursor2);
  2214  004186  0EE1               	movlw	low stopTimeSettingMenu@textCursor2
  2215  004188  6E05               	movwf	Lcd_Write_String@a^0,c
  2216  00418A  0E00               	movlw	high stopTimeSettingMenu@textCursor2
  2217  00418C  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2218  00418E  ECCC  F026         	call	_Lcd_Write_String	;wreg free
  2219  004192                     
  2220                           ;fs_menu_controller.c: 567:     if(timer_value.menu_login_delay == 100)
  2221  004192  0E64               	movlw	100
  2222  004194  0101               	movlb	1	; () banked
  2223  004196  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  2224  004198  A4D8               	btfss	status,2,c
  2225  00419A  EFD1  F020         	goto	u7221
  2226  00419E  EFD3  F020         	goto	u7220
  2227  0041A2                     u7221:
  2228  0041A2  EFDA  F020         	goto	l509
  2229  0041A6                     u7220:
  2230  0041A6                     
  2231                           ; BSR set to: 1
  2232                           ;fs_menu_controller.c: 568:     {;fs_menu_controller.c: 569:         button_bounce_contr
      +                          oller.menu = 0;
  2233  0041A6  0E00               	movlw	0
  2234  0041A8  6F9D               	movwf	_button_bounce_controller& (0+255),b
  2235                           
  2236                           ;fs_menu_controller.c: 570:         timer_value.menu_login_delay = 0;
  2237  0041AA  0E00               	movlw	0
  2238  0041AC  6F93               	movwf	(_timer_value+4)& (0+255),b
  2239                           
  2240                           ;fs_menu_controller.c: 571:         menu_selected = PAUSE_MENU;
  2241  0041AE  0E06               	movlw	6
  2242  0041B0  0100               	movlb	0	; () banked
  2243  0041B2  6FFB               	movwf	_menu_selected& (0+255),b
  2244  0041B4                     l509:
  2245  0041B4  0012               	return		;funcret
  2246  0041B6                     __end_of_stopTimeSettingMenu:
  2247                           	callstack 0
  2248                           
  2249 ;; *************** function _stopMenu *****************
  2250 ;; Defined at:
  2251 ;;		line 304 in file "fs_menu_controller.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;		None
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  2256 ;; Return value:  Size  Location     Type
  2257 ;;                  1    wreg      void 
  2258 ;; Registers used:
  2259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2265 ;;      Params:         0       0       0       0       0       0       0
  2266 ;;      Locals:         0      16       0       0       0       0       0
  2267 ;;      Temps:          0       0       0       0       0       0       0
  2268 ;;      Totals:         0      16       0       0       0       0       0
  2269 ;;Total ram usage:       16 bytes
  2270 ;; Hardware stack levels used:    1
  2271 ;; Hardware stack levels required when called:    9
  2272 ;; This function calls:
  2273 ;;		_Lcd_Set_Cursor
  2274 ;;		_Lcd_Write_String
  2275 ;;		_sprintf
  2276 ;;		_stopMotor
  2277 ;; This function is called by:
  2278 ;;		_stateMachine
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282                           	psect	text5
  2283  00469C                     __ptext5:
  2284                           	callstack 0
  2285  00469C                     _stopMenu:
  2286                           	callstack 19
  2287  00469C                     
  2288                           ;fs_menu_controller.c: 306:     char textCursor2[16] = {0};
  2289  00469C  EE20  F0E1         	lfsr	2,stopMenu@textCursor2
  2290  0046A0  0E0F               	movlw	15
  2291  0046A2                     u7301:
  2292  0046A2  6ADE               	clrf	postinc2,c
  2293  0046A4  06E8               	decf	wreg,f,c
  2294  0046A6  E2FD               	bc	u7301
  2295  0046A8                     
  2296                           ;fs_menu_controller.c: 308:     startIsClick = 0;
  2297  0046A8  0E00               	movlw	0
  2298  0046AA  0100               	movlb	0	; () banked
  2299  0046AC  6FFE               	movwf	_startIsClick& (0+255),b
  2300  0046AE                     
  2301                           ; BSR set to: 0
  2302                           ;fs_menu_controller.c: 309:     pauseIsClick = 0;
  2303  0046AE  0E00               	movlw	0
  2304  0046B0  6FFF               	movwf	_pauseIsClick& (0+255),b
  2305  0046B2                     
  2306                           ; BSR set to: 0
  2307                           ;fs_menu_controller.c: 310:     stopIsClick = 1;
  2308  0046B2  0E01               	movlw	1
  2309  0046B4  6FFD               	movwf	_stopIsClick& (0+255),b
  2310  0046B6                     
  2311                           ; BSR set to: 0
  2312                           ;fs_menu_controller.c: 312:     Lcd_Set_Cursor(1,1);
  2313  0046B6  0E01               	movlw	1
  2314  0046B8  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2315  0046BA  0E01               	movlw	1
  2316  0046BC  EC2A  F028         	call	_Lcd_Set_Cursor
  2317  0046C0                     
  2318                           ;fs_menu_controller.c: 313:     Lcd_Write_String("ZAMAN DOLDU     ");
  2319  0046C0  0E3C               	movlw	low STR_5
  2320  0046C2  6E05               	movwf	Lcd_Write_String@a^0,c
  2321  0046C4  0E7F               	movlw	high STR_5
  2322  0046C6  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2323  0046C8  ECCC  F026         	call	_Lcd_Write_String	;wreg free
  2324  0046CC                     
  2325                           ;fs_menu_controller.c: 315:     timer_value.remainingSecond = 0;
  2326  0046CC  0E00               	movlw	0
  2327  0046CE  0101               	movlb	1	; () banked
  2328  0046D0  6F91               	movwf	(_timer_value+2)& (0+255),b
  2329  0046D2                     
  2330                           ; BSR set to: 1
  2331                           ;fs_menu_controller.c: 316:     timer_value.remainingMinute = 0;
  2332  0046D2  0E00               	movlw	0
  2333  0046D4  6F92               	movwf	(_timer_value+3)& (0+255),b
  2334  0046D6                     
  2335                           ; BSR set to: 1
  2336                           ;fs_menu_controller.c: 318:     Lcd_Set_Cursor(2,1);
  2337  0046D6  0E01               	movlw	1
  2338  0046D8  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2339  0046DA  0E02               	movlw	2
  2340  0046DC  EC2A  F028         	call	_Lcd_Set_Cursor
  2341  0046E0                     
  2342                           ;fs_menu_controller.c: 319:     sprintf(textCursor2,"      %d:%d    ",timer_value.remain
      +                          ingMinute,timer_value.remainingSecond);
  2343  0046E0  0EE1               	movlw	low stopMenu@textCursor2
  2344  0046E2  0100               	movlb	0	; () banked
  2345  0046E4  6FCF               	movwf	sprintf@s& (0+255),b
  2346  0046E6  0E00               	movlw	high stopMenu@textCursor2
  2347  0046E8  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2348  0046EA  0EA1               	movlw	low STR_6
  2349  0046EC  6FD1               	movwf	sprintf@fmt& (0+255),b
  2350  0046EE  0E7F               	movlw	high STR_6
  2351  0046F0  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2352  0046F2  0101               	movlb	1	; () banked
  2353  0046F4  5192               	movf	(_timer_value+3)& (0+255),w,b
  2354  0046F6  0100               	movlb	0	; () banked
  2355  0046F8  6FD3               	movwf	(?_sprintf+4)& (0+255),b
  2356  0046FA  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  2357  0046FC  BFD3               	btfsc	(?_sprintf+4)& (0+255),7,b
  2358  0046FE  07D4               	decf	(?_sprintf+5)& (0+255),f,b
  2359  004700  C191  F0D5         	movff	_timer_value+2,?_sprintf+6
  2360  004704  6BD6               	clrf	(?_sprintf+7)& (0+255),b
  2361  004706  EC12  F029         	call	_sprintf	;wreg free
  2362  00470A                     
  2363                           ;fs_menu_controller.c: 320:     Lcd_Write_String(textCursor2);
  2364  00470A  0EE1               	movlw	low stopMenu@textCursor2
  2365  00470C  6E05               	movwf	Lcd_Write_String@a^0,c
  2366  00470E  0E00               	movlw	high stopMenu@textCursor2
  2367  004710  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2368  004712  ECCC  F026         	call	_Lcd_Write_String	;wreg free
  2369  004716                     
  2370                           ;fs_menu_controller.c: 322:     if (menu_flags.menu_start_flag == 1)
  2371  004716  0101               	movlb	1	; () banked
  2372  004718  0598               	decf	(_menu_flags+1)& (0+255),w,b
  2373  00471A  A4D8               	btfss	status,2,c
  2374  00471C  EF92  F023         	goto	u7311
  2375  004720  EF94  F023         	goto	u7310
  2376  004724                     u7311:
  2377  004724  EFA4  F023         	goto	l6166
  2378  004728                     u7310:
  2379  004728                     
  2380                           ; BSR set to: 1
  2381                           ;fs_menu_controller.c: 323:     {;fs_menu_controller.c: 324:         menu_flags.menu_sta
      +                          rt_flag = 0;
  2382  004728  0E00               	movlw	0
  2383  00472A  6F98               	movwf	(_menu_flags+1)& (0+255),b
  2384                           
  2385                           ;fs_menu_controller.c: 325:         menu_selected = START_MENU;
  2386  00472C  0E05               	movlw	5
  2387  00472E  0100               	movlb	0	; () banked
  2388  004730  6FFB               	movwf	_menu_selected& (0+255),b
  2389                           
  2390                           ;fs_menu_controller.c: 327:         startIsClick = 1;
  2391  004732  0E01               	movlw	1
  2392  004734  6FFE               	movwf	_startIsClick& (0+255),b
  2393                           
  2394                           ;fs_menu_controller.c: 328:         pauseIsClick = 0;
  2395  004736  0E00               	movlw	0
  2396  004738  6FFF               	movwf	_pauseIsClick& (0+255),b
  2397                           
  2398                           ;fs_menu_controller.c: 329:         stopIsClick = 0;
  2399  00473A  0E00               	movlw	0
  2400  00473C  6FFD               	movwf	_stopIsClick& (0+255),b
  2401                           
  2402                           ;fs_menu_controller.c: 330:         timer_value.second = 0;
  2403  00473E  0E00               	movlw	0
  2404  004740  0101               	movlb	1	; () banked
  2405  004742  6F8F               	movwf	_timer_value& (0+255),b
  2406                           
  2407                           ;fs_menu_controller.c: 331:         timer_value.minute = 0;
  2408  004744  0E00               	movlw	0
  2409  004746  6F90               	movwf	(_timer_value+1)& (0+255),b
  2410  004748                     l6166:
  2411                           
  2412                           ; BSR set to: 1
  2413                           ;fs_menu_controller.c: 334:     if ( timer_value.menu_login_delay == 100)
  2414  004748  0E64               	movlw	100
  2415  00474A  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  2416  00474C  A4D8               	btfss	status,2,c
  2417  00474E  EFAB  F023         	goto	u7321
  2418  004752  EFAD  F023         	goto	u7320
  2419  004756                     u7321:
  2420  004756  EFB4  F023         	goto	l6170
  2421  00475A                     u7320:
  2422  00475A                     
  2423                           ; BSR set to: 1
  2424                           ;fs_menu_controller.c: 335:     {;fs_menu_controller.c: 336:         button_bounce_contr
      +                          oller.menu = 0;
  2425  00475A  0E00               	movlw	0
  2426  00475C  6F9D               	movwf	_button_bounce_controller& (0+255),b
  2427                           
  2428                           ;fs_menu_controller.c: 337:         timer_value.menu_login_delay = 0;
  2429  00475E  0E00               	movlw	0
  2430  004760  6F93               	movwf	(_timer_value+4)& (0+255),b
  2431                           
  2432                           ;fs_menu_controller.c: 338:         menu_selected = DRIVER_TIME_SETTING;
  2433  004762  0E01               	movlw	1
  2434  004764  0100               	movlb	0	; () banked
  2435  004766  6FFB               	movwf	_menu_selected& (0+255),b
  2436  004768                     l6170:
  2437                           
  2438                           ;fs_menu_controller.c: 340: stopMotor();
  2439  004768  EC6D  F02A         	call	_stopMotor	;wreg free
  2440  00476C  0012               	return		;funcret
  2441  00476E                     __end_of_stopMenu:
  2442                           	callstack 0
  2443                           
  2444 ;; *************** function _startMenu *****************
  2445 ;; Defined at:
  2446 ;;		line 404 in file "fs_menu_controller.c"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;		None
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;		None
  2451 ;; Return value:  Size  Location     Type
  2452 ;;                  1    wreg      void 
  2453 ;; Registers used:
  2454 ;;		wreg, status,2
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2460 ;;      Params:         0       0       0       0       0       0       0
  2461 ;;      Locals:         0       0       0       0       0       0       0
  2462 ;;      Temps:          0       0       0       0       0       0       0
  2463 ;;      Totals:         0       0       0       0       0       0       0
  2464 ;;Total ram usage:        0 bytes
  2465 ;; Hardware stack levels used:    1
  2466 ;; Hardware stack levels required when called:    1
  2467 ;; This function calls:
  2468 ;;		Nothing
  2469 ;; This function is called by:
  2470 ;;		_stateMachine
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474                           	psect	text6
  2475  005776                     __ptext6:
  2476                           	callstack 0
  2477  005776                     _startMenu:
  2478                           	callstack 27
  2479  005776                     
  2480                           ;fs_menu_controller.c: 406:     timer_value.remainingMinute = menu_value.driver_time;
  2481  005776  C0F3  F192         	movff	_menu_value,_timer_value+3
  2482  00577A                     
  2483                           ;fs_menu_controller.c: 407:     timer_value.remainingSecond = 0;
  2484  00577A  0E00               	movlw	0
  2485  00577C  0101               	movlb	1	; () banked
  2486  00577E  6F91               	movwf	(_timer_value+2)& (0+255),b
  2487                           
  2488                           ;fs_menu_controller.c: 408:     startIsClick = 1;
  2489  005780  0E01               	movlw	1
  2490  005782  0100               	movlb	0	; () banked
  2491  005784  6FFE               	movwf	_startIsClick& (0+255),b
  2492                           
  2493                           ;fs_menu_controller.c: 409:     stopIsClick = 0;
  2494  005786  0E00               	movlw	0
  2495  005788  6FFD               	movwf	_stopIsClick& (0+255),b
  2496                           
  2497                           ;fs_menu_controller.c: 410:     menu_selected = MAIN_MENU;
  2498  00578A  0E00               	movlw	0
  2499  00578C  6FFB               	movwf	_menu_selected& (0+255),b
  2500  00578E                     
  2501                           ; BSR set to: 0
  2502  00578E  0012               	return		;funcret
  2503  005790                     __end_of_startMenu:
  2504                           	callstack 0
  2505                           
  2506 ;; *************** function _speedLimitSettingMenu *****************
  2507 ;; Defined at:
  2508 ;;		line 492 in file "fs_menu_controller.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;		None
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  1    wreg      void 
  2515 ;; Registers used:
  2516 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2522 ;;      Params:         0       0       0       0       0       0       0
  2523 ;;      Locals:         0      16       0       0       0       0       0
  2524 ;;      Temps:          0       0       0       0       0       0       0
  2525 ;;      Totals:         0      16       0       0       0       0       0
  2526 ;;Total ram usage:       16 bytes
  2527 ;; Hardware stack levels used:    1
  2528 ;; Hardware stack levels required when called:    9
  2529 ;; This function calls:
  2530 ;;		_Lcd_Set_Cursor
  2531 ;;		_Lcd_Write_String
  2532 ;;		_eepromWrite
  2533 ;;		_sprintf
  2534 ;;		_stopMotor
  2535 ;; This function is called by:
  2536 ;;		_stateMachine
  2537 ;; This function uses a non-reentrant model
  2538 ;;
  2539                           
  2540                           	psect	text7
  2541  0041B6                     __ptext7:
  2542                           	callstack 0
  2543  0041B6                     _speedLimitSettingMenu:
  2544                           	callstack 19
  2545  0041B6                     
  2546                           ;fs_menu_controller.c: 494:     char textCursor2[16] = {0};
  2547  0041B6  EE20  F0E1         	lfsr	2,speedLimitSettingMenu@textCursor2
  2548  0041BA  0E0F               	movlw	15
  2549  0041BC                     u7231:
  2550  0041BC  6ADE               	clrf	postinc2,c
  2551  0041BE  06E8               	decf	wreg,f,c
  2552  0041C0  E2FD               	bc	u7231
  2553  0041C2                     
  2554                           ;fs_menu_controller.c: 495:     stopMotor();
  2555  0041C2  EC6D  F02A         	call	_stopMotor	;wreg free
  2556  0041C6                     
  2557                           ;fs_menu_controller.c: 497:     if (menu_flags.menu_input_flag == 1)
  2558  0041C6  0101               	movlb	1	; () banked
  2559  0041C8  0597               	decf	_menu_flags& (0+255),w,b
  2560  0041CA  A4D8               	btfss	status,2,c
  2561  0041CC  EFEA  F020         	goto	u7241
  2562  0041D0  EFEC  F020         	goto	u7240
  2563  0041D4                     u7241:
  2564  0041D4  EFF1  F020         	goto	l6106
  2565  0041D8                     u7240:
  2566  0041D8                     
  2567                           ; BSR set to: 1
  2568                           ;fs_menu_controller.c: 498:     {;fs_menu_controller.c: 499:         menu_flags.menu_inp
      +                          ut_flag = 0;
  2569  0041D8  0E00               	movlw	0
  2570  0041DA  6F97               	movwf	_menu_flags& (0+255),b
  2571                           
  2572                           ;fs_menu_controller.c: 500:         menu_selected = DRIVER_TIME_SETTING;
  2573  0041DC  0E01               	movlw	1
  2574  0041DE  0100               	movlb	0	; () banked
  2575  0041E0  6FFB               	movwf	_menu_selected& (0+255),b
  2576  0041E2                     l6106:
  2577                           
  2578                           ;fs_menu_controller.c: 503:     if ((menu_flags.menu_increase_flag == 1) && (menu_value.
      +                          speed_limit < 5))
  2579  0041E2  0101               	movlb	1	; () banked
  2580  0041E4  059B               	decf	(_menu_flags+4)& (0+255),w,b
  2581  0041E6  A4D8               	btfss	status,2,c
  2582  0041E8  EFF8  F020         	goto	u7251
  2583  0041EC  EFFA  F020         	goto	u7250
  2584  0041F0                     u7251:
  2585  0041F0  EF0D  F021         	goto	l6116
  2586  0041F4                     u7250:
  2587  0041F4                     
  2588                           ; BSR set to: 1
  2589  0041F4  0E05               	movlw	5
  2590  0041F6  0100               	movlb	0	; () banked
  2591  0041F8  61F5               	cpfslt	(_menu_value+2)& (0+255),b
  2592  0041FA  EF01  F021         	goto	u7261
  2593  0041FE  EF03  F021         	goto	u7260
  2594  004202                     u7261:
  2595  004202  EF0D  F021         	goto	l6116
  2596  004206                     u7260:
  2597  004206                     
  2598                           ; BSR set to: 0
  2599                           ;fs_menu_controller.c: 504:     {;fs_menu_controller.c: 505:         menu_flags.menu_inc
      +                          rease_flag = 0;
  2600  004206  0E00               	movlw	0
  2601  004208  0101               	movlb	1	; () banked
  2602  00420A  6F9B               	movwf	(_menu_flags+4)& (0+255),b
  2603  00420C                     
  2604                           ; BSR set to: 1
  2605                           ;fs_menu_controller.c: 506:         menu_value.speed_limit += 1;
  2606  00420C  0100               	movlb	0	; () banked
  2607  00420E  2BF5               	incf	(_menu_value+2)& (0+255),f,b
  2608  004210                     
  2609                           ; BSR set to: 0
  2610                           ;fs_menu_controller.c: 507:         eepromWrite(0x02,menu_value.speed_limit);
  2611  004210  C0F5  F001         	movff	_menu_value+2,eepromWrite@data
  2612  004214  0E02               	movlw	2
  2613  004216  EC4B  F02B         	call	_eepromWrite
  2614  00421A                     l6116:
  2615                           
  2616                           ;fs_menu_controller.c: 510:     if ((menu_flags.menu_decrease_flag == 1) && (menu_value.
      +                          speed_limit > 1))
  2617  00421A  0101               	movlb	1	; () banked
  2618  00421C  059C               	decf	(_menu_flags+5)& (0+255),w,b
  2619  00421E  A4D8               	btfss	status,2,c
  2620  004220  EF14  F021         	goto	u7271
  2621  004224  EF16  F021         	goto	u7270
  2622  004228                     u7271:
  2623  004228  EF29  F021         	goto	l6126
  2624  00422C                     u7270:
  2625  00422C                     
  2626                           ; BSR set to: 1
  2627  00422C  0E01               	movlw	1
  2628  00422E  0100               	movlb	0	; () banked
  2629  004230  65F5               	cpfsgt	(_menu_value+2)& (0+255),b
  2630  004232  EF1D  F021         	goto	u7281
  2631  004236  EF1F  F021         	goto	u7280
  2632  00423A                     u7281:
  2633  00423A  EF29  F021         	goto	l6126
  2634  00423E                     u7280:
  2635  00423E                     
  2636                           ; BSR set to: 0
  2637                           ;fs_menu_controller.c: 511:     {;fs_menu_controller.c: 512:          menu_flags.menu_de
      +                          crease_flag = 0;
  2638  00423E  0E00               	movlw	0
  2639  004240  0101               	movlb	1	; () banked
  2640  004242  6F9C               	movwf	(_menu_flags+5)& (0+255),b
  2641  004244                     
  2642                           ; BSR set to: 1
  2643                           ;fs_menu_controller.c: 513:          menu_value.speed_limit -= 1;
  2644  004244  0100               	movlb	0	; () banked
  2645  004246  07F5               	decf	(_menu_value+2)& (0+255),f,b
  2646  004248                     
  2647                           ; BSR set to: 0
  2648                           ;fs_menu_controller.c: 514:          eepromWrite(0x02,menu_value.speed_limit);
  2649  004248  C0F5  F001         	movff	_menu_value+2,eepromWrite@data
  2650  00424C  0E02               	movlw	2
  2651  00424E  EC4B  F02B         	call	_eepromWrite
  2652  004252                     l6126:
  2653                           
  2654                           ;fs_menu_controller.c: 516:     Lcd_Set_Cursor(1,1);
  2655  004252  0E01               	movlw	1
  2656  004254  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2657  004256  0E01               	movlw	1
  2658  004258  EC2A  F028         	call	_Lcd_Set_Cursor
  2659  00425C                     
  2660                           ;fs_menu_controller.c: 517:     Lcd_Write_String("HIZ LiMiTi      ");
  2661  00425C  0E1A               	movlw	low STR_13
  2662  00425E  6E05               	movwf	Lcd_Write_String@a^0,c
  2663  004260  0E7F               	movlw	high STR_13
  2664  004262  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2665  004264  ECCC  F026         	call	_Lcd_Write_String	;wreg free
  2666  004268                     
  2667                           ;fs_menu_controller.c: 518:     Lcd_Set_Cursor(2,1);
  2668  004268  0E01               	movlw	1
  2669  00426A  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2670  00426C  0E02               	movlw	2
  2671  00426E  EC2A  F028         	call	_Lcd_Set_Cursor
  2672  004272                     
  2673                           ;fs_menu_controller.c: 519:     sprintf(textCursor2,"%d               ",menu_value.speed
      +                          _limit);
  2674  004272  0EE1               	movlw	low speedLimitSettingMenu@textCursor2
  2675  004274  0100               	movlb	0	; () banked
  2676  004276  6FCF               	movwf	sprintf@s& (0+255),b
  2677  004278  0E00               	movlw	high speedLimitSettingMenu@textCursor2
  2678  00427A  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2679  00427C  0EF7               	movlw	low STR_14
  2680  00427E  6FD1               	movwf	sprintf@fmt& (0+255),b
  2681  004280  0E7E               	movlw	high STR_14
  2682  004282  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2683  004284  C0F5  F0D3         	movff	_menu_value+2,?_sprintf+4
  2684  004288  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  2685  00428A  EC12  F029         	call	_sprintf	;wreg free
  2686  00428E                     
  2687                           ;fs_menu_controller.c: 520:     Lcd_Write_String(textCursor2);
  2688  00428E  0EE1               	movlw	low speedLimitSettingMenu@textCursor2
  2689  004290  6E05               	movwf	Lcd_Write_String@a^0,c
  2690  004292  0E00               	movlw	high speedLimitSettingMenu@textCursor2
  2691  004294  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2692  004296  ECCC  F026         	call	_Lcd_Write_String	;wreg free
  2693  00429A                     
  2694                           ;fs_menu_controller.c: 522:     if(timer_value.menu_login_delay == 100)
  2695  00429A  0E64               	movlw	100
  2696  00429C  0101               	movlb	1	; () banked
  2697  00429E  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  2698  0042A0  A4D8               	btfss	status,2,c
  2699  0042A2  EF55  F021         	goto	u7291
  2700  0042A6  EF57  F021         	goto	u7290
  2701  0042AA                     u7291:
  2702  0042AA  EF5E  F021         	goto	l500
  2703  0042AE                     u7290:
  2704  0042AE                     
  2705                           ; BSR set to: 1
  2706                           ;fs_menu_controller.c: 523:     {;fs_menu_controller.c: 524:         button_bounce_contr
      +                          oller.menu = 0;
  2707  0042AE  0E00               	movlw	0
  2708  0042B0  6F9D               	movwf	_button_bounce_controller& (0+255),b
  2709                           
  2710                           ;fs_menu_controller.c: 525:         timer_value.menu_login_delay = 0;
  2711  0042B2  0E00               	movlw	0
  2712  0042B4  6F93               	movwf	(_timer_value+4)& (0+255),b
  2713                           
  2714                           ;fs_menu_controller.c: 526:         menu_selected = PAUSE_MENU;
  2715  0042B6  0E06               	movlw	6
  2716  0042B8  0100               	movlb	0	; () banked
  2717  0042BA  6FFB               	movwf	_menu_selected& (0+255),b
  2718  0042BC                     l500:
  2719  0042BC  0012               	return		;funcret
  2720  0042BE                     __end_of_speedLimitSettingMenu:
  2721                           	callstack 0
  2722                           
  2723 ;; *************** function _secretMenu *****************
  2724 ;; Defined at:
  2725 ;;		line 419 in file "fs_menu_controller.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;		None
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  2730 ;; Return value:  Size  Location     Type
  2731 ;;                  1    wreg      void 
  2732 ;; Registers used:
  2733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2734 ;; Tracked objects:
  2735 ;;		On entry : 0/0
  2736 ;;		On exit  : 0/0
  2737 ;;		Unchanged: 0/0
  2738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2739 ;;      Params:         0       0       0       0       0       0       0
  2740 ;;      Locals:         0      16       0       0       0       0       0
  2741 ;;      Temps:          0       0       0       0       0       0       0
  2742 ;;      Totals:         0      16       0       0       0       0       0
  2743 ;;Total ram usage:       16 bytes
  2744 ;; Hardware stack levels used:    1
  2745 ;; Hardware stack levels required when called:    9
  2746 ;; This function calls:
  2747 ;;		_Lcd_Set_Cursor
  2748 ;;		_Lcd_Write_String
  2749 ;;		___fladd
  2750 ;;		___flge
  2751 ;;		___flsub
  2752 ;;		_sprintf
  2753 ;;		_stopMotor
  2754 ;; This function is called by:
  2755 ;;		_stateMachine
  2756 ;; This function uses a non-reentrant model
  2757 ;;
  2758                           
  2759                           	psect	text8
  2760  002CE0                     __ptext8:
  2761                           	callstack 0
  2762  002CE0                     _secretMenu:
  2763                           	callstack 19
  2764  002CE0                     
  2765                           ;fs_menu_controller.c: 421:     char textCursor2[16] = {0};
  2766  002CE0  EE20  F0E1         	lfsr	2,secretMenu@textCursor2
  2767  002CE4  0E0F               	movlw	15
  2768  002CE6                     u7421:
  2769  002CE6  6ADE               	clrf	postinc2,c
  2770  002CE8  06E8               	decf	wreg,f,c
  2771  002CEA  E2FD               	bc	u7421
  2772  002CEC                     
  2773                           ;fs_menu_controller.c: 423:     stopMotor();
  2774  002CEC  EC6D  F02A         	call	_stopMotor	;wreg free
  2775  002CF0                     
  2776                           ;fs_menu_controller.c: 425:     if (menu_flags.menu_input_flag == 1)
  2777  002CF0  0101               	movlb	1	; () banked
  2778  002CF2  0597               	decf	_menu_flags& (0+255),w,b
  2779  002CF4  A4D8               	btfss	status,2,c
  2780  002CF6  EF7F  F016         	goto	u7431
  2781  002CFA  EF81  F016         	goto	u7430
  2782  002CFE                     u7431:
  2783  002CFE  EF8F  F016         	goto	l6230
  2784  002D02                     u7430:
  2785  002D02                     
  2786                           ; BSR set to: 1
  2787                           ;fs_menu_controller.c: 426:     {;fs_menu_controller.c: 427:         menu_flags.menu_inp
      +                          ut_flag = 0;
  2788  002D02  0E00               	movlw	0
  2789  002D04  6F97               	movwf	_menu_flags& (0+255),b
  2790  002D06                     
  2791                           ; BSR set to: 1
  2792                           ;fs_menu_controller.c: 428:         secretMenuCounter++;
  2793  002D06  0100               	movlb	0	; () banked
  2794  002D08  2BFC               	incf	_secretMenuCounter& (0+255),f,b
  2795  002D0A                     
  2796                           ; BSR set to: 0
  2797                           ;fs_menu_controller.c: 430:         if (secretMenuCounter >2)
  2798  002D0A  0E02               	movlw	2
  2799  002D0C  65FC               	cpfsgt	_secretMenuCounter& (0+255),b
  2800  002D0E  EF8B  F016         	goto	u7441
  2801  002D12  EF8D  F016         	goto	u7440
  2802  002D16                     u7441:
  2803  002D16  EF8F  F016         	goto	l6230
  2804  002D1A                     u7440:
  2805  002D1A                     
  2806                           ; BSR set to: 0
  2807                           ;fs_menu_controller.c: 431:         {;fs_menu_controller.c: 432:             secretMenuC
      +                          ounter = 1;
  2808  002D1A  0E01               	movlw	1
  2809  002D1C  6FFC               	movwf	_secretMenuCounter& (0+255),b
  2810  002D1E                     l6230:
  2811                           
  2812                           ;fs_menu_controller.c: 436:     if (secretMenuCounter == 1)
  2813  002D1E  0100               	movlb	0	; () banked
  2814  002D20  05FC               	decf	_secretMenuCounter& (0+255),w,b
  2815  002D22  A4D8               	btfss	status,2,c
  2816  002D24  EF96  F016         	goto	u7451
  2817  002D28  EF98  F016         	goto	u7450
  2818  002D2C                     u7451:
  2819  002D2C  EF2C  F017         	goto	l6258
  2820  002D30                     u7450:
  2821  002D30                     
  2822                           ; BSR set to: 0
  2823                           ;fs_menu_controller.c: 437:     {;fs_menu_controller.c: 438:         Lcd_Set_Cursor(1,1)
      +                          ;
  2824  002D30  0E01               	movlw	1
  2825  002D32  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2826  002D34  0E01               	movlw	1
  2827  002D36  EC2A  F028         	call	_Lcd_Set_Cursor
  2828  002D3A                     
  2829                           ;fs_menu_controller.c: 439:         Lcd_Write_String("PID PARAM       ");
  2830  002D3A  0E09               	movlw	low STR_9
  2831  002D3C  6E05               	movwf	Lcd_Write_String@a^0,c
  2832  002D3E  0E7F               	movlw	high STR_9
  2833  002D40  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2834  002D42  ECCC  F026         	call	_Lcd_Write_String	;wreg free
  2835  002D46                     
  2836                           ;fs_menu_controller.c: 440:         Lcd_Set_Cursor(2,1);
  2837  002D46  0E01               	movlw	1
  2838  002D48  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2839  002D4A  0E02               	movlw	2
  2840  002D4C  EC2A  F028         	call	_Lcd_Set_Cursor
  2841  002D50                     
  2842                           ;fs_menu_controller.c: 441:         sprintf(textCursor2,"Kp:%5.1f     ",KP);
  2843  002D50  0EE1               	movlw	low secretMenu@textCursor2
  2844  002D52  0100               	movlb	0	; () banked
  2845  002D54  6FCF               	movwf	sprintf@s& (0+255),b
  2846  002D56  0E00               	movlw	high secretMenu@textCursor2
  2847  002D58  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2848  002D5A  0ED0               	movlw	low STR_10
  2849  002D5C  6FD1               	movwf	sprintf@fmt& (0+255),b
  2850  002D5E  0E7F               	movlw	high STR_10
  2851  002D60  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2852  002D62  C1CF  F0D3         	movff	_KP@fs_speed_controller$F1842,?_sprintf+4
  2853  002D66  C1D0  F0D4         	movff	_KP@fs_speed_controller$F1842+1,?_sprintf+5
  2854  002D6A  C1D1  F0D5         	movff	_KP@fs_speed_controller$F1842+2,?_sprintf+6
  2855  002D6E  C1D2  F0D6         	movff	_KP@fs_speed_controller$F1842+3,?_sprintf+7
  2856  002D72  EC12  F029         	call	_sprintf	;wreg free
  2857  002D76                     
  2858                           ;fs_menu_controller.c: 442:         Lcd_Write_String(textCursor2);
  2859  002D76  0EE1               	movlw	low secretMenu@textCursor2
  2860  002D78  6E05               	movwf	Lcd_Write_String@a^0,c
  2861  002D7A  0E00               	movlw	high secretMenu@textCursor2
  2862  002D7C  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2863  002D7E  ECCC  F026         	call	_Lcd_Write_String	;wreg free
  2864  002D82                     
  2865                           ;fs_menu_controller.c: 444:         if ((menu_flags.menu_increase_flag == 1) && (KP < 2.
      +                          5))
  2866  002D82  0101               	movlb	1	; () banked
  2867  002D84  059B               	decf	(_menu_flags+4)& (0+255),w,b
  2868  002D86  A4D8               	btfss	status,2,c
  2869  002D88  EFC8  F016         	goto	u7461
  2870  002D8C  EFCA  F016         	goto	u7460
  2871  002D90                     u7461:
  2872  002D90  EF00  F017         	goto	l6250
  2873  002D94                     u7460:
  2874  002D94                     
  2875                           ; BSR set to: 1
  2876  002D94  C1CF  F035         	movff	_KP@fs_speed_controller$F1842,___flge@ff1
  2877  002D98  C1D0  F036         	movff	_KP@fs_speed_controller$F1842+1,___flge@ff1+1
  2878  002D9C  C1D1  F037         	movff	_KP@fs_speed_controller$F1842+2,___flge@ff1+2
  2879  002DA0  C1D2  F038         	movff	_KP@fs_speed_controller$F1842+3,___flge@ff1+3
  2880  002DA4  0E00               	movlw	0
  2881  002DA6  6E39               	movwf	___flge@ff2^0,c
  2882  002DA8  0E00               	movlw	0
  2883  002DAA  6E3A               	movwf	(___flge@ff2+1)^0,c
  2884  002DAC  0E20               	movlw	32
  2885  002DAE  6E3B               	movwf	(___flge@ff2+2)^0,c
  2886  002DB0  0E40               	movlw	64
  2887  002DB2  6E3C               	movwf	(___flge@ff2+3)^0,c
  2888  002DB4  ECE2  F021         	call	___flge	;wreg free
  2889  002DB8  B0D8               	btfsc	status,0,c
  2890  002DBA  EFE1  F016         	goto	u7471
  2891  002DBE  EFE3  F016         	goto	u7470
  2892  002DC2                     u7471:
  2893  002DC2  EF00  F017         	goto	l6250
  2894  002DC6                     u7470:
  2895  002DC6                     
  2896                           ;fs_menu_controller.c: 445:         {;fs_menu_controller.c: 446:             menu_flags.
      +                          menu_increase_flag = 0;
  2897  002DC6  0E00               	movlw	0
  2898  002DC8  0101               	movlb	1	; () banked
  2899  002DCA  6F9B               	movwf	(_menu_flags+4)& (0+255),b
  2900  002DCC                     
  2901                           ; BSR set to: 1
  2902                           ;fs_menu_controller.c: 447:             KP += 0.1;
  2903  002DCC  C1CF  F035         	movff	_KP@fs_speed_controller$F1842,___fladd@b
  2904  002DD0  C1D0  F036         	movff	_KP@fs_speed_controller$F1842+1,___fladd@b+1
  2905  002DD4  C1D1  F037         	movff	_KP@fs_speed_controller$F1842+2,___fladd@b+2
  2906  002DD8  C1D2  F038         	movff	_KP@fs_speed_controller$F1842+3,___fladd@b+3
  2907  002DDC  0ECD               	movlw	205
  2908  002DDE  6E39               	movwf	___fladd@a^0,c
  2909  002DE0  0ECC               	movlw	204
  2910  002DE2  6E3A               	movwf	(___fladd@a+1)^0,c
  2911  002DE4  0ECC               	movlw	204
  2912  002DE6  6E3B               	movwf	(___fladd@a+2)^0,c
  2913  002DE8  0E3D               	movlw	61
  2914  002DEA  6E3C               	movwf	(___fladd@a+3)^0,c
  2915  002DEC  EC49  F00D         	call	___fladd	;wreg free
  2916  002DF0  C035  F1CF         	movff	?___fladd,_KP@fs_speed_controller$F1842
  2917  002DF4  C036  F1D0         	movff	?___fladd+1,_KP@fs_speed_controller$F1842+1
  2918  002DF8  C037  F1D1         	movff	?___fladd+2,_KP@fs_speed_controller$F1842+2
  2919  002DFC  C038  F1D2         	movff	?___fladd+3,_KP@fs_speed_controller$F1842+3
  2920  002E00                     l6250:
  2921                           
  2922                           ;fs_menu_controller.c: 450:         if ((menu_flags.menu_decrease_flag == 1) && (KP >= 0
      +                          ))
  2923  002E00  0101               	movlb	1	; () banked
  2924  002E02  059C               	decf	(_menu_flags+5)& (0+255),w,b
  2925  002E04  A4D8               	btfss	status,2,c
  2926  002E06  EF07  F017         	goto	u7481
  2927  002E0A  EF09  F017         	goto	u7480
  2928  002E0E                     u7481:
  2929  002E0E  EF2C  F017         	goto	l6258
  2930  002E12                     u7480:
  2931  002E12                     
  2932                           ; BSR set to: 1
  2933  002E12  BFD2               	btfsc	(_KP@fs_speed_controller$F1842+3)& (0+255),7,b
  2934  002E14  EF0E  F017         	goto	u7491
  2935  002E18  EF10  F017         	goto	u7490
  2936  002E1C                     u7491:
  2937  002E1C  EF2C  F017         	goto	l6258
  2938  002E20                     u7490:
  2939  002E20                     
  2940                           ; BSR set to: 1
  2941                           ;fs_menu_controller.c: 451:         {;fs_menu_controller.c: 452:             menu_flags.
      +                          menu_decrease_flag = 0;
  2942  002E20  0E00               	movlw	0
  2943  002E22  6F9C               	movwf	(_menu_flags+5)& (0+255),b
  2944  002E24                     
  2945                           ; BSR set to: 1
  2946                           ;fs_menu_controller.c: 453:              KP -= 0.1;
  2947  002E24  C1CF  F045         	movff	_KP@fs_speed_controller$F1842,___flsub@b
  2948  002E28  C1D0  F046         	movff	_KP@fs_speed_controller$F1842+1,___flsub@b+1
  2949  002E2C  C1D1  F047         	movff	_KP@fs_speed_controller$F1842+2,___flsub@b+2
  2950  002E30  C1D2  F048         	movff	_KP@fs_speed_controller$F1842+3,___flsub@b+3
  2951  002E34  0ECD               	movlw	205
  2952  002E36  6E49               	movwf	___flsub@a^0,c
  2953  002E38  0ECC               	movlw	204
  2954  002E3A  6E4A               	movwf	(___flsub@a+1)^0,c
  2955  002E3C  0ECC               	movlw	204
  2956  002E3E  6E4B               	movwf	(___flsub@a+2)^0,c
  2957  002E40  0E3D               	movlw	61
  2958  002E42  6E4C               	movwf	(___flsub@a+3)^0,c
  2959  002E44  EC89  F029         	call	___flsub	;wreg free
  2960  002E48  C045  F1CF         	movff	?___flsub,_KP@fs_speed_controller$F1842
  2961  002E4C  C046  F1D0         	movff	?___flsub+1,_KP@fs_speed_controller$F1842+1
  2962  002E50  C047  F1D1         	movff	?___flsub+2,_KP@fs_speed_controller$F1842+2
  2963  002E54  C048  F1D2         	movff	?___flsub+3,_KP@fs_speed_controller$F1842+3
  2964  002E58                     l6258:
  2965                           
  2966                           ;fs_menu_controller.c: 457:     if (secretMenuCounter == 2)
  2967  002E58  0E02               	movlw	2
  2968  002E5A  0100               	movlb	0	; () banked
  2969  002E5C  19FC               	xorwf	_secretMenuCounter& (0+255),w,b
  2970  002E5E  A4D8               	btfss	status,2,c
  2971  002E60  EF34  F017         	goto	u7501
  2972  002E64  EF36  F017         	goto	u7500
  2973  002E68                     u7501:
  2974  002E68  EFCA  F017         	goto	l6286
  2975  002E6C                     u7500:
  2976  002E6C                     
  2977                           ; BSR set to: 0
  2978                           ;fs_menu_controller.c: 458:     {;fs_menu_controller.c: 459:         Lcd_Set_Cursor(1,1)
      +                          ;
  2979  002E6C  0E01               	movlw	1
  2980  002E6E  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2981  002E70  0E01               	movlw	1
  2982  002E72  EC2A  F028         	call	_Lcd_Set_Cursor
  2983  002E76                     
  2984                           ;fs_menu_controller.c: 460:         Lcd_Write_String("PID PARAM       ");
  2985  002E76  0E09               	movlw	low STR_9
  2986  002E78  6E05               	movwf	Lcd_Write_String@a^0,c
  2987  002E7A  0E7F               	movlw	high STR_9
  2988  002E7C  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2989  002E7E  ECCC  F026         	call	_Lcd_Write_String	;wreg free
  2990  002E82                     
  2991                           ;fs_menu_controller.c: 461:         Lcd_Set_Cursor(2,1);
  2992  002E82  0E01               	movlw	1
  2993  002E84  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2994  002E86  0E02               	movlw	2
  2995  002E88  EC2A  F028         	call	_Lcd_Set_Cursor
  2996  002E8C                     
  2997                           ;fs_menu_controller.c: 462:         sprintf(textCursor2,"Kd:%5.1f    ",KD);
  2998  002E8C  0EE1               	movlw	low secretMenu@textCursor2
  2999  002E8E  0100               	movlb	0	; () banked
  3000  002E90  6FCF               	movwf	sprintf@s& (0+255),b
  3001  002E92  0E00               	movlw	high secretMenu@textCursor2
  3002  002E94  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3003  002E96  0EDE               	movlw	low STR_12
  3004  002E98  6FD1               	movwf	sprintf@fmt& (0+255),b
  3005  002E9A  0E7F               	movlw	high STR_12
  3006  002E9C  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3007  002E9E  C1CB  F0D3         	movff	_KD@fs_speed_controller$F1843,?_sprintf+4
  3008  002EA2  C1CC  F0D4         	movff	_KD@fs_speed_controller$F1843+1,?_sprintf+5
  3009  002EA6  C1CD  F0D5         	movff	_KD@fs_speed_controller$F1843+2,?_sprintf+6
  3010  002EAA  C1CE  F0D6         	movff	_KD@fs_speed_controller$F1843+3,?_sprintf+7
  3011  002EAE  EC12  F029         	call	_sprintf	;wreg free
  3012  002EB2                     
  3013                           ;fs_menu_controller.c: 463:         Lcd_Write_String(textCursor2);
  3014  002EB2  0EE1               	movlw	low secretMenu@textCursor2
  3015  002EB4  6E05               	movwf	Lcd_Write_String@a^0,c
  3016  002EB6  0E00               	movlw	high secretMenu@textCursor2
  3017  002EB8  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3018  002EBA  ECCC  F026         	call	_Lcd_Write_String	;wreg free
  3019  002EBE                     
  3020                           ;fs_menu_controller.c: 465:         if ((menu_flags.menu_increase_flag == 1) && (KD < 2.
      +                          5))
  3021  002EBE  0101               	movlb	1	; () banked
  3022  002EC0  059B               	decf	(_menu_flags+4)& (0+255),w,b
  3023  002EC2  A4D8               	btfss	status,2,c
  3024  002EC4  EF66  F017         	goto	u7511
  3025  002EC8  EF68  F017         	goto	u7510
  3026  002ECC                     u7511:
  3027  002ECC  EF9E  F017         	goto	l6278
  3028  002ED0                     u7510:
  3029  002ED0                     
  3030                           ; BSR set to: 1
  3031  002ED0  C1CB  F035         	movff	_KD@fs_speed_controller$F1843,___flge@ff1
  3032  002ED4  C1CC  F036         	movff	_KD@fs_speed_controller$F1843+1,___flge@ff1+1
  3033  002ED8  C1CD  F037         	movff	_KD@fs_speed_controller$F1843+2,___flge@ff1+2
  3034  002EDC  C1CE  F038         	movff	_KD@fs_speed_controller$F1843+3,___flge@ff1+3
  3035  002EE0  0E00               	movlw	0
  3036  002EE2  6E39               	movwf	___flge@ff2^0,c
  3037  002EE4  0E00               	movlw	0
  3038  002EE6  6E3A               	movwf	(___flge@ff2+1)^0,c
  3039  002EE8  0E20               	movlw	32
  3040  002EEA  6E3B               	movwf	(___flge@ff2+2)^0,c
  3041  002EEC  0E40               	movlw	64
  3042  002EEE  6E3C               	movwf	(___flge@ff2+3)^0,c
  3043  002EF0  ECE2  F021         	call	___flge	;wreg free
  3044  002EF4  B0D8               	btfsc	status,0,c
  3045  002EF6  EF7F  F017         	goto	u7521
  3046  002EFA  EF81  F017         	goto	u7520
  3047  002EFE                     u7521:
  3048  002EFE  EF9E  F017         	goto	l6278
  3049  002F02                     u7520:
  3050  002F02                     
  3051                           ;fs_menu_controller.c: 466:         {;fs_menu_controller.c: 467:             menu_flags.
      +                          menu_increase_flag = 0;
  3052  002F02  0E00               	movlw	0
  3053  002F04  0101               	movlb	1	; () banked
  3054  002F06  6F9B               	movwf	(_menu_flags+4)& (0+255),b
  3055  002F08                     
  3056                           ; BSR set to: 1
  3057                           ;fs_menu_controller.c: 468:             KD += 0.1;
  3058  002F08  C1CB  F035         	movff	_KD@fs_speed_controller$F1843,___fladd@b
  3059  002F0C  C1CC  F036         	movff	_KD@fs_speed_controller$F1843+1,___fladd@b+1
  3060  002F10  C1CD  F037         	movff	_KD@fs_speed_controller$F1843+2,___fladd@b+2
  3061  002F14  C1CE  F038         	movff	_KD@fs_speed_controller$F1843+3,___fladd@b+3
  3062  002F18  0ECD               	movlw	205
  3063  002F1A  6E39               	movwf	___fladd@a^0,c
  3064  002F1C  0ECC               	movlw	204
  3065  002F1E  6E3A               	movwf	(___fladd@a+1)^0,c
  3066  002F20  0ECC               	movlw	204
  3067  002F22  6E3B               	movwf	(___fladd@a+2)^0,c
  3068  002F24  0E3D               	movlw	61
  3069  002F26  6E3C               	movwf	(___fladd@a+3)^0,c
  3070  002F28  EC49  F00D         	call	___fladd	;wreg free
  3071  002F2C  C035  F1CB         	movff	?___fladd,_KD@fs_speed_controller$F1843
  3072  002F30  C036  F1CC         	movff	?___fladd+1,_KD@fs_speed_controller$F1843+1
  3073  002F34  C037  F1CD         	movff	?___fladd+2,_KD@fs_speed_controller$F1843+2
  3074  002F38  C038  F1CE         	movff	?___fladd+3,_KD@fs_speed_controller$F1843+3
  3075  002F3C                     l6278:
  3076                           
  3077                           ;fs_menu_controller.c: 471:         if ((menu_flags.menu_decrease_flag == 1) && (KD >= 0
      +                          ))
  3078  002F3C  0101               	movlb	1	; () banked
  3079  002F3E  059C               	decf	(_menu_flags+5)& (0+255),w,b
  3080  002F40  A4D8               	btfss	status,2,c
  3081  002F42  EFA5  F017         	goto	u7531
  3082  002F46  EFA7  F017         	goto	u7530
  3083  002F4A                     u7531:
  3084  002F4A  EFCA  F017         	goto	l6286
  3085  002F4E                     u7530:
  3086  002F4E                     
  3087                           ; BSR set to: 1
  3088  002F4E  BFCE               	btfsc	(_KD@fs_speed_controller$F1843+3)& (0+255),7,b
  3089  002F50  EFAC  F017         	goto	u7541
  3090  002F54  EFAE  F017         	goto	u7540
  3091  002F58                     u7541:
  3092  002F58  EFCA  F017         	goto	l6286
  3093  002F5C                     u7540:
  3094  002F5C                     
  3095                           ; BSR set to: 1
  3096                           ;fs_menu_controller.c: 472:         {;fs_menu_controller.c: 473:             menu_flags.
      +                          menu_decrease_flag = 0;
  3097  002F5C  0E00               	movlw	0
  3098  002F5E  6F9C               	movwf	(_menu_flags+5)& (0+255),b
  3099  002F60                     
  3100                           ; BSR set to: 1
  3101                           ;fs_menu_controller.c: 474:              KD -= 0.1;
  3102  002F60  C1CB  F045         	movff	_KD@fs_speed_controller$F1843,___flsub@b
  3103  002F64  C1CC  F046         	movff	_KD@fs_speed_controller$F1843+1,___flsub@b+1
  3104  002F68  C1CD  F047         	movff	_KD@fs_speed_controller$F1843+2,___flsub@b+2
  3105  002F6C  C1CE  F048         	movff	_KD@fs_speed_controller$F1843+3,___flsub@b+3
  3106  002F70  0ECD               	movlw	205
  3107  002F72  6E49               	movwf	___flsub@a^0,c
  3108  002F74  0ECC               	movlw	204
  3109  002F76  6E4A               	movwf	(___flsub@a+1)^0,c
  3110  002F78  0ECC               	movlw	204
  3111  002F7A  6E4B               	movwf	(___flsub@a+2)^0,c
  3112  002F7C  0E3D               	movlw	61
  3113  002F7E  6E4C               	movwf	(___flsub@a+3)^0,c
  3114  002F80  EC89  F029         	call	___flsub	;wreg free
  3115  002F84  C045  F1CB         	movff	?___flsub,_KD@fs_speed_controller$F1843
  3116  002F88  C046  F1CC         	movff	?___flsub+1,_KD@fs_speed_controller$F1843+1
  3117  002F8C  C047  F1CD         	movff	?___flsub+2,_KD@fs_speed_controller$F1843+2
  3118  002F90  C048  F1CE         	movff	?___flsub+3,_KD@fs_speed_controller$F1843+3
  3119  002F94                     l6286:
  3120                           
  3121                           ;fs_menu_controller.c: 478:     if ( timer_value.menu_login_delay == 100)
  3122  002F94  0E64               	movlw	100
  3123  002F96  0101               	movlb	1	; () banked
  3124  002F98  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  3125  002F9A  A4D8               	btfss	status,2,c
  3126  002F9C  EFD2  F017         	goto	u7551
  3127  002FA0  EFD4  F017         	goto	u7550
  3128  002FA4                     u7551:
  3129  002FA4  EFDB  F017         	goto	l491
  3130  002FA8                     u7550:
  3131  002FA8                     
  3132                           ; BSR set to: 1
  3133                           ;fs_menu_controller.c: 479:     {;fs_menu_controller.c: 480:         button_bounce_contr
      +                          oller.menu = 0;
  3134  002FA8  0E00               	movlw	0
  3135  002FAA  6F9D               	movwf	_button_bounce_controller& (0+255),b
  3136                           
  3137                           ;fs_menu_controller.c: 481:         timer_value.menu_login_delay = 0;
  3138  002FAC  0E00               	movlw	0
  3139  002FAE  6F93               	movwf	(_timer_value+4)& (0+255),b
  3140                           
  3141                           ;fs_menu_controller.c: 482:         menu_selected = PAUSE_MENU;
  3142  002FB0  0E06               	movlw	6
  3143  002FB2  0100               	movlb	0	; () banked
  3144  002FB4  6FFB               	movwf	_menu_selected& (0+255),b
  3145  002FB6                     l491:
  3146  002FB6  0012               	return		;funcret
  3147  002FB8                     __end_of_secretMenu:
  3148                           	callstack 0
  3149                           
  3150 ;; *************** function _pauseMenu *****************
  3151 ;; Defined at:
  3152 ;;		line 350 in file "fs_menu_controller.c"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;		None
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  1    wreg      void 
  3159 ;; Registers used:
  3160 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3166 ;;      Params:         0       0       0       0       0       0       0
  3167 ;;      Locals:         0      16       0       0       0       0       0
  3168 ;;      Temps:          0       0       0       0       0       0       0
  3169 ;;      Totals:         0      16       0       0       0       0       0
  3170 ;;Total ram usage:       16 bytes
  3171 ;; Hardware stack levels used:    1
  3172 ;; Hardware stack levels required when called:    9
  3173 ;; This function calls:
  3174 ;;		_Lcd_Set_Cursor
  3175 ;;		_Lcd_Write_String
  3176 ;;		_sprintf
  3177 ;;		_stopMotor
  3178 ;; This function is called by:
  3179 ;;		_stateMachine
  3180 ;; This function uses a non-reentrant model
  3181 ;;
  3182                           
  3183                           	psect	text9
  3184  003D24                     __ptext9:
  3185                           	callstack 0
  3186  003D24                     _pauseMenu:
  3187                           	callstack 19
  3188  003D24                     
  3189                           ;fs_menu_controller.c: 352:     char textCursor2[16] = {0};
  3190  003D24  EE20  F0E1         	lfsr	2,pauseMenu@textCursor2
  3191  003D28  0E0F               	movlw	15
  3192  003D2A                     u7331:
  3193  003D2A  6ADE               	clrf	postinc2,c
  3194  003D2C  06E8               	decf	wreg,f,c
  3195  003D2E  E2FD               	bc	u7331
  3196  003D30                     
  3197                           ;fs_menu_controller.c: 354:     startIsClick = 0;
  3198  003D30  0E00               	movlw	0
  3199  003D32  0100               	movlb	0	; () banked
  3200  003D34  6FFE               	movwf	_startIsClick& (0+255),b
  3201  003D36                     
  3202                           ; BSR set to: 0
  3203                           ;fs_menu_controller.c: 358:     Lcd_Set_Cursor(1,1);
  3204  003D36  0E01               	movlw	1
  3205  003D38  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3206  003D3A  0E01               	movlw	1
  3207  003D3C  EC2A  F028         	call	_Lcd_Set_Cursor
  3208  003D40                     
  3209                           ;fs_menu_controller.c: 359:     Lcd_Write_String("HAREKET DURDU   ");
  3210  003D40  0E4D               	movlw	low STR_7
  3211  003D42  6E05               	movwf	Lcd_Write_String@a^0,c
  3212  003D44  0E7F               	movlw	high STR_7
  3213  003D46  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3214  003D48  ECCC  F026         	call	_Lcd_Write_String	;wreg free
  3215  003D4C                     
  3216                           ;fs_menu_controller.c: 360:     Lcd_Set_Cursor(2,1);
  3217  003D4C  0E01               	movlw	1
  3218  003D4E  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3219  003D50  0E02               	movlw	2
  3220  003D52  EC2A  F028         	call	_Lcd_Set_Cursor
  3221  003D56                     
  3222                           ;fs_menu_controller.c: 361:     sprintf(textCursor2,"      %d:%d    ",timer_value.remain
      +                          ingMinute,timer_value.remainingSecond);
  3223  003D56  0EE1               	movlw	low pauseMenu@textCursor2
  3224  003D58  0100               	movlb	0	; () banked
  3225  003D5A  6FCF               	movwf	sprintf@s& (0+255),b
  3226  003D5C  0E00               	movlw	high pauseMenu@textCursor2
  3227  003D5E  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3228  003D60  0EA1               	movlw	low STR_6
  3229  003D62  6FD1               	movwf	sprintf@fmt& (0+255),b
  3230  003D64  0E7F               	movlw	high STR_6
  3231  003D66  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3232  003D68  0101               	movlb	1	; () banked
  3233  003D6A  5192               	movf	(_timer_value+3)& (0+255),w,b
  3234  003D6C  0100               	movlb	0	; () banked
  3235  003D6E  6FD3               	movwf	(?_sprintf+4)& (0+255),b
  3236  003D70  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  3237  003D72  BFD3               	btfsc	(?_sprintf+4)& (0+255),7,b
  3238  003D74  07D4               	decf	(?_sprintf+5)& (0+255),f,b
  3239  003D76  C191  F0D5         	movff	_timer_value+2,?_sprintf+6
  3240  003D7A  6BD6               	clrf	(?_sprintf+7)& (0+255),b
  3241  003D7C  EC12  F029         	call	_sprintf	;wreg free
  3242  003D80                     
  3243                           ;fs_menu_controller.c: 362:     Lcd_Write_String(textCursor2);
  3244  003D80  0EE1               	movlw	low pauseMenu@textCursor2
  3245  003D82  6E05               	movwf	Lcd_Write_String@a^0,c
  3246  003D84  0E00               	movlw	high pauseMenu@textCursor2
  3247  003D86  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3248  003D88  ECCC  F026         	call	_Lcd_Write_String	;wreg free
  3249  003D8C                     
  3250                           ;fs_menu_controller.c: 364:     if (menu_flags.menu_start_flag == 1)
  3251  003D8C  0101               	movlb	1	; () banked
  3252  003D8E  0598               	decf	(_menu_flags+1)& (0+255),w,b
  3253  003D90  A4D8               	btfss	status,2,c
  3254  003D92  EFCD  F01E         	goto	u7341
  3255  003D96  EFCF  F01E         	goto	u7340
  3256  003D9A                     u7341:
  3257  003D9A  EFDA  F01E         	goto	l470
  3258  003D9E                     u7340:
  3259  003D9E                     
  3260                           ; BSR set to: 1
  3261                           ;fs_menu_controller.c: 365:     {;fs_menu_controller.c: 366:         menu_flags.menu_sta
      +                          rt_flag = 0;
  3262  003D9E  0E00               	movlw	0
  3263  003DA0  6F98               	movwf	(_menu_flags+1)& (0+255),b
  3264                           
  3265                           ;fs_menu_controller.c: 367:         menu_selected = MAIN_MENU;
  3266  003DA2  0E00               	movlw	0
  3267  003DA4  0100               	movlb	0	; () banked
  3268  003DA6  6FFB               	movwf	_menu_selected& (0+255),b
  3269                           
  3270                           ;fs_menu_controller.c: 369:         startIsClick = 1;
  3271  003DA8  0E01               	movlw	1
  3272  003DAA  6FFE               	movwf	_startIsClick& (0+255),b
  3273                           
  3274                           ;fs_menu_controller.c: 370:         pauseIsClick = 0;
  3275  003DAC  0E00               	movlw	0
  3276  003DAE  6FFF               	movwf	_pauseIsClick& (0+255),b
  3277                           
  3278                           ;fs_menu_controller.c: 371:         stopIsClick = 0;
  3279  003DB0  0E00               	movlw	0
  3280  003DB2  6FFD               	movwf	_stopIsClick& (0+255),b
  3281  003DB4                     l470:
  3282                           
  3283                           ;fs_menu_controller.c: 374:     if ( (startIsClick == 0) && (pauseIsClick == 0) && (stop
      +                          IsClick == 1) && (menu_selected == PAUSE_MENU))
  3284  003DB4  0100               	movlb	0	; () banked
  3285  003DB6  51FE               	movf	_startIsClick& (0+255),w,b
  3286  003DB8  A4D8               	btfss	status,2,c
  3287  003DBA  EFE1  F01E         	goto	u7351
  3288  003DBE  EFE3  F01E         	goto	u7350
  3289  003DC2                     u7351:
  3290  003DC2  EF05  F01F         	goto	l6204
  3291  003DC6                     u7350:
  3292  003DC6                     
  3293                           ; BSR set to: 0
  3294  003DC6  51FF               	movf	_pauseIsClick& (0+255),w,b
  3295  003DC8  A4D8               	btfss	status,2,c
  3296  003DCA  EFE9  F01E         	goto	u7361
  3297  003DCE  EFEB  F01E         	goto	u7360
  3298  003DD2                     u7361:
  3299  003DD2  EF05  F01F         	goto	l6204
  3300  003DD6                     u7360:
  3301  003DD6                     
  3302                           ; BSR set to: 0
  3303  003DD6  05FD               	decf	_stopIsClick& (0+255),w,b
  3304  003DD8  A4D8               	btfss	status,2,c
  3305  003DDA  EFF1  F01E         	goto	u7371
  3306  003DDE  EFF3  F01E         	goto	u7370
  3307  003DE2                     u7371:
  3308  003DE2  EF05  F01F         	goto	l6204
  3309  003DE6                     u7370:
  3310  003DE6                     
  3311                           ; BSR set to: 0
  3312  003DE6  0E06               	movlw	6
  3313  003DE8  19FB               	xorwf	_menu_selected& (0+255),w,b
  3314  003DEA  A4D8               	btfss	status,2,c
  3315  003DEC  EFFA  F01E         	goto	u7381
  3316  003DF0  EFFC  F01E         	goto	u7380
  3317  003DF4                     u7381:
  3318  003DF4  EF05  F01F         	goto	l6204
  3319  003DF8                     u7380:
  3320  003DF8                     
  3321                           ; BSR set to: 0
  3322                           ;fs_menu_controller.c: 375:     {;fs_menu_controller.c: 376:          timer_value.remain
      +                          ingMinute = menu_value.driver_time;
  3323  003DF8  C0F3  F192         	movff	_menu_value,_timer_value+3
  3324  003DFC                     
  3325                           ; BSR set to: 0
  3326                           ;fs_menu_controller.c: 377:          timer_value.remainingSecond = 0;
  3327  003DFC  0E00               	movlw	0
  3328  003DFE  0101               	movlb	1	; () banked
  3329  003E00  6F91               	movwf	(_timer_value+2)& (0+255),b
  3330                           
  3331                           ;fs_menu_controller.c: 378:          timer_value.second = 0;
  3332  003E02  0E00               	movlw	0
  3333  003E04  6F8F               	movwf	_timer_value& (0+255),b
  3334                           
  3335                           ;fs_menu_controller.c: 379:          timer_value.minute = 0;
  3336  003E06  0E00               	movlw	0
  3337  003E08  6F90               	movwf	(_timer_value+1)& (0+255),b
  3338  003E0A                     l6204:
  3339                           
  3340                           ;fs_menu_controller.c: 382:     if ( timer_value.menu_login_delay == 100)
  3341  003E0A  0E64               	movlw	100
  3342  003E0C  0101               	movlb	1	; () banked
  3343  003E0E  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  3344  003E10  A4D8               	btfss	status,2,c
  3345  003E12  EF0D  F01F         	goto	u7391
  3346  003E16  EF0F  F01F         	goto	u7390
  3347  003E1A                     u7391:
  3348  003E1A  EF16  F01F         	goto	l6208
  3349  003E1E                     u7390:
  3350  003E1E                     
  3351                           ; BSR set to: 1
  3352                           ;fs_menu_controller.c: 383:     {;fs_menu_controller.c: 384:         button_bounce_contr
      +                          oller.menu = 0;
  3353  003E1E  0E00               	movlw	0
  3354  003E20  6F9D               	movwf	_button_bounce_controller& (0+255),b
  3355                           
  3356                           ;fs_menu_controller.c: 385:         timer_value.menu_login_delay = 0;
  3357  003E22  0E00               	movlw	0
  3358  003E24  6F93               	movwf	(_timer_value+4)& (0+255),b
  3359                           
  3360                           ;fs_menu_controller.c: 386:         menu_selected = DRIVER_TIME_SETTING;
  3361  003E26  0E01               	movlw	1
  3362  003E28  0100               	movlb	0	; () banked
  3363  003E2A  6FFB               	movwf	_menu_selected& (0+255),b
  3364  003E2C                     l6208:
  3365                           
  3366                           ;fs_menu_controller.c: 389:     if ((menu_flags.menu_increase_flag == 1) && (menu_flags.
      +                          menu_decrease_flag == 1))
  3367  003E2C  0101               	movlb	1	; () banked
  3368  003E2E  059B               	decf	(_menu_flags+4)& (0+255),w,b
  3369  003E30  A4D8               	btfss	status,2,c
  3370  003E32  EF1D  F01F         	goto	u7401
  3371  003E36  EF1F  F01F         	goto	u7400
  3372  003E3A                     u7401:
  3373  003E3A  EF2C  F01F         	goto	l6214
  3374  003E3E                     u7400:
  3375  003E3E                     
  3376                           ; BSR set to: 1
  3377  003E3E  059C               	decf	(_menu_flags+5)& (0+255),w,b
  3378  003E40  A4D8               	btfss	status,2,c
  3379  003E42  EF25  F01F         	goto	u7411
  3380  003E46  EF27  F01F         	goto	u7410
  3381  003E4A                     u7411:
  3382  003E4A  EF2C  F01F         	goto	l6214
  3383  003E4E                     u7410:
  3384  003E4E                     
  3385                           ; BSR set to: 1
  3386                           ;fs_menu_controller.c: 390:     {;fs_menu_controller.c: 391:         menu_selected = SEC
      +                          RET_MENU;
  3387  003E4E  0E08               	movlw	8
  3388  003E50  0100               	movlb	0	; () banked
  3389  003E52  6FFB               	movwf	_menu_selected& (0+255),b
  3390                           
  3391                           ;fs_menu_controller.c: 392:         secretMenuCounter = 1;
  3392  003E54  0E01               	movlw	1
  3393  003E56  6FFC               	movwf	_secretMenuCounter& (0+255),b
  3394  003E58                     l6214:
  3395                           
  3396                           ;fs_menu_controller.c: 394:     stopMotor();
  3397  003E58  EC6D  F02A         	call	_stopMotor	;wreg free
  3398  003E5C  0012               	return		;funcret
  3399  003E5E                     __end_of_pauseMenu:
  3400                           	callstack 0
  3401                           
  3402 ;; *************** function _mainMenu *****************
  3403 ;; Defined at:
  3404 ;;		line 245 in file "fs_menu_controller.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;		None
  3407 ;; Auto vars:     Size  Location     Type
  3408 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  3409 ;; Return value:  Size  Location     Type
  3410 ;;                  1    wreg      void 
  3411 ;; Registers used:
  3412 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3413 ;; Tracked objects:
  3414 ;;		On entry : 0/0
  3415 ;;		On exit  : 0/0
  3416 ;;		Unchanged: 0/0
  3417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3418 ;;      Params:         0       0       0       0       0       0       0
  3419 ;;      Locals:         0      16       0       0       0       0       0
  3420 ;;      Temps:          0       0       0       0       0       0       0
  3421 ;;      Totals:         0      16       0       0       0       0       0
  3422 ;;Total ram usage:       16 bytes
  3423 ;; Hardware stack levels used:    1
  3424 ;; Hardware stack levels required when called:    9
  3425 ;; This function calls:
  3426 ;;		_Lcd_Set_Cursor
  3427 ;;		_Lcd_Write_String
  3428 ;;		_sprintf
  3429 ;;		_startMotor
  3430 ;; This function is called by:
  3431 ;;		_stateMachine
  3432 ;; This function uses a non-reentrant model
  3433 ;;
  3434                           
  3435                           	psect	text10
  3436  00370C                     __ptext10:
  3437                           	callstack 0
  3438  00370C                     _mainMenu:
  3439                           	callstack 19
  3440  00370C                     
  3441                           ;fs_menu_controller.c: 247:     char textCursor2[16] = {0};
  3442  00370C  EE20  F0E1         	lfsr	2,mainMenu@textCursor2
  3443  003710  0E0F               	movlw	15
  3444  003712                     u6941:
  3445  003712  6ADE               	clrf	postinc2,c
  3446  003714  06E8               	decf	wreg,f,c
  3447  003716  E2FD               	bc	u6941
  3448  003718                     
  3449                           ;fs_menu_controller.c: 249:     Lcd_Set_Cursor(1,1);
  3450  003718  0E01               	movlw	1
  3451  00371A  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3452  00371C  0E01               	movlw	1
  3453  00371E  EC2A  F028         	call	_Lcd_Set_Cursor
  3454  003722                     
  3455                           ;fs_menu_controller.c: 250:     Lcd_Write_String("KALAN ZAMAN     ");
  3456  003722  0E2B               	movlw	low STR_3
  3457  003724  6E05               	movwf	Lcd_Write_String@a^0,c
  3458  003726  0E7F               	movlw	high STR_3
  3459  003728  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3460  00372A  ECCC  F026         	call	_Lcd_Write_String	;wreg free
  3461  00372E                     
  3462                           ;fs_menu_controller.c: 251:     Lcd_Set_Cursor(2,1);
  3463  00372E  0E01               	movlw	1
  3464  003730  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3465  003732  0E02               	movlw	2
  3466  003734  EC2A  F028         	call	_Lcd_Set_Cursor
  3467  003738                     
  3468                           ;fs_menu_controller.c: 252:     sprintf(textCursor2,"      %d:%d   ",timer_value.remaini
      +                          ngMinute,timer_value.remainingSecond);
  3469  003738  0EE1               	movlw	low mainMenu@textCursor2
  3470  00373A  0100               	movlb	0	; () banked
  3471  00373C  6FCF               	movwf	sprintf@s& (0+255),b
  3472  00373E  0E00               	movlw	high mainMenu@textCursor2
  3473  003740  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3474  003742  0EC1               	movlw	low STR_4
  3475  003744  6FD1               	movwf	sprintf@fmt& (0+255),b
  3476  003746  0E7F               	movlw	high STR_4
  3477  003748  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3478  00374A  0101               	movlb	1	; () banked
  3479  00374C  5192               	movf	(_timer_value+3)& (0+255),w,b
  3480  00374E  0100               	movlb	0	; () banked
  3481  003750  6FD3               	movwf	(?_sprintf+4)& (0+255),b
  3482  003752  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  3483  003754  BFD3               	btfsc	(?_sprintf+4)& (0+255),7,b
  3484  003756  07D4               	decf	(?_sprintf+5)& (0+255),f,b
  3485  003758  C191  F0D5         	movff	_timer_value+2,?_sprintf+6
  3486  00375C  6BD6               	clrf	(?_sprintf+7)& (0+255),b
  3487  00375E  EC12  F029         	call	_sprintf	;wreg free
  3488  003762                     
  3489                           ;fs_menu_controller.c: 253:     Lcd_Write_String(textCursor2);
  3490  003762  0EE1               	movlw	low mainMenu@textCursor2
  3491  003764  6E05               	movwf	Lcd_Write_String@a^0,c
  3492  003766  0E00               	movlw	high mainMenu@textCursor2
  3493  003768  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3494  00376A  ECCC  F026         	call	_Lcd_Write_String	;wreg free
  3495  00376E                     
  3496                           ;fs_menu_controller.c: 255:     if ( timer_value.menu_login_delay == 100)
  3497  00376E  0E64               	movlw	100
  3498  003770  0101               	movlb	1	; () banked
  3499  003772  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  3500  003774  A4D8               	btfss	status,2,c
  3501  003776  EFBF  F01B         	goto	u6951
  3502  00377A  EFC1  F01B         	goto	u6950
  3503  00377E                     u6951:
  3504  00377E  EFC8  F01B         	goto	l5950
  3505  003782                     u6950:
  3506  003782                     
  3507                           ; BSR set to: 1
  3508                           ;fs_menu_controller.c: 256:     {;fs_menu_controller.c: 257:         button_bounce_contr
      +                          oller.menu = 0;
  3509  003782  0E00               	movlw	0
  3510  003784  6F9D               	movwf	_button_bounce_controller& (0+255),b
  3511                           
  3512                           ;fs_menu_controller.c: 258:         timer_value.menu_login_delay = 0;
  3513  003786  0E00               	movlw	0
  3514  003788  6F93               	movwf	(_timer_value+4)& (0+255),b
  3515                           
  3516                           ;fs_menu_controller.c: 259:         menu_selected = DRIVER_TIME_SETTING;
  3517  00378A  0E01               	movlw	1
  3518  00378C  0100               	movlb	0	; () banked
  3519  00378E  6FFB               	movwf	_menu_selected& (0+255),b
  3520  003790                     l5950:
  3521                           
  3522                           ;fs_menu_controller.c: 262:     if ((timer_value.remainingMinute <= 0) && (timer_value.r
      +                          emainingSecond == 0) )
  3523  003790  0101               	movlb	1	; () banked
  3524  003792  5192               	movf	(_timer_value+3)& (0+255),w,b
  3525  003794  0A80               	xorlw	128
  3526  003796  0F7F               	addlw	-129
  3527  003798  B0D8               	btfsc	status,0,c
  3528  00379A  EFD1  F01B         	goto	u6961
  3529  00379E  EFD3  F01B         	goto	u6960
  3530  0037A2                     u6961:
  3531  0037A2  EFE1  F01B         	goto	l454
  3532  0037A6                     u6960:
  3533  0037A6                     
  3534                           ; BSR set to: 1
  3535  0037A6  5191               	movf	(_timer_value+2)& (0+255),w,b
  3536  0037A8  A4D8               	btfss	status,2,c
  3537  0037AA  EFD9  F01B         	goto	u6971
  3538  0037AE  EFDB  F01B         	goto	u6970
  3539  0037B2                     u6971:
  3540  0037B2  EFE1  F01B         	goto	l454
  3541  0037B6                     u6970:
  3542  0037B6                     
  3543                           ; BSR set to: 1
  3544                           ;fs_menu_controller.c: 263:     {;fs_menu_controller.c: 264:             menu_selected =
      +                           STOP_MENU;
  3545  0037B6  0E04               	movlw	4
  3546  0037B8  0100               	movlb	0	; () banked
  3547  0037BA  6FFB               	movwf	_menu_selected& (0+255),b
  3548                           
  3549                           ;fs_menu_controller.c: 265:             timer_value.minute = 0;
  3550  0037BC  0E00               	movlw	0
  3551  0037BE  0101               	movlb	1	; () banked
  3552  0037C0  6F90               	movwf	(_timer_value+1)& (0+255),b
  3553  0037C2                     l454:
  3554                           
  3555                           ; BSR set to: 1
  3556                           ;fs_menu_controller.c: 268:     if ( (startIsClick == 0) && (pauseIsClick == 1) && (stop
      +                          IsClick == 0) && (menu_selected == MAIN_MENU))
  3557  0037C2  0100               	movlb	0	; () banked
  3558  0037C4  51FE               	movf	_startIsClick& (0+255),w,b
  3559  0037C6  A4D8               	btfss	status,2,c
  3560  0037C8  EFE8  F01B         	goto	u6981
  3561  0037CC  EFEA  F01B         	goto	u6980
  3562  0037D0                     u6981:
  3563  0037D0  EF09  F01C         	goto	l455
  3564  0037D4                     u6980:
  3565  0037D4                     
  3566                           ; BSR set to: 0
  3567  0037D4  05FF               	decf	_pauseIsClick& (0+255),w,b
  3568  0037D6  A4D8               	btfss	status,2,c
  3569  0037D8  EFF0  F01B         	goto	u6991
  3570  0037DC  EFF2  F01B         	goto	u6990
  3571  0037E0                     u6991:
  3572  0037E0  EF09  F01C         	goto	l455
  3573  0037E4                     u6990:
  3574  0037E4                     
  3575                           ; BSR set to: 0
  3576  0037E4  51FD               	movf	_stopIsClick& (0+255),w,b
  3577  0037E6  A4D8               	btfss	status,2,c
  3578  0037E8  EFF8  F01B         	goto	u7001
  3579  0037EC  EFFA  F01B         	goto	u7000
  3580  0037F0                     u7001:
  3581  0037F0  EF09  F01C         	goto	l455
  3582  0037F4                     u7000:
  3583  0037F4                     
  3584                           ; BSR set to: 0
  3585  0037F4  51FB               	movf	_menu_selected& (0+255),w,b
  3586  0037F6  A4D8               	btfss	status,2,c
  3587  0037F8  EF00  F01C         	goto	u7011
  3588  0037FC  EF02  F01C         	goto	u7010
  3589  003800                     u7011:
  3590  003800  EF09  F01C         	goto	l455
  3591  003804                     u7010:
  3592  003804                     
  3593                           ; BSR set to: 0
  3594                           ;fs_menu_controller.c: 269:     {;fs_menu_controller.c: 270:         menu_selected = PAU
      +                          SE_MENU;
  3595  003804  0E06               	movlw	6
  3596  003806  6FFB               	movwf	_menu_selected& (0+255),b
  3597  003808                     
  3598                           ; BSR set to: 0
  3599                           ;fs_menu_controller.c: 271:         LATDbits.LATD5 = 0;
  3600  003808  9A8C               	bcf	140,5,c	;volatile
  3601  00380A                     
  3602                           ; BSR set to: 0
  3603                           ;fs_menu_controller.c: 272:         LATCbits.LATC5 = 0;
  3604  00380A  9A8B               	bcf	139,5,c	;volatile
  3605  00380C                     
  3606                           ; BSR set to: 0
  3607                           ;fs_menu_controller.c: 273:         LATCbits.LATC4 = 0;
  3608  00380C  988B               	bcf	139,4,c	;volatile
  3609                           
  3610                           ;fs_menu_controller.c: 274:         startIsClick = 0;
  3611  00380E  0E00               	movlw	0
  3612  003810  6FFE               	movwf	_startIsClick& (0+255),b
  3613  003812                     l455:
  3614                           
  3615                           ; BSR set to: 0
  3616                           ;fs_menu_controller.c: 277:     if ( (startIsClick == 0) && (pauseIsClick == 0) && (stop
      +                          IsClick == 1) && (menu_selected == MAIN_MENU) )
  3617  003812  51FE               	movf	_startIsClick& (0+255),w,b
  3618  003814  A4D8               	btfss	status,2,c
  3619  003816  EF0F  F01C         	goto	u7021
  3620  00381A  EF11  F01C         	goto	u7020
  3621  00381E                     u7021:
  3622  00381E  EF35  F01C         	goto	l5986
  3623  003822                     u7020:
  3624  003822                     
  3625                           ; BSR set to: 0
  3626  003822  51FF               	movf	_pauseIsClick& (0+255),w,b
  3627  003824  A4D8               	btfss	status,2,c
  3628  003826  EF17  F01C         	goto	u7031
  3629  00382A  EF19  F01C         	goto	u7030
  3630  00382E                     u7031:
  3631  00382E  EF35  F01C         	goto	l5986
  3632  003832                     u7030:
  3633  003832                     
  3634                           ; BSR set to: 0
  3635  003832  05FD               	decf	_stopIsClick& (0+255),w,b
  3636  003834  A4D8               	btfss	status,2,c
  3637  003836  EF1F  F01C         	goto	u7041
  3638  00383A  EF21  F01C         	goto	u7040
  3639  00383E                     u7041:
  3640  00383E  EF35  F01C         	goto	l5986
  3641  003842                     u7040:
  3642  003842                     
  3643                           ; BSR set to: 0
  3644  003842  51FB               	movf	_menu_selected& (0+255),w,b
  3645  003844  A4D8               	btfss	status,2,c
  3646  003846  EF27  F01C         	goto	u7051
  3647  00384A  EF29  F01C         	goto	u7050
  3648  00384E                     u7051:
  3649  00384E  EF35  F01C         	goto	l5986
  3650  003852                     u7050:
  3651  003852                     
  3652                           ; BSR set to: 0
  3653                           ;fs_menu_controller.c: 278:     {;fs_menu_controller.c: 279:          timer_value.remain
      +                          ingMinute = menu_value.driver_time;
  3654  003852  C0F3  F192         	movff	_menu_value,_timer_value+3
  3655  003856                     
  3656                           ; BSR set to: 0
  3657                           ;fs_menu_controller.c: 280:          timer_value.remainingSecond = 0;
  3658  003856  0E00               	movlw	0
  3659  003858  0101               	movlb	1	; () banked
  3660  00385A  6F91               	movwf	(_timer_value+2)& (0+255),b
  3661                           
  3662                           ;fs_menu_controller.c: 281:          timer_value.second = 0;
  3663  00385C  0E00               	movlw	0
  3664  00385E  6F8F               	movwf	_timer_value& (0+255),b
  3665                           
  3666                           ;fs_menu_controller.c: 282:          timer_value.minute = 0;
  3667  003860  0E00               	movlw	0
  3668  003862  6F90               	movwf	(_timer_value+1)& (0+255),b
  3669  003864                     
  3670                           ; BSR set to: 1
  3671                           ;fs_menu_controller.c: 283:          LATDbits.LATD5 = 0;
  3672  003864  9A8C               	bcf	140,5,c	;volatile
  3673  003866                     
  3674                           ; BSR set to: 1
  3675                           ;fs_menu_controller.c: 284:          LATCbits.LATC5 = 0;
  3676  003866  9A8B               	bcf	139,5,c	;volatile
  3677  003868                     
  3678                           ; BSR set to: 1
  3679                           ;fs_menu_controller.c: 285:          LATCbits.LATC4 = 0;
  3680  003868  988B               	bcf	139,4,c	;volatile
  3681  00386A                     l5986:
  3682                           
  3683                           ;fs_menu_controller.c: 288:     if ( (startIsClick == 1) && (pauseIsClick == 0) && (stop
      +                          IsClick == 0) )
  3684  00386A  0100               	movlb	0	; () banked
  3685  00386C  05FE               	decf	_startIsClick& (0+255),w,b
  3686  00386E  A4D8               	btfss	status,2,c
  3687  003870  EF3C  F01C         	goto	u7061
  3688  003874  EF3E  F01C         	goto	u7060
  3689  003878                     u7061:
  3690  003878  EF53  F01C         	goto	l458
  3691  00387C                     u7060:
  3692  00387C                     
  3693                           ; BSR set to: 0
  3694  00387C  51FF               	movf	_pauseIsClick& (0+255),w,b
  3695  00387E  A4D8               	btfss	status,2,c
  3696  003880  EF44  F01C         	goto	u7071
  3697  003884  EF46  F01C         	goto	u7070
  3698  003888                     u7071:
  3699  003888  EF53  F01C         	goto	l458
  3700  00388C                     u7070:
  3701  00388C                     
  3702                           ; BSR set to: 0
  3703  00388C  51FD               	movf	_stopIsClick& (0+255),w,b
  3704  00388E  A4D8               	btfss	status,2,c
  3705  003890  EF4C  F01C         	goto	u7081
  3706  003894  EF4E  F01C         	goto	u7080
  3707  003898                     u7081:
  3708  003898  EF53  F01C         	goto	l458
  3709  00389C                     u7080:
  3710  00389C                     
  3711                           ; BSR set to: 0
  3712                           ;fs_menu_controller.c: 289:     {;fs_menu_controller.c: 290:         startMotor();
  3713  00389C  ECFB  F02A         	call	_startMotor	;wreg free
  3714  0038A0                     
  3715                           ;fs_menu_controller.c: 291:         LATDbits.LATD5 = 1;
  3716  0038A0  8A8C               	bsf	140,5,c	;volatile
  3717  0038A2                     
  3718                           ;fs_menu_controller.c: 292:         LATCbits.LATC5 = 1;
  3719  0038A2  8A8B               	bsf	139,5,c	;volatile
  3720  0038A4                     
  3721                           ;fs_menu_controller.c: 293:         LATCbits.LATC4 = 1;
  3722  0038A4  888B               	bsf	139,4,c	;volatile
  3723  0038A6                     l458:
  3724  0038A6  0012               	return		;funcret
  3725  0038A8                     __end_of_mainMenu:
  3726                           	callstack 0
  3727                           
  3728 ;; *************** function _startMotor *****************
  3729 ;; Defined at:
  3730 ;;		line 93 in file "fs_speed_controller.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;		None
  3733 ;; Auto vars:     Size  Location     Type
  3734 ;;		None
  3735 ;; Return value:  Size  Location     Type
  3736 ;;                  1    wreg      void 
  3737 ;; Registers used:
  3738 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3739 ;; Tracked objects:
  3740 ;;		On entry : 0/0
  3741 ;;		On exit  : 0/0
  3742 ;;		Unchanged: 0/0
  3743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3744 ;;      Params:         0       0       0       0       0       0       0
  3745 ;;      Locals:         0       0       0       0       0       0       0
  3746 ;;      Temps:          0       0       0       0       0       0       0
  3747 ;;      Totals:         0       0       0       0       0       0       0
  3748 ;;Total ram usage:        0 bytes
  3749 ;; Hardware stack levels used:    1
  3750 ;; Hardware stack levels required when called:    3
  3751 ;; This function calls:
  3752 ;;		_PWM1_setDC
  3753 ;;		_PWM2_setDC
  3754 ;;		_calculatedAverageValue
  3755 ;;		_scanAdcConversion
  3756 ;;		_speedControl
  3757 ;; This function is called by:
  3758 ;;		_mainMenu
  3759 ;; This function uses a non-reentrant model
  3760 ;;
  3761                           
  3762                           	psect	text11
  3763  0055F6                     __ptext11:
  3764                           	callstack 0
  3765  0055F6                     _startMotor:
  3766                           	callstack 24
  3767  0055F6                     
  3768                           ;fs_speed_controller.c: 95:         scanAdcConversion();
  3769  0055F6  EC27  F006         	call	_scanAdcConversion	;wreg free
  3770  0055FA                     
  3771                           ;fs_speed_controller.c: 96:         calculatedAverageValue();
  3772  0055FA  EC8B  F013         	call	_calculatedAverageValue	;wreg free
  3773  0055FE                     
  3774                           ;fs_speed_controller.c: 97:         speedControl(driver_limit.ortalama);
  3775  0055FE  C18B  F058         	movff	_driver_limit+8,speedControl@position
  3776  005602  C18C  F059         	movff	_driver_limit+9,speedControl@position+1
  3777  005606  C18D  F05A         	movff	_driver_limit+10,speedControl@position+2
  3778  00560A  C18E  F05B         	movff	_driver_limit+11,speedControl@position+3
  3779  00560E  ECCD  F019         	call	_speedControl	;wreg free
  3780                           
  3781                           ;fs_speed_controller.c: 98:         PWM1_setDC(controller.leftMotorSpeed);
  3782  005612  C156  F058         	movff	_controller+6,PWM1_setDC@dutycycle
  3783  005616  C157  F059         	movff	_controller+7,PWM1_setDC@dutycycle+1
  3784  00561A  EC48  F027         	call	_PWM1_setDC	;wreg free
  3785                           
  3786                           ;fs_speed_controller.c: 99:         PWM2_setDC(controller.rightMotorSpeed);
  3787  00561E  C158  F058         	movff	_controller+8,PWM2_setDC@dutycycle
  3788  005622  C159  F059         	movff	_controller+9,PWM2_setDC@dutycycle+1
  3789  005626  EC0B  F027         	call	_PWM2_setDC	;wreg free
  3790  00562A  0012               	return		;funcret
  3791  00562C                     __end_of_startMotor:
  3792                           	callstack 0
  3793                           
  3794 ;; *************** function _speedControl *****************
  3795 ;; Defined at:
  3796 ;;		line 36 in file "fs_speed_controller.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;  position        4   87[COMRAM] float 
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;  pos             4    0        float 
  3801 ;; Return value:  Size  Location     Type
  3802 ;;                  1    wreg      void 
  3803 ;; Registers used:
  3804 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3810 ;;      Params:         4       0       0       0       0       0       0
  3811 ;;      Locals:         0       4       0       0       0       0       0
  3812 ;;      Temps:          2       0       0       0       0       0       0
  3813 ;;      Totals:         6       4       0       0       0       0       0
  3814 ;;Total ram usage:       10 bytes
  3815 ;; Hardware stack levels used:    1
  3816 ;; Hardware stack levels required when called:    2
  3817 ;; This function calls:
  3818 ;;		___fladd
  3819 ;;		___flmul
  3820 ;;		___fltol
  3821 ;;		___xxtofl
  3822 ;; This function is called by:
  3823 ;;		_startMotor
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           	psect	text12
  3828  00339A                     __ptext12:
  3829                           	callstack 0
  3830  00339A                     _speedControl:
  3831                           	callstack 24
  3832  00339A                     
  3833                           ;fs_speed_controller.c: 42:     controller.error = (int16_t)(position - 3400.0);
  3834  00339A  0E00               	movlw	0
  3835  00339C  6E39               	movwf	___fladd@a^0,c
  3836  00339E  0E80               	movlw	128
  3837  0033A0  6E3A               	movwf	(___fladd@a+1)^0,c
  3838  0033A2  0E54               	movlw	84
  3839  0033A4  6E3B               	movwf	(___fladd@a+2)^0,c
  3840  0033A6  0EC5               	movlw	197
  3841  0033A8  6E3C               	movwf	(___fladd@a+3)^0,c
  3842  0033AA  C058  F035         	movff	speedControl@position,___fladd@b
  3843  0033AE  C059  F036         	movff	speedControl@position+1,___fladd@b+1
  3844  0033B2  C05A  F037         	movff	speedControl@position+2,___fladd@b+2
  3845  0033B6  C05B  F038         	movff	speedControl@position+3,___fladd@b+3
  3846  0033BA  EC49  F00D         	call	___fladd	;wreg free
  3847  0033BE  C035  F04E         	movff	?___fladd,___fltol@f1
  3848  0033C2  C036  F04F         	movff	?___fladd+1,___fltol@f1+1
  3849  0033C6  C037  F050         	movff	?___fladd+2,___fltol@f1+2
  3850  0033CA  C038  F051         	movff	?___fladd+3,___fltol@f1+3
  3851  0033CE  EC5F  F021         	call	___fltol	;wreg free
  3852  0033D2  C04E  F150         	movff	?___fltol,_controller
  3853  0033D6  C04F  F151         	movff	?___fltol+1,_controller+1
  3854  0033DA  0E00               	movlw	0
  3855  0033DC  6E20               	movwf	___flmul@a^0,c
  3856  0033DE  0E00               	movlw	0
  3857  0033E0  6E21               	movwf	(___flmul@a+1)^0,c
  3858  0033E2  0E80               	movlw	128
  3859  0033E4  6E22               	movwf	(___flmul@a+2)^0,c
  3860  0033E6  0E3F               	movlw	63
  3861  0033E8  6E23               	movwf	(___flmul@a+3)^0,c
  3862  0033EA  0101               	movlb	1	; () banked
  3863  0033EC  5152               	movf	(_controller+2)& (0+255),w,b
  3864  0033EE  5D50               	subwf	_controller& (0+255),w,b
  3865  0033F0  6E5C               	movwf	??_speedControl^0,c
  3866  0033F2  5153               	movf	(_controller+3)& (0+255),w,b
  3867  0033F4  5951               	subwfb	(_controller+1)& (0+255),w,b
  3868  0033F6  6E5D               	movwf	(??_speedControl+1)^0,c
  3869  0033F8  C05C  F00E         	movff	??_speedControl,___xxtofl@val
  3870  0033FC  C05D  F00F         	movff	??_speedControl+1,___xxtofl@val+1
  3871  003400  0E00               	movlw	0
  3872  003402  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  3873  003404  0EFF               	movlw	-1
  3874  003406  6E10               	movwf	(___xxtofl@val+2)^0,c
  3875  003408  6E11               	movwf	(___xxtofl@val+3)^0,c
  3876  00340A  0E01               	movlw	1
  3877  00340C  ECAC  F01A         	call	___xxtofl
  3878  003410  C00E  F01C         	movff	?___xxtofl,___flmul@b
  3879  003414  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  3880  003418  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  3881  00341C  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  3882  003420  ECA9  F00F         	call	___flmul	;wreg free
  3883  003424  C01C  F039         	movff	?___flmul,___fladd@a
  3884  003428  C01D  F03A         	movff	?___flmul+1,___fladd@a+1
  3885  00342C  C01E  F03B         	movff	?___flmul+2,___fladd@a+2
  3886  003430  C01F  F03C         	movff	?___flmul+3,___fladd@a+3
  3887  003434  0ECD               	movlw	205
  3888  003436  6E20               	movwf	___flmul@a^0,c
  3889  003438  0ECC               	movlw	204
  3890  00343A  6E21               	movwf	(___flmul@a+1)^0,c
  3891  00343C  0E4C               	movlw	76
  3892  00343E  6E22               	movwf	(___flmul@a+2)^0,c
  3893  003440  0E3E               	movlw	62
  3894  003442  6E23               	movwf	(___flmul@a+3)^0,c
  3895  003444  C150  F00E         	movff	_controller,___xxtofl@val
  3896  003448  C151  F00F         	movff	_controller+1,___xxtofl@val+1
  3897  00344C  0E00               	movlw	0
  3898  00344E  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  3899  003450  0EFF               	movlw	-1
  3900  003452  6E10               	movwf	(___xxtofl@val+2)^0,c
  3901  003454  6E11               	movwf	(___xxtofl@val+3)^0,c
  3902  003456  0E01               	movlw	1
  3903  003458  ECAC  F01A         	call	___xxtofl
  3904  00345C  C00E  F01C         	movff	?___xxtofl,___flmul@b
  3905  003460  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  3906  003464  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  3907  003468  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  3908  00346C  ECA9  F00F         	call	___flmul	;wreg free
  3909  003470  C01C  F035         	movff	?___flmul,___fladd@b
  3910  003474  C01D  F036         	movff	?___flmul+1,___fladd@b+1
  3911  003478  C01E  F037         	movff	?___flmul+2,___fladd@b+2
  3912  00347C  C01F  F038         	movff	?___flmul+3,___fladd@b+3
  3913  003480  EC49  F00D         	call	___fladd	;wreg free
  3914  003484  C035  F04E         	movff	?___fladd,___fltol@f1
  3915  003488  C036  F04F         	movff	?___fladd+1,___fltol@f1+1
  3916  00348C  C037  F050         	movff	?___fladd+2,___fltol@f1+2
  3917  003490  C038  F051         	movff	?___fladd+3,___fltol@f1+3
  3918  003494  EC5F  F021         	call	___fltol	;wreg free
  3919  003498  C04E  F154         	movff	?___fltol,_controller+4
  3920  00349C  C04F  F155         	movff	?___fltol+1,_controller+5
  3921  0034A0                     
  3922                           ;fs_speed_controller.c: 44:     controller.lastError = controller.error;
  3923  0034A0  C150  F152         	movff	_controller,_controller+2
  3924  0034A4  C151  F153         	movff	_controller+1,_controller+3
  3925  0034A8                     
  3926                           ;fs_speed_controller.c: 46:    controller.leftMotorSpeed =(int16_t) (200 + controller.mo
      +                          torSpeed + 70);
  3927  0034A8  0E0E               	movlw	14
  3928  0034AA  0101               	movlb	1	; () banked
  3929  0034AC  2554               	addwf	(_controller+4)& (0+255),w,b
  3930  0034AE  6F56               	movwf	(_controller+6)& (0+255),b
  3931  0034B0  0E01               	movlw	1
  3932  0034B2  2155               	addwfc	(_controller+5)& (0+255),w,b
  3933  0034B4  6F57               	movwf	(_controller+7)& (0+255),b
  3934  0034B6                     
  3935                           ; BSR set to: 1
  3936                           ;fs_speed_controller.c: 47:    controller.rightMotorSpeed =(int16_t) (200 - controller.m
      +                          otorSpeed);
  3937  0034B6  5154               	movf	(_controller+4)& (0+255),w,b
  3938  0034B8  08C8               	sublw	200
  3939  0034BA  6F58               	movwf	(_controller+8)& (0+255),b
  3940  0034BC  5155               	movf	(_controller+5)& (0+255),w,b
  3941  0034BE  A0D8               	btfss	status,0,c
  3942  0034C0  2AE8               	incf	wreg,f,c
  3943  0034C2  0800               	sublw	0
  3944  0034C4  6F59               	movwf	(_controller+9)& (0+255),b
  3945  0034C6                     
  3946                           ; BSR set to: 1
  3947                           ;fs_speed_controller.c: 49:     if (controller.leftMotorSpeed < 50)
  3948  0034C6  BF57               	btfsc	(_controller+7)& (0+255),7,b
  3949  0034C8  EF71  F01A         	goto	u6820
  3950  0034CC  5157               	movf	(_controller+7)& (0+255),w,b
  3951  0034CE  E107               	bnz	u6821
  3952  0034D0  0E32               	movlw	50
  3953  0034D2  5D56               	subwf	(_controller+6)& (0+255),w,b
  3954  0034D4  B0D8               	btfsc	status,0,c
  3955  0034D6  EF6F  F01A         	goto	u6821
  3956  0034DA  EF71  F01A         	goto	u6820
  3957  0034DE                     u6821:
  3958  0034DE  EF75  F01A         	goto	l5840
  3959  0034E2                     u6820:
  3960  0034E2                     
  3961                           ; BSR set to: 1
  3962                           ;fs_speed_controller.c: 50:     {;fs_speed_controller.c: 51:         controller.leftMoto
      +                          rSpeed = 50;
  3963  0034E2  0E00               	movlw	0
  3964  0034E4  6F57               	movwf	(_controller+7)& (0+255),b
  3965  0034E6  0E32               	movlw	50
  3966  0034E8  6F56               	movwf	(_controller+6)& (0+255),b
  3967  0034EA                     l5840:
  3968                           
  3969                           ; BSR set to: 1
  3970                           ;fs_speed_controller.c: 54:     if (controller.rightMotorSpeed < 50)
  3971  0034EA  BF59               	btfsc	(_controller+9)& (0+255),7,b
  3972  0034EC  EF83  F01A         	goto	u6830
  3973  0034F0  5159               	movf	(_controller+9)& (0+255),w,b
  3974  0034F2  E107               	bnz	u6831
  3975  0034F4  0E32               	movlw	50
  3976  0034F6  5D58               	subwf	(_controller+8)& (0+255),w,b
  3977  0034F8  B0D8               	btfsc	status,0,c
  3978  0034FA  EF81  F01A         	goto	u6831
  3979  0034FE  EF83  F01A         	goto	u6830
  3980  003502                     u6831:
  3981  003502  EF87  F01A         	goto	l5844
  3982  003506                     u6830:
  3983  003506                     
  3984                           ; BSR set to: 1
  3985                           ;fs_speed_controller.c: 55:     {;fs_speed_controller.c: 56:       controller.rightMotor
      +                          Speed = 50;
  3986  003506  0E00               	movlw	0
  3987  003508  6F59               	movwf	(_controller+9)& (0+255),b
  3988  00350A  0E32               	movlw	50
  3989  00350C  6F58               	movwf	(_controller+8)& (0+255),b
  3990  00350E                     l5844:
  3991                           
  3992                           ; BSR set to: 1
  3993                           ;fs_speed_controller.c: 59:     if (controller.leftMotorSpeed > 350)
  3994  00350E  BF57               	btfsc	(_controller+7)& (0+255),7,b
  3995  003510  EF93  F01A         	goto	u6841
  3996  003514  0E5F               	movlw	95
  3997  003516  5D56               	subwf	(_controller+6)& (0+255),w,b
  3998  003518  0E01               	movlw	1
  3999  00351A  5957               	subwfb	(_controller+7)& (0+255),w,b
  4000  00351C  A0D8               	btfss	status,0,c
  4001  00351E  EF93  F01A         	goto	u6841
  4002  003522  EF95  F01A         	goto	u6840
  4003  003526                     u6841:
  4004  003526  EF99  F01A         	goto	l5848
  4005  00352A                     u6840:
  4006  00352A                     
  4007                           ; BSR set to: 1
  4008                           ;fs_speed_controller.c: 60:    {;fs_speed_controller.c: 61:         controller.leftMotor
      +                          Speed = 350;
  4009  00352A  0E01               	movlw	1
  4010  00352C  6F57               	movwf	(_controller+7)& (0+255),b
  4011  00352E  0E5E               	movlw	94
  4012  003530  6F56               	movwf	(_controller+6)& (0+255),b
  4013  003532                     l5848:
  4014                           
  4015                           ; BSR set to: 1
  4016                           ;fs_speed_controller.c: 64:     if (controller.rightMotorSpeed > 350)
  4017  003532  BF59               	btfsc	(_controller+9)& (0+255),7,b
  4018  003534  EFA5  F01A         	goto	u6851
  4019  003538  0E5F               	movlw	95
  4020  00353A  5D58               	subwf	(_controller+8)& (0+255),w,b
  4021  00353C  0E01               	movlw	1
  4022  00353E  5959               	subwfb	(_controller+9)& (0+255),w,b
  4023  003540  A0D8               	btfss	status,0,c
  4024  003542  EFA5  F01A         	goto	u6851
  4025  003546  EFA7  F01A         	goto	u6850
  4026  00354A                     u6851:
  4027  00354A  EFAB  F01A         	goto	l633
  4028  00354E                     u6850:
  4029  00354E                     
  4030                           ; BSR set to: 1
  4031                           ;fs_speed_controller.c: 65:     {;fs_speed_controller.c: 66:         controller.rightMot
      +                          orSpeed = 350;
  4032  00354E  0E01               	movlw	1
  4033  003550  6F59               	movwf	(_controller+9)& (0+255),b
  4034  003552  0E5E               	movlw	94
  4035  003554  6F58               	movwf	(_controller+8)& (0+255),b
  4036  003556                     l633:
  4037                           
  4038                           ; BSR set to: 1
  4039  003556  0012               	return		;funcret
  4040  003558                     __end_of_speedControl:
  4041                           	callstack 0
  4042                           
  4043 ;; *************** function _scanAdcConversion *****************
  4044 ;; Defined at:
  4045 ;;		line 93 in file "fs_adc.c"
  4046 ;; Parameters:    Size  Location     Type
  4047 ;;		None
  4048 ;; Auto vars:     Size  Location     Type
  4049 ;;		None
  4050 ;; Return value:  Size  Location     Type
  4051 ;;                  1    wreg      void 
  4052 ;; Registers used:
  4053 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4054 ;; Tracked objects:
  4055 ;;		On entry : 0/0
  4056 ;;		On exit  : 0/0
  4057 ;;		Unchanged: 0/0
  4058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4059 ;;      Params:         0       0       0       0       0       0       0
  4060 ;;      Locals:         0       0       0       0       0       0       0
  4061 ;;      Temps:          2       0       0       0       0       0       0
  4062 ;;      Totals:         2       0       0       0       0       0       0
  4063 ;;Total ram usage:        2 bytes
  4064 ;; Hardware stack levels used:    1
  4065 ;; Hardware stack levels required when called:    2
  4066 ;; This function calls:
  4067 ;;		___fldiv
  4068 ;;		___flmul
  4069 ;;		___fltol
  4070 ;;		___xxtofl
  4071 ;;		_readAdcValue
  4072 ;; This function is called by:
  4073 ;;		_startMotor
  4074 ;; This function uses a non-reentrant model
  4075 ;;
  4076                           
  4077                           	psect	text13
  4078  000C4E                     __ptext13:
  4079                           	callstack 0
  4080  000C4E                     _scanAdcConversion:
  4081                           	callstack 24
  4082  000C4E                     
  4083                           ;fs_adc.c: 95:     switch(timer_value.adc_conversion_time)
  4084  000C4E  EFFB  F009         	goto	l5758
  4085  000C52                     l5706:
  4086                           
  4087                           ; BSR set to: 1
  4088                           ;fs_adc.c: 98:             adc_raw_data.channel_0 = readAdcValue(0);
  4089  000C52  0E00               	movlw	0
  4090  000C54  ECCE  F029         	call	_readAdcValue
  4091  000C58  C001  F173         	movff	?_readAdcValue,_adc_raw_data
  4092  000C5C  C002  F174         	movff	?_readAdcValue+1,_adc_raw_data+1
  4093  000C60                     
  4094                           ;fs_adc.c: 99:             procces_data.channel_0 = (float)((adc_raw_data.channel_0*5.0)
      +                          /1024.0);
  4095  000C60  0E00               	movlw	0
  4096  000C62  6E20               	movwf	___flmul@a^0,c
  4097  000C64  0E00               	movlw	0
  4098  000C66  6E21               	movwf	(___flmul@a+1)^0,c
  4099  000C68  0EA0               	movlw	160
  4100  000C6A  6E22               	movwf	(___flmul@a+2)^0,c
  4101  000C6C  0E40               	movlw	64
  4102  000C6E  6E23               	movwf	(___flmul@a+3)^0,c
  4103  000C70  C173  F00E         	movff	_adc_raw_data,___xxtofl@val
  4104  000C74  C174  F00F         	movff	_adc_raw_data+1,___xxtofl@val+1
  4105  000C78  6A10               	clrf	(___xxtofl@val+2)^0,c
  4106  000C7A  6A11               	clrf	(___xxtofl@val+3)^0,c
  4107  000C7C  0E00               	movlw	0
  4108  000C7E  ECAC  F01A         	call	___xxtofl
  4109  000C82  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4110  000C86  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4111  000C8A  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4112  000C8E  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4113  000C92  ECA9  F00F         	call	___flmul	;wreg free
  4114  000C96  C01C  F035         	movff	?___flmul,___fldiv@b
  4115  000C9A  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4116  000C9E  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4117  000CA2  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4118  000CA6  0E00               	movlw	0
  4119  000CA8  6E39               	movwf	___fldiv@a^0,c
  4120  000CAA  0E00               	movlw	0
  4121  000CAC  6E3A               	movwf	(___fldiv@a+1)^0,c
  4122  000CAE  0E80               	movlw	128
  4123  000CB0  6E3B               	movwf	(___fldiv@a+2)^0,c
  4124  000CB2  0E44               	movlw	68
  4125  000CB4  6E3C               	movwf	(___fldiv@a+3)^0,c
  4126  000CB6  ECBE  F011         	call	___fldiv	;wreg free
  4127  000CBA  C035  F130         	movff	?___fldiv,_procces_data
  4128  000CBE  C036  F131         	movff	?___fldiv+1,_procces_data+1
  4129  000CC2  C037  F132         	movff	?___fldiv+2,_procces_data+2
  4130  000CC6  C038  F133         	movff	?___fldiv+3,_procces_data+3
  4131  000CCA                     
  4132                           ;fs_adc.c: 100:             convert_data.convert_channel_0 = (uint32_t)((procces_data.ch
      +                          annel_0*999)/5);
  4133  000CCA  0E00               	movlw	0
  4134  000CCC  6E39               	movwf	___fldiv@a^0,c
  4135  000CCE  0E00               	movlw	0
  4136  000CD0  6E3A               	movwf	(___fldiv@a+1)^0,c
  4137  000CD2  0EA0               	movlw	160
  4138  000CD4  6E3B               	movwf	(___fldiv@a+2)^0,c
  4139  000CD6  0E40               	movlw	64
  4140  000CD8  6E3C               	movwf	(___fldiv@a+3)^0,c
  4141  000CDA  0E00               	movlw	0
  4142  000CDC  6E20               	movwf	___flmul@a^0,c
  4143  000CDE  0EC0               	movlw	192
  4144  000CE0  6E21               	movwf	(___flmul@a+1)^0,c
  4145  000CE2  0E79               	movlw	121
  4146  000CE4  6E22               	movwf	(___flmul@a+2)^0,c
  4147  000CE6  0E44               	movlw	68
  4148  000CE8  6E23               	movwf	(___flmul@a+3)^0,c
  4149  000CEA  C130  F01C         	movff	_procces_data,___flmul@b
  4150  000CEE  C131  F01D         	movff	_procces_data+1,___flmul@b+1
  4151  000CF2  C132  F01E         	movff	_procces_data+2,___flmul@b+2
  4152  000CF6  C133  F01F         	movff	_procces_data+3,___flmul@b+3
  4153  000CFA  ECA9  F00F         	call	___flmul	;wreg free
  4154  000CFE  C01C  F035         	movff	?___flmul,___fldiv@b
  4155  000D02  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4156  000D06  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4157  000D0A  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4158  000D0E  ECBE  F011         	call	___fldiv	;wreg free
  4159  000D12  C035  F04E         	movff	?___fldiv,___fltol@f1
  4160  000D16  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4161  000D1A  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4162  000D1E  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4163  000D22  EC5F  F021         	call	___fltol	;wreg free
  4164  000D26  C04E  F100         	movff	?___fltol,_convert_data
  4165  000D2A  C04F  F101         	movff	?___fltol+1,_convert_data+1
  4166  000D2E  C050  F102         	movff	?___fltol+2,_convert_data+2
  4167  000D32  C051  F103         	movff	?___fltol+3,_convert_data+3
  4168                           
  4169                           ;fs_adc.c: 101:         break;
  4170  000D36  EF29  F00A         	goto	l76
  4171  000D3A                     l5712:
  4172                           
  4173                           ; BSR set to: 1
  4174                           ;fs_adc.c: 104:             adc_raw_data.channel_1 = readAdcValue(1);
  4175  000D3A  0E01               	movlw	1
  4176  000D3C  ECCE  F029         	call	_readAdcValue
  4177  000D40  C001  F175         	movff	?_readAdcValue,_adc_raw_data+2
  4178  000D44  C002  F176         	movff	?_readAdcValue+1,_adc_raw_data+3
  4179  000D48                     
  4180                           ;fs_adc.c: 105:             procces_data.channel_1 = (float)((adc_raw_data.channel_1*5.0
      +                          )/1024.0);
  4181  000D48  0E00               	movlw	0
  4182  000D4A  6E20               	movwf	___flmul@a^0,c
  4183  000D4C  0E00               	movlw	0
  4184  000D4E  6E21               	movwf	(___flmul@a+1)^0,c
  4185  000D50  0EA0               	movlw	160
  4186  000D52  6E22               	movwf	(___flmul@a+2)^0,c
  4187  000D54  0E40               	movlw	64
  4188  000D56  6E23               	movwf	(___flmul@a+3)^0,c
  4189  000D58  C175  F00E         	movff	_adc_raw_data+2,___xxtofl@val
  4190  000D5C  C176  F00F         	movff	_adc_raw_data+3,___xxtofl@val+1
  4191  000D60  6A10               	clrf	(___xxtofl@val+2)^0,c
  4192  000D62  6A11               	clrf	(___xxtofl@val+3)^0,c
  4193  000D64  0E00               	movlw	0
  4194  000D66  ECAC  F01A         	call	___xxtofl
  4195  000D6A  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4196  000D6E  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4197  000D72  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4198  000D76  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4199  000D7A  ECA9  F00F         	call	___flmul	;wreg free
  4200  000D7E  C01C  F035         	movff	?___flmul,___fldiv@b
  4201  000D82  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4202  000D86  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4203  000D8A  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4204  000D8E  0E00               	movlw	0
  4205  000D90  6E39               	movwf	___fldiv@a^0,c
  4206  000D92  0E00               	movlw	0
  4207  000D94  6E3A               	movwf	(___fldiv@a+1)^0,c
  4208  000D96  0E80               	movlw	128
  4209  000D98  6E3B               	movwf	(___fldiv@a+2)^0,c
  4210  000D9A  0E44               	movlw	68
  4211  000D9C  6E3C               	movwf	(___fldiv@a+3)^0,c
  4212  000D9E  ECBE  F011         	call	___fldiv	;wreg free
  4213  000DA2  C035  F134         	movff	?___fldiv,_procces_data+4
  4214  000DA6  C036  F135         	movff	?___fldiv+1,_procces_data+5
  4215  000DAA  C037  F136         	movff	?___fldiv+2,_procces_data+6
  4216  000DAE  C038  F137         	movff	?___fldiv+3,_procces_data+7
  4217  000DB2                     
  4218                           ;fs_adc.c: 106:             convert_data.convert_channel_1 = (uint32_t)((procces_data.ch
      +                          annel_1*999)/5);
  4219  000DB2  0E00               	movlw	0
  4220  000DB4  6E39               	movwf	___fldiv@a^0,c
  4221  000DB6  0E00               	movlw	0
  4222  000DB8  6E3A               	movwf	(___fldiv@a+1)^0,c
  4223  000DBA  0EA0               	movlw	160
  4224  000DBC  6E3B               	movwf	(___fldiv@a+2)^0,c
  4225  000DBE  0E40               	movlw	64
  4226  000DC0  6E3C               	movwf	(___fldiv@a+3)^0,c
  4227  000DC2  0E00               	movlw	0
  4228  000DC4  6E20               	movwf	___flmul@a^0,c
  4229  000DC6  0EC0               	movlw	192
  4230  000DC8  6E21               	movwf	(___flmul@a+1)^0,c
  4231  000DCA  0E79               	movlw	121
  4232  000DCC  6E22               	movwf	(___flmul@a+2)^0,c
  4233  000DCE  0E44               	movlw	68
  4234  000DD0  6E23               	movwf	(___flmul@a+3)^0,c
  4235  000DD2  C134  F01C         	movff	_procces_data+4,___flmul@b
  4236  000DD6  C135  F01D         	movff	_procces_data+5,___flmul@b+1
  4237  000DDA  C136  F01E         	movff	_procces_data+6,___flmul@b+2
  4238  000DDE  C137  F01F         	movff	_procces_data+7,___flmul@b+3
  4239  000DE2  ECA9  F00F         	call	___flmul	;wreg free
  4240  000DE6  C01C  F035         	movff	?___flmul,___fldiv@b
  4241  000DEA  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4242  000DEE  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4243  000DF2  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4244  000DF6  ECBE  F011         	call	___fldiv	;wreg free
  4245  000DFA  C035  F04E         	movff	?___fldiv,___fltol@f1
  4246  000DFE  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4247  000E02  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4248  000E06  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4249  000E0A  EC5F  F021         	call	___fltol	;wreg free
  4250  000E0E  C04E  F104         	movff	?___fltol,_convert_data+4
  4251  000E12  C04F  F105         	movff	?___fltol+1,_convert_data+5
  4252  000E16  C050  F106         	movff	?___fltol+2,_convert_data+6
  4253  000E1A  C051  F107         	movff	?___fltol+3,_convert_data+7
  4254                           
  4255                           ;fs_adc.c: 107:         break;
  4256  000E1E  EF29  F00A         	goto	l76
  4257  000E22                     l5718:
  4258                           
  4259                           ; BSR set to: 1
  4260                           ;fs_adc.c: 110:             adc_raw_data.channel_2 = readAdcValue(2);
  4261  000E22  0E02               	movlw	2
  4262  000E24  ECCE  F029         	call	_readAdcValue
  4263  000E28  C001  F177         	movff	?_readAdcValue,_adc_raw_data+4
  4264  000E2C  C002  F178         	movff	?_readAdcValue+1,_adc_raw_data+5
  4265  000E30                     
  4266                           ;fs_adc.c: 111:             procces_data.channel_2 = (float)((adc_raw_data.channel_2*5.0
      +                          )/1024.0);
  4267  000E30  0E00               	movlw	0
  4268  000E32  6E20               	movwf	___flmul@a^0,c
  4269  000E34  0E00               	movlw	0
  4270  000E36  6E21               	movwf	(___flmul@a+1)^0,c
  4271  000E38  0EA0               	movlw	160
  4272  000E3A  6E22               	movwf	(___flmul@a+2)^0,c
  4273  000E3C  0E40               	movlw	64
  4274  000E3E  6E23               	movwf	(___flmul@a+3)^0,c
  4275  000E40  C177  F00E         	movff	_adc_raw_data+4,___xxtofl@val
  4276  000E44  C178  F00F         	movff	_adc_raw_data+5,___xxtofl@val+1
  4277  000E48  6A10               	clrf	(___xxtofl@val+2)^0,c
  4278  000E4A  6A11               	clrf	(___xxtofl@val+3)^0,c
  4279  000E4C  0E00               	movlw	0
  4280  000E4E  ECAC  F01A         	call	___xxtofl
  4281  000E52  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4282  000E56  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4283  000E5A  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4284  000E5E  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4285  000E62  ECA9  F00F         	call	___flmul	;wreg free
  4286  000E66  C01C  F035         	movff	?___flmul,___fldiv@b
  4287  000E6A  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4288  000E6E  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4289  000E72  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4290  000E76  0E00               	movlw	0
  4291  000E78  6E39               	movwf	___fldiv@a^0,c
  4292  000E7A  0E00               	movlw	0
  4293  000E7C  6E3A               	movwf	(___fldiv@a+1)^0,c
  4294  000E7E  0E80               	movlw	128
  4295  000E80  6E3B               	movwf	(___fldiv@a+2)^0,c
  4296  000E82  0E44               	movlw	68
  4297  000E84  6E3C               	movwf	(___fldiv@a+3)^0,c
  4298  000E86  ECBE  F011         	call	___fldiv	;wreg free
  4299  000E8A  C035  F138         	movff	?___fldiv,_procces_data+8
  4300  000E8E  C036  F139         	movff	?___fldiv+1,_procces_data+9
  4301  000E92  C037  F13A         	movff	?___fldiv+2,_procces_data+10
  4302  000E96  C038  F13B         	movff	?___fldiv+3,_procces_data+11
  4303  000E9A                     
  4304                           ;fs_adc.c: 112:             convert_data.convert_channel_2 = (uint32_t)((procces_data.ch
      +                          annel_2*999)/5);
  4305  000E9A  0E00               	movlw	0
  4306  000E9C  6E39               	movwf	___fldiv@a^0,c
  4307  000E9E  0E00               	movlw	0
  4308  000EA0  6E3A               	movwf	(___fldiv@a+1)^0,c
  4309  000EA2  0EA0               	movlw	160
  4310  000EA4  6E3B               	movwf	(___fldiv@a+2)^0,c
  4311  000EA6  0E40               	movlw	64
  4312  000EA8  6E3C               	movwf	(___fldiv@a+3)^0,c
  4313  000EAA  0E00               	movlw	0
  4314  000EAC  6E20               	movwf	___flmul@a^0,c
  4315  000EAE  0EC0               	movlw	192
  4316  000EB0  6E21               	movwf	(___flmul@a+1)^0,c
  4317  000EB2  0E79               	movlw	121
  4318  000EB4  6E22               	movwf	(___flmul@a+2)^0,c
  4319  000EB6  0E44               	movlw	68
  4320  000EB8  6E23               	movwf	(___flmul@a+3)^0,c
  4321  000EBA  C138  F01C         	movff	_procces_data+8,___flmul@b
  4322  000EBE  C139  F01D         	movff	_procces_data+9,___flmul@b+1
  4323  000EC2  C13A  F01E         	movff	_procces_data+10,___flmul@b+2
  4324  000EC6  C13B  F01F         	movff	_procces_data+11,___flmul@b+3
  4325  000ECA  ECA9  F00F         	call	___flmul	;wreg free
  4326  000ECE  C01C  F035         	movff	?___flmul,___fldiv@b
  4327  000ED2  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4328  000ED6  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4329  000EDA  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4330  000EDE  ECBE  F011         	call	___fldiv	;wreg free
  4331  000EE2  C035  F04E         	movff	?___fldiv,___fltol@f1
  4332  000EE6  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4333  000EEA  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4334  000EEE  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4335  000EF2  EC5F  F021         	call	___fltol	;wreg free
  4336  000EF6  C04E  F108         	movff	?___fltol,_convert_data+8
  4337  000EFA  C04F  F109         	movff	?___fltol+1,_convert_data+9
  4338  000EFE  C050  F10A         	movff	?___fltol+2,_convert_data+10
  4339  000F02  C051  F10B         	movff	?___fltol+3,_convert_data+11
  4340  000F06                     
  4341                           ;fs_adc.c: 113:             convert_data.convert_channel_2_f = (uint16_t)((procces_data.
      +                          channel_2*999)/5);
  4342  000F06  0E00               	movlw	0
  4343  000F08  6E39               	movwf	___fldiv@a^0,c
  4344  000F0A  0E00               	movlw	0
  4345  000F0C  6E3A               	movwf	(___fldiv@a+1)^0,c
  4346  000F0E  0EA0               	movlw	160
  4347  000F10  6E3B               	movwf	(___fldiv@a+2)^0,c
  4348  000F12  0E40               	movlw	64
  4349  000F14  6E3C               	movwf	(___fldiv@a+3)^0,c
  4350  000F16  0E00               	movlw	0
  4351  000F18  6E20               	movwf	___flmul@a^0,c
  4352  000F1A  0EC0               	movlw	192
  4353  000F1C  6E21               	movwf	(___flmul@a+1)^0,c
  4354  000F1E  0E79               	movlw	121
  4355  000F20  6E22               	movwf	(___flmul@a+2)^0,c
  4356  000F22  0E44               	movlw	68
  4357  000F24  6E23               	movwf	(___flmul@a+3)^0,c
  4358  000F26  C138  F01C         	movff	_procces_data+8,___flmul@b
  4359  000F2A  C139  F01D         	movff	_procces_data+9,___flmul@b+1
  4360  000F2E  C13A  F01E         	movff	_procces_data+10,___flmul@b+2
  4361  000F32  C13B  F01F         	movff	_procces_data+11,___flmul@b+3
  4362  000F36  ECA9  F00F         	call	___flmul	;wreg free
  4363  000F3A  C01C  F035         	movff	?___flmul,___fldiv@b
  4364  000F3E  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4365  000F42  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4366  000F46  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4367  000F4A  ECBE  F011         	call	___fldiv	;wreg free
  4368  000F4E  C035  F04E         	movff	?___fldiv,___fltol@f1
  4369  000F52  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4370  000F56  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4371  000F5A  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4372  000F5E  EC5F  F021         	call	___fltol	;wreg free
  4373  000F62  C04E  F124         	movff	?___fltol,_convert_data+36
  4374  000F66  C04F  F125         	movff	?___fltol+1,_convert_data+37
  4375                           
  4376                           ;fs_adc.c: 114:         break;
  4377  000F6A  EF29  F00A         	goto	l76
  4378  000F6E                     l5726:
  4379                           
  4380                           ; BSR set to: 1
  4381                           ;fs_adc.c: 117:             adc_raw_data.channel_3 = readAdcValue(3);
  4382  000F6E  0E03               	movlw	3
  4383  000F70  ECCE  F029         	call	_readAdcValue
  4384  000F74  C001  F179         	movff	?_readAdcValue,_adc_raw_data+6
  4385  000F78  C002  F17A         	movff	?_readAdcValue+1,_adc_raw_data+7
  4386  000F7C                     
  4387                           ;fs_adc.c: 118:             procces_data.channel_3 = (float)((adc_raw_data.channel_3*5.0
      +                          )/1024.0);
  4388  000F7C  0E00               	movlw	0
  4389  000F7E  6E20               	movwf	___flmul@a^0,c
  4390  000F80  0E00               	movlw	0
  4391  000F82  6E21               	movwf	(___flmul@a+1)^0,c
  4392  000F84  0EA0               	movlw	160
  4393  000F86  6E22               	movwf	(___flmul@a+2)^0,c
  4394  000F88  0E40               	movlw	64
  4395  000F8A  6E23               	movwf	(___flmul@a+3)^0,c
  4396  000F8C  C179  F00E         	movff	_adc_raw_data+6,___xxtofl@val
  4397  000F90  C17A  F00F         	movff	_adc_raw_data+7,___xxtofl@val+1
  4398  000F94  6A10               	clrf	(___xxtofl@val+2)^0,c
  4399  000F96  6A11               	clrf	(___xxtofl@val+3)^0,c
  4400  000F98  0E00               	movlw	0
  4401  000F9A  ECAC  F01A         	call	___xxtofl
  4402  000F9E  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4403  000FA2  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4404  000FA6  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4405  000FAA  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4406  000FAE  ECA9  F00F         	call	___flmul	;wreg free
  4407  000FB2  C01C  F035         	movff	?___flmul,___fldiv@b
  4408  000FB6  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4409  000FBA  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4410  000FBE  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4411  000FC2  0E00               	movlw	0
  4412  000FC4  6E39               	movwf	___fldiv@a^0,c
  4413  000FC6  0E00               	movlw	0
  4414  000FC8  6E3A               	movwf	(___fldiv@a+1)^0,c
  4415  000FCA  0E80               	movlw	128
  4416  000FCC  6E3B               	movwf	(___fldiv@a+2)^0,c
  4417  000FCE  0E44               	movlw	68
  4418  000FD0  6E3C               	movwf	(___fldiv@a+3)^0,c
  4419  000FD2  ECBE  F011         	call	___fldiv	;wreg free
  4420  000FD6  C035  F13C         	movff	?___fldiv,_procces_data+12
  4421  000FDA  C036  F13D         	movff	?___fldiv+1,_procces_data+13
  4422  000FDE  C037  F13E         	movff	?___fldiv+2,_procces_data+14
  4423  000FE2  C038  F13F         	movff	?___fldiv+3,_procces_data+15
  4424  000FE6                     
  4425                           ;fs_adc.c: 119:             convert_data.convert_channel_3 = (uint32_t)((procces_data.ch
      +                          annel_3*999)/5);
  4426  000FE6  0E00               	movlw	0
  4427  000FE8  6E39               	movwf	___fldiv@a^0,c
  4428  000FEA  0E00               	movlw	0
  4429  000FEC  6E3A               	movwf	(___fldiv@a+1)^0,c
  4430  000FEE  0EA0               	movlw	160
  4431  000FF0  6E3B               	movwf	(___fldiv@a+2)^0,c
  4432  000FF2  0E40               	movlw	64
  4433  000FF4  6E3C               	movwf	(___fldiv@a+3)^0,c
  4434  000FF6  0E00               	movlw	0
  4435  000FF8  6E20               	movwf	___flmul@a^0,c
  4436  000FFA  0EC0               	movlw	192
  4437  000FFC  6E21               	movwf	(___flmul@a+1)^0,c
  4438  000FFE  0E79               	movlw	121
  4439  001000  6E22               	movwf	(___flmul@a+2)^0,c
  4440  001002  0E44               	movlw	68
  4441  001004  6E23               	movwf	(___flmul@a+3)^0,c
  4442  001006  C13C  F01C         	movff	_procces_data+12,___flmul@b
  4443  00100A  C13D  F01D         	movff	_procces_data+13,___flmul@b+1
  4444  00100E  C13E  F01E         	movff	_procces_data+14,___flmul@b+2
  4445  001012  C13F  F01F         	movff	_procces_data+15,___flmul@b+3
  4446  001016  ECA9  F00F         	call	___flmul	;wreg free
  4447  00101A  C01C  F035         	movff	?___flmul,___fldiv@b
  4448  00101E  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4449  001022  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4450  001026  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4451  00102A  ECBE  F011         	call	___fldiv	;wreg free
  4452  00102E  C035  F04E         	movff	?___fldiv,___fltol@f1
  4453  001032  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4454  001036  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4455  00103A  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4456  00103E  EC5F  F021         	call	___fltol	;wreg free
  4457  001042  C04E  F10C         	movff	?___fltol,_convert_data+12
  4458  001046  C04F  F10D         	movff	?___fltol+1,_convert_data+13
  4459  00104A  C050  F10E         	movff	?___fltol+2,_convert_data+14
  4460  00104E  C051  F10F         	movff	?___fltol+3,_convert_data+15
  4461                           
  4462                           ;fs_adc.c: 120:         break;
  4463  001052  EF29  F00A         	goto	l76
  4464  001056                     l5732:
  4465                           
  4466                           ; BSR set to: 1
  4467                           ;fs_adc.c: 123:             adc_raw_data.channel_4 = readAdcValue(4);
  4468  001056  0E04               	movlw	4
  4469  001058  ECCE  F029         	call	_readAdcValue
  4470  00105C  C001  F17B         	movff	?_readAdcValue,_adc_raw_data+8
  4471  001060  C002  F17C         	movff	?_readAdcValue+1,_adc_raw_data+9
  4472  001064                     
  4473                           ;fs_adc.c: 124:             procces_data.channel_4 = (float)((adc_raw_data.channel_4*5.0
      +                          )/1024.0);
  4474  001064  0E00               	movlw	0
  4475  001066  6E20               	movwf	___flmul@a^0,c
  4476  001068  0E00               	movlw	0
  4477  00106A  6E21               	movwf	(___flmul@a+1)^0,c
  4478  00106C  0EA0               	movlw	160
  4479  00106E  6E22               	movwf	(___flmul@a+2)^0,c
  4480  001070  0E40               	movlw	64
  4481  001072  6E23               	movwf	(___flmul@a+3)^0,c
  4482  001074  C17B  F00E         	movff	_adc_raw_data+8,___xxtofl@val
  4483  001078  C17C  F00F         	movff	_adc_raw_data+9,___xxtofl@val+1
  4484  00107C  6A10               	clrf	(___xxtofl@val+2)^0,c
  4485  00107E  6A11               	clrf	(___xxtofl@val+3)^0,c
  4486  001080  0E00               	movlw	0
  4487  001082  ECAC  F01A         	call	___xxtofl
  4488  001086  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4489  00108A  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4490  00108E  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4491  001092  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4492  001096  ECA9  F00F         	call	___flmul	;wreg free
  4493  00109A  C01C  F035         	movff	?___flmul,___fldiv@b
  4494  00109E  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4495  0010A2  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4496  0010A6  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4497  0010AA  0E00               	movlw	0
  4498  0010AC  6E39               	movwf	___fldiv@a^0,c
  4499  0010AE  0E00               	movlw	0
  4500  0010B0  6E3A               	movwf	(___fldiv@a+1)^0,c
  4501  0010B2  0E80               	movlw	128
  4502  0010B4  6E3B               	movwf	(___fldiv@a+2)^0,c
  4503  0010B6  0E44               	movlw	68
  4504  0010B8  6E3C               	movwf	(___fldiv@a+3)^0,c
  4505  0010BA  ECBE  F011         	call	___fldiv	;wreg free
  4506  0010BE  C035  F140         	movff	?___fldiv,_procces_data+16
  4507  0010C2  C036  F141         	movff	?___fldiv+1,_procces_data+17
  4508  0010C6  C037  F142         	movff	?___fldiv+2,_procces_data+18
  4509  0010CA  C038  F143         	movff	?___fldiv+3,_procces_data+19
  4510  0010CE                     
  4511                           ;fs_adc.c: 125:             convert_data.convert_channel_4 = (uint32_t)((procces_data.ch
      +                          annel_4*999)/5);
  4512  0010CE  0E00               	movlw	0
  4513  0010D0  6E39               	movwf	___fldiv@a^0,c
  4514  0010D2  0E00               	movlw	0
  4515  0010D4  6E3A               	movwf	(___fldiv@a+1)^0,c
  4516  0010D6  0EA0               	movlw	160
  4517  0010D8  6E3B               	movwf	(___fldiv@a+2)^0,c
  4518  0010DA  0E40               	movlw	64
  4519  0010DC  6E3C               	movwf	(___fldiv@a+3)^0,c
  4520  0010DE  0E00               	movlw	0
  4521  0010E0  6E20               	movwf	___flmul@a^0,c
  4522  0010E2  0EC0               	movlw	192
  4523  0010E4  6E21               	movwf	(___flmul@a+1)^0,c
  4524  0010E6  0E79               	movlw	121
  4525  0010E8  6E22               	movwf	(___flmul@a+2)^0,c
  4526  0010EA  0E44               	movlw	68
  4527  0010EC  6E23               	movwf	(___flmul@a+3)^0,c
  4528  0010EE  C140  F01C         	movff	_procces_data+16,___flmul@b
  4529  0010F2  C141  F01D         	movff	_procces_data+17,___flmul@b+1
  4530  0010F6  C142  F01E         	movff	_procces_data+18,___flmul@b+2
  4531  0010FA  C143  F01F         	movff	_procces_data+19,___flmul@b+3
  4532  0010FE  ECA9  F00F         	call	___flmul	;wreg free
  4533  001102  C01C  F035         	movff	?___flmul,___fldiv@b
  4534  001106  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4535  00110A  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4536  00110E  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4537  001112  ECBE  F011         	call	___fldiv	;wreg free
  4538  001116  C035  F04E         	movff	?___fldiv,___fltol@f1
  4539  00111A  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4540  00111E  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4541  001122  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4542  001126  EC5F  F021         	call	___fltol	;wreg free
  4543  00112A  C04E  F110         	movff	?___fltol,_convert_data+16
  4544  00112E  C04F  F111         	movff	?___fltol+1,_convert_data+17
  4545  001132  C050  F112         	movff	?___fltol+2,_convert_data+18
  4546  001136  C051  F113         	movff	?___fltol+3,_convert_data+19
  4547                           
  4548                           ;fs_adc.c: 126:         break;
  4549  00113A  EF29  F00A         	goto	l76
  4550  00113E                     l5738:
  4551                           
  4552                           ; BSR set to: 1
  4553                           ;fs_adc.c: 129:            adc_raw_data.channel_5 = readAdcValue(5);
  4554  00113E  0E05               	movlw	5
  4555  001140  ECCE  F029         	call	_readAdcValue
  4556  001144  C001  F17D         	movff	?_readAdcValue,_adc_raw_data+10
  4557  001148  C002  F17E         	movff	?_readAdcValue+1,_adc_raw_data+11
  4558  00114C                     
  4559                           ;fs_adc.c: 130:            procces_data.channel_5 = (float)((adc_raw_data.channel_5*5.0)
      +                          /1024.0);
  4560  00114C  0E00               	movlw	0
  4561  00114E  6E20               	movwf	___flmul@a^0,c
  4562  001150  0E00               	movlw	0
  4563  001152  6E21               	movwf	(___flmul@a+1)^0,c
  4564  001154  0EA0               	movlw	160
  4565  001156  6E22               	movwf	(___flmul@a+2)^0,c
  4566  001158  0E40               	movlw	64
  4567  00115A  6E23               	movwf	(___flmul@a+3)^0,c
  4568  00115C  C17D  F00E         	movff	_adc_raw_data+10,___xxtofl@val
  4569  001160  C17E  F00F         	movff	_adc_raw_data+11,___xxtofl@val+1
  4570  001164  6A10               	clrf	(___xxtofl@val+2)^0,c
  4571  001166  6A11               	clrf	(___xxtofl@val+3)^0,c
  4572  001168  0E00               	movlw	0
  4573  00116A  ECAC  F01A         	call	___xxtofl
  4574  00116E  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4575  001172  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4576  001176  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4577  00117A  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4578  00117E  ECA9  F00F         	call	___flmul	;wreg free
  4579  001182  C01C  F035         	movff	?___flmul,___fldiv@b
  4580  001186  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4581  00118A  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4582  00118E  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4583  001192  0E00               	movlw	0
  4584  001194  6E39               	movwf	___fldiv@a^0,c
  4585  001196  0E00               	movlw	0
  4586  001198  6E3A               	movwf	(___fldiv@a+1)^0,c
  4587  00119A  0E80               	movlw	128
  4588  00119C  6E3B               	movwf	(___fldiv@a+2)^0,c
  4589  00119E  0E44               	movlw	68
  4590  0011A0  6E3C               	movwf	(___fldiv@a+3)^0,c
  4591  0011A2  ECBE  F011         	call	___fldiv	;wreg free
  4592  0011A6  C035  F144         	movff	?___fldiv,_procces_data+20
  4593  0011AA  C036  F145         	movff	?___fldiv+1,_procces_data+21
  4594  0011AE  C037  F146         	movff	?___fldiv+2,_procces_data+22
  4595  0011B2  C038  F147         	movff	?___fldiv+3,_procces_data+23
  4596  0011B6                     
  4597                           ;fs_adc.c: 131:            convert_data.convert_channel_5 = (uint32_t)((procces_data.cha
      +                          nnel_5*999)/5);
  4598  0011B6  0E00               	movlw	0
  4599  0011B8  6E39               	movwf	___fldiv@a^0,c
  4600  0011BA  0E00               	movlw	0
  4601  0011BC  6E3A               	movwf	(___fldiv@a+1)^0,c
  4602  0011BE  0EA0               	movlw	160
  4603  0011C0  6E3B               	movwf	(___fldiv@a+2)^0,c
  4604  0011C2  0E40               	movlw	64
  4605  0011C4  6E3C               	movwf	(___fldiv@a+3)^0,c
  4606  0011C6  0E00               	movlw	0
  4607  0011C8  6E20               	movwf	___flmul@a^0,c
  4608  0011CA  0EC0               	movlw	192
  4609  0011CC  6E21               	movwf	(___flmul@a+1)^0,c
  4610  0011CE  0E79               	movlw	121
  4611  0011D0  6E22               	movwf	(___flmul@a+2)^0,c
  4612  0011D2  0E44               	movlw	68
  4613  0011D4  6E23               	movwf	(___flmul@a+3)^0,c
  4614  0011D6  C144  F01C         	movff	_procces_data+20,___flmul@b
  4615  0011DA  C145  F01D         	movff	_procces_data+21,___flmul@b+1
  4616  0011DE  C146  F01E         	movff	_procces_data+22,___flmul@b+2
  4617  0011E2  C147  F01F         	movff	_procces_data+23,___flmul@b+3
  4618  0011E6  ECA9  F00F         	call	___flmul	;wreg free
  4619  0011EA  C01C  F035         	movff	?___flmul,___fldiv@b
  4620  0011EE  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4621  0011F2  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4622  0011F6  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4623  0011FA  ECBE  F011         	call	___fldiv	;wreg free
  4624  0011FE  C035  F04E         	movff	?___fldiv,___fltol@f1
  4625  001202  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4626  001206  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4627  00120A  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4628  00120E  EC5F  F021         	call	___fltol	;wreg free
  4629  001212  C04E  F114         	movff	?___fltol,_convert_data+20
  4630  001216  C04F  F115         	movff	?___fltol+1,_convert_data+21
  4631  00121A  C050  F116         	movff	?___fltol+2,_convert_data+22
  4632  00121E  C051  F117         	movff	?___fltol+3,_convert_data+23
  4633                           
  4634                           ;fs_adc.c: 132:         break;
  4635  001222  EF29  F00A         	goto	l76
  4636  001226                     l5744:
  4637                           
  4638                           ; BSR set to: 1
  4639                           ;fs_adc.c: 135:             adc_raw_data.channel_6 = readAdcValue(6);
  4640  001226  0E06               	movlw	6
  4641  001228  ECCE  F029         	call	_readAdcValue
  4642  00122C  C001  F17F         	movff	?_readAdcValue,_adc_raw_data+12
  4643  001230  C002  F180         	movff	?_readAdcValue+1,_adc_raw_data+13
  4644  001234                     
  4645                           ;fs_adc.c: 136:             procces_data.channel_6 = (float)((adc_raw_data.channel_6*5.0
      +                          )/1024.0);
  4646  001234  0E00               	movlw	0
  4647  001236  6E20               	movwf	___flmul@a^0,c
  4648  001238  0E00               	movlw	0
  4649  00123A  6E21               	movwf	(___flmul@a+1)^0,c
  4650  00123C  0EA0               	movlw	160
  4651  00123E  6E22               	movwf	(___flmul@a+2)^0,c
  4652  001240  0E40               	movlw	64
  4653  001242  6E23               	movwf	(___flmul@a+3)^0,c
  4654  001244  C17F  F00E         	movff	_adc_raw_data+12,___xxtofl@val
  4655  001248  C180  F00F         	movff	_adc_raw_data+13,___xxtofl@val+1
  4656  00124C  6A10               	clrf	(___xxtofl@val+2)^0,c
  4657  00124E  6A11               	clrf	(___xxtofl@val+3)^0,c
  4658  001250  0E00               	movlw	0
  4659  001252  ECAC  F01A         	call	___xxtofl
  4660  001256  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4661  00125A  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4662  00125E  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4663  001262  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4664  001266  ECA9  F00F         	call	___flmul	;wreg free
  4665  00126A  C01C  F035         	movff	?___flmul,___fldiv@b
  4666  00126E  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4667  001272  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4668  001276  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4669  00127A  0E00               	movlw	0
  4670  00127C  6E39               	movwf	___fldiv@a^0,c
  4671  00127E  0E00               	movlw	0
  4672  001280  6E3A               	movwf	(___fldiv@a+1)^0,c
  4673  001282  0E80               	movlw	128
  4674  001284  6E3B               	movwf	(___fldiv@a+2)^0,c
  4675  001286  0E44               	movlw	68
  4676  001288  6E3C               	movwf	(___fldiv@a+3)^0,c
  4677  00128A  ECBE  F011         	call	___fldiv	;wreg free
  4678  00128E  C035  F148         	movff	?___fldiv,_procces_data+24
  4679  001292  C036  F149         	movff	?___fldiv+1,_procces_data+25
  4680  001296  C037  F14A         	movff	?___fldiv+2,_procces_data+26
  4681  00129A  C038  F14B         	movff	?___fldiv+3,_procces_data+27
  4682  00129E                     
  4683                           ;fs_adc.c: 137:             convert_data.convert_channel_6 = (uint32_t)((procces_data.ch
      +                          annel_6*999)/5);
  4684  00129E  0E00               	movlw	0
  4685  0012A0  6E39               	movwf	___fldiv@a^0,c
  4686  0012A2  0E00               	movlw	0
  4687  0012A4  6E3A               	movwf	(___fldiv@a+1)^0,c
  4688  0012A6  0EA0               	movlw	160
  4689  0012A8  6E3B               	movwf	(___fldiv@a+2)^0,c
  4690  0012AA  0E40               	movlw	64
  4691  0012AC  6E3C               	movwf	(___fldiv@a+3)^0,c
  4692  0012AE  0E00               	movlw	0
  4693  0012B0  6E20               	movwf	___flmul@a^0,c
  4694  0012B2  0EC0               	movlw	192
  4695  0012B4  6E21               	movwf	(___flmul@a+1)^0,c
  4696  0012B6  0E79               	movlw	121
  4697  0012B8  6E22               	movwf	(___flmul@a+2)^0,c
  4698  0012BA  0E44               	movlw	68
  4699  0012BC  6E23               	movwf	(___flmul@a+3)^0,c
  4700  0012BE  C148  F01C         	movff	_procces_data+24,___flmul@b
  4701  0012C2  C149  F01D         	movff	_procces_data+25,___flmul@b+1
  4702  0012C6  C14A  F01E         	movff	_procces_data+26,___flmul@b+2
  4703  0012CA  C14B  F01F         	movff	_procces_data+27,___flmul@b+3
  4704  0012CE  ECA9  F00F         	call	___flmul	;wreg free
  4705  0012D2  C01C  F035         	movff	?___flmul,___fldiv@b
  4706  0012D6  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4707  0012DA  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4708  0012DE  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4709  0012E2  ECBE  F011         	call	___fldiv	;wreg free
  4710  0012E6  C035  F04E         	movff	?___fldiv,___fltol@f1
  4711  0012EA  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4712  0012EE  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4713  0012F2  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4714  0012F6  EC5F  F021         	call	___fltol	;wreg free
  4715  0012FA  C04E  F118         	movff	?___fltol,_convert_data+24
  4716  0012FE  C04F  F119         	movff	?___fltol+1,_convert_data+25
  4717  001302  C050  F11A         	movff	?___fltol+2,_convert_data+26
  4718  001306  C051  F11B         	movff	?___fltol+3,_convert_data+27
  4719                           
  4720                           ;fs_adc.c: 138:         break;
  4721  00130A  EF29  F00A         	goto	l76
  4722  00130E                     l5750:
  4723                           
  4724                           ; BSR set to: 1
  4725                           ;fs_adc.c: 141:             adc_raw_data.channel_7 = readAdcValue(7);
  4726  00130E  0E07               	movlw	7
  4727  001310  ECCE  F029         	call	_readAdcValue
  4728  001314  C001  F181         	movff	?_readAdcValue,_adc_raw_data+14
  4729  001318  C002  F182         	movff	?_readAdcValue+1,_adc_raw_data+15
  4730  00131C                     
  4731                           ;fs_adc.c: 142:             procces_data.channel_7 = (float)((adc_raw_data.channel_7*5.0
      +                          )/1024.0);
  4732  00131C  0E00               	movlw	0
  4733  00131E  6E20               	movwf	___flmul@a^0,c
  4734  001320  0E00               	movlw	0
  4735  001322  6E21               	movwf	(___flmul@a+1)^0,c
  4736  001324  0EA0               	movlw	160
  4737  001326  6E22               	movwf	(___flmul@a+2)^0,c
  4738  001328  0E40               	movlw	64
  4739  00132A  6E23               	movwf	(___flmul@a+3)^0,c
  4740  00132C  C181  F00E         	movff	_adc_raw_data+14,___xxtofl@val
  4741  001330  C182  F00F         	movff	_adc_raw_data+15,___xxtofl@val+1
  4742  001334  6A10               	clrf	(___xxtofl@val+2)^0,c
  4743  001336  6A11               	clrf	(___xxtofl@val+3)^0,c
  4744  001338  0E00               	movlw	0
  4745  00133A  ECAC  F01A         	call	___xxtofl
  4746  00133E  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4747  001342  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4748  001346  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4749  00134A  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4750  00134E  ECA9  F00F         	call	___flmul	;wreg free
  4751  001352  C01C  F035         	movff	?___flmul,___fldiv@b
  4752  001356  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4753  00135A  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4754  00135E  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4755  001362  0E00               	movlw	0
  4756  001364  6E39               	movwf	___fldiv@a^0,c
  4757  001366  0E00               	movlw	0
  4758  001368  6E3A               	movwf	(___fldiv@a+1)^0,c
  4759  00136A  0E80               	movlw	128
  4760  00136C  6E3B               	movwf	(___fldiv@a+2)^0,c
  4761  00136E  0E44               	movlw	68
  4762  001370  6E3C               	movwf	(___fldiv@a+3)^0,c
  4763  001372  ECBE  F011         	call	___fldiv	;wreg free
  4764  001376  C035  F14C         	movff	?___fldiv,_procces_data+28
  4765  00137A  C036  F14D         	movff	?___fldiv+1,_procces_data+29
  4766  00137E  C037  F14E         	movff	?___fldiv+2,_procces_data+30
  4767  001382  C038  F14F         	movff	?___fldiv+3,_procces_data+31
  4768  001386                     
  4769                           ;fs_adc.c: 143:             convert_data.convert_channel_7 = (uint32_t)((procces_data.ch
      +                          annel_7*999)/5);
  4770  001386  0E00               	movlw	0
  4771  001388  6E39               	movwf	___fldiv@a^0,c
  4772  00138A  0E00               	movlw	0
  4773  00138C  6E3A               	movwf	(___fldiv@a+1)^0,c
  4774  00138E  0EA0               	movlw	160
  4775  001390  6E3B               	movwf	(___fldiv@a+2)^0,c
  4776  001392  0E40               	movlw	64
  4777  001394  6E3C               	movwf	(___fldiv@a+3)^0,c
  4778  001396  0E00               	movlw	0
  4779  001398  6E20               	movwf	___flmul@a^0,c
  4780  00139A  0EC0               	movlw	192
  4781  00139C  6E21               	movwf	(___flmul@a+1)^0,c
  4782  00139E  0E79               	movlw	121
  4783  0013A0  6E22               	movwf	(___flmul@a+2)^0,c
  4784  0013A2  0E44               	movlw	68
  4785  0013A4  6E23               	movwf	(___flmul@a+3)^0,c
  4786  0013A6  C14C  F01C         	movff	_procces_data+28,___flmul@b
  4787  0013AA  C14D  F01D         	movff	_procces_data+29,___flmul@b+1
  4788  0013AE  C14E  F01E         	movff	_procces_data+30,___flmul@b+2
  4789  0013B2  C14F  F01F         	movff	_procces_data+31,___flmul@b+3
  4790  0013B6  ECA9  F00F         	call	___flmul	;wreg free
  4791  0013BA  C01C  F035         	movff	?___flmul,___fldiv@b
  4792  0013BE  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4793  0013C2  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4794  0013C6  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4795  0013CA  ECBE  F011         	call	___fldiv	;wreg free
  4796  0013CE  C035  F04E         	movff	?___fldiv,___fltol@f1
  4797  0013D2  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4798  0013D6  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4799  0013DA  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4800  0013DE  EC5F  F021         	call	___fltol	;wreg free
  4801  0013E2  C04E  F11C         	movff	?___fltol,_convert_data+28
  4802  0013E6  C04F  F11D         	movff	?___fltol+1,_convert_data+29
  4803  0013EA  C050  F11E         	movff	?___fltol+2,_convert_data+30
  4804  0013EE  C051  F11F         	movff	?___fltol+3,_convert_data+31
  4805                           
  4806                           ;fs_adc.c: 144:         break;
  4807  0013F2  EF29  F00A         	goto	l76
  4808  0013F6                     l5758:
  4809  0013F6  0101               	movlb	1	; () banked
  4810  0013F8  5194               	movf	(_timer_value+5)& (0+255),w,b
  4811  0013FA  6E58               	movwf	??_scanAdcConversion^0,c
  4812  0013FC  6A59               	clrf	(??_scanAdcConversion+1)^0,c
  4813                           
  4814                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4815                           ; Switch size 1, requested type "simple"
  4816                           ; Number of cases is 1, Range of values is 0 to 0
  4817                           ; switch strategies available:
  4818                           ; Name         Instructions Cycles
  4819                           ; simple_byte            4     3 (average)
  4820                           ;	Chosen strategy is simple_byte
  4821  0013FE  5059               	movf	(??_scanAdcConversion+1)^0,w,c
  4822  001400  0A00               	xorlw	0	; case 0
  4823  001402  B4D8               	btfsc	status,2,c
  4824  001404  EF06  F00A         	goto	l6608
  4825  001408  EF29  F00A         	goto	l76
  4826  00140C                     l6608:
  4827                           
  4828                           ; BSR set to: 1
  4829                           ; Switch size 1, requested type "simple"
  4830                           ; Number of cases is 8, Range of values is 1 to 8
  4831                           ; switch strategies available:
  4832                           ; Name         Instructions Cycles
  4833                           ; simple_byte           25    13 (average)
  4834                           ;	Chosen strategy is simple_byte
  4835  00140C  5058               	movf	??_scanAdcConversion^0,w,c
  4836  00140E  0A01               	xorlw	1	; case 1
  4837  001410  B4D8               	btfsc	status,2,c
  4838  001412  EF29  F006         	goto	l5706
  4839  001416  0A03               	xorlw	3	; case 2
  4840  001418  B4D8               	btfsc	status,2,c
  4841  00141A  EF9D  F006         	goto	l5712
  4842  00141E  0A01               	xorlw	1	; case 3
  4843  001420  B4D8               	btfsc	status,2,c
  4844  001422  EF11  F007         	goto	l5718
  4845  001426  0A07               	xorlw	7	; case 4
  4846  001428  B4D8               	btfsc	status,2,c
  4847  00142A  EFB7  F007         	goto	l5726
  4848  00142E  0A01               	xorlw	1	; case 5
  4849  001430  B4D8               	btfsc	status,2,c
  4850  001432  EF2B  F008         	goto	l5732
  4851  001436  0A03               	xorlw	3	; case 6
  4852  001438  B4D8               	btfsc	status,2,c
  4853  00143A  EF9F  F008         	goto	l5738
  4854  00143E  0A01               	xorlw	1	; case 7
  4855  001440  B4D8               	btfsc	status,2,c
  4856  001442  EF13  F009         	goto	l5744
  4857  001446  0A0F               	xorlw	15	; case 8
  4858  001448  B4D8               	btfsc	status,2,c
  4859  00144A  EF87  F009         	goto	l5750
  4860  00144E  EF29  F00A         	goto	l76
  4861  001452                     l76:
  4862  001452  0012               	return		;funcret
  4863  001454                     __end_of_scanAdcConversion:
  4864                           	callstack 0
  4865                           
  4866 ;; *************** function _readAdcValue *****************
  4867 ;; Defined at:
  4868 ;;		line 34 in file "fs_adc.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;  adcChannel      1    wreg     unsigned char 
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;  adcChannel      1    4[COMRAM] unsigned char 
  4873 ;;  adcValue        2    5[COMRAM] unsigned short 
  4874 ;; Return value:  Size  Location     Type
  4875 ;;                  2    0[COMRAM] unsigned short 
  4876 ;; Registers used:
  4877 ;;		wreg, status,2, status,0
  4878 ;; Tracked objects:
  4879 ;;		On entry : 0/0
  4880 ;;		On exit  : 0/0
  4881 ;;		Unchanged: 0/0
  4882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4883 ;;      Params:         2       0       0       0       0       0       0
  4884 ;;      Locals:         3       0       0       0       0       0       0
  4885 ;;      Temps:          2       0       0       0       0       0       0
  4886 ;;      Totals:         7       0       0       0       0       0       0
  4887 ;;Total ram usage:        7 bytes
  4888 ;; Hardware stack levels used:    1
  4889 ;; Hardware stack levels required when called:    1
  4890 ;; This function calls:
  4891 ;;		Nothing
  4892 ;; This function is called by:
  4893 ;;		_scanAdcConversion
  4894 ;; This function uses a non-reentrant model
  4895 ;;
  4896                           
  4897                           	psect	text14
  4898  00539C                     __ptext14:
  4899                           	callstack 0
  4900  00539C                     _readAdcValue:
  4901                           	callstack 24
  4902                           
  4903                           ;incstack = 0
  4904                           ;readAdcValue@adcChannel stored from wreg
  4905  00539C  6E05               	movwf	readAdcValue@adcChannel^0,c
  4906  00539E                     
  4907                           ;fs_adc.c: 38:  ADCON0bits.CHS = adcChannel;
  4908  00539E  C005  F003         	movff	readAdcValue@adcChannel,??_readAdcValue
  4909  0053A2  4603               	rlncf	??_readAdcValue^0,f,c
  4910  0053A4  4603               	rlncf	??_readAdcValue^0,f,c
  4911  0053A6  50C2               	movf	194,w,c	;volatile
  4912  0053A8  1803               	xorwf	??_readAdcValue^0,w,c
  4913  0053AA  0B83               	andlw	-125
  4914  0053AC  1803               	xorwf	??_readAdcValue^0,w,c
  4915  0053AE  6EC2               	movwf	194,c	;volatile
  4916  0053B0                     
  4917                           ;fs_adc.c: 39:  ADCON0bits.ADON = 1;
  4918  0053B0  80C2               	bsf	194,0,c	;volatile
  4919  0053B2                     
  4920                           ;fs_adc.c: 40:  ADCON0bits.GO_nDONE = 1;
  4921  0053B2  82C2               	bsf	194,1,c	;volatile
  4922  0053B4                     l57:
  4923  0053B4  B2C2               	btfsc	194,1,c	;volatile
  4924  0053B6  EFDF  F029         	goto	u6391
  4925  0053BA  EFE1  F029         	goto	u6390
  4926  0053BE                     u6391:
  4927  0053BE  EFDA  F029         	goto	l57
  4928  0053C2                     u6390:
  4929  0053C2                     
  4930                           ;fs_adc.c: 42:  adcValue = (uint16_t)((ADRESH << 8) + ADRESL);
  4931  0053C2  50C4               	movf	196,w,c	;volatile
  4932  0053C4  6E04               	movwf	(??_readAdcValue+1)^0,c
  4933  0053C6  6A03               	clrf	??_readAdcValue^0,c
  4934  0053C8  50C3               	movf	195,w,c	;volatile
  4935  0053CA  2403               	addwf	??_readAdcValue^0,w,c
  4936  0053CC  6E06               	movwf	readAdcValue@adcValue^0,c
  4937  0053CE  0E00               	movlw	0
  4938  0053D0  2004               	addwfc	(??_readAdcValue+1)^0,w,c
  4939  0053D2  6E07               	movwf	(readAdcValue@adcValue+1)^0,c
  4940  0053D4                     
  4941                           ;fs_adc.c: 43:     return adcValue;
  4942  0053D4  C006  F001         	movff	readAdcValue@adcValue,?_readAdcValue
  4943  0053D8  C007  F002         	movff	readAdcValue@adcValue+1,?_readAdcValue+1
  4944  0053DC  0012               	return		;funcret
  4945  0053DE                     __end_of_readAdcValue:
  4946                           	callstack 0
  4947                           
  4948 ;; *************** function _calculatedAverageValue *****************
  4949 ;; Defined at:
  4950 ;;		line 154 in file "fs_adc.c"
  4951 ;; Parameters:    Size  Location     Type
  4952 ;;		None
  4953 ;; Auto vars:     Size  Location     Type
  4954 ;;		None
  4955 ;; Return value:  Size  Location     Type
  4956 ;;                  1    wreg      void 
  4957 ;; Registers used:
  4958 ;;		wreg, status,2, status,0, cstack
  4959 ;; Tracked objects:
  4960 ;;		On entry : 0/0
  4961 ;;		On exit  : 0/0
  4962 ;;		Unchanged: 0/0
  4963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4964 ;;      Params:         0       0       0       0       0       0       0
  4965 ;;      Locals:         0       0       0       0       0       0       0
  4966 ;;      Temps:         24       0       0       0       0       0       0
  4967 ;;      Totals:        24       0       0       0       0       0       0
  4968 ;;Total ram usage:       24 bytes
  4969 ;; Hardware stack levels used:    1
  4970 ;; Hardware stack levels required when called:    2
  4971 ;; This function calls:
  4972 ;;		___lldiv
  4973 ;;		___lmul
  4974 ;;		___xxtofl
  4975 ;; This function is called by:
  4976 ;;		_startMotor
  4977 ;; This function uses a non-reentrant model
  4978 ;;
  4979                           
  4980                           	psect	text15
  4981  002716                     __ptext15:
  4982                           	callstack 0
  4983  002716                     _calculatedAverageValue:
  4984                           	callstack 24
  4985  002716                     
  4986                           ;fs_adc.c: 156:     driver_limit.pay = 0;
  4987  002716  0E00               	movlw	0
  4988  002718  0101               	movlb	1	; () banked
  4989  00271A  6F83               	movwf	_driver_limit& (0+255),b
  4990  00271C  0E00               	movlw	0
  4991  00271E  6F84               	movwf	(_driver_limit+1)& (0+255),b
  4992  002720  0E00               	movlw	0
  4993  002722  6F85               	movwf	(_driver_limit+2)& (0+255),b
  4994  002724  0E00               	movlw	0
  4995  002726  6F86               	movwf	(_driver_limit+3)& (0+255),b
  4996                           
  4997                           ;fs_adc.c: 157:     driver_limit.payda = 0;
  4998  002728  0E00               	movlw	0
  4999  00272A  6F87               	movwf	(_driver_limit+4)& (0+255),b
  5000  00272C  0E00               	movlw	0
  5001  00272E  6F88               	movwf	(_driver_limit+5)& (0+255),b
  5002  002730  0E00               	movlw	0
  5003  002732  6F89               	movwf	(_driver_limit+6)& (0+255),b
  5004  002734  0E00               	movlw	0
  5005  002736  6F8A               	movwf	(_driver_limit+7)& (0+255),b
  5006                           
  5007                           ;fs_adc.c: 158:     driver_limit.ortalama = 0;
  5008  002738  0E00               	movlw	0
  5009  00273A  6F8B               	movwf	(_driver_limit+8)& (0+255),b
  5010  00273C  0E00               	movlw	0
  5011  00273E  6F8C               	movwf	(_driver_limit+9)& (0+255),b
  5012  002740  0E00               	movlw	0
  5013  002742  6F8D               	movwf	(_driver_limit+10)& (0+255),b
  5014  002744  0E00               	movlw	0
  5015  002746  6F8E               	movwf	(_driver_limit+11)& (0+255),b
  5016  002748                     
  5017                           ; BSR set to: 1
  5018                           ;fs_adc.c: 161:    driver_limit.pay =(uint32_t) ( (convert_data.convert_channel_0 *1) +
  5019  002748  C10C  F001         	movff	_convert_data+12,___lmul@multiplier
  5020  00274C  C10D  F002         	movff	_convert_data+13,___lmul@multiplier+1
  5021  002750  C10E  F003         	movff	_convert_data+14,___lmul@multiplier+2
  5022  002754  C10F  F004         	movff	_convert_data+15,___lmul@multiplier+3
  5023  002758  0EB8               	movlw	184
  5024  00275A  6E05               	movwf	___lmul@multiplicand^0,c
  5025  00275C  0E0B               	movlw	11
  5026  00275E  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5027  002760  0E00               	movlw	0
  5028  002762  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5029  002764  0E00               	movlw	0
  5030  002766  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5031  002768  ECC0  F027         	call	___lmul	;wreg free
  5032  00276C  C001  F01C         	movff	?___lmul,??_calculatedAverageValue
  5033  002770  C002  F01D         	movff	?___lmul+1,??_calculatedAverageValue+1
  5034  002774  C003  F01E         	movff	?___lmul+2,??_calculatedAverageValue+2
  5035  002778  C004  F01F         	movff	?___lmul+3,??_calculatedAverageValue+3
  5036  00277C  C108  F001         	movff	_convert_data+8,___lmul@multiplier
  5037  002780  C109  F002         	movff	_convert_data+9,___lmul@multiplier+1
  5038  002784  C10A  F003         	movff	_convert_data+10,___lmul@multiplier+2
  5039  002788  C10B  F004         	movff	_convert_data+11,___lmul@multiplier+3
  5040  00278C  0ED0               	movlw	208
  5041  00278E  6E05               	movwf	___lmul@multiplicand^0,c
  5042  002790  0E07               	movlw	7
  5043  002792  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5044  002794  0E00               	movlw	0
  5045  002796  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5046  002798  0E00               	movlw	0
  5047  00279A  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5048  00279C  ECC0  F027         	call	___lmul	;wreg free
  5049  0027A0  5001               	movf	?___lmul^0,w,c
  5050  0027A2  241C               	addwf	??_calculatedAverageValue^0,w,c
  5051  0027A4  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5052  0027A6  5002               	movf	(?___lmul+1)^0,w,c
  5053  0027A8  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5054  0027AA  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5055  0027AC  5003               	movf	(?___lmul+2)^0,w,c
  5056  0027AE  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5057  0027B0  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5058  0027B2  5004               	movf	(?___lmul+3)^0,w,c
  5059  0027B4  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5060  0027B6  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5061  0027B8  C104  F001         	movff	_convert_data+4,___lmul@multiplier
  5062  0027BC  C105  F002         	movff	_convert_data+5,___lmul@multiplier+1
  5063  0027C0  C106  F003         	movff	_convert_data+6,___lmul@multiplier+2
  5064  0027C4  C107  F004         	movff	_convert_data+7,___lmul@multiplier+3
  5065  0027C8  0EE8               	movlw	232
  5066  0027CA  6E05               	movwf	___lmul@multiplicand^0,c
  5067  0027CC  0E03               	movlw	3
  5068  0027CE  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5069  0027D0  0E00               	movlw	0
  5070  0027D2  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5071  0027D4  0E00               	movlw	0
  5072  0027D6  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5073  0027D8  ECC0  F027         	call	___lmul	;wreg free
  5074  0027DC  5001               	movf	?___lmul^0,w,c
  5075  0027DE  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5076  0027E0  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5077  0027E2  5002               	movf	(?___lmul+1)^0,w,c
  5078  0027E4  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5079  0027E6  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5080  0027E8  5003               	movf	(?___lmul+2)^0,w,c
  5081  0027EA  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5082  0027EC  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5083  0027EE  5004               	movf	(?___lmul+3)^0,w,c
  5084  0027F0  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5085  0027F2  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5086  0027F4  0101               	movlb	1	; () banked
  5087  0027F6  5100               	movf	_convert_data& (0+255),w,b
  5088  0027F8  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5089  0027FA  6F83               	movwf	_driver_limit& (0+255),b
  5090  0027FC  5101               	movf	(_convert_data+1)& (0+255),w,b
  5091  0027FE  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5092  002800  6F84               	movwf	(_driver_limit+1)& (0+255),b
  5093  002802  5102               	movf	(_convert_data+2)& (0+255),w,b
  5094  002804  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5095  002806  6F85               	movwf	(_driver_limit+2)& (0+255),b
  5096  002808  5103               	movf	(_convert_data+3)& (0+255),w,b
  5097  00280A  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5098  00280C  6F86               	movwf	(_driver_limit+3)& (0+255),b
  5099  00280E                     
  5100                           ; BSR set to: 1
  5101                           ;fs_adc.c: 166:    driver_limit.pay += (uint32_t)( (convert_data.convert_channel_4 * 400
      +                          0) +
  5102  00280E  C11C  F001         	movff	_convert_data+28,___lmul@multiplier
  5103  002812  C11D  F002         	movff	_convert_data+29,___lmul@multiplier+1
  5104  002816  C11E  F003         	movff	_convert_data+30,___lmul@multiplier+2
  5105  00281A  C11F  F004         	movff	_convert_data+31,___lmul@multiplier+3
  5106  00281E  0E58               	movlw	88
  5107  002820  6E05               	movwf	___lmul@multiplicand^0,c
  5108  002822  0E1B               	movlw	27
  5109  002824  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5110  002826  0E00               	movlw	0
  5111  002828  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5112  00282A  0E00               	movlw	0
  5113  00282C  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5114  00282E  ECC0  F027         	call	___lmul	;wreg free
  5115  002832  C001  F01C         	movff	?___lmul,??_calculatedAverageValue
  5116  002836  C002  F01D         	movff	?___lmul+1,??_calculatedAverageValue+1
  5117  00283A  C003  F01E         	movff	?___lmul+2,??_calculatedAverageValue+2
  5118  00283E  C004  F01F         	movff	?___lmul+3,??_calculatedAverageValue+3
  5119  002842  C118  F001         	movff	_convert_data+24,___lmul@multiplier
  5120  002846  C119  F002         	movff	_convert_data+25,___lmul@multiplier+1
  5121  00284A  C11A  F003         	movff	_convert_data+26,___lmul@multiplier+2
  5122  00284E  C11B  F004         	movff	_convert_data+27,___lmul@multiplier+3
  5123  002852  0E70               	movlw	112
  5124  002854  6E05               	movwf	___lmul@multiplicand^0,c
  5125  002856  0E17               	movlw	23
  5126  002858  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5127  00285A  0E00               	movlw	0
  5128  00285C  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5129  00285E  0E00               	movlw	0
  5130  002860  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5131  002862  ECC0  F027         	call	___lmul	;wreg free
  5132  002866  5001               	movf	?___lmul^0,w,c
  5133  002868  241C               	addwf	??_calculatedAverageValue^0,w,c
  5134  00286A  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5135  00286C  5002               	movf	(?___lmul+1)^0,w,c
  5136  00286E  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5137  002870  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5138  002872  5003               	movf	(?___lmul+2)^0,w,c
  5139  002874  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5140  002876  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5141  002878  5004               	movf	(?___lmul+3)^0,w,c
  5142  00287A  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5143  00287C  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5144  00287E  C114  F001         	movff	_convert_data+20,___lmul@multiplier
  5145  002882  C115  F002         	movff	_convert_data+21,___lmul@multiplier+1
  5146  002886  C116  F003         	movff	_convert_data+22,___lmul@multiplier+2
  5147  00288A  C117  F004         	movff	_convert_data+23,___lmul@multiplier+3
  5148  00288E  0E88               	movlw	136
  5149  002890  6E05               	movwf	___lmul@multiplicand^0,c
  5150  002892  0E13               	movlw	19
  5151  002894  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5152  002896  0E00               	movlw	0
  5153  002898  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5154  00289A  0E00               	movlw	0
  5155  00289C  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5156  00289E  ECC0  F027         	call	___lmul	;wreg free
  5157  0028A2  5001               	movf	?___lmul^0,w,c
  5158  0028A4  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5159  0028A6  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5160  0028A8  5002               	movf	(?___lmul+1)^0,w,c
  5161  0028AA  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5162  0028AC  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5163  0028AE  5003               	movf	(?___lmul+2)^0,w,c
  5164  0028B0  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5165  0028B2  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5166  0028B4  5004               	movf	(?___lmul+3)^0,w,c
  5167  0028B6  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5168  0028B8  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5169  0028BA  C110  F001         	movff	_convert_data+16,___lmul@multiplier
  5170  0028BE  C111  F002         	movff	_convert_data+17,___lmul@multiplier+1
  5171  0028C2  C112  F003         	movff	_convert_data+18,___lmul@multiplier+2
  5172  0028C6  C113  F004         	movff	_convert_data+19,___lmul@multiplier+3
  5173  0028CA  0EA0               	movlw	160
  5174  0028CC  6E05               	movwf	___lmul@multiplicand^0,c
  5175  0028CE  0E0F               	movlw	15
  5176  0028D0  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5177  0028D2  0E00               	movlw	0
  5178  0028D4  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5179  0028D6  0E00               	movlw	0
  5180  0028D8  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5181  0028DA  ECC0  F027         	call	___lmul	;wreg free
  5182  0028DE  5001               	movf	?___lmul^0,w,c
  5183  0028E0  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5184  0028E2  6E28               	movwf	(??_calculatedAverageValue+12)^0,c
  5185  0028E4  5002               	movf	(?___lmul+1)^0,w,c
  5186  0028E6  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5187  0028E8  6E29               	movwf	(??_calculatedAverageValue+13)^0,c
  5188  0028EA  5003               	movf	(?___lmul+2)^0,w,c
  5189  0028EC  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5190  0028EE  6E2A               	movwf	(??_calculatedAverageValue+14)^0,c
  5191  0028F0  5004               	movf	(?___lmul+3)^0,w,c
  5192  0028F2  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5193  0028F4  6E2B               	movwf	(??_calculatedAverageValue+15)^0,c
  5194  0028F6  5028               	movf	(??_calculatedAverageValue+12)^0,w,c
  5195  0028F8  0101               	movlb	1	; () banked
  5196  0028FA  2783               	addwf	_driver_limit& (0+255),f,b
  5197  0028FC  5029               	movf	(??_calculatedAverageValue+13)^0,w,c
  5198  0028FE  2384               	addwfc	(_driver_limit+1)& (0+255),f,b
  5199  002900  502A               	movf	(??_calculatedAverageValue+14)^0,w,c
  5200  002902  2385               	addwfc	(_driver_limit+2)& (0+255),f,b
  5201  002904  502B               	movf	(??_calculatedAverageValue+15)^0,w,c
  5202  002906  2386               	addwfc	(_driver_limit+3)& (0+255),f,b
  5203  002908                     
  5204                           ; BSR set to: 1
  5205                           ;fs_adc.c: 171:     driver_limit.payda = (uint32_t) (convert_data.convert_channel_0 + co
      +                          nvert_data.convert_channel_1 +
  5206  002908  5108               	movf	(_convert_data+8)& (0+255),w,b
  5207  00290A  2504               	addwf	(_convert_data+4)& (0+255),w,b
  5208  00290C  6E1C               	movwf	??_calculatedAverageValue^0,c
  5209  00290E  5109               	movf	(_convert_data+9)& (0+255),w,b
  5210  002910  2105               	addwfc	(_convert_data+5)& (0+255),w,b
  5211  002912  6E1D               	movwf	(??_calculatedAverageValue+1)^0,c
  5212  002914  510A               	movf	(_convert_data+10)& (0+255),w,b
  5213  002916  2106               	addwfc	(_convert_data+6)& (0+255),w,b
  5214  002918  6E1E               	movwf	(??_calculatedAverageValue+2)^0,c
  5215  00291A  510B               	movf	(_convert_data+11)& (0+255),w,b
  5216  00291C  2107               	addwfc	(_convert_data+7)& (0+255),w,b
  5217  00291E  6E1F               	movwf	(??_calculatedAverageValue+3)^0,c
  5218  002920  510C               	movf	(_convert_data+12)& (0+255),w,b
  5219  002922  241C               	addwf	??_calculatedAverageValue^0,w,c
  5220  002924  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5221  002926  510D               	movf	(_convert_data+13)& (0+255),w,b
  5222  002928  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5223  00292A  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5224  00292C  510E               	movf	(_convert_data+14)& (0+255),w,b
  5225  00292E  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5226  002930  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5227  002932  510F               	movf	(_convert_data+15)& (0+255),w,b
  5228  002934  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5229  002936  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5230  002938  5110               	movf	(_convert_data+16)& (0+255),w,b
  5231  00293A  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5232  00293C  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5233  00293E  5111               	movf	(_convert_data+17)& (0+255),w,b
  5234  002940  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5235  002942  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5236  002944  5112               	movf	(_convert_data+18)& (0+255),w,b
  5237  002946  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5238  002948  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5239  00294A  5113               	movf	(_convert_data+19)& (0+255),w,b
  5240  00294C  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5241  00294E  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5242  002950  5114               	movf	(_convert_data+20)& (0+255),w,b
  5243  002952  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5244  002954  6E28               	movwf	(??_calculatedAverageValue+12)^0,c
  5245  002956  5115               	movf	(_convert_data+21)& (0+255),w,b
  5246  002958  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5247  00295A  6E29               	movwf	(??_calculatedAverageValue+13)^0,c
  5248  00295C  5116               	movf	(_convert_data+22)& (0+255),w,b
  5249  00295E  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5250  002960  6E2A               	movwf	(??_calculatedAverageValue+14)^0,c
  5251  002962  5117               	movf	(_convert_data+23)& (0+255),w,b
  5252  002964  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5253  002966  6E2B               	movwf	(??_calculatedAverageValue+15)^0,c
  5254  002968  5118               	movf	(_convert_data+24)& (0+255),w,b
  5255  00296A  2428               	addwf	(??_calculatedAverageValue+12)^0,w,c
  5256  00296C  6E2C               	movwf	(??_calculatedAverageValue+16)^0,c
  5257  00296E  5119               	movf	(_convert_data+25)& (0+255),w,b
  5258  002970  2029               	addwfc	(??_calculatedAverageValue+13)^0,w,c
  5259  002972  6E2D               	movwf	(??_calculatedAverageValue+17)^0,c
  5260  002974  511A               	movf	(_convert_data+26)& (0+255),w,b
  5261  002976  202A               	addwfc	(??_calculatedAverageValue+14)^0,w,c
  5262  002978  6E2E               	movwf	(??_calculatedAverageValue+18)^0,c
  5263  00297A  511B               	movf	(_convert_data+27)& (0+255),w,b
  5264  00297C  202B               	addwfc	(??_calculatedAverageValue+15)^0,w,c
  5265  00297E  6E2F               	movwf	(??_calculatedAverageValue+19)^0,c
  5266  002980  511C               	movf	(_convert_data+28)& (0+255),w,b
  5267  002982  242C               	addwf	(??_calculatedAverageValue+16)^0,w,c
  5268  002984  6E30               	movwf	(??_calculatedAverageValue+20)^0,c
  5269  002986  511D               	movf	(_convert_data+29)& (0+255),w,b
  5270  002988  202D               	addwfc	(??_calculatedAverageValue+17)^0,w,c
  5271  00298A  6E31               	movwf	(??_calculatedAverageValue+21)^0,c
  5272  00298C  511E               	movf	(_convert_data+30)& (0+255),w,b
  5273  00298E  202E               	addwfc	(??_calculatedAverageValue+18)^0,w,c
  5274  002990  6E32               	movwf	(??_calculatedAverageValue+22)^0,c
  5275  002992  511F               	movf	(_convert_data+31)& (0+255),w,b
  5276  002994  202F               	addwfc	(??_calculatedAverageValue+19)^0,w,c
  5277  002996  6E33               	movwf	(??_calculatedAverageValue+23)^0,c
  5278  002998  5100               	movf	_convert_data& (0+255),w,b
  5279  00299A  2430               	addwf	(??_calculatedAverageValue+20)^0,w,c
  5280  00299C  6F87               	movwf	(_driver_limit+4)& (0+255),b
  5281  00299E  5101               	movf	(_convert_data+1)& (0+255),w,b
  5282  0029A0  2031               	addwfc	(??_calculatedAverageValue+21)^0,w,c
  5283  0029A2  6F88               	movwf	(_driver_limit+5)& (0+255),b
  5284  0029A4  5102               	movf	(_convert_data+2)& (0+255),w,b
  5285  0029A6  2032               	addwfc	(??_calculatedAverageValue+22)^0,w,c
  5286  0029A8  6F89               	movwf	(_driver_limit+6)& (0+255),b
  5287  0029AA  5103               	movf	(_convert_data+3)& (0+255),w,b
  5288  0029AC  2033               	addwfc	(??_calculatedAverageValue+23)^0,w,c
  5289  0029AE  6F8A               	movwf	(_driver_limit+7)& (0+255),b
  5290  0029B0                     
  5291                           ; BSR set to: 1
  5292                           ;fs_adc.c: 176:     driver_limit.ortalama = (float)(driver_limit.pay/driver_limit.payda)
      +                          ;
  5293  0029B0  C187  F005         	movff	_driver_limit+4,___lldiv@divisor
  5294  0029B4  C188  F006         	movff	_driver_limit+5,___lldiv@divisor+1
  5295  0029B8  C189  F007         	movff	_driver_limit+6,___lldiv@divisor+2
  5296  0029BC  C18A  F008         	movff	_driver_limit+7,___lldiv@divisor+3
  5297  0029C0  C183  F001         	movff	_driver_limit,___lldiv@dividend
  5298  0029C4  C184  F002         	movff	_driver_limit+1,___lldiv@dividend+1
  5299  0029C8  C185  F003         	movff	_driver_limit+2,___lldiv@dividend+2
  5300  0029CC  C186  F004         	movff	_driver_limit+3,___lldiv@dividend+3
  5301  0029D0  ECE7  F025         	call	___lldiv	;wreg free
  5302  0029D4  C001  F00E         	movff	?___lldiv,___xxtofl@val
  5303  0029D8  C002  F00F         	movff	?___lldiv+1,___xxtofl@val+1
  5304  0029DC  C003  F010         	movff	?___lldiv+2,___xxtofl@val+2
  5305  0029E0  C004  F011         	movff	?___lldiv+3,___xxtofl@val+3
  5306  0029E4  0E00               	movlw	0
  5307  0029E6  ECAC  F01A         	call	___xxtofl
  5308  0029EA  C00E  F18B         	movff	?___xxtofl,_driver_limit+8
  5309  0029EE  C00F  F18C         	movff	?___xxtofl+1,_driver_limit+9
  5310  0029F2  C010  F18D         	movff	?___xxtofl+2,_driver_limit+10
  5311  0029F6  C011  F18E         	movff	?___xxtofl+3,_driver_limit+11
  5312  0029FA  0012               	return		;funcret
  5313  0029FC                     __end_of_calculatedAverageValue:
  5314                           	callstack 0
  5315                           
  5316 ;; *************** function ___lmul *****************
  5317 ;; Defined at:
  5318 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul32.c"
  5319 ;; Parameters:    Size  Location     Type
  5320 ;;  multiplier      4    0[COMRAM] unsigned long 
  5321 ;;  multiplicand    4    4[COMRAM] unsigned long 
  5322 ;; Auto vars:     Size  Location     Type
  5323 ;;  product         4    8[COMRAM] unsigned long 
  5324 ;; Return value:  Size  Location     Type
  5325 ;;                  4    0[COMRAM] unsigned long 
  5326 ;; Registers used:
  5327 ;;		wreg, status,2, status,0
  5328 ;; Tracked objects:
  5329 ;;		On entry : 0/0
  5330 ;;		On exit  : 0/0
  5331 ;;		Unchanged: 0/0
  5332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5333 ;;      Params:         8       0       0       0       0       0       0
  5334 ;;      Locals:         4       0       0       0       0       0       0
  5335 ;;      Temps:          0       0       0       0       0       0       0
  5336 ;;      Totals:        12       0       0       0       0       0       0
  5337 ;;Total ram usage:       12 bytes
  5338 ;; Hardware stack levels used:    1
  5339 ;; Hardware stack levels required when called:    1
  5340 ;; This function calls:
  5341 ;;		Nothing
  5342 ;; This function is called by:
  5343 ;;		_calculatedAverageValue
  5344 ;; This function uses a non-reentrant model
  5345 ;;
  5346                           
  5347                           	psect	text16
  5348  004F80                     __ptext16:
  5349                           	callstack 0
  5350  004F80                     ___lmul:
  5351                           	callstack 24
  5352  004F80  0E00               	movlw	0
  5353  004F82  6E09               	movwf	___lmul@product^0,c
  5354  004F84  0E00               	movlw	0
  5355  004F86  6E0A               	movwf	(___lmul@product+1)^0,c
  5356  004F88  0E00               	movlw	0
  5357  004F8A  6E0B               	movwf	(___lmul@product+2)^0,c
  5358  004F8C  0E00               	movlw	0
  5359  004F8E  6E0C               	movwf	(___lmul@product+3)^0,c
  5360  004F90                     l5510:
  5361  004F90  A001               	btfss	___lmul@multiplier^0,0,c
  5362  004F92  EFCD  F027         	goto	u6441
  5363  004F96  EFCF  F027         	goto	u6440
  5364  004F9A                     u6441:
  5365  004F9A  EFD7  F027         	goto	l5514
  5366  004F9E                     u6440:
  5367  004F9E  5005               	movf	___lmul@multiplicand^0,w,c
  5368  004FA0  2609               	addwf	___lmul@product^0,f,c
  5369  004FA2  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  5370  004FA4  220A               	addwfc	(___lmul@product+1)^0,f,c
  5371  004FA6  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  5372  004FA8  220B               	addwfc	(___lmul@product+2)^0,f,c
  5373  004FAA  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  5374  004FAC  220C               	addwfc	(___lmul@product+3)^0,f,c
  5375  004FAE                     l5514:
  5376  004FAE  90D8               	bcf	status,0,c
  5377  004FB0  3605               	rlcf	___lmul@multiplicand^0,f,c
  5378  004FB2  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  5379  004FB4  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  5380  004FB6  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  5381  004FB8  90D8               	bcf	status,0,c
  5382  004FBA  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  5383  004FBC  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  5384  004FBE  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  5385  004FC0  3201               	rrcf	___lmul@multiplier^0,f,c
  5386  004FC2  5001               	movf	___lmul@multiplier^0,w,c
  5387  004FC4  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  5388  004FC6  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  5389  004FC8  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  5390  004FCA  A4D8               	btfss	status,2,c
  5391  004FCC  EFEA  F027         	goto	u6451
  5392  004FD0  EFEC  F027         	goto	u6450
  5393  004FD4                     u6451:
  5394  004FD4  EFC8  F027         	goto	l5510
  5395  004FD8                     u6450:
  5396  004FD8  C009  F001         	movff	___lmul@product,?___lmul
  5397  004FDC  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  5398  004FE0  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  5399  004FE4  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  5400  004FE8  0012               	return		;funcret
  5401  004FEA                     __end_of___lmul:
  5402                           	callstack 0
  5403                           
  5404 ;; *************** function ___lldiv *****************
  5405 ;; Defined at:
  5406 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__lldiv.c"
  5407 ;; Parameters:    Size  Location     Type
  5408 ;;  dividend        4    0[COMRAM] unsigned long 
  5409 ;;  divisor         4    4[COMRAM] unsigned long 
  5410 ;; Auto vars:     Size  Location     Type
  5411 ;;  quotient        4    8[COMRAM] unsigned long 
  5412 ;;  counter         1   12[COMRAM] unsigned char 
  5413 ;; Return value:  Size  Location     Type
  5414 ;;                  4    0[COMRAM] unsigned long 
  5415 ;; Registers used:
  5416 ;;		wreg, status,2, status,0
  5417 ;; Tracked objects:
  5418 ;;		On entry : 0/0
  5419 ;;		On exit  : 0/0
  5420 ;;		Unchanged: 0/0
  5421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5422 ;;      Params:         8       0       0       0       0       0       0
  5423 ;;      Locals:         5       0       0       0       0       0       0
  5424 ;;      Temps:          0       0       0       0       0       0       0
  5425 ;;      Totals:        13       0       0       0       0       0       0
  5426 ;;Total ram usage:       13 bytes
  5427 ;; Hardware stack levels used:    1
  5428 ;; Hardware stack levels required when called:    1
  5429 ;; This function calls:
  5430 ;;		Nothing
  5431 ;; This function is called by:
  5432 ;;		_calculatedAverageValue
  5433 ;; This function uses a non-reentrant model
  5434 ;;
  5435                           
  5436                           	psect	text17
  5437  004BCE                     __ptext17:
  5438                           	callstack 0
  5439  004BCE                     ___lldiv:
  5440                           	callstack 24
  5441  004BCE  0E00               	movlw	0
  5442  004BD0  6E09               	movwf	___lldiv@quotient^0,c
  5443  004BD2  0E00               	movlw	0
  5444  004BD4  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  5445  004BD6  0E00               	movlw	0
  5446  004BD8  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  5447  004BDA  0E00               	movlw	0
  5448  004BDC  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  5449  004BDE  5005               	movf	___lldiv@divisor^0,w,c
  5450  004BE0  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  5451  004BE2  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  5452  004BE4  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  5453  004BE6  B4D8               	btfsc	status,2,c
  5454  004BE8  EFF8  F025         	goto	u6461
  5455  004BEC  EFFA  F025         	goto	u6460
  5456  004BF0                     u6461:
  5457  004BF0  EF30  F026         	goto	l724
  5458  004BF4                     u6460:
  5459  004BF4  0E01               	movlw	1
  5460  004BF6  6E0D               	movwf	___lldiv@counter^0,c
  5461  004BF8  EF04  F026         	goto	l5526
  5462  004BFC                     l5524:
  5463  004BFC  90D8               	bcf	status,0,c
  5464  004BFE  3605               	rlcf	___lldiv@divisor^0,f,c
  5465  004C00  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  5466  004C02  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  5467  004C04  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  5468  004C06  2A0D               	incf	___lldiv@counter^0,f,c
  5469  004C08                     l5526:
  5470  004C08  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  5471  004C0A  EF09  F026         	goto	u6471
  5472  004C0E  EF0B  F026         	goto	u6470
  5473  004C12                     u6471:
  5474  004C12  EFFE  F025         	goto	l5524
  5475  004C16                     u6470:
  5476  004C16                     l5528:
  5477  004C16  90D8               	bcf	status,0,c
  5478  004C18  3609               	rlcf	___lldiv@quotient^0,f,c
  5479  004C1A  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  5480  004C1C  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  5481  004C1E  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  5482  004C20  5005               	movf	___lldiv@divisor^0,w,c
  5483  004C22  5C01               	subwf	___lldiv@dividend^0,w,c
  5484  004C24  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5485  004C26  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  5486  004C28  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5487  004C2A  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  5488  004C2C  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5489  004C2E  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  5490  004C30  A0D8               	btfss	status,0,c
  5491  004C32  EF1D  F026         	goto	u6481
  5492  004C36  EF1F  F026         	goto	u6480
  5493  004C3A                     u6481:
  5494  004C3A  EF28  F026         	goto	l5536
  5495  004C3E                     u6480:
  5496  004C3E  5005               	movf	___lldiv@divisor^0,w,c
  5497  004C40  5E01               	subwf	___lldiv@dividend^0,f,c
  5498  004C42  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5499  004C44  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  5500  004C46  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5501  004C48  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  5502  004C4A  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5503  004C4C  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  5504  004C4E  8009               	bsf	___lldiv@quotient^0,0,c
  5505  004C50                     l5536:
  5506  004C50  90D8               	bcf	status,0,c
  5507  004C52  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  5508  004C54  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  5509  004C56  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  5510  004C58  3205               	rrcf	___lldiv@divisor^0,f,c
  5511  004C5A  2E0D               	decfsz	___lldiv@counter^0,f,c
  5512  004C5C  EF0B  F026         	goto	l5528
  5513  004C60                     l724:
  5514  004C60  C009  F001         	movff	___lldiv@quotient,?___lldiv
  5515  004C64  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  5516  004C68  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  5517  004C6C  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  5518  004C70  0012               	return		;funcret
  5519  004C72                     __end_of___lldiv:
  5520                           	callstack 0
  5521                           
  5522 ;; *************** function _exitLine *****************
  5523 ;; Defined at:
  5524 ;;		line 636 in file "fs_menu_controller.c"
  5525 ;; Parameters:    Size  Location     Type
  5526 ;;		None
  5527 ;; Auto vars:     Size  Location     Type
  5528 ;;		None
  5529 ;; Return value:  Size  Location     Type
  5530 ;;                  1    wreg      void 
  5531 ;; Registers used:
  5532 ;;		None
  5533 ;; Tracked objects:
  5534 ;;		On entry : 0/0
  5535 ;;		On exit  : 0/0
  5536 ;;		Unchanged: 0/0
  5537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5538 ;;      Params:         0       0       0       0       0       0       0
  5539 ;;      Locals:         0       0       0       0       0       0       0
  5540 ;;      Temps:          0       0       0       0       0       0       0
  5541 ;;      Totals:         0       0       0       0       0       0       0
  5542 ;;Total ram usage:        0 bytes
  5543 ;; Hardware stack levels used:    1
  5544 ;; Hardware stack levels required when called:    1
  5545 ;; This function calls:
  5546 ;;		Nothing
  5547 ;; This function is called by:
  5548 ;;		_stateMachine
  5549 ;; This function uses a non-reentrant model
  5550 ;;
  5551                           
  5552                           	psect	text18
  5553  0057DA                     __ptext18:
  5554                           	callstack 0
  5555  0057DA                     _exitLine:
  5556                           	callstack 27
  5557  0057DA  0012               	return		;funcret
  5558  0057DC                     __end_of_exitLine:
  5559                           	callstack 0
  5560                           
  5561 ;; *************** function _driverTimeSettingMenu *****************
  5562 ;; Defined at:
  5563 ;;		line 582 in file "fs_menu_controller.c"
  5564 ;; Parameters:    Size  Location     Type
  5565 ;;		None
  5566 ;; Auto vars:     Size  Location     Type
  5567 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  5568 ;; Return value:  Size  Location     Type
  5569 ;;                  1    wreg      void 
  5570 ;; Registers used:
  5571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5572 ;; Tracked objects:
  5573 ;;		On entry : 0/0
  5574 ;;		On exit  : 0/0
  5575 ;;		Unchanged: 0/0
  5576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5577 ;;      Params:         0       0       0       0       0       0       0
  5578 ;;      Locals:         0      16       0       0       0       0       0
  5579 ;;      Temps:          0       0       0       0       0       0       0
  5580 ;;      Totals:         0      16       0       0       0       0       0
  5581 ;;Total ram usage:       16 bytes
  5582 ;; Hardware stack levels used:    1
  5583 ;; Hardware stack levels required when called:    9
  5584 ;; This function calls:
  5585 ;;		_Lcd_Set_Cursor
  5586 ;;		_Lcd_Write_String
  5587 ;;		_eepromWrite
  5588 ;;		_sprintf
  5589 ;;		_stopMotor
  5590 ;; This function is called by:
  5591 ;;		_stateMachine
  5592 ;; This function uses a non-reentrant model
  5593 ;;
  5594                           
  5595                           	psect	text19
  5596  003E5E                     __ptext19:
  5597                           	callstack 0
  5598  003E5E                     _driverTimeSettingMenu:
  5599                           	callstack 19
  5600  003E5E                     
  5601                           ;fs_menu_controller.c: 584:     char textCursor2[16] = {0};
  5602  003E5E  EE20  F0E1         	lfsr	2,driverTimeSettingMenu@textCursor2
  5603  003E62  0E0F               	movlw	15
  5604  003E64                     u7091:
  5605  003E64  6ADE               	clrf	postinc2,c
  5606  003E66  06E8               	decf	wreg,f,c
  5607  003E68  E2FD               	bc	u7091
  5608  003E6A                     
  5609                           ;fs_menu_controller.c: 586:     stopMotor();
  5610  003E6A  EC6D  F02A         	call	_stopMotor	;wreg free
  5611  003E6E                     
  5612                           ;fs_menu_controller.c: 588:     if (menu_flags.menu_input_flag == 1)
  5613  003E6E  0101               	movlb	1	; () banked
  5614  003E70  0597               	decf	_menu_flags& (0+255),w,b
  5615  003E72  A4D8               	btfss	status,2,c
  5616  003E74  EF3E  F01F         	goto	u7101
  5617  003E78  EF40  F01F         	goto	u7100
  5618  003E7C                     u7101:
  5619  003E7C  EF45  F01F         	goto	l6008
  5620  003E80                     u7100:
  5621  003E80                     
  5622                           ; BSR set to: 1
  5623                           ;fs_menu_controller.c: 589:     {;fs_menu_controller.c: 590:         menu_flags.menu_inp
      +                          ut_flag = 0;
  5624  003E80  0E00               	movlw	0
  5625  003E82  6F97               	movwf	_menu_flags& (0+255),b
  5626                           
  5627                           ;fs_menu_controller.c: 591:         menu_selected = STOP_TIME_SETTING;
  5628  003E84  0E02               	movlw	2
  5629  003E86  0100               	movlb	0	; () banked
  5630  003E88  6FFB               	movwf	_menu_selected& (0+255),b
  5631  003E8A                     l6008:
  5632                           
  5633                           ;fs_menu_controller.c: 594:     if ((menu_flags.menu_increase_flag == 1) && (menu_value.
      +                          driver_time < 30))
  5634  003E8A  0101               	movlb	1	; () banked
  5635  003E8C  059B               	decf	(_menu_flags+4)& (0+255),w,b
  5636  003E8E  A4D8               	btfss	status,2,c
  5637  003E90  EF4C  F01F         	goto	u7111
  5638  003E94  EF4E  F01F         	goto	u7110
  5639  003E98                     u7111:
  5640  003E98  EF6A  F01F         	goto	l6026
  5641  003E9C                     u7110:
  5642  003E9C                     
  5643                           ; BSR set to: 1
  5644  003E9C  0E1E               	movlw	30
  5645  003E9E  0100               	movlb	0	; () banked
  5646  003EA0  61F3               	cpfslt	_menu_value& (0+255),b
  5647  003EA2  EF55  F01F         	goto	u7121
  5648  003EA6  EF57  F01F         	goto	u7120
  5649  003EAA                     u7121:
  5650  003EAA  EF6A  F01F         	goto	l6026
  5651  003EAE                     u7120:
  5652  003EAE                     
  5653                           ; BSR set to: 0
  5654                           ;fs_menu_controller.c: 595:     {;fs_menu_controller.c: 596:         menu_flags.menu_inc
      +                          rease_flag = 0;
  5655  003EAE  0E00               	movlw	0
  5656  003EB0  0101               	movlb	1	; () banked
  5657  003EB2  6F9B               	movwf	(_menu_flags+4)& (0+255),b
  5658  003EB4                     
  5659                           ; BSR set to: 1
  5660                           ;fs_menu_controller.c: 597:         menu_value.driver_time++;
  5661  003EB4  0100               	movlb	0	; () banked
  5662  003EB6  2BF3               	incf	_menu_value& (0+255),f,b
  5663  003EB8                     
  5664                           ; BSR set to: 0
  5665                           ;fs_menu_controller.c: 598:         eepromWrite(0x00,(uint8_t)menu_value.driver_time);
  5666  003EB8  C0F3  F001         	movff	_menu_value,eepromWrite@data
  5667  003EBC  0E00               	movlw	0
  5668  003EBE  EC4B  F02B         	call	_eepromWrite
  5669  003EC2                     
  5670                           ;fs_menu_controller.c: 599:         timer_value.minute =0 ;
  5671  003EC2  0E00               	movlw	0
  5672  003EC4  0101               	movlb	1	; () banked
  5673  003EC6  6F90               	movwf	(_timer_value+1)& (0+255),b
  5674  003EC8                     
  5675                           ; BSR set to: 1
  5676                           ;fs_menu_controller.c: 600:         timer_value.second = 0;
  5677  003EC8  0E00               	movlw	0
  5678  003ECA  6F8F               	movwf	_timer_value& (0+255),b
  5679  003ECC                     
  5680                           ; BSR set to: 1
  5681                           ;fs_menu_controller.c: 601:         timer_value.remainingSecond = 0;
  5682  003ECC  0E00               	movlw	0
  5683  003ECE  6F91               	movwf	(_timer_value+2)& (0+255),b
  5684  003ED0                     
  5685                           ; BSR set to: 1
  5686                           ;fs_menu_controller.c: 602:         timer_value.remainingMinute = menu_value.driver_time
      +                          ;
  5687  003ED0  C0F3  F192         	movff	_menu_value,_timer_value+3
  5688  003ED4                     l6026:
  5689                           
  5690                           ;fs_menu_controller.c: 605:     if ((menu_flags.menu_decrease_flag == 1) && (menu_value.
      +                          driver_time > 0))
  5691  003ED4  0101               	movlb	1	; () banked
  5692  003ED6  059C               	decf	(_menu_flags+5)& (0+255),w,b
  5693  003ED8  A4D8               	btfss	status,2,c
  5694  003EDA  EF71  F01F         	goto	u7131
  5695  003EDE  EF73  F01F         	goto	u7130
  5696  003EE2                     u7131:
  5697  003EE2  EF8F  F01F         	goto	l6044
  5698  003EE6                     u7130:
  5699  003EE6                     
  5700                           ; BSR set to: 1
  5701  003EE6  0100               	movlb	0	; () banked
  5702  003EE8  51F3               	movf	_menu_value& (0+255),w,b
  5703  003EEA  B4D8               	btfsc	status,2,c
  5704  003EEC  EF7A  F01F         	goto	u7141
  5705  003EF0  EF7C  F01F         	goto	u7140
  5706  003EF4                     u7141:
  5707  003EF4  EF8F  F01F         	goto	l6044
  5708  003EF8                     u7140:
  5709  003EF8                     
  5710                           ; BSR set to: 0
  5711                           ;fs_menu_controller.c: 606:     {;fs_menu_controller.c: 607:          menu_flags.menu_de
      +                          crease_flag = 0;
  5712  003EF8  0E00               	movlw	0
  5713  003EFA  0101               	movlb	1	; () banked
  5714  003EFC  6F9C               	movwf	(_menu_flags+5)& (0+255),b
  5715  003EFE                     
  5716                           ; BSR set to: 1
  5717                           ;fs_menu_controller.c: 608:          menu_value.driver_time--;
  5718  003EFE  0100               	movlb	0	; () banked
  5719  003F00  07F3               	decf	_menu_value& (0+255),f,b
  5720  003F02                     
  5721                           ; BSR set to: 0
  5722                           ;fs_menu_controller.c: 609:          eepromWrite(0x00,(uint8_t)menu_value.driver_time);
  5723  003F02  C0F3  F001         	movff	_menu_value,eepromWrite@data
  5724  003F06  0E00               	movlw	0
  5725  003F08  EC4B  F02B         	call	_eepromWrite
  5726  003F0C                     
  5727                           ;fs_menu_controller.c: 610:          timer_value.minute =0 ;
  5728  003F0C  0E00               	movlw	0
  5729  003F0E  0101               	movlb	1	; () banked
  5730  003F10  6F90               	movwf	(_timer_value+1)& (0+255),b
  5731  003F12                     
  5732                           ; BSR set to: 1
  5733                           ;fs_menu_controller.c: 611:          timer_value.second = 0;
  5734  003F12  0E00               	movlw	0
  5735  003F14  6F8F               	movwf	_timer_value& (0+255),b
  5736  003F16                     
  5737                           ; BSR set to: 1
  5738                           ;fs_menu_controller.c: 612:          timer_value.remainingSecond = 0;
  5739  003F16  0E00               	movlw	0
  5740  003F18  6F91               	movwf	(_timer_value+2)& (0+255),b
  5741  003F1A                     
  5742                           ; BSR set to: 1
  5743                           ;fs_menu_controller.c: 613:          timer_value.remainingMinute = menu_value.driver_tim
      +                          e;
  5744  003F1A  C0F3  F192         	movff	_menu_value,_timer_value+3
  5745  003F1E                     l6044:
  5746                           
  5747                           ;fs_menu_controller.c: 615:     Lcd_Set_Cursor(1,1);
  5748  003F1E  0E01               	movlw	1
  5749  003F20  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  5750  003F22  0E01               	movlw	1
  5751  003F24  EC2A  F028         	call	_Lcd_Set_Cursor
  5752  003F28                     
  5753                           ;fs_menu_controller.c: 616:     Lcd_Write_String("HAREKT ZAMANI dk");
  5754  003F28  0E5E               	movlw	low STR_17
  5755  003F2A  6E05               	movwf	Lcd_Write_String@a^0,c
  5756  003F2C  0E7F               	movlw	high STR_17
  5757  003F2E  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  5758  003F30  ECCC  F026         	call	_Lcd_Write_String	;wreg free
  5759  003F34                     
  5760                           ;fs_menu_controller.c: 617:     Lcd_Set_Cursor(2,1);
  5761  003F34  0E01               	movlw	1
  5762  003F36  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  5763  003F38  0E02               	movlw	2
  5764  003F3A  EC2A  F028         	call	_Lcd_Set_Cursor
  5765  003F3E                     
  5766                           ;fs_menu_controller.c: 618:     sprintf(textCursor2,"%d               ",menu_value.drive
      +                          r_time);
  5767  003F3E  0EE1               	movlw	low driverTimeSettingMenu@textCursor2
  5768  003F40  0100               	movlb	0	; () banked
  5769  003F42  6FCF               	movwf	sprintf@s& (0+255),b
  5770  003F44  0E00               	movlw	high driverTimeSettingMenu@textCursor2
  5771  003F46  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  5772  003F48  0EF7               	movlw	low STR_14
  5773  003F4A  6FD1               	movwf	sprintf@fmt& (0+255),b
  5774  003F4C  0E7E               	movlw	high STR_14
  5775  003F4E  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  5776  003F50  C0F3  F0D3         	movff	_menu_value,?_sprintf+4
  5777  003F54  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  5778  003F56  EC12  F029         	call	_sprintf	;wreg free
  5779  003F5A                     
  5780                           ;fs_menu_controller.c: 619:     Lcd_Write_String(textCursor2);
  5781  003F5A  0EE1               	movlw	low driverTimeSettingMenu@textCursor2
  5782  003F5C  6E05               	movwf	Lcd_Write_String@a^0,c
  5783  003F5E  0E00               	movlw	high driverTimeSettingMenu@textCursor2
  5784  003F60  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  5785  003F62  ECCC  F026         	call	_Lcd_Write_String	;wreg free
  5786  003F66                     
  5787                           ;fs_menu_controller.c: 621:     if(timer_value.menu_login_delay == 100)
  5788  003F66  0E64               	movlw	100
  5789  003F68  0101               	movlb	1	; () banked
  5790  003F6A  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  5791  003F6C  A4D8               	btfss	status,2,c
  5792  003F6E  EFBB  F01F         	goto	u7151
  5793  003F72  EFBD  F01F         	goto	u7150
  5794  003F76                     u7151:
  5795  003F76  EFC4  F01F         	goto	l518
  5796  003F7A                     u7150:
  5797  003F7A                     
  5798                           ; BSR set to: 1
  5799                           ;fs_menu_controller.c: 622:     {;fs_menu_controller.c: 623:         button_bounce_contr
      +                          oller.menu = 0;
  5800  003F7A  0E00               	movlw	0
  5801  003F7C  6F9D               	movwf	_button_bounce_controller& (0+255),b
  5802                           
  5803                           ;fs_menu_controller.c: 624:         timer_value.menu_login_delay = 0;
  5804  003F7E  0E00               	movlw	0
  5805  003F80  6F93               	movwf	(_timer_value+4)& (0+255),b
  5806                           
  5807                           ;fs_menu_controller.c: 625:         menu_selected = PAUSE_MENU;
  5808  003F82  0E06               	movlw	6
  5809  003F84  0100               	movlb	0	; () banked
  5810  003F86  6FFB               	movwf	_menu_selected& (0+255),b
  5811  003F88                     l518:
  5812  003F88  0012               	return		;funcret
  5813  003F8A                     __end_of_driverTimeSettingMenu:
  5814                           	callstack 0
  5815                           
  5816 ;; *************** function _stopMotor *****************
  5817 ;; Defined at:
  5818 ;;		line 77 in file "fs_speed_controller.c"
  5819 ;; Parameters:    Size  Location     Type
  5820 ;;		None
  5821 ;; Auto vars:     Size  Location     Type
  5822 ;;		None
  5823 ;; Return value:  Size  Location     Type
  5824 ;;                  1    wreg      void 
  5825 ;; Registers used:
  5826 ;;		wreg, status,2, status,0, cstack
  5827 ;; Tracked objects:
  5828 ;;		On entry : 0/0
  5829 ;;		On exit  : 0/0
  5830 ;;		Unchanged: 0/0
  5831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5832 ;;      Params:         0       0       0       0       0       0       0
  5833 ;;      Locals:         0       0       0       0       0       0       0
  5834 ;;      Temps:          0       0       0       0       0       0       0
  5835 ;;      Totals:         0       0       0       0       0       0       0
  5836 ;;Total ram usage:        0 bytes
  5837 ;; Hardware stack levels used:    1
  5838 ;; Hardware stack levels required when called:    3
  5839 ;; This function calls:
  5840 ;;		_PWM1_setDC
  5841 ;;		_PWM2_setDC
  5842 ;; This function is called by:
  5843 ;;		_stopMenu
  5844 ;;		_pauseMenu
  5845 ;;		_secretMenu
  5846 ;;		_speedLimitSettingMenu
  5847 ;;		_stopTimeSettingMenu
  5848 ;;		_driverTimeSettingMenu
  5849 ;; This function uses a non-reentrant model
  5850 ;;
  5851                           
  5852                           	psect	text20
  5853  0054DA                     __ptext20:
  5854                           	callstack 0
  5855  0054DA                     _stopMotor:
  5856                           	callstack 24
  5857  0054DA                     
  5858                           ;fs_speed_controller.c: 79:     controller.rightMotorSpeed = 0;
  5859  0054DA  0E00               	movlw	0
  5860  0054DC  0101               	movlb	1	; () banked
  5861  0054DE  6F59               	movwf	(_controller+9)& (0+255),b
  5862  0054E0  0E00               	movlw	0
  5863  0054E2  6F58               	movwf	(_controller+8)& (0+255),b
  5864                           
  5865                           ;fs_speed_controller.c: 80:     controller.leftMotorSpeed = 0;
  5866  0054E4  0E00               	movlw	0
  5867  0054E6  6F57               	movwf	(_controller+7)& (0+255),b
  5868  0054E8  0E00               	movlw	0
  5869  0054EA  6F56               	movwf	(_controller+6)& (0+255),b
  5870                           
  5871                           ;fs_speed_controller.c: 81:     driver_limit.ortalama = 0;
  5872  0054EC  0E00               	movlw	0
  5873  0054EE  6F8B               	movwf	(_driver_limit+8)& (0+255),b
  5874  0054F0  0E00               	movlw	0
  5875  0054F2  6F8C               	movwf	(_driver_limit+9)& (0+255),b
  5876  0054F4  0E00               	movlw	0
  5877  0054F6  6F8D               	movwf	(_driver_limit+10)& (0+255),b
  5878  0054F8  0E00               	movlw	0
  5879  0054FA  6F8E               	movwf	(_driver_limit+11)& (0+255),b
  5880  0054FC                     
  5881                           ; BSR set to: 1
  5882                           ;fs_speed_controller.c: 82:     PWM1_setDC(controller.leftMotorSpeed);
  5883  0054FC  C156  F058         	movff	_controller+6,PWM1_setDC@dutycycle
  5884  005500  C157  F059         	movff	_controller+7,PWM1_setDC@dutycycle+1
  5885  005504  EC48  F027         	call	_PWM1_setDC	;wreg free
  5886  005508                     
  5887                           ;fs_speed_controller.c: 83:     PWM2_setDC(controller.rightMotorSpeed);
  5888  005508  C158  F058         	movff	_controller+8,PWM2_setDC@dutycycle
  5889  00550C  C159  F059         	movff	_controller+9,PWM2_setDC@dutycycle+1
  5890  005510  EC0B  F027         	call	_PWM2_setDC	;wreg free
  5891  005514  0012               	return		;funcret
  5892  005516                     __end_of_stopMotor:
  5893                           	callstack 0
  5894                           
  5895 ;; *************** function _sprintf *****************
  5896 ;; Defined at:
  5897 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  5898 ;; Parameters:    Size  Location     Type
  5899 ;;  s               2  111[BANK0 ] PTR unsigned char 
  5900 ;;		 -> driverTimeSettingMenu@textCursor2(16), stopTimeSettingMenu@textCursor2(16), speedLimitSettingMenu@textCursor2(16
      +), secretMenu@textCursor2(16), 
  5901 ;;		 -> pauseMenu@textCursor2(16), stopMenu@textCursor2(16), mainMenu@textCursor2(16), 
  5902 ;;  fmt             2  113[BANK0 ] PTR const unsigned char 
  5903 ;;		 -> STR_18(18), STR_16(16), STR_14(18), STR_12(13), 
  5904 ;;		 -> STR_10(14), STR_8(16), STR_6(16), STR_4(15), 
  5905 ;; Auto vars:     Size  Location     Type
  5906 ;;  f               6  123[BANK0 ] struct _IO_FILE
  5907 ;;  ap              2  121[BANK0 ] PTR void [1]
  5908 ;;		 -> ?_sprintf(2), 
  5909 ;;  ret             2    0        int 
  5910 ;; Return value:  Size  Location     Type
  5911 ;;                  2  111[BANK0 ] int 
  5912 ;; Registers used:
  5913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5914 ;; Tracked objects:
  5915 ;;		On entry : 0/0
  5916 ;;		On exit  : 0/0
  5917 ;;		Unchanged: 0/0
  5918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5919 ;;      Params:         0       8       0       0       0       0       0
  5920 ;;      Locals:         0      10       0       0       0       0       0
  5921 ;;      Temps:          0       0       0       0       0       0       0
  5922 ;;      Totals:         0      18       0       0       0       0       0
  5923 ;;Total ram usage:       18 bytes
  5924 ;; Hardware stack levels used:    1
  5925 ;; Hardware stack levels required when called:    8
  5926 ;; This function calls:
  5927 ;;		_vfprintf
  5928 ;; This function is called by:
  5929 ;;		_mainMenu
  5930 ;;		_stopMenu
  5931 ;;		_pauseMenu
  5932 ;;		_secretMenu
  5933 ;;		_speedLimitSettingMenu
  5934 ;;		_stopTimeSettingMenu
  5935 ;;		_driverTimeSettingMenu
  5936 ;; This function uses a non-reentrant model
  5937 ;;
  5938                           
  5939                           	psect	text21
  5940  005224                     __ptext21:
  5941                           	callstack 0
  5942  005224                     _sprintf:
  5943                           	callstack 19
  5944  005224  0ED3               	movlw	low (?_sprintf+4)
  5945  005226  0100               	movlb	0	; () banked
  5946  005228  6FD9               	movwf	sprintf@ap& (0+255),b
  5947  00522A  0E00               	movlw	high (?_sprintf+4)
  5948  00522C  6FDA               	movwf	(sprintf@ap+1)& (0+255),b
  5949  00522E  C0CF  F0DB         	movff	sprintf@s,sprintf@f
  5950  005232  C0D0  F0DC         	movff	sprintf@s+1,sprintf@f+1
  5951  005236                     
  5952                           ; BSR set to: 0
  5953  005236  0E00               	movlw	0
  5954  005238  6FDE               	movwf	(sprintf@f+3)& (0+255),b
  5955  00523A  0E00               	movlw	0
  5956  00523C  6FDD               	movwf	(sprintf@f+2)& (0+255),b
  5957  00523E                     
  5958                           ; BSR set to: 0
  5959  00523E  0E00               	movlw	0
  5960  005240  6FE0               	movwf	(sprintf@f+5)& (0+255),b
  5961  005242  0E00               	movlw	0
  5962  005244  6FDF               	movwf	(sprintf@f+4)& (0+255),b
  5963  005246                     
  5964                           ; BSR set to: 0
  5965  005246  0EDB               	movlw	low sprintf@f
  5966  005248  6FC7               	movwf	vfprintf@fp& (0+255),b
  5967  00524A  0E00               	movlw	high sprintf@f
  5968  00524C  6FC8               	movwf	(vfprintf@fp+1)& (0+255),b
  5969  00524E  C0D1  F0C9         	movff	sprintf@fmt,vfprintf@fmt
  5970  005252  C0D2  F0CA         	movff	sprintf@fmt+1,vfprintf@fmt+1
  5971  005256  0ED9               	movlw	low sprintf@ap
  5972  005258  6FCB               	movwf	vfprintf@ap& (0+255),b
  5973  00525A  0E00               	movlw	high sprintf@ap
  5974  00525C  6FCC               	movwf	(vfprintf@ap+1)& (0+255),b
  5975  00525E  ECF5  F027         	call	_vfprintf	;wreg free
  5976  005262  0100               	movlb	0	; () banked
  5977  005264  51DD               	movf	(sprintf@f+2)& (0+255),w,b
  5978  005266  25CF               	addwf	sprintf@s& (0+255),w,b
  5979  005268  6ED9               	movwf	fsr2l,c
  5980  00526A  51DE               	movf	(sprintf@f+3)& (0+255),w,b
  5981  00526C  21D0               	addwfc	(sprintf@s+1)& (0+255),w,b
  5982  00526E  6EDA               	movwf	fsr2h,c
  5983  005270  0E00               	movlw	0
  5984  005272  6EDF               	movwf	indf2,c
  5985  005274                     
  5986                           ; BSR set to: 0
  5987  005274  0012               	return		;funcret
  5988  005276                     __end_of_sprintf:
  5989                           	callstack 0
  5990                           
  5991 ;; *************** function _vfprintf *****************
  5992 ;; Defined at:
  5993 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  5994 ;; Parameters:    Size  Location     Type
  5995 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  5996 ;;		 -> sprintf@f(6), 
  5997 ;;  fmt             2  105[BANK0 ] PTR const unsigned char 
  5998 ;;		 -> STR_18(18), STR_16(16), STR_14(18), STR_12(13), 
  5999 ;;		 -> STR_10(14), STR_8(16), STR_6(16), STR_4(15), 
  6000 ;;  ap              2  107[BANK0 ] PTR PTR void 
  6001 ;;		 -> sprintf@ap(2), 
  6002 ;; Auto vars:     Size  Location     Type
  6003 ;;  cfmt            2  109[BANK0 ] PTR unsigned char 
  6004 ;;		 -> STR_18(18), STR_16(16), STR_14(18), STR_12(13), 
  6005 ;;		 -> STR_10(14), STR_8(16), STR_6(16), STR_4(15), 
  6006 ;; Return value:  Size  Location     Type
  6007 ;;                  2  103[BANK0 ] int 
  6008 ;; Registers used:
  6009 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6010 ;; Tracked objects:
  6011 ;;		On entry : 0/0
  6012 ;;		On exit  : 0/0
  6013 ;;		Unchanged: 0/0
  6014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6015 ;;      Params:         0       6       0       0       0       0       0
  6016 ;;      Locals:         0       2       0       0       0       0       0
  6017 ;;      Temps:          0       0       0       0       0       0       0
  6018 ;;      Totals:         0       8       0       0       0       0       0
  6019 ;;Total ram usage:        8 bytes
  6020 ;; Hardware stack levels used:    1
  6021 ;; Hardware stack levels required when called:    7
  6022 ;; This function calls:
  6023 ;;		_vfpfcnvrt
  6024 ;; This function is called by:
  6025 ;;		_sprintf
  6026 ;; This function uses a non-reentrant model
  6027 ;;
  6028                           
  6029                           	psect	text22
  6030  004FEA                     __ptext22:
  6031                           	callstack 0
  6032  004FEA                     _vfprintf:
  6033                           	callstack 19
  6034  004FEA                     
  6035                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6036  004FEA  C0C9  F0CD         	movff	vfprintf@fmt,vfprintf@cfmt
  6037  004FEE  C0CA  F0CE         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6038  004FF2                     
  6039                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  6040  004FF2  0E00               	movlw	0
  6041  004FF4  0101               	movlb	1	; () banked
  6042  004FF6  6FB0               	movwf	(_nout+1)& (0+255),b
  6043  004FF8  0E00               	movlw	0
  6044  004FFA  6FAF               	movwf	_nout& (0+255),b
  6045                           
  6046                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  6047  004FFC  EF17  F028         	goto	l5858
  6048  005000                     l5856:
  6049                           
  6050                           ; BSR set to: 1
  6051                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6052  005000  C0C7  F0A7         	movff	vfprintf@fp,vfpfcnvrt@fp
  6053  005004  C0C8  F0A8         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6054  005008  0ECD               	movlw	low vfprintf@cfmt
  6055  00500A  0100               	movlb	0	; () banked
  6056  00500C  6FA9               	movwf	vfpfcnvrt@fmt& (0+255),b
  6057  00500E  0E00               	movlw	high vfprintf@cfmt
  6058  005010  6FAA               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  6059  005012  C0CB  F0AB         	movff	vfprintf@ap,vfpfcnvrt@ap
  6060  005016  C0CC  F0AC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6061  00501A  EC2A  F00A         	call	_vfpfcnvrt	;wreg free
  6062  00501E  0100               	movlb	0	; () banked
  6063  005020  51A7               	movf	?_vfpfcnvrt& (0+255),w,b
  6064  005022  0101               	movlb	1	; () banked
  6065  005024  27AF               	addwf	_nout& (0+255),f,b
  6066  005026  0100               	movlb	0	; () banked
  6067  005028  51A8               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  6068  00502A  0101               	movlb	1	; () banked
  6069  00502C  23B0               	addwfc	(_nout+1)& (0+255),f,b
  6070  00502E                     l5858:
  6071                           
  6072                           ; BSR set to: 1
  6073                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  6074  00502E  C0CD  FFF6         	movff	vfprintf@cfmt,tblptrl
  6075  005032  C0CE  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6076  005036                     	if	0	;tblptru may be non-zero
  6077  005036                     	endif
  6078  005036                     	if	0	;tblptru may be non-zero
  6079  005036                     	endif
  6080  005036  0008               	tblrd		*
  6081  005038  50F5               	movf	tablat,w,c
  6082  00503A  0900               	iorlw	0
  6083  00503C  A4D8               	btfss	status,2,c
  6084  00503E  EF23  F028         	goto	u6861
  6085  005042  EF25  F028         	goto	u6860
  6086  005046                     u6861:
  6087  005046  EF00  F028         	goto	l5856
  6088  00504A                     u6860:
  6089  00504A                     
  6090                           ; BSR set to: 1
  6091                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  6092  00504A  C1AF  F0C7         	movff	_nout,?_vfprintf
  6093  00504E  C1B0  F0C8         	movff	_nout+1,?_vfprintf+1
  6094  005052                     
  6095                           ; BSR set to: 1
  6096  005052  0012               	return		;funcret
  6097  005054                     __end_of_vfprintf:
  6098                           	callstack 0
  6099                           
  6100 ;; *************** function _vfpfcnvrt *****************
  6101 ;; Defined at:
  6102 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6103 ;; Parameters:    Size  Location     Type
  6104 ;;  fp              2   71[BANK0 ] PTR struct _IO_FILE
  6105 ;;		 -> sprintf@f(6), 
  6106 ;;  fmt             2   73[BANK0 ] PTR PTR unsigned char 
  6107 ;;		 -> vfprintf@cfmt(2), 
  6108 ;;  ap              2   75[BANK0 ] PTR PTR void 
  6109 ;;		 -> sprintf@ap(2), 
  6110 ;; Auto vars:     Size  Location     Type
  6111 ;;  ll              8   81[BANK0 ] long long 
  6112 ;;  llu             8    0        unsigned long long 
  6113 ;;  f               4   95[BANK0 ] unsigned long long 
  6114 ;;  ct              3   99[BANK0 ] unsigned char [3]
  6115 ;;  vp              3    0        PTR void 
  6116 ;;  cp              3    0        PTR unsigned char 
  6117 ;;  i               2    0        int 
  6118 ;;  done            2    0        int 
  6119 ;;  c               1  102[BANK0 ] unsigned char 
  6120 ;; Return value:  Size  Location     Type
  6121 ;;                  2   71[BANK0 ] int 
  6122 ;; Registers used:
  6123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6124 ;; Tracked objects:
  6125 ;;		On entry : 0/0
  6126 ;;		On exit  : 0/0
  6127 ;;		Unchanged: 0/0
  6128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6129 ;;      Params:         0       6       0       0       0       0       0
  6130 ;;      Locals:         0      22       0       0       0       0       0
  6131 ;;      Temps:          0       4       0       0       0       0       0
  6132 ;;      Totals:         0      32       0       0       0       0       0
  6133 ;;Total ram usage:       32 bytes
  6134 ;; Hardware stack levels used:    1
  6135 ;; Hardware stack levels required when called:    6
  6136 ;; This function calls:
  6137 ;;		_atoi
  6138 ;;		_dtoa
  6139 ;;		_efgtoa
  6140 ;;		_fputc
  6141 ;;		_isdigit
  6142 ;;		_isupper
  6143 ;;		_strncmp
  6144 ;;		_tolower
  6145 ;; This function is called by:
  6146 ;;		_vfprintf
  6147 ;; This function uses a non-reentrant model
  6148 ;;
  6149                           
  6150                           	psect	text23
  6151  001454                     __ptext23:
  6152                           	callstack 0
  6153  001454                     _vfpfcnvrt:
  6154                           	callstack 19
  6155  001454                     
  6156                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  6157  001454  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6158  001458  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6159  00145C  CFDE FFF6          	movff	postinc2,tblptrl
  6160  001460  CFDD FFF7          	movff	postdec2,tblptrh
  6161  001464                     	if	0	;tblptru may be non-zero
  6162  001464                     	endif
  6163  001464                     	if	0	;tblptru may be non-zero
  6164  001464                     	endif
  6165  001464  0008               	tblrd		*
  6166  001466  50F5               	movf	tablat,w,c
  6167  001468  0A25               	xorlw	37
  6168  00146A  A4D8               	btfss	status,2,c
  6169  00146C  EF3A  F00A         	goto	u6591
  6170  001470  EF3C  F00A         	goto	u6590
  6171  001474                     u6591:
  6172  001474  EF2D  F00D         	goto	l5696
  6173  001478                     u6590:
  6174  001478                     
  6175                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  6176  001478  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6177  00147C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6178  001480  2ADE               	incf	postinc2,f,c
  6179  001482  0E00               	movlw	0
  6180  001484  22DD               	addwfc	postdec2,f,c
  6181  001486                     
  6182                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  6183  001486  0E00               	movlw	0
  6184  001488  0101               	movlb	1	; () banked
  6185  00148A  6FB2               	movwf	(_width+1)& (0+255),b
  6186  00148C  0E00               	movlw	0
  6187  00148E  6FB1               	movwf	_width& (0+255),b
  6188  001490  C1B1  F0F8         	movff	_width,_flags
  6189  001494  C1B2  F0F9         	movff	_width+1,_flags+1
  6190  001498                     
  6191                           ; BSR set to: 1
  6192                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  6193  001498  0100               	movlb	0	; () banked
  6194  00149A  69F6               	setf	_prec& (0+255),b
  6195  00149C  69F7               	setf	(_prec+1)& (0+255),b
  6196  00149E                     
  6197                           ; BSR set to: 0
  6198                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  6199  00149E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6200  0014A2  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6201  0014A6  CFDE FFF6          	movff	postinc2,tblptrl
  6202  0014AA  CFDD FFF7          	movff	postdec2,tblptrh
  6203  0014AE                     	if	0	;tblptru may be non-zero
  6204  0014AE                     	endif
  6205  0014AE                     	if	0	;tblptru may be non-zero
  6206  0014AE                     	endif
  6207  0014AE  0008               	tblrd		*
  6208  0014B0  50F5               	movf	tablat,w,c
  6209  0014B2  0A2A               	xorlw	42
  6210  0014B4  A4D8               	btfss	status,2,c
  6211  0014B6  EF5F  F00A         	goto	u6601
  6212  0014BA  EF61  F00A         	goto	u6600
  6213  0014BE                     u6601:
  6214  0014BE  EF8D  F00A         	goto	l5602
  6215  0014C2                     u6600:
  6216  0014C2                     
  6217                           ; BSR set to: 0
  6218                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  6219  0014C2  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6220  0014C6  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6221  0014CA  2ADE               	incf	postinc2,f,c
  6222  0014CC  0E00               	movlw	0
  6223  0014CE  22DD               	addwfc	postdec2,f,c
  6224                           
  6225                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6226  0014D0  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6227  0014D4  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6228  0014D8  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6229  0014DC  0E02               	movlw	2
  6230  0014DE  26DE               	addwf	postinc2,f,c
  6231  0014E0  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6232  0014E4  0E00               	movlw	0
  6233  0014E6  22DD               	addwfc	postdec2,f,c
  6234  0014E8  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6235  0014EC  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6236  0014F0  CFDE F1B1          	movff	postinc2,_width
  6237  0014F4  CFDD F1B2          	movff	postdec2,_width+1
  6238  0014F8                     
  6239                           ; BSR set to: 0
  6240                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  6241  0014F8  0101               	movlb	1	; () banked
  6242  0014FA  BFB2               	btfsc	(_width+1)& (0+255),7,b
  6243  0014FC  EF84  F00A         	goto	u6610
  6244  001500  EF82  F00A         	goto	u6611
  6245  001504                     u6611:
  6246  001504  EFD1  F00A         	goto	l5612
  6247  001508                     u6610:
  6248  001508                     
  6249                           ; BSR set to: 1
  6250                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  6251  001508  0100               	movlb	0	; () banked
  6252  00150A  81F8               	bsf	_flags& (0+255),0,b
  6253                           
  6254                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  6255  00150C  0101               	movlb	1	; () banked
  6256  00150E  6DB1               	negf	_width& (0+255),b
  6257  001510  1FB2               	comf	(_width+1)& (0+255),f,b
  6258  001512  B0D8               	btfsc	status,0,c
  6259  001514  2BB2               	incf	(_width+1)& (0+255),f,b
  6260  001516  EFD1  F00A         	goto	l5612
  6261  00151A                     l5602:
  6262                           
  6263                           ; BSR set to: 0
  6264                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  6265  00151A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6266  00151E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6267  001522  CFDE F008          	movff	postinc2,atoi@s
  6268  001526  CFDD F009          	movff	postdec2,atoi@s+1
  6269  00152A  EC54  F01C         	call	_atoi	;wreg free
  6270  00152E  C008  F1B1         	movff	?_atoi,_width
  6271  001532  C009  F1B2         	movff	?_atoi+1,_width+1
  6272                           
  6273                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6274  001536  EFA4  F00A         	goto	l5606
  6275  00153A                     l5604:
  6276                           
  6277                           ; BSR set to: 0
  6278                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  6279  00153A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6280  00153E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6281  001542  2ADE               	incf	postinc2,f,c
  6282  001544  0E00               	movlw	0
  6283  001546  22DD               	addwfc	postdec2,f,c
  6284  001548                     l5606:
  6285  001548  0ED0               	movlw	208
  6286  00154A  0100               	movlb	0	; () banked
  6287  00154C  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  6288  00154E  0EFF               	movlw	255
  6289  001550  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6290  001552  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6291  001556  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6292  00155A  CFDE FFF6          	movff	postinc2,tblptrl
  6293  00155E  CFDD FFF7          	movff	postdec2,tblptrh
  6294  001562                     	if	0	;tblptru may be non-zero
  6295  001562                     	endif
  6296  001562                     	if	0	;tblptru may be non-zero
  6297  001562                     	endif
  6298  001562  0008               	tblrd		*
  6299  001564  50F5               	movf	tablat,w,c
  6300  001566  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6301  001568  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  6302  00156A  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  6303  00156C  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  6304  00156E  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6305  001570  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  6306  001572  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  6307  001574  E10A               	bnz	u6620
  6308  001576  0E0A               	movlw	10
  6309  001578  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  6310  00157A  A0D8               	btfss	status,0,c
  6311  00157C  EFC2  F00A         	goto	u6621
  6312  001580  EFC5  F00A         	goto	u6620
  6313  001584                     u6621:
  6314  001584  0E01               	movlw	1
  6315  001586  EFC6  F00A         	goto	u6630
  6316  00158A                     u6620:
  6317  00158A  0E00               	movlw	0
  6318  00158C                     u6630:
  6319  00158C  6FB9               	movwf	_vfpfcnvrt$3008& (0+255),b
  6320  00158E  6BBA               	clrf	(_vfpfcnvrt$3008+1)& (0+255),b
  6321  001590                     
  6322                           ; BSR set to: 0
  6323  001590  51B9               	movf	_vfpfcnvrt$3008& (0+255),w,b
  6324  001592  11BA               	iorwf	(_vfpfcnvrt$3008+1)& (0+255),w,b
  6325  001594  A4D8               	btfss	status,2,c
  6326  001596  EFCF  F00A         	goto	u6641
  6327  00159A  EFD1  F00A         	goto	u6640
  6328  00159E                     u6641:
  6329  00159E  EF9D  F00A         	goto	l5604
  6330  0015A2                     u6640:
  6331  0015A2                     l5612:
  6332                           
  6333                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  6334  0015A2  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6335  0015A6  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6336  0015AA  CFDE FFF6          	movff	postinc2,tblptrl
  6337  0015AE  CFDD FFF7          	movff	postdec2,tblptrh
  6338  0015B2                     	if	0	;tblptru may be non-zero
  6339  0015B2                     	endif
  6340  0015B2                     	if	0	;tblptru may be non-zero
  6341  0015B2                     	endif
  6342  0015B2  0008               	tblrd		*
  6343  0015B4  50F5               	movf	tablat,w,c
  6344  0015B6  0A2E               	xorlw	46
  6345  0015B8  A4D8               	btfss	status,2,c
  6346  0015BA  EFE1  F00A         	goto	u6651
  6347  0015BE  EFE3  F00A         	goto	u6650
  6348  0015C2                     u6651:
  6349  0015C2  EF62  F00B         	goto	l5632
  6350  0015C6                     u6650:
  6351  0015C6                     
  6352                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  6353  0015C6  0E00               	movlw	0
  6354  0015C8  0100               	movlb	0	; () banked
  6355  0015CA  6FF7               	movwf	(_prec+1)& (0+255),b
  6356  0015CC  0E00               	movlw	0
  6357  0015CE  6FF6               	movwf	_prec& (0+255),b
  6358  0015D0                     
  6359                           ; BSR set to: 0
  6360                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  6361  0015D0  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6362  0015D4  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6363  0015D8  2ADE               	incf	postinc2,f,c
  6364  0015DA  0E00               	movlw	0
  6365  0015DC  22DD               	addwfc	postdec2,f,c
  6366  0015DE                     
  6367                           ; BSR set to: 0
  6368                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  6369  0015DE  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6370  0015E2  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6371  0015E6  CFDE FFF6          	movff	postinc2,tblptrl
  6372  0015EA  CFDD FFF7          	movff	postdec2,tblptrh
  6373  0015EE                     	if	0	;tblptru may be non-zero
  6374  0015EE                     	endif
  6375  0015EE                     	if	0	;tblptru may be non-zero
  6376  0015EE                     	endif
  6377  0015EE  0008               	tblrd		*
  6378  0015F0  50F5               	movf	tablat,w,c
  6379  0015F2  0A2A               	xorlw	42
  6380  0015F4  A4D8               	btfss	status,2,c
  6381  0015F6  EFFF  F00A         	goto	u6661
  6382  0015FA  EF01  F00B         	goto	u6660
  6383  0015FE                     u6661:
  6384  0015FE  EF1E  F00B         	goto	l5622
  6385  001602                     u6660:
  6386  001602                     
  6387                           ; BSR set to: 0
  6388                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  6389  001602  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6390  001606  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6391  00160A  2ADE               	incf	postinc2,f,c
  6392  00160C  0E00               	movlw	0
  6393  00160E  22DD               	addwfc	postdec2,f,c
  6394                           
  6395                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  6396  001610  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6397  001614  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6398  001618  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6399  00161C  0E02               	movlw	2
  6400  00161E  26DE               	addwf	postinc2,f,c
  6401  001620  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6402  001624  0E00               	movlw	0
  6403  001626  22DD               	addwfc	postdec2,f,c
  6404  001628  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6405  00162C  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6406  001630  CFDE F0F6          	movff	postinc2,_prec
  6407  001634  CFDD F0F7          	movff	postdec2,_prec+1
  6408                           
  6409                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  6410  001638  EF62  F00B         	goto	l5632
  6411  00163C                     l5622:
  6412                           
  6413                           ; BSR set to: 0
  6414                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  6415  00163C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6416  001640  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6417  001644  CFDE F008          	movff	postinc2,atoi@s
  6418  001648  CFDD F009          	movff	postdec2,atoi@s+1
  6419  00164C  EC54  F01C         	call	_atoi	;wreg free
  6420  001650  C008  F0F6         	movff	?_atoi,_prec
  6421  001654  C009  F0F7         	movff	?_atoi+1,_prec+1
  6422                           
  6423                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6424  001658  EF35  F00B         	goto	l5626
  6425  00165C                     l5624:
  6426                           
  6427                           ; BSR set to: 0
  6428                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  6429  00165C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6430  001660  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6431  001664  2ADE               	incf	postinc2,f,c
  6432  001666  0E00               	movlw	0
  6433  001668  22DD               	addwfc	postdec2,f,c
  6434  00166A                     l5626:
  6435  00166A  0ED0               	movlw	208
  6436  00166C  0100               	movlb	0	; () banked
  6437  00166E  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  6438  001670  0EFF               	movlw	255
  6439  001672  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6440  001674  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6441  001678  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6442  00167C  CFDE FFF6          	movff	postinc2,tblptrl
  6443  001680  CFDD FFF7          	movff	postdec2,tblptrh
  6444  001684                     	if	0	;tblptru may be non-zero
  6445  001684                     	endif
  6446  001684                     	if	0	;tblptru may be non-zero
  6447  001684                     	endif
  6448  001684  0008               	tblrd		*
  6449  001686  50F5               	movf	tablat,w,c
  6450  001688  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6451  00168A  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  6452  00168C  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  6453  00168E  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  6454  001690  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6455  001692  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  6456  001694  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  6457  001696  E10A               	bnz	u6670
  6458  001698  0E0A               	movlw	10
  6459  00169A  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  6460  00169C  A0D8               	btfss	status,0,c
  6461  00169E  EF53  F00B         	goto	u6671
  6462  0016A2  EF56  F00B         	goto	u6670
  6463  0016A6                     u6671:
  6464  0016A6  0E01               	movlw	1
  6465  0016A8  EF57  F00B         	goto	u6680
  6466  0016AC                     u6670:
  6467  0016AC  0E00               	movlw	0
  6468  0016AE                     u6680:
  6469  0016AE  6FBB               	movwf	_vfpfcnvrt$3009& (0+255),b
  6470  0016B0  6BBC               	clrf	(_vfpfcnvrt$3009+1)& (0+255),b
  6471  0016B2                     
  6472                           ; BSR set to: 0
  6473  0016B2  51BB               	movf	_vfpfcnvrt$3009& (0+255),w,b
  6474  0016B4  11BC               	iorwf	(_vfpfcnvrt$3009+1)& (0+255),w,b
  6475  0016B6  A4D8               	btfss	status,2,c
  6476  0016B8  EF60  F00B         	goto	u6691
  6477  0016BC  EF62  F00B         	goto	u6690
  6478  0016C0                     u6691:
  6479  0016C0  EF2E  F00B         	goto	l5624
  6480  0016C4                     u6690:
  6481  0016C4                     l5632:
  6482                           
  6483                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0
      +                          ] = tolower((int)(*fmt)[0]);
  6484  0016C4  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6485  0016C8  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6486  0016CC  CFDE FFF6          	movff	postinc2,tblptrl
  6487  0016D0  CFDD FFF7          	movff	postdec2,tblptrh
  6488  0016D4                     	if	0	;tblptru may be non-zero
  6489  0016D4                     	endif
  6490  0016D4                     	if	0	;tblptru may be non-zero
  6491  0016D4                     	endif
  6492  0016D4  0008               	tblrd		*
  6493  0016D6  50F5               	movf	tablat,w,c
  6494  0016D8  6E07               	movwf	tolower@c^0,c
  6495  0016DA  6A08               	clrf	(tolower@c+1)^0,c
  6496  0016DC  EC5D  F028         	call	_tolower	;wreg free
  6497  0016E0  5007               	movf	?_tolower^0,w,c
  6498  0016E2  0100               	movlb	0	; () banked
  6499  0016E4  6FC3               	movwf	vfpfcnvrt@ct& (0+255),b
  6500  0016E6                     
  6501                           ; BSR set to: 0
  6502                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (
      +                          ct[0]) {
  6503  0016E6  51C3               	movf	vfpfcnvrt@ct& (0+255),w,b
  6504  0016E8  B4D8               	btfsc	status,2,c
  6505  0016EA  EF79  F00B         	goto	u6701
  6506  0016EE  EF7B  F00B         	goto	u6700
  6507  0016F2                     u6701:
  6508  0016F2  EFB5  F00B         	goto	l5642
  6509  0016F6                     u6700:
  6510  0016F6                     
  6511                           ; BSR set to: 0
  6512                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             
      +                          ct[1] = tolower((int)(*fmt)[1]);
  6513  0016F6  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6514  0016FA  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6515  0016FE  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  6516  001702  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  6517  001706  0E01               	movlw	1
  6518  001708  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  6519  00170A  0E00               	movlw	0
  6520  00170C  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6521  00170E  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6522  001712  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6523  001716                     	if	0	;tblptru may be non-zero
  6524  001716                     	endif
  6525  001716                     	if	0	;tblptru may be non-zero
  6526  001716                     	endif
  6527  001716  0008               	tblrd		*
  6528  001718  50F5               	movf	tablat,w,c
  6529  00171A  6E07               	movwf	tolower@c^0,c
  6530  00171C  6A08               	clrf	(tolower@c+1)^0,c
  6531  00171E  EC5D  F028         	call	_tolower	;wreg free
  6532  001722  5007               	movf	?_tolower^0,w,c
  6533  001724  0100               	movlb	0	; () banked
  6534  001726  6FC4               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  6535  001728                     
  6536                           ; BSR set to: 0
  6537                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             
      +                          if (ct[1]) {
  6538  001728  51C4               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  6539  00172A  B4D8               	btfsc	status,2,c
  6540  00172C  EF9A  F00B         	goto	u6711
  6541  001730  EF9C  F00B         	goto	u6710
  6542  001734                     u6711:
  6543  001734  EFB5  F00B         	goto	l5642
  6544  001738                     u6710:
  6545  001738                     
  6546                           ; BSR set to: 0
  6547                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:             
      +                              ct[2] = tolower((int)(*fmt)[2]);
  6548  001738  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6549  00173C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6550  001740  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  6551  001744  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  6552  001748  0E02               	movlw	2
  6553  00174A  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  6554  00174C  0E00               	movlw	0
  6555  00174E  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6556  001750  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6557  001754  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6558  001758                     	if	0	;tblptru may be non-zero
  6559  001758                     	endif
  6560  001758                     	if	0	;tblptru may be non-zero
  6561  001758                     	endif
  6562  001758  0008               	tblrd		*
  6563  00175A  50F5               	movf	tablat,w,c
  6564  00175C  6E07               	movwf	tolower@c^0,c
  6565  00175E  6A08               	clrf	(tolower@c+1)^0,c
  6566  001760  EC5D  F028         	call	_tolower	;wreg free
  6567  001764  5007               	movf	?_tolower^0,w,c
  6568  001766  0100               	movlb	0	; () banked
  6569  001768  6FC5               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  6570  00176A                     l5642:
  6571                           
  6572                           ; BSR set to: 0
  6573                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6574  00176A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6575  00176E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6576  001772  CFDE FFF6          	movff	postinc2,tblptrl
  6577  001776  CFDD FFF7          	movff	postdec2,tblptrh
  6578  00177A                     	if	0	;tblptru may be non-zero
  6579  00177A                     	endif
  6580  00177A                     	if	0	;tblptru may be non-zero
  6581  00177A                     	endif
  6582  00177A  0008               	tblrd		*
  6583  00177C  50F5               	movf	tablat,w,c
  6584  00177E  0A64               	xorlw	100
  6585  001780  B4D8               	btfsc	status,2,c
  6586  001782  EFC5  F00B         	goto	u6721
  6587  001786  EFC7  F00B         	goto	u6720
  6588  00178A                     u6721:
  6589  00178A  EFD9  F00B         	goto	l5646
  6590  00178E                     u6720:
  6591  00178E                     
  6592                           ; BSR set to: 0
  6593  00178E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6594  001792  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6595  001796  CFDE FFF6          	movff	postinc2,tblptrl
  6596  00179A  CFDD FFF7          	movff	postdec2,tblptrh
  6597  00179E                     	if	0	;tblptru may be non-zero
  6598  00179E                     	endif
  6599  00179E                     	if	0	;tblptru may be non-zero
  6600  00179E                     	endif
  6601  00179E  0008               	tblrd		*
  6602  0017A0  50F5               	movf	tablat,w,c
  6603  0017A2  0A69               	xorlw	105
  6604  0017A4  A4D8               	btfss	status,2,c
  6605  0017A6  EFD7  F00B         	goto	u6731
  6606  0017AA  EFD9  F00B         	goto	u6730
  6607  0017AE                     u6731:
  6608  0017AE  EF19  F00C         	goto	l5652
  6609  0017B2                     u6730:
  6610  0017B2                     l5646:
  6611                           
  6612                           ; BSR set to: 0
  6613                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  6614  0017B2  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6615  0017B6  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6616  0017BA  2ADE               	incf	postinc2,f,c
  6617  0017BC  0E00               	movlw	0
  6618  0017BE  22DD               	addwfc	postdec2,f,c
  6619                           
  6620                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6621  0017C0  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6622  0017C4  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6623  0017C8  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6624  0017CC  0E02               	movlw	2
  6625  0017CE  26DE               	addwf	postinc2,f,c
  6626  0017D0  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6627  0017D4  0E00               	movlw	0
  6628  0017D6  22DD               	addwfc	postdec2,f,c
  6629  0017D8  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6630  0017DC  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6631  0017E0  CFDE F0B1          	movff	postinc2,vfpfcnvrt@ll
  6632  0017E4  CFDD F0B2          	movff	postdec2,vfpfcnvrt@ll+1
  6633  0017E8  0E00               	movlw	0
  6634  0017EA  BFB2               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  6635  0017EC  0EFF               	movlw	-1
  6636  0017EE  6FB3               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  6637  0017F0  6FB4               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  6638  0017F2  6FB5               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  6639  0017F4  6FB6               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  6640  0017F6  6FB7               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  6641  0017F8  6FB8               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  6642  0017FA                     
  6643                           ; BSR set to: 0
  6644                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  6645  0017FA  C0A7  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  6646  0017FE  C0A8  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6647  001802  C0B1  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  6648  001806  C0B2  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  6649  00180A  C0B3  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  6650  00180E  C0B4  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  6651  001812  C0B5  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  6652  001816  C0B6  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  6653  00181A  C0B7  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  6654  00181E  C0B8  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  6655  001822  ECFE  F014         	call	_dtoa	;wreg free
  6656  001826  C01C  F0A7         	movff	?_dtoa,?_vfpfcnvrt
  6657  00182A  C01D  F0A8         	movff	?_dtoa+1,?_vfpfcnvrt+1
  6658  00182E  EF48  F00D         	goto	l1574
  6659  001832                     l5652:
  6660                           
  6661                           ; BSR set to: 0
  6662                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (
      +                          ct[0] == 'f') {
  6663  001832  0E66               	movlw	102
  6664  001834  19C3               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  6665  001836  A4D8               	btfss	status,2,c
  6666  001838  EF20  F00C         	goto	u6741
  6667  00183C  EF22  F00C         	goto	u6740
  6668  001840                     u6741:
  6669  001840  EF62  F00C         	goto	l5664
  6670  001844                     u6740:
  6671  001844                     
  6672                           ; BSR set to: 0
  6673                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             
      +                          c = (*fmt)[0];
  6674  001844  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6675  001848  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6676  00184C  CFDE FFF6          	movff	postinc2,tblptrl
  6677  001850  CFDD FFF7          	movff	postdec2,tblptrh
  6678  001854                     	if	0	;tblptru may be non-zero
  6679  001854                     	endif
  6680  001854                     	if	0	;tblptru may be non-zero
  6681  001854                     	endif
  6682  001854  0008               	tblrd		*
  6683  001856  CFF5 F0C6          	movff	tablat,vfpfcnvrt@c
  6684  00185A                     
  6685                           ; BSR set to: 0
  6686                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             
      +                          ++*fmt;
  6687  00185A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6688  00185E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6689  001862  2ADE               	incf	postinc2,f,c
  6690  001864  0E00               	movlw	0
  6691  001866  22DD               	addwfc	postdec2,f,c
  6692  001868                     
  6693                           ; BSR set to: 0
  6694                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  6695  001868  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6696  00186C  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6697  001870  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6698  001874  0E04               	movlw	4
  6699  001876  26DE               	addwf	postinc2,f,c
  6700  001878  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6701  00187C  0E00               	movlw	0
  6702  00187E  22DD               	addwfc	postdec2,f,c
  6703  001880  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6704  001884  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6705  001888  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  6706  00188C  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  6707  001890  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  6708  001894  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  6709  001898                     l5660:
  6710                           
  6711                           ; BSR set to: 0
  6712                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             
      +                          return efgtoa(fp, f, c);
  6713  001898  C0A7  F058         	movff	vfpfcnvrt@fp,efgtoa@fp
  6714  00189C  C0A8  F059         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  6715  0018A0  C0BF  F05A         	movff	vfpfcnvrt@f,efgtoa@f
  6716  0018A4  C0C0  F05B         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  6717  0018A8  C0C1  F05C         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  6718  0018AC  C0C2  F05D         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  6719  0018B0  C0C6  F05E         	movff	vfpfcnvrt@c,efgtoa@c
  6720  0018B4  EC4F  F000         	call	_efgtoa	;wreg free
  6721  0018B8  C058  F0A7         	movff	?_efgtoa,?_vfpfcnvrt
  6722  0018BC  C059  F0A8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  6723  0018C0  EF48  F00D         	goto	l1574
  6724  0018C4                     l5664:
  6725                           
  6726                           ; BSR set to: 0
  6727                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  6728  0018C4  0EC3               	movlw	low vfpfcnvrt@ct
  6729  0018C6  6E01               	movwf	strncmp@_l^0,c
  6730  0018C8  0E00               	movlw	high vfpfcnvrt@ct
  6731  0018CA  6E02               	movwf	(strncmp@_l+1)^0,c
  6732  0018CC  0EFB               	movlw	low STR_27
  6733  0018CE  6E03               	movwf	strncmp@_r^0,c
  6734  0018D0  0E7F               	movlw	high STR_27
  6735  0018D2  6E04               	movwf	(strncmp@_r+1)^0,c
  6736  0018D4  0E00               	movlw	0
  6737  0018D6  6E06               	movwf	(strncmp@n+1)^0,c
  6738  0018D8  0E02               	movlw	2
  6739  0018DA  6E05               	movwf	strncmp@n^0,c
  6740  0018DC  ECE3  F022         	call	_strncmp	;wreg free
  6741  0018E0  5001               	movf	?_strncmp^0,w,c
  6742  0018E2  1002               	iorwf	(?_strncmp+1)^0,w,c
  6743  0018E4  A4D8               	btfss	status,2,c
  6744  0018E6  EF77  F00C         	goto	u6751
  6745  0018EA  EF79  F00C         	goto	u6750
  6746  0018EE                     u6751:
  6747  0018EE  EFF5  F00C         	goto	l5680
  6748  0018F2                     u6750:
  6749  0018F2                     
  6750                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  6751  0018F2  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6752  0018F6  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6753  0018FA  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  6754  0018FE  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  6755  001902  0E01               	movlw	1
  6756  001904  0100               	movlb	0	; () banked
  6757  001906  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  6758  001908  0E00               	movlw	0
  6759  00190A  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6760  00190C  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6761  001910  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6762  001914                     	if	0	;tblptru may be non-zero
  6763  001914                     	endif
  6764  001914                     	if	0	;tblptru may be non-zero
  6765  001914                     	endif
  6766  001914  0008               	tblrd		*
  6767  001916  CFF5 F0C6          	movff	tablat,vfpfcnvrt@c
  6768  00191A  0EBF               	movlw	191
  6769  00191C  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  6770  00191E  0EFF               	movlw	255
  6771  001920  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6772  001922  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6773  001926  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6774  00192A  CFDE FFF6          	movff	postinc2,tblptrl
  6775  00192E  CFDD FFF7          	movff	postdec2,tblptrh
  6776  001932                     	if	0	;tblptru may be non-zero
  6777  001932                     	endif
  6778  001932                     	if	0	;tblptru may be non-zero
  6779  001932                     	endif
  6780  001932  0008               	tblrd		*
  6781  001934  50F5               	movf	tablat,w,c
  6782  001936  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6783  001938  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  6784  00193A  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  6785  00193C  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  6786  00193E  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6787  001940  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  6788  001942  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  6789  001944  E10A               	bnz	u6760
  6790  001946  0E1A               	movlw	26
  6791  001948  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  6792  00194A  A0D8               	btfss	status,0,c
  6793  00194C  EFAA  F00C         	goto	u6761
  6794  001950  EFAD  F00C         	goto	u6760
  6795  001954                     u6761:
  6796  001954  0E01               	movlw	1
  6797  001956  EFAE  F00C         	goto	u6770
  6798  00195A                     u6760:
  6799  00195A  0E00               	movlw	0
  6800  00195C                     u6770:
  6801  00195C  6FBD               	movwf	_vfpfcnvrt$3014& (0+255),b
  6802  00195E  6BBE               	clrf	(_vfpfcnvrt$3014+1)& (0+255),b
  6803  001960                     
  6804                           ; BSR set to: 0
  6805  001960  51BD               	movf	_vfpfcnvrt$3014& (0+255),w,b
  6806  001962  11BE               	iorwf	(_vfpfcnvrt$3014+1)& (0+255),w,b
  6807  001964  B4D8               	btfsc	status,2,c
  6808  001966  EFB7  F00C         	goto	u6781
  6809  00196A  EFB9  F00C         	goto	u6780
  6810  00196E                     u6781:
  6811  00196E  EFD3  F00C         	goto	l5674
  6812  001972                     u6780:
  6813  001972                     
  6814                           ; BSR set to: 0
  6815                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  6816  001972  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6817  001976  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6818  00197A  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6819  00197E  0E04               	movlw	4
  6820  001980  26DE               	addwf	postinc2,f,c
  6821  001982  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6822  001986  0E00               	movlw	0
  6823  001988  22DD               	addwfc	postdec2,f,c
  6824  00198A  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6825  00198E  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6826  001992  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  6827  001996  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  6828  00199A  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  6829  00199E  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  6830                           
  6831                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             
      +                          } else {
  6832  0019A2  EFEB  F00C         	goto	l1582
  6833  0019A6                     l5674:
  6834                           
  6835                           ; BSR set to: 0
  6836                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  6837  0019A6  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6838  0019AA  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6839  0019AE  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6840  0019B2  0E04               	movlw	4
  6841  0019B4  26DE               	addwf	postinc2,f,c
  6842  0019B6  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6843  0019BA  0E00               	movlw	0
  6844  0019BC  22DD               	addwfc	postdec2,f,c
  6845  0019BE  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6846  0019C2  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6847  0019C6  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  6848  0019CA  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  6849  0019CE  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  6850  0019D2  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  6851  0019D6                     l1582:
  6852                           
  6853                           ; BSR set to: 0
  6854                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  6855  0019D6  0E02               	movlw	2
  6856  0019D8  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6857  0019DC  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6858  0019E0  26DE               	addwf	postinc2,f,c
  6859  0019E2  0E00               	movlw	0
  6860  0019E4  22DD               	addwfc	postdec2,f,c
  6861  0019E6  EF4C  F00C         	goto	l5660
  6862  0019EA                     l5680:
  6863                           
  6864                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  6865  0019EA  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6866  0019EE  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6867  0019F2  CFDE FFF6          	movff	postinc2,tblptrl
  6868  0019F6  CFDD FFF7          	movff	postdec2,tblptrh
  6869  0019FA                     	if	0	;tblptru may be non-zero
  6870  0019FA                     	endif
  6871  0019FA                     	if	0	;tblptru may be non-zero
  6872  0019FA                     	endif
  6873  0019FA  0008               	tblrd		*
  6874  0019FC  50F5               	movf	tablat,w,c
  6875  0019FE  0A25               	xorlw	37
  6876  001A00  A4D8               	btfss	status,2,c
  6877  001A02  EF05  F00D         	goto	u6791
  6878  001A06  EF07  F00D         	goto	u6790
  6879  001A0A                     u6791:
  6880  001A0A  EF1F  F00D         	goto	l5690
  6881  001A0E                     u6790:
  6882  001A0E                     
  6883                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  6884  001A0E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6885  001A12  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6886  001A16  2ADE               	incf	postinc2,f,c
  6887  001A18  0E00               	movlw	0
  6888  001A1A  22DD               	addwfc	postdec2,f,c
  6889  001A1C                     
  6890                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  6891  001A1C  0E00               	movlw	0
  6892  001A1E  6E02               	movwf	(fputc@c+1)^0,c
  6893  001A20  0E25               	movlw	37
  6894  001A22  6E01               	movwf	fputc@c^0,c
  6895  001A24  C0A7  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6896  001A28  C0A8  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6897  001A2C  ECB7  F023         	call	_fputc	;wreg free
  6898  001A30                     l5686:
  6899                           
  6900                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  6901  001A30  0E00               	movlw	0
  6902  001A32  0100               	movlb	0	; () banked
  6903  001A34  6FA8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  6904  001A36  0E01               	movlw	1
  6905  001A38  6FA7               	movwf	?_vfpfcnvrt& (0+255),b
  6906  001A3A  EF48  F00D         	goto	l1574
  6907  001A3E                     l5690:
  6908                           
  6909                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  6910  001A3E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6911  001A42  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6912  001A46  2ADE               	incf	postinc2,f,c
  6913  001A48  0E00               	movlw	0
  6914  001A4A  22DD               	addwfc	postdec2,f,c
  6915  001A4C                     
  6916                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  6917  001A4C  0E00               	movlw	0
  6918  001A4E  0100               	movlb	0	; () banked
  6919  001A50  6FA8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  6920  001A52  0E00               	movlw	0
  6921  001A54  6FA7               	movwf	?_vfpfcnvrt& (0+255),b
  6922  001A56  EF48  F00D         	goto	l1574
  6923  001A5A                     l5696:
  6924                           
  6925                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  6926  001A5A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6927  001A5E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6928  001A62  CFDE FFF6          	movff	postinc2,tblptrl
  6929  001A66  CFDD FFF7          	movff	postdec2,tblptrh
  6930  001A6A                     	if	0	;tblptru may be non-zero
  6931  001A6A                     	endif
  6932  001A6A                     	if	0	;tblptru may be non-zero
  6933  001A6A                     	endif
  6934  001A6A  0008               	tblrd		*
  6935  001A6C  50F5               	movf	tablat,w,c
  6936  001A6E  6E01               	movwf	fputc@c^0,c
  6937  001A70  6A02               	clrf	(fputc@c+1)^0,c
  6938  001A72  C0A7  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6939  001A76  C0A8  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6940  001A7A  ECB7  F023         	call	_fputc	;wreg free
  6941  001A7E                     
  6942                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  6943  001A7E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6944  001A82  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6945  001A86  2ADE               	incf	postinc2,f,c
  6946  001A88  0E00               	movlw	0
  6947  001A8A  22DD               	addwfc	postdec2,f,c
  6948  001A8C  EF18  F00D         	goto	l5686
  6949  001A90                     l1574:
  6950  001A90  0012               	return		;funcret
  6951  001A92                     __end_of_vfpfcnvrt:
  6952                           	callstack 0
  6953                           
  6954 ;; *************** function _strncmp *****************
  6955 ;; Defined at:
  6956 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  6957 ;; Parameters:    Size  Location     Type
  6958 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  6959 ;;		 -> vfpfcnvrt@ct(3), 
  6960 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  6961 ;;		 -> STR_29(3), 
  6962 ;;  n               2    4[COMRAM] unsigned int 
  6963 ;; Auto vars:     Size  Location     Type
  6964 ;;  r               2    9[COMRAM] PTR const unsigned char 
  6965 ;;		 -> STR_29(3), 
  6966 ;;  l               2    7[COMRAM] PTR const unsigned char 
  6967 ;;		 -> vfpfcnvrt@ct(3), 
  6968 ;; Return value:  Size  Location     Type
  6969 ;;                  2    0[COMRAM] int 
  6970 ;; Registers used:
  6971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6972 ;; Tracked objects:
  6973 ;;		On entry : 0/0
  6974 ;;		On exit  : 0/0
  6975 ;;		Unchanged: 0/0
  6976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6977 ;;      Params:         6       0       0       0       0       0       0
  6978 ;;      Locals:         4       0       0       0       0       0       0
  6979 ;;      Temps:          1       0       0       0       0       0       0
  6980 ;;      Totals:        11       0       0       0       0       0       0
  6981 ;;Total ram usage:       11 bytes
  6982 ;; Hardware stack levels used:    1
  6983 ;; Hardware stack levels required when called:    1
  6984 ;; This function calls:
  6985 ;;		Nothing
  6986 ;; This function is called by:
  6987 ;;		_vfpfcnvrt
  6988 ;; This function uses a non-reentrant model
  6989 ;;
  6990                           
  6991                           	psect	text24
  6992  0045C6                     __ptext24:
  6993                           	callstack 0
  6994  0045C6                     _strncmp:
  6995                           	callstack 23
  6996  0045C6  C001  F008         	movff	strncmp@_l,strncmp@l
  6997  0045CA  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  6998  0045CE  C003  F00A         	movff	strncmp@_r,strncmp@r
  6999  0045D2  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  7000  0045D6  0605               	decf	strncmp@n^0,f,c
  7001  0045D8  A0D8               	btfss	status,0,c
  7002  0045DA  0606               	decf	(strncmp@n+1)^0,f,c
  7003  0045DC  2805               	incf	strncmp@n^0,w,c
  7004  0045DE  E106               	bnz	u6341
  7005  0045E0  2806               	incf	(strncmp@n+1)^0,w,c
  7006  0045E2  A4D8               	btfss	status,2,c
  7007  0045E4  EFF6  F022         	goto	u6341
  7008  0045E8  EFF8  F022         	goto	u6340
  7009  0045EC                     u6341:
  7010  0045EC  EF05  F023         	goto	l5458
  7011  0045F0                     u6340:
  7012  0045F0  0E00               	movlw	0
  7013  0045F2  6E02               	movwf	(?_strncmp+1)^0,c
  7014  0045F4  0E00               	movlw	0
  7015  0045F6  6E01               	movwf	?_strncmp^0,c
  7016  0045F8  EF4D  F023         	goto	l1710
  7017  0045FC                     l5456:
  7018  0045FC  4A08               	infsnz	strncmp@l^0,f,c
  7019  0045FE  2A09               	incf	(strncmp@l+1)^0,f,c
  7020  004600  4A0A               	infsnz	strncmp@r^0,f,c
  7021  004602  2A0B               	incf	(strncmp@r+1)^0,f,c
  7022  004604  0605               	decf	strncmp@n^0,f,c
  7023  004606  A0D8               	btfss	status,0,c
  7024  004608  0606               	decf	(strncmp@n+1)^0,f,c
  7025  00460A                     l5458:
  7026  00460A  C008  FFD9         	movff	strncmp@l,fsr2l
  7027  00460E  C009  FFDA         	movff	strncmp@l+1,fsr2h
  7028  004612  50DF               	movf	indf2,w,c
  7029  004614  B4D8               	btfsc	status,2,c
  7030  004616  EF0F  F023         	goto	u6351
  7031  00461A  EF11  F023         	goto	u6350
  7032  00461E                     u6351:
  7033  00461E  EF3C  F023         	goto	l5466
  7034  004622                     u6350:
  7035  004622  C00A  FFF6         	movff	strncmp@r,tblptrl
  7036  004626  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7037  00462A                     	if	0	;tblptru may be non-zero
  7038  00462A                     	endif
  7039  00462A                     	if	0	;tblptru may be non-zero
  7040  00462A                     	endif
  7041  00462A  0008               	tblrd		*
  7042  00462C  50F5               	movf	tablat,w,c
  7043  00462E  0900               	iorlw	0
  7044  004630  B4D8               	btfsc	status,2,c
  7045  004632  EF1D  F023         	goto	u6361
  7046  004636  EF1F  F023         	goto	u6360
  7047  00463A                     u6361:
  7048  00463A  EF3C  F023         	goto	l5466
  7049  00463E                     u6360:
  7050  00463E  5005               	movf	strncmp@n^0,w,c
  7051  004640  1006               	iorwf	(strncmp@n+1)^0,w,c
  7052  004642  B4D8               	btfsc	status,2,c
  7053  004644  EF26  F023         	goto	u6371
  7054  004648  EF28  F023         	goto	u6370
  7055  00464C                     u6371:
  7056  00464C  EF3C  F023         	goto	l5466
  7057  004650                     u6370:
  7058  004650  C008  FFD9         	movff	strncmp@l,fsr2l
  7059  004654  C009  FFDA         	movff	strncmp@l+1,fsr2h
  7060  004658  50DF               	movf	indf2,w,c
  7061  00465A  6E07               	movwf	??_strncmp^0,c
  7062  00465C  C00A  FFF6         	movff	strncmp@r,tblptrl
  7063  004660  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7064  004664                     	if	0	;tblptru may be non-zero
  7065  004664                     	endif
  7066  004664                     	if	0	;tblptru may be non-zero
  7067  004664                     	endif
  7068  004664  0008               	tblrd		*
  7069  004666  50F5               	movf	tablat,w,c
  7070  004668  1807               	xorwf	??_strncmp^0,w,c
  7071  00466A  B4D8               	btfsc	status,2,c
  7072  00466C  EF3A  F023         	goto	u6381
  7073  004670  EF3C  F023         	goto	u6380
  7074  004674                     u6381:
  7075  004674  EFFE  F022         	goto	l5456
  7076  004678                     u6380:
  7077  004678                     l5466:
  7078  004678  C008  FFD9         	movff	strncmp@l,fsr2l
  7079  00467C  C009  FFDA         	movff	strncmp@l+1,fsr2h
  7080  004680  50DF               	movf	indf2,w,c
  7081  004682  6E07               	movwf	??_strncmp^0,c
  7082  004684  C00A  FFF6         	movff	strncmp@r,tblptrl
  7083  004688  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7084  00468C                     	if	0	;tblptru may be non-zero
  7085  00468C                     	endif
  7086  00468C                     	if	0	;tblptru may be non-zero
  7087  00468C                     	endif
  7088  00468C  0008               	tblrd		*
  7089  00468E  50F5               	movf	tablat,w,c
  7090  004690  5C07               	subwf	??_strncmp^0,w,c
  7091  004692  6E01               	movwf	?_strncmp^0,c
  7092  004694  6A02               	clrf	(?_strncmp+1)^0,c
  7093  004696  A0D8               	btfss	status,0,c
  7094  004698  0602               	decf	(?_strncmp+1)^0,f,c
  7095  00469A                     l1710:
  7096  00469A  0012               	return		;funcret
  7097  00469C                     __end_of_strncmp:
  7098                           	callstack 0
  7099                           
  7100 ;; *************** function _efgtoa *****************
  7101 ;; Defined at:
  7102 ;;		line 319 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7103 ;; Parameters:    Size  Location     Type
  7104 ;;  fp              2   87[COMRAM] PTR struct _IO_FILE
  7105 ;;		 -> sprintf@f(6), 
  7106 ;;  f               4   89[COMRAM] PTR struct _IO_FILE
  7107 ;;  c               1   93[COMRAM] unsigned char 
  7108 ;; Auto vars:     Size  Location     Type
  7109 ;;  u               4   67[BANK0 ] unsigned char 
  7110 ;;  g               4   59[BANK0 ] unsigned char 
  7111 ;;  l               4   53[BANK0 ] unsigned char 
  7112 ;;  h               4   49[BANK0 ] unsigned char 
  7113 ;;  ou              4   15[BANK0 ] unsigned char 
  7114 ;;  n               2   65[BANK0 ] int 
  7115 ;;  e               2   63[BANK0 ] int 
  7116 ;;  i               2   57[BANK0 ] int 
  7117 ;;  w               2   46[BANK0 ] int 
  7118 ;;  p               2   43[BANK0 ] int 
  7119 ;;  sign            2   41[BANK0 ] int 
  7120 ;;  d               2   39[BANK0 ] int 
  7121 ;;  ne              2   37[BANK0 ] int 
  7122 ;;  m               2   35[BANK0 ] int 
  7123 ;;  pp              2   33[BANK0 ] int 
  7124 ;;  t               2   31[BANK0 ] int 
  7125 ;;  mode            1   48[BANK0 ] unsigned char 
  7126 ;;  nmode           1   45[BANK0 ] unsigned char 
  7127 ;; Return value:  Size  Location     Type
  7128 ;;                  2   87[COMRAM] int 
  7129 ;; Registers used:
  7130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7131 ;; Tracked objects:
  7132 ;;		On entry : 0/0
  7133 ;;		On exit  : 0/0
  7134 ;;		Unchanged: 0/0
  7135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7136 ;;      Params:         7       0       0       0       0       0       0
  7137 ;;      Locals:         0      56       0       0       0       0       0
  7138 ;;      Temps:          0       5       0       0       0       0       0
  7139 ;;      Totals:         7      61       0       0       0       0       0
  7140 ;;Total ram usage:       68 bytes
  7141 ;; Hardware stack levels used:    1
  7142 ;; Hardware stack levels required when called:    5
  7143 ;; This function calls:
  7144 ;;		___awdiv
  7145 ;;		___awmod
  7146 ;;		___fladd
  7147 ;;		___fldiv
  7148 ;;		___fleq
  7149 ;;		___flge
  7150 ;;		___flmul
  7151 ;;		___flneg
  7152 ;;		___flsub
  7153 ;;		___fltol
  7154 ;;		___fpclassifyf
  7155 ;;		_floorf
  7156 ;;		_isupper
  7157 ;;		_pad
  7158 ;;		_strcpy
  7159 ;;		_tolower
  7160 ;; This function is called by:
  7161 ;;		_vfpfcnvrt
  7162 ;; This function uses a non-reentrant model
  7163 ;;
  7164                           
  7165                           	psect	text25
  7166  00009E                     __ptext25:
  7167                           	callstack 0
  7168  00009E                     _efgtoa:
  7169                           	callstack 19
  7170  00009E                     
  7171                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\
      +                          c99\common\doprnt.c: 320: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\
      +                          doprnt.c: 321:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c9
      +                          9\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;
  7172  00009E  0E00               	movlw	0
  7173  0000A0  0100               	movlb	0	; () banked
  7174  0000A2  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  7175  0000A4  0E00               	movlw	0
  7176  0000A6  6F89               	movwf	efgtoa@sign& (0+255),b
  7177  0000A8                     
  7178                           ; BSR set to: 0
  7179                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  7180  0000A8  C05A  F09B         	movff	efgtoa@f,efgtoa@g
  7181  0000AC  C05B  F09C         	movff	efgtoa@f+1,efgtoa@g+1
  7182  0000B0  C05C  F09D         	movff	efgtoa@f+2,efgtoa@g+2
  7183  0000B4  C05D  F09E         	movff	efgtoa@f+3,efgtoa@g+3
  7184  0000B8                     
  7185                           ; BSR set to: 0
  7186                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 
      +                          0.0) {
  7187  0000B8  BF9E               	btfsc	(efgtoa@g+3)& (0+255),7,b
  7188  0000BA  EF63  F000         	goto	u5750
  7189  0000BE  EF61  F000         	goto	u5751
  7190  0000C2                     u5751:
  7191  0000C2  EF79  F000         	goto	l5120
  7192  0000C6                     u5750:
  7193  0000C6                     
  7194                           ; BSR set to: 0
  7195                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign
      +                           = 1;
  7196  0000C6  0E00               	movlw	0
  7197  0000C8  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  7198  0000CA  0E01               	movlw	1
  7199  0000CC  6F89               	movwf	efgtoa@sign& (0+255),b
  7200  0000CE                     
  7201                           ; BSR set to: 0
  7202                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = 
      +                          -g;
  7203  0000CE  C09B  F001         	movff	efgtoa@g,___flneg@f1
  7204  0000D2  C09C  F002         	movff	efgtoa@g+1,___flneg@f1+1
  7205  0000D6  C09D  F003         	movff	efgtoa@g+2,___flneg@f1+2
  7206  0000DA  C09E  F004         	movff	efgtoa@g+3,___flneg@f1+3
  7207  0000DE  ECA7  F02A         	call	___flneg	;wreg free
  7208  0000E2  C001  F09B         	movff	?___flneg,efgtoa@g
  7209  0000E6  C002  F09C         	movff	?___flneg+1,efgtoa@g+1
  7210  0000EA  C003  F09D         	movff	?___flneg+2,efgtoa@g+2
  7211  0000EE  C004  F09E         	movff	?___flneg+3,efgtoa@g+3
  7212  0000F2                     l5120:
  7213                           
  7214                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  7215  0000F2  0E00               	movlw	0
  7216  0000F4  0100               	movlb	0	; () banked
  7217  0000F6  6FA2               	movwf	(efgtoa@n+1)& (0+255),b
  7218  0000F8  0E00               	movlw	0
  7219  0000FA  6FA1               	movwf	efgtoa@n& (0+255),b
  7220  0000FC                     
  7221                           ; BSR set to: 0
  7222                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = widt
      +                          h;
  7223  0000FC  C1B1  F08E         	movff	_width,efgtoa@w
  7224  000100  C1B2  F08F         	movff	_width+1,efgtoa@w+1
  7225  000104                     
  7226                           ; BSR set to: 0
  7227                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign
      +                           || (flags & (1 << 2))) {
  7228  000104  5189               	movf	efgtoa@sign& (0+255),w,b
  7229  000106  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7230  000108  A4D8               	btfss	status,2,c
  7231  00010A  EF89  F000         	goto	u5761
  7232  00010E  EF8B  F000         	goto	u5760
  7233  000112                     u5761:
  7234  000112  EF92  F000         	goto	l5128
  7235  000116                     u5760:
  7236  000116                     
  7237                           ; BSR set to: 0
  7238  000116  A5F8               	btfss	_flags& (0+255),2,b
  7239  000118  EF90  F000         	goto	u5771
  7240  00011C  EF92  F000         	goto	u5770
  7241  000120                     u5771:
  7242  000120  EFAC  F000         	goto	l5140
  7243  000124                     u5770:
  7244  000124                     l5128:
  7245                           
  7246                           ; BSR set to: 0
  7247                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf
      +                          [n] = sign ? '-' : '+';
  7248  000124  5189               	movf	efgtoa@sign& (0+255),w,b
  7249  000126  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7250  000128  A4D8               	btfss	status,2,c
  7251  00012A  EF99  F000         	goto	u5781
  7252  00012E  EF9B  F000         	goto	u5780
  7253  000132                     u5781:
  7254  000132  EFA1  F000         	goto	l5132
  7255  000136                     u5780:
  7256  000136                     
  7257                           ; BSR set to: 0
  7258  000136  0E00               	movlw	0
  7259  000138  6F74               	movwf	(_efgtoa$2983+1)& (0+255),b
  7260  00013A  0E2B               	movlw	43
  7261  00013C  6F73               	movwf	_efgtoa$2983& (0+255),b
  7262  00013E  EFA5  F000         	goto	l5134
  7263  000142                     l5132:
  7264                           
  7265                           ; BSR set to: 0
  7266  000142  0E00               	movlw	0
  7267  000144  6F74               	movwf	(_efgtoa$2983+1)& (0+255),b
  7268  000146  0E2D               	movlw	45
  7269  000148  6F73               	movwf	_efgtoa$2983& (0+255),b
  7270  00014A                     l5134:
  7271                           
  7272                           ; BSR set to: 0
  7273  00014A  C073  F260         	movff	_efgtoa$2983,_dbuf
  7274  00014E                     
  7275                           ; BSR set to: 0
  7276                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  7277  00014E  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  7278  000150  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  7279  000152                     
  7280                           ; BSR set to: 0
  7281                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  7282  000152  078E               	decf	efgtoa@w& (0+255),f,b
  7283  000154  A0D8               	btfss	status,0,c
  7284  000156  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  7285  000158                     l5140:
  7286                           
  7287                           ; BSR set to: 0
  7288                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  7289  000158  C09B  F001         	movff	efgtoa@g,___fpclassifyf@x
  7290  00015C  C09C  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7291  000160  C09D  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7292  000164  C09E  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7293  000168  EC64  F022         	call	___fpclassifyf	;wreg free
  7294  00016C  0401               	decf	?___fpclassifyf^0,w,c
  7295  00016E  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  7296  000170  A4D8               	btfss	status,2,c
  7297  000172  EFBD  F000         	goto	u5791
  7298  000176  EFBF  F000         	goto	u5790
  7299  00017A                     u5791:
  7300  00017A  EF16  F001         	goto	l5158
  7301  00017E                     u5790:
  7302  00017E  0EBF               	movlw	191
  7303  000180  0100               	movlb	0	; () banked
  7304  000182  6F6A               	movwf	??_efgtoa& (0+255),b
  7305  000184  0EFF               	movlw	255
  7306  000186  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  7307  000188  505E               	movf	efgtoa@c^0,w,c
  7308  00018A  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  7309  00018C  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  7310  00018E  516A               	movf	??_efgtoa& (0+255),w,b
  7311  000190  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  7312  000192  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  7313  000194  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7314  000196  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  7315  000198  E10A               	bnz	u5800
  7316  00019A  0E1A               	movlw	26
  7317  00019C  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  7318  00019E  A0D8               	btfss	status,0,c
  7319  0001A0  EFD4  F000         	goto	u5801
  7320  0001A4  EFD7  F000         	goto	u5800
  7321  0001A8                     u5801:
  7322  0001A8  0E01               	movlw	1
  7323  0001AA  EFD8  F000         	goto	u5810
  7324  0001AE                     u5800:
  7325  0001AE  0E00               	movlw	0
  7326  0001B0                     u5810:
  7327  0001B0  6F75               	movwf	_efgtoa$2984& (0+255),b
  7328  0001B2  6B76               	clrf	(_efgtoa$2984+1)& (0+255),b
  7329  0001B4                     
  7330                           ; BSR set to: 0
  7331  0001B4  5175               	movf	_efgtoa$2984& (0+255),w,b
  7332  0001B6  1176               	iorwf	(_efgtoa$2984+1)& (0+255),w,b
  7333  0001B8  B4D8               	btfsc	status,2,c
  7334  0001BA  EFE1  F000         	goto	u5821
  7335  0001BE  EFE3  F000         	goto	u5820
  7336  0001C2                     u5821:
  7337  0001C2  EFF1  F000         	goto	l5150
  7338  0001C6                     u5820:
  7339  0001C6                     
  7340                           ; BSR set to: 0
  7341                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             
      +                          strcpy(&dbuf[n], "INF");
  7342  0001C6  0E60               	movlw	low _dbuf
  7343  0001C8  25A1               	addwf	efgtoa@n& (0+255),w,b
  7344  0001CA  6E01               	movwf	strcpy@dest^0,c
  7345  0001CC  0E02               	movlw	high _dbuf
  7346  0001CE  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7347  0001D0  6E02               	movwf	(strcpy@dest+1)^0,c
  7348  0001D2  0EEB               	movlw	low STR_19
  7349  0001D4  6E03               	movwf	strcpy@src^0,c
  7350  0001D6  0E7F               	movlw	high STR_19
  7351  0001D8  6E04               	movwf	(strcpy@src+1)^0,c
  7352  0001DA  EC8D  F028         	call	_strcpy	;wreg free
  7353                           
  7354                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } el
      +                          se {
  7355  0001DE  EFFD  F000         	goto	l5152
  7356  0001E2                     l5150:
  7357                           
  7358                           ; BSR set to: 0
  7359                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             
      +                          strcpy(&dbuf[n], "inf");
  7360  0001E2  0E60               	movlw	low _dbuf
  7361  0001E4  25A1               	addwf	efgtoa@n& (0+255),w,b
  7362  0001E6  6E01               	movwf	strcpy@dest^0,c
  7363  0001E8  0E02               	movlw	high _dbuf
  7364  0001EA  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7365  0001EC  6E02               	movwf	(strcpy@dest+1)^0,c
  7366  0001EE  0EF3               	movlw	low STR_20
  7367  0001F0  6E03               	movwf	strcpy@src^0,c
  7368  0001F2  0E7F               	movlw	high STR_20
  7369  0001F4  6E04               	movwf	(strcpy@src+1)^0,c
  7370  0001F6  EC8D  F028         	call	_strcpy	;wreg free
  7371  0001FA                     l5152:
  7372                           
  7373                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  7374  0001FA  0100               	movlb	0	; () banked
  7375  0001FC  0EFD               	movlw	253
  7376  0001FE  278E               	addwf	efgtoa@w& (0+255),f,b
  7377  000200  0EFF               	movlw	255
  7378  000202  238F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  7379  000204                     l5154:
  7380                           
  7381                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         retu
      +                          rn pad(fp, &dbuf[0], w);
  7382  000204  C058  F011         	movff	efgtoa@fp,pad@fp
  7383  000208  C059  F012         	movff	efgtoa@fp+1,pad@fp+1
  7384  00020C  0E60               	movlw	low _dbuf
  7385  00020E  6E13               	movwf	pad@buf^0,c
  7386  000210  0E02               	movlw	high _dbuf
  7387  000212  6E14               	movwf	(pad@buf+1)^0,c
  7388  000214  C08E  F015         	movff	efgtoa@w,pad@p
  7389  000218  C08F  F016         	movff	efgtoa@w+1,pad@p+1
  7390  00021C  EC1C  F024         	call	_pad	;wreg free
  7391  000220  C011  F058         	movff	?_pad,?_efgtoa
  7392  000224  C012  F059         	movff	?_pad+1,?_efgtoa+1
  7393  000228  EF26  F006         	goto	l1472
  7394  00022C                     l5158:
  7395                           
  7396                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  7397  00022C  C09B  F001         	movff	efgtoa@g,___fpclassifyf@x
  7398  000230  C09C  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7399  000234  C09D  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7400  000238  C09E  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7401  00023C  EC64  F022         	call	___fpclassifyf	;wreg free
  7402  000240  5001               	movf	?___fpclassifyf^0,w,c
  7403  000242  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  7404  000244  A4D8               	btfss	status,2,c
  7405  000246  EF27  F001         	goto	u5831
  7406  00024A  EF29  F001         	goto	u5830
  7407  00024E                     u5831:
  7408  00024E  EF69  F001         	goto	l5176
  7409  000252                     u5830:
  7410  000252  0EBF               	movlw	191
  7411  000254  0100               	movlb	0	; () banked
  7412  000256  6F6A               	movwf	??_efgtoa& (0+255),b
  7413  000258  0EFF               	movlw	255
  7414  00025A  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  7415  00025C  505E               	movf	efgtoa@c^0,w,c
  7416  00025E  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  7417  000260  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  7418  000262  516A               	movf	??_efgtoa& (0+255),w,b
  7419  000264  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  7420  000266  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  7421  000268  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7422  00026A  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  7423  00026C  E10A               	bnz	u5840
  7424  00026E  0E1A               	movlw	26
  7425  000270  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  7426  000272  A0D8               	btfss	status,0,c
  7427  000274  EF3E  F001         	goto	u5841
  7428  000278  EF41  F001         	goto	u5840
  7429  00027C                     u5841:
  7430  00027C  0E01               	movlw	1
  7431  00027E  EF42  F001         	goto	u5850
  7432  000282                     u5840:
  7433  000282  0E00               	movlw	0
  7434  000284                     u5850:
  7435  000284  6F77               	movwf	_efgtoa$2988& (0+255),b
  7436  000286  6B78               	clrf	(_efgtoa$2988+1)& (0+255),b
  7437  000288                     
  7438                           ; BSR set to: 0
  7439  000288  5177               	movf	_efgtoa$2988& (0+255),w,b
  7440  00028A  1178               	iorwf	(_efgtoa$2988+1)& (0+255),w,b
  7441  00028C  B4D8               	btfsc	status,2,c
  7442  00028E  EF4B  F001         	goto	u5861
  7443  000292  EF4D  F001         	goto	u5860
  7444  000296                     u5861:
  7445  000296  EF5B  F001         	goto	l5168
  7446  00029A                     u5860:
  7447  00029A                     
  7448                           ; BSR set to: 0
  7449                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             
      +                          strcpy(&dbuf[n], "NAN");
  7450  00029A  0E60               	movlw	low _dbuf
  7451  00029C  25A1               	addwf	efgtoa@n& (0+255),w,b
  7452  00029E  6E01               	movwf	strcpy@dest^0,c
  7453  0002A0  0E02               	movlw	high _dbuf
  7454  0002A2  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7455  0002A4  6E02               	movwf	(strcpy@dest+1)^0,c
  7456  0002A6  0EEF               	movlw	low STR_23
  7457  0002A8  6E03               	movwf	strcpy@src^0,c
  7458  0002AA  0E7F               	movlw	high STR_23
  7459  0002AC  6E04               	movwf	(strcpy@src+1)^0,c
  7460  0002AE  EC8D  F028         	call	_strcpy	;wreg free
  7461                           
  7462                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } el
      +                          se {
  7463  0002B2  EFFD  F000         	goto	l5152
  7464  0002B6                     l5168:
  7465                           
  7466                           ; BSR set to: 0
  7467                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             
      +                          strcpy(&dbuf[n], "nan");
  7468  0002B6  0E60               	movlw	low _dbuf
  7469  0002B8  25A1               	addwf	efgtoa@n& (0+255),w,b
  7470  0002BA  6E01               	movwf	strcpy@dest^0,c
  7471  0002BC  0E02               	movlw	high _dbuf
  7472  0002BE  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7473  0002C0  6E02               	movwf	(strcpy@dest+1)^0,c
  7474  0002C2  0EF7               	movlw	low STR_24
  7475  0002C4  6E03               	movwf	strcpy@src^0,c
  7476  0002C6  0E7F               	movlw	high STR_24
  7477  0002C8  6E04               	movwf	(strcpy@src+1)^0,c
  7478  0002CA  EC8D  F028         	call	_strcpy	;wreg free
  7479  0002CE  EFFD  F000         	goto	l5152
  7480  0002D2                     l5176:
  7481                           
  7482                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  7483  0002D2  0E00               	movlw	0
  7484  0002D4  0100               	movlb	0	; () banked
  7485  0002D6  6FA3               	movwf	efgtoa@u& (0+255),b
  7486  0002D8  0E00               	movlw	0
  7487  0002DA  6FA4               	movwf	(efgtoa@u+1)& (0+255),b
  7488  0002DC  0E80               	movlw	128
  7489  0002DE  6FA5               	movwf	(efgtoa@u+2)& (0+255),b
  7490  0002E0  0E3F               	movlw	63
  7491  0002E2  6FA6               	movwf	(efgtoa@u+3)& (0+255),b
  7492                           
  7493                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  7494  0002E4  0E00               	movlw	0
  7495  0002E6  6FA0               	movwf	(efgtoa@e+1)& (0+255),b
  7496  0002E8  0E00               	movlw	0
  7497  0002EA  6F9F               	movwf	efgtoa@e& (0+255),b
  7498  0002EC                     
  7499                           ; BSR set to: 0
  7500                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g 
      +                          == 0.0)) {
  7501  0002EC  C09B  F001         	movff	efgtoa@g,___fleq@ff1
  7502  0002F0  C09C  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  7503  0002F4  C09D  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  7504  0002F8  C09E  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  7505  0002FC  0E00               	movlw	0
  7506  0002FE  6E05               	movwf	___fleq@ff2^0,c
  7507  000300  0E00               	movlw	0
  7508  000302  6E06               	movwf	(___fleq@ff2+1)^0,c
  7509  000304  0E00               	movlw	0
  7510  000306  6E07               	movwf	(___fleq@ff2+2)^0,c
  7511  000308  0E00               	movlw	0
  7512  00030A  6E08               	movwf	(___fleq@ff2+3)^0,c
  7513  00030C  EC92  F025         	call	___fleq	;wreg free
  7514  000310  B0D8               	btfsc	status,0,c
  7515  000312  EF8D  F001         	goto	u5871
  7516  000316  EF8F  F001         	goto	u5870
  7517  00031A                     u5871:
  7518  00031A  EF12  F002         	goto	l5194
  7519  00031E                     u5870:
  7520  00031E  EFAE  F001         	goto	l5186
  7521  000322                     l5182:
  7522                           
  7523                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             
      +                          u = u*10.0;
  7524  000322  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  7525  000326  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  7526  00032A  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  7527  00032E  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  7528  000332  0E00               	movlw	0
  7529  000334  6E20               	movwf	___flmul@a^0,c
  7530  000336  0E00               	movlw	0
  7531  000338  6E21               	movwf	(___flmul@a+1)^0,c
  7532  00033A  0E20               	movlw	32
  7533  00033C  6E22               	movwf	(___flmul@a+2)^0,c
  7534  00033E  0E41               	movlw	65
  7535  000340  6E23               	movwf	(___flmul@a+3)^0,c
  7536  000342  ECA9  F00F         	call	___flmul	;wreg free
  7537  000346  C01C  F0A3         	movff	?___flmul,efgtoa@u
  7538  00034A  C01D  F0A4         	movff	?___flmul+1,efgtoa@u+1
  7539  00034E  C01E  F0A5         	movff	?___flmul+2,efgtoa@u+2
  7540  000352  C01F  F0A6         	movff	?___flmul+3,efgtoa@u+3
  7541  000356                     
  7542                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             
      +                          ++e;
  7543  000356  0100               	movlb	0	; () banked
  7544  000358  4B9F               	infsnz	efgtoa@e& (0+255),f,b
  7545  00035A  2BA0               	incf	(efgtoa@e+1)& (0+255),f,b
  7546  00035C                     l5186:
  7547                           
  7548                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         whil
      +                          e (!(g < (u*10.0))) {
  7549  00035C  C09B  F035         	movff	efgtoa@g,___flge@ff1
  7550  000360  C09C  F036         	movff	efgtoa@g+1,___flge@ff1+1
  7551  000364  C09D  F037         	movff	efgtoa@g+2,___flge@ff1+2
  7552  000368  C09E  F038         	movff	efgtoa@g+3,___flge@ff1+3
  7553  00036C  0E00               	movlw	0
  7554  00036E  6E20               	movwf	___flmul@a^0,c
  7555  000370  0E00               	movlw	0
  7556  000372  6E21               	movwf	(___flmul@a+1)^0,c
  7557  000374  0E20               	movlw	32
  7558  000376  6E22               	movwf	(___flmul@a+2)^0,c
  7559  000378  0E41               	movlw	65
  7560  00037A  6E23               	movwf	(___flmul@a+3)^0,c
  7561  00037C  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  7562  000380  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  7563  000384  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  7564  000388  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  7565  00038C  ECA9  F00F         	call	___flmul	;wreg free
  7566  000390  C01C  F039         	movff	?___flmul,___flge@ff2
  7567  000394  C01D  F03A         	movff	?___flmul+1,___flge@ff2+1
  7568  000398  C01E  F03B         	movff	?___flmul+2,___flge@ff2+2
  7569  00039C  C01F  F03C         	movff	?___flmul+3,___flge@ff2+3
  7570  0003A0  ECE2  F021         	call	___flge	;wreg free
  7571  0003A4  B0D8               	btfsc	status,0,c
  7572  0003A6  EFD7  F001         	goto	u5881
  7573  0003AA  EFD9  F001         	goto	u5880
  7574  0003AE                     u5881:
  7575  0003AE  EF91  F001         	goto	l5182
  7576  0003B2                     u5880:
  7577  0003B2  EFF9  F001         	goto	l5192
  7578  0003B6                     l5188:
  7579                           
  7580                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             
      +                          u = u/10.0;
  7581  0003B6  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  7582  0003BA  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  7583  0003BE  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  7584  0003C2  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  7585  0003C6  0E00               	movlw	0
  7586  0003C8  6E39               	movwf	___fldiv@a^0,c
  7587  0003CA  0E00               	movlw	0
  7588  0003CC  6E3A               	movwf	(___fldiv@a+1)^0,c
  7589  0003CE  0E20               	movlw	32
  7590  0003D0  6E3B               	movwf	(___fldiv@a+2)^0,c
  7591  0003D2  0E41               	movlw	65
  7592  0003D4  6E3C               	movwf	(___fldiv@a+3)^0,c
  7593  0003D6  ECBE  F011         	call	___fldiv	;wreg free
  7594  0003DA  C035  F0A3         	movff	?___fldiv,efgtoa@u
  7595  0003DE  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  7596  0003E2  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  7597  0003E6  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  7598  0003EA                     
  7599                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             
      +                          --e;
  7600  0003EA  0100               	movlb	0	; () banked
  7601  0003EC  079F               	decf	efgtoa@e& (0+255),f,b
  7602  0003EE  A0D8               	btfss	status,0,c
  7603  0003F0  07A0               	decf	(efgtoa@e+1)& (0+255),f,b
  7604  0003F2                     l5192:
  7605                           
  7606                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         whil
      +                          e (g < u) {
  7607  0003F2  C09B  F035         	movff	efgtoa@g,___flge@ff1
  7608  0003F6  C09C  F036         	movff	efgtoa@g+1,___flge@ff1+1
  7609  0003FA  C09D  F037         	movff	efgtoa@g+2,___flge@ff1+2
  7610  0003FE  C09E  F038         	movff	efgtoa@g+3,___flge@ff1+3
  7611  000402  C0A3  F039         	movff	efgtoa@u,___flge@ff2
  7612  000406  C0A4  F03A         	movff	efgtoa@u+1,___flge@ff2+1
  7613  00040A  C0A5  F03B         	movff	efgtoa@u+2,___flge@ff2+2
  7614  00040E  C0A6  F03C         	movff	efgtoa@u+3,___flge@ff2+3
  7615  000412  ECE2  F021         	call	___flge	;wreg free
  7616  000416  A0D8               	btfss	status,0,c
  7617  000418  EF10  F002         	goto	u5891
  7618  00041C  EF12  F002         	goto	u5890
  7619  000420                     u5891:
  7620  000420  EFDB  F001         	goto	l5188
  7621  000424                     u5890:
  7622  000424                     l5194:
  7623                           
  7624                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = t
      +                          olower((int)c);
  7625  000424  C05E  F007         	movff	efgtoa@c,tolower@c
  7626  000428  6A08               	clrf	(tolower@c+1)^0,c
  7627  00042A  EC5D  F028         	call	_tolower	;wreg free
  7628  00042E  5007               	movf	?_tolower^0,w,c
  7629  000430  0100               	movlb	0	; () banked
  7630  000432  6F90               	movwf	efgtoa@mode& (0+255),b
  7631  000434                     
  7632                           ; BSR set to: 0
  7633                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = 
      +                          mode;
  7634  000434  C090  F08D         	movff	efgtoa@mode,efgtoa@nmode
  7635  000438                     
  7636                           ; BSR set to: 0
  7637                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode
      +                           == 'g') {
  7638  000438  0E67               	movlw	103
  7639  00043A  1990               	xorwf	efgtoa@mode& (0+255),w,b
  7640  00043C  A4D8               	btfss	status,2,c
  7641  00043E  EF23  F002         	goto	u5901
  7642  000442  EF25  F002         	goto	u5900
  7643  000446                     u5901:
  7644  000446  EF4B  F002         	goto	l5208
  7645  00044A                     u5900:
  7646  00044A                     
  7647                           ; BSR set to: 0
  7648                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec =
      +                          = 0) {
  7649  00044A  51F6               	movf	_prec& (0+255),w,b
  7650  00044C  11F7               	iorwf	(_prec+1)& (0+255),w,b
  7651  00044E  A4D8               	btfss	status,2,c
  7652  000450  EF2C  F002         	goto	u5911
  7653  000454  EF2E  F002         	goto	u5910
  7654  000458                     u5911:
  7655  000458  EF32  F002         	goto	l5204
  7656  00045C                     u5910:
  7657  00045C                     
  7658                           ; BSR set to: 0
  7659                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  7660  00045C  0E00               	movlw	0
  7661  00045E  6FF7               	movwf	(_prec+1)& (0+255),b
  7662  000460  0E01               	movlw	1
  7663  000462  6FF6               	movwf	_prec& (0+255),b
  7664  000464                     l5204:
  7665                           
  7666                           ; BSR set to: 0
  7667                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = 
      +                          (0 < prec) ? prec : 6;
  7668  000464  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  7669  000466  EF3F  F002         	goto	u5920
  7670  00046A  51F7               	movf	(_prec+1)& (0+255),w,b
  7671  00046C  E106               	bnz	u5921
  7672  00046E  05F6               	decf	_prec& (0+255),w,b
  7673  000470  B0D8               	btfsc	status,0,c
  7674  000472  EF3D  F002         	goto	u5921
  7675  000476  EF3F  F002         	goto	u5920
  7676  00047A                     u5921:
  7677  00047A  EF45  F002         	goto	l1490
  7678  00047E                     u5920:
  7679  00047E                     l5206:
  7680                           
  7681                           ; BSR set to: 0
  7682  00047E  0E00               	movlw	0
  7683  000480  6F8C               	movwf	(efgtoa@p+1)& (0+255),b
  7684  000482  0E06               	movlw	6
  7685  000484  6F8B               	movwf	efgtoa@p& (0+255),b
  7686  000486  EF54  F002         	goto	l5214
  7687  00048A                     l1490:
  7688                           
  7689                           ; BSR set to: 0
  7690  00048A  C0F6  F08B         	movff	_prec,efgtoa@p
  7691  00048E  C0F7  F08C         	movff	_prec+1,efgtoa@p+1
  7692  000492  EF54  F002         	goto	l5214
  7693  000496                     l5208:
  7694                           
  7695                           ; BSR set to: 0
  7696                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = 
      +                          (prec < 0) ? 6 : prec;
  7697  000496  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  7698  000498  EF50  F002         	goto	u5931
  7699  00049C  EF52  F002         	goto	u5930
  7700  0004A0                     u5931:
  7701  0004A0  EF3F  F002         	goto	l5206
  7702  0004A4                     u5930:
  7703  0004A4  EF45  F002         	goto	l1490
  7704  0004A8                     l5214:
  7705                           
  7706                           ; BSR set to: 0
  7707                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode
      +                           == 'g') {
  7708  0004A8  0E67               	movlw	103
  7709  0004AA  1990               	xorwf	efgtoa@mode& (0+255),w,b
  7710  0004AC  A4D8               	btfss	status,2,c
  7711  0004AE  EF5B  F002         	goto	u5941
  7712  0004B2  EF5D  F002         	goto	u5940
  7713  0004B6                     u5941:
  7714  0004B6  EF8C  F002         	goto	l5224
  7715  0004BA                     u5940:
  7716  0004BA                     
  7717                           ; BSR set to: 0
  7718                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  7719  0004BA  AFA0               	btfss	(efgtoa@e+1)& (0+255),7,b
  7720  0004BC  EF6B  F002         	goto	u5950
  7721  0004C0  0EFC               	movlw	252
  7722  0004C2  5D9F               	subwf	efgtoa@e& (0+255),w,b
  7723  0004C4  0EFF               	movlw	255
  7724  0004C6  59A0               	subwfb	(efgtoa@e+1)& (0+255),w,b
  7725  0004C8  A0D8               	btfss	status,0,c
  7726  0004CA  EF69  F002         	goto	u5951
  7727  0004CE  EF6B  F002         	goto	u5950
  7728  0004D2                     u5951:
  7729  0004D2  EF8A  F002         	goto	l5222
  7730  0004D6                     u5950:
  7731  0004D6                     
  7732                           ; BSR set to: 0
  7733  0004D6  0EFF               	movlw	255
  7734  0004D8  6F6A               	movwf	??_efgtoa& (0+255),b
  7735  0004DA  0EFF               	movlw	255
  7736  0004DC  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  7737  0004DE  C08B  F06C         	movff	efgtoa@p,??_efgtoa+2
  7738  0004E2  C08C  F06D         	movff	efgtoa@p+1,??_efgtoa+3
  7739  0004E6  516A               	movf	??_efgtoa& (0+255),w,b
  7740  0004E8  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  7741  0004EA  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  7742  0004EC  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7743  0004EE  519F               	movf	efgtoa@e& (0+255),w,b
  7744  0004F0  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  7745  0004F2  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  7746  0004F4  0A80               	xorlw	128
  7747  0004F6  6F6E               	movwf	(??_efgtoa+4)& (0+255),b
  7748  0004F8  51A0               	movf	(efgtoa@e+1)& (0+255),w,b
  7749  0004FA  0A80               	xorlw	128
  7750  0004FC  596E               	subwfb	(??_efgtoa+4)& (0+255),w,b
  7751  0004FE  A0D8               	btfss	status,0,c
  7752  000500  EF84  F002         	goto	u5961
  7753  000504  EF86  F002         	goto	u5960
  7754  000508                     u5961:
  7755  000508  EF8A  F002         	goto	l5222
  7756  00050C                     u5960:
  7757  00050C                     
  7758                           ; BSR set to: 0
  7759                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             
      +                          nmode = 'f';
  7760  00050C  0E66               	movlw	102
  7761  00050E  6F8D               	movwf	efgtoa@nmode& (0+255),b
  7762                           
  7763                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } el
      +                          se {
  7764  000510  EF8C  F002         	goto	l5224
  7765  000514                     l5222:
  7766                           
  7767                           ; BSR set to: 0
  7768                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             
      +                          nmode = 'e';
  7769  000514  0E65               	movlw	101
  7770  000516  6F8D               	movwf	efgtoa@nmode& (0+255),b
  7771  000518                     l5224:
  7772                           
  7773                           ; BSR set to: 0
  7774                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  7775  000518  C08B  F083         	movff	efgtoa@p,efgtoa@m
  7776  00051C  C08C  F084         	movff	efgtoa@p+1,efgtoa@m+1
  7777  000520                     
  7778                           ; BSR set to: 0
  7779                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  7780  000520  0E67               	movlw	103
  7781  000522  1990               	xorwf	efgtoa@mode& (0+255),w,b
  7782  000524  A4D8               	btfss	status,2,c
  7783  000526  EF97  F002         	goto	u5971
  7784  00052A  EF99  F002         	goto	u5970
  7785  00052E                     u5971:
  7786  00052E  EFA9  F002         	goto	l5232
  7787  000532                     u5970:
  7788  000532                     
  7789                           ; BSR set to: 0
  7790  000532  0E66               	movlw	102
  7791  000534  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  7792  000536  A4D8               	btfss	status,2,c
  7793  000538  EFA0  F002         	goto	u5981
  7794  00053C  EFA2  F002         	goto	u5980
  7795  000540                     u5981:
  7796  000540  EFAB  F002         	goto	l5234
  7797  000544                     u5980:
  7798  000544                     
  7799                           ; BSR set to: 0
  7800  000544  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  7801  000546  EFA9  F002         	goto	u5990
  7802  00054A  EFA7  F002         	goto	u5991
  7803  00054E                     u5991:
  7804  00054E  EFAB  F002         	goto	l5234
  7805  000552                     u5990:
  7806  000552                     l5232:
  7807                           
  7808                           ; BSR set to: 0
  7809                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  7810  000552  4B83               	infsnz	efgtoa@m& (0+255),f,b
  7811  000554  2B84               	incf	(efgtoa@m+1)& (0+255),f,b
  7812  000556                     l5234:
  7813                           
  7814                           ; BSR set to: 0
  7815                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmod
      +                          e == 'f') {
  7816  000556  0E66               	movlw	102
  7817  000558  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  7818  00055A  A4D8               	btfss	status,2,c
  7819  00055C  EFB2  F002         	goto	u6001
  7820  000560  EFB4  F002         	goto	u6000
  7821  000564                     u6001:
  7822  000564  EFD4  F002         	goto	l5244
  7823  000568                     u6000:
  7824  000568                     
  7825                           ; BSR set to: 0
  7826                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (
      +                          e < 0) {
  7827  000568  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  7828  00056A  EFBB  F002         	goto	u6010
  7829  00056E  EFB9  F002         	goto	u6011
  7830  000572                     u6011:
  7831  000572  EFC7  F002         	goto	l5240
  7832  000576                     u6010:
  7833  000576                     
  7834                           ; BSR set to: 0
  7835                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             
      +                          u = 1.0;
  7836  000576  0E00               	movlw	0
  7837  000578  6FA3               	movwf	efgtoa@u& (0+255),b
  7838  00057A  0E00               	movlw	0
  7839  00057C  6FA4               	movwf	(efgtoa@u+1)& (0+255),b
  7840  00057E  0E80               	movlw	128
  7841  000580  6FA5               	movwf	(efgtoa@u+2)& (0+255),b
  7842  000582  0E3F               	movlw	63
  7843  000584  6FA6               	movwf	(efgtoa@u+3)& (0+255),b
  7844                           
  7845                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             
      +                          e = 0;
  7846  000586  0E00               	movlw	0
  7847  000588  6FA0               	movwf	(efgtoa@e+1)& (0+255),b
  7848  00058A  0E00               	movlw	0
  7849  00058C  6F9F               	movwf	efgtoa@e& (0+255),b
  7850  00058E                     l5240:
  7851                           
  7852                           ; BSR set to: 0
  7853                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (
      +                          !(mode == 'g')) {
  7854  00058E  0E67               	movlw	103
  7855  000590  1990               	xorwf	efgtoa@mode& (0+255),w,b
  7856  000592  B4D8               	btfsc	status,2,c
  7857  000594  EFCE  F002         	goto	u6021
  7858  000598  EFD0  F002         	goto	u6020
  7859  00059C                     u6021:
  7860  00059C  EFD4  F002         	goto	l5244
  7861  0005A0                     u6020:
  7862  0005A0                     
  7863                           ; BSR set to: 0
  7864                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             
      +                          m += e;
  7865  0005A0  519F               	movf	efgtoa@e& (0+255),w,b
  7866  0005A2  2783               	addwf	efgtoa@m& (0+255),f,b
  7867  0005A4  51A0               	movf	(efgtoa@e+1)& (0+255),w,b
  7868  0005A6  2384               	addwfc	(efgtoa@m+1)& (0+255),f,b
  7869  0005A8                     l5244:
  7870                           
  7871                           ; BSR set to: 0
  7872                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  7873  0005A8  0E00               	movlw	0
  7874  0005AA  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  7875  0005AC  0E00               	movlw	0
  7876  0005AE  6F99               	movwf	efgtoa@i& (0+255),b
  7877  0005B0                     
  7878                           ; BSR set to: 0
  7879                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  7880  0005B0  C09B  F091         	movff	efgtoa@g,efgtoa@h
  7881  0005B4  C09C  F092         	movff	efgtoa@g+1,efgtoa@h+1
  7882  0005B8  C09D  F093         	movff	efgtoa@g+2,efgtoa@h+2
  7883  0005BC  C09E  F094         	movff	efgtoa@g+3,efgtoa@h+3
  7884  0005C0                     
  7885                           ; BSR set to: 0
  7886                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  7887  0005C0  C0A3  F06F         	movff	efgtoa@u,efgtoa@ou
  7888  0005C4  C0A4  F070         	movff	efgtoa@u+1,efgtoa@ou+1
  7889  0005C8  C0A5  F071         	movff	efgtoa@u+2,efgtoa@ou+2
  7890  0005CC  C0A6  F072         	movff	efgtoa@u+3,efgtoa@ou+3
  7891                           
  7892                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  7893  0005D0  EF65  F003         	goto	l5258
  7894  0005D4                     l5250:
  7895                           
  7896                           ; BSR set to: 0
  7897                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = 
      +                          floorf(h/u);
  7898  0005D4  C091  F035         	movff	efgtoa@h,___fldiv@b
  7899  0005D8  C092  F036         	movff	efgtoa@h+1,___fldiv@b+1
  7900  0005DC  C093  F037         	movff	efgtoa@h+2,___fldiv@b+2
  7901  0005E0  C094  F038         	movff	efgtoa@h+3,___fldiv@b+3
  7902  0005E4  C0A3  F039         	movff	efgtoa@u,___fldiv@a
  7903  0005E8  C0A4  F03A         	movff	efgtoa@u+1,___fldiv@a+1
  7904  0005EC  C0A5  F03B         	movff	efgtoa@u+2,___fldiv@a+2
  7905  0005F0  C0A6  F03C         	movff	efgtoa@u+3,___fldiv@a+3
  7906  0005F4  ECBE  F011         	call	___fldiv	;wreg free
  7907  0005F8  C035  F04E         	movff	?___fldiv,floorf@x
  7908  0005FC  C036  F04F         	movff	?___fldiv+1,floorf@x+1
  7909  000600  C037  F050         	movff	?___fldiv+2,floorf@x+2
  7910  000604  C038  F051         	movff	?___fldiv+3,floorf@x+3
  7911  000608  ECDC  F017         	call	_floorf	;wreg free
  7912  00060C  C04E  F095         	movff	?_floorf,efgtoa@l
  7913  000610  C04F  F096         	movff	?_floorf+1,efgtoa@l+1
  7914  000614  C050  F097         	movff	?_floorf+2,efgtoa@l+2
  7915  000618  C051  F098         	movff	?_floorf+3,efgtoa@l+3
  7916                           
  7917                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = 
      +                          (int)l;
  7918  00061C  C095  F04E         	movff	efgtoa@l,___fltol@f1
  7919  000620  C096  F04F         	movff	efgtoa@l+1,___fltol@f1+1
  7920  000624  C097  F050         	movff	efgtoa@l+2,___fltol@f1+2
  7921  000628  C098  F051         	movff	efgtoa@l+3,___fltol@f1+3
  7922  00062C  EC5F  F021         	call	___fltol	;wreg free
  7923  000630  C04E  F087         	movff	?___fltol,efgtoa@d
  7924  000634  C04F  F088         	movff	?___fltol+1,efgtoa@d+1
  7925  000638                     
  7926                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -=
      +                           l*u;
  7927  000638  C091  F045         	movff	efgtoa@h,___flsub@b
  7928  00063C  C092  F046         	movff	efgtoa@h+1,___flsub@b+1
  7929  000640  C093  F047         	movff	efgtoa@h+2,___flsub@b+2
  7930  000644  C094  F048         	movff	efgtoa@h+3,___flsub@b+3
  7931  000648  C0A3  F020         	movff	efgtoa@u,___flmul@a
  7932  00064C  C0A4  F021         	movff	efgtoa@u+1,___flmul@a+1
  7933  000650  C0A5  F022         	movff	efgtoa@u+2,___flmul@a+2
  7934  000654  C0A6  F023         	movff	efgtoa@u+3,___flmul@a+3
  7935  000658  C095  F01C         	movff	efgtoa@l,___flmul@b
  7936  00065C  C096  F01D         	movff	efgtoa@l+1,___flmul@b+1
  7937  000660  C097  F01E         	movff	efgtoa@l+2,___flmul@b+2
  7938  000664  C098  F01F         	movff	efgtoa@l+3,___flmul@b+3
  7939  000668  ECA9  F00F         	call	___flmul	;wreg free
  7940  00066C  C01C  F049         	movff	?___flmul,___flsub@a
  7941  000670  C01D  F04A         	movff	?___flmul+1,___flsub@a+1
  7942  000674  C01E  F04B         	movff	?___flmul+2,___flsub@a+2
  7943  000678  C01F  F04C         	movff	?___flmul+3,___flsub@a+3
  7944  00067C  EC89  F029         	call	___flsub	;wreg free
  7945  000680  C045  F091         	movff	?___flsub,efgtoa@h
  7946  000684  C046  F092         	movff	?___flsub+1,efgtoa@h+1
  7947  000688  C047  F093         	movff	?___flsub+2,efgtoa@h+2
  7948  00068C  C048  F094         	movff	?___flsub+3,efgtoa@h+3
  7949  000690                     
  7950                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = 
      +                          u/10.0;
  7951  000690  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  7952  000694  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  7953  000698  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  7954  00069C  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  7955  0006A0  0E00               	movlw	0
  7956  0006A2  6E39               	movwf	___fldiv@a^0,c
  7957  0006A4  0E00               	movlw	0
  7958  0006A6  6E3A               	movwf	(___fldiv@a+1)^0,c
  7959  0006A8  0E20               	movlw	32
  7960  0006AA  6E3B               	movwf	(___fldiv@a+2)^0,c
  7961  0006AC  0E41               	movlw	65
  7962  0006AE  6E3C               	movwf	(___fldiv@a+3)^0,c
  7963  0006B0  ECBE  F011         	call	___fldiv	;wreg free
  7964  0006B4  C035  F0A3         	movff	?___fldiv,efgtoa@u
  7965  0006B8  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  7966  0006BC  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  7967  0006C0  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  7968  0006C4                     
  7969                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  7970  0006C4  0100               	movlb	0	; () banked
  7971  0006C6  4B99               	infsnz	efgtoa@i& (0+255),f,b
  7972  0006C8  2B9A               	incf	(efgtoa@i+1)& (0+255),f,b
  7973  0006CA                     l5258:
  7974                           
  7975                           ; BSR set to: 0
  7976                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  7977  0006CA  5183               	movf	efgtoa@m& (0+255),w,b
  7978  0006CC  5D99               	subwf	efgtoa@i& (0+255),w,b
  7979  0006CE  519A               	movf	(efgtoa@i+1)& (0+255),w,b
  7980  0006D0  0A80               	xorlw	128
  7981  0006D2  6F6A               	movwf	??_efgtoa& (0+255),b
  7982  0006D4  5184               	movf	(efgtoa@m+1)& (0+255),w,b
  7983  0006D6  0A80               	xorlw	128
  7984  0006D8  596A               	subwfb	??_efgtoa& (0+255),w,b
  7985  0006DA  A0D8               	btfss	status,0,c
  7986  0006DC  EF72  F003         	goto	u6031
  7987  0006E0  EF74  F003         	goto	u6030
  7988  0006E4                     u6031:
  7989  0006E4  EFEA  F002         	goto	l5250
  7990  0006E8                     u6030:
  7991  0006E8                     
  7992                           ; BSR set to: 0
  7993                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.
      +                          0;
  7994  0006E8  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  7995  0006EC  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  7996  0006F0  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  7997  0006F4  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  7998  0006F8  0E00               	movlw	0
  7999  0006FA  6E20               	movwf	___flmul@a^0,c
  8000  0006FC  0E00               	movlw	0
  8001  0006FE  6E21               	movwf	(___flmul@a+1)^0,c
  8002  000700  0EA0               	movlw	160
  8003  000702  6E22               	movwf	(___flmul@a+2)^0,c
  8004  000704  0E40               	movlw	64
  8005  000706  6E23               	movwf	(___flmul@a+3)^0,c
  8006  000708  ECA9  F00F         	call	___flmul	;wreg free
  8007  00070C  C01C  F095         	movff	?___flmul,efgtoa@l
  8008  000710  C01D  F096         	movff	?___flmul+1,efgtoa@l+1
  8009  000714  C01E  F097         	movff	?___flmul+2,efgtoa@l+2
  8010  000718  C01F  F098         	movff	?___flmul+3,efgtoa@l+3
  8011  00071C                     
  8012                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < 
      +                          l) {
  8013  00071C  C091  F035         	movff	efgtoa@h,___flge@ff1
  8014  000720  C092  F036         	movff	efgtoa@h+1,___flge@ff1+1
  8015  000724  C093  F037         	movff	efgtoa@h+2,___flge@ff1+2
  8016  000728  C094  F038         	movff	efgtoa@h+3,___flge@ff1+3
  8017  00072C  C095  F039         	movff	efgtoa@l,___flge@ff2
  8018  000730  C096  F03A         	movff	efgtoa@l+1,___flge@ff2+1
  8019  000734  C097  F03B         	movff	efgtoa@l+2,___flge@ff2+2
  8020  000738  C098  F03C         	movff	efgtoa@l+3,___flge@ff2+3
  8021  00073C  ECE2  F021         	call	___flge	;wreg free
  8022  000740  B0D8               	btfsc	status,0,c
  8023  000742  EFA5  F003         	goto	u6041
  8024  000746  EFA7  F003         	goto	u6040
  8025  00074A                     u6041:
  8026  00074A  EFB2  F003         	goto	l5266
  8027  00074E                     u6040:
  8028  00074E                     
  8029                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 
      +                          0.0;
  8030  00074E  0E00               	movlw	0
  8031  000750  0100               	movlb	0	; () banked
  8032  000752  6F95               	movwf	efgtoa@l& (0+255),b
  8033  000754  0E00               	movlw	0
  8034  000756  6F96               	movwf	(efgtoa@l+1)& (0+255),b
  8035  000758  0E00               	movlw	0
  8036  00075A  6F97               	movwf	(efgtoa@l+2)& (0+255),b
  8037  00075C  0E00               	movlw	0
  8038  00075E  6F98               	movwf	(efgtoa@l+3)& (0+255),b
  8039                           
  8040                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  8041  000760  EFDB  F003         	goto	l5272
  8042  000764                     l5266:
  8043                           
  8044                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if (
      +                          (h == l) && !(d % 2)) {
  8045  000764  C091  F001         	movff	efgtoa@h,___fleq@ff1
  8046  000768  C092  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  8047  00076C  C093  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  8048  000770  C094  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  8049  000774  C095  F005         	movff	efgtoa@l,___fleq@ff2
  8050  000778  C096  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  8051  00077C  C097  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  8052  000780  C098  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  8053  000784  EC92  F025         	call	___fleq	;wreg free
  8054  000788  A0D8               	btfss	status,0,c
  8055  00078A  EFC9  F003         	goto	u6051
  8056  00078E  EFCB  F003         	goto	u6050
  8057  000792                     u6051:
  8058  000792  EFDB  F003         	goto	l5272
  8059  000796                     u6050:
  8060  000796  0100               	movlb	0	; () banked
  8061  000798  B187               	btfsc	efgtoa@d& (0+255),0,b
  8062  00079A  EFD1  F003         	goto	u6061
  8063  00079E  EFD3  F003         	goto	u6060
  8064  0007A2                     u6061:
  8065  0007A2  EFDB  F003         	goto	l5272
  8066  0007A6                     u6060:
  8067  0007A6                     
  8068                           ; BSR set to: 0
  8069                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             
      +                          l = 0.0;
  8070  0007A6  0E00               	movlw	0
  8071  0007A8  6F95               	movwf	efgtoa@l& (0+255),b
  8072  0007AA  0E00               	movlw	0
  8073  0007AC  6F96               	movwf	(efgtoa@l+1)& (0+255),b
  8074  0007AE  0E00               	movlw	0
  8075  0007B0  6F97               	movwf	(efgtoa@l+2)& (0+255),b
  8076  0007B2  0E00               	movlw	0
  8077  0007B4  6F98               	movwf	(efgtoa@l+3)& (0+255),b
  8078  0007B6                     l5272:
  8079                           
  8080                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + 
      +                          l;
  8081  0007B6  C09B  F035         	movff	efgtoa@g,___fladd@b
  8082  0007BA  C09C  F036         	movff	efgtoa@g+1,___fladd@b+1
  8083  0007BE  C09D  F037         	movff	efgtoa@g+2,___fladd@b+2
  8084  0007C2  C09E  F038         	movff	efgtoa@g+3,___fladd@b+3
  8085  0007C6  C095  F039         	movff	efgtoa@l,___fladd@a
  8086  0007CA  C096  F03A         	movff	efgtoa@l+1,___fladd@a+1
  8087  0007CE  C097  F03B         	movff	efgtoa@l+2,___fladd@a+2
  8088  0007D2  C098  F03C         	movff	efgtoa@l+3,___fladd@a+3
  8089  0007D6  EC49  F00D         	call	___fladd	;wreg free
  8090  0007DA  C035  F091         	movff	?___fladd,efgtoa@h
  8091  0007DE  C036  F092         	movff	?___fladd+1,efgtoa@h+1
  8092  0007E2  C037  F093         	movff	?___fladd+2,efgtoa@h+2
  8093  0007E6  C038  F094         	movff	?___fladd+3,efgtoa@h+3
  8094  0007EA                     
  8095                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  8096  0007EA  C06F  F0A3         	movff	efgtoa@ou,efgtoa@u
  8097  0007EE  C070  F0A4         	movff	efgtoa@ou+1,efgtoa@u+1
  8098  0007F2  C071  F0A5         	movff	efgtoa@ou+2,efgtoa@u+2
  8099  0007F6  C072  F0A6         	movff	efgtoa@ou+3,efgtoa@u+3
  8100  0007FA                     
  8101                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  8102  0007FA  0E65               	movlw	101
  8103  0007FC  0100               	movlb	0	; () banked
  8104  0007FE  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8105  000800  B4D8               	btfsc	status,2,c
  8106  000802  EF05  F004         	goto	u6071
  8107  000806  EF07  F004         	goto	u6070
  8108  00080A                     u6071:
  8109  00080A  EF0D  F004         	goto	l5280
  8110  00080E                     u6070:
  8111  00080E                     
  8112                           ; BSR set to: 0
  8113  00080E  C09F  F085         	movff	efgtoa@e,efgtoa@ne
  8114  000812  C0A0  F086         	movff	efgtoa@e+1,efgtoa@ne+1
  8115  000816  EF11  F004         	goto	l1516
  8116  00081A                     l5280:
  8117                           
  8118                           ; BSR set to: 0
  8119  00081A  0E00               	movlw	0
  8120  00081C  6F86               	movwf	(efgtoa@ne+1)& (0+255),b
  8121  00081E  0E00               	movlw	0
  8122  000820  6F85               	movwf	efgtoa@ne& (0+255),b
  8123  000822                     l1516:
  8124                           
  8125                           ; BSR set to: 0
  8126                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  8127  000822  0E00               	movlw	0
  8128  000824  6F82               	movwf	(efgtoa@pp+1)& (0+255),b
  8129  000826  0E00               	movlw	0
  8130  000828  6F81               	movwf	efgtoa@pp& (0+255),b
  8131                           
  8132                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  8133  00082A  0E00               	movlw	0
  8134  00082C  6F80               	movwf	(efgtoa@t+1)& (0+255),b
  8135  00082E  0E00               	movlw	0
  8136  000830  6F7F               	movwf	efgtoa@t& (0+255),b
  8137                           
  8138                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  8139  000832  0E00               	movlw	0
  8140  000834  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  8141  000836  0E00               	movlw	0
  8142  000838  6F99               	movwf	efgtoa@i& (0+255),b
  8143                           
  8144                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  8145  00083A  EF0C  F005         	goto	l5330
  8146  00083E                     l5282:
  8147                           
  8148                           ; BSR set to: 0
  8149                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = 
      +                          floorf(h/u);
  8150  00083E  C091  F035         	movff	efgtoa@h,___fldiv@b
  8151  000842  C092  F036         	movff	efgtoa@h+1,___fldiv@b+1
  8152  000846  C093  F037         	movff	efgtoa@h+2,___fldiv@b+2
  8153  00084A  C094  F038         	movff	efgtoa@h+3,___fldiv@b+3
  8154  00084E  C0A3  F039         	movff	efgtoa@u,___fldiv@a
  8155  000852  C0A4  F03A         	movff	efgtoa@u+1,___fldiv@a+1
  8156  000856  C0A5  F03B         	movff	efgtoa@u+2,___fldiv@a+2
  8157  00085A  C0A6  F03C         	movff	efgtoa@u+3,___fldiv@a+3
  8158  00085E  ECBE  F011         	call	___fldiv	;wreg free
  8159  000862  C035  F04E         	movff	?___fldiv,floorf@x
  8160  000866  C036  F04F         	movff	?___fldiv+1,floorf@x+1
  8161  00086A  C037  F050         	movff	?___fldiv+2,floorf@x+2
  8162  00086E  C038  F051         	movff	?___fldiv+3,floorf@x+3
  8163  000872  ECDC  F017         	call	_floorf	;wreg free
  8164  000876  C04E  F095         	movff	?_floorf,efgtoa@l
  8165  00087A  C04F  F096         	movff	?_floorf+1,efgtoa@l+1
  8166  00087E  C050  F097         	movff	?_floorf+2,efgtoa@l+2
  8167  000882  C051  F098         	movff	?_floorf+3,efgtoa@l+3
  8168                           
  8169                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = 
      +                          (int)l;
  8170  000886  C095  F04E         	movff	efgtoa@l,___fltol@f1
  8171  00088A  C096  F04F         	movff	efgtoa@l+1,___fltol@f1+1
  8172  00088E  C097  F050         	movff	efgtoa@l+2,___fltol@f1+2
  8173  000892  C098  F051         	movff	efgtoa@l+3,___fltol@f1+3
  8174  000896  EC5F  F021         	call	___fltol	;wreg free
  8175  00089A  C04E  F087         	movff	?___fltol,efgtoa@d
  8176  00089E  C04F  F088         	movff	?___fltol+1,efgtoa@d+1
  8177  0008A2                     
  8178                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  8179  0008A2  0100               	movlb	0	; () banked
  8180  0008A4  B9F8               	btfsc	_flags& (0+255),4,b
  8181  0008A6  EF57  F004         	goto	u6081
  8182  0008AA  EF59  F004         	goto	u6080
  8183  0008AE                     u6081:
  8184  0008AE  EF76  F004         	goto	l5294
  8185  0008B2                     u6080:
  8186  0008B2                     
  8187                           ; BSR set to: 0
  8188  0008B2  5187               	movf	efgtoa@d& (0+255),w,b
  8189  0008B4  1188               	iorwf	(efgtoa@d+1)& (0+255),w,b
  8190  0008B6  A4D8               	btfss	status,2,c
  8191  0008B8  EF60  F004         	goto	u6091
  8192  0008BC  EF62  F004         	goto	u6090
  8193  0008C0                     u6091:
  8194  0008C0  EF76  F004         	goto	l5294
  8195  0008C4                     u6090:
  8196  0008C4                     
  8197                           ; BSR set to: 0
  8198  0008C4  0E67               	movlw	103
  8199  0008C6  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8200  0008C8  A4D8               	btfss	status,2,c
  8201  0008CA  EF69  F004         	goto	u6101
  8202  0008CE  EF6B  F004         	goto	u6100
  8203  0008D2                     u6101:
  8204  0008D2  EF76  F004         	goto	l5294
  8205  0008D6                     u6100:
  8206  0008D6                     
  8207                           ; BSR set to: 0
  8208  0008D6  BF86               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  8209  0008D8  EF72  F004         	goto	u6110
  8210  0008DC  EF70  F004         	goto	u6111
  8211  0008E0                     u6111:
  8212  0008E0  EF76  F004         	goto	l5294
  8213  0008E4                     u6110:
  8214  0008E4                     
  8215                           ; BSR set to: 0
  8216                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             
      +                          ++t;
  8217  0008E4  4B7F               	infsnz	efgtoa@t& (0+255),f,b
  8218  0008E6  2B80               	incf	(efgtoa@t+1)& (0+255),f,b
  8219                           
  8220                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } el
      +                          se {
  8221  0008E8  EFC0  F004         	goto	l5322
  8222  0008EC                     l5294:
  8223                           
  8224                           ; BSR set to: 0
  8225                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             
      +                          if (!pp && (ne < 0)) {
  8226  0008EC  5181               	movf	efgtoa@pp& (0+255),w,b
  8227  0008EE  1182               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  8228  0008F0  A4D8               	btfss	status,2,c
  8229  0008F2  EF7D  F004         	goto	u6121
  8230  0008F6  EF7F  F004         	goto	u6120
  8231  0008FA                     u6121:
  8232  0008FA  EFA9  F004         	goto	l5314
  8233  0008FE                     u6120:
  8234  0008FE                     
  8235                           ; BSR set to: 0
  8236  0008FE  BF86               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  8237  000900  EF86  F004         	goto	u6130
  8238  000904  EF84  F004         	goto	u6131
  8239  000908                     u6131:
  8240  000908  EFA9  F004         	goto	l5314
  8241  00090C                     u6130:
  8242  00090C                     
  8243                           ; BSR set to: 0
  8244                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:             
      +                              dbuf[n++] = '.';
  8245  00090C  0E60               	movlw	low _dbuf
  8246  00090E  25A1               	addwf	efgtoa@n& (0+255),w,b
  8247  000910  6ED9               	movwf	fsr2l,c
  8248  000912  0E02               	movlw	high _dbuf
  8249  000914  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8250  000916  6EDA               	movwf	fsr2h,c
  8251  000918  0E2E               	movlw	46
  8252  00091A  6EDF               	movwf	indf2,c
  8253  00091C                     
  8254                           ; BSR set to: 0
  8255  00091C  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8256  00091E  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8257  000920                     
  8258                           ; BSR set to: 0
  8259                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:             
      +                              --w;
  8260  000920  078E               	decf	efgtoa@w& (0+255),f,b
  8261  000922  A0D8               	btfss	status,0,c
  8262  000924  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8263  000926                     
  8264                           ; BSR set to: 0
  8265                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:             
      +                              pp = 1;
  8266  000926  0E00               	movlw	0
  8267  000928  6F82               	movwf	(efgtoa@pp+1)& (0+255),b
  8268  00092A  0E01               	movlw	1
  8269  00092C  6F81               	movwf	efgtoa@pp& (0+255),b
  8270  00092E  EFA9  F004         	goto	l5314
  8271  000932                     l5306:
  8272                           
  8273                           ; BSR set to: 0
  8274                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:             
      +                              dbuf[n++] = '0';
  8275  000932  0E60               	movlw	low _dbuf
  8276  000934  25A1               	addwf	efgtoa@n& (0+255),w,b
  8277  000936  6ED9               	movwf	fsr2l,c
  8278  000938  0E02               	movlw	high _dbuf
  8279  00093A  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8280  00093C  6EDA               	movwf	fsr2h,c
  8281  00093E  0E30               	movlw	48
  8282  000940  6EDF               	movwf	indf2,c
  8283  000942                     
  8284                           ; BSR set to: 0
  8285  000942  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8286  000944  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8287  000946                     
  8288                           ; BSR set to: 0
  8289                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:             
      +                              --w;
  8290  000946  078E               	decf	efgtoa@w& (0+255),f,b
  8291  000948  A0D8               	btfss	status,0,c
  8292  00094A  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8293  00094C                     
  8294                           ; BSR set to: 0
  8295                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:             
      +                              --t;
  8296  00094C  077F               	decf	efgtoa@t& (0+255),f,b
  8297  00094E  A0D8               	btfss	status,0,c
  8298  000950  0780               	decf	(efgtoa@t+1)& (0+255),f,b
  8299  000952                     l5314:
  8300                           
  8301                           ; BSR set to: 0
  8302                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             
      +                          while (t) {
  8303  000952  517F               	movf	efgtoa@t& (0+255),w,b
  8304  000954  1180               	iorwf	(efgtoa@t+1)& (0+255),w,b
  8305  000956  A4D8               	btfss	status,2,c
  8306  000958  EFB0  F004         	goto	u6141
  8307  00095C  EFB2  F004         	goto	u6140
  8308  000960                     u6141:
  8309  000960  EF99  F004         	goto	l5306
  8310  000964                     u6140:
  8311  000964                     
  8312                           ; BSR set to: 0
  8313                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             
      +                          dbuf[n++] = '0' + d;
  8314  000964  0E60               	movlw	low _dbuf
  8315  000966  25A1               	addwf	efgtoa@n& (0+255),w,b
  8316  000968  6ED9               	movwf	fsr2l,c
  8317  00096A  0E02               	movlw	high _dbuf
  8318  00096C  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8319  00096E  6EDA               	movwf	fsr2h,c
  8320  000970  5187               	movf	efgtoa@d& (0+255),w,b
  8321  000972  0F30               	addlw	48
  8322  000974  6EDF               	movwf	indf2,c
  8323  000976                     
  8324                           ; BSR set to: 0
  8325  000976  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8326  000978  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8327  00097A                     
  8328                           ; BSR set to: 0
  8329                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             
      +                          --w;
  8330  00097A  078E               	decf	efgtoa@w& (0+255),f,b
  8331  00097C  A0D8               	btfss	status,0,c
  8332  00097E  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8333  000980                     l5322:
  8334                           
  8335                           ; BSR set to: 0
  8336                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -=
      +                           l*u;
  8337  000980  C091  F045         	movff	efgtoa@h,___flsub@b
  8338  000984  C092  F046         	movff	efgtoa@h+1,___flsub@b+1
  8339  000988  C093  F047         	movff	efgtoa@h+2,___flsub@b+2
  8340  00098C  C094  F048         	movff	efgtoa@h+3,___flsub@b+3
  8341  000990  C0A3  F020         	movff	efgtoa@u,___flmul@a
  8342  000994  C0A4  F021         	movff	efgtoa@u+1,___flmul@a+1
  8343  000998  C0A5  F022         	movff	efgtoa@u+2,___flmul@a+2
  8344  00099C  C0A6  F023         	movff	efgtoa@u+3,___flmul@a+3
  8345  0009A0  C095  F01C         	movff	efgtoa@l,___flmul@b
  8346  0009A4  C096  F01D         	movff	efgtoa@l+1,___flmul@b+1
  8347  0009A8  C097  F01E         	movff	efgtoa@l+2,___flmul@b+2
  8348  0009AC  C098  F01F         	movff	efgtoa@l+3,___flmul@b+3
  8349  0009B0  ECA9  F00F         	call	___flmul	;wreg free
  8350  0009B4  C01C  F049         	movff	?___flmul,___flsub@a
  8351  0009B8  C01D  F04A         	movff	?___flmul+1,___flsub@a+1
  8352  0009BC  C01E  F04B         	movff	?___flmul+2,___flsub@a+2
  8353  0009C0  C01F  F04C         	movff	?___flmul+3,___flsub@a+3
  8354  0009C4  EC89  F029         	call	___flsub	;wreg free
  8355  0009C8  C045  F091         	movff	?___flsub,efgtoa@h
  8356  0009CC  C046  F092         	movff	?___flsub+1,efgtoa@h+1
  8357  0009D0  C047  F093         	movff	?___flsub+2,efgtoa@h+2
  8358  0009D4  C048  F094         	movff	?___flsub+3,efgtoa@h+3
  8359  0009D8                     
  8360                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = 
      +                          u/10.0;
  8361  0009D8  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  8362  0009DC  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  8363  0009E0  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  8364  0009E4  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  8365  0009E8  0E00               	movlw	0
  8366  0009EA  6E39               	movwf	___fldiv@a^0,c
  8367  0009EC  0E00               	movlw	0
  8368  0009EE  6E3A               	movwf	(___fldiv@a+1)^0,c
  8369  0009F0  0E20               	movlw	32
  8370  0009F2  6E3B               	movwf	(___fldiv@a+2)^0,c
  8371  0009F4  0E41               	movlw	65
  8372  0009F6  6E3C               	movwf	(___fldiv@a+3)^0,c
  8373  0009F8  ECBE  F011         	call	___fldiv	;wreg free
  8374  0009FC  C035  F0A3         	movff	?___fldiv,efgtoa@u
  8375  000A00  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  8376  000A04  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  8377  000A08  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  8378  000A0C                     
  8379                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne
      +                          ;
  8380  000A0C  0100               	movlb	0	; () banked
  8381  000A0E  0785               	decf	efgtoa@ne& (0+255),f,b
  8382  000A10  A0D8               	btfss	status,0,c
  8383  000A12  0786               	decf	(efgtoa@ne+1)& (0+255),f,b
  8384  000A14                     
  8385                           ; BSR set to: 0
  8386                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  8387  000A14  4B99               	infsnz	efgtoa@i& (0+255),f,b
  8388  000A16  2B9A               	incf	(efgtoa@i+1)& (0+255),f,b
  8389  000A18                     l5330:
  8390                           
  8391                           ; BSR set to: 0
  8392                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  8393  000A18  5183               	movf	efgtoa@m& (0+255),w,b
  8394  000A1A  5D99               	subwf	efgtoa@i& (0+255),w,b
  8395  000A1C  519A               	movf	(efgtoa@i+1)& (0+255),w,b
  8396  000A1E  0A80               	xorlw	128
  8397  000A20  6F6A               	movwf	??_efgtoa& (0+255),b
  8398  000A22  5184               	movf	(efgtoa@m+1)& (0+255),w,b
  8399  000A24  0A80               	xorlw	128
  8400  000A26  596A               	subwfb	??_efgtoa& (0+255),w,b
  8401  000A28  B0D8               	btfsc	status,0,c
  8402  000A2A  EF19  F005         	goto	u6151
  8403  000A2E  EF1B  F005         	goto	u6150
  8404  000A32                     u6151:
  8405  000A32  EF29  F005         	goto	l5334
  8406  000A36                     u6150:
  8407  000A36                     
  8408                           ; BSR set to: 0
  8409  000A36  BFA2               	btfsc	(efgtoa@n+1)& (0+255),7,b
  8410  000A38  EF27  F005         	goto	u6161
  8411  000A3C  51A2               	movf	(efgtoa@n+1)& (0+255),w,b
  8412  000A3E  E109               	bnz	u6160
  8413  000A40  0E4B               	movlw	75
  8414  000A42  5DA1               	subwf	efgtoa@n& (0+255),w,b
  8415  000A44  A0D8               	btfss	status,0,c
  8416  000A46  EF27  F005         	goto	u6161
  8417  000A4A  EF29  F005         	goto	u6160
  8418  000A4E                     u6161:
  8419  000A4E  EF1F  F004         	goto	l5282
  8420  000A52                     u6160:
  8421  000A52                     l5334:
  8422                           
  8423                           ; BSR set to: 0
  8424                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp 
      +                          && (flags & (1 << 4))) {
  8425  000A52  5181               	movf	efgtoa@pp& (0+255),w,b
  8426  000A54  1182               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  8427  000A56  A4D8               	btfss	status,2,c
  8428  000A58  EF30  F005         	goto	u6171
  8429  000A5C  EF32  F005         	goto	u6170
  8430  000A60                     u6171:
  8431  000A60  EF43  F005         	goto	l5342
  8432  000A64                     u6170:
  8433  000A64                     
  8434                           ; BSR set to: 0
  8435  000A64  A9F8               	btfss	_flags& (0+255),4,b
  8436  000A66  EF37  F005         	goto	u6181
  8437  000A6A  EF39  F005         	goto	u6180
  8438  000A6E                     u6181:
  8439  000A6E  EF43  F005         	goto	l5342
  8440  000A72                     u6180:
  8441  000A72                     
  8442                           ; BSR set to: 0
  8443                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf
      +                          [n++] = '.';
  8444  000A72  0E60               	movlw	low _dbuf
  8445  000A74  25A1               	addwf	efgtoa@n& (0+255),w,b
  8446  000A76  6ED9               	movwf	fsr2l,c
  8447  000A78  0E02               	movlw	high _dbuf
  8448  000A7A  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8449  000A7C  6EDA               	movwf	fsr2h,c
  8450  000A7E  0E2E               	movlw	46
  8451  000A80  6EDF               	movwf	indf2,c
  8452  000A82                     
  8453                           ; BSR set to: 0
  8454  000A82  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8455  000A84  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8456  000A86                     l5342:
  8457                           
  8458                           ; BSR set to: 0
  8459                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] 
      +                          = '\0';
  8460  000A86  0E60               	movlw	low _dbuf
  8461  000A88  25A1               	addwf	efgtoa@n& (0+255),w,b
  8462  000A8A  6ED9               	movwf	fsr2l,c
  8463  000A8C  0E02               	movlw	high _dbuf
  8464  000A8E  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8465  000A90  6EDA               	movwf	fsr2h,c
  8466  000A92  0E00               	movlw	0
  8467  000A94  6EDF               	movwf	indf2,c
  8468  000A96                     
  8469                           ; BSR set to: 0
  8470                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmod
      +                          e == 'e') {
  8471  000A96  0E65               	movlw	101
  8472  000A98  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8473  000A9A  A4D8               	btfss	status,2,c
  8474  000A9C  EF52  F005         	goto	u6191
  8475  000AA0  EF54  F005         	goto	u6190
  8476  000AA4                     u6191:
  8477  000AA4  EF02  F001         	goto	l5154
  8478  000AA8                     u6190:
  8479  000AA8                     
  8480                           ; BSR set to: 0
  8481                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = 
      +                          sizeof(dbuf) - 1;
  8482  000AA8  0E00               	movlw	0
  8483  000AAA  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  8484  000AAC  0E4F               	movlw	79
  8485  000AAE  6F99               	movwf	efgtoa@i& (0+255),b
  8486  000AB0                     
  8487                           ; BSR set to: 0
  8488                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf
      +                          [i] = '\0';
  8489  000AB0  0E60               	movlw	low _dbuf
  8490  000AB2  2599               	addwf	efgtoa@i& (0+255),w,b
  8491  000AB4  6ED9               	movwf	fsr2l,c
  8492  000AB6  0E02               	movlw	high _dbuf
  8493  000AB8  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8494  000ABA  6EDA               	movwf	fsr2h,c
  8495  000ABC  0E00               	movlw	0
  8496  000ABE  6EDF               	movwf	indf2,c
  8497  000AC0                     
  8498                           ; BSR set to: 0
  8499                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign
      +                           = 0;
  8500  000AC0  0E00               	movlw	0
  8501  000AC2  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  8502  000AC4  0E00               	movlw	0
  8503  000AC6  6F89               	movwf	efgtoa@sign& (0+255),b
  8504  000AC8                     
  8505                           ; BSR set to: 0
  8506                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (
      +                          e < 0) {
  8507  000AC8  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8508  000ACA  EF6B  F005         	goto	u6200
  8509  000ACE  EF69  F005         	goto	u6201
  8510  000AD2                     u6201:
  8511  000AD2  EF73  F005         	goto	l5358
  8512  000AD6                     u6200:
  8513  000AD6                     
  8514                           ; BSR set to: 0
  8515                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             
      +                          sign = 1;
  8516  000AD6  0E00               	movlw	0
  8517  000AD8  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  8518  000ADA  0E01               	movlw	1
  8519  000ADC  6F89               	movwf	efgtoa@sign& (0+255),b
  8520  000ADE                     
  8521                           ; BSR set to: 0
  8522                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             
      +                          e = -e;
  8523  000ADE  6D9F               	negf	efgtoa@e& (0+255),b
  8524  000AE0  1FA0               	comf	(efgtoa@e+1)& (0+255),f,b
  8525  000AE2  B0D8               	btfsc	status,0,c
  8526  000AE4  2BA0               	incf	(efgtoa@e+1)& (0+255),f,b
  8527  000AE6                     l5358:
  8528                           
  8529                           ; BSR set to: 0
  8530                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 
      +                          2;
  8531  000AE6  0E00               	movlw	0
  8532  000AE8  6F8C               	movwf	(efgtoa@p+1)& (0+255),b
  8533  000AEA  0E02               	movlw	2
  8534  000AEC  6F8B               	movwf	efgtoa@p& (0+255),b
  8535                           
  8536                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  8537  000AEE  EFA4  F005         	goto	l5370
  8538  000AF2                     l5360:
  8539                           
  8540                           ; BSR set to: 0
  8541                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             
      +                          --i;
  8542  000AF2  0799               	decf	efgtoa@i& (0+255),f,b
  8543  000AF4  A0D8               	btfss	status,0,c
  8544  000AF6  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  8545  000AF8                     
  8546                           ; BSR set to: 0
  8547                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             
      +                          dbuf[i] = '0' + (e % 10);
  8548  000AF8  0E60               	movlw	low _dbuf
  8549  000AFA  2599               	addwf	efgtoa@i& (0+255),w,b
  8550  000AFC  6ED9               	movwf	fsr2l,c
  8551  000AFE  0E02               	movlw	high _dbuf
  8552  000B00  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8553  000B02  6EDA               	movwf	fsr2h,c
  8554  000B04  C09F  F001         	movff	efgtoa@e,___awmod@dividend
  8555  000B08  C0A0  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  8556  000B0C  0E00               	movlw	0
  8557  000B0E  6E04               	movwf	(___awmod@divisor+1)^0,c
  8558  000B10  0E0A               	movlw	10
  8559  000B12  6E03               	movwf	___awmod@divisor^0,c
  8560  000B14  EC3A  F025         	call	___awmod	;wreg free
  8561  000B18  5001               	movf	?___awmod^0,w,c
  8562  000B1A  0F30               	addlw	48
  8563  000B1C  6EDF               	movwf	indf2,c
  8564  000B1E                     
  8565                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             
      +                          e = e / 10;
  8566  000B1E  C09F  F001         	movff	efgtoa@e,___awdiv@dividend
  8567  000B22  C0A0  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  8568  000B26  0E00               	movlw	0
  8569  000B28  6E04               	movwf	(___awdiv@divisor+1)^0,c
  8570  000B2A  0E0A               	movlw	10
  8571  000B2C  6E03               	movwf	___awdiv@divisor^0,c
  8572  000B2E  EC7F  F024         	call	___awdiv	;wreg free
  8573  000B32  C001  F09F         	movff	?___awdiv,efgtoa@e
  8574  000B36  C002  F0A0         	movff	?___awdiv+1,efgtoa@e+1
  8575  000B3A                     
  8576                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             
      +                          --p;
  8577  000B3A  0100               	movlb	0	; () banked
  8578  000B3C  078B               	decf	efgtoa@p& (0+255),f,b
  8579  000B3E  A0D8               	btfss	status,0,c
  8580  000B40  078C               	decf	(efgtoa@p+1)& (0+255),f,b
  8581  000B42                     
  8582                           ; BSR set to: 0
  8583                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             
      +                          --w;
  8584  000B42  078E               	decf	efgtoa@w& (0+255),f,b
  8585  000B44  A0D8               	btfss	status,0,c
  8586  000B46  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8587  000B48                     l5370:
  8588                           
  8589                           ; BSR set to: 0
  8590                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  8591  000B48  519F               	movf	efgtoa@e& (0+255),w,b
  8592  000B4A  11A0               	iorwf	(efgtoa@e+1)& (0+255),w,b
  8593  000B4C  A4D8               	btfss	status,2,c
  8594  000B4E  EFAB  F005         	goto	u6211
  8595  000B52  EFAD  F005         	goto	u6210
  8596  000B56                     u6211:
  8597  000B56  EF79  F005         	goto	l5360
  8598  000B5A                     u6210:
  8599  000B5A                     
  8600                           ; BSR set to: 0
  8601  000B5A  BF8C               	btfsc	(efgtoa@p+1)& (0+255),7,b
  8602  000B5C  EFBA  F005         	goto	u6220
  8603  000B60  518C               	movf	(efgtoa@p+1)& (0+255),w,b
  8604  000B62  E106               	bnz	u6221
  8605  000B64  058B               	decf	efgtoa@p& (0+255),w,b
  8606  000B66  B0D8               	btfsc	status,0,c
  8607  000B68  EFB8  F005         	goto	u6221
  8608  000B6C  EFBA  F005         	goto	u6220
  8609  000B70                     u6221:
  8610  000B70  EF79  F005         	goto	l5360
  8611  000B74                     u6220:
  8612  000B74                     
  8613                           ; BSR set to: 0
  8614                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  8615  000B74  0799               	decf	efgtoa@i& (0+255),f,b
  8616  000B76  A0D8               	btfss	status,0,c
  8617  000B78  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  8618  000B7A                     
  8619                           ; BSR set to: 0
  8620                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [i] = sign ? '-' : '+';
  8621  000B7A  5189               	movf	efgtoa@sign& (0+255),w,b
  8622  000B7C  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8623  000B7E  A4D8               	btfss	status,2,c
  8624  000B80  EFC4  F005         	goto	u6231
  8625  000B84  EFC6  F005         	goto	u6230
  8626  000B88                     u6231:
  8627  000B88  EFCC  F005         	goto	l5380
  8628  000B8C                     u6230:
  8629  000B8C                     
  8630                           ; BSR set to: 0
  8631  000B8C  0E00               	movlw	0
  8632  000B8E  6F7A               	movwf	(_efgtoa$2992+1)& (0+255),b
  8633  000B90  0E2B               	movlw	43
  8634  000B92  6F79               	movwf	_efgtoa$2992& (0+255),b
  8635  000B94  EFD0  F005         	goto	l5382
  8636  000B98                     l5380:
  8637                           
  8638                           ; BSR set to: 0
  8639  000B98  0E00               	movlw	0
  8640  000B9A  6F7A               	movwf	(_efgtoa$2992+1)& (0+255),b
  8641  000B9C  0E2D               	movlw	45
  8642  000B9E  6F79               	movwf	_efgtoa$2992& (0+255),b
  8643  000BA0                     l5382:
  8644                           
  8645                           ; BSR set to: 0
  8646  000BA0  0E60               	movlw	low _dbuf
  8647  000BA2  2599               	addwf	efgtoa@i& (0+255),w,b
  8648  000BA4  6ED9               	movwf	fsr2l,c
  8649  000BA6  0E02               	movlw	high _dbuf
  8650  000BA8  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8651  000BAA  6EDA               	movwf	fsr2h,c
  8652  000BAC  C079  FFDF         	movff	_efgtoa$2992,indf2
  8653  000BB0                     
  8654                           ; BSR set to: 0
  8655                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  8656  000BB0  078E               	decf	efgtoa@w& (0+255),f,b
  8657  000BB2  A0D8               	btfss	status,0,c
  8658  000BB4  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8659  000BB6                     
  8660                           ; BSR set to: 0
  8661                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  8662  000BB6  0799               	decf	efgtoa@i& (0+255),f,b
  8663  000BB8  A0D8               	btfss	status,0,c
  8664  000BBA  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  8665  000BBC                     
  8666                           ; BSR set to: 0
  8667  000BBC  0EBF               	movlw	191
  8668  000BBE  6F6A               	movwf	??_efgtoa& (0+255),b
  8669  000BC0  0EFF               	movlw	255
  8670  000BC2  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  8671  000BC4  505E               	movf	efgtoa@c^0,w,c
  8672  000BC6  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  8673  000BC8  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  8674  000BCA  516A               	movf	??_efgtoa& (0+255),w,b
  8675  000BCC  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  8676  000BCE  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  8677  000BD0  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8678  000BD2  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  8679  000BD4  E10A               	bnz	u6240
  8680  000BD6  0E1A               	movlw	26
  8681  000BD8  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  8682  000BDA  A0D8               	btfss	status,0,c
  8683  000BDC  EFF2  F005         	goto	u6241
  8684  000BE0  EFF5  F005         	goto	u6240
  8685  000BE4                     u6241:
  8686  000BE4  0E01               	movlw	1
  8687  000BE6  EFF6  F005         	goto	u6250
  8688  000BEA                     u6240:
  8689  000BEA  0E00               	movlw	0
  8690  000BEC                     u6250:
  8691  000BEC  6F7D               	movwf	_efgtoa$2994& (0+255),b
  8692  000BEE  6B7E               	clrf	(_efgtoa$2994+1)& (0+255),b
  8693  000BF0                     
  8694                           ; BSR set to: 0
  8695  000BF0  517D               	movf	_efgtoa$2994& (0+255),w,b
  8696  000BF2  117E               	iorwf	(_efgtoa$2994+1)& (0+255),w,b
  8697  000BF4  A4D8               	btfss	status,2,c
  8698  000BF6  EFFF  F005         	goto	u6261
  8699  000BFA  EF01  F006         	goto	u6260
  8700  000BFE                     u6261:
  8701  000BFE  EF07  F006         	goto	l5396
  8702  000C02                     u6260:
  8703  000C02                     
  8704                           ; BSR set to: 0
  8705  000C02  0E00               	movlw	0
  8706  000C04  6F7C               	movwf	(_efgtoa$2993+1)& (0+255),b
  8707  000C06  0E65               	movlw	101
  8708  000C08  6F7B               	movwf	_efgtoa$2993& (0+255),b
  8709  000C0A  EF0B  F006         	goto	l5398
  8710  000C0E                     l5396:
  8711                           
  8712                           ; BSR set to: 0
  8713  000C0E  0E00               	movlw	0
  8714  000C10  6F7C               	movwf	(_efgtoa$2993+1)& (0+255),b
  8715  000C12  0E45               	movlw	69
  8716  000C14  6F7B               	movwf	_efgtoa$2993& (0+255),b
  8717  000C16                     l5398:
  8718                           
  8719                           ; BSR set to: 0
  8720  000C16  0E60               	movlw	low _dbuf
  8721  000C18  2599               	addwf	efgtoa@i& (0+255),w,b
  8722  000C1A  6ED9               	movwf	fsr2l,c
  8723  000C1C  0E02               	movlw	high _dbuf
  8724  000C1E  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8725  000C20  6EDA               	movwf	fsr2h,c
  8726  000C22  C07B  FFDF         	movff	_efgtoa$2993,indf2
  8727  000C26                     
  8728                           ; BSR set to: 0
  8729                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  8730  000C26  078E               	decf	efgtoa@w& (0+255),f,b
  8731  000C28  A0D8               	btfss	status,0,c
  8732  000C2A  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8733  000C2C                     
  8734                           ; BSR set to: 0
  8735                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  8736  000C2C  0E60               	movlw	low _dbuf
  8737  000C2E  25A1               	addwf	efgtoa@n& (0+255),w,b
  8738  000C30  6E01               	movwf	strcpy@dest^0,c
  8739  000C32  0E02               	movlw	high _dbuf
  8740  000C34  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8741  000C36  6E02               	movwf	(strcpy@dest+1)^0,c
  8742  000C38  0E60               	movlw	low _dbuf
  8743  000C3A  2599               	addwf	efgtoa@i& (0+255),w,b
  8744  000C3C  6E03               	movwf	strcpy@src^0,c
  8745  000C3E  0E02               	movlw	high _dbuf
  8746  000C40  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8747  000C42  6E04               	movwf	(strcpy@src+1)^0,c
  8748  000C44  EC8D  F028         	call	_strcpy	;wreg free
  8749  000C48  EF02  F001         	goto	l5154
  8750  000C4C                     l1472:
  8751  000C4C  0012               	return		;funcret
  8752  000C4E                     __end_of_efgtoa:
  8753                           	callstack 0
  8754                           
  8755 ;; *************** function _tolower *****************
  8756 ;; Defined at:
  8757 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\tolower.c"
  8758 ;; Parameters:    Size  Location     Type
  8759 ;;  c               2    6[COMRAM] int 
  8760 ;; Auto vars:     Size  Location     Type
  8761 ;;		None
  8762 ;; Return value:  Size  Location     Type
  8763 ;;                  2    6[COMRAM] int 
  8764 ;; Registers used:
  8765 ;;		wreg, status,2, status,0
  8766 ;; Tracked objects:
  8767 ;;		On entry : 0/0
  8768 ;;		On exit  : 0/0
  8769 ;;		Unchanged: 0/0
  8770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8771 ;;      Params:         2       0       0       0       0       0       0
  8772 ;;      Locals:         2       0       0       0       0       0       0
  8773 ;;      Temps:          4       0       0       0       0       0       0
  8774 ;;      Totals:         8       0       0       0       0       0       0
  8775 ;;Total ram usage:        8 bytes
  8776 ;; Hardware stack levels used:    1
  8777 ;; Hardware stack levels required when called:    2
  8778 ;; This function calls:
  8779 ;;		_isupper
  8780 ;; This function is called by:
  8781 ;;		_efgtoa
  8782 ;;		_vfpfcnvrt
  8783 ;; This function uses a non-reentrant model
  8784 ;;
  8785                           
  8786                           	psect	text26
  8787  0050BA                     __ptext26:
  8788                           	callstack 0
  8789  0050BA                     _tolower:
  8790                           	callstack 22
  8791  0050BA  0EBF               	movlw	191
  8792  0050BC  6E09               	movwf	??_tolower^0,c
  8793  0050BE  0EFF               	movlw	255
  8794  0050C0  6E0A               	movwf	(??_tolower+1)^0,c
  8795  0050C2  C007  F00B         	movff	tolower@c,??_tolower+2
  8796  0050C6  C008  F00C         	movff	tolower@c+1,??_tolower+3
  8797  0050CA  5009               	movf	??_tolower^0,w,c
  8798  0050CC  260B               	addwf	(??_tolower+2)^0,f,c
  8799  0050CE  500A               	movf	(??_tolower+1)^0,w,c
  8800  0050D0  220C               	addwfc	(??_tolower+3)^0,f,c
  8801  0050D2  500C               	movf	(??_tolower+3)^0,w,c
  8802  0050D4  E10A               	bnz	u5430
  8803  0050D6  0E1A               	movlw	26
  8804  0050D8  5C0B               	subwf	(??_tolower+2)^0,w,c
  8805  0050DA  A0D8               	btfss	status,0,c
  8806  0050DC  EF72  F028         	goto	u5431
  8807  0050E0  EF75  F028         	goto	u5430
  8808  0050E4                     u5431:
  8809  0050E4  0E01               	movlw	1
  8810  0050E6  EF76  F028         	goto	u5440
  8811  0050EA                     u5430:
  8812  0050EA  0E00               	movlw	0
  8813  0050EC                     u5440:
  8814  0050EC  6E0D               	movwf	_tolower$3145^0,c
  8815  0050EE  6A0E               	clrf	(_tolower$3145+1)^0,c
  8816  0050F0  500D               	movf	_tolower$3145^0,w,c
  8817  0050F2  100E               	iorwf	(_tolower$3145+1)^0,w,c
  8818  0050F4  B4D8               	btfsc	status,2,c
  8819  0050F6  EF7F  F028         	goto	u5451
  8820  0050FA  EF81  F028         	goto	u5450
  8821  0050FE                     u5451:
  8822  0050FE  EF88  F028         	goto	l1720
  8823  005102                     u5450:
  8824  005102  0E20               	movlw	32
  8825  005104  1007               	iorwf	tolower@c^0,w,c
  8826  005106  6E07               	movwf	?_tolower^0,c
  8827  005108  5008               	movf	(tolower@c+1)^0,w,c
  8828  00510A  6E08               	movwf	(?_tolower+1)^0,c
  8829  00510C  EF8C  F028         	goto	l1725
  8830  005110                     l1720:
  8831  005110  C007  F007         	movff	tolower@c,?_tolower
  8832  005114  C008  F008         	movff	tolower@c+1,?_tolower+1
  8833  005118                     l1725:
  8834  005118  0012               	return		;funcret
  8835  00511A                     __end_of_tolower:
  8836                           	callstack 0
  8837                           
  8838 ;; *************** function _isupper *****************
  8839 ;; Defined at:
  8840 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  8841 ;; Parameters:    Size  Location     Type
  8842 ;;  c               2    0[COMRAM] int 
  8843 ;; Auto vars:     Size  Location     Type
  8844 ;;		None
  8845 ;; Return value:  Size  Location     Type
  8846 ;;                  2    0[COMRAM] int 
  8847 ;; Registers used:
  8848 ;;		wreg, status,2, status,0
  8849 ;; Tracked objects:
  8850 ;;		On entry : 0/0
  8851 ;;		On exit  : 0/0
  8852 ;;		Unchanged: 0/0
  8853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8854 ;;      Params:         2       0       0       0       0       0       0
  8855 ;;      Locals:         0       0       0       0       0       0       0
  8856 ;;      Temps:          4       0       0       0       0       0       0
  8857 ;;      Totals:         6       0       0       0       0       0       0
  8858 ;;Total ram usage:        6 bytes
  8859 ;; Hardware stack levels used:    1
  8860 ;; Hardware stack levels required when called:    1
  8861 ;; This function calls:
  8862 ;;		Nothing
  8863 ;; This function is called by:
  8864 ;;		_efgtoa
  8865 ;;		_vfpfcnvrt
  8866 ;;		_tolower
  8867 ;; This function uses a non-reentrant model
  8868 ;;
  8869                           
  8870                           	psect	text27
  8871  005516                     __ptext27:
  8872                           	callstack 0
  8873  005516                     _isupper:
  8874                           	callstack 22
  8875  005516  0EBF               	movlw	191
  8876  005518  6E03               	movwf	??_isupper^0,c
  8877  00551A  0EFF               	movlw	255
  8878  00551C  6E04               	movwf	(??_isupper+1)^0,c
  8879  00551E  C001  F005         	movff	isupper@c,??_isupper+2
  8880  005522  C002  F006         	movff	isupper@c+1,??_isupper+3
  8881  005526  5003               	movf	??_isupper^0,w,c
  8882  005528  2605               	addwf	(??_isupper+2)^0,f,c
  8883  00552A  5004               	movf	(??_isupper+1)^0,w,c
  8884  00552C  2206               	addwfc	(??_isupper+3)^0,f,c
  8885  00552E  5006               	movf	(??_isupper+3)^0,w,c
  8886  005530  E10A               	bnz	u4440
  8887  005532  0E1A               	movlw	26
  8888  005534  5C05               	subwf	(??_isupper+2)^0,w,c
  8889  005536  A0D8               	btfss	status,0,c
  8890  005538  EFA0  F02A         	goto	u4441
  8891  00553C  EFA3  F02A         	goto	u4440
  8892  005540                     u4441:
  8893  005540  0E01               	movlw	1
  8894  005542  EFA4  F02A         	goto	u4450
  8895  005546                     u4440:
  8896  005546  0E00               	movlw	0
  8897  005548                     u4450:
  8898  005548  6E01               	movwf	?_isupper^0,c
  8899  00554A  6A02               	clrf	(?_isupper+1)^0,c
  8900  00554C  0012               	return		;funcret
  8901  00554E                     __end_of_isupper:
  8902                           	callstack 0
  8903                           
  8904 ;; *************** function _strcpy *****************
  8905 ;; Defined at:
  8906 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  8907 ;; Parameters:    Size  Location     Type
  8908 ;;  dest            2    0[COMRAM] PTR unsigned char 
  8909 ;;		 -> dbuf(80), 
  8910 ;;  src             2    2[COMRAM] PTR const unsigned char 
  8911 ;;		 -> STR_24(4), STR_23(4), STR_20(4), STR_19(4), 
  8912 ;;		 -> dbuf(80), 
  8913 ;; Auto vars:     Size  Location     Type
  8914 ;;  d               2    8[COMRAM] PTR unsigned char 
  8915 ;;		 -> dbuf(80), 
  8916 ;;  s               2    6[COMRAM] PTR const unsigned char 
  8917 ;;		 -> STR_24(4), STR_23(4), STR_20(4), STR_19(4), 
  8918 ;;		 -> dbuf(80), 
  8919 ;; Return value:  Size  Location     Type
  8920 ;;                  2    0[COMRAM] PTR unsigned char 
  8921 ;; Registers used:
  8922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8923 ;; Tracked objects:
  8924 ;;		On entry : 0/0
  8925 ;;		On exit  : 0/0
  8926 ;;		Unchanged: 0/0
  8927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8928 ;;      Params:         4       0       0       0       0       0       0
  8929 ;;      Locals:         4       0       0       0       0       0       0
  8930 ;;      Temps:          2       0       0       0       0       0       0
  8931 ;;      Totals:        10       0       0       0       0       0       0
  8932 ;;Total ram usage:       10 bytes
  8933 ;; Hardware stack levels used:    1
  8934 ;; Hardware stack levels required when called:    1
  8935 ;; This function calls:
  8936 ;;		Nothing
  8937 ;; This function is called by:
  8938 ;;		_efgtoa
  8939 ;; This function uses a non-reentrant model
  8940 ;;
  8941                           
  8942                           	psect	text28
  8943  00511A                     __ptext28:
  8944                           	callstack 0
  8945  00511A                     _strcpy:
  8946                           	callstack 22
  8947  00511A  C003  F007         	movff	strcpy@src,strcpy@s
  8948  00511E  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  8949  005122  C001  F009         	movff	strcpy@dest,strcpy@d
  8950  005126  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  8951  00512A                     l4992:
  8952  00512A  5007               	movf	strcpy@s^0,w,c
  8953  00512C  6E05               	movwf	??_strcpy^0,c
  8954  00512E  5008               	movf	(strcpy@s+1)^0,w,c
  8955  005130  6E06               	movwf	(??_strcpy+1)^0,c
  8956  005132  4A07               	infsnz	strcpy@s^0,f,c
  8957  005134  2A08               	incf	(strcpy@s+1)^0,f,c
  8958  005136  C005  FFF6         	movff	??_strcpy,tblptrl
  8959  00513A  C006  FFF7         	movff	??_strcpy+1,tblptrh
  8960  00513E  6AF8               	clrf	tblptru,c
  8961  005140  C009  FFD9         	movff	strcpy@d,fsr2l
  8962  005144  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  8963  005148  4A09               	infsnz	strcpy@d^0,f,c
  8964  00514A  2A0A               	incf	(strcpy@d+1)^0,f,c
  8965  00514C  0E05               	movlw	(high __ramtop+-1)
  8966  00514E  64F7               	cpfsgt	tblptrh,c
  8967  005150  D003               	bra	u5417
  8968  005152  0008               	tblrd		*
  8969  005154  50F5               	movf	tablat,w,c
  8970  005156  D005               	bra	u5410
  8971  005158                     u5417:
  8972  005158  CFF6 FFE1          	movff	tblptrl,fsr1l
  8973  00515C  CFF7 FFE2          	movff	tblptrh,fsr1h
  8974  005160  50E7               	movf	indf1,w,c
  8975  005162                     u5410:
  8976  005162  6EDF               	movwf	indf2,c
  8977  005164  50DF               	movf	indf2,w,c
  8978  005166  A4D8               	btfss	status,2,c
  8979  005168  EFB8  F028         	goto	u5421
  8980  00516C  EFBA  F028         	goto	u5420
  8981  005170                     u5421:
  8982  005170  EF95  F028         	goto	l4992
  8983  005174                     u5420:
  8984  005174  0012               	return		;funcret
  8985  005176                     __end_of_strcpy:
  8986                           	callstack 0
  8987                           
  8988 ;; *************** function _floorf *****************
  8989 ;; Defined at:
  8990 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\floorf.c"
  8991 ;; Parameters:    Size  Location     Type
  8992 ;;  x               4   77[COMRAM] float 
  8993 ;; Auto vars:     Size  Location     Type
  8994 ;;  u               4    6[BANK0 ] struct .
  8995 ;;  m               4    0[BANK0 ] unsigned long 
  8996 ;;  e               2    4[BANK0 ] int 
  8997 ;; Return value:  Size  Location     Type
  8998 ;;                  4   77[COMRAM] float 
  8999 ;; Registers used:
  9000 ;;		wreg, status,2, status,0
  9001 ;; Tracked objects:
  9002 ;;		On entry : 0/0
  9003 ;;		On exit  : 0/0
  9004 ;;		Unchanged: 0/0
  9005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9006 ;;      Params:         4       0       0       0       0       0       0
  9007 ;;      Locals:         0      10       0       0       0       0       0
  9008 ;;      Temps:          6       0       0       0       0       0       0
  9009 ;;      Totals:        10      10       0       0       0       0       0
  9010 ;;Total ram usage:       20 bytes
  9011 ;; Hardware stack levels used:    1
  9012 ;; Hardware stack levels required when called:    1
  9013 ;; This function calls:
  9014 ;;		Nothing
  9015 ;; This function is called by:
  9016 ;;		_efgtoa
  9017 ;; This function uses a non-reentrant model
  9018 ;;
  9019                           
  9020                           	psect	text29
  9021  002FB8                     __ptext29:
  9022                           	callstack 0
  9023  002FB8                     _floorf:
  9024                           	callstack 22
  9025  002FB8  C1A3  F066         	movff	floorf@F524,floorf@u
  9026  002FBC  C1A4  F067         	movff	floorf@F524+1,floorf@u+1
  9027  002FC0  C1A5  F068         	movff	floorf@F524+2,floorf@u+2
  9028  002FC4  C1A6  F069         	movff	floorf@F524+3,floorf@u+3
  9029  002FC8  C04E  F066         	movff	floorf@x,floorf@u
  9030  002FCC  C04F  F067         	movff	floorf@x+1,floorf@u+1
  9031  002FD0  C050  F068         	movff	floorf@x+2,floorf@u+2
  9032  002FD4  C051  F069         	movff	floorf@x+3,floorf@u+3
  9033  002FD8  0E81               	movlw	129
  9034  002FDA  6E52               	movwf	??_floorf^0,c
  9035  002FDC  0EFF               	movlw	255
  9036  002FDE  6E53               	movwf	(??_floorf+1)^0,c
  9037  002FE0  C066  F054         	movff	floorf@u,??_floorf+2
  9038  002FE4  C067  F055         	movff	floorf@u+1,??_floorf+3
  9039  002FE8  C068  F056         	movff	floorf@u+2,??_floorf+4
  9040  002FEC  C069  F057         	movff	floorf@u+3,??_floorf+5
  9041  002FF0  0E18               	movlw	24
  9042  002FF2  EF00  F018         	goto	u5460
  9043  002FF6                     u5465:
  9044  002FF6  90D8               	bcf	status,0,c
  9045  002FF8  3257               	rrcf	(??_floorf+5)^0,f,c
  9046  002FFA  3256               	rrcf	(??_floorf+4)^0,f,c
  9047  002FFC  3255               	rrcf	(??_floorf+3)^0,f,c
  9048  002FFE  3254               	rrcf	(??_floorf+2)^0,f,c
  9049  003000                     u5460:
  9050  003000  2EE8               	decfsz	wreg,f,c
  9051  003002  EFFB  F017         	goto	u5465
  9052  003006  5054               	movf	(??_floorf+2)^0,w,c
  9053  003008  2452               	addwf	??_floorf^0,w,c
  9054  00300A  0100               	movlb	0	; () banked
  9055  00300C  6F64               	movwf	floorf@e& (0+255),b
  9056  00300E  0E00               	movlw	0
  9057  003010  2053               	addwfc	(??_floorf+1)^0,w,c
  9058  003012  6F65               	movwf	(floorf@e+1)& (0+255),b
  9059  003014  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  9060  003016  EF16  F018         	goto	u5471
  9061  00301A  5165               	movf	(floorf@e+1)& (0+255),w,b
  9062  00301C  E109               	bnz	u5470
  9063  00301E  0E17               	movlw	23
  9064  003020  5D64               	subwf	floorf@e& (0+255),w,b
  9065  003022  A0D8               	btfss	status,0,c
  9066  003024  EF16  F018         	goto	u5471
  9067  003028  EF18  F018         	goto	u5470
  9068  00302C                     u5471:
  9069  00302C  EF22  F018         	goto	l5010
  9070  003030                     u5470:
  9071  003030                     l5008:
  9072                           
  9073                           ; BSR set to: 0
  9074  003030  C04E  F04E         	movff	floorf@x,?_floorf
  9075  003034  C04F  F04F         	movff	floorf@x+1,?_floorf+1
  9076  003038  C050  F050         	movff	floorf@x+2,?_floorf+2
  9077  00303C  C051  F051         	movff	floorf@x+3,?_floorf+3
  9078  003040  EFE6  F018         	goto	l1644
  9079  003044                     l5010:
  9080                           
  9081                           ; BSR set to: 0
  9082  003044  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  9083  003046  EF27  F018         	goto	u5481
  9084  00304A  EF29  F018         	goto	u5480
  9085  00304E                     u5481:
  9086  00304E  EF9A  F018         	goto	l5020
  9087  003052                     u5480:
  9088  003052                     
  9089                           ; BSR set to: 0
  9090  003052  C064  F052         	movff	floorf@e,??_floorf
  9091  003056  0EFF               	movlw	255
  9092  003058  6E53               	movwf	(??_floorf+1)^0,c
  9093  00305A  0EFF               	movlw	255
  9094  00305C  6E54               	movwf	(??_floorf+2)^0,c
  9095  00305E  0E7F               	movlw	127
  9096  003060  6E55               	movwf	(??_floorf+3)^0,c
  9097  003062  0E00               	movlw	0
  9098  003064  6E56               	movwf	(??_floorf+4)^0,c
  9099  003066                     u5495:
  9100  003066  6652               	tstfsz	??_floorf^0,c
  9101  003068  EF38  F018         	goto	u5496
  9102  00306C  EF40  F018         	goto	u5497
  9103  003070                     u5496:
  9104  003070  3456               	rlcf	(??_floorf+4)^0,w,c
  9105  003072  3256               	rrcf	(??_floorf+4)^0,f,c
  9106  003074  3255               	rrcf	(??_floorf+3)^0,f,c
  9107  003076  3254               	rrcf	(??_floorf+2)^0,f,c
  9108  003078  3253               	rrcf	(??_floorf+1)^0,f,c
  9109  00307A  2E52               	decfsz	??_floorf^0,f,c
  9110  00307C  EF33  F018         	goto	u5495
  9111  003080                     u5497:
  9112  003080  C053  F060         	movff	??_floorf+1,floorf@m
  9113  003084  C054  F061         	movff	??_floorf+2,floorf@m+1
  9114  003088  C055  F062         	movff	??_floorf+3,floorf@m+2
  9115  00308C  C056  F063         	movff	??_floorf+4,floorf@m+3
  9116  003090  0100               	movlb	0	; () banked
  9117  003092  5160               	movf	floorf@m& (0+255),w,b
  9118  003094  1566               	andwf	floorf@u& (0+255),w,b
  9119  003096  6E52               	movwf	??_floorf^0,c
  9120  003098  5161               	movf	(floorf@m+1)& (0+255),w,b
  9121  00309A  1567               	andwf	(floorf@u+1)& (0+255),w,b
  9122  00309C  6E53               	movwf	(??_floorf+1)^0,c
  9123  00309E  5162               	movf	(floorf@m+2)& (0+255),w,b
  9124  0030A0  1568               	andwf	(floorf@u+2)& (0+255),w,b
  9125  0030A2  6E54               	movwf	(??_floorf+2)^0,c
  9126  0030A4  5163               	movf	(floorf@m+3)& (0+255),w,b
  9127  0030A6  1569               	andwf	(floorf@u+3)& (0+255),w,b
  9128  0030A8  6E55               	movwf	(??_floorf+3)^0,c
  9129  0030AA  5052               	movf	??_floorf^0,w,c
  9130  0030AC  1053               	iorwf	(??_floorf+1)^0,w,c
  9131  0030AE  1054               	iorwf	(??_floorf+2)^0,w,c
  9132  0030B0  1055               	iorwf	(??_floorf+3)^0,w,c
  9133  0030B2  A4D8               	btfss	status,2,c
  9134  0030B4  EF5E  F018         	goto	u5501
  9135  0030B8  EF60  F018         	goto	u5500
  9136  0030BC                     u5501:
  9137  0030BC  EF62  F018         	goto	l5016
  9138  0030C0                     u5500:
  9139  0030C0  EF18  F018         	goto	l5008
  9140  0030C4                     l5016:
  9141                           
  9142                           ; BSR set to: 0
  9143  0030C4  C066  F052         	movff	floorf@u,??_floorf
  9144  0030C8  C067  F053         	movff	floorf@u+1,??_floorf+1
  9145  0030CC  C068  F054         	movff	floorf@u+2,??_floorf+2
  9146  0030D0  C069  F055         	movff	floorf@u+3,??_floorf+3
  9147  0030D4  0E20               	movlw	32
  9148  0030D6  EF72  F018         	goto	u5510
  9149  0030DA                     u5515:
  9150  0030DA  90D8               	bcf	status,0,c
  9151  0030DC  3255               	rrcf	(??_floorf+3)^0,f,c
  9152  0030DE  3254               	rrcf	(??_floorf+2)^0,f,c
  9153  0030E0  3253               	rrcf	(??_floorf+1)^0,f,c
  9154  0030E2  3252               	rrcf	??_floorf^0,f,c
  9155  0030E4                     u5510:
  9156  0030E4  2EE8               	decfsz	wreg,f,c
  9157  0030E6  EF6D  F018         	goto	u5515
  9158  0030EA  5052               	movf	??_floorf^0,w,c
  9159  0030EC  1053               	iorwf	(??_floorf+1)^0,w,c
  9160  0030EE  1054               	iorwf	(??_floorf+2)^0,w,c
  9161  0030F0  1055               	iorwf	(??_floorf+3)^0,w,c
  9162  0030F2  B4D8               	btfsc	status,2,c
  9163  0030F4  EF7E  F018         	goto	u5521
  9164  0030F8  EF80  F018         	goto	u5520
  9165  0030FC                     u5521:
  9166  0030FC  EF88  F018         	goto	l1647
  9167  003100                     u5520:
  9168  003100                     
  9169                           ; BSR set to: 0
  9170  003100  5160               	movf	floorf@m& (0+255),w,b
  9171  003102  2766               	addwf	floorf@u& (0+255),f,b
  9172  003104  5161               	movf	(floorf@m+1)& (0+255),w,b
  9173  003106  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  9174  003108  5162               	movf	(floorf@m+2)& (0+255),w,b
  9175  00310A  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  9176  00310C  5163               	movf	(floorf@m+3)& (0+255),w,b
  9177  00310E  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  9178  003110                     l1647:
  9179                           
  9180                           ; BSR set to: 0
  9181  003110  1D60               	comf	floorf@m& (0+255),w,b
  9182  003112  6E52               	movwf	??_floorf^0,c
  9183  003114  1D61               	comf	(floorf@m+1)& (0+255),w,b
  9184  003116  6E53               	movwf	(??_floorf+1)^0,c
  9185  003118  1D62               	comf	(floorf@m+2)& (0+255),w,b
  9186  00311A  6E54               	movwf	(??_floorf+2)^0,c
  9187  00311C  1D63               	comf	(floorf@m+3)& (0+255),w,b
  9188  00311E  6E55               	movwf	(??_floorf+3)^0,c
  9189  003120  5052               	movf	??_floorf^0,w,c
  9190  003122  1766               	andwf	floorf@u& (0+255),f,b
  9191  003124  5053               	movf	(??_floorf+1)^0,w,c
  9192  003126  1767               	andwf	(floorf@u+1)& (0+255),f,b
  9193  003128  5054               	movf	(??_floorf+2)^0,w,c
  9194  00312A  1768               	andwf	(floorf@u+2)& (0+255),f,b
  9195  00312C  5055               	movf	(??_floorf+3)^0,w,c
  9196  00312E  1769               	andwf	(floorf@u+3)& (0+255),f,b
  9197  003130  EFDE  F018         	goto	l5028
  9198  003134                     l5020:
  9199                           
  9200                           ; BSR set to: 0
  9201  003134  C066  F052         	movff	floorf@u,??_floorf
  9202  003138  C067  F053         	movff	floorf@u+1,??_floorf+1
  9203  00313C  C068  F054         	movff	floorf@u+2,??_floorf+2
  9204  003140  C069  F055         	movff	floorf@u+3,??_floorf+3
  9205  003144  0E20               	movlw	32
  9206  003146  EFAA  F018         	goto	u5530
  9207  00314A                     u5535:
  9208  00314A  90D8               	bcf	status,0,c
  9209  00314C  3255               	rrcf	(??_floorf+3)^0,f,c
  9210  00314E  3254               	rrcf	(??_floorf+2)^0,f,c
  9211  003150  3253               	rrcf	(??_floorf+1)^0,f,c
  9212  003152  3252               	rrcf	??_floorf^0,f,c
  9213  003154                     u5530:
  9214  003154  2EE8               	decfsz	wreg,f,c
  9215  003156  EFA5  F018         	goto	u5535
  9216  00315A  5052               	movf	??_floorf^0,w,c
  9217  00315C  1053               	iorwf	(??_floorf+1)^0,w,c
  9218  00315E  1054               	iorwf	(??_floorf+2)^0,w,c
  9219  003160  1055               	iorwf	(??_floorf+3)^0,w,c
  9220  003162  A4D8               	btfss	status,2,c
  9221  003164  EFB6  F018         	goto	u5541
  9222  003168  EFB8  F018         	goto	u5540
  9223  00316C                     u5541:
  9224  00316C  EFC2  F018         	goto	l5024
  9225  003170                     u5540:
  9226  003170                     
  9227                           ; BSR set to: 0
  9228  003170  0E00               	movlw	0
  9229  003172  6F66               	movwf	floorf@u& (0+255),b
  9230  003174  0E00               	movlw	0
  9231  003176  6F67               	movwf	(floorf@u+1)& (0+255),b
  9232  003178  0E00               	movlw	0
  9233  00317A  6F68               	movwf	(floorf@u+2)& (0+255),b
  9234  00317C  0E00               	movlw	0
  9235  00317E  6F69               	movwf	(floorf@u+3)& (0+255),b
  9236  003180  EFDE  F018         	goto	l5028
  9237  003184                     l5024:
  9238                           
  9239                           ; BSR set to: 0
  9240  003184  90D8               	bcf	status,0,c
  9241  003186  3566               	rlcf	floorf@u& (0+255),w,b
  9242  003188  6E52               	movwf	??_floorf^0,c
  9243  00318A  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  9244  00318C  6E53               	movwf	(??_floorf+1)^0,c
  9245  00318E  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  9246  003190  6E54               	movwf	(??_floorf+2)^0,c
  9247  003192  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  9248  003194  6E55               	movwf	(??_floorf+3)^0,c
  9249  003196  5052               	movf	??_floorf^0,w,c
  9250  003198  1053               	iorwf	(??_floorf+1)^0,w,c
  9251  00319A  1054               	iorwf	(??_floorf+2)^0,w,c
  9252  00319C  1055               	iorwf	(??_floorf+3)^0,w,c
  9253  00319E  B4D8               	btfsc	status,2,c
  9254  0031A0  EFD4  F018         	goto	u5551
  9255  0031A4  EFD6  F018         	goto	u5550
  9256  0031A8                     u5551:
  9257  0031A8  EFDE  F018         	goto	l5028
  9258  0031AC                     u5550:
  9259  0031AC                     
  9260                           ; BSR set to: 0
  9261  0031AC  0E00               	movlw	0
  9262  0031AE  6F66               	movwf	floorf@u& (0+255),b
  9263  0031B0  0E00               	movlw	0
  9264  0031B2  6F67               	movwf	(floorf@u+1)& (0+255),b
  9265  0031B4  0E80               	movlw	128
  9266  0031B6  6F68               	movwf	(floorf@u+2)& (0+255),b
  9267  0031B8  0EBF               	movlw	191
  9268  0031BA  6F69               	movwf	(floorf@u+3)& (0+255),b
  9269  0031BC                     l5028:
  9270                           
  9271                           ; BSR set to: 0
  9272  0031BC  C066  F04E         	movff	floorf@u,?_floorf
  9273  0031C0  C067  F04F         	movff	floorf@u+1,?_floorf+1
  9274  0031C4  C068  F050         	movff	floorf@u+2,?_floorf+2
  9275  0031C8  C069  F051         	movff	floorf@u+3,?_floorf+3
  9276  0031CC                     l1644:
  9277                           
  9278                           ; BSR set to: 0
  9279  0031CC  0012               	return		;funcret
  9280  0031CE                     __end_of_floorf:
  9281                           	callstack 0
  9282                           
  9283 ;; *************** function ___fpclassifyf *****************
  9284 ;; Defined at:
  9285 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
  9286 ;; Parameters:    Size  Location     Type
  9287 ;;  x               4    0[COMRAM] float 
  9288 ;; Auto vars:     Size  Location     Type
  9289 ;;  u               4   10[COMRAM] struct .
  9290 ;;  e               2    8[COMRAM] int 
  9291 ;; Return value:  Size  Location     Type
  9292 ;;                  2    0[COMRAM] int 
  9293 ;; Registers used:
  9294 ;;		wreg, status,2, status,0
  9295 ;; Tracked objects:
  9296 ;;		On entry : 0/0
  9297 ;;		On exit  : 0/0
  9298 ;;		Unchanged: 0/0
  9299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9300 ;;      Params:         4       0       0       0       0       0       0
  9301 ;;      Locals:         6       0       0       0       0       0       0
  9302 ;;      Temps:          4       0       0       0       0       0       0
  9303 ;;      Totals:        14       0       0       0       0       0       0
  9304 ;;Total ram usage:       14 bytes
  9305 ;; Hardware stack levels used:    1
  9306 ;; Hardware stack levels required when called:    1
  9307 ;; This function calls:
  9308 ;;		Nothing
  9309 ;; This function is called by:
  9310 ;;		_efgtoa
  9311 ;; This function uses a non-reentrant model
  9312 ;;
  9313                           
  9314                           	psect	text30
  9315  0044C8                     __ptext30:
  9316                           	callstack 0
  9317  0044C8                     ___fpclassifyf:
  9318                           	callstack 22
  9319  0044C8  C1A7  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  9320  0044CC  C1A8  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  9321  0044D0  C1A9  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  9322  0044D4  C1AA  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  9323  0044D8  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  9324  0044DC  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  9325  0044E0  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  9326  0044E4  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  9327  0044E8  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  9328  0044EC  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9329  0044F0  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9330  0044F4  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9331  0044F8  0E18               	movlw	24
  9332  0044FA  EF84  F022         	goto	u5340
  9333  0044FE                     u5345:
  9334  0044FE  90D8               	bcf	status,0,c
  9335  004500  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  9336  004502  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  9337  004504  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  9338  004506  3205               	rrcf	??___fpclassifyf^0,f,c
  9339  004508                     u5340:
  9340  004508  2EE8               	decfsz	wreg,f,c
  9341  00450A  EF7F  F022         	goto	u5345
  9342  00450E  5005               	movf	??___fpclassifyf^0,w,c
  9343  004510  6E09               	movwf	___fpclassifyf@e^0,c
  9344  004512  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  9345  004514  5009               	movf	___fpclassifyf@e^0,w,c
  9346  004516  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9347  004518  A4D8               	btfss	status,2,c
  9348  00451A  EF91  F022         	goto	u5351
  9349  00451E  EF93  F022         	goto	u5350
  9350  004522                     u5351:
  9351  004522  EFB3  F022         	goto	l4980
  9352  004526                     u5350:
  9353  004526  90D8               	bcf	status,0,c
  9354  004528  340B               	rlcf	___fpclassifyf@u^0,w,c
  9355  00452A  6E05               	movwf	??___fpclassifyf^0,c
  9356  00452C  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  9357  00452E  6E06               	movwf	(??___fpclassifyf+1)^0,c
  9358  004530  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  9359  004532  6E07               	movwf	(??___fpclassifyf+2)^0,c
  9360  004534  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  9361  004536  6E08               	movwf	(??___fpclassifyf+3)^0,c
  9362  004538  5005               	movf	??___fpclassifyf^0,w,c
  9363  00453A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  9364  00453C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  9365  00453E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  9366  004540  A4D8               	btfss	status,2,c
  9367  004542  EFA5  F022         	goto	u5361
  9368  004546  EFA7  F022         	goto	u5360
  9369  00454A                     u5361:
  9370  00454A  EFAD  F022         	goto	l4976
  9371  00454E                     u5360:
  9372  00454E  0E00               	movlw	0
  9373  004550  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9374  004552  0E02               	movlw	2
  9375  004554  6E01               	movwf	?___fpclassifyf^0,c
  9376  004556  EFE2  F022         	goto	l1599
  9377  00455A                     l4976:
  9378  00455A  0E00               	movlw	0
  9379  00455C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9380  00455E  0E03               	movlw	3
  9381  004560  6E01               	movwf	?___fpclassifyf^0,c
  9382  004562  EFE2  F022         	goto	l1599
  9383  004566                     l4980:
  9384  004566  2809               	incf	___fpclassifyf@e^0,w,c
  9385  004568  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9386  00456A  A4D8               	btfss	status,2,c
  9387  00456C  EFBA  F022         	goto	u5371
  9388  004570  EFBC  F022         	goto	u5370
  9389  004574                     u5371:
  9390  004574  EFDE  F022         	goto	l4986
  9391  004578                     u5370:
  9392  004578  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  9393  00457C  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9394  004580  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9395  004584  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9396  004588  0E09               	movlw	9
  9397  00458A                     u5385:
  9398  00458A  90D8               	bcf	status,0,c
  9399  00458C  3605               	rlcf	??___fpclassifyf^0,f,c
  9400  00458E  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  9401  004590  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  9402  004592  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  9403  004594  2EE8               	decfsz	wreg,f,c
  9404  004596  EFC5  F022         	goto	u5385
  9405  00459A  5005               	movf	??___fpclassifyf^0,w,c
  9406  00459C  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  9407  00459E  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  9408  0045A0  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  9409  0045A2  B4D8               	btfsc	status,2,c
  9410  0045A4  EFD6  F022         	goto	u5391
  9411  0045A8  EFD9  F022         	goto	u5390
  9412  0045AC                     u5391:
  9413  0045AC  0E01               	movlw	1
  9414  0045AE  EFDA  F022         	goto	u5400
  9415  0045B2                     u5390:
  9416  0045B2  0E00               	movlw	0
  9417  0045B4                     u5400:
  9418  0045B4  6E01               	movwf	?___fpclassifyf^0,c
  9419  0045B6  6A02               	clrf	(?___fpclassifyf+1)^0,c
  9420  0045B8  EFE2  F022         	goto	l1599
  9421  0045BC                     l4986:
  9422  0045BC  0E00               	movlw	0
  9423  0045BE  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9424  0045C0  0E04               	movlw	4
  9425  0045C2  6E01               	movwf	?___fpclassifyf^0,c
  9426  0045C4                     l1599:
  9427  0045C4  0012               	return		;funcret
  9428  0045C6                     __end_of___fpclassifyf:
  9429                           	callstack 0
  9430                           
  9431 ;; *************** function ___flsub *****************
  9432 ;; Defined at:
  9433 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  9434 ;; Parameters:    Size  Location     Type
  9435 ;;  b               4   68[COMRAM] int 
  9436 ;;  a               4   72[COMRAM] int 
  9437 ;; Auto vars:     Size  Location     Type
  9438 ;;		None
  9439 ;; Return value:  Size  Location     Type
  9440 ;;                  4   68[COMRAM] int 
  9441 ;; Registers used:
  9442 ;;		wreg, status,2, status,0, cstack
  9443 ;; Tracked objects:
  9444 ;;		On entry : 0/0
  9445 ;;		On exit  : 0/0
  9446 ;;		Unchanged: 0/0
  9447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9448 ;;      Params:         8       0       0       0       0       0       0
  9449 ;;      Locals:         0       0       0       0       0       0       0
  9450 ;;      Temps:          0       0       0       0       0       0       0
  9451 ;;      Totals:         8       0       0       0       0       0       0
  9452 ;;Total ram usage:        8 bytes
  9453 ;; Hardware stack levels used:    1
  9454 ;; Hardware stack levels required when called:    2
  9455 ;; This function calls:
  9456 ;;		___fladd
  9457 ;; This function is called by:
  9458 ;;		_secretMenu
  9459 ;;		_efgtoa
  9460 ;; This function uses a non-reentrant model
  9461 ;;
  9462                           
  9463                           	psect	text31
  9464  005312                     __ptext31:
  9465                           	callstack 0
  9466  005312                     ___flsub:
  9467                           	callstack 21
  9468  005312  0E00               	movlw	0
  9469  005314  1A49               	xorwf	___flsub@a^0,f,c
  9470  005316  0E00               	movlw	0
  9471  005318  1A4A               	xorwf	(___flsub@a+1)^0,f,c
  9472  00531A  0E00               	movlw	0
  9473  00531C  1A4B               	xorwf	(___flsub@a+2)^0,f,c
  9474  00531E  0E80               	movlw	128
  9475  005320  1A4C               	xorwf	(___flsub@a+3)^0,f,c
  9476  005322  C045  F035         	movff	___flsub@b,___fladd@b
  9477  005326  C046  F036         	movff	___flsub@b+1,___fladd@b+1
  9478  00532A  C047  F037         	movff	___flsub@b+2,___fladd@b+2
  9479  00532E  C048  F038         	movff	___flsub@b+3,___fladd@b+3
  9480  005332  C049  F039         	movff	___flsub@a,___fladd@a
  9481  005336  C04A  F03A         	movff	___flsub@a+1,___fladd@a+1
  9482  00533A  C04B  F03B         	movff	___flsub@a+2,___fladd@a+2
  9483  00533E  C04C  F03C         	movff	___flsub@a+3,___fladd@a+3
  9484  005342  EC49  F00D         	call	___fladd	;wreg free
  9485  005346  C035  F045         	movff	?___fladd,?___flsub
  9486  00534A  C036  F046         	movff	?___fladd+1,?___flsub+1
  9487  00534E  C037  F047         	movff	?___fladd+2,?___flsub+2
  9488  005352  C038  F048         	movff	?___fladd+3,?___flsub+3
  9489  005356  0012               	return		;funcret
  9490  005358                     __end_of___flsub:
  9491                           	callstack 0
  9492                           
  9493 ;; *************** function ___fladd *****************
  9494 ;; Defined at:
  9495 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  9496 ;; Parameters:    Size  Location     Type
  9497 ;;  b               4   52[COMRAM] int 
  9498 ;;  a               4   56[COMRAM] int 
  9499 ;; Auto vars:     Size  Location     Type
  9500 ;;  grs             1   67[COMRAM] unsigned char 
  9501 ;;  bexp            1   66[COMRAM] unsigned char 
  9502 ;;  aexp            1   65[COMRAM] unsigned char 
  9503 ;;  signs           1   64[COMRAM] unsigned char 
  9504 ;; Return value:  Size  Location     Type
  9505 ;;                  4   52[COMRAM] unsigned char 
  9506 ;; Registers used:
  9507 ;;		wreg, status,2, status,0
  9508 ;; Tracked objects:
  9509 ;;		On entry : 0/0
  9510 ;;		On exit  : 0/0
  9511 ;;		Unchanged: 0/0
  9512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9513 ;;      Params:         8       0       0       0       0       0       0
  9514 ;;      Locals:         4       0       0       0       0       0       0
  9515 ;;      Temps:          4       0       0       0       0       0       0
  9516 ;;      Totals:        16       0       0       0       0       0       0
  9517 ;;Total ram usage:       16 bytes
  9518 ;; Hardware stack levels used:    1
  9519 ;; Hardware stack levels required when called:    1
  9520 ;; This function calls:
  9521 ;;		Nothing
  9522 ;; This function is called by:
  9523 ;;		_secretMenu
  9524 ;;		_speedControl
  9525 ;;		___flsub
  9526 ;;		_efgtoa
  9527 ;; This function uses a non-reentrant model
  9528 ;;
  9529                           
  9530                           	psect	text32
  9531  001A92                     __ptext32:
  9532                           	callstack 0
  9533  001A92                     ___fladd:
  9534                           	callstack 21
  9535  001A92  5038               	movf	(___fladd@b+3)^0,w,c
  9536  001A94  0B80               	andlw	128
  9537  001A96  6E41               	movwf	___fladd@signs^0,c
  9538  001A98  5038               	movf	(___fladd@b+3)^0,w,c
  9539  001A9A  2438               	addwf	(___fladd@b+3)^0,w,c
  9540  001A9C  6E43               	movwf	___fladd@bexp^0,c
  9541  001A9E  AE37               	btfss	(___fladd@b+2)^0,7,c
  9542  001AA0  EF54  F00D         	goto	u4031
  9543  001AA4  EF56  F00D         	goto	u4030
  9544  001AA8                     u4031:
  9545  001AA8  EF57  F00D         	goto	l4194
  9546  001AAC                     u4030:
  9547  001AAC  8043               	bsf	___fladd@bexp^0,0,c
  9548  001AAE                     l4194:
  9549  001AAE  5043               	movf	___fladd@bexp^0,w,c
  9550  001AB0  B4D8               	btfsc	status,2,c
  9551  001AB2  EF5D  F00D         	goto	u4041
  9552  001AB6  EF5F  F00D         	goto	u4040
  9553  001ABA                     u4041:
  9554  001ABA  EF74  F00D         	goto	l4204
  9555  001ABE                     u4040:
  9556  001ABE  2843               	incf	___fladd@bexp^0,w,c
  9557  001AC0  A4D8               	btfss	status,2,c
  9558  001AC2  EF65  F00D         	goto	u4051
  9559  001AC6  EF67  F00D         	goto	u4050
  9560  001ACA                     u4051:
  9561  001ACA  EF6F  F00D         	goto	l4200
  9562  001ACE                     u4050:
  9563  001ACE  0E00               	movlw	0
  9564  001AD0  6E35               	movwf	___fladd@b^0,c
  9565  001AD2  0E00               	movlw	0
  9566  001AD4  6E36               	movwf	(___fladd@b+1)^0,c
  9567  001AD6  0E00               	movlw	0
  9568  001AD8  6E37               	movwf	(___fladd@b+2)^0,c
  9569  001ADA  0E00               	movlw	0
  9570  001ADC  6E38               	movwf	(___fladd@b+3)^0,c
  9571  001ADE                     l4200:
  9572  001ADE  8E37               	bsf	(___fladd@b+2)^0,7,c
  9573  001AE0  0E00               	movlw	0
  9574  001AE2  6E38               	movwf	(___fladd@b+3)^0,c
  9575  001AE4  EF7C  F00D         	goto	l4206
  9576  001AE8                     l4204:
  9577  001AE8  0E00               	movlw	0
  9578  001AEA  6E35               	movwf	___fladd@b^0,c
  9579  001AEC  0E00               	movlw	0
  9580  001AEE  6E36               	movwf	(___fladd@b+1)^0,c
  9581  001AF0  0E00               	movlw	0
  9582  001AF2  6E37               	movwf	(___fladd@b+2)^0,c
  9583  001AF4  0E00               	movlw	0
  9584  001AF6  6E38               	movwf	(___fladd@b+3)^0,c
  9585  001AF8                     l4206:
  9586  001AF8  503C               	movf	(___fladd@a+3)^0,w,c
  9587  001AFA  0B80               	andlw	128
  9588  001AFC  6E42               	movwf	___fladd@aexp^0,c
  9589  001AFE  5041               	movf	___fladd@signs^0,w,c
  9590  001B00  1842               	xorwf	___fladd@aexp^0,w,c
  9591  001B02  B4D8               	btfsc	status,2,c
  9592  001B04  EF86  F00D         	goto	u4061
  9593  001B08  EF88  F00D         	goto	u4060
  9594  001B0C                     u4061:
  9595  001B0C  EF89  F00D         	goto	l4212
  9596  001B10                     u4060:
  9597  001B10  8C41               	bsf	___fladd@signs^0,6,c
  9598  001B12                     l4212:
  9599  001B12  503C               	movf	(___fladd@a+3)^0,w,c
  9600  001B14  243C               	addwf	(___fladd@a+3)^0,w,c
  9601  001B16  6E42               	movwf	___fladd@aexp^0,c
  9602  001B18  AE3B               	btfss	(___fladd@a+2)^0,7,c
  9603  001B1A  EF91  F00D         	goto	u4071
  9604  001B1E  EF93  F00D         	goto	u4070
  9605  001B22                     u4071:
  9606  001B22  EF94  F00D         	goto	l4218
  9607  001B26                     u4070:
  9608  001B26  8042               	bsf	___fladd@aexp^0,0,c
  9609  001B28                     l4218:
  9610  001B28  5042               	movf	___fladd@aexp^0,w,c
  9611  001B2A  B4D8               	btfsc	status,2,c
  9612  001B2C  EF9A  F00D         	goto	u4081
  9613  001B30  EF9C  F00D         	goto	u4080
  9614  001B34                     u4081:
  9615  001B34  EFB1  F00D         	goto	l4228
  9616  001B38                     u4080:
  9617  001B38  2842               	incf	___fladd@aexp^0,w,c
  9618  001B3A  A4D8               	btfss	status,2,c
  9619  001B3C  EFA2  F00D         	goto	u4091
  9620  001B40  EFA4  F00D         	goto	u4090
  9621  001B44                     u4091:
  9622  001B44  EFAC  F00D         	goto	l4224
  9623  001B48                     u4090:
  9624  001B48  0E00               	movlw	0
  9625  001B4A  6E39               	movwf	___fladd@a^0,c
  9626  001B4C  0E00               	movlw	0
  9627  001B4E  6E3A               	movwf	(___fladd@a+1)^0,c
  9628  001B50  0E00               	movlw	0
  9629  001B52  6E3B               	movwf	(___fladd@a+2)^0,c
  9630  001B54  0E00               	movlw	0
  9631  001B56  6E3C               	movwf	(___fladd@a+3)^0,c
  9632  001B58                     l4224:
  9633  001B58  8E3B               	bsf	(___fladd@a+2)^0,7,c
  9634  001B5A  0E00               	movlw	0
  9635  001B5C  6E3C               	movwf	(___fladd@a+3)^0,c
  9636  001B5E  EFB9  F00D         	goto	l4230
  9637  001B62                     l4228:
  9638  001B62  0E00               	movlw	0
  9639  001B64  6E39               	movwf	___fladd@a^0,c
  9640  001B66  0E00               	movlw	0
  9641  001B68  6E3A               	movwf	(___fladd@a+1)^0,c
  9642  001B6A  0E00               	movlw	0
  9643  001B6C  6E3B               	movwf	(___fladd@a+2)^0,c
  9644  001B6E  0E00               	movlw	0
  9645  001B70  6E3C               	movwf	(___fladd@a+3)^0,c
  9646  001B72                     l4230:
  9647  001B72  5043               	movf	___fladd@bexp^0,w,c
  9648  001B74  5C42               	subwf	___fladd@aexp^0,w,c
  9649  001B76  B0D8               	btfsc	status,0,c
  9650  001B78  EFC0  F00D         	goto	u4101
  9651  001B7C  EFC2  F00D         	goto	u4100
  9652  001B80                     u4101:
  9653  001B80  EFE9  F00D         	goto	l4266
  9654  001B84                     u4100:
  9655  001B84  AC41               	btfss	___fladd@signs^0,6,c
  9656  001B86  EFC7  F00D         	goto	u4111
  9657  001B8A  EFC9  F00D         	goto	u4110
  9658  001B8E                     u4111:
  9659  001B8E  EFCB  F00D         	goto	l4236
  9660  001B92                     u4110:
  9661  001B92  0E80               	movlw	128
  9662  001B94  1A41               	xorwf	___fladd@signs^0,f,c
  9663  001B96                     l4236:
  9664  001B96  C043  F044         	movff	___fladd@bexp,___fladd@grs
  9665  001B9A  C042  F043         	movff	___fladd@aexp,___fladd@bexp
  9666  001B9E  C044  F042         	movff	___fladd@grs,___fladd@aexp
  9667  001BA2  C035  F044         	movff	___fladd@b,___fladd@grs
  9668  001BA6  C039  F035         	movff	___fladd@a,___fladd@b
  9669  001BAA  C044  F039         	movff	___fladd@grs,___fladd@a
  9670  001BAE  C036  F044         	movff	___fladd@b+1,___fladd@grs
  9671  001BB2  C03A  F036         	movff	___fladd@a+1,___fladd@b+1
  9672  001BB6  C044  F03A         	movff	___fladd@grs,___fladd@a+1
  9673  001BBA  C037  F044         	movff	___fladd@b+2,___fladd@grs
  9674  001BBE  C03B  F037         	movff	___fladd@a+2,___fladd@b+2
  9675  001BC2  C044  F03B         	movff	___fladd@grs,___fladd@a+2
  9676  001BC6  C038  F044         	movff	___fladd@b+3,___fladd@grs
  9677  001BCA  C03C  F038         	movff	___fladd@a+3,___fladd@b+3
  9678  001BCE  C044  F03C         	movff	___fladd@grs,___fladd@a+3
  9679  001BD2                     l4266:
  9680  001BD2  0E00               	movlw	0
  9681  001BD4  6E44               	movwf	___fladd@grs^0,c
  9682  001BD6  5043               	movf	___fladd@bexp^0,w,c
  9683  001BD8  C042  F03D         	movff	___fladd@aexp,??___fladd
  9684  001BDC  6A3E               	clrf	(??___fladd+1)^0,c
  9685  001BDE  5E3D               	subwf	??___fladd^0,f,c
  9686  001BE0  0E00               	movlw	0
  9687  001BE2  5A3E               	subwfb	(??___fladd+1)^0,f,c
  9688  001BE4  BE3E               	btfsc	(??___fladd+1)^0,7,c
  9689  001BE6  EFFE  F00D         	goto	u4121
  9690  001BEA  503E               	movf	(??___fladd+1)^0,w,c
  9691  001BEC  E109               	bnz	u4120
  9692  001BEE  0E1A               	movlw	26
  9693  001BF0  5C3D               	subwf	??___fladd^0,w,c
  9694  001BF2  A0D8               	btfss	status,0,c
  9695  001BF4  EFFE  F00D         	goto	u4121
  9696  001BF8  EF00  F00E         	goto	u4120
  9697  001BFC                     u4121:
  9698  001BFC  EF37  F00E         	goto	l1226
  9699  001C00                     u4120:
  9700  001C00  5035               	movf	___fladd@b^0,w,c
  9701  001C02  1036               	iorwf	(___fladd@b+1)^0,w,c
  9702  001C04  1037               	iorwf	(___fladd@b+2)^0,w,c
  9703  001C06  1038               	iorwf	(___fladd@b+3)^0,w,c
  9704  001C08  A4D8               	btfss	status,2,c
  9705  001C0A  EF09  F00E         	goto	u4131
  9706  001C0E  EF0C  F00E         	goto	u4130
  9707  001C12                     u4131:
  9708  001C12  0E01               	movlw	1
  9709  001C14  EF0D  F00E         	goto	u4140
  9710  001C18                     u4130:
  9711  001C18  0E00               	movlw	0
  9712  001C1A                     u4140:
  9713  001C1A  6E44               	movwf	___fladd@grs^0,c
  9714  001C1C  0E00               	movlw	0
  9715  001C1E  6E35               	movwf	___fladd@b^0,c
  9716  001C20  0E00               	movlw	0
  9717  001C22  6E36               	movwf	(___fladd@b+1)^0,c
  9718  001C24  0E00               	movlw	0
  9719  001C26  6E37               	movwf	(___fladd@b+2)^0,c
  9720  001C28  0E00               	movlw	0
  9721  001C2A  6E38               	movwf	(___fladd@b+3)^0,c
  9722  001C2C  C042  F043         	movff	___fladd@aexp,___fladd@bexp
  9723  001C30  EF40  F00E         	goto	l1225
  9724  001C34                     l1227:
  9725  001C34  A044               	btfss	___fladd@grs^0,0,c
  9726  001C36  EF1F  F00E         	goto	u4151
  9727  001C3A  EF21  F00E         	goto	u4150
  9728  001C3E                     u4151:
  9729  001C3E  EF27  F00E         	goto	l4278
  9730  001C42                     u4150:
  9731  001C42  90D8               	bcf	status,0,c
  9732  001C44  3044               	rrcf	___fladd@grs^0,w,c
  9733  001C46  0901               	iorlw	1
  9734  001C48  6E44               	movwf	___fladd@grs^0,c
  9735  001C4A  EF29  F00E         	goto	l4280
  9736  001C4E                     l4278:
  9737  001C4E  90D8               	bcf	status,0,c
  9738  001C50  3244               	rrcf	___fladd@grs^0,f,c
  9739  001C52                     l4280:
  9740  001C52  A035               	btfss	___fladd@b^0,0,c
  9741  001C54  EF2E  F00E         	goto	u4161
  9742  001C58  EF30  F00E         	goto	u4160
  9743  001C5C                     u4161:
  9744  001C5C  EF31  F00E         	goto	l4284
  9745  001C60                     u4160:
  9746  001C60  8E44               	bsf	___fladd@grs^0,7,c
  9747  001C62                     l4284:
  9748  001C62  3438               	rlcf	(___fladd@b+3)^0,w,c
  9749  001C64  3238               	rrcf	(___fladd@b+3)^0,f,c
  9750  001C66  3237               	rrcf	(___fladd@b+2)^0,f,c
  9751  001C68  3236               	rrcf	(___fladd@b+1)^0,f,c
  9752  001C6A  3235               	rrcf	___fladd@b^0,f,c
  9753  001C6C  2A43               	incf	___fladd@bexp^0,f,c
  9754  001C6E                     l1226:
  9755  001C6E  5042               	movf	___fladd@aexp^0,w,c
  9756  001C70  5C43               	subwf	___fladd@bexp^0,w,c
  9757  001C72  A0D8               	btfss	status,0,c
  9758  001C74  EF3E  F00E         	goto	u4171
  9759  001C78  EF40  F00E         	goto	u4170
  9760  001C7C                     u4171:
  9761  001C7C  EF1A  F00E         	goto	l1227
  9762  001C80                     u4170:
  9763  001C80                     l1225:
  9764  001C80  BC41               	btfsc	___fladd@signs^0,6,c
  9765  001C82  EF45  F00E         	goto	u4181
  9766  001C86  EF47  F00E         	goto	u4180
  9767  001C8A                     u4181:
  9768  001C8A  EF87  F00E         	goto	l4312
  9769  001C8E                     u4180:
  9770  001C8E  5043               	movf	___fladd@bexp^0,w,c
  9771  001C90  A4D8               	btfss	status,2,c
  9772  001C92  EF4D  F00E         	goto	u4191
  9773  001C96  EF4F  F00E         	goto	u4190
  9774  001C9A                     u4191:
  9775  001C9A  EF59  F00E         	goto	l4294
  9776  001C9E                     u4190:
  9777  001C9E  0E00               	movlw	0
  9778  001CA0  6E35               	movwf	?___fladd^0,c
  9779  001CA2  0E00               	movlw	0
  9780  001CA4  6E36               	movwf	(?___fladd+1)^0,c
  9781  001CA6  0E00               	movlw	0
  9782  001CA8  6E37               	movwf	(?___fladd+2)^0,c
  9783  001CAA  0E00               	movlw	0
  9784  001CAC  6E38               	movwf	(?___fladd+3)^0,c
  9785  001CAE  EFA8  F00F         	goto	l1234
  9786  001CB2                     l4294:
  9787  001CB2  5039               	movf	___fladd@a^0,w,c
  9788  001CB4  2635               	addwf	___fladd@b^0,f,c
  9789  001CB6  503A               	movf	(___fladd@a+1)^0,w,c
  9790  001CB8  2236               	addwfc	(___fladd@b+1)^0,f,c
  9791  001CBA  503B               	movf	(___fladd@a+2)^0,w,c
  9792  001CBC  2237               	addwfc	(___fladd@b+2)^0,f,c
  9793  001CBE  503C               	movf	(___fladd@a+3)^0,w,c
  9794  001CC0  2238               	addwfc	(___fladd@b+3)^0,f,c
  9795  001CC2  A038               	btfss	(___fladd@b+3)^0,0,c
  9796  001CC4  EF66  F00E         	goto	u4201
  9797  001CC8  EF68  F00E         	goto	u4200
  9798  001CCC                     u4201:
  9799  001CCC  EF14  F00F         	goto	l4348
  9800  001CD0                     u4200:
  9801  001CD0  A044               	btfss	___fladd@grs^0,0,c
  9802  001CD2  EF6D  F00E         	goto	u4211
  9803  001CD6  EF6F  F00E         	goto	u4210
  9804  001CDA                     u4211:
  9805  001CDA  EF75  F00E         	goto	l4302
  9806  001CDE                     u4210:
  9807  001CDE  90D8               	bcf	status,0,c
  9808  001CE0  3044               	rrcf	___fladd@grs^0,w,c
  9809  001CE2  0901               	iorlw	1
  9810  001CE4  6E44               	movwf	___fladd@grs^0,c
  9811  001CE6  EF77  F00E         	goto	l4304
  9812  001CEA                     l4302:
  9813  001CEA  90D8               	bcf	status,0,c
  9814  001CEC  3244               	rrcf	___fladd@grs^0,f,c
  9815  001CEE                     l4304:
  9816  001CEE  A035               	btfss	___fladd@b^0,0,c
  9817  001CF0  EF7C  F00E         	goto	u4221
  9818  001CF4  EF7E  F00E         	goto	u4220
  9819  001CF8                     u4221:
  9820  001CF8  EF7F  F00E         	goto	l4308
  9821  001CFC                     u4220:
  9822  001CFC  8E44               	bsf	___fladd@grs^0,7,c
  9823  001CFE                     l4308:
  9824  001CFE  3438               	rlcf	(___fladd@b+3)^0,w,c
  9825  001D00  3238               	rrcf	(___fladd@b+3)^0,f,c
  9826  001D02  3237               	rrcf	(___fladd@b+2)^0,f,c
  9827  001D04  3236               	rrcf	(___fladd@b+1)^0,f,c
  9828  001D06  3235               	rrcf	___fladd@b^0,f,c
  9829  001D08  2A43               	incf	___fladd@bexp^0,f,c
  9830  001D0A  EF14  F00F         	goto	l4348
  9831  001D0E                     l4312:
  9832  001D0E  5039               	movf	___fladd@a^0,w,c
  9833  001D10  5C35               	subwf	___fladd@b^0,w,c
  9834  001D12  503A               	movf	(___fladd@a+1)^0,w,c
  9835  001D14  5836               	subwfb	(___fladd@b+1)^0,w,c
  9836  001D16  503B               	movf	(___fladd@a+2)^0,w,c
  9837  001D18  5837               	subwfb	(___fladd@b+2)^0,w,c
  9838  001D1A  5038               	movf	(___fladd@b+3)^0,w,c
  9839  001D1C  0A80               	xorlw	128
  9840  001D1E  6E3D               	movwf	??___fladd^0,c
  9841  001D20  503C               	movf	(___fladd@a+3)^0,w,c
  9842  001D22  0A80               	xorlw	128
  9843  001D24  583D               	subwfb	??___fladd^0,w,c
  9844  001D26  B0D8               	btfsc	status,0,c
  9845  001D28  EF98  F00E         	goto	u4231
  9846  001D2C  EF9A  F00E         	goto	u4230
  9847  001D30                     u4231:
  9848  001D30  EFC5  F00E         	goto	l4322
  9849  001D34                     u4230:
  9850  001D34  5035               	movf	___fladd@b^0,w,c
  9851  001D36  5C39               	subwf	___fladd@a^0,w,c
  9852  001D38  6E3D               	movwf	??___fladd^0,c
  9853  001D3A  5036               	movf	(___fladd@b+1)^0,w,c
  9854  001D3C  583A               	subwfb	(___fladd@a+1)^0,w,c
  9855  001D3E  6E3E               	movwf	(??___fladd+1)^0,c
  9856  001D40  5037               	movf	(___fladd@b+2)^0,w,c
  9857  001D42  583B               	subwfb	(___fladd@a+2)^0,w,c
  9858  001D44  6E3F               	movwf	(??___fladd+2)^0,c
  9859  001D46  5038               	movf	(___fladd@b+3)^0,w,c
  9860  001D48  583C               	subwfb	(___fladd@a+3)^0,w,c
  9861  001D4A  6E40               	movwf	(??___fladd+3)^0,c
  9862  001D4C  0EFF               	movlw	255
  9863  001D4E  243D               	addwf	??___fladd^0,w,c
  9864  001D50  6E35               	movwf	___fladd@b^0,c
  9865  001D52  0EFF               	movlw	255
  9866  001D54  203E               	addwfc	(??___fladd+1)^0,w,c
  9867  001D56  6E36               	movwf	(___fladd@b+1)^0,c
  9868  001D58  0EFF               	movlw	255
  9869  001D5A  203F               	addwfc	(??___fladd+2)^0,w,c
  9870  001D5C  6E37               	movwf	(___fladd@b+2)^0,c
  9871  001D5E  0EFF               	movlw	255
  9872  001D60  2040               	addwfc	(??___fladd+3)^0,w,c
  9873  001D62  6E38               	movwf	(___fladd@b+3)^0,c
  9874  001D64  0E80               	movlw	128
  9875  001D66  1A41               	xorwf	___fladd@signs^0,f,c
  9876  001D68  6C44               	negf	___fladd@grs^0,c
  9877  001D6A  5044               	movf	___fladd@grs^0,w,c
  9878  001D6C  A4D8               	btfss	status,2,c
  9879  001D6E  EFBB  F00E         	goto	u4241
  9880  001D72  EFBD  F00E         	goto	u4240
  9881  001D76                     u4241:
  9882  001D76  EFCD  F00E         	goto	l1242
  9883  001D7A                     u4240:
  9884  001D7A  0E01               	movlw	1
  9885  001D7C  2635               	addwf	___fladd@b^0,f,c
  9886  001D7E  0E00               	movlw	0
  9887  001D80  2236               	addwfc	(___fladd@b+1)^0,f,c
  9888  001D82  2237               	addwfc	(___fladd@b+2)^0,f,c
  9889  001D84  2238               	addwfc	(___fladd@b+3)^0,f,c
  9890  001D86  EFCD  F00E         	goto	l1242
  9891  001D8A                     l4322:
  9892  001D8A  5039               	movf	___fladd@a^0,w,c
  9893  001D8C  5E35               	subwf	___fladd@b^0,f,c
  9894  001D8E  503A               	movf	(___fladd@a+1)^0,w,c
  9895  001D90  5A36               	subwfb	(___fladd@b+1)^0,f,c
  9896  001D92  503B               	movf	(___fladd@a+2)^0,w,c
  9897  001D94  5A37               	subwfb	(___fladd@b+2)^0,f,c
  9898  001D96  503C               	movf	(___fladd@a+3)^0,w,c
  9899  001D98  5A38               	subwfb	(___fladd@b+3)^0,f,c
  9900  001D9A                     l1242:
  9901  001D9A  5035               	movf	___fladd@b^0,w,c
  9902  001D9C  1036               	iorwf	(___fladd@b+1)^0,w,c
  9903  001D9E  1037               	iorwf	(___fladd@b+2)^0,w,c
  9904  001DA0  1038               	iorwf	(___fladd@b+3)^0,w,c
  9905  001DA2  A4D8               	btfss	status,2,c
  9906  001DA4  EFD6  F00E         	goto	u4251
  9907  001DA8  EFD8  F00E         	goto	u4250
  9908  001DAC                     u4251:
  9909  001DAC  EF0D  F00F         	goto	l4346
  9910  001DB0                     u4250:
  9911  001DB0  5044               	movf	___fladd@grs^0,w,c
  9912  001DB2  A4D8               	btfss	status,2,c
  9913  001DB4  EFDE  F00E         	goto	u4261
  9914  001DB8  EFE0  F00E         	goto	u4260
  9915  001DBC                     u4261:
  9916  001DBC  EF0D  F00F         	goto	l4346
  9917  001DC0                     u4260:
  9918  001DC0  0E00               	movlw	0
  9919  001DC2  6E35               	movwf	?___fladd^0,c
  9920  001DC4  0E00               	movlw	0
  9921  001DC6  6E36               	movwf	(?___fladd+1)^0,c
  9922  001DC8  0E00               	movlw	0
  9923  001DCA  6E37               	movwf	(?___fladd+2)^0,c
  9924  001DCC  0E00               	movlw	0
  9925  001DCE  6E38               	movwf	(?___fladd+3)^0,c
  9926  001DD0  EFA8  F00F         	goto	l1234
  9927  001DD4                     l4330:
  9928  001DD4  90D8               	bcf	status,0,c
  9929  001DD6  3635               	rlcf	___fladd@b^0,f,c
  9930  001DD8  3636               	rlcf	(___fladd@b+1)^0,f,c
  9931  001DDA  3637               	rlcf	(___fladd@b+2)^0,f,c
  9932  001DDC  3638               	rlcf	(___fladd@b+3)^0,f,c
  9933  001DDE  AE44               	btfss	___fladd@grs^0,7,c
  9934  001DE0  EFF4  F00E         	goto	u4271
  9935  001DE4  EFF6  F00E         	goto	u4270
  9936  001DE8                     u4271:
  9937  001DE8  EFF7  F00E         	goto	l4336
  9938  001DEC                     u4270:
  9939  001DEC  8035               	bsf	___fladd@b^0,0,c
  9940  001DEE                     l4336:
  9941  001DEE  A044               	btfss	___fladd@grs^0,0,c
  9942  001DF0  EFFC  F00E         	goto	u4281
  9943  001DF4  EFFE  F00E         	goto	u4280
  9944  001DF8                     u4281:
  9945  001DF8  EF02  F00F         	goto	l4340
  9946  001DFC                     u4280:
  9947  001DFC  80D8               	bsf	status,0,c
  9948  001DFE  3644               	rlcf	___fladd@grs^0,f,c
  9949  001E00  EF04  F00F         	goto	l4342
  9950  001E04                     l4340:
  9951  001E04  90D8               	bcf	status,0,c
  9952  001E06  3644               	rlcf	___fladd@grs^0,f,c
  9953  001E08                     l4342:
  9954  001E08  5043               	movf	___fladd@bexp^0,w,c
  9955  001E0A  B4D8               	btfsc	status,2,c
  9956  001E0C  EF0A  F00F         	goto	u4291
  9957  001E10  EF0C  F00F         	goto	u4290
  9958  001E14                     u4291:
  9959  001E14  EF0D  F00F         	goto	l4346
  9960  001E18                     u4290:
  9961  001E18  0643               	decf	___fladd@bexp^0,f,c
  9962  001E1A                     l4346:
  9963  001E1A  AE37               	btfss	(___fladd@b+2)^0,7,c
  9964  001E1C  EF12  F00F         	goto	u4301
  9965  001E20  EF14  F00F         	goto	u4300
  9966  001E24                     u4301:
  9967  001E24  EFEA  F00E         	goto	l4330
  9968  001E28                     u4300:
  9969  001E28                     l4348:
  9970  001E28  0E00               	movlw	0
  9971  001E2A  6E42               	movwf	___fladd@aexp^0,c
  9972  001E2C  AE44               	btfss	___fladd@grs^0,7,c
  9973  001E2E  EF1B  F00F         	goto	u4311
  9974  001E32  EF1D  F00F         	goto	u4310
  9975  001E36                     u4311:
  9976  001E36  EF35  F00F         	goto	l1251
  9977  001E3A                     u4310:
  9978  001E3A  C044  F03D         	movff	___fladd@grs,??___fladd
  9979  001E3E  0E7F               	movlw	127
  9980  001E40  163D               	andwf	??___fladd^0,f,c
  9981  001E42  B4D8               	btfsc	status,2,c
  9982  001E44  EF26  F00F         	goto	u4321
  9983  001E48  EF28  F00F         	goto	u4320
  9984  001E4C                     u4321:
  9985  001E4C  EF2C  F00F         	goto	l1252
  9986  001E50                     u4320:
  9987  001E50                     l4354:
  9988  001E50  0E01               	movlw	1
  9989  001E52  6E42               	movwf	___fladd@aexp^0,c
  9990  001E54  EF35  F00F         	goto	l1251
  9991  001E58                     l1252:
  9992  001E58  A035               	btfss	___fladd@b^0,0,c
  9993  001E5A  EF31  F00F         	goto	u4331
  9994  001E5E  EF33  F00F         	goto	u4330
  9995  001E62                     u4331:
  9996  001E62  EF35  F00F         	goto	l1251
  9997  001E66                     u4330:
  9998  001E66  EF28  F00F         	goto	l4354
  9999  001E6A                     l1251:
 10000  001E6A  5042               	movf	___fladd@aexp^0,w,c
 10001  001E6C  B4D8               	btfsc	status,2,c
 10002  001E6E  EF3B  F00F         	goto	u4341
 10003  001E72  EF3D  F00F         	goto	u4340
 10004  001E76                     u4341:
 10005  001E76  EF68  F00F         	goto	l4366
 10006  001E7A                     u4340:
 10007  001E7A  0E01               	movlw	1
 10008  001E7C  2635               	addwf	___fladd@b^0,f,c
 10009  001E7E  0E00               	movlw	0
 10010  001E80  2236               	addwfc	(___fladd@b+1)^0,f,c
 10011  001E82  2237               	addwfc	(___fladd@b+2)^0,f,c
 10012  001E84  2238               	addwfc	(___fladd@b+3)^0,f,c
 10013  001E86  A038               	btfss	(___fladd@b+3)^0,0,c
 10014  001E88  EF48  F00F         	goto	u4351
 10015  001E8C  EF4A  F00F         	goto	u4350
 10016  001E90                     u4351:
 10017  001E90  EF68  F00F         	goto	l4366
 10018  001E94                     u4350:
 10019  001E94  C035  F03D         	movff	___fladd@b,??___fladd
 10020  001E98  C036  F03E         	movff	___fladd@b+1,??___fladd+1
 10021  001E9C  C037  F03F         	movff	___fladd@b+2,??___fladd+2
 10022  001EA0  C038  F040         	movff	___fladd@b+3,??___fladd+3
 10023  001EA4  3440               	rlcf	(??___fladd+3)^0,w,c
 10024  001EA6  3240               	rrcf	(??___fladd+3)^0,f,c
 10025  001EA8  323F               	rrcf	(??___fladd+2)^0,f,c
 10026  001EAA  323E               	rrcf	(??___fladd+1)^0,f,c
 10027  001EAC  323D               	rrcf	??___fladd^0,f,c
 10028  001EAE  C03D  F035         	movff	??___fladd,___fladd@b
 10029  001EB2  C03E  F036         	movff	??___fladd+1,___fladd@b+1
 10030  001EB6  C03F  F037         	movff	??___fladd+2,___fladd@b+2
 10031  001EBA  C040  F038         	movff	??___fladd+3,___fladd@b+3
 10032  001EBE  2843               	incf	___fladd@bexp^0,w,c
 10033  001EC0  B4D8               	btfsc	status,2,c
 10034  001EC2  EF65  F00F         	goto	u4361
 10035  001EC6  EF67  F00F         	goto	u4360
 10036  001ECA                     u4361:
 10037  001ECA  EF68  F00F         	goto	l4366
 10038  001ECE                     u4360:
 10039  001ECE  2A43               	incf	___fladd@bexp^0,f,c
 10040  001ED0                     l4366:
 10041  001ED0  2843               	incf	___fladd@bexp^0,w,c
 10042  001ED2  B4D8               	btfsc	status,2,c
 10043  001ED4  EF6E  F00F         	goto	u4371
 10044  001ED8  EF70  F00F         	goto	u4370
 10045  001EDC                     u4371:
 10046  001EDC  EF78  F00F         	goto	l4370
 10047  001EE0                     u4370:
 10048  001EE0  5043               	movf	___fladd@bexp^0,w,c
 10049  001EE2  A4D8               	btfss	status,2,c
 10050  001EE4  EF76  F00F         	goto	u4381
 10051  001EE8  EF78  F00F         	goto	u4380
 10052  001EEC                     u4381:
 10053  001EEC  EF8A  F00F         	goto	l4374
 10054  001EF0                     u4380:
 10055  001EF0                     l4370:
 10056  001EF0  0E00               	movlw	0
 10057  001EF2  6E35               	movwf	___fladd@b^0,c
 10058  001EF4  0E00               	movlw	0
 10059  001EF6  6E36               	movwf	(___fladd@b+1)^0,c
 10060  001EF8  0E00               	movlw	0
 10061  001EFA  6E37               	movwf	(___fladd@b+2)^0,c
 10062  001EFC  0E00               	movlw	0
 10063  001EFE  6E38               	movwf	(___fladd@b+3)^0,c
 10064  001F00  5043               	movf	___fladd@bexp^0,w,c
 10065  001F02  A4D8               	btfss	status,2,c
 10066  001F04  EF86  F00F         	goto	u4391
 10067  001F08  EF88  F00F         	goto	u4390
 10068  001F0C                     u4391:
 10069  001F0C  EF8A  F00F         	goto	l4374
 10070  001F10                     u4390:
 10071  001F10  0E00               	movlw	0
 10072  001F12  6E41               	movwf	___fladd@signs^0,c
 10073  001F14                     l4374:
 10074  001F14  A043               	btfss	___fladd@bexp^0,0,c
 10075  001F16  EF8F  F00F         	goto	u4401
 10076  001F1A  EF91  F00F         	goto	u4400
 10077  001F1E                     u4401:
 10078  001F1E  EF94  F00F         	goto	l4378
 10079  001F22                     u4400:
 10080  001F22  8E37               	bsf	(___fladd@b+2)^0,7,c
 10081  001F24  EF95  F00F         	goto	l4380
 10082  001F28                     l4378:
 10083  001F28  9E37               	bcf	(___fladd@b+2)^0,7,c
 10084  001F2A                     l4380:
 10085  001F2A  90D8               	bcf	status,0,c
 10086  001F2C  3043               	rrcf	___fladd@bexp^0,w,c
 10087  001F2E  6E38               	movwf	(___fladd@b+3)^0,c
 10088  001F30  AE41               	btfss	___fladd@signs^0,7,c
 10089  001F32  EF9D  F00F         	goto	u4411
 10090  001F36  EF9F  F00F         	goto	u4410
 10091  001F3A                     u4411:
 10092  001F3A  EFA0  F00F         	goto	l4386
 10093  001F3E                     u4410:
 10094  001F3E  8E38               	bsf	(___fladd@b+3)^0,7,c
 10095  001F40                     l4386:
 10096  001F40  C035  F035         	movff	___fladd@b,?___fladd
 10097  001F44  C036  F036         	movff	___fladd@b+1,?___fladd+1
 10098  001F48  C037  F037         	movff	___fladd@b+2,?___fladd+2
 10099  001F4C  C038  F038         	movff	___fladd@b+3,?___fladd+3
 10100  001F50                     l1234:
 10101  001F50  0012               	return		;funcret
 10102  001F52                     __end_of___fladd:
 10103                           	callstack 0
 10104                           
 10105 ;; *************** function ___flneg *****************
 10106 ;; Defined at:
 10107 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
 10108 ;; Parameters:    Size  Location     Type
 10109 ;;  f1              4    0[COMRAM] unsigned char 
 10110 ;; Auto vars:     Size  Location     Type
 10111 ;;		None
 10112 ;; Return value:  Size  Location     Type
 10113 ;;                  4    0[COMRAM] unsigned char 
 10114 ;; Registers used:
 10115 ;;		wreg, status,2, status,0
 10116 ;; Tracked objects:
 10117 ;;		On entry : 0/0
 10118 ;;		On exit  : 0/0
 10119 ;;		Unchanged: 0/0
 10120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10121 ;;      Params:         4       0       0       0       0       0       0
 10122 ;;      Locals:         0       0       0       0       0       0       0
 10123 ;;      Temps:          0       0       0       0       0       0       0
 10124 ;;      Totals:         4       0       0       0       0       0       0
 10125 ;;Total ram usage:        4 bytes
 10126 ;; Hardware stack levels used:    1
 10127 ;; Hardware stack levels required when called:    1
 10128 ;; This function calls:
 10129 ;;		Nothing
 10130 ;; This function is called by:
 10131 ;;		_efgtoa
 10132 ;; This function uses a non-reentrant model
 10133 ;;
 10134                           
 10135                           	psect	text33
 10136  00554E                     __ptext33:
 10137                           	callstack 0
 10138  00554E                     ___flneg:
 10139                           	callstack 22
 10140  00554E  5001               	movf	___flneg@f1^0,w,c
 10141  005550  1002               	iorwf	(___flneg@f1+1)^0,w,c
 10142  005552  1003               	iorwf	(___flneg@f1+2)^0,w,c
 10143  005554  1004               	iorwf	(___flneg@f1+3)^0,w,c
 10144  005556  B4D8               	btfsc	status,2,c
 10145  005558  EFB0  F02A         	goto	u5211
 10146  00555C  EFB2  F02A         	goto	u5210
 10147  005560                     u5211:
 10148  005560  EFBA  F02A         	goto	l4894
 10149  005564                     u5210:
 10150  005564  0E00               	movlw	0
 10151  005566  1A01               	xorwf	___flneg@f1^0,f,c
 10152  005568  0E00               	movlw	0
 10153  00556A  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 10154  00556C  0E00               	movlw	0
 10155  00556E  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 10156  005570  0E80               	movlw	128
 10157  005572  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 10158  005574                     l4894:
 10159  005574  C001  F001         	movff	___flneg@f1,?___flneg
 10160  005578  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 10161  00557C  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 10162  005580  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 10163  005584  0012               	return		;funcret
 10164  005586                     __end_of___flneg:
 10165                           	callstack 0
 10166                           
 10167 ;; *************** function ___flmul *****************
 10168 ;; Defined at:
 10169 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
 10170 ;; Parameters:    Size  Location     Type
 10171 ;;  b               4   27[COMRAM] unsigned char 
 10172 ;;  a               4   31[COMRAM] unsigned char 
 10173 ;; Auto vars:     Size  Location     Type
 10174 ;;  prod            4   46[COMRAM] struct .
 10175 ;;  grs             4   40[COMRAM] unsigned long 
 10176 ;;  temp            2   50[COMRAM] struct .
 10177 ;;  bexp            1   45[COMRAM] unsigned char 
 10178 ;;  aexp            1   44[COMRAM] unsigned char 
 10179 ;;  sign            1   39[COMRAM] unsigned char 
 10180 ;; Return value:  Size  Location     Type
 10181 ;;                  4   27[COMRAM] unsigned char 
 10182 ;; Registers used:
 10183 ;;		wreg, status,2, status,0, prodl, prodh
 10184 ;; Tracked objects:
 10185 ;;		On entry : 0/0
 10186 ;;		On exit  : 0/0
 10187 ;;		Unchanged: 0/0
 10188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10189 ;;      Params:         8       0       0       0       0       0       0
 10190 ;;      Locals:        13       0       0       0       0       0       0
 10191 ;;      Temps:          4       0       0       0       0       0       0
 10192 ;;      Totals:        25       0       0       0       0       0       0
 10193 ;;Total ram usage:       25 bytes
 10194 ;; Hardware stack levels used:    1
 10195 ;; Hardware stack levels required when called:    1
 10196 ;; This function calls:
 10197 ;;		Nothing
 10198 ;; This function is called by:
 10199 ;;		_scanAdcConversion
 10200 ;;		_speedControl
 10201 ;;		_efgtoa
 10202 ;; This function uses a non-reentrant model
 10203 ;;
 10204                           
 10205                           	psect	text34
 10206  001F52                     __ptext34:
 10207                           	callstack 0
 10208  001F52                     ___flmul:
 10209                           	callstack 22
 10210  001F52  501F               	movf	(___flmul@b+3)^0,w,c
 10211  001F54  0B80               	andlw	128
 10212  001F56  6E28               	movwf	___flmul@sign^0,c
 10213  001F58  501F               	movf	(___flmul@b+3)^0,w,c
 10214  001F5A  241F               	addwf	(___flmul@b+3)^0,w,c
 10215  001F5C  6E2E               	movwf	___flmul@bexp^0,c
 10216  001F5E  AE1E               	btfss	(___flmul@b+2)^0,7,c
 10217  001F60  EFB4  F00F         	goto	u4821
 10218  001F64  EFB6  F00F         	goto	u4820
 10219  001F68                     u4821:
 10220  001F68  EFB7  F00F         	goto	l4642
 10221  001F6C                     u4820:
 10222  001F6C  802E               	bsf	___flmul@bexp^0,0,c
 10223  001F6E                     l4642:
 10224  001F6E  502E               	movf	___flmul@bexp^0,w,c
 10225  001F70  B4D8               	btfsc	status,2,c
 10226  001F72  EFBD  F00F         	goto	u4831
 10227  001F76  EFBF  F00F         	goto	u4830
 10228  001F7A                     u4831:
 10229  001F7A  EFD2  F00F         	goto	l4650
 10230  001F7E                     u4830:
 10231  001F7E  282E               	incf	___flmul@bexp^0,w,c
 10232  001F80  A4D8               	btfss	status,2,c
 10233  001F82  EFC5  F00F         	goto	u4841
 10234  001F86  EFC7  F00F         	goto	u4840
 10235  001F8A                     u4841:
 10236  001F8A  EFCF  F00F         	goto	l4648
 10237  001F8E                     u4840:
 10238  001F8E  0E00               	movlw	0
 10239  001F90  6E1C               	movwf	___flmul@b^0,c
 10240  001F92  0E00               	movlw	0
 10241  001F94  6E1D               	movwf	(___flmul@b+1)^0,c
 10242  001F96  0E00               	movlw	0
 10243  001F98  6E1E               	movwf	(___flmul@b+2)^0,c
 10244  001F9A  0E00               	movlw	0
 10245  001F9C  6E1F               	movwf	(___flmul@b+3)^0,c
 10246  001F9E                     l4648:
 10247  001F9E  8E1E               	bsf	(___flmul@b+2)^0,7,c
 10248  001FA0  EFDA  F00F         	goto	l4652
 10249  001FA4                     l4650:
 10250  001FA4  0E00               	movlw	0
 10251  001FA6  6E1C               	movwf	___flmul@b^0,c
 10252  001FA8  0E00               	movlw	0
 10253  001FAA  6E1D               	movwf	(___flmul@b+1)^0,c
 10254  001FAC  0E00               	movlw	0
 10255  001FAE  6E1E               	movwf	(___flmul@b+2)^0,c
 10256  001FB0  0E00               	movlw	0
 10257  001FB2  6E1F               	movwf	(___flmul@b+3)^0,c
 10258  001FB4                     l4652:
 10259  001FB4  5023               	movf	(___flmul@a+3)^0,w,c
 10260  001FB6  0B80               	andlw	128
 10261  001FB8  1A28               	xorwf	___flmul@sign^0,f,c
 10262  001FBA  5023               	movf	(___flmul@a+3)^0,w,c
 10263  001FBC  2423               	addwf	(___flmul@a+3)^0,w,c
 10264  001FBE  6E2D               	movwf	___flmul@aexp^0,c
 10265  001FC0  AE22               	btfss	(___flmul@a+2)^0,7,c
 10266  001FC2  EFE5  F00F         	goto	u4851
 10267  001FC6  EFE7  F00F         	goto	u4850
 10268  001FCA                     u4851:
 10269  001FCA  EFE8  F00F         	goto	l4660
 10270  001FCE                     u4850:
 10271  001FCE  802D               	bsf	___flmul@aexp^0,0,c
 10272  001FD0                     l4660:
 10273  001FD0  502D               	movf	___flmul@aexp^0,w,c
 10274  001FD2  B4D8               	btfsc	status,2,c
 10275  001FD4  EFEE  F00F         	goto	u4861
 10276  001FD8  EFF0  F00F         	goto	u4860
 10277  001FDC                     u4861:
 10278  001FDC  EF03  F010         	goto	l4668
 10279  001FE0                     u4860:
 10280  001FE0  282D               	incf	___flmul@aexp^0,w,c
 10281  001FE2  A4D8               	btfss	status,2,c
 10282  001FE4  EFF6  F00F         	goto	u4871
 10283  001FE8  EFF8  F00F         	goto	u4870
 10284  001FEC                     u4871:
 10285  001FEC  EF00  F010         	goto	l4666
 10286  001FF0                     u4870:
 10287  001FF0  0E00               	movlw	0
 10288  001FF2  6E20               	movwf	___flmul@a^0,c
 10289  001FF4  0E00               	movlw	0
 10290  001FF6  6E21               	movwf	(___flmul@a+1)^0,c
 10291  001FF8  0E00               	movlw	0
 10292  001FFA  6E22               	movwf	(___flmul@a+2)^0,c
 10293  001FFC  0E00               	movlw	0
 10294  001FFE  6E23               	movwf	(___flmul@a+3)^0,c
 10295  002000                     l4666:
 10296  002000  8E22               	bsf	(___flmul@a+2)^0,7,c
 10297  002002  EF0B  F010         	goto	l1311
 10298  002006                     l4668:
 10299  002006  0E00               	movlw	0
 10300  002008  6E20               	movwf	___flmul@a^0,c
 10301  00200A  0E00               	movlw	0
 10302  00200C  6E21               	movwf	(___flmul@a+1)^0,c
 10303  00200E  0E00               	movlw	0
 10304  002010  6E22               	movwf	(___flmul@a+2)^0,c
 10305  002012  0E00               	movlw	0
 10306  002014  6E23               	movwf	(___flmul@a+3)^0,c
 10307  002016                     l1311:
 10308  002016  502D               	movf	___flmul@aexp^0,w,c
 10309  002018  B4D8               	btfsc	status,2,c
 10310  00201A  EF11  F010         	goto	u4881
 10311  00201E  EF13  F010         	goto	u4880
 10312  002022                     u4881:
 10313  002022  EF1B  F010         	goto	l4672
 10314  002026                     u4880:
 10315  002026  502E               	movf	___flmul@bexp^0,w,c
 10316  002028  A4D8               	btfss	status,2,c
 10317  00202A  EF19  F010         	goto	u4891
 10318  00202E  EF1B  F010         	goto	u4890
 10319  002032                     u4891:
 10320  002032  EF25  F010         	goto	l4676
 10321  002036                     u4890:
 10322  002036                     l4672:
 10323  002036  0E00               	movlw	0
 10324  002038  6E1C               	movwf	?___flmul^0,c
 10325  00203A  0E00               	movlw	0
 10326  00203C  6E1D               	movwf	(?___flmul+1)^0,c
 10327  00203E  0E00               	movlw	0
 10328  002040  6E1E               	movwf	(?___flmul+2)^0,c
 10329  002042  0E00               	movlw	0
 10330  002044  6E1F               	movwf	(?___flmul+3)^0,c
 10331  002046  EFBD  F011         	goto	l1315
 10332  00204A                     l4676:
 10333  00204A  5022               	movf	(___flmul@a+2)^0,w,c
 10334  00204C  021C               	mulwf	___flmul@b^0,c
 10335  00204E  CFF3 F033          	movff	prodl,___flmul@temp
 10336  002052  CFF4 F034          	movff	prodh,___flmul@temp+1
 10337  002056  5033               	movf	___flmul@temp^0,w,c
 10338  002058  6E29               	movwf	___flmul@grs^0,c
 10339  00205A  6A2A               	clrf	(___flmul@grs+1)^0,c
 10340  00205C  6A2B               	clrf	(___flmul@grs+2)^0,c
 10341  00205E  6A2C               	clrf	(___flmul@grs+3)^0,c
 10342  002060  5034               	movf	(___flmul@temp+1)^0,w,c
 10343  002062  6E2F               	movwf	___flmul@prod^0,c
 10344  002064  6A30               	clrf	(___flmul@prod+1)^0,c
 10345  002066  6A31               	clrf	(___flmul@prod+2)^0,c
 10346  002068  6A32               	clrf	(___flmul@prod+3)^0,c
 10347  00206A  5021               	movf	(___flmul@a+1)^0,w,c
 10348  00206C  021D               	mulwf	(___flmul@b+1)^0,c
 10349  00206E  CFF3 F033          	movff	prodl,___flmul@temp
 10350  002072  CFF4 F034          	movff	prodh,___flmul@temp+1
 10351  002076  5033               	movf	___flmul@temp^0,w,c
 10352  002078  2629               	addwf	___flmul@grs^0,f,c
 10353  00207A  0E00               	movlw	0
 10354  00207C  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10355  00207E  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10356  002080  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10357  002082  5034               	movf	(___flmul@temp+1)^0,w,c
 10358  002084  262F               	addwf	___flmul@prod^0,f,c
 10359  002086  0E00               	movlw	0
 10360  002088  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10361  00208A  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10362  00208C  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10363  00208E  5020               	movf	___flmul@a^0,w,c
 10364  002090  021E               	mulwf	(___flmul@b+2)^0,c
 10365  002092  CFF3 F033          	movff	prodl,___flmul@temp
 10366  002096  CFF4 F034          	movff	prodh,___flmul@temp+1
 10367  00209A  5033               	movf	___flmul@temp^0,w,c
 10368  00209C  2629               	addwf	___flmul@grs^0,f,c
 10369  00209E  0E00               	movlw	0
 10370  0020A0  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10371  0020A2  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10372  0020A4  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10373  0020A6  5034               	movf	(___flmul@temp+1)^0,w,c
 10374  0020A8  262F               	addwf	___flmul@prod^0,f,c
 10375  0020AA  0E00               	movlw	0
 10376  0020AC  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10377  0020AE  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10378  0020B0  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10379  0020B2  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 10380  0020B6  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 10381  0020BA  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 10382  0020BE  6A29               	clrf	___flmul@grs^0,c
 10383  0020C0  5020               	movf	___flmul@a^0,w,c
 10384  0020C2  021D               	mulwf	(___flmul@b+1)^0,c
 10385  0020C4  CFF3 F033          	movff	prodl,___flmul@temp
 10386  0020C8  CFF4 F034          	movff	prodh,___flmul@temp+1
 10387  0020CC  5033               	movf	___flmul@temp^0,w,c
 10388  0020CE  2629               	addwf	___flmul@grs^0,f,c
 10389  0020D0  5034               	movf	(___flmul@temp+1)^0,w,c
 10390  0020D2  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10391  0020D4  0E00               	movlw	0
 10392  0020D6  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10393  0020D8  0E00               	movlw	0
 10394  0020DA  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10395  0020DC  5021               	movf	(___flmul@a+1)^0,w,c
 10396  0020DE  021C               	mulwf	___flmul@b^0,c
 10397  0020E0  CFF3 F033          	movff	prodl,___flmul@temp
 10398  0020E4  CFF4 F034          	movff	prodh,___flmul@temp+1
 10399  0020E8  5033               	movf	___flmul@temp^0,w,c
 10400  0020EA  2629               	addwf	___flmul@grs^0,f,c
 10401  0020EC  5034               	movf	(___flmul@temp+1)^0,w,c
 10402  0020EE  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10403  0020F0  0E00               	movlw	0
 10404  0020F2  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10405  0020F4  0E00               	movlw	0
 10406  0020F6  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10407  0020F8  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 10408  0020FC  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 10409  002100  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 10410  002104  6A29               	clrf	___flmul@grs^0,c
 10411  002106  5020               	movf	___flmul@a^0,w,c
 10412  002108  021C               	mulwf	___flmul@b^0,c
 10413  00210A  CFF3 F033          	movff	prodl,___flmul@temp
 10414  00210E  CFF4 F034          	movff	prodh,___flmul@temp+1
 10415  002112  5033               	movf	___flmul@temp^0,w,c
 10416  002114  2629               	addwf	___flmul@grs^0,f,c
 10417  002116  5034               	movf	(___flmul@temp+1)^0,w,c
 10418  002118  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10419  00211A  0E00               	movlw	0
 10420  00211C  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10421  00211E  0E00               	movlw	0
 10422  002120  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10423  002122  5022               	movf	(___flmul@a+2)^0,w,c
 10424  002124  021D               	mulwf	(___flmul@b+1)^0,c
 10425  002126  CFF3 F033          	movff	prodl,___flmul@temp
 10426  00212A  CFF4 F034          	movff	prodh,___flmul@temp+1
 10427  00212E  5033               	movf	___flmul@temp^0,w,c
 10428  002130  262F               	addwf	___flmul@prod^0,f,c
 10429  002132  5034               	movf	(___flmul@temp+1)^0,w,c
 10430  002134  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10431  002136  0E00               	movlw	0
 10432  002138  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10433  00213A  0E00               	movlw	0
 10434  00213C  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10435  00213E  5021               	movf	(___flmul@a+1)^0,w,c
 10436  002140  021E               	mulwf	(___flmul@b+2)^0,c
 10437  002142  CFF3 F033          	movff	prodl,___flmul@temp
 10438  002146  CFF4 F034          	movff	prodh,___flmul@temp+1
 10439  00214A  5033               	movf	___flmul@temp^0,w,c
 10440  00214C  262F               	addwf	___flmul@prod^0,f,c
 10441  00214E  5034               	movf	(___flmul@temp+1)^0,w,c
 10442  002150  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10443  002152  0E00               	movlw	0
 10444  002154  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10445  002156  0E00               	movlw	0
 10446  002158  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10447  00215A  5022               	movf	(___flmul@a+2)^0,w,c
 10448  00215C  021E               	mulwf	(___flmul@b+2)^0,c
 10449  00215E  CFF3 F033          	movff	prodl,___flmul@temp
 10450  002162  CFF4 F034          	movff	prodh,___flmul@temp+1
 10451  002166  5033               	movf	___flmul@temp^0,w,c
 10452  002168  6E24               	movwf	??___flmul^0,c
 10453  00216A  5034               	movf	(___flmul@temp+1)^0,w,c
 10454  00216C  6E25               	movwf	(??___flmul+1)^0,c
 10455  00216E  6A26               	clrf	(??___flmul+2)^0,c
 10456  002170  6A27               	clrf	(??___flmul+3)^0,c
 10457  002172  C026  F027         	movff	??___flmul+2,??___flmul+3
 10458  002176  C025  F026         	movff	??___flmul+1,??___flmul+2
 10459  00217A  C024  F025         	movff	??___flmul,??___flmul+1
 10460  00217E  6A24               	clrf	??___flmul^0,c
 10461  002180  5024               	movf	??___flmul^0,w,c
 10462  002182  262F               	addwf	___flmul@prod^0,f,c
 10463  002184  5025               	movf	(??___flmul+1)^0,w,c
 10464  002186  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10465  002188  5026               	movf	(??___flmul+2)^0,w,c
 10466  00218A  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10467  00218C  5027               	movf	(??___flmul+3)^0,w,c
 10468  00218E  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10469  002190  C029  F024         	movff	___flmul@grs,??___flmul
 10470  002194  C02A  F025         	movff	___flmul@grs+1,??___flmul+1
 10471  002198  C02B  F026         	movff	___flmul@grs+2,??___flmul+2
 10472  00219C  C02C  F027         	movff	___flmul@grs+3,??___flmul+3
 10473  0021A0  0E19               	movlw	25
 10474  0021A2  EFD8  F010         	goto	u4900
 10475  0021A6                     u4905:
 10476  0021A6  90D8               	bcf	status,0,c
 10477  0021A8  3227               	rrcf	(??___flmul+3)^0,f,c
 10478  0021AA  3226               	rrcf	(??___flmul+2)^0,f,c
 10479  0021AC  3225               	rrcf	(??___flmul+1)^0,f,c
 10480  0021AE  3224               	rrcf	??___flmul^0,f,c
 10481  0021B0                     u4900:
 10482  0021B0  2EE8               	decfsz	wreg,f,c
 10483  0021B2  EFD3  F010         	goto	u4905
 10484  0021B6  5024               	movf	??___flmul^0,w,c
 10485  0021B8  262F               	addwf	___flmul@prod^0,f,c
 10486  0021BA  5025               	movf	(??___flmul+1)^0,w,c
 10487  0021BC  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10488  0021BE  5026               	movf	(??___flmul+2)^0,w,c
 10489  0021C0  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10490  0021C2  5027               	movf	(??___flmul+3)^0,w,c
 10491  0021C4  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10492  0021C6  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 10493  0021CA  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 10494  0021CE  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 10495  0021D2  6A29               	clrf	___flmul@grs^0,c
 10496  0021D4  502D               	movf	___flmul@aexp^0,w,c
 10497  0021D6  C02E  F024         	movff	___flmul@bexp,??___flmul
 10498  0021DA  6A25               	clrf	(??___flmul+1)^0,c
 10499  0021DC  2624               	addwf	??___flmul^0,f,c
 10500  0021DE  0E00               	movlw	0
 10501  0021E0  2225               	addwfc	(??___flmul+1)^0,f,c
 10502  0021E2  0E82               	movlw	130
 10503  0021E4  2424               	addwf	??___flmul^0,w,c
 10504  0021E6  6E33               	movwf	___flmul@temp^0,c
 10505  0021E8  0EFF               	movlw	255
 10506  0021EA  2025               	addwfc	(??___flmul+1)^0,w,c
 10507  0021EC  6E34               	movwf	(___flmul@temp+1)^0,c
 10508  0021EE  EF0E  F011         	goto	l4724
 10509  0021F2                     l4718:
 10510  0021F2  90D8               	bcf	status,0,c
 10511  0021F4  362F               	rlcf	___flmul@prod^0,f,c
 10512  0021F6  3630               	rlcf	(___flmul@prod+1)^0,f,c
 10513  0021F8  3631               	rlcf	(___flmul@prod+2)^0,f,c
 10514  0021FA  3632               	rlcf	(___flmul@prod+3)^0,f,c
 10515  0021FC  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 10516  0021FE  EF03  F011         	goto	u4911
 10517  002202  EF05  F011         	goto	u4910
 10518  002206                     u4911:
 10519  002206  EF06  F011         	goto	l1318
 10520  00220A                     u4910:
 10521  00220A  802F               	bsf	___flmul@prod^0,0,c
 10522  00220C                     l1318:
 10523  00220C  90D8               	bcf	status,0,c
 10524  00220E  3629               	rlcf	___flmul@grs^0,f,c
 10525  002210  362A               	rlcf	(___flmul@grs+1)^0,f,c
 10526  002212  362B               	rlcf	(___flmul@grs+2)^0,f,c
 10527  002214  362C               	rlcf	(___flmul@grs+3)^0,f,c
 10528  002216  0633               	decf	___flmul@temp^0,f,c
 10529  002218  A0D8               	btfss	status,0,c
 10530  00221A  0634               	decf	(___flmul@temp+1)^0,f,c
 10531  00221C                     l4724:
 10532  00221C  AE31               	btfss	(___flmul@prod+2)^0,7,c
 10533  00221E  EF13  F011         	goto	u4921
 10534  002222  EF15  F011         	goto	u4920
 10535  002226                     u4921:
 10536  002226  EFF9  F010         	goto	l4718
 10537  00222A                     u4920:
 10538  00222A  0E00               	movlw	0
 10539  00222C  6E2D               	movwf	___flmul@aexp^0,c
 10540  00222E  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 10541  002230  EF1C  F011         	goto	u4931
 10542  002234  EF1E  F011         	goto	u4930
 10543  002238                     u4931:
 10544  002238  EF42  F011         	goto	l1320
 10545  00223C                     u4930:
 10546  00223C  0EFF               	movlw	255
 10547  00223E  1429               	andwf	___flmul@grs^0,w,c
 10548  002240  6E24               	movwf	??___flmul^0,c
 10549  002242  0EFF               	movlw	255
 10550  002244  142A               	andwf	(___flmul@grs+1)^0,w,c
 10551  002246  6E25               	movwf	(??___flmul+1)^0,c
 10552  002248  0EFF               	movlw	255
 10553  00224A  142B               	andwf	(___flmul@grs+2)^0,w,c
 10554  00224C  6E26               	movwf	(??___flmul+2)^0,c
 10555  00224E  0E7F               	movlw	127
 10556  002250  142C               	andwf	(___flmul@grs+3)^0,w,c
 10557  002252  6E27               	movwf	(??___flmul+3)^0,c
 10558  002254  5024               	movf	??___flmul^0,w,c
 10559  002256  1025               	iorwf	(??___flmul+1)^0,w,c
 10560  002258  1026               	iorwf	(??___flmul+2)^0,w,c
 10561  00225A  1027               	iorwf	(??___flmul+3)^0,w,c
 10562  00225C  B4D8               	btfsc	status,2,c
 10563  00225E  EF33  F011         	goto	u4941
 10564  002262  EF35  F011         	goto	u4940
 10565  002266                     u4941:
 10566  002266  EF39  F011         	goto	l1321
 10567  00226A                     u4940:
 10568  00226A                     l4732:
 10569  00226A  0E01               	movlw	1
 10570  00226C  6E2D               	movwf	___flmul@aexp^0,c
 10571  00226E  EF42  F011         	goto	l1320
 10572  002272                     l1321:
 10573  002272  A02F               	btfss	___flmul@prod^0,0,c
 10574  002274  EF3E  F011         	goto	u4951
 10575  002278  EF40  F011         	goto	u4950
 10576  00227C                     u4951:
 10577  00227C  EF42  F011         	goto	l1320
 10578  002280                     u4950:
 10579  002280  EF35  F011         	goto	l4732
 10580  002284                     l1320:
 10581  002284  502D               	movf	___flmul@aexp^0,w,c
 10582  002286  B4D8               	btfsc	status,2,c
 10583  002288  EF48  F011         	goto	u4961
 10584  00228C  EF4A  F011         	goto	u4960
 10585  002290                     u4961:
 10586  002290  EF6E  F011         	goto	l4744
 10587  002294                     u4960:
 10588  002294  0E01               	movlw	1
 10589  002296  262F               	addwf	___flmul@prod^0,f,c
 10590  002298  0E00               	movlw	0
 10591  00229A  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10592  00229C  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10593  00229E  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10594  0022A0  A032               	btfss	(___flmul@prod+3)^0,0,c
 10595  0022A2  EF55  F011         	goto	u4971
 10596  0022A6  EF57  F011         	goto	u4970
 10597  0022AA                     u4971:
 10598  0022AA  EF6E  F011         	goto	l4744
 10599  0022AE                     u4970:
 10600  0022AE  C02F  F024         	movff	___flmul@prod,??___flmul
 10601  0022B2  C030  F025         	movff	___flmul@prod+1,??___flmul+1
 10602  0022B6  C031  F026         	movff	___flmul@prod+2,??___flmul+2
 10603  0022BA  C032  F027         	movff	___flmul@prod+3,??___flmul+3
 10604  0022BE  3427               	rlcf	(??___flmul+3)^0,w,c
 10605  0022C0  3227               	rrcf	(??___flmul+3)^0,f,c
 10606  0022C2  3226               	rrcf	(??___flmul+2)^0,f,c
 10607  0022C4  3225               	rrcf	(??___flmul+1)^0,f,c
 10608  0022C6  3224               	rrcf	??___flmul^0,f,c
 10609  0022C8  C024  F02F         	movff	??___flmul,___flmul@prod
 10610  0022CC  C025  F030         	movff	??___flmul+1,___flmul@prod+1
 10611  0022D0  C026  F031         	movff	??___flmul+2,___flmul@prod+2
 10612  0022D4  C027  F032         	movff	??___flmul+3,___flmul@prod+3
 10613  0022D8  4A33               	infsnz	___flmul@temp^0,f,c
 10614  0022DA  2A34               	incf	(___flmul@temp+1)^0,f,c
 10615  0022DC                     l4744:
 10616  0022DC  BE34               	btfsc	(___flmul@temp+1)^0,7,c
 10617  0022DE  EF79  F011         	goto	u4981
 10618  0022E2  5034               	movf	(___flmul@temp+1)^0,w,c
 10619  0022E4  E108               	bnz	u4980
 10620  0022E6  2833               	incf	___flmul@temp^0,w,c
 10621  0022E8  A0D8               	btfss	status,0,c
 10622  0022EA  EF79  F011         	goto	u4981
 10623  0022EE  EF7B  F011         	goto	u4980
 10624  0022F2                     u4981:
 10625  0022F2  EF85  F011         	goto	l4748
 10626  0022F6                     u4980:
 10627  0022F6  0E00               	movlw	0
 10628  0022F8  6E2F               	movwf	___flmul@prod^0,c
 10629  0022FA  0E00               	movlw	0
 10630  0022FC  6E30               	movwf	(___flmul@prod+1)^0,c
 10631  0022FE  0E80               	movlw	128
 10632  002300  6E31               	movwf	(___flmul@prod+2)^0,c
 10633  002302  0E7F               	movlw	127
 10634  002304  6E32               	movwf	(___flmul@prod+3)^0,c
 10635  002306  EFB3  F011         	goto	l4760
 10636  00230A                     l4748:
 10637  00230A  BE34               	btfsc	(___flmul@temp+1)^0,7,c
 10638  00230C  EF92  F011         	goto	u4990
 10639  002310  5034               	movf	(___flmul@temp+1)^0,w,c
 10640  002312  E106               	bnz	u4991
 10641  002314  0433               	decf	___flmul@temp^0,w,c
 10642  002316  B0D8               	btfsc	status,0,c
 10643  002318  EF90  F011         	goto	u4991
 10644  00231C  EF92  F011         	goto	u4990
 10645  002320                     u4991:
 10646  002320  EF9E  F011         	goto	l1328
 10647  002324                     u4990:
 10648  002324  0E00               	movlw	0
 10649  002326  6E2F               	movwf	___flmul@prod^0,c
 10650  002328  0E00               	movlw	0
 10651  00232A  6E30               	movwf	(___flmul@prod+1)^0,c
 10652  00232C  0E00               	movlw	0
 10653  00232E  6E31               	movwf	(___flmul@prod+2)^0,c
 10654  002330  0E00               	movlw	0
 10655  002332  6E32               	movwf	(___flmul@prod+3)^0,c
 10656  002334  0E00               	movlw	0
 10657  002336  6E28               	movwf	___flmul@sign^0,c
 10658  002338  EFB3  F011         	goto	l4760
 10659  00233C                     l1328:
 10660  00233C  C033  F02E         	movff	___flmul@temp,___flmul@bexp
 10661  002340  0EFF               	movlw	255
 10662  002342  162F               	andwf	___flmul@prod^0,f,c
 10663  002344  0EFF               	movlw	255
 10664  002346  1630               	andwf	(___flmul@prod+1)^0,f,c
 10665  002348  0E7F               	movlw	127
 10666  00234A  1631               	andwf	(___flmul@prod+2)^0,f,c
 10667  00234C  0E00               	movlw	0
 10668  00234E  1632               	andwf	(___flmul@prod+3)^0,f,c
 10669  002350  A02E               	btfss	___flmul@bexp^0,0,c
 10670  002352  EFAD  F011         	goto	u5001
 10671  002356  EFAF  F011         	goto	u5000
 10672  00235A                     u5001:
 10673  00235A  EFB0  F011         	goto	l4758
 10674  00235E                     u5000:
 10675  00235E  8E31               	bsf	(___flmul@prod+2)^0,7,c
 10676  002360                     l4758:
 10677  002360  90D8               	bcf	status,0,c
 10678  002362  302E               	rrcf	___flmul@bexp^0,w,c
 10679  002364  6E32               	movwf	(___flmul@prod+3)^0,c
 10680  002366                     l4760:
 10681  002366  5028               	movf	___flmul@sign^0,w,c
 10682  002368  1232               	iorwf	(___flmul@prod+3)^0,f,c
 10683  00236A  C02F  F01C         	movff	___flmul@prod,?___flmul
 10684  00236E  C030  F01D         	movff	___flmul@prod+1,?___flmul+1
 10685  002372  C031  F01E         	movff	___flmul@prod+2,?___flmul+2
 10686  002376  C032  F01F         	movff	___flmul@prod+3,?___flmul+3
 10687  00237A                     l1315:
 10688  00237A  0012               	return		;funcret
 10689  00237C                     __end_of___flmul:
 10690                           	callstack 0
 10691                           
 10692 ;; *************** function ___flge *****************
 10693 ;; Defined at:
 10694 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
 10695 ;; Parameters:    Size  Location     Type
 10696 ;;  ff1             4   52[COMRAM] unsigned char 
 10697 ;;  ff2             4   56[COMRAM] unsigned char 
 10698 ;; Auto vars:     Size  Location     Type
 10699 ;;		None
 10700 ;; Return value:  Size  Location     Type
 10701 ;;		None               void
 10702 ;; Registers used:
 10703 ;;		wreg, status,2, status,0
 10704 ;; Tracked objects:
 10705 ;;		On entry : 0/0
 10706 ;;		On exit  : 0/0
 10707 ;;		Unchanged: 0/0
 10708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10709 ;;      Params:         8       0       0       0       0       0       0
 10710 ;;      Locals:         0       0       0       0       0       0       0
 10711 ;;      Temps:          4       0       0       0       0       0       0
 10712 ;;      Totals:        12       0       0       0       0       0       0
 10713 ;;Total ram usage:       12 bytes
 10714 ;; Hardware stack levels used:    1
 10715 ;; Hardware stack levels required when called:    1
 10716 ;; This function calls:
 10717 ;;		Nothing
 10718 ;; This function is called by:
 10719 ;;		_secretMenu
 10720 ;;		_efgtoa
 10721 ;; This function uses a non-reentrant model
 10722 ;;
 10723                           
 10724                           	psect	text35
 10725  0043C4                     __ptext35:
 10726                           	callstack 0
 10727  0043C4                     ___flge:
 10728                           	callstack 22
 10729  0043C4  0E00               	movlw	0
 10730  0043C6  1435               	andwf	___flge@ff1^0,w,c
 10731  0043C8  6E3D               	movwf	??___flge^0,c
 10732  0043CA  0E00               	movlw	0
 10733  0043CC  1436               	andwf	(___flge@ff1+1)^0,w,c
 10734  0043CE  6E3E               	movwf	(??___flge+1)^0,c
 10735  0043D0  0E80               	movlw	128
 10736  0043D2  1437               	andwf	(___flge@ff1+2)^0,w,c
 10737  0043D4  6E3F               	movwf	(??___flge+2)^0,c
 10738  0043D6  0E7F               	movlw	127
 10739  0043D8  1438               	andwf	(___flge@ff1+3)^0,w,c
 10740  0043DA  6E40               	movwf	(??___flge+3)^0,c
 10741  0043DC  503D               	movf	??___flge^0,w,c
 10742  0043DE  103E               	iorwf	(??___flge+1)^0,w,c
 10743  0043E0  103F               	iorwf	(??___flge+2)^0,w,c
 10744  0043E2  1040               	iorwf	(??___flge+3)^0,w,c
 10745  0043E4  A4D8               	btfss	status,2,c
 10746  0043E6  EFF7  F021         	goto	u5161
 10747  0043EA  EFF9  F021         	goto	u5160
 10748  0043EE                     u5161:
 10749  0043EE  EF01  F022         	goto	l4872
 10750  0043F2                     u5160:
 10751  0043F2  0E00               	movlw	0
 10752  0043F4  6E35               	movwf	___flge@ff1^0,c
 10753  0043F6  0E00               	movlw	0
 10754  0043F8  6E36               	movwf	(___flge@ff1+1)^0,c
 10755  0043FA  0E00               	movlw	0
 10756  0043FC  6E37               	movwf	(___flge@ff1+2)^0,c
 10757  0043FE  0E00               	movlw	0
 10758  004400  6E38               	movwf	(___flge@ff1+3)^0,c
 10759  004402                     l4872:
 10760  004402  0E00               	movlw	0
 10761  004404  1439               	andwf	___flge@ff2^0,w,c
 10762  004406  6E3D               	movwf	??___flge^0,c
 10763  004408  0E00               	movlw	0
 10764  00440A  143A               	andwf	(___flge@ff2+1)^0,w,c
 10765  00440C  6E3E               	movwf	(??___flge+1)^0,c
 10766  00440E  0E80               	movlw	128
 10767  004410  143B               	andwf	(___flge@ff2+2)^0,w,c
 10768  004412  6E3F               	movwf	(??___flge+2)^0,c
 10769  004414  0E7F               	movlw	127
 10770  004416  143C               	andwf	(___flge@ff2+3)^0,w,c
 10771  004418  6E40               	movwf	(??___flge+3)^0,c
 10772  00441A  503D               	movf	??___flge^0,w,c
 10773  00441C  103E               	iorwf	(??___flge+1)^0,w,c
 10774  00441E  103F               	iorwf	(??___flge+2)^0,w,c
 10775  004420  1040               	iorwf	(??___flge+3)^0,w,c
 10776  004422  A4D8               	btfss	status,2,c
 10777  004424  EF16  F022         	goto	u5171
 10778  004428  EF18  F022         	goto	u5170
 10779  00442C                     u5171:
 10780  00442C  EF20  F022         	goto	l4876
 10781  004430                     u5170:
 10782  004430  0E00               	movlw	0
 10783  004432  6E39               	movwf	___flge@ff2^0,c
 10784  004434  0E00               	movlw	0
 10785  004436  6E3A               	movwf	(___flge@ff2+1)^0,c
 10786  004438  0E00               	movlw	0
 10787  00443A  6E3B               	movwf	(___flge@ff2+2)^0,c
 10788  00443C  0E00               	movlw	0
 10789  00443E  6E3C               	movwf	(___flge@ff2+3)^0,c
 10790  004440                     l4876:
 10791  004440  AE38               	btfss	(___flge@ff1+3)^0,7,c
 10792  004442  EF25  F022         	goto	u5181
 10793  004446  EF27  F022         	goto	u5180
 10794  00444A                     u5181:
 10795  00444A  EF30  F022         	goto	l4880
 10796  00444E                     u5180:
 10797  00444E  6C35               	negf	___flge@ff1^0,c
 10798  004450  1E36               	comf	(___flge@ff1+1)^0,f,c
 10799  004452  B0D8               	btfsc	status,0,c
 10800  004454  2A36               	incf	(___flge@ff1+1)^0,f,c
 10801  004456  1E37               	comf	(___flge@ff1+2)^0,f,c
 10802  004458  B0D8               	btfsc	status,0,c
 10803  00445A  2A37               	incf	(___flge@ff1+2)^0,f,c
 10804  00445C  0E80               	movlw	128
 10805  00445E  5638               	subfwb	(___flge@ff1+3)^0,f,c
 10806  004460                     l4880:
 10807  004460  AE3C               	btfss	(___flge@ff2+3)^0,7,c
 10808  004462  EF35  F022         	goto	u5191
 10809  004466  EF37  F022         	goto	u5190
 10810  00446A                     u5191:
 10811  00446A  EF40  F022         	goto	l962
 10812  00446E                     u5190:
 10813  00446E  6C39               	negf	___flge@ff2^0,c
 10814  004470  1E3A               	comf	(___flge@ff2+1)^0,f,c
 10815  004472  B0D8               	btfsc	status,0,c
 10816  004474  2A3A               	incf	(___flge@ff2+1)^0,f,c
 10817  004476  1E3B               	comf	(___flge@ff2+2)^0,f,c
 10818  004478  B0D8               	btfsc	status,0,c
 10819  00447A  2A3B               	incf	(___flge@ff2+2)^0,f,c
 10820  00447C  0E80               	movlw	128
 10821  00447E  563C               	subfwb	(___flge@ff2+3)^0,f,c
 10822  004480                     l962:
 10823  004480  0E00               	movlw	0
 10824  004482  1A35               	xorwf	___flge@ff1^0,f,c
 10825  004484  0E00               	movlw	0
 10826  004486  1A36               	xorwf	(___flge@ff1+1)^0,f,c
 10827  004488  0E00               	movlw	0
 10828  00448A  1A37               	xorwf	(___flge@ff1+2)^0,f,c
 10829  00448C  0E80               	movlw	128
 10830  00448E  1A38               	xorwf	(___flge@ff1+3)^0,f,c
 10831  004490  0E00               	movlw	0
 10832  004492  1A39               	xorwf	___flge@ff2^0,f,c
 10833  004494  0E00               	movlw	0
 10834  004496  1A3A               	xorwf	(___flge@ff2+1)^0,f,c
 10835  004498  0E00               	movlw	0
 10836  00449A  1A3B               	xorwf	(___flge@ff2+2)^0,f,c
 10837  00449C  0E80               	movlw	128
 10838  00449E  1A3C               	xorwf	(___flge@ff2+3)^0,f,c
 10839  0044A0  5039               	movf	___flge@ff2^0,w,c
 10840  0044A2  5C35               	subwf	___flge@ff1^0,w,c
 10841  0044A4  503A               	movf	(___flge@ff2+1)^0,w,c
 10842  0044A6  5836               	subwfb	(___flge@ff1+1)^0,w,c
 10843  0044A8  503B               	movf	(___flge@ff2+2)^0,w,c
 10844  0044AA  5837               	subwfb	(___flge@ff1+2)^0,w,c
 10845  0044AC  503C               	movf	(___flge@ff2+3)^0,w,c
 10846  0044AE  5838               	subwfb	(___flge@ff1+3)^0,w,c
 10847  0044B0  B0D8               	btfsc	status,0,c
 10848  0044B2  EF5D  F022         	goto	u5201
 10849  0044B6  EF5F  F022         	goto	u5200
 10850  0044BA                     u5201:
 10851  0044BA  EF62  F022         	goto	l4886
 10852  0044BE                     u5200:
 10853  0044BE  90D8               	bcf	status,0,c
 10854  0044C0  EF63  F022         	goto	l967
 10855  0044C4                     l4886:
 10856  0044C4  80D8               	bsf	status,0,c
 10857  0044C6                     l967:
 10858  0044C6  0012               	return		;funcret
 10859  0044C8                     __end_of___flge:
 10860                           	callstack 0
 10861                           
 10862 ;; *************** function ___fleq *****************
 10863 ;; Defined at:
 10864 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fleq.c"
 10865 ;; Parameters:    Size  Location     Type
 10866 ;;  ff1             4    0[COMRAM] unsigned char 
 10867 ;;  ff2             4    4[COMRAM] unsigned char 
 10868 ;; Auto vars:     Size  Location     Type
 10869 ;;		None
 10870 ;; Return value:  Size  Location     Type
 10871 ;;		None               void
 10872 ;; Registers used:
 10873 ;;		wreg, status,2, status,0
 10874 ;; Tracked objects:
 10875 ;;		On entry : 0/0
 10876 ;;		On exit  : 0/0
 10877 ;;		Unchanged: 0/0
 10878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10879 ;;      Params:         8       0       0       0       0       0       0
 10880 ;;      Locals:         0       0       0       0       0       0       0
 10881 ;;      Temps:          4       0       0       0       0       0       0
 10882 ;;      Totals:        12       0       0       0       0       0       0
 10883 ;;Total ram usage:       12 bytes
 10884 ;; Hardware stack levels used:    1
 10885 ;; Hardware stack levels required when called:    1
 10886 ;; This function calls:
 10887 ;;		Nothing
 10888 ;; This function is called by:
 10889 ;;		_efgtoa
 10890 ;; This function uses a non-reentrant model
 10891 ;;
 10892                           
 10893                           	psect	text36
 10894  004B24                     __ptext36:
 10895                           	callstack 0
 10896  004B24                     ___fleq:
 10897                           	callstack 22
 10898  004B24  0E00               	movlw	0
 10899  004B26  1401               	andwf	___fleq@ff1^0,w,c
 10900  004B28  6E09               	movwf	??___fleq^0,c
 10901  004B2A  0E00               	movlw	0
 10902  004B2C  1402               	andwf	(___fleq@ff1+1)^0,w,c
 10903  004B2E  6E0A               	movwf	(??___fleq+1)^0,c
 10904  004B30  0E80               	movlw	128
 10905  004B32  1403               	andwf	(___fleq@ff1+2)^0,w,c
 10906  004B34  6E0B               	movwf	(??___fleq+2)^0,c
 10907  004B36  0E7F               	movlw	127
 10908  004B38  1404               	andwf	(___fleq@ff1+3)^0,w,c
 10909  004B3A  6E0C               	movwf	(??___fleq+3)^0,c
 10910  004B3C  5009               	movf	??___fleq^0,w,c
 10911  004B3E  100A               	iorwf	(??___fleq+1)^0,w,c
 10912  004B40  100B               	iorwf	(??___fleq+2)^0,w,c
 10913  004B42  100C               	iorwf	(??___fleq+3)^0,w,c
 10914  004B44  A4D8               	btfss	status,2,c
 10915  004B46  EFA7  F025         	goto	u5131
 10916  004B4A  EFA9  F025         	goto	u5130
 10917  004B4E                     u5131:
 10918  004B4E  EFB1  F025         	goto	l4856
 10919  004B52                     u5130:
 10920  004B52  0E00               	movlw	0
 10921  004B54  6E01               	movwf	___fleq@ff1^0,c
 10922  004B56  0E00               	movlw	0
 10923  004B58  6E02               	movwf	(___fleq@ff1+1)^0,c
 10924  004B5A  0E00               	movlw	0
 10925  004B5C  6E03               	movwf	(___fleq@ff1+2)^0,c
 10926  004B5E  0E00               	movlw	0
 10927  004B60  6E04               	movwf	(___fleq@ff1+3)^0,c
 10928  004B62                     l4856:
 10929  004B62  0E00               	movlw	0
 10930  004B64  1405               	andwf	___fleq@ff2^0,w,c
 10931  004B66  6E09               	movwf	??___fleq^0,c
 10932  004B68  0E00               	movlw	0
 10933  004B6A  1406               	andwf	(___fleq@ff2+1)^0,w,c
 10934  004B6C  6E0A               	movwf	(??___fleq+1)^0,c
 10935  004B6E  0E80               	movlw	128
 10936  004B70  1407               	andwf	(___fleq@ff2+2)^0,w,c
 10937  004B72  6E0B               	movwf	(??___fleq+2)^0,c
 10938  004B74  0E7F               	movlw	127
 10939  004B76  1408               	andwf	(___fleq@ff2+3)^0,w,c
 10940  004B78  6E0C               	movwf	(??___fleq+3)^0,c
 10941  004B7A  5009               	movf	??___fleq^0,w,c
 10942  004B7C  100A               	iorwf	(??___fleq+1)^0,w,c
 10943  004B7E  100B               	iorwf	(??___fleq+2)^0,w,c
 10944  004B80  100C               	iorwf	(??___fleq+3)^0,w,c
 10945  004B82  A4D8               	btfss	status,2,c
 10946  004B84  EFC6  F025         	goto	u5141
 10947  004B88  EFC8  F025         	goto	u5140
 10948  004B8C                     u5141:
 10949  004B8C  EFD0  F025         	goto	l4860
 10950  004B90                     u5140:
 10951  004B90  0E00               	movlw	0
 10952  004B92  6E05               	movwf	___fleq@ff2^0,c
 10953  004B94  0E00               	movlw	0
 10954  004B96  6E06               	movwf	(___fleq@ff2+1)^0,c
 10955  004B98  0E00               	movlw	0
 10956  004B9A  6E07               	movwf	(___fleq@ff2+2)^0,c
 10957  004B9C  0E00               	movlw	0
 10958  004B9E  6E08               	movwf	(___fleq@ff2+3)^0,c
 10959  004BA0                     l4860:
 10960  004BA0  5005               	movf	___fleq@ff2^0,w,c
 10961  004BA2  1801               	xorwf	___fleq@ff1^0,w,c
 10962  004BA4  E10F               	bnz	u5150
 10963  004BA6  5006               	movf	(___fleq@ff2+1)^0,w,c
 10964  004BA8  1802               	xorwf	(___fleq@ff1+1)^0,w,c
 10965  004BAA  E10C               	bnz	u5150
 10966  004BAC  5007               	movf	(___fleq@ff2+2)^0,w,c
 10967  004BAE  1803               	xorwf	(___fleq@ff1+2)^0,w,c
 10968  004BB0  E109               	bnz	u5150
 10969  004BB2  5008               	movf	(___fleq@ff2+3)^0,w,c
 10970  004BB4  1804               	xorwf	(___fleq@ff1+3)^0,w,c
 10971  004BB6  B4D8               	btfsc	status,2,c
 10972  004BB8  EFE0  F025         	goto	u5151
 10973  004BBC  EFE2  F025         	goto	u5150
 10974  004BC0                     u5151:
 10975  004BC0  EFE5  F025         	goto	l4864
 10976  004BC4                     u5150:
 10977  004BC4  90D8               	bcf	status,0,c
 10978  004BC6  EFE6  F025         	goto	l956
 10979  004BCA                     l4864:
 10980  004BCA  80D8               	bsf	status,0,c
 10981  004BCC                     l956:
 10982  004BCC  0012               	return		;funcret
 10983  004BCE                     __end_of___fleq:
 10984                           	callstack 0
 10985                           
 10986 ;; *************** function ___fldiv *****************
 10987 ;; Defined at:
 10988 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
 10989 ;; Parameters:    Size  Location     Type
 10990 ;;  b               4   52[COMRAM] unsigned char 
 10991 ;;  a               4   56[COMRAM] unsigned char 
 10992 ;; Auto vars:     Size  Location     Type
 10993 ;;  grs             4   71[COMRAM] unsigned long 
 10994 ;;  rem             4   64[COMRAM] unsigned long 
 10995 ;;  new_exp         2   69[COMRAM] short 
 10996 ;;  aexp            1   76[COMRAM] unsigned char 
 10997 ;;  bexp            1   75[COMRAM] unsigned char 
 10998 ;;  sign            1   68[COMRAM] unsigned char 
 10999 ;; Return value:  Size  Location     Type
 11000 ;;                  4   52[COMRAM] unsigned char 
 11001 ;; Registers used:
 11002 ;;		wreg, status,2, status,0
 11003 ;; Tracked objects:
 11004 ;;		On entry : 0/0
 11005 ;;		On exit  : 0/0
 11006 ;;		Unchanged: 0/0
 11007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11008 ;;      Params:         8       0       0       0       0       0       0
 11009 ;;      Locals:        13       0       0       0       0       0       0
 11010 ;;      Temps:          4       0       0       0       0       0       0
 11011 ;;      Totals:        25       0       0       0       0       0       0
 11012 ;;Total ram usage:       25 bytes
 11013 ;; Hardware stack levels used:    1
 11014 ;; Hardware stack levels required when called:    1
 11015 ;; This function calls:
 11016 ;;		Nothing
 11017 ;; This function is called by:
 11018 ;;		_scanAdcConversion
 11019 ;;		_efgtoa
 11020 ;; This function uses a non-reentrant model
 11021 ;;
 11022                           
 11023                           	psect	text37
 11024  00237C                     __ptext37:
 11025                           	callstack 0
 11026  00237C                     ___fldiv:
 11027                           	callstack 22
 11028  00237C  5038               	movf	(___fldiv@b+3)^0,w,c
 11029  00237E  0B80               	andlw	128
 11030  002380  6E45               	movwf	___fldiv@sign^0,c
 11031  002382  5038               	movf	(___fldiv@b+3)^0,w,c
 11032  002384  2438               	addwf	(___fldiv@b+3)^0,w,c
 11033  002386  6E4C               	movwf	___fldiv@bexp^0,c
 11034  002388  AE37               	btfss	(___fldiv@b+2)^0,7,c
 11035  00238A  EFC9  F011         	goto	u4591
 11036  00238E  EFCB  F011         	goto	u4590
 11037  002392                     u4591:
 11038  002392  EFCC  F011         	goto	l4504
 11039  002396                     u4590:
 11040  002396  804C               	bsf	___fldiv@bexp^0,0,c
 11041  002398                     l4504:
 11042  002398  504C               	movf	___fldiv@bexp^0,w,c
 11043  00239A  B4D8               	btfsc	status,2,c
 11044  00239C  EFD2  F011         	goto	u4601
 11045  0023A0  EFD4  F011         	goto	u4600
 11046  0023A4                     u4601:
 11047  0023A4  EFE9  F011         	goto	l4514
 11048  0023A8                     u4600:
 11049  0023A8  284C               	incf	___fldiv@bexp^0,w,c
 11050  0023AA  A4D8               	btfss	status,2,c
 11051  0023AC  EFDA  F011         	goto	u4611
 11052  0023B0  EFDC  F011         	goto	u4610
 11053  0023B4                     u4611:
 11054  0023B4  EFE4  F011         	goto	l4510
 11055  0023B8                     u4610:
 11056  0023B8  0E00               	movlw	0
 11057  0023BA  6E35               	movwf	___fldiv@b^0,c
 11058  0023BC  0E00               	movlw	0
 11059  0023BE  6E36               	movwf	(___fldiv@b+1)^0,c
 11060  0023C0  0E00               	movlw	0
 11061  0023C2  6E37               	movwf	(___fldiv@b+2)^0,c
 11062  0023C4  0E00               	movlw	0
 11063  0023C6  6E38               	movwf	(___fldiv@b+3)^0,c
 11064  0023C8                     l4510:
 11065  0023C8  8E37               	bsf	(___fldiv@b+2)^0,7,c
 11066  0023CA  0E00               	movlw	0
 11067  0023CC  6E38               	movwf	(___fldiv@b+3)^0,c
 11068  0023CE  EFF1  F011         	goto	l4516
 11069  0023D2                     l4514:
 11070  0023D2  0E00               	movlw	0
 11071  0023D4  6E35               	movwf	___fldiv@b^0,c
 11072  0023D6  0E00               	movlw	0
 11073  0023D8  6E36               	movwf	(___fldiv@b+1)^0,c
 11074  0023DA  0E00               	movlw	0
 11075  0023DC  6E37               	movwf	(___fldiv@b+2)^0,c
 11076  0023DE  0E00               	movlw	0
 11077  0023E0  6E38               	movwf	(___fldiv@b+3)^0,c
 11078  0023E2                     l4516:
 11079  0023E2  503C               	movf	(___fldiv@a+3)^0,w,c
 11080  0023E4  0B80               	andlw	128
 11081  0023E6  1A45               	xorwf	___fldiv@sign^0,f,c
 11082  0023E8  503C               	movf	(___fldiv@a+3)^0,w,c
 11083  0023EA  243C               	addwf	(___fldiv@a+3)^0,w,c
 11084  0023EC  6E4D               	movwf	___fldiv@aexp^0,c
 11085  0023EE  AE3B               	btfss	(___fldiv@a+2)^0,7,c
 11086  0023F0  EFFC  F011         	goto	u4621
 11087  0023F4  EFFE  F011         	goto	u4620
 11088  0023F8                     u4621:
 11089  0023F8  EFFF  F011         	goto	l4524
 11090  0023FC                     u4620:
 11091  0023FC  804D               	bsf	___fldiv@aexp^0,0,c
 11092  0023FE                     l4524:
 11093  0023FE  504D               	movf	___fldiv@aexp^0,w,c
 11094  002400  B4D8               	btfsc	status,2,c
 11095  002402  EF05  F012         	goto	u4631
 11096  002406  EF07  F012         	goto	u4630
 11097  00240A                     u4631:
 11098  00240A  EF1C  F012         	goto	l4534
 11099  00240E                     u4630:
 11100  00240E  284D               	incf	___fldiv@aexp^0,w,c
 11101  002410  A4D8               	btfss	status,2,c
 11102  002412  EF0D  F012         	goto	u4641
 11103  002416  EF0F  F012         	goto	u4640
 11104  00241A                     u4641:
 11105  00241A  EF17  F012         	goto	l4530
 11106  00241E                     u4640:
 11107  00241E  0E00               	movlw	0
 11108  002420  6E39               	movwf	___fldiv@a^0,c
 11109  002422  0E00               	movlw	0
 11110  002424  6E3A               	movwf	(___fldiv@a+1)^0,c
 11111  002426  0E00               	movlw	0
 11112  002428  6E3B               	movwf	(___fldiv@a+2)^0,c
 11113  00242A  0E00               	movlw	0
 11114  00242C  6E3C               	movwf	(___fldiv@a+3)^0,c
 11115  00242E                     l4530:
 11116  00242E  8E3B               	bsf	(___fldiv@a+2)^0,7,c
 11117  002430  0E00               	movlw	0
 11118  002432  6E3C               	movwf	(___fldiv@a+3)^0,c
 11119  002434  EF24  F012         	goto	l4536
 11120  002438                     l4534:
 11121  002438  0E00               	movlw	0
 11122  00243A  6E39               	movwf	___fldiv@a^0,c
 11123  00243C  0E00               	movlw	0
 11124  00243E  6E3A               	movwf	(___fldiv@a+1)^0,c
 11125  002440  0E00               	movlw	0
 11126  002442  6E3B               	movwf	(___fldiv@a+2)^0,c
 11127  002444  0E00               	movlw	0
 11128  002446  6E3C               	movwf	(___fldiv@a+3)^0,c
 11129  002448                     l4536:
 11130  002448  5039               	movf	___fldiv@a^0,w,c
 11131  00244A  103A               	iorwf	(___fldiv@a+1)^0,w,c
 11132  00244C  103B               	iorwf	(___fldiv@a+2)^0,w,c
 11133  00244E  103C               	iorwf	(___fldiv@a+3)^0,w,c
 11134  002450  A4D8               	btfss	status,2,c
 11135  002452  EF2D  F012         	goto	u4651
 11136  002456  EF2F  F012         	goto	u4650
 11137  00245A                     u4651:
 11138  00245A  EF47  F012         	goto	l4548
 11139  00245E                     u4650:
 11140  00245E  0E00               	movlw	0
 11141  002460  6E35               	movwf	___fldiv@b^0,c
 11142  002462  0E00               	movlw	0
 11143  002464  6E36               	movwf	(___fldiv@b+1)^0,c
 11144  002466  0E00               	movlw	0
 11145  002468  6E37               	movwf	(___fldiv@b+2)^0,c
 11146  00246A  0E00               	movlw	0
 11147  00246C  6E38               	movwf	(___fldiv@b+3)^0,c
 11148  00246E  0E80               	movlw	128
 11149  002470  1237               	iorwf	(___fldiv@b+2)^0,f,c
 11150  002472  0E7F               	movlw	127
 11151  002474  1238               	iorwf	(___fldiv@b+3)^0,f,c
 11152  002476                     l4542:
 11153  002476  5045               	movf	___fldiv@sign^0,w,c
 11154  002478  1238               	iorwf	(___fldiv@b+3)^0,f,c
 11155  00247A  C035  F035         	movff	___fldiv@b,?___fldiv
 11156  00247E  C036  F036         	movff	___fldiv@b+1,?___fldiv+1
 11157  002482  C037  F037         	movff	___fldiv@b+2,?___fldiv+2
 11158  002486  C038  F038         	movff	___fldiv@b+3,?___fldiv+3
 11159  00248A  EF8A  F013         	goto	l1279
 11160  00248E                     l4548:
 11161  00248E  504C               	movf	___fldiv@bexp^0,w,c
 11162  002490  A4D8               	btfss	status,2,c
 11163  002492  EF4D  F012         	goto	u4661
 11164  002496  EF4F  F012         	goto	u4660
 11165  00249A                     u4661:
 11166  00249A  EF59  F012         	goto	l4556
 11167  00249E                     u4660:
 11168  00249E  0E00               	movlw	0
 11169  0024A0  6E35               	movwf	?___fldiv^0,c
 11170  0024A2  0E00               	movlw	0
 11171  0024A4  6E36               	movwf	(?___fldiv+1)^0,c
 11172  0024A6  0E00               	movlw	0
 11173  0024A8  6E37               	movwf	(?___fldiv+2)^0,c
 11174  0024AA  0E00               	movlw	0
 11175  0024AC  6E38               	movwf	(?___fldiv+3)^0,c
 11176  0024AE  EF8A  F013         	goto	l1279
 11177  0024B2                     l4556:
 11178  0024B2  504D               	movf	___fldiv@aexp^0,w,c
 11179  0024B4  C04C  F03D         	movff	___fldiv@bexp,??___fldiv
 11180  0024B8  6A3E               	clrf	(??___fldiv+1)^0,c
 11181  0024BA  5E3D               	subwf	??___fldiv^0,f,c
 11182  0024BC  0E00               	movlw	0
 11183  0024BE  5A3E               	subwfb	(??___fldiv+1)^0,f,c
 11184  0024C0  0E7F               	movlw	127
 11185  0024C2  243D               	addwf	??___fldiv^0,w,c
 11186  0024C4  6E46               	movwf	___fldiv@new_exp^0,c
 11187  0024C6  0E00               	movlw	0
 11188  0024C8  203E               	addwfc	(??___fldiv+1)^0,w,c
 11189  0024CA  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 11190  0024CC  C035  F041         	movff	___fldiv@b,___fldiv@rem
 11191  0024D0  C036  F042         	movff	___fldiv@b+1,___fldiv@rem+1
 11192  0024D4  C037  F043         	movff	___fldiv@b+2,___fldiv@rem+2
 11193  0024D8  C038  F044         	movff	___fldiv@b+3,___fldiv@rem+3
 11194  0024DC  0E00               	movlw	0
 11195  0024DE  6E35               	movwf	___fldiv@b^0,c
 11196  0024E0  0E00               	movlw	0
 11197  0024E2  6E36               	movwf	(___fldiv@b+1)^0,c
 11198  0024E4  0E00               	movlw	0
 11199  0024E6  6E37               	movwf	(___fldiv@b+2)^0,c
 11200  0024E8  0E00               	movlw	0
 11201  0024EA  6E38               	movwf	(___fldiv@b+3)^0,c
 11202  0024EC  0E00               	movlw	0
 11203  0024EE  6E48               	movwf	___fldiv@grs^0,c
 11204  0024F0  0E00               	movlw	0
 11205  0024F2  6E49               	movwf	(___fldiv@grs+1)^0,c
 11206  0024F4  0E00               	movlw	0
 11207  0024F6  6E4A               	movwf	(___fldiv@grs+2)^0,c
 11208  0024F8  0E00               	movlw	0
 11209  0024FA  6E4B               	movwf	(___fldiv@grs+3)^0,c
 11210  0024FC  0E00               	movlw	0
 11211  0024FE  6E4D               	movwf	___fldiv@aexp^0,c
 11212  002500  EFBA  F012         	goto	l1281
 11213  002504                     l4566:
 11214  002504  504D               	movf	___fldiv@aexp^0,w,c
 11215  002506  B4D8               	btfsc	status,2,c
 11216  002508  EF88  F012         	goto	u4671
 11217  00250C  EF8A  F012         	goto	u4670
 11218  002510                     u4671:
 11219  002510  EFA1  F012         	goto	l4574
 11220  002514                     u4670:
 11221  002514  90D8               	bcf	status,0,c
 11222  002516  3641               	rlcf	___fldiv@rem^0,f,c
 11223  002518  3642               	rlcf	(___fldiv@rem+1)^0,f,c
 11224  00251A  3643               	rlcf	(___fldiv@rem+2)^0,f,c
 11225  00251C  3644               	rlcf	(___fldiv@rem+3)^0,f,c
 11226  00251E  90D8               	bcf	status,0,c
 11227  002520  3635               	rlcf	___fldiv@b^0,f,c
 11228  002522  3636               	rlcf	(___fldiv@b+1)^0,f,c
 11229  002524  3637               	rlcf	(___fldiv@b+2)^0,f,c
 11230  002526  3638               	rlcf	(___fldiv@b+3)^0,f,c
 11231  002528  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 11232  00252A  EF99  F012         	goto	u4681
 11233  00252E  EF9B  F012         	goto	u4680
 11234  002532                     u4681:
 11235  002532  EF9C  F012         	goto	l1284
 11236  002536                     u4680:
 11237  002536  8035               	bsf	___fldiv@b^0,0,c
 11238  002538                     l1284:
 11239  002538  90D8               	bcf	status,0,c
 11240  00253A  3648               	rlcf	___fldiv@grs^0,f,c
 11241  00253C  3649               	rlcf	(___fldiv@grs+1)^0,f,c
 11242  00253E  364A               	rlcf	(___fldiv@grs+2)^0,f,c
 11243  002540  364B               	rlcf	(___fldiv@grs+3)^0,f,c
 11244  002542                     l4574:
 11245  002542  5039               	movf	___fldiv@a^0,w,c
 11246  002544  5C41               	subwf	___fldiv@rem^0,w,c
 11247  002546  503A               	movf	(___fldiv@a+1)^0,w,c
 11248  002548  5842               	subwfb	(___fldiv@rem+1)^0,w,c
 11249  00254A  503B               	movf	(___fldiv@a+2)^0,w,c
 11250  00254C  5843               	subwfb	(___fldiv@rem+2)^0,w,c
 11251  00254E  503C               	movf	(___fldiv@a+3)^0,w,c
 11252  002550  5844               	subwfb	(___fldiv@rem+3)^0,w,c
 11253  002552  A0D8               	btfss	status,0,c
 11254  002554  EFAE  F012         	goto	u4691
 11255  002558  EFB0  F012         	goto	u4690
 11256  00255C                     u4691:
 11257  00255C  EFB9  F012         	goto	l4580
 11258  002560                     u4690:
 11259  002560  8C4B               	bsf	(___fldiv@grs+3)^0,6,c
 11260  002562  5039               	movf	___fldiv@a^0,w,c
 11261  002564  5E41               	subwf	___fldiv@rem^0,f,c
 11262  002566  503A               	movf	(___fldiv@a+1)^0,w,c
 11263  002568  5A42               	subwfb	(___fldiv@rem+1)^0,f,c
 11264  00256A  503B               	movf	(___fldiv@a+2)^0,w,c
 11265  00256C  5A43               	subwfb	(___fldiv@rem+2)^0,f,c
 11266  00256E  503C               	movf	(___fldiv@a+3)^0,w,c
 11267  002570  5A44               	subwfb	(___fldiv@rem+3)^0,f,c
 11268  002572                     l4580:
 11269  002572  2A4D               	incf	___fldiv@aexp^0,f,c
 11270  002574                     l1281:
 11271  002574  0E19               	movlw	25
 11272  002576  644D               	cpfsgt	___fldiv@aexp^0,c
 11273  002578  EFC0  F012         	goto	u4701
 11274  00257C  EFC2  F012         	goto	u4700
 11275  002580                     u4701:
 11276  002580  EF82  F012         	goto	l4566
 11277  002584                     u4700:
 11278  002584  5041               	movf	___fldiv@rem^0,w,c
 11279  002586  1042               	iorwf	(___fldiv@rem+1)^0,w,c
 11280  002588  1043               	iorwf	(___fldiv@rem+2)^0,w,c
 11281  00258A  1044               	iorwf	(___fldiv@rem+3)^0,w,c
 11282  00258C  B4D8               	btfsc	status,2,c
 11283  00258E  EFCB  F012         	goto	u4711
 11284  002592  EFCD  F012         	goto	u4710
 11285  002596                     u4711:
 11286  002596  EFE5  F012         	goto	l4592
 11287  00259A                     u4710:
 11288  00259A  8048               	bsf	___fldiv@grs^0,0,c
 11289  00259C  EFE5  F012         	goto	l4592
 11290  0025A0                     l4586:
 11291  0025A0  90D8               	bcf	status,0,c
 11292  0025A2  3635               	rlcf	___fldiv@b^0,f,c
 11293  0025A4  3636               	rlcf	(___fldiv@b+1)^0,f,c
 11294  0025A6  3637               	rlcf	(___fldiv@b+2)^0,f,c
 11295  0025A8  3638               	rlcf	(___fldiv@b+3)^0,f,c
 11296  0025AA  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 11297  0025AC  EFDA  F012         	goto	u4721
 11298  0025B0  EFDC  F012         	goto	u4720
 11299  0025B4                     u4721:
 11300  0025B4  EFDD  F012         	goto	l1290
 11301  0025B8                     u4720:
 11302  0025B8  8035               	bsf	___fldiv@b^0,0,c
 11303  0025BA                     l1290:
 11304  0025BA  90D8               	bcf	status,0,c
 11305  0025BC  3648               	rlcf	___fldiv@grs^0,f,c
 11306  0025BE  3649               	rlcf	(___fldiv@grs+1)^0,f,c
 11307  0025C0  364A               	rlcf	(___fldiv@grs+2)^0,f,c
 11308  0025C2  364B               	rlcf	(___fldiv@grs+3)^0,f,c
 11309  0025C4  0646               	decf	___fldiv@new_exp^0,f,c
 11310  0025C6  A0D8               	btfss	status,0,c
 11311  0025C8  0647               	decf	(___fldiv@new_exp+1)^0,f,c
 11312  0025CA                     l4592:
 11313  0025CA  AE37               	btfss	(___fldiv@b+2)^0,7,c
 11314  0025CC  EFEA  F012         	goto	u4731
 11315  0025D0  EFEC  F012         	goto	u4730
 11316  0025D4                     u4731:
 11317  0025D4  EFD0  F012         	goto	l4586
 11318  0025D8                     u4730:
 11319  0025D8  0E00               	movlw	0
 11320  0025DA  6E4D               	movwf	___fldiv@aexp^0,c
 11321  0025DC  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 11322  0025DE  EFF3  F012         	goto	u4741
 11323  0025E2  EFF5  F012         	goto	u4740
 11324  0025E6                     u4741:
 11325  0025E6  EF19  F013         	goto	l1292
 11326  0025EA                     u4740:
 11327  0025EA  0EFF               	movlw	255
 11328  0025EC  1448               	andwf	___fldiv@grs^0,w,c
 11329  0025EE  6E3D               	movwf	??___fldiv^0,c
 11330  0025F0  0EFF               	movlw	255
 11331  0025F2  1449               	andwf	(___fldiv@grs+1)^0,w,c
 11332  0025F4  6E3E               	movwf	(??___fldiv+1)^0,c
 11333  0025F6  0EFF               	movlw	255
 11334  0025F8  144A               	andwf	(___fldiv@grs+2)^0,w,c
 11335  0025FA  6E3F               	movwf	(??___fldiv+2)^0,c
 11336  0025FC  0E7F               	movlw	127
 11337  0025FE  144B               	andwf	(___fldiv@grs+3)^0,w,c
 11338  002600  6E40               	movwf	(??___fldiv+3)^0,c
 11339  002602  503D               	movf	??___fldiv^0,w,c
 11340  002604  103E               	iorwf	(??___fldiv+1)^0,w,c
 11341  002606  103F               	iorwf	(??___fldiv+2)^0,w,c
 11342  002608  1040               	iorwf	(??___fldiv+3)^0,w,c
 11343  00260A  B4D8               	btfsc	status,2,c
 11344  00260C  EF0A  F013         	goto	u4751
 11345  002610  EF0C  F013         	goto	u4750
 11346  002614                     u4751:
 11347  002614  EF10  F013         	goto	l1293
 11348  002618                     u4750:
 11349  002618                     l4600:
 11350  002618  0E01               	movlw	1
 11351  00261A  6E4D               	movwf	___fldiv@aexp^0,c
 11352  00261C  EF19  F013         	goto	l1292
 11353  002620                     l1293:
 11354  002620  A035               	btfss	___fldiv@b^0,0,c
 11355  002622  EF15  F013         	goto	u4761
 11356  002626  EF17  F013         	goto	u4760
 11357  00262A                     u4761:
 11358  00262A  EF19  F013         	goto	l1292
 11359  00262E                     u4760:
 11360  00262E  EF0C  F013         	goto	l4600
 11361  002632                     l1292:
 11362  002632  504D               	movf	___fldiv@aexp^0,w,c
 11363  002634  B4D8               	btfsc	status,2,c
 11364  002636  EF1F  F013         	goto	u4771
 11365  00263A  EF21  F013         	goto	u4770
 11366  00263E                     u4771:
 11367  00263E  EF45  F013         	goto	l4612
 11368  002642                     u4770:
 11369  002642  0E01               	movlw	1
 11370  002644  2635               	addwf	___fldiv@b^0,f,c
 11371  002646  0E00               	movlw	0
 11372  002648  2236               	addwfc	(___fldiv@b+1)^0,f,c
 11373  00264A  2237               	addwfc	(___fldiv@b+2)^0,f,c
 11374  00264C  2238               	addwfc	(___fldiv@b+3)^0,f,c
 11375  00264E  A038               	btfss	(___fldiv@b+3)^0,0,c
 11376  002650  EF2C  F013         	goto	u4781
 11377  002654  EF2E  F013         	goto	u4780
 11378  002658                     u4781:
 11379  002658  EF45  F013         	goto	l4612
 11380  00265C                     u4780:
 11381  00265C  C035  F03D         	movff	___fldiv@b,??___fldiv
 11382  002660  C036  F03E         	movff	___fldiv@b+1,??___fldiv+1
 11383  002664  C037  F03F         	movff	___fldiv@b+2,??___fldiv+2
 11384  002668  C038  F040         	movff	___fldiv@b+3,??___fldiv+3
 11385  00266C  3440               	rlcf	(??___fldiv+3)^0,w,c
 11386  00266E  3240               	rrcf	(??___fldiv+3)^0,f,c
 11387  002670  323F               	rrcf	(??___fldiv+2)^0,f,c
 11388  002672  323E               	rrcf	(??___fldiv+1)^0,f,c
 11389  002674  323D               	rrcf	??___fldiv^0,f,c
 11390  002676  C03D  F035         	movff	??___fldiv,___fldiv@b
 11391  00267A  C03E  F036         	movff	??___fldiv+1,___fldiv@b+1
 11392  00267E  C03F  F037         	movff	??___fldiv+2,___fldiv@b+2
 11393  002682  C040  F038         	movff	??___fldiv+3,___fldiv@b+3
 11394  002686  4A46               	infsnz	___fldiv@new_exp^0,f,c
 11395  002688  2A47               	incf	(___fldiv@new_exp+1)^0,f,c
 11396  00268A                     l4612:
 11397  00268A  BE47               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11398  00268C  EF50  F013         	goto	u4791
 11399  002690  5047               	movf	(___fldiv@new_exp+1)^0,w,c
 11400  002692  E108               	bnz	u4790
 11401  002694  2846               	incf	___fldiv@new_exp^0,w,c
 11402  002696  A0D8               	btfss	status,0,c
 11403  002698  EF50  F013         	goto	u4791
 11404  00269C  EF52  F013         	goto	u4790
 11405  0026A0                     u4791:
 11406  0026A0  EF5D  F013         	goto	l4616
 11407  0026A4                     u4790:
 11408  0026A4  0E00               	movlw	0
 11409  0026A6  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 11410  0026A8  6846               	setf	___fldiv@new_exp^0,c
 11411  0026AA  0E00               	movlw	0
 11412  0026AC  6E35               	movwf	___fldiv@b^0,c
 11413  0026AE  0E00               	movlw	0
 11414  0026B0  6E36               	movwf	(___fldiv@b+1)^0,c
 11415  0026B2  0E00               	movlw	0
 11416  0026B4  6E37               	movwf	(___fldiv@b+2)^0,c
 11417  0026B6  0E00               	movlw	0
 11418  0026B8  6E38               	movwf	(___fldiv@b+3)^0,c
 11419  0026BA                     l4616:
 11420  0026BA  BE47               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11421  0026BC  EF6A  F013         	goto	u4800
 11422  0026C0  5047               	movf	(___fldiv@new_exp+1)^0,w,c
 11423  0026C2  E106               	bnz	u4801
 11424  0026C4  0446               	decf	___fldiv@new_exp^0,w,c
 11425  0026C6  B0D8               	btfsc	status,0,c
 11426  0026C8  EF68  F013         	goto	u4801
 11427  0026CC  EF6A  F013         	goto	u4800
 11428  0026D0                     u4801:
 11429  0026D0  EF78  F013         	goto	l4620
 11430  0026D4                     u4800:
 11431  0026D4  0E00               	movlw	0
 11432  0026D6  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 11433  0026D8  0E00               	movlw	0
 11434  0026DA  6E46               	movwf	___fldiv@new_exp^0,c
 11435  0026DC  0E00               	movlw	0
 11436  0026DE  6E35               	movwf	___fldiv@b^0,c
 11437  0026E0  0E00               	movlw	0
 11438  0026E2  6E36               	movwf	(___fldiv@b+1)^0,c
 11439  0026E4  0E00               	movlw	0
 11440  0026E6  6E37               	movwf	(___fldiv@b+2)^0,c
 11441  0026E8  0E00               	movlw	0
 11442  0026EA  6E38               	movwf	(___fldiv@b+3)^0,c
 11443  0026EC  0E00               	movlw	0
 11444  0026EE  6E45               	movwf	___fldiv@sign^0,c
 11445  0026F0                     l4620:
 11446  0026F0  C046  F04C         	movff	___fldiv@new_exp,___fldiv@bexp
 11447  0026F4  A04C               	btfss	___fldiv@bexp^0,0,c
 11448  0026F6  EF7F  F013         	goto	u4811
 11449  0026FA  EF81  F013         	goto	u4810
 11450  0026FE                     u4811:
 11451  0026FE  EF84  F013         	goto	l4626
 11452  002702                     u4810:
 11453  002702  8E37               	bsf	(___fldiv@b+2)^0,7,c
 11454  002704  EF85  F013         	goto	l4628
 11455  002708                     l4626:
 11456  002708  9E37               	bcf	(___fldiv@b+2)^0,7,c
 11457  00270A                     l4628:
 11458  00270A  90D8               	bcf	status,0,c
 11459  00270C  304C               	rrcf	___fldiv@bexp^0,w,c
 11460  00270E  6E38               	movwf	(___fldiv@b+3)^0,c
 11461  002710  EF3B  F012         	goto	l4542
 11462  002714                     l1279:
 11463  002714  0012               	return		;funcret
 11464  002716                     __end_of___fldiv:
 11465                           	callstack 0
 11466                           
 11467 ;; *************** function ___awmod *****************
 11468 ;; Defined at:
 11469 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
 11470 ;; Parameters:    Size  Location     Type
 11471 ;;  dividend        2    0[COMRAM] int 
 11472 ;;  divisor         2    2[COMRAM] int 
 11473 ;; Auto vars:     Size  Location     Type
 11474 ;;  sign            1    5[COMRAM] unsigned char 
 11475 ;;  counter         1    4[COMRAM] unsigned char 
 11476 ;; Return value:  Size  Location     Type
 11477 ;;                  2    0[COMRAM] int 
 11478 ;; Registers used:
 11479 ;;		wreg, status,2, status,0
 11480 ;; Tracked objects:
 11481 ;;		On entry : 0/0
 11482 ;;		On exit  : 0/0
 11483 ;;		Unchanged: 0/0
 11484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11485 ;;      Params:         4       0       0       0       0       0       0
 11486 ;;      Locals:         2       0       0       0       0       0       0
 11487 ;;      Temps:          0       0       0       0       0       0       0
 11488 ;;      Totals:         6       0       0       0       0       0       0
 11489 ;;Total ram usage:        6 bytes
 11490 ;; Hardware stack levels used:    1
 11491 ;; Hardware stack levels required when called:    1
 11492 ;; This function calls:
 11493 ;;		Nothing
 11494 ;; This function is called by:
 11495 ;;		_efgtoa
 11496 ;; This function uses a non-reentrant model
 11497 ;;
 11498                           
 11499                           	psect	text38
 11500  004A74                     __ptext38:
 11501                           	callstack 0
 11502  004A74                     ___awmod:
 11503                           	callstack 22
 11504  004A74  0E00               	movlw	0
 11505  004A76  6E06               	movwf	___awmod@sign^0,c
 11506  004A78  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
 11507  004A7A  EF43  F025         	goto	u5070
 11508  004A7E  EF41  F025         	goto	u5071
 11509  004A82                     u5071:
 11510  004A82  EF49  F025         	goto	l4824
 11511  004A86                     u5070:
 11512  004A86  6C01               	negf	___awmod@dividend^0,c
 11513  004A88  1E02               	comf	(___awmod@dividend+1)^0,f,c
 11514  004A8A  B0D8               	btfsc	status,0,c
 11515  004A8C  2A02               	incf	(___awmod@dividend+1)^0,f,c
 11516  004A8E  0E01               	movlw	1
 11517  004A90  6E06               	movwf	___awmod@sign^0,c
 11518  004A92                     l4824:
 11519  004A92  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
 11520  004A94  EF50  F025         	goto	u5080
 11521  004A98  EF4E  F025         	goto	u5081
 11522  004A9C                     u5081:
 11523  004A9C  EF54  F025         	goto	l4828
 11524  004AA0                     u5080:
 11525  004AA0  6C03               	negf	___awmod@divisor^0,c
 11526  004AA2  1E04               	comf	(___awmod@divisor+1)^0,f,c
 11527  004AA4  B0D8               	btfsc	status,0,c
 11528  004AA6  2A04               	incf	(___awmod@divisor+1)^0,f,c
 11529  004AA8                     l4828:
 11530  004AA8  5003               	movf	___awmod@divisor^0,w,c
 11531  004AAA  1004               	iorwf	(___awmod@divisor+1)^0,w,c
 11532  004AAC  B4D8               	btfsc	status,2,c
 11533  004AAE  EF5B  F025         	goto	u5091
 11534  004AB2  EF5D  F025         	goto	u5090
 11535  004AB6                     u5091:
 11536  004AB6  EF81  F025         	goto	l4844
 11537  004ABA                     u5090:
 11538  004ABA  0E01               	movlw	1
 11539  004ABC  6E05               	movwf	___awmod@counter^0,c
 11540  004ABE  EF65  F025         	goto	l4834
 11541  004AC2                     l4832:
 11542  004AC2  90D8               	bcf	status,0,c
 11543  004AC4  3603               	rlcf	___awmod@divisor^0,f,c
 11544  004AC6  3604               	rlcf	(___awmod@divisor+1)^0,f,c
 11545  004AC8  2A05               	incf	___awmod@counter^0,f,c
 11546  004ACA                     l4834:
 11547  004ACA  AE04               	btfss	(___awmod@divisor+1)^0,7,c
 11548  004ACC  EF6A  F025         	goto	u5101
 11549  004AD0  EF6C  F025         	goto	u5100
 11550  004AD4                     u5101:
 11551  004AD4  EF61  F025         	goto	l4832
 11552  004AD8                     u5100:
 11553  004AD8                     l4836:
 11554  004AD8  5003               	movf	___awmod@divisor^0,w,c
 11555  004ADA  5C01               	subwf	___awmod@dividend^0,w,c
 11556  004ADC  5004               	movf	(___awmod@divisor+1)^0,w,c
 11557  004ADE  5802               	subwfb	(___awmod@dividend+1)^0,w,c
 11558  004AE0  A0D8               	btfss	status,0,c
 11559  004AE2  EF75  F025         	goto	u5111
 11560  004AE6  EF77  F025         	goto	u5110
 11561  004AEA                     u5111:
 11562  004AEA  EF7B  F025         	goto	l4840
 11563  004AEE                     u5110:
 11564  004AEE  5003               	movf	___awmod@divisor^0,w,c
 11565  004AF0  5E01               	subwf	___awmod@dividend^0,f,c
 11566  004AF2  5004               	movf	(___awmod@divisor+1)^0,w,c
 11567  004AF4  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
 11568  004AF6                     l4840:
 11569  004AF6  90D8               	bcf	status,0,c
 11570  004AF8  3204               	rrcf	(___awmod@divisor+1)^0,f,c
 11571  004AFA  3203               	rrcf	___awmod@divisor^0,f,c
 11572  004AFC  2E05               	decfsz	___awmod@counter^0,f,c
 11573  004AFE  EF6C  F025         	goto	l4836
 11574  004B02                     l4844:
 11575  004B02  5006               	movf	___awmod@sign^0,w,c
 11576  004B04  B4D8               	btfsc	status,2,c
 11577  004B06  EF87  F025         	goto	u5121
 11578  004B0A  EF89  F025         	goto	u5120
 11579  004B0E                     u5121:
 11580  004B0E  EF8D  F025         	goto	l4848
 11581  004B12                     u5120:
 11582  004B12  6C01               	negf	___awmod@dividend^0,c
 11583  004B14  1E02               	comf	(___awmod@dividend+1)^0,f,c
 11584  004B16  B0D8               	btfsc	status,0,c
 11585  004B18  2A02               	incf	(___awmod@dividend+1)^0,f,c
 11586  004B1A                     l4848:
 11587  004B1A  C001  F001         	movff	___awmod@dividend,?___awmod
 11588  004B1E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
 11589  004B22  0012               	return		;funcret
 11590  004B24                     __end_of___awmod:
 11591                           	callstack 0
 11592                           
 11593 ;; *************** function ___awdiv *****************
 11594 ;; Defined at:
 11595 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
 11596 ;; Parameters:    Size  Location     Type
 11597 ;;  dividend        2    0[COMRAM] int 
 11598 ;;  divisor         2    2[COMRAM] int 
 11599 ;; Auto vars:     Size  Location     Type
 11600 ;;  quotient        2    6[COMRAM] int 
 11601 ;;  sign            1    5[COMRAM] unsigned char 
 11602 ;;  counter         1    4[COMRAM] unsigned char 
 11603 ;; Return value:  Size  Location     Type
 11604 ;;                  2    0[COMRAM] int 
 11605 ;; Registers used:
 11606 ;;		wreg, status,2, status,0
 11607 ;; Tracked objects:
 11608 ;;		On entry : 0/0
 11609 ;;		On exit  : 0/0
 11610 ;;		Unchanged: 0/0
 11611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11612 ;;      Params:         4       0       0       0       0       0       0
 11613 ;;      Locals:         4       0       0       0       0       0       0
 11614 ;;      Temps:          0       0       0       0       0       0       0
 11615 ;;      Totals:         8       0       0       0       0       0       0
 11616 ;;Total ram usage:        8 bytes
 11617 ;; Hardware stack levels used:    1
 11618 ;; Hardware stack levels required when called:    1
 11619 ;; This function calls:
 11620 ;;		Nothing
 11621 ;; This function is called by:
 11622 ;;		_efgtoa
 11623 ;; This function uses a non-reentrant model
 11624 ;;
 11625                           
 11626                           	psect	text39
 11627  0048FE                     __ptext39:
 11628                           	callstack 0
 11629  0048FE                     ___awdiv:
 11630                           	callstack 22
 11631  0048FE  0E00               	movlw	0
 11632  004900  6E06               	movwf	___awdiv@sign^0,c
 11633  004902  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 11634  004904  EF88  F024         	goto	u5010
 11635  004908  EF86  F024         	goto	u5011
 11636  00490C                     u5011:
 11637  00490C  EF8E  F024         	goto	l4780
 11638  004910                     u5010:
 11639  004910  6C03               	negf	___awdiv@divisor^0,c
 11640  004912  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 11641  004914  B0D8               	btfsc	status,0,c
 11642  004916  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 11643  004918  0E01               	movlw	1
 11644  00491A  6E06               	movwf	___awdiv@sign^0,c
 11645  00491C                     l4780:
 11646  00491C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 11647  00491E  EF95  F024         	goto	u5020
 11648  004922  EF93  F024         	goto	u5021
 11649  004926                     u5021:
 11650  004926  EF9B  F024         	goto	l4786
 11651  00492A                     u5020:
 11652  00492A  6C01               	negf	___awdiv@dividend^0,c
 11653  00492C  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 11654  00492E  B0D8               	btfsc	status,0,c
 11655  004930  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 11656  004932  0E01               	movlw	1
 11657  004934  1A06               	xorwf	___awdiv@sign^0,f,c
 11658  004936                     l4786:
 11659  004936  0E00               	movlw	0
 11660  004938  6E08               	movwf	(___awdiv@quotient+1)^0,c
 11661  00493A  0E00               	movlw	0
 11662  00493C  6E07               	movwf	___awdiv@quotient^0,c
 11663  00493E  5003               	movf	___awdiv@divisor^0,w,c
 11664  004940  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 11665  004942  B4D8               	btfsc	status,2,c
 11666  004944  EFA6  F024         	goto	u5031
 11667  004948  EFA8  F024         	goto	u5030
 11668  00494C                     u5031:
 11669  00494C  EFD0  F024         	goto	l4808
 11670  004950                     u5030:
 11671  004950  0E01               	movlw	1
 11672  004952  6E05               	movwf	___awdiv@counter^0,c
 11673  004954  EFB0  F024         	goto	l4794
 11674  004958                     l4792:
 11675  004958  90D8               	bcf	status,0,c
 11676  00495A  3603               	rlcf	___awdiv@divisor^0,f,c
 11677  00495C  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 11678  00495E  2A05               	incf	___awdiv@counter^0,f,c
 11679  004960                     l4794:
 11680  004960  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 11681  004962  EFB5  F024         	goto	u5041
 11682  004966  EFB7  F024         	goto	u5040
 11683  00496A                     u5041:
 11684  00496A  EFAC  F024         	goto	l4792
 11685  00496E                     u5040:
 11686  00496E                     l4796:
 11687  00496E  90D8               	bcf	status,0,c
 11688  004970  3607               	rlcf	___awdiv@quotient^0,f,c
 11689  004972  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 11690  004974  5003               	movf	___awdiv@divisor^0,w,c
 11691  004976  5C01               	subwf	___awdiv@dividend^0,w,c
 11692  004978  5004               	movf	(___awdiv@divisor+1)^0,w,c
 11693  00497A  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 11694  00497C  A0D8               	btfss	status,0,c
 11695  00497E  EFC3  F024         	goto	u5051
 11696  004982  EFC5  F024         	goto	u5050
 11697  004986                     u5051:
 11698  004986  EFCA  F024         	goto	l4804
 11699  00498A                     u5050:
 11700  00498A  5003               	movf	___awdiv@divisor^0,w,c
 11701  00498C  5E01               	subwf	___awdiv@dividend^0,f,c
 11702  00498E  5004               	movf	(___awdiv@divisor+1)^0,w,c
 11703  004990  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 11704  004992  8007               	bsf	___awdiv@quotient^0,0,c
 11705  004994                     l4804:
 11706  004994  90D8               	bcf	status,0,c
 11707  004996  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 11708  004998  3203               	rrcf	___awdiv@divisor^0,f,c
 11709  00499A  2E05               	decfsz	___awdiv@counter^0,f,c
 11710  00499C  EFB7  F024         	goto	l4796
 11711  0049A0                     l4808:
 11712  0049A0  5006               	movf	___awdiv@sign^0,w,c
 11713  0049A2  B4D8               	btfsc	status,2,c
 11714  0049A4  EFD6  F024         	goto	u5061
 11715  0049A8  EFD8  F024         	goto	u5060
 11716  0049AC                     u5061:
 11717  0049AC  EFDC  F024         	goto	l4812
 11718  0049B0                     u5060:
 11719  0049B0  6C07               	negf	___awdiv@quotient^0,c
 11720  0049B2  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 11721  0049B4  B0D8               	btfsc	status,0,c
 11722  0049B6  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 11723  0049B8                     l4812:
 11724  0049B8  C007  F001         	movff	___awdiv@quotient,?___awdiv
 11725  0049BC  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 11726  0049C0  0012               	return		;funcret
 11727  0049C2                     __end_of___awdiv:
 11728                           	callstack 0
 11729                           
 11730 ;; *************** function _dtoa *****************
 11731 ;; Defined at:
 11732 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 11733 ;; Parameters:    Size  Location     Type
 11734 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
 11735 ;;		 -> sprintf@f(6), 
 11736 ;;  d               8   29[COMRAM] long long 
 11737 ;; Auto vars:     Size  Location     Type
 11738 ;;  n               8   53[COMRAM] long long 
 11739 ;;  i               2   61[COMRAM] int 
 11740 ;;  s               2   51[COMRAM] int 
 11741 ;;  w               2   49[COMRAM] int 
 11742 ;;  p               2   47[COMRAM] int 
 11743 ;; Return value:  Size  Location     Type
 11744 ;;                  2   27[COMRAM] int 
 11745 ;; Registers used:
 11746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11747 ;; Tracked objects:
 11748 ;;		On entry : 0/0
 11749 ;;		On exit  : 0/0
 11750 ;;		Unchanged: 0/0
 11751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11752 ;;      Params:        10       0       0       0       0       0       0
 11753 ;;      Locals:        18       0       0       0       0       0       0
 11754 ;;      Temps:          8       0       0       0       0       0       0
 11755 ;;      Totals:        36       0       0       0       0       0       0
 11756 ;;Total ram usage:       36 bytes
 11757 ;; Hardware stack levels used:    1
 11758 ;; Hardware stack levels required when called:    5
 11759 ;; This function calls:
 11760 ;;		___aodiv
 11761 ;;		___aomod
 11762 ;;		_abs
 11763 ;;		_pad
 11764 ;; This function is called by:
 11765 ;;		_vfpfcnvrt
 11766 ;; This function uses a non-reentrant model
 11767 ;;
 11768                           
 11769                           	psect	text40
 11770  0029FC                     __ptext40:
 11771                           	callstack 0
 11772  0029FC                     _dtoa:
 11773                           	callstack 19
 11774  0029FC                     
 11775                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
 11776  0029FC  C01E  F036         	movff	dtoa@d,dtoa@n
 11777  002A00  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
 11778  002A04  C020  F038         	movff	dtoa@d+2,dtoa@n+2
 11779  002A08  C021  F039         	movff	dtoa@d+3,dtoa@n+3
 11780  002A0C  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
 11781  002A10  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
 11782  002A14  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
 11783  002A18  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
 11784  002A1C                     
 11785                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
 11786  002A1C  BE3D               	btfsc	(dtoa@n+7)^0,7,c
 11787  002A1E  EF13  F015         	goto	u5601
 11788  002A22  EF16  F015         	goto	u5600
 11789  002A26                     u5601:
 11790  002A26  0E01               	movlw	1
 11791  002A28  EF17  F015         	goto	u5610
 11792  002A2C                     u5600:
 11793  002A2C  0E00               	movlw	0
 11794  002A2E                     u5610:
 11795  002A2E  6E34               	movwf	dtoa@s^0,c
 11796  002A30  6A35               	clrf	(dtoa@s+1)^0,c
 11797                           
 11798                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
 11799  002A32  5034               	movf	dtoa@s^0,w,c
 11800  002A34  1035               	iorwf	(dtoa@s+1)^0,w,c
 11801  002A36  B4D8               	btfsc	status,2,c
 11802  002A38  EF20  F015         	goto	u5621
 11803  002A3C  EF22  F015         	goto	u5620
 11804  002A40                     u5621:
 11805  002A40  EF32  F015         	goto	l5054
 11806  002A44                     u5620:
 11807  002A44                     
 11808                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
 11809  002A44  1E3D               	comf	(dtoa@n+7)^0,f,c
 11810  002A46  1E3C               	comf	(dtoa@n+6)^0,f,c
 11811  002A48  1E3B               	comf	(dtoa@n+5)^0,f,c
 11812  002A4A  1E3A               	comf	(dtoa@n+4)^0,f,c
 11813  002A4C  1E39               	comf	(dtoa@n+3)^0,f,c
 11814  002A4E  1E38               	comf	(dtoa@n+2)^0,f,c
 11815  002A50  1E37               	comf	(dtoa@n+1)^0,f,c
 11816  002A52  6C36               	negf	dtoa@n^0,c
 11817  002A54  0E00               	movlw	0
 11818  002A56  2237               	addwfc	(dtoa@n+1)^0,f,c
 11819  002A58  2238               	addwfc	(dtoa@n+2)^0,f,c
 11820  002A5A  2239               	addwfc	(dtoa@n+3)^0,f,c
 11821  002A5C  223A               	addwfc	(dtoa@n+4)^0,f,c
 11822  002A5E  223B               	addwfc	(dtoa@n+5)^0,f,c
 11823  002A60  223C               	addwfc	(dtoa@n+6)^0,f,c
 11824  002A62  223D               	addwfc	(dtoa@n+7)^0,f,c
 11825  002A64                     l5054:
 11826                           
 11827                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
 11828  002A64  0100               	movlb	0	; () banked
 11829  002A66  BFF7               	btfsc	(_prec+1)& (0+255),7,b
 11830  002A68  EF38  F015         	goto	u5631
 11831  002A6C  EF3A  F015         	goto	u5630
 11832  002A70                     u5631:
 11833  002A70  EF3B  F015         	goto	l5058
 11834  002A74                     u5630:
 11835  002A74                     
 11836                           ; BSR set to: 0
 11837                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
 11838  002A74  93F8               	bcf	_flags& (0+255),1,b
 11839  002A76                     l5058:
 11840                           
 11841                           ; BSR set to: 0
 11842                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
 11843  002A76  BFF7               	btfsc	(_prec+1)& (0+255),7,b
 11844  002A78  EF48  F015         	goto	u5640
 11845  002A7C  51F7               	movf	(_prec+1)& (0+255),w,b
 11846  002A7E  E106               	bnz	u5641
 11847  002A80  05F6               	decf	_prec& (0+255),w,b
 11848  002A82  B0D8               	btfsc	status,0,c
 11849  002A84  EF46  F015         	goto	u5641
 11850  002A88  EF48  F015         	goto	u5640
 11851  002A8C                     u5641:
 11852  002A8C  EF4E  F015         	goto	l1434
 11853  002A90                     u5640:
 11854  002A90                     
 11855                           ; BSR set to: 0
 11856  002A90  0E00               	movlw	0
 11857  002A92  6E31               	movwf	(dtoa@p+1)^0,c
 11858  002A94  0E01               	movlw	1
 11859  002A96  6E30               	movwf	dtoa@p^0,c
 11860  002A98  EF52  F015         	goto	l1436
 11861  002A9C                     l1434:
 11862                           
 11863                           ; BSR set to: 0
 11864  002A9C  C0F6  F030         	movff	_prec,dtoa@p
 11865  002AA0  C0F7  F031         	movff	_prec+1,dtoa@p+1
 11866  002AA4                     l1436:
 11867                           
 11868                           ; BSR set to: 0
 11869                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
 11870  002AA4  C1B1  F032         	movff	_width,dtoa@w
 11871  002AA8  C1B2  F033         	movff	_width+1,dtoa@w+1
 11872  002AAC                     
 11873                           ; BSR set to: 0
 11874                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
 11875  002AAC  5034               	movf	dtoa@s^0,w,c
 11876  002AAE  1035               	iorwf	(dtoa@s+1)^0,w,c
 11877  002AB0  A4D8               	btfss	status,2,c
 11878  002AB2  EF5D  F015         	goto	u5651
 11879  002AB6  EF5F  F015         	goto	u5650
 11880  002ABA                     u5651:
 11881  002ABA  EF66  F015         	goto	l5066
 11882  002ABE                     u5650:
 11883  002ABE                     
 11884                           ; BSR set to: 0
 11885  002ABE  A5F8               	btfss	_flags& (0+255),2,b
 11886  002AC0  EF64  F015         	goto	u5661
 11887  002AC4  EF66  F015         	goto	u5660
 11888  002AC8                     u5661:
 11889  002AC8  EF69  F015         	goto	l5068
 11890  002ACC                     u5660:
 11891  002ACC                     l5066:
 11892                           
 11893                           ; BSR set to: 0
 11894                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
 11895  002ACC  0632               	decf	dtoa@w^0,f,c
 11896  002ACE  A0D8               	btfss	status,0,c
 11897  002AD0  0633               	decf	(dtoa@w+1)^0,f,c
 11898  002AD2                     l5068:
 11899                           
 11900                           ; BSR set to: 0
 11901                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
 11902  002AD2  0E00               	movlw	0
 11903  002AD4  6E3F               	movwf	(dtoa@i+1)^0,c
 11904  002AD6  0E4F               	movlw	79
 11905  002AD8  6E3E               	movwf	dtoa@i^0,c
 11906  002ADA                     
 11907                           ; BSR set to: 0
 11908                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
 11909  002ADA  0E00               	movlw	0
 11910  002ADC  0102               	movlb	2	; () banked
 11911  002ADE  6FAF               	movwf	(_dbuf+79)& (0+255),b
 11912                           
 11913                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11914  002AE0  EFEE  F015         	goto	l5082
 11915  002AE4                     l5072:
 11916                           
 11917                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
 11918  002AE4  063E               	decf	dtoa@i^0,f,c
 11919  002AE6  A0D8               	btfss	status,0,c
 11920  002AE8  063F               	decf	(dtoa@i+1)^0,f,c
 11921  002AEA                     
 11922                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
 11923  002AEA  0E60               	movlw	low _dbuf
 11924  002AEC  243E               	addwf	dtoa@i^0,w,c
 11925  002AEE  6ED9               	movwf	fsr2l,c
 11926  002AF0  0E02               	movlw	high _dbuf
 11927  002AF2  203F               	addwfc	(dtoa@i+1)^0,w,c
 11928  002AF4  6EDA               	movwf	fsr2h,c
 11929  002AF6  C036  F001         	movff	dtoa@n,___aomod@dividend
 11930  002AFA  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
 11931  002AFE  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
 11932  002B02  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
 11933  002B06  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
 11934  002B0A  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
 11935  002B0E  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
 11936  002B12  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
 11937  002B16  0E0A               	movlw	10
 11938  002B18  6E09               	movwf	___aomod@divisor^0,c
 11939  002B1A  0E00               	movlw	0
 11940  002B1C  6E0A               	movwf	(___aomod@divisor+1)^0,c
 11941  002B1E  0E00               	movlw	0
 11942  002B20  6E0B               	movwf	(___aomod@divisor+2)^0,c
 11943  002B22  0E00               	movlw	0
 11944  002B24  6E0C               	movwf	(___aomod@divisor+3)^0,c
 11945  002B26  0E00               	movlw	0
 11946  002B28  6E0D               	movwf	(___aomod@divisor+4)^0,c
 11947  002B2A  0E00               	movlw	0
 11948  002B2C  6E0E               	movwf	(___aomod@divisor+5)^0,c
 11949  002B2E  0E00               	movlw	0
 11950  002B30  6E0F               	movwf	(___aomod@divisor+6)^0,c
 11951  002B32  0E00               	movlw	0
 11952  002B34  6E10               	movwf	(___aomod@divisor+7)^0,c
 11953  002B36  ECE0  F01D         	call	___aomod	;wreg free
 11954  002B3A  C001  F026         	movff	?___aomod,??_dtoa
 11955  002B3E  C002  F027         	movff	?___aomod+1,??_dtoa+1
 11956  002B42  C003  F028         	movff	?___aomod+2,??_dtoa+2
 11957  002B46  C004  F029         	movff	?___aomod+3,??_dtoa+3
 11958  002B4A  C005  F02A         	movff	?___aomod+4,??_dtoa+4
 11959  002B4E  C006  F02B         	movff	?___aomod+5,??_dtoa+5
 11960  002B52  C007  F02C         	movff	?___aomod+6,??_dtoa+6
 11961  002B56  C008  F02D         	movff	?___aomod+7,??_dtoa+7
 11962  002B5A  C026  F013         	movff	??_dtoa,abs@a
 11963  002B5E  C028  F014         	movff	??_dtoa+2,abs@a+1
 11964  002B62  EC0F  F02A         	call	_abs	;wreg free
 11965  002B66  5013               	movf	?_abs^0,w,c
 11966  002B68  0F30               	addlw	48
 11967  002B6A  6EDF               	movwf	indf2,c
 11968  002B6C                     
 11969                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
 11970  002B6C  0630               	decf	dtoa@p^0,f,c
 11971  002B6E  A0D8               	btfss	status,0,c
 11972  002B70  0631               	decf	(dtoa@p+1)^0,f,c
 11973  002B72                     
 11974                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
 11975  002B72  0632               	decf	dtoa@w^0,f,c
 11976  002B74  A0D8               	btfss	status,0,c
 11977  002B76  0633               	decf	(dtoa@w+1)^0,f,c
 11978  002B78                     
 11979                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
 11980  002B78  C036  F001         	movff	dtoa@n,___aodiv@dividend
 11981  002B7C  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
 11982  002B80  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
 11983  002B84  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
 11984  002B88  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
 11985  002B8C  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
 11986  002B90  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
 11987  002B94  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
 11988  002B98  0E0A               	movlw	10
 11989  002B9A  6E09               	movwf	___aodiv@divisor^0,c
 11990  002B9C  0E00               	movlw	0
 11991  002B9E  6E0A               	movwf	(___aodiv@divisor+1)^0,c
 11992  002BA0  0E00               	movlw	0
 11993  002BA2  6E0B               	movwf	(___aodiv@divisor+2)^0,c
 11994  002BA4  0E00               	movlw	0
 11995  002BA6  6E0C               	movwf	(___aodiv@divisor+3)^0,c
 11996  002BA8  0E00               	movlw	0
 11997  002BAA  6E0D               	movwf	(___aodiv@divisor+4)^0,c
 11998  002BAC  0E00               	movlw	0
 11999  002BAE  6E0E               	movwf	(___aodiv@divisor+5)^0,c
 12000  002BB0  0E00               	movlw	0
 12001  002BB2  6E0F               	movwf	(___aodiv@divisor+6)^0,c
 12002  002BB4  0E00               	movlw	0
 12003  002BB6  6E10               	movwf	(___aodiv@divisor+7)^0,c
 12004  002BB8  EC1C  F01D         	call	___aodiv	;wreg free
 12005  002BBC  C001  F036         	movff	?___aodiv,dtoa@n
 12006  002BC0  C002  F037         	movff	?___aodiv+1,dtoa@n+1
 12007  002BC4  C003  F038         	movff	?___aodiv+2,dtoa@n+2
 12008  002BC8  C004  F039         	movff	?___aodiv+3,dtoa@n+3
 12009  002BCC  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
 12010  002BD0  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
 12011  002BD4  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
 12012  002BD8  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
 12013  002BDC                     l5082:
 12014                           
 12015                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12016  002BDC  BE3F               	btfsc	(dtoa@i+1)^0,7,c
 12017  002BDE  EFF9  F015         	goto	u5671
 12018  002BE2  503F               	movf	(dtoa@i+1)^0,w,c
 12019  002BE4  E108               	bnz	u5670
 12020  002BE6  043E               	decf	dtoa@i^0,w,c
 12021  002BE8  A0D8               	btfss	status,0,c
 12022  002BEA  EFF9  F015         	goto	u5671
 12023  002BEE  EFFB  F015         	goto	u5670
 12024  002BF2                     u5671:
 12025  002BF2  EF2C  F016         	goto	l5092
 12026  002BF6                     u5670:
 12027  002BF6  5036               	movf	dtoa@n^0,w,c
 12028  002BF8  1037               	iorwf	(dtoa@n+1)^0,w,c
 12029  002BFA  1038               	iorwf	(dtoa@n+2)^0,w,c
 12030  002BFC  1039               	iorwf	(dtoa@n+3)^0,w,c
 12031  002BFE  103A               	iorwf	(dtoa@n+4)^0,w,c
 12032  002C00  103B               	iorwf	(dtoa@n+5)^0,w,c
 12033  002C02  103C               	iorwf	(dtoa@n+6)^0,w,c
 12034  002C04  103D               	iorwf	(dtoa@n+7)^0,w,c
 12035  002C06  A4D8               	btfss	status,2,c
 12036  002C08  EF08  F016         	goto	u5681
 12037  002C0C  EF0A  F016         	goto	u5680
 12038  002C10                     u5681:
 12039  002C10  EF72  F015         	goto	l5072
 12040  002C14                     u5680:
 12041  002C14  BE31               	btfsc	(dtoa@p+1)^0,7,c
 12042  002C16  EF17  F016         	goto	u5690
 12043  002C1A  5031               	movf	(dtoa@p+1)^0,w,c
 12044  002C1C  E106               	bnz	u5691
 12045  002C1E  0430               	decf	dtoa@p^0,w,c
 12046  002C20  B0D8               	btfsc	status,0,c
 12047  002C22  EF15  F016         	goto	u5691
 12048  002C26  EF17  F016         	goto	u5690
 12049  002C2A                     u5691:
 12050  002C2A  EF72  F015         	goto	l5072
 12051  002C2E                     u5690:
 12052  002C2E  BE33               	btfsc	(dtoa@w+1)^0,7,c
 12053  002C30  EF22  F016         	goto	u5701
 12054  002C34  5033               	movf	(dtoa@w+1)^0,w,c
 12055  002C36  E108               	bnz	u5700
 12056  002C38  0432               	decf	dtoa@w^0,w,c
 12057  002C3A  A0D8               	btfss	status,0,c
 12058  002C3C  EF22  F016         	goto	u5701
 12059  002C40  EF24  F016         	goto	u5700
 12060  002C44                     u5701:
 12061  002C44  EF2C  F016         	goto	l5092
 12062  002C48                     u5700:
 12063  002C48  0100               	movlb	0	; () banked
 12064  002C4A  B3F8               	btfsc	_flags& (0+255),1,b
 12065  002C4C  EF2A  F016         	goto	u5711
 12066  002C50  EF2C  F016         	goto	u5710
 12067  002C54                     u5711:
 12068  002C54  EF72  F015         	goto	l5072
 12069  002C58                     u5710:
 12070  002C58                     l5092:
 12071                           
 12072                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
 12073  002C58  5034               	movf	dtoa@s^0,w,c
 12074  002C5A  1035               	iorwf	(dtoa@s+1)^0,w,c
 12075  002C5C  A4D8               	btfss	status,2,c
 12076  002C5E  EF33  F016         	goto	u5721
 12077  002C62  EF35  F016         	goto	u5720
 12078  002C66                     u5721:
 12079  002C66  EF3D  F016         	goto	l5096
 12080  002C6A                     u5720:
 12081  002C6A  0100               	movlb	0	; () banked
 12082  002C6C  A5F8               	btfss	_flags& (0+255),2,b
 12083  002C6E  EF3B  F016         	goto	u5731
 12084  002C72  EF3D  F016         	goto	u5730
 12085  002C76                     u5731:
 12086  002C76  EF5B  F016         	goto	l5106
 12087  002C7A                     u5730:
 12088  002C7A                     l5096:
 12089                           
 12090                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
 12091  002C7A  063E               	decf	dtoa@i^0,f,c
 12092  002C7C  A0D8               	btfss	status,0,c
 12093  002C7E  063F               	decf	(dtoa@i+1)^0,f,c
 12094  002C80                     
 12095                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
 12096  002C80  5034               	movf	dtoa@s^0,w,c
 12097  002C82  1035               	iorwf	(dtoa@s+1)^0,w,c
 12098  002C84  A4D8               	btfss	status,2,c
 12099  002C86  EF47  F016         	goto	u5741
 12100  002C8A  EF49  F016         	goto	u5740
 12101  002C8E                     u5741:
 12102  002C8E  EF4F  F016         	goto	l5102
 12103  002C92                     u5740:
 12104  002C92  0E00               	movlw	0
 12105  002C94  6E2F               	movwf	(_dtoa$2959+1)^0,c
 12106  002C96  0E2B               	movlw	43
 12107  002C98  6E2E               	movwf	_dtoa$2959^0,c
 12108  002C9A  EF53  F016         	goto	l5104
 12109  002C9E                     l5102:
 12110  002C9E  0E00               	movlw	0
 12111  002CA0  6E2F               	movwf	(_dtoa$2959+1)^0,c
 12112  002CA2  0E2D               	movlw	45
 12113  002CA4  6E2E               	movwf	_dtoa$2959^0,c
 12114  002CA6                     l5104:
 12115  002CA6  0E60               	movlw	low _dbuf
 12116  002CA8  243E               	addwf	dtoa@i^0,w,c
 12117  002CAA  6ED9               	movwf	fsr2l,c
 12118  002CAC  0E02               	movlw	high _dbuf
 12119  002CAE  203F               	addwfc	(dtoa@i+1)^0,w,c
 12120  002CB0  6EDA               	movwf	fsr2h,c
 12121  002CB2  C02E  FFDF         	movff	_dtoa$2959,indf2
 12122  002CB6                     l5106:
 12123                           
 12124                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
 12125  002CB6  C01C  F011         	movff	dtoa@fp,pad@fp
 12126  002CBA  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
 12127  002CBE  0E60               	movlw	low _dbuf
 12128  002CC0  243E               	addwf	dtoa@i^0,w,c
 12129  002CC2  6E13               	movwf	pad@buf^0,c
 12130  002CC4  0E02               	movlw	high _dbuf
 12131  002CC6  203F               	addwfc	(dtoa@i+1)^0,w,c
 12132  002CC8  6E14               	movwf	(pad@buf+1)^0,c
 12133  002CCA  C032  F015         	movff	dtoa@w,pad@p
 12134  002CCE  C033  F016         	movff	dtoa@w+1,pad@p+1
 12135  002CD2  EC1C  F024         	call	_pad	;wreg free
 12136  002CD6  C011  F01C         	movff	?_pad,?_dtoa
 12137  002CDA  C012  F01D         	movff	?_pad+1,?_dtoa+1
 12138  002CDE  0012               	return		;funcret
 12139  002CE0                     __end_of_dtoa:
 12140                           	callstack 0
 12141                           
 12142 ;; *************** function _pad *****************
 12143 ;; Defined at:
 12144 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 12145 ;; Parameters:    Size  Location     Type
 12146 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 12147 ;;		 -> sprintf@f(6), 
 12148 ;;  buf             2   18[COMRAM] PTR unsigned char 
 12149 ;;		 -> dbuf(80), 
 12150 ;;  p               2   20[COMRAM] int 
 12151 ;; Auto vars:     Size  Location     Type
 12152 ;;  w               2   25[COMRAM] int 
 12153 ;;  i               2   23[COMRAM] int 
 12154 ;; Return value:  Size  Location     Type
 12155 ;;                  2   16[COMRAM] int 
 12156 ;; Registers used:
 12157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12158 ;; Tracked objects:
 12159 ;;		On entry : 0/0
 12160 ;;		On exit  : 0/0
 12161 ;;		Unchanged: 0/0
 12162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12163 ;;      Params:         6       0       0       0       0       0       0
 12164 ;;      Locals:         4       0       0       0       0       0       0
 12165 ;;      Temps:          1       0       0       0       0       0       0
 12166 ;;      Totals:        11       0       0       0       0       0       0
 12167 ;;Total ram usage:       11 bytes
 12168 ;; Hardware stack levels used:    1
 12169 ;; Hardware stack levels required when called:    4
 12170 ;; This function calls:
 12171 ;;		_fputc
 12172 ;;		_fputs
 12173 ;;		_strlen
 12174 ;; This function is called by:
 12175 ;;		_dtoa
 12176 ;;		_efgtoa
 12177 ;; This function uses a non-reentrant model
 12178 ;;
 12179                           
 12180                           	psect	text41
 12181  004838                     __ptext41:
 12182                           	callstack 0
 12183  004838                     _pad:
 12184                           	callstack 19
 12185  004838                     
 12186                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 12187  004838  0100               	movlb	0	; () banked
 12188  00483A  A1F8               	btfss	_flags& (0+255),0,b
 12189  00483C  EF22  F024         	goto	u5291
 12190  004840  EF24  F024         	goto	u5290
 12191  004844                     u5291:
 12192  004844  EF2E  F024         	goto	l4946
 12193  004848                     u5290:
 12194  004848                     
 12195                           ; BSR set to: 0
 12196                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 12197  004848  C013  F00A         	movff	pad@buf,fputs@s
 12198  00484C  C014  F00B         	movff	pad@buf+1,fputs@s+1
 12199  004850  C011  F00C         	movff	pad@fp,fputs@fp
 12200  004854  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 12201  004858  ECAC  F029         	call	_fputs	;wreg free
 12202  00485C                     l4946:
 12203                           
 12204                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 12205  00485C  BE16               	btfsc	(pad@p+1)^0,7,c
 12206  00485E  EF33  F024         	goto	u5301
 12207  004862  EF35  F024         	goto	u5300
 12208  004866                     u5301:
 12209  004866  EF3B  F024         	goto	l4950
 12210  00486A                     u5300:
 12211  00486A  C015  F01A         	movff	pad@p,pad@w
 12212  00486E  C016  F01B         	movff	pad@p+1,pad@w+1
 12213  004872  EF3F  F024         	goto	l1423
 12214  004876                     l4950:
 12215  004876  0E00               	movlw	0
 12216  004878  6E1B               	movwf	(pad@w+1)^0,c
 12217  00487A  0E00               	movlw	0
 12218  00487C  6E1A               	movwf	pad@w^0,c
 12219  00487E                     l1423:
 12220                           
 12221                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 12222  00487E  0E00               	movlw	0
 12223  004880  6E19               	movwf	(pad@i+1)^0,c
 12224  004882  0E00               	movlw	0
 12225  004884  6E18               	movwf	pad@i^0,c
 12226                           
 12227                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12228  004886  EF51  F024         	goto	l4956
 12229  00488A                     l4952:
 12230                           
 12231                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 12232  00488A  0E00               	movlw	0
 12233  00488C  6E02               	movwf	(fputc@c+1)^0,c
 12234  00488E  0E20               	movlw	32
 12235  004890  6E01               	movwf	fputc@c^0,c
 12236  004892  C011  F003         	movff	pad@fp,fputc@fp
 12237  004896  C012  F004         	movff	pad@fp+1,fputc@fp+1
 12238  00489A  ECB7  F023         	call	_fputc	;wreg free
 12239  00489E                     
 12240                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
 12241  00489E  4A18               	infsnz	pad@i^0,f,c
 12242  0048A0  2A19               	incf	(pad@i+1)^0,f,c
 12243  0048A2                     l4956:
 12244                           
 12245                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12246  0048A2  501A               	movf	pad@w^0,w,c
 12247  0048A4  5C18               	subwf	pad@i^0,w,c
 12248  0048A6  5019               	movf	(pad@i+1)^0,w,c
 12249  0048A8  0A80               	xorlw	128
 12250  0048AA  6E17               	movwf	??_pad^0,c
 12251  0048AC  501B               	movf	(pad@w+1)^0,w,c
 12252  0048AE  0A80               	xorlw	128
 12253  0048B0  5817               	subwfb	??_pad^0,w,c
 12254  0048B2  A0D8               	btfss	status,0,c
 12255  0048B4  EF5E  F024         	goto	u5311
 12256  0048B8  EF60  F024         	goto	u5310
 12257  0048BC                     u5311:
 12258  0048BC  EF45  F024         	goto	l4952
 12259  0048C0                     u5310:
 12260  0048C0                     
 12261                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 12262  0048C0  0100               	movlb	0	; () banked
 12263  0048C2  B1F8               	btfsc	_flags& (0+255),0,b
 12264  0048C4  EF66  F024         	goto	u5321
 12265  0048C8  EF68  F024         	goto	u5320
 12266  0048CC                     u5321:
 12267  0048CC  EF72  F024         	goto	l4960
 12268  0048D0                     u5320:
 12269  0048D0                     
 12270                           ; BSR set to: 0
 12271                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 12272  0048D0  C013  F00A         	movff	pad@buf,fputs@s
 12273  0048D4  C014  F00B         	movff	pad@buf+1,fputs@s+1
 12274  0048D8  C011  F00C         	movff	pad@fp,fputs@fp
 12275  0048DC  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 12276  0048E0  ECAC  F029         	call	_fputs	;wreg free
 12277  0048E4                     l4960:
 12278                           
 12279                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
 12280  0048E4  C013  F001         	movff	pad@buf,strlen@s
 12281  0048E8  C014  F002         	movff	pad@buf+1,strlen@s+1
 12282  0048EC  EC16  F02B         	call	_strlen	;wreg free
 12283  0048F0  501A               	movf	pad@w^0,w,c
 12284  0048F2  2401               	addwf	?_strlen^0,w,c
 12285  0048F4  6E11               	movwf	?_pad^0,c
 12286  0048F6  501B               	movf	(pad@w+1)^0,w,c
 12287  0048F8  2002               	addwfc	(?_strlen+1)^0,w,c
 12288  0048FA  6E12               	movwf	(?_pad+1)^0,c
 12289  0048FC  0012               	return		;funcret
 12290  0048FE                     __end_of_pad:
 12291                           	callstack 0
 12292                           
 12293 ;; *************** function _strlen *****************
 12294 ;; Defined at:
 12295 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
 12296 ;; Parameters:    Size  Location     Type
 12297 ;;  s               2    0[COMRAM] PTR const unsigned char 
 12298 ;;		 -> dbuf(80), 
 12299 ;; Auto vars:     Size  Location     Type
 12300 ;;  a               2    2[COMRAM] PTR const unsigned char 
 12301 ;;		 -> dbuf(80), 
 12302 ;; Return value:  Size  Location     Type
 12303 ;;                  2    0[COMRAM] unsigned int 
 12304 ;; Registers used:
 12305 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12306 ;; Tracked objects:
 12307 ;;		On entry : 0/0
 12308 ;;		On exit  : 0/0
 12309 ;;		Unchanged: 0/0
 12310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12311 ;;      Params:         2       0       0       0       0       0       0
 12312 ;;      Locals:         2       0       0       0       0       0       0
 12313 ;;      Temps:          0       0       0       0       0       0       0
 12314 ;;      Totals:         4       0       0       0       0       0       0
 12315 ;;Total ram usage:        4 bytes
 12316 ;; Hardware stack levels used:    1
 12317 ;; Hardware stack levels required when called:    1
 12318 ;; This function calls:
 12319 ;;		Nothing
 12320 ;; This function is called by:
 12321 ;;		_pad
 12322 ;; This function uses a non-reentrant model
 12323 ;;
 12324                           
 12325                           	psect	text42
 12326  00562C                     __ptext42:
 12327                           	callstack 0
 12328  00562C                     _strlen:
 12329                           	callstack 21
 12330  00562C  C001  F003         	movff	strlen@s,strlen@a
 12331  005630  C002  F004         	movff	strlen@s+1,strlen@a+1
 12332  005634  EF1E  F02B         	goto	l4402
 12333  005638                     l4400:
 12334  005638  4A01               	infsnz	strlen@s^0,f,c
 12335  00563A  2A02               	incf	(strlen@s+1)^0,f,c
 12336  00563C                     l4402:
 12337  00563C  C001  FFD9         	movff	strlen@s,fsr2l
 12338  005640  C002  FFDA         	movff	strlen@s+1,fsr2h
 12339  005644  50DF               	movf	indf2,w,c
 12340  005646  A4D8               	btfss	status,2,c
 12341  005648  EF28  F02B         	goto	u4431
 12342  00564C  EF2A  F02B         	goto	u4430
 12343  005650                     u4431:
 12344  005650  EF1C  F02B         	goto	l4400
 12345  005654                     u4430:
 12346  005654  5003               	movf	strlen@a^0,w,c
 12347  005656  5C01               	subwf	strlen@s^0,w,c
 12348  005658  6E01               	movwf	?_strlen^0,c
 12349  00565A  5004               	movf	(strlen@a+1)^0,w,c
 12350  00565C  5802               	subwfb	(strlen@s+1)^0,w,c
 12351  00565E  6E02               	movwf	(?_strlen+1)^0,c
 12352  005660  0012               	return		;funcret
 12353  005662                     __end_of_strlen:
 12354                           	callstack 0
 12355                           
 12356 ;; *************** function _fputs *****************
 12357 ;; Defined at:
 12358 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
 12359 ;; Parameters:    Size  Location     Type
 12360 ;;  s               2    9[COMRAM] PTR const unsigned char 
 12361 ;;		 -> dbuf(80), 
 12362 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 12363 ;;		 -> sprintf@f(6), 
 12364 ;; Auto vars:     Size  Location     Type
 12365 ;;  i               2   14[COMRAM] int 
 12366 ;;  c               1   13[COMRAM] unsigned char 
 12367 ;; Return value:  Size  Location     Type
 12368 ;;                  2    9[COMRAM] int 
 12369 ;; Registers used:
 12370 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12371 ;; Tracked objects:
 12372 ;;		On entry : 0/0
 12373 ;;		On exit  : 0/0
 12374 ;;		Unchanged: 0/0
 12375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12376 ;;      Params:         4       0       0       0       0       0       0
 12377 ;;      Locals:         3       0       0       0       0       0       0
 12378 ;;      Temps:          0       0       0       0       0       0       0
 12379 ;;      Totals:         7       0       0       0       0       0       0
 12380 ;;Total ram usage:        7 bytes
 12381 ;; Hardware stack levels used:    1
 12382 ;; Hardware stack levels required when called:    3
 12383 ;; This function calls:
 12384 ;;		_fputc
 12385 ;; This function is called by:
 12386 ;;		_pad
 12387 ;; This function uses a non-reentrant model
 12388 ;;
 12389                           
 12390                           	psect	text43
 12391  005358                     __ptext43:
 12392                           	callstack 0
 12393  005358                     _fputs:
 12394                           	callstack 19
 12395  005358  0E00               	movlw	0
 12396  00535A  6E10               	movwf	(fputs@i+1)^0,c
 12397  00535C  0E00               	movlw	0
 12398  00535E  6E0F               	movwf	fputs@i^0,c
 12399  005360  EFBD  F029         	goto	l4396
 12400  005364                     l4392:
 12401  005364  C00E  F001         	movff	fputs@c,fputc@c
 12402  005368  6A02               	clrf	(fputc@c+1)^0,c
 12403  00536A  C00C  F003         	movff	fputs@fp,fputc@fp
 12404  00536E  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
 12405  005372  ECB7  F023         	call	_fputc	;wreg free
 12406  005376  4A0F               	infsnz	fputs@i^0,f,c
 12407  005378  2A10               	incf	(fputs@i+1)^0,f,c
 12408  00537A                     l4396:
 12409  00537A  500F               	movf	fputs@i^0,w,c
 12410  00537C  240A               	addwf	fputs@s^0,w,c
 12411  00537E  6ED9               	movwf	fsr2l,c
 12412  005380  5010               	movf	(fputs@i+1)^0,w,c
 12413  005382  200B               	addwfc	(fputs@s+1)^0,w,c
 12414  005384  6EDA               	movwf	fsr2h,c
 12415  005386  50DF               	movf	indf2,w,c
 12416  005388  6E0E               	movwf	fputs@c^0,c
 12417  00538A  500E               	movf	fputs@c^0,w,c
 12418  00538C  A4D8               	btfss	status,2,c
 12419  00538E  EFCB  F029         	goto	u4421
 12420  005392  EFCD  F029         	goto	u4420
 12421  005396                     u4421:
 12422  005396  EFB2  F029         	goto	l4392
 12423  00539A                     u4420:
 12424  00539A  0012               	return		;funcret
 12425  00539C                     __end_of_fputs:
 12426                           	callstack 0
 12427                           
 12428 ;; *************** function _fputc *****************
 12429 ;; Defined at:
 12430 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
 12431 ;; Parameters:    Size  Location     Type
 12432 ;;  c               2    0[COMRAM] int 
 12433 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 12434 ;;		 -> sprintf@f(6), 
 12435 ;; Auto vars:     Size  Location     Type
 12436 ;;		None
 12437 ;; Return value:  Size  Location     Type
 12438 ;;                  2    0[COMRAM] int 
 12439 ;; Registers used:
 12440 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12441 ;; Tracked objects:
 12442 ;;		On entry : 0/0
 12443 ;;		On exit  : 0/0
 12444 ;;		Unchanged: 0/0
 12445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12446 ;;      Params:         4       0       0       0       0       0       0
 12447 ;;      Locals:         0       0       0       0       0       0       0
 12448 ;;      Temps:          5       0       0       0       0       0       0
 12449 ;;      Totals:         9       0       0       0       0       0       0
 12450 ;;Total ram usage:        9 bytes
 12451 ;; Hardware stack levels used:    1
 12452 ;; Hardware stack levels required when called:    2
 12453 ;; This function calls:
 12454 ;;		_putch
 12455 ;; This function is called by:
 12456 ;;		_pad
 12457 ;;		_vfpfcnvrt
 12458 ;;		_fputs
 12459 ;; This function uses a non-reentrant model
 12460 ;;
 12461                           
 12462                           	psect	text44
 12463  00476E                     __ptext44:
 12464                           	callstack 0
 12465  00476E                     _fputc:
 12466                           	callstack 22
 12467  00476E  5003               	movf	fputc@fp^0,w,c
 12468  004770  1004               	iorwf	(fputc@fp+1)^0,w,c
 12469  004772  B4D8               	btfsc	status,2,c
 12470  004774  EFBE  F023         	goto	u3991
 12471  004778  EFC0  F023         	goto	u3990
 12472  00477C                     u3991:
 12473  00477C  EFC9  F023         	goto	l4178
 12474  004780                     u3990:
 12475  004780  5003               	movf	fputc@fp^0,w,c
 12476  004782  1004               	iorwf	(fputc@fp+1)^0,w,c
 12477  004784  A4D8               	btfss	status,2,c
 12478  004786  EFC7  F023         	goto	u4001
 12479  00478A  EFC9  F023         	goto	u4000
 12480  00478E                     u4001:
 12481  00478E  EFCE  F023         	goto	l4180
 12482  004792                     u4000:
 12483  004792                     l4178:
 12484  004792  5001               	movf	fputc@c^0,w,c
 12485  004794  ECEE  F02B         	call	_putch
 12486  004798  EF1B  F024         	goto	l1683
 12487  00479C                     l4180:
 12488  00479C  EE20 F004          	lfsr	2,4
 12489  0047A0  5003               	movf	fputc@fp^0,w,c
 12490  0047A2  26D9               	addwf	fsr2l,f,c
 12491  0047A4  5004               	movf	(fputc@fp+1)^0,w,c
 12492  0047A6  22DA               	addwfc	fsr2h,f,c
 12493  0047A8  50DE               	movf	postinc2,w,c
 12494  0047AA  10DE               	iorwf	postinc2,w,c
 12495  0047AC  B4D8               	btfsc	status,2,c
 12496  0047AE  EFDB  F023         	goto	u4011
 12497  0047B2  EFDD  F023         	goto	u4010
 12498  0047B6                     u4011:
 12499  0047B6  EFF8  F023         	goto	l4184
 12500  0047BA                     u4010:
 12501  0047BA  EE20 F004          	lfsr	2,4
 12502  0047BE  5003               	movf	fputc@fp^0,w,c
 12503  0047C0  26D9               	addwf	fsr2l,f,c
 12504  0047C2  5004               	movf	(fputc@fp+1)^0,w,c
 12505  0047C4  22DA               	addwfc	fsr2h,f,c
 12506  0047C6  EE10 F002          	lfsr	1,2
 12507  0047CA  5003               	movf	fputc@fp^0,w,c
 12508  0047CC  26E1               	addwf	fsr1l,f,c
 12509  0047CE  5004               	movf	(fputc@fp+1)^0,w,c
 12510  0047D0  22E2               	addwfc	fsr1h,f,c
 12511  0047D2  50DE               	movf	postinc2,w,c
 12512  0047D4  5CE6               	subwf	postinc1,w,c
 12513  0047D6  50E6               	movf	postinc1,w,c
 12514  0047D8  0A80               	xorlw	128
 12515  0047DA  6E09               	movwf	(??_fputc+4)^0,c
 12516  0047DC  50DE               	movf	postinc2,w,c
 12517  0047DE  0A80               	xorlw	128
 12518  0047E0  5809               	subwfb	(??_fputc+4)^0,w,c
 12519  0047E2  B0D8               	btfsc	status,0,c
 12520  0047E4  EFF6  F023         	goto	u4021
 12521  0047E8  EFF8  F023         	goto	u4020
 12522  0047EC                     u4021:
 12523  0047EC  EF1B  F024         	goto	l1683
 12524  0047F0                     u4020:
 12525  0047F0                     l4184:
 12526  0047F0  EE20 F002          	lfsr	2,2
 12527  0047F4  5003               	movf	fputc@fp^0,w,c
 12528  0047F6  26D9               	addwf	fsr2l,f,c
 12529  0047F8  5004               	movf	(fputc@fp+1)^0,w,c
 12530  0047FA  22DA               	addwfc	fsr2h,f,c
 12531  0047FC  CFDE F005          	movff	postinc2,??_fputc
 12532  004800  CFDD F006          	movff	postdec2,??_fputc+1
 12533  004804  C003  FFD9         	movff	fputc@fp,fsr2l
 12534  004808  C004  FFDA         	movff	fputc@fp+1,fsr2h
 12535  00480C  CFDE F007          	movff	postinc2,??_fputc+2
 12536  004810  CFDD F008          	movff	postdec2,??_fputc+3
 12537  004814  5005               	movf	??_fputc^0,w,c
 12538  004816  2407               	addwf	(??_fputc+2)^0,w,c
 12539  004818  6ED9               	movwf	fsr2l,c
 12540  00481A  5006               	movf	(??_fputc+1)^0,w,c
 12541  00481C  2008               	addwfc	(??_fputc+3)^0,w,c
 12542  00481E  6EDA               	movwf	fsr2h,c
 12543  004820  C001  FFDF         	movff	fputc@c,indf2
 12544  004824  EE20 F002          	lfsr	2,2
 12545  004828  5003               	movf	fputc@fp^0,w,c
 12546  00482A  26D9               	addwf	fsr2l,f,c
 12547  00482C  5004               	movf	(fputc@fp+1)^0,w,c
 12548  00482E  22DA               	addwfc	fsr2h,f,c
 12549  004830  2ADE               	incf	postinc2,f,c
 12550  004832  0E00               	movlw	0
 12551  004834  22DD               	addwfc	postdec2,f,c
 12552  004836                     l1683:
 12553  004836  0012               	return		;funcret
 12554  004838                     __end_of_fputc:
 12555                           	callstack 0
 12556                           
 12557 ;; *************** function _putch *****************
 12558 ;; Defined at:
 12559 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
 12560 ;; Parameters:    Size  Location     Type
 12561 ;;  c               1    wreg     unsigned char 
 12562 ;; Auto vars:     Size  Location     Type
 12563 ;;  c               1    0[COMRAM] unsigned char 
 12564 ;; Return value:  Size  Location     Type
 12565 ;;                  1    wreg      void 
 12566 ;; Registers used:
 12567 ;;		wreg
 12568 ;; Tracked objects:
 12569 ;;		On entry : 0/0
 12570 ;;		On exit  : 0/0
 12571 ;;		Unchanged: 0/0
 12572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12573 ;;      Params:         0       0       0       0       0       0       0
 12574 ;;      Locals:         0       0       0       0       0       0       0
 12575 ;;      Temps:          0       0       0       0       0       0       0
 12576 ;;      Totals:         0       0       0       0       0       0       0
 12577 ;;Total ram usage:        0 bytes
 12578 ;; Hardware stack levels used:    1
 12579 ;; Hardware stack levels required when called:    1
 12580 ;; This function calls:
 12581 ;;		Nothing
 12582 ;; This function is called by:
 12583 ;;		_fputc
 12584 ;; This function uses a non-reentrant model
 12585 ;;
 12586                           
 12587                           	psect	text45
 12588  0057DC                     __ptext45:
 12589                           	callstack 0
 12590  0057DC                     _putch:
 12591                           	callstack 22
 12592  0057DC  0012               	return		;funcret
 12593  0057DE                     __end_of_putch:
 12594                           	callstack 0
 12595                           
 12596 ;; *************** function _abs *****************
 12597 ;; Defined at:
 12598 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
 12599 ;; Parameters:    Size  Location     Type
 12600 ;;  a               2   18[COMRAM] int 
 12601 ;; Auto vars:     Size  Location     Type
 12602 ;;		None
 12603 ;; Return value:  Size  Location     Type
 12604 ;;                  2   18[COMRAM] int 
 12605 ;; Registers used:
 12606 ;;		wreg, status,2, status,0
 12607 ;; Tracked objects:
 12608 ;;		On entry : 0/0
 12609 ;;		On exit  : 0/0
 12610 ;;		Unchanged: 0/0
 12611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12612 ;;      Params:         2       0       0       0       0       0       0
 12613 ;;      Locals:         0       0       0       0       0       0       0
 12614 ;;      Temps:          2       0       0       0       0       0       0
 12615 ;;      Totals:         4       0       0       0       0       0       0
 12616 ;;Total ram usage:        4 bytes
 12617 ;; Hardware stack levels used:    1
 12618 ;; Hardware stack levels required when called:    1
 12619 ;; This function calls:
 12620 ;;		Nothing
 12621 ;; This function is called by:
 12622 ;;		_dtoa
 12623 ;; This function uses a non-reentrant model
 12624 ;;
 12625                           
 12626                           	psect	text46
 12627  00541E                     __ptext46:
 12628                           	callstack 0
 12629  00541E                     _abs:
 12630                           	callstack 22
 12631  00541E  BE14               	btfsc	(abs@a+1)^0,7,c
 12632  005420  EF1C  F02A         	goto	u5330
 12633  005424  5014               	movf	(abs@a+1)^0,w,c
 12634  005426  E106               	bnz	u5331
 12635  005428  0413               	decf	abs@a^0,w,c
 12636  00542A  B0D8               	btfsc	status,0,c
 12637  00542C  EF1A  F02A         	goto	u5331
 12638  005430  EF1C  F02A         	goto	u5330
 12639  005434                     u5331:
 12640  005434  EF2A  F02A         	goto	l1604
 12641  005438                     u5330:
 12642  005438  C013  F015         	movff	abs@a,??_abs
 12643  00543C  C014  F016         	movff	abs@a+1,??_abs+1
 12644  005440  1E15               	comf	??_abs^0,f,c
 12645  005442  1E16               	comf	(??_abs+1)^0,f,c
 12646  005444  4A15               	infsnz	??_abs^0,f,c
 12647  005446  2A16               	incf	(??_abs+1)^0,f,c
 12648  005448  C015  F013         	movff	??_abs,?_abs
 12649  00544C  C016  F014         	movff	??_abs+1,?_abs+1
 12650  005450  EF2E  F02A         	goto	l1607
 12651  005454                     l1604:
 12652  005454  C013  F013         	movff	abs@a,?_abs
 12653  005458  C014  F014         	movff	abs@a+1,?_abs+1
 12654  00545C                     l1607:
 12655  00545C  0012               	return		;funcret
 12656  00545E                     __end_of_abs:
 12657                           	callstack 0
 12658                           
 12659 ;; *************** function ___aomod *****************
 12660 ;; Defined at:
 12661 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
 12662 ;; Parameters:    Size  Location     Type
 12663 ;;  dividend        8    0[COMRAM] long long 
 12664 ;;  divisor         8    8[COMRAM] long long 
 12665 ;; Auto vars:     Size  Location     Type
 12666 ;;  sign            1   17[COMRAM] unsigned char 
 12667 ;;  counter         1   16[COMRAM] unsigned char 
 12668 ;; Return value:  Size  Location     Type
 12669 ;;                  8    0[COMRAM] long long 
 12670 ;; Registers used:
 12671 ;;		wreg, status,2, status,0
 12672 ;; Tracked objects:
 12673 ;;		On entry : 0/0
 12674 ;;		On exit  : 0/0
 12675 ;;		Unchanged: 0/0
 12676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12677 ;;      Params:        16       0       0       0       0       0       0
 12678 ;;      Locals:         2       0       0       0       0       0       0
 12679 ;;      Temps:          0       0       0       0       0       0       0
 12680 ;;      Totals:        18       0       0       0       0       0       0
 12681 ;;Total ram usage:       18 bytes
 12682 ;; Hardware stack levels used:    1
 12683 ;; Hardware stack levels required when called:    1
 12684 ;; This function calls:
 12685 ;;		Nothing
 12686 ;; This function is called by:
 12687 ;;		_dtoa
 12688 ;; This function uses a non-reentrant model
 12689 ;;
 12690                           
 12691                           	psect	text47
 12692  003BC0                     __ptext47:
 12693                           	callstack 0
 12694  003BC0                     ___aomod:
 12695                           	callstack 22
 12696  003BC0  0E00               	movlw	0
 12697  003BC2  6E12               	movwf	___aomod@sign^0,c
 12698  003BC4  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 12699  003BC6  EFE9  F01D         	goto	u4530
 12700  003BCA  EFE7  F01D         	goto	u4531
 12701  003BCE                     u4531:
 12702  003BCE  EFFB  F01D         	goto	l4470
 12703  003BD2                     u4530:
 12704  003BD2  1E08               	comf	(___aomod@dividend+7)^0,f,c
 12705  003BD4  1E07               	comf	(___aomod@dividend+6)^0,f,c
 12706  003BD6  1E06               	comf	(___aomod@dividend+5)^0,f,c
 12707  003BD8  1E05               	comf	(___aomod@dividend+4)^0,f,c
 12708  003BDA  1E04               	comf	(___aomod@dividend+3)^0,f,c
 12709  003BDC  1E03               	comf	(___aomod@dividend+2)^0,f,c
 12710  003BDE  1E02               	comf	(___aomod@dividend+1)^0,f,c
 12711  003BE0  6C01               	negf	___aomod@dividend^0,c
 12712  003BE2  0E00               	movlw	0
 12713  003BE4  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 12714  003BE6  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 12715  003BE8  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 12716  003BEA  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 12717  003BEC  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 12718  003BEE  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 12719  003BF0  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 12720  003BF2  0E01               	movlw	1
 12721  003BF4  6E12               	movwf	___aomod@sign^0,c
 12722  003BF6                     l4470:
 12723  003BF6  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 12724  003BF8  EF02  F01E         	goto	u4540
 12725  003BFC  EF00  F01E         	goto	u4541
 12726  003C00                     u4541:
 12727  003C00  EF12  F01E         	goto	l4474
 12728  003C04                     u4540:
 12729  003C04  1E10               	comf	(___aomod@divisor+7)^0,f,c
 12730  003C06  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 12731  003C08  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 12732  003C0A  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 12733  003C0C  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 12734  003C0E  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 12735  003C10  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 12736  003C12  6C09               	negf	___aomod@divisor^0,c
 12737  003C14  0E00               	movlw	0
 12738  003C16  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 12739  003C18  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 12740  003C1A  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 12741  003C1C  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 12742  003C1E  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 12743  003C20  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 12744  003C22  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 12745  003C24                     l4474:
 12746  003C24  5009               	movf	___aomod@divisor^0,w,c
 12747  003C26  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 12748  003C28  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 12749  003C2A  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 12750  003C2C  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 12751  003C2E  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 12752  003C30  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 12753  003C32  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 12754  003C34  B4D8               	btfsc	status,2,c
 12755  003C36  EF1F  F01E         	goto	u4551
 12756  003C3A  EF21  F01E         	goto	u4550
 12757  003C3E                     u4551:
 12758  003C3E  EF69  F01E         	goto	l4490
 12759  003C42                     u4550:
 12760  003C42  0E01               	movlw	1
 12761  003C44  6E11               	movwf	___aomod@counter^0,c
 12762  003C46  EF2F  F01E         	goto	l4480
 12763  003C4A                     l4478:
 12764  003C4A  90D8               	bcf	status,0,c
 12765  003C4C  3609               	rlcf	___aomod@divisor^0,f,c
 12766  003C4E  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 12767  003C50  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 12768  003C52  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 12769  003C54  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 12770  003C56  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 12771  003C58  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 12772  003C5A  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 12773  003C5C  2A11               	incf	___aomod@counter^0,f,c
 12774  003C5E                     l4480:
 12775  003C5E  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 12776  003C60  EF34  F01E         	goto	u4561
 12777  003C64  EF36  F01E         	goto	u4560
 12778  003C68                     u4561:
 12779  003C68  EF25  F01E         	goto	l4478
 12780  003C6C                     u4560:
 12781  003C6C                     l4482:
 12782  003C6C  5009               	movf	___aomod@divisor^0,w,c
 12783  003C6E  5C01               	subwf	___aomod@dividend^0,w,c
 12784  003C70  500A               	movf	(___aomod@divisor+1)^0,w,c
 12785  003C72  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 12786  003C74  500B               	movf	(___aomod@divisor+2)^0,w,c
 12787  003C76  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 12788  003C78  500C               	movf	(___aomod@divisor+3)^0,w,c
 12789  003C7A  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 12790  003C7C  500D               	movf	(___aomod@divisor+4)^0,w,c
 12791  003C7E  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 12792  003C80  500E               	movf	(___aomod@divisor+5)^0,w,c
 12793  003C82  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 12794  003C84  500F               	movf	(___aomod@divisor+6)^0,w,c
 12795  003C86  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 12796  003C88  5010               	movf	(___aomod@divisor+7)^0,w,c
 12797  003C8A  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 12798  003C8C  A0D8               	btfss	status,0,c
 12799  003C8E  EF4B  F01E         	goto	u4571
 12800  003C92  EF4D  F01E         	goto	u4570
 12801  003C96                     u4571:
 12802  003C96  EF5D  F01E         	goto	l4486
 12803  003C9A                     u4570:
 12804  003C9A  5009               	movf	___aomod@divisor^0,w,c
 12805  003C9C  5E01               	subwf	___aomod@dividend^0,f,c
 12806  003C9E  500A               	movf	(___aomod@divisor+1)^0,w,c
 12807  003CA0  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 12808  003CA2  500B               	movf	(___aomod@divisor+2)^0,w,c
 12809  003CA4  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 12810  003CA6  500C               	movf	(___aomod@divisor+3)^0,w,c
 12811  003CA8  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 12812  003CAA  500D               	movf	(___aomod@divisor+4)^0,w,c
 12813  003CAC  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 12814  003CAE  500E               	movf	(___aomod@divisor+5)^0,w,c
 12815  003CB0  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 12816  003CB2  500F               	movf	(___aomod@divisor+6)^0,w,c
 12817  003CB4  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 12818  003CB6  5010               	movf	(___aomod@divisor+7)^0,w,c
 12819  003CB8  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 12820  003CBA                     l4486:
 12821  003CBA  90D8               	bcf	status,0,c
 12822  003CBC  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 12823  003CBE  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 12824  003CC0  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 12825  003CC2  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 12826  003CC4  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 12827  003CC6  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 12828  003CC8  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 12829  003CCA  3209               	rrcf	___aomod@divisor^0,f,c
 12830  003CCC  2E11               	decfsz	___aomod@counter^0,f,c
 12831  003CCE  EF36  F01E         	goto	l4482
 12832  003CD2                     l4490:
 12833  003CD2  5012               	movf	___aomod@sign^0,w,c
 12834  003CD4  B4D8               	btfsc	status,2,c
 12835  003CD6  EF6F  F01E         	goto	u4581
 12836  003CDA  EF71  F01E         	goto	u4580
 12837  003CDE                     u4581:
 12838  003CDE  EF81  F01E         	goto	l4494
 12839  003CE2                     u4580:
 12840  003CE2  1E08               	comf	(___aomod@dividend+7)^0,f,c
 12841  003CE4  1E07               	comf	(___aomod@dividend+6)^0,f,c
 12842  003CE6  1E06               	comf	(___aomod@dividend+5)^0,f,c
 12843  003CE8  1E05               	comf	(___aomod@dividend+4)^0,f,c
 12844  003CEA  1E04               	comf	(___aomod@dividend+3)^0,f,c
 12845  003CEC  1E03               	comf	(___aomod@dividend+2)^0,f,c
 12846  003CEE  1E02               	comf	(___aomod@dividend+1)^0,f,c
 12847  003CF0  6C01               	negf	___aomod@dividend^0,c
 12848  003CF2  0E00               	movlw	0
 12849  003CF4  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 12850  003CF6  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 12851  003CF8  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 12852  003CFA  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 12853  003CFC  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 12854  003CFE  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 12855  003D00  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 12856  003D02                     l4494:
 12857  003D02  C001  F001         	movff	___aomod@dividend,?___aomod
 12858  003D06  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 12859  003D0A  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 12860  003D0E  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 12861  003D12  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 12862  003D16  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 12863  003D1A  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 12864  003D1E  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 12865  003D22  0012               	return		;funcret
 12866  003D24                     __end_of___aomod:
 12867                           	callstack 0
 12868                           
 12869 ;; *************** function ___aodiv *****************
 12870 ;; Defined at:
 12871 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
 12872 ;; Parameters:    Size  Location     Type
 12873 ;;  dividend        8    0[COMRAM] long long 
 12874 ;;  divisor         8    8[COMRAM] long long 
 12875 ;; Auto vars:     Size  Location     Type
 12876 ;;  quotient        8   18[COMRAM] long long 
 12877 ;;  sign            1   17[COMRAM] unsigned char 
 12878 ;;  counter         1   16[COMRAM] unsigned char 
 12879 ;; Return value:  Size  Location     Type
 12880 ;;                  8    0[COMRAM] long long 
 12881 ;; Registers used:
 12882 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12883 ;; Tracked objects:
 12884 ;;		On entry : 0/0
 12885 ;;		On exit  : 0/0
 12886 ;;		Unchanged: 0/0
 12887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12888 ;;      Params:        16       0       0       0       0       0       0
 12889 ;;      Locals:        10       0       0       0       0       0       0
 12890 ;;      Temps:          0       0       0       0       0       0       0
 12891 ;;      Totals:        26       0       0       0       0       0       0
 12892 ;;Total ram usage:       26 bytes
 12893 ;; Hardware stack levels used:    1
 12894 ;; Hardware stack levels required when called:    1
 12895 ;; This function calls:
 12896 ;;		Nothing
 12897 ;; This function is called by:
 12898 ;;		_dtoa
 12899 ;; This function uses a non-reentrant model
 12900 ;;
 12901                           
 12902                           	psect	text48
 12903  003A38                     __ptext48:
 12904                           	callstack 0
 12905  003A38                     ___aodiv:
 12906                           	callstack 22
 12907  003A38  0E00               	movlw	0
 12908  003A3A  6E12               	movwf	___aodiv@sign^0,c
 12909  003A3C  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 12910  003A3E  EF25  F01D         	goto	u4460
 12911  003A42  EF23  F01D         	goto	u4461
 12912  003A46                     u4461:
 12913  003A46  EF37  F01D         	goto	l4426
 12914  003A4A                     u4460:
 12915  003A4A  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 12916  003A4C  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 12917  003A4E  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 12918  003A50  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 12919  003A52  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 12920  003A54  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 12921  003A56  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 12922  003A58  6C09               	negf	___aodiv@divisor^0,c
 12923  003A5A  0E00               	movlw	0
 12924  003A5C  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 12925  003A5E  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 12926  003A60  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 12927  003A62  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 12928  003A64  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 12929  003A66  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 12930  003A68  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 12931  003A6A  0E01               	movlw	1
 12932  003A6C  6E12               	movwf	___aodiv@sign^0,c
 12933  003A6E                     l4426:
 12934  003A6E  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 12935  003A70  EF3E  F01D         	goto	u4470
 12936  003A74  EF3C  F01D         	goto	u4471
 12937  003A78                     u4471:
 12938  003A78  EF50  F01D         	goto	l4432
 12939  003A7C                     u4470:
 12940  003A7C  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 12941  003A7E  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 12942  003A80  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 12943  003A82  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 12944  003A84  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 12945  003A86  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 12946  003A88  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 12947  003A8A  6C01               	negf	___aodiv@dividend^0,c
 12948  003A8C  0E00               	movlw	0
 12949  003A8E  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 12950  003A90  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 12951  003A92  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 12952  003A94  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 12953  003A96  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 12954  003A98  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 12955  003A9A  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 12956  003A9C  0E01               	movlw	1
 12957  003A9E  1A12               	xorwf	___aodiv@sign^0,f,c
 12958  003AA0                     l4432:
 12959  003AA0  EE20  F013         	lfsr	2,___aodiv@quotient
 12960  003AA4  0E07               	movlw	7
 12961  003AA6                     u4481:
 12962  003AA6  6ADE               	clrf	postinc2,c
 12963  003AA8  06E8               	decf	wreg,f,c
 12964  003AAA  E2FD               	bc	u4481
 12965  003AAC  5009               	movf	___aodiv@divisor^0,w,c
 12966  003AAE  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 12967  003AB0  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 12968  003AB2  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 12969  003AB4  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 12970  003AB6  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 12971  003AB8  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 12972  003ABA  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 12973  003ABC  B4D8               	btfsc	status,2,c
 12974  003ABE  EF63  F01D         	goto	u4491
 12975  003AC2  EF65  F01D         	goto	u4490
 12976  003AC6                     u4491:
 12977  003AC6  EFB7  F01D         	goto	l4454
 12978  003ACA                     u4490:
 12979  003ACA  0E01               	movlw	1
 12980  003ACC  6E11               	movwf	___aodiv@counter^0,c
 12981  003ACE  EF73  F01D         	goto	l4440
 12982  003AD2                     l4438:
 12983  003AD2  90D8               	bcf	status,0,c
 12984  003AD4  3609               	rlcf	___aodiv@divisor^0,f,c
 12985  003AD6  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 12986  003AD8  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 12987  003ADA  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 12988  003ADC  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 12989  003ADE  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 12990  003AE0  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 12991  003AE2  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 12992  003AE4  2A11               	incf	___aodiv@counter^0,f,c
 12993  003AE6                     l4440:
 12994  003AE6  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 12995  003AE8  EF78  F01D         	goto	u4501
 12996  003AEC  EF7A  F01D         	goto	u4500
 12997  003AF0                     u4501:
 12998  003AF0  EF69  F01D         	goto	l4438
 12999  003AF4                     u4500:
 13000  003AF4                     l4442:
 13001  003AF4  90D8               	bcf	status,0,c
 13002  003AF6  3613               	rlcf	___aodiv@quotient^0,f,c
 13003  003AF8  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 13004  003AFA  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 13005  003AFC  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 13006  003AFE  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 13007  003B00  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 13008  003B02  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 13009  003B04  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 13010  003B06  5009               	movf	___aodiv@divisor^0,w,c
 13011  003B08  5C01               	subwf	___aodiv@dividend^0,w,c
 13012  003B0A  500A               	movf	(___aodiv@divisor+1)^0,w,c
 13013  003B0C  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 13014  003B0E  500B               	movf	(___aodiv@divisor+2)^0,w,c
 13015  003B10  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 13016  003B12  500C               	movf	(___aodiv@divisor+3)^0,w,c
 13017  003B14  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 13018  003B16  500D               	movf	(___aodiv@divisor+4)^0,w,c
 13019  003B18  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 13020  003B1A  500E               	movf	(___aodiv@divisor+5)^0,w,c
 13021  003B1C  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 13022  003B1E  500F               	movf	(___aodiv@divisor+6)^0,w,c
 13023  003B20  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 13024  003B22  5010               	movf	(___aodiv@divisor+7)^0,w,c
 13025  003B24  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 13026  003B26  A0D8               	btfss	status,0,c
 13027  003B28  EF98  F01D         	goto	u4511
 13028  003B2C  EF9A  F01D         	goto	u4510
 13029  003B30                     u4511:
 13030  003B30  EFAB  F01D         	goto	l4450
 13031  003B34                     u4510:
 13032  003B34  5009               	movf	___aodiv@divisor^0,w,c
 13033  003B36  5E01               	subwf	___aodiv@dividend^0,f,c
 13034  003B38  500A               	movf	(___aodiv@divisor+1)^0,w,c
 13035  003B3A  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 13036  003B3C  500B               	movf	(___aodiv@divisor+2)^0,w,c
 13037  003B3E  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 13038  003B40  500C               	movf	(___aodiv@divisor+3)^0,w,c
 13039  003B42  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 13040  003B44  500D               	movf	(___aodiv@divisor+4)^0,w,c
 13041  003B46  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 13042  003B48  500E               	movf	(___aodiv@divisor+5)^0,w,c
 13043  003B4A  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 13044  003B4C  500F               	movf	(___aodiv@divisor+6)^0,w,c
 13045  003B4E  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 13046  003B50  5010               	movf	(___aodiv@divisor+7)^0,w,c
 13047  003B52  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 13048  003B54  8013               	bsf	___aodiv@quotient^0,0,c
 13049  003B56                     l4450:
 13050  003B56  90D8               	bcf	status,0,c
 13051  003B58  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 13052  003B5A  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 13053  003B5C  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 13054  003B5E  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 13055  003B60  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 13056  003B62  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 13057  003B64  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 13058  003B66  3209               	rrcf	___aodiv@divisor^0,f,c
 13059  003B68  2E11               	decfsz	___aodiv@counter^0,f,c
 13060  003B6A  EF7A  F01D         	goto	l4442
 13061  003B6E                     l4454:
 13062  003B6E  5012               	movf	___aodiv@sign^0,w,c
 13063  003B70  B4D8               	btfsc	status,2,c
 13064  003B72  EFBD  F01D         	goto	u4521
 13065  003B76  EFBF  F01D         	goto	u4520
 13066  003B7A                     u4521:
 13067  003B7A  EFCF  F01D         	goto	l4458
 13068  003B7E                     u4520:
 13069  003B7E  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 13070  003B80  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 13071  003B82  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 13072  003B84  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 13073  003B86  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 13074  003B88  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 13075  003B8A  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 13076  003B8C  6C13               	negf	___aodiv@quotient^0,c
 13077  003B8E  0E00               	movlw	0
 13078  003B90  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 13079  003B92  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 13080  003B94  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 13081  003B96  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 13082  003B98  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 13083  003B9A  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 13084  003B9C  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 13085  003B9E                     l4458:
 13086  003B9E  C013  F001         	movff	___aodiv@quotient,?___aodiv
 13087  003BA2  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 13088  003BA6  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 13089  003BAA  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 13090  003BAE  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 13091  003BB2  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 13092  003BB6  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 13093  003BBA  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 13094  003BBE  0012               	return		;funcret
 13095  003BC0                     __end_of___aodiv:
 13096                           	callstack 0
 13097                           
 13098 ;; *************** function _atoi *****************
 13099 ;; Defined at:
 13100 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
 13101 ;; Parameters:    Size  Location     Type
 13102 ;;  s               2    7[COMRAM] PTR const unsigned char 
 13103 ;;		 -> STR_18(18), STR_16(16), STR_14(18), STR_12(13), 
 13104 ;;		 -> STR_10(14), STR_8(16), STR_6(16), STR_4(15), 
 13105 ;; Auto vars:     Size  Location     Type
 13106 ;;  n               2   20[COMRAM] int 
 13107 ;;  neg             2   13[COMRAM] int 
 13108 ;; Return value:  Size  Location     Type
 13109 ;;                  2    7[COMRAM] int 
 13110 ;; Registers used:
 13111 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13112 ;; Tracked objects:
 13113 ;;		On entry : 0/0
 13114 ;;		On exit  : 0/0
 13115 ;;		Unchanged: 0/0
 13116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13117 ;;      Params:         2       0       0       0       0       0       0
 13118 ;;      Locals:         9       0       0       0       0       0       0
 13119 ;;      Temps:          4       0       0       0       0       0       0
 13120 ;;      Totals:        15       0       0       0       0       0       0
 13121 ;;Total ram usage:       15 bytes
 13122 ;; Hardware stack levels used:    1
 13123 ;; Hardware stack levels required when called:    2
 13124 ;; This function calls:
 13125 ;;		___wmul
 13126 ;;		_isdigit
 13127 ;;		_isspace
 13128 ;; This function is called by:
 13129 ;;		_vfpfcnvrt
 13130 ;; This function uses a non-reentrant model
 13131 ;;
 13132                           
 13133                           	psect	text49
 13134  0038A8                     __ptext49:
 13135                           	callstack 0
 13136  0038A8                     _atoi:
 13137                           	callstack 22
 13138  0038A8  0E00               	movlw	0
 13139  0038AA  6E16               	movwf	(atoi@n+1)^0,c
 13140  0038AC  0E00               	movlw	0
 13141  0038AE  6E15               	movwf	atoi@n^0,c
 13142  0038B0  0E00               	movlw	0
 13143  0038B2  6E0F               	movwf	(atoi@neg+1)^0,c
 13144  0038B4  0E00               	movlw	0
 13145  0038B6  6E0E               	movwf	atoi@neg^0,c
 13146  0038B8  EF60  F01C         	goto	l5412
 13147  0038BC                     l5410:
 13148  0038BC  4A08               	infsnz	atoi@s^0,f,c
 13149  0038BE  2A09               	incf	(atoi@s+1)^0,f,c
 13150  0038C0                     l5412:
 13151  0038C0  0E01               	movlw	1
 13152  0038C2  6E14               	movwf	_atoi$3051^0,c
 13153  0038C4  C008  FFF6         	movff	atoi@s,tblptrl
 13154  0038C8  C009  FFF7         	movff	atoi@s+1,tblptrh
 13155  0038CC                     	if	0	;tblptru may be non-zero
 13156  0038CC                     	endif
 13157  0038CC                     	if	0	;tblptru may be non-zero
 13158  0038CC                     	endif
 13159  0038CC  0008               	tblrd		*
 13160  0038CE  50F5               	movf	tablat,w,c
 13161  0038D0  0A20               	xorlw	32
 13162  0038D2  B4D8               	btfsc	status,2,c
 13163  0038D4  EF6E  F01C         	goto	u6271
 13164  0038D8  EF70  F01C         	goto	u6270
 13165  0038DC                     u6271:
 13166  0038DC  EF8D  F01C         	goto	l5420
 13167  0038E0                     u6270:
 13168  0038E0  0EF7               	movlw	247
 13169  0038E2  6E0A               	movwf	??_atoi^0,c
 13170  0038E4  0EFF               	movlw	255
 13171  0038E6  6E0B               	movwf	(??_atoi+1)^0,c
 13172  0038E8  C008  FFF6         	movff	atoi@s,tblptrl
 13173  0038EC  C009  FFF7         	movff	atoi@s+1,tblptrh
 13174  0038F0                     	if	0	;tblptru may be non-zero
 13175  0038F0                     	endif
 13176  0038F0                     	if	0	;tblptru may be non-zero
 13177  0038F0                     	endif
 13178  0038F0  0008               	tblrd		*
 13179  0038F2  50F5               	movf	tablat,w,c
 13180  0038F4  6E0C               	movwf	(??_atoi+2)^0,c
 13181  0038F6  6A0D               	clrf	(??_atoi+3)^0,c
 13182  0038F8  500A               	movf	??_atoi^0,w,c
 13183  0038FA  260C               	addwf	(??_atoi+2)^0,f,c
 13184  0038FC  500B               	movf	(??_atoi+1)^0,w,c
 13185  0038FE  220D               	addwfc	(??_atoi+3)^0,f,c
 13186  003900  500D               	movf	(??_atoi+3)^0,w,c
 13187  003902  E109               	bnz	u6280
 13188  003904  0E05               	movlw	5
 13189  003906  5C0C               	subwf	(??_atoi+2)^0,w,c
 13190  003908  A0D8               	btfss	status,0,c
 13191  00390A  EF89  F01C         	goto	u6281
 13192  00390E  EF8B  F01C         	goto	u6280
 13193  003912                     u6281:
 13194  003912  EF8D  F01C         	goto	l5420
 13195  003916                     u6280:
 13196  003916  0E00               	movlw	0
 13197  003918  6E14               	movwf	_atoi$3051^0,c
 13198  00391A                     l5420:
 13199  00391A  C014  F010         	movff	_atoi$3051,_atoi$3050
 13200  00391E  6A11               	clrf	(_atoi$3050+1)^0,c
 13201  003920  5010               	movf	_atoi$3050^0,w,c
 13202  003922  1011               	iorwf	(_atoi$3050+1)^0,w,c
 13203  003924  A4D8               	btfss	status,2,c
 13204  003926  EF97  F01C         	goto	u6291
 13205  00392A  EF99  F01C         	goto	u6290
 13206  00392E                     u6291:
 13207  00392E  EF5E  F01C         	goto	l5410
 13208  003932                     u6290:
 13209  003932  EFA3  F01C         	goto	l5430
 13210  003936                     l5426:
 13211  003936  0E00               	movlw	0
 13212  003938  6E0F               	movwf	(atoi@neg+1)^0,c
 13213  00393A  0E01               	movlw	1
 13214  00393C  6E0E               	movwf	atoi@neg^0,c
 13215  00393E                     l5428:
 13216  00393E  4A08               	infsnz	atoi@s^0,f,c
 13217  003940  2A09               	incf	(atoi@s+1)^0,f,c
 13218  003942  EFD8  F01C         	goto	l5436
 13219  003946                     l5430:
 13220  003946  C008  FFF6         	movff	atoi@s,tblptrl
 13221  00394A  C009  FFF7         	movff	atoi@s+1,tblptrh
 13222  00394E                     	if	0	;tblptru may be non-zero
 13223  00394E                     	endif
 13224  00394E                     	if	0	;tblptru may be non-zero
 13225  00394E                     	endif
 13226  00394E  0008               	tblrd		*
 13227  003950  50F5               	movf	tablat,w,c
 13228  003952  6E0A               	movwf	??_atoi^0,c
 13229  003954  6A0B               	clrf	(??_atoi+1)^0,c
 13230                           
 13231                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13232                           ; Switch size 1, requested type "simple"
 13233                           ; Number of cases is 1, Range of values is 0 to 0
 13234                           ; switch strategies available:
 13235                           ; Name         Instructions Cycles
 13236                           ; simple_byte            4     3 (average)
 13237                           ;	Chosen strategy is simple_byte
 13238  003956  500B               	movf	(??_atoi+1)^0,w,c
 13239  003958  0A00               	xorlw	0	; case 0
 13240  00395A  B4D8               	btfsc	status,2,c
 13241  00395C  EFB2  F01C         	goto	l6610
 13242  003960  EFD8  F01C         	goto	l5436
 13243  003964                     l6610:
 13244                           
 13245                           ; Switch size 1, requested type "simple"
 13246                           ; Number of cases is 2, Range of values is 43 to 45
 13247                           ; switch strategies available:
 13248                           ; Name         Instructions Cycles
 13249                           ; simple_byte            7     4 (average)
 13250                           ;	Chosen strategy is simple_byte
 13251  003964  500A               	movf	??_atoi^0,w,c
 13252  003966  0A2B               	xorlw	43	; case 43
 13253  003968  B4D8               	btfsc	status,2,c
 13254  00396A  EF9F  F01C         	goto	l5428
 13255  00396E  0A06               	xorlw	6	; case 45
 13256  003970  B4D8               	btfsc	status,2,c
 13257  003972  EF9B  F01C         	goto	l5426
 13258  003976  EFD8  F01C         	goto	l5436
 13259  00397A                     l5432:
 13260  00397A  C015  F001         	movff	atoi@n,___wmul@multiplier
 13261  00397E  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 13262  003982  0E00               	movlw	0
 13263  003984  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 13264  003986  0E0A               	movlw	10
 13265  003988  6E03               	movwf	___wmul@multiplicand^0,c
 13266  00398A  EC8A  F02B         	call	___wmul	;wreg free
 13267  00398E  C008  FFF6         	movff	atoi@s,tblptrl
 13268  003992  C009  FFF7         	movff	atoi@s+1,tblptrh
 13269  003996                     	if	0	;tblptru may be non-zero
 13270  003996                     	endif
 13271  003996                     	if	0	;tblptru may be non-zero
 13272  003996                     	endif
 13273  003996  0008               	tblrd		*
 13274  003998  50F5               	movf	tablat,w,c
 13275  00399A  5E01               	subwf	?___wmul^0,f,c
 13276  00399C  0E00               	movlw	0
 13277  00399E  5A02               	subwfb	(?___wmul+1)^0,f,c
 13278  0039A0  0E30               	movlw	48
 13279  0039A2  2401               	addwf	?___wmul^0,w,c
 13280  0039A4  6E15               	movwf	atoi@n^0,c
 13281  0039A6  0E00               	movlw	0
 13282  0039A8  2002               	addwfc	(?___wmul+1)^0,w,c
 13283  0039AA  6E16               	movwf	(atoi@n+1)^0,c
 13284  0039AC  EF9F  F01C         	goto	l5428
 13285  0039B0                     l5436:
 13286  0039B0  0ED0               	movlw	208
 13287  0039B2  6E0A               	movwf	??_atoi^0,c
 13288  0039B4  0EFF               	movlw	255
 13289  0039B6  6E0B               	movwf	(??_atoi+1)^0,c
 13290  0039B8  C008  FFF6         	movff	atoi@s,tblptrl
 13291  0039BC  C009  FFF7         	movff	atoi@s+1,tblptrh
 13292  0039C0                     	if	0	;tblptru may be non-zero
 13293  0039C0                     	endif
 13294  0039C0                     	if	0	;tblptru may be non-zero
 13295  0039C0                     	endif
 13296  0039C0  0008               	tblrd		*
 13297  0039C2  50F5               	movf	tablat,w,c
 13298  0039C4  6E0C               	movwf	(??_atoi+2)^0,c
 13299  0039C6  6A0D               	clrf	(??_atoi+3)^0,c
 13300  0039C8  500A               	movf	??_atoi^0,w,c
 13301  0039CA  260C               	addwf	(??_atoi+2)^0,f,c
 13302  0039CC  500B               	movf	(??_atoi+1)^0,w,c
 13303  0039CE  220D               	addwfc	(??_atoi+3)^0,f,c
 13304  0039D0  500D               	movf	(??_atoi+3)^0,w,c
 13305  0039D2  E10A               	bnz	u6300
 13306  0039D4  0E0A               	movlw	10
 13307  0039D6  5C0C               	subwf	(??_atoi+2)^0,w,c
 13308  0039D8  A0D8               	btfss	status,0,c
 13309  0039DA  EFF1  F01C         	goto	u6301
 13310  0039DE  EFF4  F01C         	goto	u6300
 13311  0039E2                     u6301:
 13312  0039E2  0E01               	movlw	1
 13313  0039E4  EFF5  F01C         	goto	u6310
 13314  0039E8                     u6300:
 13315  0039E8  0E00               	movlw	0
 13316  0039EA                     u6310:
 13317  0039EA  6E12               	movwf	_atoi$3052^0,c
 13318  0039EC  6A13               	clrf	(_atoi$3052+1)^0,c
 13319  0039EE  5012               	movf	_atoi$3052^0,w,c
 13320  0039F0  1013               	iorwf	(_atoi$3052+1)^0,w,c
 13321  0039F2  A4D8               	btfss	status,2,c
 13322  0039F4  EFFE  F01C         	goto	u6321
 13323  0039F8  EF00  F01D         	goto	u6320
 13324  0039FC                     u6321:
 13325  0039FC  EFBD  F01C         	goto	l5432
 13326  003A00                     u6320:
 13327  003A00  500E               	movf	atoi@neg^0,w,c
 13328  003A02  100F               	iorwf	(atoi@neg+1)^0,w,c
 13329  003A04  A4D8               	btfss	status,2,c
 13330  003A06  EF07  F01D         	goto	u6331
 13331  003A0A  EF09  F01D         	goto	u6330
 13332  003A0E                     u6331:
 13333  003A0E  EF17  F01D         	goto	l1635
 13334  003A12                     u6330:
 13335  003A12  C015  F00A         	movff	atoi@n,??_atoi
 13336  003A16  C016  F00B         	movff	atoi@n+1,??_atoi+1
 13337  003A1A  1E0A               	comf	??_atoi^0,f,c
 13338  003A1C  1E0B               	comf	(??_atoi+1)^0,f,c
 13339  003A1E  4A0A               	infsnz	??_atoi^0,f,c
 13340  003A20  2A0B               	incf	(??_atoi+1)^0,f,c
 13341  003A22  C00A  F008         	movff	??_atoi,?_atoi
 13342  003A26  C00B  F009         	movff	??_atoi+1,?_atoi+1
 13343  003A2A  EF1B  F01D         	goto	l1638
 13344  003A2E                     l1635:
 13345  003A2E  C015  F008         	movff	atoi@n,?_atoi
 13346  003A32  C016  F009         	movff	atoi@n+1,?_atoi+1
 13347  003A36                     l1638:
 13348  003A36  0012               	return		;funcret
 13349  003A38                     __end_of_atoi:
 13350                           	callstack 0
 13351                           
 13352 ;; *************** function _isspace *****************
 13353 ;; Defined at:
 13354 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
 13355 ;; Parameters:    Size  Location     Type
 13356 ;;  c               2    0[COMRAM] int 
 13357 ;; Auto vars:     Size  Location     Type
 13358 ;;		None
 13359 ;; Return value:  Size  Location     Type
 13360 ;;                  2    0[COMRAM] int 
 13361 ;; Registers used:
 13362 ;;		wreg, status,2, status,0
 13363 ;; Tracked objects:
 13364 ;;		On entry : 0/0
 13365 ;;		On exit  : 0/0
 13366 ;;		Unchanged: 0/0
 13367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13368 ;;      Params:         2       0       0       0       0       0       0
 13369 ;;      Locals:         1       0       0       0       0       0       0
 13370 ;;      Temps:          4       0       0       0       0       0       0
 13371 ;;      Totals:         7       0       0       0       0       0       0
 13372 ;;Total ram usage:        7 bytes
 13373 ;; Hardware stack levels used:    1
 13374 ;; Hardware stack levels required when called:    1
 13375 ;; This function calls:
 13376 ;;		Nothing
 13377 ;; This function is called by:
 13378 ;;		_atoi
 13379 ;; This function uses a non-reentrant model
 13380 ;;
 13381                           
 13382                           	psect	text50
 13383  005276                     __ptext50:
 13384                           	callstack 0
 13385  005276                     _isspace:
 13386                           	callstack 22
 13387  005276  0E01               	movlw	1
 13388  005278  6E07               	movwf	_isspace$3081^0,c
 13389  00527A  0E20               	movlw	32
 13390  00527C  1801               	xorwf	isspace@c^0,w,c
 13391  00527E  1002               	iorwf	(isspace@c+1)^0,w,c
 13392  005280  B4D8               	btfsc	status,2,c
 13393  005282  EF45  F029         	goto	u5581
 13394  005286  EF47  F029         	goto	u5580
 13395  00528A                     u5581:
 13396  00528A  EF60  F029         	goto	l5044
 13397  00528E                     u5580:
 13398  00528E  0EF7               	movlw	247
 13399  005290  6E03               	movwf	??_isspace^0,c
 13400  005292  0EFF               	movlw	255
 13401  005294  6E04               	movwf	(??_isspace+1)^0,c
 13402  005296  C001  F005         	movff	isspace@c,??_isspace+2
 13403  00529A  C002  F006         	movff	isspace@c+1,??_isspace+3
 13404  00529E  5003               	movf	??_isspace^0,w,c
 13405  0052A0  2605               	addwf	(??_isspace+2)^0,f,c
 13406  0052A2  5004               	movf	(??_isspace+1)^0,w,c
 13407  0052A4  2206               	addwfc	(??_isspace+3)^0,f,c
 13408  0052A6  5006               	movf	(??_isspace+3)^0,w,c
 13409  0052A8  E109               	bnz	u5590
 13410  0052AA  0E05               	movlw	5
 13411  0052AC  5C05               	subwf	(??_isspace+2)^0,w,c
 13412  0052AE  A0D8               	btfss	status,0,c
 13413  0052B0  EF5C  F029         	goto	u5591
 13414  0052B4  EF5E  F029         	goto	u5590
 13415  0052B8                     u5591:
 13416  0052B8  EF60  F029         	goto	l5044
 13417  0052BC                     u5590:
 13418  0052BC  0E00               	movlw	0
 13419  0052BE  6E07               	movwf	_isspace$3081^0,c
 13420  0052C0                     l5044:
 13421  0052C0  C007  F001         	movff	_isspace$3081,?_isspace
 13422  0052C4  6A02               	clrf	(?_isspace+1)^0,c
 13423  0052C6  0012               	return		;funcret
 13424  0052C8                     __end_of_isspace:
 13425                           	callstack 0
 13426                           
 13427 ;; *************** function _isdigit *****************
 13428 ;; Defined at:
 13429 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
 13430 ;; Parameters:    Size  Location     Type
 13431 ;;  c               2    0[COMRAM] int 
 13432 ;; Auto vars:     Size  Location     Type
 13433 ;;		None
 13434 ;; Return value:  Size  Location     Type
 13435 ;;                  2    0[COMRAM] int 
 13436 ;; Registers used:
 13437 ;;		wreg, status,2, status,0
 13438 ;; Tracked objects:
 13439 ;;		On entry : 0/0
 13440 ;;		On exit  : 0/0
 13441 ;;		Unchanged: 0/0
 13442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13443 ;;      Params:         2       0       0       0       0       0       0
 13444 ;;      Locals:         0       0       0       0       0       0       0
 13445 ;;      Temps:          4       0       0       0       0       0       0
 13446 ;;      Totals:         6       0       0       0       0       0       0
 13447 ;;Total ram usage:        6 bytes
 13448 ;; Hardware stack levels used:    1
 13449 ;; Hardware stack levels required when called:    1
 13450 ;; This function calls:
 13451 ;;		Nothing
 13452 ;; This function is called by:
 13453 ;;		_vfpfcnvrt
 13454 ;;		_atoi
 13455 ;; This function uses a non-reentrant model
 13456 ;;
 13457                           
 13458                           	psect	text51
 13459  005586                     __ptext51:
 13460                           	callstack 0
 13461  005586                     _isdigit:
 13462                           	callstack 23
 13463  005586  0ED0               	movlw	208
 13464  005588  6E03               	movwf	??_isdigit^0,c
 13465  00558A  0EFF               	movlw	255
 13466  00558C  6E04               	movwf	(??_isdigit+1)^0,c
 13467  00558E  C001  F005         	movff	isdigit@c,??_isdigit+2
 13468  005592  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 13469  005596  5003               	movf	??_isdigit^0,w,c
 13470  005598  2605               	addwf	(??_isdigit+2)^0,f,c
 13471  00559A  5004               	movf	(??_isdigit+1)^0,w,c
 13472  00559C  2206               	addwfc	(??_isdigit+3)^0,f,c
 13473  00559E  5006               	movf	(??_isdigit+3)^0,w,c
 13474  0055A0  E10A               	bnz	u5560
 13475  0055A2  0E0A               	movlw	10
 13476  0055A4  5C05               	subwf	(??_isdigit+2)^0,w,c
 13477  0055A6  A0D8               	btfss	status,0,c
 13478  0055A8  EFD8  F02A         	goto	u5561
 13479  0055AC  EFDB  F02A         	goto	u5560
 13480  0055B0                     u5561:
 13481  0055B0  0E01               	movlw	1
 13482  0055B2  EFDC  F02A         	goto	u5570
 13483  0055B6                     u5560:
 13484  0055B6  0E00               	movlw	0
 13485  0055B8                     u5570:
 13486  0055B8  6E01               	movwf	?_isdigit^0,c
 13487  0055BA  6A02               	clrf	(?_isdigit+1)^0,c
 13488  0055BC  0012               	return		;funcret
 13489  0055BE                     __end_of_isdigit:
 13490                           	callstack 0
 13491                           
 13492 ;; *************** function ___wmul *****************
 13493 ;; Defined at:
 13494 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
 13495 ;; Parameters:    Size  Location     Type
 13496 ;;  multiplier      2    0[COMRAM] unsigned int 
 13497 ;;  multiplicand    2    2[COMRAM] unsigned int 
 13498 ;; Auto vars:     Size  Location     Type
 13499 ;;  product         2    4[COMRAM] unsigned int 
 13500 ;; Return value:  Size  Location     Type
 13501 ;;                  2    0[COMRAM] unsigned int 
 13502 ;; Registers used:
 13503 ;;		wreg, status,2, status,0, prodl, prodh
 13504 ;; Tracked objects:
 13505 ;;		On entry : 0/0
 13506 ;;		On exit  : 0/0
 13507 ;;		Unchanged: 0/0
 13508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13509 ;;      Params:         4       0       0       0       0       0       0
 13510 ;;      Locals:         2       0       0       0       0       0       0
 13511 ;;      Temps:          0       0       0       0       0       0       0
 13512 ;;      Totals:         6       0       0       0       0       0       0
 13513 ;;Total ram usage:        6 bytes
 13514 ;; Hardware stack levels used:    1
 13515 ;; Hardware stack levels required when called:    1
 13516 ;; This function calls:
 13517 ;;		Nothing
 13518 ;; This function is called by:
 13519 ;;		_atoi
 13520 ;; This function uses a non-reentrant model
 13521 ;;
 13522                           
 13523                           	psect	text52
 13524  005714                     __ptext52:
 13525                           	callstack 0
 13526  005714                     ___wmul:
 13527                           	callstack 22
 13528  005714  5001               	movf	___wmul@multiplier^0,w,c
 13529  005716  0203               	mulwf	___wmul@multiplicand^0,c
 13530  005718  CFF3 F005          	movff	prodl,___wmul@product
 13531  00571C  CFF4 F006          	movff	prodh,___wmul@product+1
 13532  005720  5001               	movf	___wmul@multiplier^0,w,c
 13533  005722  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 13534  005724  50F3               	movf	243,w,c
 13535  005726  2606               	addwf	(___wmul@product+1)^0,f,c
 13536  005728  5002               	movf	(___wmul@multiplier+1)^0,w,c
 13537  00572A  0203               	mulwf	___wmul@multiplicand^0,c
 13538  00572C  50F3               	movf	243,w,c
 13539  00572E  2606               	addwf	(___wmul@product+1)^0,f,c
 13540  005730  C005  F001         	movff	___wmul@product,?___wmul
 13541  005734  C006  F002         	movff	___wmul@product+1,?___wmul+1
 13542  005738  0012               	return		;funcret
 13543  00573A                     __end_of___wmul:
 13544                           	callstack 0
 13545                           
 13546 ;; *************** function _eepromWrite *****************
 13547 ;; Defined at:
 13548 ;;		line 69 in file "fs_eeprom.c"
 13549 ;; Parameters:    Size  Location     Type
 13550 ;;  address         1    wreg     unsigned char 
 13551 ;;  data            1    0[COMRAM] unsigned char 
 13552 ;; Auto vars:     Size  Location     Type
 13553 ;;  address         1    1[COMRAM] unsigned char 
 13554 ;; Return value:  Size  Location     Type
 13555 ;;                  1    wreg      void 
 13556 ;; Registers used:
 13557 ;;		wreg, status,2
 13558 ;; Tracked objects:
 13559 ;;		On entry : 0/0
 13560 ;;		On exit  : 0/0
 13561 ;;		Unchanged: 0/0
 13562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13563 ;;      Params:         1       0       0       0       0       0       0
 13564 ;;      Locals:         1       0       0       0       0       0       0
 13565 ;;      Temps:          0       0       0       0       0       0       0
 13566 ;;      Totals:         2       0       0       0       0       0       0
 13567 ;;Total ram usage:        2 bytes
 13568 ;; Hardware stack levels used:    1
 13569 ;; Hardware stack levels required when called:    1
 13570 ;; This function calls:
 13571 ;;		Nothing
 13572 ;; This function is called by:
 13573 ;;		_speedLimitSettingMenu
 13574 ;;		_stopTimeSettingMenu
 13575 ;;		_driverTimeSettingMenu
 13576 ;; This function uses a non-reentrant model
 13577 ;;
 13578                           
 13579                           	psect	text53
 13580  005696                     __ptext53:
 13581                           	callstack 0
 13582  005696                     _eepromWrite:
 13583                           	callstack 26
 13584                           
 13585                           ;incstack = 0
 13586                           ;eepromWrite@address stored from wreg
 13587  005696  6E02               	movwf	eepromWrite@address^0,c
 13588  005698                     
 13589                           ;fs_eeprom.c: 69: void eepromWrite(uint8_t address, uint8_t data);fs_eeprom.c: 70: {;fs_
      +                          eeprom.c: 73:     EEADR = (uint8_t)address;
 13590  005698  C002  FFA9         	movff	eepromWrite@address,4009	;volatile
 13591  00569C                     
 13592                           ;fs_eeprom.c: 75:     EEDATA = data;
 13593  00569C  C001  FFA8         	movff	eepromWrite@data,4008	;volatile
 13594  0056A0                     
 13595                           ;fs_eeprom.c: 76:     EECON1bits.EEPGD = 0;
 13596  0056A0  9EA6               	bcf	166,7,c	;volsfr
 13597  0056A2                     
 13598                           ;fs_eeprom.c: 77:     EECON1bits.CFGS = 0;
 13599  0056A2  9CA6               	bcf	166,6,c	;volsfr
 13600  0056A4                     
 13601                           ;fs_eeprom.c: 78:     EECON1bits.WREN = 1;
 13602  0056A4  84A6               	bsf	166,2,c	;volsfr
 13603  0056A6                     
 13604                           ;fs_eeprom.c: 82:     EECON2 = 0x55;
 13605  0056A6  0E55               	movlw	85
 13606  0056A8  6EA7               	movwf	167,c	;volsfr
 13607  0056AA                     
 13608                           ;fs_eeprom.c: 83:     EECON2 = 0xAA;
 13609  0056AA  0EAA               	movlw	170
 13610  0056AC  6EA7               	movwf	167,c	;volsfr
 13611  0056AE                     
 13612                           ;fs_eeprom.c: 84:     EECON1bits.WR = 1;
 13613  0056AE  82A6               	bsf	166,1,c	;volsfr
 13614  0056B0                     l98:
 13615                           
 13616                           ;fs_eeprom.c: 87:     while(PIR2bits.EEIF == 0)
 13617  0056B0  A8A1               	btfss	161,4,c	;volatile
 13618  0056B2  EF5D  F02B         	goto	u6871
 13619  0056B6  EF5F  F02B         	goto	u6870
 13620  0056BA                     u6871:
 13621  0056BA  EF58  F02B         	goto	l98
 13622  0056BE                     u6870:
 13623  0056BE                     
 13624                           ;fs_eeprom.c: 92:     PIR2bits.EEIF = 0;
 13625  0056BE  98A1               	bcf	161,4,c	;volatile
 13626                           
 13627                           ;fs_eeprom.c: 93:     EECON1bits.WREN = 0;
 13628  0056C0  94A6               	bcf	166,2,c	;volsfr
 13629  0056C2  0012               	return		;funcret
 13630  0056C4                     __end_of_eepromWrite:
 13631                           	callstack 0
 13632                           
 13633 ;; *************** function _buttonControlFlags *****************
 13634 ;; Defined at:
 13635 ;;		line 76 in file "fs_menu_controller.c"
 13636 ;; Parameters:    Size  Location     Type
 13637 ;;		None
 13638 ;; Auto vars:     Size  Location     Type
 13639 ;;		None
 13640 ;; Return value:  Size  Location     Type
 13641 ;;                  1    wreg      void 
 13642 ;; Registers used:
 13643 ;;		wreg, status,2, status,0
 13644 ;; Tracked objects:
 13645 ;;		On entry : 0/0
 13646 ;;		On exit  : 0/0
 13647 ;;		Unchanged: 0/0
 13648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13649 ;;      Params:         0       0       0       0       0       0       0
 13650 ;;      Locals:         0       0       0       0       0       0       0
 13651 ;;      Temps:          0       0       0       0       0       0       0
 13652 ;;      Totals:         0       0       0       0       0       0       0
 13653 ;;Total ram usage:        0 bytes
 13654 ;; Hardware stack levels used:    1
 13655 ;; Hardware stack levels required when called:    1
 13656 ;; This function calls:
 13657 ;;		Nothing
 13658 ;; This function is called by:
 13659 ;;		_loopTaskMenuControl
 13660 ;; This function uses a non-reentrant model
 13661 ;;
 13662                           
 13663                           	psect	text54
 13664  0031CE                     __ptext54:
 13665                           	callstack 0
 13666  0031CE                     _buttonControlFlags:
 13667                           	callstack 28
 13668  0031CE                     
 13669                           ;fs_menu_controller.c: 79:     if ((button_bounce_controller.menu == 0) && (PORTBbits.RB
      +                          7 == 0))
 13670  0031CE  0101               	movlb	1	; () banked
 13671  0031D0  519D               	movf	_button_bounce_controller& (0+255),w,b
 13672  0031D2  A4D8               	btfss	status,2,c
 13673  0031D4  EFEE  F018         	goto	u7561
 13674  0031D8  EFF0  F018         	goto	u7560
 13675  0031DC                     u7561:
 13676  0031DC  EFFB  F018         	goto	l6350
 13677  0031E0                     u7560:
 13678  0031E0                     
 13679                           ; BSR set to: 1
 13680  0031E0  BE81               	btfsc	129,7,c	;volatile
 13681  0031E2  EFF5  F018         	goto	u7571
 13682  0031E6  EFF7  F018         	goto	u7570
 13683  0031EA                     u7571:
 13684  0031EA  EFFB  F018         	goto	l6350
 13685  0031EE                     u7570:
 13686  0031EE                     
 13687                           ; BSR set to: 1
 13688                           ;fs_menu_controller.c: 80:     {;fs_menu_controller.c: 81:         button_bounce_control
      +                          ler.menu = 1;
 13689  0031EE  0E01               	movlw	1
 13690  0031F0  6F9D               	movwf	_button_bounce_controller& (0+255),b
 13691                           
 13692                           ;fs_menu_controller.c: 82:         menu_flags.menu_input_flag = 1;
 13693  0031F2  0E01               	movlw	1
 13694  0031F4  6F97               	movwf	_menu_flags& (0+255),b
 13695  0031F6                     l6350:
 13696                           
 13697                           ; BSR set to: 1
 13698                           ;fs_menu_controller.c: 85:     if ((PORTBbits.RB7 == 1) && (button_bounce_controller.men
      +                          u == 1))
 13699  0031F6  AE81               	btfss	129,7,c	;volatile
 13700  0031F8  EF00  F019         	goto	u7581
 13701  0031FC  EF02  F019         	goto	u7580
 13702  003200                     u7581:
 13703  003200  EF0E  F019         	goto	l417
 13704  003204                     u7580:
 13705  003204                     
 13706                           ; BSR set to: 1
 13707  003204  059D               	decf	_button_bounce_controller& (0+255),w,b
 13708  003206  A4D8               	btfss	status,2,c
 13709  003208  EF08  F019         	goto	u7591
 13710  00320C  EF0A  F019         	goto	u7590
 13711  003210                     u7591:
 13712  003210  EF0E  F019         	goto	l417
 13713  003214                     u7590:
 13714  003214                     
 13715                           ; BSR set to: 1
 13716                           ;fs_menu_controller.c: 86:     {;fs_menu_controller.c: 87:         button_bounce_control
      +                          ler.menu = 0;
 13717  003214  0E00               	movlw	0
 13718  003216  6F9D               	movwf	_button_bounce_controller& (0+255),b
 13719                           
 13720                           ;fs_menu_controller.c: 88:         menu_flags.menu_input_flag = 0;
 13721  003218  0E00               	movlw	0
 13722  00321A  6F97               	movwf	_menu_flags& (0+255),b
 13723  00321C                     l417:
 13724                           
 13725                           ; BSR set to: 1
 13726                           ;fs_menu_controller.c: 92:     if ((button_bounce_controller.pause == 0) && (PORTDbits.R
      +                          D2 == 0))
 13727  00321C  51A0               	movf	(_button_bounce_controller+3)& (0+255),w,b
 13728  00321E  A4D8               	btfss	status,2,c
 13729  003220  EF14  F019         	goto	u7601
 13730  003224  EF16  F019         	goto	u7600
 13731  003228                     u7601:
 13732  003228  EF21  F019         	goto	l6360
 13733  00322C                     u7600:
 13734  00322C                     
 13735                           ; BSR set to: 1
 13736  00322C  B483               	btfsc	131,2,c	;volatile
 13737  00322E  EF1B  F019         	goto	u7611
 13738  003232  EF1D  F019         	goto	u7610
 13739  003236                     u7611:
 13740  003236  EF21  F019         	goto	l6360
 13741  00323A                     u7610:
 13742  00323A                     
 13743                           ; BSR set to: 1
 13744                           ;fs_menu_controller.c: 93:     {;fs_menu_controller.c: 94:         button_bounce_control
      +                          ler.pause = 1;
 13745  00323A  0E01               	movlw	1
 13746  00323C  6FA0               	movwf	(_button_bounce_controller+3)& (0+255),b
 13747                           
 13748                           ;fs_menu_controller.c: 95:         menu_flags.menu_pause_flag = 1;
 13749  00323E  0E01               	movlw	1
 13750  003240  6F9A               	movwf	(_menu_flags+3)& (0+255),b
 13751  003242                     l6360:
 13752                           
 13753                           ; BSR set to: 1
 13754                           ;fs_menu_controller.c: 97:     if ((PORTDbits.RD2 == 1) && (button_bounce_controller.pau
      +                          se == 1))
 13755  003242  A483               	btfss	131,2,c	;volatile
 13756  003244  EF26  F019         	goto	u7621
 13757  003248  EF28  F019         	goto	u7620
 13758  00324C                     u7621:
 13759  00324C  EF34  F019         	goto	l419
 13760  003250                     u7620:
 13761  003250                     
 13762                           ; BSR set to: 1
 13763  003250  05A0               	decf	(_button_bounce_controller+3)& (0+255),w,b
 13764  003252  A4D8               	btfss	status,2,c
 13765  003254  EF2E  F019         	goto	u7631
 13766  003258  EF30  F019         	goto	u7630
 13767  00325C                     u7631:
 13768  00325C  EF34  F019         	goto	l419
 13769  003260                     u7630:
 13770  003260                     
 13771                           ; BSR set to: 1
 13772                           ;fs_menu_controller.c: 98:     {;fs_menu_controller.c: 99:         button_bounce_control
      +                          ler.pause = 0;
 13773  003260  0E00               	movlw	0
 13774  003262  6FA0               	movwf	(_button_bounce_controller+3)& (0+255),b
 13775                           
 13776                           ;fs_menu_controller.c: 100:         menu_flags.menu_pause_flag = 0;
 13777  003264  0E00               	movlw	0
 13778  003266  6F9A               	movwf	(_menu_flags+3)& (0+255),b
 13779  003268                     l419:
 13780                           
 13781                           ; BSR set to: 1
 13782                           ;fs_menu_controller.c: 104:     if ((button_bounce_controller.start == 0) && (PORTDbits.
      +                          RD0 == 0))
 13783  003268  519E               	movf	(_button_bounce_controller+1)& (0+255),w,b
 13784  00326A  A4D8               	btfss	status,2,c
 13785  00326C  EF3A  F019         	goto	u7641
 13786  003270  EF3C  F019         	goto	u7640
 13787  003274                     u7641:
 13788  003274  EF47  F019         	goto	l6370
 13789  003278                     u7640:
 13790  003278                     
 13791                           ; BSR set to: 1
 13792  003278  B083               	btfsc	131,0,c	;volatile
 13793  00327A  EF41  F019         	goto	u7651
 13794  00327E  EF43  F019         	goto	u7650
 13795  003282                     u7651:
 13796  003282  EF47  F019         	goto	l6370
 13797  003286                     u7650:
 13798  003286                     
 13799                           ; BSR set to: 1
 13800                           ;fs_menu_controller.c: 105:     {;fs_menu_controller.c: 106:         button_bounce_contr
      +                          oller.start = 1;
 13801  003286  0E01               	movlw	1
 13802  003288  6F9E               	movwf	(_button_bounce_controller+1)& (0+255),b
 13803                           
 13804                           ;fs_menu_controller.c: 107:         menu_flags.menu_start_flag = 1;
 13805  00328A  0E01               	movlw	1
 13806  00328C  6F98               	movwf	(_menu_flags+1)& (0+255),b
 13807  00328E                     l6370:
 13808                           
 13809                           ; BSR set to: 1
 13810                           ;fs_menu_controller.c: 109:     if ((PORTDbits.RD0 == 1) && (button_bounce_controller.st
      +                          art == 1))
 13811  00328E  A083               	btfss	131,0,c	;volatile
 13812  003290  EF4C  F019         	goto	u7661
 13813  003294  EF4E  F019         	goto	u7660
 13814  003298                     u7661:
 13815  003298  EF5A  F019         	goto	l421
 13816  00329C                     u7660:
 13817  00329C                     
 13818                           ; BSR set to: 1
 13819  00329C  059E               	decf	(_button_bounce_controller+1)& (0+255),w,b
 13820  00329E  A4D8               	btfss	status,2,c
 13821  0032A0  EF54  F019         	goto	u7671
 13822  0032A4  EF56  F019         	goto	u7670
 13823  0032A8                     u7671:
 13824  0032A8  EF5A  F019         	goto	l421
 13825  0032AC                     u7670:
 13826  0032AC                     
 13827                           ; BSR set to: 1
 13828                           ;fs_menu_controller.c: 110:     {;fs_menu_controller.c: 111:         button_bounce_contr
      +                          oller.start = 0;
 13829  0032AC  0E00               	movlw	0
 13830  0032AE  6F9E               	movwf	(_button_bounce_controller+1)& (0+255),b
 13831                           
 13832                           ;fs_menu_controller.c: 112:         menu_flags.menu_start_flag = 0;
 13833  0032B0  0E00               	movlw	0
 13834  0032B2  6F98               	movwf	(_menu_flags+1)& (0+255),b
 13835  0032B4                     l421:
 13836                           
 13837                           ; BSR set to: 1
 13838                           ;fs_menu_controller.c: 116:     if ((button_bounce_controller.stop == 0) && (PORTDbits.R
      +                          D1 == 0))
 13839  0032B4  519F               	movf	(_button_bounce_controller+2)& (0+255),w,b
 13840  0032B6  A4D8               	btfss	status,2,c
 13841  0032B8  EF60  F019         	goto	u7681
 13842  0032BC  EF62  F019         	goto	u7680
 13843  0032C0                     u7681:
 13844  0032C0  EF6D  F019         	goto	l6380
 13845  0032C4                     u7680:
 13846  0032C4                     
 13847                           ; BSR set to: 1
 13848  0032C4  B283               	btfsc	131,1,c	;volatile
 13849  0032C6  EF67  F019         	goto	u7691
 13850  0032CA  EF69  F019         	goto	u7690
 13851  0032CE                     u7691:
 13852  0032CE  EF6D  F019         	goto	l6380
 13853  0032D2                     u7690:
 13854  0032D2                     
 13855                           ; BSR set to: 1
 13856                           ;fs_menu_controller.c: 117:     {;fs_menu_controller.c: 118:         button_bounce_contr
      +                          oller.stop = 1;
 13857  0032D2  0E01               	movlw	1
 13858  0032D4  6F9F               	movwf	(_button_bounce_controller+2)& (0+255),b
 13859                           
 13860                           ;fs_menu_controller.c: 119:         menu_flags.menu_stop_flag = 1;
 13861  0032D6  0E01               	movlw	1
 13862  0032D8  6F99               	movwf	(_menu_flags+2)& (0+255),b
 13863  0032DA                     l6380:
 13864                           
 13865                           ; BSR set to: 1
 13866                           ;fs_menu_controller.c: 121:     if ((PORTDbits.RD1 == 1) && (button_bounce_controller.st
      +                          op == 1))
 13867  0032DA  A283               	btfss	131,1,c	;volatile
 13868  0032DC  EF72  F019         	goto	u7701
 13869  0032E0  EF74  F019         	goto	u7700
 13870  0032E4                     u7701:
 13871  0032E4  EF80  F019         	goto	l423
 13872  0032E8                     u7700:
 13873  0032E8                     
 13874                           ; BSR set to: 1
 13875  0032E8  059F               	decf	(_button_bounce_controller+2)& (0+255),w,b
 13876  0032EA  A4D8               	btfss	status,2,c
 13877  0032EC  EF7A  F019         	goto	u7711
 13878  0032F0  EF7C  F019         	goto	u7710
 13879  0032F4                     u7711:
 13880  0032F4  EF80  F019         	goto	l423
 13881  0032F8                     u7710:
 13882  0032F8                     
 13883                           ; BSR set to: 1
 13884                           ;fs_menu_controller.c: 122:     {;fs_menu_controller.c: 123:         button_bounce_contr
      +                          oller.stop = 0;
 13885  0032F8  0E00               	movlw	0
 13886  0032FA  6F9F               	movwf	(_button_bounce_controller+2)& (0+255),b
 13887                           
 13888                           ;fs_menu_controller.c: 124:         menu_flags.menu_stop_flag = 0;
 13889  0032FC  0E00               	movlw	0
 13890  0032FE  6F99               	movwf	(_menu_flags+2)& (0+255),b
 13891  003300                     l423:
 13892                           
 13893                           ; BSR set to: 1
 13894                           ;fs_menu_controller.c: 128:     if ((button_bounce_controller.increase == 0) && (PORTBbi
      +                          ts.RB6 == 0))
 13895  003300  51A2               	movf	(_button_bounce_controller+5)& (0+255),w,b
 13896  003302  A4D8               	btfss	status,2,c
 13897  003304  EF86  F019         	goto	u7721
 13898  003308  EF88  F019         	goto	u7720
 13899  00330C                     u7721:
 13900  00330C  EF93  F019         	goto	l6390
 13901  003310                     u7720:
 13902  003310                     
 13903                           ; BSR set to: 1
 13904  003310  BC81               	btfsc	129,6,c	;volatile
 13905  003312  EF8D  F019         	goto	u7731
 13906  003316  EF8F  F019         	goto	u7730
 13907  00331A                     u7731:
 13908  00331A  EF93  F019         	goto	l6390
 13909  00331E                     u7730:
 13910  00331E                     
 13911                           ; BSR set to: 1
 13912                           ;fs_menu_controller.c: 129:     {;fs_menu_controller.c: 130:         button_bounce_contr
      +                          oller.increase = 1;
 13913  00331E  0E01               	movlw	1
 13914  003320  6FA2               	movwf	(_button_bounce_controller+5)& (0+255),b
 13915                           
 13916                           ;fs_menu_controller.c: 131:         menu_flags.menu_increase_flag = 1;
 13917  003322  0E01               	movlw	1
 13918  003324  6F9B               	movwf	(_menu_flags+4)& (0+255),b
 13919  003326                     l6390:
 13920                           
 13921                           ; BSR set to: 1
 13922                           ;fs_menu_controller.c: 133:     if ((PORTBbits.RB6 == 1) && (button_bounce_controller.in
      +                          crease == 1))
 13923  003326  AC81               	btfss	129,6,c	;volatile
 13924  003328  EF98  F019         	goto	u7741
 13925  00332C  EF9A  F019         	goto	u7740
 13926  003330                     u7741:
 13927  003330  EFA6  F019         	goto	l425
 13928  003334                     u7740:
 13929  003334                     
 13930                           ; BSR set to: 1
 13931  003334  05A2               	decf	(_button_bounce_controller+5)& (0+255),w,b
 13932  003336  A4D8               	btfss	status,2,c
 13933  003338  EFA0  F019         	goto	u7751
 13934  00333C  EFA2  F019         	goto	u7750
 13935  003340                     u7751:
 13936  003340  EFA6  F019         	goto	l425
 13937  003344                     u7750:
 13938  003344                     
 13939                           ; BSR set to: 1
 13940                           ;fs_menu_controller.c: 134:     {;fs_menu_controller.c: 135:         button_bounce_contr
      +                          oller.increase = 0;
 13941  003344  0E00               	movlw	0
 13942  003346  6FA2               	movwf	(_button_bounce_controller+5)& (0+255),b
 13943                           
 13944                           ;fs_menu_controller.c: 136:         menu_flags.menu_increase_flag = 0;
 13945  003348  0E00               	movlw	0
 13946  00334A  6F9B               	movwf	(_menu_flags+4)& (0+255),b
 13947  00334C                     l425:
 13948                           
 13949                           ; BSR set to: 1
 13950                           ;fs_menu_controller.c: 140:     if ((button_bounce_controller.decrease == 0) && (PORTDbi
      +                          ts.RD4 == 0))
 13951  00334C  51A1               	movf	(_button_bounce_controller+4)& (0+255),w,b
 13952  00334E  A4D8               	btfss	status,2,c
 13953  003350  EFAC  F019         	goto	u7761
 13954  003354  EFAE  F019         	goto	u7760
 13955  003358                     u7761:
 13956  003358  EFB9  F019         	goto	l6400
 13957  00335C                     u7760:
 13958  00335C                     
 13959                           ; BSR set to: 1
 13960  00335C  B883               	btfsc	131,4,c	;volatile
 13961  00335E  EFB3  F019         	goto	u7771
 13962  003362  EFB5  F019         	goto	u7770
 13963  003366                     u7771:
 13964  003366  EFB9  F019         	goto	l6400
 13965  00336A                     u7770:
 13966  00336A                     
 13967                           ; BSR set to: 1
 13968                           ;fs_menu_controller.c: 141:     {;fs_menu_controller.c: 142:         button_bounce_contr
      +                          oller.decrease = 1;
 13969  00336A  0E01               	movlw	1
 13970  00336C  6FA1               	movwf	(_button_bounce_controller+4)& (0+255),b
 13971                           
 13972                           ;fs_menu_controller.c: 143:         menu_flags.menu_decrease_flag = 1;
 13973  00336E  0E01               	movlw	1
 13974  003370  6F9C               	movwf	(_menu_flags+5)& (0+255),b
 13975  003372                     l6400:
 13976                           
 13977                           ; BSR set to: 1
 13978                           ;fs_menu_controller.c: 145:     if ((PORTDbits.RD4 == 1) && (button_bounce_controller.de
      +                          crease == 1))
 13979  003372  A883               	btfss	131,4,c	;volatile
 13980  003374  EFBE  F019         	goto	u7781
 13981  003378  EFC0  F019         	goto	u7780
 13982  00337C                     u7781:
 13983  00337C  EFCC  F019         	goto	l428
 13984  003380                     u7780:
 13985  003380                     
 13986                           ; BSR set to: 1
 13987  003380  05A1               	decf	(_button_bounce_controller+4)& (0+255),w,b
 13988  003382  A4D8               	btfss	status,2,c
 13989  003384  EFC6  F019         	goto	u7791
 13990  003388  EFC8  F019         	goto	u7790
 13991  00338C                     u7791:
 13992  00338C  EFCC  F019         	goto	l428
 13993  003390                     u7790:
 13994  003390                     
 13995                           ; BSR set to: 1
 13996                           ;fs_menu_controller.c: 146:     {;fs_menu_controller.c: 147:         button_bounce_contr
      +                          oller.decrease = 0;
 13997  003390  0E00               	movlw	0
 13998  003392  6FA1               	movwf	(_button_bounce_controller+4)& (0+255),b
 13999                           
 14000                           ;fs_menu_controller.c: 148:         menu_flags.menu_decrease_flag = 0;
 14001  003394  0E00               	movlw	0
 14002  003396  6F9C               	movwf	(_menu_flags+5)& (0+255),b
 14003  003398                     l428:
 14004                           
 14005                           ; BSR set to: 1
 14006  003398  0012               	return		;funcret
 14007  00339A                     __end_of_buttonControlFlags:
 14008                           	callstack 0
 14009                           
 14010 ;; *************** function _loopTaskInit *****************
 14011 ;; Defined at:
 14012 ;;		line 79 in file "fs_main.c"
 14013 ;; Parameters:    Size  Location     Type
 14014 ;;		None
 14015 ;; Auto vars:     Size  Location     Type
 14016 ;;		None
 14017 ;; Return value:  Size  Location     Type
 14018 ;;                  1    wreg      void 
 14019 ;; Registers used:
 14020 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14021 ;; Tracked objects:
 14022 ;;		On entry : 0/0
 14023 ;;		On exit  : 0/0
 14024 ;;		Unchanged: 0/0
 14025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14026 ;;      Params:         0       0       0       0       0       0       0
 14027 ;;      Locals:         0       0       0       0       0       0       0
 14028 ;;      Temps:          0       0       0       0       0       0       0
 14029 ;;      Totals:         0       0       0       0       0       0       0
 14030 ;;Total ram usage:        0 bytes
 14031 ;; Hardware stack levels used:    1
 14032 ;; Hardware stack levels required when called:    5
 14033 ;; This function calls:
 14034 ;;		_Lcd_Clear
 14035 ;;		_PWM1_setDC
 14036 ;;		_PWM2_setDC
 14037 ;;		_PWM_Init
 14038 ;;		_adcInit
 14039 ;;		_lcd_init
 14040 ;;		_mcu_init
 14041 ;;		_menuInitialize
 14042 ;;		_openLCD_Script
 14043 ;;		_system_init
 14044 ;;		_timer_0_init
 14045 ;; This function is called by:
 14046 ;;		_main
 14047 ;; This function uses a non-reentrant model
 14048 ;;
 14049                           
 14050                           	psect	text55
 14051  00545E                     __ptext55:
 14052                           	callstack 0
 14053  00545E                     _loopTaskInit:
 14054                           	callstack 25
 14055  00545E                     
 14056                           ;fs_main.c: 81:     mcu_init();
 14057  00545E  ECC8  F02B         	call	_mcu_init	;wreg free
 14058  005462                     
 14059                           ;fs_main.c: 82:     menuInitialize();
 14060  005462  EC62  F02B         	call	_menuInitialize	;wreg free
 14061  005466                     
 14062                           ;fs_main.c: 84:     adcInit();
 14063  005466  EC4E  F02A         	call	_adcInit	;wreg free
 14064  00546A                     
 14065                           ;fs_main.c: 86:     timer_0_init();
 14066  00546A  ECDD  F02B         	call	_timer_0_init	;wreg free
 14067  00546E                     
 14068                           ;fs_main.c: 87:     lcd_init();
 14069  00546E  EC39  F026         	call	_lcd_init	;wreg free
 14070  005472                     
 14071                           ;fs_main.c: 88:     system_init();
 14072  005472  ECC5  F01F         	call	_system_init	;wreg free
 14073  005476                     
 14074                           ;fs_main.c: 89:     Lcd_Clear();
 14075  005476  ECE6  F02B         	call	_Lcd_Clear	;wreg free
 14076  00547A                     
 14077                           ;fs_main.c: 91:     PWM_Init();
 14078  00547A  EC76  F02B         	call	_PWM_Init	;wreg free
 14079  00547E                     
 14080                           ;fs_main.c: 92:     PWM1_setDC(0);
 14081  00547E  0E00               	movlw	0
 14082  005480  6E59               	movwf	(PWM1_setDC@dutycycle+1)^0,c
 14083  005482  0E00               	movlw	0
 14084  005484  6E58               	movwf	PWM1_setDC@dutycycle^0,c
 14085  005486  EC48  F027         	call	_PWM1_setDC	;wreg free
 14086  00548A                     
 14087                           ;fs_main.c: 93:     PWM2_setDC(0);
 14088  00548A  0E00               	movlw	0
 14089  00548C  6E59               	movwf	(PWM2_setDC@dutycycle+1)^0,c
 14090  00548E  0E00               	movlw	0
 14091  005490  6E58               	movwf	PWM2_setDC@dutycycle^0,c
 14092  005492  EC0B  F027         	call	_PWM2_setDC	;wreg free
 14093  005496                     
 14094                           ;fs_main.c: 94:     openLCD_Script();
 14095  005496  EC64  F029         	call	_openLCD_Script	;wreg free
 14096  00549A  0012               	return		;funcret
 14097  00549C                     __end_of_loopTaskInit:
 14098                           	callstack 0
 14099                           
 14100 ;; *************** function _timer_0_init *****************
 14101 ;; Defined at:
 14102 ;;		line 72 in file "fs_timer.c"
 14103 ;; Parameters:    Size  Location     Type
 14104 ;;		None
 14105 ;; Auto vars:     Size  Location     Type
 14106 ;;		None
 14107 ;; Return value:  Size  Location     Type
 14108 ;;                  1    wreg      void 
 14109 ;; Registers used:
 14110 ;;		wreg, status,2
 14111 ;; Tracked objects:
 14112 ;;		On entry : 0/0
 14113 ;;		On exit  : 0/0
 14114 ;;		Unchanged: 0/0
 14115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14116 ;;      Params:         0       0       0       0       0       0       0
 14117 ;;      Locals:         0       0       0       0       0       0       0
 14118 ;;      Temps:          0       0       0       0       0       0       0
 14119 ;;      Totals:         0       0       0       0       0       0       0
 14120 ;;Total ram usage:        0 bytes
 14121 ;; Hardware stack levels used:    1
 14122 ;; Hardware stack levels required when called:    1
 14123 ;; This function calls:
 14124 ;;		Nothing
 14125 ;; This function is called by:
 14126 ;;		_loopTaskInit
 14127 ;; This function uses a non-reentrant model
 14128 ;;
 14129                           
 14130                           	psect	text56
 14131  0057BA                     __ptext56:
 14132                           	callstack 0
 14133  0057BA                     _timer_0_init:
 14134                           	callstack 28
 14135  0057BA                     
 14136                           ;fs_timer.c: 74:   T0CON = 0x81;
 14137  0057BA  0E81               	movlw	129
 14138  0057BC  6ED5               	movwf	213,c	;volatile
 14139                           
 14140                           ;fs_timer.c: 75:   TMR0H = 0x63;
 14141  0057BE  0E63               	movlw	99
 14142  0057C0  6ED7               	movwf	215,c	;volatile
 14143                           
 14144                           ;fs_timer.c: 76:   TMR0L = 0xC0;
 14145  0057C2  0EC0               	movlw	192
 14146  0057C4  6ED6               	movwf	214,c	;volatile
 14147  0057C6                     
 14148                           ;fs_timer.c: 77:   INTCONbits.GIE = 1;
 14149  0057C6  8EF2               	bsf	242,7,c	;volatile
 14150  0057C8                     
 14151                           ;fs_timer.c: 78:   INTCONbits.TMR0IE = 1;
 14152  0057C8  8AF2               	bsf	242,5,c	;volatile
 14153  0057CA  0012               	return		;funcret
 14154  0057CC                     __end_of_timer_0_init:
 14155                           	callstack 0
 14156                           
 14157 ;; *************** function _system_init *****************
 14158 ;; Defined at:
 14159 ;;		line 49 in file "fs_mcu.c"
 14160 ;; Parameters:    Size  Location     Type
 14161 ;;		None
 14162 ;; Auto vars:     Size  Location     Type
 14163 ;;		None
 14164 ;; Return value:  Size  Location     Type
 14165 ;;                  1    wreg      void 
 14166 ;; Registers used:
 14167 ;;		wreg, status,2, cstack
 14168 ;; Tracked objects:
 14169 ;;		On entry : 0/0
 14170 ;;		On exit  : 0/0
 14171 ;;		Unchanged: 0/0
 14172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14173 ;;      Params:         0       0       0       0       0       0       0
 14174 ;;      Locals:         0       0       0       0       0       0       0
 14175 ;;      Temps:          2       0       0       0       0       0       0
 14176 ;;      Totals:         2       0       0       0       0       0       0
 14177 ;;Total ram usage:        2 bytes
 14178 ;; Hardware stack levels used:    1
 14179 ;; Hardware stack levels required when called:    2
 14180 ;; This function calls:
 14181 ;;		_eepromRead
 14182 ;; This function is called by:
 14183 ;;		_loopTaskInit
 14184 ;; This function uses a non-reentrant model
 14185 ;;
 14186                           
 14187                           	psect	text57
 14188  003F8A                     __ptext57:
 14189                           	callstack 0
 14190  003F8A                     _system_init:
 14191                           	callstack 27
 14192  003F8A                     
 14193                           ;fs_mcu.c: 51:     driver_limit.pay = 0;
 14194  003F8A  0E00               	movlw	0
 14195  003F8C  0101               	movlb	1	; () banked
 14196  003F8E  6F83               	movwf	_driver_limit& (0+255),b
 14197  003F90  0E00               	movlw	0
 14198  003F92  6F84               	movwf	(_driver_limit+1)& (0+255),b
 14199  003F94  0E00               	movlw	0
 14200  003F96  6F85               	movwf	(_driver_limit+2)& (0+255),b
 14201  003F98  0E00               	movlw	0
 14202  003F9A  6F86               	movwf	(_driver_limit+3)& (0+255),b
 14203                           
 14204                           ;fs_mcu.c: 52:     driver_limit.payda = 0;
 14205  003F9C  0E00               	movlw	0
 14206  003F9E  6F87               	movwf	(_driver_limit+4)& (0+255),b
 14207  003FA0  0E00               	movlw	0
 14208  003FA2  6F88               	movwf	(_driver_limit+5)& (0+255),b
 14209  003FA4  0E00               	movlw	0
 14210  003FA6  6F89               	movwf	(_driver_limit+6)& (0+255),b
 14211  003FA8  0E00               	movlw	0
 14212  003FAA  6F8A               	movwf	(_driver_limit+7)& (0+255),b
 14213                           
 14214                           ;fs_mcu.c: 53:     driver_limit.ortalama = 0;
 14215  003FAC  0E00               	movlw	0
 14216  003FAE  6F8B               	movwf	(_driver_limit+8)& (0+255),b
 14217  003FB0  0E00               	movlw	0
 14218  003FB2  6F8C               	movwf	(_driver_limit+9)& (0+255),b
 14219  003FB4  0E00               	movlw	0
 14220  003FB6  6F8D               	movwf	(_driver_limit+10)& (0+255),b
 14221  003FB8  0E00               	movlw	0
 14222  003FBA  6F8E               	movwf	(_driver_limit+11)& (0+255),b
 14223                           
 14224                           ;fs_mcu.c: 54:     convert_data.convert_channel_0 = 0;
 14225  003FBC  0E00               	movlw	0
 14226  003FBE  6F00               	movwf	_convert_data& (0+255),b
 14227  003FC0  0E00               	movlw	0
 14228  003FC2  6F01               	movwf	(_convert_data+1)& (0+255),b
 14229  003FC4  0E00               	movlw	0
 14230  003FC6  6F02               	movwf	(_convert_data+2)& (0+255),b
 14231  003FC8  0E00               	movlw	0
 14232  003FCA  6F03               	movwf	(_convert_data+3)& (0+255),b
 14233                           
 14234                           ;fs_mcu.c: 55:     convert_data.convert_channel_1 = 0;
 14235  003FCC  0E00               	movlw	0
 14236  003FCE  6F04               	movwf	(_convert_data+4)& (0+255),b
 14237  003FD0  0E00               	movlw	0
 14238  003FD2  6F05               	movwf	(_convert_data+5)& (0+255),b
 14239  003FD4  0E00               	movlw	0
 14240  003FD6  6F06               	movwf	(_convert_data+6)& (0+255),b
 14241  003FD8  0E00               	movlw	0
 14242  003FDA  6F07               	movwf	(_convert_data+7)& (0+255),b
 14243                           
 14244                           ;fs_mcu.c: 56:     convert_data.convert_channel_2 = 0;
 14245  003FDC  0E00               	movlw	0
 14246  003FDE  6F08               	movwf	(_convert_data+8)& (0+255),b
 14247  003FE0  0E00               	movlw	0
 14248  003FE2  6F09               	movwf	(_convert_data+9)& (0+255),b
 14249  003FE4  0E00               	movlw	0
 14250  003FE6  6F0A               	movwf	(_convert_data+10)& (0+255),b
 14251  003FE8  0E00               	movlw	0
 14252  003FEA  6F0B               	movwf	(_convert_data+11)& (0+255),b
 14253                           
 14254                           ;fs_mcu.c: 57:     convert_data.convert_channel_3 = 0;
 14255  003FEC  0E00               	movlw	0
 14256  003FEE  6F0C               	movwf	(_convert_data+12)& (0+255),b
 14257  003FF0  0E00               	movlw	0
 14258  003FF2  6F0D               	movwf	(_convert_data+13)& (0+255),b
 14259  003FF4  0E00               	movlw	0
 14260  003FF6  6F0E               	movwf	(_convert_data+14)& (0+255),b
 14261  003FF8  0E00               	movlw	0
 14262  003FFA  6F0F               	movwf	(_convert_data+15)& (0+255),b
 14263                           
 14264                           ;fs_mcu.c: 58:     convert_data.convert_channel_4 = 0;
 14265  003FFC  0E00               	movlw	0
 14266  003FFE  6F10               	movwf	(_convert_data+16)& (0+255),b
 14267  004000  0E00               	movlw	0
 14268  004002  6F11               	movwf	(_convert_data+17)& (0+255),b
 14269  004004  0E00               	movlw	0
 14270  004006  6F12               	movwf	(_convert_data+18)& (0+255),b
 14271  004008  0E00               	movlw	0
 14272  00400A  6F13               	movwf	(_convert_data+19)& (0+255),b
 14273                           
 14274                           ;fs_mcu.c: 59:     convert_data.convert_channel_5 = 0;
 14275  00400C  0E00               	movlw	0
 14276  00400E  6F14               	movwf	(_convert_data+20)& (0+255),b
 14277  004010  0E00               	movlw	0
 14278  004012  6F15               	movwf	(_convert_data+21)& (0+255),b
 14279  004014  0E00               	movlw	0
 14280  004016  6F16               	movwf	(_convert_data+22)& (0+255),b
 14281  004018  0E00               	movlw	0
 14282  00401A  6F17               	movwf	(_convert_data+23)& (0+255),b
 14283                           
 14284                           ;fs_mcu.c: 60:     convert_data.convert_channel_6 = 0;
 14285  00401C  0E00               	movlw	0
 14286  00401E  6F18               	movwf	(_convert_data+24)& (0+255),b
 14287  004020  0E00               	movlw	0
 14288  004022  6F19               	movwf	(_convert_data+25)& (0+255),b
 14289  004024  0E00               	movlw	0
 14290  004026  6F1A               	movwf	(_convert_data+26)& (0+255),b
 14291  004028  0E00               	movlw	0
 14292  00402A  6F1B               	movwf	(_convert_data+27)& (0+255),b
 14293                           
 14294                           ;fs_mcu.c: 61:     convert_data.convert_channel_7 = 0;
 14295  00402C  0E00               	movlw	0
 14296  00402E  6F1C               	movwf	(_convert_data+28)& (0+255),b
 14297  004030  0E00               	movlw	0
 14298  004032  6F1D               	movwf	(_convert_data+29)& (0+255),b
 14299  004034  0E00               	movlw	0
 14300  004036  6F1E               	movwf	(_convert_data+30)& (0+255),b
 14301  004038  0E00               	movlw	0
 14302  00403A  6F1F               	movwf	(_convert_data+31)& (0+255),b
 14303                           
 14304                           ;fs_mcu.c: 62:     controller.leftMotorSpeed = 0;
 14305  00403C  0E00               	movlw	0
 14306  00403E  6F57               	movwf	(_controller+7)& (0+255),b
 14307  004040  0E00               	movlw	0
 14308  004042  6F56               	movwf	(_controller+6)& (0+255),b
 14309                           
 14310                           ;fs_mcu.c: 63:     controller.rightMotorSpeed = 0;
 14311  004044  0E00               	movlw	0
 14312  004046  6F59               	movwf	(_controller+9)& (0+255),b
 14313  004048  0E00               	movlw	0
 14314  00404A  6F58               	movwf	(_controller+8)& (0+255),b
 14315                           
 14316                           ;fs_mcu.c: 64:     timer_value.adc_conversion_time = 0;
 14317  00404C  0E00               	movlw	0
 14318  00404E  6F94               	movwf	(_timer_value+5)& (0+255),b
 14319                           
 14320                           ;fs_mcu.c: 65:     controller.error = 0;
 14321  004050  0E00               	movlw	0
 14322  004052  6F51               	movwf	(_controller+1)& (0+255),b
 14323  004054  0E00               	movlw	0
 14324  004056  6F50               	movwf	_controller& (0+255),b
 14325                           
 14326                           ;fs_mcu.c: 67:     button_bounce_controller.menu = 0;
 14327  004058  0E00               	movlw	0
 14328  00405A  6F9D               	movwf	_button_bounce_controller& (0+255),b
 14329                           
 14330                           ;fs_mcu.c: 68:     button_bounce_controller.pause = 0;
 14331  00405C  0E00               	movlw	0
 14332  00405E  6FA0               	movwf	(_button_bounce_controller+3)& (0+255),b
 14333                           
 14334                           ;fs_mcu.c: 69:     button_bounce_controller.start = 0;
 14335  004060  0E00               	movlw	0
 14336  004062  6F9E               	movwf	(_button_bounce_controller+1)& (0+255),b
 14337                           
 14338                           ;fs_mcu.c: 70:     button_bounce_controller.stop = 0;
 14339  004064  0E00               	movlw	0
 14340  004066  6F9F               	movwf	(_button_bounce_controller+2)& (0+255),b
 14341  004068                     
 14342                           ; BSR set to: 1
 14343                           ;fs_mcu.c: 71:     menu_value.driver_time = (uint8_t)eepromRead(0x00);
 14344  004068  0E00               	movlw	0
 14345  00406A  EC9D  F02B         	call	_eepromRead
 14346  00406E  0100               	movlb	0	; () banked
 14347  004070  6FF3               	movwf	_menu_value& (0+255),b
 14348  004072                     
 14349                           ; BSR set to: 0
 14350                           ;fs_mcu.c: 72:     menu_value.stop_time = (uint8_t)eepromRead(0x01);
 14351  004072  0E01               	movlw	1
 14352  004074  EC9D  F02B         	call	_eepromRead
 14353  004078  0100               	movlb	0	; () banked
 14354  00407A  6FF4               	movwf	(_menu_value+1)& (0+255),b
 14355  00407C                     
 14356                           ; BSR set to: 0
 14357                           ;fs_mcu.c: 73:     menu_value.speed_limit = (uint8_t)eepromRead(0x02);
 14358  00407C  0E02               	movlw	2
 14359  00407E  EC9D  F02B         	call	_eepromRead
 14360  004082  0100               	movlb	0	; () banked
 14361  004084  6FF5               	movwf	(_menu_value+2)& (0+255),b
 14362  004086                     
 14363                           ; BSR set to: 0
 14364                           ;fs_mcu.c: 75:     _delay((unsigned long)((700)*(64000000UL/4000.0)));
 14365  004086  0E39               	movlw	57
 14366  004088  6E03               	movwf	(??_system_init+1)^0,c
 14367  00408A  0ED2               	movlw	210
 14368  00408C  6E02               	movwf	??_system_init^0,c
 14369  00408E  0E4C               	movlw	76
 14370  004090                     u7967:
 14371  004090  2EE8               	decfsz	wreg,f,c
 14372  004092  D7FE               	bra	u7967
 14373  004094  2E02               	decfsz	??_system_init^0,f,c
 14374  004096  D7FC               	bra	u7967
 14375  004098  2E03               	decfsz	(??_system_init+1)^0,f,c
 14376  00409A  D7FA               	bra	u7967
 14377  00409C  D000               	nop2	
 14378  00409E                     
 14379                           ;fs_mcu.c: 76:     timer_value.remainingMinute = menu_value.driver_time;
 14380  00409E  C0F3  F192         	movff	_menu_value,_timer_value+3
 14381  0040A2                     
 14382                           ;fs_mcu.c: 77:     timer_value.remainingSecond = 0;
 14383  0040A2  0E00               	movlw	0
 14384  0040A4  0101               	movlb	1	; () banked
 14385  0040A6  6F91               	movwf	(_timer_value+2)& (0+255),b
 14386  0040A8                     
 14387                           ; BSR set to: 1
 14388  0040A8  0012               	return		;funcret
 14389  0040AA                     __end_of_system_init:
 14390                           	callstack 0
 14391                           
 14392 ;; *************** function _eepromRead *****************
 14393 ;; Defined at:
 14394 ;;		line 36 in file "fs_eeprom.c"
 14395 ;; Parameters:    Size  Location     Type
 14396 ;;  address         1    wreg     unsigned char 
 14397 ;; Auto vars:     Size  Location     Type
 14398 ;;  address         1    0[COMRAM] unsigned char 
 14399 ;; Return value:  Size  Location     Type
 14400 ;;                  1    wreg      unsigned char 
 14401 ;; Registers used:
 14402 ;;		wreg, status,2
 14403 ;; Tracked objects:
 14404 ;;		On entry : 0/0
 14405 ;;		On exit  : 0/0
 14406 ;;		Unchanged: 0/0
 14407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14408 ;;      Params:         0       0       0       0       0       0       0
 14409 ;;      Locals:         1       0       0       0       0       0       0
 14410 ;;      Temps:          0       0       0       0       0       0       0
 14411 ;;      Totals:         1       0       0       0       0       0       0
 14412 ;;Total ram usage:        1 bytes
 14413 ;; Hardware stack levels used:    1
 14414 ;; Hardware stack levels required when called:    1
 14415 ;; This function calls:
 14416 ;;		Nothing
 14417 ;; This function is called by:
 14418 ;;		_system_init
 14419 ;; This function uses a non-reentrant model
 14420 ;;
 14421                           
 14422                           	psect	text58
 14423  00573A                     __ptext58:
 14424                           	callstack 0
 14425  00573A                     _eepromRead:
 14426                           	callstack 27
 14427                           
 14428                           ; BSR set to: 1
 14429                           ;incstack = 0
 14430                           ;eepromRead@address stored from wreg
 14431  00573A  6E01               	movwf	eepromRead@address^0,c
 14432  00573C                     
 14433                           ;fs_eeprom.c: 36: uint8_t eepromRead(uint8_t address);fs_eeprom.c: 37: {;fs_eeprom.c: 48
      +                          :     EEADR = (uint8_t)address;
 14434  00573C  C001  FFA9         	movff	eepromRead@address,4009	;volatile
 14435  005740                     
 14436                           ;fs_eeprom.c: 50:     EECON1bits.EEPGD = 0;
 14437  005740  9EA6               	bcf	166,7,c	;volsfr
 14438  005742                     
 14439                           ;fs_eeprom.c: 51:     EECON1bits.CFGS = 0;
 14440  005742  9CA6               	bcf	166,6,c	;volsfr
 14441  005744                     
 14442                           ;fs_eeprom.c: 52:     EECON1bits.RD = 1;
 14443  005744  80A6               	bsf	166,0,c	;volsfr
 14444  005746                     l92:
 14445  005746  B0A6               	btfsc	166,0,c	;volsfr
 14446  005748  EFA8  F02B         	goto	u6931
 14447  00574C  EFAA  F02B         	goto	u6930
 14448  005750                     u6931:
 14449  005750  EFA3  F02B         	goto	l92
 14450  005754                     u6930:
 14451  005754                     
 14452                           ;fs_eeprom.c: 58:     return EEDATA;
 14453  005754  50A8               	movf	168,w,c	;volatile
 14454  005756  0012               	return		;funcret
 14455  005758                     __end_of_eepromRead:
 14456                           	callstack 0
 14457                           
 14458 ;; *************** function _openLCD_Script *****************
 14459 ;; Defined at:
 14460 ;;		line 87 in file "fs_mcu.c"
 14461 ;; Parameters:    Size  Location     Type
 14462 ;;		None
 14463 ;; Auto vars:     Size  Location     Type
 14464 ;;		None
 14465 ;; Return value:  Size  Location     Type
 14466 ;;                  1    wreg      void 
 14467 ;; Registers used:
 14468 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14469 ;; Tracked objects:
 14470 ;;		On entry : 0/0
 14471 ;;		On exit  : 0/0
 14472 ;;		Unchanged: 0/0
 14473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14474 ;;      Params:         0       0       0       0       0       0       0
 14475 ;;      Locals:         0       0       0       0       0       0       0
 14476 ;;      Temps:          2       0       0       0       0       0       0
 14477 ;;      Totals:         2       0       0       0       0       0       0
 14478 ;;Total ram usage:        2 bytes
 14479 ;; Hardware stack levels used:    1
 14480 ;; Hardware stack levels required when called:    4
 14481 ;; This function calls:
 14482 ;;		_Lcd_Clear
 14483 ;;		_Lcd_Set_Cursor
 14484 ;;		_Lcd_Write_String
 14485 ;; This function is called by:
 14486 ;;		_loopTaskInit
 14487 ;; This function uses a non-reentrant model
 14488 ;;
 14489                           
 14490                           	psect	text59
 14491  0052C8                     __ptext59:
 14492                           	callstack 0
 14493  0052C8                     _openLCD_Script:
 14494                           	callstack 25
 14495  0052C8                     
 14496                           ;fs_mcu.c: 89:     Lcd_Set_Cursor(1,1);
 14497  0052C8  0E01               	movlw	1
 14498  0052CA  6E04               	movwf	Lcd_Set_Cursor@b^0,c
 14499  0052CC  0E01               	movlw	1
 14500  0052CE  EC2A  F028         	call	_Lcd_Set_Cursor
 14501  0052D2                     
 14502                           ;fs_mcu.c: 90:     Lcd_Write_String("   Ergin Oyun  ");
 14503  0052D2  0EB1               	movlw	low STR_1
 14504  0052D4  6E05               	movwf	Lcd_Write_String@a^0,c
 14505  0052D6  0E7F               	movlw	high STR_1
 14506  0052D8  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
 14507  0052DA  ECCC  F026         	call	_Lcd_Write_String	;wreg free
 14508  0052DE                     
 14509                           ;fs_mcu.c: 91:     Lcd_Set_Cursor(2,1);
 14510  0052DE  0E01               	movlw	1
 14511  0052E0  6E04               	movwf	Lcd_Set_Cursor@b^0,c
 14512  0052E2  0E02               	movlw	2
 14513  0052E4  EC2A  F028         	call	_Lcd_Set_Cursor
 14514                           
 14515                           ;fs_mcu.c: 92:     Lcd_Write_String(" iYi Eglenceler ");
 14516  0052E8  0E80               	movlw	low STR_2
 14517  0052EA  6E05               	movwf	Lcd_Write_String@a^0,c
 14518  0052EC  0E7F               	movlw	high STR_2
 14519  0052EE  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
 14520  0052F0  ECCC  F026         	call	_Lcd_Write_String	;wreg free
 14521  0052F4                     
 14522                           ;fs_mcu.c: 93:     _delay((unsigned long)((2500)*(64000000UL/4000.0)));
 14523  0052F4  0ECB               	movlw	203
 14524  0052F6  6E0C               	movwf	(??_openLCD_Script+1)^0,c
 14525  0052F8  0EEC               	movlw	236
 14526  0052FA  6E0B               	movwf	??_openLCD_Script^0,c
 14527  0052FC  0E84               	movlw	132
 14528  0052FE                     u7977:
 14529  0052FE  2EE8               	decfsz	wreg,f,c
 14530  005300  D7FE               	bra	u7977
 14531  005302  2E0B               	decfsz	??_openLCD_Script^0,f,c
 14532  005304  D7FC               	bra	u7977
 14533  005306  2E0C               	decfsz	(??_openLCD_Script+1)^0,f,c
 14534  005308  D7FA               	bra	u7977
 14535  00530A  D000               	nop2	
 14536  00530C                     
 14537                           ;fs_mcu.c: 94:     Lcd_Clear();
 14538  00530C  ECE6  F02B         	call	_Lcd_Clear	;wreg free
 14539  005310  0012               	return		;funcret
 14540  005312                     __end_of_openLCD_Script:
 14541                           	callstack 0
 14542                           
 14543 ;; *************** function _Lcd_Write_String *****************
 14544 ;; Defined at:
 14545 ;;		line 176 in file "fs_lcd.c"
 14546 ;; Parameters:    Size  Location     Type
 14547 ;;  a               2    4[COMRAM] PTR unsigned char 
 14548 ;;		 -> STR_17(17), driverTimeSettingMenu@textCursor2(16), STR_15(17), stopTimeSettingMenu@textCursor2(16), 
 14549 ;;		 -> STR_13(17), speedLimitSettingMenu@textCursor2(16), STR_11(17), STR_9(17), 
 14550 ;;		 -> secretMenu@textCursor2(16), STR_7(17), pauseMenu@textCursor2(16), STR_5(17), 
 14551 ;;		 -> stopMenu@textCursor2(16), STR_3(17), mainMenu@textCursor2(16), STR_2(17), 
 14552 ;;		 -> STR_1(16), 
 14553 ;; Auto vars:     Size  Location     Type
 14554 ;;  i               2    8[COMRAM] int 
 14555 ;; Return value:  Size  Location     Type
 14556 ;;                  1    wreg      void 
 14557 ;; Registers used:
 14558 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14559 ;; Tracked objects:
 14560 ;;		On entry : 0/0
 14561 ;;		On exit  : 0/0
 14562 ;;		Unchanged: 0/0
 14563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14564 ;;      Params:         2       0       0       0       0       0       0
 14565 ;;      Locals:         2       0       0       0       0       0       0
 14566 ;;      Temps:          2       0       0       0       0       0       0
 14567 ;;      Totals:         6       0       0       0       0       0       0
 14568 ;;Total ram usage:        6 bytes
 14569 ;; Hardware stack levels used:    1
 14570 ;; Hardware stack levels required when called:    3
 14571 ;; This function calls:
 14572 ;;		_Lcd_Write_Char
 14573 ;; This function is called by:
 14574 ;;		_openLCD_Script
 14575 ;;		_mainMenu
 14576 ;;		_stopMenu
 14577 ;;		_pauseMenu
 14578 ;;		_secretMenu
 14579 ;;		_speedLimitSettingMenu
 14580 ;;		_stopTimeSettingMenu
 14581 ;;		_driverTimeSettingMenu
 14582 ;; This function uses a non-reentrant model
 14583 ;;
 14584                           
 14585                           	psect	text60
 14586  004D98                     __ptext60:
 14587                           	callstack 0
 14588  004D98                     _Lcd_Write_String:
 14589                           	callstack 24
 14590  004D98                     
 14591                           ;fs_lcd.c: 176: void Lcd_Write_String(char *a);fs_lcd.c: 177: {;fs_lcd.c: 178:    int i;
      +                          ;fs_lcd.c: 179:    for(i=0;a[i]!='\0';i++)
 14592  004D98  0E00               	movlw	0
 14593  004D9A  6E0A               	movwf	(Lcd_Write_String@i+1)^0,c
 14594  004D9C  0E00               	movlw	0
 14595  004D9E  6E09               	movwf	Lcd_Write_String@i^0,c
 14596  004DA0  EFEC  F026         	goto	l5898
 14597  004DA4                     l5894:
 14598                           
 14599                           ;fs_lcd.c: 180:    Lcd_Write_Char(a[i]);
 14600  004DA4  5009               	movf	Lcd_Write_String@i^0,w,c
 14601  004DA6  2405               	addwf	Lcd_Write_String@a^0,w,c
 14602  004DA8  6E07               	movwf	??_Lcd_Write_String^0,c
 14603  004DAA  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
 14604  004DAC  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 14605  004DAE  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
 14606  004DB0  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
 14607  004DB4  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 14608  004DB8  6AF8               	clrf	tblptru,c
 14609  004DBA  0E05               	movlw	(high __ramtop+-1)
 14610  004DBC  64F7               	cpfsgt	tblptrh,c
 14611  004DBE  D003               	bra	u6907
 14612  004DC0  0008               	tblrd		*
 14613  004DC2  50F5               	movf	tablat,w,c
 14614  004DC4  D005               	bra	u6900
 14615  004DC6                     u6907:
 14616  004DC6  CFF6 FFE1          	movff	tblptrl,fsr1l
 14617  004DCA  CFF7 FFE2          	movff	tblptrh,fsr1h
 14618  004DCE  50E7               	movf	indf1,w,c
 14619  004DD0                     u6900:
 14620  004DD0  ECDF  F02A         	call	_Lcd_Write_Char
 14621  004DD4  4A09               	infsnz	Lcd_Write_String@i^0,f,c
 14622  004DD6  2A0A               	incf	(Lcd_Write_String@i+1)^0,f,c
 14623  004DD8                     l5898:
 14624  004DD8  5009               	movf	Lcd_Write_String@i^0,w,c
 14625  004DDA  2405               	addwf	Lcd_Write_String@a^0,w,c
 14626  004DDC  6E07               	movwf	??_Lcd_Write_String^0,c
 14627  004DDE  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
 14628  004DE0  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 14629  004DE2  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
 14630  004DE4  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
 14631  004DE8  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 14632  004DEC  6AF8               	clrf	tblptru,c
 14633  004DEE  0E05               	movlw	(high __ramtop+-1)
 14634  004DF0  64F7               	cpfsgt	tblptrh,c
 14635  004DF2  D003               	bra	u6917
 14636  004DF4  0008               	tblrd		*
 14637  004DF6  50F5               	movf	tablat,w,c
 14638  004DF8  D005               	bra	u6910
 14639  004DFA                     u6917:
 14640  004DFA  CFF6 FFE1          	movff	tblptrl,fsr1l
 14641  004DFE  CFF7 FFE2          	movff	tblptrh,fsr1h
 14642  004E02  50E7               	movf	indf1,w,c
 14643  004E04                     u6910:
 14644  004E04  0900               	iorlw	0
 14645  004E06  A4D8               	btfss	status,2,c
 14646  004E08  EF08  F027         	goto	u6921
 14647  004E0C  EF0A  F027         	goto	u6920
 14648  004E10                     u6921:
 14649  004E10  EFD2  F026         	goto	l5894
 14650  004E14                     u6920:
 14651  004E14  0012               	return		;funcret
 14652  004E16                     __end_of_Lcd_Write_String:
 14653                           	callstack 0
 14654                           
 14655 ;; *************** function _Lcd_Write_Char *****************
 14656 ;; Defined at:
 14657 ;;		line 153 in file "fs_lcd.c"
 14658 ;; Parameters:    Size  Location     Type
 14659 ;;  a               1    wreg     unsigned char 
 14660 ;; Auto vars:     Size  Location     Type
 14661 ;;  a               1    3[COMRAM] unsigned char 
 14662 ;;  y               1    2[COMRAM] unsigned char 
 14663 ;;  temp            1    1[COMRAM] unsigned char 
 14664 ;; Return value:  Size  Location     Type
 14665 ;;                  1    wreg      void 
 14666 ;; Registers used:
 14667 ;;		wreg, status,2, status,0, cstack
 14668 ;; Tracked objects:
 14669 ;;		On entry : 0/0
 14670 ;;		On exit  : 0/0
 14671 ;;		Unchanged: 0/0
 14672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14673 ;;      Params:         0       0       0       0       0       0       0
 14674 ;;      Locals:         3       0       0       0       0       0       0
 14675 ;;      Temps:          0       0       0       0       0       0       0
 14676 ;;      Totals:         3       0       0       0       0       0       0
 14677 ;;Total ram usage:        3 bytes
 14678 ;; Hardware stack levels used:    1
 14679 ;; Hardware stack levels required when called:    2
 14680 ;; This function calls:
 14681 ;;		_Lcd_Port
 14682 ;; This function is called by:
 14683 ;;		_Lcd_Write_String
 14684 ;; This function uses a non-reentrant model
 14685 ;;
 14686                           
 14687                           	psect	text61
 14688  0055BE                     __ptext61:
 14689                           	callstack 0
 14690  0055BE                     _Lcd_Write_Char:
 14691                           	callstack 24
 14692                           
 14693                           ;incstack = 0
 14694                           ;Lcd_Write_Char@a stored from wreg
 14695  0055BE  6E04               	movwf	Lcd_Write_Char@a^0,c
 14696  0055C0                     
 14697                           ;fs_lcd.c: 153: void Lcd_Write_Char(char a);fs_lcd.c: 154: {;fs_lcd.c: 155:    char temp
      +                          ,y;;fs_lcd.c: 156:    temp = a&0x0F;
 14698  0055C0  5004               	movf	Lcd_Write_Char@a^0,w,c
 14699  0055C2  0B0F               	andlw	15
 14700  0055C4  6E02               	movwf	Lcd_Write_Char@temp^0,c
 14701                           
 14702                           ;fs_lcd.c: 157:    y = a&0xF0;
 14703  0055C6  5004               	movf	Lcd_Write_Char@a^0,w,c
 14704  0055C8  0BF0               	andlw	240
 14705  0055CA  6E03               	movwf	Lcd_Write_Char@y^0,c
 14706  0055CC                     
 14707                           ;fs_lcd.c: 158:    PORTDbits.RD6 = 1;
 14708  0055CC  8C83               	bsf	131,6,c	;volatile
 14709  0055CE                     
 14710                           ;fs_lcd.c: 159:    Lcd_Port(y>>4);
 14711  0055CE  3803               	swapf	Lcd_Write_Char@y^0,w,c
 14712  0055D0  0B0F               	andlw	15
 14713  0055D2  ECBB  F028         	call	_Lcd_Port
 14714  0055D6                     
 14715                           ;fs_lcd.c: 160:    PORTDbits.RD7 = 1;
 14716  0055D6  8E83               	bsf	131,7,c	;volatile
 14717  0055D8                     
 14718                           ;fs_lcd.c: 161:    _delay((unsigned long)((40)*(64000000UL/4000000.0)));
 14719  0055D8  0ED5               	movlw	213
 14720  0055DA                     u7987:
 14721  0055DA  2EE8               	decfsz	wreg,f,c
 14722  0055DC  D7FE               	bra	u7987
 14723  0055DE  F000               	nop	
 14724  0055E0                     
 14725                           ;fs_lcd.c: 162:    PORTDbits.RD7 = 0;
 14726  0055E0  9E83               	bcf	131,7,c	;volatile
 14727  0055E2                     
 14728                           ;fs_lcd.c: 163:    Lcd_Port(temp);
 14729  0055E2  5002               	movf	Lcd_Write_Char@temp^0,w,c
 14730  0055E4  ECBB  F028         	call	_Lcd_Port
 14731  0055E8                     
 14732                           ;fs_lcd.c: 164:    PORTDbits.RD7 = 1;
 14733  0055E8  8E83               	bsf	131,7,c	;volatile
 14734  0055EA                     
 14735                           ;fs_lcd.c: 165:    _delay((unsigned long)((40)*(64000000UL/4000000.0)));
 14736  0055EA  0ED5               	movlw	213
 14737  0055EC                     u7997:
 14738  0055EC  2EE8               	decfsz	wreg,f,c
 14739  0055EE  D7FE               	bra	u7997
 14740  0055F0  F000               	nop	
 14741  0055F2                     
 14742                           ;fs_lcd.c: 166:    PORTDbits.RD7 = 0;
 14743  0055F2  9E83               	bcf	131,7,c	;volatile
 14744  0055F4  0012               	return		;funcret
 14745  0055F6                     __end_of_Lcd_Write_Char:
 14746                           	callstack 0
 14747                           
 14748 ;; *************** function _Lcd_Set_Cursor *****************
 14749 ;; Defined at:
 14750 ;;		line 83 in file "fs_lcd.c"
 14751 ;; Parameters:    Size  Location     Type
 14752 ;;  a               1    wreg     unsigned char 
 14753 ;;  b               1    3[COMRAM] unsigned char 
 14754 ;; Auto vars:     Size  Location     Type
 14755 ;;  a               1    4[COMRAM] unsigned char 
 14756 ;;  temp            1    7[COMRAM] unsigned char 
 14757 ;;  y               1    6[COMRAM] unsigned char 
 14758 ;;  z               1    5[COMRAM] unsigned char 
 14759 ;; Return value:  Size  Location     Type
 14760 ;;                  1    wreg      void 
 14761 ;; Registers used:
 14762 ;;		wreg, status,2, status,0, cstack
 14763 ;; Tracked objects:
 14764 ;;		On entry : 0/0
 14765 ;;		On exit  : 0/0
 14766 ;;		Unchanged: 0/0
 14767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14768 ;;      Params:         1       0       0       0       0       0       0
 14769 ;;      Locals:         4       0       0       0       0       0       0
 14770 ;;      Temps:          0       0       0       0       0       0       0
 14771 ;;      Totals:         5       0       0       0       0       0       0
 14772 ;;Total ram usage:        5 bytes
 14773 ;; Hardware stack levels used:    1
 14774 ;; Hardware stack levels required when called:    3
 14775 ;; This function calls:
 14776 ;;		_Lcd_Cmd
 14777 ;; This function is called by:
 14778 ;;		_openLCD_Script
 14779 ;;		_mainMenu
 14780 ;;		_stopMenu
 14781 ;;		_pauseMenu
 14782 ;;		_secretMenu
 14783 ;;		_speedLimitSettingMenu
 14784 ;;		_stopTimeSettingMenu
 14785 ;;		_driverTimeSettingMenu
 14786 ;; This function uses a non-reentrant model
 14787 ;;
 14788                           
 14789                           	psect	text62
 14790  005054                     __ptext62:
 14791                           	callstack 0
 14792  005054                     _Lcd_Set_Cursor:
 14793                           	callstack 24
 14794                           
 14795                           ;incstack = 0
 14796                           ;Lcd_Set_Cursor@a stored from wreg
 14797  005054  6E05               	movwf	Lcd_Set_Cursor@a^0,c
 14798  005056                     
 14799                           ;fs_lcd.c: 83: void Lcd_Set_Cursor(char a, char b);fs_lcd.c: 84: {;fs_lcd.c: 85:    char
      +                           temp,z,y;;fs_lcd.c: 86:    if(a == 1)
 14800  005056  0405               	decf	Lcd_Set_Cursor@a^0,w,c
 14801  005058  A4D8               	btfss	status,2,c
 14802  00505A  EF31  F028         	goto	u6881
 14803  00505E  EF33  F028         	goto	u6880
 14804  005062                     u6881:
 14805  005062  EF44  F028         	goto	l5884
 14806  005066                     u6880:
 14807  005066                     
 14808                           ;fs_lcd.c: 87:    {;fs_lcd.c: 88:      temp = 0x80 + b - 1;
 14809  005066  5004               	movf	Lcd_Set_Cursor@b^0,w,c
 14810  005068  0F7F               	addlw	127
 14811  00506A  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
 14812                           
 14813                           ;fs_lcd.c: 89:       z = temp>>4;
 14814  00506C  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
 14815  00506E  0B0F               	andlw	15
 14816  005070  6E06               	movwf	Lcd_Set_Cursor@z^0,c
 14817                           
 14818                           ;fs_lcd.c: 90:       y = temp & 0x0F;
 14819  005072  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
 14820  005074  0B0F               	andlw	15
 14821  005076  6E07               	movwf	Lcd_Set_Cursor@y^0,c
 14822  005078                     
 14823                           ;fs_lcd.c: 91:       Lcd_Cmd(z);
 14824  005078  5006               	movf	Lcd_Set_Cursor@z^0,w,c
 14825  00507A  ECAC  F02B         	call	_Lcd_Cmd
 14826  00507E                     
 14827                           ;fs_lcd.c: 92:       Lcd_Cmd(y);
 14828  00507E  5007               	movf	Lcd_Set_Cursor@y^0,w,c
 14829  005080  ECAC  F02B         	call	_Lcd_Cmd
 14830                           
 14831                           ;fs_lcd.c: 93:    }
 14832  005084  EF5C  F028         	goto	l172
 14833  005088                     l5884:
 14834  005088  0E02               	movlw	2
 14835  00508A  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
 14836  00508C  A4D8               	btfss	status,2,c
 14837  00508E  EF4B  F028         	goto	u6891
 14838  005092  EF4D  F028         	goto	u6890
 14839  005096                     u6891:
 14840  005096  EF5C  F028         	goto	l172
 14841  00509A                     u6890:
 14842  00509A                     
 14843                           ;fs_lcd.c: 95:    {;fs_lcd.c: 96:       temp = 0xC0 + b - 1;
 14844  00509A  5004               	movf	Lcd_Set_Cursor@b^0,w,c
 14845  00509C  0FBF               	addlw	191
 14846  00509E  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
 14847                           
 14848                           ;fs_lcd.c: 97:       z = temp>>4;
 14849  0050A0  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
 14850  0050A2  0B0F               	andlw	15
 14851  0050A4  6E06               	movwf	Lcd_Set_Cursor@z^0,c
 14852                           
 14853                           ;fs_lcd.c: 98:       y = temp & 0x0F;
 14854  0050A6  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
 14855  0050A8  0B0F               	andlw	15
 14856  0050AA  6E07               	movwf	Lcd_Set_Cursor@y^0,c
 14857  0050AC                     
 14858                           ;fs_lcd.c: 99:       Lcd_Cmd(z);
 14859  0050AC  5006               	movf	Lcd_Set_Cursor@z^0,w,c
 14860  0050AE  ECAC  F02B         	call	_Lcd_Cmd
 14861  0050B2                     
 14862                           ;fs_lcd.c: 100:       Lcd_Cmd(y);
 14863  0050B2  5007               	movf	Lcd_Set_Cursor@y^0,w,c
 14864  0050B4  ECAC  F02B         	call	_Lcd_Cmd
 14865  0050B8                     l172:
 14866  0050B8  0012               	return		;funcret
 14867  0050BA                     __end_of_Lcd_Set_Cursor:
 14868                           	callstack 0
 14869                           
 14870 ;; *************** function _Lcd_Clear *****************
 14871 ;; Defined at:
 14872 ;;		line 72 in file "fs_lcd.c"
 14873 ;; Parameters:    Size  Location     Type
 14874 ;;		None
 14875 ;; Auto vars:     Size  Location     Type
 14876 ;;		None
 14877 ;; Return value:  Size  Location     Type
 14878 ;;                  1    wreg      void 
 14879 ;; Registers used:
 14880 ;;		wreg, status,2, cstack
 14881 ;; Tracked objects:
 14882 ;;		On entry : 0/0
 14883 ;;		On exit  : 0/0
 14884 ;;		Unchanged: 0/0
 14885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14886 ;;      Params:         0       0       0       0       0       0       0
 14887 ;;      Locals:         0       0       0       0       0       0       0
 14888 ;;      Temps:          0       0       0       0       0       0       0
 14889 ;;      Totals:         0       0       0       0       0       0       0
 14890 ;;Total ram usage:        0 bytes
 14891 ;; Hardware stack levels used:    1
 14892 ;; Hardware stack levels required when called:    3
 14893 ;; This function calls:
 14894 ;;		_Lcd_Cmd
 14895 ;; This function is called by:
 14896 ;;		_loopTaskInit
 14897 ;;		_openLCD_Script
 14898 ;; This function uses a non-reentrant model
 14899 ;;
 14900                           
 14901                           	psect	text63
 14902  0057CC                     __ptext63:
 14903                           	callstack 0
 14904  0057CC                     _Lcd_Clear:
 14905                           	callstack 25
 14906  0057CC                     
 14907                           ;fs_lcd.c: 74:    Lcd_Cmd(0);
 14908  0057CC  0E00               	movlw	0
 14909  0057CE  ECAC  F02B         	call	_Lcd_Cmd
 14910                           
 14911                           ;fs_lcd.c: 75:    Lcd_Cmd(1);
 14912  0057D2  0E01               	movlw	1
 14913  0057D4  ECAC  F02B         	call	_Lcd_Cmd
 14914  0057D8  0012               	return		;funcret
 14915  0057DA                     __end_of_Lcd_Clear:
 14916                           	callstack 0
 14917                           
 14918 ;; *************** function _menuInitialize *****************
 14919 ;; Defined at:
 14920 ;;		line 35 in file "fs_menu_controller.c"
 14921 ;; Parameters:    Size  Location     Type
 14922 ;;		None
 14923 ;; Auto vars:     Size  Location     Type
 14924 ;;		None
 14925 ;; Return value:  Size  Location     Type
 14926 ;;                  1    wreg      void 
 14927 ;; Registers used:
 14928 ;;		None
 14929 ;; Tracked objects:
 14930 ;;		On entry : 0/0
 14931 ;;		On exit  : 0/0
 14932 ;;		Unchanged: 0/0
 14933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14934 ;;      Params:         0       0       0       0       0       0       0
 14935 ;;      Locals:         0       0       0       0       0       0       0
 14936 ;;      Temps:          0       0       0       0       0       0       0
 14937 ;;      Totals:         0       0       0       0       0       0       0
 14938 ;;Total ram usage:        0 bytes
 14939 ;; Hardware stack levels used:    1
 14940 ;; Hardware stack levels required when called:    1
 14941 ;; This function calls:
 14942 ;;		Nothing
 14943 ;; This function is called by:
 14944 ;;		_loopTaskInit
 14945 ;; This function uses a non-reentrant model
 14946 ;;
 14947                           
 14948                           	psect	text64
 14949  0056C4                     __ptext64:
 14950                           	callstack 0
 14951  0056C4                     _menuInitialize:
 14952                           	callstack 28
 14953  0056C4                     
 14954                           ;fs_menu_controller.c: 38:     TRISBbits.RB6 = 1;
 14955  0056C4  8C93               	bsf	147,6,c	;volatile
 14956                           
 14957                           ;fs_menu_controller.c: 41:     TRISBbits.RB7 = 1;
 14958  0056C6  8E93               	bsf	147,7,c	;volatile
 14959                           
 14960                           ;fs_menu_controller.c: 43:     ANSELDbits.ANSD4 = 0;
 14961  0056C8  010F               	movlb	15	; () banked
 14962  0056CA  993B               	bcf	59,4,b	;volatile
 14963                           
 14964                           ;fs_menu_controller.c: 44:     TRISDbits.RD4 = 1;
 14965  0056CC  8895               	bsf	149,4,c	;volatile
 14966                           
 14967                           ;fs_menu_controller.c: 46:     ANSELDbits.ANSD0 = 0;
 14968  0056CE  913B               	bcf	59,0,b	;volatile
 14969                           
 14970                           ;fs_menu_controller.c: 47:     TRISDbits.RD0 = 1;
 14971  0056D0  8095               	bsf	149,0,c	;volatile
 14972                           
 14973                           ;fs_menu_controller.c: 49:     ANSELDbits.ANSD1 = 0;
 14974  0056D2  933B               	bcf	59,1,b	;volatile
 14975                           
 14976                           ;fs_menu_controller.c: 50:     TRISDbits.RD1 = 1;
 14977  0056D4  8295               	bsf	149,1,c	;volatile
 14978                           
 14979                           ;fs_menu_controller.c: 52:     ANSELDbits.ANSD2 = 0;
 14980  0056D6  953B               	bcf	59,2,b	;volatile
 14981                           
 14982                           ;fs_menu_controller.c: 53:     TRISDbits.RD2 = 1;
 14983  0056D8  8495               	bsf	149,2,c	;volatile
 14984                           
 14985                           ;fs_menu_controller.c: 55:     ANSELDbits.ANSD3 = 0;
 14986  0056DA  973B               	bcf	59,3,b	;volatile
 14987                           
 14988                           ;fs_menu_controller.c: 56:     TRISDbits.RD3 = 1;
 14989  0056DC  8695               	bsf	149,3,c	;volatile
 14990                           
 14991                           ;fs_menu_controller.c: 58:     ANSELDbits.ANSD5 = 0;
 14992  0056DE  9B3B               	bcf	59,5,b	;volatile
 14993                           
 14994                           ;fs_menu_controller.c: 59:     TRISDbits.RD5 = 0;
 14995  0056E0  9A95               	bcf	149,5,c	;volatile
 14996                           
 14997                           ;fs_menu_controller.c: 61:     ANSELCbits.ANSC5 = 0;
 14998  0056E2  9B3A               	bcf	58,5,b	;volatile
 14999                           
 15000                           ;fs_menu_controller.c: 62:     TRISCbits.RC5 = 0;
 15001  0056E4  9A94               	bcf	148,5,c	;volatile
 15002                           
 15003                           ;fs_menu_controller.c: 64:     ANSELCbits.ANSC4 = 0;
 15004  0056E6  993A               	bcf	58,4,b	;volatile
 15005                           
 15006                           ;fs_menu_controller.c: 65:     TRISCbits.RC4 = 0;
 15007  0056E8  9894               	bcf	148,4,c	;volatile
 15008  0056EA                     
 15009                           ; BSR set to: 15
 15010  0056EA  0012               	return		;funcret
 15011  0056EC                     __end_of_menuInitialize:
 15012                           	callstack 0
 15013                           
 15014 ;; *************** function _mcu_init *****************
 15015 ;; Defined at:
 15016 ;;		line 35 in file "fs_mcu.c"
 15017 ;; Parameters:    Size  Location     Type
 15018 ;;		None
 15019 ;; Auto vars:     Size  Location     Type
 15020 ;;		None
 15021 ;; Return value:  Size  Location     Type
 15022 ;;                  1    wreg      void 
 15023 ;; Registers used:
 15024 ;;		wreg, status,2
 15025 ;; Tracked objects:
 15026 ;;		On entry : 0/0
 15027 ;;		On exit  : 0/0
 15028 ;;		Unchanged: 0/0
 15029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15030 ;;      Params:         0       0       0       0       0       0       0
 15031 ;;      Locals:         0       0       0       0       0       0       0
 15032 ;;      Temps:          0       0       0       0       0       0       0
 15033 ;;      Totals:         0       0       0       0       0       0       0
 15034 ;;Total ram usage:        0 bytes
 15035 ;; Hardware stack levels used:    1
 15036 ;; Hardware stack levels required when called:    1
 15037 ;; This function calls:
 15038 ;;		Nothing
 15039 ;; This function is called by:
 15040 ;;		_loopTaskInit
 15041 ;; This function uses a non-reentrant model
 15042 ;;
 15043                           
 15044                           	psect	text65
 15045  005790                     __ptext65:
 15046                           	callstack 0
 15047  005790                     _mcu_init:
 15048                           	callstack 28
 15049  005790                     
 15050                           ;fs_mcu.c: 37:    OSCCONbits.IRCF = 0b111;
 15051  005790  0E70               	movlw	112
 15052  005792  12D3               	iorwf	211,f,c	;volatile
 15053  005794                     
 15054                           ;fs_mcu.c: 38:    OSCTUNEbits.PLLEN = 0b1;
 15055  005794  8C9B               	bsf	155,6,c	;volatile
 15056  005796                     l317:
 15057  005796  A4D3               	btfss	211,2,c	;volatile
 15058  005798  EFD0  F02B         	goto	u3581
 15059  00579C  EFD2  F02B         	goto	u3580
 15060  0057A0                     u3581:
 15061  0057A0  EFCB  F02B         	goto	l317
 15062  0057A4                     u3580:
 15063  0057A4  0012               	return		;funcret
 15064  0057A6                     __end_of_mcu_init:
 15065                           	callstack 0
 15066                           
 15067 ;; *************** function _lcd_init *****************
 15068 ;; Defined at:
 15069 ;;		line 109 in file "fs_lcd.c"
 15070 ;; Parameters:    Size  Location     Type
 15071 ;;		None
 15072 ;; Auto vars:     Size  Location     Type
 15073 ;;		None
 15074 ;; Return value:  Size  Location     Type
 15075 ;;                  1    wreg      void 
 15076 ;; Registers used:
 15077 ;;		wreg, status,2, cstack
 15078 ;; Tracked objects:
 15079 ;;		On entry : 0/0
 15080 ;;		On exit  : 0/0
 15081 ;;		Unchanged: 0/0
 15082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15083 ;;      Params:         0       0       0       0       0       0       0
 15084 ;;      Locals:         0       0       0       0       0       0       0
 15085 ;;      Temps:          2       0       0       0       0       0       0
 15086 ;;      Totals:         2       0       0       0       0       0       0
 15087 ;;Total ram usage:        2 bytes
 15088 ;; Hardware stack levels used:    1
 15089 ;; Hardware stack levels required when called:    3
 15090 ;; This function calls:
 15091 ;;		_Lcd_Cmd
 15092 ;;		_Lcd_Port
 15093 ;; This function is called by:
 15094 ;;		_loopTaskInit
 15095 ;; This function uses a non-reentrant model
 15096 ;;
 15097                           
 15098                           	psect	text66
 15099  004C72                     __ptext66:
 15100                           	callstack 0
 15101  004C72                     _lcd_init:
 15102                           	callstack 26
 15103  004C72                     
 15104                           ;fs_lcd.c: 111:     TRISDbits.RD6 = 0;
 15105  004C72  9C95               	bcf	149,6,c	;volatile
 15106                           
 15107                           ;fs_lcd.c: 112:     ANSELDbits.ANSD6 = 0;
 15108  004C74  010F               	movlb	15	; () banked
 15109  004C76  9D3B               	bcf	59,6,b	;volatile
 15110                           
 15111                           ;fs_lcd.c: 114:     TRISDbits.RD7 = 0;
 15112  004C78  9E95               	bcf	149,7,c	;volatile
 15113                           
 15114                           ;fs_lcd.c: 115:     ANSELDbits.ANSD7 = 0;
 15115  004C7A  9F3B               	bcf	59,7,b	;volatile
 15116                           
 15117                           ;fs_lcd.c: 117:     TRISBbits.RB0 = 0;
 15118  004C7C  9093               	bcf	147,0,c	;volatile
 15119                           
 15120                           ;fs_lcd.c: 118:     ANSELBbits.ANSB0 = 0;
 15121  004C7E  9139               	bcf	57,0,b	;volatile
 15122                           
 15123                           ;fs_lcd.c: 120:     TRISBbits.RB1 = 0;
 15124  004C80  9293               	bcf	147,1,c	;volatile
 15125                           
 15126                           ;fs_lcd.c: 121:     ANSELBbits.ANSB1 = 0;
 15127  004C82  9339               	bcf	57,1,b	;volatile
 15128                           
 15129                           ;fs_lcd.c: 123:     TRISBbits.RB2 = 0;
 15130  004C84  9493               	bcf	147,2,c	;volatile
 15131                           
 15132                           ;fs_lcd.c: 124:     ANSELBbits.ANSB2 = 0;
 15133  004C86  9539               	bcf	57,2,b	;volatile
 15134                           
 15135                           ;fs_lcd.c: 126:     TRISBbits.RB3 = 0;
 15136  004C88  9693               	bcf	147,3,c	;volatile
 15137                           
 15138                           ;fs_lcd.c: 127:     ANSELBbits.ANSB3 = 0;
 15139  004C8A  9739               	bcf	57,3,b	;volatile
 15140  004C8C                     
 15141                           ; BSR set to: 15
 15142                           ;fs_lcd.c: 130:     Lcd_Port(0x00);
 15143  004C8C  0E00               	movlw	0
 15144  004C8E  ECBB  F028         	call	_Lcd_Port
 15145  004C92                     
 15146                           ;fs_lcd.c: 131:      _delay((unsigned long)((20)*(64000000UL/4000.0)));
 15147  004C92  0E02               	movlw	2
 15148  004C94  6E05               	movwf	(??_lcd_init+1)^0,c
 15149  004C96  0EA0               	movlw	160
 15150  004C98  6E04               	movwf	??_lcd_init^0,c
 15151  004C9A  0E92               	movlw	146
 15152  004C9C                     u8007:
 15153  004C9C  2EE8               	decfsz	wreg,f,c
 15154  004C9E  D7FE               	bra	u8007
 15155  004CA0  2E04               	decfsz	??_lcd_init^0,f,c
 15156  004CA2  D7FC               	bra	u8007
 15157  004CA4  2E05               	decfsz	(??_lcd_init+1)^0,f,c
 15158  004CA6  D7FA               	bra	u8007
 15159  004CA8  D000               	nop2	
 15160  004CAA                     
 15161                           ;fs_lcd.c: 132:     Lcd_Cmd(0x03);
 15162  004CAA  0E03               	movlw	3
 15163  004CAC  ECAC  F02B         	call	_Lcd_Cmd
 15164  004CB0                     
 15165                           ;fs_lcd.c: 133:      _delay((unsigned long)((5)*(64000000UL/4000.0)));
 15166  004CB0  0E68               	movlw	104
 15167  004CB2  6E04               	movwf	??_lcd_init^0,c
 15168  004CB4  0EE4               	movlw	228
 15169  004CB6                     u8017:
 15170  004CB6  2EE8               	decfsz	wreg,f,c
 15171  004CB8  D7FE               	bra	u8017
 15172  004CBA  2E04               	decfsz	??_lcd_init^0,f,c
 15173  004CBC  D7FC               	bra	u8017
 15174  004CBE  D000               	nop2	
 15175  004CC0                     
 15176                           ;fs_lcd.c: 134:     Lcd_Cmd(0x03);
 15177  004CC0  0E03               	movlw	3
 15178  004CC2  ECAC  F02B         	call	_Lcd_Cmd
 15179  004CC6                     
 15180                           ;fs_lcd.c: 135:      _delay((unsigned long)((11)*(64000000UL/4000.0)));
 15181  004CC6  0EE5               	movlw	229
 15182  004CC8  6E04               	movwf	??_lcd_init^0,c
 15183  004CCA  0E91               	movlw	145
 15184  004CCC                     u8027:
 15185  004CCC  2EE8               	decfsz	wreg,f,c
 15186  004CCE  D7FE               	bra	u8027
 15187  004CD0  2E04               	decfsz	??_lcd_init^0,f,c
 15188  004CD2  D7FC               	bra	u8027
 15189  004CD4  F000               	nop	
 15190  004CD6                     
 15191                           ;fs_lcd.c: 136:     Lcd_Cmd(0x03);
 15192  004CD6  0E03               	movlw	3
 15193  004CD8  ECAC  F02B         	call	_Lcd_Cmd
 15194  004CDC                     
 15195                           ;fs_lcd.c: 137:     Lcd_Cmd(0x02);
 15196  004CDC  0E02               	movlw	2
 15197  004CDE  ECAC  F02B         	call	_Lcd_Cmd
 15198  004CE2                     
 15199                           ;fs_lcd.c: 138:     Lcd_Cmd(0x02);
 15200  004CE2  0E02               	movlw	2
 15201  004CE4  ECAC  F02B         	call	_Lcd_Cmd
 15202  004CE8                     
 15203                           ;fs_lcd.c: 139:     Lcd_Cmd(0x08);
 15204  004CE8  0E08               	movlw	8
 15205  004CEA  ECAC  F02B         	call	_Lcd_Cmd
 15206  004CEE                     
 15207                           ;fs_lcd.c: 140:     Lcd_Cmd(0x00);
 15208  004CEE  0E00               	movlw	0
 15209  004CF0  ECAC  F02B         	call	_Lcd_Cmd
 15210  004CF4                     
 15211                           ;fs_lcd.c: 141:     Lcd_Cmd(0x0C);
 15212  004CF4  0E0C               	movlw	12
 15213  004CF6  ECAC  F02B         	call	_Lcd_Cmd
 15214  004CFA                     
 15215                           ;fs_lcd.c: 142:     Lcd_Cmd(0x00);
 15216  004CFA  0E00               	movlw	0
 15217  004CFC  ECAC  F02B         	call	_Lcd_Cmd
 15218  004D00                     
 15219                           ;fs_lcd.c: 143:     Lcd_Cmd(0x06);
 15220  004D00  0E06               	movlw	6
 15221  004D02  ECAC  F02B         	call	_Lcd_Cmd
 15222  004D06  0012               	return		;funcret
 15223  004D08                     __end_of_lcd_init:
 15224                           	callstack 0
 15225                           
 15226 ;; *************** function _Lcd_Cmd *****************
 15227 ;; Defined at:
 15228 ;;		line 56 in file "fs_lcd.c"
 15229 ;; Parameters:    Size  Location     Type
 15230 ;;  a               1    wreg     unsigned char 
 15231 ;; Auto vars:     Size  Location     Type
 15232 ;;  a               1    2[COMRAM] unsigned char 
 15233 ;; Return value:  Size  Location     Type
 15234 ;;                  1    wreg      void 
 15235 ;; Registers used:
 15236 ;;		wreg, status,2, cstack
 15237 ;; Tracked objects:
 15238 ;;		On entry : 0/0
 15239 ;;		On exit  : 0/0
 15240 ;;		Unchanged: 0/0
 15241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15242 ;;      Params:         0       0       0       0       0       0       0
 15243 ;;      Locals:         1       0       0       0       0       0       0
 15244 ;;      Temps:          1       0       0       0       0       0       0
 15245 ;;      Totals:         2       0       0       0       0       0       0
 15246 ;;Total ram usage:        2 bytes
 15247 ;; Hardware stack levels used:    1
 15248 ;; Hardware stack levels required when called:    2
 15249 ;; This function calls:
 15250 ;;		_Lcd_Port
 15251 ;; This function is called by:
 15252 ;;		_Lcd_Clear
 15253 ;;		_Lcd_Set_Cursor
 15254 ;;		_lcd_init
 15255 ;;		_Lcd_Shift_Right
 15256 ;;		_Lcd_Shift_Left
 15257 ;; This function uses a non-reentrant model
 15258 ;;
 15259                           
 15260                           	psect	text67
 15261  005758                     __ptext67:
 15262                           	callstack 0
 15263  005758                     _Lcd_Cmd:
 15264                           	callstack 24
 15265                           
 15266                           ;incstack = 0
 15267                           ;Lcd_Cmd@a stored from wreg
 15268  005758  6E03               	movwf	Lcd_Cmd@a^0,c
 15269  00575A                     
 15270                           ;fs_lcd.c: 56: void Lcd_Cmd(char a);fs_lcd.c: 57: {;fs_lcd.c: 58:    PORTDbits.RD6 = 0;
 15271  00575A  9C83               	bcf	131,6,c	;volatile
 15272  00575C                     
 15273                           ;fs_lcd.c: 59:    Lcd_Port(a);
 15274  00575C  5003               	movf	Lcd_Cmd@a^0,w,c
 15275  00575E  ECBB  F028         	call	_Lcd_Port
 15276  005762                     
 15277                           ;fs_lcd.c: 60:    PORTDbits.RD7 = 1;
 15278  005762  8E83               	bsf	131,7,c	;volatile
 15279  005764                     
 15280                           ;fs_lcd.c: 61:    _delay((unsigned long)((2)*(64000000UL/4000.0)));
 15281  005764  0E2A               	movlw	42
 15282  005766  6E02               	movwf	??_Lcd_Cmd^0,c
 15283  005768  0E8E               	movlw	142
 15284  00576A                     u8037:
 15285  00576A  2EE8               	decfsz	wreg,f,c
 15286  00576C  D7FE               	bra	u8037
 15287  00576E  2E02               	decfsz	??_Lcd_Cmd^0,f,c
 15288  005770  D7FC               	bra	u8037
 15289  005772                     
 15290                           ;fs_lcd.c: 62:    PORTDbits.RD7 = 0;
 15291  005772  9E83               	bcf	131,7,c	;volatile
 15292  005774  0012               	return		;funcret
 15293  005776                     __end_of_Lcd_Cmd:
 15294                           	callstack 0
 15295                           
 15296 ;; *************** function _Lcd_Port *****************
 15297 ;; Defined at:
 15298 ;;		line 33 in file "fs_lcd.c"
 15299 ;; Parameters:    Size  Location     Type
 15300 ;;  a               1    wreg     unsigned char 
 15301 ;; Auto vars:     Size  Location     Type
 15302 ;;  a               1    0[COMRAM] unsigned char 
 15303 ;; Return value:  Size  Location     Type
 15304 ;;                  1    wreg      void 
 15305 ;; Registers used:
 15306 ;;		wreg
 15307 ;; Tracked objects:
 15308 ;;		On entry : 0/0
 15309 ;;		On exit  : 0/0
 15310 ;;		Unchanged: 0/0
 15311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15312 ;;      Params:         0       0       0       0       0       0       0
 15313 ;;      Locals:         1       0       0       0       0       0       0
 15314 ;;      Temps:          0       0       0       0       0       0       0
 15315 ;;      Totals:         1       0       0       0       0       0       0
 15316 ;;Total ram usage:        1 bytes
 15317 ;; Hardware stack levels used:    1
 15318 ;; Hardware stack levels required when called:    1
 15319 ;; This function calls:
 15320 ;;		Nothing
 15321 ;; This function is called by:
 15322 ;;		_Lcd_Cmd
 15323 ;;		_lcd_init
 15324 ;;		_Lcd_Write_Char
 15325 ;; This function uses a non-reentrant model
 15326 ;;
 15327                           
 15328                           	psect	text68
 15329  005176                     __ptext68:
 15330                           	callstack 0
 15331  005176                     _Lcd_Port:
 15332                           	callstack 24
 15333                           
 15334                           ;incstack = 0
 15335                           ;Lcd_Port@a stored from wreg
 15336  005176  6E01               	movwf	Lcd_Port@a^0,c
 15337  005178                     
 15338                           ;fs_lcd.c: 33: void Lcd_Port(char a);fs_lcd.c: 34: {;fs_lcd.c: 35:    if(a & 1) { PORTBb
      +                          its.RB0 = 1;}
 15339  005178  A001               	btfss	Lcd_Port@a^0,0,c
 15340  00517A  EFC1  F028         	goto	u6401
 15341  00517E  EFC3  F028         	goto	u6400
 15342  005182                     u6401:
 15343  005182  EFC6  F028         	goto	l152
 15344  005186                     u6400:
 15345  005186  8081               	bsf	129,0,c	;volatile
 15346  005188  EFC7  F028         	goto	l5488
 15347  00518C                     l152:
 15348  00518C  9081               	bcf	129,0,c	;volatile
 15349  00518E                     l5488:
 15350                           
 15351                           ;fs_lcd.c: 38:    if(a & 2) { PORTBbits.RB1 = 1;}
 15352  00518E  A201               	btfss	Lcd_Port@a^0,1,c
 15353  005190  EFCC  F028         	goto	u6411
 15354  005194  EFCE  F028         	goto	u6410
 15355  005198                     u6411:
 15356  005198  EFD1  F028         	goto	l154
 15357  00519C                     u6410:
 15358  00519C  8281               	bsf	129,1,c	;volatile
 15359  00519E  EFD2  F028         	goto	l5492
 15360  0051A2                     l154:
 15361  0051A2  9281               	bcf	129,1,c	;volatile
 15362  0051A4                     l5492:
 15363                           
 15364                           ;fs_lcd.c: 41:    if(a & 4) {PORTBbits.RB2 = 1;}
 15365  0051A4  A401               	btfss	Lcd_Port@a^0,2,c
 15366  0051A6  EFD7  F028         	goto	u6421
 15367  0051AA  EFD9  F028         	goto	u6420
 15368  0051AE                     u6421:
 15369  0051AE  EFDC  F028         	goto	l156
 15370  0051B2                     u6420:
 15371  0051B2  8481               	bsf	129,2,c	;volatile
 15372  0051B4  EFDD  F028         	goto	l5496
 15373  0051B8                     l156:
 15374  0051B8  9481               	bcf	129,2,c	;volatile
 15375  0051BA                     l5496:
 15376                           
 15377                           ;fs_lcd.c: 44:    if(a & 8) {PORTBbits.RB3 = 1;}
 15378  0051BA  A601               	btfss	Lcd_Port@a^0,3,c
 15379  0051BC  EFE2  F028         	goto	u6431
 15380  0051C0  EFE4  F028         	goto	u6430
 15381  0051C4                     u6431:
 15382  0051C4  EFE7  F028         	goto	l158
 15383  0051C8                     u6430:
 15384  0051C8  8681               	bsf	129,3,c	;volatile
 15385  0051CA  EFE8  F028         	goto	l160
 15386  0051CE                     l158:
 15387  0051CE  9681               	bcf	129,3,c	;volatile
 15388  0051D0                     l160:
 15389  0051D0  0012               	return		;funcret
 15390  0051D2                     __end_of_Lcd_Port:
 15391                           	callstack 0
 15392                           
 15393 ;; *************** function _adcInit *****************
 15394 ;; Defined at:
 15395 ;;		line 53 in file "fs_adc.c"
 15396 ;; Parameters:    Size  Location     Type
 15397 ;;		None
 15398 ;; Auto vars:     Size  Location     Type
 15399 ;;		None
 15400 ;; Return value:  Size  Location     Type
 15401 ;;                  1    wreg      void 
 15402 ;; Registers used:
 15403 ;;		wreg, status,2
 15404 ;; Tracked objects:
 15405 ;;		On entry : 0/0
 15406 ;;		On exit  : 0/0
 15407 ;;		Unchanged: 0/0
 15408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15409 ;;      Params:         0       0       0       0       0       0       0
 15410 ;;      Locals:         0       0       0       0       0       0       0
 15411 ;;      Temps:          0       0       0       0       0       0       0
 15412 ;;      Totals:         0       0       0       0       0       0       0
 15413 ;;Total ram usage:        0 bytes
 15414 ;; Hardware stack levels used:    1
 15415 ;; Hardware stack levels required when called:    1
 15416 ;; This function calls:
 15417 ;;		Nothing
 15418 ;; This function is called by:
 15419 ;;		_loopTaskInit
 15420 ;; This function uses a non-reentrant model
 15421 ;;
 15422                           
 15423                           	psect	text69
 15424  00549C                     __ptext69:
 15425                           	callstack 0
 15426  00549C                     _adcInit:
 15427                           	callstack 28
 15428  00549C                     
 15429                           ;fs_adc.c: 55:     TRISAbits.TRISA0 = 1;
 15430  00549C  8092               	bsf	146,0,c	;volatile
 15431                           
 15432                           ;fs_adc.c: 56:     ANSELAbits.ANSA0 = 1;
 15433  00549E  010F               	movlb	15	; () banked
 15434  0054A0  8138               	bsf	56,0,b	;volatile
 15435                           
 15436                           ;fs_adc.c: 58:     TRISAbits.TRISA1 = 1;
 15437  0054A2  8292               	bsf	146,1,c	;volatile
 15438                           
 15439                           ;fs_adc.c: 59:     ANSELAbits.ANSA1 = 1;
 15440  0054A4  8338               	bsf	56,1,b	;volatile
 15441                           
 15442                           ;fs_adc.c: 61:     TRISAbits.TRISA2 = 1;
 15443  0054A6  8492               	bsf	146,2,c	;volatile
 15444                           
 15445                           ;fs_adc.c: 62:     ANSELAbits.ANSA2 = 1;
 15446  0054A8  8538               	bsf	56,2,b	;volatile
 15447                           
 15448                           ;fs_adc.c: 64:     TRISAbits.TRISA3 = 1;
 15449  0054AA  8692               	bsf	146,3,c	;volatile
 15450                           
 15451                           ;fs_adc.c: 65:     ANSELAbits.ANSA3 = 1;
 15452  0054AC  8738               	bsf	56,3,b	;volatile
 15453                           
 15454                           ;fs_adc.c: 67:     TRISAbits.TRISA5 = 1;
 15455  0054AE  8A92               	bsf	146,5,c	;volatile
 15456                           
 15457                           ;fs_adc.c: 68:     ANSELAbits.ANSA5 = 1;
 15458  0054B0  8B38               	bsf	56,5,b	;volatile
 15459                           
 15460                           ;fs_adc.c: 70:     TRISEbits.TRISE0 = 1;
 15461  0054B2  8096               	bsf	150,0,c	;volatile
 15462                           
 15463                           ;fs_adc.c: 71:     ANSELEbits.ANSE0 = 1;
 15464  0054B4  813C               	bsf	60,0,b	;volatile
 15465                           
 15466                           ;fs_adc.c: 73:     TRISEbits.TRISE1 = 1;
 15467  0054B6  8296               	bsf	150,1,c	;volatile
 15468                           
 15469                           ;fs_adc.c: 74:     ANSELEbits.ANSE1 = 1;
 15470  0054B8  833C               	bsf	60,1,b	;volatile
 15471                           
 15472                           ;fs_adc.c: 76:     TRISEbits.TRISE2 = 1;
 15473  0054BA  8496               	bsf	150,2,c	;volatile
 15474                           
 15475                           ;fs_adc.c: 77:     ANSELEbits.ANSE2 = 1;
 15476  0054BC  853C               	bsf	60,2,b	;volatile
 15477  0054BE                     
 15478                           ; BSR set to: 15
 15479                           ;fs_adc.c: 79:     ADCON0 = 0x01;
 15480  0054BE  0E01               	movlw	1
 15481  0054C0  6EC2               	movwf	194,c	;volatile
 15482                           
 15483                           ;fs_adc.c: 80:     ADCON1=0x00;
 15484  0054C2  0E00               	movlw	0
 15485  0054C4  6EC1               	movwf	193,c	;volatile
 15486  0054C6                     
 15487                           ; BSR set to: 15
 15488                           ;fs_adc.c: 81:  ADCON2bits.ADFM = 1;
 15489  0054C6  8EC0               	bsf	192,7,c	;volatile
 15490                           
 15491                           ;fs_adc.c: 82:     ADCON2bits.ACQT = 0b010;
 15492  0054C8  50C0               	movf	192,w,c	;volatile
 15493  0054CA  0BC7               	andlw	-57
 15494  0054CC  0910               	iorlw	16
 15495  0054CE  6EC0               	movwf	192,c	;volatile
 15496                           
 15497                           ;fs_adc.c: 83:     ADCON2bits.ADCS = 0b110;
 15498  0054D0  50C0               	movf	192,w,c	;volatile
 15499  0054D2  0BF8               	andlw	-8
 15500  0054D4  0906               	iorlw	6
 15501  0054D6  6EC0               	movwf	192,c	;volatile
 15502  0054D8                     
 15503                           ; BSR set to: 15
 15504  0054D8  0012               	return		;funcret
 15505  0054DA                     __end_of_adcInit:
 15506                           	callstack 0
 15507                           
 15508 ;; *************** function _PWM_Init *****************
 15509 ;; Defined at:
 15510 ;;		line 34 in file "fs_pwm.c"
 15511 ;; Parameters:    Size  Location     Type
 15512 ;;		None
 15513 ;; Auto vars:     Size  Location     Type
 15514 ;;		None
 15515 ;; Return value:  Size  Location     Type
 15516 ;;                  1    wreg      void 
 15517 ;; Registers used:
 15518 ;;		wreg, status,2
 15519 ;; Tracked objects:
 15520 ;;		On entry : 0/0
 15521 ;;		On exit  : 0/0
 15522 ;;		Unchanged: 0/0
 15523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15524 ;;      Params:         0       0       0       0       0       0       0
 15525 ;;      Locals:         0       0       0       0       0       0       0
 15526 ;;      Temps:          0       0       0       0       0       0       0
 15527 ;;      Totals:         0       0       0       0       0       0       0
 15528 ;;Total ram usage:        0 bytes
 15529 ;; Hardware stack levels used:    1
 15530 ;; Hardware stack levels required when called:    1
 15531 ;; This function calls:
 15532 ;;		Nothing
 15533 ;; This function is called by:
 15534 ;;		_loopTaskInit
 15535 ;; This function uses a non-reentrant model
 15536 ;;
 15537                           
 15538                           	psect	text70
 15539  0056EC                     __ptext70:
 15540                           	callstack 0
 15541  0056EC                     _PWM_Init:
 15542                           	callstack 28
 15543  0056EC                     
 15544                           ;fs_pwm.c: 36:     TRISCbits.RC2 = 0;
 15545  0056EC  9494               	bcf	148,2,c	;volatile
 15546                           
 15547                           ;fs_pwm.c: 37:     TRISCbits.RC1 = 0;
 15548  0056EE  9294               	bcf	148,1,c	;volatile
 15549  0056F0                     
 15550                           ;fs_pwm.c: 40:     CCP1CON = 0b00001100;
 15551  0056F0  0E0C               	movlw	12
 15552  0056F2  6EBD               	movwf	189,c	;volatile
 15553                           
 15554                           ;fs_pwm.c: 42:     CCP2CON = 0b00001100;
 15555  0056F4  0E0C               	movlw	12
 15556  0056F6  6E66               	movwf	102,c	;volatile
 15557                           
 15558                           ;fs_pwm.c: 46:     T2CONbits.T2CKPS = 0b01;
 15559  0056F8  50BA               	movf	186,w,c	;volatile
 15560  0056FA  0BFC               	andlw	-4
 15561  0056FC  0901               	iorlw	1
 15562  0056FE  6EBA               	movwf	186,c	;volatile
 15563  005700                     
 15564                           ;fs_pwm.c: 47:     T2CONbits.TMR2ON = 1;
 15565  005700  84BA               	bsf	186,2,c	;volatile
 15566                           
 15567                           ;fs_pwm.c: 49:     TMR2 = 0;
 15568  005702  0E00               	movlw	0
 15569  005704  6EBC               	movwf	188,c	;volatile
 15570                           
 15571                           ;fs_pwm.c: 50:     PR2 = 199;
 15572  005706  0EC7               	movlw	199
 15573  005708  6EBB               	movwf	187,c	;volatile
 15574                           
 15575                           ;fs_pwm.c: 51:     CCPR1L = 0;
 15576  00570A  0E00               	movlw	0
 15577  00570C  6EBE               	movwf	190,c	;volatile
 15578                           
 15579                           ;fs_pwm.c: 52:     CCPR2L = 0;
 15580  00570E  0E00               	movlw	0
 15581  005710  6E67               	movwf	103,c	;volatile
 15582  005712  0012               	return		;funcret
 15583  005714                     __end_of_PWM_Init:
 15584                           	callstack 0
 15585                           
 15586 ;; *************** function _PWM2_setDC *****************
 15587 ;; Defined at:
 15588 ;;		line 76 in file "fs_pwm.c"
 15589 ;; Parameters:    Size  Location     Type
 15590 ;;  dutycycle       2   87[COMRAM] short 
 15591 ;; Auto vars:     Size  Location     Type
 15592 ;;  duty            2   91[COMRAM] unsigned short 
 15593 ;; Return value:  Size  Location     Type
 15594 ;;                  1    wreg      void 
 15595 ;; Registers used:
 15596 ;;		wreg, status,2, status,0, cstack
 15597 ;; Tracked objects:
 15598 ;;		On entry : 0/0
 15599 ;;		On exit  : 0/0
 15600 ;;		Unchanged: 0/0
 15601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15602 ;;      Params:         2       0       0       0       0       0       0
 15603 ;;      Locals:         2       0       0       0       0       0       0
 15604 ;;      Temps:          2       0       0       0       0       0       0
 15605 ;;      Totals:         6       0       0       0       0       0       0
 15606 ;;Total ram usage:        6 bytes
 15607 ;; Hardware stack levels used:    1
 15608 ;; Hardware stack levels required when called:    2
 15609 ;; This function calls:
 15610 ;;		___fltol
 15611 ;;		___xxtofl
 15612 ;;		_fabsf
 15613 ;; This function is called by:
 15614 ;;		_loopTaskInit
 15615 ;;		_stopMotor
 15616 ;;		_startMotor
 15617 ;; This function uses a non-reentrant model
 15618 ;;
 15619                           
 15620                           	psect	text71
 15621  004E16                     __ptext71:
 15622                           	callstack 0
 15623  004E16                     _PWM2_setDC:
 15624                           	callstack 24
 15625  004E16                     
 15626                           ;fs_pwm.c: 80:     if (dutycycle <= 1023)
 15627  004E16  BE59               	btfsc	(PWM2_setDC@dutycycle+1)^0,7,c
 15628  004E18  EF17  F027         	goto	u6810
 15629  004E1C  0E04               	movlw	4
 15630  004E1E  5C59               	subwf	(PWM2_setDC@dutycycle+1)^0,w,c
 15631  004E20  B0D8               	btfsc	status,0,c
 15632  004E22  EF15  F027         	goto	u6811
 15633  004E26  EF17  F027         	goto	u6810
 15634  004E2A                     u6811:
 15635  004E2A  EF47  F027         	goto	l584
 15636  004E2E                     u6810:
 15637  004E2E                     
 15638                           ;fs_pwm.c: 81:     {;fs_pwm.c: 82:         duty = (uint16_t) fabsf(dutycycle);
 15639  004E2E  C058  F00E         	movff	PWM2_setDC@dutycycle,___xxtofl@val
 15640  004E32  C059  F00F         	movff	PWM2_setDC@dutycycle+1,___xxtofl@val+1
 15641  004E36  0E00               	movlw	0
 15642  004E38  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
 15643  004E3A  0EFF               	movlw	-1
 15644  004E3C  6E10               	movwf	(___xxtofl@val+2)^0,c
 15645  004E3E  6E11               	movwf	(___xxtofl@val+3)^0,c
 15646  004E40  0E01               	movlw	1
 15647  004E42  ECAC  F01A         	call	___xxtofl
 15648  004E46  C00E  F01C         	movff	?___xxtofl,fabsf@x
 15649  004E4A  C00F  F01D         	movff	?___xxtofl+1,fabsf@x+1
 15650  004E4E  C010  F01E         	movff	?___xxtofl+2,fabsf@x+2
 15651  004E52  C011  F01F         	movff	?___xxtofl+3,fabsf@x+3
 15652  004E56  EC31  F02B         	call	_fabsf	;wreg free
 15653  004E5A  C01C  F04E         	movff	?_fabsf,___fltol@f1
 15654  004E5E  C01D  F04F         	movff	?_fabsf+1,___fltol@f1+1
 15655  004E62  C01E  F050         	movff	?_fabsf+2,___fltol@f1+2
 15656  004E66  C01F  F051         	movff	?_fabsf+3,___fltol@f1+3
 15657  004E6A  EC5F  F021         	call	___fltol	;wreg free
 15658  004E6E  C04E  F05C         	movff	?___fltol,PWM2_setDC@duty
 15659  004E72  C04F  F05D         	movff	?___fltol+1,PWM2_setDC@duty+1
 15660  004E76                     
 15661                           ;fs_pwm.c: 83:         CCPR2L = duty>>2;
 15662  004E76  C05C  F05A         	movff	PWM2_setDC@duty,??_PWM2_setDC
 15663  004E7A  C05D  F05B         	movff	PWM2_setDC@duty+1,??_PWM2_setDC+1
 15664  004E7E  90D8               	bcf	status,0,c
 15665  004E80  325B               	rrcf	(??_PWM2_setDC+1)^0,f,c
 15666  004E82  325A               	rrcf	??_PWM2_setDC^0,f,c
 15667  004E84  90D8               	bcf	status,0,c
 15668  004E86  325B               	rrcf	(??_PWM2_setDC+1)^0,f,c
 15669  004E88  325A               	rrcf	??_PWM2_setDC^0,f,c
 15670  004E8A  505A               	movf	??_PWM2_setDC^0,w,c
 15671  004E8C  6E67               	movwf	103,c	;volatile
 15672  004E8E                     l584:
 15673  004E8E  0012               	return		;funcret
 15674  004E90                     __end_of_PWM2_setDC:
 15675                           	callstack 0
 15676                           
 15677 ;; *************** function _PWM1_setDC *****************
 15678 ;; Defined at:
 15679 ;;		line 60 in file "fs_pwm.c"
 15680 ;; Parameters:    Size  Location     Type
 15681 ;;  dutycycle       2   87[COMRAM] short 
 15682 ;; Auto vars:     Size  Location     Type
 15683 ;;  duty            2   91[COMRAM] unsigned short 
 15684 ;; Return value:  Size  Location     Type
 15685 ;;                  1    wreg      void 
 15686 ;; Registers used:
 15687 ;;		wreg, status,2, status,0, cstack
 15688 ;; Tracked objects:
 15689 ;;		On entry : 0/0
 15690 ;;		On exit  : 0/0
 15691 ;;		Unchanged: 0/0
 15692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15693 ;;      Params:         2       0       0       0       0       0       0
 15694 ;;      Locals:         2       0       0       0       0       0       0
 15695 ;;      Temps:          2       0       0       0       0       0       0
 15696 ;;      Totals:         6       0       0       0       0       0       0
 15697 ;;Total ram usage:        6 bytes
 15698 ;; Hardware stack levels used:    1
 15699 ;; Hardware stack levels required when called:    2
 15700 ;; This function calls:
 15701 ;;		___fltol
 15702 ;;		___xxtofl
 15703 ;;		_fabsf
 15704 ;; This function is called by:
 15705 ;;		_loopTaskInit
 15706 ;;		_stopMotor
 15707 ;;		_startMotor
 15708 ;; This function uses a non-reentrant model
 15709 ;;
 15710                           
 15711                           	psect	text72
 15712  004E90                     __ptext72:
 15713                           	callstack 0
 15714  004E90                     _PWM1_setDC:
 15715                           	callstack 24
 15716  004E90                     
 15717                           ;fs_pwm.c: 64:     if (dutycycle <= 1023)
 15718  004E90  BE59               	btfsc	(PWM1_setDC@dutycycle+1)^0,7,c
 15719  004E92  EF54  F027         	goto	u6800
 15720  004E96  0E04               	movlw	4
 15721  004E98  5C59               	subwf	(PWM1_setDC@dutycycle+1)^0,w,c
 15722  004E9A  B0D8               	btfsc	status,0,c
 15723  004E9C  EF52  F027         	goto	u6801
 15724  004EA0  EF54  F027         	goto	u6800
 15725  004EA4                     u6801:
 15726  004EA4  EF84  F027         	goto	l580
 15727  004EA8                     u6800:
 15728  004EA8                     
 15729                           ;fs_pwm.c: 65:     {;fs_pwm.c: 66:         duty = (uint16_t) fabsf(dutycycle);
 15730  004EA8  C058  F00E         	movff	PWM1_setDC@dutycycle,___xxtofl@val
 15731  004EAC  C059  F00F         	movff	PWM1_setDC@dutycycle+1,___xxtofl@val+1
 15732  004EB0  0E00               	movlw	0
 15733  004EB2  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
 15734  004EB4  0EFF               	movlw	-1
 15735  004EB6  6E10               	movwf	(___xxtofl@val+2)^0,c
 15736  004EB8  6E11               	movwf	(___xxtofl@val+3)^0,c
 15737  004EBA  0E01               	movlw	1
 15738  004EBC  ECAC  F01A         	call	___xxtofl
 15739  004EC0  C00E  F01C         	movff	?___xxtofl,fabsf@x
 15740  004EC4  C00F  F01D         	movff	?___xxtofl+1,fabsf@x+1
 15741  004EC8  C010  F01E         	movff	?___xxtofl+2,fabsf@x+2
 15742  004ECC  C011  F01F         	movff	?___xxtofl+3,fabsf@x+3
 15743  004ED0  EC31  F02B         	call	_fabsf	;wreg free
 15744  004ED4  C01C  F04E         	movff	?_fabsf,___fltol@f1
 15745  004ED8  C01D  F04F         	movff	?_fabsf+1,___fltol@f1+1
 15746  004EDC  C01E  F050         	movff	?_fabsf+2,___fltol@f1+2
 15747  004EE0  C01F  F051         	movff	?_fabsf+3,___fltol@f1+3
 15748  004EE4  EC5F  F021         	call	___fltol	;wreg free
 15749  004EE8  C04E  F05C         	movff	?___fltol,PWM1_setDC@duty
 15750  004EEC  C04F  F05D         	movff	?___fltol+1,PWM1_setDC@duty+1
 15751  004EF0                     
 15752                           ;fs_pwm.c: 67:         CCPR1L = duty>>2;
 15753  004EF0  C05C  F05A         	movff	PWM1_setDC@duty,??_PWM1_setDC
 15754  004EF4  C05D  F05B         	movff	PWM1_setDC@duty+1,??_PWM1_setDC+1
 15755  004EF8  90D8               	bcf	status,0,c
 15756  004EFA  325B               	rrcf	(??_PWM1_setDC+1)^0,f,c
 15757  004EFC  325A               	rrcf	??_PWM1_setDC^0,f,c
 15758  004EFE  90D8               	bcf	status,0,c
 15759  004F00  325B               	rrcf	(??_PWM1_setDC+1)^0,f,c
 15760  004F02  325A               	rrcf	??_PWM1_setDC^0,f,c
 15761  004F04  505A               	movf	??_PWM1_setDC^0,w,c
 15762  004F06  6EBE               	movwf	190,c	;volatile
 15763  004F08                     l580:
 15764  004F08  0012               	return		;funcret
 15765  004F0A                     __end_of_PWM1_setDC:
 15766                           	callstack 0
 15767                           
 15768 ;; *************** function _fabsf *****************
 15769 ;; Defined at:
 15770 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fabsf.c"
 15771 ;; Parameters:    Size  Location     Type
 15772 ;;  x               4   27[COMRAM] float 
 15773 ;; Auto vars:     Size  Location     Type
 15774 ;;  u               4   31[COMRAM] struct .
 15775 ;; Return value:  Size  Location     Type
 15776 ;;                  4   27[COMRAM] float 
 15777 ;; Registers used:
 15778 ;;		status,2, status,0
 15779 ;; Tracked objects:
 15780 ;;		On entry : 0/0
 15781 ;;		On exit  : 0/0
 15782 ;;		Unchanged: 0/0
 15783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15784 ;;      Params:         4       0       0       0       0       0       0
 15785 ;;      Locals:         4       0       0       0       0       0       0
 15786 ;;      Temps:          0       0       0       0       0       0       0
 15787 ;;      Totals:         8       0       0       0       0       0       0
 15788 ;;Total ram usage:        8 bytes
 15789 ;; Hardware stack levels used:    1
 15790 ;; Hardware stack levels required when called:    1
 15791 ;; This function calls:
 15792 ;;		Nothing
 15793 ;; This function is called by:
 15794 ;;		_PWM1_setDC
 15795 ;;		_PWM2_setDC
 15796 ;; This function uses a non-reentrant model
 15797 ;;
 15798                           
 15799                           	psect	text73
 15800  005662                     __ptext73:
 15801                           	callstack 0
 15802  005662                     _fabsf:
 15803                           	callstack 24
 15804  005662  C1AB  F020         	movff	fabsf@F463,fabsf@u
 15805  005666  C1AC  F021         	movff	fabsf@F463+1,fabsf@u+1
 15806  00566A  C1AD  F022         	movff	fabsf@F463+2,fabsf@u+2
 15807  00566E  C1AE  F023         	movff	fabsf@F463+3,fabsf@u+3
 15808  005672  C01C  F020         	movff	fabsf@x,fabsf@u
 15809  005676  C01D  F021         	movff	fabsf@x+1,fabsf@u+1
 15810  00567A  C01E  F022         	movff	fabsf@x+2,fabsf@u+2
 15811  00567E  C01F  F023         	movff	fabsf@x+3,fabsf@u+3
 15812  005682  9E23               	bcf	(fabsf@u+3)^0,7,c
 15813  005684  C020  F01C         	movff	fabsf@u,?_fabsf
 15814  005688  C021  F01D         	movff	fabsf@u+1,?_fabsf+1
 15815  00568C  C022  F01E         	movff	fabsf@u+2,?_fabsf+2
 15816  005690  C023  F01F         	movff	fabsf@u+3,?_fabsf+3
 15817  005694  0012               	return		;funcret
 15818  005696                     __end_of_fabsf:
 15819                           	callstack 0
 15820                           
 15821 ;; *************** function ___xxtofl *****************
 15822 ;; Defined at:
 15823 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
 15824 ;; Parameters:    Size  Location     Type
 15825 ;;  sign            1    wreg     unsigned char 
 15826 ;;  val             4   13[COMRAM] long 
 15827 ;; Auto vars:     Size  Location     Type
 15828 ;;  sign            1   21[COMRAM] unsigned char 
 15829 ;;  arg             4   23[COMRAM] unsigned long 
 15830 ;;  exp             1   22[COMRAM] unsigned char 
 15831 ;; Return value:  Size  Location     Type
 15832 ;;                  4   13[COMRAM] unsigned char 
 15833 ;; Registers used:
 15834 ;;		wreg, status,2, status,0
 15835 ;; Tracked objects:
 15836 ;;		On entry : 0/0
 15837 ;;		On exit  : 0/0
 15838 ;;		Unchanged: 0/0
 15839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15840 ;;      Params:         4       0       0       0       0       0       0
 15841 ;;      Locals:         6       0       0       0       0       0       0
 15842 ;;      Temps:          4       0       0       0       0       0       0
 15843 ;;      Totals:        14       0       0       0       0       0       0
 15844 ;;Total ram usage:       14 bytes
 15845 ;; Hardware stack levels used:    1
 15846 ;; Hardware stack levels required when called:    1
 15847 ;; This function calls:
 15848 ;;		Nothing
 15849 ;; This function is called by:
 15850 ;;		_scanAdcConversion
 15851 ;;		_calculatedAverageValue
 15852 ;;		_PWM1_setDC
 15853 ;;		_PWM2_setDC
 15854 ;;		_speedControl
 15855 ;; This function uses a non-reentrant model
 15856 ;;
 15857                           
 15858                           	psect	text74
 15859  003558                     __ptext74:
 15860                           	callstack 0
 15861  003558                     ___xxtofl:
 15862                           	callstack 24
 15863                           
 15864                           ;incstack = 0
 15865                           ;___xxtofl@sign stored from wreg
 15866  003558  6E16               	movwf	___xxtofl@sign^0,c
 15867  00355A  5016               	movf	___xxtofl@sign^0,w,c
 15868  00355C  B4D8               	btfsc	status,2,c
 15869  00355E  EFB3  F01A         	goto	u6491
 15870  003562  EFB5  F01A         	goto	u6490
 15871  003566                     u6491:
 15872  003566  EFD7  F01A         	goto	l1352
 15873  00356A                     u6490:
 15874  00356A  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
 15875  00356C  EFBC  F01A         	goto	u6500
 15876  003570  EFBA  F01A         	goto	u6501
 15877  003574                     u6501:
 15878  003574  EFD7  F01A         	goto	l1352
 15879  003578                     u6500:
 15880  003578  C00E  F012         	movff	___xxtofl@val,??___xxtofl
 15881  00357C  C00F  F013         	movff	___xxtofl@val+1,??___xxtofl+1
 15882  003580  C010  F014         	movff	___xxtofl@val+2,??___xxtofl+2
 15883  003584  C011  F015         	movff	___xxtofl@val+3,??___xxtofl+3
 15884  003588  1E12               	comf	??___xxtofl^0,f,c
 15885  00358A  1E13               	comf	(??___xxtofl+1)^0,f,c
 15886  00358C  1E14               	comf	(??___xxtofl+2)^0,f,c
 15887  00358E  1E15               	comf	(??___xxtofl+3)^0,f,c
 15888  003590  2A12               	incf	??___xxtofl^0,f,c
 15889  003592  0E00               	movlw	0
 15890  003594  2213               	addwfc	(??___xxtofl+1)^0,f,c
 15891  003596  2214               	addwfc	(??___xxtofl+2)^0,f,c
 15892  003598  2215               	addwfc	(??___xxtofl+3)^0,f,c
 15893  00359A  C012  F018         	movff	??___xxtofl,___xxtofl@arg
 15894  00359E  C013  F019         	movff	??___xxtofl+1,___xxtofl@arg+1
 15895  0035A2  C014  F01A         	movff	??___xxtofl+2,___xxtofl@arg+2
 15896  0035A6  C015  F01B         	movff	??___xxtofl+3,___xxtofl@arg+3
 15897  0035AA  EFDF  F01A         	goto	l5546
 15898  0035AE                     l1352:
 15899  0035AE  C00E  F018         	movff	___xxtofl@val,___xxtofl@arg
 15900  0035B2  C00F  F019         	movff	___xxtofl@val+1,___xxtofl@arg+1
 15901  0035B6  C010  F01A         	movff	___xxtofl@val+2,___xxtofl@arg+2
 15902  0035BA  C011  F01B         	movff	___xxtofl@val+3,___xxtofl@arg+3
 15903  0035BE                     l5546:
 15904  0035BE  500E               	movf	___xxtofl@val^0,w,c
 15905  0035C0  100F               	iorwf	(___xxtofl@val+1)^0,w,c
 15906  0035C2  1010               	iorwf	(___xxtofl@val+2)^0,w,c
 15907  0035C4  1011               	iorwf	(___xxtofl@val+3)^0,w,c
 15908  0035C6  A4D8               	btfss	status,2,c
 15909  0035C8  EFE8  F01A         	goto	u6511
 15910  0035CC  EFEA  F01A         	goto	u6510
 15911  0035D0                     u6511:
 15912  0035D0  EFF4  F01A         	goto	l5552
 15913  0035D4                     u6510:
 15914  0035D4  0E00               	movlw	0
 15915  0035D6  6E0E               	movwf	?___xxtofl^0,c
 15916  0035D8  0E00               	movlw	0
 15917  0035DA  6E0F               	movwf	(?___xxtofl+1)^0,c
 15918  0035DC  0E00               	movlw	0
 15919  0035DE  6E10               	movwf	(?___xxtofl+2)^0,c
 15920  0035E0  0E00               	movlw	0
 15921  0035E2  6E11               	movwf	(?___xxtofl+3)^0,c
 15922  0035E4  EF85  F01B         	goto	l1355
 15923  0035E8                     l5552:
 15924  0035E8  0E96               	movlw	150
 15925  0035EA  6E17               	movwf	___xxtofl@exp^0,c
 15926  0035EC  EFFE  F01A         	goto	l5556
 15927  0035F0                     l5554:
 15928  0035F0  2A17               	incf	___xxtofl@exp^0,f,c
 15929  0035F2  90D8               	bcf	status,0,c
 15930  0035F4  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
 15931  0035F6  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
 15932  0035F8  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
 15933  0035FA  3218               	rrcf	___xxtofl@arg^0,f,c
 15934  0035FC                     l5556:
 15935  0035FC  0E00               	movlw	0
 15936  0035FE  1418               	andwf	___xxtofl@arg^0,w,c
 15937  003600  6E12               	movwf	??___xxtofl^0,c
 15938  003602  0E00               	movlw	0
 15939  003604  1419               	andwf	(___xxtofl@arg+1)^0,w,c
 15940  003606  6E13               	movwf	(??___xxtofl+1)^0,c
 15941  003608  0E00               	movlw	0
 15942  00360A  141A               	andwf	(___xxtofl@arg+2)^0,w,c
 15943  00360C  6E14               	movwf	(??___xxtofl+2)^0,c
 15944  00360E  0EFE               	movlw	254
 15945  003610  141B               	andwf	(___xxtofl@arg+3)^0,w,c
 15946  003612  6E15               	movwf	(??___xxtofl+3)^0,c
 15947  003614  5012               	movf	??___xxtofl^0,w,c
 15948  003616  1013               	iorwf	(??___xxtofl+1)^0,w,c
 15949  003618  1014               	iorwf	(??___xxtofl+2)^0,w,c
 15950  00361A  1015               	iorwf	(??___xxtofl+3)^0,w,c
 15951  00361C  A4D8               	btfss	status,2,c
 15952  00361E  EF13  F01B         	goto	u6521
 15953  003622  EF15  F01B         	goto	u6520
 15954  003626                     u6521:
 15955  003626  EFF8  F01A         	goto	l5554
 15956  00362A                     u6520:
 15957  00362A  EF23  F01B         	goto	l1359
 15958  00362E                     l5558:
 15959  00362E  2A17               	incf	___xxtofl@exp^0,f,c
 15960  003630  0E01               	movlw	1
 15961  003632  2618               	addwf	___xxtofl@arg^0,f,c
 15962  003634  0E00               	movlw	0
 15963  003636  2219               	addwfc	(___xxtofl@arg+1)^0,f,c
 15964  003638  221A               	addwfc	(___xxtofl@arg+2)^0,f,c
 15965  00363A  221B               	addwfc	(___xxtofl@arg+3)^0,f,c
 15966  00363C  90D8               	bcf	status,0,c
 15967  00363E  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
 15968  003640  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
 15969  003642  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
 15970  003644  3218               	rrcf	___xxtofl@arg^0,f,c
 15971  003646                     l1359:
 15972  003646  0E00               	movlw	0
 15973  003648  1418               	andwf	___xxtofl@arg^0,w,c
 15974  00364A  6E12               	movwf	??___xxtofl^0,c
 15975  00364C  0E00               	movlw	0
 15976  00364E  1419               	andwf	(___xxtofl@arg+1)^0,w,c
 15977  003650  6E13               	movwf	(??___xxtofl+1)^0,c
 15978  003652  0E00               	movlw	0
 15979  003654  141A               	andwf	(___xxtofl@arg+2)^0,w,c
 15980  003656  6E14               	movwf	(??___xxtofl+2)^0,c
 15981  003658  0EFF               	movlw	255
 15982  00365A  141B               	andwf	(___xxtofl@arg+3)^0,w,c
 15983  00365C  6E15               	movwf	(??___xxtofl+3)^0,c
 15984  00365E  5012               	movf	??___xxtofl^0,w,c
 15985  003660  1013               	iorwf	(??___xxtofl+1)^0,w,c
 15986  003662  1014               	iorwf	(??___xxtofl+2)^0,w,c
 15987  003664  1015               	iorwf	(??___xxtofl+3)^0,w,c
 15988  003666  A4D8               	btfss	status,2,c
 15989  003668  EF38  F01B         	goto	u6531
 15990  00366C  EF3A  F01B         	goto	u6530
 15991  003670                     u6531:
 15992  003670  EF17  F01B         	goto	l5558
 15993  003674                     u6530:
 15994  003674  EF42  F01B         	goto	l5566
 15995  003678                     l5564:
 15996  003678  0617               	decf	___xxtofl@exp^0,f,c
 15997  00367A  90D8               	bcf	status,0,c
 15998  00367C  3618               	rlcf	___xxtofl@arg^0,f,c
 15999  00367E  3619               	rlcf	(___xxtofl@arg+1)^0,f,c
 16000  003680  361A               	rlcf	(___xxtofl@arg+2)^0,f,c
 16001  003682  361B               	rlcf	(___xxtofl@arg+3)^0,f,c
 16002  003684                     l5566:
 16003  003684  BE1A               	btfsc	(___xxtofl@arg+2)^0,7,c
 16004  003686  EF47  F01B         	goto	u6541
 16005  00368A  EF49  F01B         	goto	u6540
 16006  00368E                     u6541:
 16007  00368E  EF51  F01B         	goto	l1366
 16008  003692                     u6540:
 16009  003692  0E02               	movlw	2
 16010  003694  6017               	cpfslt	___xxtofl@exp^0,c
 16011  003696  EF4F  F01B         	goto	u6551
 16012  00369A  EF51  F01B         	goto	u6550
 16013  00369E                     u6551:
 16014  00369E  EF3C  F01B         	goto	l5564
 16015  0036A2                     u6550:
 16016  0036A2                     l1366:
 16017  0036A2  B017               	btfsc	___xxtofl@exp^0,0,c
 16018  0036A4  EF56  F01B         	goto	u6561
 16019  0036A8  EF58  F01B         	goto	u6560
 16020  0036AC                     u6561:
 16021  0036AC  EF59  F01B         	goto	l5572
 16022  0036B0                     u6560:
 16023  0036B0  9E1A               	bcf	(___xxtofl@arg+2)^0,7,c
 16024  0036B2                     l5572:
 16025  0036B2  90D8               	bcf	status,0,c
 16026  0036B4  3217               	rrcf	___xxtofl@exp^0,f,c
 16027  0036B6  C017  F012         	movff	___xxtofl@exp,??___xxtofl
 16028  0036BA  6A13               	clrf	(??___xxtofl+1)^0,c
 16029  0036BC  6A14               	clrf	(??___xxtofl+2)^0,c
 16030  0036BE  6A15               	clrf	(??___xxtofl+3)^0,c
 16031  0036C0  C012  F015         	movff	??___xxtofl,??___xxtofl+3
 16032  0036C4  6A14               	clrf	(??___xxtofl+2)^0,c
 16033  0036C6  6A13               	clrf	(??___xxtofl+1)^0,c
 16034  0036C8  6A12               	clrf	??___xxtofl^0,c
 16035  0036CA  5012               	movf	??___xxtofl^0,w,c
 16036  0036CC  1218               	iorwf	___xxtofl@arg^0,f,c
 16037  0036CE  5013               	movf	(??___xxtofl+1)^0,w,c
 16038  0036D0  1219               	iorwf	(___xxtofl@arg+1)^0,f,c
 16039  0036D2  5014               	movf	(??___xxtofl+2)^0,w,c
 16040  0036D4  121A               	iorwf	(___xxtofl@arg+2)^0,f,c
 16041  0036D6  5015               	movf	(??___xxtofl+3)^0,w,c
 16042  0036D8  121B               	iorwf	(___xxtofl@arg+3)^0,f,c
 16043  0036DA  5016               	movf	___xxtofl@sign^0,w,c
 16044  0036DC  B4D8               	btfsc	status,2,c
 16045  0036DE  EF73  F01B         	goto	u6571
 16046  0036E2  EF75  F01B         	goto	u6570
 16047  0036E6                     u6571:
 16048  0036E6  EF7D  F01B         	goto	l5582
 16049  0036EA                     u6570:
 16050  0036EA  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
 16051  0036EC  EF7C  F01B         	goto	u6580
 16052  0036F0  EF7A  F01B         	goto	u6581
 16053  0036F4                     u6581:
 16054  0036F4  EF7D  F01B         	goto	l5582
 16055  0036F8                     u6580:
 16056  0036F8  8E1B               	bsf	(___xxtofl@arg+3)^0,7,c
 16057  0036FA                     l5582:
 16058  0036FA  C018  F00E         	movff	___xxtofl@arg,?___xxtofl
 16059  0036FE  C019  F00F         	movff	___xxtofl@arg+1,?___xxtofl+1
 16060  003702  C01A  F010         	movff	___xxtofl@arg+2,?___xxtofl+2
 16061  003706  C01B  F011         	movff	___xxtofl@arg+3,?___xxtofl+3
 16062  00370A                     l1355:
 16063  00370A  0012               	return		;funcret
 16064  00370C                     __end_of___xxtofl:
 16065                           	callstack 0
 16066                           
 16067 ;; *************** function ___fltol *****************
 16068 ;; Defined at:
 16069 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
 16070 ;; Parameters:    Size  Location     Type
 16071 ;;  f1              4   77[COMRAM] unsigned char 
 16072 ;; Auto vars:     Size  Location     Type
 16073 ;;  exp1            1   86[COMRAM] unsigned char 
 16074 ;;  sign1           1   85[COMRAM] unsigned char 
 16075 ;; Return value:  Size  Location     Type
 16076 ;;                  4   77[COMRAM] long 
 16077 ;; Registers used:
 16078 ;;		wreg, status,2, status,0
 16079 ;; Tracked objects:
 16080 ;;		On entry : 0/0
 16081 ;;		On exit  : 0/0
 16082 ;;		Unchanged: 0/0
 16083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16084 ;;      Params:         4       0       0       0       0       0       0
 16085 ;;      Locals:         2       0       0       0       0       0       0
 16086 ;;      Temps:          4       0       0       0       0       0       0
 16087 ;;      Totals:        10       0       0       0       0       0       0
 16088 ;;Total ram usage:       10 bytes
 16089 ;; Hardware stack levels used:    1
 16090 ;; Hardware stack levels required when called:    1
 16091 ;; This function calls:
 16092 ;;		Nothing
 16093 ;; This function is called by:
 16094 ;;		_scanAdcConversion
 16095 ;;		_PWM1_setDC
 16096 ;;		_PWM2_setDC
 16097 ;;		_speedControl
 16098 ;;		_efgtoa
 16099 ;; This function uses a non-reentrant model
 16100 ;;
 16101                           
 16102                           	psect	text75
 16103  0042BE                     __ptext75:
 16104                           	callstack 0
 16105  0042BE                     ___fltol:
 16106                           	callstack 24
 16107  0042BE  3450               	rlcf	(___fltol@f1+2)^0,w,c
 16108  0042C0  3451               	rlcf	(___fltol@f1+3)^0,w,c
 16109  0042C2  6E57               	movwf	___fltol@exp1^0,c
 16110  0042C4  5057               	movf	___fltol@exp1^0,w,c
 16111  0042C6  A4D8               	btfss	status,2,c
 16112  0042C8  EF68  F021         	goto	u5221
 16113  0042CC  EF6A  F021         	goto	u5220
 16114  0042D0                     u5221:
 16115  0042D0  EF74  F021         	goto	l4904
 16116  0042D4                     u5220:
 16117  0042D4                     l4900:
 16118  0042D4  0E00               	movlw	0
 16119  0042D6  6E4E               	movwf	?___fltol^0,c
 16120  0042D8  0E00               	movlw	0
 16121  0042DA  6E4F               	movwf	(?___fltol+1)^0,c
 16122  0042DC  0E00               	movlw	0
 16123  0042DE  6E50               	movwf	(?___fltol+2)^0,c
 16124  0042E0  0E00               	movlw	0
 16125  0042E2  6E51               	movwf	(?___fltol+3)^0,c
 16126  0042E4  EFE1  F021         	goto	l994
 16127  0042E8                     l4904:
 16128  0042E8  C04E  F052         	movff	___fltol@f1,??___fltol
 16129  0042EC  C04F  F053         	movff	___fltol@f1+1,??___fltol+1
 16130  0042F0  C050  F054         	movff	___fltol@f1+2,??___fltol+2
 16131  0042F4  C051  F055         	movff	___fltol@f1+3,??___fltol+3
 16132  0042F8  0E20               	movlw	32
 16133  0042FA  EF84  F021         	goto	u5230
 16134  0042FE                     u5235:
 16135  0042FE  90D8               	bcf	status,0,c
 16136  004300  3255               	rrcf	(??___fltol+3)^0,f,c
 16137  004302  3254               	rrcf	(??___fltol+2)^0,f,c
 16138  004304  3253               	rrcf	(??___fltol+1)^0,f,c
 16139  004306  3252               	rrcf	??___fltol^0,f,c
 16140  004308                     u5230:
 16141  004308  2EE8               	decfsz	wreg,f,c
 16142  00430A  EF7F  F021         	goto	u5235
 16143  00430E  5052               	movf	??___fltol^0,w,c
 16144  004310  6E56               	movwf	___fltol@sign1^0,c
 16145  004312  8E50               	bsf	(___fltol@f1+2)^0,7,c
 16146  004314  0EFF               	movlw	255
 16147  004316  164E               	andwf	___fltol@f1^0,f,c
 16148  004318  0EFF               	movlw	255
 16149  00431A  164F               	andwf	(___fltol@f1+1)^0,f,c
 16150  00431C  0EFF               	movlw	255
 16151  00431E  1650               	andwf	(___fltol@f1+2)^0,f,c
 16152  004320  0E00               	movlw	0
 16153  004322  1651               	andwf	(___fltol@f1+3)^0,f,c
 16154  004324  0E96               	movlw	150
 16155  004326  5E57               	subwf	___fltol@exp1^0,f,c
 16156  004328  BE57               	btfsc	___fltol@exp1^0,7,c
 16157  00432A  EF9B  F021         	goto	u5240
 16158  00432E  EF99  F021         	goto	u5241
 16159  004332                     u5241:
 16160  004332  EFB1  F021         	goto	l4924
 16161  004336                     u5240:
 16162  004336  5057               	movf	___fltol@exp1^0,w,c
 16163  004338  0A80               	xorlw	128
 16164  00433A  0F97               	addlw	151
 16165  00433C  B0D8               	btfsc	status,0,c
 16166  00433E  EFA3  F021         	goto	u5251
 16167  004342  EFA5  F021         	goto	u5250
 16168  004346                     u5251:
 16169  004346  EFA7  F021         	goto	l4920
 16170  00434A                     u5250:
 16171  00434A  EF6A  F021         	goto	l4900
 16172  00434E                     l4920:
 16173  00434E  90D8               	bcf	status,0,c
 16174  004350  3251               	rrcf	(___fltol@f1+3)^0,f,c
 16175  004352  3250               	rrcf	(___fltol@f1+2)^0,f,c
 16176  004354  324F               	rrcf	(___fltol@f1+1)^0,f,c
 16177  004356  324E               	rrcf	___fltol@f1^0,f,c
 16178  004358  3E57               	incfsz	___fltol@exp1^0,f,c
 16179  00435A  EFA7  F021         	goto	l4920
 16180  00435E  EFC9  F021         	goto	l4934
 16181  004362                     l4924:
 16182  004362  0E1F               	movlw	31
 16183  004364  6457               	cpfsgt	___fltol@exp1^0,c
 16184  004366  EFB7  F021         	goto	u5261
 16185  00436A  EFB9  F021         	goto	u5260
 16186  00436E                     u5261:
 16187  00436E  EFC1  F021         	goto	l4932
 16188  004372                     u5260:
 16189  004372  EF6A  F021         	goto	l4900
 16190  004376                     l4930:
 16191  004376  90D8               	bcf	status,0,c
 16192  004378  364E               	rlcf	___fltol@f1^0,f,c
 16193  00437A  364F               	rlcf	(___fltol@f1+1)^0,f,c
 16194  00437C  3650               	rlcf	(___fltol@f1+2)^0,f,c
 16195  00437E  3651               	rlcf	(___fltol@f1+3)^0,f,c
 16196  004380  0657               	decf	___fltol@exp1^0,f,c
 16197  004382                     l4932:
 16198  004382  5057               	movf	___fltol@exp1^0,w,c
 16199  004384  A4D8               	btfss	status,2,c
 16200  004386  EFC7  F021         	goto	u5271
 16201  00438A  EFC9  F021         	goto	u5270
 16202  00438E                     u5271:
 16203  00438E  EFBB  F021         	goto	l4930
 16204  004392                     u5270:
 16205  004392                     l4934:
 16206  004392  5056               	movf	___fltol@sign1^0,w,c
 16207  004394  B4D8               	btfsc	status,2,c
 16208  004396  EFCF  F021         	goto	u5281
 16209  00439A  EFD1  F021         	goto	u5280
 16210  00439E                     u5281:
 16211  00439E  EFD9  F021         	goto	l4938
 16212  0043A2                     u5280:
 16213  0043A2  1E51               	comf	(___fltol@f1+3)^0,f,c
 16214  0043A4  1E50               	comf	(___fltol@f1+2)^0,f,c
 16215  0043A6  1E4F               	comf	(___fltol@f1+1)^0,f,c
 16216  0043A8  6C4E               	negf	___fltol@f1^0,c
 16217  0043AA  0E00               	movlw	0
 16218  0043AC  224F               	addwfc	(___fltol@f1+1)^0,f,c
 16219  0043AE  2250               	addwfc	(___fltol@f1+2)^0,f,c
 16220  0043B0  2251               	addwfc	(___fltol@f1+3)^0,f,c
 16221  0043B2                     l4938:
 16222  0043B2  C04E  F04E         	movff	___fltol@f1,?___fltol
 16223  0043B6  C04F  F04F         	movff	___fltol@f1+1,?___fltol+1
 16224  0043BA  C050  F050         	movff	___fltol@f1+2,?___fltol+2
 16225  0043BE  C051  F051         	movff	___fltol@f1+3,?___fltol+3
 16226  0043C2                     l994:
 16227  0043C2  0012               	return		;funcret
 16228  0043C4                     __end_of___fltol:
 16229                           	callstack 0
 16230                           
 16231 ;; *************** function _TIMER0 *****************
 16232 ;; Defined at:
 16233 ;;		line 33 in file "fs_timer.c"
 16234 ;; Parameters:    Size  Location     Type
 16235 ;;		None
 16236 ;; Auto vars:     Size  Location     Type
 16237 ;;		None
 16238 ;; Return value:  Size  Location     Type
 16239 ;;                  1    wreg      void 
 16240 ;; Registers used:
 16241 ;;		wreg, status,2, status,0
 16242 ;; Tracked objects:
 16243 ;;		On entry : 0/0
 16244 ;;		On exit  : 0/0
 16245 ;;		Unchanged: 0/0
 16246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16247 ;;      Params:         0       0       0       0       0       0       0
 16248 ;;      Locals:         0       0       0       0       0       0       0
 16249 ;;      Temps:          0       0       0       0       0       0       0
 16250 ;;      Totals:         0       0       0       0       0       0       0
 16251 ;;Total ram usage:        0 bytes
 16252 ;; Hardware stack levels used:    1
 16253 ;; This function calls:
 16254 ;;		Nothing
 16255 ;; This function is called by:
 16256 ;;		Interrupt level 2
 16257 ;; This function uses a non-reentrant model
 16258 ;;
 16259                           
 16260                           	psect	intcode
 16261  000008                     __pintcode:
 16262                           	callstack 0
 16263  000008                     _TIMER0:
 16264                           	callstack 19
 16265                           
 16266                           ;incstack = 0
 16267  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 16268  00000A                     
 16269                           ;fs_timer.c: 35:     if ((INTCONbits.TMR0IF)&&(INTCONbits.TMR0IE))
 16270  00000A  A4F2               	btfss	242,2,c	;volatile
 16271  00000C  EF0A  F000         	goto	i2u790_41
 16272  000010  EF0C  F000         	goto	i2u790_40
 16273  000014                     i2u790_41:
 16274  000014  EF4B  F000         	goto	i2l691
 16275  000018                     i2u790_40:
 16276  000018  AAF2               	btfss	242,5,c	;volatile
 16277  00001A  EF11  F000         	goto	i2u791_41
 16278  00001E  EF13  F000         	goto	i2u791_40
 16279  000022                     i2u791_41:
 16280  000022  EF4B  F000         	goto	i2l691
 16281  000026                     i2u791_40:
 16282  000026                     
 16283                           ;fs_timer.c: 36:     {;fs_timer.c: 37:         INTCONbits.TMR0IF = 0;
 16284  000026  94F2               	bcf	242,2,c	;volatile
 16285  000028                     
 16286                           ;fs_timer.c: 38:         TMR0H = 0x63;
 16287  000028  0E63               	movlw	99
 16288  00002A  6ED7               	movwf	215,c	;volatile
 16289                           
 16290                           ;fs_timer.c: 39:         TMR0L = 0xC0;
 16291  00002C  0EC0               	movlw	192
 16292  00002E  6ED6               	movwf	214,c	;volatile
 16293  000030                     
 16294                           ;fs_timer.c: 41:         timer_value.adc_conversion_time++;
 16295  000030  0101               	movlb	1	; () banked
 16296  000032  2B94               	incf	(_timer_value+5)& (0+255),f,b
 16297  000034                     
 16298                           ; BSR set to: 1
 16299                           ;fs_timer.c: 43:         if (startIsClick == 1)
 16300  000034  0100               	movlb	0	; () banked
 16301  000036  05FE               	decf	_startIsClick& (0+255),w,b
 16302  000038  A4D8               	btfss	status,2,c
 16303  00003A  EF21  F000         	goto	i2u792_41
 16304  00003E  EF23  F000         	goto	i2u792_40
 16305  000042                     i2u792_41:
 16306  000042  EF26  F000         	goto	i2l6522
 16307  000046                     i2u792_40:
 16308  000046                     
 16309                           ; BSR set to: 0
 16310                           ;fs_timer.c: 44:         {;fs_timer.c: 45:             timer_value.second_counter++;
 16311  000046  0101               	movlb	1	; () banked
 16312  000048  4B95               	infsnz	(_timer_value+6)& (0+255),f,b
 16313  00004A  2B96               	incf	(_timer_value+7)& (0+255),f,b
 16314  00004C                     i2l6522:
 16315                           
 16316                           ;fs_timer.c: 48:         if(button_bounce_controller.menu == 1)
 16317  00004C  0101               	movlb	1	; () banked
 16318  00004E  059D               	decf	_button_bounce_controller& (0+255),w,b
 16319  000050  A4D8               	btfss	status,2,c
 16320  000052  EF2D  F000         	goto	i2u793_41
 16321  000056  EF2F  F000         	goto	i2u793_40
 16322  00005A                     i2u793_41:
 16323  00005A  EF30  F000         	goto	i2l6526
 16324  00005E                     i2u793_40:
 16325  00005E                     
 16326                           ; BSR set to: 1
 16327                           ;fs_timer.c: 49:         {;fs_timer.c: 50:              timer_value.menu_login_delay++;
 16328  00005E  2B93               	incf	(_timer_value+4)& (0+255),f,b
 16329  000060                     i2l6526:
 16330                           
 16331                           ; BSR set to: 1
 16332                           ;fs_timer.c: 52:         if(button_bounce_controller.menu == 0)
 16333  000060  519D               	movf	_button_bounce_controller& (0+255),w,b
 16334  000062  A4D8               	btfss	status,2,c
 16335  000064  EF36  F000         	goto	i2u794_41
 16336  000068  EF38  F000         	goto	i2u794_40
 16337  00006C                     i2u794_41:
 16338  00006C  EF3A  F000         	goto	i2l6530
 16339  000070                     i2u794_40:
 16340  000070                     
 16341                           ; BSR set to: 1
 16342                           ;fs_timer.c: 53:         {;fs_timer.c: 54:              timer_value.menu_login_delay = 0
      +                          ;
 16343  000070  0E00               	movlw	0
 16344  000072  6F93               	movwf	(_timer_value+4)& (0+255),b
 16345  000074                     i2l6530:
 16346                           
 16347                           ; BSR set to: 1
 16348                           ;fs_timer.c: 57:         if (timer_value.second_counter >= 100)
 16349  000074  5196               	movf	(_timer_value+7)& (0+255),w,b
 16350  000076  E109               	bnz	i2u795_40
 16351  000078  0E64               	movlw	100
 16352  00007A  5D95               	subwf	(_timer_value+6)& (0+255),w,b
 16353  00007C  A0D8               	btfss	status,0,c
 16354  00007E  EF43  F000         	goto	i2u795_41
 16355  000082  EF45  F000         	goto	i2u795_40
 16356  000086                     i2u795_41:
 16357  000086  EF4B  F000         	goto	i2l691
 16358  00008A                     i2u795_40:
 16359  00008A                     
 16360                           ; BSR set to: 1
 16361                           ;fs_timer.c: 58:         {;fs_timer.c: 59:             timer_value.second_counter = 0;
 16362  00008A  0E00               	movlw	0
 16363  00008C  6F96               	movwf	(_timer_value+7)& (0+255),b
 16364  00008E  0E00               	movlw	0
 16365  000090  6F95               	movwf	(_timer_value+6)& (0+255),b
 16366  000092                     
 16367                           ; BSR set to: 1
 16368                           ;fs_timer.c: 60:             timer_counter_flag.one_second_flag = 1;
 16369  000092  0100               	movlb	0	; () banked
 16370  000094  81FA               	bsf	_timer_counter_flag& (0+255),0,b
 16371  000096                     i2l691:
 16372  000096  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 16373  000098  0011               	retfie		f
 16374  00009A                     __end_of_TIMER0:
 16375                           	callstack 0
 16376                           
 16377                           	psect	rparam
 16378  0000                     
 16379                           	psect	temp
 16380  00005F                     btemp:
 16381                           	callstack 0
 16382  00005F                     	ds	1
 16383  0000                     int$flags	set	btemp
 16384  0000                     wtemp8	set	btemp+1
 16385  0000                     ttemp5	set	btemp+1
 16386  0000                     ttemp6	set	btemp+4
 16387  0000                     ttemp7	set	btemp+8
 16388                           
 16389                           	psect	idloc
 16390                           
 16391                           ;Config register IDLOC0 @ 0x200000
 16392                           ;	unspecified, using default values
 16393  200000                     	org	2097152
 16394  200000  FF                 	db	255
 16395                           
 16396                           ;Config register IDLOC1 @ 0x200001
 16397                           ;	unspecified, using default values
 16398  200001                     	org	2097153
 16399  200001  FF                 	db	255
 16400                           
 16401                           ;Config register IDLOC2 @ 0x200002
 16402                           ;	unspecified, using default values
 16403  200002                     	org	2097154
 16404  200002  FF                 	db	255
 16405                           
 16406                           ;Config register IDLOC3 @ 0x200003
 16407                           ;	unspecified, using default values
 16408  200003                     	org	2097155
 16409  200003  FF                 	db	255
 16410                           
 16411                           ;Config register IDLOC4 @ 0x200004
 16412                           ;	unspecified, using default values
 16413  200004                     	org	2097156
 16414  200004  FF                 	db	255
 16415                           
 16416                           ;Config register IDLOC5 @ 0x200005
 16417                           ;	unspecified, using default values
 16418  200005                     	org	2097157
 16419  200005  FF                 	db	255
 16420                           
 16421                           ;Config register IDLOC6 @ 0x200006
 16422                           ;	unspecified, using default values
 16423  200006                     	org	2097158
 16424  200006  FF                 	db	255
 16425                           
 16426                           ;Config register IDLOC7 @ 0x200007
 16427                           ;	unspecified, using default values
 16428  200007                     	org	2097159
 16429  200007  FF                 	db	255
 16430                           
 16431                           	psect	config
 16432                           
 16433                           ; Padding undefined space
 16434  300000                     	org	3145728
 16435  300000  FF                 	db	255
 16436                           
 16437                           ;Config register CONFIG1H @ 0x300001
 16438                           ;	Oscillator Selection bits
 16439                           ;	FOSC = INTIO67, Internal oscillator block
 16440                           ;	4X PLL Enable
 16441                           ;	PLLCFG = ON, Oscillator multiplied by 4
 16442                           ;	Primary clock enable bit
 16443                           ;	PRICLKEN = ON, Primary clock is always enabled
 16444                           ;	Fail-Safe Clock Monitor Enable bit
 16445                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 16446                           ;	Internal/External Oscillator Switchover bit
 16447                           ;	IESO = ON, Oscillator Switchover mode enabled
 16448  300001                     	org	3145729
 16449  300001  B8                 	db	184
 16450                           
 16451                           ;Config register CONFIG2L @ 0x300002
 16452                           ;	Power-up Timer Enable bit
 16453                           ;	PWRTEN = OFF, Power up timer disabled
 16454                           ;	Brown-out Reset Enable bits
 16455                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 16456                           ;	Brown Out Reset Voltage bits
 16457                           ;	BORV = 190, VBOR set to 1.90 V nominal
 16458  300002                     	org	3145730
 16459  300002  1F                 	db	31
 16460                           
 16461                           ;Config register CONFIG2H @ 0x300003
 16462                           ;	Watchdog Timer Enable bits
 16463                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 16464                           ;	Watchdog Timer Postscale Select bits
 16465                           ;	WDTPS = 32768, 1:32768
 16466  300003                     	org	3145731
 16467  300003  3C                 	db	60
 16468                           
 16469                           ; Padding undefined space
 16470  300004                     	org	3145732
 16471  300004  FF                 	db	255
 16472                           
 16473                           ;Config register CONFIG3H @ 0x300005
 16474                           ;	CCP2 MUX bit
 16475                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 16476                           ;	PORTB A/D Enable bit
 16477                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
 16478                           ;	P3A/CCP3 Mux bit
 16479                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 16480                           ;	HFINTOSC Fast Start-up
 16481                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 16482                           ;	Timer3 Clock input mux bit
 16483                           ;	T3CMX = PORTC0, T3CKI is on RC0
 16484                           ;	ECCP2 B output mux bit
 16485                           ;	P2BMX = PORTD2, P2B is on RD2
 16486                           ;	MCLR Pin Enable bit
 16487                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 16488  300005                     	org	3145733
 16489  300005  BD                 	db	189
 16490                           
 16491                           ;Config register CONFIG4L @ 0x300006
 16492                           ;	Stack Full/Underflow Reset Enable bit
 16493                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
 16494                           ;	Single-Supply ICSP Enable bit
 16495                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 16496                           ;	Extended Instruction Set Enable bit
 16497                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 16498                           ;	Background Debug
 16499                           ;	DEBUG = 0x1, unprogrammed default
 16500  300006                     	org	3145734
 16501  300006  84                 	db	132
 16502                           
 16503                           ; Padding undefined space
 16504  300007                     	org	3145735
 16505  300007  FF                 	db	255
 16506                           
 16507                           ;Config register CONFIG5L @ 0x300008
 16508                           ;	Code Protection Block 0
 16509                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 16510                           ;	Code Protection Block 1
 16511                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 16512                           ;	Code Protection Block 2
 16513                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 16514                           ;	Code Protection Block 3
 16515                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 16516  300008                     	org	3145736
 16517  300008  0F                 	db	15
 16518                           
 16519                           ;Config register CONFIG5H @ 0x300009
 16520                           ;	Boot Block Code Protection bit
 16521                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 16522                           ;	Data EEPROM Code Protection bit
 16523                           ;	CPD = OFF, Data EEPROM not code-protected
 16524  300009                     	org	3145737
 16525  300009  C0                 	db	192
 16526                           
 16527                           ;Config register CONFIG6L @ 0x30000A
 16528                           ;	Write Protection Block 0
 16529                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 16530                           ;	Write Protection Block 1
 16531                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 16532                           ;	Write Protection Block 2
 16533                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 16534                           ;	Write Protection Block 3
 16535                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 16536  30000A                     	org	3145738
 16537  30000A  0F                 	db	15
 16538                           
 16539                           ;Config register CONFIG6H @ 0x30000B
 16540                           ;	Configuration Register Write Protection bit
 16541                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 16542                           ;	Boot Block Write Protection bit
 16543                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 16544                           ;	Data EEPROM Write Protection bit
 16545                           ;	WRTD = OFF, Data EEPROM not write-protected
 16546  30000B                     	org	3145739
 16547  30000B  E0                 	db	224
 16548                           
 16549                           ;Config register CONFIG7L @ 0x30000C
 16550                           ;	Table Read Protection Block 0
 16551                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 16552                           ;	Table Read Protection Block 1
 16553                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 16554                           ;	Table Read Protection Block 2
 16555                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 16556                           ;	Table Read Protection Block 3
 16557                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 16558  30000C                     	org	3145740
 16559  30000C  0F                 	db	15
 16560                           
 16561                           ;Config register CONFIG7H @ 0x30000D
 16562                           ;	Boot Block Table Read Protection bit
 16563                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 16564  30000D                     	org	3145741
 16565  30000D  40                 	db	64
 16566                           tosu	equ	0xFFF
 16567                           tosh	equ	0xFFE
 16568                           tosl	equ	0xFFD
 16569                           stkptr	equ	0xFFC
 16570                           pclatu	equ	0xFFB
 16571                           pclath	equ	0xFFA
 16572                           pcl	equ	0xFF9
 16573                           tblptru	equ	0xFF8
 16574                           tblptrh	equ	0xFF7
 16575                           tblptrl	equ	0xFF6
 16576                           tablat	equ	0xFF5
 16577                           prodh	equ	0xFF4
 16578                           prodl	equ	0xFF3
 16579                           indf0	equ	0xFEF
 16580                           postinc0	equ	0xFEE
 16581                           postdec0	equ	0xFED
 16582                           preinc0	equ	0xFEC
 16583                           plusw0	equ	0xFEB
 16584                           fsr0h	equ	0xFEA
 16585                           fsr0l	equ	0xFE9
 16586                           wreg	equ	0xFE8
 16587                           indf1	equ	0xFE7
 16588                           postinc1	equ	0xFE6
 16589                           postdec1	equ	0xFE5
 16590                           preinc1	equ	0xFE4
 16591                           plusw1	equ	0xFE3
 16592                           fsr1h	equ	0xFE2
 16593                           fsr1l	equ	0xFE1
 16594                           bsr	equ	0xFE0
 16595                           indf2	equ	0xFDF
 16596                           postinc2	equ	0xFDE
 16597                           postdec2	equ	0xFDD
 16598                           preinc2	equ	0xFDC
 16599                           plusw2	equ	0xFDB
 16600                           fsr2h	equ	0xFDA
 16601                           fsr2l	equ	0xFD9
 16602                           status	equ	0xFD8

Data Sizes:
    Strings     263
    Constant    0
    Data        64
    BSS         368
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    147     160
    BANK1           256      0     243
    BANK2           256      0     176
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_29(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_29(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_24(CODE[4]), STR_23(CODE[4]), STR_20(CODE[4]), STR_19(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_24(CODE[4]), STR_23(CODE[4]), STR_20(CODE[4]), STR_19(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> driverTimeSettingMenu@textCursor2(BANK0[16]), stopTimeSettingMenu@textCursor2(BANK0[16]), speedLimitSettingMenu@textCursor2(BANK0[16]), secretMenu@textCursor2(BANK0[16]), 
		 -> pauseMenu@textCursor2(BANK0[16]), stopMenu@textCursor2(BANK0[16]), mainMenu@textCursor2(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_18(CODE[18]), STR_16(CODE[16]), STR_14(CODE[18]), STR_12(CODE[13]), 
		 -> STR_10(CODE[14]), STR_8(CODE[16]), STR_6(CODE[16]), STR_4(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_18(CODE[18]), STR_16(CODE[16]), STR_14(CODE[18]), STR_12(CODE[13]), 
		 -> STR_10(CODE[14]), STR_8(CODE[16]), STR_6(CODE[16]), STR_4(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_18(CODE[18]), STR_16(CODE[16]), STR_14(CODE[18]), STR_12(CODE[13]), 
		 -> STR_10(CODE[14]), STR_8(CODE[16]), STR_6(CODE[16]), STR_4(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_18(CODE[18]), STR_16(CODE[16]), STR_14(CODE[18]), STR_12(CODE[13]), 
		 -> STR_10(CODE[14]), STR_8(CODE[16]), STR_6(CODE[16]), STR_4(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> driverTimeSettingMenu@textCursor2(BANK0[16]), stopTimeSettingMenu@textCursor2(BANK0[16]), speedLimitSettingMenu@textCursor2(BANK0[16]), secretMenu@textCursor2(BANK0[16]), 
		 -> pauseMenu@textCursor2(BANK0[16]), stopMenu@textCursor2(BANK0[16]), mainMenu@textCursor2(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2843_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> driverTimeSettingMenu@textCursor2(BANK0[16]), stopTimeSettingMenu@textCursor2(BANK0[16]), speedLimitSettingMenu@textCursor2(BANK0[16]), secretMenu@textCursor2(BANK0[16]), 
		 -> pauseMenu@textCursor2(BANK0[16]), stopMenu@textCursor2(BANK0[16]), mainMenu@textCursor2(BANK0[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> driverTimeSettingMenu@textCursor2(BANK0[16]), stopTimeSettingMenu@textCursor2(BANK0[16]), speedLimitSettingMenu@textCursor2(BANK0[16]), secretMenu@textCursor2(BANK0[16]), 
		 -> pauseMenu@textCursor2(BANK0[16]), stopMenu@textCursor2(BANK0[16]), mainMenu@textCursor2(BANK0[16]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_17(CODE[17]), driverTimeSettingMenu@textCursor2(BANK0[16]), STR_15(CODE[17]), stopTimeSettingMenu@textCursor2(BANK0[16]), 
		 -> STR_13(CODE[17]), speedLimitSettingMenu@textCursor2(BANK0[16]), STR_11(CODE[17]), STR_9(CODE[17]), 
		 -> secretMenu@textCursor2(BANK0[16]), STR_7(CODE[17]), pauseMenu@textCursor2(BANK0[16]), STR_5(CODE[17]), 
		 -> stopMenu@textCursor2(BANK0[16]), STR_3(CODE[17]), mainMenu@textCursor2(BANK0[16]), STR_2(CODE[17]), 
		 -> STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _startMotor->_PWM1_setDC
    _startMotor->_PWM2_setDC
    _startMotor->_speedControl
    _speedControl->___fltol
    _scanAdcConversion->___fltol
    _calculatedAverageValue->___xxtofl
    _stopMotor->_PWM1_setDC
    _stopMotor->_PWM2_setDC
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _loopTaskInit->_PWM1_setDC
    _loopTaskInit->_PWM2_setDC
    _system_init->_eepromRead
    _openLCD_Script->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _lcd_init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _PWM2_setDC->___fltol
    _PWM1_setDC->___fltol
    _fabsf->___xxtofl
    ___xxtofl->___lldiv
    ___fltol->___fldiv

Critical Paths under _TIMER0 in COMRAM

    None.

Critical Paths under _main in BANK0

    _loopTaskMenuControl->_stateMachine
    _stateMachine->_driverTimeSettingMenu
    _stateMachine->_mainMenu
    _stateMachine->_pauseMenu
    _stateMachine->_secretMenu
    _stateMachine->_speedLimitSettingMenu
    _stateMachine->_stopMenu
    _stateMachine->_stopTimeSettingMenu
    _stopTimeSettingMenu->_sprintf
    _stopMenu->_sprintf
    _speedLimitSettingMenu->_sprintf
    _secretMenu->_sprintf
    _pauseMenu->_sprintf
    _mainMenu->_sprintf
    _startMotor->_speedControl
    _driverTimeSettingMenu->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _TIMER0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TIMER0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TIMER0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TIMER0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TIMER0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TIMER0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  414325
                       _loopTaskInit
                _loopTaskMenuControl
                _loopTaskTimeMachine
 ---------------------------------------------------------------------------------
 (1) _loopTaskTimeMachine                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loopTaskMenuControl                                  0     0      0  404153
                 _buttonControlFlags
                       _stateMachine
 ---------------------------------------------------------------------------------
 (2) _stateMachine                                         2     2      0  404153
                                            145 BANK0      2     2      0
              _driverTimeSettingMenu
                           _exitLine
                           _mainMenu
                          _pauseMenu
                         _secretMenu
              _speedLimitSettingMenu
                          _startMenu
                           _stopMenu
                _stopTimeSettingMenu
 ---------------------------------------------------------------------------------
 (3) _stopTimeSettingMenu                                 16    16      0   53117
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _eepromWrite
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _stopMenu                                            16    16      0   52617
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _startMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _speedLimitSettingMenu                               16    16      0   53117
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _eepromWrite
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _secretMenu                                          16    16      0   60426
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fladd
                             ___flge
                            ___flsub
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _pauseMenu                                           16    16      0   52617
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _mainMenu                                            16    16      0   79142
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
                         _startMotor
 ---------------------------------------------------------------------------------
 (4) _startMotor                                           0     0      0   32873
                         _PWM1_setDC
                         _PWM2_setDC
             _calculatedAverageValue
                  _scanAdcConversion
                       _speedControl
 ---------------------------------------------------------------------------------
 (5) _speedControl                                        10     6      4   11063
                                             87 COMRAM     6     2      4
                                              0 BANK0      4     4      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) _scanAdcConversion                                    2     2      0   12556
                                             87 COMRAM     2     2      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                       _readAdcValue
 ---------------------------------------------------------------------------------
 (6) _readAdcValue                                         7     5      2      46
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _calculatedAverageValue                              24    24      0    2906
                                             27 COMRAM    24    24      0
                            ___lldiv
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8    1282
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) _exitLine                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _driverTimeSettingMenu                               16    16      0   53117
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _eepromWrite
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (4) _stopMotor                                            0     0      0    6348
                         _PWM1_setDC
                         _PWM2_setDC
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             18    10      8   42834
                                            111 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   41409
                                            103 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           50    44      6   41025
                                             71 BANK0     32    26      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              68    61      7   30053
                                             87 COMRAM     7     0      7
                                             10 BANK0     61    61      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (8) _floorf                                              20    16      4     490
                                             77 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    3801
                                             68 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             16     8      8    3022
                                             52 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             25    17      8    5240
                                             27 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flge                                              12     4      8     942
                                             52 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             25    17      8    4591
                                             52 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                36    26     10    5042
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (8) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (7) _atoi                                                15    13      2    1396
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _eepromWrite                                          2     1      1     500
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _buttonControlFlags                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loopTaskInit                                         0     0      0   10172
                          _Lcd_Clear
                         _PWM1_setDC
                         _PWM2_setDC
                           _PWM_Init
                            _adcInit
                           _lcd_init
                           _mcu_init
                     _menuInitialize
                     _openLCD_Script
                        _system_init
                       _timer_0_init
 ---------------------------------------------------------------------------------
 (2) _timer_0_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _system_init                                          2     2      0      22
                                              1 COMRAM     2     2      0
                         _eepromRead
 ---------------------------------------------------------------------------------
 (3) _eepromRead                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _openLCD_Script                                       2     2      0    3494
                                             10 COMRAM     2     2      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (4) _Lcd_Write_String                                     6     4      2    1636
                                              4 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (5) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Set_Cursor                                       5     4      1    1748
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _menuInitialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _mcu_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             2     2      0     198
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (5) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (6) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PWM2_setDC                                           6     4      2    3174
                                             87 COMRAM     6     4      2
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (5) _PWM1_setDC                                           6     4      2    3174
                                             87 COMRAM     6     4      2
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (6) _fabsf                                                8     4      4     199
                                             27 COMRAM     8     4      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4    1310
                                             13 COMRAM    14    10      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4    1369
                                             77 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _fabsf (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TIMER0                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loopTaskInit
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _PWM1_setDC
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
         _fabsf (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
       ___xxtofl
         ___lldiv (ARG)
       _fabsf
         ___xxtofl (ARG)
           ___lldiv (ARG)
     _PWM2_setDC
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
         _fabsf (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
       ___xxtofl
         ___lldiv (ARG)
       _fabsf
         ___xxtofl (ARG)
           ___lldiv (ARG)
     _PWM_Init
     _adcInit
     _lcd_init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
     _mcu_init
     _menuInitialize
     _openLCD_Script
       _Lcd_Clear
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
     _system_init
       _eepromRead
     _timer_0_init
   _loopTaskMenuControl
     _buttonControlFlags
     _stateMachine
       _driverTimeSettingMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         _eepromWrite
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _exitLine
       _mainMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _startMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _calculatedAverageValue
             ___lldiv
             ___lmul
             ___xxtofl
               ___lldiv (ARG)
           _scanAdcConversion
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _readAdcValue
           _speedControl
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
       _pauseMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _secretMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _speedLimitSettingMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         _eepromWrite
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _startMenu
       _stopMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _stopTimeSettingMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         _eepromWrite
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
   _loopTaskTimeMachine

 _TIMER0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      B0       8       68.8%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      F3       6       94.9%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     93      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2A1       9        0.0%
DATA                 0      0     2A1      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Aug 16 02:22:42 2020

                    ___fldiv@aexp 004D                      ___fldiv@bexp 004C  
                    ___fldiv@sign 0045                                l60 53DC  
                              l63 54D8                                l57 53B4  
                              l92 5746                                l76 1452  
                              l94 5754                                _KD 01EB  
                              l95 5756                                l79 29FA  
                              l98 56B0                                _KP 01EF  
                    ___awdiv@sign 0006               ___wmul@multiplicand 0003  
             __end_of_system_init 40AA                               l100 56BE  
                             l101 56C2          ??_calculatedAverageValue 001C  
                             l160 51D0                               l152 518C  
                             l320 57A4                               l154 51A2  
                             l163 5774                               l323 40A8  
                             l156 51B8                               l172 50B8  
                             l500 42BC                               l317 5796  
                             l413 56EA                               l421 32B4  
                             l158 51CE                               l166 57D8  
                             l326 5310                               l175 4D06  
                             l423 3300                               l255 4D96  
                             l184 4E14                               l425 334C  
                             l417 321C                               l521 57DA  
                             l178 55F4                               l258 549A  
                             l434 4F7E                               l419 3268  
                             l507 414A                               l428 3398  
                             l509 41B4                               l518 3F88  
                             l454 37C2                               l470 3DB4  
                             l455 3812                      _startIsClick 00FE  
                             l448 4A72                               l633 3556  
                             l465 476C                               l458 38A6  
                             l474 3E5C                               l811 3BBE  
                             l731 4C70                               l491 2FB6  
                             l580 4F08                               l636 5514  
                             l724 4C60                               l708 4FD8  
                             l709 4FE8                               l477 578E  
                             l639 562A                               l584 4E8E  
                             l576 5712                               l824 3D22  
                             l941 4B22                               l694 57CA  
                             l928 49C0                               l697 5738  
                             l962 4480                               l971 5584  
                             l956 4BCC                               l967 44C6  
                             l994 43C2                               _PR2 000FBB  
                 ?_openLCD_Script 0001                               _abs 541E  
                             _pad 4838                      ___awmod@sign 0006  
                             wreg 000FE8                      ___flmul@aexp 002D  
                    ___flmul@bexp 002E               stopMenu@textCursor2 00E1  
    __size_of_loopTaskTimeMachine 0090                      ___flmul@sign 0028  
                    ___flmul@temp 0033                      ___flmul@prod 002F  
                     _stopIsClick 00FD                      ___fltol@exp1 0057  
                            ?_abs 0013                              l1311 2016  
                            l1320 2284                              l1321 2272  
                            l1225 1C80                              l1242 1D9A  
                            l1234 1F50                              l1226 1C6E  
                            l1315 237A                              l1251 1E6A  
                            l1227 1C34                              l1252 1E58  
                            l1318 220C                              l1423 487E  
                            l1352 35AE                              l1328 233C  
                            l1281 2574                              l1426 48C0  
                            l1434 2A9C                              l1290 25BA  
                            l1355 370A                              l1267 5356  
                            l1604 5454                              l1428 48FC  
                            l1436 2AA4                              l1292 2632  
                            l1284 2538                              l1700 5174  
                            l1516 0822                              l1380 5274  
                            l1373 5694                              l1293 2620  
                            l1366 36A2                              l1454 2CDE  
                            l1710 469A                              l1359 3646  
                            l1607 545C                              l1279 2714  
                            l4200 1ADE                              l5000 5102  
                            l1720 5110                              l1472 0C4C  
                            l1706 5660                              l4210 1B10  
                            l4202 1AE0                              l5010 3044  
                            l1490 048A                              l1635 3A2E  
                            l5100 2C92                              l4300 1CDE  
                            l4220 1B38                              l4212 1B12  
                            l4204 1AE8                              l5012 3052  
                            l5020 3134                              l1644 31CC  
                            l5004 2FB8                              l1725 5118  
                            l1654 55BC                              l1662 52C6  
                            l1638 3A36                              l5102 2C9E  
                            l4310 1D08                              l4302 1CEA  
                            l4230 1B72                              l4222 1B48  
                            l4214 1B18                              l4206 1AF8  
                            l5022 3170                              l5006 2FD8  
                            l5110 009E                              l1582 19D6  
                            l1574 1A90                              l1647 3110  
                            l5032 5586                              l5040 528E  
                            l4400 5638                              l5104 2CA6  
                            l4320 1D7A                              l4304 1CEE  
                            l4312 1D0E                              l4240 1B9E  
                            l4232 1B84                              l4224 1B58  
                            l4216 1B26                              l4208 1AFE  
                            l5024 3184                              l5016 30C4  
                            l5008 3030                              l5200 044A  
                            l5120 00F2                              l5112 00A8  
                            l6000 3E5E                              l5042 52BC  
                            l4402 563C                              l5106 2CB6  
                            l5050 2A1C                              l4330 1DD4  
                            l4314 1D34                              l4322 1D8A  
                            l4306 1CFC                              l4250 1BB2  
                            l4242 1BA2                              l4234 1B92  
                            l4226 1B5A                              l4218 1B28  
                            l5026 31AC                              l5018 3100  
                            l5202 045C                              l5130 0136  
                            l5122 00FC                              l5114 00B8  
                            l6010 3E9C                              l6002 3E6A  
                            l1683 4836                              l1691 539A  
                            l4412 5714                              l5044 52C0  
                            l5036 5276                              l4420 3A3C  
                            l4180 479C                              l4404 5654  
                            l5060 2A90                              l5052 2A44  
                            l4500 2388                              l4340 1E04  
                            l4332 1DDE                              l4324 1DB0  
                            l4316 1D68                              l4308 1CFE  
                            l4260 1BC6                              l4252 1BB6  
                            l4244 1BA6                              l4236 1B96  
                            l4228 1B62                              l5028 31BC  
                            l1668 554C                              l5300 091C  
                            l5220 050C                              l5204 0464  
                            l5132 0142                              l5140 0158  
                            l5124 0104                              l5116 00C6  
                            l1588 504A                              l6020 3EC8  
                            l6012 3EAE                              l6004 3E6E  
                            l6100 41C2                              l1589 5052  
                            l4414 5730                              l5038 527A  
                            l4430 3A9C                              l4422 3A4A  
                            l1694 57DC                              l4182 47BA  
                            l4174 476E                              l5070 2ADA  
                            l5062 2AAC                              l5054 2A64  
                            l4510 23C8                              l4502 2396  
                            l4350 1E2C                              l4342 1E08  
                            l4334 1DEC                              l4326 1DC0  
                            l4318 1D6A                              l4270 1C00  
                            l4262 1BCA                              l4254 1BBA  
                            l4246 1BAA                              l4238 1B9A  
                            l4190 1A9E                              l5310 0946  
                            l5302 0920                              l5230 0544  
                            l5222 0514                              l5214 04A8  
                            l5206 047E                              l5150 01E2  
                            l5142 017E                              l5134 014A  
                            l5126 0116                              l5118 00CE  
                            l6030 3EF8                              l6022 3ECC  
                            l6014 3EB4                              l6006 3E80  
                            l6110 4206                              l6102 41C6  
                            l1599 45C4                              l4440 3AE6  
                            l4432 3AA0                              l4424 3A6A  
                            l4184 47F0                              l4176 4780  
                            l5080 2B78                              l5072 2AE4  
                            l5064 2ABE                              l5056 2A74  
                            l5048 29FC                              l4600 2618  
                            l4520 23EE                              l4512 23CA  
                            l4504 2398                              l4360 1E86  
                            l4352 1E3A                              l4344 1E18  
                            l4336 1DEE                              l4280 1C52  
                            l4272 1C1C                              l4264 1BCE  
                            l4256 1BBE                              l4248 1BAE  
                            l4192 1AAC                              l4408 5516  
                            l5400 0C26                              l5320 097A  
                            l5312 094C                              l5304 0926  
                            l5240 058E                              l5232 0552  
                            l5216 04BA                              l5224 0518  
                            l5208 0496                              l5160 0252  
                            l5152 01FA                              l5136 014E  
                            l5128 0124                              l6040 3F16  
                            l6032 3EFE                              l6024 3ED0  
                            l6016 3EB8                              l6008 3E8A  
                            l6200 3DF8                              l6120 423E  
                            l6112 420C                              l6104 41D8  
                            l5410 38BC                              l4450 3B56  
                            l4442 3AF4                              l4434 3AAC  
                            l4426 3A6E                              l4418 3A38  
                            l4178 4792                              l5090 2C48  
                            l5074 2AEA                              l5082 2BDC  
                            l5066 2ACC                              l5058 2A76  
                            l4610 2686                              l4530 242E  
                            l4522 23FC                              l4506 23A8  
                            l4514 23D2                              l4370 1EF0  
                            l4362 1E94                              l4354 1E50  
                            l4338 1DFC                              l4346 1E1A  
                            l4290 1C9E                              l4282 1C60  
                            l4274 1C2C                              l4258 1BC2  
                            l4266 1BD2                              l4194 1AAE  
                            l5402 0C2C                              l5306 0932  
                            l5314 0952                              l5322 0980  
                            l5330 0A18                              l5250 05D4  
                            l5242 05A0                              l5234 0556  
                            l5226 0520                              l5218 04D6  
                            l5154 0204                              l5146 01B4  
                            l5138 0152                              l6050 3F3E  
                            l6042 3F1A                              l6034 3F02  
                            l6018 3EC2                              l6026 3ED4  
                            l6210 3E3E                              l6202 3DFC  
                            l6130 4268                              l6122 4244  
                            l6114 4210                              l6106 41E2  
                            l5500 5662                              l6300 4CC0  
                            l5420 391A                              l5412 38C0  
                            l4452 3B68                              l4444 3B06  
                            l4436 3ACA                              l4428 3A7C  
                            l5084 2BF6                              l5092 2C58  
                            l5076 2B6C                              l5068 2AD2  
                            l4620 26F0                              l4604 2642  
                            l4612 268A                              l4540 246E  
                            l4532 2430                              l4524 23FE  
                            l4516 23E2                              l4508 23B8  
                            l4700 20F8                              l4380 1F2A  
                            l4372 1F10                              l4364 1ECE  
                            l4348 1E28                              l4284 1C62  
                            l4276 1C42                              l4268 1BD6  
                            l4196 1ABE                              l4188 1A92  
                            l5340 0A82                              l5332 0A36  
                            l5324 09D8                              l5316 0964  
                            l5308 0942                              l5260 06E8  
                            l5252 0638                              l5236 0568  
                            l5244 05A8                              l5228 0532  
                            l5164 0288                              l5148 01C6  
                            l6052 3F5A                              l6036 3F0C  
                            l6028 3EE6                              l6044 3F1E  
                            l6212 3E4E                              l6204 3E0A  
                            l6220 2CF0                              l6132 4272  
                            l6124 4248                              l6108 41F4  
                            l6116 421A                              l6140 469C  
                            l6060 40B6                              l5502 5682  
                            l3910 5700                              l6310 4CE8  
                            l6302 4CC6                              l5430 3946  
                            l5414 38C4                              l4446 3B34  
                            l4438 3AD2                              l4454 3B6E  
                            l4470 3BF6                              l4462 3BC0  
                            l4390 5358                              l5094 2C6A  
                            l5086 2C14                              l5078 2B72  
                            l4622 26F4                              l4614 26A4  
                            l4606 264E                              l4550 249E  
                            l4542 2476                              l4526 240E  
                            l4534 2438                              l4518 23E8  
                            l4710 2166                              l4702 2112  
                            l4382 1F30                              l4374 1F14  
                            l4358 1E7A                              l4366 1ED0  
                            l4294 1CB2                              l4286 1C6C  
                            l4278 1C4E                              l4198 1ACE  
                            l5350 0AC0                              l5342 0A86  
                            l5334 0A52                              l5326 0A0C  
                            l5318 0976                              l5270 07A6  
                            l5262 071C                              l5254 0690  
                            l5246 05B0                              l5238 0576  
                            l5190 03EA                              l5182 0322  
                            l5166 029A                              l5158 022C  
                            l6054 3F66                              l6046 3F28  
                            l6038 3F12                              l5510 4F90  
                            l6214 3E58                              l6206 3E1E  
                            l6222 2D02                              l6230 2D1E  
                            l6134 428E                              l6118 422C  
                            l6126 4252                              l6150 46C0  
                            l6142 46A8                              l6070 40FA  
                            l6062 40BA                              ?_pad 0011  
                            l5504 5684                              l6312 4CEE  
                            l6304 4CD6                              l6320 3F8A  
                            l6400 3372                              l5440 39EE  
                            l5432 397A                              l5424 3920  
                            l5416 38E0                              l5408 38A8  
                            l4456 3B7E                              l4448 3B54  
                            l4480 3C5E                              l4472 3C04  
                            l4464 3BC4                              l4392 5364  
                            l5096 2C7A                              l5088 2C2E  
                            l4800 498A                              l4624 2702  
                            l4616 26BA                              l4608 265C  
                            l4560 24DC                              l4552 249E  
                            l4544 247A                              l4536 2448  
                            l4528 241E                              l4720 21FC  
                            l4712 2190                              l4704 2122  
                            l4640 1F6C                              l4384 1F3E  
                            l4376 1F22                              l4368 1EE0  
                            l4296 1CC2                              l4288 1C8E  
                            l5360 0AF2                              l5352 0AC8  
                            l5344 0A96                              l5336 0A64  
                            l5328 0A14                              l5280 081A  
                            l5272 07B6                              l5264 074E  
                            l5256 06C4                              l5248 05C0  
                            l5192 03F2                              l5184 0356  
                            l5168 02B6                              l5176 02D2  
                            l5600 1508                              l6056 3F7A  
                            l6048 3F34                              l5520 4BDE  
                            l5512 4F9E                              l6208 3E2C  
                            l6240 2D76                              l6232 2D30  
                            l6224 2D06                              l6216 2CE0  
                            l6136 429A                              l6128 425C  
                            l6160 470A                              l6152 46CC  
                            l6144 46AE                              l6080 4134  
                            l6072 4100                              l6064 40CC  
                            l3906 56EC                              l6314 4CF4  
                            l6306 4CDC                              l6330 409E  
                            l6322 4068                              l6402 3380  
                            l5442 3A00                              l5426 3936  
                            l5418 3916                              l4458 3B9E  
                            l4482 3C6C                              l4490 3CD2  
                            l4474 3C24                              l4466 3BD2  
                            l4394 5376                              l5098 2C80  
                            l4810 49B0                              l4802 4992  
                            l4626 2708                              l4618 26D4  
                            l4570 2528                              l4562 24EC  
                            l4538 245E                              l4730 223C  
                            l4722 220A                              l4714 21C6  
                            l4706 213E                              l4650 1FA4  
                            l4642 1F6E                              l4386 1F40  
                            l4378 1F28                              l4298 1CD0  
                            l5362 0AF8                              l5370 0B48  
                            l5354 0AD6                              l5346 0AA8  
                            l5338 0A72                              l5290 08D6  
                            l5282 083E                              l5274 07EA  
                            l5266 0764                              l5258 06CA  
                            l5186 035C                              l5194 0424  
                            l5178 02EC                              l5450 45C6  
                            l5610 1590                              l5602 151A  
                            l5530 4C20                              l5522 4BF4  
                            l5514 4FAE                              l6250 2E00  
                            l6242 2D82                              l6234 2D3A  
                            l6226 2D0A                              l6218 2CEC  
                            l6138 42AE                              l6170 4768  
                            l6162 4716                              l6154 46D2  
                            l6146 46B2                              l6090 416A  
                            l6082 413A                              l6074 4106  
                            l6066 40D6                              l6058 40AA  
                            l6410 49CE                              l4900 42D4  
                            l5540 355A                              l3908 56F0  
                            l3844 549C                              l6316 4CFA  
                            l6308 4CE2                              l6340 52F4  
                            l6332 40A2                              l6324 4072  
                            l6404 3390                              l5444 3A12  
                            l5436 39B0                              l5428 393E  
                            l4492 3CE2                              l4484 3C9A  
                            l4476 3C42                              l4468 3BF2  
                            l4396 537A                              l4812 49B8  
                            l4804 4994                              l4820 4A86  
                            l4628 270A                              l4580 2572  
                            l4572 2536                              l4564 24FC  
                            l4556 24B2                              l4548 248E  
                            l4740 22AE                              l4732 226A  
                            l4724 221C                              l4716 21D4  
                            l4708 214A                              l4660 1FD0  
                            l4652 1FB4                              l4644 1F7E  
                            l4636 1F52                              l5380 0B98  
                            l5372 0B5A                              l5364 0B1E  
                            l5356 0ADE                              l5348 0AB0  
                            l5292 08E4                              l5284 08A2  
                            l5276 07FA                              l5268 0796  
                            l5196 0434                              l5188 03B6  
                            l5460 4622                              l5452 45F0  
                            l5620 1602                              l5604 153A  
                            l5612 15A2                              l5532 4C3E  
                            l5524 4BFC                              l5516 4FB8  
                            l5508 4F80                              l6180 3D36  
                            l6260 2E6C                              l6252 2E12  
                            l6244 2D94                              l6236 2D46  
                            l6228 2D1A                              l6172 5776  
                            l6164 4728                              l6156 46D6  
                            l6148 46B6                              l6092 4186  
                            l6084 4140                              l6068 40E8  
                            l6076 4110                              l6420 49F6  
                            l6412 49D6                              l4910 4324  
                            l5542 356A                              l3846 54BE  
                            l6318 4D00                              l6342 530C  
                            l6334 52C8                              l6326 407C  
                            l6350 31F6                              l4494 3D02  
                            l4486 3CBA                              l4478 3C4A  
                            l4398 562C                              l4806 499A  
                            l4830 4ABA                              l4822 4A8E  
                            l4590 25B8                              l4582 2584  
                            l4574 2542                              l4566 2504  
                            l4558 24CC                              l4750 2324  
                            l4742 22D8                              l4726 222A  
                            l4718 21F2                              l4670 2026  
                            l4662 1FE0                              l4654 1FBA  
                            l4646 1F8E                              l4638 1F5E  
                            l5382 0BA0                              l5374 0B74  
                            l5366 0B3A                              l5358 0AE6  
                            l5286 08B2                              l5294 08EC  
                            l5278 080E                              l5198 0438  
                            l5462 463E                              l5630 16B2  
                            l5622 163C                              l5614 15C6  
                            l5606 1548                              l5534 4C4E  
                            l5526 4C08                              l5518 4BCE  
                            l5470 539E                              l5710 0CCA  
                            l6190 3D8C                              l6182 3D40  
                            l6270 2EBE                              l6262 2E76  
                            l6254 2E20                              l6246 2DC6  
                            l6238 2D50                              l6174 577A  
                            l6166 4748                              l6158 46E0  
                            l6094 4192                              l6086 4154  
                            l6078 4122                              l6422 49FE  
                            l6414 49DE                              l6406 49C2  
                            l6502 57A6                              l4920 434E  
                            l4912 4328                              l4904 42E8  
                            l5560 3630                              l5552 35E8  
                            l5544 3578                              l3848 54C6  
                            l3880 5790                              l5800 55E8  
                            l6336 52D2                              l6328 4086  
                            l6360 3242                              l6352 3204  
                            l6344 31CE                              l4488 3CCC  
                            l4808 49A0                              l4840 4AF6  
                            l4832 4AC2                              l4824 4A92  
                            l4816 4A74                              l4584 259A  
                            l4592 25CA                              l4576 2560  
                            l4568 2514                              l4752 2340  
                            l4760 2366                              l4736 2294  
                            l4744 22DC                              l4728 222E  
                            l4680 2060                              l4672 2036  
                            l4664 1FF0                              l4656 1FC0  
                            l4648 1F9E                              l5392 0BF0  
                            l5384 0BB0                              l5376 0B7A  
                            l5368 0B42                              l5296 08FE  
                            l5288 08C4                              l5464 4650  
                            l5456 45FC                              l5640 1738  
                            l5624 165C                              l5616 15D0  
                            l5632 16C4                              l5536 4C50  
                            l5528 4C16                              l5480 53D4  
                            l5472 539E                              l5720 0E30  
                            l5712 0D3A                              l5704 0C4E  
                            l6192 3D9E                              l6184 3D4C  
                            l6176 3D24                              l6280 2F4E  
                            l6272 2ED0                              l6264 2E82  
                            l6256 2E24                              l6248 2DCC  
                            l6168 475A                              l6096 41A6  
                            l6088 4160                              l6424 4A06  
                            l6416 49E6                              l6408 49C6  
                            l6440 4D2A                              l6504 57AA  
                            l4930 4376                              l4922 4358  
                            l4914 4336                              l4906 4312  
                            l5570 36B0                              l5562 363C  
                            l5554 35F0                              l5546 35BE  
                            l5810 4EA8                              l5490 519C  
                            l6290 4C72                              l3882 5794  
                            l5802 55EA                              l6338 52DE  
                            l3890 57C8                              l6370 328E  
                            l6362 3250                              l6354 3214  
                            l6346 31E0                              l6610 3964  
                            l4842 4AFC                              l4834 4ACA  
                            l4826 4AA0                              l4818 4A78  
                            l4594 25D8                              l4586 25A0  
                            l4578 2562                              l4498 237C  
                            l4762 236A                              l4754 2350  
                            l4746 22F6                              l4738 22A0  
                            l4690 20B2                              l4682 2076  
                            l4666 2000                              l4658 1FCE  
                            l5394 0C02                              l5386 0BB6  
                            l5378 0B8C                              l5298 090C  
                            l5466 4678                              l5458 460A  
                            l5642 176A                              l5634 16E6  
                            l5626 166A                              l5618 15DE  
                            l5538 4C5A                              l5474 53B0  
                            l5730 0FE6                              l5722 0E9A  
                            l5714 0D48                              l5706 0C52  
                            l6194 3DC6                              l6186 3D56  
                            l6178 3D30                              l6282 2F5C  
                            l6274 2F02                              l6266 2E8C  
                            l6258 2E58                              l6098 41B6  
                            l6418 49EE                              l6450 4D64  
                            l6442 4D3A                              l6434 4D08  
                            l6506 57AE                              l4932 4382  
                            l4924 4362                              l4908 4314  
                            l5580 36F8                              l5572 36B2  
                            l5564 3678                              l5556 35FC  
                            l5548 35D4                              l5812 4EF0  
                            l5820 4E76                              l5492 51A4  
                            l5484 5178                              l6292 4C8C  
                            l3884 56C4                              l5804 55F2  
                            l6460 545E                              l6380 32DA  
                            l6372 329C                              l6364 3260  
                            l6356 322C                              l6348 31EE  
                            l4780 491C                              l4772 48FE  
                            l4836 4AD8                              l4844 4B02  
                            l4828 4AA8                              l4596 25DC  
                            l4588 25AA                              l4860 4BA0  
                            l4852 4B24                              l4756 235E  
                            l4748 230A                              l4692 20C0  
                            l4684 2082                              l4676 204A  
                            l4668 2006                              l5396 0C0E  
                            l5388 0BBC                              l5660 1898  
                            l5652 1832                              l5644 178E  
                            l5636 16F6                              l5900 5224  
                            l5476 53B2                              l5740 114C  
                            l5732 1056                              l5724 0F06  
                            l5716 0DB2                              l5708 0C60  
                            l6196 3DD6                              l6188 3D80  
                            l6284 2F60                              l6276 2F08  
                            l6268 2EB2                              l6428 4A0E  
                            l6452 4D76                              l6444 4D4A  
                            l6436 4D18                              l4934 4392  
                            l5582 36FA                              l5574 36B6  
                            l5566 3684                              l5558 362E  
                            l5806 4E90                              l5814 4E16  
                            l5494 51B2                              l5486 5186  
                            l6294 4C92                              l3886 57BA  
                            l6470 5472                              l6462 5462  
                            l6390 3326                              l6382 32E8  
                            l6374 32AC                              l6366 3278  
                            l6358 323A                              l4950 4876  
                            l4942 4838                              l4790 4950  
                            l4782 492A                              l4774 4902  
                            l4846 4B12                              l4838 4AEE  
                            l4598 25EA                              l4862 4BC4  
                            l4854 4B52                              l4870 43F2  
                            l4758 2360                              l4694 20CC  
                            l4686 209A                              l4678 2056  
                            l4766 5312                              l5398 0C16  
                            l5670 1960                              l5654 1844  
                            l5646 17B2                              l5638 1728  
                            l5590 1486                              l5902 5236  
                            l5478 53C2                              l5750 130E  
                            l5742 11B6                              l5734 1064  
                            l5726 0F6E                              l5718 0E22  
                            l5830 34A0                              l5822 339A  
                            l6198 3DE6                              l6278 2F3C  
                            l6286 2F94                              l6606 4A24  
                            l6454 4D78                              l6446 4D5A  
                            l6438 4D1A                              l4936 43A2  
                            l5576 36DA                              l5568 3692  
                            l5808 4E90                              l5816 4E16  
                            l5496 51BA                              l5488 518E  
                            l6296 4CAA                              l3888 57C6  
                            l6480 5496                              l6472 5476  
                            l6464 5466                              l6392 3334  
                            l6384 32F8                              l6376 32C4  
                            l6368 3286                              l4960 48E4  
                            l4952 488A                              l4944 4848  
                            l4792 4958                              l4784 4932  
                            l4776 4910                              l4848 4B1A  
                            l4864 4BCA                              l4856 4B62  
                            l4880 4460                              l4872 4402  
                            l4696 20DC                              l4688 20A6  
                            l4768 5322                              l5672 1972  
                            l5680 19EA                              l5656 185A  
                            l5664 18C4                              l5648 17FA  
                            l5592 1498                              l5904 523E  
                            l5920 54FC                              l6608 140C  
                            l5752 131C                              l5744 1226  
                            l5736 10CE                              l5728 0F7C  
                            l5840 34EA                              l5832 34A8  
                            l5824 339A                              l5912 55F6  
                            l6288 2FA8                              l6456 4D82  
                            l6448 4D5E                              l4938 43B2  
                            l5578 36EA                              l5818 4E2E  
                            l5498 51C8                              l6298 4CB0  
                            l5930 5744                              l6474 547A  
                            l6466 546A                              l6394 3344  
                            l6386 3310                              l6378 32D2  
                            l4954 489E                              l4946 485C  
                            l4794 4960                              l4786 4936  
                            l4778 4918                              l4858 4B90  
                            l4882 446E                              l4874 4430  
                            l4698 20E8                              l4890 554E  
                            l4970 44E8                              l5682 1A0E  
                            l5690 1A3E                              l5674 19A6  
                            l5666 18F2                              l5658 1868  
                            l5594 149E                              l5586 1454  
                            l5906 5246                              l5922 5508  
                            l5770 280E                              l5754 1386  
                            l5746 1234                              l5738 113E  
                            l5850 354E                              l5842 3506  
                            l5834 34B6                              l5826 339A  
                            l5914 55FA                              l6490 4F36  
                            l6482 4F0A                              l6458 4D92  
                            l5780 5762                              l5932 57CC  
                            l5924 573C                              l6476 547E  
                            l6468 546E                              l6396 335C  
                            l6388 331E                              l5860 5698  
                            l4964 541E                              l4956 48A2  
                            l4948 486A                              l4796 496E  
                            l4788 493E                              l4884 44BE  
                            l4876 4440                              l4868 43C4  
                            l4892 5564                              l4972 4526  
                            l4980 4566                              l5692 1A4C  
                            l5684 1A1C                              l5596 14C2  
                            l5588 1478                              l5852 4FEA  
                            l5908 5262                              l5772 2908  
                            l5748 129E                              l5844 350E  
                            l5836 34C6                              l5828 33DA  
                            l5916 55FE                              l5940 372E  
                            l6492 4F48                              l6484 4F0E  
                            l5782 5764                              l5790 55CE  
                            l5926 5740                              l6478 548A  
                            l6398 336A                              l5870 56A6  
                            l5862 569C                              l4966 5438  
                            l4958 48D0                              l4798 4974  
                            l4886 44C4                              l4878 444E  
                            l4894 5574                              l4982 4578  
                            l4974 454E                              l4990 511A  
                            l5686 1A30                              l5598 14F8  
                            l5854 4FF2                              l5918 54DA  
                            l5774 29B0                              l5766 2716  
                            l5758 13F6                              l5846 352A  
                            l5838 34E2                              l5950 3790  
                            l5942 3738                              l5934 370C  
                            l6494 4F5A                              l6486 4F12  
                            l5784 5772                              l5776 575A  
                            l5880 5078                              l5792 55D6  
                            l5928 5742                              l5872 56AA  
                            l5864 56A0                              l4976 455A  
                            l4968 44C8                              l4992 512A  
                            l5696 1A5A                              l5856 5000  
                            l5768 2748                              l5848 3532  
                            l5960 37F4                              l5952 37A6  
                            l5944 3762                              l5936 3718  
                            l6496 4F6C                              l6488 4F24  
                            l4898 42BE                              l5778 575C  
                            l5890 50B2                              l5882 507E  
                            l5794 55D8                              l5786 55C0  
                            l5874 56AE                              l5866 56A2  
                            l4986 45BC                              l4994 50BA  
                            l5698 1A7E                              l5858 502E  
                            l5970 3822                              l5962 3804  
                            l5954 37B6                              l5946 376E  
                            l5938 3722                              l5884 5088  
                            l5876 5056                              l5796 55E0  
                            l5788 55CC                              l5892 4D98  
                            l5868 56A4                              l5980 3864  
                            l5972 3832                              l5964 3808  
                            l5956 37D4                              l5948 3782  
                            l5886 509A                              l5878 5066  
                            l5798 55E2                              l5894 4DA4  
                            l4998 50F0                              l5990 388C  
                            l5982 3866                              l5974 3842  
                            l5966 380A                              l5958 37E4  
                            l5888 50AC                              l5896 4DD4  
                            l5992 389C                              l5984 3868  
                            l5976 3852                              l5968 380C  
                            l5898 4DD8                              l5994 38A0  
                            l5978 3856                              l5986 386A  
                            l5996 38A2                              l5988 387C  
                            l5998 38A4                              STR_1 7FB1  
                            STR_2 7F80                              STR_3 7F2B  
                            STR_4 7FC1                              STR_5 7F3C  
                            STR_6 7FA1                              STR_7 7F4D  
                            STR_8 7FA1                              STR_9 7F09  
                            u4000 4792                              u4001 478E  
                            u4010 47BA                              u4011 47B6  
                            u4020 47F0                              u4100 1B84  
                            u4021 47EC                              u4101 1B80  
                            u4110 1B92                              u4030 1AAC  
                            u4111 1B8E                              u4031 1AA8  
                            u5000 235E                              u4200 1CD0  
                            u4120 1C00                              u4040 1ABE  
                            u5001 235A                              u4201 1CCC  
                            u4121 1BFC                              u4041 1ABA  
                            u5010 4910                              u4210 1CDE  
                            u4130 1C18                              u4050 1ACE  
                            u5011 490C                              u4211 1CDA  
                            u4131 1C12                              u4051 1ACA  
                            u5020 492A                              u5100 4AD8  
                            u4300 1E28                              u4220 1CFC  
                            u4140 1C1A                              u4060 1B10  
                            u5021 4926                              u5101 4AD4  
                            u4301 1E24                              u4221 1CF8  
                            u4061 1B0C                              u5030 4950  
                            u5110 4AEE                              u4310 1E3A  
                            u4230 1D34                              u4150 1C42  
                            u4070 1B26                              u5031 494C  
                            u5111 4AEA                              u4311 1E36  
                            u4231 1D30                              u4151 1C3E  
                            u4071 1B22                              u5040 496E  
                            u5120 4B12                              u5200 44BE  
                            u4400 1F22                              u4320 1E50  
                            u4240 1D7A                              u4160 1C60  
                            u4080 1B38                              u6000 0568  
                            u5041 496A                              u5121 4B0E  
                            u5201 44BA                              u4401 1F1E  
                            u4321 1E4C                              u4241 1D76  
                            u4161 1C5C                              u4081 1B34  
                            u6001 0564                              u5050 498A  
                            u5130 4B52                              u5210 5564  
                            u4410 1F3E                              u4330 1E66  
                            u4250 1DB0                              u4170 1C80  
                            u4090 1B48                              u6010 0576  
                            u5051 4986                              u5131 4B4E  
                            u5211 5560                              u4411 1F3A  
                            u4331 1E62                              u4251 1DAC  
                            u4171 1C7C                              u4091 1B44  
                            u6011 0572                              u5220 42D4  
                            u4500 3AF4                              u4420 539A  
                            u5300 486A                              u5060 49B0  
                            u5140 4B90                              u4340 1E7A  
                            u4260 1DC0                              u4180 1C8E  
                            u6100 08D6                              u6020 05A0  
                            u5221 42D0                              u4501 3AF0  
                            u4421 5396                              u5301 4866  
                            u5061 49AC                              u5141 4B8C  
                            u4341 1E76                              u4261 1DBC  
                            u4181 1C8A                              u6101 08D2  
                            u6021 059C                              u5230 4308  
                            u4510 3B34                              u4430 5654  
                            u5310 48C0                              u5070 4A86  
                            u5150 4BC4                              u4350 1E94  
                            u4270 1DEC                              u4190 1C9E  
                            u6110 08E4                              u6030 06E8  
                            u4511 3B30                              u4431 5650  
                            u5311 48BC                              u5071 4A82  
                            u5151 4BC0                              u4351 1E90  
                            u4271 1DE8                              u4191 1C9A  
                            u6111 08E0                              u6031 06E4  
                            u5240 4336                              u4520 3B7E  
                            u5320 48D0                              u5080 4AA0  
                            u4600 23A8                              u5160 43F2  
                            u4360 1ECE                              u4280 1DFC  
                            u5400 45B4                              u4440 5546  
                            u6200 0AD6                              u6120 08FE  
                            u6040 074E                              u7000 37F4  
                            u5241 4332                              u4521 3B7A  
                            u5321 48CC                              u5081 4A9C  
                            u4601 23A4                              u5161 43EE  
                            u4361 1ECA                              u4281 1DF8  
                            u4441 5540                              u6201 0AD2  
                            u6121 08FA                              u6041 074A  
                            u7001 37F0                              u5250 434A  
                            u4530 3BD2                              u5330 5438  
                            u5090 4ABA                              u4610 23B8  
                            u5170 4430                              u4370 1EE0  
                            u4290 1E18                              u5410 5162  
                            u4450 5548                              u6210 0B5A  
                            u6130 090C                              u6050 0796  
                            u7010 3804                              u5251 4346  
                            u5235 42FE                              u4531 3BCE  
                            u5331 5434                              u5091 4AB6  
                            u4611 23B4                              u5171 442C  
                            u4371 1EDC                              u4291 1E14  
                            u6211 0B56                              u6131 0908  
                            u6051 0792                              u7011 3800  
                            u5260 4372                              u3580 57A4  
                            u6300 39E8                              u4460 3A4A  
                            u4540 3C04                              u4700 2584  
                            u4620 23FC                              u5180 444E  
                            u4380 1EF0                              u5340 4508  
                            u5500 30C0                              u5420 5174  
                            u6220 0B74                              u6140 0964  
                            u6060 07A6                              u7100 3E80  
                            u7020 3822                              u5261 436E  
                            u3581 57A0                              u6301 39E2  
                            u4461 3A46                              u4541 3C00  
                            u4701 2580                              u4621 23F8  
                            u5181 444A                              u4381 1EEC  
                            u5501 30BC                              u5421 5170  
                            u6221 0B70                              u6141 0960  
                            u6061 07A2                              u7101 3E7C  
                            u7021 381E                              u5270 4392  
                            u6310 39EA                              u4470 3A7C  
                            u4550 3C42                              u4710 259A  
                            u4630 240E                              u5190 446E  
                            u4390 1F10                              u5350 4526  
                            u5510 30E4                              u5430 50EA  
                            u6230 0B8C                              u6150 0A36  
                            u6070 080E                              u7110 3E9C  
                            u7030 3832                              u5271 438E  
                            u4471 3A78                              u4551 3C3E  
                            u4711 2596                              u4631 240A  
                            u5191 446A                              u4391 1F0C  
                            u5351 4522                              u5431 50E4  
                            u6231 0B88                              u6151 0A32  
                            u6071 080A                              u7111 3E98  
                            u7031 382E                              u5280 43A2  
                            u6400 5186                              u6320 3A00  
                            u4560 3C6C                              u5600 2A2C  
                            u4800 26D4                              u4720 25B8  
                            u4640 241E                              u5360 454E  
                            u5520 3100                              u5440 50EC  
                            u6240 0BEA                              u6160 0A52  
                            u6080 08B2                              u7120 3EAE  
                            u7040 3842                              u7200 4122  
                            u5281 439E                              u6401 5182  
                            u6321 39FC                              u4481 3AA6  
                            u4561 3C68                              u5601 2A26  
                            u4801 26D0                              u4721 25B4  
                            u4641 241A                              u5361 454A  
                            u5345 44FE                              u5521 30FC  
                            u5417 5158                              u6241 0BE4  
                            u6161 0A4E                              u6081 08AE  
                            u7121 3EAA                              u7041 383E  
                            u7201 411E                              u6410 519C  
                            u6330 3A12                              u4490 3ACA  
                            u4570 3C9A                              u5290 4848  
                            u5610 2A2E                              u4810 2702  
                            u4730 25D8                              u4650 245E  
                            u5370 4578                              u5530 3154  
                            u5450 5102                              u6250 0BEC  
                            u6170 0A64                              u6090 08C4  
                            u7130 3EE6                              u7050 3852  
                            u7210 4134                              u6411 5198  
                            u6331 3A0E                              u4491 3AC6  
                            u4571 3C96                              u5291 4844  
                            u4811 26FE                              u4731 25D4  
                            u4651 245A                              u5371 4574  
                            u5515 30DA                              u5451 50FE  
                            u6171 0A60                              u6091 08C0  
                            u7131 3EE2                              u7051 384E  
                            u7211 4130                              u6500 3578  
                            u6420 51B2                              u4580 3CE2  
                            u5700 2C48                              u5620 2A44  
                            u4740 25EA                              u4660 249E  
                            u4900 21B0                              u4820 1F6C  
                            u5540 3170                              u5460 3000  
                            u6260 0C02                              u6180 0A72  
                            u6340 45F0                              u7140 3EF8  
                            u7060 387C                              u7220 41A6  
                            u6501 3574                              u6421 51AE  
                            u4581 3CDE                              u5701 2C44  
                            u5621 2A40                              u4741 25E6  
                            u4661 249A                              u4821 1F68  
                            u5541 316C                              u6261 0BFE  
                            u6181 0A6E                              u6341 45EC  
                            u7141 3EF4                              u7061 3878  
                            u7301 46A2                              u7221 41A2  
                            u6510 35D4                              u6430 51C8  
                            u6270 38E0                              u5710 2C58  
                            u5630 2A74                              u4750 2618  
                            u4670 2514                              u4590 2396  
                            u4910 220A                              u4830 1F7E  
                            u5390 45B2                              u5550 31AC  
                            u5470 3030                              u6190 0AA8  
                            u6350 4622                              u7150 3F7A  
                            u7070 388C                              u7310 4728  
                            u6511 35D0                              u6431 51C4  
                            u8007 4C9C                              u6271 38DC  
                            u5711 2C54                              u5631 2A70  
                            u4751 2614                              u4671 2510  
                            u4591 2392                              u4911 2206  
                            u4831 1F7A                              u5391 45AC  
                            u5551 31A8                              u5535 314A  
                            u5471 302C                              u6191 0AA4  
                            u6351 461E                              u7151 3F76  
                            u7071 3888                              u7231 41BC  
                            u7311 4724                              u6520 362A  
                            u5560 55B6                              u6280 3916  
                            u5720 2C6A                              u5640 2A90  
                            u4760 262E                              u4680 2536  
                            u4920 222A                              u4840 1F8E  
                            u5480 3052                              u5800 01AE  
                            u6360 463E                              u6600 14C2  
                            u6440 4F9E                              u7080 389C  
                            u7400 3E3E                              u7240 41D8  
                            u7320 475A                              u6521 3626  
                            u8017 4CB6                              u5561 55B0  
                            u6281 3912                              u5721 2C66  
                            u5641 2A8C                              u4761 262A  
                            u4681 2532                              u4921 2226  
                            u4905 21A6                              u4841 1F8A  
                            u5385 458A                              u5481 304E  
                            u5465 2FF6                              u5801 01A8  
                            u6361 463A                              u6601 14BE  
                            u6441 4F9A                              u7081 3898  
                            u7401 3E3A                              u7241 41D4  
                            u7321 4756                              u7161 40B0  
                            u6530 3674                              u5570 55B8  
                            u6290 3932                              u5730 2C7A  
                            u5650 2ABE                              u4770 2642  
                            u4690 2560                              u4930 223C  
                            u4850 1FCE                              u5810 01B0  
                            u6370 4650                              u6610 1508  
                            u6450 4FD8                              u7410 3E4E  
                            u7250 41F4                              u7170 40CC  
                            u6531 3670                              u8027 4CCC  
                            u6291 392E                              u5731 2C76  
                            u5651 2ABA                              u4771 263E  
                            u4691 255C                              u4931 2238  
                            u4851 1FCA                              u6371 464C  
                            u6611 1504                              u7091 3E64  
                            u6451 4FD4                              u7411 3E4A  
                            u7331 3D2A                              u7251 41F0  
                            u7171 40C8                              u6540 3692  
                            u5580 528E                              u5740 2C92  
                            u5660 2ACC                              u4780 265C  
                            u4940 226A                              u4860 1FE0  
                            u5900 044A                              u5820 01C6  
                            u6380 4678                              u6700 16F6  
                            u6620 158A                              u6460 4BF4  
                            u7340 3D9E                              u7500 2E6C  
                            u7260 4206                              u7180 40E8  
                            u6541 368E                              u8037 576A  
                            u5581 528A                              u5741 2C8E  
                            u5661 2AC8                              u4781 2658  
                            u4941 2266                              u4861 1FDC  
                            u5901 0446                              u5821 01C2  
                            u6381 4674                              u6701 16F2  
                            u6621 1584                              u6461 4BF0  
                            u7341 3D9A                              u7501 2E68  
                            u7421 2CE6                              u7261 4202  
                            u7181 40E4                              u6550 36A2  
                            u5590 52BC                              u3990 4780  
                            u5670 2BF6                              u4790 26A4  
                            u4950 2280                              u4870 1FF0  
                            u5910 045C                              u5830 0252  
                            u5750 00C6                              u6710 1738  
                            u6630 158C                              u6470 4C16  
                            u6390 53C2                              u7350 3DC6  
                            u7510 2ED0                              u7430 2D02  
                            u7270 422C                              u7190 40FA  
                            u6551 369E                              u5591 52B8  
                            u3991 477C                              u5671 2BF2  
                            u4791 26A0                              u4951 227C  
                            u4871 1FEC                              u5495 3066  
                            u5911 0458                              u5831 024E  
                            u5751 00C2                              u6711 1734  
                            u6471 4C12                              u6391 53BE  
                            u7351 3DC2                              u7511 2ECC  
                            u7431 2CFE                              u7271 4228  
                            u7191 40F6                              u6560 36B0  
                            u6800 4EA8                              u7600 322C  
                            u5680 2C14                              u4960 2294  
                            u4880 2026                              u5496 3070  
                            u5920 047E                              u5840 0282  
                            u5760 0116                              u6720 178E  
                            u6640 15A2                              u6480 4C3E  
                            u7360 3DD6                              u7520 2F02  
                            u7440 2D1A                              u7280 423E  
                            u6561 36AC                              u6801 4EA4  
                            u7601 3228                              u5681 2C10  
                            u4961 2290                              u4881 2022  
                            u5497 3080                              u5921 047A  
                            u5841 027C                              u5761 0112  
                            u6721 178A                              u6641 159E  
                            u6481 4C3A                              u7361 3DD2  
                            u7521 2EFE                              u7441 2D16  
                            u7281 423A                              u6570 36EA  
                            u6490 356A                              u6810 4E2E  
                            u7610 323A                              u5690 2C2E  
                            u4970 22AE                              u4890 2036  
                            u5930 04A4                              u5850 0284  
                            u5770 0124                              u6730 17B2  
                            u6650 15C6                              u7370 3DE6  
                            u7530 2F4E                              u7450 2D30  
                            u7290 42AE                              u6571 36E6  
                            u6491 3566                              u6811 4E2A  
                            u7611 3236                              u5691 2C2A  
                            u4971 22AA                              u4891 2032  
                            u5931 04A0                              u5771 0120  
                            u6731 17AE                              u6651 15C2  
                            u7371 3DE2                              u7531 2F4A  
                            u7451 2D2C                              u7291 42AA  
                            u6580 36F8                              u6900 4DD0  
                            u7700 32E8                              u7620 3250  
                            u4980 22F6                              u5940 04BA  
                            u5860 029A                              u5780 0136  
                            u6740 1844                              u6660 1602  
                            u6820 34E2                              u7380 3DF8  
                            u7540 2F5C                              u7460 2D94  
                            u6581 36F4                              u7701 32E4  
                            u7621 324C                              u4981 22F2  
                            u5941 04B6                              u5861 0296  
                            u5781 0132                              u6741 1840  
                            u6661 15FE                              u6821 34DE  
                            u7381 3DF4                              u7541 2F58  
                            u7461 2D90                              u6910 4E04  
                            u7710 32F8                              u7630 3260  
                            u4990 2324                              u5950 04D6  
                            u5870 031E                              u5790 017E  
                            u6750 18F2                              u6670 16AC  
                            u6590 1478                              u6830 3506  
                            u7390 3E1E                              u7550 2FA8  
                            u7470 2DC6                              u7711 32F4  
                            u7631 325C                              u4991 2320  
                            u5951 04D2                              u5871 031A  
                            u5791 017A                              u6751 18EE  
                            u6671 16A6                              u6591 1474  
                            u6831 3502                              u7391 3E1A  
                            u7551 2FA4                              u7471 2DC2  
                            u6920 4E14                              u7720 3310  
                            u7640 3278                              u7560 31E0  
                            u5960 050C                              u5880 03B2  
                            u6760 195A                              u6680 16AE  
                            u6840 352A                              u7480 2E12  
                            u7800 4D18                              u6921 4E10  
                            u7721 330C                              u7641 3274  
                            u7561 31DC                              u5961 0508  
                            u5881 03AE                              u6761 1954  
                            u6841 3526                              u7481 2E0E  
                            u7801 4D14                              u6930 5754  
                            u7730 331E                              u7650 3286  
                            u7570 31EE                              u5970 0532  
                            u5890 0424                              u6770 195C  
                            u6690 16C4                              u6850 354E  
                            u7490 2E20                              u7810 4D2A  
                            u6907 4DC6                              u6931 5750  
                            u7731 331A                              u7651 3282  
                            u7571 31EA                              u5971 052E  
                            u5891 0420                              u6691 16C0  
                            u6851 354A                              u7491 2E1C  
                            u7811 4D26                              u7740 3334  
                            u7660 329C                              u7580 3204  
                            u5980 0544                              u6780 1972  
                            u6860 504A                              u7820 4D3A  
                            u6917 4DFA                              u7741 3330  
                            u7661 3298                              u7581 3200  
                            u5981 0540                              u6781 196E  
                            u6861 5046                              u6941 3712  
                            u7821 4D36                              u7750 3344  
                            u7670 32AC                              u7590 3214  
                            u6870 56BE                              u5990 0552  
                            u6790 1A0E                              u6950 3782  
                            u7830 4D4A                              u7751 3340  
                            u7671 32A8                              u7591 3210  
                            u6871 56BA                              u5991 054E  
                            u6791 1A0A                              u6951 377E  
                            u7831 4D46                              u6880 5066  
                            u7760 335C                              u7680 32C4  
                            u6960 37A6                              u7840 4D5A  
                            u6881 5062                              u7761 3358  
                            u7681 32C0                              u6961 37A2  
                            u7841 4D56                              u6890 509A  
                            u7770 336A                              u7690 32D2  
                            u6970 37B6                              u7850 4D76  
                            u6891 5096                              u7771 3366  
                            u7691 32CE                              u6971 37B2  
                            u7851 4D72                              u7780 3380  
                            u6980 37D4                              u7860 4D92  
                            u7781 337C                              u6981 37D0  
                            u7861 4D8E                              u7790 3390  
                            u6990 37E4                              u7870 4F24  
                            u7791 338C                              u6991 37E0  
                            u7871 4F20                              u7880 4F48  
                            u7881 4F44                              u7890 4F6C  
                            u7891 4F68                              u7967 4090  
                            u7977 52FE                              u7987 55DA  
                            u7997 55EC                              _TMR2 000FBC  
           ??_stopTimeSettingMenu 005F                              abs@a 0013  
               ?_Lcd_Write_String 0005                              _dbuf 0260  
                            _atoi 38A8                              _main 57A6  
                            _dtoa 29FC                              _prec 00F6  
                            _nout 01AF                              pad@i 0018  
                            pad@p 0015                              fsr1h 000FE2  
                            fsr2h 000FDA                              indf1 000FE7  
                            indf2 000FDF                              fsr1l 000FE1  
                            pad@w 001A                              fsr2l 000FD9  
                            btemp 005F                     ___fpclassifyf 44C8  
                            prodh 000FF4                              prodl 000FF3  
                            start 009A                ??_Lcd_Write_String 0007  
                 ___fldiv@new_exp 0046                   __end_of_Lcd_Cmd 5776  
                    _tolower$3145 000D                      ___param_bank 000000  
         ??_driverTimeSettingMenu 005F                             ??_abs 0015  
                           ??_pad 0017  speedLimitSettingMenu@textCursor2 00E1  
                   ___fltol@sign1 0056                   __end_of___aodiv 3BC0  
                           ?_atoi 0008                   __end_of___fladd 1F52  
                           ?_main 0001                             ?_dtoa 001C  
                 __end_of___aomod 3D24                   __end_of_adcInit 54DA  
                 __end_of___fldiv 2716                   __end_of___awdiv 49C2  
                 __end_of___flneg 5586                             _EEADR 000FA9  
                           STR_10 7FD0                             STR_11 7F09  
                           STR_20 7FF3                             STR_12 7FDE  
                           STR_13 7F1A                             STR_14 7EF7  
                           STR_23 7FEF                             STR_15 7F6F  
                           STR_24 7FF7                             STR_16 7F91  
                           STR_17 7F5E                             STR_18 7EF7  
                           STR_27 7FFB                             STR_19 7FEB  
                 __end_of___awmod 4B24                             STR_29 7FFB  
                 __end_of___flmul 237C                   __end_of___flsub 5358  
                 __end_of___fltol 43C4                   __end_of___lldiv 4C72  
                           _T0CON 000FD5                   ___awdiv@divisor 0003  
                           i2l691 0096                   ___awdiv@counter 0005  
                    vfpfcnvrt@fmt 00A9                             _TMR0H 000FD7  
                           _TMR0L 000FD6           __size_of_Lcd_Set_Cursor 0066  
             ___lmul@multiplicand 0005                             _fabsf 5662  
                           _flags 00F8                             _fputc 476E  
                           _fputs 5358                   __end_of_isdigit 55BE  
                     ?_PWM1_setDC 0058                      _adc_raw_data 0173  
                     ?_PWM2_setDC 0058                             atoi@n 0015  
                           pad@fp 0011                             atoi@s 0008  
                           _width 01B1                             _putch 57DC  
                           dtoa@d 001E                             dtoa@i 003E  
                           dtoa@n 0036                             dtoa@p 0030  
                           dtoa@s 0034                             dtoa@w 0032  
                 __end_of_isspace 52C8                   __end_of_isupper 554E  
                __end_of_PWM_Init 5714                             tablat 000FF5  
                           ttemp5 0060                             ttemp6 0063  
                           ttemp7 0067                             status 000FD8  
          ?_speedLimitSettingMenu 0001                             wtemp8 0060  
                 __end_of_sprintf 5276                    ?___fpclassifyf 0001  
                 __end_of_tolower 511A                   __end_of_strncmp 469C  
                   ?_readAdcValue 0001                  __end_of_Lcd_Port 51D2  
                 __initialization 51D2                       _system_init 3F8A  
                    __end_of_atoi 3A38                      __end_of_main 57BA  
                    __end_of_dtoa 2CE0       _KP@fs_speed_controller$F949 01E7  
                          ??_atoi 000A                            ??_main 005F  
                          ??_dtoa 0026                __size_of_Lcd_Clear 000E  
             _loopTaskMenuControl 4F0A                     __activetblptr 000002  
 __size_of_calculatedAverageValue 02E6          stopTimeSettingMenu@F6912 0210  
                          ?_fabsf 001C                            _ADCON0 000FC2  
                          _ADCON1 000FC1                            ?_fputc 0001  
                          ?_fputs 000A                            _ADRESH 000FC4  
                          _ADRESL 000FC3                            _EEDATA 000FA8  
                          _CCPR1L 000FBE                            _CCPR2L 000F67  
                          _EECON2 000FA7                  ___awdiv@dividend 0001  
                          ?_putch 0001                            i2l6510 0018  
                          i2l6520 0046                            i2l6512 0026  
                          i2l6530 0074                            i2l6522 004C  
                          i2l6514 0028                            i2l6532 008A  
                          i2l6524 005E                            i2l6516 0030  
                          i2l6508 000A                            i2l6534 0092  
                          i2l6526 0060                            i2l6518 0034  
                          i2l6528 0070                         ??_Lcd_Cmd 0002  
                          _TIMER0 0008                    ??_readAdcValue 0003  
         __size_of_Lcd_Write_Char 0038              ?_loopTaskMenuControl 0001  
                __end_of___xxtofl 370C                 _scanAdcConversion 0C4E  
              _timer_counter_flag 00FA                ?_scanAdcConversion 0001  
            __size_of_eepromWrite 002E                      vfprintf@cfmt 00CD  
                __end_of_lcd_init 4D08                            ___flge 43C4  
                          ___fleq 4B24                  __end_of_mainMenu 38A8  
                          ___lmul 4F80                         ??___aodiv 0011  
                       ??___fladd 003D                         ??___aomod 0011  
                          ___wmul 5714                         ??_adcInit 0001  
                       ??___fldiv 003D                         ??___awdiv 0005  
                       ??___flneg 0005                         ??___awmod 0005  
                       ??___flmul 0024                         ??___flsub 004D  
                       ??___fltol 0052                         ??___lldiv 0009  
                          _efgtoa 009E                            _floorf 2FB8  
             __size_of_PWM1_setDC 007A                            fabsf@u 0020  
                          fabsf@x 001C                  __end_of_mcu_init 57A6  
                __end_of_exitLine 57DC               __size_of_PWM2_setDC 007A  
               _secretMenuCounter 00FC               ??_scanAdcConversion 0058  
                          clear_0 51F8                            clear_1 5204  
                          clear_2 5210                   eepromWrite@data 0001  
                ___awdiv@quotient 0007                   ___awmod@divisor 0003  
                 ___awmod@counter 0005                            pad@buf 0013  
                          dtoa@fp 001C                            _strcpy 511A  
                          _strlen 562C                            fputc@c 0001  
            readAdcValue@adcValue 0006                            fputs@c 000E  
                          fputs@i 000F                            fputs@s 000A  
                       ??_isdigit 0003                   ___fpclassifyf@e 0009  
                 ___fpclassifyf@u 000B                   ___fpclassifyf@x 0001  
                    __mediumconst 7EF6                         ??_isspace 0003  
                          tblptrh 000FF7                         ??_isupper 0003  
                          tblptrl 000FF6                            tblptru 000FF8  
                          putch@c 0001                  __end_of_vfprintf 5054  
                       ??_sprintf 005F                         ??_tolower 0009  
                __end_of_stopMenu 476E                         ??_strncmp 0007  
      __end_of_buttonControlFlags 339A                   Lcd_Set_Cursor@a 0005  
                 Lcd_Set_Cursor@b 0004                   Lcd_Set_Cursor@y 0007  
                 Lcd_Set_Cursor@z 0006                        ___flge@ff1 0035  
                      ___flge@ff2 0039                   ??___fpclassifyf 0005  
                    ___xxtofl@arg 0018                      ___xxtofl@exp 0017  
                    ___xxtofl@val 000E                        ___fleq@ff1 0001  
                      ___fleq@ff2 0005                     mainMenu@F6896 0163  
       __end_of_scanAdcConversion 1454                        __accesstop 0060  
         __end_of__initialization 5216             ??_loopTaskMenuControl 005F  
                      ___flneg@f1 0001            _calculatedAverageValue 2716  
               __end_of_Lcd_Clear 57DA                     ___rparam_used 000001  
                      ___fltol@f1 004E               _loopTaskTimeMachine 4D08  
                  __pcstackCOMRAM 0001                      __pidataBANK1 53DE  
      driverTimeSettingMenu@F6915 0200                     __end_of_fabsf 5696  
                ??_openLCD_Script 000B                     __end_of_fputc 4838  
                   __end_of_fputs 539C                     __end_of_putch 57DE  
                       ?_PWM_Init 0001                    _Lcd_Set_Cursor 5054  
    _KP@fs_speed_controller$F1163 01DF      _KP@fs_speed_controller$F1342 01D7  
    _KP@fs_speed_controller$F2207 01BF      _KP@fs_speed_controller$F2076 01C7  
    _KP@fs_speed_controller$F2360 01B7      _KP@fs_speed_controller$F1842 01CF  
               eepromRead@address 0001              ?_loopTaskTimeMachine 0001  
                         ??_fabsf 0020                         ?_Lcd_Port 0001  
                   ?_loopTaskInit 0001                           ??_fputc 0005  
                         ??_fputs 000E                           ??_putch 0001  
                      __pbssBANK0 00F3                        __pbssBANK1 0100  
                      __pbssBANK2 0200               PWM1_setDC@dutycycle 0058  
                         ?_TIMER0 0001                           ?___flge 0035  
                         ?___fleq 0001                __size_of_pauseMenu 013A  
                         ?___lmul 0001                           ?___wmul 0001  
                         ?_efgtoa 0058    __size_of_driverTimeSettingMenu 012C  
                         _CCP1CON 000FBD                           _CCP2CON 000F66  
                         ?_floorf 004E     __end_of_driverTimeSettingMenu 3F8A  
                  ___lmul@product 0009         __size_of_Lcd_Write_String 007E  
          __end_of_Lcd_Set_Cursor 50BA                        ??_PWM_Init 0001  
                         ?_strcpy 0001                           ?_strlen 0001  
            __end_of_readAdcValue 53DE                        _eepromRead 573A  
                       ?___xxtofl 000E             ??_loopTaskTimeMachine 0001  
  stopTimeSettingMenu@textCursor2 00E1                __size_of_vfpfcnvrt 063E  
     __end_of_stopTimeSettingMenu 41B6                    ??_loopTaskInit 005E  
                      ??_Lcd_Port 0001                __size_of_startMenu 001A  
                    ??_PWM1_setDC 005A                      ??_PWM2_setDC 005A  
                       ?_lcd_init 0001           __size_of_menuInitialize 0028  
         ??_speedLimitSettingMenu 005F                         ?_mainMenu 0001  
                   _menu_selected 00FB                __size_of_stopMotor 003C  
      __size_of_scanAdcConversion 0806                    _Lcd_Write_Char 55BE  
                         _Lcd_Cmd 5758                         ?_mcu_init 0001  
                       ?_exitLine 0001                   __size_of_TIMER0 0092  
                      _controller 0150                           __Hparam 0000  
                         __Lparam 0000               PWM2_setDC@dutycycle 0058  
                    ?_system_init 0001                   __size_of___flge 0104  
                 __size_of___fleq 00AA                           ___aodiv 3A38  
                         ___fladd 1A92                           ___aomod 3BC0  
                         _adcInit 549C                           ___fldiv 237C  
                         ___awdiv 48FE                           ___flneg 554E  
                 __size_of___lmul 006A                           ___awmod 4A74  
                         ___flmul 1F52                           ___flsub 5312  
                         ___fltol 42BE                           ___lldiv 4BCE  
                 __size_of___wmul 0026                         ?_vfprintf 00C7  
                 __size_of_efgtoa 0BB0                         ?_stopMenu 0001  
                 __size_of_floorf 0216                           __pcinit 51D2  
              __end_of_PWM1_setDC 4F0A                           __ramtop 0600  
                 ?_Lcd_Set_Cursor 0004                __end_of_PWM2_setDC 4E90  
                         __ptext0 57A6                           __ptext1 4D08  
                         __ptext2 4F0A                           __ptext3 49C2  
                         __ptext4 40AA                           __ptext5 469C  
                         __ptext6 5776                           __ptext7 41B6  
                         __ptext8 2CE0                           __ptext9 3D24  
                      _menu_flags 0197                        _menu_value 00F3  
                 __size_of_strcpy 005C                   __size_of_strlen 0036  
                       _T2CONbits 000FBA                      __size_of_abs 0040  
                    __size_of_pad 00C6                           _isdigit 5586  
                      ??___xxtofl 0012                  ___awmod@dividend 0001  
                         _isspace 5276                           _isupper 5516  
                         efgtoa@c 005E                           efgtoa@d 0087  
                         efgtoa@e 009F                           efgtoa@f 005A  
                         efgtoa@g 009B                           efgtoa@h 0091  
                         efgtoa@i 0099                           efgtoa@l 0095  
                         efgtoa@m 0083                           efgtoa@n 00A1  
                         efgtoa@p 008B                           efgtoa@t 007F  
                         efgtoa@u 00A3                           efgtoa@w 008E  
                   ?_speedControl 0058                           atoi@neg 000E  
                   ?_timer_0_init 0001                 __end_of_pauseMenu 3E5E  
                         _sprintf 5224                           _tolower 50BA  
                      ??_lcd_init 0004            __end_of_Lcd_Write_Char 55F6  
                         _strncmp 45C6              end_of_initialization 5216  
                      ??_mainMenu 005F              speedControl@position 0058  
                         floorf@e 0064                           floorf@m 0060  
                         floorf@u 0066                           floorf@x 004E  
                      _secretMenu 2CE0                           fputc@fp 0003  
                      ??_mcu_init 0001                        ??_exitLine 0001  
                   __Lmediumconst 7EF6                           fputs@fp 000C  
                 ___lldiv@divisor 0005                   ___lldiv@counter 000D  
               __end_of_vfpfcnvrt 1A92                        efgtoa@mode 0090  
                      efgtoa@sign 0089                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
                       Lcd_Port@a 0001                 __end_of_startMenu 5790  
                      ??_vfprintf 005F                        ??_stopMenu 005F  
                         strcpy@d 0009                           strlen@a 0003  
                         strcpy@s 0007                           strlen@s 0001  
               __end_of_stopMotor 5516                         _PORTBbits 000F81  
                       _PORTDbits 000F83                       ?_eepromRead 0001  
                     ___fladd@grs 0044                     ___xxtofl@sign 0016  
                  pauseMenu@F6902 0240                         _TRISAbits 000F92  
                  ??_speedControl 005C                         _TRISBbits 000F93  
                       _TRISCbits 000F94                         _TRISDbits 000F95  
                       _TRISEbits 000F96                    ??_timer_0_init 0001  
            pauseMenu@textCursor2 00E1                       ___fldiv@grs 0048  
                     ___fldiv@rem 0041                        _startMotor 55F6  
                 ?_Lcd_Write_Char 0001           ?_calculatedAverageValue 0001  
               Lcd_Write_String@a 0005                 Lcd_Write_String@i 0009  
                     ___flmul@grs 0029                     ??_eepromWrite 0002  
        _button_bounce_controller 019D                    __end_of_TIMER0 009A  
             mainMenu@textCursor2 00E1                     ?_stateMachine 0001  
              _buttonControlFlags 31CE                         _Lcd_Clear 57CC  
            __end_of_loopTaskInit 549C                      _convert_data 0100  
           __size_of_readAdcValue 0042                    __end_of___flge 44C8  
                  __end_of___fleq 4BCE                    __end_of___lmul 4FEA  
                     vfpfcnvrt@ap 00AB                       vfpfcnvrt@ct 00C3  
                     vfpfcnvrt@fp 00A7                       vfpfcnvrt@ll 00B1  
                  __end_of___wmul 573A                  _Lcd_Write_String 4D98  
                  __end_of_efgtoa 0C4E               ?_buttonControlFlags 0001  
                  __end_of_floorf 31CE                        floorf@F524 01A3  
                  __end_of_strcpy 5176                    __end_of_strlen 5662  
               __size_of_PWM_Init 0028               start_initialization 51D2  
                     __end_of_abs 545E                       __end_of_pad 48FE  
     __end_of_loopTaskMenuControl 4F80    __end_of_calculatedAverageValue 29FC  
                  _menuInitialize 56C4                      _driver_limit 0183  
                     ?_secretMenu 0001                 __size_of_Lcd_Port 005C  
            ??_buttonControlFlags 0001                          ??_TIMER0 0001  
                   stopMenu@F6899 0250             __end_of___fpclassifyf 45C6  
                    _readAdcValue 539C                    ??_stateMachine 00F1  
             __size_of_eepromRead 001E                       vfprintf@fmt 00C9  
                      ?_Lcd_Clear 0001                          ??___flge 003D  
                        ??___fleq 0009                          ??___lmul 0009  
             __end_of_eepromWrite 56C4                          ??___wmul 0005  
                        ??_efgtoa 006A                       __pdataBANK1 01B3  
                        ??_floorf 0052              __size_of_system_init 0120  
                 Lcd_Write_Char@a 0004                   Lcd_Write_Char@y 0003  
                        ??_strcpy 0005                          ??_strlen 0003  
                       ___fladd@a 0039                         ___fladd@b 0035  
                       ___fldiv@a 0039                         ___fldiv@b 0035  
                       ___flmul@a 0020                         ___flmul@b 001C  
                       ___flsub@a 0049                         ___flsub@b 0045  
          __end_of_menuInitialize 56EC                     __pcstackBANK0 0060  
                ___aodiv@dividend 0001                 __size_of___xxtofl 01B4  
                     ?_startMotor 0001    __size_of_speedLimitSettingMenu 0108  
   __end_of_speedLimitSettingMenu 42BE                          ?_Lcd_Cmd 0001  
               __size_of_lcd_init 0096                 __size_of_mainMenu 019C  
                       _atoi$3050 0010                         _atoi$3051 0014  
                       _atoi$3052 0012                   secretMenu@F6906 0230  
               __size_of_mcu_init 0016                 __size_of_exitLine 0002  
                     _efgtoa$2983 0073                       _efgtoa$2992 0079  
                     _efgtoa$2984 0075                       _efgtoa$2993 007B  
                     _efgtoa$2994 007D                       _efgtoa$2988 0077  
                       _dtoa$2959 002E              __end_of_speedControl 3558  
                ??_Lcd_Set_Cursor 0005                         __pintcode 0008  
                   __pmediumconst 7EF6              __end_of_timer_0_init 57CC  
                        ?___aodiv 0001                          ?___fladd 0035  
                        ?___aomod 0001                          ?_adcInit 0001  
                        ?___fldiv 0035                          ?___awdiv 0001  
                ___aodiv@quotient 0013                          ?___flneg 0001  
                        ?___awmod 0001                          ?___flmul 001C  
                        ?___flsub 0045                          ?___fltol 004E  
                        ?___lldiv 0001       __end_of_loopTaskTimeMachine 4D98  
             __size_of_secretMenu 02D8                 __size_of_vfprintf 006A  
           _driverTimeSettingMenu 3E5E                 __size_of_stopMenu 00D2  
                       fabsf@F463 01AB                          ?_isdigit 0001  
                        ?_isspace 0001                   ?_menuInitialize 0001  
                        ?_isupper 0001           __size_of_openLCD_Script 004A  
                  __size_of_fabsf 0034                          ?_sprintf 00CF  
                        ?_tolower 0007                    __size_of_fputc 00CA  
                  __size_of_fputs 0044                          ?_strncmp 0001  
                  __size_of_putch 0002                eepromWrite@address 0002  
                       _pauseMenu 3D24                    ___wmul@product 0005  
    __size_of_stopTimeSettingMenu 010C                          _LATCbits 000F8B  
                        _LATDbits 000F8C                       _eepromWrite 5696  
           __size_of_loopTaskInit 003E                    PWM1_setDC@duty 005C  
                        Lcd_Cmd@a 0003                          _PIR2bits 000FA1  
                        i2u790_40 0018                          i2u790_41 0014  
                        i2u791_40 0026                          i2u791_41 0022  
                        i2u792_40 0046                          i2u792_41 0042  
                        i2u793_40 005E                          i2u793_41 005A  
                        i2u794_40 0070                          i2u794_41 006C  
                        i2u795_40 008A                          i2u795_41 0086  
                     ??_Lcd_Clear 0004                      _pauseIsClick 00FF  
             __size_of_startMotor 0036                         _vfpfcnvrt 1454  
                      _ADCON0bits 000FC2                        _ADCON2bits 000FC0  
                        _PWM_Init 56EC                 ___wmul@multiplier 0001  
                       _startMenu 5776  driverTimeSettingMenu@textCursor2 00E1  
                    ??_eepromRead 0001                  ??_Lcd_Write_Char 0002  
                  PWM2_setDC@duty 005C                         _stopMotor 54DA  
      speedLimitSettingMenu@F6909 0220              __end_of_stateMachine 4A74  
                    _isspace$3081 0007                          _Lcd_Port 5176  
                      vfpfcnvrt@c 00C6                        vfpfcnvrt@f 00BF  
               ___lmul@multiplier 0001                      _loopTaskInit 545E  
                       copy_data0 51E6          __end_of_Lcd_Write_String 4E16  
                      ?_pauseMenu 0001                  __size_of_Lcd_Cmd 001E  
                      _EECON1bits 000FA6                          __Hrparam 0000  
                      vfprintf@ap 00CB                          __Lrparam 0000  
                      vfprintf@fp 00C7                __end_of_eepromRead 5758  
                __size_of___aodiv 0188                  __size_of___fladd 04C0  
                __size_of___aomod 0164                  __size_of_adcInit 003E  
                __size_of___fldiv 039A                  __size_of___awdiv 00C4  
                __size_of___flneg 0038                  __size_of___awmod 00B0  
                __size_of___flmul 042A                  __size_of___flsub 0046  
                __size_of___fltol 0106                  __size_of___lldiv 00A4  
                      ?_vfpfcnvrt 00A7            ?_driverTimeSettingMenu 0001  
                 ___aodiv@divisor 0009                   ___aodiv@counter 0011  
                      ?_startMenu 0001                        _ANSELAbits 000F38  
                      _ANSELBbits 000F39                        _ANSELCbits 000F3A  
                      _ANSELDbits 000F3B                        _ANSELEbits 000F3C  
              ___fpclassifyf@F463 01A7                        sprintf@fmt 00D1  
                        ___xxtofl 3558                        ?_stopMotor 0001  
                __size_of_isdigit 0038                  __size_of_isspace 0052  
                        __ptext10 370C                          __ptext11 55F6  
                        __ptext20 54DA                          __ptext12 339A  
                        __ptext21 5224                          __ptext13 0C4E  
                        __ptext30 44C8                          __ptext22 4FEA  
                        __ptext14 539C                          __ptext31 5312  
                        __ptext23 1454                          __ptext15 2716  
                        __ptext40 29FC                          __ptext32 1A92  
                        __ptext24 45C6                          __ptext16 4F80  
                        __ptext41 4838                          __ptext33 554E  
                        __ptext25 009E                          __ptext17 4BCE  
                        __ptext50 5276                          __ptext42 562C  
                        __ptext34 1F52                          __ptext26 50BA  
                        __ptext18 57DA                          __ptext51 5586  
                        __ptext43 5358                          __ptext35 43C4  
                        __ptext27 5516                          __ptext19 3E5E  
                        __ptext60 4D98                          __ptext52 5714  
                        __ptext44 476E                          __ptext36 4B24  
                        __ptext28 511A                          __ptext61 55BE  
                        __ptext53 5696                          __ptext45 57DC  
                        __ptext37 237C                          __ptext29 2FB8  
                        __ptext70 56EC                          __ptext62 5054  
                        __ptext54 31CE                          __ptext46 541E  
                        __ptext38 4A74                          __ptext71 4E16  
                        __ptext63 57CC                          __ptext55 545E  
                        __ptext47 3BC0                          __ptext39 48FE  
                        __ptext72 4E90                          __ptext64 56C4  
                        __ptext56 57BA                          __ptext48 3A38  
                        __ptext73 5662                          __ptext65 5790  
                        __ptext57 3F8A                          __ptext49 38A8  
                        __ptext74 3558                          __ptext66 4C72  
                        __ptext58 573A                          __ptext75 42BE  
                        __ptext67 5758                          __ptext59 52C8  
                        __ptext68 5176                          __ptext69 549C  
                __size_of_isupper 0038                          _lcd_init 4C72  
                        _mainMenu 370C                  __size_of_sprintf 0052  
                __size_of_tolower 0060                      ??_secretMenu 005F  
                      strcpy@dest 0001                  __size_of_strncmp 00D6  
                        _mcu_init 5790                          _exitLine 57DA  
                   __size_of_atoi 0190                     __size_of_main 0014  
                   __size_of_dtoa 02E4             __size_of_speedControl 01BE  
           __size_of_timer_0_init 0012             secretMenu@textCursor2 00E1  
                        efgtoa@fp 0058                          efgtoa@ne 0085  
                        efgtoa@pp 0081                          efgtoa@ou 006F  
                        int$flags 005F                          _vfprintf 4FEA  
                        _stopMenu 469C            readAdcValue@adcChannel 0005  
                ___aomod@dividend 0001                __end_of_secretMenu 2FB8  
                  _vfpfcnvrt$3014 00BD                    _vfpfcnvrt$3008 00B9  
                  _vfpfcnvrt$3009 00BB                       _OSCTUNEbits 000F9B  
                      _INTCONbits 000FF2                    _openLCD_Script 52C8  
    _KD@fs_speed_controller$F1164 01DB      _KD@fs_speed_controller$F1343 01D3  
    _KD@fs_speed_controller$F2208 01BB      _KD@fs_speed_controller$F2077 01C3  
    _KD@fs_speed_controller$F2361 01B3      _KD@fs_speed_controller$F1843 01CB  
                        isdigit@c 0001                      _speedControl 339A  
                    _timer_0_init 57BA                      ??_startMotor 005E  
              Lcd_Write_Char@temp 0002                          intlevel2 0000  
                       sprintf@ap 00D9                       ??_pauseMenu 005F  
     __size_of_buttonControlFlags 01CC                          isspace@c 0001  
                ___lldiv@dividend 0001      __size_of_loopTaskMenuControl 0076  
                       strcpy@src 0003                          isupper@c 0001  
                       strncmp@_l 0001                         strncmp@_r 0003  
                      _OSCCONbits 000FD3                     ??_system_init 0002  
                     efgtoa@nmode 008D                      _procces_data 0130  
                 ___aomod@divisor 0009                       ??_vfpfcnvrt 00AD  
                 ___aomod@counter 0011                Lcd_Set_Cursor@temp 0008  
                ??_menuInitialize 0001                __end_of_startMotor 562C  
     _KD@fs_speed_controller$F950 01E3             __size_of_stateMachine 00B2  
                     ??_startMenu 0001               _stopTimeSettingMenu 40AA  
          __end_of_openLCD_Script 5312                          sprintf@f 00DB  
                        tolower@c 0007                          sprintf@s 00CF  
          __size_of___fpclassifyf 00FE                  ___lldiv@quotient 0009  
                     ??_stopMotor 005E                          strncmp@l 0008  
                        strncmp@n 0005                          strncmp@r 000A  
                     _timer_value 018F                     ___fladd@signs 0041  
                      _PWM1_setDC 4E90                        _PWM2_setDC 4E16  
                    ___aodiv@sign 0012                      ___fladd@aexp 0042  
                    ___fladd@bexp 0043              ?_stopTimeSettingMenu 0001  
                    ?_eepromWrite 0001             _speedLimitSettingMenu 41B6  
                    ___aomod@sign 0012                      _stateMachine 49C2  
