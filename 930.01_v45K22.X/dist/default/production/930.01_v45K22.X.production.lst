

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Aug 11 18:28:58 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    81                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    82                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    83                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    84                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    85  0000                     
    86                           ; Version 2.20
    87                           ; Generated 05/05/2020 GMT
    88                           ; 
    89                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    90                           ; All rights reserved.
    91                           ; 
    92                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    93                           ; 
    94                           ; Redistribution and use in source and binary forms, with or without modification, are
    95                           ; permitted provided that the following conditions are met:
    96                           ; 
    97                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    98                           ;        conditions and the following disclaimer.
    99                           ; 
   100                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   101                           ;        of conditions and the following disclaimer in the documentation and/or other
   102                           ;        materials provided with the distribution.
   103                           ; 
   104                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   105                           ;        software without specific prior written permission.
   106                           ; 
   107                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   108                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   109                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   110                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   111                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   112                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   113                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   114                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   115                           ; 
   116                           ; 
   117                           ; Code-generator required, PIC18F45K22 Definitions
   118                           ; 
   119                           ; SFR Addresses
   120  0000                     
   121                           	psect	eeprom_data
   122  F00000  1E 0A 04 00 00 00 00 00 	db	30,10,4,0,0,0,0,0	;# 
   123  0000                     
   124                           	psect	idataBANK1
   125  005CB8                     __pidataBANK1:
   126                           	callstack 0
   127                           
   128                           ;initializer for _KD
   129  005CB8  0000               	dw	0
   130  005CBA  3F80               	dw	16256
   131                           
   132                           ;initializer for _KP
   133  005CBC  CCCD               	dw	52429
   134  005CBE  3E4C               	dw	15948
   135  0000                     _ANSELCbits	set	3898
   136  0000                     _ANSELBbits	set	3897
   137  0000                     _ANSELDbits	set	3899
   138  0000                     _ANSELEbits	set	3900
   139  0000                     _ANSELAbits	set	3896
   140  0000                     _T0CON	set	4053
   141  0000                     _TMR0L	set	4054
   142  0000                     _TMR0H	set	4055
   143  0000                     _INTCONbits	set	4082
   144  0000                     _CCPR2L	set	3943
   145  0000                     _CCPR1L	set	4030
   146  0000                     _PR2	set	4027
   147  0000                     _TMR2	set	4028
   148  0000                     _T2CONbits	set	4026
   149  0000                     _CCP2CON	set	3942
   150  0000                     _CCP1CON	set	4029
   151  0000                     _LATCbits	set	3979
   152  0000                     _LATDbits	set	3980
   153  0000                     _TRISCbits	set	3988
   154  0000                     _OSCTUNEbits	set	3995
   155  0000                     _OSCCONbits	set	4051
   156  0000                     _TRISBbits	set	3987
   157  0000                     _TRISDbits	set	3989
   158  0000                     _PORTDbits	set	3971
   159  0000                     _PORTBbits	set	3969
   160  0000                     _PIR2bits	set	4001
   161  0000                     _EECON2	set	4007
   162  0000                     _EEDATA	set	4008
   163  0000                     _EECON1bits	set	4006
   164  0000                     _EEADR	set	4009
   165  0000                     _ADCON2bits	set	4032
   166  0000                     _ADCON1	set	4033
   167  0000                     _ADCON0	set	4034
   168  0000                     _TRISEbits	set	3990
   169  0000                     _TRISAbits	set	3986
   170  0000                     _ADRESL	set	4035
   171  0000                     _ADRESH	set	4036
   172  0000                     _ADCON0bits	set	4034
   173                           
   174                           	psect	smallconst
   175  000600                     __psmallconst:
   176                           	callstack 0
   177  000600  00                 	db	0
   178  000601                     STR_4:
   179  000601  25                 	db	37
   180  000602  64                 	db	100	;'d'
   181  000603  20                 	db	32
   182  000604  20                 	db	32
   183  000605  20                 	db	32
   184  000606  20                 	db	32
   185  000607  20                 	db	32
   186  000608  20                 	db	32
   187  000609  20                 	db	32
   188  00060A  20                 	db	32
   189  00060B  20                 	db	32
   190  00060C  20                 	db	32
   191  00060D  20                 	db	32
   192  00060E  20                 	db	32
   193  00060F  20                 	db	32
   194  000610  20                 	db	32
   195  000611  20                 	db	32
   196  000612  00                 	db	0
   197  000613                     STR_13:
   198  000613  50                 	db	80	;'P'
   199  000614  49                 	db	73	;'I'
   200  000615  44                 	db	68	;'D'
   201  000616  20                 	db	32
   202  000617  50                 	db	80	;'P'
   203  000618  41                 	db	65	;'A'
   204  000619  52                 	db	82	;'R'
   205  00061A  41                 	db	65	;'A'
   206  00061B  4D                 	db	77	;'M'
   207  00061C  20                 	db	32
   208  00061D  20                 	db	32
   209  00061E  20                 	db	32
   210  00061F  20                 	db	32
   211  000620  20                 	db	32
   212  000621  20                 	db	32
   213  000622  20                 	db	32
   214  000623  00                 	db	0
   215  000624                     STR_7:
   216  000624  48                 	db	72	;'H'
   217  000625  49                 	db	73	;'I'
   218  000626  5A                 	db	90	;'Z'
   219  000627  20                 	db	32
   220  000628  4C                 	db	76	;'L'
   221  000629  69                 	db	105	;'i'
   222  00062A  4D                 	db	77	;'M'
   223  00062B  69                 	db	105	;'i'
   224  00062C  54                 	db	84	;'T'
   225  00062D  69                 	db	105	;'i'
   226  00062E  20                 	db	32
   227  00062F  20                 	db	32
   228  000630  20                 	db	32
   229  000631  20                 	db	32
   230  000632  20                 	db	32
   231  000633  20                 	db	32
   232  000634  00                 	db	0
   233  000635                     STR_1:
   234  000635  4B                 	db	75	;'K'
   235  000636  41                 	db	65	;'A'
   236  000637  4C                 	db	76	;'L'
   237  000638  41                 	db	65	;'A'
   238  000639  4E                 	db	78	;'N'
   239  00063A  20                 	db	32
   240  00063B  5A                 	db	90	;'Z'
   241  00063C  41                 	db	65	;'A'
   242  00063D  4D                 	db	77	;'M'
   243  00063E  41                 	db	65	;'A'
   244  00063F  4E                 	db	78	;'N'
   245  000640  20                 	db	32
   246  000641  20                 	db	32
   247  000642  20                 	db	32
   248  000643  20                 	db	32
   249  000644  20                 	db	32
   250  000645  00                 	db	0
   251  000646                     STR_9:
   252  000646  5A                 	db	90	;'Z'
   253  000647  41                 	db	65	;'A'
   254  000648  4D                 	db	77	;'M'
   255  000649  41                 	db	65	;'A'
   256  00064A  4E                 	db	78	;'N'
   257  00064B  20                 	db	32
   258  00064C  44                 	db	68	;'D'
   259  00064D  4F                 	db	79	;'O'
   260  00064E  4C                 	db	76	;'L'
   261  00064F  44                 	db	68	;'D'
   262  000650  55                 	db	85	;'U'
   263  000651  20                 	db	32
   264  000652  20                 	db	32
   265  000653  20                 	db	32
   266  000654  20                 	db	32
   267  000655  20                 	db	32
   268  000656  00                 	db	0
   269  000657                     STR_11:
   270  000657  48                 	db	72	;'H'
   271  000658  41                 	db	65	;'A'
   272  000659  52                 	db	82	;'R'
   273  00065A  45                 	db	69	;'E'
   274  00065B  4B                 	db	75	;'K'
   275  00065C  45                 	db	69	;'E'
   276  00065D  54                 	db	84	;'T'
   277  00065E  20                 	db	32
   278  00065F  44                 	db	68	;'D'
   279  000660  55                 	db	85	;'U'
   280  000661  52                 	db	82	;'R'
   281  000662  44                 	db	68	;'D'
   282  000663  55                 	db	85	;'U'
   283  000664  20                 	db	32
   284  000665  20                 	db	32
   285  000666  20                 	db	32
   286  000667  00                 	db	0
   287  000668                     STR_3:
   288  000668  48                 	db	72	;'H'
   289  000669  41                 	db	65	;'A'
   290  00066A  52                 	db	82	;'R'
   291  00066B  45                 	db	69	;'E'
   292  00066C  4B                 	db	75	;'K'
   293  00066D  54                 	db	84	;'T'
   294  00066E  20                 	db	32
   295  00066F  5A                 	db	90	;'Z'
   296  000670  41                 	db	65	;'A'
   297  000671  4D                 	db	77	;'M'
   298  000672  41                 	db	65	;'A'
   299  000673  4E                 	db	78	;'N'
   300  000674  49                 	db	73	;'I'
   301  000675  20                 	db	32
   302  000676  64                 	db	100	;'d'
   303  000677  6B                 	db	107	;'k'
   304  000678  00                 	db	0
   305  000679                     STR_5:
   306  000679  44                 	db	68	;'D'
   307  00067A  55                 	db	85	;'U'
   308  00067B  52                 	db	82	;'R'
   309  00067C  4D                 	db	77	;'M'
   310  00067D  41                 	db	65	;'A'
   311  00067E  20                 	db	32
   312  00067F  5A                 	db	90	;'Z'
   313  000680  41                 	db	65	;'A'
   314  000681  4D                 	db	77	;'M'
   315  000682  41                 	db	65	;'A'
   316  000683  4E                 	db	78	;'N'
   317  000684  49                 	db	73	;'I'
   318  000685  20                 	db	32
   319  000686  20                 	db	32
   320  000687  6D                 	db	109	;'m'
   321  000688  73                 	db	115	;'s'
   322  000689  00                 	db	0
   323  00068A                     STR_10:
   324  00068A  20                 	db	32
   325  00068B  20                 	db	32
   326  00068C  20                 	db	32
   327  00068D  20                 	db	32
   328  00068E  20                 	db	32
   329  00068F  20                 	db	32
   330  000690  25                 	db	37
   331  000691  64                 	db	100	;'d'
   332  000692  3A                 	db	58	;':'
   333  000693  25                 	db	37
   334  000694  64                 	db	100	;'d'
   335  000695  20                 	db	32
   336  000696  20                 	db	32
   337  000697  20                 	db	32
   338  000698  20                 	db	32
   339  000699  00                 	db	0
   340  00069A                     STR_2:
   341  00069A  20                 	db	32
   342  00069B  20                 	db	32
   343  00069C  20                 	db	32
   344  00069D  20                 	db	32
   345  00069E  20                 	db	32
   346  00069F  20                 	db	32
   347  0006A0  25                 	db	37
   348  0006A1  64                 	db	100	;'d'
   349  0006A2  3A                 	db	58	;':'
   350  0006A3  25                 	db	37
   351  0006A4  64                 	db	100	;'d'
   352  0006A5  20                 	db	32
   353  0006A6  20                 	db	32
   354  0006A7  20                 	db	32
   355  0006A8  00                 	db	0
   356  0006A9                     STR_14:
   357  0006A9  4B                 	db	75	;'K'
   358  0006AA  70                 	db	112	;'p'
   359  0006AB  3A                 	db	58	;':'
   360  0006AC  25                 	db	37
   361  0006AD  35                 	db	53	;'5'
   362  0006AE  2E                 	db	46
   363  0006AF  31                 	db	49	;'1'
   364  0006B0  66                 	db	102	;'f'
   365  0006B1  20                 	db	32
   366  0006B2  20                 	db	32
   367  0006B3  20                 	db	32
   368  0006B4  20                 	db	32
   369  0006B5  20                 	db	32
   370  0006B6  00                 	db	0
   371  0006B7                     STR_16:
   372  0006B7  4B                 	db	75	;'K'
   373  0006B8  64                 	db	100	;'d'
   374  0006B9  3A                 	db	58	;':'
   375  0006BA  25                 	db	37
   376  0006BB  35                 	db	53	;'5'
   377  0006BC  2E                 	db	46
   378  0006BD  31                 	db	49	;'1'
   379  0006BE  66                 	db	102	;'f'
   380  0006BF  20                 	db	32
   381  0006C0  20                 	db	32
   382  0006C1  20                 	db	32
   383  0006C2  20                 	db	32
   384  0006C3  00                 	db	0
   385  0006C4                     STR_17:
   386  0006C4  49                 	db	73	;'I'
   387  0006C5  4E                 	db	78	;'N'
   388  0006C6  46                 	db	70	;'F'
   389  0006C7  00                 	db	0
   390  0006C8                     STR_21:
   391  0006C8  4E                 	db	78	;'N'
   392  0006C9  41                 	db	65	;'A'
   393  0006CA  4E                 	db	78	;'N'
   394  0006CB  00                 	db	0
   395  0006CC                     STR_18:
   396  0006CC  69                 	db	105	;'i'
   397  0006CD  6E                 	db	110	;'n'
   398  0006CE  66                 	db	102	;'f'
   399  0006CF  00                 	db	0
   400  0006D0                     STR_22:
   401  0006D0  6E                 	db	110	;'n'
   402  0006D1  61                 	db	97	;'a'
   403  0006D2  6E                 	db	110	;'n'
   404  0006D3  00                 	db	0
   405  0006D4                     STR_25:
   406  0006D4  6C                 	db	108	;'l'
   407  0006D5  66                 	db	102	;'f'
   408  0006D6  00                 	db	0
   409  0006D7  00                 	db	0	; dummy byte at the end
   410  0000                     
   411                           ; #config settings
   412                           
   413                           	psect	cinit
   414  0057A8                     __pcinit:
   415                           	callstack 0
   416  0057A8                     start_initialization:
   417                           	callstack 0
   418  0057A8                     __initialization:
   419                           	callstack 0
   420                           
   421                           ; Initialize objects allocated to BANK1 (8 bytes)
   422                           ; load TBLPTR registers with __pidataBANK1
   423  0057A8  0EB8               	movlw	low __pidataBANK1
   424  0057AA  6EF6               	movwf	tblptrl,c
   425  0057AC  0E5C               	movlw	high __pidataBANK1
   426  0057AE  6EF7               	movwf	tblptrh,c
   427  0057B0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   428  0057B2  6EF8               	movwf	tblptru,c
   429  0057B4  EE01  F0EF         	lfsr	0,__pdataBANK1
   430  0057B8  EE10 F008          	lfsr	1,8
   431  0057BC                     copy_data0:
   432  0057BC  0009               	tblrd		*+
   433  0057BE  CFF5 FFEE          	movff	tablat,postinc0
   434  0057C2  50E5               	movf	postdec1,w,c
   435  0057C4  50E1               	movf	fsr1l,w,c
   436  0057C6  E1FA               	bnz	copy_data0
   437                           
   438                           ; Clear objects allocated to BANK2 (32 bytes)
   439  0057C8  EE02  F000         	lfsr	0,__pbssBANK2
   440  0057CC  0E20               	movlw	32
   441  0057CE                     clear_0:
   442  0057CE  6AEE               	clrf	postinc0,c
   443  0057D0  06E8               	decf	wreg,f,c
   444  0057D2  E1FD               	bnz	clear_0
   445                           
   446                           ; Clear objects allocated to BANK1 (239 bytes)
   447  0057D4  EE01  F000         	lfsr	0,__pbssBANK1
   448  0057D8  0EEF               	movlw	239
   449  0057DA                     clear_1:
   450  0057DA  6AEE               	clrf	postinc0,c
   451  0057DC  06E8               	decf	wreg,f,c
   452  0057DE  E1FD               	bnz	clear_1
   453                           
   454                           ; Clear objects allocated to BANK0 (13 bytes)
   455  0057E0  EE00  F0F3         	lfsr	0,__pbssBANK0
   456  0057E4  0E0D               	movlw	13
   457  0057E6                     clear_2:
   458  0057E6  6AEE               	clrf	postinc0,c
   459  0057E8  06E8               	decf	wreg,f,c
   460  0057EA  E1FD               	bnz	clear_2
   461  0057EC                     end_of_initialization:
   462                           	callstack 0
   463  0057EC                     __end_of__initialization:
   464                           	callstack 0
   465  0057EC  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   466  0057EE  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   467  0057F0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   468  0057F2  6EF8               	movwf	tblptru,c
   469  0057F4  0100               	movlb	0
   470  0057F6  EF5F  F026         	goto	_main	;jump to C main() function
   471                           
   472                           	psect	bssBANK0
   473  0000F3                     __pbssBANK0:
   474                           	callstack 0
   475  0000F3                     _timer_value:
   476                           	callstack 0
   477  0000F3                     	ds	10
   478  0000FD                     _menu_flags:
   479                           	callstack 0
   480  0000FD                     	ds	1
   481  0000FE                     _button_bounce_controller:
   482                           	callstack 0
   483  0000FE                     	ds	1
   484  0000FF                     _pauseIsClick:
   485                           	callstack 0
   486  0000FF                     	ds	1
   487                           
   488                           	psect	bssBANK1
   489  000100                     __pbssBANK1:
   490                           	callstack 0
   491  000100                     _convert_data:
   492                           	callstack 0
   493  000100                     	ds	48
   494  000130                     _procces_data:
   495                           	callstack 0
   496  000130                     	ds	32
   497  000150                     _controller:
   498                           	callstack 0
   499  000150                     	ds	19
   500  000163                     _adc_raw_data:
   501                           	callstack 0
   502  000163                     	ds	16
   503  000173                     _driver_limit:
   504                           	callstack 0
   505  000173                     	ds	12
   506  00017F                     floorf@F524:
   507                           	callstack 0
   508  00017F                     	ds	4
   509  000183                     ___fpclassifyf@F463:
   510                           	callstack 0
   511  000183                     	ds	4
   512  000187                     fabsf@F463:
   513                           	callstack 0
   514  000187                     	ds	4
   515  00018B                     _counter:
   516                           	callstack 0
   517  00018B                     	ds	4
   518  00018F                     _menu_value:
   519                           	callstack 0
   520  00018F                     	ds	3
   521  000192                     _nout:
   522                           	callstack 0
   523  000192                     	ds	2
   524  000194                     _width:
   525                           	callstack 0
   526  000194                     	ds	2
   527  000196                     _prec:
   528                           	callstack 0
   529  000196                     	ds	2
   530  000198                     _flags:
   531                           	callstack 0
   532  000198                     	ds	2
   533  00019A                     stateMachine@secretMenuCounter:
   534                           	callstack 0
   535  00019A                     	ds	1
   536  00019B                     _menu_selected:
   537                           	callstack 0
   538  00019B                     	ds	1
   539  00019C                     _stopIsClick:
   540                           	callstack 0
   541  00019C                     	ds	1
   542  00019D                     _startIsClick:
   543                           	callstack 0
   544  00019D                     	ds	1
   545  00019E                     _timer_counter_flag:
   546                           	callstack 0
   547  00019E                     	ds	1
   548  00019F                     _dbuf:
   549                           	callstack 0
   550  00019F                     	ds	80
   551                           
   552                           	psect	dataBANK1
   553  0001EF                     __pdataBANK1:
   554                           	callstack 0
   555  0001EF                     _KD:
   556                           	callstack 0
   557  0001EF                     	ds	4
   558  0001F3                     _KP:
   559                           	callstack 0
   560  0001F3                     	ds	4
   561                           
   562                           	psect	bssBANK2
   563  000200                     __pbssBANK2:
   564                           	callstack 0
   565  000200                     	ds	16
   566  000210                     _textCursor2:
   567                           	callstack 0
   568  000210                     	ds	16
   569                           
   570                           	psect	cstackBANK0
   571  000060                     __pcstackBANK0:
   572                           	callstack 0
   573  000060                     floorf@m:
   574                           	callstack 0
   575                           
   576                           ; 4 bytes @ 0x0
   577  000060                     	ds	4
   578  000064                     floorf@e:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0x4
   582  000064                     	ds	2
   583  000066                     floorf@u:
   584                           	callstack 0
   585                           
   586                           ; 4 bytes @ 0x6
   587  000066                     	ds	4
   588  00006A                     ??_efgtoa:
   589                           
   590                           ; 1 bytes @ 0xA
   591  00006A                     	ds	5
   592  00006F                     efgtoa@ou:
   593                           	callstack 0
   594                           
   595                           ; 4 bytes @ 0xF
   596  00006F                     	ds	4
   597  000073                     _efgtoa$2505:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x13
   601  000073                     	ds	2
   602  000075                     _efgtoa$2506:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x15
   606  000075                     	ds	2
   607  000077                     _efgtoa$2510:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x17
   611  000077                     	ds	2
   612  000079                     _efgtoa$2514:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x19
   616  000079                     	ds	2
   617  00007B                     _efgtoa$2515:
   618                           	callstack 0
   619                           
   620                           ; 2 bytes @ 0x1B
   621  00007B                     	ds	2
   622  00007D                     _efgtoa$2516:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x1D
   626  00007D                     	ds	2
   627  00007F                     efgtoa@t:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x1F
   631  00007F                     	ds	2
   632  000081                     efgtoa@pp:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x21
   636  000081                     	ds	2
   637  000083                     efgtoa@m:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x23
   641  000083                     	ds	2
   642  000085                     efgtoa@ne:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x25
   646  000085                     	ds	2
   647  000087                     efgtoa@d:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x27
   651  000087                     	ds	2
   652  000089                     efgtoa@sign:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x29
   656  000089                     	ds	2
   657  00008B                     efgtoa@p:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x2B
   661  00008B                     	ds	2
   662  00008D                     efgtoa@nmode:
   663                           	callstack 0
   664                           
   665                           ; 1 bytes @ 0x2D
   666  00008D                     	ds	1
   667  00008E                     efgtoa@w:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0x2E
   671  00008E                     	ds	2
   672  000090                     efgtoa@mode:
   673                           	callstack 0
   674                           
   675                           ; 1 bytes @ 0x30
   676  000090                     	ds	1
   677  000091                     efgtoa@h:
   678                           	callstack 0
   679                           
   680                           ; 4 bytes @ 0x31
   681  000091                     	ds	4
   682  000095                     efgtoa@l:
   683                           	callstack 0
   684                           
   685                           ; 4 bytes @ 0x35
   686  000095                     	ds	4
   687  000099                     efgtoa@i:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x39
   691  000099                     	ds	2
   692  00009B                     efgtoa@g:
   693                           	callstack 0
   694                           
   695                           ; 4 bytes @ 0x3B
   696  00009B                     	ds	4
   697  00009F                     efgtoa@e:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x3F
   701  00009F                     	ds	2
   702  0000A1                     efgtoa@n:
   703                           	callstack 0
   704                           
   705                           ; 2 bytes @ 0x41
   706  0000A1                     	ds	2
   707  0000A3                     efgtoa@u:
   708                           	callstack 0
   709                           
   710                           ; 4 bytes @ 0x43
   711  0000A3                     	ds	4
   712  0000A7                     ?_vfpfcnvrt:
   713                           	callstack 0
   714  0000A7                     vfpfcnvrt@fp:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0x47
   718  0000A7                     	ds	2
   719  0000A9                     vfpfcnvrt@fmt:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x49
   723  0000A9                     	ds	2
   724  0000AB                     vfpfcnvrt@ap:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0x4B
   728  0000AB                     	ds	2
   729  0000AD                     ??_vfpfcnvrt:
   730                           
   731                           ; 1 bytes @ 0x4D
   732  0000AD                     	ds	4
   733  0000B1                     vfpfcnvrt@ll:
   734                           	callstack 0
   735                           
   736                           ; 8 bytes @ 0x51
   737  0000B1                     	ds	8
   738  0000B9                     _vfpfcnvrt$2530:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0x59
   742  0000B9                     	ds	2
   743  0000BB                     _vfpfcnvrt$2531:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0x5B
   747  0000BB                     	ds	2
   748  0000BD                     _vfpfcnvrt$2536:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x5D
   752  0000BD                     	ds	2
   753  0000BF                     vfpfcnvrt@f:
   754                           	callstack 0
   755                           
   756                           ; 4 bytes @ 0x5F
   757  0000BF                     	ds	4
   758  0000C3                     vfpfcnvrt@ct:
   759                           	callstack 0
   760                           
   761                           ; 3 bytes @ 0x63
   762  0000C3                     	ds	3
   763  0000C6                     vfpfcnvrt@c:
   764                           	callstack 0
   765                           
   766                           ; 1 bytes @ 0x66
   767  0000C6                     	ds	1
   768  0000C7                     ?_vfprintf:
   769                           	callstack 0
   770  0000C7                     vfprintf@fp:
   771                           	callstack 0
   772                           
   773                           ; 2 bytes @ 0x67
   774  0000C7                     	ds	2
   775  0000C9                     vfprintf@fmt:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0x69
   779  0000C9                     	ds	2
   780  0000CB                     vfprintf@ap:
   781                           	callstack 0
   782                           
   783                           ; 2 bytes @ 0x6B
   784  0000CB                     	ds	2
   785  0000CD                     vfprintf@cfmt:
   786                           	callstack 0
   787                           
   788                           ; 2 bytes @ 0x6D
   789  0000CD                     	ds	2
   790  0000CF                     ?_sprintf:
   791                           	callstack 0
   792  0000CF                     sprintf@s:
   793                           	callstack 0
   794                           
   795                           ; 2 bytes @ 0x6F
   796  0000CF                     	ds	2
   797  0000D1                     sprintf@fmt:
   798                           	callstack 0
   799                           
   800                           ; 2 bytes @ 0x71
   801  0000D1                     	ds	8
   802  0000D9                     sprintf@ap:
   803                           	callstack 0
   804                           
   805                           ; 2 bytes @ 0x79
   806  0000D9                     	ds	2
   807  0000DB                     sprintf@f:
   808                           	callstack 0
   809                           
   810                           ; 6 bytes @ 0x7B
   811  0000DB                     	ds	6
   812  0000E1                     ??_stateMachine:
   813                           
   814                           ; 1 bytes @ 0x81
   815  0000E1                     	ds	2
   816  0000E3                     stateMachine@textCursor2:
   817                           	callstack 0
   818                           
   819                           ; 16 bytes @ 0x83
   820  0000E3                     	ds	16
   821                           
   822                           	psect	cstackCOMRAM
   823  000001                     __pcstackCOMRAM:
   824                           	callstack 0
   825  000001                     ?_strlen:
   826                           	callstack 0
   827  000001                     ?___fpclassifyf:
   828                           	callstack 0
   829  000001                     ?_isupper:
   830                           	callstack 0
   831  000001                     ?_isdigit:
   832                           	callstack 0
   833  000001                     ?_strncmp:
   834                           	callstack 0
   835  000001                     ?_isspace:
   836                           	callstack 0
   837  000001                     ?_readAdcValue:
   838                           	callstack 0
   839  000001                     ?___wmul:
   840                           	callstack 0
   841  000001                     ?___awdiv:
   842                           	callstack 0
   843  000001                     ?___awmod:
   844                           	callstack 0
   845  000001                     ?___lmul:
   846                           	callstack 0
   847  000001                     ?___lldiv:
   848                           	callstack 0
   849  000001                     ?___flneg:
   850                           	callstack 0
   851  000001                     ?___aodiv:
   852                           	callstack 0
   853  000001                     ?___aomod:
   854                           	callstack 0
   855  000001                     eepromRead@address:
   856                           	callstack 0
   857  000001                     eepromWrite@data:
   858                           	callstack 0
   859  000001                     Lcd_Port@a:
   860                           	callstack 0
   861  000001                     ___wmul@multiplier:
   862                           	callstack 0
   863  000001                     ___awdiv@dividend:
   864                           	callstack 0
   865  000001                     ___awmod@dividend:
   866                           	callstack 0
   867  000001                     isdigit@c:
   868                           	callstack 0
   869  000001                     isspace@c:
   870                           	callstack 0
   871  000001                     isupper@c:
   872                           	callstack 0
   873  000001                     fputc@c:
   874                           	callstack 0
   875  000001                     strcpy@dest:
   876                           	callstack 0
   877  000001                     strlen@s:
   878                           	callstack 0
   879  000001                     strncmp@_l:
   880                           	callstack 0
   881  000001                     ___lmul@multiplier:
   882                           	callstack 0
   883  000001                     ___lldiv@dividend:
   884                           	callstack 0
   885  000001                     ___fleq@ff1:
   886                           	callstack 0
   887  000001                     ___flneg@f1:
   888                           	callstack 0
   889  000001                     ___fpclassifyf@x:
   890                           	callstack 0
   891  000001                     ___aodiv@dividend:
   892                           	callstack 0
   893  000001                     ___aomod@dividend:
   894                           	callstack 0
   895                           
   896                           ; 8 bytes @ 0x0
   897  000001                     	ds	1
   898  000002                     ??_system_init:
   899  000002                     ??_Lcd_Cmd:
   900  000002                     eepromWrite@address:
   901                           	callstack 0
   902  000002                     Lcd_Write_Char@temp:
   903                           	callstack 0
   904                           
   905                           ; 1 bytes @ 0x1
   906  000002                     	ds	1
   907  000003                     ??_isupper:
   908  000003                     ??_isdigit:
   909  000003                     ??_isspace:
   910  000003                     ??_readAdcValue:
   911  000003                     Lcd_Cmd@a:
   912                           	callstack 0
   913  000003                     Lcd_Write_Char@y:
   914                           	callstack 0
   915  000003                     ___wmul@multiplicand:
   916                           	callstack 0
   917  000003                     ___awdiv@divisor:
   918                           	callstack 0
   919  000003                     ___awmod@divisor:
   920                           	callstack 0
   921  000003                     fputc@fp:
   922                           	callstack 0
   923  000003                     strcpy@src:
   924                           	callstack 0
   925  000003                     strlen@a:
   926                           	callstack 0
   927  000003                     strncmp@_r:
   928                           	callstack 0
   929                           
   930                           ; 2 bytes @ 0x2
   931  000003                     	ds	1
   932  000004                     ??_lcd_init:
   933  000004                     Lcd_Set_Cursor@b:
   934                           	callstack 0
   935  000004                     Lcd_Write_Char@a:
   936                           	callstack 0
   937                           
   938                           ; 1 bytes @ 0x3
   939  000004                     	ds	1
   940  000005                     ??_fputc:
   941  000005                     ??___fpclassifyf:
   942  000005                     ??_strcpy:
   943  000005                     readAdcValue@adcChannel:
   944                           	callstack 0
   945  000005                     Lcd_Set_Cursor@a:
   946                           	callstack 0
   947  000005                     ___awdiv@counter:
   948                           	callstack 0
   949  000005                     ___awmod@counter:
   950                           	callstack 0
   951  000005                     Lcd_Write_String@a:
   952                           	callstack 0
   953  000005                     ___wmul@product:
   954                           	callstack 0
   955  000005                     strncmp@n:
   956                           	callstack 0
   957  000005                     ___lmul@multiplicand:
   958                           	callstack 0
   959  000005                     ___lldiv@divisor:
   960                           	callstack 0
   961  000005                     ___fleq@ff2:
   962                           	callstack 0
   963                           
   964                           ; 4 bytes @ 0x4
   965  000005                     	ds	1
   966  000006                     Lcd_Set_Cursor@z:
   967                           	callstack 0
   968  000006                     ___awdiv@sign:
   969                           	callstack 0
   970  000006                     ___awmod@sign:
   971                           	callstack 0
   972  000006                     readAdcValue@adcValue:
   973                           	callstack 0
   974                           
   975                           ; 2 bytes @ 0x5
   976  000006                     	ds	1
   977  000007                     ??_strncmp:
   978  000007                     ??_Lcd_Write_String:
   979  000007                     ?_tolower:
   980                           	callstack 0
   981  000007                     Lcd_Set_Cursor@y:
   982                           	callstack 0
   983  000007                     _isspace$2603:
   984                           	callstack 0
   985  000007                     ___awdiv@quotient:
   986                           	callstack 0
   987  000007                     strcpy@s:
   988                           	callstack 0
   989  000007                     tolower@c:
   990                           	callstack 0
   991                           
   992                           ; 2 bytes @ 0x6
   993  000007                     	ds	1
   994  000008                     ?_atoi:
   995                           	callstack 0
   996  000008                     Lcd_Set_Cursor@temp:
   997                           	callstack 0
   998  000008                     atoi@s:
   999                           	callstack 0
  1000  000008                     strncmp@l:
  1001                           	callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x7
  1004  000008                     	ds	1
  1005  000009                     ??_tolower:
  1006  000009                     ??___fleq:
  1007  000009                     Lcd_Write_String@i:
  1008                           	callstack 0
  1009  000009                     ___fpclassifyf@e:
  1010                           	callstack 0
  1011  000009                     strcpy@d:
  1012                           	callstack 0
  1013  000009                     ___lmul@product:
  1014                           	callstack 0
  1015  000009                     ___lldiv@quotient:
  1016                           	callstack 0
  1017  000009                     ___aodiv@divisor:
  1018                           	callstack 0
  1019  000009                     ___aomod@divisor:
  1020                           	callstack 0
  1021                           
  1022                           ; 8 bytes @ 0x8
  1023  000009                     	ds	1
  1024  00000A                     ??_atoi:
  1025  00000A                     fputs@s:
  1026                           	callstack 0
  1027  00000A                     strncmp@r:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x9
  1031  00000A                     	ds	1
  1032  00000B                     ___fpclassifyf@u:
  1033                           	callstack 0
  1034                           
  1035                           ; 4 bytes @ 0xA
  1036  00000B                     	ds	1
  1037  00000C                     fputs@fp:
  1038                           	callstack 0
  1039                           
  1040                           ; 2 bytes @ 0xB
  1041  00000C                     	ds	1
  1042  00000D                     ___lldiv@counter:
  1043                           	callstack 0
  1044  00000D                     _tolower$2667:
  1045                           	callstack 0
  1046                           
  1047                           ; 2 bytes @ 0xC
  1048  00000D                     	ds	1
  1049  00000E                     ?___xxtofl:
  1050                           	callstack 0
  1051  00000E                     fputs@c:
  1052                           	callstack 0
  1053  00000E                     atoi@neg:
  1054                           	callstack 0
  1055  00000E                     ___xxtofl@val:
  1056                           	callstack 0
  1057                           
  1058                           ; 4 bytes @ 0xD
  1059  00000E                     	ds	1
  1060  00000F                     fputs@i:
  1061                           	callstack 0
  1062                           
  1063                           ; 2 bytes @ 0xE
  1064  00000F                     	ds	1
  1065  000010                     _atoi$2572:
  1066                           	callstack 0
  1067                           
  1068                           ; 2 bytes @ 0xF
  1069  000010                     	ds	1
  1070  000011                     ?_pad:
  1071                           	callstack 0
  1072  000011                     ___aodiv@counter:
  1073                           	callstack 0
  1074  000011                     ___aomod@counter:
  1075                           	callstack 0
  1076  000011                     pad@fp:
  1077                           	callstack 0
  1078                           
  1079                           ; 2 bytes @ 0x10
  1080  000011                     	ds	1
  1081  000012                     ??___xxtofl:
  1082  000012                     ___aodiv@sign:
  1083                           	callstack 0
  1084  000012                     ___aomod@sign:
  1085                           	callstack 0
  1086  000012                     _atoi$2574:
  1087                           	callstack 0
  1088                           
  1089                           ; 2 bytes @ 0x11
  1090  000012                     	ds	1
  1091  000013                     ?_abs:
  1092                           	callstack 0
  1093  000013                     pad@buf:
  1094                           	callstack 0
  1095  000013                     abs@a:
  1096                           	callstack 0
  1097  000013                     ___aodiv@quotient:
  1098                           	callstack 0
  1099                           
  1100                           ; 8 bytes @ 0x12
  1101  000013                     	ds	1
  1102  000014                     _atoi$2573:
  1103                           	callstack 0
  1104                           
  1105                           ; 1 bytes @ 0x13
  1106  000014                     	ds	1
  1107  000015                     ??_abs:
  1108  000015                     pad@p:
  1109                           	callstack 0
  1110  000015                     atoi@n:
  1111                           	callstack 0
  1112                           
  1113                           ; 2 bytes @ 0x14
  1114  000015                     	ds	1
  1115  000016                     ___xxtofl@sign:
  1116                           	callstack 0
  1117                           
  1118                           ; 1 bytes @ 0x15
  1119  000016                     	ds	1
  1120  000017                     ??_pad:
  1121  000017                     ___xxtofl@exp:
  1122                           	callstack 0
  1123                           
  1124                           ; 1 bytes @ 0x16
  1125  000017                     	ds	1
  1126  000018                     pad@i:
  1127                           	callstack 0
  1128  000018                     ___xxtofl@arg:
  1129                           	callstack 0
  1130                           
  1131                           ; 4 bytes @ 0x17
  1132  000018                     	ds	2
  1133  00001A                     pad@w:
  1134                           	callstack 0
  1135                           
  1136                           ; 2 bytes @ 0x19
  1137  00001A                     	ds	2
  1138  00001C                     ??_calculatedAverageValue:
  1139  00001C                     ?_dtoa:
  1140                           	callstack 0
  1141  00001C                     ?_fabsf:
  1142                           	callstack 0
  1143  00001C                     ?___flmul:
  1144                           	callstack 0
  1145  00001C                     dtoa@fp:
  1146                           	callstack 0
  1147  00001C                     ___flmul@b:
  1148                           	callstack 0
  1149  00001C                     fabsf@x:
  1150                           	callstack 0
  1151                           
  1152                           ; 4 bytes @ 0x1B
  1153  00001C                     	ds	2
  1154  00001E                     dtoa@d:
  1155                           	callstack 0
  1156                           
  1157                           ; 8 bytes @ 0x1D
  1158  00001E                     	ds	2
  1159  000020                     ___flmul@a:
  1160                           	callstack 0
  1161  000020                     fabsf@u:
  1162                           	callstack 0
  1163                           
  1164                           ; 4 bytes @ 0x1F
  1165  000020                     	ds	4
  1166  000024                     ??___flmul:
  1167                           
  1168                           ; 1 bytes @ 0x23
  1169  000024                     	ds	2
  1170  000026                     ??_dtoa:
  1171                           
  1172                           ; 1 bytes @ 0x25
  1173  000026                     	ds	2
  1174  000028                     ___flmul@sign:
  1175                           	callstack 0
  1176                           
  1177                           ; 1 bytes @ 0x27
  1178  000028                     	ds	1
  1179  000029                     ___flmul@grs:
  1180                           	callstack 0
  1181                           
  1182                           ; 4 bytes @ 0x28
  1183  000029                     	ds	4
  1184  00002D                     ___flmul@aexp:
  1185                           	callstack 0
  1186                           
  1187                           ; 1 bytes @ 0x2C
  1188  00002D                     	ds	1
  1189  00002E                     ___flmul@bexp:
  1190                           	callstack 0
  1191  00002E                     _dtoa$2481:
  1192                           	callstack 0
  1193                           
  1194                           ; 2 bytes @ 0x2D
  1195  00002E                     	ds	1
  1196  00002F                     ___flmul@prod:
  1197                           	callstack 0
  1198                           
  1199                           ; 4 bytes @ 0x2E
  1200  00002F                     	ds	1
  1201  000030                     dtoa@p:
  1202                           	callstack 0
  1203                           
  1204                           ; 2 bytes @ 0x2F
  1205  000030                     	ds	2
  1206  000032                     dtoa@w:
  1207                           	callstack 0
  1208                           
  1209                           ; 2 bytes @ 0x31
  1210  000032                     	ds	1
  1211  000033                     ___flmul@temp:
  1212                           	callstack 0
  1213                           
  1214                           ; 2 bytes @ 0x32
  1215  000033                     	ds	1
  1216  000034                     dtoa@s:
  1217                           	callstack 0
  1218                           
  1219                           ; 2 bytes @ 0x33
  1220  000034                     	ds	1
  1221  000035                     ?___fladd:
  1222                           	callstack 0
  1223  000035                     ?___fldiv:
  1224                           	callstack 0
  1225  000035                     ___flge@ff1:
  1226                           	callstack 0
  1227  000035                     ___fladd@b:
  1228                           	callstack 0
  1229  000035                     ___fldiv@b:
  1230                           	callstack 0
  1231                           
  1232                           ; 4 bytes @ 0x34
  1233  000035                     	ds	1
  1234  000036                     dtoa@n:
  1235                           	callstack 0
  1236                           
  1237                           ; 8 bytes @ 0x35
  1238  000036                     	ds	3
  1239  000039                     ___flge@ff2:
  1240                           	callstack 0
  1241  000039                     ___fladd@a:
  1242                           	callstack 0
  1243  000039                     ___fldiv@a:
  1244                           	callstack 0
  1245                           
  1246                           ; 4 bytes @ 0x38
  1247  000039                     	ds	4
  1248  00003D                     ??___fladd:
  1249  00003D                     ??___fldiv:
  1250  00003D                     ??___flge:
  1251                           
  1252                           ; 1 bytes @ 0x3C
  1253  00003D                     	ds	1
  1254  00003E                     dtoa@i:
  1255                           	callstack 0
  1256                           
  1257                           ; 2 bytes @ 0x3D
  1258  00003E                     	ds	3
  1259  000041                     ___fladd@signs:
  1260                           	callstack 0
  1261  000041                     ___fldiv@rem:
  1262                           	callstack 0
  1263                           
  1264                           ; 4 bytes @ 0x40
  1265  000041                     	ds	1
  1266  000042                     ___fladd@aexp:
  1267                           	callstack 0
  1268                           
  1269                           ; 1 bytes @ 0x41
  1270  000042                     	ds	1
  1271  000043                     ___fladd@bexp:
  1272                           	callstack 0
  1273                           
  1274                           ; 1 bytes @ 0x42
  1275  000043                     	ds	1
  1276  000044                     ___fladd@grs:
  1277                           	callstack 0
  1278                           
  1279                           ; 1 bytes @ 0x43
  1280  000044                     	ds	1
  1281  000045                     ?___flsub:
  1282                           	callstack 0
  1283  000045                     ___fldiv@sign:
  1284                           	callstack 0
  1285  000045                     ___flsub@b:
  1286                           	callstack 0
  1287                           
  1288                           ; 4 bytes @ 0x44
  1289  000045                     	ds	1
  1290  000046                     ___fldiv@new_exp:
  1291                           	callstack 0
  1292                           
  1293                           ; 2 bytes @ 0x45
  1294  000046                     	ds	2
  1295  000048                     ___fldiv@grs:
  1296                           	callstack 0
  1297                           
  1298                           ; 4 bytes @ 0x47
  1299  000048                     	ds	1
  1300  000049                     ___flsub@a:
  1301                           	callstack 0
  1302                           
  1303                           ; 4 bytes @ 0x48
  1304  000049                     	ds	3
  1305  00004C                     ___fldiv@bexp:
  1306                           	callstack 0
  1307                           
  1308                           ; 1 bytes @ 0x4B
  1309  00004C                     	ds	1
  1310  00004D                     ___fldiv@aexp:
  1311                           	callstack 0
  1312                           
  1313                           ; 1 bytes @ 0x4C
  1314  00004D                     	ds	1
  1315  00004E                     ?_floorf:
  1316                           	callstack 0
  1317  00004E                     ?___fltol:
  1318                           	callstack 0
  1319  00004E                     ___fltol@f1:
  1320                           	callstack 0
  1321  00004E                     floorf@x:
  1322                           	callstack 0
  1323                           
  1324                           ; 4 bytes @ 0x4D
  1325  00004E                     	ds	4
  1326  000052                     ??_floorf:
  1327  000052                     ??___fltol:
  1328                           
  1329                           ; 1 bytes @ 0x51
  1330  000052                     	ds	4
  1331  000056                     ___fltol@sign1:
  1332                           	callstack 0
  1333                           
  1334                           ; 1 bytes @ 0x55
  1335  000056                     	ds	1
  1336  000057                     ___fltol@exp1:
  1337                           	callstack 0
  1338                           
  1339                           ; 1 bytes @ 0x56
  1340  000057                     	ds	1
  1341  000058                     ??_scanAdcConversion:
  1342  000058                     ?_efgtoa:
  1343                           	callstack 0
  1344  000058                     PWM1_setDC@dutycycle:
  1345                           	callstack 0
  1346  000058                     PWM2_setDC@dutycycle:
  1347                           	callstack 0
  1348  000058                     efgtoa@fp:
  1349                           	callstack 0
  1350  000058                     speedControl@position:
  1351                           	callstack 0
  1352                           
  1353                           ; 4 bytes @ 0x57
  1354  000058                     	ds	2
  1355  00005A                     ??_PWM1_setDC:
  1356  00005A                     ??_PWM2_setDC:
  1357  00005A                     efgtoa@f:
  1358                           	callstack 0
  1359                           
  1360                           ; 4 bytes @ 0x59
  1361  00005A                     	ds	2
  1362  00005C                     ??_speedControl:
  1363  00005C                     PWM1_setDC@duty:
  1364                           	callstack 0
  1365  00005C                     PWM2_setDC@duty:
  1366                           	callstack 0
  1367                           
  1368                           ; 2 bytes @ 0x5B
  1369  00005C                     	ds	2
  1370  00005E                     efgtoa@c:
  1371                           	callstack 0
  1372                           
  1373                           ; 1 bytes @ 0x5D
  1374  00005E                     	ds	1
  1375  00005F                     
  1376                           ; 1 bytes @ 0x5E
  1377 ;;
  1378 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1379 ;;
  1380 ;; *************** function _main *****************
  1381 ;; Defined at:
  1382 ;;		line 43 in file "fs_main.c"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;		None
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;		None
  1387 ;; Return value:  Size  Location     Type
  1388 ;;                  1    wreg      void 
  1389 ;; Registers used:
  1390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1396 ;;      Params:         0       0       0       0       0       0       0
  1397 ;;      Locals:         0       0       0       0       0       0       0
  1398 ;;      Temps:          0       0       0       0       0       0       0
  1399 ;;      Totals:         0       0       0       0       0       0       0
  1400 ;;Total ram usage:        0 bytes
  1401 ;; Hardware stack levels required when called:   11
  1402 ;; This function calls:
  1403 ;;		_Lcd_Clear
  1404 ;;		_PWM1_setDC
  1405 ;;		_PWM2_setDC
  1406 ;;		_PWM_Init
  1407 ;;		_adcInit
  1408 ;;		_lcd_init
  1409 ;;		_mcu_init
  1410 ;;		_menuControl
  1411 ;;		_menuInitialize
  1412 ;;		_system_init
  1413 ;;		_timer_0_init
  1414 ;; This function is called by:
  1415 ;;		Startup code after reset
  1416 ;; This function uses a non-reentrant model
  1417 ;;
  1418                           
  1419                           	psect	text0
  1420  004CBE                     __ptext0:
  1421                           	callstack 0
  1422  004CBE                     _main:
  1423                           	callstack 20
  1424  004CBE                     
  1425                           ;fs_main.c: 45:     mcu_init();
  1426  004CBE  EC41  F02E         	call	_mcu_init	;wreg free
  1427  004CC2                     
  1428                           ;fs_main.c: 46:     menuInitialize();
  1429  004CC2  ECE8  F02D         	call	_menuInitialize	;wreg free
  1430  004CC6                     
  1431                           ;fs_main.c: 48:     adcInit();
  1432  004CC6  ECD5  F02C         	call	_adcInit	;wreg free
  1433  004CCA                     
  1434                           ;fs_main.c: 50:     timer_0_init();
  1435  004CCA  EC4C  F02E         	call	_timer_0_init	;wreg free
  1436  004CCE                     
  1437                           ;fs_main.c: 51:     lcd_init();
  1438  004CCE  EC70  F029         	call	_lcd_init	;wreg free
  1439  004CD2                     
  1440                           ;fs_main.c: 52:     system_init();
  1441  004CD2  EC49  F024         	call	_system_init	;wreg free
  1442  004CD6                     
  1443                           ;fs_main.c: 53:     Lcd_Clear();
  1444  004CD6  EC55  F02E         	call	_Lcd_Clear	;wreg free
  1445  004CDA                     
  1446                           ;fs_main.c: 55:     PWM_Init();
  1447  004CDA  ECFC  F02D         	call	_PWM_Init	;wreg free
  1448  004CDE                     
  1449                           ;fs_main.c: 56:     PWM1_setDC(0);
  1450  004CDE  0E00               	movlw	0
  1451  004CE0  6E59               	movwf	(PWM1_setDC@dutycycle+1)^0,c
  1452  004CE2  0E00               	movlw	0
  1453  004CE4  6E58               	movwf	PWM1_setDC@dutycycle^0,c
  1454  004CE6  EC37  F02A         	call	_PWM1_setDC	;wreg free
  1455  004CEA                     
  1456                           ;fs_main.c: 57:     PWM2_setDC(0);
  1457  004CEA  0E00               	movlw	0
  1458  004CEC  6E59               	movwf	(PWM2_setDC@dutycycle+1)^0,c
  1459  004CEE  0E00               	movlw	0
  1460  004CF0  6E58               	movwf	PWM2_setDC@dutycycle^0,c
  1461  004CF2  ECFA  F029         	call	_PWM2_setDC	;wreg free
  1462  004CF6                     l6167:
  1463                           
  1464                           ;fs_main.c: 61: {;fs_main.c: 62:     if (timer_counter_flag.one_second_flag == 1)
  1465  004CF6  0101               	movlb	1	; () banked
  1466  004CF8  A19E               	btfss	_timer_counter_flag& (0+255),0,b
  1467  004CFA  EF81  F026         	goto	u7701
  1468  004CFE  EF83  F026         	goto	u7700
  1469  004D02                     u7701:
  1470  004D02  EFD6  F026         	goto	l6193
  1471  004D06                     u7700:
  1472  004D06                     
  1473                           ; BSR set to: 1
  1474                           ;fs_main.c: 63:     {;fs_main.c: 64:         timer_counter_flag.one_second_flag = 0;
  1475  004D06  919E               	bcf	_timer_counter_flag& (0+255),0,b
  1476  004D08                     
  1477                           ; BSR set to: 1
  1478                           ;fs_main.c: 66:         if ( (startIsClick == 1) && (pauseIsClick == 0) && (stopIsClick 
      +                          == 0) && (menu_selected == MAIN_MENU) )
  1479  004D08  059D               	decf	_startIsClick& (0+255),w,b
  1480  004D0A  A4D8               	btfss	status,2,c
  1481  004D0C  EF8A  F026         	goto	u7711
  1482  004D10  EF8C  F026         	goto	u7710
  1483  004D14                     u7711:
  1484  004D14  EFD6  F026         	goto	l6193
  1485  004D18                     u7710:
  1486  004D18                     
  1487                           ; BSR set to: 1
  1488  004D18  0100               	movlb	0	; () banked
  1489  004D1A  51FF               	movf	_pauseIsClick& (0+255),w,b
  1490  004D1C  A4D8               	btfss	status,2,c
  1491  004D1E  EF93  F026         	goto	u7721
  1492  004D22  EF95  F026         	goto	u7720
  1493  004D26                     u7721:
  1494  004D26  EFD6  F026         	goto	l6193
  1495  004D2A                     u7720:
  1496  004D2A                     
  1497                           ; BSR set to: 0
  1498  004D2A  0101               	movlb	1	; () banked
  1499  004D2C  519C               	movf	_stopIsClick& (0+255),w,b
  1500  004D2E  A4D8               	btfss	status,2,c
  1501  004D30  EF9C  F026         	goto	u7731
  1502  004D34  EF9E  F026         	goto	u7730
  1503  004D38                     u7731:
  1504  004D38  EFD6  F026         	goto	l6193
  1505  004D3C                     u7730:
  1506  004D3C                     
  1507                           ; BSR set to: 1
  1508  004D3C  519B               	movf	_menu_selected& (0+255),w,b
  1509  004D3E  A4D8               	btfss	status,2,c
  1510  004D40  EFA4  F026         	goto	u7741
  1511  004D44  EFA6  F026         	goto	u7740
  1512  004D48                     u7741:
  1513  004D48  EFD6  F026         	goto	l6193
  1514  004D4C                     u7740:
  1515  004D4C                     
  1516                           ; BSR set to: 1
  1517                           ;fs_main.c: 67:         {;fs_main.c: 68:             timer_value.second++;
  1518  004D4C  0100               	movlb	0	; () banked
  1519  004D4E  4BF3               	infsnz	_timer_value& (0+255),f,b
  1520  004D50  2BF4               	incf	(_timer_value+1)& (0+255),f,b
  1521  004D52                     
  1522                           ; BSR set to: 0
  1523                           ;fs_main.c: 69:             timer_value.remainingSecond = 60 - timer_value.second;
  1524  004D52  51F3               	movf	_timer_value& (0+255),w,b
  1525  004D54  083C               	sublw	60
  1526  004D56  6FF7               	movwf	(_timer_value+4)& (0+255),b
  1527  004D58  51F4               	movf	(_timer_value+1)& (0+255),w,b
  1528  004D5A  A0D8               	btfss	status,0,c
  1529  004D5C  2AE8               	incf	wreg,f,c
  1530  004D5E  0800               	sublw	0
  1531  004D60  6FF8               	movwf	(_timer_value+5)& (0+255),b
  1532  004D62                     
  1533                           ; BSR set to: 0
  1534                           ;fs_main.c: 71:             if (timer_value.remainingSecond == 59 )
  1535  004D62  0E3B               	movlw	59
  1536  004D64  19F7               	xorwf	(_timer_value+4)& (0+255),w,b
  1537  004D66  11F8               	iorwf	(_timer_value+5)& (0+255),w,b
  1538  004D68  A4D8               	btfss	status,2,c
  1539  004D6A  EFB9  F026         	goto	u7751
  1540  004D6E  EFBB  F026         	goto	u7750
  1541  004D72                     u7751:
  1542  004D72  EFC7  F026         	goto	l6189
  1543  004D76                     u7750:
  1544  004D76                     
  1545                           ; BSR set to: 0
  1546                           ;fs_main.c: 72:             {;fs_main.c: 73:                 timer_value.minute++;
  1547  004D76  4BF5               	infsnz	(_timer_value+2)& (0+255),f,b
  1548  004D78  2BF6               	incf	(_timer_value+3)& (0+255),f,b
  1549  004D7A                     
  1550                           ; BSR set to: 0
  1551                           ;fs_main.c: 74:                 timer_value.remainingMinute = menu_value.driver_time - t
      +                          imer_value.minute;
  1552  004D7A  51F5               	movf	(_timer_value+2)& (0+255),w,b
  1553  004D7C  0101               	movlb	1	; () banked
  1554  004D7E  5D8F               	subwf	_menu_value& (0+255),w,b
  1555  004D80  0100               	movlb	0	; () banked
  1556  004D82  6FF9               	movwf	(_timer_value+6)& (0+255),b
  1557  004D84  51F6               	movf	(_timer_value+3)& (0+255),w,b
  1558  004D86  A0D8               	btfss	status,0,c
  1559  004D88  29F6               	incf	(_timer_value+3)& (0+255),w,b
  1560  004D8A  6BFA               	clrf	(_timer_value+7)& (0+255),b
  1561  004D8C  5FFA               	subwf	(_timer_value+7)& (0+255),f,b
  1562  004D8E                     l6189:
  1563                           
  1564                           ; BSR set to: 0
  1565                           ;fs_main.c: 77:             if (timer_value.second > 59)
  1566  004D8E  51F4               	movf	(_timer_value+1)& (0+255),w,b
  1567  004D90  E109               	bnz	u7760
  1568  004D92  0E3C               	movlw	60
  1569  004D94  5DF3               	subwf	_timer_value& (0+255),w,b
  1570  004D96  A0D8               	btfss	status,0,c
  1571  004D98  EFD0  F026         	goto	u7761
  1572  004D9C  EFD2  F026         	goto	u7760
  1573  004DA0                     u7761:
  1574  004DA0  EFD6  F026         	goto	l6193
  1575  004DA4                     u7760:
  1576  004DA4                     
  1577                           ; BSR set to: 0
  1578                           ;fs_main.c: 78:             {;fs_main.c: 79:                 timer_value.second = 0;
  1579  004DA4  0E00               	movlw	0
  1580  004DA6  6FF4               	movwf	(_timer_value+1)& (0+255),b
  1581  004DA8  0E00               	movlw	0
  1582  004DAA  6FF3               	movwf	_timer_value& (0+255),b
  1583  004DAC                     l6193:
  1584                           
  1585                           ;fs_main.c: 84:     menuControl();
  1586  004DAC  EC74  F02A         	call	_menuControl	;wreg free
  1587  004DB0  EF7B  F026         	goto	l6167
  1588  004DB4  EF34  F000         	goto	start
  1589  004DB8                     __end_of_main:
  1590                           	callstack 0
  1591                           
  1592 ;; *************** function _timer_0_init *****************
  1593 ;; Defined at:
  1594 ;;		line 67 in file "fs_timer.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;		None
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;		None
  1599 ;; Return value:  Size  Location     Type
  1600 ;;                  1    wreg      void 
  1601 ;; Registers used:
  1602 ;;		wreg, status,2
  1603 ;; Tracked objects:
  1604 ;;		On entry : 0/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1608 ;;      Params:         0       0       0       0       0       0       0
  1609 ;;      Locals:         0       0       0       0       0       0       0
  1610 ;;      Temps:          0       0       0       0       0       0       0
  1611 ;;      Totals:         0       0       0       0       0       0       0
  1612 ;;Total ram usage:        0 bytes
  1613 ;; Hardware stack levels used:    1
  1614 ;; Hardware stack levels required when called:    1
  1615 ;; This function calls:
  1616 ;;		Nothing
  1617 ;; This function is called by:
  1618 ;;		_main
  1619 ;; This function uses a non-reentrant model
  1620 ;;
  1621                           
  1622                           	psect	text1
  1623  005C98                     __ptext1:
  1624                           	callstack 0
  1625  005C98                     _timer_0_init:
  1626                           	callstack 29
  1627  005C98                     
  1628                           ;fs_timer.c: 69:   T0CON = 0x81;
  1629  005C98  0E81               	movlw	129
  1630  005C9A  6ED5               	movwf	213,c	;volatile
  1631                           
  1632                           ;fs_timer.c: 70:   TMR0H = 0x63;
  1633  005C9C  0E63               	movlw	99
  1634  005C9E  6ED7               	movwf	215,c	;volatile
  1635                           
  1636                           ;fs_timer.c: 71:   TMR0L = 0xC0;
  1637  005CA0  0EC0               	movlw	192
  1638  005CA2  6ED6               	movwf	214,c	;volatile
  1639  005CA4                     
  1640                           ;fs_timer.c: 72:   INTCONbits.GIE = 1;
  1641  005CA4  8EF2               	bsf	242,7,c	;volatile
  1642  005CA6                     
  1643                           ;fs_timer.c: 73:   INTCONbits.TMR0IE = 1;
  1644  005CA6  8AF2               	bsf	242,5,c	;volatile
  1645  005CA8  0012               	return		;funcret
  1646  005CAA                     __end_of_timer_0_init:
  1647                           	callstack 0
  1648                           
  1649 ;; *************** function _system_init *****************
  1650 ;; Defined at:
  1651 ;;		line 55 in file "fs_mcu.c"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;		None
  1654 ;; Auto vars:     Size  Location     Type
  1655 ;;		None
  1656 ;; Return value:  Size  Location     Type
  1657 ;;                  1    wreg      void 
  1658 ;; Registers used:
  1659 ;;		wreg, status,2, cstack
  1660 ;; Tracked objects:
  1661 ;;		On entry : 0/0
  1662 ;;		On exit  : 0/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1665 ;;      Params:         0       0       0       0       0       0       0
  1666 ;;      Locals:         0       0       0       0       0       0       0
  1667 ;;      Temps:          2       0       0       0       0       0       0
  1668 ;;      Totals:         2       0       0       0       0       0       0
  1669 ;;Total ram usage:        2 bytes
  1670 ;; Hardware stack levels used:    1
  1671 ;; Hardware stack levels required when called:    2
  1672 ;; This function calls:
  1673 ;;		_eepromRead
  1674 ;; This function is called by:
  1675 ;;		_main
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679                           	psect	text2
  1680  004892                     __ptext2:
  1681                           	callstack 0
  1682  004892                     _system_init:
  1683                           	callstack 28
  1684  004892                     
  1685                           ;fs_mcu.c: 57:     driver_limit.pay = 0;
  1686  004892  0E00               	movlw	0
  1687  004894  0101               	movlb	1	; () banked
  1688  004896  6F73               	movwf	_driver_limit& (0+255),b
  1689  004898  0E00               	movlw	0
  1690  00489A  6F74               	movwf	(_driver_limit+1)& (0+255),b
  1691  00489C  0E00               	movlw	0
  1692  00489E  6F75               	movwf	(_driver_limit+2)& (0+255),b
  1693  0048A0  0E00               	movlw	0
  1694  0048A2  6F76               	movwf	(_driver_limit+3)& (0+255),b
  1695                           
  1696                           ;fs_mcu.c: 58:     driver_limit.payda = 0;
  1697  0048A4  0E00               	movlw	0
  1698  0048A6  6F77               	movwf	(_driver_limit+4)& (0+255),b
  1699  0048A8  0E00               	movlw	0
  1700  0048AA  6F78               	movwf	(_driver_limit+5)& (0+255),b
  1701  0048AC  0E00               	movlw	0
  1702  0048AE  6F79               	movwf	(_driver_limit+6)& (0+255),b
  1703  0048B0  0E00               	movlw	0
  1704  0048B2  6F7A               	movwf	(_driver_limit+7)& (0+255),b
  1705                           
  1706                           ;fs_mcu.c: 59:     driver_limit.ortalama = 0;
  1707  0048B4  0E00               	movlw	0
  1708  0048B6  6F7B               	movwf	(_driver_limit+8)& (0+255),b
  1709  0048B8  0E00               	movlw	0
  1710  0048BA  6F7C               	movwf	(_driver_limit+9)& (0+255),b
  1711  0048BC  0E00               	movlw	0
  1712  0048BE  6F7D               	movwf	(_driver_limit+10)& (0+255),b
  1713  0048C0  0E00               	movlw	0
  1714  0048C2  6F7E               	movwf	(_driver_limit+11)& (0+255),b
  1715                           
  1716                           ;fs_mcu.c: 60:     convert_data.convert_channel_0 = 0;
  1717  0048C4  0E00               	movlw	0
  1718  0048C6  6F00               	movwf	_convert_data& (0+255),b
  1719  0048C8  0E00               	movlw	0
  1720  0048CA  6F01               	movwf	(_convert_data+1)& (0+255),b
  1721  0048CC  0E00               	movlw	0
  1722  0048CE  6F02               	movwf	(_convert_data+2)& (0+255),b
  1723  0048D0  0E00               	movlw	0
  1724  0048D2  6F03               	movwf	(_convert_data+3)& (0+255),b
  1725                           
  1726                           ;fs_mcu.c: 61:     convert_data.convert_channel_1 = 0;
  1727  0048D4  0E00               	movlw	0
  1728  0048D6  6F04               	movwf	(_convert_data+4)& (0+255),b
  1729  0048D8  0E00               	movlw	0
  1730  0048DA  6F05               	movwf	(_convert_data+5)& (0+255),b
  1731  0048DC  0E00               	movlw	0
  1732  0048DE  6F06               	movwf	(_convert_data+6)& (0+255),b
  1733  0048E0  0E00               	movlw	0
  1734  0048E2  6F07               	movwf	(_convert_data+7)& (0+255),b
  1735                           
  1736                           ;fs_mcu.c: 62:     convert_data.convert_channel_2 = 0;
  1737  0048E4  0E00               	movlw	0
  1738  0048E6  6F08               	movwf	(_convert_data+8)& (0+255),b
  1739  0048E8  0E00               	movlw	0
  1740  0048EA  6F09               	movwf	(_convert_data+9)& (0+255),b
  1741  0048EC  0E00               	movlw	0
  1742  0048EE  6F0A               	movwf	(_convert_data+10)& (0+255),b
  1743  0048F0  0E00               	movlw	0
  1744  0048F2  6F0B               	movwf	(_convert_data+11)& (0+255),b
  1745                           
  1746                           ;fs_mcu.c: 63:     convert_data.convert_channel_3 = 0;
  1747  0048F4  0E00               	movlw	0
  1748  0048F6  6F0C               	movwf	(_convert_data+12)& (0+255),b
  1749  0048F8  0E00               	movlw	0
  1750  0048FA  6F0D               	movwf	(_convert_data+13)& (0+255),b
  1751  0048FC  0E00               	movlw	0
  1752  0048FE  6F0E               	movwf	(_convert_data+14)& (0+255),b
  1753  004900  0E00               	movlw	0
  1754  004902  6F0F               	movwf	(_convert_data+15)& (0+255),b
  1755                           
  1756                           ;fs_mcu.c: 64:     convert_data.convert_channel_4 = 0;
  1757  004904  0E00               	movlw	0
  1758  004906  6F10               	movwf	(_convert_data+16)& (0+255),b
  1759  004908  0E00               	movlw	0
  1760  00490A  6F11               	movwf	(_convert_data+17)& (0+255),b
  1761  00490C  0E00               	movlw	0
  1762  00490E  6F12               	movwf	(_convert_data+18)& (0+255),b
  1763  004910  0E00               	movlw	0
  1764  004912  6F13               	movwf	(_convert_data+19)& (0+255),b
  1765                           
  1766                           ;fs_mcu.c: 65:     convert_data.convert_channel_5 = 0;
  1767  004914  0E00               	movlw	0
  1768  004916  6F14               	movwf	(_convert_data+20)& (0+255),b
  1769  004918  0E00               	movlw	0
  1770  00491A  6F15               	movwf	(_convert_data+21)& (0+255),b
  1771  00491C  0E00               	movlw	0
  1772  00491E  6F16               	movwf	(_convert_data+22)& (0+255),b
  1773  004920  0E00               	movlw	0
  1774  004922  6F17               	movwf	(_convert_data+23)& (0+255),b
  1775                           
  1776                           ;fs_mcu.c: 66:     convert_data.convert_channel_6 = 0;
  1777  004924  0E00               	movlw	0
  1778  004926  6F18               	movwf	(_convert_data+24)& (0+255),b
  1779  004928  0E00               	movlw	0
  1780  00492A  6F19               	movwf	(_convert_data+25)& (0+255),b
  1781  00492C  0E00               	movlw	0
  1782  00492E  6F1A               	movwf	(_convert_data+26)& (0+255),b
  1783  004930  0E00               	movlw	0
  1784  004932  6F1B               	movwf	(_convert_data+27)& (0+255),b
  1785                           
  1786                           ;fs_mcu.c: 67:     convert_data.convert_channel_7 = 0;
  1787  004934  0E00               	movlw	0
  1788  004936  6F1C               	movwf	(_convert_data+28)& (0+255),b
  1789  004938  0E00               	movlw	0
  1790  00493A  6F1D               	movwf	(_convert_data+29)& (0+255),b
  1791  00493C  0E00               	movlw	0
  1792  00493E  6F1E               	movwf	(_convert_data+30)& (0+255),b
  1793  004940  0E00               	movlw	0
  1794  004942  6F1F               	movwf	(_convert_data+31)& (0+255),b
  1795                           
  1796                           ;fs_mcu.c: 68:     controller.leftMotorSpeed = 0;
  1797  004944  0E00               	movlw	0
  1798  004946  6F57               	movwf	(_controller+7)& (0+255),b
  1799  004948  0E00               	movlw	0
  1800  00494A  6F56               	movwf	(_controller+6)& (0+255),b
  1801                           
  1802                           ;fs_mcu.c: 69:     controller.rightMotorSpeed = 0;
  1803  00494C  0E00               	movlw	0
  1804  00494E  6F59               	movwf	(_controller+9)& (0+255),b
  1805  004950  0E00               	movlw	0
  1806  004952  6F58               	movwf	(_controller+8)& (0+255),b
  1807                           
  1808                           ;fs_mcu.c: 70:     timer_value.timer_0_counter = 0;
  1809  004954  0E00               	movlw	0
  1810  004956  0100               	movlb	0	; () banked
  1811  004958  6FFC               	movwf	(_timer_value+9)& (0+255),b
  1812                           
  1813                           ;fs_mcu.c: 71:     controller.error = 0;
  1814  00495A  0E00               	movlw	0
  1815  00495C  0101               	movlb	1	; () banked
  1816  00495E  6F51               	movwf	(_controller+1)& (0+255),b
  1817  004960  0E00               	movlw	0
  1818  004962  6F50               	movwf	_controller& (0+255),b
  1819  004964                     
  1820                           ; BSR set to: 1
  1821                           ;fs_mcu.c: 73:     button_bounce_controller.menu = 0;
  1822  004964  0100               	movlb	0	; () banked
  1823  004966  91FE               	bcf	_button_bounce_controller& (0+255),0,b
  1824  004968                     
  1825                           ; BSR set to: 0
  1826                           ;fs_mcu.c: 74:     button_bounce_controller.pause = 0;
  1827  004968  97FE               	bcf	_button_bounce_controller& (0+255),3,b
  1828  00496A                     
  1829                           ; BSR set to: 0
  1830                           ;fs_mcu.c: 75:     button_bounce_controller.start = 0;
  1831  00496A  93FE               	bcf	_button_bounce_controller& (0+255),1,b
  1832  00496C                     
  1833                           ; BSR set to: 0
  1834                           ;fs_mcu.c: 76:     button_bounce_controller.stop = 0;
  1835  00496C  95FE               	bcf	_button_bounce_controller& (0+255),2,b
  1836  00496E                     
  1837                           ; BSR set to: 0
  1838                           ;fs_mcu.c: 77:     menu_value.driver_time = (uint8_t)eepromRead(0x00);
  1839  00496E  0E00               	movlw	0
  1840  004970  EC23  F02E         	call	_eepromRead
  1841  004974  0101               	movlb	1	; () banked
  1842  004976  6F8F               	movwf	_menu_value& (0+255),b
  1843  004978                     
  1844                           ; BSR set to: 1
  1845                           ;fs_mcu.c: 78:     menu_value.stop_time = (uint8_t)eepromRead(0x01);
  1846  004978  0E01               	movlw	1
  1847  00497A  EC23  F02E         	call	_eepromRead
  1848  00497E  0101               	movlb	1	; () banked
  1849  004980  6F90               	movwf	(_menu_value+1)& (0+255),b
  1850  004982                     
  1851                           ; BSR set to: 1
  1852                           ;fs_mcu.c: 79:     menu_value.speed_limit = (uint8_t)eepromRead(0x02);
  1853  004982  0E02               	movlw	2
  1854  004984  EC23  F02E         	call	_eepromRead
  1855  004988  0101               	movlb	1	; () banked
  1856  00498A  6F91               	movwf	(_menu_value+2)& (0+255),b
  1857  00498C                     
  1858                           ; BSR set to: 1
  1859                           ;fs_mcu.c: 81:     _delay((unsigned long)((700)*(64000000UL/4000.0)));
  1860  00498C  0E39               	movlw	57
  1861  00498E  6E03               	movwf	(??_system_init+1)^0,c
  1862  004990  0ED2               	movlw	210
  1863  004992  6E02               	movwf	??_system_init^0,c
  1864  004994  0E4C               	movlw	76
  1865  004996                     u7817:
  1866  004996  2EE8               	decfsz	wreg,f,c
  1867  004998  D7FE               	bra	u7817
  1868  00499A  2E02               	decfsz	??_system_init^0,f,c
  1869  00499C  D7FC               	bra	u7817
  1870  00499E  2E03               	decfsz	(??_system_init+1)^0,f,c
  1871  0049A0  D7FA               	bra	u7817
  1872  0049A2  D000               	nop2	
  1873  0049A4                     
  1874                           ;fs_mcu.c: 82:     timer_value.remainingMinute = menu_value.driver_time;
  1875  0049A4  C18F  F0F9         	movff	_menu_value,_timer_value+6
  1876  0049A8  0100               	movlb	0	; () banked
  1877  0049AA  6BFA               	clrf	(_timer_value+7)& (0+255),b
  1878  0049AC                     
  1879                           ; BSR set to: 0
  1880                           ;fs_mcu.c: 83:     timer_value.remainingSecond = 0;
  1881  0049AC  0E00               	movlw	0
  1882  0049AE  6FF8               	movwf	(_timer_value+5)& (0+255),b
  1883  0049B0  0E00               	movlw	0
  1884  0049B2  6FF7               	movwf	(_timer_value+4)& (0+255),b
  1885  0049B4                     
  1886                           ; BSR set to: 0
  1887  0049B4  0012               	return		;funcret
  1888  0049B6                     __end_of_system_init:
  1889                           	callstack 0
  1890                           
  1891 ;; *************** function _eepromRead *****************
  1892 ;; Defined at:
  1893 ;;		line 36 in file "fs_eeprom.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;  address         1    wreg     unsigned char 
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;  address         1    0[COMRAM] unsigned char 
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  1    wreg      unsigned char 
  1900 ;; Registers used:
  1901 ;;		wreg, status,2
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1907 ;;      Params:         0       0       0       0       0       0       0
  1908 ;;      Locals:         1       0       0       0       0       0       0
  1909 ;;      Temps:          0       0       0       0       0       0       0
  1910 ;;      Totals:         1       0       0       0       0       0       0
  1911 ;;Total ram usage:        1 bytes
  1912 ;; Hardware stack levels used:    1
  1913 ;; Hardware stack levels required when called:    1
  1914 ;; This function calls:
  1915 ;;		Nothing
  1916 ;; This function is called by:
  1917 ;;		_system_init
  1918 ;; This function uses a non-reentrant model
  1919 ;;
  1920                           
  1921                           	psect	text3
  1922  005C46                     __ptext3:
  1923                           	callstack 0
  1924  005C46                     _eepromRead:
  1925                           	callstack 28
  1926                           
  1927                           ; BSR set to: 0
  1928                           ;incstack = 0
  1929                           ;eepromRead@address stored from wreg
  1930  005C46  6E01               	movwf	eepromRead@address^0,c
  1931  005C48                     
  1932                           ;fs_eeprom.c: 36: uint8_t eepromRead(uint8_t address);fs_eeprom.c: 37: {;fs_eeprom.c: 41
      +                          :     EEADR = (uint8_t)address;
  1933  005C48  C001  FFA9         	movff	eepromRead@address,4009	;volatile
  1934  005C4C                     
  1935                           ;fs_eeprom.c: 43:     EECON1bits.EEPGD = 0;
  1936  005C4C  9EA6               	bcf	166,7,c	;volsfr
  1937  005C4E                     
  1938                           ;fs_eeprom.c: 44:     EECON1bits.CFGS = 0;
  1939  005C4E  9CA6               	bcf	166,6,c	;volsfr
  1940  005C50                     
  1941                           ;fs_eeprom.c: 45:     EECON1bits.RD = 1;
  1942  005C50  80A6               	bsf	166,0,c	;volsfr
  1943  005C52                     l70:
  1944  005C52  B0A6               	btfsc	166,0,c	;volsfr
  1945  005C54  EF2E  F02E         	goto	u6851
  1946  005C58  EF30  F02E         	goto	u6850
  1947  005C5C                     u6851:
  1948  005C5C  EF29  F02E         	goto	l70
  1949  005C60                     u6850:
  1950  005C60                     
  1951                           ;fs_eeprom.c: 51:     return EEDATA;
  1952  005C60  50A8               	movf	168,w,c	;volatile
  1953  005C62  0012               	return		;funcret
  1954  005C64                     __end_of_eepromRead:
  1955                           	callstack 0
  1956                           
  1957 ;; *************** function _menuInitialize *****************
  1958 ;; Defined at:
  1959 ;;		line 38 in file "fs_menu_controller.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;		None
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;		None
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  1    wreg      void 
  1966 ;; Registers used:
  1967 ;;		None
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1973 ;;      Params:         0       0       0       0       0       0       0
  1974 ;;      Locals:         0       0       0       0       0       0       0
  1975 ;;      Temps:          0       0       0       0       0       0       0
  1976 ;;      Totals:         0       0       0       0       0       0       0
  1977 ;;Total ram usage:        0 bytes
  1978 ;; Hardware stack levels used:    1
  1979 ;; Hardware stack levels required when called:    1
  1980 ;; This function calls:
  1981 ;;		Nothing
  1982 ;; This function is called by:
  1983 ;;		_main
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987                           	psect	text4
  1988  005BD0                     __ptext4:
  1989                           	callstack 0
  1990  005BD0                     _menuInitialize:
  1991                           	callstack 29
  1992  005BD0                     
  1993                           ;fs_menu_controller.c: 41:     TRISBbits.RB6 = 1;
  1994  005BD0  8C93               	bsf	147,6,c	;volatile
  1995                           
  1996                           ;fs_menu_controller.c: 44:     TRISBbits.RB7 = 1;
  1997  005BD2  8E93               	bsf	147,7,c	;volatile
  1998                           
  1999                           ;fs_menu_controller.c: 46:     ANSELDbits.ANSD4 = 0;
  2000  005BD4  010F               	movlb	15	; () banked
  2001  005BD6  993B               	bcf	59,4,b	;volatile
  2002                           
  2003                           ;fs_menu_controller.c: 47:     TRISDbits.RD4 = 1;
  2004  005BD8  8895               	bsf	149,4,c	;volatile
  2005                           
  2006                           ;fs_menu_controller.c: 49:     ANSELDbits.ANSD0 = 0;
  2007  005BDA  913B               	bcf	59,0,b	;volatile
  2008                           
  2009                           ;fs_menu_controller.c: 50:     TRISDbits.RD0 = 1;
  2010  005BDC  8095               	bsf	149,0,c	;volatile
  2011                           
  2012                           ;fs_menu_controller.c: 52:     ANSELDbits.ANSD1 = 0;
  2013  005BDE  933B               	bcf	59,1,b	;volatile
  2014                           
  2015                           ;fs_menu_controller.c: 53:     TRISDbits.RD1 = 1;
  2016  005BE0  8295               	bsf	149,1,c	;volatile
  2017                           
  2018                           ;fs_menu_controller.c: 55:     ANSELDbits.ANSD2 = 0;
  2019  005BE2  953B               	bcf	59,2,b	;volatile
  2020                           
  2021                           ;fs_menu_controller.c: 56:     TRISDbits.RD2 = 1;
  2022  005BE4  8495               	bsf	149,2,c	;volatile
  2023                           
  2024                           ;fs_menu_controller.c: 58:     ANSELDbits.ANSD3 = 0;
  2025  005BE6  973B               	bcf	59,3,b	;volatile
  2026                           
  2027                           ;fs_menu_controller.c: 59:     TRISDbits.RD3 = 1;
  2028  005BE8  8695               	bsf	149,3,c	;volatile
  2029                           
  2030                           ;fs_menu_controller.c: 61:     ANSELDbits.ANSD5 = 0;
  2031  005BEA  9B3B               	bcf	59,5,b	;volatile
  2032                           
  2033                           ;fs_menu_controller.c: 62:     TRISDbits.RD5 = 0;
  2034  005BEC  9A95               	bcf	149,5,c	;volatile
  2035                           
  2036                           ;fs_menu_controller.c: 64:     ANSELCbits.ANSC5 = 0;
  2037  005BEE  9B3A               	bcf	58,5,b	;volatile
  2038                           
  2039                           ;fs_menu_controller.c: 65:     TRISCbits.RC5 = 0;
  2040  005BF0  9A94               	bcf	148,5,c	;volatile
  2041                           
  2042                           ;fs_menu_controller.c: 67:     ANSELCbits.ANSC4 = 0;
  2043  005BF2  993A               	bcf	58,4,b	;volatile
  2044                           
  2045                           ;fs_menu_controller.c: 68:     TRISCbits.RC4 = 0;
  2046  005BF4  9894               	bcf	148,4,c	;volatile
  2047  005BF6                     
  2048                           ; BSR set to: 15
  2049  005BF6  0012               	return		;funcret
  2050  005BF8                     __end_of_menuInitialize:
  2051                           	callstack 0
  2052                           
  2053 ;; *************** function _menuControl *****************
  2054 ;; Defined at:
  2055 ;;		line 162 in file "fs_menu_controller.c"
  2056 ;; Parameters:    Size  Location     Type
  2057 ;;		None
  2058 ;; Auto vars:     Size  Location     Type
  2059 ;;		None
  2060 ;; Return value:  Size  Location     Type
  2061 ;;                  1    wreg      void 
  2062 ;; Registers used:
  2063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2064 ;; Tracked objects:
  2065 ;;		On entry : 0/0
  2066 ;;		On exit  : 0/0
  2067 ;;		Unchanged: 0/0
  2068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2069 ;;      Params:         0       0       0       0       0       0       0
  2070 ;;      Locals:         0       0       0       0       0       0       0
  2071 ;;      Temps:          0       0       0       0       0       0       0
  2072 ;;      Totals:         0       0       0       0       0       0       0
  2073 ;;Total ram usage:        0 bytes
  2074 ;; Hardware stack levels used:    1
  2075 ;; Hardware stack levels required when called:   10
  2076 ;; This function calls:
  2077 ;;		_buttonControlFlags
  2078 ;;		_stateMachine
  2079 ;; This function is called by:
  2080 ;;		_main
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084                           	psect	text5
  2085  0054E8                     __ptext5:
  2086                           	callstack 0
  2087  0054E8                     _menuControl:
  2088                           	callstack 20
  2089  0054E8                     
  2090                           ;fs_menu_controller.c: 164:     buttonControlFlags();
  2091  0054E8  ECD5  F022         	call	_buttonControlFlags	;wreg free
  2092  0054EC                     
  2093                           ;fs_menu_controller.c: 165:     stateMachine();
  2094  0054EC  EC4F  F009         	call	_stateMachine	;wreg free
  2095  0054F0                     
  2096                           ;fs_menu_controller.c: 167:     if (menu_flags.menu_start_flag == 1)
  2097  0054F0  0100               	movlb	0	; () banked
  2098  0054F2  A3FD               	btfss	_menu_flags& (0+255),1,b
  2099  0054F4  EF7E  F02A         	goto	u7671
  2100  0054F8  EF80  F02A         	goto	u7670
  2101  0054FC                     u7671:
  2102  0054FC  EF8A  F02A         	goto	l6131
  2103  005500                     u7670:
  2104  005500                     
  2105                           ; BSR set to: 0
  2106                           ;fs_menu_controller.c: 168:     {;fs_menu_controller.c: 169:         menu_flags.menu_sta
      +                          rt_flag = 0;
  2107  005500  93FD               	bcf	_menu_flags& (0+255),1,b
  2108  005502                     
  2109                           ; BSR set to: 0
  2110                           ;fs_menu_controller.c: 170:         startIsClick = 1;
  2111  005502  0E01               	movlw	1
  2112  005504  0101               	movlb	1	; () banked
  2113  005506  6F9D               	movwf	_startIsClick& (0+255),b
  2114                           
  2115                           ;fs_menu_controller.c: 171:         pauseIsClick = 0;
  2116  005508  0E00               	movlw	0
  2117  00550A  0100               	movlb	0	; () banked
  2118  00550C  6FFF               	movwf	_pauseIsClick& (0+255),b
  2119                           
  2120                           ;fs_menu_controller.c: 172:         stopIsClick = 0;
  2121  00550E  0E00               	movlw	0
  2122  005510  0101               	movlb	1	; () banked
  2123  005512  6F9C               	movwf	_stopIsClick& (0+255),b
  2124  005514                     l6131:
  2125                           
  2126                           ;fs_menu_controller.c: 176:     if (menu_flags.menu_pause_flag == 1)
  2127  005514  0100               	movlb	0	; () banked
  2128  005516  A7FD               	btfss	_menu_flags& (0+255),3,b
  2129  005518  EF90  F02A         	goto	u7681
  2130  00551C  EF92  F02A         	goto	u7680
  2131  005520                     u7681:
  2132  005520  EF9A  F02A         	goto	l6137
  2133  005524                     u7680:
  2134  005524                     
  2135                           ; BSR set to: 0
  2136                           ;fs_menu_controller.c: 177:     {;fs_menu_controller.c: 178:         menu_flags.menu_pau
      +                          se_flag = 0;
  2137  005524  97FD               	bcf	_menu_flags& (0+255),3,b
  2138  005526                     
  2139                           ; BSR set to: 0
  2140                           ;fs_menu_controller.c: 179:         pauseIsClick = 1;
  2141  005526  0E01               	movlw	1
  2142  005528  6FFF               	movwf	_pauseIsClick& (0+255),b
  2143                           
  2144                           ;fs_menu_controller.c: 180:         startIsClick = 0;
  2145  00552A  0E00               	movlw	0
  2146  00552C  0101               	movlb	1	; () banked
  2147  00552E  6F9D               	movwf	_startIsClick& (0+255),b
  2148                           
  2149                           ;fs_menu_controller.c: 181:         stopIsClick = 0;
  2150  005530  0E00               	movlw	0
  2151  005532  6F9C               	movwf	_stopIsClick& (0+255),b
  2152  005534                     l6137:
  2153                           
  2154                           ;fs_menu_controller.c: 184:     if (menu_flags.menu_stop_flag == 1)
  2155  005534  0100               	movlb	0	; () banked
  2156  005536  A5FD               	btfss	_menu_flags& (0+255),2,b
  2157  005538  EFA0  F02A         	goto	u7691
  2158  00553C  EFA2  F02A         	goto	u7690
  2159  005540                     u7691:
  2160  005540  EFAA  F02A         	goto	l333
  2161  005544                     u7690:
  2162  005544                     
  2163                           ; BSR set to: 0
  2164                           ;fs_menu_controller.c: 185:     {;fs_menu_controller.c: 186:         menu_flags.menu_sto
      +                          p_flag = 0;
  2165  005544  95FD               	bcf	_menu_flags& (0+255),2,b
  2166  005546                     
  2167                           ; BSR set to: 0
  2168                           ;fs_menu_controller.c: 187:         pauseIsClick = 0;
  2169  005546  0E00               	movlw	0
  2170  005548  6FFF               	movwf	_pauseIsClick& (0+255),b
  2171                           
  2172                           ;fs_menu_controller.c: 188:         startIsClick = 0;
  2173  00554A  0E00               	movlw	0
  2174  00554C  0101               	movlb	1	; () banked
  2175  00554E  6F9D               	movwf	_startIsClick& (0+255),b
  2176                           
  2177                           ;fs_menu_controller.c: 189:         stopIsClick = 1;
  2178  005550  0E01               	movlw	1
  2179  005552  6F9C               	movwf	_stopIsClick& (0+255),b
  2180  005554                     l333:
  2181  005554  0012               	return		;funcret
  2182  005556                     __end_of_menuControl:
  2183                           	callstack 0
  2184                           
  2185 ;; *************** function _stateMachine *****************
  2186 ;; Defined at:
  2187 ;;		line 200 in file "fs_menu_controller.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;		None
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;  textCursor2    16  131[BANK0 ] unsigned char [16]
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  1    wreg      void 
  2194 ;; Registers used:
  2195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2201 ;;      Params:         0       0       0       0       0       0       0
  2202 ;;      Locals:         0      16       0       0       0       0       0
  2203 ;;      Temps:          0       2       0       0       0       0       0
  2204 ;;      Totals:         0      18       0       0       0       0       0
  2205 ;;Total ram usage:       18 bytes
  2206 ;; Hardware stack levels used:    1
  2207 ;; Hardware stack levels required when called:    9
  2208 ;; This function calls:
  2209 ;;		_Lcd_Set_Cursor
  2210 ;;		_Lcd_Write_String
  2211 ;;		___fladd
  2212 ;;		___flge
  2213 ;;		___flsub
  2214 ;;		_eepromWrite
  2215 ;;		_sprintf
  2216 ;;		_startMotor
  2217 ;;		_stopMotor
  2218 ;; This function is called by:
  2219 ;;		_menuControl
  2220 ;; This function uses a non-reentrant model
  2221 ;;
  2222                           
  2223                           	psect	text6
  2224  00129E                     __ptext6:
  2225                           	callstack 0
  2226  00129E                     _stateMachine:
  2227                           	callstack 20
  2228  00129E                     
  2229                           ;fs_menu_controller.c: 202:     char textCursor2[16] = {0};
  2230  00129E  EE20  F0E3         	lfsr	2,stateMachine@textCursor2
  2231  0012A2  0E0F               	movlw	15
  2232  0012A4                     u7101:
  2233  0012A4  6ADE               	clrf	postinc2,c
  2234  0012A6  06E8               	decf	wreg,f,c
  2235  0012A8  E2FD               	bc	u7101
  2236                           
  2237                           ;fs_menu_controller.c: 203:     static uint8_t secretMenuCounter = 0;;fs_menu_controller
      +                          .c: 205:     switch (menu_selected)
  2238  0012AA  EF0D  F00E         	goto	l6037
  2239  0012AE                     l5707:
  2240                           
  2241                           ; BSR set to: 0
  2242                           ;fs_menu_controller.c: 209:             Lcd_Set_Cursor(1,1);
  2243  0012AE  0E01               	movlw	1
  2244  0012B0  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2245  0012B2  0E01               	movlw	1
  2246  0012B4  EC15  F02B         	call	_Lcd_Set_Cursor
  2247  0012B8                     
  2248                           ;fs_menu_controller.c: 210:             Lcd_Write_String("KALAN ZAMAN     ");
  2249  0012B8  0E35               	movlw	low STR_1
  2250  0012BA  6E05               	movwf	Lcd_Write_String@a^0,c
  2251  0012BC  0E06               	movlw	high STR_1
  2252  0012BE  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2253  0012C0  ECBB  F029         	call	_Lcd_Write_String	;wreg free
  2254  0012C4                     
  2255                           ;fs_menu_controller.c: 211:             Lcd_Set_Cursor(2,1);
  2256  0012C4  0E01               	movlw	1
  2257  0012C6  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2258  0012C8  0E02               	movlw	2
  2259  0012CA  EC15  F02B         	call	_Lcd_Set_Cursor
  2260  0012CE                     
  2261                           ;fs_menu_controller.c: 212:             sprintf(textCursor2,"      %d:%d   ",timer_value
      +                          .remainingMinute,timer_value.remainingSecond);
  2262  0012CE  0EE3               	movlw	low stateMachine@textCursor2
  2263  0012D0  0100               	movlb	0	; () banked
  2264  0012D2  6FCF               	movwf	sprintf@s& (0+255),b
  2265  0012D4  0E00               	movlw	high stateMachine@textCursor2
  2266  0012D6  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2267  0012D8  0E9A               	movlw	low STR_2
  2268  0012DA  6FD1               	movwf	sprintf@fmt& (0+255),b
  2269  0012DC  0E06               	movlw	high STR_2
  2270  0012DE  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2271  0012E0  C0F9  F0D3         	movff	_timer_value+6,?_sprintf+4
  2272  0012E4  C0FA  F0D4         	movff	_timer_value+7,?_sprintf+5
  2273  0012E8  C0F7  F0D5         	movff	_timer_value+4,?_sprintf+6
  2274  0012EC  C0F8  F0D6         	movff	_timer_value+5,?_sprintf+7
  2275  0012F0  ECFD  F02B         	call	_sprintf	;wreg free
  2276  0012F4                     
  2277                           ;fs_menu_controller.c: 213:             Lcd_Write_String(textCursor2);
  2278  0012F4  0EE3               	movlw	low stateMachine@textCursor2
  2279  0012F6  6E05               	movwf	Lcd_Write_String@a^0,c
  2280  0012F8  0E00               	movlw	high stateMachine@textCursor2
  2281  0012FA  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2282  0012FC  ECBB  F029         	call	_Lcd_Write_String	;wreg free
  2283  001300                     
  2284                           ;fs_menu_controller.c: 215:             if ( timer_value.menu_login_delay == 100)
  2285  001300  0E64               	movlw	100
  2286  001302  0100               	movlb	0	; () banked
  2287  001304  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  2288  001306  A4D8               	btfss	status,2,c
  2289  001308  EF88  F009         	goto	u7111
  2290  00130C  EF8A  F009         	goto	u7110
  2291  001310                     u7111:
  2292  001310  EF8F  F009         	goto	l5721
  2293  001314                     u7110:
  2294  001314                     
  2295                           ; BSR set to: 0
  2296                           ;fs_menu_controller.c: 216:             {;fs_menu_controller.c: 217:                 tim
      +                          er_value.menu_login_delay = 0;
  2297  001314  0E00               	movlw	0
  2298  001316  6FFB               	movwf	(_timer_value+8)& (0+255),b
  2299                           
  2300                           ;fs_menu_controller.c: 218:                 menu_selected = DRIVER_TIME_SETTING;
  2301  001318  0E01               	movlw	1
  2302  00131A  0101               	movlb	1	; () banked
  2303  00131C  6F9B               	movwf	_menu_selected& (0+255),b
  2304  00131E                     l5721:
  2305                           
  2306                           ;fs_menu_controller.c: 221:             if ((timer_value.remainingMinute <= 0) && (timer
      +                          _value.remainingSecond == 0) )
  2307  00131E  0100               	movlb	0	; () banked
  2308  001320  BFFA               	btfsc	(_timer_value+7)& (0+255),7,b
  2309  001322  EF9D  F009         	goto	u7120
  2310  001326  51FA               	movf	(_timer_value+7)& (0+255),w,b
  2311  001328  E106               	bnz	u7121
  2312  00132A  05F9               	decf	(_timer_value+6)& (0+255),w,b
  2313  00132C  B0D8               	btfsc	status,0,c
  2314  00132E  EF9B  F009         	goto	u7121
  2315  001332  EF9D  F009         	goto	u7120
  2316  001336                     u7121:
  2317  001336  EFAE  F009         	goto	l343
  2318  00133A                     u7120:
  2319  00133A                     
  2320                           ; BSR set to: 0
  2321  00133A  51F7               	movf	(_timer_value+4)& (0+255),w,b
  2322  00133C  11F8               	iorwf	(_timer_value+5)& (0+255),w,b
  2323  00133E  A4D8               	btfss	status,2,c
  2324  001340  EFA4  F009         	goto	u7131
  2325  001344  EFA6  F009         	goto	u7130
  2326  001348                     u7131:
  2327  001348  EFAE  F009         	goto	l343
  2328  00134C                     u7130:
  2329  00134C                     
  2330                           ; BSR set to: 0
  2331                           ;fs_menu_controller.c: 222:             {;fs_menu_controller.c: 223:                 men
      +                          u_selected = STOP_MENU;
  2332  00134C  0E04               	movlw	4
  2333  00134E  0101               	movlb	1	; () banked
  2334  001350  6F9B               	movwf	_menu_selected& (0+255),b
  2335                           
  2336                           ;fs_menu_controller.c: 224:                 timer_value.minute = 0;
  2337  001352  0E00               	movlw	0
  2338  001354  0100               	movlb	0	; () banked
  2339  001356  6FF6               	movwf	(_timer_value+3)& (0+255),b
  2340  001358  0E00               	movlw	0
  2341  00135A  6FF5               	movwf	(_timer_value+2)& (0+255),b
  2342  00135C                     l343:
  2343                           
  2344                           ; BSR set to: 0
  2345                           ;fs_menu_controller.c: 227:             if ( (startIsClick == 0) && (pauseIsClick == 1) 
      +                          && (stopIsClick == 0) && (menu_selected == MAIN_MENU))
  2346  00135C  0101               	movlb	1	; () banked
  2347  00135E  519D               	movf	_startIsClick& (0+255),w,b
  2348  001360  A4D8               	btfss	status,2,c
  2349  001362  EFB5  F009         	goto	u7141
  2350  001366  EFB7  F009         	goto	u7140
  2351  00136A                     u7141:
  2352  00136A  EFD3  F009         	goto	l344
  2353  00136E                     u7140:
  2354  00136E                     
  2355                           ; BSR set to: 1
  2356  00136E  0100               	movlb	0	; () banked
  2357  001370  05FF               	decf	_pauseIsClick& (0+255),w,b
  2358  001372  A4D8               	btfss	status,2,c
  2359  001374  EFBE  F009         	goto	u7151
  2360  001378  EFC0  F009         	goto	u7150
  2361  00137C                     u7151:
  2362  00137C  EFD3  F009         	goto	l344
  2363  001380                     u7150:
  2364  001380                     
  2365                           ; BSR set to: 0
  2366  001380  0101               	movlb	1	; () banked
  2367  001382  519C               	movf	_stopIsClick& (0+255),w,b
  2368  001384  A4D8               	btfss	status,2,c
  2369  001386  EFC7  F009         	goto	u7161
  2370  00138A  EFC9  F009         	goto	u7160
  2371  00138E                     u7161:
  2372  00138E  EFD3  F009         	goto	l344
  2373  001392                     u7160:
  2374  001392                     
  2375                           ; BSR set to: 1
  2376  001392  519B               	movf	_menu_selected& (0+255),w,b
  2377  001394  A4D8               	btfss	status,2,c
  2378  001396  EFCF  F009         	goto	u7171
  2379  00139A  EFD1  F009         	goto	u7170
  2380  00139E                     u7171:
  2381  00139E  EFD3  F009         	goto	l344
  2382  0013A2                     u7170:
  2383  0013A2                     
  2384                           ; BSR set to: 1
  2385                           ;fs_menu_controller.c: 228:             {;fs_menu_controller.c: 229:                 men
      +                          u_selected = PAUSE_MENU;
  2386  0013A2  0E06               	movlw	6
  2387  0013A4  6F9B               	movwf	_menu_selected& (0+255),b
  2388  0013A6                     l344:
  2389                           
  2390                           ;fs_menu_controller.c: 232:             if ( (startIsClick == 0) && (pauseIsClick == 0) 
      +                          && (stopIsClick == 1) && (menu_selected == MAIN_MENU) )
  2391  0013A6  0101               	movlb	1	; () banked
  2392  0013A8  519D               	movf	_startIsClick& (0+255),w,b
  2393  0013AA  A4D8               	btfss	status,2,c
  2394  0013AC  EFDA  F009         	goto	u7181
  2395  0013B0  EFDC  F009         	goto	u7180
  2396  0013B4                     u7181:
  2397  0013B4  EF06  F00A         	goto	l5745
  2398  0013B8                     u7180:
  2399  0013B8                     
  2400                           ; BSR set to: 1
  2401  0013B8  0100               	movlb	0	; () banked
  2402  0013BA  51FF               	movf	_pauseIsClick& (0+255),w,b
  2403  0013BC  A4D8               	btfss	status,2,c
  2404  0013BE  EFE3  F009         	goto	u7191
  2405  0013C2  EFE5  F009         	goto	u7190
  2406  0013C6                     u7191:
  2407  0013C6  EF06  F00A         	goto	l5745
  2408  0013CA                     u7190:
  2409  0013CA                     
  2410                           ; BSR set to: 0
  2411  0013CA  0101               	movlb	1	; () banked
  2412  0013CC  059C               	decf	_stopIsClick& (0+255),w,b
  2413  0013CE  A4D8               	btfss	status,2,c
  2414  0013D0  EFEC  F009         	goto	u7201
  2415  0013D4  EFEE  F009         	goto	u7200
  2416  0013D8                     u7201:
  2417  0013D8  EF06  F00A         	goto	l5745
  2418  0013DC                     u7200:
  2419  0013DC                     
  2420                           ; BSR set to: 1
  2421  0013DC  519B               	movf	_menu_selected& (0+255),w,b
  2422  0013DE  A4D8               	btfss	status,2,c
  2423  0013E0  EFF4  F009         	goto	u7211
  2424  0013E4  EFF6  F009         	goto	u7210
  2425  0013E8                     u7211:
  2426  0013E8  EF06  F00A         	goto	l5745
  2427  0013EC                     u7210:
  2428  0013EC                     
  2429                           ; BSR set to: 1
  2430                           ;fs_menu_controller.c: 233:             {;fs_menu_controller.c: 234:                  ti
      +                          mer_value.remainingMinute = menu_value.driver_time;
  2431  0013EC  C18F  F0F9         	movff	_menu_value,_timer_value+6
  2432  0013F0  0100               	movlb	0	; () banked
  2433  0013F2  6BFA               	clrf	(_timer_value+7)& (0+255),b
  2434  0013F4                     
  2435                           ; BSR set to: 0
  2436                           ;fs_menu_controller.c: 235:                  timer_value.remainingSecond = 0;
  2437  0013F4  0E00               	movlw	0
  2438  0013F6  6FF8               	movwf	(_timer_value+5)& (0+255),b
  2439  0013F8  0E00               	movlw	0
  2440  0013FA  6FF7               	movwf	(_timer_value+4)& (0+255),b
  2441                           
  2442                           ;fs_menu_controller.c: 236:                  timer_value.second = 0;
  2443  0013FC  0E00               	movlw	0
  2444  0013FE  6FF4               	movwf	(_timer_value+1)& (0+255),b
  2445  001400  0E00               	movlw	0
  2446  001402  6FF3               	movwf	_timer_value& (0+255),b
  2447                           
  2448                           ;fs_menu_controller.c: 237:                  timer_value.minute = 0;
  2449  001404  0E00               	movlw	0
  2450  001406  6FF6               	movwf	(_timer_value+3)& (0+255),b
  2451  001408  0E00               	movlw	0
  2452  00140A  6FF5               	movwf	(_timer_value+2)& (0+255),b
  2453  00140C                     l5745:
  2454                           
  2455                           ;fs_menu_controller.c: 240:             if ( (startIsClick == 1) && (pauseIsClick == 0) 
      +                          && (stopIsClick == 1) )
  2456  00140C  0101               	movlb	1	; () banked
  2457  00140E  059D               	decf	_startIsClick& (0+255),w,b
  2458  001410  A4D8               	btfss	status,2,c
  2459  001412  EF0D  F00A         	goto	u7221
  2460  001416  EF0F  F00A         	goto	u7220
  2461  00141A                     u7221:
  2462  00141A  EF40  F00E         	goto	l383
  2463  00141E                     u7220:
  2464  00141E                     
  2465                           ; BSR set to: 1
  2466  00141E  0100               	movlb	0	; () banked
  2467  001420  51FF               	movf	_pauseIsClick& (0+255),w,b
  2468  001422  A4D8               	btfss	status,2,c
  2469  001424  EF16  F00A         	goto	u7231
  2470  001428  EF18  F00A         	goto	u7230
  2471  00142C                     u7231:
  2472  00142C  EF40  F00E         	goto	l383
  2473  001430                     u7230:
  2474  001430                     
  2475                           ; BSR set to: 0
  2476  001430  0101               	movlb	1	; () banked
  2477  001432  059C               	decf	_stopIsClick& (0+255),w,b
  2478  001434  A4D8               	btfss	status,2,c
  2479  001436  EF1F  F00A         	goto	u7241
  2480  00143A  EF21  F00A         	goto	u7240
  2481  00143E                     u7241:
  2482  00143E  EF40  F00E         	goto	l383
  2483  001442                     u7240:
  2484  001442                     
  2485                           ; BSR set to: 1
  2486                           ;fs_menu_controller.c: 241:             {;fs_menu_controller.c: 242:                 sta
      +                          rtMotor();
  2487  001442  EC66  F02D         	call	_startMotor	;wreg free
  2488  001446                     
  2489                           ;fs_menu_controller.c: 243:                 LATDbits.LATD5 = 1;
  2490  001446  8A8C               	bsf	140,5,c	;volatile
  2491  001448                     
  2492                           ;fs_menu_controller.c: 244:                 LATCbits.LATC5 = 1;
  2493  001448  8A8B               	bsf	139,5,c	;volatile
  2494  00144A  EF40  F00E         	goto	l383
  2495  00144E                     l348:
  2496                           
  2497                           ; BSR set to: 0
  2498                           ;fs_menu_controller.c: 252:             if (menu_flags.menu_input_flag == 1)
  2499  00144E  A1FD               	btfss	_menu_flags& (0+255),0,b
  2500  001450  EF2C  F00A         	goto	u7251
  2501  001454  EF2E  F00A         	goto	u7250
  2502  001458                     u7251:
  2503  001458  EF32  F00A         	goto	l5761
  2504  00145C                     u7250:
  2505  00145C                     
  2506                           ; BSR set to: 0
  2507                           ;fs_menu_controller.c: 253:             {;fs_menu_controller.c: 254:                 men
      +                          u_flags.menu_input_flag = 0;
  2508  00145C  91FD               	bcf	_menu_flags& (0+255),0,b
  2509  00145E                     
  2510                           ; BSR set to: 0
  2511                           ;fs_menu_controller.c: 255:                 menu_selected = STOP_TIME_SETTING;
  2512  00145E  0E02               	movlw	2
  2513  001460  0101               	movlb	1	; () banked
  2514  001462  6F9B               	movwf	_menu_selected& (0+255),b
  2515  001464                     l5761:
  2516                           
  2517                           ;fs_menu_controller.c: 258:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_value.driver_time < 30))
  2518  001464  0100               	movlb	0	; () banked
  2519  001466  A9FD               	btfss	_menu_flags& (0+255),4,b
  2520  001468  EF38  F00A         	goto	u7261
  2521  00146C  EF3A  F00A         	goto	u7260
  2522  001470                     u7261:
  2523  001470  EF5C  F00A         	goto	l5779
  2524  001474                     u7260:
  2525  001474                     
  2526                           ; BSR set to: 0
  2527  001474  0E1E               	movlw	30
  2528  001476  0101               	movlb	1	; () banked
  2529  001478  618F               	cpfslt	_menu_value& (0+255),b
  2530  00147A  EF41  F00A         	goto	u7271
  2531  00147E  EF43  F00A         	goto	u7270
  2532  001482                     u7271:
  2533  001482  EF5C  F00A         	goto	l5779
  2534  001486                     u7270:
  2535  001486                     
  2536                           ; BSR set to: 1
  2537                           ;fs_menu_controller.c: 259:             {;fs_menu_controller.c: 260:                 men
      +                          u_flags.menu_increase_flag = 0;
  2538  001486  0100               	movlb	0	; () banked
  2539  001488  99FD               	bcf	_menu_flags& (0+255),4,b
  2540  00148A                     
  2541                           ; BSR set to: 0
  2542                           ;fs_menu_controller.c: 261:                 menu_value.driver_time++;
  2543  00148A  0101               	movlb	1	; () banked
  2544  00148C  2B8F               	incf	_menu_value& (0+255),f,b
  2545  00148E                     
  2546                           ; BSR set to: 1
  2547                           ;fs_menu_controller.c: 262:                 eepromWrite(0x00,(uint8_t)menu_value.driver_
      +                          time);
  2548  00148E  C18F  F001         	movff	_menu_value,eepromWrite@data
  2549  001492  0E00               	movlw	0
  2550  001494  ECD1  F02D         	call	_eepromWrite
  2551  001498                     
  2552                           ;fs_menu_controller.c: 263:                 timer_value.minute =0 ;
  2553  001498  0E00               	movlw	0
  2554  00149A  0100               	movlb	0	; () banked
  2555  00149C  6FF6               	movwf	(_timer_value+3)& (0+255),b
  2556  00149E  0E00               	movlw	0
  2557  0014A0  6FF5               	movwf	(_timer_value+2)& (0+255),b
  2558  0014A2                     
  2559                           ; BSR set to: 0
  2560                           ;fs_menu_controller.c: 264:                 timer_value.second = 0;
  2561  0014A2  0E00               	movlw	0
  2562  0014A4  6FF4               	movwf	(_timer_value+1)& (0+255),b
  2563  0014A6  0E00               	movlw	0
  2564  0014A8  6FF3               	movwf	_timer_value& (0+255),b
  2565  0014AA                     
  2566                           ; BSR set to: 0
  2567                           ;fs_menu_controller.c: 265:                 timer_value.remainingSecond = 0;
  2568  0014AA  0E00               	movlw	0
  2569  0014AC  6FF8               	movwf	(_timer_value+5)& (0+255),b
  2570  0014AE  0E00               	movlw	0
  2571  0014B0  6FF7               	movwf	(_timer_value+4)& (0+255),b
  2572  0014B2                     
  2573                           ; BSR set to: 0
  2574                           ;fs_menu_controller.c: 266:                 timer_value.remainingMinute = menu_value.dri
      +                          ver_time;
  2575  0014B2  C18F  F0F9         	movff	_menu_value,_timer_value+6
  2576  0014B6  6BFA               	clrf	(_timer_value+7)& (0+255),b
  2577  0014B8                     l5779:
  2578                           
  2579                           ;fs_menu_controller.c: 269:             if ((menu_flags.menu_decrease_flag == 1) && (men
      +                          u_value.driver_time > 1))
  2580  0014B8  0100               	movlb	0	; () banked
  2581  0014BA  ABFD               	btfss	_menu_flags& (0+255),5,b
  2582  0014BC  EF62  F00A         	goto	u7281
  2583  0014C0  EF64  F00A         	goto	u7280
  2584  0014C4                     u7281:
  2585  0014C4  EF86  F00A         	goto	l5797
  2586  0014C8                     u7280:
  2587  0014C8                     
  2588                           ; BSR set to: 0
  2589  0014C8  0E01               	movlw	1
  2590  0014CA  0101               	movlb	1	; () banked
  2591  0014CC  658F               	cpfsgt	_menu_value& (0+255),b
  2592  0014CE  EF6B  F00A         	goto	u7291
  2593  0014D2  EF6D  F00A         	goto	u7290
  2594  0014D6                     u7291:
  2595  0014D6  EF86  F00A         	goto	l5797
  2596  0014DA                     u7290:
  2597  0014DA                     
  2598                           ; BSR set to: 1
  2599                           ;fs_menu_controller.c: 270:             {;fs_menu_controller.c: 271:                  me
      +                          nu_flags.menu_decrease_flag = 0;
  2600  0014DA  0100               	movlb	0	; () banked
  2601  0014DC  9BFD               	bcf	_menu_flags& (0+255),5,b
  2602  0014DE                     
  2603                           ; BSR set to: 0
  2604                           ;fs_menu_controller.c: 272:                  menu_value.driver_time--;
  2605  0014DE  0101               	movlb	1	; () banked
  2606  0014E0  078F               	decf	_menu_value& (0+255),f,b
  2607  0014E2                     
  2608                           ; BSR set to: 1
  2609                           ;fs_menu_controller.c: 273:                  eepromWrite(0x00,(uint8_t)menu_value.driver
      +                          _time);
  2610  0014E2  C18F  F001         	movff	_menu_value,eepromWrite@data
  2611  0014E6  0E00               	movlw	0
  2612  0014E8  ECD1  F02D         	call	_eepromWrite
  2613  0014EC                     
  2614                           ;fs_menu_controller.c: 274:                  timer_value.minute =0 ;
  2615  0014EC  0E00               	movlw	0
  2616  0014EE  0100               	movlb	0	; () banked
  2617  0014F0  6FF6               	movwf	(_timer_value+3)& (0+255),b
  2618  0014F2  0E00               	movlw	0
  2619  0014F4  6FF5               	movwf	(_timer_value+2)& (0+255),b
  2620  0014F6                     
  2621                           ; BSR set to: 0
  2622                           ;fs_menu_controller.c: 275:                  timer_value.second = 0;
  2623  0014F6  0E00               	movlw	0
  2624  0014F8  6FF4               	movwf	(_timer_value+1)& (0+255),b
  2625  0014FA  0E00               	movlw	0
  2626  0014FC  6FF3               	movwf	_timer_value& (0+255),b
  2627  0014FE                     
  2628                           ; BSR set to: 0
  2629                           ;fs_menu_controller.c: 276:                  timer_value.remainingSecond = 0;
  2630  0014FE  0E00               	movlw	0
  2631  001500  6FF8               	movwf	(_timer_value+5)& (0+255),b
  2632  001502  0E00               	movlw	0
  2633  001504  6FF7               	movwf	(_timer_value+4)& (0+255),b
  2634  001506                     
  2635                           ; BSR set to: 0
  2636                           ;fs_menu_controller.c: 277:                  timer_value.remainingMinute = menu_value.dr
      +                          iver_time;
  2637  001506  C18F  F0F9         	movff	_menu_value,_timer_value+6
  2638  00150A  6BFA               	clrf	(_timer_value+7)& (0+255),b
  2639  00150C                     l5797:
  2640                           
  2641                           ;fs_menu_controller.c: 281:             Lcd_Set_Cursor(1,1);
  2642  00150C  0E01               	movlw	1
  2643  00150E  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2644  001510  0E01               	movlw	1
  2645  001512  EC15  F02B         	call	_Lcd_Set_Cursor
  2646  001516                     
  2647                           ;fs_menu_controller.c: 282:             Lcd_Write_String("HAREKT ZAMANI dk");
  2648  001516  0E68               	movlw	low STR_3
  2649  001518  6E05               	movwf	Lcd_Write_String@a^0,c
  2650  00151A  0E06               	movlw	high STR_3
  2651  00151C  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2652  00151E  ECBB  F029         	call	_Lcd_Write_String	;wreg free
  2653  001522                     
  2654                           ;fs_menu_controller.c: 283:             Lcd_Set_Cursor(2,1);
  2655  001522  0E01               	movlw	1
  2656  001524  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2657  001526  0E02               	movlw	2
  2658  001528  EC15  F02B         	call	_Lcd_Set_Cursor
  2659  00152C                     
  2660                           ;fs_menu_controller.c: 284:             sprintf(textCursor2,"%d               ",menu_val
      +                          ue.driver_time);
  2661  00152C  0EE3               	movlw	low stateMachine@textCursor2
  2662  00152E  0100               	movlb	0	; () banked
  2663  001530  6FCF               	movwf	sprintf@s& (0+255),b
  2664  001532  0E00               	movlw	high stateMachine@textCursor2
  2665  001534  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2666  001536  0E01               	movlw	low STR_4
  2667  001538  6FD1               	movwf	sprintf@fmt& (0+255),b
  2668  00153A  0E06               	movlw	high STR_4
  2669  00153C  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2670  00153E  C18F  F0D3         	movff	_menu_value,?_sprintf+4
  2671  001542  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  2672  001544  ECFD  F02B         	call	_sprintf	;wreg free
  2673  001548                     
  2674                           ;fs_menu_controller.c: 285:             Lcd_Write_String(textCursor2);
  2675  001548  0EE3               	movlw	low stateMachine@textCursor2
  2676  00154A  6E05               	movwf	Lcd_Write_String@a^0,c
  2677  00154C  0E00               	movlw	high stateMachine@textCursor2
  2678  00154E  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2679  001550  ECBB  F029         	call	_Lcd_Write_String	;wreg free
  2680  001554                     
  2681                           ;fs_menu_controller.c: 287:             if(timer_value.menu_login_delay == 100)
  2682  001554  0E64               	movlw	100
  2683  001556  0100               	movlb	0	; () banked
  2684  001558  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  2685  00155A  A4D8               	btfss	status,2,c
  2686  00155C  EFB2  F00A         	goto	u7301
  2687  001560  EFB4  F00A         	goto	u7300
  2688  001564                     u7301:
  2689  001564  EFB9  F00A         	goto	l5811
  2690  001568                     u7300:
  2691  001568                     l5809:
  2692                           
  2693                           ; BSR set to: 0
  2694                           ;fs_menu_controller.c: 288:             {;fs_menu_controller.c: 289:                 tim
      +                          er_value.menu_login_delay = 0;
  2695  001568  0E00               	movlw	0
  2696  00156A  6FFB               	movwf	(_timer_value+8)& (0+255),b
  2697                           
  2698                           ;fs_menu_controller.c: 290:                 menu_selected = PAUSE_MENU;
  2699  00156C  0E06               	movlw	6
  2700  00156E  0101               	movlb	1	; () banked
  2701  001570  6F9B               	movwf	_menu_selected& (0+255),b
  2702  001572                     l5811:
  2703                           
  2704                           ;fs_menu_controller.c: 293:         stopMotor();
  2705  001572  ECF4  F02C         	call	_stopMotor	;wreg free
  2706                           
  2707                           ;fs_menu_controller.c: 295:         break;
  2708  001576  EF40  F00E         	goto	l383
  2709  00157A                     l5813:
  2710                           
  2711                           ; BSR set to: 0
  2712                           ;fs_menu_controller.c: 299:             stopMotor();
  2713  00157A  ECF4  F02C         	call	_stopMotor	;wreg free
  2714  00157E                     
  2715                           ;fs_menu_controller.c: 301:             if (menu_flags.menu_input_flag == 1)
  2716  00157E  0100               	movlb	0	; () banked
  2717  001580  A1FD               	btfss	_menu_flags& (0+255),0,b
  2718  001582  EFC5  F00A         	goto	u7311
  2719  001586  EFC7  F00A         	goto	u7310
  2720  00158A                     u7311:
  2721  00158A  EFCB  F00A         	goto	l5821
  2722  00158E                     u7310:
  2723  00158E                     
  2724                           ; BSR set to: 0
  2725                           ;fs_menu_controller.c: 302:             {;fs_menu_controller.c: 303:                 men
      +                          u_flags.menu_input_flag = 0;
  2726  00158E  91FD               	bcf	_menu_flags& (0+255),0,b
  2727  001590                     
  2728                           ; BSR set to: 0
  2729                           ;fs_menu_controller.c: 304:                 menu_selected = SPEED_LIMIT_SETTING;
  2730  001590  0E03               	movlw	3
  2731  001592  0101               	movlb	1	; () banked
  2732  001594  6F9B               	movwf	_menu_selected& (0+255),b
  2733  001596                     l5821:
  2734                           
  2735                           ;fs_menu_controller.c: 307:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_value.stop_time < 250))
  2736  001596  0100               	movlb	0	; () banked
  2737  001598  A9FD               	btfss	_menu_flags& (0+255),4,b
  2738  00159A  EFD1  F00A         	goto	u7321
  2739  00159E  EFD3  F00A         	goto	u7320
  2740  0015A2                     u7321:
  2741  0015A2  EFE6  F00A         	goto	l5831
  2742  0015A6                     u7320:
  2743  0015A6                     
  2744                           ; BSR set to: 0
  2745  0015A6  0EFA               	movlw	250
  2746  0015A8  0101               	movlb	1	; () banked
  2747  0015AA  6190               	cpfslt	(_menu_value+1)& (0+255),b
  2748  0015AC  EFDA  F00A         	goto	u7331
  2749  0015B0  EFDC  F00A         	goto	u7330
  2750  0015B4                     u7331:
  2751  0015B4  EFE6  F00A         	goto	l5831
  2752  0015B8                     u7330:
  2753  0015B8                     
  2754                           ; BSR set to: 1
  2755                           ;fs_menu_controller.c: 308:             {;fs_menu_controller.c: 309:                 men
      +                          u_flags.menu_increase_flag = 0;
  2756  0015B8  0100               	movlb	0	; () banked
  2757  0015BA  99FD               	bcf	_menu_flags& (0+255),4,b
  2758  0015BC                     
  2759                           ; BSR set to: 0
  2760                           ;fs_menu_controller.c: 310:                 menu_value.stop_time += 10;
  2761  0015BC  0E0A               	movlw	10
  2762  0015BE  0101               	movlb	1	; () banked
  2763  0015C0  2790               	addwf	(_menu_value+1)& (0+255),f,b
  2764  0015C2                     
  2765                           ; BSR set to: 1
  2766                           ;fs_menu_controller.c: 311:                 eepromWrite(0x01,(uint8_t)menu_value.stop_ti
      +                          me);
  2767  0015C2  C190  F001         	movff	_menu_value+1,eepromWrite@data
  2768  0015C6  0E01               	movlw	1
  2769  0015C8  ECD1  F02D         	call	_eepromWrite
  2770  0015CC                     l5831:
  2771                           
  2772                           ;fs_menu_controller.c: 314:             if ((menu_flags.menu_decrease_flag == 1) && (men
      +                          u_value.stop_time > 10))
  2773  0015CC  0100               	movlb	0	; () banked
  2774  0015CE  ABFD               	btfss	_menu_flags& (0+255),5,b
  2775  0015D0  EFEC  F00A         	goto	u7341
  2776  0015D4  EFEE  F00A         	goto	u7340
  2777  0015D8                     u7341:
  2778  0015D8  EF01  F00B         	goto	l5841
  2779  0015DC                     u7340:
  2780  0015DC                     
  2781                           ; BSR set to: 0
  2782  0015DC  0E0A               	movlw	10
  2783  0015DE  0101               	movlb	1	; () banked
  2784  0015E0  6590               	cpfsgt	(_menu_value+1)& (0+255),b
  2785  0015E2  EFF5  F00A         	goto	u7351
  2786  0015E6  EFF7  F00A         	goto	u7350
  2787  0015EA                     u7351:
  2788  0015EA  EF01  F00B         	goto	l5841
  2789  0015EE                     u7350:
  2790  0015EE                     
  2791                           ; BSR set to: 1
  2792                           ;fs_menu_controller.c: 315:             {;fs_menu_controller.c: 316:                  me
      +                          nu_flags.menu_decrease_flag = 0;
  2793  0015EE  0100               	movlb	0	; () banked
  2794  0015F0  9BFD               	bcf	_menu_flags& (0+255),5,b
  2795  0015F2                     
  2796                           ; BSR set to: 0
  2797                           ;fs_menu_controller.c: 317:                  menu_value.stop_time -= 10;
  2798  0015F2  0E0A               	movlw	10
  2799  0015F4  0101               	movlb	1	; () banked
  2800  0015F6  5F90               	subwf	(_menu_value+1)& (0+255),f,b
  2801  0015F8                     
  2802                           ; BSR set to: 1
  2803                           ;fs_menu_controller.c: 318:                  eepromWrite(0x01,(uint8_t)menu_value.stop_t
      +                          ime);
  2804  0015F8  C190  F001         	movff	_menu_value+1,eepromWrite@data
  2805  0015FC  0E01               	movlw	1
  2806  0015FE  ECD1  F02D         	call	_eepromWrite
  2807  001602                     l5841:
  2808                           
  2809                           ;fs_menu_controller.c: 320:             Lcd_Set_Cursor(1,1);
  2810  001602  0E01               	movlw	1
  2811  001604  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2812  001606  0E01               	movlw	1
  2813  001608  EC15  F02B         	call	_Lcd_Set_Cursor
  2814  00160C                     
  2815                           ;fs_menu_controller.c: 321:             Lcd_Write_String("DURMA ZAMANI  ms");
  2816  00160C  0E79               	movlw	low STR_5
  2817  00160E  6E05               	movwf	Lcd_Write_String@a^0,c
  2818  001610  0E06               	movlw	high STR_5
  2819  001612  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2820  001614  ECBB  F029         	call	_Lcd_Write_String	;wreg free
  2821  001618                     
  2822                           ;fs_menu_controller.c: 322:             Lcd_Set_Cursor(2,1);
  2823  001618  0E01               	movlw	1
  2824  00161A  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2825  00161C  0E02               	movlw	2
  2826  00161E  EC15  F02B         	call	_Lcd_Set_Cursor
  2827  001622                     
  2828                           ;fs_menu_controller.c: 323:             sprintf(textCursor2,"%d               ",menu_val
      +                          ue.stop_time);
  2829  001622  0EE3               	movlw	low stateMachine@textCursor2
  2830  001624  0100               	movlb	0	; () banked
  2831  001626  6FCF               	movwf	sprintf@s& (0+255),b
  2832  001628  0E00               	movlw	high stateMachine@textCursor2
  2833  00162A  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2834  00162C  0E01               	movlw	low STR_4
  2835  00162E  6FD1               	movwf	sprintf@fmt& (0+255),b
  2836  001630  0E06               	movlw	high STR_4
  2837  001632  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2838  001634  C190  F0D3         	movff	_menu_value+1,?_sprintf+4
  2839  001638  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  2840  00163A  ECFD  F02B         	call	_sprintf	;wreg free
  2841  00163E                     
  2842                           ;fs_menu_controller.c: 324:             Lcd_Write_String(textCursor2);
  2843  00163E  0EE3               	movlw	low stateMachine@textCursor2
  2844  001640  6E05               	movwf	Lcd_Write_String@a^0,c
  2845  001642  0E00               	movlw	high stateMachine@textCursor2
  2846  001644  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2847  001646  ECBB  F029         	call	_Lcd_Write_String	;wreg free
  2848  00164A                     
  2849                           ;fs_menu_controller.c: 326:             if(timer_value.menu_login_delay == 100)
  2850  00164A  0E64               	movlw	100
  2851  00164C  0100               	movlb	0	; () banked
  2852  00164E  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  2853  001650  A4D8               	btfss	status,2,c
  2854  001652  EF2D  F00B         	goto	u7361
  2855  001656  EF2F  F00B         	goto	u7360
  2856  00165A                     u7361:
  2857  00165A  EF40  F00E         	goto	l383
  2858  00165E                     u7360:
  2859  00165E                     l5853:
  2860                           
  2861                           ; BSR set to: 0
  2862                           ;fs_menu_controller.c: 327:             {;fs_menu_controller.c: 328:                 tim
      +                          er_value.menu_login_delay = 0;
  2863  00165E  0E00               	movlw	0
  2864  001660  6FFB               	movwf	(_timer_value+8)& (0+255),b
  2865                           
  2866                           ;fs_menu_controller.c: 329:                 menu_selected = PAUSE_MENU;
  2867  001662  0E06               	movlw	6
  2868  001664  0101               	movlb	1	; () banked
  2869  001666  6F9B               	movwf	_menu_selected& (0+255),b
  2870  001668  EF40  F00E         	goto	l383
  2871  00166C                     l358:
  2872                           
  2873                           ; BSR set to: 0
  2874                           ;fs_menu_controller.c: 335:             if (menu_flags.menu_input_flag == 1)
  2875  00166C  A1FD               	btfss	_menu_flags& (0+255),0,b
  2876  00166E  EF3B  F00B         	goto	u7371
  2877  001672  EF3D  F00B         	goto	u7370
  2878  001676                     u7371:
  2879  001676  EF41  F00B         	goto	l5859
  2880  00167A                     u7370:
  2881  00167A                     
  2882                           ; BSR set to: 0
  2883                           ;fs_menu_controller.c: 336:             {;fs_menu_controller.c: 337:                 men
      +                          u_flags.menu_input_flag = 0;
  2884  00167A  91FD               	bcf	_menu_flags& (0+255),0,b
  2885  00167C                     
  2886                           ; BSR set to: 0
  2887                           ;fs_menu_controller.c: 338:                 menu_selected = DRIVER_TIME_SETTING;
  2888  00167C  0E01               	movlw	1
  2889  00167E  0101               	movlb	1	; () banked
  2890  001680  6F9B               	movwf	_menu_selected& (0+255),b
  2891  001682                     l5859:
  2892                           
  2893                           ;fs_menu_controller.c: 341:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_value.speed_limit < 5))
  2894  001682  0100               	movlb	0	; () banked
  2895  001684  A9FD               	btfss	_menu_flags& (0+255),4,b
  2896  001686  EF47  F00B         	goto	u7381
  2897  00168A  EF49  F00B         	goto	u7380
  2898  00168E                     u7381:
  2899  00168E  EF5B  F00B         	goto	l5869
  2900  001692                     u7380:
  2901  001692                     
  2902                           ; BSR set to: 0
  2903  001692  0E05               	movlw	5
  2904  001694  0101               	movlb	1	; () banked
  2905  001696  6191               	cpfslt	(_menu_value+2)& (0+255),b
  2906  001698  EF50  F00B         	goto	u7391
  2907  00169C  EF52  F00B         	goto	u7390
  2908  0016A0                     u7391:
  2909  0016A0  EF5B  F00B         	goto	l5869
  2910  0016A4                     u7390:
  2911  0016A4                     
  2912                           ; BSR set to: 1
  2913                           ;fs_menu_controller.c: 342:             {;fs_menu_controller.c: 343:                 men
      +                          u_flags.menu_increase_flag = 0;
  2914  0016A4  0100               	movlb	0	; () banked
  2915  0016A6  99FD               	bcf	_menu_flags& (0+255),4,b
  2916  0016A8                     
  2917                           ; BSR set to: 0
  2918                           ;fs_menu_controller.c: 344:                 menu_value.speed_limit += 1;
  2919  0016A8  0101               	movlb	1	; () banked
  2920  0016AA  2B91               	incf	(_menu_value+2)& (0+255),f,b
  2921  0016AC                     
  2922                           ; BSR set to: 1
  2923                           ;fs_menu_controller.c: 345:                 eepromWrite(0x02,menu_value.speed_limit);
  2924  0016AC  C191  F001         	movff	_menu_value+2,eepromWrite@data
  2925  0016B0  0E02               	movlw	2
  2926  0016B2  ECD1  F02D         	call	_eepromWrite
  2927  0016B6                     l5869:
  2928                           
  2929                           ;fs_menu_controller.c: 348:             if ((menu_flags.menu_decrease_flag == 1) && (men
      +                          u_value.speed_limit > 1))
  2930  0016B6  0100               	movlb	0	; () banked
  2931  0016B8  ABFD               	btfss	_menu_flags& (0+255),5,b
  2932  0016BA  EF61  F00B         	goto	u7401
  2933  0016BE  EF63  F00B         	goto	u7400
  2934  0016C2                     u7401:
  2935  0016C2  EF75  F00B         	goto	l5879
  2936  0016C6                     u7400:
  2937  0016C6                     
  2938                           ; BSR set to: 0
  2939  0016C6  0E01               	movlw	1
  2940  0016C8  0101               	movlb	1	; () banked
  2941  0016CA  6591               	cpfsgt	(_menu_value+2)& (0+255),b
  2942  0016CC  EF6A  F00B         	goto	u7411
  2943  0016D0  EF6C  F00B         	goto	u7410
  2944  0016D4                     u7411:
  2945  0016D4  EF75  F00B         	goto	l5879
  2946  0016D8                     u7410:
  2947  0016D8                     
  2948                           ; BSR set to: 1
  2949                           ;fs_menu_controller.c: 349:             {;fs_menu_controller.c: 350:                  me
      +                          nu_flags.menu_decrease_flag = 0;
  2950  0016D8  0100               	movlb	0	; () banked
  2951  0016DA  9BFD               	bcf	_menu_flags& (0+255),5,b
  2952  0016DC                     
  2953                           ; BSR set to: 0
  2954                           ;fs_menu_controller.c: 351:                  menu_value.speed_limit -= 1;
  2955  0016DC  0101               	movlb	1	; () banked
  2956  0016DE  0791               	decf	(_menu_value+2)& (0+255),f,b
  2957  0016E0                     
  2958                           ; BSR set to: 1
  2959                           ;fs_menu_controller.c: 352:                  eepromWrite(0x02,menu_value.speed_limit);
  2960  0016E0  C191  F001         	movff	_menu_value+2,eepromWrite@data
  2961  0016E4  0E02               	movlw	2
  2962  0016E6  ECD1  F02D         	call	_eepromWrite
  2963  0016EA                     l5879:
  2964                           
  2965                           ;fs_menu_controller.c: 354:             Lcd_Set_Cursor(1,1);
  2966  0016EA  0E01               	movlw	1
  2967  0016EC  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2968  0016EE  0E01               	movlw	1
  2969  0016F0  EC15  F02B         	call	_Lcd_Set_Cursor
  2970  0016F4                     
  2971                           ;fs_menu_controller.c: 355:             Lcd_Write_String("HIZ LiMiTi      ");
  2972  0016F4  0E24               	movlw	low STR_7
  2973  0016F6  6E05               	movwf	Lcd_Write_String@a^0,c
  2974  0016F8  0E06               	movlw	high STR_7
  2975  0016FA  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2976  0016FC  ECBB  F029         	call	_Lcd_Write_String	;wreg free
  2977  001700                     
  2978                           ;fs_menu_controller.c: 356:             Lcd_Set_Cursor(2,1);
  2979  001700  0E01               	movlw	1
  2980  001702  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2981  001704  0E02               	movlw	2
  2982  001706  EC15  F02B         	call	_Lcd_Set_Cursor
  2983  00170A                     
  2984                           ;fs_menu_controller.c: 357:             sprintf(textCursor2,"%d               ",menu_val
      +                          ue.speed_limit);
  2985  00170A  0EE3               	movlw	low stateMachine@textCursor2
  2986  00170C  0100               	movlb	0	; () banked
  2987  00170E  6FCF               	movwf	sprintf@s& (0+255),b
  2988  001710  0E00               	movlw	high stateMachine@textCursor2
  2989  001712  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2990  001714  0E01               	movlw	low STR_4
  2991  001716  6FD1               	movwf	sprintf@fmt& (0+255),b
  2992  001718  0E06               	movlw	high STR_4
  2993  00171A  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2994  00171C  C191  F0D3         	movff	_menu_value+2,?_sprintf+4
  2995  001720  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  2996  001722  ECFD  F02B         	call	_sprintf	;wreg free
  2997  001726                     
  2998                           ;fs_menu_controller.c: 358:             Lcd_Write_String(textCursor2);
  2999  001726  0EE3               	movlw	low stateMachine@textCursor2
  3000  001728  6E05               	movwf	Lcd_Write_String@a^0,c
  3001  00172A  0E00               	movlw	high stateMachine@textCursor2
  3002  00172C  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3003  00172E  ECBB  F029         	call	_Lcd_Write_String	;wreg free
  3004  001732                     
  3005                           ;fs_menu_controller.c: 360:             if(timer_value.menu_login_delay == 100)
  3006  001732  0E64               	movlw	100
  3007  001734  0100               	movlb	0	; () banked
  3008  001736  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  3009  001738  A4D8               	btfss	status,2,c
  3010  00173A  EFA1  F00B         	goto	u7421
  3011  00173E  EFA3  F00B         	goto	u7420
  3012  001742                     u7421:
  3013  001742  EFB9  F00A         	goto	l5811
  3014  001746                     u7420:
  3015  001746  EFB4  F00A         	goto	l5809
  3016  00174A                     l5895:
  3017                           
  3018                           ; BSR set to: 0
  3019                           ;fs_menu_controller.c: 371:             startIsClick = 0;
  3020  00174A  0E00               	movlw	0
  3021  00174C  0101               	movlb	1	; () banked
  3022  00174E  6F9D               	movwf	_startIsClick& (0+255),b
  3023                           
  3024                           ;fs_menu_controller.c: 372:             pauseIsClick = 0;
  3025  001750  0E00               	movlw	0
  3026  001752  0100               	movlb	0	; () banked
  3027  001754  6FFF               	movwf	_pauseIsClick& (0+255),b
  3028                           
  3029                           ;fs_menu_controller.c: 373:             stopIsClick = 1;
  3030  001756  0E01               	movlw	1
  3031  001758  0101               	movlb	1	; () banked
  3032  00175A  6F9C               	movwf	_stopIsClick& (0+255),b
  3033  00175C                     
  3034                           ; BSR set to: 1
  3035                           ;fs_menu_controller.c: 375:             Lcd_Set_Cursor(1,1);
  3036  00175C  0E01               	movlw	1
  3037  00175E  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3038  001760  0E01               	movlw	1
  3039  001762  EC15  F02B         	call	_Lcd_Set_Cursor
  3040  001766                     
  3041                           ;fs_menu_controller.c: 376:             Lcd_Write_String("ZAMAN DOLDU     ");
  3042  001766  0E46               	movlw	low STR_9
  3043  001768  6E05               	movwf	Lcd_Write_String@a^0,c
  3044  00176A  0E06               	movlw	high STR_9
  3045  00176C  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3046  00176E  ECBB  F029         	call	_Lcd_Write_String	;wreg free
  3047  001772                     
  3048                           ;fs_menu_controller.c: 378:             timer_value.remainingSecond = 0;
  3049  001772  0E00               	movlw	0
  3050  001774  0100               	movlb	0	; () banked
  3051  001776  6FF8               	movwf	(_timer_value+5)& (0+255),b
  3052  001778  0E00               	movlw	0
  3053  00177A  6FF7               	movwf	(_timer_value+4)& (0+255),b
  3054  00177C                     
  3055                           ; BSR set to: 0
  3056                           ;fs_menu_controller.c: 379:             timer_value.remainingMinute = 0;
  3057  00177C  0E00               	movlw	0
  3058  00177E  6FFA               	movwf	(_timer_value+7)& (0+255),b
  3059  001780  0E00               	movlw	0
  3060  001782  6FF9               	movwf	(_timer_value+6)& (0+255),b
  3061  001784                     
  3062                           ; BSR set to: 0
  3063                           ;fs_menu_controller.c: 380:              Lcd_Set_Cursor(2,1);
  3064  001784  0E01               	movlw	1
  3065  001786  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3066  001788  0E02               	movlw	2
  3067  00178A  EC15  F02B         	call	_Lcd_Set_Cursor
  3068  00178E                     
  3069                           ;fs_menu_controller.c: 381:             sprintf(textCursor2,"      %d:%d    ",timer_valu
      +                          e.remainingMinute,timer_value.remainingSecond);
  3070  00178E  0EE3               	movlw	low stateMachine@textCursor2
  3071  001790  0100               	movlb	0	; () banked
  3072  001792  6FCF               	movwf	sprintf@s& (0+255),b
  3073  001794  0E00               	movlw	high stateMachine@textCursor2
  3074  001796  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3075  001798  0E8A               	movlw	low STR_10
  3076  00179A  6FD1               	movwf	sprintf@fmt& (0+255),b
  3077  00179C  0E06               	movlw	high STR_10
  3078  00179E  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3079  0017A0  C0F9  F0D3         	movff	_timer_value+6,?_sprintf+4
  3080  0017A4  C0FA  F0D4         	movff	_timer_value+7,?_sprintf+5
  3081  0017A8  C0F7  F0D5         	movff	_timer_value+4,?_sprintf+6
  3082  0017AC  C0F8  F0D6         	movff	_timer_value+5,?_sprintf+7
  3083  0017B0  ECFD  F02B         	call	_sprintf	;wreg free
  3084  0017B4                     
  3085                           ;fs_menu_controller.c: 382:             Lcd_Write_String(textCursor2);
  3086  0017B4  0EE3               	movlw	low stateMachine@textCursor2
  3087  0017B6  6E05               	movwf	Lcd_Write_String@a^0,c
  3088  0017B8  0E00               	movlw	high stateMachine@textCursor2
  3089  0017BA  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3090  0017BC  ECBB  F029         	call	_Lcd_Write_String	;wreg free
  3091  0017C0                     
  3092                           ;fs_menu_controller.c: 384:         if (menu_flags.menu_start_flag == 1)
  3093  0017C0  0100               	movlb	0	; () banked
  3094  0017C2  A3FD               	btfss	_menu_flags& (0+255),1,b
  3095  0017C4  EFE6  F00B         	goto	u7431
  3096  0017C8  EFE8  F00B         	goto	u7430
  3097  0017CC                     u7431:
  3098  0017CC  EFFD  F00B         	goto	l5917
  3099  0017D0                     u7430:
  3100  0017D0                     
  3101                           ; BSR set to: 0
  3102                           ;fs_menu_controller.c: 385:         {;fs_menu_controller.c: 386:             menu_flags.
      +                          menu_start_flag = 0;
  3103  0017D0  93FD               	bcf	_menu_flags& (0+255),1,b
  3104  0017D2                     
  3105                           ; BSR set to: 0
  3106                           ;fs_menu_controller.c: 387:             menu_selected = START_MENU;
  3107  0017D2  0E05               	movlw	5
  3108  0017D4  0101               	movlb	1	; () banked
  3109  0017D6  6F9B               	movwf	_menu_selected& (0+255),b
  3110                           
  3111                           ;fs_menu_controller.c: 389:             startIsClick = 1;
  3112  0017D8  0E01               	movlw	1
  3113  0017DA  6F9D               	movwf	_startIsClick& (0+255),b
  3114                           
  3115                           ;fs_menu_controller.c: 390:             pauseIsClick = 0;
  3116  0017DC  0E00               	movlw	0
  3117  0017DE  0100               	movlb	0	; () banked
  3118  0017E0  6FFF               	movwf	_pauseIsClick& (0+255),b
  3119                           
  3120                           ;fs_menu_controller.c: 391:             stopIsClick = 0;
  3121  0017E2  0E00               	movlw	0
  3122  0017E4  0101               	movlb	1	; () banked
  3123  0017E6  6F9C               	movwf	_stopIsClick& (0+255),b
  3124                           
  3125                           ;fs_menu_controller.c: 392:             timer_value.second = 0;
  3126  0017E8  0E00               	movlw	0
  3127  0017EA  0100               	movlb	0	; () banked
  3128  0017EC  6FF4               	movwf	(_timer_value+1)& (0+255),b
  3129  0017EE  0E00               	movlw	0
  3130  0017F0  6FF3               	movwf	_timer_value& (0+255),b
  3131                           
  3132                           ;fs_menu_controller.c: 393:             timer_value.minute = 0;
  3133  0017F2  0E00               	movlw	0
  3134  0017F4  6FF6               	movwf	(_timer_value+3)& (0+255),b
  3135  0017F6  0E00               	movlw	0
  3136  0017F8  6FF5               	movwf	(_timer_value+2)& (0+255),b
  3137  0017FA                     l5917:
  3138                           
  3139                           ; BSR set to: 0
  3140                           ;fs_menu_controller.c: 396:         if ( timer_value.menu_login_delay == 100)
  3141  0017FA  0E64               	movlw	100
  3142  0017FC  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  3143  0017FE  A4D8               	btfss	status,2,c
  3144  001800  EF04  F00C         	goto	u7441
  3145  001804  EF06  F00C         	goto	u7440
  3146  001808                     u7441:
  3147  001808  EFB9  F00A         	goto	l5811
  3148  00180C                     u7440:
  3149  00180C                     
  3150                           ; BSR set to: 0
  3151                           ;fs_menu_controller.c: 397:         {;fs_menu_controller.c: 398:             timer_value
      +                          .menu_login_delay = 0;
  3152  00180C  0E00               	movlw	0
  3153  00180E  6FFB               	movwf	(_timer_value+8)& (0+255),b
  3154                           
  3155                           ;fs_menu_controller.c: 399:             menu_selected = DRIVER_TIME_SETTING;
  3156  001810  0E01               	movlw	1
  3157  001812  0101               	movlb	1	; () banked
  3158  001814  6F9B               	movwf	_menu_selected& (0+255),b
  3159  001816  EFB9  F00A         	goto	l5811
  3160  00181A                     l366:
  3161                           
  3162                           ; BSR set to: 0
  3163                           ;fs_menu_controller.c: 407:             timer_value.remainingMinute = menu_value.driver_
      +                          time;
  3164  00181A  C18F  F0F9         	movff	_menu_value,_timer_value+6
  3165  00181E  6BFA               	clrf	(_timer_value+7)& (0+255),b
  3166  001820                     
  3167                           ; BSR set to: 0
  3168                           ;fs_menu_controller.c: 408:             timer_value.remainingSecond = 0;
  3169  001820  0E00               	movlw	0
  3170  001822  6FF8               	movwf	(_timer_value+5)& (0+255),b
  3171  001824  0E00               	movlw	0
  3172  001826  6FF7               	movwf	(_timer_value+4)& (0+255),b
  3173                           
  3174                           ;fs_menu_controller.c: 409:             startIsClick = 1;
  3175  001828  0E01               	movlw	1
  3176  00182A  0101               	movlb	1	; () banked
  3177  00182C  6F9D               	movwf	_startIsClick& (0+255),b
  3178                           
  3179                           ;fs_menu_controller.c: 410:             stopIsClick = 0;
  3180  00182E  0E00               	movlw	0
  3181  001830  6F9C               	movwf	_stopIsClick& (0+255),b
  3182                           
  3183                           ;fs_menu_controller.c: 411:             menu_selected = MAIN_MENU;
  3184  001832  0E00               	movlw	0
  3185  001834  6F9B               	movwf	_menu_selected& (0+255),b
  3186                           
  3187                           ;fs_menu_controller.c: 412:         break;
  3188  001836  EF40  F00E         	goto	l383
  3189  00183A                     l5925:
  3190                           
  3191                           ; BSR set to: 0
  3192                           ;fs_menu_controller.c: 419:             Lcd_Set_Cursor(1,1);
  3193  00183A  0E01               	movlw	1
  3194  00183C  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3195  00183E  0E01               	movlw	1
  3196  001840  EC15  F02B         	call	_Lcd_Set_Cursor
  3197  001844                     
  3198                           ;fs_menu_controller.c: 420:             Lcd_Write_String("HAREKET DURDU   ");
  3199  001844  0E57               	movlw	low STR_11
  3200  001846  6E05               	movwf	Lcd_Write_String@a^0,c
  3201  001848  0E06               	movlw	high STR_11
  3202  00184A  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3203  00184C  ECBB  F029         	call	_Lcd_Write_String	;wreg free
  3204  001850                     
  3205                           ;fs_menu_controller.c: 421:             Lcd_Set_Cursor(2,1);
  3206  001850  0E01               	movlw	1
  3207  001852  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3208  001854  0E02               	movlw	2
  3209  001856  EC15  F02B         	call	_Lcd_Set_Cursor
  3210  00185A                     
  3211                           ;fs_menu_controller.c: 422:             sprintf(textCursor2,"      %d:%d    ",timer_valu
      +                          e.remainingMinute,timer_value.remainingSecond);
  3212  00185A  0EE3               	movlw	low stateMachine@textCursor2
  3213  00185C  0100               	movlb	0	; () banked
  3214  00185E  6FCF               	movwf	sprintf@s& (0+255),b
  3215  001860  0E00               	movlw	high stateMachine@textCursor2
  3216  001862  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3217  001864  0E8A               	movlw	low STR_10
  3218  001866  6FD1               	movwf	sprintf@fmt& (0+255),b
  3219  001868  0E06               	movlw	high STR_10
  3220  00186A  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3221  00186C  C0F9  F0D3         	movff	_timer_value+6,?_sprintf+4
  3222  001870  C0FA  F0D4         	movff	_timer_value+7,?_sprintf+5
  3223  001874  C0F7  F0D5         	movff	_timer_value+4,?_sprintf+6
  3224  001878  C0F8  F0D6         	movff	_timer_value+5,?_sprintf+7
  3225  00187C  ECFD  F02B         	call	_sprintf	;wreg free
  3226  001880                     
  3227                           ;fs_menu_controller.c: 423:             Lcd_Write_String(textCursor2);
  3228  001880  0EE3               	movlw	low stateMachine@textCursor2
  3229  001882  6E05               	movwf	Lcd_Write_String@a^0,c
  3230  001884  0E00               	movlw	high stateMachine@textCursor2
  3231  001886  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3232  001888  ECBB  F029         	call	_Lcd_Write_String	;wreg free
  3233  00188C                     
  3234                           ;fs_menu_controller.c: 425:             if (menu_flags.menu_start_flag == 1)
  3235  00188C  0100               	movlb	0	; () banked
  3236  00188E  A3FD               	btfss	_menu_flags& (0+255),1,b
  3237  001890  EF4C  F00C         	goto	u7451
  3238  001894  EF4E  F00C         	goto	u7450
  3239  001898                     u7451:
  3240  001898  EF5A  F00C         	goto	l368
  3241  00189C                     u7450:
  3242  00189C                     
  3243                           ; BSR set to: 0
  3244                           ;fs_menu_controller.c: 426:             {;fs_menu_controller.c: 427:                 men
      +                          u_flags.menu_start_flag = 0;
  3245  00189C  93FD               	bcf	_menu_flags& (0+255),1,b
  3246  00189E                     
  3247                           ; BSR set to: 0
  3248                           ;fs_menu_controller.c: 428:                 menu_selected = MAIN_MENU;
  3249  00189E  0E00               	movlw	0
  3250  0018A0  0101               	movlb	1	; () banked
  3251  0018A2  6F9B               	movwf	_menu_selected& (0+255),b
  3252                           
  3253                           ;fs_menu_controller.c: 430:                 startIsClick = 1;
  3254  0018A4  0E01               	movlw	1
  3255  0018A6  6F9D               	movwf	_startIsClick& (0+255),b
  3256                           
  3257                           ;fs_menu_controller.c: 431:                 pauseIsClick = 0;
  3258  0018A8  0E00               	movlw	0
  3259  0018AA  0100               	movlb	0	; () banked
  3260  0018AC  6FFF               	movwf	_pauseIsClick& (0+255),b
  3261                           
  3262                           ;fs_menu_controller.c: 432:                 stopIsClick = 0;
  3263  0018AE  0E00               	movlw	0
  3264  0018B0  0101               	movlb	1	; () banked
  3265  0018B2  6F9C               	movwf	_stopIsClick& (0+255),b
  3266  0018B4                     l368:
  3267                           
  3268                           ;fs_menu_controller.c: 435:             if ( (startIsClick == 0) && (pauseIsClick == 0) 
      +                          && (stopIsClick == 1) && (menu_selected == PAUSE_MENU))
  3269  0018B4  0101               	movlb	1	; () banked
  3270  0018B6  519D               	movf	_startIsClick& (0+255),w,b
  3271  0018B8  A4D8               	btfss	status,2,c
  3272  0018BA  EF61  F00C         	goto	u7461
  3273  0018BE  EF63  F00C         	goto	u7460
  3274  0018C2                     u7461:
  3275  0018C2  EF8E  F00C         	goto	l5951
  3276  0018C6                     u7460:
  3277  0018C6                     
  3278                           ; BSR set to: 1
  3279  0018C6  0100               	movlb	0	; () banked
  3280  0018C8  51FF               	movf	_pauseIsClick& (0+255),w,b
  3281  0018CA  A4D8               	btfss	status,2,c
  3282  0018CC  EF6A  F00C         	goto	u7471
  3283  0018D0  EF6C  F00C         	goto	u7470
  3284  0018D4                     u7471:
  3285  0018D4  EF8E  F00C         	goto	l5951
  3286  0018D8                     u7470:
  3287  0018D8                     
  3288                           ; BSR set to: 0
  3289  0018D8  0101               	movlb	1	; () banked
  3290  0018DA  059C               	decf	_stopIsClick& (0+255),w,b
  3291  0018DC  A4D8               	btfss	status,2,c
  3292  0018DE  EF73  F00C         	goto	u7481
  3293  0018E2  EF75  F00C         	goto	u7480
  3294  0018E6                     u7481:
  3295  0018E6  EF8E  F00C         	goto	l5951
  3296  0018EA                     u7480:
  3297  0018EA                     
  3298                           ; BSR set to: 1
  3299  0018EA  0E06               	movlw	6
  3300  0018EC  199B               	xorwf	_menu_selected& (0+255),w,b
  3301  0018EE  A4D8               	btfss	status,2,c
  3302  0018F0  EF7C  F00C         	goto	u7491
  3303  0018F4  EF7E  F00C         	goto	u7490
  3304  0018F8                     u7491:
  3305  0018F8  EF8E  F00C         	goto	l5951
  3306  0018FC                     u7490:
  3307  0018FC                     
  3308                           ; BSR set to: 1
  3309                           ;fs_menu_controller.c: 436:             {;fs_menu_controller.c: 437:                  ti
      +                          mer_value.remainingMinute = menu_value.driver_time;
  3310  0018FC  C18F  F0F9         	movff	_menu_value,_timer_value+6
  3311  001900  0100               	movlb	0	; () banked
  3312  001902  6BFA               	clrf	(_timer_value+7)& (0+255),b
  3313  001904                     
  3314                           ; BSR set to: 0
  3315                           ;fs_menu_controller.c: 438:                  timer_value.remainingSecond = 0;
  3316  001904  0E00               	movlw	0
  3317  001906  6FF8               	movwf	(_timer_value+5)& (0+255),b
  3318  001908  0E00               	movlw	0
  3319  00190A  6FF7               	movwf	(_timer_value+4)& (0+255),b
  3320                           
  3321                           ;fs_menu_controller.c: 439:                  timer_value.second = 0;
  3322  00190C  0E00               	movlw	0
  3323  00190E  6FF4               	movwf	(_timer_value+1)& (0+255),b
  3324  001910  0E00               	movlw	0
  3325  001912  6FF3               	movwf	_timer_value& (0+255),b
  3326                           
  3327                           ;fs_menu_controller.c: 440:                  timer_value.minute = 0;
  3328  001914  0E00               	movlw	0
  3329  001916  6FF6               	movwf	(_timer_value+3)& (0+255),b
  3330  001918  0E00               	movlw	0
  3331  00191A  6FF5               	movwf	(_timer_value+2)& (0+255),b
  3332  00191C                     l5951:
  3333                           
  3334                           ;fs_menu_controller.c: 444:             if ( timer_value.menu_login_delay == 100)
  3335  00191C  0E64               	movlw	100
  3336  00191E  0100               	movlb	0	; () banked
  3337  001920  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  3338  001922  A4D8               	btfss	status,2,c
  3339  001924  EF96  F00C         	goto	u7501
  3340  001928  EF98  F00C         	goto	u7500
  3341  00192C                     u7501:
  3342  00192C  EF9D  F00C         	goto	l5955
  3343  001930                     u7500:
  3344  001930                     
  3345                           ; BSR set to: 0
  3346                           ;fs_menu_controller.c: 445:             {;fs_menu_controller.c: 446:                 tim
      +                          er_value.menu_login_delay = 0;
  3347  001930  0E00               	movlw	0
  3348  001932  6FFB               	movwf	(_timer_value+8)& (0+255),b
  3349                           
  3350                           ;fs_menu_controller.c: 447:                 menu_selected = DRIVER_TIME_SETTING;
  3351  001934  0E01               	movlw	1
  3352  001936  0101               	movlb	1	; () banked
  3353  001938  6F9B               	movwf	_menu_selected& (0+255),b
  3354  00193A                     l5955:
  3355                           
  3356                           ;fs_menu_controller.c: 450:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_flags.menu_decrease_flag == 1))
  3357  00193A  0100               	movlb	0	; () banked
  3358  00193C  A9FD               	btfss	_menu_flags& (0+255),4,b
  3359  00193E  EFA3  F00C         	goto	u7511
  3360  001942  EFA5  F00C         	goto	u7510
  3361  001946                     u7511:
  3362  001946  EFB9  F00A         	goto	l5811
  3363  00194A                     u7510:
  3364  00194A                     
  3365                           ; BSR set to: 0
  3366  00194A  ABFD               	btfss	_menu_flags& (0+255),5,b
  3367  00194C  EFAA  F00C         	goto	u7521
  3368  001950  EFAC  F00C         	goto	u7520
  3369  001954                     u7521:
  3370  001954  EFB9  F00A         	goto	l5811
  3371  001958                     u7520:
  3372  001958                     
  3373                           ; BSR set to: 0
  3374                           ;fs_menu_controller.c: 451:             {;fs_menu_controller.c: 452:                 men
      +                          u_selected = SECRET_MENU;
  3375  001958  0E08               	movlw	8
  3376  00195A  0101               	movlb	1	; () banked
  3377  00195C  6F9B               	movwf	_menu_selected& (0+255),b
  3378                           
  3379                           ;fs_menu_controller.c: 453:                 secretMenuCounter = 1;
  3380  00195E  0E01               	movlw	1
  3381  001960  6F9A               	movwf	stateMachine@secretMenuCounter& (0+255),b
  3382  001962  EFB9  F00A         	goto	l5811
  3383  001966                     l5963:
  3384                           
  3385                           ; BSR set to: 0
  3386                           ;fs_menu_controller.c: 466:             stopMotor();
  3387  001966  ECF4  F02C         	call	_stopMotor	;wreg free
  3388  00196A                     
  3389                           ;fs_menu_controller.c: 468:             if (menu_flags.menu_input_flag == 1)
  3390  00196A  0100               	movlb	0	; () banked
  3391  00196C  A1FD               	btfss	_menu_flags& (0+255),0,b
  3392  00196E  EFBB  F00C         	goto	u7531
  3393  001972  EFBD  F00C         	goto	u7530
  3394  001976                     u7531:
  3395  001976  EFCA  F00C         	goto	l5975
  3396  00197A                     u7530:
  3397  00197A                     
  3398                           ; BSR set to: 0
  3399                           ;fs_menu_controller.c: 469:             {;fs_menu_controller.c: 470:                 men
      +                          u_flags.menu_input_flag = 0;
  3400  00197A  91FD               	bcf	_menu_flags& (0+255),0,b
  3401  00197C                     
  3402                           ; BSR set to: 0
  3403                           ;fs_menu_controller.c: 471:                 secretMenuCounter++;
  3404  00197C  0101               	movlb	1	; () banked
  3405  00197E  2B9A               	incf	stateMachine@secretMenuCounter& (0+255),f,b
  3406  001980                     
  3407                           ; BSR set to: 1
  3408                           ;fs_menu_controller.c: 473:                 if (secretMenuCounter >2)
  3409  001980  0E02               	movlw	2
  3410  001982  659A               	cpfsgt	stateMachine@secretMenuCounter& (0+255),b
  3411  001984  EFC6  F00C         	goto	u7541
  3412  001988  EFC8  F00C         	goto	u7540
  3413  00198C                     u7541:
  3414  00198C  EFCA  F00C         	goto	l5975
  3415  001990                     u7540:
  3416  001990                     
  3417                           ; BSR set to: 1
  3418                           ;fs_menu_controller.c: 474:                 {;fs_menu_controller.c: 475:                
      +                               secretMenuCounter = 1;
  3419  001990  0E01               	movlw	1
  3420  001992  6F9A               	movwf	stateMachine@secretMenuCounter& (0+255),b
  3421  001994                     l5975:
  3422                           
  3423                           ;fs_menu_controller.c: 479:             if (secretMenuCounter == 1)
  3424  001994  0101               	movlb	1	; () banked
  3425  001996  059A               	decf	stateMachine@secretMenuCounter& (0+255),w,b
  3426  001998  A4D8               	btfss	status,2,c
  3427  00199A  EFD1  F00C         	goto	u7551
  3428  00199E  EFD3  F00C         	goto	u7550
  3429  0019A2                     u7551:
  3430  0019A2  EF65  F00D         	goto	l6003
  3431  0019A6                     u7550:
  3432  0019A6                     
  3433                           ; BSR set to: 1
  3434                           ;fs_menu_controller.c: 480:             {;fs_menu_controller.c: 481:                 Lcd
      +                          _Set_Cursor(1,1);
  3435  0019A6  0E01               	movlw	1
  3436  0019A8  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3437  0019AA  0E01               	movlw	1
  3438  0019AC  EC15  F02B         	call	_Lcd_Set_Cursor
  3439  0019B0                     
  3440                           ;fs_menu_controller.c: 482:                 Lcd_Write_String("PID PARAM       ");
  3441  0019B0  0E13               	movlw	low STR_13
  3442  0019B2  6E05               	movwf	Lcd_Write_String@a^0,c
  3443  0019B4  0E06               	movlw	high STR_13
  3444  0019B6  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3445  0019B8  ECBB  F029         	call	_Lcd_Write_String	;wreg free
  3446  0019BC                     
  3447                           ;fs_menu_controller.c: 483:                 Lcd_Set_Cursor(2,1);
  3448  0019BC  0E01               	movlw	1
  3449  0019BE  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3450  0019C0  0E02               	movlw	2
  3451  0019C2  EC15  F02B         	call	_Lcd_Set_Cursor
  3452  0019C6                     
  3453                           ;fs_menu_controller.c: 484:                 sprintf(textCursor2,"Kp:%5.1f     ",KP);
  3454  0019C6  0EE3               	movlw	low stateMachine@textCursor2
  3455  0019C8  0100               	movlb	0	; () banked
  3456  0019CA  6FCF               	movwf	sprintf@s& (0+255),b
  3457  0019CC  0E00               	movlw	high stateMachine@textCursor2
  3458  0019CE  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3459  0019D0  0EA9               	movlw	low STR_14
  3460  0019D2  6FD1               	movwf	sprintf@fmt& (0+255),b
  3461  0019D4  0E06               	movlw	high STR_14
  3462  0019D6  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3463  0019D8  C1F3  F0D3         	movff	_KP,?_sprintf+4
  3464  0019DC  C1F4  F0D4         	movff	_KP+1,?_sprintf+5
  3465  0019E0  C1F5  F0D5         	movff	_KP+2,?_sprintf+6
  3466  0019E4  C1F6  F0D6         	movff	_KP+3,?_sprintf+7
  3467  0019E8  ECFD  F02B         	call	_sprintf	;wreg free
  3468  0019EC                     
  3469                           ;fs_menu_controller.c: 485:                 Lcd_Write_String(textCursor2);
  3470  0019EC  0EE3               	movlw	low stateMachine@textCursor2
  3471  0019EE  6E05               	movwf	Lcd_Write_String@a^0,c
  3472  0019F0  0E00               	movlw	high stateMachine@textCursor2
  3473  0019F2  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3474  0019F4  ECBB  F029         	call	_Lcd_Write_String	;wreg free
  3475  0019F8                     
  3476                           ;fs_menu_controller.c: 487:                 if ((menu_flags.menu_increase_flag == 1) && 
      +                          (KP < 2.5))
  3477  0019F8  0100               	movlb	0	; () banked
  3478  0019FA  A9FD               	btfss	_menu_flags& (0+255),4,b
  3479  0019FC  EF02  F00D         	goto	u7561
  3480  001A00  EF04  F00D         	goto	u7560
  3481  001A04                     u7561:
  3482  001A04  EF39  F00D         	goto	l5995
  3483  001A08                     u7560:
  3484  001A08                     
  3485                           ; BSR set to: 0
  3486  001A08  C1F3  F035         	movff	_KP,___flge@ff1
  3487  001A0C  C1F4  F036         	movff	_KP+1,___flge@ff1+1
  3488  001A10  C1F5  F037         	movff	_KP+2,___flge@ff1+2
  3489  001A14  C1F6  F038         	movff	_KP+3,___flge@ff1+3
  3490  001A18  0E00               	movlw	0
  3491  001A1A  6E39               	movwf	___flge@ff2^0,c
  3492  001A1C  0E00               	movlw	0
  3493  001A1E  6E3A               	movwf	(___flge@ff2+1)^0,c
  3494  001A20  0E20               	movlw	32
  3495  001A22  6E3B               	movwf	(___flge@ff2+2)^0,c
  3496  001A24  0E40               	movlw	64
  3497  001A26  6E3C               	movwf	(___flge@ff2+3)^0,c
  3498  001A28  EC5E  F025         	call	___flge	;wreg free
  3499  001A2C  B0D8               	btfsc	status,0,c
  3500  001A2E  EF1B  F00D         	goto	u7571
  3501  001A32  EF1D  F00D         	goto	u7570
  3502  001A36                     u7571:
  3503  001A36  EF39  F00D         	goto	l5995
  3504  001A3A                     u7570:
  3505  001A3A                     
  3506                           ;fs_menu_controller.c: 488:                 {;fs_menu_controller.c: 489:                
      +                               menu_flags.menu_increase_flag = 0;
  3507  001A3A  0100               	movlb	0	; () banked
  3508  001A3C  99FD               	bcf	_menu_flags& (0+255),4,b
  3509  001A3E                     
  3510                           ; BSR set to: 0
  3511                           ;fs_menu_controller.c: 490:                     KP += 0.1;
  3512  001A3E  C1F3  F035         	movff	_KP,___fladd@b
  3513  001A42  C1F4  F036         	movff	_KP+1,___fladd@b+1
  3514  001A46  C1F5  F037         	movff	_KP+2,___fladd@b+2
  3515  001A4A  C1F6  F038         	movff	_KP+3,___fladd@b+3
  3516  001A4E  0ECD               	movlw	205
  3517  001A50  6E39               	movwf	___fladd@a^0,c
  3518  001A52  0ECC               	movlw	204
  3519  001A54  6E3A               	movwf	(___fladd@a+1)^0,c
  3520  001A56  0ECC               	movlw	204
  3521  001A58  6E3B               	movwf	(___fladd@a+2)^0,c
  3522  001A5A  0E3D               	movlw	61
  3523  001A5C  6E3C               	movwf	(___fladd@a+3)^0,c
  3524  001A5E  EC5F  F015         	call	___fladd	;wreg free
  3525  001A62  C035  F1F3         	movff	?___fladd,_KP
  3526  001A66  C036  F1F4         	movff	?___fladd+1,_KP+1
  3527  001A6A  C037  F1F5         	movff	?___fladd+2,_KP+2
  3528  001A6E  C038  F1F6         	movff	?___fladd+3,_KP+3
  3529  001A72                     l5995:
  3530                           
  3531                           ;fs_menu_controller.c: 493:                 if ((menu_flags.menu_decrease_flag == 1) && 
      +                          (KP >= 0))
  3532  001A72  0100               	movlb	0	; () banked
  3533  001A74  ABFD               	btfss	_menu_flags& (0+255),5,b
  3534  001A76  EF3F  F00D         	goto	u7581
  3535  001A7A  EF41  F00D         	goto	u7580
  3536  001A7E                     u7581:
  3537  001A7E  EF65  F00D         	goto	l6003
  3538  001A82                     u7580:
  3539  001A82                     
  3540                           ; BSR set to: 0
  3541  001A82  0101               	movlb	1	; () banked
  3542  001A84  BFF6               	btfsc	(_KP+3)& (0+255),7,b
  3543  001A86  EF47  F00D         	goto	u7591
  3544  001A8A  EF49  F00D         	goto	u7590
  3545  001A8E                     u7591:
  3546  001A8E  EF65  F00D         	goto	l6003
  3547  001A92                     u7590:
  3548  001A92                     
  3549                           ; BSR set to: 1
  3550                           ;fs_menu_controller.c: 494:                 {;fs_menu_controller.c: 495:                
      +                               menu_flags.menu_decrease_flag = 0;
  3551  001A92  0100               	movlb	0	; () banked
  3552  001A94  9BFD               	bcf	_menu_flags& (0+255),5,b
  3553  001A96                     
  3554                           ; BSR set to: 0
  3555                           ;fs_menu_controller.c: 496:                      KP -= 0.1;
  3556  001A96  C1F3  F045         	movff	_KP,___flsub@b
  3557  001A9A  C1F4  F046         	movff	_KP+1,___flsub@b+1
  3558  001A9E  C1F5  F047         	movff	_KP+2,___flsub@b+2
  3559  001AA2  C1F6  F048         	movff	_KP+3,___flsub@b+3
  3560  001AA6  0ECD               	movlw	205
  3561  001AA8  6E49               	movwf	___flsub@a^0,c
  3562  001AAA  0ECC               	movlw	204
  3563  001AAC  6E4A               	movwf	(___flsub@a+1)^0,c
  3564  001AAE  0ECC               	movlw	204
  3565  001AB0  6E4B               	movwf	(___flsub@a+2)^0,c
  3566  001AB2  0E3D               	movlw	61
  3567  001AB4  6E4C               	movwf	(___flsub@a+3)^0,c
  3568  001AB6  EC4F  F02C         	call	___flsub	;wreg free
  3569  001ABA  C045  F1F3         	movff	?___flsub,_KP
  3570  001ABE  C046  F1F4         	movff	?___flsub+1,_KP+1
  3571  001AC2  C047  F1F5         	movff	?___flsub+2,_KP+2
  3572  001AC6  C048  F1F6         	movff	?___flsub+3,_KP+3
  3573  001ACA                     l6003:
  3574                           
  3575                           ;fs_menu_controller.c: 500:             if (secretMenuCounter == 2)
  3576  001ACA  0E02               	movlw	2
  3577  001ACC  0101               	movlb	1	; () banked
  3578  001ACE  199A               	xorwf	stateMachine@secretMenuCounter& (0+255),w,b
  3579  001AD0  A4D8               	btfss	status,2,c
  3580  001AD2  EF6D  F00D         	goto	u7601
  3581  001AD6  EF6F  F00D         	goto	u7600
  3582  001ADA                     u7601:
  3583  001ADA  EF01  F00E         	goto	l6031
  3584  001ADE                     u7600:
  3585  001ADE                     
  3586                           ; BSR set to: 1
  3587                           ;fs_menu_controller.c: 501:             {;fs_menu_controller.c: 502:                 Lcd
      +                          _Set_Cursor(1,1);
  3588  001ADE  0E01               	movlw	1
  3589  001AE0  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3590  001AE2  0E01               	movlw	1
  3591  001AE4  EC15  F02B         	call	_Lcd_Set_Cursor
  3592  001AE8                     
  3593                           ;fs_menu_controller.c: 503:                 Lcd_Write_String("PID PARAM       ");
  3594  001AE8  0E13               	movlw	low STR_13
  3595  001AEA  6E05               	movwf	Lcd_Write_String@a^0,c
  3596  001AEC  0E06               	movlw	high STR_13
  3597  001AEE  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3598  001AF0  ECBB  F029         	call	_Lcd_Write_String	;wreg free
  3599  001AF4                     
  3600                           ;fs_menu_controller.c: 504:                 Lcd_Set_Cursor(2,1);
  3601  001AF4  0E01               	movlw	1
  3602  001AF6  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3603  001AF8  0E02               	movlw	2
  3604  001AFA  EC15  F02B         	call	_Lcd_Set_Cursor
  3605  001AFE                     
  3606                           ;fs_menu_controller.c: 505:                 sprintf(textCursor2,"Kd:%5.1f    ",KD);
  3607  001AFE  0EE3               	movlw	low stateMachine@textCursor2
  3608  001B00  0100               	movlb	0	; () banked
  3609  001B02  6FCF               	movwf	sprintf@s& (0+255),b
  3610  001B04  0E00               	movlw	high stateMachine@textCursor2
  3611  001B06  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3612  001B08  0EB7               	movlw	low STR_16
  3613  001B0A  6FD1               	movwf	sprintf@fmt& (0+255),b
  3614  001B0C  0E06               	movlw	high STR_16
  3615  001B0E  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3616  001B10  C1EF  F0D3         	movff	_KD,?_sprintf+4
  3617  001B14  C1F0  F0D4         	movff	_KD+1,?_sprintf+5
  3618  001B18  C1F1  F0D5         	movff	_KD+2,?_sprintf+6
  3619  001B1C  C1F2  F0D6         	movff	_KD+3,?_sprintf+7
  3620  001B20  ECFD  F02B         	call	_sprintf	;wreg free
  3621  001B24                     
  3622                           ;fs_menu_controller.c: 506:                 Lcd_Write_String(textCursor2);
  3623  001B24  0EE3               	movlw	low stateMachine@textCursor2
  3624  001B26  6E05               	movwf	Lcd_Write_String@a^0,c
  3625  001B28  0E00               	movlw	high stateMachine@textCursor2
  3626  001B2A  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3627  001B2C  ECBB  F029         	call	_Lcd_Write_String	;wreg free
  3628  001B30                     
  3629                           ;fs_menu_controller.c: 508:                 if ((menu_flags.menu_increase_flag == 1) && 
      +                          (KD < 2.5))
  3630  001B30  0100               	movlb	0	; () banked
  3631  001B32  A9FD               	btfss	_menu_flags& (0+255),4,b
  3632  001B34  EF9E  F00D         	goto	u7611
  3633  001B38  EFA0  F00D         	goto	u7610
  3634  001B3C                     u7611:
  3635  001B3C  EFD5  F00D         	goto	l6023
  3636  001B40                     u7610:
  3637  001B40                     
  3638                           ; BSR set to: 0
  3639  001B40  C1EF  F035         	movff	_KD,___flge@ff1
  3640  001B44  C1F0  F036         	movff	_KD+1,___flge@ff1+1
  3641  001B48  C1F1  F037         	movff	_KD+2,___flge@ff1+2
  3642  001B4C  C1F2  F038         	movff	_KD+3,___flge@ff1+3
  3643  001B50  0E00               	movlw	0
  3644  001B52  6E39               	movwf	___flge@ff2^0,c
  3645  001B54  0E00               	movlw	0
  3646  001B56  6E3A               	movwf	(___flge@ff2+1)^0,c
  3647  001B58  0E20               	movlw	32
  3648  001B5A  6E3B               	movwf	(___flge@ff2+2)^0,c
  3649  001B5C  0E40               	movlw	64
  3650  001B5E  6E3C               	movwf	(___flge@ff2+3)^0,c
  3651  001B60  EC5E  F025         	call	___flge	;wreg free
  3652  001B64  B0D8               	btfsc	status,0,c
  3653  001B66  EFB7  F00D         	goto	u7621
  3654  001B6A  EFB9  F00D         	goto	u7620
  3655  001B6E                     u7621:
  3656  001B6E  EFD5  F00D         	goto	l6023
  3657  001B72                     u7620:
  3658  001B72                     
  3659                           ;fs_menu_controller.c: 509:                 {;fs_menu_controller.c: 510:                
      +                               menu_flags.menu_increase_flag = 0;
  3660  001B72  0100               	movlb	0	; () banked
  3661  001B74  99FD               	bcf	_menu_flags& (0+255),4,b
  3662  001B76                     
  3663                           ; BSR set to: 0
  3664                           ;fs_menu_controller.c: 511:                     KD += 0.1;
  3665  001B76  C1EF  F035         	movff	_KD,___fladd@b
  3666  001B7A  C1F0  F036         	movff	_KD+1,___fladd@b+1
  3667  001B7E  C1F1  F037         	movff	_KD+2,___fladd@b+2
  3668  001B82  C1F2  F038         	movff	_KD+3,___fladd@b+3
  3669  001B86  0ECD               	movlw	205
  3670  001B88  6E39               	movwf	___fladd@a^0,c
  3671  001B8A  0ECC               	movlw	204
  3672  001B8C  6E3A               	movwf	(___fladd@a+1)^0,c
  3673  001B8E  0ECC               	movlw	204
  3674  001B90  6E3B               	movwf	(___fladd@a+2)^0,c
  3675  001B92  0E3D               	movlw	61
  3676  001B94  6E3C               	movwf	(___fladd@a+3)^0,c
  3677  001B96  EC5F  F015         	call	___fladd	;wreg free
  3678  001B9A  C035  F1EF         	movff	?___fladd,_KD
  3679  001B9E  C036  F1F0         	movff	?___fladd+1,_KD+1
  3680  001BA2  C037  F1F1         	movff	?___fladd+2,_KD+2
  3681  001BA6  C038  F1F2         	movff	?___fladd+3,_KD+3
  3682  001BAA                     l6023:
  3683                           
  3684                           ;fs_menu_controller.c: 514:                 if ((menu_flags.menu_decrease_flag == 1) && 
      +                          (KD >= 0))
  3685  001BAA  0100               	movlb	0	; () banked
  3686  001BAC  ABFD               	btfss	_menu_flags& (0+255),5,b
  3687  001BAE  EFDB  F00D         	goto	u7631
  3688  001BB2  EFDD  F00D         	goto	u7630
  3689  001BB6                     u7631:
  3690  001BB6  EF01  F00E         	goto	l6031
  3691  001BBA                     u7630:
  3692  001BBA                     
  3693                           ; BSR set to: 0
  3694  001BBA  0101               	movlb	1	; () banked
  3695  001BBC  BFF2               	btfsc	(_KD+3)& (0+255),7,b
  3696  001BBE  EFE3  F00D         	goto	u7641
  3697  001BC2  EFE5  F00D         	goto	u7640
  3698  001BC6                     u7641:
  3699  001BC6  EF01  F00E         	goto	l6031
  3700  001BCA                     u7640:
  3701  001BCA                     
  3702                           ; BSR set to: 1
  3703                           ;fs_menu_controller.c: 515:                 {;fs_menu_controller.c: 516:                
      +                               menu_flags.menu_decrease_flag = 0;
  3704  001BCA  0100               	movlb	0	; () banked
  3705  001BCC  9BFD               	bcf	_menu_flags& (0+255),5,b
  3706  001BCE                     
  3707                           ; BSR set to: 0
  3708                           ;fs_menu_controller.c: 517:                      KD -= 0.1;
  3709  001BCE  C1EF  F045         	movff	_KD,___flsub@b
  3710  001BD2  C1F0  F046         	movff	_KD+1,___flsub@b+1
  3711  001BD6  C1F1  F047         	movff	_KD+2,___flsub@b+2
  3712  001BDA  C1F2  F048         	movff	_KD+3,___flsub@b+3
  3713  001BDE  0ECD               	movlw	205
  3714  001BE0  6E49               	movwf	___flsub@a^0,c
  3715  001BE2  0ECC               	movlw	204
  3716  001BE4  6E4A               	movwf	(___flsub@a+1)^0,c
  3717  001BE6  0ECC               	movlw	204
  3718  001BE8  6E4B               	movwf	(___flsub@a+2)^0,c
  3719  001BEA  0E3D               	movlw	61
  3720  001BEC  6E4C               	movwf	(___flsub@a+3)^0,c
  3721  001BEE  EC4F  F02C         	call	___flsub	;wreg free
  3722  001BF2  C045  F1EF         	movff	?___flsub,_KD
  3723  001BF6  C046  F1F0         	movff	?___flsub+1,_KD+1
  3724  001BFA  C047  F1F1         	movff	?___flsub+2,_KD+2
  3725  001BFE  C048  F1F2         	movff	?___flsub+3,_KD+3
  3726  001C02                     l6031:
  3727                           
  3728                           ;fs_menu_controller.c: 521:             if ( timer_value.menu_login_delay == 100)
  3729  001C02  0E64               	movlw	100
  3730  001C04  0100               	movlb	0	; () banked
  3731  001C06  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  3732  001C08  A4D8               	btfss	status,2,c
  3733  001C0A  EF09  F00E         	goto	u7651
  3734  001C0E  EF0B  F00E         	goto	u7650
  3735  001C12                     u7651:
  3736  001C12  EF40  F00E         	goto	l383
  3737  001C16                     u7650:
  3738  001C16  EF2F  F00B         	goto	l5853
  3739  001C1A                     l6037:
  3740  001C1A  0101               	movlb	1	; () banked
  3741  001C1C  519B               	movf	_menu_selected& (0+255),w,b
  3742  001C1E  0100               	movlb	0	; () banked
  3743  001C20  6FE1               	movwf	??_stateMachine& (0+255),b
  3744  001C22  6BE2               	clrf	(??_stateMachine+1)& (0+255),b
  3745                           
  3746                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3747                           ; Switch size 1, requested type "simple"
  3748                           ; Number of cases is 1, Range of values is 0 to 0
  3749                           ; switch strategies available:
  3750                           ; Name         Instructions Cycles
  3751                           ; simple_byte            4     3 (average)
  3752                           ;	Chosen strategy is simple_byte
  3753  001C24  51E2               	movf	(??_stateMachine+1)& (0+255),w,b
  3754  001C26  0A00               	xorlw	0	; case 0
  3755  001C28  B4D8               	btfsc	status,2,c
  3756  001C2A  EF19  F00E         	goto	l6277
  3757  001C2E  EF40  F00E         	goto	l383
  3758  001C32                     l6277:
  3759                           
  3760                           ; BSR set to: 0
  3761                           ; Switch size 1, requested type "simple"
  3762                           ; Number of cases is 9, Range of values is 0 to 8
  3763                           ; switch strategies available:
  3764                           ; Name         Instructions Cycles
  3765                           ; simple_byte           28    15 (average)
  3766                           ;	Chosen strategy is simple_byte
  3767  001C32  51E1               	movf	??_stateMachine& (0+255),w,b
  3768  001C34  0A00               	xorlw	0	; case 0
  3769  001C36  B4D8               	btfsc	status,2,c
  3770  001C38  EF57  F009         	goto	l5707
  3771  001C3C  0A01               	xorlw	1	; case 1
  3772  001C3E  B4D8               	btfsc	status,2,c
  3773  001C40  EF27  F00A         	goto	l348
  3774  001C44  0A03               	xorlw	3	; case 2
  3775  001C46  B4D8               	btfsc	status,2,c
  3776  001C48  EFBD  F00A         	goto	l5813
  3777  001C4C  0A01               	xorlw	1	; case 3
  3778  001C4E  B4D8               	btfsc	status,2,c
  3779  001C50  EF36  F00B         	goto	l358
  3780  001C54  0A07               	xorlw	7	; case 4
  3781  001C56  B4D8               	btfsc	status,2,c
  3782  001C58  EFA5  F00B         	goto	l5895
  3783  001C5C  0A01               	xorlw	1	; case 5
  3784  001C5E  B4D8               	btfsc	status,2,c
  3785  001C60  EF0D  F00C         	goto	l366
  3786  001C64  0A03               	xorlw	3	; case 6
  3787  001C66  B4D8               	btfsc	status,2,c
  3788  001C68  EF1D  F00C         	goto	l5925
  3789  001C6C  0A01               	xorlw	1	; case 7
  3790  001C6E  B4D8               	btfsc	status,2,c
  3791  001C70  EF40  F00E         	goto	l383
  3792  001C74  0A0F               	xorlw	15	; case 8
  3793  001C76  B4D8               	btfsc	status,2,c
  3794  001C78  EFB3  F00C         	goto	l5963
  3795  001C7C  EF40  F00E         	goto	l383
  3796  001C80                     l383:
  3797  001C80  0012               	return		;funcret
  3798  001C82                     __end_of_stateMachine:
  3799                           	callstack 0
  3800                           
  3801 ;; *************** function _stopMotor *****************
  3802 ;; Defined at:
  3803 ;;		line 79 in file "fs_speed_controller.c"
  3804 ;; Parameters:    Size  Location     Type
  3805 ;;		None
  3806 ;; Auto vars:     Size  Location     Type
  3807 ;;		None
  3808 ;; Return value:  Size  Location     Type
  3809 ;;                  1    wreg      void 
  3810 ;; Registers used:
  3811 ;;		wreg, status,2, status,0, cstack
  3812 ;; Tracked objects:
  3813 ;;		On entry : 0/0
  3814 ;;		On exit  : 0/0
  3815 ;;		Unchanged: 0/0
  3816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3817 ;;      Params:         0       0       0       0       0       0       0
  3818 ;;      Locals:         0       0       0       0       0       0       0
  3819 ;;      Temps:          0       0       0       0       0       0       0
  3820 ;;      Totals:         0       0       0       0       0       0       0
  3821 ;;Total ram usage:        0 bytes
  3822 ;; Hardware stack levels used:    1
  3823 ;; Hardware stack levels required when called:    3
  3824 ;; This function calls:
  3825 ;;		_PWM1_setDC
  3826 ;;		_PWM2_setDC
  3827 ;; This function is called by:
  3828 ;;		_stateMachine
  3829 ;; This function uses a non-reentrant model
  3830 ;;
  3831                           
  3832                           	psect	text7
  3833  0059E8                     __ptext7:
  3834                           	callstack 0
  3835  0059E8                     _stopMotor:
  3836                           	callstack 25
  3837  0059E8                     
  3838                           ;fs_speed_controller.c: 81:     controller.rightMotorSpeed = 0;
  3839  0059E8  0E00               	movlw	0
  3840  0059EA  0101               	movlb	1	; () banked
  3841  0059EC  6F59               	movwf	(_controller+9)& (0+255),b
  3842  0059EE  0E00               	movlw	0
  3843  0059F0  6F58               	movwf	(_controller+8)& (0+255),b
  3844                           
  3845                           ;fs_speed_controller.c: 82:     controller.leftMotorSpeed = 0;
  3846  0059F2  0E00               	movlw	0
  3847  0059F4  6F57               	movwf	(_controller+7)& (0+255),b
  3848  0059F6  0E00               	movlw	0
  3849  0059F8  6F56               	movwf	(_controller+6)& (0+255),b
  3850                           
  3851                           ;fs_speed_controller.c: 83:     driver_limit.ortalama = 0;
  3852  0059FA  0E00               	movlw	0
  3853  0059FC  6F7B               	movwf	(_driver_limit+8)& (0+255),b
  3854  0059FE  0E00               	movlw	0
  3855  005A00  6F7C               	movwf	(_driver_limit+9)& (0+255),b
  3856  005A02  0E00               	movlw	0
  3857  005A04  6F7D               	movwf	(_driver_limit+10)& (0+255),b
  3858  005A06  0E00               	movlw	0
  3859  005A08  6F7E               	movwf	(_driver_limit+11)& (0+255),b
  3860  005A0A                     
  3861                           ; BSR set to: 1
  3862                           ;fs_speed_controller.c: 84:     PWM1_setDC(controller.leftMotorSpeed);
  3863  005A0A  C156  F058         	movff	_controller+6,PWM1_setDC@dutycycle
  3864  005A0E  C157  F059         	movff	_controller+7,PWM1_setDC@dutycycle+1
  3865  005A12  EC37  F02A         	call	_PWM1_setDC	;wreg free
  3866  005A16                     
  3867                           ;fs_speed_controller.c: 85:     PWM2_setDC(controller.rightMotorSpeed);
  3868  005A16  C158  F058         	movff	_controller+8,PWM2_setDC@dutycycle
  3869  005A1A  C159  F059         	movff	_controller+9,PWM2_setDC@dutycycle+1
  3870  005A1E  ECFA  F029         	call	_PWM2_setDC	;wreg free
  3871  005A22  0012               	return		;funcret
  3872  005A24                     __end_of_stopMotor:
  3873                           	callstack 0
  3874                           
  3875 ;; *************** function _startMotor *****************
  3876 ;; Defined at:
  3877 ;;		line 95 in file "fs_speed_controller.c"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;		None
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;		None
  3882 ;; Return value:  Size  Location     Type
  3883 ;;                  1    wreg      void 
  3884 ;; Registers used:
  3885 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/0
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3891 ;;      Params:         0       0       0       0       0       0       0
  3892 ;;      Locals:         0       0       0       0       0       0       0
  3893 ;;      Temps:          0       0       0       0       0       0       0
  3894 ;;      Totals:         0       0       0       0       0       0       0
  3895 ;;Total ram usage:        0 bytes
  3896 ;; Hardware stack levels used:    1
  3897 ;; Hardware stack levels required when called:    3
  3898 ;; This function calls:
  3899 ;;		_PWM1_setDC
  3900 ;;		_PWM2_setDC
  3901 ;;		_calculatedAverageValue
  3902 ;;		_scanAdcConversion
  3903 ;;		_speedControl
  3904 ;; This function is called by:
  3905 ;;		_stateMachine
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           
  3909                           	psect	text8
  3910  005ACC                     __ptext8:
  3911                           	callstack 0
  3912  005ACC                     _startMotor:
  3913                           	callstack 25
  3914  005ACC                     
  3915                           ;fs_speed_controller.c: 97:         scanAdcConversion();
  3916  005ACC  EC41  F00E         	call	_scanAdcConversion	;wreg free
  3917  005AD0                     
  3918                           ;fs_speed_controller.c: 98:         calculatedAverageValue();
  3919  005AD0  ECA1  F01B         	call	_calculatedAverageValue	;wreg free
  3920  005AD4                     
  3921                           ;fs_speed_controller.c: 99:         speedControl(driver_limit.ortalama);
  3922  005AD4  C17B  F058         	movff	_driver_limit+8,speedControl@position
  3923  005AD8  C17C  F059         	movff	_driver_limit+9,speedControl@position+1
  3924  005ADC  C17D  F05A         	movff	_driver_limit+10,speedControl@position+2
  3925  005AE0  C17E  F05B         	movff	_driver_limit+11,speedControl@position+3
  3926  005AE4  EC90  F01F         	call	_speedControl	;wreg free
  3927                           
  3928                           ;fs_speed_controller.c: 100:         PWM1_setDC(controller.leftMotorSpeed);
  3929  005AE8  C156  F058         	movff	_controller+6,PWM1_setDC@dutycycle
  3930  005AEC  C157  F059         	movff	_controller+7,PWM1_setDC@dutycycle+1
  3931  005AF0  EC37  F02A         	call	_PWM1_setDC	;wreg free
  3932                           
  3933                           ;fs_speed_controller.c: 101:         PWM2_setDC(controller.rightMotorSpeed);
  3934  005AF4  C158  F058         	movff	_controller+8,PWM2_setDC@dutycycle
  3935  005AF8  C159  F059         	movff	_controller+9,PWM2_setDC@dutycycle+1
  3936  005AFC  ECFA  F029         	call	_PWM2_setDC	;wreg free
  3937  005B00  0012               	return		;funcret
  3938  005B02                     __end_of_startMotor:
  3939                           	callstack 0
  3940                           
  3941 ;; *************** function _speedControl *****************
  3942 ;; Defined at:
  3943 ;;		line 38 in file "fs_speed_controller.c"
  3944 ;; Parameters:    Size  Location     Type
  3945 ;;  position        4   87[COMRAM] float 
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;  pos             4    0        float 
  3948 ;; Return value:  Size  Location     Type
  3949 ;;                  1    wreg      void 
  3950 ;; Registers used:
  3951 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3952 ;; Tracked objects:
  3953 ;;		On entry : 0/0
  3954 ;;		On exit  : 0/0
  3955 ;;		Unchanged: 0/0
  3956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3957 ;;      Params:         4       0       0       0       0       0       0
  3958 ;;      Locals:         0       4       0       0       0       0       0
  3959 ;;      Temps:          2       0       0       0       0       0       0
  3960 ;;      Totals:         6       4       0       0       0       0       0
  3961 ;;Total ram usage:       10 bytes
  3962 ;; Hardware stack levels used:    1
  3963 ;; Hardware stack levels required when called:    2
  3964 ;; This function calls:
  3965 ;;		___fladd
  3966 ;;		___flmul
  3967 ;;		___fltol
  3968 ;;		___xxtofl
  3969 ;; This function is called by:
  3970 ;;		_startMotor
  3971 ;; This function uses a non-reentrant model
  3972 ;;
  3973                           
  3974                           	psect	text9
  3975  003F20                     __ptext9:
  3976                           	callstack 0
  3977  003F20                     _speedControl:
  3978                           	callstack 25
  3979  003F20                     
  3980                           ;fs_speed_controller.c: 44:     controller.error = (int16_t)(position - 3400.0);
  3981  003F20  0E00               	movlw	0
  3982  003F22  6E39               	movwf	___fladd@a^0,c
  3983  003F24  0E80               	movlw	128
  3984  003F26  6E3A               	movwf	(___fladd@a+1)^0,c
  3985  003F28  0E54               	movlw	84
  3986  003F2A  6E3B               	movwf	(___fladd@a+2)^0,c
  3987  003F2C  0EC5               	movlw	197
  3988  003F2E  6E3C               	movwf	(___fladd@a+3)^0,c
  3989  003F30  C058  F035         	movff	speedControl@position,___fladd@b
  3990  003F34  C059  F036         	movff	speedControl@position+1,___fladd@b+1
  3991  003F38  C05A  F037         	movff	speedControl@position+2,___fladd@b+2
  3992  003F3C  C05B  F038         	movff	speedControl@position+3,___fladd@b+3
  3993  003F40  EC5F  F015         	call	___fladd	;wreg free
  3994  003F44  C035  F04E         	movff	?___fladd,___fltol@f1
  3995  003F48  C036  F04F         	movff	?___fladd+1,___fltol@f1+1
  3996  003F4C  C037  F050         	movff	?___fladd+2,___fltol@f1+2
  3997  003F50  C038  F051         	movff	?___fladd+3,___fltol@f1+3
  3998  003F54  ECDB  F024         	call	___fltol	;wreg free
  3999  003F58  C04E  F150         	movff	?___fltol,_controller
  4000  003F5C  C04F  F151         	movff	?___fltol+1,_controller+1
  4001  003F60                     
  4002                           ;fs_speed_controller.c: 45:     controller.motorSpeed = (int16_t) (KP * controller.error
      +                           + KD * (controller.error - controller.lastError));
  4003  003F60  C1EF  F020         	movff	_KD,___flmul@a
  4004  003F64  C1F0  F021         	movff	_KD+1,___flmul@a+1
  4005  003F68  C1F1  F022         	movff	_KD+2,___flmul@a+2
  4006  003F6C  C1F2  F023         	movff	_KD+3,___flmul@a+3
  4007  003F70  0101               	movlb	1	; () banked
  4008  003F72  5152               	movf	(_controller+2)& (0+255),w,b
  4009  003F74  5D50               	subwf	_controller& (0+255),w,b
  4010  003F76  6E5C               	movwf	??_speedControl^0,c
  4011  003F78  5153               	movf	(_controller+3)& (0+255),w,b
  4012  003F7A  5951               	subwfb	(_controller+1)& (0+255),w,b
  4013  003F7C  6E5D               	movwf	(??_speedControl+1)^0,c
  4014  003F7E  C05C  F00E         	movff	??_speedControl,___xxtofl@val
  4015  003F82  C05D  F00F         	movff	??_speedControl+1,___xxtofl@val+1
  4016  003F86  0E00               	movlw	0
  4017  003F88  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  4018  003F8A  0EFF               	movlw	-1
  4019  003F8C  6E10               	movwf	(___xxtofl@val+2)^0,c
  4020  003F8E  6E11               	movwf	(___xxtofl@val+3)^0,c
  4021  003F90  0E01               	movlw	1
  4022  003F92  EC6F  F020         	call	___xxtofl
  4023  003F96  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4024  003F9A  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4025  003F9E  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4026  003FA2  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4027  003FA6  ECBF  F017         	call	___flmul	;wreg free
  4028  003FAA  C01C  F039         	movff	?___flmul,___fladd@a
  4029  003FAE  C01D  F03A         	movff	?___flmul+1,___fladd@a+1
  4030  003FB2  C01E  F03B         	movff	?___flmul+2,___fladd@a+2
  4031  003FB6  C01F  F03C         	movff	?___flmul+3,___fladd@a+3
  4032  003FBA  C1F3  F020         	movff	_KP,___flmul@a
  4033  003FBE  C1F4  F021         	movff	_KP+1,___flmul@a+1
  4034  003FC2  C1F5  F022         	movff	_KP+2,___flmul@a+2
  4035  003FC6  C1F6  F023         	movff	_KP+3,___flmul@a+3
  4036  003FCA  C150  F00E         	movff	_controller,___xxtofl@val
  4037  003FCE  C151  F00F         	movff	_controller+1,___xxtofl@val+1
  4038  003FD2  0E00               	movlw	0
  4039  003FD4  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  4040  003FD6  0EFF               	movlw	-1
  4041  003FD8  6E10               	movwf	(___xxtofl@val+2)^0,c
  4042  003FDA  6E11               	movwf	(___xxtofl@val+3)^0,c
  4043  003FDC  0E01               	movlw	1
  4044  003FDE  EC6F  F020         	call	___xxtofl
  4045  003FE2  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4046  003FE6  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4047  003FEA  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4048  003FEE  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4049  003FF2  ECBF  F017         	call	___flmul	;wreg free
  4050  003FF6  C01C  F035         	movff	?___flmul,___fladd@b
  4051  003FFA  C01D  F036         	movff	?___flmul+1,___fladd@b+1
  4052  003FFE  C01E  F037         	movff	?___flmul+2,___fladd@b+2
  4053  004002  C01F  F038         	movff	?___flmul+3,___fladd@b+3
  4054  004006  EC5F  F015         	call	___fladd	;wreg free
  4055  00400A  C035  F04E         	movff	?___fladd,___fltol@f1
  4056  00400E  C036  F04F         	movff	?___fladd+1,___fltol@f1+1
  4057  004012  C037  F050         	movff	?___fladd+2,___fltol@f1+2
  4058  004016  C038  F051         	movff	?___fladd+3,___fltol@f1+3
  4059  00401A  ECDB  F024         	call	___fltol	;wreg free
  4060  00401E  C04E  F154         	movff	?___fltol,_controller+4
  4061  004022  C04F  F155         	movff	?___fltol+1,_controller+5
  4062  004026                     
  4063                           ;fs_speed_controller.c: 46:     controller.lastError = controller.error;
  4064  004026  C150  F152         	movff	_controller,_controller+2
  4065  00402A  C151  F153         	movff	_controller+1,_controller+3
  4066  00402E                     
  4067                           ;fs_speed_controller.c: 48:    controller.leftMotorSpeed =(int16_t) (200 + controller.mo
      +                          torSpeed + 70);
  4068  00402E  0E0E               	movlw	14
  4069  004030  0101               	movlb	1	; () banked
  4070  004032  2554               	addwf	(_controller+4)& (0+255),w,b
  4071  004034  6F56               	movwf	(_controller+6)& (0+255),b
  4072  004036  0E01               	movlw	1
  4073  004038  2155               	addwfc	(_controller+5)& (0+255),w,b
  4074  00403A  6F57               	movwf	(_controller+7)& (0+255),b
  4075  00403C                     
  4076                           ; BSR set to: 1
  4077                           ;fs_speed_controller.c: 49:    controller.rightMotorSpeed =(int16_t) (200 - controller.m
      +                          otorSpeed);
  4078  00403C  5154               	movf	(_controller+4)& (0+255),w,b
  4079  00403E  08C8               	sublw	200
  4080  004040  6F58               	movwf	(_controller+8)& (0+255),b
  4081  004042  5155               	movf	(_controller+5)& (0+255),w,b
  4082  004044  A0D8               	btfss	status,0,c
  4083  004046  2AE8               	incf	wreg,f,c
  4084  004048  0800               	sublw	0
  4085  00404A  6F59               	movwf	(_controller+9)& (0+255),b
  4086  00404C                     
  4087                           ; BSR set to: 1
  4088                           ;fs_speed_controller.c: 51:     if (controller.leftMotorSpeed < 50)
  4089  00404C  BF57               	btfsc	(_controller+7)& (0+255),7,b
  4090  00404E  EF34  F020         	goto	u6740
  4091  004052  5157               	movf	(_controller+7)& (0+255),w,b
  4092  004054  E107               	bnz	u6741
  4093  004056  0E32               	movlw	50
  4094  004058  5D56               	subwf	(_controller+6)& (0+255),w,b
  4095  00405A  B0D8               	btfsc	status,0,c
  4096  00405C  EF32  F020         	goto	u6741
  4097  004060  EF34  F020         	goto	u6740
  4098  004064                     u6741:
  4099  004064  EF38  F020         	goto	l5563
  4100  004068                     u6740:
  4101  004068                     
  4102                           ; BSR set to: 1
  4103                           ;fs_speed_controller.c: 52:     {;fs_speed_controller.c: 53:         controller.leftMoto
      +                          rSpeed = 50;
  4104  004068  0E00               	movlw	0
  4105  00406A  6F57               	movwf	(_controller+7)& (0+255),b
  4106  00406C  0E32               	movlw	50
  4107  00406E  6F56               	movwf	(_controller+6)& (0+255),b
  4108  004070                     l5563:
  4109                           
  4110                           ; BSR set to: 1
  4111                           ;fs_speed_controller.c: 56:     if (controller.rightMotorSpeed < 50)
  4112  004070  BF59               	btfsc	(_controller+9)& (0+255),7,b
  4113  004072  EF46  F020         	goto	u6750
  4114  004076  5159               	movf	(_controller+9)& (0+255),w,b
  4115  004078  E107               	bnz	u6751
  4116  00407A  0E32               	movlw	50
  4117  00407C  5D58               	subwf	(_controller+8)& (0+255),w,b
  4118  00407E  B0D8               	btfsc	status,0,c
  4119  004080  EF44  F020         	goto	u6751
  4120  004084  EF46  F020         	goto	u6750
  4121  004088                     u6751:
  4122  004088  EF4A  F020         	goto	l5567
  4123  00408C                     u6750:
  4124  00408C                     
  4125                           ; BSR set to: 1
  4126                           ;fs_speed_controller.c: 57:     {;fs_speed_controller.c: 58:       controller.rightMotor
      +                          Speed = 50;
  4127  00408C  0E00               	movlw	0
  4128  00408E  6F59               	movwf	(_controller+9)& (0+255),b
  4129  004090  0E32               	movlw	50
  4130  004092  6F58               	movwf	(_controller+8)& (0+255),b
  4131  004094                     l5567:
  4132                           
  4133                           ; BSR set to: 1
  4134                           ;fs_speed_controller.c: 61:     if (controller.leftMotorSpeed > 350)
  4135  004094  BF57               	btfsc	(_controller+7)& (0+255),7,b
  4136  004096  EF56  F020         	goto	u6761
  4137  00409A  0E5F               	movlw	95
  4138  00409C  5D56               	subwf	(_controller+6)& (0+255),w,b
  4139  00409E  0E01               	movlw	1
  4140  0040A0  5957               	subwfb	(_controller+7)& (0+255),w,b
  4141  0040A2  A0D8               	btfss	status,0,c
  4142  0040A4  EF56  F020         	goto	u6761
  4143  0040A8  EF58  F020         	goto	u6760
  4144  0040AC                     u6761:
  4145  0040AC  EF5C  F020         	goto	l5571
  4146  0040B0                     u6760:
  4147  0040B0                     
  4148                           ; BSR set to: 1
  4149                           ;fs_speed_controller.c: 62:    {;fs_speed_controller.c: 63:         controller.leftMotor
      +                          Speed = 350;
  4150  0040B0  0E01               	movlw	1
  4151  0040B2  6F57               	movwf	(_controller+7)& (0+255),b
  4152  0040B4  0E5E               	movlw	94
  4153  0040B6  6F56               	movwf	(_controller+6)& (0+255),b
  4154  0040B8                     l5571:
  4155                           
  4156                           ; BSR set to: 1
  4157                           ;fs_speed_controller.c: 66:     if (controller.rightMotorSpeed > 350)
  4158  0040B8  BF59               	btfsc	(_controller+9)& (0+255),7,b
  4159  0040BA  EF68  F020         	goto	u6771
  4160  0040BE  0E5F               	movlw	95
  4161  0040C0  5D58               	subwf	(_controller+8)& (0+255),w,b
  4162  0040C2  0E01               	movlw	1
  4163  0040C4  5959               	subwfb	(_controller+9)& (0+255),w,b
  4164  0040C6  A0D8               	btfss	status,0,c
  4165  0040C8  EF68  F020         	goto	u6771
  4166  0040CC  EF6A  F020         	goto	u6770
  4167  0040D0                     u6771:
  4168  0040D0  EF6E  F020         	goto	l441
  4169  0040D4                     u6770:
  4170  0040D4                     
  4171                           ; BSR set to: 1
  4172                           ;fs_speed_controller.c: 67:     {;fs_speed_controller.c: 68:         controller.rightMot
      +                          orSpeed = 350;
  4173  0040D4  0E01               	movlw	1
  4174  0040D6  6F59               	movwf	(_controller+9)& (0+255),b
  4175  0040D8  0E5E               	movlw	94
  4176  0040DA  6F58               	movwf	(_controller+8)& (0+255),b
  4177  0040DC                     l441:
  4178                           
  4179                           ; BSR set to: 1
  4180  0040DC  0012               	return		;funcret
  4181  0040DE                     __end_of_speedControl:
  4182                           	callstack 0
  4183                           
  4184 ;; *************** function _scanAdcConversion *****************
  4185 ;; Defined at:
  4186 ;;		line 93 in file "fs_adc.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;		None
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;		None
  4191 ;; Return value:  Size  Location     Type
  4192 ;;                  1    wreg      void 
  4193 ;; Registers used:
  4194 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4195 ;; Tracked objects:
  4196 ;;		On entry : 0/0
  4197 ;;		On exit  : 0/0
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4200 ;;      Params:         0       0       0       0       0       0       0
  4201 ;;      Locals:         0       0       0       0       0       0       0
  4202 ;;      Temps:          2       0       0       0       0       0       0
  4203 ;;      Totals:         2       0       0       0       0       0       0
  4204 ;;Total ram usage:        2 bytes
  4205 ;; Hardware stack levels used:    1
  4206 ;; Hardware stack levels required when called:    2
  4207 ;; This function calls:
  4208 ;;		___fldiv
  4209 ;;		___flmul
  4210 ;;		___fltol
  4211 ;;		___xxtofl
  4212 ;;		_readAdcValue
  4213 ;; This function is called by:
  4214 ;;		_startMotor
  4215 ;; This function uses a non-reentrant model
  4216 ;;
  4217                           
  4218                           	psect	text10
  4219  001C82                     __ptext10:
  4220                           	callstack 0
  4221  001C82                     _scanAdcConversion:
  4222                           	callstack 25
  4223  001C82                     
  4224                           ;fs_adc.c: 95:     switch(timer_value.timer_0_counter)
  4225  001C82  EF15  F012         	goto	l5483
  4226  001C86                     l5431:
  4227                           
  4228                           ; BSR set to: 0
  4229                           ;fs_adc.c: 98:             adc_raw_data.channel_0 = readAdcValue(0);
  4230  001C86  0E00               	movlw	0
  4231  001C88  EC94  F02C         	call	_readAdcValue
  4232  001C8C  C001  F163         	movff	?_readAdcValue,_adc_raw_data
  4233  001C90  C002  F164         	movff	?_readAdcValue+1,_adc_raw_data+1
  4234  001C94                     
  4235                           ;fs_adc.c: 99:             procces_data.channel_0 = (float)((adc_raw_data.channel_0*5.0)
      +                          /1024.0);
  4236  001C94  0E00               	movlw	0
  4237  001C96  6E20               	movwf	___flmul@a^0,c
  4238  001C98  0E00               	movlw	0
  4239  001C9A  6E21               	movwf	(___flmul@a+1)^0,c
  4240  001C9C  0EA0               	movlw	160
  4241  001C9E  6E22               	movwf	(___flmul@a+2)^0,c
  4242  001CA0  0E40               	movlw	64
  4243  001CA2  6E23               	movwf	(___flmul@a+3)^0,c
  4244  001CA4  C163  F00E         	movff	_adc_raw_data,___xxtofl@val
  4245  001CA8  C164  F00F         	movff	_adc_raw_data+1,___xxtofl@val+1
  4246  001CAC  6A10               	clrf	(___xxtofl@val+2)^0,c
  4247  001CAE  6A11               	clrf	(___xxtofl@val+3)^0,c
  4248  001CB0  0E00               	movlw	0
  4249  001CB2  EC6F  F020         	call	___xxtofl
  4250  001CB6  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4251  001CBA  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4252  001CBE  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4253  001CC2  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4254  001CC6  ECBF  F017         	call	___flmul	;wreg free
  4255  001CCA  C01C  F035         	movff	?___flmul,___fldiv@b
  4256  001CCE  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4257  001CD2  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4258  001CD6  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4259  001CDA  0E00               	movlw	0
  4260  001CDC  6E39               	movwf	___fldiv@a^0,c
  4261  001CDE  0E00               	movlw	0
  4262  001CE0  6E3A               	movwf	(___fldiv@a+1)^0,c
  4263  001CE2  0E80               	movlw	128
  4264  001CE4  6E3B               	movwf	(___fldiv@a+2)^0,c
  4265  001CE6  0E44               	movlw	68
  4266  001CE8  6E3C               	movwf	(___fldiv@a+3)^0,c
  4267  001CEA  ECD4  F019         	call	___fldiv	;wreg free
  4268  001CEE  C035  F130         	movff	?___fldiv,_procces_data
  4269  001CF2  C036  F131         	movff	?___fldiv+1,_procces_data+1
  4270  001CF6  C037  F132         	movff	?___fldiv+2,_procces_data+2
  4271  001CFA  C038  F133         	movff	?___fldiv+3,_procces_data+3
  4272  001CFE                     
  4273                           ;fs_adc.c: 100:             convert_data.convert_channel_0 = (uint32_t)((procces_data.ch
      +                          annel_0*999)/5);
  4274  001CFE  0E00               	movlw	0
  4275  001D00  6E39               	movwf	___fldiv@a^0,c
  4276  001D02  0E00               	movlw	0
  4277  001D04  6E3A               	movwf	(___fldiv@a+1)^0,c
  4278  001D06  0EA0               	movlw	160
  4279  001D08  6E3B               	movwf	(___fldiv@a+2)^0,c
  4280  001D0A  0E40               	movlw	64
  4281  001D0C  6E3C               	movwf	(___fldiv@a+3)^0,c
  4282  001D0E  0E00               	movlw	0
  4283  001D10  6E20               	movwf	___flmul@a^0,c
  4284  001D12  0EC0               	movlw	192
  4285  001D14  6E21               	movwf	(___flmul@a+1)^0,c
  4286  001D16  0E79               	movlw	121
  4287  001D18  6E22               	movwf	(___flmul@a+2)^0,c
  4288  001D1A  0E44               	movlw	68
  4289  001D1C  6E23               	movwf	(___flmul@a+3)^0,c
  4290  001D1E  C130  F01C         	movff	_procces_data,___flmul@b
  4291  001D22  C131  F01D         	movff	_procces_data+1,___flmul@b+1
  4292  001D26  C132  F01E         	movff	_procces_data+2,___flmul@b+2
  4293  001D2A  C133  F01F         	movff	_procces_data+3,___flmul@b+3
  4294  001D2E  ECBF  F017         	call	___flmul	;wreg free
  4295  001D32  C01C  F035         	movff	?___flmul,___fldiv@b
  4296  001D36  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4297  001D3A  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4298  001D3E  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4299  001D42  ECD4  F019         	call	___fldiv	;wreg free
  4300  001D46  C035  F04E         	movff	?___fldiv,___fltol@f1
  4301  001D4A  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4302  001D4E  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4303  001D52  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4304  001D56  ECDB  F024         	call	___fltol	;wreg free
  4305  001D5A  C04E  F100         	movff	?___fltol,_convert_data
  4306  001D5E  C04F  F101         	movff	?___fltol+1,_convert_data+1
  4307  001D62  C050  F102         	movff	?___fltol+2,_convert_data+2
  4308  001D66  C051  F103         	movff	?___fltol+3,_convert_data+3
  4309                           
  4310                           ;fs_adc.c: 101:         break;
  4311  001D6A  EF43  F012         	goto	l54
  4312  001D6E                     l5437:
  4313                           
  4314                           ; BSR set to: 0
  4315                           ;fs_adc.c: 104:             adc_raw_data.channel_1 = readAdcValue(1);
  4316  001D6E  0E01               	movlw	1
  4317  001D70  EC94  F02C         	call	_readAdcValue
  4318  001D74  C001  F165         	movff	?_readAdcValue,_adc_raw_data+2
  4319  001D78  C002  F166         	movff	?_readAdcValue+1,_adc_raw_data+3
  4320  001D7C                     
  4321                           ;fs_adc.c: 105:             procces_data.channel_1 = (float)((adc_raw_data.channel_1*5.0
      +                          )/1024.0);
  4322  001D7C  0E00               	movlw	0
  4323  001D7E  6E20               	movwf	___flmul@a^0,c
  4324  001D80  0E00               	movlw	0
  4325  001D82  6E21               	movwf	(___flmul@a+1)^0,c
  4326  001D84  0EA0               	movlw	160
  4327  001D86  6E22               	movwf	(___flmul@a+2)^0,c
  4328  001D88  0E40               	movlw	64
  4329  001D8A  6E23               	movwf	(___flmul@a+3)^0,c
  4330  001D8C  C165  F00E         	movff	_adc_raw_data+2,___xxtofl@val
  4331  001D90  C166  F00F         	movff	_adc_raw_data+3,___xxtofl@val+1
  4332  001D94  6A10               	clrf	(___xxtofl@val+2)^0,c
  4333  001D96  6A11               	clrf	(___xxtofl@val+3)^0,c
  4334  001D98  0E00               	movlw	0
  4335  001D9A  EC6F  F020         	call	___xxtofl
  4336  001D9E  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4337  001DA2  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4338  001DA6  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4339  001DAA  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4340  001DAE  ECBF  F017         	call	___flmul	;wreg free
  4341  001DB2  C01C  F035         	movff	?___flmul,___fldiv@b
  4342  001DB6  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4343  001DBA  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4344  001DBE  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4345  001DC2  0E00               	movlw	0
  4346  001DC4  6E39               	movwf	___fldiv@a^0,c
  4347  001DC6  0E00               	movlw	0
  4348  001DC8  6E3A               	movwf	(___fldiv@a+1)^0,c
  4349  001DCA  0E80               	movlw	128
  4350  001DCC  6E3B               	movwf	(___fldiv@a+2)^0,c
  4351  001DCE  0E44               	movlw	68
  4352  001DD0  6E3C               	movwf	(___fldiv@a+3)^0,c
  4353  001DD2  ECD4  F019         	call	___fldiv	;wreg free
  4354  001DD6  C035  F134         	movff	?___fldiv,_procces_data+4
  4355  001DDA  C036  F135         	movff	?___fldiv+1,_procces_data+5
  4356  001DDE  C037  F136         	movff	?___fldiv+2,_procces_data+6
  4357  001DE2  C038  F137         	movff	?___fldiv+3,_procces_data+7
  4358  001DE6                     
  4359                           ;fs_adc.c: 106:             convert_data.convert_channel_1 = (uint32_t)((procces_data.ch
      +                          annel_1*999)/5);
  4360  001DE6  0E00               	movlw	0
  4361  001DE8  6E39               	movwf	___fldiv@a^0,c
  4362  001DEA  0E00               	movlw	0
  4363  001DEC  6E3A               	movwf	(___fldiv@a+1)^0,c
  4364  001DEE  0EA0               	movlw	160
  4365  001DF0  6E3B               	movwf	(___fldiv@a+2)^0,c
  4366  001DF2  0E40               	movlw	64
  4367  001DF4  6E3C               	movwf	(___fldiv@a+3)^0,c
  4368  001DF6  0E00               	movlw	0
  4369  001DF8  6E20               	movwf	___flmul@a^0,c
  4370  001DFA  0EC0               	movlw	192
  4371  001DFC  6E21               	movwf	(___flmul@a+1)^0,c
  4372  001DFE  0E79               	movlw	121
  4373  001E00  6E22               	movwf	(___flmul@a+2)^0,c
  4374  001E02  0E44               	movlw	68
  4375  001E04  6E23               	movwf	(___flmul@a+3)^0,c
  4376  001E06  C134  F01C         	movff	_procces_data+4,___flmul@b
  4377  001E0A  C135  F01D         	movff	_procces_data+5,___flmul@b+1
  4378  001E0E  C136  F01E         	movff	_procces_data+6,___flmul@b+2
  4379  001E12  C137  F01F         	movff	_procces_data+7,___flmul@b+3
  4380  001E16  ECBF  F017         	call	___flmul	;wreg free
  4381  001E1A  C01C  F035         	movff	?___flmul,___fldiv@b
  4382  001E1E  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4383  001E22  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4384  001E26  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4385  001E2A  ECD4  F019         	call	___fldiv	;wreg free
  4386  001E2E  C035  F04E         	movff	?___fldiv,___fltol@f1
  4387  001E32  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4388  001E36  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4389  001E3A  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4390  001E3E  ECDB  F024         	call	___fltol	;wreg free
  4391  001E42  C04E  F104         	movff	?___fltol,_convert_data+4
  4392  001E46  C04F  F105         	movff	?___fltol+1,_convert_data+5
  4393  001E4A  C050  F106         	movff	?___fltol+2,_convert_data+6
  4394  001E4E  C051  F107         	movff	?___fltol+3,_convert_data+7
  4395                           
  4396                           ;fs_adc.c: 107:         break;
  4397  001E52  EF43  F012         	goto	l54
  4398  001E56                     l5443:
  4399                           
  4400                           ; BSR set to: 0
  4401                           ;fs_adc.c: 110:             adc_raw_data.channel_2 = readAdcValue(2);
  4402  001E56  0E02               	movlw	2
  4403  001E58  EC94  F02C         	call	_readAdcValue
  4404  001E5C  C001  F167         	movff	?_readAdcValue,_adc_raw_data+4
  4405  001E60  C002  F168         	movff	?_readAdcValue+1,_adc_raw_data+5
  4406  001E64                     
  4407                           ;fs_adc.c: 111:             procces_data.channel_2 = (float)((adc_raw_data.channel_2*5.0
      +                          )/1024.0);
  4408  001E64  0E00               	movlw	0
  4409  001E66  6E20               	movwf	___flmul@a^0,c
  4410  001E68  0E00               	movlw	0
  4411  001E6A  6E21               	movwf	(___flmul@a+1)^0,c
  4412  001E6C  0EA0               	movlw	160
  4413  001E6E  6E22               	movwf	(___flmul@a+2)^0,c
  4414  001E70  0E40               	movlw	64
  4415  001E72  6E23               	movwf	(___flmul@a+3)^0,c
  4416  001E74  C167  F00E         	movff	_adc_raw_data+4,___xxtofl@val
  4417  001E78  C168  F00F         	movff	_adc_raw_data+5,___xxtofl@val+1
  4418  001E7C  6A10               	clrf	(___xxtofl@val+2)^0,c
  4419  001E7E  6A11               	clrf	(___xxtofl@val+3)^0,c
  4420  001E80  0E00               	movlw	0
  4421  001E82  EC6F  F020         	call	___xxtofl
  4422  001E86  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4423  001E8A  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4424  001E8E  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4425  001E92  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4426  001E96  ECBF  F017         	call	___flmul	;wreg free
  4427  001E9A  C01C  F035         	movff	?___flmul,___fldiv@b
  4428  001E9E  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4429  001EA2  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4430  001EA6  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4431  001EAA  0E00               	movlw	0
  4432  001EAC  6E39               	movwf	___fldiv@a^0,c
  4433  001EAE  0E00               	movlw	0
  4434  001EB0  6E3A               	movwf	(___fldiv@a+1)^0,c
  4435  001EB2  0E80               	movlw	128
  4436  001EB4  6E3B               	movwf	(___fldiv@a+2)^0,c
  4437  001EB6  0E44               	movlw	68
  4438  001EB8  6E3C               	movwf	(___fldiv@a+3)^0,c
  4439  001EBA  ECD4  F019         	call	___fldiv	;wreg free
  4440  001EBE  C035  F138         	movff	?___fldiv,_procces_data+8
  4441  001EC2  C036  F139         	movff	?___fldiv+1,_procces_data+9
  4442  001EC6  C037  F13A         	movff	?___fldiv+2,_procces_data+10
  4443  001ECA  C038  F13B         	movff	?___fldiv+3,_procces_data+11
  4444  001ECE                     
  4445                           ;fs_adc.c: 112:             convert_data.convert_channel_2 = (uint32_t)((procces_data.ch
      +                          annel_2*999)/5);
  4446  001ECE  0E00               	movlw	0
  4447  001ED0  6E39               	movwf	___fldiv@a^0,c
  4448  001ED2  0E00               	movlw	0
  4449  001ED4  6E3A               	movwf	(___fldiv@a+1)^0,c
  4450  001ED6  0EA0               	movlw	160
  4451  001ED8  6E3B               	movwf	(___fldiv@a+2)^0,c
  4452  001EDA  0E40               	movlw	64
  4453  001EDC  6E3C               	movwf	(___fldiv@a+3)^0,c
  4454  001EDE  0E00               	movlw	0
  4455  001EE0  6E20               	movwf	___flmul@a^0,c
  4456  001EE2  0EC0               	movlw	192
  4457  001EE4  6E21               	movwf	(___flmul@a+1)^0,c
  4458  001EE6  0E79               	movlw	121
  4459  001EE8  6E22               	movwf	(___flmul@a+2)^0,c
  4460  001EEA  0E44               	movlw	68
  4461  001EEC  6E23               	movwf	(___flmul@a+3)^0,c
  4462  001EEE  C138  F01C         	movff	_procces_data+8,___flmul@b
  4463  001EF2  C139  F01D         	movff	_procces_data+9,___flmul@b+1
  4464  001EF6  C13A  F01E         	movff	_procces_data+10,___flmul@b+2
  4465  001EFA  C13B  F01F         	movff	_procces_data+11,___flmul@b+3
  4466  001EFE  ECBF  F017         	call	___flmul	;wreg free
  4467  001F02  C01C  F035         	movff	?___flmul,___fldiv@b
  4468  001F06  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4469  001F0A  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4470  001F0E  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4471  001F12  ECD4  F019         	call	___fldiv	;wreg free
  4472  001F16  C035  F04E         	movff	?___fldiv,___fltol@f1
  4473  001F1A  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4474  001F1E  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4475  001F22  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4476  001F26  ECDB  F024         	call	___fltol	;wreg free
  4477  001F2A  C04E  F108         	movff	?___fltol,_convert_data+8
  4478  001F2E  C04F  F109         	movff	?___fltol+1,_convert_data+9
  4479  001F32  C050  F10A         	movff	?___fltol+2,_convert_data+10
  4480  001F36  C051  F10B         	movff	?___fltol+3,_convert_data+11
  4481  001F3A                     
  4482                           ;fs_adc.c: 113:             convert_data.convert_channel_2_f = (uint16_t)((procces_data.
      +                          channel_2*999)/5);
  4483  001F3A  0E00               	movlw	0
  4484  001F3C  6E39               	movwf	___fldiv@a^0,c
  4485  001F3E  0E00               	movlw	0
  4486  001F40  6E3A               	movwf	(___fldiv@a+1)^0,c
  4487  001F42  0EA0               	movlw	160
  4488  001F44  6E3B               	movwf	(___fldiv@a+2)^0,c
  4489  001F46  0E40               	movlw	64
  4490  001F48  6E3C               	movwf	(___fldiv@a+3)^0,c
  4491  001F4A  0E00               	movlw	0
  4492  001F4C  6E20               	movwf	___flmul@a^0,c
  4493  001F4E  0EC0               	movlw	192
  4494  001F50  6E21               	movwf	(___flmul@a+1)^0,c
  4495  001F52  0E79               	movlw	121
  4496  001F54  6E22               	movwf	(___flmul@a+2)^0,c
  4497  001F56  0E44               	movlw	68
  4498  001F58  6E23               	movwf	(___flmul@a+3)^0,c
  4499  001F5A  C138  F01C         	movff	_procces_data+8,___flmul@b
  4500  001F5E  C139  F01D         	movff	_procces_data+9,___flmul@b+1
  4501  001F62  C13A  F01E         	movff	_procces_data+10,___flmul@b+2
  4502  001F66  C13B  F01F         	movff	_procces_data+11,___flmul@b+3
  4503  001F6A  ECBF  F017         	call	___flmul	;wreg free
  4504  001F6E  C01C  F035         	movff	?___flmul,___fldiv@b
  4505  001F72  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4506  001F76  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4507  001F7A  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4508  001F7E  ECD4  F019         	call	___fldiv	;wreg free
  4509  001F82  C035  F04E         	movff	?___fldiv,___fltol@f1
  4510  001F86  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4511  001F8A  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4512  001F8E  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4513  001F92  ECDB  F024         	call	___fltol	;wreg free
  4514  001F96  C04E  F124         	movff	?___fltol,_convert_data+36
  4515  001F9A  C04F  F125         	movff	?___fltol+1,_convert_data+37
  4516                           
  4517                           ;fs_adc.c: 114:         break;
  4518  001F9E  EF43  F012         	goto	l54
  4519  001FA2                     l5451:
  4520                           
  4521                           ; BSR set to: 0
  4522                           ;fs_adc.c: 117:             adc_raw_data.channel_3 = readAdcValue(3);
  4523  001FA2  0E03               	movlw	3
  4524  001FA4  EC94  F02C         	call	_readAdcValue
  4525  001FA8  C001  F169         	movff	?_readAdcValue,_adc_raw_data+6
  4526  001FAC  C002  F16A         	movff	?_readAdcValue+1,_adc_raw_data+7
  4527  001FB0                     
  4528                           ;fs_adc.c: 118:             procces_data.channel_3 = (float)((adc_raw_data.channel_3*5.0
      +                          )/1024.0);
  4529  001FB0  0E00               	movlw	0
  4530  001FB2  6E20               	movwf	___flmul@a^0,c
  4531  001FB4  0E00               	movlw	0
  4532  001FB6  6E21               	movwf	(___flmul@a+1)^0,c
  4533  001FB8  0EA0               	movlw	160
  4534  001FBA  6E22               	movwf	(___flmul@a+2)^0,c
  4535  001FBC  0E40               	movlw	64
  4536  001FBE  6E23               	movwf	(___flmul@a+3)^0,c
  4537  001FC0  C169  F00E         	movff	_adc_raw_data+6,___xxtofl@val
  4538  001FC4  C16A  F00F         	movff	_adc_raw_data+7,___xxtofl@val+1
  4539  001FC8  6A10               	clrf	(___xxtofl@val+2)^0,c
  4540  001FCA  6A11               	clrf	(___xxtofl@val+3)^0,c
  4541  001FCC  0E00               	movlw	0
  4542  001FCE  EC6F  F020         	call	___xxtofl
  4543  001FD2  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4544  001FD6  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4545  001FDA  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4546  001FDE  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4547  001FE2  ECBF  F017         	call	___flmul	;wreg free
  4548  001FE6  C01C  F035         	movff	?___flmul,___fldiv@b
  4549  001FEA  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4550  001FEE  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4551  001FF2  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4552  001FF6  0E00               	movlw	0
  4553  001FF8  6E39               	movwf	___fldiv@a^0,c
  4554  001FFA  0E00               	movlw	0
  4555  001FFC  6E3A               	movwf	(___fldiv@a+1)^0,c
  4556  001FFE  0E80               	movlw	128
  4557  002000  6E3B               	movwf	(___fldiv@a+2)^0,c
  4558  002002  0E44               	movlw	68
  4559  002004  6E3C               	movwf	(___fldiv@a+3)^0,c
  4560  002006  ECD4  F019         	call	___fldiv	;wreg free
  4561  00200A  C035  F13C         	movff	?___fldiv,_procces_data+12
  4562  00200E  C036  F13D         	movff	?___fldiv+1,_procces_data+13
  4563  002012  C037  F13E         	movff	?___fldiv+2,_procces_data+14
  4564  002016  C038  F13F         	movff	?___fldiv+3,_procces_data+15
  4565  00201A                     
  4566                           ;fs_adc.c: 119:             convert_data.convert_channel_3 = (uint32_t)((procces_data.ch
      +                          annel_3*999)/5);
  4567  00201A  0E00               	movlw	0
  4568  00201C  6E39               	movwf	___fldiv@a^0,c
  4569  00201E  0E00               	movlw	0
  4570  002020  6E3A               	movwf	(___fldiv@a+1)^0,c
  4571  002022  0EA0               	movlw	160
  4572  002024  6E3B               	movwf	(___fldiv@a+2)^0,c
  4573  002026  0E40               	movlw	64
  4574  002028  6E3C               	movwf	(___fldiv@a+3)^0,c
  4575  00202A  0E00               	movlw	0
  4576  00202C  6E20               	movwf	___flmul@a^0,c
  4577  00202E  0EC0               	movlw	192
  4578  002030  6E21               	movwf	(___flmul@a+1)^0,c
  4579  002032  0E79               	movlw	121
  4580  002034  6E22               	movwf	(___flmul@a+2)^0,c
  4581  002036  0E44               	movlw	68
  4582  002038  6E23               	movwf	(___flmul@a+3)^0,c
  4583  00203A  C13C  F01C         	movff	_procces_data+12,___flmul@b
  4584  00203E  C13D  F01D         	movff	_procces_data+13,___flmul@b+1
  4585  002042  C13E  F01E         	movff	_procces_data+14,___flmul@b+2
  4586  002046  C13F  F01F         	movff	_procces_data+15,___flmul@b+3
  4587  00204A  ECBF  F017         	call	___flmul	;wreg free
  4588  00204E  C01C  F035         	movff	?___flmul,___fldiv@b
  4589  002052  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4590  002056  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4591  00205A  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4592  00205E  ECD4  F019         	call	___fldiv	;wreg free
  4593  002062  C035  F04E         	movff	?___fldiv,___fltol@f1
  4594  002066  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4595  00206A  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4596  00206E  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4597  002072  ECDB  F024         	call	___fltol	;wreg free
  4598  002076  C04E  F10C         	movff	?___fltol,_convert_data+12
  4599  00207A  C04F  F10D         	movff	?___fltol+1,_convert_data+13
  4600  00207E  C050  F10E         	movff	?___fltol+2,_convert_data+14
  4601  002082  C051  F10F         	movff	?___fltol+3,_convert_data+15
  4602                           
  4603                           ;fs_adc.c: 120:         break;
  4604  002086  EF43  F012         	goto	l54
  4605  00208A                     l5457:
  4606                           
  4607                           ; BSR set to: 0
  4608                           ;fs_adc.c: 123:             adc_raw_data.channel_4 = readAdcValue(4);
  4609  00208A  0E04               	movlw	4
  4610  00208C  EC94  F02C         	call	_readAdcValue
  4611  002090  C001  F16B         	movff	?_readAdcValue,_adc_raw_data+8
  4612  002094  C002  F16C         	movff	?_readAdcValue+1,_adc_raw_data+9
  4613  002098                     
  4614                           ;fs_adc.c: 124:             procces_data.channel_4 = (float)((adc_raw_data.channel_4*5.0
      +                          )/1024.0);
  4615  002098  0E00               	movlw	0
  4616  00209A  6E20               	movwf	___flmul@a^0,c
  4617  00209C  0E00               	movlw	0
  4618  00209E  6E21               	movwf	(___flmul@a+1)^0,c
  4619  0020A0  0EA0               	movlw	160
  4620  0020A2  6E22               	movwf	(___flmul@a+2)^0,c
  4621  0020A4  0E40               	movlw	64
  4622  0020A6  6E23               	movwf	(___flmul@a+3)^0,c
  4623  0020A8  C16B  F00E         	movff	_adc_raw_data+8,___xxtofl@val
  4624  0020AC  C16C  F00F         	movff	_adc_raw_data+9,___xxtofl@val+1
  4625  0020B0  6A10               	clrf	(___xxtofl@val+2)^0,c
  4626  0020B2  6A11               	clrf	(___xxtofl@val+3)^0,c
  4627  0020B4  0E00               	movlw	0
  4628  0020B6  EC6F  F020         	call	___xxtofl
  4629  0020BA  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4630  0020BE  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4631  0020C2  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4632  0020C6  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4633  0020CA  ECBF  F017         	call	___flmul	;wreg free
  4634  0020CE  C01C  F035         	movff	?___flmul,___fldiv@b
  4635  0020D2  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4636  0020D6  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4637  0020DA  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4638  0020DE  0E00               	movlw	0
  4639  0020E0  6E39               	movwf	___fldiv@a^0,c
  4640  0020E2  0E00               	movlw	0
  4641  0020E4  6E3A               	movwf	(___fldiv@a+1)^0,c
  4642  0020E6  0E80               	movlw	128
  4643  0020E8  6E3B               	movwf	(___fldiv@a+2)^0,c
  4644  0020EA  0E44               	movlw	68
  4645  0020EC  6E3C               	movwf	(___fldiv@a+3)^0,c
  4646  0020EE  ECD4  F019         	call	___fldiv	;wreg free
  4647  0020F2  C035  F140         	movff	?___fldiv,_procces_data+16
  4648  0020F6  C036  F141         	movff	?___fldiv+1,_procces_data+17
  4649  0020FA  C037  F142         	movff	?___fldiv+2,_procces_data+18
  4650  0020FE  C038  F143         	movff	?___fldiv+3,_procces_data+19
  4651  002102                     
  4652                           ;fs_adc.c: 125:             convert_data.convert_channel_4 = (uint32_t)((procces_data.ch
      +                          annel_4*999)/5);
  4653  002102  0E00               	movlw	0
  4654  002104  6E39               	movwf	___fldiv@a^0,c
  4655  002106  0E00               	movlw	0
  4656  002108  6E3A               	movwf	(___fldiv@a+1)^0,c
  4657  00210A  0EA0               	movlw	160
  4658  00210C  6E3B               	movwf	(___fldiv@a+2)^0,c
  4659  00210E  0E40               	movlw	64
  4660  002110  6E3C               	movwf	(___fldiv@a+3)^0,c
  4661  002112  0E00               	movlw	0
  4662  002114  6E20               	movwf	___flmul@a^0,c
  4663  002116  0EC0               	movlw	192
  4664  002118  6E21               	movwf	(___flmul@a+1)^0,c
  4665  00211A  0E79               	movlw	121
  4666  00211C  6E22               	movwf	(___flmul@a+2)^0,c
  4667  00211E  0E44               	movlw	68
  4668  002120  6E23               	movwf	(___flmul@a+3)^0,c
  4669  002122  C140  F01C         	movff	_procces_data+16,___flmul@b
  4670  002126  C141  F01D         	movff	_procces_data+17,___flmul@b+1
  4671  00212A  C142  F01E         	movff	_procces_data+18,___flmul@b+2
  4672  00212E  C143  F01F         	movff	_procces_data+19,___flmul@b+3
  4673  002132  ECBF  F017         	call	___flmul	;wreg free
  4674  002136  C01C  F035         	movff	?___flmul,___fldiv@b
  4675  00213A  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4676  00213E  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4677  002142  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4678  002146  ECD4  F019         	call	___fldiv	;wreg free
  4679  00214A  C035  F04E         	movff	?___fldiv,___fltol@f1
  4680  00214E  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4681  002152  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4682  002156  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4683  00215A  ECDB  F024         	call	___fltol	;wreg free
  4684  00215E  C04E  F110         	movff	?___fltol,_convert_data+16
  4685  002162  C04F  F111         	movff	?___fltol+1,_convert_data+17
  4686  002166  C050  F112         	movff	?___fltol+2,_convert_data+18
  4687  00216A  C051  F113         	movff	?___fltol+3,_convert_data+19
  4688                           
  4689                           ;fs_adc.c: 126:         break;
  4690  00216E  EF43  F012         	goto	l54
  4691  002172                     l5463:
  4692                           
  4693                           ; BSR set to: 0
  4694                           ;fs_adc.c: 129:            adc_raw_data.channel_5 = readAdcValue(5);
  4695  002172  0E05               	movlw	5
  4696  002174  EC94  F02C         	call	_readAdcValue
  4697  002178  C001  F16D         	movff	?_readAdcValue,_adc_raw_data+10
  4698  00217C  C002  F16E         	movff	?_readAdcValue+1,_adc_raw_data+11
  4699  002180                     
  4700                           ;fs_adc.c: 130:            procces_data.channel_5 = (float)((adc_raw_data.channel_5*5.0)
      +                          /1024.0);
  4701  002180  0E00               	movlw	0
  4702  002182  6E20               	movwf	___flmul@a^0,c
  4703  002184  0E00               	movlw	0
  4704  002186  6E21               	movwf	(___flmul@a+1)^0,c
  4705  002188  0EA0               	movlw	160
  4706  00218A  6E22               	movwf	(___flmul@a+2)^0,c
  4707  00218C  0E40               	movlw	64
  4708  00218E  6E23               	movwf	(___flmul@a+3)^0,c
  4709  002190  C16D  F00E         	movff	_adc_raw_data+10,___xxtofl@val
  4710  002194  C16E  F00F         	movff	_adc_raw_data+11,___xxtofl@val+1
  4711  002198  6A10               	clrf	(___xxtofl@val+2)^0,c
  4712  00219A  6A11               	clrf	(___xxtofl@val+3)^0,c
  4713  00219C  0E00               	movlw	0
  4714  00219E  EC6F  F020         	call	___xxtofl
  4715  0021A2  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4716  0021A6  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4717  0021AA  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4718  0021AE  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4719  0021B2  ECBF  F017         	call	___flmul	;wreg free
  4720  0021B6  C01C  F035         	movff	?___flmul,___fldiv@b
  4721  0021BA  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4722  0021BE  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4723  0021C2  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4724  0021C6  0E00               	movlw	0
  4725  0021C8  6E39               	movwf	___fldiv@a^0,c
  4726  0021CA  0E00               	movlw	0
  4727  0021CC  6E3A               	movwf	(___fldiv@a+1)^0,c
  4728  0021CE  0E80               	movlw	128
  4729  0021D0  6E3B               	movwf	(___fldiv@a+2)^0,c
  4730  0021D2  0E44               	movlw	68
  4731  0021D4  6E3C               	movwf	(___fldiv@a+3)^0,c
  4732  0021D6  ECD4  F019         	call	___fldiv	;wreg free
  4733  0021DA  C035  F144         	movff	?___fldiv,_procces_data+20
  4734  0021DE  C036  F145         	movff	?___fldiv+1,_procces_data+21
  4735  0021E2  C037  F146         	movff	?___fldiv+2,_procces_data+22
  4736  0021E6  C038  F147         	movff	?___fldiv+3,_procces_data+23
  4737  0021EA                     
  4738                           ;fs_adc.c: 131:            convert_data.convert_channel_5 = (uint32_t)((procces_data.cha
      +                          nnel_5*999)/5);
  4739  0021EA  0E00               	movlw	0
  4740  0021EC  6E39               	movwf	___fldiv@a^0,c
  4741  0021EE  0E00               	movlw	0
  4742  0021F0  6E3A               	movwf	(___fldiv@a+1)^0,c
  4743  0021F2  0EA0               	movlw	160
  4744  0021F4  6E3B               	movwf	(___fldiv@a+2)^0,c
  4745  0021F6  0E40               	movlw	64
  4746  0021F8  6E3C               	movwf	(___fldiv@a+3)^0,c
  4747  0021FA  0E00               	movlw	0
  4748  0021FC  6E20               	movwf	___flmul@a^0,c
  4749  0021FE  0EC0               	movlw	192
  4750  002200  6E21               	movwf	(___flmul@a+1)^0,c
  4751  002202  0E79               	movlw	121
  4752  002204  6E22               	movwf	(___flmul@a+2)^0,c
  4753  002206  0E44               	movlw	68
  4754  002208  6E23               	movwf	(___flmul@a+3)^0,c
  4755  00220A  C144  F01C         	movff	_procces_data+20,___flmul@b
  4756  00220E  C145  F01D         	movff	_procces_data+21,___flmul@b+1
  4757  002212  C146  F01E         	movff	_procces_data+22,___flmul@b+2
  4758  002216  C147  F01F         	movff	_procces_data+23,___flmul@b+3
  4759  00221A  ECBF  F017         	call	___flmul	;wreg free
  4760  00221E  C01C  F035         	movff	?___flmul,___fldiv@b
  4761  002222  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4762  002226  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4763  00222A  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4764  00222E  ECD4  F019         	call	___fldiv	;wreg free
  4765  002232  C035  F04E         	movff	?___fldiv,___fltol@f1
  4766  002236  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4767  00223A  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4768  00223E  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4769  002242  ECDB  F024         	call	___fltol	;wreg free
  4770  002246  C04E  F114         	movff	?___fltol,_convert_data+20
  4771  00224A  C04F  F115         	movff	?___fltol+1,_convert_data+21
  4772  00224E  C050  F116         	movff	?___fltol+2,_convert_data+22
  4773  002252  C051  F117         	movff	?___fltol+3,_convert_data+23
  4774                           
  4775                           ;fs_adc.c: 132:         break;
  4776  002256  EF43  F012         	goto	l54
  4777  00225A                     l5469:
  4778                           
  4779                           ; BSR set to: 0
  4780                           ;fs_adc.c: 135:             adc_raw_data.channel_6 = readAdcValue(6);
  4781  00225A  0E06               	movlw	6
  4782  00225C  EC94  F02C         	call	_readAdcValue
  4783  002260  C001  F16F         	movff	?_readAdcValue,_adc_raw_data+12
  4784  002264  C002  F170         	movff	?_readAdcValue+1,_adc_raw_data+13
  4785  002268                     
  4786                           ;fs_adc.c: 136:             procces_data.channel_6 = (float)((adc_raw_data.channel_6*5.0
      +                          )/1024.0);
  4787  002268  0E00               	movlw	0
  4788  00226A  6E20               	movwf	___flmul@a^0,c
  4789  00226C  0E00               	movlw	0
  4790  00226E  6E21               	movwf	(___flmul@a+1)^0,c
  4791  002270  0EA0               	movlw	160
  4792  002272  6E22               	movwf	(___flmul@a+2)^0,c
  4793  002274  0E40               	movlw	64
  4794  002276  6E23               	movwf	(___flmul@a+3)^0,c
  4795  002278  C16F  F00E         	movff	_adc_raw_data+12,___xxtofl@val
  4796  00227C  C170  F00F         	movff	_adc_raw_data+13,___xxtofl@val+1
  4797  002280  6A10               	clrf	(___xxtofl@val+2)^0,c
  4798  002282  6A11               	clrf	(___xxtofl@val+3)^0,c
  4799  002284  0E00               	movlw	0
  4800  002286  EC6F  F020         	call	___xxtofl
  4801  00228A  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4802  00228E  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4803  002292  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4804  002296  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4805  00229A  ECBF  F017         	call	___flmul	;wreg free
  4806  00229E  C01C  F035         	movff	?___flmul,___fldiv@b
  4807  0022A2  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4808  0022A6  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4809  0022AA  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4810  0022AE  0E00               	movlw	0
  4811  0022B0  6E39               	movwf	___fldiv@a^0,c
  4812  0022B2  0E00               	movlw	0
  4813  0022B4  6E3A               	movwf	(___fldiv@a+1)^0,c
  4814  0022B6  0E80               	movlw	128
  4815  0022B8  6E3B               	movwf	(___fldiv@a+2)^0,c
  4816  0022BA  0E44               	movlw	68
  4817  0022BC  6E3C               	movwf	(___fldiv@a+3)^0,c
  4818  0022BE  ECD4  F019         	call	___fldiv	;wreg free
  4819  0022C2  C035  F148         	movff	?___fldiv,_procces_data+24
  4820  0022C6  C036  F149         	movff	?___fldiv+1,_procces_data+25
  4821  0022CA  C037  F14A         	movff	?___fldiv+2,_procces_data+26
  4822  0022CE  C038  F14B         	movff	?___fldiv+3,_procces_data+27
  4823  0022D2                     
  4824                           ;fs_adc.c: 137:             convert_data.convert_channel_6 = (uint32_t)((procces_data.ch
      +                          annel_6*999)/5);
  4825  0022D2  0E00               	movlw	0
  4826  0022D4  6E39               	movwf	___fldiv@a^0,c
  4827  0022D6  0E00               	movlw	0
  4828  0022D8  6E3A               	movwf	(___fldiv@a+1)^0,c
  4829  0022DA  0EA0               	movlw	160
  4830  0022DC  6E3B               	movwf	(___fldiv@a+2)^0,c
  4831  0022DE  0E40               	movlw	64
  4832  0022E0  6E3C               	movwf	(___fldiv@a+3)^0,c
  4833  0022E2  0E00               	movlw	0
  4834  0022E4  6E20               	movwf	___flmul@a^0,c
  4835  0022E6  0EC0               	movlw	192
  4836  0022E8  6E21               	movwf	(___flmul@a+1)^0,c
  4837  0022EA  0E79               	movlw	121
  4838  0022EC  6E22               	movwf	(___flmul@a+2)^0,c
  4839  0022EE  0E44               	movlw	68
  4840  0022F0  6E23               	movwf	(___flmul@a+3)^0,c
  4841  0022F2  C148  F01C         	movff	_procces_data+24,___flmul@b
  4842  0022F6  C149  F01D         	movff	_procces_data+25,___flmul@b+1
  4843  0022FA  C14A  F01E         	movff	_procces_data+26,___flmul@b+2
  4844  0022FE  C14B  F01F         	movff	_procces_data+27,___flmul@b+3
  4845  002302  ECBF  F017         	call	___flmul	;wreg free
  4846  002306  C01C  F035         	movff	?___flmul,___fldiv@b
  4847  00230A  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4848  00230E  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4849  002312  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4850  002316  ECD4  F019         	call	___fldiv	;wreg free
  4851  00231A  C035  F04E         	movff	?___fldiv,___fltol@f1
  4852  00231E  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4853  002322  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4854  002326  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4855  00232A  ECDB  F024         	call	___fltol	;wreg free
  4856  00232E  C04E  F118         	movff	?___fltol,_convert_data+24
  4857  002332  C04F  F119         	movff	?___fltol+1,_convert_data+25
  4858  002336  C050  F11A         	movff	?___fltol+2,_convert_data+26
  4859  00233A  C051  F11B         	movff	?___fltol+3,_convert_data+27
  4860                           
  4861                           ;fs_adc.c: 138:         break;
  4862  00233E  EF43  F012         	goto	l54
  4863  002342                     l5475:
  4864                           
  4865                           ; BSR set to: 0
  4866                           ;fs_adc.c: 141:             adc_raw_data.channel_7 = readAdcValue(7);
  4867  002342  0E07               	movlw	7
  4868  002344  EC94  F02C         	call	_readAdcValue
  4869  002348  C001  F171         	movff	?_readAdcValue,_adc_raw_data+14
  4870  00234C  C002  F172         	movff	?_readAdcValue+1,_adc_raw_data+15
  4871  002350                     
  4872                           ;fs_adc.c: 142:             procces_data.channel_7 = (float)((adc_raw_data.channel_7*5.0
      +                          )/1024.0);
  4873  002350  0E00               	movlw	0
  4874  002352  6E20               	movwf	___flmul@a^0,c
  4875  002354  0E00               	movlw	0
  4876  002356  6E21               	movwf	(___flmul@a+1)^0,c
  4877  002358  0EA0               	movlw	160
  4878  00235A  6E22               	movwf	(___flmul@a+2)^0,c
  4879  00235C  0E40               	movlw	64
  4880  00235E  6E23               	movwf	(___flmul@a+3)^0,c
  4881  002360  C171  F00E         	movff	_adc_raw_data+14,___xxtofl@val
  4882  002364  C172  F00F         	movff	_adc_raw_data+15,___xxtofl@val+1
  4883  002368  6A10               	clrf	(___xxtofl@val+2)^0,c
  4884  00236A  6A11               	clrf	(___xxtofl@val+3)^0,c
  4885  00236C  0E00               	movlw	0
  4886  00236E  EC6F  F020         	call	___xxtofl
  4887  002372  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4888  002376  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4889  00237A  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4890  00237E  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4891  002382  ECBF  F017         	call	___flmul	;wreg free
  4892  002386  C01C  F035         	movff	?___flmul,___fldiv@b
  4893  00238A  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4894  00238E  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4895  002392  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4896  002396  0E00               	movlw	0
  4897  002398  6E39               	movwf	___fldiv@a^0,c
  4898  00239A  0E00               	movlw	0
  4899  00239C  6E3A               	movwf	(___fldiv@a+1)^0,c
  4900  00239E  0E80               	movlw	128
  4901  0023A0  6E3B               	movwf	(___fldiv@a+2)^0,c
  4902  0023A2  0E44               	movlw	68
  4903  0023A4  6E3C               	movwf	(___fldiv@a+3)^0,c
  4904  0023A6  ECD4  F019         	call	___fldiv	;wreg free
  4905  0023AA  C035  F14C         	movff	?___fldiv,_procces_data+28
  4906  0023AE  C036  F14D         	movff	?___fldiv+1,_procces_data+29
  4907  0023B2  C037  F14E         	movff	?___fldiv+2,_procces_data+30
  4908  0023B6  C038  F14F         	movff	?___fldiv+3,_procces_data+31
  4909  0023BA                     
  4910                           ;fs_adc.c: 143:             convert_data.convert_channel_7 = (uint32_t)((procces_data.ch
      +                          annel_7*999)/5);
  4911  0023BA  0E00               	movlw	0
  4912  0023BC  6E39               	movwf	___fldiv@a^0,c
  4913  0023BE  0E00               	movlw	0
  4914  0023C0  6E3A               	movwf	(___fldiv@a+1)^0,c
  4915  0023C2  0EA0               	movlw	160
  4916  0023C4  6E3B               	movwf	(___fldiv@a+2)^0,c
  4917  0023C6  0E40               	movlw	64
  4918  0023C8  6E3C               	movwf	(___fldiv@a+3)^0,c
  4919  0023CA  0E00               	movlw	0
  4920  0023CC  6E20               	movwf	___flmul@a^0,c
  4921  0023CE  0EC0               	movlw	192
  4922  0023D0  6E21               	movwf	(___flmul@a+1)^0,c
  4923  0023D2  0E79               	movlw	121
  4924  0023D4  6E22               	movwf	(___flmul@a+2)^0,c
  4925  0023D6  0E44               	movlw	68
  4926  0023D8  6E23               	movwf	(___flmul@a+3)^0,c
  4927  0023DA  C14C  F01C         	movff	_procces_data+28,___flmul@b
  4928  0023DE  C14D  F01D         	movff	_procces_data+29,___flmul@b+1
  4929  0023E2  C14E  F01E         	movff	_procces_data+30,___flmul@b+2
  4930  0023E6  C14F  F01F         	movff	_procces_data+31,___flmul@b+3
  4931  0023EA  ECBF  F017         	call	___flmul	;wreg free
  4932  0023EE  C01C  F035         	movff	?___flmul,___fldiv@b
  4933  0023F2  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4934  0023F6  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4935  0023FA  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4936  0023FE  ECD4  F019         	call	___fldiv	;wreg free
  4937  002402  C035  F04E         	movff	?___fldiv,___fltol@f1
  4938  002406  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4939  00240A  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4940  00240E  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4941  002412  ECDB  F024         	call	___fltol	;wreg free
  4942  002416  C04E  F11C         	movff	?___fltol,_convert_data+28
  4943  00241A  C04F  F11D         	movff	?___fltol+1,_convert_data+29
  4944  00241E  C050  F11E         	movff	?___fltol+2,_convert_data+30
  4945  002422  C051  F11F         	movff	?___fltol+3,_convert_data+31
  4946                           
  4947                           ;fs_adc.c: 144:         break;
  4948  002426  EF43  F012         	goto	l54
  4949  00242A                     l5483:
  4950  00242A  0100               	movlb	0	; () banked
  4951  00242C  51FC               	movf	(_timer_value+9)& (0+255),w,b
  4952  00242E  6E58               	movwf	??_scanAdcConversion^0,c
  4953  002430  6A59               	clrf	(??_scanAdcConversion+1)^0,c
  4954                           
  4955                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4956                           ; Switch size 1, requested type "simple"
  4957                           ; Number of cases is 1, Range of values is 0 to 0
  4958                           ; switch strategies available:
  4959                           ; Name         Instructions Cycles
  4960                           ; simple_byte            4     3 (average)
  4961                           ;	Chosen strategy is simple_byte
  4962  002432  5059               	movf	(??_scanAdcConversion+1)^0,w,c
  4963  002434  0A00               	xorlw	0	; case 0
  4964  002436  B4D8               	btfsc	status,2,c
  4965  002438  EF20  F012         	goto	l6279
  4966  00243C  EF43  F012         	goto	l54
  4967  002440                     l6279:
  4968                           
  4969                           ; BSR set to: 0
  4970                           ; Switch size 1, requested type "simple"
  4971                           ; Number of cases is 8, Range of values is 1 to 8
  4972                           ; switch strategies available:
  4973                           ; Name         Instructions Cycles
  4974                           ; simple_byte           25    13 (average)
  4975                           ;	Chosen strategy is simple_byte
  4976  002440  5058               	movf	??_scanAdcConversion^0,w,c
  4977  002442  0A01               	xorlw	1	; case 1
  4978  002444  B4D8               	btfsc	status,2,c
  4979  002446  EF43  F00E         	goto	l5431
  4980  00244A  0A03               	xorlw	3	; case 2
  4981  00244C  B4D8               	btfsc	status,2,c
  4982  00244E  EFB7  F00E         	goto	l5437
  4983  002452  0A01               	xorlw	1	; case 3
  4984  002454  B4D8               	btfsc	status,2,c
  4985  002456  EF2B  F00F         	goto	l5443
  4986  00245A  0A07               	xorlw	7	; case 4
  4987  00245C  B4D8               	btfsc	status,2,c
  4988  00245E  EFD1  F00F         	goto	l5451
  4989  002462  0A01               	xorlw	1	; case 5
  4990  002464  B4D8               	btfsc	status,2,c
  4991  002466  EF45  F010         	goto	l5457
  4992  00246A  0A03               	xorlw	3	; case 6
  4993  00246C  B4D8               	btfsc	status,2,c
  4994  00246E  EFB9  F010         	goto	l5463
  4995  002472  0A01               	xorlw	1	; case 7
  4996  002474  B4D8               	btfsc	status,2,c
  4997  002476  EF2D  F011         	goto	l5469
  4998  00247A  0A0F               	xorlw	15	; case 8
  4999  00247C  B4D8               	btfsc	status,2,c
  5000  00247E  EFA1  F011         	goto	l5475
  5001  002482  EF43  F012         	goto	l54
  5002  002486                     l54:
  5003  002486  0012               	return		;funcret
  5004  002488                     __end_of_scanAdcConversion:
  5005                           	callstack 0
  5006                           
  5007 ;; *************** function _readAdcValue *****************
  5008 ;; Defined at:
  5009 ;;		line 34 in file "fs_adc.c"
  5010 ;; Parameters:    Size  Location     Type
  5011 ;;  adcChannel      1    wreg     unsigned char 
  5012 ;; Auto vars:     Size  Location     Type
  5013 ;;  adcChannel      1    4[COMRAM] unsigned char 
  5014 ;;  adcValue        2    5[COMRAM] unsigned short 
  5015 ;; Return value:  Size  Location     Type
  5016 ;;                  2    0[COMRAM] unsigned short 
  5017 ;; Registers used:
  5018 ;;		wreg, status,2, status,0
  5019 ;; Tracked objects:
  5020 ;;		On entry : 0/0
  5021 ;;		On exit  : 0/0
  5022 ;;		Unchanged: 0/0
  5023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5024 ;;      Params:         2       0       0       0       0       0       0
  5025 ;;      Locals:         3       0       0       0       0       0       0
  5026 ;;      Temps:          2       0       0       0       0       0       0
  5027 ;;      Totals:         7       0       0       0       0       0       0
  5028 ;;Total ram usage:        7 bytes
  5029 ;; Hardware stack levels used:    1
  5030 ;; Hardware stack levels required when called:    1
  5031 ;; This function calls:
  5032 ;;		Nothing
  5033 ;; This function is called by:
  5034 ;;		_scanAdcConversion
  5035 ;; This function uses a non-reentrant model
  5036 ;;
  5037                           
  5038                           	psect	text11
  5039  005928                     __ptext11:
  5040                           	callstack 0
  5041  005928                     _readAdcValue:
  5042                           	callstack 25
  5043                           
  5044                           ;incstack = 0
  5045                           ;readAdcValue@adcChannel stored from wreg
  5046  005928  6E05               	movwf	readAdcValue@adcChannel^0,c
  5047  00592A                     
  5048                           ;fs_adc.c: 38:  ADCON0bits.CHS = adcChannel;
  5049  00592A  C005  F003         	movff	readAdcValue@adcChannel,??_readAdcValue
  5050  00592E  4603               	rlncf	??_readAdcValue^0,f,c
  5051  005930  4603               	rlncf	??_readAdcValue^0,f,c
  5052  005932  50C2               	movf	194,w,c	;volatile
  5053  005934  1803               	xorwf	??_readAdcValue^0,w,c
  5054  005936  0B83               	andlw	-125
  5055  005938  1803               	xorwf	??_readAdcValue^0,w,c
  5056  00593A  6EC2               	movwf	194,c	;volatile
  5057  00593C                     
  5058                           ;fs_adc.c: 39:  ADCON0bits.ADON = 1;
  5059  00593C  80C2               	bsf	194,0,c	;volatile
  5060  00593E                     
  5061                           ;fs_adc.c: 40:  ADCON0bits.GO_nDONE = 1;
  5062  00593E  82C2               	bsf	194,1,c	;volatile
  5063  005940                     l35:
  5064  005940  B2C2               	btfsc	194,1,c	;volatile
  5065  005942  EFA5  F02C         	goto	u6311
  5066  005946  EFA7  F02C         	goto	u6310
  5067  00594A                     u6311:
  5068  00594A  EFA0  F02C         	goto	l35
  5069  00594E                     u6310:
  5070  00594E                     
  5071                           ;fs_adc.c: 42:  adcValue = (uint16_t)((ADRESH << 8) + ADRESL);
  5072  00594E  50C4               	movf	196,w,c	;volatile
  5073  005950  6E04               	movwf	(??_readAdcValue+1)^0,c
  5074  005952  6A03               	clrf	??_readAdcValue^0,c
  5075  005954  50C3               	movf	195,w,c	;volatile
  5076  005956  2403               	addwf	??_readAdcValue^0,w,c
  5077  005958  6E06               	movwf	readAdcValue@adcValue^0,c
  5078  00595A  0E00               	movlw	0
  5079  00595C  2004               	addwfc	(??_readAdcValue+1)^0,w,c
  5080  00595E  6E07               	movwf	(readAdcValue@adcValue+1)^0,c
  5081  005960                     
  5082                           ;fs_adc.c: 43:     return adcValue;
  5083  005960  C006  F001         	movff	readAdcValue@adcValue,?_readAdcValue
  5084  005964  C007  F002         	movff	readAdcValue@adcValue+1,?_readAdcValue+1
  5085  005968  0012               	return		;funcret
  5086  00596A                     __end_of_readAdcValue:
  5087                           	callstack 0
  5088                           
  5089 ;; *************** function _calculatedAverageValue *****************
  5090 ;; Defined at:
  5091 ;;		line 154 in file "fs_adc.c"
  5092 ;; Parameters:    Size  Location     Type
  5093 ;;		None
  5094 ;; Auto vars:     Size  Location     Type
  5095 ;;		None
  5096 ;; Return value:  Size  Location     Type
  5097 ;;                  1    wreg      void 
  5098 ;; Registers used:
  5099 ;;		wreg, status,2, status,0, cstack
  5100 ;; Tracked objects:
  5101 ;;		On entry : 0/0
  5102 ;;		On exit  : 0/0
  5103 ;;		Unchanged: 0/0
  5104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5105 ;;      Params:         0       0       0       0       0       0       0
  5106 ;;      Locals:         0       0       0       0       0       0       0
  5107 ;;      Temps:         24       0       0       0       0       0       0
  5108 ;;      Totals:        24       0       0       0       0       0       0
  5109 ;;Total ram usage:       24 bytes
  5110 ;; Hardware stack levels used:    1
  5111 ;; Hardware stack levels required when called:    2
  5112 ;; This function calls:
  5113 ;;		___lldiv
  5114 ;;		___lmul
  5115 ;;		___xxtofl
  5116 ;; This function is called by:
  5117 ;;		_startMotor
  5118 ;; This function uses a non-reentrant model
  5119 ;;
  5120                           
  5121                           	psect	text12
  5122  003742                     __ptext12:
  5123                           	callstack 0
  5124  003742                     _calculatedAverageValue:
  5125                           	callstack 25
  5126  003742                     
  5127                           ;fs_adc.c: 156:     driver_limit.pay = 0;
  5128  003742  0E00               	movlw	0
  5129  003744  0101               	movlb	1	; () banked
  5130  003746  6F73               	movwf	_driver_limit& (0+255),b
  5131  003748  0E00               	movlw	0
  5132  00374A  6F74               	movwf	(_driver_limit+1)& (0+255),b
  5133  00374C  0E00               	movlw	0
  5134  00374E  6F75               	movwf	(_driver_limit+2)& (0+255),b
  5135  003750  0E00               	movlw	0
  5136  003752  6F76               	movwf	(_driver_limit+3)& (0+255),b
  5137                           
  5138                           ;fs_adc.c: 157:     driver_limit.payda = 0;
  5139  003754  0E00               	movlw	0
  5140  003756  6F77               	movwf	(_driver_limit+4)& (0+255),b
  5141  003758  0E00               	movlw	0
  5142  00375A  6F78               	movwf	(_driver_limit+5)& (0+255),b
  5143  00375C  0E00               	movlw	0
  5144  00375E  6F79               	movwf	(_driver_limit+6)& (0+255),b
  5145  003760  0E00               	movlw	0
  5146  003762  6F7A               	movwf	(_driver_limit+7)& (0+255),b
  5147                           
  5148                           ;fs_adc.c: 158:     driver_limit.ortalama = 0;
  5149  003764  0E00               	movlw	0
  5150  003766  6F7B               	movwf	(_driver_limit+8)& (0+255),b
  5151  003768  0E00               	movlw	0
  5152  00376A  6F7C               	movwf	(_driver_limit+9)& (0+255),b
  5153  00376C  0E00               	movlw	0
  5154  00376E  6F7D               	movwf	(_driver_limit+10)& (0+255),b
  5155  003770  0E00               	movlw	0
  5156  003772  6F7E               	movwf	(_driver_limit+11)& (0+255),b
  5157  003774                     
  5158                           ; BSR set to: 1
  5159                           ;fs_adc.c: 161:    driver_limit.pay =(uint32_t) ( (convert_data.convert_channel_0 *1) +
  5160  003774  C10C  F001         	movff	_convert_data+12,___lmul@multiplier
  5161  003778  C10D  F002         	movff	_convert_data+13,___lmul@multiplier+1
  5162  00377C  C10E  F003         	movff	_convert_data+14,___lmul@multiplier+2
  5163  003780  C10F  F004         	movff	_convert_data+15,___lmul@multiplier+3
  5164  003784  0EB8               	movlw	184
  5165  003786  6E05               	movwf	___lmul@multiplicand^0,c
  5166  003788  0E0B               	movlw	11
  5167  00378A  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5168  00378C  0E00               	movlw	0
  5169  00378E  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5170  003790  0E00               	movlw	0
  5171  003792  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5172  003794  ECAB  F02A         	call	___lmul	;wreg free
  5173  003798  C001  F01C         	movff	?___lmul,??_calculatedAverageValue
  5174  00379C  C002  F01D         	movff	?___lmul+1,??_calculatedAverageValue+1
  5175  0037A0  C003  F01E         	movff	?___lmul+2,??_calculatedAverageValue+2
  5176  0037A4  C004  F01F         	movff	?___lmul+3,??_calculatedAverageValue+3
  5177  0037A8  C108  F001         	movff	_convert_data+8,___lmul@multiplier
  5178  0037AC  C109  F002         	movff	_convert_data+9,___lmul@multiplier+1
  5179  0037B0  C10A  F003         	movff	_convert_data+10,___lmul@multiplier+2
  5180  0037B4  C10B  F004         	movff	_convert_data+11,___lmul@multiplier+3
  5181  0037B8  0ED0               	movlw	208
  5182  0037BA  6E05               	movwf	___lmul@multiplicand^0,c
  5183  0037BC  0E07               	movlw	7
  5184  0037BE  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5185  0037C0  0E00               	movlw	0
  5186  0037C2  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5187  0037C4  0E00               	movlw	0
  5188  0037C6  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5189  0037C8  ECAB  F02A         	call	___lmul	;wreg free
  5190  0037CC  5001               	movf	?___lmul^0,w,c
  5191  0037CE  241C               	addwf	??_calculatedAverageValue^0,w,c
  5192  0037D0  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5193  0037D2  5002               	movf	(?___lmul+1)^0,w,c
  5194  0037D4  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5195  0037D6  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5196  0037D8  5003               	movf	(?___lmul+2)^0,w,c
  5197  0037DA  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5198  0037DC  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5199  0037DE  5004               	movf	(?___lmul+3)^0,w,c
  5200  0037E0  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5201  0037E2  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5202  0037E4  C104  F001         	movff	_convert_data+4,___lmul@multiplier
  5203  0037E8  C105  F002         	movff	_convert_data+5,___lmul@multiplier+1
  5204  0037EC  C106  F003         	movff	_convert_data+6,___lmul@multiplier+2
  5205  0037F0  C107  F004         	movff	_convert_data+7,___lmul@multiplier+3
  5206  0037F4  0EE8               	movlw	232
  5207  0037F6  6E05               	movwf	___lmul@multiplicand^0,c
  5208  0037F8  0E03               	movlw	3
  5209  0037FA  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5210  0037FC  0E00               	movlw	0
  5211  0037FE  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5212  003800  0E00               	movlw	0
  5213  003802  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5214  003804  ECAB  F02A         	call	___lmul	;wreg free
  5215  003808  5001               	movf	?___lmul^0,w,c
  5216  00380A  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5217  00380C  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5218  00380E  5002               	movf	(?___lmul+1)^0,w,c
  5219  003810  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5220  003812  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5221  003814  5003               	movf	(?___lmul+2)^0,w,c
  5222  003816  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5223  003818  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5224  00381A  5004               	movf	(?___lmul+3)^0,w,c
  5225  00381C  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5226  00381E  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5227  003820  0101               	movlb	1	; () banked
  5228  003822  5100               	movf	_convert_data& (0+255),w,b
  5229  003824  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5230  003826  6F73               	movwf	_driver_limit& (0+255),b
  5231  003828  5101               	movf	(_convert_data+1)& (0+255),w,b
  5232  00382A  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5233  00382C  6F74               	movwf	(_driver_limit+1)& (0+255),b
  5234  00382E  5102               	movf	(_convert_data+2)& (0+255),w,b
  5235  003830  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5236  003832  6F75               	movwf	(_driver_limit+2)& (0+255),b
  5237  003834  5103               	movf	(_convert_data+3)& (0+255),w,b
  5238  003836  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5239  003838  6F76               	movwf	(_driver_limit+3)& (0+255),b
  5240  00383A                     
  5241                           ; BSR set to: 1
  5242                           ;fs_adc.c: 166:    driver_limit.pay += (uint32_t)( (convert_data.convert_channel_4 * 400
      +                          0) +
  5243  00383A  C11C  F001         	movff	_convert_data+28,___lmul@multiplier
  5244  00383E  C11D  F002         	movff	_convert_data+29,___lmul@multiplier+1
  5245  003842  C11E  F003         	movff	_convert_data+30,___lmul@multiplier+2
  5246  003846  C11F  F004         	movff	_convert_data+31,___lmul@multiplier+3
  5247  00384A  0E58               	movlw	88
  5248  00384C  6E05               	movwf	___lmul@multiplicand^0,c
  5249  00384E  0E1B               	movlw	27
  5250  003850  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5251  003852  0E00               	movlw	0
  5252  003854  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5253  003856  0E00               	movlw	0
  5254  003858  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5255  00385A  ECAB  F02A         	call	___lmul	;wreg free
  5256  00385E  C001  F01C         	movff	?___lmul,??_calculatedAverageValue
  5257  003862  C002  F01D         	movff	?___lmul+1,??_calculatedAverageValue+1
  5258  003866  C003  F01E         	movff	?___lmul+2,??_calculatedAverageValue+2
  5259  00386A  C004  F01F         	movff	?___lmul+3,??_calculatedAverageValue+3
  5260  00386E  C118  F001         	movff	_convert_data+24,___lmul@multiplier
  5261  003872  C119  F002         	movff	_convert_data+25,___lmul@multiplier+1
  5262  003876  C11A  F003         	movff	_convert_data+26,___lmul@multiplier+2
  5263  00387A  C11B  F004         	movff	_convert_data+27,___lmul@multiplier+3
  5264  00387E  0E70               	movlw	112
  5265  003880  6E05               	movwf	___lmul@multiplicand^0,c
  5266  003882  0E17               	movlw	23
  5267  003884  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5268  003886  0E00               	movlw	0
  5269  003888  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5270  00388A  0E00               	movlw	0
  5271  00388C  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5272  00388E  ECAB  F02A         	call	___lmul	;wreg free
  5273  003892  5001               	movf	?___lmul^0,w,c
  5274  003894  241C               	addwf	??_calculatedAverageValue^0,w,c
  5275  003896  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5276  003898  5002               	movf	(?___lmul+1)^0,w,c
  5277  00389A  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5278  00389C  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5279  00389E  5003               	movf	(?___lmul+2)^0,w,c
  5280  0038A0  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5281  0038A2  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5282  0038A4  5004               	movf	(?___lmul+3)^0,w,c
  5283  0038A6  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5284  0038A8  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5285  0038AA  C114  F001         	movff	_convert_data+20,___lmul@multiplier
  5286  0038AE  C115  F002         	movff	_convert_data+21,___lmul@multiplier+1
  5287  0038B2  C116  F003         	movff	_convert_data+22,___lmul@multiplier+2
  5288  0038B6  C117  F004         	movff	_convert_data+23,___lmul@multiplier+3
  5289  0038BA  0E88               	movlw	136
  5290  0038BC  6E05               	movwf	___lmul@multiplicand^0,c
  5291  0038BE  0E13               	movlw	19
  5292  0038C0  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5293  0038C2  0E00               	movlw	0
  5294  0038C4  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5295  0038C6  0E00               	movlw	0
  5296  0038C8  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5297  0038CA  ECAB  F02A         	call	___lmul	;wreg free
  5298  0038CE  5001               	movf	?___lmul^0,w,c
  5299  0038D0  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5300  0038D2  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5301  0038D4  5002               	movf	(?___lmul+1)^0,w,c
  5302  0038D6  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5303  0038D8  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5304  0038DA  5003               	movf	(?___lmul+2)^0,w,c
  5305  0038DC  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5306  0038DE  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5307  0038E0  5004               	movf	(?___lmul+3)^0,w,c
  5308  0038E2  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5309  0038E4  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5310  0038E6  C110  F001         	movff	_convert_data+16,___lmul@multiplier
  5311  0038EA  C111  F002         	movff	_convert_data+17,___lmul@multiplier+1
  5312  0038EE  C112  F003         	movff	_convert_data+18,___lmul@multiplier+2
  5313  0038F2  C113  F004         	movff	_convert_data+19,___lmul@multiplier+3
  5314  0038F6  0EA0               	movlw	160
  5315  0038F8  6E05               	movwf	___lmul@multiplicand^0,c
  5316  0038FA  0E0F               	movlw	15
  5317  0038FC  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5318  0038FE  0E00               	movlw	0
  5319  003900  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5320  003902  0E00               	movlw	0
  5321  003904  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5322  003906  ECAB  F02A         	call	___lmul	;wreg free
  5323  00390A  5001               	movf	?___lmul^0,w,c
  5324  00390C  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5325  00390E  6E28               	movwf	(??_calculatedAverageValue+12)^0,c
  5326  003910  5002               	movf	(?___lmul+1)^0,w,c
  5327  003912  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5328  003914  6E29               	movwf	(??_calculatedAverageValue+13)^0,c
  5329  003916  5003               	movf	(?___lmul+2)^0,w,c
  5330  003918  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5331  00391A  6E2A               	movwf	(??_calculatedAverageValue+14)^0,c
  5332  00391C  5004               	movf	(?___lmul+3)^0,w,c
  5333  00391E  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5334  003920  6E2B               	movwf	(??_calculatedAverageValue+15)^0,c
  5335  003922  5028               	movf	(??_calculatedAverageValue+12)^0,w,c
  5336  003924  0101               	movlb	1	; () banked
  5337  003926  2773               	addwf	_driver_limit& (0+255),f,b
  5338  003928  5029               	movf	(??_calculatedAverageValue+13)^0,w,c
  5339  00392A  2374               	addwfc	(_driver_limit+1)& (0+255),f,b
  5340  00392C  502A               	movf	(??_calculatedAverageValue+14)^0,w,c
  5341  00392E  2375               	addwfc	(_driver_limit+2)& (0+255),f,b
  5342  003930  502B               	movf	(??_calculatedAverageValue+15)^0,w,c
  5343  003932  2376               	addwfc	(_driver_limit+3)& (0+255),f,b
  5344  003934                     
  5345                           ; BSR set to: 1
  5346                           ;fs_adc.c: 171:     driver_limit.payda = (uint32_t) (convert_data.convert_channel_0 + co
      +                          nvert_data.convert_channel_1 +
  5347  003934  5108               	movf	(_convert_data+8)& (0+255),w,b
  5348  003936  2504               	addwf	(_convert_data+4)& (0+255),w,b
  5349  003938  6E1C               	movwf	??_calculatedAverageValue^0,c
  5350  00393A  5109               	movf	(_convert_data+9)& (0+255),w,b
  5351  00393C  2105               	addwfc	(_convert_data+5)& (0+255),w,b
  5352  00393E  6E1D               	movwf	(??_calculatedAverageValue+1)^0,c
  5353  003940  510A               	movf	(_convert_data+10)& (0+255),w,b
  5354  003942  2106               	addwfc	(_convert_data+6)& (0+255),w,b
  5355  003944  6E1E               	movwf	(??_calculatedAverageValue+2)^0,c
  5356  003946  510B               	movf	(_convert_data+11)& (0+255),w,b
  5357  003948  2107               	addwfc	(_convert_data+7)& (0+255),w,b
  5358  00394A  6E1F               	movwf	(??_calculatedAverageValue+3)^0,c
  5359  00394C  510C               	movf	(_convert_data+12)& (0+255),w,b
  5360  00394E  241C               	addwf	??_calculatedAverageValue^0,w,c
  5361  003950  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5362  003952  510D               	movf	(_convert_data+13)& (0+255),w,b
  5363  003954  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5364  003956  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5365  003958  510E               	movf	(_convert_data+14)& (0+255),w,b
  5366  00395A  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5367  00395C  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5368  00395E  510F               	movf	(_convert_data+15)& (0+255),w,b
  5369  003960  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5370  003962  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5371  003964  5110               	movf	(_convert_data+16)& (0+255),w,b
  5372  003966  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5373  003968  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5374  00396A  5111               	movf	(_convert_data+17)& (0+255),w,b
  5375  00396C  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5376  00396E  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5377  003970  5112               	movf	(_convert_data+18)& (0+255),w,b
  5378  003972  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5379  003974  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5380  003976  5113               	movf	(_convert_data+19)& (0+255),w,b
  5381  003978  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5382  00397A  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5383  00397C  5114               	movf	(_convert_data+20)& (0+255),w,b
  5384  00397E  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5385  003980  6E28               	movwf	(??_calculatedAverageValue+12)^0,c
  5386  003982  5115               	movf	(_convert_data+21)& (0+255),w,b
  5387  003984  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5388  003986  6E29               	movwf	(??_calculatedAverageValue+13)^0,c
  5389  003988  5116               	movf	(_convert_data+22)& (0+255),w,b
  5390  00398A  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5391  00398C  6E2A               	movwf	(??_calculatedAverageValue+14)^0,c
  5392  00398E  5117               	movf	(_convert_data+23)& (0+255),w,b
  5393  003990  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5394  003992  6E2B               	movwf	(??_calculatedAverageValue+15)^0,c
  5395  003994  5118               	movf	(_convert_data+24)& (0+255),w,b
  5396  003996  2428               	addwf	(??_calculatedAverageValue+12)^0,w,c
  5397  003998  6E2C               	movwf	(??_calculatedAverageValue+16)^0,c
  5398  00399A  5119               	movf	(_convert_data+25)& (0+255),w,b
  5399  00399C  2029               	addwfc	(??_calculatedAverageValue+13)^0,w,c
  5400  00399E  6E2D               	movwf	(??_calculatedAverageValue+17)^0,c
  5401  0039A0  511A               	movf	(_convert_data+26)& (0+255),w,b
  5402  0039A2  202A               	addwfc	(??_calculatedAverageValue+14)^0,w,c
  5403  0039A4  6E2E               	movwf	(??_calculatedAverageValue+18)^0,c
  5404  0039A6  511B               	movf	(_convert_data+27)& (0+255),w,b
  5405  0039A8  202B               	addwfc	(??_calculatedAverageValue+15)^0,w,c
  5406  0039AA  6E2F               	movwf	(??_calculatedAverageValue+19)^0,c
  5407  0039AC  511C               	movf	(_convert_data+28)& (0+255),w,b
  5408  0039AE  242C               	addwf	(??_calculatedAverageValue+16)^0,w,c
  5409  0039B0  6E30               	movwf	(??_calculatedAverageValue+20)^0,c
  5410  0039B2  511D               	movf	(_convert_data+29)& (0+255),w,b
  5411  0039B4  202D               	addwfc	(??_calculatedAverageValue+17)^0,w,c
  5412  0039B6  6E31               	movwf	(??_calculatedAverageValue+21)^0,c
  5413  0039B8  511E               	movf	(_convert_data+30)& (0+255),w,b
  5414  0039BA  202E               	addwfc	(??_calculatedAverageValue+18)^0,w,c
  5415  0039BC  6E32               	movwf	(??_calculatedAverageValue+22)^0,c
  5416  0039BE  511F               	movf	(_convert_data+31)& (0+255),w,b
  5417  0039C0  202F               	addwfc	(??_calculatedAverageValue+19)^0,w,c
  5418  0039C2  6E33               	movwf	(??_calculatedAverageValue+23)^0,c
  5419  0039C4  5100               	movf	_convert_data& (0+255),w,b
  5420  0039C6  2430               	addwf	(??_calculatedAverageValue+20)^0,w,c
  5421  0039C8  6F77               	movwf	(_driver_limit+4)& (0+255),b
  5422  0039CA  5101               	movf	(_convert_data+1)& (0+255),w,b
  5423  0039CC  2031               	addwfc	(??_calculatedAverageValue+21)^0,w,c
  5424  0039CE  6F78               	movwf	(_driver_limit+5)& (0+255),b
  5425  0039D0  5102               	movf	(_convert_data+2)& (0+255),w,b
  5426  0039D2  2032               	addwfc	(??_calculatedAverageValue+22)^0,w,c
  5427  0039D4  6F79               	movwf	(_driver_limit+6)& (0+255),b
  5428  0039D6  5103               	movf	(_convert_data+3)& (0+255),w,b
  5429  0039D8  2033               	addwfc	(??_calculatedAverageValue+23)^0,w,c
  5430  0039DA  6F7A               	movwf	(_driver_limit+7)& (0+255),b
  5431  0039DC                     
  5432                           ; BSR set to: 1
  5433                           ;fs_adc.c: 176:     driver_limit.ortalama = (float)(driver_limit.pay/driver_limit.payda)
      +                          ;
  5434  0039DC  C177  F005         	movff	_driver_limit+4,___lldiv@divisor
  5435  0039E0  C178  F006         	movff	_driver_limit+5,___lldiv@divisor+1
  5436  0039E4  C179  F007         	movff	_driver_limit+6,___lldiv@divisor+2
  5437  0039E8  C17A  F008         	movff	_driver_limit+7,___lldiv@divisor+3
  5438  0039EC  C173  F001         	movff	_driver_limit,___lldiv@dividend
  5439  0039F0  C174  F002         	movff	_driver_limit+1,___lldiv@dividend+1
  5440  0039F4  C175  F003         	movff	_driver_limit+2,___lldiv@dividend+2
  5441  0039F8  C176  F004         	movff	_driver_limit+3,___lldiv@dividend+3
  5442  0039FC  EC1E  F029         	call	___lldiv	;wreg free
  5443  003A00  C001  F00E         	movff	?___lldiv,___xxtofl@val
  5444  003A04  C002  F00F         	movff	?___lldiv+1,___xxtofl@val+1
  5445  003A08  C003  F010         	movff	?___lldiv+2,___xxtofl@val+2
  5446  003A0C  C004  F011         	movff	?___lldiv+3,___xxtofl@val+3
  5447  003A10  0E00               	movlw	0
  5448  003A12  EC6F  F020         	call	___xxtofl
  5449  003A16  C00E  F17B         	movff	?___xxtofl,_driver_limit+8
  5450  003A1A  C00F  F17C         	movff	?___xxtofl+1,_driver_limit+9
  5451  003A1E  C010  F17D         	movff	?___xxtofl+2,_driver_limit+10
  5452  003A22  C011  F17E         	movff	?___xxtofl+3,_driver_limit+11
  5453  003A26  0012               	return		;funcret
  5454  003A28                     __end_of_calculatedAverageValue:
  5455                           	callstack 0
  5456                           
  5457 ;; *************** function ___lmul *****************
  5458 ;; Defined at:
  5459 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul32.c"
  5460 ;; Parameters:    Size  Location     Type
  5461 ;;  multiplier      4    0[COMRAM] unsigned long 
  5462 ;;  multiplicand    4    4[COMRAM] unsigned long 
  5463 ;; Auto vars:     Size  Location     Type
  5464 ;;  product         4    8[COMRAM] unsigned long 
  5465 ;; Return value:  Size  Location     Type
  5466 ;;                  4    0[COMRAM] unsigned long 
  5467 ;; Registers used:
  5468 ;;		wreg, status,2, status,0
  5469 ;; Tracked objects:
  5470 ;;		On entry : 0/0
  5471 ;;		On exit  : 0/0
  5472 ;;		Unchanged: 0/0
  5473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5474 ;;      Params:         8       0       0       0       0       0       0
  5475 ;;      Locals:         4       0       0       0       0       0       0
  5476 ;;      Temps:          0       0       0       0       0       0       0
  5477 ;;      Totals:        12       0       0       0       0       0       0
  5478 ;;Total ram usage:       12 bytes
  5479 ;; Hardware stack levels used:    1
  5480 ;; Hardware stack levels required when called:    1
  5481 ;; This function calls:
  5482 ;;		Nothing
  5483 ;; This function is called by:
  5484 ;;		_calculatedAverageValue
  5485 ;; This function uses a non-reentrant model
  5486 ;;
  5487                           
  5488                           	psect	text13
  5489  005556                     __ptext13:
  5490                           	callstack 0
  5491  005556                     ___lmul:
  5492                           	callstack 25
  5493  005556  0E00               	movlw	0
  5494  005558  6E09               	movwf	___lmul@product^0,c
  5495  00555A  0E00               	movlw	0
  5496  00555C  6E0A               	movwf	(___lmul@product+1)^0,c
  5497  00555E  0E00               	movlw	0
  5498  005560  6E0B               	movwf	(___lmul@product+2)^0,c
  5499  005562  0E00               	movlw	0
  5500  005564  6E0C               	movwf	(___lmul@product+3)^0,c
  5501  005566                     l5235:
  5502  005566  A001               	btfss	___lmul@multiplier^0,0,c
  5503  005568  EFB8  F02A         	goto	u6361
  5504  00556C  EFBA  F02A         	goto	u6360
  5505  005570                     u6361:
  5506  005570  EFC2  F02A         	goto	l5239
  5507  005574                     u6360:
  5508  005574  5005               	movf	___lmul@multiplicand^0,w,c
  5509  005576  2609               	addwf	___lmul@product^0,f,c
  5510  005578  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  5511  00557A  220A               	addwfc	(___lmul@product+1)^0,f,c
  5512  00557C  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  5513  00557E  220B               	addwfc	(___lmul@product+2)^0,f,c
  5514  005580  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  5515  005582  220C               	addwfc	(___lmul@product+3)^0,f,c
  5516  005584                     l5239:
  5517  005584  90D8               	bcf	status,0,c
  5518  005586  3605               	rlcf	___lmul@multiplicand^0,f,c
  5519  005588  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  5520  00558A  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  5521  00558C  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  5522  00558E  90D8               	bcf	status,0,c
  5523  005590  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  5524  005592  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  5525  005594  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  5526  005596  3201               	rrcf	___lmul@multiplier^0,f,c
  5527  005598  5001               	movf	___lmul@multiplier^0,w,c
  5528  00559A  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  5529  00559C  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  5530  00559E  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  5531  0055A0  A4D8               	btfss	status,2,c
  5532  0055A2  EFD5  F02A         	goto	u6371
  5533  0055A6  EFD7  F02A         	goto	u6370
  5534  0055AA                     u6371:
  5535  0055AA  EFB3  F02A         	goto	l5235
  5536  0055AE                     u6370:
  5537  0055AE  C009  F001         	movff	___lmul@product,?___lmul
  5538  0055B2  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  5539  0055B6  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  5540  0055BA  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  5541  0055BE  0012               	return		;funcret
  5542  0055C0                     __end_of___lmul:
  5543                           	callstack 0
  5544                           
  5545 ;; *************** function ___lldiv *****************
  5546 ;; Defined at:
  5547 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__lldiv.c"
  5548 ;; Parameters:    Size  Location     Type
  5549 ;;  dividend        4    0[COMRAM] unsigned long 
  5550 ;;  divisor         4    4[COMRAM] unsigned long 
  5551 ;; Auto vars:     Size  Location     Type
  5552 ;;  quotient        4    8[COMRAM] unsigned long 
  5553 ;;  counter         1   12[COMRAM] unsigned char 
  5554 ;; Return value:  Size  Location     Type
  5555 ;;                  4    0[COMRAM] unsigned long 
  5556 ;; Registers used:
  5557 ;;		wreg, status,2, status,0
  5558 ;; Tracked objects:
  5559 ;;		On entry : 0/0
  5560 ;;		On exit  : 0/0
  5561 ;;		Unchanged: 0/0
  5562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5563 ;;      Params:         8       0       0       0       0       0       0
  5564 ;;      Locals:         5       0       0       0       0       0       0
  5565 ;;      Temps:          0       0       0       0       0       0       0
  5566 ;;      Totals:        13       0       0       0       0       0       0
  5567 ;;Total ram usage:       13 bytes
  5568 ;; Hardware stack levels used:    1
  5569 ;; Hardware stack levels required when called:    1
  5570 ;; This function calls:
  5571 ;;		Nothing
  5572 ;; This function is called by:
  5573 ;;		_calculatedAverageValue
  5574 ;; This function uses a non-reentrant model
  5575 ;;
  5576                           
  5577                           	psect	text14
  5578  00523C                     __ptext14:
  5579                           	callstack 0
  5580  00523C                     ___lldiv:
  5581                           	callstack 25
  5582  00523C  0E00               	movlw	0
  5583  00523E  6E09               	movwf	___lldiv@quotient^0,c
  5584  005240  0E00               	movlw	0
  5585  005242  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  5586  005244  0E00               	movlw	0
  5587  005246  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  5588  005248  0E00               	movlw	0
  5589  00524A  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  5590  00524C  5005               	movf	___lldiv@divisor^0,w,c
  5591  00524E  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  5592  005250  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  5593  005252  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  5594  005254  B4D8               	btfsc	status,2,c
  5595  005256  EF2F  F029         	goto	u6381
  5596  00525A  EF31  F029         	goto	u6380
  5597  00525E                     u6381:
  5598  00525E  EF67  F029         	goto	l515
  5599  005262                     u6380:
  5600  005262  0E01               	movlw	1
  5601  005264  6E0D               	movwf	___lldiv@counter^0,c
  5602  005266  EF3B  F029         	goto	l5251
  5603  00526A                     l5249:
  5604  00526A  90D8               	bcf	status,0,c
  5605  00526C  3605               	rlcf	___lldiv@divisor^0,f,c
  5606  00526E  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  5607  005270  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  5608  005272  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  5609  005274  2A0D               	incf	___lldiv@counter^0,f,c
  5610  005276                     l5251:
  5611  005276  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  5612  005278  EF40  F029         	goto	u6391
  5613  00527C  EF42  F029         	goto	u6390
  5614  005280                     u6391:
  5615  005280  EF35  F029         	goto	l5249
  5616  005284                     u6390:
  5617  005284                     l5253:
  5618  005284  90D8               	bcf	status,0,c
  5619  005286  3609               	rlcf	___lldiv@quotient^0,f,c
  5620  005288  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  5621  00528A  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  5622  00528C  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  5623  00528E  5005               	movf	___lldiv@divisor^0,w,c
  5624  005290  5C01               	subwf	___lldiv@dividend^0,w,c
  5625  005292  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5626  005294  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  5627  005296  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5628  005298  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  5629  00529A  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5630  00529C  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  5631  00529E  A0D8               	btfss	status,0,c
  5632  0052A0  EF54  F029         	goto	u6401
  5633  0052A4  EF56  F029         	goto	u6400
  5634  0052A8                     u6401:
  5635  0052A8  EF5F  F029         	goto	l5261
  5636  0052AC                     u6400:
  5637  0052AC  5005               	movf	___lldiv@divisor^0,w,c
  5638  0052AE  5E01               	subwf	___lldiv@dividend^0,f,c
  5639  0052B0  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5640  0052B2  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  5641  0052B4  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5642  0052B6  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  5643  0052B8  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5644  0052BA  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  5645  0052BC  8009               	bsf	___lldiv@quotient^0,0,c
  5646  0052BE                     l5261:
  5647  0052BE  90D8               	bcf	status,0,c
  5648  0052C0  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  5649  0052C2  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  5650  0052C4  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  5651  0052C6  3205               	rrcf	___lldiv@divisor^0,f,c
  5652  0052C8  2E0D               	decfsz	___lldiv@counter^0,f,c
  5653  0052CA  EF42  F029         	goto	l5253
  5654  0052CE                     l515:
  5655  0052CE  C009  F001         	movff	___lldiv@quotient,?___lldiv
  5656  0052D2  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  5657  0052D6  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  5658  0052DA  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  5659  0052DE  0012               	return		;funcret
  5660  0052E0                     __end_of___lldiv:
  5661                           	callstack 0
  5662                           
  5663 ;; *************** function _PWM2_setDC *****************
  5664 ;; Defined at:
  5665 ;;		line 59 in file "fs_pwm.c"
  5666 ;; Parameters:    Size  Location     Type
  5667 ;;  dutycycle       2   87[COMRAM] short 
  5668 ;; Auto vars:     Size  Location     Type
  5669 ;;  duty            2   91[COMRAM] unsigned short 
  5670 ;; Return value:  Size  Location     Type
  5671 ;;                  1    wreg      void 
  5672 ;; Registers used:
  5673 ;;		wreg, status,2, status,0, cstack
  5674 ;; Tracked objects:
  5675 ;;		On entry : 0/0
  5676 ;;		On exit  : 0/0
  5677 ;;		Unchanged: 0/0
  5678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5679 ;;      Params:         2       0       0       0       0       0       0
  5680 ;;      Locals:         2       0       0       0       0       0       0
  5681 ;;      Temps:          2       0       0       0       0       0       0
  5682 ;;      Totals:         6       0       0       0       0       0       0
  5683 ;;Total ram usage:        6 bytes
  5684 ;; Hardware stack levels used:    1
  5685 ;; Hardware stack levels required when called:    2
  5686 ;; This function calls:
  5687 ;;		___fltol
  5688 ;;		___xxtofl
  5689 ;;		_fabsf
  5690 ;; This function is called by:
  5691 ;;		_main
  5692 ;;		_stopMotor
  5693 ;;		_startMotor
  5694 ;; This function uses a non-reentrant model
  5695 ;;
  5696                           
  5697                           	psect	text15
  5698  0053F4                     __ptext15:
  5699                           	callstack 0
  5700  0053F4                     _PWM2_setDC:
  5701                           	callstack 25
  5702  0053F4                     
  5703                           ;fs_pwm.c: 63:     if (dutycycle <= 1023)
  5704  0053F4  BE59               	btfsc	(PWM2_setDC@dutycycle+1)^0,7,c
  5705  0053F6  EF06  F02A         	goto	u6730
  5706  0053FA  0E04               	movlw	4
  5707  0053FC  5C59               	subwf	(PWM2_setDC@dutycycle+1)^0,w,c
  5708  0053FE  B0D8               	btfsc	status,0,c
  5709  005400  EF04  F02A         	goto	u6731
  5710  005404  EF06  F02A         	goto	u6730
  5711  005408                     u6731:
  5712  005408  EF36  F02A         	goto	l412
  5713  00540C                     u6730:
  5714  00540C                     
  5715                           ;fs_pwm.c: 64:     {;fs_pwm.c: 65:         duty = (uint16_t) fabsf(dutycycle);
  5716  00540C  C058  F00E         	movff	PWM2_setDC@dutycycle,___xxtofl@val
  5717  005410  C059  F00F         	movff	PWM2_setDC@dutycycle+1,___xxtofl@val+1
  5718  005414  0E00               	movlw	0
  5719  005416  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  5720  005418  0EFF               	movlw	-1
  5721  00541A  6E10               	movwf	(___xxtofl@val+2)^0,c
  5722  00541C  6E11               	movwf	(___xxtofl@val+3)^0,c
  5723  00541E  0E01               	movlw	1
  5724  005420  EC6F  F020         	call	___xxtofl
  5725  005424  C00E  F01C         	movff	?___xxtofl,fabsf@x
  5726  005428  C00F  F01D         	movff	?___xxtofl+1,fabsf@x+1
  5727  00542C  C010  F01E         	movff	?___xxtofl+2,fabsf@x+2
  5728  005430  C011  F01F         	movff	?___xxtofl+3,fabsf@x+3
  5729  005434  ECB7  F02D         	call	_fabsf	;wreg free
  5730  005438  C01C  F04E         	movff	?_fabsf,___fltol@f1
  5731  00543C  C01D  F04F         	movff	?_fabsf+1,___fltol@f1+1
  5732  005440  C01E  F050         	movff	?_fabsf+2,___fltol@f1+2
  5733  005444  C01F  F051         	movff	?_fabsf+3,___fltol@f1+3
  5734  005448  ECDB  F024         	call	___fltol	;wreg free
  5735  00544C  C04E  F05C         	movff	?___fltol,PWM2_setDC@duty
  5736  005450  C04F  F05D         	movff	?___fltol+1,PWM2_setDC@duty+1
  5737  005454                     
  5738                           ;fs_pwm.c: 66:         CCPR2L = duty>>2;
  5739  005454  C05C  F05A         	movff	PWM2_setDC@duty,??_PWM2_setDC
  5740  005458  C05D  F05B         	movff	PWM2_setDC@duty+1,??_PWM2_setDC+1
  5741  00545C  90D8               	bcf	status,0,c
  5742  00545E  325B               	rrcf	(??_PWM2_setDC+1)^0,f,c
  5743  005460  325A               	rrcf	??_PWM2_setDC^0,f,c
  5744  005462  90D8               	bcf	status,0,c
  5745  005464  325B               	rrcf	(??_PWM2_setDC+1)^0,f,c
  5746  005466  325A               	rrcf	??_PWM2_setDC^0,f,c
  5747  005468  505A               	movf	??_PWM2_setDC^0,w,c
  5748  00546A  6E67               	movwf	103,c	;volatile
  5749  00546C                     l412:
  5750  00546C  0012               	return		;funcret
  5751  00546E                     __end_of_PWM2_setDC:
  5752                           	callstack 0
  5753                           
  5754 ;; *************** function _PWM1_setDC *****************
  5755 ;; Defined at:
  5756 ;;		line 43 in file "fs_pwm.c"
  5757 ;; Parameters:    Size  Location     Type
  5758 ;;  dutycycle       2   87[COMRAM] short 
  5759 ;; Auto vars:     Size  Location     Type
  5760 ;;  duty            2   91[COMRAM] unsigned short 
  5761 ;; Return value:  Size  Location     Type
  5762 ;;                  1    wreg      void 
  5763 ;; Registers used:
  5764 ;;		wreg, status,2, status,0, cstack
  5765 ;; Tracked objects:
  5766 ;;		On entry : 0/0
  5767 ;;		On exit  : 0/0
  5768 ;;		Unchanged: 0/0
  5769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5770 ;;      Params:         2       0       0       0       0       0       0
  5771 ;;      Locals:         2       0       0       0       0       0       0
  5772 ;;      Temps:          2       0       0       0       0       0       0
  5773 ;;      Totals:         6       0       0       0       0       0       0
  5774 ;;Total ram usage:        6 bytes
  5775 ;; Hardware stack levels used:    1
  5776 ;; Hardware stack levels required when called:    2
  5777 ;; This function calls:
  5778 ;;		___fltol
  5779 ;;		___xxtofl
  5780 ;;		_fabsf
  5781 ;; This function is called by:
  5782 ;;		_main
  5783 ;;		_stopMotor
  5784 ;;		_startMotor
  5785 ;; This function uses a non-reentrant model
  5786 ;;
  5787                           
  5788                           	psect	text16
  5789  00546E                     __ptext16:
  5790                           	callstack 0
  5791  00546E                     _PWM1_setDC:
  5792                           	callstack 25
  5793  00546E                     
  5794                           ;fs_pwm.c: 47:     if (dutycycle <= 1023)
  5795  00546E  BE59               	btfsc	(PWM1_setDC@dutycycle+1)^0,7,c
  5796  005470  EF43  F02A         	goto	u6720
  5797  005474  0E04               	movlw	4
  5798  005476  5C59               	subwf	(PWM1_setDC@dutycycle+1)^0,w,c
  5799  005478  B0D8               	btfsc	status,0,c
  5800  00547A  EF41  F02A         	goto	u6721
  5801  00547E  EF43  F02A         	goto	u6720
  5802  005482                     u6721:
  5803  005482  EF73  F02A         	goto	l408
  5804  005486                     u6720:
  5805  005486                     
  5806                           ;fs_pwm.c: 48:     {;fs_pwm.c: 49:         duty = (uint16_t) fabsf(dutycycle);
  5807  005486  C058  F00E         	movff	PWM1_setDC@dutycycle,___xxtofl@val
  5808  00548A  C059  F00F         	movff	PWM1_setDC@dutycycle+1,___xxtofl@val+1
  5809  00548E  0E00               	movlw	0
  5810  005490  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  5811  005492  0EFF               	movlw	-1
  5812  005494  6E10               	movwf	(___xxtofl@val+2)^0,c
  5813  005496  6E11               	movwf	(___xxtofl@val+3)^0,c
  5814  005498  0E01               	movlw	1
  5815  00549A  EC6F  F020         	call	___xxtofl
  5816  00549E  C00E  F01C         	movff	?___xxtofl,fabsf@x
  5817  0054A2  C00F  F01D         	movff	?___xxtofl+1,fabsf@x+1
  5818  0054A6  C010  F01E         	movff	?___xxtofl+2,fabsf@x+2
  5819  0054AA  C011  F01F         	movff	?___xxtofl+3,fabsf@x+3
  5820  0054AE  ECB7  F02D         	call	_fabsf	;wreg free
  5821  0054B2  C01C  F04E         	movff	?_fabsf,___fltol@f1
  5822  0054B6  C01D  F04F         	movff	?_fabsf+1,___fltol@f1+1
  5823  0054BA  C01E  F050         	movff	?_fabsf+2,___fltol@f1+2
  5824  0054BE  C01F  F051         	movff	?_fabsf+3,___fltol@f1+3
  5825  0054C2  ECDB  F024         	call	___fltol	;wreg free
  5826  0054C6  C04E  F05C         	movff	?___fltol,PWM1_setDC@duty
  5827  0054CA  C04F  F05D         	movff	?___fltol+1,PWM1_setDC@duty+1
  5828  0054CE                     
  5829                           ;fs_pwm.c: 50:         CCPR1L = duty>>2;
  5830  0054CE  C05C  F05A         	movff	PWM1_setDC@duty,??_PWM1_setDC
  5831  0054D2  C05D  F05B         	movff	PWM1_setDC@duty+1,??_PWM1_setDC+1
  5832  0054D6  90D8               	bcf	status,0,c
  5833  0054D8  325B               	rrcf	(??_PWM1_setDC+1)^0,f,c
  5834  0054DA  325A               	rrcf	??_PWM1_setDC^0,f,c
  5835  0054DC  90D8               	bcf	status,0,c
  5836  0054DE  325B               	rrcf	(??_PWM1_setDC+1)^0,f,c
  5837  0054E0  325A               	rrcf	??_PWM1_setDC^0,f,c
  5838  0054E2  505A               	movf	??_PWM1_setDC^0,w,c
  5839  0054E4  6EBE               	movwf	190,c	;volatile
  5840  0054E6                     l408:
  5841  0054E6  0012               	return		;funcret
  5842  0054E8                     __end_of_PWM1_setDC:
  5843                           	callstack 0
  5844                           
  5845 ;; *************** function _fabsf *****************
  5846 ;; Defined at:
  5847 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fabsf.c"
  5848 ;; Parameters:    Size  Location     Type
  5849 ;;  x               4   27[COMRAM] float 
  5850 ;; Auto vars:     Size  Location     Type
  5851 ;;  u               4   31[COMRAM] struct .
  5852 ;; Return value:  Size  Location     Type
  5853 ;;                  4   27[COMRAM] float 
  5854 ;; Registers used:
  5855 ;;		status,2, status,0
  5856 ;; Tracked objects:
  5857 ;;		On entry : 0/0
  5858 ;;		On exit  : 0/0
  5859 ;;		Unchanged: 0/0
  5860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5861 ;;      Params:         4       0       0       0       0       0       0
  5862 ;;      Locals:         4       0       0       0       0       0       0
  5863 ;;      Temps:          0       0       0       0       0       0       0
  5864 ;;      Totals:         8       0       0       0       0       0       0
  5865 ;;Total ram usage:        8 bytes
  5866 ;; Hardware stack levels used:    1
  5867 ;; Hardware stack levels required when called:    1
  5868 ;; This function calls:
  5869 ;;		Nothing
  5870 ;; This function is called by:
  5871 ;;		_PWM1_setDC
  5872 ;;		_PWM2_setDC
  5873 ;; This function uses a non-reentrant model
  5874 ;;
  5875                           
  5876                           	psect	text17
  5877  005B6E                     __ptext17:
  5878                           	callstack 0
  5879  005B6E                     _fabsf:
  5880                           	callstack 25
  5881  005B6E  C187  F020         	movff	fabsf@F463,fabsf@u
  5882  005B72  C188  F021         	movff	fabsf@F463+1,fabsf@u+1
  5883  005B76  C189  F022         	movff	fabsf@F463+2,fabsf@u+2
  5884  005B7A  C18A  F023         	movff	fabsf@F463+3,fabsf@u+3
  5885  005B7E  C01C  F020         	movff	fabsf@x,fabsf@u
  5886  005B82  C01D  F021         	movff	fabsf@x+1,fabsf@u+1
  5887  005B86  C01E  F022         	movff	fabsf@x+2,fabsf@u+2
  5888  005B8A  C01F  F023         	movff	fabsf@x+3,fabsf@u+3
  5889  005B8E  9E23               	bcf	(fabsf@u+3)^0,7,c
  5890  005B90  C020  F01C         	movff	fabsf@u,?_fabsf
  5891  005B94  C021  F01D         	movff	fabsf@u+1,?_fabsf+1
  5892  005B98  C022  F01E         	movff	fabsf@u+2,?_fabsf+2
  5893  005B9C  C023  F01F         	movff	fabsf@u+3,?_fabsf+3
  5894  005BA0  0012               	return		;funcret
  5895  005BA2                     __end_of_fabsf:
  5896                           	callstack 0
  5897                           
  5898 ;; *************** function ___xxtofl *****************
  5899 ;; Defined at:
  5900 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
  5901 ;; Parameters:    Size  Location     Type
  5902 ;;  sign            1    wreg     unsigned char 
  5903 ;;  val             4   13[COMRAM] long 
  5904 ;; Auto vars:     Size  Location     Type
  5905 ;;  sign            1   21[COMRAM] unsigned char 
  5906 ;;  arg             4   23[COMRAM] unsigned long 
  5907 ;;  exp             1   22[COMRAM] unsigned char 
  5908 ;; Return value:  Size  Location     Type
  5909 ;;                  4   13[COMRAM] unsigned char 
  5910 ;; Registers used:
  5911 ;;		wreg, status,2, status,0
  5912 ;; Tracked objects:
  5913 ;;		On entry : 0/0
  5914 ;;		On exit  : 0/0
  5915 ;;		Unchanged: 0/0
  5916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5917 ;;      Params:         4       0       0       0       0       0       0
  5918 ;;      Locals:         6       0       0       0       0       0       0
  5919 ;;      Temps:          4       0       0       0       0       0       0
  5920 ;;      Totals:        14       0       0       0       0       0       0
  5921 ;;Total ram usage:       14 bytes
  5922 ;; Hardware stack levels used:    1
  5923 ;; Hardware stack levels required when called:    1
  5924 ;; This function calls:
  5925 ;;		Nothing
  5926 ;; This function is called by:
  5927 ;;		_scanAdcConversion
  5928 ;;		_calculatedAverageValue
  5929 ;;		_PWM1_setDC
  5930 ;;		_PWM2_setDC
  5931 ;;		_speedControl
  5932 ;; This function uses a non-reentrant model
  5933 ;;
  5934                           
  5935                           	psect	text18
  5936  0040DE                     __ptext18:
  5937                           	callstack 0
  5938  0040DE                     ___xxtofl:
  5939                           	callstack 25
  5940                           
  5941                           ;incstack = 0
  5942                           ;___xxtofl@sign stored from wreg
  5943  0040DE  6E16               	movwf	___xxtofl@sign^0,c
  5944  0040E0  5016               	movf	___xxtofl@sign^0,w,c
  5945  0040E2  B4D8               	btfsc	status,2,c
  5946  0040E4  EF76  F020         	goto	u6411
  5947  0040E8  EF78  F020         	goto	u6410
  5948  0040EC                     u6411:
  5949  0040EC  EF9A  F020         	goto	l1143
  5950  0040F0                     u6410:
  5951  0040F0  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
  5952  0040F2  EF7F  F020         	goto	u6420
  5953  0040F6  EF7D  F020         	goto	u6421
  5954  0040FA                     u6421:
  5955  0040FA  EF9A  F020         	goto	l1143
  5956  0040FE                     u6420:
  5957  0040FE  C00E  F012         	movff	___xxtofl@val,??___xxtofl
  5958  004102  C00F  F013         	movff	___xxtofl@val+1,??___xxtofl+1
  5959  004106  C010  F014         	movff	___xxtofl@val+2,??___xxtofl+2
  5960  00410A  C011  F015         	movff	___xxtofl@val+3,??___xxtofl+3
  5961  00410E  1E12               	comf	??___xxtofl^0,f,c
  5962  004110  1E13               	comf	(??___xxtofl+1)^0,f,c
  5963  004112  1E14               	comf	(??___xxtofl+2)^0,f,c
  5964  004114  1E15               	comf	(??___xxtofl+3)^0,f,c
  5965  004116  2A12               	incf	??___xxtofl^0,f,c
  5966  004118  0E00               	movlw	0
  5967  00411A  2213               	addwfc	(??___xxtofl+1)^0,f,c
  5968  00411C  2214               	addwfc	(??___xxtofl+2)^0,f,c
  5969  00411E  2215               	addwfc	(??___xxtofl+3)^0,f,c
  5970  004120  C012  F018         	movff	??___xxtofl,___xxtofl@arg
  5971  004124  C013  F019         	movff	??___xxtofl+1,___xxtofl@arg+1
  5972  004128  C014  F01A         	movff	??___xxtofl+2,___xxtofl@arg+2
  5973  00412C  C015  F01B         	movff	??___xxtofl+3,___xxtofl@arg+3
  5974  004130  EFA2  F020         	goto	l5271
  5975  004134                     l1143:
  5976  004134  C00E  F018         	movff	___xxtofl@val,___xxtofl@arg
  5977  004138  C00F  F019         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5978  00413C  C010  F01A         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5979  004140  C011  F01B         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5980  004144                     l5271:
  5981  004144  500E               	movf	___xxtofl@val^0,w,c
  5982  004146  100F               	iorwf	(___xxtofl@val+1)^0,w,c
  5983  004148  1010               	iorwf	(___xxtofl@val+2)^0,w,c
  5984  00414A  1011               	iorwf	(___xxtofl@val+3)^0,w,c
  5985  00414C  A4D8               	btfss	status,2,c
  5986  00414E  EFAB  F020         	goto	u6431
  5987  004152  EFAD  F020         	goto	u6430
  5988  004156                     u6431:
  5989  004156  EFB7  F020         	goto	l5277
  5990  00415A                     u6430:
  5991  00415A  0E00               	movlw	0
  5992  00415C  6E0E               	movwf	?___xxtofl^0,c
  5993  00415E  0E00               	movlw	0
  5994  004160  6E0F               	movwf	(?___xxtofl+1)^0,c
  5995  004162  0E00               	movlw	0
  5996  004164  6E10               	movwf	(?___xxtofl+2)^0,c
  5997  004166  0E00               	movlw	0
  5998  004168  6E11               	movwf	(?___xxtofl+3)^0,c
  5999  00416A  EF48  F021         	goto	l1146
  6000  00416E                     l5277:
  6001  00416E  0E96               	movlw	150
  6002  004170  6E17               	movwf	___xxtofl@exp^0,c
  6003  004172  EFC1  F020         	goto	l5281
  6004  004176                     l5279:
  6005  004176  2A17               	incf	___xxtofl@exp^0,f,c
  6006  004178  90D8               	bcf	status,0,c
  6007  00417A  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
  6008  00417C  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
  6009  00417E  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
  6010  004180  3218               	rrcf	___xxtofl@arg^0,f,c
  6011  004182                     l5281:
  6012  004182  0E00               	movlw	0
  6013  004184  1418               	andwf	___xxtofl@arg^0,w,c
  6014  004186  6E12               	movwf	??___xxtofl^0,c
  6015  004188  0E00               	movlw	0
  6016  00418A  1419               	andwf	(___xxtofl@arg+1)^0,w,c
  6017  00418C  6E13               	movwf	(??___xxtofl+1)^0,c
  6018  00418E  0E00               	movlw	0
  6019  004190  141A               	andwf	(___xxtofl@arg+2)^0,w,c
  6020  004192  6E14               	movwf	(??___xxtofl+2)^0,c
  6021  004194  0EFE               	movlw	254
  6022  004196  141B               	andwf	(___xxtofl@arg+3)^0,w,c
  6023  004198  6E15               	movwf	(??___xxtofl+3)^0,c
  6024  00419A  5012               	movf	??___xxtofl^0,w,c
  6025  00419C  1013               	iorwf	(??___xxtofl+1)^0,w,c
  6026  00419E  1014               	iorwf	(??___xxtofl+2)^0,w,c
  6027  0041A0  1015               	iorwf	(??___xxtofl+3)^0,w,c
  6028  0041A2  A4D8               	btfss	status,2,c
  6029  0041A4  EFD6  F020         	goto	u6441
  6030  0041A8  EFD8  F020         	goto	u6440
  6031  0041AC                     u6441:
  6032  0041AC  EFBB  F020         	goto	l5279
  6033  0041B0                     u6440:
  6034  0041B0  EFE6  F020         	goto	l1150
  6035  0041B4                     l5283:
  6036  0041B4  2A17               	incf	___xxtofl@exp^0,f,c
  6037  0041B6  0E01               	movlw	1
  6038  0041B8  2618               	addwf	___xxtofl@arg^0,f,c
  6039  0041BA  0E00               	movlw	0
  6040  0041BC  2219               	addwfc	(___xxtofl@arg+1)^0,f,c
  6041  0041BE  221A               	addwfc	(___xxtofl@arg+2)^0,f,c
  6042  0041C0  221B               	addwfc	(___xxtofl@arg+3)^0,f,c
  6043  0041C2  90D8               	bcf	status,0,c
  6044  0041C4  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
  6045  0041C6  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
  6046  0041C8  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
  6047  0041CA  3218               	rrcf	___xxtofl@arg^0,f,c
  6048  0041CC                     l1150:
  6049  0041CC  0E00               	movlw	0
  6050  0041CE  1418               	andwf	___xxtofl@arg^0,w,c
  6051  0041D0  6E12               	movwf	??___xxtofl^0,c
  6052  0041D2  0E00               	movlw	0
  6053  0041D4  1419               	andwf	(___xxtofl@arg+1)^0,w,c
  6054  0041D6  6E13               	movwf	(??___xxtofl+1)^0,c
  6055  0041D8  0E00               	movlw	0
  6056  0041DA  141A               	andwf	(___xxtofl@arg+2)^0,w,c
  6057  0041DC  6E14               	movwf	(??___xxtofl+2)^0,c
  6058  0041DE  0EFF               	movlw	255
  6059  0041E0  141B               	andwf	(___xxtofl@arg+3)^0,w,c
  6060  0041E2  6E15               	movwf	(??___xxtofl+3)^0,c
  6061  0041E4  5012               	movf	??___xxtofl^0,w,c
  6062  0041E6  1013               	iorwf	(??___xxtofl+1)^0,w,c
  6063  0041E8  1014               	iorwf	(??___xxtofl+2)^0,w,c
  6064  0041EA  1015               	iorwf	(??___xxtofl+3)^0,w,c
  6065  0041EC  A4D8               	btfss	status,2,c
  6066  0041EE  EFFB  F020         	goto	u6451
  6067  0041F2  EFFD  F020         	goto	u6450
  6068  0041F6                     u6451:
  6069  0041F6  EFDA  F020         	goto	l5283
  6070  0041FA                     u6450:
  6071  0041FA  EF05  F021         	goto	l5291
  6072  0041FE                     l5289:
  6073  0041FE  0617               	decf	___xxtofl@exp^0,f,c
  6074  004200  90D8               	bcf	status,0,c
  6075  004202  3618               	rlcf	___xxtofl@arg^0,f,c
  6076  004204  3619               	rlcf	(___xxtofl@arg+1)^0,f,c
  6077  004206  361A               	rlcf	(___xxtofl@arg+2)^0,f,c
  6078  004208  361B               	rlcf	(___xxtofl@arg+3)^0,f,c
  6079  00420A                     l5291:
  6080  00420A  BE1A               	btfsc	(___xxtofl@arg+2)^0,7,c
  6081  00420C  EF0A  F021         	goto	u6461
  6082  004210  EF0C  F021         	goto	u6460
  6083  004214                     u6461:
  6084  004214  EF14  F021         	goto	l1157
  6085  004218                     u6460:
  6086  004218  0E02               	movlw	2
  6087  00421A  6017               	cpfslt	___xxtofl@exp^0,c
  6088  00421C  EF12  F021         	goto	u6471
  6089  004220  EF14  F021         	goto	u6470
  6090  004224                     u6471:
  6091  004224  EFFF  F020         	goto	l5289
  6092  004228                     u6470:
  6093  004228                     l1157:
  6094  004228  B017               	btfsc	___xxtofl@exp^0,0,c
  6095  00422A  EF19  F021         	goto	u6481
  6096  00422E  EF1B  F021         	goto	u6480
  6097  004232                     u6481:
  6098  004232  EF1C  F021         	goto	l5297
  6099  004236                     u6480:
  6100  004236  9E1A               	bcf	(___xxtofl@arg+2)^0,7,c
  6101  004238                     l5297:
  6102  004238  90D8               	bcf	status,0,c
  6103  00423A  3217               	rrcf	___xxtofl@exp^0,f,c
  6104  00423C  C017  F012         	movff	___xxtofl@exp,??___xxtofl
  6105  004240  6A13               	clrf	(??___xxtofl+1)^0,c
  6106  004242  6A14               	clrf	(??___xxtofl+2)^0,c
  6107  004244  6A15               	clrf	(??___xxtofl+3)^0,c
  6108  004246  C012  F015         	movff	??___xxtofl,??___xxtofl+3
  6109  00424A  6A14               	clrf	(??___xxtofl+2)^0,c
  6110  00424C  6A13               	clrf	(??___xxtofl+1)^0,c
  6111  00424E  6A12               	clrf	??___xxtofl^0,c
  6112  004250  5012               	movf	??___xxtofl^0,w,c
  6113  004252  1218               	iorwf	___xxtofl@arg^0,f,c
  6114  004254  5013               	movf	(??___xxtofl+1)^0,w,c
  6115  004256  1219               	iorwf	(___xxtofl@arg+1)^0,f,c
  6116  004258  5014               	movf	(??___xxtofl+2)^0,w,c
  6117  00425A  121A               	iorwf	(___xxtofl@arg+2)^0,f,c
  6118  00425C  5015               	movf	(??___xxtofl+3)^0,w,c
  6119  00425E  121B               	iorwf	(___xxtofl@arg+3)^0,f,c
  6120  004260  5016               	movf	___xxtofl@sign^0,w,c
  6121  004262  B4D8               	btfsc	status,2,c
  6122  004264  EF36  F021         	goto	u6491
  6123  004268  EF38  F021         	goto	u6490
  6124  00426C                     u6491:
  6125  00426C  EF40  F021         	goto	l5307
  6126  004270                     u6490:
  6127  004270  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
  6128  004272  EF3F  F021         	goto	u6500
  6129  004276  EF3D  F021         	goto	u6501
  6130  00427A                     u6501:
  6131  00427A  EF40  F021         	goto	l5307
  6132  00427E                     u6500:
  6133  00427E  8E1B               	bsf	(___xxtofl@arg+3)^0,7,c
  6134  004280                     l5307:
  6135  004280  C018  F00E         	movff	___xxtofl@arg,?___xxtofl
  6136  004284  C019  F00F         	movff	___xxtofl@arg+1,?___xxtofl+1
  6137  004288  C01A  F010         	movff	___xxtofl@arg+2,?___xxtofl+2
  6138  00428C  C01B  F011         	movff	___xxtofl@arg+3,?___xxtofl+3
  6139  004290                     l1146:
  6140  004290  0012               	return		;funcret
  6141  004292                     __end_of___xxtofl:
  6142                           	callstack 0
  6143                           
  6144 ;; *************** function _sprintf *****************
  6145 ;; Defined at:
  6146 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  6147 ;; Parameters:    Size  Location     Type
  6148 ;;  s               2  111[BANK0 ] PTR unsigned char 
  6149 ;;		 -> stateMachine@textCursor2(16), 
  6150 ;;  fmt             2  113[BANK0 ] PTR const unsigned char 
  6151 ;;		 -> STR_16(13), STR_14(14), STR_12(16), STR_10(16), 
  6152 ;;		 -> STR_8(18), STR_6(18), STR_4(18), STR_2(15), 
  6153 ;; Auto vars:     Size  Location     Type
  6154 ;;  f               6  123[BANK0 ] struct _IO_FILE
  6155 ;;  ap              2  121[BANK0 ] PTR void [1]
  6156 ;;		 -> ?_sprintf(2), 
  6157 ;;  ret             2    0        int 
  6158 ;; Return value:  Size  Location     Type
  6159 ;;                  2  111[BANK0 ] int 
  6160 ;; Registers used:
  6161 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6162 ;; Tracked objects:
  6163 ;;		On entry : 0/0
  6164 ;;		On exit  : 0/0
  6165 ;;		Unchanged: 0/0
  6166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6167 ;;      Params:         0       8       0       0       0       0       0
  6168 ;;      Locals:         0      10       0       0       0       0       0
  6169 ;;      Temps:          0       0       0       0       0       0       0
  6170 ;;      Totals:         0      18       0       0       0       0       0
  6171 ;;Total ram usage:       18 bytes
  6172 ;; Hardware stack levels used:    1
  6173 ;; Hardware stack levels required when called:    8
  6174 ;; This function calls:
  6175 ;;		_vfprintf
  6176 ;; This function is called by:
  6177 ;;		_stateMachine
  6178 ;; This function uses a non-reentrant model
  6179 ;;
  6180                           
  6181                           	psect	text19
  6182  0057FA                     __ptext19:
  6183                           	callstack 0
  6184  0057FA                     _sprintf:
  6185                           	callstack 20
  6186  0057FA  0ED3               	movlw	low (?_sprintf+4)
  6187  0057FC  0100               	movlb	0	; () banked
  6188  0057FE  6FD9               	movwf	sprintf@ap& (0+255),b
  6189  005800  0E00               	movlw	high (?_sprintf+4)
  6190  005802  6FDA               	movwf	(sprintf@ap+1)& (0+255),b
  6191  005804  C0CF  F0DB         	movff	sprintf@s,sprintf@f
  6192  005808  C0D0  F0DC         	movff	sprintf@s+1,sprintf@f+1
  6193  00580C                     
  6194                           ; BSR set to: 0
  6195  00580C  0E00               	movlw	0
  6196  00580E  6FDE               	movwf	(sprintf@f+3)& (0+255),b
  6197  005810  0E00               	movlw	0
  6198  005812  6FDD               	movwf	(sprintf@f+2)& (0+255),b
  6199  005814                     
  6200                           ; BSR set to: 0
  6201  005814  0E00               	movlw	0
  6202  005816  6FE0               	movwf	(sprintf@f+5)& (0+255),b
  6203  005818  0E00               	movlw	0
  6204  00581A  6FDF               	movwf	(sprintf@f+4)& (0+255),b
  6205  00581C                     
  6206                           ; BSR set to: 0
  6207  00581C  0EDB               	movlw	low sprintf@f
  6208  00581E  6FC7               	movwf	vfprintf@fp& (0+255),b
  6209  005820  0E00               	movlw	high sprintf@f
  6210  005822  6FC8               	movwf	(vfprintf@fp+1)& (0+255),b
  6211  005824  C0D1  F0C9         	movff	sprintf@fmt,vfprintf@fmt
  6212  005828  C0D2  F0CA         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6213  00582C  0ED9               	movlw	low sprintf@ap
  6214  00582E  6FCB               	movwf	vfprintf@ap& (0+255),b
  6215  005830  0E00               	movlw	high sprintf@ap
  6216  005832  6FCC               	movwf	(vfprintf@ap+1)& (0+255),b
  6217  005834  ECE0  F02A         	call	_vfprintf	;wreg free
  6218  005838  0100               	movlb	0	; () banked
  6219  00583A  51DD               	movf	(sprintf@f+2)& (0+255),w,b
  6220  00583C  25CF               	addwf	sprintf@s& (0+255),w,b
  6221  00583E  6ED9               	movwf	fsr2l,c
  6222  005840  51DE               	movf	(sprintf@f+3)& (0+255),w,b
  6223  005842  21D0               	addwfc	(sprintf@s+1)& (0+255),w,b
  6224  005844  6EDA               	movwf	fsr2h,c
  6225  005846  0E00               	movlw	0
  6226  005848  6EDF               	movwf	indf2,c
  6227  00584A                     
  6228                           ; BSR set to: 0
  6229  00584A  0012               	return		;funcret
  6230  00584C                     __end_of_sprintf:
  6231                           	callstack 0
  6232                           
  6233 ;; *************** function _vfprintf *****************
  6234 ;; Defined at:
  6235 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6236 ;; Parameters:    Size  Location     Type
  6237 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  6238 ;;		 -> sprintf@f(6), 
  6239 ;;  fmt             2  105[BANK0 ] PTR const unsigned char 
  6240 ;;		 -> STR_16(13), STR_14(14), STR_12(16), STR_10(16), 
  6241 ;;		 -> STR_8(18), STR_6(18), STR_4(18), STR_2(15), 
  6242 ;;  ap              2  107[BANK0 ] PTR PTR void 
  6243 ;;		 -> sprintf@ap(2), 
  6244 ;; Auto vars:     Size  Location     Type
  6245 ;;  cfmt            2  109[BANK0 ] PTR unsigned char 
  6246 ;;		 -> STR_16(13), STR_14(14), STR_12(16), STR_10(16), 
  6247 ;;		 -> STR_8(18), STR_6(18), STR_4(18), STR_2(15), 
  6248 ;; Return value:  Size  Location     Type
  6249 ;;                  2  103[BANK0 ] int 
  6250 ;; Registers used:
  6251 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6252 ;; Tracked objects:
  6253 ;;		On entry : 0/0
  6254 ;;		On exit  : 0/0
  6255 ;;		Unchanged: 0/0
  6256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6257 ;;      Params:         0       6       0       0       0       0       0
  6258 ;;      Locals:         0       2       0       0       0       0       0
  6259 ;;      Temps:          0       0       0       0       0       0       0
  6260 ;;      Totals:         0       8       0       0       0       0       0
  6261 ;;Total ram usage:        8 bytes
  6262 ;; Hardware stack levels used:    1
  6263 ;; Hardware stack levels required when called:    7
  6264 ;; This function calls:
  6265 ;;		_vfpfcnvrt
  6266 ;; This function is called by:
  6267 ;;		_sprintf
  6268 ;; This function uses a non-reentrant model
  6269 ;;
  6270                           
  6271                           	psect	text20
  6272  0055C0                     __ptext20:
  6273                           	callstack 0
  6274  0055C0                     _vfprintf:
  6275                           	callstack 20
  6276  0055C0                     
  6277                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6278  0055C0  C0C9  F0CD         	movff	vfprintf@fmt,vfprintf@cfmt
  6279  0055C4  C0CA  F0CE         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6280  0055C8                     
  6281                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  6282  0055C8  0E00               	movlw	0
  6283  0055CA  0101               	movlb	1	; () banked
  6284  0055CC  6F93               	movwf	(_nout+1)& (0+255),b
  6285  0055CE  0E00               	movlw	0
  6286  0055D0  6F92               	movwf	_nout& (0+255),b
  6287                           
  6288                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  6289  0055D2  EF02  F02B         	goto	l5581
  6290  0055D6                     l5579:
  6291                           
  6292                           ; BSR set to: 1
  6293                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6294  0055D6  C0C7  F0A7         	movff	vfprintf@fp,vfpfcnvrt@fp
  6295  0055DA  C0C8  F0A8         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6296  0055DE  0ECD               	movlw	low vfprintf@cfmt
  6297  0055E0  0100               	movlb	0	; () banked
  6298  0055E2  6FA9               	movwf	vfpfcnvrt@fmt& (0+255),b
  6299  0055E4  0E00               	movlw	high vfprintf@cfmt
  6300  0055E6  6FAA               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  6301  0055E8  C0CB  F0AB         	movff	vfprintf@ap,vfpfcnvrt@ap
  6302  0055EC  C0CC  F0AC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6303  0055F0  EC44  F012         	call	_vfpfcnvrt	;wreg free
  6304  0055F4  0100               	movlb	0	; () banked
  6305  0055F6  51A7               	movf	?_vfpfcnvrt& (0+255),w,b
  6306  0055F8  0101               	movlb	1	; () banked
  6307  0055FA  2792               	addwf	_nout& (0+255),f,b
  6308  0055FC  0100               	movlb	0	; () banked
  6309  0055FE  51A8               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  6310  005600  0101               	movlb	1	; () banked
  6311  005602  2393               	addwfc	(_nout+1)& (0+255),f,b
  6312  005604                     l5581:
  6313                           
  6314                           ; BSR set to: 1
  6315                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  6316  005604  C0CD  FFF6         	movff	vfprintf@cfmt,tblptrl
  6317  005608  C0CE  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6318  00560C                     	if	0	;tblptru may be non-zero
  6319  00560C                     	endif
  6320  00560C                     	if	0	;tblptru may be non-zero
  6321  00560C                     	endif
  6322  00560C  0008               	tblrd		*
  6323  00560E  50F5               	movf	tablat,w,c
  6324  005610  0900               	iorlw	0
  6325  005612  A4D8               	btfss	status,2,c
  6326  005614  EF0E  F02B         	goto	u6781
  6327  005618  EF10  F02B         	goto	u6780
  6328  00561C                     u6781:
  6329  00561C  EFEB  F02A         	goto	l5579
  6330  005620                     u6780:
  6331  005620                     
  6332                           ; BSR set to: 1
  6333                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  6334  005620  C192  F0C7         	movff	_nout,?_vfprintf
  6335  005624  C193  F0C8         	movff	_nout+1,?_vfprintf+1
  6336  005628                     
  6337                           ; BSR set to: 1
  6338  005628  0012               	return		;funcret
  6339  00562A                     __end_of_vfprintf:
  6340                           	callstack 0
  6341                           
  6342 ;; *************** function _vfpfcnvrt *****************
  6343 ;; Defined at:
  6344 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6345 ;; Parameters:    Size  Location     Type
  6346 ;;  fp              2   71[BANK0 ] PTR struct _IO_FILE
  6347 ;;		 -> sprintf@f(6), 
  6348 ;;  fmt             2   73[BANK0 ] PTR PTR unsigned char 
  6349 ;;		 -> vfprintf@cfmt(2), 
  6350 ;;  ap              2   75[BANK0 ] PTR PTR void 
  6351 ;;		 -> sprintf@ap(2), 
  6352 ;; Auto vars:     Size  Location     Type
  6353 ;;  ll              8   81[BANK0 ] long long 
  6354 ;;  llu             8    0        unsigned long long 
  6355 ;;  f               4   95[BANK0 ] unsigned long long 
  6356 ;;  ct              3   99[BANK0 ] unsigned char [3]
  6357 ;;  vp              3    0        PTR void 
  6358 ;;  cp              3    0        PTR unsigned char 
  6359 ;;  i               2    0        int 
  6360 ;;  done            2    0        int 
  6361 ;;  c               1  102[BANK0 ] unsigned char 
  6362 ;; Return value:  Size  Location     Type
  6363 ;;                  2   71[BANK0 ] int 
  6364 ;; Registers used:
  6365 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6366 ;; Tracked objects:
  6367 ;;		On entry : 0/0
  6368 ;;		On exit  : 0/0
  6369 ;;		Unchanged: 0/0
  6370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6371 ;;      Params:         0       6       0       0       0       0       0
  6372 ;;      Locals:         0      22       0       0       0       0       0
  6373 ;;      Temps:          0       4       0       0       0       0       0
  6374 ;;      Totals:         0      32       0       0       0       0       0
  6375 ;;Total ram usage:       32 bytes
  6376 ;; Hardware stack levels used:    1
  6377 ;; Hardware stack levels required when called:    6
  6378 ;; This function calls:
  6379 ;;		_atoi
  6380 ;;		_dtoa
  6381 ;;		_efgtoa
  6382 ;;		_fputc
  6383 ;;		_isdigit
  6384 ;;		_isupper
  6385 ;;		_strncmp
  6386 ;;		_tolower
  6387 ;; This function is called by:
  6388 ;;		_vfprintf
  6389 ;; This function uses a non-reentrant model
  6390 ;;
  6391                           
  6392                           	psect	text21
  6393  002488                     __ptext21:
  6394                           	callstack 0
  6395  002488                     _vfpfcnvrt:
  6396                           	callstack 20
  6397  002488                     
  6398                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  6399  002488  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6400  00248C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6401  002490  CFDE FFF6          	movff	postinc2,tblptrl
  6402  002494  CFDD FFF7          	movff	postdec2,tblptrh
  6403  002498                     	if	0	;tblptru may be non-zero
  6404  002498                     	endif
  6405  002498                     	if	0	;tblptru may be non-zero
  6406  002498                     	endif
  6407  002498  0008               	tblrd		*
  6408  00249A  50F5               	movf	tablat,w,c
  6409  00249C  0A25               	xorlw	37
  6410  00249E  A4D8               	btfss	status,2,c
  6411  0024A0  EF54  F012         	goto	u6511
  6412  0024A4  EF56  F012         	goto	u6510
  6413  0024A8                     u6511:
  6414  0024A8  EF43  F015         	goto	l5421
  6415  0024AC                     u6510:
  6416  0024AC                     
  6417                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  6418  0024AC  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6419  0024B0  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6420  0024B4  2ADE               	incf	postinc2,f,c
  6421  0024B6  0E00               	movlw	0
  6422  0024B8  22DD               	addwfc	postdec2,f,c
  6423  0024BA                     
  6424                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  6425  0024BA  0E00               	movlw	0
  6426  0024BC  0101               	movlb	1	; () banked
  6427  0024BE  6F95               	movwf	(_width+1)& (0+255),b
  6428  0024C0  0E00               	movlw	0
  6429  0024C2  6F94               	movwf	_width& (0+255),b
  6430  0024C4  C194  F198         	movff	_width,_flags
  6431  0024C8  C195  F199         	movff	_width+1,_flags+1
  6432  0024CC                     
  6433                           ; BSR set to: 1
  6434                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  6435  0024CC  6996               	setf	_prec& (0+255),b
  6436  0024CE  6997               	setf	(_prec+1)& (0+255),b
  6437  0024D0                     
  6438                           ; BSR set to: 1
  6439                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  6440  0024D0  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6441  0024D4  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6442  0024D8  CFDE FFF6          	movff	postinc2,tblptrl
  6443  0024DC  CFDD FFF7          	movff	postdec2,tblptrh
  6444  0024E0                     	if	0	;tblptru may be non-zero
  6445  0024E0                     	endif
  6446  0024E0                     	if	0	;tblptru may be non-zero
  6447  0024E0                     	endif
  6448  0024E0  0008               	tblrd		*
  6449  0024E2  50F5               	movf	tablat,w,c
  6450  0024E4  0A2A               	xorlw	42
  6451  0024E6  A4D8               	btfss	status,2,c
  6452  0024E8  EF78  F012         	goto	u6521
  6453  0024EC  EF7A  F012         	goto	u6520
  6454  0024F0                     u6521:
  6455  0024F0  EFA3  F012         	goto	l5327
  6456  0024F4                     u6520:
  6457  0024F4                     
  6458                           ; BSR set to: 1
  6459                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  6460  0024F4  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6461  0024F8  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6462  0024FC  2ADE               	incf	postinc2,f,c
  6463  0024FE  0E00               	movlw	0
  6464  002500  22DD               	addwfc	postdec2,f,c
  6465                           
  6466                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6467  002502  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6468  002506  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6469  00250A  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6470  00250E  0E02               	movlw	2
  6471  002510  26DE               	addwf	postinc2,f,c
  6472  002512  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6473  002516  0E00               	movlw	0
  6474  002518  22DD               	addwfc	postdec2,f,c
  6475  00251A  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6476  00251E  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6477  002522  CFDE F194          	movff	postinc2,_width
  6478  002526  CFDD F195          	movff	postdec2,_width+1
  6479  00252A                     
  6480                           ; BSR set to: 1
  6481                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  6482  00252A  BF95               	btfsc	(_width+1)& (0+255),7,b
  6483  00252C  EF9C  F012         	goto	u6530
  6484  002530  EF9A  F012         	goto	u6531
  6485  002534                     u6531:
  6486  002534  EFE7  F012         	goto	l5337
  6487  002538                     u6530:
  6488  002538                     
  6489                           ; BSR set to: 1
  6490                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  6491  002538  8198               	bsf	_flags& (0+255),0,b
  6492                           
  6493                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  6494  00253A  6D94               	negf	_width& (0+255),b
  6495  00253C  1F95               	comf	(_width+1)& (0+255),f,b
  6496  00253E  B0D8               	btfsc	status,0,c
  6497  002540  2B95               	incf	(_width+1)& (0+255),f,b
  6498  002542  EFE7  F012         	goto	l5337
  6499  002546                     l5327:
  6500                           
  6501                           ; BSR set to: 1
  6502                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  6503  002546  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6504  00254A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6505  00254E  CFDE F008          	movff	postinc2,atoi@s
  6506  002552  CFDD F009          	movff	postdec2,atoi@s+1
  6507  002556  EC49  F021         	call	_atoi	;wreg free
  6508  00255A  C008  F194         	movff	?_atoi,_width
  6509  00255E  C009  F195         	movff	?_atoi+1,_width+1
  6510                           
  6511                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6512  002562  EFBA  F012         	goto	l5331
  6513  002566                     l5329:
  6514                           
  6515                           ; BSR set to: 0
  6516                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  6517  002566  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6518  00256A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6519  00256E  2ADE               	incf	postinc2,f,c
  6520  002570  0E00               	movlw	0
  6521  002572  22DD               	addwfc	postdec2,f,c
  6522  002574                     l5331:
  6523  002574  0ED0               	movlw	208
  6524  002576  0100               	movlb	0	; () banked
  6525  002578  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  6526  00257A  0EFF               	movlw	255
  6527  00257C  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6528  00257E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6529  002582  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6530  002586  CFDE FFF6          	movff	postinc2,tblptrl
  6531  00258A  CFDD FFF7          	movff	postdec2,tblptrh
  6532  00258E                     	if	0	;tblptru may be non-zero
  6533  00258E                     	endif
  6534  00258E                     	if	0	;tblptru may be non-zero
  6535  00258E                     	endif
  6536  00258E  0008               	tblrd		*
  6537  002590  50F5               	movf	tablat,w,c
  6538  002592  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6539  002594  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  6540  002596  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  6541  002598  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  6542  00259A  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6543  00259C  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  6544  00259E  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  6545  0025A0  E10A               	bnz	u6540
  6546  0025A2  0E0A               	movlw	10
  6547  0025A4  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  6548  0025A6  A0D8               	btfss	status,0,c
  6549  0025A8  EFD8  F012         	goto	u6541
  6550  0025AC  EFDB  F012         	goto	u6540
  6551  0025B0                     u6541:
  6552  0025B0  0E01               	movlw	1
  6553  0025B2  EFDC  F012         	goto	u6550
  6554  0025B6                     u6540:
  6555  0025B6  0E00               	movlw	0
  6556  0025B8                     u6550:
  6557  0025B8  6FB9               	movwf	_vfpfcnvrt$2530& (0+255),b
  6558  0025BA  6BBA               	clrf	(_vfpfcnvrt$2530+1)& (0+255),b
  6559  0025BC                     
  6560                           ; BSR set to: 0
  6561  0025BC  51B9               	movf	_vfpfcnvrt$2530& (0+255),w,b
  6562  0025BE  11BA               	iorwf	(_vfpfcnvrt$2530+1)& (0+255),w,b
  6563  0025C0  A4D8               	btfss	status,2,c
  6564  0025C2  EFE5  F012         	goto	u6561
  6565  0025C6  EFE7  F012         	goto	u6560
  6566  0025CA                     u6561:
  6567  0025CA  EFB3  F012         	goto	l5329
  6568  0025CE                     u6560:
  6569  0025CE                     l5337:
  6570                           
  6571                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  6572  0025CE  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6573  0025D2  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6574  0025D6  CFDE FFF6          	movff	postinc2,tblptrl
  6575  0025DA  CFDD FFF7          	movff	postdec2,tblptrh
  6576  0025DE                     	if	0	;tblptru may be non-zero
  6577  0025DE                     	endif
  6578  0025DE                     	if	0	;tblptru may be non-zero
  6579  0025DE                     	endif
  6580  0025DE  0008               	tblrd		*
  6581  0025E0  50F5               	movf	tablat,w,c
  6582  0025E2  0A2E               	xorlw	46
  6583  0025E4  A4D8               	btfss	status,2,c
  6584  0025E6  EFF7  F012         	goto	u6571
  6585  0025EA  EFF9  F012         	goto	u6570
  6586  0025EE                     u6571:
  6587  0025EE  EF78  F013         	goto	l5357
  6588  0025F2                     u6570:
  6589  0025F2                     
  6590                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  6591  0025F2  0E00               	movlw	0
  6592  0025F4  0101               	movlb	1	; () banked
  6593  0025F6  6F97               	movwf	(_prec+1)& (0+255),b
  6594  0025F8  0E00               	movlw	0
  6595  0025FA  6F96               	movwf	_prec& (0+255),b
  6596  0025FC                     
  6597                           ; BSR set to: 1
  6598                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  6599  0025FC  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6600  002600  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6601  002604  2ADE               	incf	postinc2,f,c
  6602  002606  0E00               	movlw	0
  6603  002608  22DD               	addwfc	postdec2,f,c
  6604  00260A                     
  6605                           ; BSR set to: 1
  6606                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  6607  00260A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6608  00260E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6609  002612  CFDE FFF6          	movff	postinc2,tblptrl
  6610  002616  CFDD FFF7          	movff	postdec2,tblptrh
  6611  00261A                     	if	0	;tblptru may be non-zero
  6612  00261A                     	endif
  6613  00261A                     	if	0	;tblptru may be non-zero
  6614  00261A                     	endif
  6615  00261A  0008               	tblrd		*
  6616  00261C  50F5               	movf	tablat,w,c
  6617  00261E  0A2A               	xorlw	42
  6618  002620  A4D8               	btfss	status,2,c
  6619  002622  EF15  F013         	goto	u6581
  6620  002626  EF17  F013         	goto	u6580
  6621  00262A                     u6581:
  6622  00262A  EF34  F013         	goto	l5347
  6623  00262E                     u6580:
  6624  00262E                     
  6625                           ; BSR set to: 1
  6626                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  6627  00262E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6628  002632  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6629  002636  2ADE               	incf	postinc2,f,c
  6630  002638  0E00               	movlw	0
  6631  00263A  22DD               	addwfc	postdec2,f,c
  6632                           
  6633                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  6634  00263C  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6635  002640  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6636  002644  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6637  002648  0E02               	movlw	2
  6638  00264A  26DE               	addwf	postinc2,f,c
  6639  00264C  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6640  002650  0E00               	movlw	0
  6641  002652  22DD               	addwfc	postdec2,f,c
  6642  002654  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6643  002658  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6644  00265C  CFDE F196          	movff	postinc2,_prec
  6645  002660  CFDD F197          	movff	postdec2,_prec+1
  6646                           
  6647                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  6648  002664  EF78  F013         	goto	l5357
  6649  002668                     l5347:
  6650                           
  6651                           ; BSR set to: 1
  6652                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  6653  002668  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6654  00266C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6655  002670  CFDE F008          	movff	postinc2,atoi@s
  6656  002674  CFDD F009          	movff	postdec2,atoi@s+1
  6657  002678  EC49  F021         	call	_atoi	;wreg free
  6658  00267C  C008  F196         	movff	?_atoi,_prec
  6659  002680  C009  F197         	movff	?_atoi+1,_prec+1
  6660                           
  6661                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6662  002684  EF4B  F013         	goto	l5351
  6663  002688                     l5349:
  6664                           
  6665                           ; BSR set to: 0
  6666                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  6667  002688  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6668  00268C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6669  002690  2ADE               	incf	postinc2,f,c
  6670  002692  0E00               	movlw	0
  6671  002694  22DD               	addwfc	postdec2,f,c
  6672  002696                     l5351:
  6673  002696  0ED0               	movlw	208
  6674  002698  0100               	movlb	0	; () banked
  6675  00269A  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  6676  00269C  0EFF               	movlw	255
  6677  00269E  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6678  0026A0  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6679  0026A4  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6680  0026A8  CFDE FFF6          	movff	postinc2,tblptrl
  6681  0026AC  CFDD FFF7          	movff	postdec2,tblptrh
  6682  0026B0                     	if	0	;tblptru may be non-zero
  6683  0026B0                     	endif
  6684  0026B0                     	if	0	;tblptru may be non-zero
  6685  0026B0                     	endif
  6686  0026B0  0008               	tblrd		*
  6687  0026B2  50F5               	movf	tablat,w,c
  6688  0026B4  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6689  0026B6  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  6690  0026B8  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  6691  0026BA  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  6692  0026BC  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6693  0026BE  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  6694  0026C0  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  6695  0026C2  E10A               	bnz	u6590
  6696  0026C4  0E0A               	movlw	10
  6697  0026C6  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  6698  0026C8  A0D8               	btfss	status,0,c
  6699  0026CA  EF69  F013         	goto	u6591
  6700  0026CE  EF6C  F013         	goto	u6590
  6701  0026D2                     u6591:
  6702  0026D2  0E01               	movlw	1
  6703  0026D4  EF6D  F013         	goto	u6600
  6704  0026D8                     u6590:
  6705  0026D8  0E00               	movlw	0
  6706  0026DA                     u6600:
  6707  0026DA  6FBB               	movwf	_vfpfcnvrt$2531& (0+255),b
  6708  0026DC  6BBC               	clrf	(_vfpfcnvrt$2531+1)& (0+255),b
  6709  0026DE                     
  6710                           ; BSR set to: 0
  6711  0026DE  51BB               	movf	_vfpfcnvrt$2531& (0+255),w,b
  6712  0026E0  11BC               	iorwf	(_vfpfcnvrt$2531+1)& (0+255),w,b
  6713  0026E2  A4D8               	btfss	status,2,c
  6714  0026E4  EF76  F013         	goto	u6611
  6715  0026E8  EF78  F013         	goto	u6610
  6716  0026EC                     u6611:
  6717  0026EC  EF44  F013         	goto	l5349
  6718  0026F0                     u6610:
  6719  0026F0                     l5357:
  6720                           
  6721                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0
      +                          ] = tolower((int)(*fmt)[0]);
  6722  0026F0  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6723  0026F4  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6724  0026F8  CFDE FFF6          	movff	postinc2,tblptrl
  6725  0026FC  CFDD FFF7          	movff	postdec2,tblptrh
  6726  002700                     	if	0	;tblptru may be non-zero
  6727  002700                     	endif
  6728  002700                     	if	0	;tblptru may be non-zero
  6729  002700                     	endif
  6730  002700  0008               	tblrd		*
  6731  002702  50F5               	movf	tablat,w,c
  6732  002704  6E07               	movwf	tolower@c^0,c
  6733  002706  6A08               	clrf	(tolower@c+1)^0,c
  6734  002708  EC48  F02B         	call	_tolower	;wreg free
  6735  00270C  5007               	movf	?_tolower^0,w,c
  6736  00270E  0100               	movlb	0	; () banked
  6737  002710  6FC3               	movwf	vfpfcnvrt@ct& (0+255),b
  6738  002712                     
  6739                           ; BSR set to: 0
  6740                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (
      +                          ct[0]) {
  6741  002712  51C3               	movf	vfpfcnvrt@ct& (0+255),w,b
  6742  002714  B4D8               	btfsc	status,2,c
  6743  002716  EF8F  F013         	goto	u6621
  6744  00271A  EF91  F013         	goto	u6620
  6745  00271E                     u6621:
  6746  00271E  EFCB  F013         	goto	l5367
  6747  002722                     u6620:
  6748  002722                     
  6749                           ; BSR set to: 0
  6750                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             
      +                          ct[1] = tolower((int)(*fmt)[1]);
  6751  002722  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6752  002726  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6753  00272A  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  6754  00272E  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  6755  002732  0E01               	movlw	1
  6756  002734  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  6757  002736  0E00               	movlw	0
  6758  002738  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6759  00273A  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6760  00273E  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6761  002742                     	if	0	;tblptru may be non-zero
  6762  002742                     	endif
  6763  002742                     	if	0	;tblptru may be non-zero
  6764  002742                     	endif
  6765  002742  0008               	tblrd		*
  6766  002744  50F5               	movf	tablat,w,c
  6767  002746  6E07               	movwf	tolower@c^0,c
  6768  002748  6A08               	clrf	(tolower@c+1)^0,c
  6769  00274A  EC48  F02B         	call	_tolower	;wreg free
  6770  00274E  5007               	movf	?_tolower^0,w,c
  6771  002750  0100               	movlb	0	; () banked
  6772  002752  6FC4               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  6773  002754                     
  6774                           ; BSR set to: 0
  6775                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             
      +                          if (ct[1]) {
  6776  002754  51C4               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  6777  002756  B4D8               	btfsc	status,2,c
  6778  002758  EFB0  F013         	goto	u6631
  6779  00275C  EFB2  F013         	goto	u6630
  6780  002760                     u6631:
  6781  002760  EFCB  F013         	goto	l5367
  6782  002764                     u6630:
  6783  002764                     
  6784                           ; BSR set to: 0
  6785                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:             
      +                              ct[2] = tolower((int)(*fmt)[2]);
  6786  002764  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6787  002768  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6788  00276C  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  6789  002770  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  6790  002774  0E02               	movlw	2
  6791  002776  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  6792  002778  0E00               	movlw	0
  6793  00277A  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6794  00277C  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6795  002780  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6796  002784                     	if	0	;tblptru may be non-zero
  6797  002784                     	endif
  6798  002784                     	if	0	;tblptru may be non-zero
  6799  002784                     	endif
  6800  002784  0008               	tblrd		*
  6801  002786  50F5               	movf	tablat,w,c
  6802  002788  6E07               	movwf	tolower@c^0,c
  6803  00278A  6A08               	clrf	(tolower@c+1)^0,c
  6804  00278C  EC48  F02B         	call	_tolower	;wreg free
  6805  002790  5007               	movf	?_tolower^0,w,c
  6806  002792  0100               	movlb	0	; () banked
  6807  002794  6FC5               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  6808  002796                     l5367:
  6809                           
  6810                           ; BSR set to: 0
  6811                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6812  002796  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6813  00279A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6814  00279E  CFDE FFF6          	movff	postinc2,tblptrl
  6815  0027A2  CFDD FFF7          	movff	postdec2,tblptrh
  6816  0027A6                     	if	0	;tblptru may be non-zero
  6817  0027A6                     	endif
  6818  0027A6                     	if	0	;tblptru may be non-zero
  6819  0027A6                     	endif
  6820  0027A6  0008               	tblrd		*
  6821  0027A8  50F5               	movf	tablat,w,c
  6822  0027AA  0A64               	xorlw	100
  6823  0027AC  B4D8               	btfsc	status,2,c
  6824  0027AE  EFDB  F013         	goto	u6641
  6825  0027B2  EFDD  F013         	goto	u6640
  6826  0027B6                     u6641:
  6827  0027B6  EFEF  F013         	goto	l5371
  6828  0027BA                     u6640:
  6829  0027BA                     
  6830                           ; BSR set to: 0
  6831  0027BA  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6832  0027BE  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6833  0027C2  CFDE FFF6          	movff	postinc2,tblptrl
  6834  0027C6  CFDD FFF7          	movff	postdec2,tblptrh
  6835  0027CA                     	if	0	;tblptru may be non-zero
  6836  0027CA                     	endif
  6837  0027CA                     	if	0	;tblptru may be non-zero
  6838  0027CA                     	endif
  6839  0027CA  0008               	tblrd		*
  6840  0027CC  50F5               	movf	tablat,w,c
  6841  0027CE  0A69               	xorlw	105
  6842  0027D0  A4D8               	btfss	status,2,c
  6843  0027D2  EFED  F013         	goto	u6651
  6844  0027D6  EFEF  F013         	goto	u6650
  6845  0027DA                     u6651:
  6846  0027DA  EF2F  F014         	goto	l5377
  6847  0027DE                     u6650:
  6848  0027DE                     l5371:
  6849                           
  6850                           ; BSR set to: 0
  6851                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  6852  0027DE  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6853  0027E2  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6854  0027E6  2ADE               	incf	postinc2,f,c
  6855  0027E8  0E00               	movlw	0
  6856  0027EA  22DD               	addwfc	postdec2,f,c
  6857                           
  6858                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6859  0027EC  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6860  0027F0  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6861  0027F4  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6862  0027F8  0E02               	movlw	2
  6863  0027FA  26DE               	addwf	postinc2,f,c
  6864  0027FC  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6865  002800  0E00               	movlw	0
  6866  002802  22DD               	addwfc	postdec2,f,c
  6867  002804  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6868  002808  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6869  00280C  CFDE F0B1          	movff	postinc2,vfpfcnvrt@ll
  6870  002810  CFDD F0B2          	movff	postdec2,vfpfcnvrt@ll+1
  6871  002814  0E00               	movlw	0
  6872  002816  BFB2               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  6873  002818  0EFF               	movlw	-1
  6874  00281A  6FB3               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  6875  00281C  6FB4               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  6876  00281E  6FB5               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  6877  002820  6FB6               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  6878  002822  6FB7               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  6879  002824  6FB8               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  6880  002826                     
  6881                           ; BSR set to: 0
  6882                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  6883  002826  C0A7  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  6884  00282A  C0A8  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6885  00282E  C0B1  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  6886  002832  C0B2  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  6887  002836  C0B3  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  6888  00283A  C0B4  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  6889  00283E  C0B5  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  6890  002842  C0B6  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  6891  002846  C0B7  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  6892  00284A  C0B8  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  6893  00284E  EC14  F01D         	call	_dtoa	;wreg free
  6894  002852  C01C  F0A7         	movff	?_dtoa,?_vfpfcnvrt
  6895  002856  C01D  F0A8         	movff	?_dtoa+1,?_vfpfcnvrt+1
  6896  00285A  EF5E  F015         	goto	l1365
  6897  00285E                     l5377:
  6898                           
  6899                           ; BSR set to: 0
  6900                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (
      +                          ct[0] == 'f') {
  6901  00285E  0E66               	movlw	102
  6902  002860  19C3               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  6903  002862  A4D8               	btfss	status,2,c
  6904  002864  EF36  F014         	goto	u6661
  6905  002868  EF38  F014         	goto	u6660
  6906  00286C                     u6661:
  6907  00286C  EF78  F014         	goto	l5389
  6908  002870                     u6660:
  6909  002870                     
  6910                           ; BSR set to: 0
  6911                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             
      +                          c = (*fmt)[0];
  6912  002870  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6913  002874  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6914  002878  CFDE FFF6          	movff	postinc2,tblptrl
  6915  00287C  CFDD FFF7          	movff	postdec2,tblptrh
  6916  002880                     	if	0	;tblptru may be non-zero
  6917  002880                     	endif
  6918  002880                     	if	0	;tblptru may be non-zero
  6919  002880                     	endif
  6920  002880  0008               	tblrd		*
  6921  002882  CFF5 F0C6          	movff	tablat,vfpfcnvrt@c
  6922  002886                     
  6923                           ; BSR set to: 0
  6924                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             
      +                          ++*fmt;
  6925  002886  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6926  00288A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6927  00288E  2ADE               	incf	postinc2,f,c
  6928  002890  0E00               	movlw	0
  6929  002892  22DD               	addwfc	postdec2,f,c
  6930  002894                     
  6931                           ; BSR set to: 0
  6932                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  6933  002894  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6934  002898  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6935  00289C  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6936  0028A0  0E04               	movlw	4
  6937  0028A2  26DE               	addwf	postinc2,f,c
  6938  0028A4  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6939  0028A8  0E00               	movlw	0
  6940  0028AA  22DD               	addwfc	postdec2,f,c
  6941  0028AC  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6942  0028B0  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6943  0028B4  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  6944  0028B8  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  6945  0028BC  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  6946  0028C0  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  6947  0028C4                     l5385:
  6948                           
  6949                           ; BSR set to: 0
  6950                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             
      +                          return efgtoa(fp, f, c);
  6951  0028C4  C0A7  F058         	movff	vfpfcnvrt@fp,efgtoa@fp
  6952  0028C8  C0A8  F059         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  6953  0028CC  C0BF  F05A         	movff	vfpfcnvrt@f,efgtoa@f
  6954  0028D0  C0C0  F05B         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  6955  0028D4  C0C1  F05C         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  6956  0028D8  C0C2  F05D         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  6957  0028DC  C0C6  F05E         	movff	vfpfcnvrt@c,efgtoa@c
  6958  0028E0  EC6C  F003         	call	_efgtoa	;wreg free
  6959  0028E4  C058  F0A7         	movff	?_efgtoa,?_vfpfcnvrt
  6960  0028E8  C059  F0A8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  6961  0028EC  EF5E  F015         	goto	l1365
  6962  0028F0                     l5389:
  6963                           
  6964                           ; BSR set to: 0
  6965                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  6966  0028F0  0EC3               	movlw	low vfpfcnvrt@ct
  6967  0028F2  6E01               	movwf	strncmp@_l^0,c
  6968  0028F4  0E00               	movlw	high vfpfcnvrt@ct
  6969  0028F6  6E02               	movwf	(strncmp@_l+1)^0,c
  6970  0028F8  0ED4               	movlw	low STR_25
  6971  0028FA  6E03               	movwf	strncmp@_r^0,c
  6972  0028FC  0E06               	movlw	high STR_25
  6973  0028FE  6E04               	movwf	(strncmp@_r+1)^0,c
  6974  002900  0E00               	movlw	0
  6975  002902  6E06               	movwf	(strncmp@n+1)^0,c
  6976  002904  0E02               	movlw	2
  6977  002906  6E05               	movwf	strncmp@n^0,c
  6978  002908  ECDC  F026         	call	_strncmp	;wreg free
  6979  00290C  5001               	movf	?_strncmp^0,w,c
  6980  00290E  1002               	iorwf	(?_strncmp+1)^0,w,c
  6981  002910  A4D8               	btfss	status,2,c
  6982  002912  EF8D  F014         	goto	u6671
  6983  002916  EF8F  F014         	goto	u6670
  6984  00291A                     u6671:
  6985  00291A  EF0B  F015         	goto	l5405
  6986  00291E                     u6670:
  6987  00291E                     
  6988                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  6989  00291E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6990  002922  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6991  002926  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  6992  00292A  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  6993  00292E  0E01               	movlw	1
  6994  002930  0100               	movlb	0	; () banked
  6995  002932  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  6996  002934  0E00               	movlw	0
  6997  002936  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6998  002938  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6999  00293C  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  7000  002940                     	if	0	;tblptru may be non-zero
  7001  002940                     	endif
  7002  002940                     	if	0	;tblptru may be non-zero
  7003  002940                     	endif
  7004  002940  0008               	tblrd		*
  7005  002942  CFF5 F0C6          	movff	tablat,vfpfcnvrt@c
  7006  002946  0EBF               	movlw	191
  7007  002948  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  7008  00294A  0EFF               	movlw	255
  7009  00294C  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7010  00294E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7011  002952  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7012  002956  CFDE FFF6          	movff	postinc2,tblptrl
  7013  00295A  CFDD FFF7          	movff	postdec2,tblptrh
  7014  00295E                     	if	0	;tblptru may be non-zero
  7015  00295E                     	endif
  7016  00295E                     	if	0	;tblptru may be non-zero
  7017  00295E                     	endif
  7018  00295E  0008               	tblrd		*
  7019  002960  50F5               	movf	tablat,w,c
  7020  002962  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  7021  002964  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  7022  002966  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  7023  002968  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  7024  00296A  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7025  00296C  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  7026  00296E  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  7027  002970  E10A               	bnz	u6680
  7028  002972  0E1A               	movlw	26
  7029  002974  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  7030  002976  A0D8               	btfss	status,0,c
  7031  002978  EFC0  F014         	goto	u6681
  7032  00297C  EFC3  F014         	goto	u6680
  7033  002980                     u6681:
  7034  002980  0E01               	movlw	1
  7035  002982  EFC4  F014         	goto	u6690
  7036  002986                     u6680:
  7037  002986  0E00               	movlw	0
  7038  002988                     u6690:
  7039  002988  6FBD               	movwf	_vfpfcnvrt$2536& (0+255),b
  7040  00298A  6BBE               	clrf	(_vfpfcnvrt$2536+1)& (0+255),b
  7041  00298C                     
  7042                           ; BSR set to: 0
  7043  00298C  51BD               	movf	_vfpfcnvrt$2536& (0+255),w,b
  7044  00298E  11BE               	iorwf	(_vfpfcnvrt$2536+1)& (0+255),w,b
  7045  002990  B4D8               	btfsc	status,2,c
  7046  002992  EFCD  F014         	goto	u6701
  7047  002996  EFCF  F014         	goto	u6700
  7048  00299A                     u6701:
  7049  00299A  EFE9  F014         	goto	l5399
  7050  00299E                     u6700:
  7051  00299E                     
  7052                           ; BSR set to: 0
  7053                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  7054  00299E  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7055  0029A2  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7056  0029A6  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7057  0029AA  0E04               	movlw	4
  7058  0029AC  26DE               	addwf	postinc2,f,c
  7059  0029AE  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7060  0029B2  0E00               	movlw	0
  7061  0029B4  22DD               	addwfc	postdec2,f,c
  7062  0029B6  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7063  0029BA  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7064  0029BE  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  7065  0029C2  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  7066  0029C6  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  7067  0029CA  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  7068                           
  7069                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             
      +                          } else {
  7070  0029CE  EF01  F015         	goto	l1373
  7071  0029D2                     l5399:
  7072                           
  7073                           ; BSR set to: 0
  7074                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  7075  0029D2  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7076  0029D6  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7077  0029DA  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7078  0029DE  0E04               	movlw	4
  7079  0029E0  26DE               	addwf	postinc2,f,c
  7080  0029E2  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7081  0029E6  0E00               	movlw	0
  7082  0029E8  22DD               	addwfc	postdec2,f,c
  7083  0029EA  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7084  0029EE  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7085  0029F2  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  7086  0029F6  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  7087  0029FA  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  7088  0029FE  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  7089  002A02                     l1373:
  7090                           
  7091                           ; BSR set to: 0
  7092                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  7093  002A02  0E02               	movlw	2
  7094  002A04  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7095  002A08  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7096  002A0C  26DE               	addwf	postinc2,f,c
  7097  002A0E  0E00               	movlw	0
  7098  002A10  22DD               	addwfc	postdec2,f,c
  7099  002A12  EF62  F014         	goto	l5385
  7100  002A16                     l5405:
  7101                           
  7102                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  7103  002A16  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7104  002A1A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7105  002A1E  CFDE FFF6          	movff	postinc2,tblptrl
  7106  002A22  CFDD FFF7          	movff	postdec2,tblptrh
  7107  002A26                     	if	0	;tblptru may be non-zero
  7108  002A26                     	endif
  7109  002A26                     	if	0	;tblptru may be non-zero
  7110  002A26                     	endif
  7111  002A26  0008               	tblrd		*
  7112  002A28  50F5               	movf	tablat,w,c
  7113  002A2A  0A25               	xorlw	37
  7114  002A2C  A4D8               	btfss	status,2,c
  7115  002A2E  EF1B  F015         	goto	u6711
  7116  002A32  EF1D  F015         	goto	u6710
  7117  002A36                     u6711:
  7118  002A36  EF35  F015         	goto	l5415
  7119  002A3A                     u6710:
  7120  002A3A                     
  7121                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  7122  002A3A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7123  002A3E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7124  002A42  2ADE               	incf	postinc2,f,c
  7125  002A44  0E00               	movlw	0
  7126  002A46  22DD               	addwfc	postdec2,f,c
  7127  002A48                     
  7128                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  7129  002A48  0E00               	movlw	0
  7130  002A4A  6E02               	movwf	(fputc@c+1)^0,c
  7131  002A4C  0E25               	movlw	37
  7132  002A4E  6E01               	movwf	fputc@c^0,c
  7133  002A50  C0A7  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7134  002A54  C0A8  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7135  002A58  EC47  F027         	call	_fputc	;wreg free
  7136  002A5C                     l5411:
  7137                           
  7138                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  7139  002A5C  0E00               	movlw	0
  7140  002A5E  0100               	movlb	0	; () banked
  7141  002A60  6FA8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7142  002A62  0E01               	movlw	1
  7143  002A64  6FA7               	movwf	?_vfpfcnvrt& (0+255),b
  7144  002A66  EF5E  F015         	goto	l1365
  7145  002A6A                     l5415:
  7146                           
  7147                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  7148  002A6A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7149  002A6E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7150  002A72  2ADE               	incf	postinc2,f,c
  7151  002A74  0E00               	movlw	0
  7152  002A76  22DD               	addwfc	postdec2,f,c
  7153  002A78                     
  7154                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  7155  002A78  0E00               	movlw	0
  7156  002A7A  0100               	movlb	0	; () banked
  7157  002A7C  6FA8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7158  002A7E  0E00               	movlw	0
  7159  002A80  6FA7               	movwf	?_vfpfcnvrt& (0+255),b
  7160  002A82  EF5E  F015         	goto	l1365
  7161  002A86                     l5421:
  7162                           
  7163                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  7164  002A86  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7165  002A8A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7166  002A8E  CFDE FFF6          	movff	postinc2,tblptrl
  7167  002A92  CFDD FFF7          	movff	postdec2,tblptrh
  7168  002A96                     	if	0	;tblptru may be non-zero
  7169  002A96                     	endif
  7170  002A96                     	if	0	;tblptru may be non-zero
  7171  002A96                     	endif
  7172  002A96  0008               	tblrd		*
  7173  002A98  50F5               	movf	tablat,w,c
  7174  002A9A  6E01               	movwf	fputc@c^0,c
  7175  002A9C  6A02               	clrf	(fputc@c+1)^0,c
  7176  002A9E  C0A7  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7177  002AA2  C0A8  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7178  002AA6  EC47  F027         	call	_fputc	;wreg free
  7179  002AAA                     
  7180                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  7181  002AAA  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7182  002AAE  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7183  002AB2  2ADE               	incf	postinc2,f,c
  7184  002AB4  0E00               	movlw	0
  7185  002AB6  22DD               	addwfc	postdec2,f,c
  7186  002AB8  EF2E  F015         	goto	l5411
  7187  002ABC                     l1365:
  7188  002ABC  0012               	return		;funcret
  7189  002ABE                     __end_of_vfpfcnvrt:
  7190                           	callstack 0
  7191                           
  7192 ;; *************** function _strncmp *****************
  7193 ;; Defined at:
  7194 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  7195 ;; Parameters:    Size  Location     Type
  7196 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  7197 ;;		 -> vfpfcnvrt@ct(3), 
  7198 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  7199 ;;		 -> STR_27(3), 
  7200 ;;  n               2    4[COMRAM] unsigned int 
  7201 ;; Auto vars:     Size  Location     Type
  7202 ;;  r               2    9[COMRAM] PTR const unsigned char 
  7203 ;;		 -> STR_27(3), 
  7204 ;;  l               2    7[COMRAM] PTR const unsigned char 
  7205 ;;		 -> vfpfcnvrt@ct(3), 
  7206 ;; Return value:  Size  Location     Type
  7207 ;;                  2    0[COMRAM] int 
  7208 ;; Registers used:
  7209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7210 ;; Tracked objects:
  7211 ;;		On entry : 0/0
  7212 ;;		On exit  : 0/0
  7213 ;;		Unchanged: 0/0
  7214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7215 ;;      Params:         6       0       0       0       0       0       0
  7216 ;;      Locals:         4       0       0       0       0       0       0
  7217 ;;      Temps:          1       0       0       0       0       0       0
  7218 ;;      Totals:        11       0       0       0       0       0       0
  7219 ;;Total ram usage:       11 bytes
  7220 ;; Hardware stack levels used:    1
  7221 ;; Hardware stack levels required when called:    1
  7222 ;; This function calls:
  7223 ;;		Nothing
  7224 ;; This function is called by:
  7225 ;;		_vfpfcnvrt
  7226 ;; This function uses a non-reentrant model
  7227 ;;
  7228                           
  7229                           	psect	text22
  7230  004DB8                     __ptext22:
  7231                           	callstack 0
  7232  004DB8                     _strncmp:
  7233                           	callstack 24
  7234  004DB8  C001  F008         	movff	strncmp@_l,strncmp@l
  7235  004DBC  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  7236  004DC0  C003  F00A         	movff	strncmp@_r,strncmp@r
  7237  004DC4  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  7238  004DC8  0605               	decf	strncmp@n^0,f,c
  7239  004DCA  A0D8               	btfss	status,0,c
  7240  004DCC  0606               	decf	(strncmp@n+1)^0,f,c
  7241  004DCE  2805               	incf	strncmp@n^0,w,c
  7242  004DD0  E106               	bnz	u6261
  7243  004DD2  2806               	incf	(strncmp@n+1)^0,w,c
  7244  004DD4  A4D8               	btfss	status,2,c
  7245  004DD6  EFEF  F026         	goto	u6261
  7246  004DDA  EFF1  F026         	goto	u6260
  7247  004DDE                     u6261:
  7248  004DDE  EFFE  F026         	goto	l5183
  7249  004DE2                     u6260:
  7250  004DE2  0E00               	movlw	0
  7251  004DE4  6E02               	movwf	(?_strncmp+1)^0,c
  7252  004DE6  0E00               	movlw	0
  7253  004DE8  6E01               	movwf	?_strncmp^0,c
  7254  004DEA  EF46  F027         	goto	l1501
  7255  004DEE                     l5181:
  7256  004DEE  4A08               	infsnz	strncmp@l^0,f,c
  7257  004DF0  2A09               	incf	(strncmp@l+1)^0,f,c
  7258  004DF2  4A0A               	infsnz	strncmp@r^0,f,c
  7259  004DF4  2A0B               	incf	(strncmp@r+1)^0,f,c
  7260  004DF6  0605               	decf	strncmp@n^0,f,c
  7261  004DF8  A0D8               	btfss	status,0,c
  7262  004DFA  0606               	decf	(strncmp@n+1)^0,f,c
  7263  004DFC                     l5183:
  7264  004DFC  C008  FFD9         	movff	strncmp@l,fsr2l
  7265  004E00  C009  FFDA         	movff	strncmp@l+1,fsr2h
  7266  004E04  50DF               	movf	indf2,w,c
  7267  004E06  B4D8               	btfsc	status,2,c
  7268  004E08  EF08  F027         	goto	u6271
  7269  004E0C  EF0A  F027         	goto	u6270
  7270  004E10                     u6271:
  7271  004E10  EF35  F027         	goto	l5191
  7272  004E14                     u6270:
  7273  004E14  C00A  FFF6         	movff	strncmp@r,tblptrl
  7274  004E18  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7275  004E1C                     	if	0	;tblptru may be non-zero
  7276  004E1C                     	endif
  7277  004E1C                     	if	0	;tblptru may be non-zero
  7278  004E1C                     	endif
  7279  004E1C  0008               	tblrd		*
  7280  004E1E  50F5               	movf	tablat,w,c
  7281  004E20  0900               	iorlw	0
  7282  004E22  B4D8               	btfsc	status,2,c
  7283  004E24  EF16  F027         	goto	u6281
  7284  004E28  EF18  F027         	goto	u6280
  7285  004E2C                     u6281:
  7286  004E2C  EF35  F027         	goto	l5191
  7287  004E30                     u6280:
  7288  004E30  5005               	movf	strncmp@n^0,w,c
  7289  004E32  1006               	iorwf	(strncmp@n+1)^0,w,c
  7290  004E34  B4D8               	btfsc	status,2,c
  7291  004E36  EF1F  F027         	goto	u6291
  7292  004E3A  EF21  F027         	goto	u6290
  7293  004E3E                     u6291:
  7294  004E3E  EF35  F027         	goto	l5191
  7295  004E42                     u6290:
  7296  004E42  C008  FFD9         	movff	strncmp@l,fsr2l
  7297  004E46  C009  FFDA         	movff	strncmp@l+1,fsr2h
  7298  004E4A  50DF               	movf	indf2,w,c
  7299  004E4C  6E07               	movwf	??_strncmp^0,c
  7300  004E4E  C00A  FFF6         	movff	strncmp@r,tblptrl
  7301  004E52  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7302  004E56                     	if	0	;tblptru may be non-zero
  7303  004E56                     	endif
  7304  004E56                     	if	0	;tblptru may be non-zero
  7305  004E56                     	endif
  7306  004E56  0008               	tblrd		*
  7307  004E58  50F5               	movf	tablat,w,c
  7308  004E5A  1807               	xorwf	??_strncmp^0,w,c
  7309  004E5C  B4D8               	btfsc	status,2,c
  7310  004E5E  EF33  F027         	goto	u6301
  7311  004E62  EF35  F027         	goto	u6300
  7312  004E66                     u6301:
  7313  004E66  EFF7  F026         	goto	l5181
  7314  004E6A                     u6300:
  7315  004E6A                     l5191:
  7316  004E6A  C008  FFD9         	movff	strncmp@l,fsr2l
  7317  004E6E  C009  FFDA         	movff	strncmp@l+1,fsr2h
  7318  004E72  50DF               	movf	indf2,w,c
  7319  004E74  6E07               	movwf	??_strncmp^0,c
  7320  004E76  C00A  FFF6         	movff	strncmp@r,tblptrl
  7321  004E7A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7322  004E7E                     	if	0	;tblptru may be non-zero
  7323  004E7E                     	endif
  7324  004E7E                     	if	0	;tblptru may be non-zero
  7325  004E7E                     	endif
  7326  004E7E  0008               	tblrd		*
  7327  004E80  50F5               	movf	tablat,w,c
  7328  004E82  5C07               	subwf	??_strncmp^0,w,c
  7329  004E84  6E01               	movwf	?_strncmp^0,c
  7330  004E86  6A02               	clrf	(?_strncmp+1)^0,c
  7331  004E88  A0D8               	btfss	status,0,c
  7332  004E8A  0602               	decf	(?_strncmp+1)^0,f,c
  7333  004E8C                     l1501:
  7334  004E8C  0012               	return		;funcret
  7335  004E8E                     __end_of_strncmp:
  7336                           	callstack 0
  7337                           
  7338 ;; *************** function _efgtoa *****************
  7339 ;; Defined at:
  7340 ;;		line 319 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7341 ;; Parameters:    Size  Location     Type
  7342 ;;  fp              2   87[COMRAM] PTR struct _IO_FILE
  7343 ;;		 -> sprintf@f(6), 
  7344 ;;  f               4   89[COMRAM] PTR struct _IO_FILE
  7345 ;;  c               1   93[COMRAM] unsigned char 
  7346 ;; Auto vars:     Size  Location     Type
  7347 ;;  u               4   67[BANK0 ] unsigned char 
  7348 ;;  g               4   59[BANK0 ] unsigned char 
  7349 ;;  l               4   53[BANK0 ] unsigned char 
  7350 ;;  h               4   49[BANK0 ] unsigned char 
  7351 ;;  ou              4   15[BANK0 ] unsigned char 
  7352 ;;  n               2   65[BANK0 ] int 
  7353 ;;  e               2   63[BANK0 ] int 
  7354 ;;  i               2   57[BANK0 ] int 
  7355 ;;  w               2   46[BANK0 ] int 
  7356 ;;  p               2   43[BANK0 ] int 
  7357 ;;  sign            2   41[BANK0 ] int 
  7358 ;;  d               2   39[BANK0 ] int 
  7359 ;;  ne              2   37[BANK0 ] int 
  7360 ;;  m               2   35[BANK0 ] int 
  7361 ;;  pp              2   33[BANK0 ] int 
  7362 ;;  t               2   31[BANK0 ] int 
  7363 ;;  mode            1   48[BANK0 ] unsigned char 
  7364 ;;  nmode           1   45[BANK0 ] unsigned char 
  7365 ;; Return value:  Size  Location     Type
  7366 ;;                  2   87[COMRAM] int 
  7367 ;; Registers used:
  7368 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7369 ;; Tracked objects:
  7370 ;;		On entry : 0/0
  7371 ;;		On exit  : 0/0
  7372 ;;		Unchanged: 0/0
  7373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7374 ;;      Params:         7       0       0       0       0       0       0
  7375 ;;      Locals:         0      56       0       0       0       0       0
  7376 ;;      Temps:          0       5       0       0       0       0       0
  7377 ;;      Totals:         7      61       0       0       0       0       0
  7378 ;;Total ram usage:       68 bytes
  7379 ;; Hardware stack levels used:    1
  7380 ;; Hardware stack levels required when called:    5
  7381 ;; This function calls:
  7382 ;;		___awdiv
  7383 ;;		___awmod
  7384 ;;		___fladd
  7385 ;;		___fldiv
  7386 ;;		___fleq
  7387 ;;		___flge
  7388 ;;		___flmul
  7389 ;;		___flneg
  7390 ;;		___flsub
  7391 ;;		___fltol
  7392 ;;		___fpclassifyf
  7393 ;;		_floorf
  7394 ;;		_isupper
  7395 ;;		_pad
  7396 ;;		_strcpy
  7397 ;;		_tolower
  7398 ;; This function is called by:
  7399 ;;		_vfpfcnvrt
  7400 ;; This function uses a non-reentrant model
  7401 ;;
  7402                           
  7403                           	psect	text23
  7404  0006D8                     __ptext23:
  7405                           	callstack 0
  7406  0006D8                     _efgtoa:
  7407                           	callstack 20
  7408  0006D8                     
  7409                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\
      +                          c99\common\doprnt.c: 320: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\
      +                          doprnt.c: 321:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c9
      +                          9\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;
  7410  0006D8  0E00               	movlw	0
  7411  0006DA  0100               	movlb	0	; () banked
  7412  0006DC  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  7413  0006DE  0E00               	movlw	0
  7414  0006E0  6F89               	movwf	efgtoa@sign& (0+255),b
  7415  0006E2                     
  7416                           ; BSR set to: 0
  7417                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  7418  0006E2  C05A  F09B         	movff	efgtoa@f,efgtoa@g
  7419  0006E6  C05B  F09C         	movff	efgtoa@f+1,efgtoa@g+1
  7420  0006EA  C05C  F09D         	movff	efgtoa@f+2,efgtoa@g+2
  7421  0006EE  C05D  F09E         	movff	efgtoa@f+3,efgtoa@g+3
  7422  0006F2                     
  7423                           ; BSR set to: 0
  7424                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 
      +                          0.0) {
  7425  0006F2  BF9E               	btfsc	(efgtoa@g+3)& (0+255),7,b
  7426  0006F4  EF80  F003         	goto	u5670
  7427  0006F8  EF7E  F003         	goto	u5671
  7428  0006FC                     u5671:
  7429  0006FC  EF96  F003         	goto	l4845
  7430  000700                     u5670:
  7431  000700                     
  7432                           ; BSR set to: 0
  7433                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign
      +                           = 1;
  7434  000700  0E00               	movlw	0
  7435  000702  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  7436  000704  0E01               	movlw	1
  7437  000706  6F89               	movwf	efgtoa@sign& (0+255),b
  7438  000708                     
  7439                           ; BSR set to: 0
  7440                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = 
      +                          -g;
  7441  000708  C09B  F001         	movff	efgtoa@g,___flneg@f1
  7442  00070C  C09C  F002         	movff	efgtoa@g+1,___flneg@f1+1
  7443  000710  C09D  F003         	movff	efgtoa@g+2,___flneg@f1+2
  7444  000714  C09E  F004         	movff	efgtoa@g+3,___flneg@f1+3
  7445  000718  EC2E  F02D         	call	___flneg	;wreg free
  7446  00071C  C001  F09B         	movff	?___flneg,efgtoa@g
  7447  000720  C002  F09C         	movff	?___flneg+1,efgtoa@g+1
  7448  000724  C003  F09D         	movff	?___flneg+2,efgtoa@g+2
  7449  000728  C004  F09E         	movff	?___flneg+3,efgtoa@g+3
  7450  00072C                     l4845:
  7451                           
  7452                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  7453  00072C  0E00               	movlw	0
  7454  00072E  0100               	movlb	0	; () banked
  7455  000730  6FA2               	movwf	(efgtoa@n+1)& (0+255),b
  7456  000732  0E00               	movlw	0
  7457  000734  6FA1               	movwf	efgtoa@n& (0+255),b
  7458  000736                     
  7459                           ; BSR set to: 0
  7460                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = widt
      +                          h;
  7461  000736  C194  F08E         	movff	_width,efgtoa@w
  7462  00073A  C195  F08F         	movff	_width+1,efgtoa@w+1
  7463  00073E                     
  7464                           ; BSR set to: 0
  7465                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign
      +                           || (flags & (1 << 2))) {
  7466  00073E  5189               	movf	efgtoa@sign& (0+255),w,b
  7467  000740  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7468  000742  A4D8               	btfss	status,2,c
  7469  000744  EFA6  F003         	goto	u5681
  7470  000748  EFA8  F003         	goto	u5680
  7471  00074C                     u5681:
  7472  00074C  EFB0  F003         	goto	l4853
  7473  000750                     u5680:
  7474  000750                     
  7475                           ; BSR set to: 0
  7476  000750  0101               	movlb	1	; () banked
  7477  000752  A598               	btfss	_flags& (0+255),2,b
  7478  000754  EFAE  F003         	goto	u5691
  7479  000758  EFB0  F003         	goto	u5690
  7480  00075C                     u5691:
  7481  00075C  EFCB  F003         	goto	l4865
  7482  000760                     u5690:
  7483  000760                     l4853:
  7484                           
  7485                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf
      +                          [n] = sign ? '-' : '+';
  7486  000760  0100               	movlb	0	; () banked
  7487  000762  5189               	movf	efgtoa@sign& (0+255),w,b
  7488  000764  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7489  000766  A4D8               	btfss	status,2,c
  7490  000768  EFB8  F003         	goto	u5701
  7491  00076C  EFBA  F003         	goto	u5700
  7492  000770                     u5701:
  7493  000770  EFC0  F003         	goto	l4857
  7494  000774                     u5700:
  7495  000774                     
  7496                           ; BSR set to: 0
  7497  000774  0E00               	movlw	0
  7498  000776  6F74               	movwf	(_efgtoa$2505+1)& (0+255),b
  7499  000778  0E2B               	movlw	43
  7500  00077A  6F73               	movwf	_efgtoa$2505& (0+255),b
  7501  00077C  EFC4  F003         	goto	l4859
  7502  000780                     l4857:
  7503                           
  7504                           ; BSR set to: 0
  7505  000780  0E00               	movlw	0
  7506  000782  6F74               	movwf	(_efgtoa$2505+1)& (0+255),b
  7507  000784  0E2D               	movlw	45
  7508  000786  6F73               	movwf	_efgtoa$2505& (0+255),b
  7509  000788                     l4859:
  7510                           
  7511                           ; BSR set to: 0
  7512  000788  C073  F19F         	movff	_efgtoa$2505,_dbuf
  7513  00078C                     
  7514                           ; BSR set to: 0
  7515                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  7516  00078C  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  7517  00078E  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  7518  000790                     
  7519                           ; BSR set to: 0
  7520                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  7521  000790  078E               	decf	efgtoa@w& (0+255),f,b
  7522  000792  A0D8               	btfss	status,0,c
  7523  000794  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  7524  000796                     l4865:
  7525                           
  7526                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  7527  000796  C09B  F001         	movff	efgtoa@g,___fpclassifyf@x
  7528  00079A  C09C  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7529  00079E  C09D  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7530  0007A2  C09E  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7531  0007A6  ECE0  F025         	call	___fpclassifyf	;wreg free
  7532  0007AA  0401               	decf	?___fpclassifyf^0,w,c
  7533  0007AC  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  7534  0007AE  A4D8               	btfss	status,2,c
  7535  0007B0  EFDC  F003         	goto	u5711
  7536  0007B4  EFDE  F003         	goto	u5710
  7537  0007B8                     u5711:
  7538  0007B8  EF35  F004         	goto	l4883
  7539  0007BC                     u5710:
  7540  0007BC  0EBF               	movlw	191
  7541  0007BE  0100               	movlb	0	; () banked
  7542  0007C0  6F6A               	movwf	??_efgtoa& (0+255),b
  7543  0007C2  0EFF               	movlw	255
  7544  0007C4  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  7545  0007C6  505E               	movf	efgtoa@c^0,w,c
  7546  0007C8  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  7547  0007CA  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  7548  0007CC  516A               	movf	??_efgtoa& (0+255),w,b
  7549  0007CE  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  7550  0007D0  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  7551  0007D2  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7552  0007D4  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  7553  0007D6  E10A               	bnz	u5720
  7554  0007D8  0E1A               	movlw	26
  7555  0007DA  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  7556  0007DC  A0D8               	btfss	status,0,c
  7557  0007DE  EFF3  F003         	goto	u5721
  7558  0007E2  EFF6  F003         	goto	u5720
  7559  0007E6                     u5721:
  7560  0007E6  0E01               	movlw	1
  7561  0007E8  EFF7  F003         	goto	u5730
  7562  0007EC                     u5720:
  7563  0007EC  0E00               	movlw	0
  7564  0007EE                     u5730:
  7565  0007EE  6F75               	movwf	_efgtoa$2506& (0+255),b
  7566  0007F0  6B76               	clrf	(_efgtoa$2506+1)& (0+255),b
  7567  0007F2                     
  7568                           ; BSR set to: 0
  7569  0007F2  5175               	movf	_efgtoa$2506& (0+255),w,b
  7570  0007F4  1176               	iorwf	(_efgtoa$2506+1)& (0+255),w,b
  7571  0007F6  B4D8               	btfsc	status,2,c
  7572  0007F8  EF00  F004         	goto	u5741
  7573  0007FC  EF02  F004         	goto	u5740
  7574  000800                     u5741:
  7575  000800  EF10  F004         	goto	l4875
  7576  000804                     u5740:
  7577  000804                     
  7578                           ; BSR set to: 0
  7579                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             
      +                          strcpy(&dbuf[n], "INF");
  7580  000804  0E9F               	movlw	low _dbuf
  7581  000806  25A1               	addwf	efgtoa@n& (0+255),w,b
  7582  000808  6E01               	movwf	strcpy@dest^0,c
  7583  00080A  0E01               	movlw	high _dbuf
  7584  00080C  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7585  00080E  6E02               	movwf	(strcpy@dest+1)^0,c
  7586  000810  0EC4               	movlw	low STR_17
  7587  000812  6E03               	movwf	strcpy@src^0,c
  7588  000814  0E06               	movlw	high STR_17
  7589  000816  6E04               	movwf	(strcpy@src+1)^0,c
  7590  000818  EC78  F02B         	call	_strcpy	;wreg free
  7591                           
  7592                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } el
      +                          se {
  7593  00081C  EF1C  F004         	goto	l4877
  7594  000820                     l4875:
  7595                           
  7596                           ; BSR set to: 0
  7597                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             
      +                          strcpy(&dbuf[n], "inf");
  7598  000820  0E9F               	movlw	low _dbuf
  7599  000822  25A1               	addwf	efgtoa@n& (0+255),w,b
  7600  000824  6E01               	movwf	strcpy@dest^0,c
  7601  000826  0E01               	movlw	high _dbuf
  7602  000828  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7603  00082A  6E02               	movwf	(strcpy@dest+1)^0,c
  7604  00082C  0ECC               	movlw	low STR_18
  7605  00082E  6E03               	movwf	strcpy@src^0,c
  7606  000830  0E06               	movlw	high STR_18
  7607  000832  6E04               	movwf	(strcpy@src+1)^0,c
  7608  000834  EC78  F02B         	call	_strcpy	;wreg free
  7609  000838                     l4877:
  7610                           
  7611                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  7612  000838  0100               	movlb	0	; () banked
  7613  00083A  0EFD               	movlw	253
  7614  00083C  278E               	addwf	efgtoa@w& (0+255),f,b
  7615  00083E  0EFF               	movlw	255
  7616  000840  238F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  7617  000842                     l4879:
  7618                           
  7619                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         retu
      +                          rn pad(fp, &dbuf[0], w);
  7620  000842  C058  F011         	movff	efgtoa@fp,pad@fp
  7621  000846  C059  F012         	movff	efgtoa@fp+1,pad@fp+1
  7622  00084A  0E9F               	movlw	low _dbuf
  7623  00084C  6E13               	movwf	pad@buf^0,c
  7624  00084E  0E01               	movlw	high _dbuf
  7625  000850  6E14               	movwf	(pad@buf+1)^0,c
  7626  000852  C08E  F015         	movff	efgtoa@w,pad@p
  7627  000856  C08F  F016         	movff	efgtoa@w+1,pad@p+1
  7628  00085A  ECAC  F027         	call	_pad	;wreg free
  7629  00085E  C011  F058         	movff	?_pad,?_efgtoa
  7630  000862  C012  F059         	movff	?_pad+1,?_efgtoa+1
  7631  000866  EF4E  F009         	goto	l1263
  7632  00086A                     l4883:
  7633                           
  7634                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  7635  00086A  C09B  F001         	movff	efgtoa@g,___fpclassifyf@x
  7636  00086E  C09C  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7637  000872  C09D  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7638  000876  C09E  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7639  00087A  ECE0  F025         	call	___fpclassifyf	;wreg free
  7640  00087E  5001               	movf	?___fpclassifyf^0,w,c
  7641  000880  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  7642  000882  A4D8               	btfss	status,2,c
  7643  000884  EF46  F004         	goto	u5751
  7644  000888  EF48  F004         	goto	u5750
  7645  00088C                     u5751:
  7646  00088C  EF88  F004         	goto	l4901
  7647  000890                     u5750:
  7648  000890  0EBF               	movlw	191
  7649  000892  0100               	movlb	0	; () banked
  7650  000894  6F6A               	movwf	??_efgtoa& (0+255),b
  7651  000896  0EFF               	movlw	255
  7652  000898  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  7653  00089A  505E               	movf	efgtoa@c^0,w,c
  7654  00089C  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  7655  00089E  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  7656  0008A0  516A               	movf	??_efgtoa& (0+255),w,b
  7657  0008A2  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  7658  0008A4  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  7659  0008A6  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7660  0008A8  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  7661  0008AA  E10A               	bnz	u5760
  7662  0008AC  0E1A               	movlw	26
  7663  0008AE  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  7664  0008B0  A0D8               	btfss	status,0,c
  7665  0008B2  EF5D  F004         	goto	u5761
  7666  0008B6  EF60  F004         	goto	u5760
  7667  0008BA                     u5761:
  7668  0008BA  0E01               	movlw	1
  7669  0008BC  EF61  F004         	goto	u5770
  7670  0008C0                     u5760:
  7671  0008C0  0E00               	movlw	0
  7672  0008C2                     u5770:
  7673  0008C2  6F77               	movwf	_efgtoa$2510& (0+255),b
  7674  0008C4  6B78               	clrf	(_efgtoa$2510+1)& (0+255),b
  7675  0008C6                     
  7676                           ; BSR set to: 0
  7677  0008C6  5177               	movf	_efgtoa$2510& (0+255),w,b
  7678  0008C8  1178               	iorwf	(_efgtoa$2510+1)& (0+255),w,b
  7679  0008CA  B4D8               	btfsc	status,2,c
  7680  0008CC  EF6A  F004         	goto	u5781
  7681  0008D0  EF6C  F004         	goto	u5780
  7682  0008D4                     u5781:
  7683  0008D4  EF7A  F004         	goto	l4893
  7684  0008D8                     u5780:
  7685  0008D8                     
  7686                           ; BSR set to: 0
  7687                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             
      +                          strcpy(&dbuf[n], "NAN");
  7688  0008D8  0E9F               	movlw	low _dbuf
  7689  0008DA  25A1               	addwf	efgtoa@n& (0+255),w,b
  7690  0008DC  6E01               	movwf	strcpy@dest^0,c
  7691  0008DE  0E01               	movlw	high _dbuf
  7692  0008E0  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7693  0008E2  6E02               	movwf	(strcpy@dest+1)^0,c
  7694  0008E4  0EC8               	movlw	low STR_21
  7695  0008E6  6E03               	movwf	strcpy@src^0,c
  7696  0008E8  0E06               	movlw	high STR_21
  7697  0008EA  6E04               	movwf	(strcpy@src+1)^0,c
  7698  0008EC  EC78  F02B         	call	_strcpy	;wreg free
  7699                           
  7700                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } el
      +                          se {
  7701  0008F0  EF1C  F004         	goto	l4877
  7702  0008F4                     l4893:
  7703                           
  7704                           ; BSR set to: 0
  7705                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             
      +                          strcpy(&dbuf[n], "nan");
  7706  0008F4  0E9F               	movlw	low _dbuf
  7707  0008F6  25A1               	addwf	efgtoa@n& (0+255),w,b
  7708  0008F8  6E01               	movwf	strcpy@dest^0,c
  7709  0008FA  0E01               	movlw	high _dbuf
  7710  0008FC  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7711  0008FE  6E02               	movwf	(strcpy@dest+1)^0,c
  7712  000900  0ED0               	movlw	low STR_22
  7713  000902  6E03               	movwf	strcpy@src^0,c
  7714  000904  0E06               	movlw	high STR_22
  7715  000906  6E04               	movwf	(strcpy@src+1)^0,c
  7716  000908  EC78  F02B         	call	_strcpy	;wreg free
  7717  00090C  EF1C  F004         	goto	l4877
  7718  000910                     l4901:
  7719                           
  7720                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  7721  000910  0E00               	movlw	0
  7722  000912  0100               	movlb	0	; () banked
  7723  000914  6FA3               	movwf	efgtoa@u& (0+255),b
  7724  000916  0E00               	movlw	0
  7725  000918  6FA4               	movwf	(efgtoa@u+1)& (0+255),b
  7726  00091A  0E80               	movlw	128
  7727  00091C  6FA5               	movwf	(efgtoa@u+2)& (0+255),b
  7728  00091E  0E3F               	movlw	63
  7729  000920  6FA6               	movwf	(efgtoa@u+3)& (0+255),b
  7730                           
  7731                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  7732  000922  0E00               	movlw	0
  7733  000924  6FA0               	movwf	(efgtoa@e+1)& (0+255),b
  7734  000926  0E00               	movlw	0
  7735  000928  6F9F               	movwf	efgtoa@e& (0+255),b
  7736  00092A                     
  7737                           ; BSR set to: 0
  7738                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g 
      +                          == 0.0)) {
  7739  00092A  C09B  F001         	movff	efgtoa@g,___fleq@ff1
  7740  00092E  C09C  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  7741  000932  C09D  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  7742  000936  C09E  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  7743  00093A  0E00               	movlw	0
  7744  00093C  6E05               	movwf	___fleq@ff2^0,c
  7745  00093E  0E00               	movlw	0
  7746  000940  6E06               	movwf	(___fleq@ff2+1)^0,c
  7747  000942  0E00               	movlw	0
  7748  000944  6E07               	movwf	(___fleq@ff2+2)^0,c
  7749  000946  0E00               	movlw	0
  7750  000948  6E08               	movwf	(___fleq@ff2+3)^0,c
  7751  00094A  ECC9  F028         	call	___fleq	;wreg free
  7752  00094E  B0D8               	btfsc	status,0,c
  7753  000950  EFAC  F004         	goto	u5791
  7754  000954  EFAE  F004         	goto	u5790
  7755  000958                     u5791:
  7756  000958  EF31  F005         	goto	l4919
  7757  00095C                     u5790:
  7758  00095C  EFCD  F004         	goto	l4911
  7759  000960                     l4907:
  7760                           
  7761                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             
      +                          u = u*10.0;
  7762  000960  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  7763  000964  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  7764  000968  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  7765  00096C  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  7766  000970  0E00               	movlw	0
  7767  000972  6E20               	movwf	___flmul@a^0,c
  7768  000974  0E00               	movlw	0
  7769  000976  6E21               	movwf	(___flmul@a+1)^0,c
  7770  000978  0E20               	movlw	32
  7771  00097A  6E22               	movwf	(___flmul@a+2)^0,c
  7772  00097C  0E41               	movlw	65
  7773  00097E  6E23               	movwf	(___flmul@a+3)^0,c
  7774  000980  ECBF  F017         	call	___flmul	;wreg free
  7775  000984  C01C  F0A3         	movff	?___flmul,efgtoa@u
  7776  000988  C01D  F0A4         	movff	?___flmul+1,efgtoa@u+1
  7777  00098C  C01E  F0A5         	movff	?___flmul+2,efgtoa@u+2
  7778  000990  C01F  F0A6         	movff	?___flmul+3,efgtoa@u+3
  7779  000994                     
  7780                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             
      +                          ++e;
  7781  000994  0100               	movlb	0	; () banked
  7782  000996  4B9F               	infsnz	efgtoa@e& (0+255),f,b
  7783  000998  2BA0               	incf	(efgtoa@e+1)& (0+255),f,b
  7784  00099A                     l4911:
  7785                           
  7786                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         whil
      +                          e (!(g < (u*10.0))) {
  7787  00099A  C09B  F035         	movff	efgtoa@g,___flge@ff1
  7788  00099E  C09C  F036         	movff	efgtoa@g+1,___flge@ff1+1
  7789  0009A2  C09D  F037         	movff	efgtoa@g+2,___flge@ff1+2
  7790  0009A6  C09E  F038         	movff	efgtoa@g+3,___flge@ff1+3
  7791  0009AA  0E00               	movlw	0
  7792  0009AC  6E20               	movwf	___flmul@a^0,c
  7793  0009AE  0E00               	movlw	0
  7794  0009B0  6E21               	movwf	(___flmul@a+1)^0,c
  7795  0009B2  0E20               	movlw	32
  7796  0009B4  6E22               	movwf	(___flmul@a+2)^0,c
  7797  0009B6  0E41               	movlw	65
  7798  0009B8  6E23               	movwf	(___flmul@a+3)^0,c
  7799  0009BA  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  7800  0009BE  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  7801  0009C2  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  7802  0009C6  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  7803  0009CA  ECBF  F017         	call	___flmul	;wreg free
  7804  0009CE  C01C  F039         	movff	?___flmul,___flge@ff2
  7805  0009D2  C01D  F03A         	movff	?___flmul+1,___flge@ff2+1
  7806  0009D6  C01E  F03B         	movff	?___flmul+2,___flge@ff2+2
  7807  0009DA  C01F  F03C         	movff	?___flmul+3,___flge@ff2+3
  7808  0009DE  EC5E  F025         	call	___flge	;wreg free
  7809  0009E2  B0D8               	btfsc	status,0,c
  7810  0009E4  EFF6  F004         	goto	u5801
  7811  0009E8  EFF8  F004         	goto	u5800
  7812  0009EC                     u5801:
  7813  0009EC  EFB0  F004         	goto	l4907
  7814  0009F0                     u5800:
  7815  0009F0  EF18  F005         	goto	l4917
  7816  0009F4                     l4913:
  7817                           
  7818                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             
      +                          u = u/10.0;
  7819  0009F4  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  7820  0009F8  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  7821  0009FC  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  7822  000A00  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  7823  000A04  0E00               	movlw	0
  7824  000A06  6E39               	movwf	___fldiv@a^0,c
  7825  000A08  0E00               	movlw	0
  7826  000A0A  6E3A               	movwf	(___fldiv@a+1)^0,c
  7827  000A0C  0E20               	movlw	32
  7828  000A0E  6E3B               	movwf	(___fldiv@a+2)^0,c
  7829  000A10  0E41               	movlw	65
  7830  000A12  6E3C               	movwf	(___fldiv@a+3)^0,c
  7831  000A14  ECD4  F019         	call	___fldiv	;wreg free
  7832  000A18  C035  F0A3         	movff	?___fldiv,efgtoa@u
  7833  000A1C  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  7834  000A20  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  7835  000A24  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  7836  000A28                     
  7837                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             
      +                          --e;
  7838  000A28  0100               	movlb	0	; () banked
  7839  000A2A  079F               	decf	efgtoa@e& (0+255),f,b
  7840  000A2C  A0D8               	btfss	status,0,c
  7841  000A2E  07A0               	decf	(efgtoa@e+1)& (0+255),f,b
  7842  000A30                     l4917:
  7843                           
  7844                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         whil
      +                          e (g < u) {
  7845  000A30  C09B  F035         	movff	efgtoa@g,___flge@ff1
  7846  000A34  C09C  F036         	movff	efgtoa@g+1,___flge@ff1+1
  7847  000A38  C09D  F037         	movff	efgtoa@g+2,___flge@ff1+2
  7848  000A3C  C09E  F038         	movff	efgtoa@g+3,___flge@ff1+3
  7849  000A40  C0A3  F039         	movff	efgtoa@u,___flge@ff2
  7850  000A44  C0A4  F03A         	movff	efgtoa@u+1,___flge@ff2+1
  7851  000A48  C0A5  F03B         	movff	efgtoa@u+2,___flge@ff2+2
  7852  000A4C  C0A6  F03C         	movff	efgtoa@u+3,___flge@ff2+3
  7853  000A50  EC5E  F025         	call	___flge	;wreg free
  7854  000A54  A0D8               	btfss	status,0,c
  7855  000A56  EF2F  F005         	goto	u5811
  7856  000A5A  EF31  F005         	goto	u5810
  7857  000A5E                     u5811:
  7858  000A5E  EFFA  F004         	goto	l4913
  7859  000A62                     u5810:
  7860  000A62                     l4919:
  7861                           
  7862                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = t
      +                          olower((int)c);
  7863  000A62  C05E  F007         	movff	efgtoa@c,tolower@c
  7864  000A66  6A08               	clrf	(tolower@c+1)^0,c
  7865  000A68  EC48  F02B         	call	_tolower	;wreg free
  7866  000A6C  5007               	movf	?_tolower^0,w,c
  7867  000A6E  0100               	movlb	0	; () banked
  7868  000A70  6F90               	movwf	efgtoa@mode& (0+255),b
  7869  000A72                     
  7870                           ; BSR set to: 0
  7871                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = 
      +                          mode;
  7872  000A72  C090  F08D         	movff	efgtoa@mode,efgtoa@nmode
  7873  000A76                     
  7874                           ; BSR set to: 0
  7875                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode
      +                           == 'g') {
  7876  000A76  0E67               	movlw	103
  7877  000A78  1990               	xorwf	efgtoa@mode& (0+255),w,b
  7878  000A7A  A4D8               	btfss	status,2,c
  7879  000A7C  EF42  F005         	goto	u5821
  7880  000A80  EF44  F005         	goto	u5820
  7881  000A84                     u5821:
  7882  000A84  EF6C  F005         	goto	l4933
  7883  000A88                     u5820:
  7884  000A88                     
  7885                           ; BSR set to: 0
  7886                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec =
      +                          = 0) {
  7887  000A88  0101               	movlb	1	; () banked
  7888  000A8A  5196               	movf	_prec& (0+255),w,b
  7889  000A8C  1197               	iorwf	(_prec+1)& (0+255),w,b
  7890  000A8E  A4D8               	btfss	status,2,c
  7891  000A90  EF4C  F005         	goto	u5831
  7892  000A94  EF4E  F005         	goto	u5830
  7893  000A98                     u5831:
  7894  000A98  EF52  F005         	goto	l4929
  7895  000A9C                     u5830:
  7896  000A9C                     
  7897                           ; BSR set to: 1
  7898                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  7899  000A9C  0E00               	movlw	0
  7900  000A9E  6F97               	movwf	(_prec+1)& (0+255),b
  7901  000AA0  0E01               	movlw	1
  7902  000AA2  6F96               	movwf	_prec& (0+255),b
  7903  000AA4                     l4929:
  7904                           
  7905                           ; BSR set to: 1
  7906                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = 
      +                          (0 < prec) ? prec : 6;
  7907  000AA4  BF97               	btfsc	(_prec+1)& (0+255),7,b
  7908  000AA6  EF5F  F005         	goto	u5840
  7909  000AAA  5197               	movf	(_prec+1)& (0+255),w,b
  7910  000AAC  E106               	bnz	u5841
  7911  000AAE  0596               	decf	_prec& (0+255),w,b
  7912  000AB0  B0D8               	btfsc	status,0,c
  7913  000AB2  EF5D  F005         	goto	u5841
  7914  000AB6  EF5F  F005         	goto	u5840
  7915  000ABA                     u5841:
  7916  000ABA  EF66  F005         	goto	l1281
  7917  000ABE                     u5840:
  7918  000ABE                     l4931:
  7919                           
  7920                           ; BSR set to: 1
  7921  000ABE  0E00               	movlw	0
  7922  000AC0  0100               	movlb	0	; () banked
  7923  000AC2  6F8C               	movwf	(efgtoa@p+1)& (0+255),b
  7924  000AC4  0E06               	movlw	6
  7925  000AC6  6F8B               	movwf	efgtoa@p& (0+255),b
  7926  000AC8  EF76  F005         	goto	l4939
  7927  000ACC                     l1281:
  7928                           
  7929                           ; BSR set to: 1
  7930  000ACC  C196  F08B         	movff	_prec,efgtoa@p
  7931  000AD0  C197  F08C         	movff	_prec+1,efgtoa@p+1
  7932  000AD4  EF76  F005         	goto	l4939
  7933  000AD8                     l4933:
  7934                           
  7935                           ; BSR set to: 0
  7936                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = 
      +                          (prec < 0) ? 6 : prec;
  7937  000AD8  0101               	movlb	1	; () banked
  7938  000ADA  BF97               	btfsc	(_prec+1)& (0+255),7,b
  7939  000ADC  EF72  F005         	goto	u5851
  7940  000AE0  EF74  F005         	goto	u5850
  7941  000AE4                     u5851:
  7942  000AE4  EF5F  F005         	goto	l4931
  7943  000AE8                     u5850:
  7944  000AE8  EF66  F005         	goto	l1281
  7945  000AEC                     l4939:
  7946                           
  7947                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode
      +                           == 'g') {
  7948  000AEC  0E67               	movlw	103
  7949  000AEE  0100               	movlb	0	; () banked
  7950  000AF0  1990               	xorwf	efgtoa@mode& (0+255),w,b
  7951  000AF2  A4D8               	btfss	status,2,c
  7952  000AF4  EF7E  F005         	goto	u5861
  7953  000AF8  EF80  F005         	goto	u5860
  7954  000AFC                     u5861:
  7955  000AFC  EFAF  F005         	goto	l4949
  7956  000B00                     u5860:
  7957  000B00                     
  7958                           ; BSR set to: 0
  7959                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  7960  000B00  AFA0               	btfss	(efgtoa@e+1)& (0+255),7,b
  7961  000B02  EF8E  F005         	goto	u5870
  7962  000B06  0EFC               	movlw	252
  7963  000B08  5D9F               	subwf	efgtoa@e& (0+255),w,b
  7964  000B0A  0EFF               	movlw	255
  7965  000B0C  59A0               	subwfb	(efgtoa@e+1)& (0+255),w,b
  7966  000B0E  A0D8               	btfss	status,0,c
  7967  000B10  EF8C  F005         	goto	u5871
  7968  000B14  EF8E  F005         	goto	u5870
  7969  000B18                     u5871:
  7970  000B18  EFAD  F005         	goto	l4947
  7971  000B1C                     u5870:
  7972  000B1C                     
  7973                           ; BSR set to: 0
  7974  000B1C  0EFF               	movlw	255
  7975  000B1E  6F6A               	movwf	??_efgtoa& (0+255),b
  7976  000B20  0EFF               	movlw	255
  7977  000B22  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  7978  000B24  C08B  F06C         	movff	efgtoa@p,??_efgtoa+2
  7979  000B28  C08C  F06D         	movff	efgtoa@p+1,??_efgtoa+3
  7980  000B2C  516A               	movf	??_efgtoa& (0+255),w,b
  7981  000B2E  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  7982  000B30  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  7983  000B32  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7984  000B34  519F               	movf	efgtoa@e& (0+255),w,b
  7985  000B36  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  7986  000B38  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  7987  000B3A  0A80               	xorlw	128
  7988  000B3C  6F6E               	movwf	(??_efgtoa+4)& (0+255),b
  7989  000B3E  51A0               	movf	(efgtoa@e+1)& (0+255),w,b
  7990  000B40  0A80               	xorlw	128
  7991  000B42  596E               	subwfb	(??_efgtoa+4)& (0+255),w,b
  7992  000B44  A0D8               	btfss	status,0,c
  7993  000B46  EFA7  F005         	goto	u5881
  7994  000B4A  EFA9  F005         	goto	u5880
  7995  000B4E                     u5881:
  7996  000B4E  EFAD  F005         	goto	l4947
  7997  000B52                     u5880:
  7998  000B52                     
  7999                           ; BSR set to: 0
  8000                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             
      +                          nmode = 'f';
  8001  000B52  0E66               	movlw	102
  8002  000B54  6F8D               	movwf	efgtoa@nmode& (0+255),b
  8003                           
  8004                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } el
      +                          se {
  8005  000B56  EFAF  F005         	goto	l4949
  8006  000B5A                     l4947:
  8007                           
  8008                           ; BSR set to: 0
  8009                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             
      +                          nmode = 'e';
  8010  000B5A  0E65               	movlw	101
  8011  000B5C  6F8D               	movwf	efgtoa@nmode& (0+255),b
  8012  000B5E                     l4949:
  8013                           
  8014                           ; BSR set to: 0
  8015                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  8016  000B5E  C08B  F083         	movff	efgtoa@p,efgtoa@m
  8017  000B62  C08C  F084         	movff	efgtoa@p+1,efgtoa@m+1
  8018  000B66                     
  8019                           ; BSR set to: 0
  8020                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  8021  000B66  0E67               	movlw	103
  8022  000B68  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8023  000B6A  A4D8               	btfss	status,2,c
  8024  000B6C  EFBA  F005         	goto	u5891
  8025  000B70  EFBC  F005         	goto	u5890
  8026  000B74                     u5891:
  8027  000B74  EFCC  F005         	goto	l4957
  8028  000B78                     u5890:
  8029  000B78                     
  8030                           ; BSR set to: 0
  8031  000B78  0E66               	movlw	102
  8032  000B7A  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8033  000B7C  A4D8               	btfss	status,2,c
  8034  000B7E  EFC3  F005         	goto	u5901
  8035  000B82  EFC5  F005         	goto	u5900
  8036  000B86                     u5901:
  8037  000B86  EFCE  F005         	goto	l4959
  8038  000B8A                     u5900:
  8039  000B8A                     
  8040                           ; BSR set to: 0
  8041  000B8A  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8042  000B8C  EFCC  F005         	goto	u5910
  8043  000B90  EFCA  F005         	goto	u5911
  8044  000B94                     u5911:
  8045  000B94  EFCE  F005         	goto	l4959
  8046  000B98                     u5910:
  8047  000B98                     l4957:
  8048                           
  8049                           ; BSR set to: 0
  8050                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  8051  000B98  4B83               	infsnz	efgtoa@m& (0+255),f,b
  8052  000B9A  2B84               	incf	(efgtoa@m+1)& (0+255),f,b
  8053  000B9C                     l4959:
  8054                           
  8055                           ; BSR set to: 0
  8056                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmod
      +                          e == 'f') {
  8057  000B9C  0E66               	movlw	102
  8058  000B9E  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8059  000BA0  A4D8               	btfss	status,2,c
  8060  000BA2  EFD5  F005         	goto	u5921
  8061  000BA6  EFD7  F005         	goto	u5920
  8062  000BAA                     u5921:
  8063  000BAA  EFF7  F005         	goto	l4969
  8064  000BAE                     u5920:
  8065  000BAE                     
  8066                           ; BSR set to: 0
  8067                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (
      +                          e < 0) {
  8068  000BAE  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8069  000BB0  EFDE  F005         	goto	u5930
  8070  000BB4  EFDC  F005         	goto	u5931
  8071  000BB8                     u5931:
  8072  000BB8  EFEA  F005         	goto	l4965
  8073  000BBC                     u5930:
  8074  000BBC                     
  8075                           ; BSR set to: 0
  8076                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             
      +                          u = 1.0;
  8077  000BBC  0E00               	movlw	0
  8078  000BBE  6FA3               	movwf	efgtoa@u& (0+255),b
  8079  000BC0  0E00               	movlw	0
  8080  000BC2  6FA4               	movwf	(efgtoa@u+1)& (0+255),b
  8081  000BC4  0E80               	movlw	128
  8082  000BC6  6FA5               	movwf	(efgtoa@u+2)& (0+255),b
  8083  000BC8  0E3F               	movlw	63
  8084  000BCA  6FA6               	movwf	(efgtoa@u+3)& (0+255),b
  8085                           
  8086                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             
      +                          e = 0;
  8087  000BCC  0E00               	movlw	0
  8088  000BCE  6FA0               	movwf	(efgtoa@e+1)& (0+255),b
  8089  000BD0  0E00               	movlw	0
  8090  000BD2  6F9F               	movwf	efgtoa@e& (0+255),b
  8091  000BD4                     l4965:
  8092                           
  8093                           ; BSR set to: 0
  8094                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (
      +                          !(mode == 'g')) {
  8095  000BD4  0E67               	movlw	103
  8096  000BD6  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8097  000BD8  B4D8               	btfsc	status,2,c
  8098  000BDA  EFF1  F005         	goto	u5941
  8099  000BDE  EFF3  F005         	goto	u5940
  8100  000BE2                     u5941:
  8101  000BE2  EFF7  F005         	goto	l4969
  8102  000BE6                     u5940:
  8103  000BE6                     
  8104                           ; BSR set to: 0
  8105                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             
      +                          m += e;
  8106  000BE6  519F               	movf	efgtoa@e& (0+255),w,b
  8107  000BE8  2783               	addwf	efgtoa@m& (0+255),f,b
  8108  000BEA  51A0               	movf	(efgtoa@e+1)& (0+255),w,b
  8109  000BEC  2384               	addwfc	(efgtoa@m+1)& (0+255),f,b
  8110  000BEE                     l4969:
  8111                           
  8112                           ; BSR set to: 0
  8113                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  8114  000BEE  0E00               	movlw	0
  8115  000BF0  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  8116  000BF2  0E00               	movlw	0
  8117  000BF4  6F99               	movwf	efgtoa@i& (0+255),b
  8118  000BF6                     
  8119                           ; BSR set to: 0
  8120                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  8121  000BF6  C09B  F091         	movff	efgtoa@g,efgtoa@h
  8122  000BFA  C09C  F092         	movff	efgtoa@g+1,efgtoa@h+1
  8123  000BFE  C09D  F093         	movff	efgtoa@g+2,efgtoa@h+2
  8124  000C02  C09E  F094         	movff	efgtoa@g+3,efgtoa@h+3
  8125  000C06                     
  8126                           ; BSR set to: 0
  8127                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  8128  000C06  C0A3  F06F         	movff	efgtoa@u,efgtoa@ou
  8129  000C0A  C0A4  F070         	movff	efgtoa@u+1,efgtoa@ou+1
  8130  000C0E  C0A5  F071         	movff	efgtoa@u+2,efgtoa@ou+2
  8131  000C12  C0A6  F072         	movff	efgtoa@u+3,efgtoa@ou+3
  8132                           
  8133                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  8134  000C16  EF88  F006         	goto	l4983
  8135  000C1A                     l4975:
  8136                           
  8137                           ; BSR set to: 0
  8138                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = 
      +                          floorf(h/u);
  8139  000C1A  C091  F035         	movff	efgtoa@h,___fldiv@b
  8140  000C1E  C092  F036         	movff	efgtoa@h+1,___fldiv@b+1
  8141  000C22  C093  F037         	movff	efgtoa@h+2,___fldiv@b+2
  8142  000C26  C094  F038         	movff	efgtoa@h+3,___fldiv@b+3
  8143  000C2A  C0A3  F039         	movff	efgtoa@u,___fldiv@a
  8144  000C2E  C0A4  F03A         	movff	efgtoa@u+1,___fldiv@a+1
  8145  000C32  C0A5  F03B         	movff	efgtoa@u+2,___fldiv@a+2
  8146  000C36  C0A6  F03C         	movff	efgtoa@u+3,___fldiv@a+3
  8147  000C3A  ECD4  F019         	call	___fldiv	;wreg free
  8148  000C3E  C035  F04E         	movff	?___fldiv,floorf@x
  8149  000C42  C036  F04F         	movff	?___fldiv+1,floorf@x+1
  8150  000C46  C037  F050         	movff	?___fldiv+2,floorf@x+2
  8151  000C4A  C038  F051         	movff	?___fldiv+3,floorf@x+3
  8152  000C4E  EC85  F01E         	call	_floorf	;wreg free
  8153  000C52  C04E  F095         	movff	?_floorf,efgtoa@l
  8154  000C56  C04F  F096         	movff	?_floorf+1,efgtoa@l+1
  8155  000C5A  C050  F097         	movff	?_floorf+2,efgtoa@l+2
  8156  000C5E  C051  F098         	movff	?_floorf+3,efgtoa@l+3
  8157                           
  8158                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = 
      +                          (int)l;
  8159  000C62  C095  F04E         	movff	efgtoa@l,___fltol@f1
  8160  000C66  C096  F04F         	movff	efgtoa@l+1,___fltol@f1+1
  8161  000C6A  C097  F050         	movff	efgtoa@l+2,___fltol@f1+2
  8162  000C6E  C098  F051         	movff	efgtoa@l+3,___fltol@f1+3
  8163  000C72  ECDB  F024         	call	___fltol	;wreg free
  8164  000C76  C04E  F087         	movff	?___fltol,efgtoa@d
  8165  000C7A  C04F  F088         	movff	?___fltol+1,efgtoa@d+1
  8166  000C7E                     
  8167                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -=
      +                           l*u;
  8168  000C7E  C091  F045         	movff	efgtoa@h,___flsub@b
  8169  000C82  C092  F046         	movff	efgtoa@h+1,___flsub@b+1
  8170  000C86  C093  F047         	movff	efgtoa@h+2,___flsub@b+2
  8171  000C8A  C094  F048         	movff	efgtoa@h+3,___flsub@b+3
  8172  000C8E  C0A3  F020         	movff	efgtoa@u,___flmul@a
  8173  000C92  C0A4  F021         	movff	efgtoa@u+1,___flmul@a+1
  8174  000C96  C0A5  F022         	movff	efgtoa@u+2,___flmul@a+2
  8175  000C9A  C0A6  F023         	movff	efgtoa@u+3,___flmul@a+3
  8176  000C9E  C095  F01C         	movff	efgtoa@l,___flmul@b
  8177  000CA2  C096  F01D         	movff	efgtoa@l+1,___flmul@b+1
  8178  000CA6  C097  F01E         	movff	efgtoa@l+2,___flmul@b+2
  8179  000CAA  C098  F01F         	movff	efgtoa@l+3,___flmul@b+3
  8180  000CAE  ECBF  F017         	call	___flmul	;wreg free
  8181  000CB2  C01C  F049         	movff	?___flmul,___flsub@a
  8182  000CB6  C01D  F04A         	movff	?___flmul+1,___flsub@a+1
  8183  000CBA  C01E  F04B         	movff	?___flmul+2,___flsub@a+2
  8184  000CBE  C01F  F04C         	movff	?___flmul+3,___flsub@a+3
  8185  000CC2  EC4F  F02C         	call	___flsub	;wreg free
  8186  000CC6  C045  F091         	movff	?___flsub,efgtoa@h
  8187  000CCA  C046  F092         	movff	?___flsub+1,efgtoa@h+1
  8188  000CCE  C047  F093         	movff	?___flsub+2,efgtoa@h+2
  8189  000CD2  C048  F094         	movff	?___flsub+3,efgtoa@h+3
  8190  000CD6                     
  8191                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = 
      +                          u/10.0;
  8192  000CD6  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  8193  000CDA  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  8194  000CDE  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  8195  000CE2  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  8196  000CE6  0E00               	movlw	0
  8197  000CE8  6E39               	movwf	___fldiv@a^0,c
  8198  000CEA  0E00               	movlw	0
  8199  000CEC  6E3A               	movwf	(___fldiv@a+1)^0,c
  8200  000CEE  0E20               	movlw	32
  8201  000CF0  6E3B               	movwf	(___fldiv@a+2)^0,c
  8202  000CF2  0E41               	movlw	65
  8203  000CF4  6E3C               	movwf	(___fldiv@a+3)^0,c
  8204  000CF6  ECD4  F019         	call	___fldiv	;wreg free
  8205  000CFA  C035  F0A3         	movff	?___fldiv,efgtoa@u
  8206  000CFE  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  8207  000D02  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  8208  000D06  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  8209  000D0A                     
  8210                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  8211  000D0A  0100               	movlb	0	; () banked
  8212  000D0C  4B99               	infsnz	efgtoa@i& (0+255),f,b
  8213  000D0E  2B9A               	incf	(efgtoa@i+1)& (0+255),f,b
  8214  000D10                     l4983:
  8215                           
  8216                           ; BSR set to: 0
  8217                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  8218  000D10  5183               	movf	efgtoa@m& (0+255),w,b
  8219  000D12  5D99               	subwf	efgtoa@i& (0+255),w,b
  8220  000D14  519A               	movf	(efgtoa@i+1)& (0+255),w,b
  8221  000D16  0A80               	xorlw	128
  8222  000D18  6F6A               	movwf	??_efgtoa& (0+255),b
  8223  000D1A  5184               	movf	(efgtoa@m+1)& (0+255),w,b
  8224  000D1C  0A80               	xorlw	128
  8225  000D1E  596A               	subwfb	??_efgtoa& (0+255),w,b
  8226  000D20  A0D8               	btfss	status,0,c
  8227  000D22  EF95  F006         	goto	u5951
  8228  000D26  EF97  F006         	goto	u5950
  8229  000D2A                     u5951:
  8230  000D2A  EF0D  F006         	goto	l4975
  8231  000D2E                     u5950:
  8232  000D2E                     
  8233                           ; BSR set to: 0
  8234                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.
      +                          0;
  8235  000D2E  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  8236  000D32  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  8237  000D36  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  8238  000D3A  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  8239  000D3E  0E00               	movlw	0
  8240  000D40  6E20               	movwf	___flmul@a^0,c
  8241  000D42  0E00               	movlw	0
  8242  000D44  6E21               	movwf	(___flmul@a+1)^0,c
  8243  000D46  0EA0               	movlw	160
  8244  000D48  6E22               	movwf	(___flmul@a+2)^0,c
  8245  000D4A  0E40               	movlw	64
  8246  000D4C  6E23               	movwf	(___flmul@a+3)^0,c
  8247  000D4E  ECBF  F017         	call	___flmul	;wreg free
  8248  000D52  C01C  F095         	movff	?___flmul,efgtoa@l
  8249  000D56  C01D  F096         	movff	?___flmul+1,efgtoa@l+1
  8250  000D5A  C01E  F097         	movff	?___flmul+2,efgtoa@l+2
  8251  000D5E  C01F  F098         	movff	?___flmul+3,efgtoa@l+3
  8252  000D62                     
  8253                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < 
      +                          l) {
  8254  000D62  C091  F035         	movff	efgtoa@h,___flge@ff1
  8255  000D66  C092  F036         	movff	efgtoa@h+1,___flge@ff1+1
  8256  000D6A  C093  F037         	movff	efgtoa@h+2,___flge@ff1+2
  8257  000D6E  C094  F038         	movff	efgtoa@h+3,___flge@ff1+3
  8258  000D72  C095  F039         	movff	efgtoa@l,___flge@ff2
  8259  000D76  C096  F03A         	movff	efgtoa@l+1,___flge@ff2+1
  8260  000D7A  C097  F03B         	movff	efgtoa@l+2,___flge@ff2+2
  8261  000D7E  C098  F03C         	movff	efgtoa@l+3,___flge@ff2+3
  8262  000D82  EC5E  F025         	call	___flge	;wreg free
  8263  000D86  B0D8               	btfsc	status,0,c
  8264  000D88  EFC8  F006         	goto	u5961
  8265  000D8C  EFCA  F006         	goto	u5960
  8266  000D90                     u5961:
  8267  000D90  EFD5  F006         	goto	l4991
  8268  000D94                     u5960:
  8269  000D94                     
  8270                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 
      +                          0.0;
  8271  000D94  0E00               	movlw	0
  8272  000D96  0100               	movlb	0	; () banked
  8273  000D98  6F95               	movwf	efgtoa@l& (0+255),b
  8274  000D9A  0E00               	movlw	0
  8275  000D9C  6F96               	movwf	(efgtoa@l+1)& (0+255),b
  8276  000D9E  0E00               	movlw	0
  8277  000DA0  6F97               	movwf	(efgtoa@l+2)& (0+255),b
  8278  000DA2  0E00               	movlw	0
  8279  000DA4  6F98               	movwf	(efgtoa@l+3)& (0+255),b
  8280                           
  8281                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  8282  000DA6  EFFE  F006         	goto	l4997
  8283  000DAA                     l4991:
  8284                           
  8285                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if (
      +                          (h == l) && !(d % 2)) {
  8286  000DAA  C091  F001         	movff	efgtoa@h,___fleq@ff1
  8287  000DAE  C092  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  8288  000DB2  C093  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  8289  000DB6  C094  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  8290  000DBA  C095  F005         	movff	efgtoa@l,___fleq@ff2
  8291  000DBE  C096  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  8292  000DC2  C097  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  8293  000DC6  C098  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  8294  000DCA  ECC9  F028         	call	___fleq	;wreg free
  8295  000DCE  A0D8               	btfss	status,0,c
  8296  000DD0  EFEC  F006         	goto	u5971
  8297  000DD4  EFEE  F006         	goto	u5970
  8298  000DD8                     u5971:
  8299  000DD8  EFFE  F006         	goto	l4997
  8300  000DDC                     u5970:
  8301  000DDC  0100               	movlb	0	; () banked
  8302  000DDE  B187               	btfsc	efgtoa@d& (0+255),0,b
  8303  000DE0  EFF4  F006         	goto	u5981
  8304  000DE4  EFF6  F006         	goto	u5980
  8305  000DE8                     u5981:
  8306  000DE8  EFFE  F006         	goto	l4997
  8307  000DEC                     u5980:
  8308  000DEC                     
  8309                           ; BSR set to: 0
  8310                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             
      +                          l = 0.0;
  8311  000DEC  0E00               	movlw	0
  8312  000DEE  6F95               	movwf	efgtoa@l& (0+255),b
  8313  000DF0  0E00               	movlw	0
  8314  000DF2  6F96               	movwf	(efgtoa@l+1)& (0+255),b
  8315  000DF4  0E00               	movlw	0
  8316  000DF6  6F97               	movwf	(efgtoa@l+2)& (0+255),b
  8317  000DF8  0E00               	movlw	0
  8318  000DFA  6F98               	movwf	(efgtoa@l+3)& (0+255),b
  8319  000DFC                     l4997:
  8320                           
  8321                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + 
      +                          l;
  8322  000DFC  C09B  F035         	movff	efgtoa@g,___fladd@b
  8323  000E00  C09C  F036         	movff	efgtoa@g+1,___fladd@b+1
  8324  000E04  C09D  F037         	movff	efgtoa@g+2,___fladd@b+2
  8325  000E08  C09E  F038         	movff	efgtoa@g+3,___fladd@b+3
  8326  000E0C  C095  F039         	movff	efgtoa@l,___fladd@a
  8327  000E10  C096  F03A         	movff	efgtoa@l+1,___fladd@a+1
  8328  000E14  C097  F03B         	movff	efgtoa@l+2,___fladd@a+2
  8329  000E18  C098  F03C         	movff	efgtoa@l+3,___fladd@a+3
  8330  000E1C  EC5F  F015         	call	___fladd	;wreg free
  8331  000E20  C035  F091         	movff	?___fladd,efgtoa@h
  8332  000E24  C036  F092         	movff	?___fladd+1,efgtoa@h+1
  8333  000E28  C037  F093         	movff	?___fladd+2,efgtoa@h+2
  8334  000E2C  C038  F094         	movff	?___fladd+3,efgtoa@h+3
  8335  000E30                     
  8336                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  8337  000E30  C06F  F0A3         	movff	efgtoa@ou,efgtoa@u
  8338  000E34  C070  F0A4         	movff	efgtoa@ou+1,efgtoa@u+1
  8339  000E38  C071  F0A5         	movff	efgtoa@ou+2,efgtoa@u+2
  8340  000E3C  C072  F0A6         	movff	efgtoa@ou+3,efgtoa@u+3
  8341  000E40                     
  8342                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  8343  000E40  0E65               	movlw	101
  8344  000E42  0100               	movlb	0	; () banked
  8345  000E44  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8346  000E46  B4D8               	btfsc	status,2,c
  8347  000E48  EF28  F007         	goto	u5991
  8348  000E4C  EF2A  F007         	goto	u5990
  8349  000E50                     u5991:
  8350  000E50  EF30  F007         	goto	l5005
  8351  000E54                     u5990:
  8352  000E54                     
  8353                           ; BSR set to: 0
  8354  000E54  C09F  F085         	movff	efgtoa@e,efgtoa@ne
  8355  000E58  C0A0  F086         	movff	efgtoa@e+1,efgtoa@ne+1
  8356  000E5C  EF34  F007         	goto	l1307
  8357  000E60                     l5005:
  8358                           
  8359                           ; BSR set to: 0
  8360  000E60  0E00               	movlw	0
  8361  000E62  6F86               	movwf	(efgtoa@ne+1)& (0+255),b
  8362  000E64  0E00               	movlw	0
  8363  000E66  6F85               	movwf	efgtoa@ne& (0+255),b
  8364  000E68                     l1307:
  8365                           
  8366                           ; BSR set to: 0
  8367                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  8368  000E68  0E00               	movlw	0
  8369  000E6A  6F82               	movwf	(efgtoa@pp+1)& (0+255),b
  8370  000E6C  0E00               	movlw	0
  8371  000E6E  6F81               	movwf	efgtoa@pp& (0+255),b
  8372                           
  8373                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  8374  000E70  0E00               	movlw	0
  8375  000E72  6F80               	movwf	(efgtoa@t+1)& (0+255),b
  8376  000E74  0E00               	movlw	0
  8377  000E76  6F7F               	movwf	efgtoa@t& (0+255),b
  8378                           
  8379                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  8380  000E78  0E00               	movlw	0
  8381  000E7A  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  8382  000E7C  0E00               	movlw	0
  8383  000E7E  6F99               	movwf	efgtoa@i& (0+255),b
  8384                           
  8385                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  8386  000E80  EF31  F008         	goto	l5055
  8387  000E84                     l5007:
  8388                           
  8389                           ; BSR set to: 0
  8390                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = 
      +                          floorf(h/u);
  8391  000E84  C091  F035         	movff	efgtoa@h,___fldiv@b
  8392  000E88  C092  F036         	movff	efgtoa@h+1,___fldiv@b+1
  8393  000E8C  C093  F037         	movff	efgtoa@h+2,___fldiv@b+2
  8394  000E90  C094  F038         	movff	efgtoa@h+3,___fldiv@b+3
  8395  000E94  C0A3  F039         	movff	efgtoa@u,___fldiv@a
  8396  000E98  C0A4  F03A         	movff	efgtoa@u+1,___fldiv@a+1
  8397  000E9C  C0A5  F03B         	movff	efgtoa@u+2,___fldiv@a+2
  8398  000EA0  C0A6  F03C         	movff	efgtoa@u+3,___fldiv@a+3
  8399  000EA4  ECD4  F019         	call	___fldiv	;wreg free
  8400  000EA8  C035  F04E         	movff	?___fldiv,floorf@x
  8401  000EAC  C036  F04F         	movff	?___fldiv+1,floorf@x+1
  8402  000EB0  C037  F050         	movff	?___fldiv+2,floorf@x+2
  8403  000EB4  C038  F051         	movff	?___fldiv+3,floorf@x+3
  8404  000EB8  EC85  F01E         	call	_floorf	;wreg free
  8405  000EBC  C04E  F095         	movff	?_floorf,efgtoa@l
  8406  000EC0  C04F  F096         	movff	?_floorf+1,efgtoa@l+1
  8407  000EC4  C050  F097         	movff	?_floorf+2,efgtoa@l+2
  8408  000EC8  C051  F098         	movff	?_floorf+3,efgtoa@l+3
  8409                           
  8410                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = 
      +                          (int)l;
  8411  000ECC  C095  F04E         	movff	efgtoa@l,___fltol@f1
  8412  000ED0  C096  F04F         	movff	efgtoa@l+1,___fltol@f1+1
  8413  000ED4  C097  F050         	movff	efgtoa@l+2,___fltol@f1+2
  8414  000ED8  C098  F051         	movff	efgtoa@l+3,___fltol@f1+3
  8415  000EDC  ECDB  F024         	call	___fltol	;wreg free
  8416  000EE0  C04E  F087         	movff	?___fltol,efgtoa@d
  8417  000EE4  C04F  F088         	movff	?___fltol+1,efgtoa@d+1
  8418  000EE8                     
  8419                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  8420  000EE8  0101               	movlb	1	; () banked
  8421  000EEA  B998               	btfsc	_flags& (0+255),4,b
  8422  000EEC  EF7A  F007         	goto	u6001
  8423  000EF0  EF7C  F007         	goto	u6000
  8424  000EF4                     u6001:
  8425  000EF4  EF9A  F007         	goto	l5019
  8426  000EF8                     u6000:
  8427  000EF8                     
  8428                           ; BSR set to: 1
  8429  000EF8  0100               	movlb	0	; () banked
  8430  000EFA  5187               	movf	efgtoa@d& (0+255),w,b
  8431  000EFC  1188               	iorwf	(efgtoa@d+1)& (0+255),w,b
  8432  000EFE  A4D8               	btfss	status,2,c
  8433  000F00  EF84  F007         	goto	u6011
  8434  000F04  EF86  F007         	goto	u6010
  8435  000F08                     u6011:
  8436  000F08  EF9A  F007         	goto	l5019
  8437  000F0C                     u6010:
  8438  000F0C                     
  8439                           ; BSR set to: 0
  8440  000F0C  0E67               	movlw	103
  8441  000F0E  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8442  000F10  A4D8               	btfss	status,2,c
  8443  000F12  EF8D  F007         	goto	u6021
  8444  000F16  EF8F  F007         	goto	u6020
  8445  000F1A                     u6021:
  8446  000F1A  EF9A  F007         	goto	l5019
  8447  000F1E                     u6020:
  8448  000F1E                     
  8449                           ; BSR set to: 0
  8450  000F1E  BF86               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  8451  000F20  EF96  F007         	goto	u6030
  8452  000F24  EF94  F007         	goto	u6031
  8453  000F28                     u6031:
  8454  000F28  EF9A  F007         	goto	l5019
  8455  000F2C                     u6030:
  8456  000F2C                     
  8457                           ; BSR set to: 0
  8458                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             
      +                          ++t;
  8459  000F2C  4B7F               	infsnz	efgtoa@t& (0+255),f,b
  8460  000F2E  2B80               	incf	(efgtoa@t+1)& (0+255),f,b
  8461                           
  8462                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } el
      +                          se {
  8463  000F30  EFE5  F007         	goto	l5047
  8464  000F34                     l5019:
  8465                           
  8466                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             
      +                          if (!pp && (ne < 0)) {
  8467  000F34  0100               	movlb	0	; () banked
  8468  000F36  5181               	movf	efgtoa@pp& (0+255),w,b
  8469  000F38  1182               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  8470  000F3A  A4D8               	btfss	status,2,c
  8471  000F3C  EFA2  F007         	goto	u6041
  8472  000F40  EFA4  F007         	goto	u6040
  8473  000F44                     u6041:
  8474  000F44  EFCE  F007         	goto	l5039
  8475  000F48                     u6040:
  8476  000F48                     
  8477                           ; BSR set to: 0
  8478  000F48  BF86               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  8479  000F4A  EFAB  F007         	goto	u6050
  8480  000F4E  EFA9  F007         	goto	u6051
  8481  000F52                     u6051:
  8482  000F52  EFCE  F007         	goto	l5039
  8483  000F56                     u6050:
  8484  000F56                     
  8485                           ; BSR set to: 0
  8486                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:             
      +                              dbuf[n++] = '.';
  8487  000F56  0E9F               	movlw	low _dbuf
  8488  000F58  25A1               	addwf	efgtoa@n& (0+255),w,b
  8489  000F5A  6ED9               	movwf	fsr2l,c
  8490  000F5C  0E01               	movlw	high _dbuf
  8491  000F5E  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8492  000F60  6EDA               	movwf	fsr2h,c
  8493  000F62  0E2E               	movlw	46
  8494  000F64  6EDF               	movwf	indf2,c
  8495  000F66                     
  8496                           ; BSR set to: 0
  8497  000F66  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8498  000F68  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8499  000F6A                     
  8500                           ; BSR set to: 0
  8501                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:             
      +                              --w;
  8502  000F6A  078E               	decf	efgtoa@w& (0+255),f,b
  8503  000F6C  A0D8               	btfss	status,0,c
  8504  000F6E  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8505  000F70                     
  8506                           ; BSR set to: 0
  8507                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:             
      +                              pp = 1;
  8508  000F70  0E00               	movlw	0
  8509  000F72  6F82               	movwf	(efgtoa@pp+1)& (0+255),b
  8510  000F74  0E01               	movlw	1
  8511  000F76  6F81               	movwf	efgtoa@pp& (0+255),b
  8512  000F78  EFCE  F007         	goto	l5039
  8513  000F7C                     l5031:
  8514                           
  8515                           ; BSR set to: 0
  8516                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:             
      +                              dbuf[n++] = '0';
  8517  000F7C  0E9F               	movlw	low _dbuf
  8518  000F7E  25A1               	addwf	efgtoa@n& (0+255),w,b
  8519  000F80  6ED9               	movwf	fsr2l,c
  8520  000F82  0E01               	movlw	high _dbuf
  8521  000F84  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8522  000F86  6EDA               	movwf	fsr2h,c
  8523  000F88  0E30               	movlw	48
  8524  000F8A  6EDF               	movwf	indf2,c
  8525  000F8C                     
  8526                           ; BSR set to: 0
  8527  000F8C  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8528  000F8E  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8529  000F90                     
  8530                           ; BSR set to: 0
  8531                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:             
      +                              --w;
  8532  000F90  078E               	decf	efgtoa@w& (0+255),f,b
  8533  000F92  A0D8               	btfss	status,0,c
  8534  000F94  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8535  000F96                     
  8536                           ; BSR set to: 0
  8537                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:             
      +                              --t;
  8538  000F96  077F               	decf	efgtoa@t& (0+255),f,b
  8539  000F98  A0D8               	btfss	status,0,c
  8540  000F9A  0780               	decf	(efgtoa@t+1)& (0+255),f,b
  8541  000F9C                     l5039:
  8542                           
  8543                           ; BSR set to: 0
  8544                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             
      +                          while (t) {
  8545  000F9C  517F               	movf	efgtoa@t& (0+255),w,b
  8546  000F9E  1180               	iorwf	(efgtoa@t+1)& (0+255),w,b
  8547  000FA0  A4D8               	btfss	status,2,c
  8548  000FA2  EFD5  F007         	goto	u6061
  8549  000FA6  EFD7  F007         	goto	u6060
  8550  000FAA                     u6061:
  8551  000FAA  EFBE  F007         	goto	l5031
  8552  000FAE                     u6060:
  8553  000FAE                     
  8554                           ; BSR set to: 0
  8555                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             
      +                          dbuf[n++] = '0' + d;
  8556  000FAE  0E9F               	movlw	low _dbuf
  8557  000FB0  25A1               	addwf	efgtoa@n& (0+255),w,b
  8558  000FB2  6ED9               	movwf	fsr2l,c
  8559  000FB4  0E01               	movlw	high _dbuf
  8560  000FB6  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8561  000FB8  6EDA               	movwf	fsr2h,c
  8562  000FBA  5187               	movf	efgtoa@d& (0+255),w,b
  8563  000FBC  0F30               	addlw	48
  8564  000FBE  6EDF               	movwf	indf2,c
  8565  000FC0                     
  8566                           ; BSR set to: 0
  8567  000FC0  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8568  000FC2  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8569  000FC4                     
  8570                           ; BSR set to: 0
  8571                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             
      +                          --w;
  8572  000FC4  078E               	decf	efgtoa@w& (0+255),f,b
  8573  000FC6  A0D8               	btfss	status,0,c
  8574  000FC8  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8575  000FCA                     l5047:
  8576                           
  8577                           ; BSR set to: 0
  8578                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -=
      +                           l*u;
  8579  000FCA  C091  F045         	movff	efgtoa@h,___flsub@b
  8580  000FCE  C092  F046         	movff	efgtoa@h+1,___flsub@b+1
  8581  000FD2  C093  F047         	movff	efgtoa@h+2,___flsub@b+2
  8582  000FD6  C094  F048         	movff	efgtoa@h+3,___flsub@b+3
  8583  000FDA  C0A3  F020         	movff	efgtoa@u,___flmul@a
  8584  000FDE  C0A4  F021         	movff	efgtoa@u+1,___flmul@a+1
  8585  000FE2  C0A5  F022         	movff	efgtoa@u+2,___flmul@a+2
  8586  000FE6  C0A6  F023         	movff	efgtoa@u+3,___flmul@a+3
  8587  000FEA  C095  F01C         	movff	efgtoa@l,___flmul@b
  8588  000FEE  C096  F01D         	movff	efgtoa@l+1,___flmul@b+1
  8589  000FF2  C097  F01E         	movff	efgtoa@l+2,___flmul@b+2
  8590  000FF6  C098  F01F         	movff	efgtoa@l+3,___flmul@b+3
  8591  000FFA  ECBF  F017         	call	___flmul	;wreg free
  8592  000FFE  C01C  F049         	movff	?___flmul,___flsub@a
  8593  001002  C01D  F04A         	movff	?___flmul+1,___flsub@a+1
  8594  001006  C01E  F04B         	movff	?___flmul+2,___flsub@a+2
  8595  00100A  C01F  F04C         	movff	?___flmul+3,___flsub@a+3
  8596  00100E  EC4F  F02C         	call	___flsub	;wreg free
  8597  001012  C045  F091         	movff	?___flsub,efgtoa@h
  8598  001016  C046  F092         	movff	?___flsub+1,efgtoa@h+1
  8599  00101A  C047  F093         	movff	?___flsub+2,efgtoa@h+2
  8600  00101E  C048  F094         	movff	?___flsub+3,efgtoa@h+3
  8601  001022                     
  8602                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = 
      +                          u/10.0;
  8603  001022  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  8604  001026  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  8605  00102A  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  8606  00102E  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  8607  001032  0E00               	movlw	0
  8608  001034  6E39               	movwf	___fldiv@a^0,c
  8609  001036  0E00               	movlw	0
  8610  001038  6E3A               	movwf	(___fldiv@a+1)^0,c
  8611  00103A  0E20               	movlw	32
  8612  00103C  6E3B               	movwf	(___fldiv@a+2)^0,c
  8613  00103E  0E41               	movlw	65
  8614  001040  6E3C               	movwf	(___fldiv@a+3)^0,c
  8615  001042  ECD4  F019         	call	___fldiv	;wreg free
  8616  001046  C035  F0A3         	movff	?___fldiv,efgtoa@u
  8617  00104A  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  8618  00104E  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  8619  001052  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  8620  001056                     
  8621                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne
      +                          ;
  8622  001056  0100               	movlb	0	; () banked
  8623  001058  0785               	decf	efgtoa@ne& (0+255),f,b
  8624  00105A  A0D8               	btfss	status,0,c
  8625  00105C  0786               	decf	(efgtoa@ne+1)& (0+255),f,b
  8626  00105E                     
  8627                           ; BSR set to: 0
  8628                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  8629  00105E  4B99               	infsnz	efgtoa@i& (0+255),f,b
  8630  001060  2B9A               	incf	(efgtoa@i+1)& (0+255),f,b
  8631  001062                     l5055:
  8632                           
  8633                           ; BSR set to: 0
  8634                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  8635  001062  5183               	movf	efgtoa@m& (0+255),w,b
  8636  001064  5D99               	subwf	efgtoa@i& (0+255),w,b
  8637  001066  519A               	movf	(efgtoa@i+1)& (0+255),w,b
  8638  001068  0A80               	xorlw	128
  8639  00106A  6F6A               	movwf	??_efgtoa& (0+255),b
  8640  00106C  5184               	movf	(efgtoa@m+1)& (0+255),w,b
  8641  00106E  0A80               	xorlw	128
  8642  001070  596A               	subwfb	??_efgtoa& (0+255),w,b
  8643  001072  B0D8               	btfsc	status,0,c
  8644  001074  EF3E  F008         	goto	u6071
  8645  001078  EF40  F008         	goto	u6070
  8646  00107C                     u6071:
  8647  00107C  EF4E  F008         	goto	l5059
  8648  001080                     u6070:
  8649  001080                     
  8650                           ; BSR set to: 0
  8651  001080  BFA2               	btfsc	(efgtoa@n+1)& (0+255),7,b
  8652  001082  EF4C  F008         	goto	u6081
  8653  001086  51A2               	movf	(efgtoa@n+1)& (0+255),w,b
  8654  001088  E109               	bnz	u6080
  8655  00108A  0E4B               	movlw	75
  8656  00108C  5DA1               	subwf	efgtoa@n& (0+255),w,b
  8657  00108E  A0D8               	btfss	status,0,c
  8658  001090  EF4C  F008         	goto	u6081
  8659  001094  EF4E  F008         	goto	u6080
  8660  001098                     u6081:
  8661  001098  EF42  F007         	goto	l5007
  8662  00109C                     u6080:
  8663  00109C                     l5059:
  8664                           
  8665                           ; BSR set to: 0
  8666                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp 
      +                          && (flags & (1 << 4))) {
  8667  00109C  5181               	movf	efgtoa@pp& (0+255),w,b
  8668  00109E  1182               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  8669  0010A0  A4D8               	btfss	status,2,c
  8670  0010A2  EF55  F008         	goto	u6091
  8671  0010A6  EF57  F008         	goto	u6090
  8672  0010AA                     u6091:
  8673  0010AA  EF6A  F008         	goto	l5067
  8674  0010AE                     u6090:
  8675  0010AE                     
  8676                           ; BSR set to: 0
  8677  0010AE  0101               	movlb	1	; () banked
  8678  0010B0  A998               	btfss	_flags& (0+255),4,b
  8679  0010B2  EF5D  F008         	goto	u6101
  8680  0010B6  EF5F  F008         	goto	u6100
  8681  0010BA                     u6101:
  8682  0010BA  EF6A  F008         	goto	l5067
  8683  0010BE                     u6100:
  8684  0010BE                     
  8685                           ; BSR set to: 1
  8686                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf
      +                          [n++] = '.';
  8687  0010BE  0E9F               	movlw	low _dbuf
  8688  0010C0  0100               	movlb	0	; () banked
  8689  0010C2  25A1               	addwf	efgtoa@n& (0+255),w,b
  8690  0010C4  6ED9               	movwf	fsr2l,c
  8691  0010C6  0E01               	movlw	high _dbuf
  8692  0010C8  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8693  0010CA  6EDA               	movwf	fsr2h,c
  8694  0010CC  0E2E               	movlw	46
  8695  0010CE  6EDF               	movwf	indf2,c
  8696  0010D0                     
  8697                           ; BSR set to: 0
  8698  0010D0  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8699  0010D2  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8700  0010D4                     l5067:
  8701                           
  8702                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] 
      +                          = '\0';
  8703  0010D4  0E9F               	movlw	low _dbuf
  8704  0010D6  0100               	movlb	0	; () banked
  8705  0010D8  25A1               	addwf	efgtoa@n& (0+255),w,b
  8706  0010DA  6ED9               	movwf	fsr2l,c
  8707  0010DC  0E01               	movlw	high _dbuf
  8708  0010DE  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8709  0010E0  6EDA               	movwf	fsr2h,c
  8710  0010E2  0E00               	movlw	0
  8711  0010E4  6EDF               	movwf	indf2,c
  8712  0010E6                     
  8713                           ; BSR set to: 0
  8714                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmod
      +                          e == 'e') {
  8715  0010E6  0E65               	movlw	101
  8716  0010E8  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8717  0010EA  A4D8               	btfss	status,2,c
  8718  0010EC  EF7A  F008         	goto	u6111
  8719  0010F0  EF7C  F008         	goto	u6110
  8720  0010F4                     u6111:
  8721  0010F4  EF21  F004         	goto	l4879
  8722  0010F8                     u6110:
  8723  0010F8                     
  8724                           ; BSR set to: 0
  8725                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = 
      +                          sizeof(dbuf) - 1;
  8726  0010F8  0E00               	movlw	0
  8727  0010FA  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  8728  0010FC  0E4F               	movlw	79
  8729  0010FE  6F99               	movwf	efgtoa@i& (0+255),b
  8730  001100                     
  8731                           ; BSR set to: 0
  8732                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf
      +                          [i] = '\0';
  8733  001100  0E9F               	movlw	low _dbuf
  8734  001102  2599               	addwf	efgtoa@i& (0+255),w,b
  8735  001104  6ED9               	movwf	fsr2l,c
  8736  001106  0E01               	movlw	high _dbuf
  8737  001108  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8738  00110A  6EDA               	movwf	fsr2h,c
  8739  00110C  0E00               	movlw	0
  8740  00110E  6EDF               	movwf	indf2,c
  8741  001110                     
  8742                           ; BSR set to: 0
  8743                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign
      +                           = 0;
  8744  001110  0E00               	movlw	0
  8745  001112  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  8746  001114  0E00               	movlw	0
  8747  001116  6F89               	movwf	efgtoa@sign& (0+255),b
  8748  001118                     
  8749                           ; BSR set to: 0
  8750                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (
      +                          e < 0) {
  8751  001118  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8752  00111A  EF93  F008         	goto	u6120
  8753  00111E  EF91  F008         	goto	u6121
  8754  001122                     u6121:
  8755  001122  EF9B  F008         	goto	l5083
  8756  001126                     u6120:
  8757  001126                     
  8758                           ; BSR set to: 0
  8759                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             
      +                          sign = 1;
  8760  001126  0E00               	movlw	0
  8761  001128  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  8762  00112A  0E01               	movlw	1
  8763  00112C  6F89               	movwf	efgtoa@sign& (0+255),b
  8764  00112E                     
  8765                           ; BSR set to: 0
  8766                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             
      +                          e = -e;
  8767  00112E  6D9F               	negf	efgtoa@e& (0+255),b
  8768  001130  1FA0               	comf	(efgtoa@e+1)& (0+255),f,b
  8769  001132  B0D8               	btfsc	status,0,c
  8770  001134  2BA0               	incf	(efgtoa@e+1)& (0+255),f,b
  8771  001136                     l5083:
  8772                           
  8773                           ; BSR set to: 0
  8774                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 
      +                          2;
  8775  001136  0E00               	movlw	0
  8776  001138  6F8C               	movwf	(efgtoa@p+1)& (0+255),b
  8777  00113A  0E02               	movlw	2
  8778  00113C  6F8B               	movwf	efgtoa@p& (0+255),b
  8779                           
  8780                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  8781  00113E  EFCC  F008         	goto	l5095
  8782  001142                     l5085:
  8783                           
  8784                           ; BSR set to: 0
  8785                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             
      +                          --i;
  8786  001142  0799               	decf	efgtoa@i& (0+255),f,b
  8787  001144  A0D8               	btfss	status,0,c
  8788  001146  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  8789  001148                     
  8790                           ; BSR set to: 0
  8791                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             
      +                          dbuf[i] = '0' + (e % 10);
  8792  001148  0E9F               	movlw	low _dbuf
  8793  00114A  2599               	addwf	efgtoa@i& (0+255),w,b
  8794  00114C  6ED9               	movwf	fsr2l,c
  8795  00114E  0E01               	movlw	high _dbuf
  8796  001150  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8797  001152  6EDA               	movwf	fsr2h,c
  8798  001154  C09F  F001         	movff	efgtoa@e,___awmod@dividend
  8799  001158  C0A0  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  8800  00115C  0E00               	movlw	0
  8801  00115E  6E04               	movwf	(___awmod@divisor+1)^0,c
  8802  001160  0E0A               	movlw	10
  8803  001162  6E03               	movwf	___awmod@divisor^0,c
  8804  001164  EC71  F028         	call	___awmod	;wreg free
  8805  001168  5001               	movf	?___awmod^0,w,c
  8806  00116A  0F30               	addlw	48
  8807  00116C  6EDF               	movwf	indf2,c
  8808  00116E                     
  8809                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             
      +                          e = e / 10;
  8810  00116E  C09F  F001         	movff	efgtoa@e,___awdiv@dividend
  8811  001172  C0A0  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  8812  001176  0E00               	movlw	0
  8813  001178  6E04               	movwf	(___awdiv@divisor+1)^0,c
  8814  00117A  0E0A               	movlw	10
  8815  00117C  6E03               	movwf	___awdiv@divisor^0,c
  8816  00117E  EC0F  F028         	call	___awdiv	;wreg free
  8817  001182  C001  F09F         	movff	?___awdiv,efgtoa@e
  8818  001186  C002  F0A0         	movff	?___awdiv+1,efgtoa@e+1
  8819  00118A                     
  8820                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             
      +                          --p;
  8821  00118A  0100               	movlb	0	; () banked
  8822  00118C  078B               	decf	efgtoa@p& (0+255),f,b
  8823  00118E  A0D8               	btfss	status,0,c
  8824  001190  078C               	decf	(efgtoa@p+1)& (0+255),f,b
  8825  001192                     
  8826                           ; BSR set to: 0
  8827                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             
      +                          --w;
  8828  001192  078E               	decf	efgtoa@w& (0+255),f,b
  8829  001194  A0D8               	btfss	status,0,c
  8830  001196  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8831  001198                     l5095:
  8832                           
  8833                           ; BSR set to: 0
  8834                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  8835  001198  519F               	movf	efgtoa@e& (0+255),w,b
  8836  00119A  11A0               	iorwf	(efgtoa@e+1)& (0+255),w,b
  8837  00119C  A4D8               	btfss	status,2,c
  8838  00119E  EFD3  F008         	goto	u6131
  8839  0011A2  EFD5  F008         	goto	u6130
  8840  0011A6                     u6131:
  8841  0011A6  EFA1  F008         	goto	l5085
  8842  0011AA                     u6130:
  8843  0011AA                     
  8844                           ; BSR set to: 0
  8845  0011AA  BF8C               	btfsc	(efgtoa@p+1)& (0+255),7,b
  8846  0011AC  EFE2  F008         	goto	u6140
  8847  0011B0  518C               	movf	(efgtoa@p+1)& (0+255),w,b
  8848  0011B2  E106               	bnz	u6141
  8849  0011B4  058B               	decf	efgtoa@p& (0+255),w,b
  8850  0011B6  B0D8               	btfsc	status,0,c
  8851  0011B8  EFE0  F008         	goto	u6141
  8852  0011BC  EFE2  F008         	goto	u6140
  8853  0011C0                     u6141:
  8854  0011C0  EFA1  F008         	goto	l5085
  8855  0011C4                     u6140:
  8856  0011C4                     
  8857                           ; BSR set to: 0
  8858                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  8859  0011C4  0799               	decf	efgtoa@i& (0+255),f,b
  8860  0011C6  A0D8               	btfss	status,0,c
  8861  0011C8  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  8862  0011CA                     
  8863                           ; BSR set to: 0
  8864                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [i] = sign ? '-' : '+';
  8865  0011CA  5189               	movf	efgtoa@sign& (0+255),w,b
  8866  0011CC  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8867  0011CE  A4D8               	btfss	status,2,c
  8868  0011D0  EFEC  F008         	goto	u6151
  8869  0011D4  EFEE  F008         	goto	u6150
  8870  0011D8                     u6151:
  8871  0011D8  EFF4  F008         	goto	l5105
  8872  0011DC                     u6150:
  8873  0011DC                     
  8874                           ; BSR set to: 0
  8875  0011DC  0E00               	movlw	0
  8876  0011DE  6F7A               	movwf	(_efgtoa$2514+1)& (0+255),b
  8877  0011E0  0E2B               	movlw	43
  8878  0011E2  6F79               	movwf	_efgtoa$2514& (0+255),b
  8879  0011E4  EFF8  F008         	goto	l5107
  8880  0011E8                     l5105:
  8881                           
  8882                           ; BSR set to: 0
  8883  0011E8  0E00               	movlw	0
  8884  0011EA  6F7A               	movwf	(_efgtoa$2514+1)& (0+255),b
  8885  0011EC  0E2D               	movlw	45
  8886  0011EE  6F79               	movwf	_efgtoa$2514& (0+255),b
  8887  0011F0                     l5107:
  8888                           
  8889                           ; BSR set to: 0
  8890  0011F0  0E9F               	movlw	low _dbuf
  8891  0011F2  2599               	addwf	efgtoa@i& (0+255),w,b
  8892  0011F4  6ED9               	movwf	fsr2l,c
  8893  0011F6  0E01               	movlw	high _dbuf
  8894  0011F8  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8895  0011FA  6EDA               	movwf	fsr2h,c
  8896  0011FC  C079  FFDF         	movff	_efgtoa$2514,indf2
  8897  001200                     
  8898                           ; BSR set to: 0
  8899                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  8900  001200  078E               	decf	efgtoa@w& (0+255),f,b
  8901  001202  A0D8               	btfss	status,0,c
  8902  001204  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8903  001206                     
  8904                           ; BSR set to: 0
  8905                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  8906  001206  0799               	decf	efgtoa@i& (0+255),f,b
  8907  001208  A0D8               	btfss	status,0,c
  8908  00120A  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  8909  00120C                     
  8910                           ; BSR set to: 0
  8911  00120C  0EBF               	movlw	191
  8912  00120E  6F6A               	movwf	??_efgtoa& (0+255),b
  8913  001210  0EFF               	movlw	255
  8914  001212  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  8915  001214  505E               	movf	efgtoa@c^0,w,c
  8916  001216  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  8917  001218  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  8918  00121A  516A               	movf	??_efgtoa& (0+255),w,b
  8919  00121C  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  8920  00121E  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  8921  001220  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8922  001222  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  8923  001224  E10A               	bnz	u6160
  8924  001226  0E1A               	movlw	26
  8925  001228  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  8926  00122A  A0D8               	btfss	status,0,c
  8927  00122C  EF1A  F009         	goto	u6161
  8928  001230  EF1D  F009         	goto	u6160
  8929  001234                     u6161:
  8930  001234  0E01               	movlw	1
  8931  001236  EF1E  F009         	goto	u6170
  8932  00123A                     u6160:
  8933  00123A  0E00               	movlw	0
  8934  00123C                     u6170:
  8935  00123C  6F7D               	movwf	_efgtoa$2516& (0+255),b
  8936  00123E  6B7E               	clrf	(_efgtoa$2516+1)& (0+255),b
  8937  001240                     
  8938                           ; BSR set to: 0
  8939  001240  517D               	movf	_efgtoa$2516& (0+255),w,b
  8940  001242  117E               	iorwf	(_efgtoa$2516+1)& (0+255),w,b
  8941  001244  A4D8               	btfss	status,2,c
  8942  001246  EF27  F009         	goto	u6181
  8943  00124A  EF29  F009         	goto	u6180
  8944  00124E                     u6181:
  8945  00124E  EF2F  F009         	goto	l5121
  8946  001252                     u6180:
  8947  001252                     
  8948                           ; BSR set to: 0
  8949  001252  0E00               	movlw	0
  8950  001254  6F7C               	movwf	(_efgtoa$2515+1)& (0+255),b
  8951  001256  0E65               	movlw	101
  8952  001258  6F7B               	movwf	_efgtoa$2515& (0+255),b
  8953  00125A  EF33  F009         	goto	l5123
  8954  00125E                     l5121:
  8955                           
  8956                           ; BSR set to: 0
  8957  00125E  0E00               	movlw	0
  8958  001260  6F7C               	movwf	(_efgtoa$2515+1)& (0+255),b
  8959  001262  0E45               	movlw	69
  8960  001264  6F7B               	movwf	_efgtoa$2515& (0+255),b
  8961  001266                     l5123:
  8962                           
  8963                           ; BSR set to: 0
  8964  001266  0E9F               	movlw	low _dbuf
  8965  001268  2599               	addwf	efgtoa@i& (0+255),w,b
  8966  00126A  6ED9               	movwf	fsr2l,c
  8967  00126C  0E01               	movlw	high _dbuf
  8968  00126E  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8969  001270  6EDA               	movwf	fsr2h,c
  8970  001272  C07B  FFDF         	movff	_efgtoa$2515,indf2
  8971  001276                     
  8972                           ; BSR set to: 0
  8973                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  8974  001276  078E               	decf	efgtoa@w& (0+255),f,b
  8975  001278  A0D8               	btfss	status,0,c
  8976  00127A  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8977  00127C                     
  8978                           ; BSR set to: 0
  8979                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  8980  00127C  0E9F               	movlw	low _dbuf
  8981  00127E  25A1               	addwf	efgtoa@n& (0+255),w,b
  8982  001280  6E01               	movwf	strcpy@dest^0,c
  8983  001282  0E01               	movlw	high _dbuf
  8984  001284  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8985  001286  6E02               	movwf	(strcpy@dest+1)^0,c
  8986  001288  0E9F               	movlw	low _dbuf
  8987  00128A  2599               	addwf	efgtoa@i& (0+255),w,b
  8988  00128C  6E03               	movwf	strcpy@src^0,c
  8989  00128E  0E01               	movlw	high _dbuf
  8990  001290  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8991  001292  6E04               	movwf	(strcpy@src+1)^0,c
  8992  001294  EC78  F02B         	call	_strcpy	;wreg free
  8993  001298  EF21  F004         	goto	l4879
  8994  00129C                     l1263:
  8995  00129C  0012               	return		;funcret
  8996  00129E                     __end_of_efgtoa:
  8997                           	callstack 0
  8998                           
  8999 ;; *************** function _tolower *****************
  9000 ;; Defined at:
  9001 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\tolower.c"
  9002 ;; Parameters:    Size  Location     Type
  9003 ;;  c               2    6[COMRAM] int 
  9004 ;; Auto vars:     Size  Location     Type
  9005 ;;		None
  9006 ;; Return value:  Size  Location     Type
  9007 ;;                  2    6[COMRAM] int 
  9008 ;; Registers used:
  9009 ;;		wreg, status,2, status,0
  9010 ;; Tracked objects:
  9011 ;;		On entry : 0/0
  9012 ;;		On exit  : 0/0
  9013 ;;		Unchanged: 0/0
  9014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9015 ;;      Params:         2       0       0       0       0       0       0
  9016 ;;      Locals:         2       0       0       0       0       0       0
  9017 ;;      Temps:          4       0       0       0       0       0       0
  9018 ;;      Totals:         8       0       0       0       0       0       0
  9019 ;;Total ram usage:        8 bytes
  9020 ;; Hardware stack levels used:    1
  9021 ;; Hardware stack levels required when called:    2
  9022 ;; This function calls:
  9023 ;;		_isupper
  9024 ;; This function is called by:
  9025 ;;		_efgtoa
  9026 ;;		_vfpfcnvrt
  9027 ;; This function uses a non-reentrant model
  9028 ;;
  9029                           
  9030                           	psect	text24
  9031  005690                     __ptext24:
  9032                           	callstack 0
  9033  005690                     _tolower:
  9034                           	callstack 23
  9035  005690  0EBF               	movlw	191
  9036  005692  6E09               	movwf	??_tolower^0,c
  9037  005694  0EFF               	movlw	255
  9038  005696  6E0A               	movwf	(??_tolower+1)^0,c
  9039  005698  C007  F00B         	movff	tolower@c,??_tolower+2
  9040  00569C  C008  F00C         	movff	tolower@c+1,??_tolower+3
  9041  0056A0  5009               	movf	??_tolower^0,w,c
  9042  0056A2  260B               	addwf	(??_tolower+2)^0,f,c
  9043  0056A4  500A               	movf	(??_tolower+1)^0,w,c
  9044  0056A6  220C               	addwfc	(??_tolower+3)^0,f,c
  9045  0056A8  500C               	movf	(??_tolower+3)^0,w,c
  9046  0056AA  E10A               	bnz	u5350
  9047  0056AC  0E1A               	movlw	26
  9048  0056AE  5C0B               	subwf	(??_tolower+2)^0,w,c
  9049  0056B0  A0D8               	btfss	status,0,c
  9050  0056B2  EF5D  F02B         	goto	u5351
  9051  0056B6  EF60  F02B         	goto	u5350
  9052  0056BA                     u5351:
  9053  0056BA  0E01               	movlw	1
  9054  0056BC  EF61  F02B         	goto	u5360
  9055  0056C0                     u5350:
  9056  0056C0  0E00               	movlw	0
  9057  0056C2                     u5360:
  9058  0056C2  6E0D               	movwf	_tolower$2667^0,c
  9059  0056C4  6A0E               	clrf	(_tolower$2667+1)^0,c
  9060  0056C6  500D               	movf	_tolower$2667^0,w,c
  9061  0056C8  100E               	iorwf	(_tolower$2667+1)^0,w,c
  9062  0056CA  B4D8               	btfsc	status,2,c
  9063  0056CC  EF6A  F02B         	goto	u5371
  9064  0056D0  EF6C  F02B         	goto	u5370
  9065  0056D4                     u5371:
  9066  0056D4  EF73  F02B         	goto	l1511
  9067  0056D8                     u5370:
  9068  0056D8  0E20               	movlw	32
  9069  0056DA  1007               	iorwf	tolower@c^0,w,c
  9070  0056DC  6E07               	movwf	?_tolower^0,c
  9071  0056DE  5008               	movf	(tolower@c+1)^0,w,c
  9072  0056E0  6E08               	movwf	(?_tolower+1)^0,c
  9073  0056E2  EF77  F02B         	goto	l1516
  9074  0056E6                     l1511:
  9075  0056E6  C007  F007         	movff	tolower@c,?_tolower
  9076  0056EA  C008  F008         	movff	tolower@c+1,?_tolower+1
  9077  0056EE                     l1516:
  9078  0056EE  0012               	return		;funcret
  9079  0056F0                     __end_of_tolower:
  9080                           	callstack 0
  9081                           
  9082 ;; *************** function _isupper *****************
  9083 ;; Defined at:
  9084 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  9085 ;; Parameters:    Size  Location     Type
  9086 ;;  c               2    0[COMRAM] int 
  9087 ;; Auto vars:     Size  Location     Type
  9088 ;;		None
  9089 ;; Return value:  Size  Location     Type
  9090 ;;                  2    0[COMRAM] int 
  9091 ;; Registers used:
  9092 ;;		wreg, status,2, status,0
  9093 ;; Tracked objects:
  9094 ;;		On entry : 0/0
  9095 ;;		On exit  : 0/0
  9096 ;;		Unchanged: 0/0
  9097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9098 ;;      Params:         2       0       0       0       0       0       0
  9099 ;;      Locals:         0       0       0       0       0       0       0
  9100 ;;      Temps:          4       0       0       0       0       0       0
  9101 ;;      Totals:         6       0       0       0       0       0       0
  9102 ;;Total ram usage:        6 bytes
  9103 ;; Hardware stack levels used:    1
  9104 ;; Hardware stack levels required when called:    1
  9105 ;; This function calls:
  9106 ;;		Nothing
  9107 ;; This function is called by:
  9108 ;;		_efgtoa
  9109 ;;		_vfpfcnvrt
  9110 ;;		_tolower
  9111 ;; This function uses a non-reentrant model
  9112 ;;
  9113                           
  9114                           	psect	text25
  9115  005A24                     __ptext25:
  9116                           	callstack 0
  9117  005A24                     _isupper:
  9118                           	callstack 23
  9119  005A24  0EBF               	movlw	191
  9120  005A26  6E03               	movwf	??_isupper^0,c
  9121  005A28  0EFF               	movlw	255
  9122  005A2A  6E04               	movwf	(??_isupper+1)^0,c
  9123  005A2C  C001  F005         	movff	isupper@c,??_isupper+2
  9124  005A30  C002  F006         	movff	isupper@c+1,??_isupper+3
  9125  005A34  5003               	movf	??_isupper^0,w,c
  9126  005A36  2605               	addwf	(??_isupper+2)^0,f,c
  9127  005A38  5004               	movf	(??_isupper+1)^0,w,c
  9128  005A3A  2206               	addwfc	(??_isupper+3)^0,f,c
  9129  005A3C  5006               	movf	(??_isupper+3)^0,w,c
  9130  005A3E  E10A               	bnz	u4360
  9131  005A40  0E1A               	movlw	26
  9132  005A42  5C05               	subwf	(??_isupper+2)^0,w,c
  9133  005A44  A0D8               	btfss	status,0,c
  9134  005A46  EF27  F02D         	goto	u4361
  9135  005A4A  EF2A  F02D         	goto	u4360
  9136  005A4E                     u4361:
  9137  005A4E  0E01               	movlw	1
  9138  005A50  EF2B  F02D         	goto	u4370
  9139  005A54                     u4360:
  9140  005A54  0E00               	movlw	0
  9141  005A56                     u4370:
  9142  005A56  6E01               	movwf	?_isupper^0,c
  9143  005A58  6A02               	clrf	(?_isupper+1)^0,c
  9144  005A5A  0012               	return		;funcret
  9145  005A5C                     __end_of_isupper:
  9146                           	callstack 0
  9147                           
  9148 ;; *************** function _strcpy *****************
  9149 ;; Defined at:
  9150 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  9151 ;; Parameters:    Size  Location     Type
  9152 ;;  dest            2    0[COMRAM] PTR unsigned char 
  9153 ;;		 -> dbuf(80), 
  9154 ;;  src             2    2[COMRAM] PTR const unsigned char 
  9155 ;;		 -> STR_22(4), STR_21(4), STR_18(4), STR_17(4), 
  9156 ;;		 -> dbuf(80), 
  9157 ;; Auto vars:     Size  Location     Type
  9158 ;;  d               2    8[COMRAM] PTR unsigned char 
  9159 ;;		 -> dbuf(80), 
  9160 ;;  s               2    6[COMRAM] PTR const unsigned char 
  9161 ;;		 -> STR_22(4), STR_21(4), STR_18(4), STR_17(4), 
  9162 ;;		 -> dbuf(80), 
  9163 ;; Return value:  Size  Location     Type
  9164 ;;                  2    0[COMRAM] PTR unsigned char 
  9165 ;; Registers used:
  9166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9167 ;; Tracked objects:
  9168 ;;		On entry : 0/0
  9169 ;;		On exit  : 0/0
  9170 ;;		Unchanged: 0/0
  9171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9172 ;;      Params:         4       0       0       0       0       0       0
  9173 ;;      Locals:         4       0       0       0       0       0       0
  9174 ;;      Temps:          2       0       0       0       0       0       0
  9175 ;;      Totals:        10       0       0       0       0       0       0
  9176 ;;Total ram usage:       10 bytes
  9177 ;; Hardware stack levels used:    1
  9178 ;; Hardware stack levels required when called:    1
  9179 ;; This function calls:
  9180 ;;		Nothing
  9181 ;; This function is called by:
  9182 ;;		_efgtoa
  9183 ;; This function uses a non-reentrant model
  9184 ;;
  9185                           
  9186                           	psect	text26
  9187  0056F0                     __ptext26:
  9188                           	callstack 0
  9189  0056F0                     _strcpy:
  9190                           	callstack 23
  9191  0056F0  C003  F007         	movff	strcpy@src,strcpy@s
  9192  0056F4  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  9193  0056F8  C001  F009         	movff	strcpy@dest,strcpy@d
  9194  0056FC  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  9195  005700                     l4717:
  9196  005700  5007               	movf	strcpy@s^0,w,c
  9197  005702  6E05               	movwf	??_strcpy^0,c
  9198  005704  5008               	movf	(strcpy@s+1)^0,w,c
  9199  005706  6E06               	movwf	(??_strcpy+1)^0,c
  9200  005708  4A07               	infsnz	strcpy@s^0,f,c
  9201  00570A  2A08               	incf	(strcpy@s+1)^0,f,c
  9202  00570C  C005  FFF6         	movff	??_strcpy,tblptrl
  9203  005710  C006  FFF7         	movff	??_strcpy+1,tblptrh
  9204  005714  6AF8               	clrf	tblptru,c
  9205  005716  C009  FFD9         	movff	strcpy@d,fsr2l
  9206  00571A  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  9207  00571E  4A09               	infsnz	strcpy@d^0,f,c
  9208  005720  2A0A               	incf	(strcpy@d+1)^0,f,c
  9209  005722  0E05               	movlw	(high __ramtop+-1)
  9210  005724  64F7               	cpfsgt	tblptrh,c
  9211  005726  D003               	bra	u5337
  9212  005728  0008               	tblrd		*
  9213  00572A  50F5               	movf	tablat,w,c
  9214  00572C  D005               	bra	u5330
  9215  00572E                     u5337:
  9216  00572E  CFF6 FFE1          	movff	tblptrl,fsr1l
  9217  005732  CFF7 FFE2          	movff	tblptrh,fsr1h
  9218  005736  50E7               	movf	indf1,w,c
  9219  005738                     u5330:
  9220  005738  6EDF               	movwf	indf2,c
  9221  00573A  50DF               	movf	indf2,w,c
  9222  00573C  A4D8               	btfss	status,2,c
  9223  00573E  EFA3  F02B         	goto	u5341
  9224  005742  EFA5  F02B         	goto	u5340
  9225  005746                     u5341:
  9226  005746  EF80  F02B         	goto	l4717
  9227  00574A                     u5340:
  9228  00574A  0012               	return		;funcret
  9229  00574C                     __end_of_strcpy:
  9230                           	callstack 0
  9231                           
  9232 ;; *************** function _floorf *****************
  9233 ;; Defined at:
  9234 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\floorf.c"
  9235 ;; Parameters:    Size  Location     Type
  9236 ;;  x               4   77[COMRAM] float 
  9237 ;; Auto vars:     Size  Location     Type
  9238 ;;  u               4    6[BANK0 ] struct .
  9239 ;;  m               4    0[BANK0 ] unsigned long 
  9240 ;;  e               2    4[BANK0 ] int 
  9241 ;; Return value:  Size  Location     Type
  9242 ;;                  4   77[COMRAM] float 
  9243 ;; Registers used:
  9244 ;;		wreg, status,2, status,0
  9245 ;; Tracked objects:
  9246 ;;		On entry : 0/0
  9247 ;;		On exit  : 0/0
  9248 ;;		Unchanged: 0/0
  9249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9250 ;;      Params:         4       0       0       0       0       0       0
  9251 ;;      Locals:         0      10       0       0       0       0       0
  9252 ;;      Temps:          6       0       0       0       0       0       0
  9253 ;;      Totals:        10      10       0       0       0       0       0
  9254 ;;Total ram usage:       20 bytes
  9255 ;; Hardware stack levels used:    1
  9256 ;; Hardware stack levels required when called:    1
  9257 ;; This function calls:
  9258 ;;		Nothing
  9259 ;; This function is called by:
  9260 ;;		_efgtoa
  9261 ;; This function uses a non-reentrant model
  9262 ;;
  9263                           
  9264                           	psect	text27
  9265  003D0A                     __ptext27:
  9266                           	callstack 0
  9267  003D0A                     _floorf:
  9268                           	callstack 23
  9269  003D0A  C17F  F066         	movff	floorf@F524,floorf@u
  9270  003D0E  C180  F067         	movff	floorf@F524+1,floorf@u+1
  9271  003D12  C181  F068         	movff	floorf@F524+2,floorf@u+2
  9272  003D16  C182  F069         	movff	floorf@F524+3,floorf@u+3
  9273  003D1A  C04E  F066         	movff	floorf@x,floorf@u
  9274  003D1E  C04F  F067         	movff	floorf@x+1,floorf@u+1
  9275  003D22  C050  F068         	movff	floorf@x+2,floorf@u+2
  9276  003D26  C051  F069         	movff	floorf@x+3,floorf@u+3
  9277  003D2A  0E81               	movlw	129
  9278  003D2C  6E52               	movwf	??_floorf^0,c
  9279  003D2E  0EFF               	movlw	255
  9280  003D30  6E53               	movwf	(??_floorf+1)^0,c
  9281  003D32  C066  F054         	movff	floorf@u,??_floorf+2
  9282  003D36  C067  F055         	movff	floorf@u+1,??_floorf+3
  9283  003D3A  C068  F056         	movff	floorf@u+2,??_floorf+4
  9284  003D3E  C069  F057         	movff	floorf@u+3,??_floorf+5
  9285  003D42  0E18               	movlw	24
  9286  003D44  EFA9  F01E         	goto	u5380
  9287  003D48                     u5385:
  9288  003D48  90D8               	bcf	status,0,c
  9289  003D4A  3257               	rrcf	(??_floorf+5)^0,f,c
  9290  003D4C  3256               	rrcf	(??_floorf+4)^0,f,c
  9291  003D4E  3255               	rrcf	(??_floorf+3)^0,f,c
  9292  003D50  3254               	rrcf	(??_floorf+2)^0,f,c
  9293  003D52                     u5380:
  9294  003D52  2EE8               	decfsz	wreg,f,c
  9295  003D54  EFA4  F01E         	goto	u5385
  9296  003D58  5054               	movf	(??_floorf+2)^0,w,c
  9297  003D5A  2452               	addwf	??_floorf^0,w,c
  9298  003D5C  0100               	movlb	0	; () banked
  9299  003D5E  6F64               	movwf	floorf@e& (0+255),b
  9300  003D60  0E00               	movlw	0
  9301  003D62  2053               	addwfc	(??_floorf+1)^0,w,c
  9302  003D64  6F65               	movwf	(floorf@e+1)& (0+255),b
  9303  003D66  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  9304  003D68  EFBF  F01E         	goto	u5391
  9305  003D6C  5165               	movf	(floorf@e+1)& (0+255),w,b
  9306  003D6E  E109               	bnz	u5390
  9307  003D70  0E17               	movlw	23
  9308  003D72  5D64               	subwf	floorf@e& (0+255),w,b
  9309  003D74  A0D8               	btfss	status,0,c
  9310  003D76  EFBF  F01E         	goto	u5391
  9311  003D7A  EFC1  F01E         	goto	u5390
  9312  003D7E                     u5391:
  9313  003D7E  EFCB  F01E         	goto	l4735
  9314  003D82                     u5390:
  9315  003D82                     l4733:
  9316                           
  9317                           ; BSR set to: 0
  9318  003D82  C04E  F04E         	movff	floorf@x,?_floorf
  9319  003D86  C04F  F04F         	movff	floorf@x+1,?_floorf+1
  9320  003D8A  C050  F050         	movff	floorf@x+2,?_floorf+2
  9321  003D8E  C051  F051         	movff	floorf@x+3,?_floorf+3
  9322  003D92  EF8F  F01F         	goto	l1435
  9323  003D96                     l4735:
  9324                           
  9325                           ; BSR set to: 0
  9326  003D96  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  9327  003D98  EFD0  F01E         	goto	u5401
  9328  003D9C  EFD2  F01E         	goto	u5400
  9329  003DA0                     u5401:
  9330  003DA0  EF43  F01F         	goto	l4745
  9331  003DA4                     u5400:
  9332  003DA4                     
  9333                           ; BSR set to: 0
  9334  003DA4  C064  F052         	movff	floorf@e,??_floorf
  9335  003DA8  0EFF               	movlw	255
  9336  003DAA  6E53               	movwf	(??_floorf+1)^0,c
  9337  003DAC  0EFF               	movlw	255
  9338  003DAE  6E54               	movwf	(??_floorf+2)^0,c
  9339  003DB0  0E7F               	movlw	127
  9340  003DB2  6E55               	movwf	(??_floorf+3)^0,c
  9341  003DB4  0E00               	movlw	0
  9342  003DB6  6E56               	movwf	(??_floorf+4)^0,c
  9343  003DB8                     u5415:
  9344  003DB8  6652               	tstfsz	??_floorf^0,c
  9345  003DBA  EFE1  F01E         	goto	u5416
  9346  003DBE  EFE9  F01E         	goto	u5417
  9347  003DC2                     u5416:
  9348  003DC2  3456               	rlcf	(??_floorf+4)^0,w,c
  9349  003DC4  3256               	rrcf	(??_floorf+4)^0,f,c
  9350  003DC6  3255               	rrcf	(??_floorf+3)^0,f,c
  9351  003DC8  3254               	rrcf	(??_floorf+2)^0,f,c
  9352  003DCA  3253               	rrcf	(??_floorf+1)^0,f,c
  9353  003DCC  2E52               	decfsz	??_floorf^0,f,c
  9354  003DCE  EFDC  F01E         	goto	u5415
  9355  003DD2                     u5417:
  9356  003DD2  C053  F060         	movff	??_floorf+1,floorf@m
  9357  003DD6  C054  F061         	movff	??_floorf+2,floorf@m+1
  9358  003DDA  C055  F062         	movff	??_floorf+3,floorf@m+2
  9359  003DDE  C056  F063         	movff	??_floorf+4,floorf@m+3
  9360  003DE2  0100               	movlb	0	; () banked
  9361  003DE4  5160               	movf	floorf@m& (0+255),w,b
  9362  003DE6  1566               	andwf	floorf@u& (0+255),w,b
  9363  003DE8  6E52               	movwf	??_floorf^0,c
  9364  003DEA  5161               	movf	(floorf@m+1)& (0+255),w,b
  9365  003DEC  1567               	andwf	(floorf@u+1)& (0+255),w,b
  9366  003DEE  6E53               	movwf	(??_floorf+1)^0,c
  9367  003DF0  5162               	movf	(floorf@m+2)& (0+255),w,b
  9368  003DF2  1568               	andwf	(floorf@u+2)& (0+255),w,b
  9369  003DF4  6E54               	movwf	(??_floorf+2)^0,c
  9370  003DF6  5163               	movf	(floorf@m+3)& (0+255),w,b
  9371  003DF8  1569               	andwf	(floorf@u+3)& (0+255),w,b
  9372  003DFA  6E55               	movwf	(??_floorf+3)^0,c
  9373  003DFC  5052               	movf	??_floorf^0,w,c
  9374  003DFE  1053               	iorwf	(??_floorf+1)^0,w,c
  9375  003E00  1054               	iorwf	(??_floorf+2)^0,w,c
  9376  003E02  1055               	iorwf	(??_floorf+3)^0,w,c
  9377  003E04  A4D8               	btfss	status,2,c
  9378  003E06  EF07  F01F         	goto	u5421
  9379  003E0A  EF09  F01F         	goto	u5420
  9380  003E0E                     u5421:
  9381  003E0E  EF0B  F01F         	goto	l4741
  9382  003E12                     u5420:
  9383  003E12  EFC1  F01E         	goto	l4733
  9384  003E16                     l4741:
  9385                           
  9386                           ; BSR set to: 0
  9387  003E16  C066  F052         	movff	floorf@u,??_floorf
  9388  003E1A  C067  F053         	movff	floorf@u+1,??_floorf+1
  9389  003E1E  C068  F054         	movff	floorf@u+2,??_floorf+2
  9390  003E22  C069  F055         	movff	floorf@u+3,??_floorf+3
  9391  003E26  0E20               	movlw	32
  9392  003E28  EF1B  F01F         	goto	u5430
  9393  003E2C                     u5435:
  9394  003E2C  90D8               	bcf	status,0,c
  9395  003E2E  3255               	rrcf	(??_floorf+3)^0,f,c
  9396  003E30  3254               	rrcf	(??_floorf+2)^0,f,c
  9397  003E32  3253               	rrcf	(??_floorf+1)^0,f,c
  9398  003E34  3252               	rrcf	??_floorf^0,f,c
  9399  003E36                     u5430:
  9400  003E36  2EE8               	decfsz	wreg,f,c
  9401  003E38  EF16  F01F         	goto	u5435
  9402  003E3C  5052               	movf	??_floorf^0,w,c
  9403  003E3E  1053               	iorwf	(??_floorf+1)^0,w,c
  9404  003E40  1054               	iorwf	(??_floorf+2)^0,w,c
  9405  003E42  1055               	iorwf	(??_floorf+3)^0,w,c
  9406  003E44  B4D8               	btfsc	status,2,c
  9407  003E46  EF27  F01F         	goto	u5441
  9408  003E4A  EF29  F01F         	goto	u5440
  9409  003E4E                     u5441:
  9410  003E4E  EF31  F01F         	goto	l1438
  9411  003E52                     u5440:
  9412  003E52                     
  9413                           ; BSR set to: 0
  9414  003E52  5160               	movf	floorf@m& (0+255),w,b
  9415  003E54  2766               	addwf	floorf@u& (0+255),f,b
  9416  003E56  5161               	movf	(floorf@m+1)& (0+255),w,b
  9417  003E58  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  9418  003E5A  5162               	movf	(floorf@m+2)& (0+255),w,b
  9419  003E5C  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  9420  003E5E  5163               	movf	(floorf@m+3)& (0+255),w,b
  9421  003E60  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  9422  003E62                     l1438:
  9423                           
  9424                           ; BSR set to: 0
  9425  003E62  1D60               	comf	floorf@m& (0+255),w,b
  9426  003E64  6E52               	movwf	??_floorf^0,c
  9427  003E66  1D61               	comf	(floorf@m+1)& (0+255),w,b
  9428  003E68  6E53               	movwf	(??_floorf+1)^0,c
  9429  003E6A  1D62               	comf	(floorf@m+2)& (0+255),w,b
  9430  003E6C  6E54               	movwf	(??_floorf+2)^0,c
  9431  003E6E  1D63               	comf	(floorf@m+3)& (0+255),w,b
  9432  003E70  6E55               	movwf	(??_floorf+3)^0,c
  9433  003E72  5052               	movf	??_floorf^0,w,c
  9434  003E74  1766               	andwf	floorf@u& (0+255),f,b
  9435  003E76  5053               	movf	(??_floorf+1)^0,w,c
  9436  003E78  1767               	andwf	(floorf@u+1)& (0+255),f,b
  9437  003E7A  5054               	movf	(??_floorf+2)^0,w,c
  9438  003E7C  1768               	andwf	(floorf@u+2)& (0+255),f,b
  9439  003E7E  5055               	movf	(??_floorf+3)^0,w,c
  9440  003E80  1769               	andwf	(floorf@u+3)& (0+255),f,b
  9441  003E82  EF87  F01F         	goto	l4753
  9442  003E86                     l4745:
  9443                           
  9444                           ; BSR set to: 0
  9445  003E86  C066  F052         	movff	floorf@u,??_floorf
  9446  003E8A  C067  F053         	movff	floorf@u+1,??_floorf+1
  9447  003E8E  C068  F054         	movff	floorf@u+2,??_floorf+2
  9448  003E92  C069  F055         	movff	floorf@u+3,??_floorf+3
  9449  003E96  0E20               	movlw	32
  9450  003E98  EF53  F01F         	goto	u5450
  9451  003E9C                     u5455:
  9452  003E9C  90D8               	bcf	status,0,c
  9453  003E9E  3255               	rrcf	(??_floorf+3)^0,f,c
  9454  003EA0  3254               	rrcf	(??_floorf+2)^0,f,c
  9455  003EA2  3253               	rrcf	(??_floorf+1)^0,f,c
  9456  003EA4  3252               	rrcf	??_floorf^0,f,c
  9457  003EA6                     u5450:
  9458  003EA6  2EE8               	decfsz	wreg,f,c
  9459  003EA8  EF4E  F01F         	goto	u5455
  9460  003EAC  5052               	movf	??_floorf^0,w,c
  9461  003EAE  1053               	iorwf	(??_floorf+1)^0,w,c
  9462  003EB0  1054               	iorwf	(??_floorf+2)^0,w,c
  9463  003EB2  1055               	iorwf	(??_floorf+3)^0,w,c
  9464  003EB4  A4D8               	btfss	status,2,c
  9465  003EB6  EF5F  F01F         	goto	u5461
  9466  003EBA  EF61  F01F         	goto	u5460
  9467  003EBE                     u5461:
  9468  003EBE  EF6B  F01F         	goto	l4749
  9469  003EC2                     u5460:
  9470  003EC2                     
  9471                           ; BSR set to: 0
  9472  003EC2  0E00               	movlw	0
  9473  003EC4  6F66               	movwf	floorf@u& (0+255),b
  9474  003EC6  0E00               	movlw	0
  9475  003EC8  6F67               	movwf	(floorf@u+1)& (0+255),b
  9476  003ECA  0E00               	movlw	0
  9477  003ECC  6F68               	movwf	(floorf@u+2)& (0+255),b
  9478  003ECE  0E00               	movlw	0
  9479  003ED0  6F69               	movwf	(floorf@u+3)& (0+255),b
  9480  003ED2  EF87  F01F         	goto	l4753
  9481  003ED6                     l4749:
  9482                           
  9483                           ; BSR set to: 0
  9484  003ED6  90D8               	bcf	status,0,c
  9485  003ED8  3566               	rlcf	floorf@u& (0+255),w,b
  9486  003EDA  6E52               	movwf	??_floorf^0,c
  9487  003EDC  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  9488  003EDE  6E53               	movwf	(??_floorf+1)^0,c
  9489  003EE0  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  9490  003EE2  6E54               	movwf	(??_floorf+2)^0,c
  9491  003EE4  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  9492  003EE6  6E55               	movwf	(??_floorf+3)^0,c
  9493  003EE8  5052               	movf	??_floorf^0,w,c
  9494  003EEA  1053               	iorwf	(??_floorf+1)^0,w,c
  9495  003EEC  1054               	iorwf	(??_floorf+2)^0,w,c
  9496  003EEE  1055               	iorwf	(??_floorf+3)^0,w,c
  9497  003EF0  B4D8               	btfsc	status,2,c
  9498  003EF2  EF7D  F01F         	goto	u5471
  9499  003EF6  EF7F  F01F         	goto	u5470
  9500  003EFA                     u5471:
  9501  003EFA  EF87  F01F         	goto	l4753
  9502  003EFE                     u5470:
  9503  003EFE                     
  9504                           ; BSR set to: 0
  9505  003EFE  0E00               	movlw	0
  9506  003F00  6F66               	movwf	floorf@u& (0+255),b
  9507  003F02  0E00               	movlw	0
  9508  003F04  6F67               	movwf	(floorf@u+1)& (0+255),b
  9509  003F06  0E80               	movlw	128
  9510  003F08  6F68               	movwf	(floorf@u+2)& (0+255),b
  9511  003F0A  0EBF               	movlw	191
  9512  003F0C  6F69               	movwf	(floorf@u+3)& (0+255),b
  9513  003F0E                     l4753:
  9514                           
  9515                           ; BSR set to: 0
  9516  003F0E  C066  F04E         	movff	floorf@u,?_floorf
  9517  003F12  C067  F04F         	movff	floorf@u+1,?_floorf+1
  9518  003F16  C068  F050         	movff	floorf@u+2,?_floorf+2
  9519  003F1A  C069  F051         	movff	floorf@u+3,?_floorf+3
  9520  003F1E                     l1435:
  9521                           
  9522                           ; BSR set to: 0
  9523  003F1E  0012               	return		;funcret
  9524  003F20                     __end_of_floorf:
  9525                           	callstack 0
  9526                           
  9527 ;; *************** function ___fpclassifyf *****************
  9528 ;; Defined at:
  9529 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
  9530 ;; Parameters:    Size  Location     Type
  9531 ;;  x               4    0[COMRAM] float 
  9532 ;; Auto vars:     Size  Location     Type
  9533 ;;  u               4   10[COMRAM] struct .
  9534 ;;  e               2    8[COMRAM] int 
  9535 ;; Return value:  Size  Location     Type
  9536 ;;                  2    0[COMRAM] int 
  9537 ;; Registers used:
  9538 ;;		wreg, status,2, status,0
  9539 ;; Tracked objects:
  9540 ;;		On entry : 0/0
  9541 ;;		On exit  : 0/0
  9542 ;;		Unchanged: 0/0
  9543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9544 ;;      Params:         4       0       0       0       0       0       0
  9545 ;;      Locals:         6       0       0       0       0       0       0
  9546 ;;      Temps:          4       0       0       0       0       0       0
  9547 ;;      Totals:        14       0       0       0       0       0       0
  9548 ;;Total ram usage:       14 bytes
  9549 ;; Hardware stack levels used:    1
  9550 ;; Hardware stack levels required when called:    1
  9551 ;; This function calls:
  9552 ;;		Nothing
  9553 ;; This function is called by:
  9554 ;;		_efgtoa
  9555 ;; This function uses a non-reentrant model
  9556 ;;
  9557                           
  9558                           	psect	text28
  9559  004BC0                     __ptext28:
  9560                           	callstack 0
  9561  004BC0                     ___fpclassifyf:
  9562                           	callstack 23
  9563  004BC0  C183  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  9564  004BC4  C184  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  9565  004BC8  C185  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  9566  004BCC  C186  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  9567  004BD0  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  9568  004BD4  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  9569  004BD8  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  9570  004BDC  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  9571  004BE0  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  9572  004BE4  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9573  004BE8  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9574  004BEC  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9575  004BF0  0E18               	movlw	24
  9576  004BF2  EF00  F026         	goto	u5260
  9577  004BF6                     u5265:
  9578  004BF6  90D8               	bcf	status,0,c
  9579  004BF8  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  9580  004BFA  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  9581  004BFC  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  9582  004BFE  3205               	rrcf	??___fpclassifyf^0,f,c
  9583  004C00                     u5260:
  9584  004C00  2EE8               	decfsz	wreg,f,c
  9585  004C02  EFFB  F025         	goto	u5265
  9586  004C06  5005               	movf	??___fpclassifyf^0,w,c
  9587  004C08  6E09               	movwf	___fpclassifyf@e^0,c
  9588  004C0A  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  9589  004C0C  5009               	movf	___fpclassifyf@e^0,w,c
  9590  004C0E  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9591  004C10  A4D8               	btfss	status,2,c
  9592  004C12  EF0D  F026         	goto	u5271
  9593  004C16  EF0F  F026         	goto	u5270
  9594  004C1A                     u5271:
  9595  004C1A  EF2F  F026         	goto	l4705
  9596  004C1E                     u5270:
  9597  004C1E  90D8               	bcf	status,0,c
  9598  004C20  340B               	rlcf	___fpclassifyf@u^0,w,c
  9599  004C22  6E05               	movwf	??___fpclassifyf^0,c
  9600  004C24  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  9601  004C26  6E06               	movwf	(??___fpclassifyf+1)^0,c
  9602  004C28  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  9603  004C2A  6E07               	movwf	(??___fpclassifyf+2)^0,c
  9604  004C2C  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  9605  004C2E  6E08               	movwf	(??___fpclassifyf+3)^0,c
  9606  004C30  5005               	movf	??___fpclassifyf^0,w,c
  9607  004C32  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  9608  004C34  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  9609  004C36  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  9610  004C38  A4D8               	btfss	status,2,c
  9611  004C3A  EF21  F026         	goto	u5281
  9612  004C3E  EF23  F026         	goto	u5280
  9613  004C42                     u5281:
  9614  004C42  EF29  F026         	goto	l4701
  9615  004C46                     u5280:
  9616  004C46  0E00               	movlw	0
  9617  004C48  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9618  004C4A  0E02               	movlw	2
  9619  004C4C  6E01               	movwf	?___fpclassifyf^0,c
  9620  004C4E  EF5E  F026         	goto	l1390
  9621  004C52                     l4701:
  9622  004C52  0E00               	movlw	0
  9623  004C54  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9624  004C56  0E03               	movlw	3
  9625  004C58  6E01               	movwf	?___fpclassifyf^0,c
  9626  004C5A  EF5E  F026         	goto	l1390
  9627  004C5E                     l4705:
  9628  004C5E  2809               	incf	___fpclassifyf@e^0,w,c
  9629  004C60  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9630  004C62  A4D8               	btfss	status,2,c
  9631  004C64  EF36  F026         	goto	u5291
  9632  004C68  EF38  F026         	goto	u5290
  9633  004C6C                     u5291:
  9634  004C6C  EF5A  F026         	goto	l4711
  9635  004C70                     u5290:
  9636  004C70  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  9637  004C74  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9638  004C78  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9639  004C7C  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9640  004C80  0E09               	movlw	9
  9641  004C82                     u5305:
  9642  004C82  90D8               	bcf	status,0,c
  9643  004C84  3605               	rlcf	??___fpclassifyf^0,f,c
  9644  004C86  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  9645  004C88  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  9646  004C8A  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  9647  004C8C  2EE8               	decfsz	wreg,f,c
  9648  004C8E  EF41  F026         	goto	u5305
  9649  004C92  5005               	movf	??___fpclassifyf^0,w,c
  9650  004C94  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  9651  004C96  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  9652  004C98  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  9653  004C9A  B4D8               	btfsc	status,2,c
  9654  004C9C  EF52  F026         	goto	u5311
  9655  004CA0  EF55  F026         	goto	u5310
  9656  004CA4                     u5311:
  9657  004CA4  0E01               	movlw	1
  9658  004CA6  EF56  F026         	goto	u5320
  9659  004CAA                     u5310:
  9660  004CAA  0E00               	movlw	0
  9661  004CAC                     u5320:
  9662  004CAC  6E01               	movwf	?___fpclassifyf^0,c
  9663  004CAE  6A02               	clrf	(?___fpclassifyf+1)^0,c
  9664  004CB0  EF5E  F026         	goto	l1390
  9665  004CB4                     l4711:
  9666  004CB4  0E00               	movlw	0
  9667  004CB6  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9668  004CB8  0E04               	movlw	4
  9669  004CBA  6E01               	movwf	?___fpclassifyf^0,c
  9670  004CBC                     l1390:
  9671  004CBC  0012               	return		;funcret
  9672  004CBE                     __end_of___fpclassifyf:
  9673                           	callstack 0
  9674                           
  9675 ;; *************** function ___fltol *****************
  9676 ;; Defined at:
  9677 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
  9678 ;; Parameters:    Size  Location     Type
  9679 ;;  f1              4   77[COMRAM] int 
  9680 ;; Auto vars:     Size  Location     Type
  9681 ;;  exp1            1   86[COMRAM] unsigned char 
  9682 ;;  sign1           1   85[COMRAM] unsigned char 
  9683 ;; Return value:  Size  Location     Type
  9684 ;;                  4   77[COMRAM] long 
  9685 ;; Registers used:
  9686 ;;		wreg, status,2, status,0
  9687 ;; Tracked objects:
  9688 ;;		On entry : 0/0
  9689 ;;		On exit  : 0/0
  9690 ;;		Unchanged: 0/0
  9691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9692 ;;      Params:         4       0       0       0       0       0       0
  9693 ;;      Locals:         2       0       0       0       0       0       0
  9694 ;;      Temps:          4       0       0       0       0       0       0
  9695 ;;      Totals:        10       0       0       0       0       0       0
  9696 ;;Total ram usage:       10 bytes
  9697 ;; Hardware stack levels used:    1
  9698 ;; Hardware stack levels required when called:    1
  9699 ;; This function calls:
  9700 ;;		Nothing
  9701 ;; This function is called by:
  9702 ;;		_scanAdcConversion
  9703 ;;		_PWM1_setDC
  9704 ;;		_PWM2_setDC
  9705 ;;		_speedControl
  9706 ;;		_efgtoa
  9707 ;; This function uses a non-reentrant model
  9708 ;;
  9709                           
  9710                           	psect	text29
  9711  0049B6                     __ptext29:
  9712                           	callstack 0
  9713  0049B6                     ___fltol:
  9714                           	callstack 25
  9715  0049B6  3450               	rlcf	(___fltol@f1+2)^0,w,c
  9716  0049B8  3451               	rlcf	(___fltol@f1+3)^0,w,c
  9717  0049BA  6E57               	movwf	___fltol@exp1^0,c
  9718  0049BC  5057               	movf	___fltol@exp1^0,w,c
  9719  0049BE  A4D8               	btfss	status,2,c
  9720  0049C0  EFE4  F024         	goto	u5141
  9721  0049C4  EFE6  F024         	goto	u5140
  9722  0049C8                     u5141:
  9723  0049C8  EFF0  F024         	goto	l4629
  9724  0049CC                     u5140:
  9725  0049CC                     l4625:
  9726  0049CC  0E00               	movlw	0
  9727  0049CE  6E4E               	movwf	?___fltol^0,c
  9728  0049D0  0E00               	movlw	0
  9729  0049D2  6E4F               	movwf	(?___fltol+1)^0,c
  9730  0049D4  0E00               	movlw	0
  9731  0049D6  6E50               	movwf	(?___fltol+2)^0,c
  9732  0049D8  0E00               	movlw	0
  9733  0049DA  6E51               	movwf	(?___fltol+3)^0,c
  9734  0049DC  EF5D  F025         	goto	l785
  9735  0049E0                     l4629:
  9736  0049E0  C04E  F052         	movff	___fltol@f1,??___fltol
  9737  0049E4  C04F  F053         	movff	___fltol@f1+1,??___fltol+1
  9738  0049E8  C050  F054         	movff	___fltol@f1+2,??___fltol+2
  9739  0049EC  C051  F055         	movff	___fltol@f1+3,??___fltol+3
  9740  0049F0  0E20               	movlw	32
  9741  0049F2  EF00  F025         	goto	u5150
  9742  0049F6                     u5155:
  9743  0049F6  90D8               	bcf	status,0,c
  9744  0049F8  3255               	rrcf	(??___fltol+3)^0,f,c
  9745  0049FA  3254               	rrcf	(??___fltol+2)^0,f,c
  9746  0049FC  3253               	rrcf	(??___fltol+1)^0,f,c
  9747  0049FE  3252               	rrcf	??___fltol^0,f,c
  9748  004A00                     u5150:
  9749  004A00  2EE8               	decfsz	wreg,f,c
  9750  004A02  EFFB  F024         	goto	u5155
  9751  004A06  5052               	movf	??___fltol^0,w,c
  9752  004A08  6E56               	movwf	___fltol@sign1^0,c
  9753  004A0A  8E50               	bsf	(___fltol@f1+2)^0,7,c
  9754  004A0C  0EFF               	movlw	255
  9755  004A0E  164E               	andwf	___fltol@f1^0,f,c
  9756  004A10  0EFF               	movlw	255
  9757  004A12  164F               	andwf	(___fltol@f1+1)^0,f,c
  9758  004A14  0EFF               	movlw	255
  9759  004A16  1650               	andwf	(___fltol@f1+2)^0,f,c
  9760  004A18  0E00               	movlw	0
  9761  004A1A  1651               	andwf	(___fltol@f1+3)^0,f,c
  9762  004A1C  0E96               	movlw	150
  9763  004A1E  5E57               	subwf	___fltol@exp1^0,f,c
  9764  004A20  BE57               	btfsc	___fltol@exp1^0,7,c
  9765  004A22  EF17  F025         	goto	u5160
  9766  004A26  EF15  F025         	goto	u5161
  9767  004A2A                     u5161:
  9768  004A2A  EF2D  F025         	goto	l4649
  9769  004A2E                     u5160:
  9770  004A2E  5057               	movf	___fltol@exp1^0,w,c
  9771  004A30  0A80               	xorlw	128
  9772  004A32  0F97               	addlw	151
  9773  004A34  B0D8               	btfsc	status,0,c
  9774  004A36  EF1F  F025         	goto	u5171
  9775  004A3A  EF21  F025         	goto	u5170
  9776  004A3E                     u5171:
  9777  004A3E  EF23  F025         	goto	l4645
  9778  004A42                     u5170:
  9779  004A42  EFE6  F024         	goto	l4625
  9780  004A46                     l4645:
  9781  004A46  90D8               	bcf	status,0,c
  9782  004A48  3251               	rrcf	(___fltol@f1+3)^0,f,c
  9783  004A4A  3250               	rrcf	(___fltol@f1+2)^0,f,c
  9784  004A4C  324F               	rrcf	(___fltol@f1+1)^0,f,c
  9785  004A4E  324E               	rrcf	___fltol@f1^0,f,c
  9786  004A50  3E57               	incfsz	___fltol@exp1^0,f,c
  9787  004A52  EF23  F025         	goto	l4645
  9788  004A56  EF45  F025         	goto	l4659
  9789  004A5A                     l4649:
  9790  004A5A  0E1F               	movlw	31
  9791  004A5C  6457               	cpfsgt	___fltol@exp1^0,c
  9792  004A5E  EF33  F025         	goto	u5181
  9793  004A62  EF35  F025         	goto	u5180
  9794  004A66                     u5181:
  9795  004A66  EF3D  F025         	goto	l4657
  9796  004A6A                     u5180:
  9797  004A6A  EFE6  F024         	goto	l4625
  9798  004A6E                     l4655:
  9799  004A6E  90D8               	bcf	status,0,c
  9800  004A70  364E               	rlcf	___fltol@f1^0,f,c
  9801  004A72  364F               	rlcf	(___fltol@f1+1)^0,f,c
  9802  004A74  3650               	rlcf	(___fltol@f1+2)^0,f,c
  9803  004A76  3651               	rlcf	(___fltol@f1+3)^0,f,c
  9804  004A78  0657               	decf	___fltol@exp1^0,f,c
  9805  004A7A                     l4657:
  9806  004A7A  5057               	movf	___fltol@exp1^0,w,c
  9807  004A7C  A4D8               	btfss	status,2,c
  9808  004A7E  EF43  F025         	goto	u5191
  9809  004A82  EF45  F025         	goto	u5190
  9810  004A86                     u5191:
  9811  004A86  EF37  F025         	goto	l4655
  9812  004A8A                     u5190:
  9813  004A8A                     l4659:
  9814  004A8A  5056               	movf	___fltol@sign1^0,w,c
  9815  004A8C  B4D8               	btfsc	status,2,c
  9816  004A8E  EF4B  F025         	goto	u5201
  9817  004A92  EF4D  F025         	goto	u5200
  9818  004A96                     u5201:
  9819  004A96  EF55  F025         	goto	l4663
  9820  004A9A                     u5200:
  9821  004A9A  1E51               	comf	(___fltol@f1+3)^0,f,c
  9822  004A9C  1E50               	comf	(___fltol@f1+2)^0,f,c
  9823  004A9E  1E4F               	comf	(___fltol@f1+1)^0,f,c
  9824  004AA0  6C4E               	negf	___fltol@f1^0,c
  9825  004AA2  0E00               	movlw	0
  9826  004AA4  224F               	addwfc	(___fltol@f1+1)^0,f,c
  9827  004AA6  2250               	addwfc	(___fltol@f1+2)^0,f,c
  9828  004AA8  2251               	addwfc	(___fltol@f1+3)^0,f,c
  9829  004AAA                     l4663:
  9830  004AAA  C04E  F04E         	movff	___fltol@f1,?___fltol
  9831  004AAE  C04F  F04F         	movff	___fltol@f1+1,?___fltol+1
  9832  004AB2  C050  F050         	movff	___fltol@f1+2,?___fltol+2
  9833  004AB6  C051  F051         	movff	___fltol@f1+3,?___fltol+3
  9834  004ABA                     l785:
  9835  004ABA  0012               	return		;funcret
  9836  004ABC                     __end_of___fltol:
  9837                           	callstack 0
  9838                           
  9839 ;; *************** function ___flsub *****************
  9840 ;; Defined at:
  9841 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  9842 ;; Parameters:    Size  Location     Type
  9843 ;;  b               4   68[COMRAM] long 
  9844 ;;  a               4   72[COMRAM] long 
  9845 ;; Auto vars:     Size  Location     Type
  9846 ;;		None
  9847 ;; Return value:  Size  Location     Type
  9848 ;;                  4   68[COMRAM] long 
  9849 ;; Registers used:
  9850 ;;		wreg, status,2, status,0, cstack
  9851 ;; Tracked objects:
  9852 ;;		On entry : 0/0
  9853 ;;		On exit  : 0/0
  9854 ;;		Unchanged: 0/0
  9855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9856 ;;      Params:         8       0       0       0       0       0       0
  9857 ;;      Locals:         0       0       0       0       0       0       0
  9858 ;;      Temps:          0       0       0       0       0       0       0
  9859 ;;      Totals:         8       0       0       0       0       0       0
  9860 ;;Total ram usage:        8 bytes
  9861 ;; Hardware stack levels used:    1
  9862 ;; Hardware stack levels required when called:    2
  9863 ;; This function calls:
  9864 ;;		___fladd
  9865 ;; This function is called by:
  9866 ;;		_stateMachine
  9867 ;;		_efgtoa
  9868 ;; This function uses a non-reentrant model
  9869 ;;
  9870                           
  9871                           	psect	text30
  9872  00589E                     __ptext30:
  9873                           	callstack 0
  9874  00589E                     ___flsub:
  9875                           	callstack 22
  9876  00589E  0E00               	movlw	0
  9877  0058A0  1A49               	xorwf	___flsub@a^0,f,c
  9878  0058A2  0E00               	movlw	0
  9879  0058A4  1A4A               	xorwf	(___flsub@a+1)^0,f,c
  9880  0058A6  0E00               	movlw	0
  9881  0058A8  1A4B               	xorwf	(___flsub@a+2)^0,f,c
  9882  0058AA  0E80               	movlw	128
  9883  0058AC  1A4C               	xorwf	(___flsub@a+3)^0,f,c
  9884  0058AE  C045  F035         	movff	___flsub@b,___fladd@b
  9885  0058B2  C046  F036         	movff	___flsub@b+1,___fladd@b+1
  9886  0058B6  C047  F037         	movff	___flsub@b+2,___fladd@b+2
  9887  0058BA  C048  F038         	movff	___flsub@b+3,___fladd@b+3
  9888  0058BE  C049  F039         	movff	___flsub@a,___fladd@a
  9889  0058C2  C04A  F03A         	movff	___flsub@a+1,___fladd@a+1
  9890  0058C6  C04B  F03B         	movff	___flsub@a+2,___fladd@a+2
  9891  0058CA  C04C  F03C         	movff	___flsub@a+3,___fladd@a+3
  9892  0058CE  EC5F  F015         	call	___fladd	;wreg free
  9893  0058D2  C035  F045         	movff	?___fladd,?___flsub
  9894  0058D6  C036  F046         	movff	?___fladd+1,?___flsub+1
  9895  0058DA  C037  F047         	movff	?___fladd+2,?___flsub+2
  9896  0058DE  C038  F048         	movff	?___fladd+3,?___flsub+3
  9897  0058E2  0012               	return		;funcret
  9898  0058E4                     __end_of___flsub:
  9899                           	callstack 0
  9900                           
  9901 ;; *************** function ___fladd *****************
  9902 ;; Defined at:
  9903 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  9904 ;; Parameters:    Size  Location     Type
  9905 ;;  b               4   52[COMRAM] long 
  9906 ;;  a               4   56[COMRAM] long 
  9907 ;; Auto vars:     Size  Location     Type
  9908 ;;  grs             1   67[COMRAM] unsigned char 
  9909 ;;  bexp            1   66[COMRAM] unsigned char 
  9910 ;;  aexp            1   65[COMRAM] unsigned char 
  9911 ;;  signs           1   64[COMRAM] unsigned char 
  9912 ;; Return value:  Size  Location     Type
  9913 ;;                  4   52[COMRAM] unsigned char 
  9914 ;; Registers used:
  9915 ;;		wreg, status,2, status,0
  9916 ;; Tracked objects:
  9917 ;;		On entry : 0/0
  9918 ;;		On exit  : 0/0
  9919 ;;		Unchanged: 0/0
  9920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9921 ;;      Params:         8       0       0       0       0       0       0
  9922 ;;      Locals:         4       0       0       0       0       0       0
  9923 ;;      Temps:          4       0       0       0       0       0       0
  9924 ;;      Totals:        16       0       0       0       0       0       0
  9925 ;;Total ram usage:       16 bytes
  9926 ;; Hardware stack levels used:    1
  9927 ;; Hardware stack levels required when called:    1
  9928 ;; This function calls:
  9929 ;;		Nothing
  9930 ;; This function is called by:
  9931 ;;		_stateMachine
  9932 ;;		_speedControl
  9933 ;;		___flsub
  9934 ;;		_efgtoa
  9935 ;; This function uses a non-reentrant model
  9936 ;;
  9937                           
  9938                           	psect	text31
  9939  002ABE                     __ptext31:
  9940                           	callstack 0
  9941  002ABE                     ___fladd:
  9942                           	callstack 25
  9943  002ABE  5038               	movf	(___fladd@b+3)^0,w,c
  9944  002AC0  0B80               	andlw	128
  9945  002AC2  6E41               	movwf	___fladd@signs^0,c
  9946  002AC4  5038               	movf	(___fladd@b+3)^0,w,c
  9947  002AC6  2438               	addwf	(___fladd@b+3)^0,w,c
  9948  002AC8  6E43               	movwf	___fladd@bexp^0,c
  9949  002ACA  AE37               	btfss	(___fladd@b+2)^0,7,c
  9950  002ACC  EF6A  F015         	goto	u3951
  9951  002AD0  EF6C  F015         	goto	u3950
  9952  002AD4                     u3951:
  9953  002AD4  EF6D  F015         	goto	l3919
  9954  002AD8                     u3950:
  9955  002AD8  8043               	bsf	___fladd@bexp^0,0,c
  9956  002ADA                     l3919:
  9957  002ADA  5043               	movf	___fladd@bexp^0,w,c
  9958  002ADC  B4D8               	btfsc	status,2,c
  9959  002ADE  EF73  F015         	goto	u3961
  9960  002AE2  EF75  F015         	goto	u3960
  9961  002AE6                     u3961:
  9962  002AE6  EF8A  F015         	goto	l3929
  9963  002AEA                     u3960:
  9964  002AEA  2843               	incf	___fladd@bexp^0,w,c
  9965  002AEC  A4D8               	btfss	status,2,c
  9966  002AEE  EF7B  F015         	goto	u3971
  9967  002AF2  EF7D  F015         	goto	u3970
  9968  002AF6                     u3971:
  9969  002AF6  EF85  F015         	goto	l3925
  9970  002AFA                     u3970:
  9971  002AFA  0E00               	movlw	0
  9972  002AFC  6E35               	movwf	___fladd@b^0,c
  9973  002AFE  0E00               	movlw	0
  9974  002B00  6E36               	movwf	(___fladd@b+1)^0,c
  9975  002B02  0E00               	movlw	0
  9976  002B04  6E37               	movwf	(___fladd@b+2)^0,c
  9977  002B06  0E00               	movlw	0
  9978  002B08  6E38               	movwf	(___fladd@b+3)^0,c
  9979  002B0A                     l3925:
  9980  002B0A  8E37               	bsf	(___fladd@b+2)^0,7,c
  9981  002B0C  0E00               	movlw	0
  9982  002B0E  6E38               	movwf	(___fladd@b+3)^0,c
  9983  002B10  EF92  F015         	goto	l3931
  9984  002B14                     l3929:
  9985  002B14  0E00               	movlw	0
  9986  002B16  6E35               	movwf	___fladd@b^0,c
  9987  002B18  0E00               	movlw	0
  9988  002B1A  6E36               	movwf	(___fladd@b+1)^0,c
  9989  002B1C  0E00               	movlw	0
  9990  002B1E  6E37               	movwf	(___fladd@b+2)^0,c
  9991  002B20  0E00               	movlw	0
  9992  002B22  6E38               	movwf	(___fladd@b+3)^0,c
  9993  002B24                     l3931:
  9994  002B24  503C               	movf	(___fladd@a+3)^0,w,c
  9995  002B26  0B80               	andlw	128
  9996  002B28  6E42               	movwf	___fladd@aexp^0,c
  9997  002B2A  5041               	movf	___fladd@signs^0,w,c
  9998  002B2C  1842               	xorwf	___fladd@aexp^0,w,c
  9999  002B2E  B4D8               	btfsc	status,2,c
 10000  002B30  EF9C  F015         	goto	u3981
 10001  002B34  EF9E  F015         	goto	u3980
 10002  002B38                     u3981:
 10003  002B38  EF9F  F015         	goto	l3937
 10004  002B3C                     u3980:
 10005  002B3C  8C41               	bsf	___fladd@signs^0,6,c
 10006  002B3E                     l3937:
 10007  002B3E  503C               	movf	(___fladd@a+3)^0,w,c
 10008  002B40  243C               	addwf	(___fladd@a+3)^0,w,c
 10009  002B42  6E42               	movwf	___fladd@aexp^0,c
 10010  002B44  AE3B               	btfss	(___fladd@a+2)^0,7,c
 10011  002B46  EFA7  F015         	goto	u3991
 10012  002B4A  EFA9  F015         	goto	u3990
 10013  002B4E                     u3991:
 10014  002B4E  EFAA  F015         	goto	l3943
 10015  002B52                     u3990:
 10016  002B52  8042               	bsf	___fladd@aexp^0,0,c
 10017  002B54                     l3943:
 10018  002B54  5042               	movf	___fladd@aexp^0,w,c
 10019  002B56  B4D8               	btfsc	status,2,c
 10020  002B58  EFB0  F015         	goto	u4001
 10021  002B5C  EFB2  F015         	goto	u4000
 10022  002B60                     u4001:
 10023  002B60  EFC7  F015         	goto	l3953
 10024  002B64                     u4000:
 10025  002B64  2842               	incf	___fladd@aexp^0,w,c
 10026  002B66  A4D8               	btfss	status,2,c
 10027  002B68  EFB8  F015         	goto	u4011
 10028  002B6C  EFBA  F015         	goto	u4010
 10029  002B70                     u4011:
 10030  002B70  EFC2  F015         	goto	l3949
 10031  002B74                     u4010:
 10032  002B74  0E00               	movlw	0
 10033  002B76  6E39               	movwf	___fladd@a^0,c
 10034  002B78  0E00               	movlw	0
 10035  002B7A  6E3A               	movwf	(___fladd@a+1)^0,c
 10036  002B7C  0E00               	movlw	0
 10037  002B7E  6E3B               	movwf	(___fladd@a+2)^0,c
 10038  002B80  0E00               	movlw	0
 10039  002B82  6E3C               	movwf	(___fladd@a+3)^0,c
 10040  002B84                     l3949:
 10041  002B84  8E3B               	bsf	(___fladd@a+2)^0,7,c
 10042  002B86  0E00               	movlw	0
 10043  002B88  6E3C               	movwf	(___fladd@a+3)^0,c
 10044  002B8A  EFCF  F015         	goto	l3955
 10045  002B8E                     l3953:
 10046  002B8E  0E00               	movlw	0
 10047  002B90  6E39               	movwf	___fladd@a^0,c
 10048  002B92  0E00               	movlw	0
 10049  002B94  6E3A               	movwf	(___fladd@a+1)^0,c
 10050  002B96  0E00               	movlw	0
 10051  002B98  6E3B               	movwf	(___fladd@a+2)^0,c
 10052  002B9A  0E00               	movlw	0
 10053  002B9C  6E3C               	movwf	(___fladd@a+3)^0,c
 10054  002B9E                     l3955:
 10055  002B9E  5043               	movf	___fladd@bexp^0,w,c
 10056  002BA0  5C42               	subwf	___fladd@aexp^0,w,c
 10057  002BA2  B0D8               	btfsc	status,0,c
 10058  002BA4  EFD6  F015         	goto	u4021
 10059  002BA8  EFD8  F015         	goto	u4020
 10060  002BAC                     u4021:
 10061  002BAC  EFFF  F015         	goto	l3991
 10062  002BB0                     u4020:
 10063  002BB0  AC41               	btfss	___fladd@signs^0,6,c
 10064  002BB2  EFDD  F015         	goto	u4031
 10065  002BB6  EFDF  F015         	goto	u4030
 10066  002BBA                     u4031:
 10067  002BBA  EFE1  F015         	goto	l3961
 10068  002BBE                     u4030:
 10069  002BBE  0E80               	movlw	128
 10070  002BC0  1A41               	xorwf	___fladd@signs^0,f,c
 10071  002BC2                     l3961:
 10072  002BC2  C043  F044         	movff	___fladd@bexp,___fladd@grs
 10073  002BC6  C042  F043         	movff	___fladd@aexp,___fladd@bexp
 10074  002BCA  C044  F042         	movff	___fladd@grs,___fladd@aexp
 10075  002BCE  C035  F044         	movff	___fladd@b,___fladd@grs
 10076  002BD2  C039  F035         	movff	___fladd@a,___fladd@b
 10077  002BD6  C044  F039         	movff	___fladd@grs,___fladd@a
 10078  002BDA  C036  F044         	movff	___fladd@b+1,___fladd@grs
 10079  002BDE  C03A  F036         	movff	___fladd@a+1,___fladd@b+1
 10080  002BE2  C044  F03A         	movff	___fladd@grs,___fladd@a+1
 10081  002BE6  C037  F044         	movff	___fladd@b+2,___fladd@grs
 10082  002BEA  C03B  F037         	movff	___fladd@a+2,___fladd@b+2
 10083  002BEE  C044  F03B         	movff	___fladd@grs,___fladd@a+2
 10084  002BF2  C038  F044         	movff	___fladd@b+3,___fladd@grs
 10085  002BF6  C03C  F038         	movff	___fladd@a+3,___fladd@b+3
 10086  002BFA  C044  F03C         	movff	___fladd@grs,___fladd@a+3
 10087  002BFE                     l3991:
 10088  002BFE  0E00               	movlw	0
 10089  002C00  6E44               	movwf	___fladd@grs^0,c
 10090  002C02  5043               	movf	___fladd@bexp^0,w,c
 10091  002C04  C042  F03D         	movff	___fladd@aexp,??___fladd
 10092  002C08  6A3E               	clrf	(??___fladd+1)^0,c
 10093  002C0A  5E3D               	subwf	??___fladd^0,f,c
 10094  002C0C  0E00               	movlw	0
 10095  002C0E  5A3E               	subwfb	(??___fladd+1)^0,f,c
 10096  002C10  BE3E               	btfsc	(??___fladd+1)^0,7,c
 10097  002C12  EF14  F016         	goto	u4041
 10098  002C16  503E               	movf	(??___fladd+1)^0,w,c
 10099  002C18  E109               	bnz	u4040
 10100  002C1A  0E1A               	movlw	26
 10101  002C1C  5C3D               	subwf	??___fladd^0,w,c
 10102  002C1E  A0D8               	btfss	status,0,c
 10103  002C20  EF14  F016         	goto	u4041
 10104  002C24  EF16  F016         	goto	u4040
 10105  002C28                     u4041:
 10106  002C28  EF4D  F016         	goto	l1017
 10107  002C2C                     u4040:
 10108  002C2C  5035               	movf	___fladd@b^0,w,c
 10109  002C2E  1036               	iorwf	(___fladd@b+1)^0,w,c
 10110  002C30  1037               	iorwf	(___fladd@b+2)^0,w,c
 10111  002C32  1038               	iorwf	(___fladd@b+3)^0,w,c
 10112  002C34  A4D8               	btfss	status,2,c
 10113  002C36  EF1F  F016         	goto	u4051
 10114  002C3A  EF22  F016         	goto	u4050
 10115  002C3E                     u4051:
 10116  002C3E  0E01               	movlw	1
 10117  002C40  EF23  F016         	goto	u4060
 10118  002C44                     u4050:
 10119  002C44  0E00               	movlw	0
 10120  002C46                     u4060:
 10121  002C46  6E44               	movwf	___fladd@grs^0,c
 10122  002C48  0E00               	movlw	0
 10123  002C4A  6E35               	movwf	___fladd@b^0,c
 10124  002C4C  0E00               	movlw	0
 10125  002C4E  6E36               	movwf	(___fladd@b+1)^0,c
 10126  002C50  0E00               	movlw	0
 10127  002C52  6E37               	movwf	(___fladd@b+2)^0,c
 10128  002C54  0E00               	movlw	0
 10129  002C56  6E38               	movwf	(___fladd@b+3)^0,c
 10130  002C58  C042  F043         	movff	___fladd@aexp,___fladd@bexp
 10131  002C5C  EF56  F016         	goto	l1016
 10132  002C60                     l1018:
 10133  002C60  A044               	btfss	___fladd@grs^0,0,c
 10134  002C62  EF35  F016         	goto	u4071
 10135  002C66  EF37  F016         	goto	u4070
 10136  002C6A                     u4071:
 10137  002C6A  EF3D  F016         	goto	l4003
 10138  002C6E                     u4070:
 10139  002C6E  90D8               	bcf	status,0,c
 10140  002C70  3044               	rrcf	___fladd@grs^0,w,c
 10141  002C72  0901               	iorlw	1
 10142  002C74  6E44               	movwf	___fladd@grs^0,c
 10143  002C76  EF3F  F016         	goto	l4005
 10144  002C7A                     l4003:
 10145  002C7A  90D8               	bcf	status,0,c
 10146  002C7C  3244               	rrcf	___fladd@grs^0,f,c
 10147  002C7E                     l4005:
 10148  002C7E  A035               	btfss	___fladd@b^0,0,c
 10149  002C80  EF44  F016         	goto	u4081
 10150  002C84  EF46  F016         	goto	u4080
 10151  002C88                     u4081:
 10152  002C88  EF47  F016         	goto	l4009
 10153  002C8C                     u4080:
 10154  002C8C  8E44               	bsf	___fladd@grs^0,7,c
 10155  002C8E                     l4009:
 10156  002C8E  3438               	rlcf	(___fladd@b+3)^0,w,c
 10157  002C90  3238               	rrcf	(___fladd@b+3)^0,f,c
 10158  002C92  3237               	rrcf	(___fladd@b+2)^0,f,c
 10159  002C94  3236               	rrcf	(___fladd@b+1)^0,f,c
 10160  002C96  3235               	rrcf	___fladd@b^0,f,c
 10161  002C98  2A43               	incf	___fladd@bexp^0,f,c
 10162  002C9A                     l1017:
 10163  002C9A  5042               	movf	___fladd@aexp^0,w,c
 10164  002C9C  5C43               	subwf	___fladd@bexp^0,w,c
 10165  002C9E  A0D8               	btfss	status,0,c
 10166  002CA0  EF54  F016         	goto	u4091
 10167  002CA4  EF56  F016         	goto	u4090
 10168  002CA8                     u4091:
 10169  002CA8  EF30  F016         	goto	l1018
 10170  002CAC                     u4090:
 10171  002CAC                     l1016:
 10172  002CAC  BC41               	btfsc	___fladd@signs^0,6,c
 10173  002CAE  EF5B  F016         	goto	u4101
 10174  002CB2  EF5D  F016         	goto	u4100
 10175  002CB6                     u4101:
 10176  002CB6  EF9D  F016         	goto	l4037
 10177  002CBA                     u4100:
 10178  002CBA  5043               	movf	___fladd@bexp^0,w,c
 10179  002CBC  A4D8               	btfss	status,2,c
 10180  002CBE  EF63  F016         	goto	u4111
 10181  002CC2  EF65  F016         	goto	u4110
 10182  002CC6                     u4111:
 10183  002CC6  EF6F  F016         	goto	l4019
 10184  002CCA                     u4110:
 10185  002CCA  0E00               	movlw	0
 10186  002CCC  6E35               	movwf	?___fladd^0,c
 10187  002CCE  0E00               	movlw	0
 10188  002CD0  6E36               	movwf	(?___fladd+1)^0,c
 10189  002CD2  0E00               	movlw	0
 10190  002CD4  6E37               	movwf	(?___fladd+2)^0,c
 10191  002CD6  0E00               	movlw	0
 10192  002CD8  6E38               	movwf	(?___fladd+3)^0,c
 10193  002CDA  EFBE  F017         	goto	l1025
 10194  002CDE                     l4019:
 10195  002CDE  5039               	movf	___fladd@a^0,w,c
 10196  002CE0  2635               	addwf	___fladd@b^0,f,c
 10197  002CE2  503A               	movf	(___fladd@a+1)^0,w,c
 10198  002CE4  2236               	addwfc	(___fladd@b+1)^0,f,c
 10199  002CE6  503B               	movf	(___fladd@a+2)^0,w,c
 10200  002CE8  2237               	addwfc	(___fladd@b+2)^0,f,c
 10201  002CEA  503C               	movf	(___fladd@a+3)^0,w,c
 10202  002CEC  2238               	addwfc	(___fladd@b+3)^0,f,c
 10203  002CEE  A038               	btfss	(___fladd@b+3)^0,0,c
 10204  002CF0  EF7C  F016         	goto	u4121
 10205  002CF4  EF7E  F016         	goto	u4120
 10206  002CF8                     u4121:
 10207  002CF8  EF2A  F017         	goto	l4073
 10208  002CFC                     u4120:
 10209  002CFC  A044               	btfss	___fladd@grs^0,0,c
 10210  002CFE  EF83  F016         	goto	u4131
 10211  002D02  EF85  F016         	goto	u4130
 10212  002D06                     u4131:
 10213  002D06  EF8B  F016         	goto	l4027
 10214  002D0A                     u4130:
 10215  002D0A  90D8               	bcf	status,0,c
 10216  002D0C  3044               	rrcf	___fladd@grs^0,w,c
 10217  002D0E  0901               	iorlw	1
 10218  002D10  6E44               	movwf	___fladd@grs^0,c
 10219  002D12  EF8D  F016         	goto	l4029
 10220  002D16                     l4027:
 10221  002D16  90D8               	bcf	status,0,c
 10222  002D18  3244               	rrcf	___fladd@grs^0,f,c
 10223  002D1A                     l4029:
 10224  002D1A  A035               	btfss	___fladd@b^0,0,c
 10225  002D1C  EF92  F016         	goto	u4141
 10226  002D20  EF94  F016         	goto	u4140
 10227  002D24                     u4141:
 10228  002D24  EF95  F016         	goto	l4033
 10229  002D28                     u4140:
 10230  002D28  8E44               	bsf	___fladd@grs^0,7,c
 10231  002D2A                     l4033:
 10232  002D2A  3438               	rlcf	(___fladd@b+3)^0,w,c
 10233  002D2C  3238               	rrcf	(___fladd@b+3)^0,f,c
 10234  002D2E  3237               	rrcf	(___fladd@b+2)^0,f,c
 10235  002D30  3236               	rrcf	(___fladd@b+1)^0,f,c
 10236  002D32  3235               	rrcf	___fladd@b^0,f,c
 10237  002D34  2A43               	incf	___fladd@bexp^0,f,c
 10238  002D36  EF2A  F017         	goto	l4073
 10239  002D3A                     l4037:
 10240  002D3A  5039               	movf	___fladd@a^0,w,c
 10241  002D3C  5C35               	subwf	___fladd@b^0,w,c
 10242  002D3E  503A               	movf	(___fladd@a+1)^0,w,c
 10243  002D40  5836               	subwfb	(___fladd@b+1)^0,w,c
 10244  002D42  503B               	movf	(___fladd@a+2)^0,w,c
 10245  002D44  5837               	subwfb	(___fladd@b+2)^0,w,c
 10246  002D46  5038               	movf	(___fladd@b+3)^0,w,c
 10247  002D48  0A80               	xorlw	128
 10248  002D4A  6E3D               	movwf	??___fladd^0,c
 10249  002D4C  503C               	movf	(___fladd@a+3)^0,w,c
 10250  002D4E  0A80               	xorlw	128
 10251  002D50  583D               	subwfb	??___fladd^0,w,c
 10252  002D52  B0D8               	btfsc	status,0,c
 10253  002D54  EFAE  F016         	goto	u4151
 10254  002D58  EFB0  F016         	goto	u4150
 10255  002D5C                     u4151:
 10256  002D5C  EFDB  F016         	goto	l4047
 10257  002D60                     u4150:
 10258  002D60  5035               	movf	___fladd@b^0,w,c
 10259  002D62  5C39               	subwf	___fladd@a^0,w,c
 10260  002D64  6E3D               	movwf	??___fladd^0,c
 10261  002D66  5036               	movf	(___fladd@b+1)^0,w,c
 10262  002D68  583A               	subwfb	(___fladd@a+1)^0,w,c
 10263  002D6A  6E3E               	movwf	(??___fladd+1)^0,c
 10264  002D6C  5037               	movf	(___fladd@b+2)^0,w,c
 10265  002D6E  583B               	subwfb	(___fladd@a+2)^0,w,c
 10266  002D70  6E3F               	movwf	(??___fladd+2)^0,c
 10267  002D72  5038               	movf	(___fladd@b+3)^0,w,c
 10268  002D74  583C               	subwfb	(___fladd@a+3)^0,w,c
 10269  002D76  6E40               	movwf	(??___fladd+3)^0,c
 10270  002D78  0EFF               	movlw	255
 10271  002D7A  243D               	addwf	??___fladd^0,w,c
 10272  002D7C  6E35               	movwf	___fladd@b^0,c
 10273  002D7E  0EFF               	movlw	255
 10274  002D80  203E               	addwfc	(??___fladd+1)^0,w,c
 10275  002D82  6E36               	movwf	(___fladd@b+1)^0,c
 10276  002D84  0EFF               	movlw	255
 10277  002D86  203F               	addwfc	(??___fladd+2)^0,w,c
 10278  002D88  6E37               	movwf	(___fladd@b+2)^0,c
 10279  002D8A  0EFF               	movlw	255
 10280  002D8C  2040               	addwfc	(??___fladd+3)^0,w,c
 10281  002D8E  6E38               	movwf	(___fladd@b+3)^0,c
 10282  002D90  0E80               	movlw	128
 10283  002D92  1A41               	xorwf	___fladd@signs^0,f,c
 10284  002D94  6C44               	negf	___fladd@grs^0,c
 10285  002D96  5044               	movf	___fladd@grs^0,w,c
 10286  002D98  A4D8               	btfss	status,2,c
 10287  002D9A  EFD1  F016         	goto	u4161
 10288  002D9E  EFD3  F016         	goto	u4160
 10289  002DA2                     u4161:
 10290  002DA2  EFE3  F016         	goto	l1033
 10291  002DA6                     u4160:
 10292  002DA6  0E01               	movlw	1
 10293  002DA8  2635               	addwf	___fladd@b^0,f,c
 10294  002DAA  0E00               	movlw	0
 10295  002DAC  2236               	addwfc	(___fladd@b+1)^0,f,c
 10296  002DAE  2237               	addwfc	(___fladd@b+2)^0,f,c
 10297  002DB0  2238               	addwfc	(___fladd@b+3)^0,f,c
 10298  002DB2  EFE3  F016         	goto	l1033
 10299  002DB6                     l4047:
 10300  002DB6  5039               	movf	___fladd@a^0,w,c
 10301  002DB8  5E35               	subwf	___fladd@b^0,f,c
 10302  002DBA  503A               	movf	(___fladd@a+1)^0,w,c
 10303  002DBC  5A36               	subwfb	(___fladd@b+1)^0,f,c
 10304  002DBE  503B               	movf	(___fladd@a+2)^0,w,c
 10305  002DC0  5A37               	subwfb	(___fladd@b+2)^0,f,c
 10306  002DC2  503C               	movf	(___fladd@a+3)^0,w,c
 10307  002DC4  5A38               	subwfb	(___fladd@b+3)^0,f,c
 10308  002DC6                     l1033:
 10309  002DC6  5035               	movf	___fladd@b^0,w,c
 10310  002DC8  1036               	iorwf	(___fladd@b+1)^0,w,c
 10311  002DCA  1037               	iorwf	(___fladd@b+2)^0,w,c
 10312  002DCC  1038               	iorwf	(___fladd@b+3)^0,w,c
 10313  002DCE  A4D8               	btfss	status,2,c
 10314  002DD0  EFEC  F016         	goto	u4171
 10315  002DD4  EFEE  F016         	goto	u4170
 10316  002DD8                     u4171:
 10317  002DD8  EF23  F017         	goto	l4071
 10318  002DDC                     u4170:
 10319  002DDC  5044               	movf	___fladd@grs^0,w,c
 10320  002DDE  A4D8               	btfss	status,2,c
 10321  002DE0  EFF4  F016         	goto	u4181
 10322  002DE4  EFF6  F016         	goto	u4180
 10323  002DE8                     u4181:
 10324  002DE8  EF23  F017         	goto	l4071
 10325  002DEC                     u4180:
 10326  002DEC  0E00               	movlw	0
 10327  002DEE  6E35               	movwf	?___fladd^0,c
 10328  002DF0  0E00               	movlw	0
 10329  002DF2  6E36               	movwf	(?___fladd+1)^0,c
 10330  002DF4  0E00               	movlw	0
 10331  002DF6  6E37               	movwf	(?___fladd+2)^0,c
 10332  002DF8  0E00               	movlw	0
 10333  002DFA  6E38               	movwf	(?___fladd+3)^0,c
 10334  002DFC  EFBE  F017         	goto	l1025
 10335  002E00                     l4055:
 10336  002E00  90D8               	bcf	status,0,c
 10337  002E02  3635               	rlcf	___fladd@b^0,f,c
 10338  002E04  3636               	rlcf	(___fladd@b+1)^0,f,c
 10339  002E06  3637               	rlcf	(___fladd@b+2)^0,f,c
 10340  002E08  3638               	rlcf	(___fladd@b+3)^0,f,c
 10341  002E0A  AE44               	btfss	___fladd@grs^0,7,c
 10342  002E0C  EF0A  F017         	goto	u4191
 10343  002E10  EF0C  F017         	goto	u4190
 10344  002E14                     u4191:
 10345  002E14  EF0D  F017         	goto	l4061
 10346  002E18                     u4190:
 10347  002E18  8035               	bsf	___fladd@b^0,0,c
 10348  002E1A                     l4061:
 10349  002E1A  A044               	btfss	___fladd@grs^0,0,c
 10350  002E1C  EF12  F017         	goto	u4201
 10351  002E20  EF14  F017         	goto	u4200
 10352  002E24                     u4201:
 10353  002E24  EF18  F017         	goto	l4065
 10354  002E28                     u4200:
 10355  002E28  80D8               	bsf	status,0,c
 10356  002E2A  3644               	rlcf	___fladd@grs^0,f,c
 10357  002E2C  EF1A  F017         	goto	l4067
 10358  002E30                     l4065:
 10359  002E30  90D8               	bcf	status,0,c
 10360  002E32  3644               	rlcf	___fladd@grs^0,f,c
 10361  002E34                     l4067:
 10362  002E34  5043               	movf	___fladd@bexp^0,w,c
 10363  002E36  B4D8               	btfsc	status,2,c
 10364  002E38  EF20  F017         	goto	u4211
 10365  002E3C  EF22  F017         	goto	u4210
 10366  002E40                     u4211:
 10367  002E40  EF23  F017         	goto	l4071
 10368  002E44                     u4210:
 10369  002E44  0643               	decf	___fladd@bexp^0,f,c
 10370  002E46                     l4071:
 10371  002E46  AE37               	btfss	(___fladd@b+2)^0,7,c
 10372  002E48  EF28  F017         	goto	u4221
 10373  002E4C  EF2A  F017         	goto	u4220
 10374  002E50                     u4221:
 10375  002E50  EF00  F017         	goto	l4055
 10376  002E54                     u4220:
 10377  002E54                     l4073:
 10378  002E54  0E00               	movlw	0
 10379  002E56  6E42               	movwf	___fladd@aexp^0,c
 10380  002E58  AE44               	btfss	___fladd@grs^0,7,c
 10381  002E5A  EF31  F017         	goto	u4231
 10382  002E5E  EF33  F017         	goto	u4230
 10383  002E62                     u4231:
 10384  002E62  EF4B  F017         	goto	l1042
 10385  002E66                     u4230:
 10386  002E66  C044  F03D         	movff	___fladd@grs,??___fladd
 10387  002E6A  0E7F               	movlw	127
 10388  002E6C  163D               	andwf	??___fladd^0,f,c
 10389  002E6E  B4D8               	btfsc	status,2,c
 10390  002E70  EF3C  F017         	goto	u4241
 10391  002E74  EF3E  F017         	goto	u4240
 10392  002E78                     u4241:
 10393  002E78  EF42  F017         	goto	l1043
 10394  002E7C                     u4240:
 10395  002E7C                     l4079:
 10396  002E7C  0E01               	movlw	1
 10397  002E7E  6E42               	movwf	___fladd@aexp^0,c
 10398  002E80  EF4B  F017         	goto	l1042
 10399  002E84                     l1043:
 10400  002E84  A035               	btfss	___fladd@b^0,0,c
 10401  002E86  EF47  F017         	goto	u4251
 10402  002E8A  EF49  F017         	goto	u4250
 10403  002E8E                     u4251:
 10404  002E8E  EF4B  F017         	goto	l1042
 10405  002E92                     u4250:
 10406  002E92  EF3E  F017         	goto	l4079
 10407  002E96                     l1042:
 10408  002E96  5042               	movf	___fladd@aexp^0,w,c
 10409  002E98  B4D8               	btfsc	status,2,c
 10410  002E9A  EF51  F017         	goto	u4261
 10411  002E9E  EF53  F017         	goto	u4260
 10412  002EA2                     u4261:
 10413  002EA2  EF7E  F017         	goto	l4091
 10414  002EA6                     u4260:
 10415  002EA6  0E01               	movlw	1
 10416  002EA8  2635               	addwf	___fladd@b^0,f,c
 10417  002EAA  0E00               	movlw	0
 10418  002EAC  2236               	addwfc	(___fladd@b+1)^0,f,c
 10419  002EAE  2237               	addwfc	(___fladd@b+2)^0,f,c
 10420  002EB0  2238               	addwfc	(___fladd@b+3)^0,f,c
 10421  002EB2  A038               	btfss	(___fladd@b+3)^0,0,c
 10422  002EB4  EF5E  F017         	goto	u4271
 10423  002EB8  EF60  F017         	goto	u4270
 10424  002EBC                     u4271:
 10425  002EBC  EF7E  F017         	goto	l4091
 10426  002EC0                     u4270:
 10427  002EC0  C035  F03D         	movff	___fladd@b,??___fladd
 10428  002EC4  C036  F03E         	movff	___fladd@b+1,??___fladd+1
 10429  002EC8  C037  F03F         	movff	___fladd@b+2,??___fladd+2
 10430  002ECC  C038  F040         	movff	___fladd@b+3,??___fladd+3
 10431  002ED0  3440               	rlcf	(??___fladd+3)^0,w,c
 10432  002ED2  3240               	rrcf	(??___fladd+3)^0,f,c
 10433  002ED4  323F               	rrcf	(??___fladd+2)^0,f,c
 10434  002ED6  323E               	rrcf	(??___fladd+1)^0,f,c
 10435  002ED8  323D               	rrcf	??___fladd^0,f,c
 10436  002EDA  C03D  F035         	movff	??___fladd,___fladd@b
 10437  002EDE  C03E  F036         	movff	??___fladd+1,___fladd@b+1
 10438  002EE2  C03F  F037         	movff	??___fladd+2,___fladd@b+2
 10439  002EE6  C040  F038         	movff	??___fladd+3,___fladd@b+3
 10440  002EEA  2843               	incf	___fladd@bexp^0,w,c
 10441  002EEC  B4D8               	btfsc	status,2,c
 10442  002EEE  EF7B  F017         	goto	u4281
 10443  002EF2  EF7D  F017         	goto	u4280
 10444  002EF6                     u4281:
 10445  002EF6  EF7E  F017         	goto	l4091
 10446  002EFA                     u4280:
 10447  002EFA  2A43               	incf	___fladd@bexp^0,f,c
 10448  002EFC                     l4091:
 10449  002EFC  2843               	incf	___fladd@bexp^0,w,c
 10450  002EFE  B4D8               	btfsc	status,2,c
 10451  002F00  EF84  F017         	goto	u4291
 10452  002F04  EF86  F017         	goto	u4290
 10453  002F08                     u4291:
 10454  002F08  EF8E  F017         	goto	l4095
 10455  002F0C                     u4290:
 10456  002F0C  5043               	movf	___fladd@bexp^0,w,c
 10457  002F0E  A4D8               	btfss	status,2,c
 10458  002F10  EF8C  F017         	goto	u4301
 10459  002F14  EF8E  F017         	goto	u4300
 10460  002F18                     u4301:
 10461  002F18  EFA0  F017         	goto	l4099
 10462  002F1C                     u4300:
 10463  002F1C                     l4095:
 10464  002F1C  0E00               	movlw	0
 10465  002F1E  6E35               	movwf	___fladd@b^0,c
 10466  002F20  0E00               	movlw	0
 10467  002F22  6E36               	movwf	(___fladd@b+1)^0,c
 10468  002F24  0E00               	movlw	0
 10469  002F26  6E37               	movwf	(___fladd@b+2)^0,c
 10470  002F28  0E00               	movlw	0
 10471  002F2A  6E38               	movwf	(___fladd@b+3)^0,c
 10472  002F2C  5043               	movf	___fladd@bexp^0,w,c
 10473  002F2E  A4D8               	btfss	status,2,c
 10474  002F30  EF9C  F017         	goto	u4311
 10475  002F34  EF9E  F017         	goto	u4310
 10476  002F38                     u4311:
 10477  002F38  EFA0  F017         	goto	l4099
 10478  002F3C                     u4310:
 10479  002F3C  0E00               	movlw	0
 10480  002F3E  6E41               	movwf	___fladd@signs^0,c
 10481  002F40                     l4099:
 10482  002F40  A043               	btfss	___fladd@bexp^0,0,c
 10483  002F42  EFA5  F017         	goto	u4321
 10484  002F46  EFA7  F017         	goto	u4320
 10485  002F4A                     u4321:
 10486  002F4A  EFAA  F017         	goto	l4103
 10487  002F4E                     u4320:
 10488  002F4E  8E37               	bsf	(___fladd@b+2)^0,7,c
 10489  002F50  EFAB  F017         	goto	l4105
 10490  002F54                     l4103:
 10491  002F54  9E37               	bcf	(___fladd@b+2)^0,7,c
 10492  002F56                     l4105:
 10493  002F56  90D8               	bcf	status,0,c
 10494  002F58  3043               	rrcf	___fladd@bexp^0,w,c
 10495  002F5A  6E38               	movwf	(___fladd@b+3)^0,c
 10496  002F5C  AE41               	btfss	___fladd@signs^0,7,c
 10497  002F5E  EFB3  F017         	goto	u4331
 10498  002F62  EFB5  F017         	goto	u4330
 10499  002F66                     u4331:
 10500  002F66  EFB6  F017         	goto	l4111
 10501  002F6A                     u4330:
 10502  002F6A  8E38               	bsf	(___fladd@b+3)^0,7,c
 10503  002F6C                     l4111:
 10504  002F6C  C035  F035         	movff	___fladd@b,?___fladd
 10505  002F70  C036  F036         	movff	___fladd@b+1,?___fladd+1
 10506  002F74  C037  F037         	movff	___fladd@b+2,?___fladd+2
 10507  002F78  C038  F038         	movff	___fladd@b+3,?___fladd+3
 10508  002F7C                     l1025:
 10509  002F7C  0012               	return		;funcret
 10510  002F7E                     __end_of___fladd:
 10511                           	callstack 0
 10512                           
 10513 ;; *************** function ___flneg *****************
 10514 ;; Defined at:
 10515 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
 10516 ;; Parameters:    Size  Location     Type
 10517 ;;  f1              4    0[COMRAM] unsigned char 
 10518 ;; Auto vars:     Size  Location     Type
 10519 ;;		None
 10520 ;; Return value:  Size  Location     Type
 10521 ;;                  4    0[COMRAM] unsigned char 
 10522 ;; Registers used:
 10523 ;;		wreg, status,2, status,0
 10524 ;; Tracked objects:
 10525 ;;		On entry : 0/0
 10526 ;;		On exit  : 0/0
 10527 ;;		Unchanged: 0/0
 10528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10529 ;;      Params:         4       0       0       0       0       0       0
 10530 ;;      Locals:         0       0       0       0       0       0       0
 10531 ;;      Temps:          0       0       0       0       0       0       0
 10532 ;;      Totals:         4       0       0       0       0       0       0
 10533 ;;Total ram usage:        4 bytes
 10534 ;; Hardware stack levels used:    1
 10535 ;; Hardware stack levels required when called:    1
 10536 ;; This function calls:
 10537 ;;		Nothing
 10538 ;; This function is called by:
 10539 ;;		_efgtoa
 10540 ;; This function uses a non-reentrant model
 10541 ;;
 10542                           
 10543                           	psect	text32
 10544  005A5C                     __ptext32:
 10545                           	callstack 0
 10546  005A5C                     ___flneg:
 10547                           	callstack 23
 10548  005A5C  5001               	movf	___flneg@f1^0,w,c
 10549  005A5E  1002               	iorwf	(___flneg@f1+1)^0,w,c
 10550  005A60  1003               	iorwf	(___flneg@f1+2)^0,w,c
 10551  005A62  1004               	iorwf	(___flneg@f1+3)^0,w,c
 10552  005A64  B4D8               	btfsc	status,2,c
 10553  005A66  EF37  F02D         	goto	u5131
 10554  005A6A  EF39  F02D         	goto	u5130
 10555  005A6E                     u5131:
 10556  005A6E  EF41  F02D         	goto	l4619
 10557  005A72                     u5130:
 10558  005A72  0E00               	movlw	0
 10559  005A74  1A01               	xorwf	___flneg@f1^0,f,c
 10560  005A76  0E00               	movlw	0
 10561  005A78  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 10562  005A7A  0E00               	movlw	0
 10563  005A7C  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 10564  005A7E  0E80               	movlw	128
 10565  005A80  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 10566  005A82                     l4619:
 10567  005A82  C001  F001         	movff	___flneg@f1,?___flneg
 10568  005A86  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 10569  005A8A  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 10570  005A8E  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 10571  005A92  0012               	return		;funcret
 10572  005A94                     __end_of___flneg:
 10573                           	callstack 0
 10574                           
 10575 ;; *************** function ___flmul *****************
 10576 ;; Defined at:
 10577 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
 10578 ;; Parameters:    Size  Location     Type
 10579 ;;  b               4   27[COMRAM] unsigned char 
 10580 ;;  a               4   31[COMRAM] unsigned char 
 10581 ;; Auto vars:     Size  Location     Type
 10582 ;;  prod            4   46[COMRAM] struct .
 10583 ;;  grs             4   40[COMRAM] unsigned long 
 10584 ;;  temp            2   50[COMRAM] struct .
 10585 ;;  bexp            1   45[COMRAM] unsigned char 
 10586 ;;  aexp            1   44[COMRAM] unsigned char 
 10587 ;;  sign            1   39[COMRAM] unsigned char 
 10588 ;; Return value:  Size  Location     Type
 10589 ;;                  4   27[COMRAM] unsigned char 
 10590 ;; Registers used:
 10591 ;;		wreg, status,2, status,0, prodl, prodh
 10592 ;; Tracked objects:
 10593 ;;		On entry : 0/0
 10594 ;;		On exit  : 0/0
 10595 ;;		Unchanged: 0/0
 10596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10597 ;;      Params:         8       0       0       0       0       0       0
 10598 ;;      Locals:        13       0       0       0       0       0       0
 10599 ;;      Temps:          4       0       0       0       0       0       0
 10600 ;;      Totals:        25       0       0       0       0       0       0
 10601 ;;Total ram usage:       25 bytes
 10602 ;; Hardware stack levels used:    1
 10603 ;; Hardware stack levels required when called:    1
 10604 ;; This function calls:
 10605 ;;		Nothing
 10606 ;; This function is called by:
 10607 ;;		_scanAdcConversion
 10608 ;;		_speedControl
 10609 ;;		_efgtoa
 10610 ;; This function uses a non-reentrant model
 10611 ;;
 10612                           
 10613                           	psect	text33
 10614  002F7E                     __ptext33:
 10615                           	callstack 0
 10616  002F7E                     ___flmul:
 10617                           	callstack 25
 10618  002F7E  501F               	movf	(___flmul@b+3)^0,w,c
 10619  002F80  0B80               	andlw	128
 10620  002F82  6E28               	movwf	___flmul@sign^0,c
 10621  002F84  501F               	movf	(___flmul@b+3)^0,w,c
 10622  002F86  241F               	addwf	(___flmul@b+3)^0,w,c
 10623  002F88  6E2E               	movwf	___flmul@bexp^0,c
 10624  002F8A  AE1E               	btfss	(___flmul@b+2)^0,7,c
 10625  002F8C  EFCA  F017         	goto	u4741
 10626  002F90  EFCC  F017         	goto	u4740
 10627  002F94                     u4741:
 10628  002F94  EFCD  F017         	goto	l4367
 10629  002F98                     u4740:
 10630  002F98  802E               	bsf	___flmul@bexp^0,0,c
 10631  002F9A                     l4367:
 10632  002F9A  502E               	movf	___flmul@bexp^0,w,c
 10633  002F9C  B4D8               	btfsc	status,2,c
 10634  002F9E  EFD3  F017         	goto	u4751
 10635  002FA2  EFD5  F017         	goto	u4750
 10636  002FA6                     u4751:
 10637  002FA6  EFE8  F017         	goto	l4375
 10638  002FAA                     u4750:
 10639  002FAA  282E               	incf	___flmul@bexp^0,w,c
 10640  002FAC  A4D8               	btfss	status,2,c
 10641  002FAE  EFDB  F017         	goto	u4761
 10642  002FB2  EFDD  F017         	goto	u4760
 10643  002FB6                     u4761:
 10644  002FB6  EFE5  F017         	goto	l4373
 10645  002FBA                     u4760:
 10646  002FBA  0E00               	movlw	0
 10647  002FBC  6E1C               	movwf	___flmul@b^0,c
 10648  002FBE  0E00               	movlw	0
 10649  002FC0  6E1D               	movwf	(___flmul@b+1)^0,c
 10650  002FC2  0E00               	movlw	0
 10651  002FC4  6E1E               	movwf	(___flmul@b+2)^0,c
 10652  002FC6  0E00               	movlw	0
 10653  002FC8  6E1F               	movwf	(___flmul@b+3)^0,c
 10654  002FCA                     l4373:
 10655  002FCA  8E1E               	bsf	(___flmul@b+2)^0,7,c
 10656  002FCC  EFF0  F017         	goto	l4377
 10657  002FD0                     l4375:
 10658  002FD0  0E00               	movlw	0
 10659  002FD2  6E1C               	movwf	___flmul@b^0,c
 10660  002FD4  0E00               	movlw	0
 10661  002FD6  6E1D               	movwf	(___flmul@b+1)^0,c
 10662  002FD8  0E00               	movlw	0
 10663  002FDA  6E1E               	movwf	(___flmul@b+2)^0,c
 10664  002FDC  0E00               	movlw	0
 10665  002FDE  6E1F               	movwf	(___flmul@b+3)^0,c
 10666  002FE0                     l4377:
 10667  002FE0  5023               	movf	(___flmul@a+3)^0,w,c
 10668  002FE2  0B80               	andlw	128
 10669  002FE4  1A28               	xorwf	___flmul@sign^0,f,c
 10670  002FE6  5023               	movf	(___flmul@a+3)^0,w,c
 10671  002FE8  2423               	addwf	(___flmul@a+3)^0,w,c
 10672  002FEA  6E2D               	movwf	___flmul@aexp^0,c
 10673  002FEC  AE22               	btfss	(___flmul@a+2)^0,7,c
 10674  002FEE  EFFB  F017         	goto	u4771
 10675  002FF2  EFFD  F017         	goto	u4770
 10676  002FF6                     u4771:
 10677  002FF6  EFFE  F017         	goto	l4385
 10678  002FFA                     u4770:
 10679  002FFA  802D               	bsf	___flmul@aexp^0,0,c
 10680  002FFC                     l4385:
 10681  002FFC  502D               	movf	___flmul@aexp^0,w,c
 10682  002FFE  B4D8               	btfsc	status,2,c
 10683  003000  EF04  F018         	goto	u4781
 10684  003004  EF06  F018         	goto	u4780
 10685  003008                     u4781:
 10686  003008  EF19  F018         	goto	l4393
 10687  00300C                     u4780:
 10688  00300C  282D               	incf	___flmul@aexp^0,w,c
 10689  00300E  A4D8               	btfss	status,2,c
 10690  003010  EF0C  F018         	goto	u4791
 10691  003014  EF0E  F018         	goto	u4790
 10692  003018                     u4791:
 10693  003018  EF16  F018         	goto	l4391
 10694  00301C                     u4790:
 10695  00301C  0E00               	movlw	0
 10696  00301E  6E20               	movwf	___flmul@a^0,c
 10697  003020  0E00               	movlw	0
 10698  003022  6E21               	movwf	(___flmul@a+1)^0,c
 10699  003024  0E00               	movlw	0
 10700  003026  6E22               	movwf	(___flmul@a+2)^0,c
 10701  003028  0E00               	movlw	0
 10702  00302A  6E23               	movwf	(___flmul@a+3)^0,c
 10703  00302C                     l4391:
 10704  00302C  8E22               	bsf	(___flmul@a+2)^0,7,c
 10705  00302E  EF21  F018         	goto	l1102
 10706  003032                     l4393:
 10707  003032  0E00               	movlw	0
 10708  003034  6E20               	movwf	___flmul@a^0,c
 10709  003036  0E00               	movlw	0
 10710  003038  6E21               	movwf	(___flmul@a+1)^0,c
 10711  00303A  0E00               	movlw	0
 10712  00303C  6E22               	movwf	(___flmul@a+2)^0,c
 10713  00303E  0E00               	movlw	0
 10714  003040  6E23               	movwf	(___flmul@a+3)^0,c
 10715  003042                     l1102:
 10716  003042  502D               	movf	___flmul@aexp^0,w,c
 10717  003044  B4D8               	btfsc	status,2,c
 10718  003046  EF27  F018         	goto	u4801
 10719  00304A  EF29  F018         	goto	u4800
 10720  00304E                     u4801:
 10721  00304E  EF31  F018         	goto	l4397
 10722  003052                     u4800:
 10723  003052  502E               	movf	___flmul@bexp^0,w,c
 10724  003054  A4D8               	btfss	status,2,c
 10725  003056  EF2F  F018         	goto	u4811
 10726  00305A  EF31  F018         	goto	u4810
 10727  00305E                     u4811:
 10728  00305E  EF3B  F018         	goto	l4401
 10729  003062                     u4810:
 10730  003062                     l4397:
 10731  003062  0E00               	movlw	0
 10732  003064  6E1C               	movwf	?___flmul^0,c
 10733  003066  0E00               	movlw	0
 10734  003068  6E1D               	movwf	(?___flmul+1)^0,c
 10735  00306A  0E00               	movlw	0
 10736  00306C  6E1E               	movwf	(?___flmul+2)^0,c
 10737  00306E  0E00               	movlw	0
 10738  003070  6E1F               	movwf	(?___flmul+3)^0,c
 10739  003072  EFD3  F019         	goto	l1106
 10740  003076                     l4401:
 10741  003076  5022               	movf	(___flmul@a+2)^0,w,c
 10742  003078  021C               	mulwf	___flmul@b^0,c
 10743  00307A  CFF3 F033          	movff	prodl,___flmul@temp
 10744  00307E  CFF4 F034          	movff	prodh,___flmul@temp+1
 10745  003082  5033               	movf	___flmul@temp^0,w,c
 10746  003084  6E29               	movwf	___flmul@grs^0,c
 10747  003086  6A2A               	clrf	(___flmul@grs+1)^0,c
 10748  003088  6A2B               	clrf	(___flmul@grs+2)^0,c
 10749  00308A  6A2C               	clrf	(___flmul@grs+3)^0,c
 10750  00308C  5034               	movf	(___flmul@temp+1)^0,w,c
 10751  00308E  6E2F               	movwf	___flmul@prod^0,c
 10752  003090  6A30               	clrf	(___flmul@prod+1)^0,c
 10753  003092  6A31               	clrf	(___flmul@prod+2)^0,c
 10754  003094  6A32               	clrf	(___flmul@prod+3)^0,c
 10755  003096  5021               	movf	(___flmul@a+1)^0,w,c
 10756  003098  021D               	mulwf	(___flmul@b+1)^0,c
 10757  00309A  CFF3 F033          	movff	prodl,___flmul@temp
 10758  00309E  CFF4 F034          	movff	prodh,___flmul@temp+1
 10759  0030A2  5033               	movf	___flmul@temp^0,w,c
 10760  0030A4  2629               	addwf	___flmul@grs^0,f,c
 10761  0030A6  0E00               	movlw	0
 10762  0030A8  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10763  0030AA  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10764  0030AC  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10765  0030AE  5034               	movf	(___flmul@temp+1)^0,w,c
 10766  0030B0  262F               	addwf	___flmul@prod^0,f,c
 10767  0030B2  0E00               	movlw	0
 10768  0030B4  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10769  0030B6  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10770  0030B8  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10771  0030BA  5020               	movf	___flmul@a^0,w,c
 10772  0030BC  021E               	mulwf	(___flmul@b+2)^0,c
 10773  0030BE  CFF3 F033          	movff	prodl,___flmul@temp
 10774  0030C2  CFF4 F034          	movff	prodh,___flmul@temp+1
 10775  0030C6  5033               	movf	___flmul@temp^0,w,c
 10776  0030C8  2629               	addwf	___flmul@grs^0,f,c
 10777  0030CA  0E00               	movlw	0
 10778  0030CC  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10779  0030CE  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10780  0030D0  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10781  0030D2  5034               	movf	(___flmul@temp+1)^0,w,c
 10782  0030D4  262F               	addwf	___flmul@prod^0,f,c
 10783  0030D6  0E00               	movlw	0
 10784  0030D8  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10785  0030DA  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10786  0030DC  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10787  0030DE  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 10788  0030E2  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 10789  0030E6  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 10790  0030EA  6A29               	clrf	___flmul@grs^0,c
 10791  0030EC  5020               	movf	___flmul@a^0,w,c
 10792  0030EE  021D               	mulwf	(___flmul@b+1)^0,c
 10793  0030F0  CFF3 F033          	movff	prodl,___flmul@temp
 10794  0030F4  CFF4 F034          	movff	prodh,___flmul@temp+1
 10795  0030F8  5033               	movf	___flmul@temp^0,w,c
 10796  0030FA  2629               	addwf	___flmul@grs^0,f,c
 10797  0030FC  5034               	movf	(___flmul@temp+1)^0,w,c
 10798  0030FE  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10799  003100  0E00               	movlw	0
 10800  003102  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10801  003104  0E00               	movlw	0
 10802  003106  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10803  003108  5021               	movf	(___flmul@a+1)^0,w,c
 10804  00310A  021C               	mulwf	___flmul@b^0,c
 10805  00310C  CFF3 F033          	movff	prodl,___flmul@temp
 10806  003110  CFF4 F034          	movff	prodh,___flmul@temp+1
 10807  003114  5033               	movf	___flmul@temp^0,w,c
 10808  003116  2629               	addwf	___flmul@grs^0,f,c
 10809  003118  5034               	movf	(___flmul@temp+1)^0,w,c
 10810  00311A  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10811  00311C  0E00               	movlw	0
 10812  00311E  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10813  003120  0E00               	movlw	0
 10814  003122  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10815  003124  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 10816  003128  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 10817  00312C  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 10818  003130  6A29               	clrf	___flmul@grs^0,c
 10819  003132  5020               	movf	___flmul@a^0,w,c
 10820  003134  021C               	mulwf	___flmul@b^0,c
 10821  003136  CFF3 F033          	movff	prodl,___flmul@temp
 10822  00313A  CFF4 F034          	movff	prodh,___flmul@temp+1
 10823  00313E  5033               	movf	___flmul@temp^0,w,c
 10824  003140  2629               	addwf	___flmul@grs^0,f,c
 10825  003142  5034               	movf	(___flmul@temp+1)^0,w,c
 10826  003144  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10827  003146  0E00               	movlw	0
 10828  003148  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10829  00314A  0E00               	movlw	0
 10830  00314C  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10831  00314E  5022               	movf	(___flmul@a+2)^0,w,c
 10832  003150  021D               	mulwf	(___flmul@b+1)^0,c
 10833  003152  CFF3 F033          	movff	prodl,___flmul@temp
 10834  003156  CFF4 F034          	movff	prodh,___flmul@temp+1
 10835  00315A  5033               	movf	___flmul@temp^0,w,c
 10836  00315C  262F               	addwf	___flmul@prod^0,f,c
 10837  00315E  5034               	movf	(___flmul@temp+1)^0,w,c
 10838  003160  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10839  003162  0E00               	movlw	0
 10840  003164  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10841  003166  0E00               	movlw	0
 10842  003168  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10843  00316A  5021               	movf	(___flmul@a+1)^0,w,c
 10844  00316C  021E               	mulwf	(___flmul@b+2)^0,c
 10845  00316E  CFF3 F033          	movff	prodl,___flmul@temp
 10846  003172  CFF4 F034          	movff	prodh,___flmul@temp+1
 10847  003176  5033               	movf	___flmul@temp^0,w,c
 10848  003178  262F               	addwf	___flmul@prod^0,f,c
 10849  00317A  5034               	movf	(___flmul@temp+1)^0,w,c
 10850  00317C  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10851  00317E  0E00               	movlw	0
 10852  003180  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10853  003182  0E00               	movlw	0
 10854  003184  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10855  003186  5022               	movf	(___flmul@a+2)^0,w,c
 10856  003188  021E               	mulwf	(___flmul@b+2)^0,c
 10857  00318A  CFF3 F033          	movff	prodl,___flmul@temp
 10858  00318E  CFF4 F034          	movff	prodh,___flmul@temp+1
 10859  003192  5033               	movf	___flmul@temp^0,w,c
 10860  003194  6E24               	movwf	??___flmul^0,c
 10861  003196  5034               	movf	(___flmul@temp+1)^0,w,c
 10862  003198  6E25               	movwf	(??___flmul+1)^0,c
 10863  00319A  6A26               	clrf	(??___flmul+2)^0,c
 10864  00319C  6A27               	clrf	(??___flmul+3)^0,c
 10865  00319E  C026  F027         	movff	??___flmul+2,??___flmul+3
 10866  0031A2  C025  F026         	movff	??___flmul+1,??___flmul+2
 10867  0031A6  C024  F025         	movff	??___flmul,??___flmul+1
 10868  0031AA  6A24               	clrf	??___flmul^0,c
 10869  0031AC  5024               	movf	??___flmul^0,w,c
 10870  0031AE  262F               	addwf	___flmul@prod^0,f,c
 10871  0031B0  5025               	movf	(??___flmul+1)^0,w,c
 10872  0031B2  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10873  0031B4  5026               	movf	(??___flmul+2)^0,w,c
 10874  0031B6  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10875  0031B8  5027               	movf	(??___flmul+3)^0,w,c
 10876  0031BA  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10877  0031BC  C029  F024         	movff	___flmul@grs,??___flmul
 10878  0031C0  C02A  F025         	movff	___flmul@grs+1,??___flmul+1
 10879  0031C4  C02B  F026         	movff	___flmul@grs+2,??___flmul+2
 10880  0031C8  C02C  F027         	movff	___flmul@grs+3,??___flmul+3
 10881  0031CC  0E19               	movlw	25
 10882  0031CE  EFEE  F018         	goto	u4820
 10883  0031D2                     u4825:
 10884  0031D2  90D8               	bcf	status,0,c
 10885  0031D4  3227               	rrcf	(??___flmul+3)^0,f,c
 10886  0031D6  3226               	rrcf	(??___flmul+2)^0,f,c
 10887  0031D8  3225               	rrcf	(??___flmul+1)^0,f,c
 10888  0031DA  3224               	rrcf	??___flmul^0,f,c
 10889  0031DC                     u4820:
 10890  0031DC  2EE8               	decfsz	wreg,f,c
 10891  0031DE  EFE9  F018         	goto	u4825
 10892  0031E2  5024               	movf	??___flmul^0,w,c
 10893  0031E4  262F               	addwf	___flmul@prod^0,f,c
 10894  0031E6  5025               	movf	(??___flmul+1)^0,w,c
 10895  0031E8  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10896  0031EA  5026               	movf	(??___flmul+2)^0,w,c
 10897  0031EC  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10898  0031EE  5027               	movf	(??___flmul+3)^0,w,c
 10899  0031F0  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10900  0031F2  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 10901  0031F6  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 10902  0031FA  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 10903  0031FE  6A29               	clrf	___flmul@grs^0,c
 10904  003200  502D               	movf	___flmul@aexp^0,w,c
 10905  003202  C02E  F024         	movff	___flmul@bexp,??___flmul
 10906  003206  6A25               	clrf	(??___flmul+1)^0,c
 10907  003208  2624               	addwf	??___flmul^0,f,c
 10908  00320A  0E00               	movlw	0
 10909  00320C  2225               	addwfc	(??___flmul+1)^0,f,c
 10910  00320E  0E82               	movlw	130
 10911  003210  2424               	addwf	??___flmul^0,w,c
 10912  003212  6E33               	movwf	___flmul@temp^0,c
 10913  003214  0EFF               	movlw	255
 10914  003216  2025               	addwfc	(??___flmul+1)^0,w,c
 10915  003218  6E34               	movwf	(___flmul@temp+1)^0,c
 10916  00321A  EF24  F019         	goto	l4449
 10917  00321E                     l4443:
 10918  00321E  90D8               	bcf	status,0,c
 10919  003220  362F               	rlcf	___flmul@prod^0,f,c
 10920  003222  3630               	rlcf	(___flmul@prod+1)^0,f,c
 10921  003224  3631               	rlcf	(___flmul@prod+2)^0,f,c
 10922  003226  3632               	rlcf	(___flmul@prod+3)^0,f,c
 10923  003228  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 10924  00322A  EF19  F019         	goto	u4831
 10925  00322E  EF1B  F019         	goto	u4830
 10926  003232                     u4831:
 10927  003232  EF1C  F019         	goto	l1109
 10928  003236                     u4830:
 10929  003236  802F               	bsf	___flmul@prod^0,0,c
 10930  003238                     l1109:
 10931  003238  90D8               	bcf	status,0,c
 10932  00323A  3629               	rlcf	___flmul@grs^0,f,c
 10933  00323C  362A               	rlcf	(___flmul@grs+1)^0,f,c
 10934  00323E  362B               	rlcf	(___flmul@grs+2)^0,f,c
 10935  003240  362C               	rlcf	(___flmul@grs+3)^0,f,c
 10936  003242  0633               	decf	___flmul@temp^0,f,c
 10937  003244  A0D8               	btfss	status,0,c
 10938  003246  0634               	decf	(___flmul@temp+1)^0,f,c
 10939  003248                     l4449:
 10940  003248  AE31               	btfss	(___flmul@prod+2)^0,7,c
 10941  00324A  EF29  F019         	goto	u4841
 10942  00324E  EF2B  F019         	goto	u4840
 10943  003252                     u4841:
 10944  003252  EF0F  F019         	goto	l4443
 10945  003256                     u4840:
 10946  003256  0E00               	movlw	0
 10947  003258  6E2D               	movwf	___flmul@aexp^0,c
 10948  00325A  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 10949  00325C  EF32  F019         	goto	u4851
 10950  003260  EF34  F019         	goto	u4850
 10951  003264                     u4851:
 10952  003264  EF58  F019         	goto	l1111
 10953  003268                     u4850:
 10954  003268  0EFF               	movlw	255
 10955  00326A  1429               	andwf	___flmul@grs^0,w,c
 10956  00326C  6E24               	movwf	??___flmul^0,c
 10957  00326E  0EFF               	movlw	255
 10958  003270  142A               	andwf	(___flmul@grs+1)^0,w,c
 10959  003272  6E25               	movwf	(??___flmul+1)^0,c
 10960  003274  0EFF               	movlw	255
 10961  003276  142B               	andwf	(___flmul@grs+2)^0,w,c
 10962  003278  6E26               	movwf	(??___flmul+2)^0,c
 10963  00327A  0E7F               	movlw	127
 10964  00327C  142C               	andwf	(___flmul@grs+3)^0,w,c
 10965  00327E  6E27               	movwf	(??___flmul+3)^0,c
 10966  003280  5024               	movf	??___flmul^0,w,c
 10967  003282  1025               	iorwf	(??___flmul+1)^0,w,c
 10968  003284  1026               	iorwf	(??___flmul+2)^0,w,c
 10969  003286  1027               	iorwf	(??___flmul+3)^0,w,c
 10970  003288  B4D8               	btfsc	status,2,c
 10971  00328A  EF49  F019         	goto	u4861
 10972  00328E  EF4B  F019         	goto	u4860
 10973  003292                     u4861:
 10974  003292  EF4F  F019         	goto	l1112
 10975  003296                     u4860:
 10976  003296                     l4457:
 10977  003296  0E01               	movlw	1
 10978  003298  6E2D               	movwf	___flmul@aexp^0,c
 10979  00329A  EF58  F019         	goto	l1111
 10980  00329E                     l1112:
 10981  00329E  A02F               	btfss	___flmul@prod^0,0,c
 10982  0032A0  EF54  F019         	goto	u4871
 10983  0032A4  EF56  F019         	goto	u4870
 10984  0032A8                     u4871:
 10985  0032A8  EF58  F019         	goto	l1111
 10986  0032AC                     u4870:
 10987  0032AC  EF4B  F019         	goto	l4457
 10988  0032B0                     l1111:
 10989  0032B0  502D               	movf	___flmul@aexp^0,w,c
 10990  0032B2  B4D8               	btfsc	status,2,c
 10991  0032B4  EF5E  F019         	goto	u4881
 10992  0032B8  EF60  F019         	goto	u4880
 10993  0032BC                     u4881:
 10994  0032BC  EF84  F019         	goto	l4469
 10995  0032C0                     u4880:
 10996  0032C0  0E01               	movlw	1
 10997  0032C2  262F               	addwf	___flmul@prod^0,f,c
 10998  0032C4  0E00               	movlw	0
 10999  0032C6  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11000  0032C8  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11001  0032CA  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11002  0032CC  A032               	btfss	(___flmul@prod+3)^0,0,c
 11003  0032CE  EF6B  F019         	goto	u4891
 11004  0032D2  EF6D  F019         	goto	u4890
 11005  0032D6                     u4891:
 11006  0032D6  EF84  F019         	goto	l4469
 11007  0032DA                     u4890:
 11008  0032DA  C02F  F024         	movff	___flmul@prod,??___flmul
 11009  0032DE  C030  F025         	movff	___flmul@prod+1,??___flmul+1
 11010  0032E2  C031  F026         	movff	___flmul@prod+2,??___flmul+2
 11011  0032E6  C032  F027         	movff	___flmul@prod+3,??___flmul+3
 11012  0032EA  3427               	rlcf	(??___flmul+3)^0,w,c
 11013  0032EC  3227               	rrcf	(??___flmul+3)^0,f,c
 11014  0032EE  3226               	rrcf	(??___flmul+2)^0,f,c
 11015  0032F0  3225               	rrcf	(??___flmul+1)^0,f,c
 11016  0032F2  3224               	rrcf	??___flmul^0,f,c
 11017  0032F4  C024  F02F         	movff	??___flmul,___flmul@prod
 11018  0032F8  C025  F030         	movff	??___flmul+1,___flmul@prod+1
 11019  0032FC  C026  F031         	movff	??___flmul+2,___flmul@prod+2
 11020  003300  C027  F032         	movff	??___flmul+3,___flmul@prod+3
 11021  003304  4A33               	infsnz	___flmul@temp^0,f,c
 11022  003306  2A34               	incf	(___flmul@temp+1)^0,f,c
 11023  003308                     l4469:
 11024  003308  BE34               	btfsc	(___flmul@temp+1)^0,7,c
 11025  00330A  EF8F  F019         	goto	u4901
 11026  00330E  5034               	movf	(___flmul@temp+1)^0,w,c
 11027  003310  E108               	bnz	u4900
 11028  003312  2833               	incf	___flmul@temp^0,w,c
 11029  003314  A0D8               	btfss	status,0,c
 11030  003316  EF8F  F019         	goto	u4901
 11031  00331A  EF91  F019         	goto	u4900
 11032  00331E                     u4901:
 11033  00331E  EF9B  F019         	goto	l4473
 11034  003322                     u4900:
 11035  003322  0E00               	movlw	0
 11036  003324  6E2F               	movwf	___flmul@prod^0,c
 11037  003326  0E00               	movlw	0
 11038  003328  6E30               	movwf	(___flmul@prod+1)^0,c
 11039  00332A  0E80               	movlw	128
 11040  00332C  6E31               	movwf	(___flmul@prod+2)^0,c
 11041  00332E  0E7F               	movlw	127
 11042  003330  6E32               	movwf	(___flmul@prod+3)^0,c
 11043  003332  EFC9  F019         	goto	l4485
 11044  003336                     l4473:
 11045  003336  BE34               	btfsc	(___flmul@temp+1)^0,7,c
 11046  003338  EFA8  F019         	goto	u4910
 11047  00333C  5034               	movf	(___flmul@temp+1)^0,w,c
 11048  00333E  E106               	bnz	u4911
 11049  003340  0433               	decf	___flmul@temp^0,w,c
 11050  003342  B0D8               	btfsc	status,0,c
 11051  003344  EFA6  F019         	goto	u4911
 11052  003348  EFA8  F019         	goto	u4910
 11053  00334C                     u4911:
 11054  00334C  EFB4  F019         	goto	l1119
 11055  003350                     u4910:
 11056  003350  0E00               	movlw	0
 11057  003352  6E2F               	movwf	___flmul@prod^0,c
 11058  003354  0E00               	movlw	0
 11059  003356  6E30               	movwf	(___flmul@prod+1)^0,c
 11060  003358  0E00               	movlw	0
 11061  00335A  6E31               	movwf	(___flmul@prod+2)^0,c
 11062  00335C  0E00               	movlw	0
 11063  00335E  6E32               	movwf	(___flmul@prod+3)^0,c
 11064  003360  0E00               	movlw	0
 11065  003362  6E28               	movwf	___flmul@sign^0,c
 11066  003364  EFC9  F019         	goto	l4485
 11067  003368                     l1119:
 11068  003368  C033  F02E         	movff	___flmul@temp,___flmul@bexp
 11069  00336C  0EFF               	movlw	255
 11070  00336E  162F               	andwf	___flmul@prod^0,f,c
 11071  003370  0EFF               	movlw	255
 11072  003372  1630               	andwf	(___flmul@prod+1)^0,f,c
 11073  003374  0E7F               	movlw	127
 11074  003376  1631               	andwf	(___flmul@prod+2)^0,f,c
 11075  003378  0E00               	movlw	0
 11076  00337A  1632               	andwf	(___flmul@prod+3)^0,f,c
 11077  00337C  A02E               	btfss	___flmul@bexp^0,0,c
 11078  00337E  EFC3  F019         	goto	u4921
 11079  003382  EFC5  F019         	goto	u4920
 11080  003386                     u4921:
 11081  003386  EFC6  F019         	goto	l4483
 11082  00338A                     u4920:
 11083  00338A  8E31               	bsf	(___flmul@prod+2)^0,7,c
 11084  00338C                     l4483:
 11085  00338C  90D8               	bcf	status,0,c
 11086  00338E  302E               	rrcf	___flmul@bexp^0,w,c
 11087  003390  6E32               	movwf	(___flmul@prod+3)^0,c
 11088  003392                     l4485:
 11089  003392  5028               	movf	___flmul@sign^0,w,c
 11090  003394  1232               	iorwf	(___flmul@prod+3)^0,f,c
 11091  003396  C02F  F01C         	movff	___flmul@prod,?___flmul
 11092  00339A  C030  F01D         	movff	___flmul@prod+1,?___flmul+1
 11093  00339E  C031  F01E         	movff	___flmul@prod+2,?___flmul+2
 11094  0033A2  C032  F01F         	movff	___flmul@prod+3,?___flmul+3
 11095  0033A6                     l1106:
 11096  0033A6  0012               	return		;funcret
 11097  0033A8                     __end_of___flmul:
 11098                           	callstack 0
 11099                           
 11100 ;; *************** function ___flge *****************
 11101 ;; Defined at:
 11102 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
 11103 ;; Parameters:    Size  Location     Type
 11104 ;;  ff1             4   52[COMRAM] unsigned char 
 11105 ;;  ff2             4   56[COMRAM] unsigned char 
 11106 ;; Auto vars:     Size  Location     Type
 11107 ;;		None
 11108 ;; Return value:  Size  Location     Type
 11109 ;;		None               void
 11110 ;; Registers used:
 11111 ;;		wreg, status,2, status,0
 11112 ;; Tracked objects:
 11113 ;;		On entry : 0/0
 11114 ;;		On exit  : 0/0
 11115 ;;		Unchanged: 0/0
 11116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11117 ;;      Params:         8       0       0       0       0       0       0
 11118 ;;      Locals:         0       0       0       0       0       0       0
 11119 ;;      Temps:          4       0       0       0       0       0       0
 11120 ;;      Totals:        12       0       0       0       0       0       0
 11121 ;;Total ram usage:       12 bytes
 11122 ;; Hardware stack levels used:    1
 11123 ;; Hardware stack levels required when called:    1
 11124 ;; This function calls:
 11125 ;;		Nothing
 11126 ;; This function is called by:
 11127 ;;		_stateMachine
 11128 ;;		_efgtoa
 11129 ;; This function uses a non-reentrant model
 11130 ;;
 11131                           
 11132                           	psect	text34
 11133  004ABC                     __ptext34:
 11134                           	callstack 0
 11135  004ABC                     ___flge:
 11136                           	callstack 23
 11137  004ABC  0E00               	movlw	0
 11138  004ABE  1435               	andwf	___flge@ff1^0,w,c
 11139  004AC0  6E3D               	movwf	??___flge^0,c
 11140  004AC2  0E00               	movlw	0
 11141  004AC4  1436               	andwf	(___flge@ff1+1)^0,w,c
 11142  004AC6  6E3E               	movwf	(??___flge+1)^0,c
 11143  004AC8  0E80               	movlw	128
 11144  004ACA  1437               	andwf	(___flge@ff1+2)^0,w,c
 11145  004ACC  6E3F               	movwf	(??___flge+2)^0,c
 11146  004ACE  0E7F               	movlw	127
 11147  004AD0  1438               	andwf	(___flge@ff1+3)^0,w,c
 11148  004AD2  6E40               	movwf	(??___flge+3)^0,c
 11149  004AD4  503D               	movf	??___flge^0,w,c
 11150  004AD6  103E               	iorwf	(??___flge+1)^0,w,c
 11151  004AD8  103F               	iorwf	(??___flge+2)^0,w,c
 11152  004ADA  1040               	iorwf	(??___flge+3)^0,w,c
 11153  004ADC  A4D8               	btfss	status,2,c
 11154  004ADE  EF73  F025         	goto	u5081
 11155  004AE2  EF75  F025         	goto	u5080
 11156  004AE6                     u5081:
 11157  004AE6  EF7D  F025         	goto	l4597
 11158  004AEA                     u5080:
 11159  004AEA  0E00               	movlw	0
 11160  004AEC  6E35               	movwf	___flge@ff1^0,c
 11161  004AEE  0E00               	movlw	0
 11162  004AF0  6E36               	movwf	(___flge@ff1+1)^0,c
 11163  004AF2  0E00               	movlw	0
 11164  004AF4  6E37               	movwf	(___flge@ff1+2)^0,c
 11165  004AF6  0E00               	movlw	0
 11166  004AF8  6E38               	movwf	(___flge@ff1+3)^0,c
 11167  004AFA                     l4597:
 11168  004AFA  0E00               	movlw	0
 11169  004AFC  1439               	andwf	___flge@ff2^0,w,c
 11170  004AFE  6E3D               	movwf	??___flge^0,c
 11171  004B00  0E00               	movlw	0
 11172  004B02  143A               	andwf	(___flge@ff2+1)^0,w,c
 11173  004B04  6E3E               	movwf	(??___flge+1)^0,c
 11174  004B06  0E80               	movlw	128
 11175  004B08  143B               	andwf	(___flge@ff2+2)^0,w,c
 11176  004B0A  6E3F               	movwf	(??___flge+2)^0,c
 11177  004B0C  0E7F               	movlw	127
 11178  004B0E  143C               	andwf	(___flge@ff2+3)^0,w,c
 11179  004B10  6E40               	movwf	(??___flge+3)^0,c
 11180  004B12  503D               	movf	??___flge^0,w,c
 11181  004B14  103E               	iorwf	(??___flge+1)^0,w,c
 11182  004B16  103F               	iorwf	(??___flge+2)^0,w,c
 11183  004B18  1040               	iorwf	(??___flge+3)^0,w,c
 11184  004B1A  A4D8               	btfss	status,2,c
 11185  004B1C  EF92  F025         	goto	u5091
 11186  004B20  EF94  F025         	goto	u5090
 11187  004B24                     u5091:
 11188  004B24  EF9C  F025         	goto	l4601
 11189  004B28                     u5090:
 11190  004B28  0E00               	movlw	0
 11191  004B2A  6E39               	movwf	___flge@ff2^0,c
 11192  004B2C  0E00               	movlw	0
 11193  004B2E  6E3A               	movwf	(___flge@ff2+1)^0,c
 11194  004B30  0E00               	movlw	0
 11195  004B32  6E3B               	movwf	(___flge@ff2+2)^0,c
 11196  004B34  0E00               	movlw	0
 11197  004B36  6E3C               	movwf	(___flge@ff2+3)^0,c
 11198  004B38                     l4601:
 11199  004B38  AE38               	btfss	(___flge@ff1+3)^0,7,c
 11200  004B3A  EFA1  F025         	goto	u5101
 11201  004B3E  EFA3  F025         	goto	u5100
 11202  004B42                     u5101:
 11203  004B42  EFAC  F025         	goto	l4605
 11204  004B46                     u5100:
 11205  004B46  6C35               	negf	___flge@ff1^0,c
 11206  004B48  1E36               	comf	(___flge@ff1+1)^0,f,c
 11207  004B4A  B0D8               	btfsc	status,0,c
 11208  004B4C  2A36               	incf	(___flge@ff1+1)^0,f,c
 11209  004B4E  1E37               	comf	(___flge@ff1+2)^0,f,c
 11210  004B50  B0D8               	btfsc	status,0,c
 11211  004B52  2A37               	incf	(___flge@ff1+2)^0,f,c
 11212  004B54  0E80               	movlw	128
 11213  004B56  5638               	subfwb	(___flge@ff1+3)^0,f,c
 11214  004B58                     l4605:
 11215  004B58  AE3C               	btfss	(___flge@ff2+3)^0,7,c
 11216  004B5A  EFB1  F025         	goto	u5111
 11217  004B5E  EFB3  F025         	goto	u5110
 11218  004B62                     u5111:
 11219  004B62  EFBC  F025         	goto	l753
 11220  004B66                     u5110:
 11221  004B66  6C39               	negf	___flge@ff2^0,c
 11222  004B68  1E3A               	comf	(___flge@ff2+1)^0,f,c
 11223  004B6A  B0D8               	btfsc	status,0,c
 11224  004B6C  2A3A               	incf	(___flge@ff2+1)^0,f,c
 11225  004B6E  1E3B               	comf	(___flge@ff2+2)^0,f,c
 11226  004B70  B0D8               	btfsc	status,0,c
 11227  004B72  2A3B               	incf	(___flge@ff2+2)^0,f,c
 11228  004B74  0E80               	movlw	128
 11229  004B76  563C               	subfwb	(___flge@ff2+3)^0,f,c
 11230  004B78                     l753:
 11231  004B78  0E00               	movlw	0
 11232  004B7A  1A35               	xorwf	___flge@ff1^0,f,c
 11233  004B7C  0E00               	movlw	0
 11234  004B7E  1A36               	xorwf	(___flge@ff1+1)^0,f,c
 11235  004B80  0E00               	movlw	0
 11236  004B82  1A37               	xorwf	(___flge@ff1+2)^0,f,c
 11237  004B84  0E80               	movlw	128
 11238  004B86  1A38               	xorwf	(___flge@ff1+3)^0,f,c
 11239  004B88  0E00               	movlw	0
 11240  004B8A  1A39               	xorwf	___flge@ff2^0,f,c
 11241  004B8C  0E00               	movlw	0
 11242  004B8E  1A3A               	xorwf	(___flge@ff2+1)^0,f,c
 11243  004B90  0E00               	movlw	0
 11244  004B92  1A3B               	xorwf	(___flge@ff2+2)^0,f,c
 11245  004B94  0E80               	movlw	128
 11246  004B96  1A3C               	xorwf	(___flge@ff2+3)^0,f,c
 11247  004B98  5039               	movf	___flge@ff2^0,w,c
 11248  004B9A  5C35               	subwf	___flge@ff1^0,w,c
 11249  004B9C  503A               	movf	(___flge@ff2+1)^0,w,c
 11250  004B9E  5836               	subwfb	(___flge@ff1+1)^0,w,c
 11251  004BA0  503B               	movf	(___flge@ff2+2)^0,w,c
 11252  004BA2  5837               	subwfb	(___flge@ff1+2)^0,w,c
 11253  004BA4  503C               	movf	(___flge@ff2+3)^0,w,c
 11254  004BA6  5838               	subwfb	(___flge@ff1+3)^0,w,c
 11255  004BA8  B0D8               	btfsc	status,0,c
 11256  004BAA  EFD9  F025         	goto	u5121
 11257  004BAE  EFDB  F025         	goto	u5120
 11258  004BB2                     u5121:
 11259  004BB2  EFDE  F025         	goto	l4611
 11260  004BB6                     u5120:
 11261  004BB6  90D8               	bcf	status,0,c
 11262  004BB8  EFDF  F025         	goto	l758
 11263  004BBC                     l4611:
 11264  004BBC  80D8               	bsf	status,0,c
 11265  004BBE                     l758:
 11266  004BBE  0012               	return		;funcret
 11267  004BC0                     __end_of___flge:
 11268                           	callstack 0
 11269                           
 11270 ;; *************** function ___fleq *****************
 11271 ;; Defined at:
 11272 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fleq.c"
 11273 ;; Parameters:    Size  Location     Type
 11274 ;;  ff1             4    0[COMRAM] unsigned char 
 11275 ;;  ff2             4    4[COMRAM] unsigned char 
 11276 ;; Auto vars:     Size  Location     Type
 11277 ;;		None
 11278 ;; Return value:  Size  Location     Type
 11279 ;;		None               void
 11280 ;; Registers used:
 11281 ;;		wreg, status,2, status,0
 11282 ;; Tracked objects:
 11283 ;;		On entry : 0/0
 11284 ;;		On exit  : 0/0
 11285 ;;		Unchanged: 0/0
 11286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11287 ;;      Params:         8       0       0       0       0       0       0
 11288 ;;      Locals:         0       0       0       0       0       0       0
 11289 ;;      Temps:          4       0       0       0       0       0       0
 11290 ;;      Totals:        12       0       0       0       0       0       0
 11291 ;;Total ram usage:       12 bytes
 11292 ;; Hardware stack levels used:    1
 11293 ;; Hardware stack levels required when called:    1
 11294 ;; This function calls:
 11295 ;;		Nothing
 11296 ;; This function is called by:
 11297 ;;		_efgtoa
 11298 ;; This function uses a non-reentrant model
 11299 ;;
 11300                           
 11301                           	psect	text35
 11302  005192                     __ptext35:
 11303                           	callstack 0
 11304  005192                     ___fleq:
 11305                           	callstack 23
 11306  005192  0E00               	movlw	0
 11307  005194  1401               	andwf	___fleq@ff1^0,w,c
 11308  005196  6E09               	movwf	??___fleq^0,c
 11309  005198  0E00               	movlw	0
 11310  00519A  1402               	andwf	(___fleq@ff1+1)^0,w,c
 11311  00519C  6E0A               	movwf	(??___fleq+1)^0,c
 11312  00519E  0E80               	movlw	128
 11313  0051A0  1403               	andwf	(___fleq@ff1+2)^0,w,c
 11314  0051A2  6E0B               	movwf	(??___fleq+2)^0,c
 11315  0051A4  0E7F               	movlw	127
 11316  0051A6  1404               	andwf	(___fleq@ff1+3)^0,w,c
 11317  0051A8  6E0C               	movwf	(??___fleq+3)^0,c
 11318  0051AA  5009               	movf	??___fleq^0,w,c
 11319  0051AC  100A               	iorwf	(??___fleq+1)^0,w,c
 11320  0051AE  100B               	iorwf	(??___fleq+2)^0,w,c
 11321  0051B0  100C               	iorwf	(??___fleq+3)^0,w,c
 11322  0051B2  A4D8               	btfss	status,2,c
 11323  0051B4  EFDE  F028         	goto	u5051
 11324  0051B8  EFE0  F028         	goto	u5050
 11325  0051BC                     u5051:
 11326  0051BC  EFE8  F028         	goto	l4581
 11327  0051C0                     u5050:
 11328  0051C0  0E00               	movlw	0
 11329  0051C2  6E01               	movwf	___fleq@ff1^0,c
 11330  0051C4  0E00               	movlw	0
 11331  0051C6  6E02               	movwf	(___fleq@ff1+1)^0,c
 11332  0051C8  0E00               	movlw	0
 11333  0051CA  6E03               	movwf	(___fleq@ff1+2)^0,c
 11334  0051CC  0E00               	movlw	0
 11335  0051CE  6E04               	movwf	(___fleq@ff1+3)^0,c
 11336  0051D0                     l4581:
 11337  0051D0  0E00               	movlw	0
 11338  0051D2  1405               	andwf	___fleq@ff2^0,w,c
 11339  0051D4  6E09               	movwf	??___fleq^0,c
 11340  0051D6  0E00               	movlw	0
 11341  0051D8  1406               	andwf	(___fleq@ff2+1)^0,w,c
 11342  0051DA  6E0A               	movwf	(??___fleq+1)^0,c
 11343  0051DC  0E80               	movlw	128
 11344  0051DE  1407               	andwf	(___fleq@ff2+2)^0,w,c
 11345  0051E0  6E0B               	movwf	(??___fleq+2)^0,c
 11346  0051E2  0E7F               	movlw	127
 11347  0051E4  1408               	andwf	(___fleq@ff2+3)^0,w,c
 11348  0051E6  6E0C               	movwf	(??___fleq+3)^0,c
 11349  0051E8  5009               	movf	??___fleq^0,w,c
 11350  0051EA  100A               	iorwf	(??___fleq+1)^0,w,c
 11351  0051EC  100B               	iorwf	(??___fleq+2)^0,w,c
 11352  0051EE  100C               	iorwf	(??___fleq+3)^0,w,c
 11353  0051F0  A4D8               	btfss	status,2,c
 11354  0051F2  EFFD  F028         	goto	u5061
 11355  0051F6  EFFF  F028         	goto	u5060
 11356  0051FA                     u5061:
 11357  0051FA  EF07  F029         	goto	l4585
 11358  0051FE                     u5060:
 11359  0051FE  0E00               	movlw	0
 11360  005200  6E05               	movwf	___fleq@ff2^0,c
 11361  005202  0E00               	movlw	0
 11362  005204  6E06               	movwf	(___fleq@ff2+1)^0,c
 11363  005206  0E00               	movlw	0
 11364  005208  6E07               	movwf	(___fleq@ff2+2)^0,c
 11365  00520A  0E00               	movlw	0
 11366  00520C  6E08               	movwf	(___fleq@ff2+3)^0,c
 11367  00520E                     l4585:
 11368  00520E  5005               	movf	___fleq@ff2^0,w,c
 11369  005210  1801               	xorwf	___fleq@ff1^0,w,c
 11370  005212  E10F               	bnz	u5070
 11371  005214  5006               	movf	(___fleq@ff2+1)^0,w,c
 11372  005216  1802               	xorwf	(___fleq@ff1+1)^0,w,c
 11373  005218  E10C               	bnz	u5070
 11374  00521A  5007               	movf	(___fleq@ff2+2)^0,w,c
 11375  00521C  1803               	xorwf	(___fleq@ff1+2)^0,w,c
 11376  00521E  E109               	bnz	u5070
 11377  005220  5008               	movf	(___fleq@ff2+3)^0,w,c
 11378  005222  1804               	xorwf	(___fleq@ff1+3)^0,w,c
 11379  005224  B4D8               	btfsc	status,2,c
 11380  005226  EF17  F029         	goto	u5071
 11381  00522A  EF19  F029         	goto	u5070
 11382  00522E                     u5071:
 11383  00522E  EF1C  F029         	goto	l4589
 11384  005232                     u5070:
 11385  005232  90D8               	bcf	status,0,c
 11386  005234  EF1D  F029         	goto	l747
 11387  005238                     l4589:
 11388  005238  80D8               	bsf	status,0,c
 11389  00523A                     l747:
 11390  00523A  0012               	return		;funcret
 11391  00523C                     __end_of___fleq:
 11392                           	callstack 0
 11393                           
 11394 ;; *************** function ___fldiv *****************
 11395 ;; Defined at:
 11396 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
 11397 ;; Parameters:    Size  Location     Type
 11398 ;;  b               4   52[COMRAM] unsigned char 
 11399 ;;  a               4   56[COMRAM] unsigned char 
 11400 ;; Auto vars:     Size  Location     Type
 11401 ;;  grs             4   71[COMRAM] unsigned long 
 11402 ;;  rem             4   64[COMRAM] unsigned long 
 11403 ;;  new_exp         2   69[COMRAM] short 
 11404 ;;  aexp            1   76[COMRAM] unsigned char 
 11405 ;;  bexp            1   75[COMRAM] unsigned char 
 11406 ;;  sign            1   68[COMRAM] unsigned char 
 11407 ;; Return value:  Size  Location     Type
 11408 ;;                  4   52[COMRAM] unsigned char 
 11409 ;; Registers used:
 11410 ;;		wreg, status,2, status,0
 11411 ;; Tracked objects:
 11412 ;;		On entry : 0/0
 11413 ;;		On exit  : 0/0
 11414 ;;		Unchanged: 0/0
 11415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11416 ;;      Params:         8       0       0       0       0       0       0
 11417 ;;      Locals:        13       0       0       0       0       0       0
 11418 ;;      Temps:          4       0       0       0       0       0       0
 11419 ;;      Totals:        25       0       0       0       0       0       0
 11420 ;;Total ram usage:       25 bytes
 11421 ;; Hardware stack levels used:    1
 11422 ;; Hardware stack levels required when called:    1
 11423 ;; This function calls:
 11424 ;;		Nothing
 11425 ;; This function is called by:
 11426 ;;		_scanAdcConversion
 11427 ;;		_efgtoa
 11428 ;; This function uses a non-reentrant model
 11429 ;;
 11430                           
 11431                           	psect	text36
 11432  0033A8                     __ptext36:
 11433                           	callstack 0
 11434  0033A8                     ___fldiv:
 11435                           	callstack 25
 11436  0033A8  5038               	movf	(___fldiv@b+3)^0,w,c
 11437  0033AA  0B80               	andlw	128
 11438  0033AC  6E45               	movwf	___fldiv@sign^0,c
 11439  0033AE  5038               	movf	(___fldiv@b+3)^0,w,c
 11440  0033B0  2438               	addwf	(___fldiv@b+3)^0,w,c
 11441  0033B2  6E4C               	movwf	___fldiv@bexp^0,c
 11442  0033B4  AE37               	btfss	(___fldiv@b+2)^0,7,c
 11443  0033B6  EFDF  F019         	goto	u4511
 11444  0033BA  EFE1  F019         	goto	u4510
 11445  0033BE                     u4511:
 11446  0033BE  EFE2  F019         	goto	l4229
 11447  0033C2                     u4510:
 11448  0033C2  804C               	bsf	___fldiv@bexp^0,0,c
 11449  0033C4                     l4229:
 11450  0033C4  504C               	movf	___fldiv@bexp^0,w,c
 11451  0033C6  B4D8               	btfsc	status,2,c
 11452  0033C8  EFE8  F019         	goto	u4521
 11453  0033CC  EFEA  F019         	goto	u4520
 11454  0033D0                     u4521:
 11455  0033D0  EFFF  F019         	goto	l4239
 11456  0033D4                     u4520:
 11457  0033D4  284C               	incf	___fldiv@bexp^0,w,c
 11458  0033D6  A4D8               	btfss	status,2,c
 11459  0033D8  EFF0  F019         	goto	u4531
 11460  0033DC  EFF2  F019         	goto	u4530
 11461  0033E0                     u4531:
 11462  0033E0  EFFA  F019         	goto	l4235
 11463  0033E4                     u4530:
 11464  0033E4  0E00               	movlw	0
 11465  0033E6  6E35               	movwf	___fldiv@b^0,c
 11466  0033E8  0E00               	movlw	0
 11467  0033EA  6E36               	movwf	(___fldiv@b+1)^0,c
 11468  0033EC  0E00               	movlw	0
 11469  0033EE  6E37               	movwf	(___fldiv@b+2)^0,c
 11470  0033F0  0E00               	movlw	0
 11471  0033F2  6E38               	movwf	(___fldiv@b+3)^0,c
 11472  0033F4                     l4235:
 11473  0033F4  8E37               	bsf	(___fldiv@b+2)^0,7,c
 11474  0033F6  0E00               	movlw	0
 11475  0033F8  6E38               	movwf	(___fldiv@b+3)^0,c
 11476  0033FA  EF07  F01A         	goto	l4241
 11477  0033FE                     l4239:
 11478  0033FE  0E00               	movlw	0
 11479  003400  6E35               	movwf	___fldiv@b^0,c
 11480  003402  0E00               	movlw	0
 11481  003404  6E36               	movwf	(___fldiv@b+1)^0,c
 11482  003406  0E00               	movlw	0
 11483  003408  6E37               	movwf	(___fldiv@b+2)^0,c
 11484  00340A  0E00               	movlw	0
 11485  00340C  6E38               	movwf	(___fldiv@b+3)^0,c
 11486  00340E                     l4241:
 11487  00340E  503C               	movf	(___fldiv@a+3)^0,w,c
 11488  003410  0B80               	andlw	128
 11489  003412  1A45               	xorwf	___fldiv@sign^0,f,c
 11490  003414  503C               	movf	(___fldiv@a+3)^0,w,c
 11491  003416  243C               	addwf	(___fldiv@a+3)^0,w,c
 11492  003418  6E4D               	movwf	___fldiv@aexp^0,c
 11493  00341A  AE3B               	btfss	(___fldiv@a+2)^0,7,c
 11494  00341C  EF12  F01A         	goto	u4541
 11495  003420  EF14  F01A         	goto	u4540
 11496  003424                     u4541:
 11497  003424  EF15  F01A         	goto	l4249
 11498  003428                     u4540:
 11499  003428  804D               	bsf	___fldiv@aexp^0,0,c
 11500  00342A                     l4249:
 11501  00342A  504D               	movf	___fldiv@aexp^0,w,c
 11502  00342C  B4D8               	btfsc	status,2,c
 11503  00342E  EF1B  F01A         	goto	u4551
 11504  003432  EF1D  F01A         	goto	u4550
 11505  003436                     u4551:
 11506  003436  EF32  F01A         	goto	l4259
 11507  00343A                     u4550:
 11508  00343A  284D               	incf	___fldiv@aexp^0,w,c
 11509  00343C  A4D8               	btfss	status,2,c
 11510  00343E  EF23  F01A         	goto	u4561
 11511  003442  EF25  F01A         	goto	u4560
 11512  003446                     u4561:
 11513  003446  EF2D  F01A         	goto	l4255
 11514  00344A                     u4560:
 11515  00344A  0E00               	movlw	0
 11516  00344C  6E39               	movwf	___fldiv@a^0,c
 11517  00344E  0E00               	movlw	0
 11518  003450  6E3A               	movwf	(___fldiv@a+1)^0,c
 11519  003452  0E00               	movlw	0
 11520  003454  6E3B               	movwf	(___fldiv@a+2)^0,c
 11521  003456  0E00               	movlw	0
 11522  003458  6E3C               	movwf	(___fldiv@a+3)^0,c
 11523  00345A                     l4255:
 11524  00345A  8E3B               	bsf	(___fldiv@a+2)^0,7,c
 11525  00345C  0E00               	movlw	0
 11526  00345E  6E3C               	movwf	(___fldiv@a+3)^0,c
 11527  003460  EF3A  F01A         	goto	l4261
 11528  003464                     l4259:
 11529  003464  0E00               	movlw	0
 11530  003466  6E39               	movwf	___fldiv@a^0,c
 11531  003468  0E00               	movlw	0
 11532  00346A  6E3A               	movwf	(___fldiv@a+1)^0,c
 11533  00346C  0E00               	movlw	0
 11534  00346E  6E3B               	movwf	(___fldiv@a+2)^0,c
 11535  003470  0E00               	movlw	0
 11536  003472  6E3C               	movwf	(___fldiv@a+3)^0,c
 11537  003474                     l4261:
 11538  003474  5039               	movf	___fldiv@a^0,w,c
 11539  003476  103A               	iorwf	(___fldiv@a+1)^0,w,c
 11540  003478  103B               	iorwf	(___fldiv@a+2)^0,w,c
 11541  00347A  103C               	iorwf	(___fldiv@a+3)^0,w,c
 11542  00347C  A4D8               	btfss	status,2,c
 11543  00347E  EF43  F01A         	goto	u4571
 11544  003482  EF45  F01A         	goto	u4570
 11545  003486                     u4571:
 11546  003486  EF5D  F01A         	goto	l4273
 11547  00348A                     u4570:
 11548  00348A  0E00               	movlw	0
 11549  00348C  6E35               	movwf	___fldiv@b^0,c
 11550  00348E  0E00               	movlw	0
 11551  003490  6E36               	movwf	(___fldiv@b+1)^0,c
 11552  003492  0E00               	movlw	0
 11553  003494  6E37               	movwf	(___fldiv@b+2)^0,c
 11554  003496  0E00               	movlw	0
 11555  003498  6E38               	movwf	(___fldiv@b+3)^0,c
 11556  00349A  0E80               	movlw	128
 11557  00349C  1237               	iorwf	(___fldiv@b+2)^0,f,c
 11558  00349E  0E7F               	movlw	127
 11559  0034A0  1238               	iorwf	(___fldiv@b+3)^0,f,c
 11560  0034A2                     l4267:
 11561  0034A2  5045               	movf	___fldiv@sign^0,w,c
 11562  0034A4  1238               	iorwf	(___fldiv@b+3)^0,f,c
 11563  0034A6  C035  F035         	movff	___fldiv@b,?___fldiv
 11564  0034AA  C036  F036         	movff	___fldiv@b+1,?___fldiv+1
 11565  0034AE  C037  F037         	movff	___fldiv@b+2,?___fldiv+2
 11566  0034B2  C038  F038         	movff	___fldiv@b+3,?___fldiv+3
 11567  0034B6  EFA0  F01B         	goto	l1070
 11568  0034BA                     l4273:
 11569  0034BA  504C               	movf	___fldiv@bexp^0,w,c
 11570  0034BC  A4D8               	btfss	status,2,c
 11571  0034BE  EF63  F01A         	goto	u4581
 11572  0034C2  EF65  F01A         	goto	u4580
 11573  0034C6                     u4581:
 11574  0034C6  EF6F  F01A         	goto	l4281
 11575  0034CA                     u4580:
 11576  0034CA  0E00               	movlw	0
 11577  0034CC  6E35               	movwf	?___fldiv^0,c
 11578  0034CE  0E00               	movlw	0
 11579  0034D0  6E36               	movwf	(?___fldiv+1)^0,c
 11580  0034D2  0E00               	movlw	0
 11581  0034D4  6E37               	movwf	(?___fldiv+2)^0,c
 11582  0034D6  0E00               	movlw	0
 11583  0034D8  6E38               	movwf	(?___fldiv+3)^0,c
 11584  0034DA  EFA0  F01B         	goto	l1070
 11585  0034DE                     l4281:
 11586  0034DE  504D               	movf	___fldiv@aexp^0,w,c
 11587  0034E0  C04C  F03D         	movff	___fldiv@bexp,??___fldiv
 11588  0034E4  6A3E               	clrf	(??___fldiv+1)^0,c
 11589  0034E6  5E3D               	subwf	??___fldiv^0,f,c
 11590  0034E8  0E00               	movlw	0
 11591  0034EA  5A3E               	subwfb	(??___fldiv+1)^0,f,c
 11592  0034EC  0E7F               	movlw	127
 11593  0034EE  243D               	addwf	??___fldiv^0,w,c
 11594  0034F0  6E46               	movwf	___fldiv@new_exp^0,c
 11595  0034F2  0E00               	movlw	0
 11596  0034F4  203E               	addwfc	(??___fldiv+1)^0,w,c
 11597  0034F6  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 11598  0034F8  C035  F041         	movff	___fldiv@b,___fldiv@rem
 11599  0034FC  C036  F042         	movff	___fldiv@b+1,___fldiv@rem+1
 11600  003500  C037  F043         	movff	___fldiv@b+2,___fldiv@rem+2
 11601  003504  C038  F044         	movff	___fldiv@b+3,___fldiv@rem+3
 11602  003508  0E00               	movlw	0
 11603  00350A  6E35               	movwf	___fldiv@b^0,c
 11604  00350C  0E00               	movlw	0
 11605  00350E  6E36               	movwf	(___fldiv@b+1)^0,c
 11606  003510  0E00               	movlw	0
 11607  003512  6E37               	movwf	(___fldiv@b+2)^0,c
 11608  003514  0E00               	movlw	0
 11609  003516  6E38               	movwf	(___fldiv@b+3)^0,c
 11610  003518  0E00               	movlw	0
 11611  00351A  6E48               	movwf	___fldiv@grs^0,c
 11612  00351C  0E00               	movlw	0
 11613  00351E  6E49               	movwf	(___fldiv@grs+1)^0,c
 11614  003520  0E00               	movlw	0
 11615  003522  6E4A               	movwf	(___fldiv@grs+2)^0,c
 11616  003524  0E00               	movlw	0
 11617  003526  6E4B               	movwf	(___fldiv@grs+3)^0,c
 11618  003528  0E00               	movlw	0
 11619  00352A  6E4D               	movwf	___fldiv@aexp^0,c
 11620  00352C  EFD0  F01A         	goto	l1072
 11621  003530                     l4291:
 11622  003530  504D               	movf	___fldiv@aexp^0,w,c
 11623  003532  B4D8               	btfsc	status,2,c
 11624  003534  EF9E  F01A         	goto	u4591
 11625  003538  EFA0  F01A         	goto	u4590
 11626  00353C                     u4591:
 11627  00353C  EFB7  F01A         	goto	l4299
 11628  003540                     u4590:
 11629  003540  90D8               	bcf	status,0,c
 11630  003542  3641               	rlcf	___fldiv@rem^0,f,c
 11631  003544  3642               	rlcf	(___fldiv@rem+1)^0,f,c
 11632  003546  3643               	rlcf	(___fldiv@rem+2)^0,f,c
 11633  003548  3644               	rlcf	(___fldiv@rem+3)^0,f,c
 11634  00354A  90D8               	bcf	status,0,c
 11635  00354C  3635               	rlcf	___fldiv@b^0,f,c
 11636  00354E  3636               	rlcf	(___fldiv@b+1)^0,f,c
 11637  003550  3637               	rlcf	(___fldiv@b+2)^0,f,c
 11638  003552  3638               	rlcf	(___fldiv@b+3)^0,f,c
 11639  003554  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 11640  003556  EFAF  F01A         	goto	u4601
 11641  00355A  EFB1  F01A         	goto	u4600
 11642  00355E                     u4601:
 11643  00355E  EFB2  F01A         	goto	l1075
 11644  003562                     u4600:
 11645  003562  8035               	bsf	___fldiv@b^0,0,c
 11646  003564                     l1075:
 11647  003564  90D8               	bcf	status,0,c
 11648  003566  3648               	rlcf	___fldiv@grs^0,f,c
 11649  003568  3649               	rlcf	(___fldiv@grs+1)^0,f,c
 11650  00356A  364A               	rlcf	(___fldiv@grs+2)^0,f,c
 11651  00356C  364B               	rlcf	(___fldiv@grs+3)^0,f,c
 11652  00356E                     l4299:
 11653  00356E  5039               	movf	___fldiv@a^0,w,c
 11654  003570  5C41               	subwf	___fldiv@rem^0,w,c
 11655  003572  503A               	movf	(___fldiv@a+1)^0,w,c
 11656  003574  5842               	subwfb	(___fldiv@rem+1)^0,w,c
 11657  003576  503B               	movf	(___fldiv@a+2)^0,w,c
 11658  003578  5843               	subwfb	(___fldiv@rem+2)^0,w,c
 11659  00357A  503C               	movf	(___fldiv@a+3)^0,w,c
 11660  00357C  5844               	subwfb	(___fldiv@rem+3)^0,w,c
 11661  00357E  A0D8               	btfss	status,0,c
 11662  003580  EFC4  F01A         	goto	u4611
 11663  003584  EFC6  F01A         	goto	u4610
 11664  003588                     u4611:
 11665  003588  EFCF  F01A         	goto	l4305
 11666  00358C                     u4610:
 11667  00358C  8C4B               	bsf	(___fldiv@grs+3)^0,6,c
 11668  00358E  5039               	movf	___fldiv@a^0,w,c
 11669  003590  5E41               	subwf	___fldiv@rem^0,f,c
 11670  003592  503A               	movf	(___fldiv@a+1)^0,w,c
 11671  003594  5A42               	subwfb	(___fldiv@rem+1)^0,f,c
 11672  003596  503B               	movf	(___fldiv@a+2)^0,w,c
 11673  003598  5A43               	subwfb	(___fldiv@rem+2)^0,f,c
 11674  00359A  503C               	movf	(___fldiv@a+3)^0,w,c
 11675  00359C  5A44               	subwfb	(___fldiv@rem+3)^0,f,c
 11676  00359E                     l4305:
 11677  00359E  2A4D               	incf	___fldiv@aexp^0,f,c
 11678  0035A0                     l1072:
 11679  0035A0  0E19               	movlw	25
 11680  0035A2  644D               	cpfsgt	___fldiv@aexp^0,c
 11681  0035A4  EFD6  F01A         	goto	u4621
 11682  0035A8  EFD8  F01A         	goto	u4620
 11683  0035AC                     u4621:
 11684  0035AC  EF98  F01A         	goto	l4291
 11685  0035B0                     u4620:
 11686  0035B0  5041               	movf	___fldiv@rem^0,w,c
 11687  0035B2  1042               	iorwf	(___fldiv@rem+1)^0,w,c
 11688  0035B4  1043               	iorwf	(___fldiv@rem+2)^0,w,c
 11689  0035B6  1044               	iorwf	(___fldiv@rem+3)^0,w,c
 11690  0035B8  B4D8               	btfsc	status,2,c
 11691  0035BA  EFE1  F01A         	goto	u4631
 11692  0035BE  EFE3  F01A         	goto	u4630
 11693  0035C2                     u4631:
 11694  0035C2  EFFB  F01A         	goto	l4317
 11695  0035C6                     u4630:
 11696  0035C6  8048               	bsf	___fldiv@grs^0,0,c
 11697  0035C8  EFFB  F01A         	goto	l4317
 11698  0035CC                     l4311:
 11699  0035CC  90D8               	bcf	status,0,c
 11700  0035CE  3635               	rlcf	___fldiv@b^0,f,c
 11701  0035D0  3636               	rlcf	(___fldiv@b+1)^0,f,c
 11702  0035D2  3637               	rlcf	(___fldiv@b+2)^0,f,c
 11703  0035D4  3638               	rlcf	(___fldiv@b+3)^0,f,c
 11704  0035D6  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 11705  0035D8  EFF0  F01A         	goto	u4641
 11706  0035DC  EFF2  F01A         	goto	u4640
 11707  0035E0                     u4641:
 11708  0035E0  EFF3  F01A         	goto	l1081
 11709  0035E4                     u4640:
 11710  0035E4  8035               	bsf	___fldiv@b^0,0,c
 11711  0035E6                     l1081:
 11712  0035E6  90D8               	bcf	status,0,c
 11713  0035E8  3648               	rlcf	___fldiv@grs^0,f,c
 11714  0035EA  3649               	rlcf	(___fldiv@grs+1)^0,f,c
 11715  0035EC  364A               	rlcf	(___fldiv@grs+2)^0,f,c
 11716  0035EE  364B               	rlcf	(___fldiv@grs+3)^0,f,c
 11717  0035F0  0646               	decf	___fldiv@new_exp^0,f,c
 11718  0035F2  A0D8               	btfss	status,0,c
 11719  0035F4  0647               	decf	(___fldiv@new_exp+1)^0,f,c
 11720  0035F6                     l4317:
 11721  0035F6  AE37               	btfss	(___fldiv@b+2)^0,7,c
 11722  0035F8  EF00  F01B         	goto	u4651
 11723  0035FC  EF02  F01B         	goto	u4650
 11724  003600                     u4651:
 11725  003600  EFE6  F01A         	goto	l4311
 11726  003604                     u4650:
 11727  003604  0E00               	movlw	0
 11728  003606  6E4D               	movwf	___fldiv@aexp^0,c
 11729  003608  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 11730  00360A  EF09  F01B         	goto	u4661
 11731  00360E  EF0B  F01B         	goto	u4660
 11732  003612                     u4661:
 11733  003612  EF2F  F01B         	goto	l1083
 11734  003616                     u4660:
 11735  003616  0EFF               	movlw	255
 11736  003618  1448               	andwf	___fldiv@grs^0,w,c
 11737  00361A  6E3D               	movwf	??___fldiv^0,c
 11738  00361C  0EFF               	movlw	255
 11739  00361E  1449               	andwf	(___fldiv@grs+1)^0,w,c
 11740  003620  6E3E               	movwf	(??___fldiv+1)^0,c
 11741  003622  0EFF               	movlw	255
 11742  003624  144A               	andwf	(___fldiv@grs+2)^0,w,c
 11743  003626  6E3F               	movwf	(??___fldiv+2)^0,c
 11744  003628  0E7F               	movlw	127
 11745  00362A  144B               	andwf	(___fldiv@grs+3)^0,w,c
 11746  00362C  6E40               	movwf	(??___fldiv+3)^0,c
 11747  00362E  503D               	movf	??___fldiv^0,w,c
 11748  003630  103E               	iorwf	(??___fldiv+1)^0,w,c
 11749  003632  103F               	iorwf	(??___fldiv+2)^0,w,c
 11750  003634  1040               	iorwf	(??___fldiv+3)^0,w,c
 11751  003636  B4D8               	btfsc	status,2,c
 11752  003638  EF20  F01B         	goto	u4671
 11753  00363C  EF22  F01B         	goto	u4670
 11754  003640                     u4671:
 11755  003640  EF26  F01B         	goto	l1084
 11756  003644                     u4670:
 11757  003644                     l4325:
 11758  003644  0E01               	movlw	1
 11759  003646  6E4D               	movwf	___fldiv@aexp^0,c
 11760  003648  EF2F  F01B         	goto	l1083
 11761  00364C                     l1084:
 11762  00364C  A035               	btfss	___fldiv@b^0,0,c
 11763  00364E  EF2B  F01B         	goto	u4681
 11764  003652  EF2D  F01B         	goto	u4680
 11765  003656                     u4681:
 11766  003656  EF2F  F01B         	goto	l1083
 11767  00365A                     u4680:
 11768  00365A  EF22  F01B         	goto	l4325
 11769  00365E                     l1083:
 11770  00365E  504D               	movf	___fldiv@aexp^0,w,c
 11771  003660  B4D8               	btfsc	status,2,c
 11772  003662  EF35  F01B         	goto	u4691
 11773  003666  EF37  F01B         	goto	u4690
 11774  00366A                     u4691:
 11775  00366A  EF5B  F01B         	goto	l4337
 11776  00366E                     u4690:
 11777  00366E  0E01               	movlw	1
 11778  003670  2635               	addwf	___fldiv@b^0,f,c
 11779  003672  0E00               	movlw	0
 11780  003674  2236               	addwfc	(___fldiv@b+1)^0,f,c
 11781  003676  2237               	addwfc	(___fldiv@b+2)^0,f,c
 11782  003678  2238               	addwfc	(___fldiv@b+3)^0,f,c
 11783  00367A  A038               	btfss	(___fldiv@b+3)^0,0,c
 11784  00367C  EF42  F01B         	goto	u4701
 11785  003680  EF44  F01B         	goto	u4700
 11786  003684                     u4701:
 11787  003684  EF5B  F01B         	goto	l4337
 11788  003688                     u4700:
 11789  003688  C035  F03D         	movff	___fldiv@b,??___fldiv
 11790  00368C  C036  F03E         	movff	___fldiv@b+1,??___fldiv+1
 11791  003690  C037  F03F         	movff	___fldiv@b+2,??___fldiv+2
 11792  003694  C038  F040         	movff	___fldiv@b+3,??___fldiv+3
 11793  003698  3440               	rlcf	(??___fldiv+3)^0,w,c
 11794  00369A  3240               	rrcf	(??___fldiv+3)^0,f,c
 11795  00369C  323F               	rrcf	(??___fldiv+2)^0,f,c
 11796  00369E  323E               	rrcf	(??___fldiv+1)^0,f,c
 11797  0036A0  323D               	rrcf	??___fldiv^0,f,c
 11798  0036A2  C03D  F035         	movff	??___fldiv,___fldiv@b
 11799  0036A6  C03E  F036         	movff	??___fldiv+1,___fldiv@b+1
 11800  0036AA  C03F  F037         	movff	??___fldiv+2,___fldiv@b+2
 11801  0036AE  C040  F038         	movff	??___fldiv+3,___fldiv@b+3
 11802  0036B2  4A46               	infsnz	___fldiv@new_exp^0,f,c
 11803  0036B4  2A47               	incf	(___fldiv@new_exp+1)^0,f,c
 11804  0036B6                     l4337:
 11805  0036B6  BE47               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11806  0036B8  EF66  F01B         	goto	u4711
 11807  0036BC  5047               	movf	(___fldiv@new_exp+1)^0,w,c
 11808  0036BE  E108               	bnz	u4710
 11809  0036C0  2846               	incf	___fldiv@new_exp^0,w,c
 11810  0036C2  A0D8               	btfss	status,0,c
 11811  0036C4  EF66  F01B         	goto	u4711
 11812  0036C8  EF68  F01B         	goto	u4710
 11813  0036CC                     u4711:
 11814  0036CC  EF73  F01B         	goto	l4341
 11815  0036D0                     u4710:
 11816  0036D0  0E00               	movlw	0
 11817  0036D2  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 11818  0036D4  6846               	setf	___fldiv@new_exp^0,c
 11819  0036D6  0E00               	movlw	0
 11820  0036D8  6E35               	movwf	___fldiv@b^0,c
 11821  0036DA  0E00               	movlw	0
 11822  0036DC  6E36               	movwf	(___fldiv@b+1)^0,c
 11823  0036DE  0E00               	movlw	0
 11824  0036E0  6E37               	movwf	(___fldiv@b+2)^0,c
 11825  0036E2  0E00               	movlw	0
 11826  0036E4  6E38               	movwf	(___fldiv@b+3)^0,c
 11827  0036E6                     l4341:
 11828  0036E6  BE47               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11829  0036E8  EF80  F01B         	goto	u4720
 11830  0036EC  5047               	movf	(___fldiv@new_exp+1)^0,w,c
 11831  0036EE  E106               	bnz	u4721
 11832  0036F0  0446               	decf	___fldiv@new_exp^0,w,c
 11833  0036F2  B0D8               	btfsc	status,0,c
 11834  0036F4  EF7E  F01B         	goto	u4721
 11835  0036F8  EF80  F01B         	goto	u4720
 11836  0036FC                     u4721:
 11837  0036FC  EF8E  F01B         	goto	l4345
 11838  003700                     u4720:
 11839  003700  0E00               	movlw	0
 11840  003702  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 11841  003704  0E00               	movlw	0
 11842  003706  6E46               	movwf	___fldiv@new_exp^0,c
 11843  003708  0E00               	movlw	0
 11844  00370A  6E35               	movwf	___fldiv@b^0,c
 11845  00370C  0E00               	movlw	0
 11846  00370E  6E36               	movwf	(___fldiv@b+1)^0,c
 11847  003710  0E00               	movlw	0
 11848  003712  6E37               	movwf	(___fldiv@b+2)^0,c
 11849  003714  0E00               	movlw	0
 11850  003716  6E38               	movwf	(___fldiv@b+3)^0,c
 11851  003718  0E00               	movlw	0
 11852  00371A  6E45               	movwf	___fldiv@sign^0,c
 11853  00371C                     l4345:
 11854  00371C  C046  F04C         	movff	___fldiv@new_exp,___fldiv@bexp
 11855  003720  A04C               	btfss	___fldiv@bexp^0,0,c
 11856  003722  EF95  F01B         	goto	u4731
 11857  003726  EF97  F01B         	goto	u4730
 11858  00372A                     u4731:
 11859  00372A  EF9A  F01B         	goto	l4351
 11860  00372E                     u4730:
 11861  00372E  8E37               	bsf	(___fldiv@b+2)^0,7,c
 11862  003730  EF9B  F01B         	goto	l4353
 11863  003734                     l4351:
 11864  003734  9E37               	bcf	(___fldiv@b+2)^0,7,c
 11865  003736                     l4353:
 11866  003736  90D8               	bcf	status,0,c
 11867  003738  304C               	rrcf	___fldiv@bexp^0,w,c
 11868  00373A  6E38               	movwf	(___fldiv@b+3)^0,c
 11869  00373C  EF51  F01A         	goto	l4267
 11870  003740                     l1070:
 11871  003740  0012               	return		;funcret
 11872  003742                     __end_of___fldiv:
 11873                           	callstack 0
 11874                           
 11875 ;; *************** function ___awmod *****************
 11876 ;; Defined at:
 11877 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
 11878 ;; Parameters:    Size  Location     Type
 11879 ;;  dividend        2    0[COMRAM] int 
 11880 ;;  divisor         2    2[COMRAM] int 
 11881 ;; Auto vars:     Size  Location     Type
 11882 ;;  sign            1    5[COMRAM] unsigned char 
 11883 ;;  counter         1    4[COMRAM] unsigned char 
 11884 ;; Return value:  Size  Location     Type
 11885 ;;                  2    0[COMRAM] int 
 11886 ;; Registers used:
 11887 ;;		wreg, status,2, status,0
 11888 ;; Tracked objects:
 11889 ;;		On entry : 0/0
 11890 ;;		On exit  : 0/0
 11891 ;;		Unchanged: 0/0
 11892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11893 ;;      Params:         4       0       0       0       0       0       0
 11894 ;;      Locals:         2       0       0       0       0       0       0
 11895 ;;      Temps:          0       0       0       0       0       0       0
 11896 ;;      Totals:         6       0       0       0       0       0       0
 11897 ;;Total ram usage:        6 bytes
 11898 ;; Hardware stack levels used:    1
 11899 ;; Hardware stack levels required when called:    1
 11900 ;; This function calls:
 11901 ;;		Nothing
 11902 ;; This function is called by:
 11903 ;;		_efgtoa
 11904 ;; This function uses a non-reentrant model
 11905 ;;
 11906                           
 11907                           	psect	text37
 11908  0050E2                     __ptext37:
 11909                           	callstack 0
 11910  0050E2                     ___awmod:
 11911                           	callstack 23
 11912  0050E2  0E00               	movlw	0
 11913  0050E4  6E06               	movwf	___awmod@sign^0,c
 11914  0050E6  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
 11915  0050E8  EF7A  F028         	goto	u4990
 11916  0050EC  EF78  F028         	goto	u4991
 11917  0050F0                     u4991:
 11918  0050F0  EF80  F028         	goto	l4549
 11919  0050F4                     u4990:
 11920  0050F4  6C01               	negf	___awmod@dividend^0,c
 11921  0050F6  1E02               	comf	(___awmod@dividend+1)^0,f,c
 11922  0050F8  B0D8               	btfsc	status,0,c
 11923  0050FA  2A02               	incf	(___awmod@dividend+1)^0,f,c
 11924  0050FC  0E01               	movlw	1
 11925  0050FE  6E06               	movwf	___awmod@sign^0,c
 11926  005100                     l4549:
 11927  005100  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
 11928  005102  EF87  F028         	goto	u5000
 11929  005106  EF85  F028         	goto	u5001
 11930  00510A                     u5001:
 11931  00510A  EF8B  F028         	goto	l4553
 11932  00510E                     u5000:
 11933  00510E  6C03               	negf	___awmod@divisor^0,c
 11934  005110  1E04               	comf	(___awmod@divisor+1)^0,f,c
 11935  005112  B0D8               	btfsc	status,0,c
 11936  005114  2A04               	incf	(___awmod@divisor+1)^0,f,c
 11937  005116                     l4553:
 11938  005116  5003               	movf	___awmod@divisor^0,w,c
 11939  005118  1004               	iorwf	(___awmod@divisor+1)^0,w,c
 11940  00511A  B4D8               	btfsc	status,2,c
 11941  00511C  EF92  F028         	goto	u5011
 11942  005120  EF94  F028         	goto	u5010
 11943  005124                     u5011:
 11944  005124  EFB8  F028         	goto	l4569
 11945  005128                     u5010:
 11946  005128  0E01               	movlw	1
 11947  00512A  6E05               	movwf	___awmod@counter^0,c
 11948  00512C  EF9C  F028         	goto	l4559
 11949  005130                     l4557:
 11950  005130  90D8               	bcf	status,0,c
 11951  005132  3603               	rlcf	___awmod@divisor^0,f,c
 11952  005134  3604               	rlcf	(___awmod@divisor+1)^0,f,c
 11953  005136  2A05               	incf	___awmod@counter^0,f,c
 11954  005138                     l4559:
 11955  005138  AE04               	btfss	(___awmod@divisor+1)^0,7,c
 11956  00513A  EFA1  F028         	goto	u5021
 11957  00513E  EFA3  F028         	goto	u5020
 11958  005142                     u5021:
 11959  005142  EF98  F028         	goto	l4557
 11960  005146                     u5020:
 11961  005146                     l4561:
 11962  005146  5003               	movf	___awmod@divisor^0,w,c
 11963  005148  5C01               	subwf	___awmod@dividend^0,w,c
 11964  00514A  5004               	movf	(___awmod@divisor+1)^0,w,c
 11965  00514C  5802               	subwfb	(___awmod@dividend+1)^0,w,c
 11966  00514E  A0D8               	btfss	status,0,c
 11967  005150  EFAC  F028         	goto	u5031
 11968  005154  EFAE  F028         	goto	u5030
 11969  005158                     u5031:
 11970  005158  EFB2  F028         	goto	l4565
 11971  00515C                     u5030:
 11972  00515C  5003               	movf	___awmod@divisor^0,w,c
 11973  00515E  5E01               	subwf	___awmod@dividend^0,f,c
 11974  005160  5004               	movf	(___awmod@divisor+1)^0,w,c
 11975  005162  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
 11976  005164                     l4565:
 11977  005164  90D8               	bcf	status,0,c
 11978  005166  3204               	rrcf	(___awmod@divisor+1)^0,f,c
 11979  005168  3203               	rrcf	___awmod@divisor^0,f,c
 11980  00516A  2E05               	decfsz	___awmod@counter^0,f,c
 11981  00516C  EFA3  F028         	goto	l4561
 11982  005170                     l4569:
 11983  005170  5006               	movf	___awmod@sign^0,w,c
 11984  005172  B4D8               	btfsc	status,2,c
 11985  005174  EFBE  F028         	goto	u5041
 11986  005178  EFC0  F028         	goto	u5040
 11987  00517C                     u5041:
 11988  00517C  EFC4  F028         	goto	l4573
 11989  005180                     u5040:
 11990  005180  6C01               	negf	___awmod@dividend^0,c
 11991  005182  1E02               	comf	(___awmod@dividend+1)^0,f,c
 11992  005184  B0D8               	btfsc	status,0,c
 11993  005186  2A02               	incf	(___awmod@dividend+1)^0,f,c
 11994  005188                     l4573:
 11995  005188  C001  F001         	movff	___awmod@dividend,?___awmod
 11996  00518C  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
 11997  005190  0012               	return		;funcret
 11998  005192                     __end_of___awmod:
 11999                           	callstack 0
 12000                           
 12001 ;; *************** function ___awdiv *****************
 12002 ;; Defined at:
 12003 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
 12004 ;; Parameters:    Size  Location     Type
 12005 ;;  dividend        2    0[COMRAM] int 
 12006 ;;  divisor         2    2[COMRAM] int 
 12007 ;; Auto vars:     Size  Location     Type
 12008 ;;  quotient        2    6[COMRAM] int 
 12009 ;;  sign            1    5[COMRAM] unsigned char 
 12010 ;;  counter         1    4[COMRAM] unsigned char 
 12011 ;; Return value:  Size  Location     Type
 12012 ;;                  2    0[COMRAM] int 
 12013 ;; Registers used:
 12014 ;;		wreg, status,2, status,0
 12015 ;; Tracked objects:
 12016 ;;		On entry : 0/0
 12017 ;;		On exit  : 0/0
 12018 ;;		Unchanged: 0/0
 12019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12020 ;;      Params:         4       0       0       0       0       0       0
 12021 ;;      Locals:         4       0       0       0       0       0       0
 12022 ;;      Temps:          0       0       0       0       0       0       0
 12023 ;;      Totals:         8       0       0       0       0       0       0
 12024 ;;Total ram usage:        8 bytes
 12025 ;; Hardware stack levels used:    1
 12026 ;; Hardware stack levels required when called:    1
 12027 ;; This function calls:
 12028 ;;		Nothing
 12029 ;; This function is called by:
 12030 ;;		_efgtoa
 12031 ;; This function uses a non-reentrant model
 12032 ;;
 12033                           
 12034                           	psect	text38
 12035  00501E                     __ptext38:
 12036                           	callstack 0
 12037  00501E                     ___awdiv:
 12038                           	callstack 23
 12039  00501E  0E00               	movlw	0
 12040  005020  6E06               	movwf	___awdiv@sign^0,c
 12041  005022  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 12042  005024  EF18  F028         	goto	u4930
 12043  005028  EF16  F028         	goto	u4931
 12044  00502C                     u4931:
 12045  00502C  EF1E  F028         	goto	l4505
 12046  005030                     u4930:
 12047  005030  6C03               	negf	___awdiv@divisor^0,c
 12048  005032  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 12049  005034  B0D8               	btfsc	status,0,c
 12050  005036  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 12051  005038  0E01               	movlw	1
 12052  00503A  6E06               	movwf	___awdiv@sign^0,c
 12053  00503C                     l4505:
 12054  00503C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 12055  00503E  EF25  F028         	goto	u4940
 12056  005042  EF23  F028         	goto	u4941
 12057  005046                     u4941:
 12058  005046  EF2B  F028         	goto	l4511
 12059  00504A                     u4940:
 12060  00504A  6C01               	negf	___awdiv@dividend^0,c
 12061  00504C  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 12062  00504E  B0D8               	btfsc	status,0,c
 12063  005050  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 12064  005052  0E01               	movlw	1
 12065  005054  1A06               	xorwf	___awdiv@sign^0,f,c
 12066  005056                     l4511:
 12067  005056  0E00               	movlw	0
 12068  005058  6E08               	movwf	(___awdiv@quotient+1)^0,c
 12069  00505A  0E00               	movlw	0
 12070  00505C  6E07               	movwf	___awdiv@quotient^0,c
 12071  00505E  5003               	movf	___awdiv@divisor^0,w,c
 12072  005060  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 12073  005062  B4D8               	btfsc	status,2,c
 12074  005064  EF36  F028         	goto	u4951
 12075  005068  EF38  F028         	goto	u4950
 12076  00506C                     u4951:
 12077  00506C  EF60  F028         	goto	l4533
 12078  005070                     u4950:
 12079  005070  0E01               	movlw	1
 12080  005072  6E05               	movwf	___awdiv@counter^0,c
 12081  005074  EF40  F028         	goto	l4519
 12082  005078                     l4517:
 12083  005078  90D8               	bcf	status,0,c
 12084  00507A  3603               	rlcf	___awdiv@divisor^0,f,c
 12085  00507C  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 12086  00507E  2A05               	incf	___awdiv@counter^0,f,c
 12087  005080                     l4519:
 12088  005080  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 12089  005082  EF45  F028         	goto	u4961
 12090  005086  EF47  F028         	goto	u4960
 12091  00508A                     u4961:
 12092  00508A  EF3C  F028         	goto	l4517
 12093  00508E                     u4960:
 12094  00508E                     l4521:
 12095  00508E  90D8               	bcf	status,0,c
 12096  005090  3607               	rlcf	___awdiv@quotient^0,f,c
 12097  005092  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 12098  005094  5003               	movf	___awdiv@divisor^0,w,c
 12099  005096  5C01               	subwf	___awdiv@dividend^0,w,c
 12100  005098  5004               	movf	(___awdiv@divisor+1)^0,w,c
 12101  00509A  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 12102  00509C  A0D8               	btfss	status,0,c
 12103  00509E  EF53  F028         	goto	u4971
 12104  0050A2  EF55  F028         	goto	u4970
 12105  0050A6                     u4971:
 12106  0050A6  EF5A  F028         	goto	l4529
 12107  0050AA                     u4970:
 12108  0050AA  5003               	movf	___awdiv@divisor^0,w,c
 12109  0050AC  5E01               	subwf	___awdiv@dividend^0,f,c
 12110  0050AE  5004               	movf	(___awdiv@divisor+1)^0,w,c
 12111  0050B0  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 12112  0050B2  8007               	bsf	___awdiv@quotient^0,0,c
 12113  0050B4                     l4529:
 12114  0050B4  90D8               	bcf	status,0,c
 12115  0050B6  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 12116  0050B8  3203               	rrcf	___awdiv@divisor^0,f,c
 12117  0050BA  2E05               	decfsz	___awdiv@counter^0,f,c
 12118  0050BC  EF47  F028         	goto	l4521
 12119  0050C0                     l4533:
 12120  0050C0  5006               	movf	___awdiv@sign^0,w,c
 12121  0050C2  B4D8               	btfsc	status,2,c
 12122  0050C4  EF66  F028         	goto	u4981
 12123  0050C8  EF68  F028         	goto	u4980
 12124  0050CC                     u4981:
 12125  0050CC  EF6C  F028         	goto	l4537
 12126  0050D0                     u4980:
 12127  0050D0  6C07               	negf	___awdiv@quotient^0,c
 12128  0050D2  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 12129  0050D4  B0D8               	btfsc	status,0,c
 12130  0050D6  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 12131  0050D8                     l4537:
 12132  0050D8  C007  F001         	movff	___awdiv@quotient,?___awdiv
 12133  0050DC  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 12134  0050E0  0012               	return		;funcret
 12135  0050E2                     __end_of___awdiv:
 12136                           	callstack 0
 12137                           
 12138 ;; *************** function _dtoa *****************
 12139 ;; Defined at:
 12140 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 12141 ;; Parameters:    Size  Location     Type
 12142 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
 12143 ;;		 -> sprintf@f(6), 
 12144 ;;  d               8   29[COMRAM] long long 
 12145 ;; Auto vars:     Size  Location     Type
 12146 ;;  n               8   53[COMRAM] long long 
 12147 ;;  i               2   61[COMRAM] int 
 12148 ;;  s               2   51[COMRAM] int 
 12149 ;;  w               2   49[COMRAM] int 
 12150 ;;  p               2   47[COMRAM] int 
 12151 ;; Return value:  Size  Location     Type
 12152 ;;                  2   27[COMRAM] int 
 12153 ;; Registers used:
 12154 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12155 ;; Tracked objects:
 12156 ;;		On entry : 0/0
 12157 ;;		On exit  : 0/0
 12158 ;;		Unchanged: 0/0
 12159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12160 ;;      Params:        10       0       0       0       0       0       0
 12161 ;;      Locals:        18       0       0       0       0       0       0
 12162 ;;      Temps:          8       0       0       0       0       0       0
 12163 ;;      Totals:        36       0       0       0       0       0       0
 12164 ;;Total ram usage:       36 bytes
 12165 ;; Hardware stack levels used:    1
 12166 ;; Hardware stack levels required when called:    5
 12167 ;; This function calls:
 12168 ;;		___aodiv
 12169 ;;		___aomod
 12170 ;;		_abs
 12171 ;;		_pad
 12172 ;; This function is called by:
 12173 ;;		_vfpfcnvrt
 12174 ;; This function uses a non-reentrant model
 12175 ;;
 12176                           
 12177                           	psect	text39
 12178  003A28                     __ptext39:
 12179                           	callstack 0
 12180  003A28                     _dtoa:
 12181                           	callstack 20
 12182  003A28                     
 12183                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
 12184  003A28  C01E  F036         	movff	dtoa@d,dtoa@n
 12185  003A2C  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
 12186  003A30  C020  F038         	movff	dtoa@d+2,dtoa@n+2
 12187  003A34  C021  F039         	movff	dtoa@d+3,dtoa@n+3
 12188  003A38  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
 12189  003A3C  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
 12190  003A40  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
 12191  003A44  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
 12192  003A48                     
 12193                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
 12194  003A48  BE3D               	btfsc	(dtoa@n+7)^0,7,c
 12195  003A4A  EF29  F01D         	goto	u5521
 12196  003A4E  EF2C  F01D         	goto	u5520
 12197  003A52                     u5521:
 12198  003A52  0E01               	movlw	1
 12199  003A54  EF2D  F01D         	goto	u5530
 12200  003A58                     u5520:
 12201  003A58  0E00               	movlw	0
 12202  003A5A                     u5530:
 12203  003A5A  6E34               	movwf	dtoa@s^0,c
 12204  003A5C  6A35               	clrf	(dtoa@s+1)^0,c
 12205                           
 12206                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
 12207  003A5E  5034               	movf	dtoa@s^0,w,c
 12208  003A60  1035               	iorwf	(dtoa@s+1)^0,w,c
 12209  003A62  B4D8               	btfsc	status,2,c
 12210  003A64  EF36  F01D         	goto	u5541
 12211  003A68  EF38  F01D         	goto	u5540
 12212  003A6C                     u5541:
 12213  003A6C  EF48  F01D         	goto	l4779
 12214  003A70                     u5540:
 12215  003A70                     
 12216                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
 12217  003A70  1E3D               	comf	(dtoa@n+7)^0,f,c
 12218  003A72  1E3C               	comf	(dtoa@n+6)^0,f,c
 12219  003A74  1E3B               	comf	(dtoa@n+5)^0,f,c
 12220  003A76  1E3A               	comf	(dtoa@n+4)^0,f,c
 12221  003A78  1E39               	comf	(dtoa@n+3)^0,f,c
 12222  003A7A  1E38               	comf	(dtoa@n+2)^0,f,c
 12223  003A7C  1E37               	comf	(dtoa@n+1)^0,f,c
 12224  003A7E  6C36               	negf	dtoa@n^0,c
 12225  003A80  0E00               	movlw	0
 12226  003A82  2237               	addwfc	(dtoa@n+1)^0,f,c
 12227  003A84  2238               	addwfc	(dtoa@n+2)^0,f,c
 12228  003A86  2239               	addwfc	(dtoa@n+3)^0,f,c
 12229  003A88  223A               	addwfc	(dtoa@n+4)^0,f,c
 12230  003A8A  223B               	addwfc	(dtoa@n+5)^0,f,c
 12231  003A8C  223C               	addwfc	(dtoa@n+6)^0,f,c
 12232  003A8E  223D               	addwfc	(dtoa@n+7)^0,f,c
 12233  003A90                     l4779:
 12234                           
 12235                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
 12236  003A90  0101               	movlb	1	; () banked
 12237  003A92  BF97               	btfsc	(_prec+1)& (0+255),7,b
 12238  003A94  EF4E  F01D         	goto	u5551
 12239  003A98  EF50  F01D         	goto	u5550
 12240  003A9C                     u5551:
 12241  003A9C  EF51  F01D         	goto	l4783
 12242  003AA0                     u5550:
 12243  003AA0                     
 12244                           ; BSR set to: 1
 12245                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
 12246  003AA0  9398               	bcf	_flags& (0+255),1,b
 12247  003AA2                     l4783:
 12248                           
 12249                           ; BSR set to: 1
 12250                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
 12251  003AA2  BF97               	btfsc	(_prec+1)& (0+255),7,b
 12252  003AA4  EF5E  F01D         	goto	u5560
 12253  003AA8  5197               	movf	(_prec+1)& (0+255),w,b
 12254  003AAA  E106               	bnz	u5561
 12255  003AAC  0596               	decf	_prec& (0+255),w,b
 12256  003AAE  B0D8               	btfsc	status,0,c
 12257  003AB0  EF5C  F01D         	goto	u5561
 12258  003AB4  EF5E  F01D         	goto	u5560
 12259  003AB8                     u5561:
 12260  003AB8  EF64  F01D         	goto	l1225
 12261  003ABC                     u5560:
 12262  003ABC                     
 12263                           ; BSR set to: 1
 12264  003ABC  0E00               	movlw	0
 12265  003ABE  6E31               	movwf	(dtoa@p+1)^0,c
 12266  003AC0  0E01               	movlw	1
 12267  003AC2  6E30               	movwf	dtoa@p^0,c
 12268  003AC4  EF68  F01D         	goto	l1227
 12269  003AC8                     l1225:
 12270                           
 12271                           ; BSR set to: 1
 12272  003AC8  C196  F030         	movff	_prec,dtoa@p
 12273  003ACC  C197  F031         	movff	_prec+1,dtoa@p+1
 12274  003AD0                     l1227:
 12275                           
 12276                           ; BSR set to: 1
 12277                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
 12278  003AD0  C194  F032         	movff	_width,dtoa@w
 12279  003AD4  C195  F033         	movff	_width+1,dtoa@w+1
 12280  003AD8                     
 12281                           ; BSR set to: 1
 12282                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
 12283  003AD8  5034               	movf	dtoa@s^0,w,c
 12284  003ADA  1035               	iorwf	(dtoa@s+1)^0,w,c
 12285  003ADC  A4D8               	btfss	status,2,c
 12286  003ADE  EF73  F01D         	goto	u5571
 12287  003AE2  EF75  F01D         	goto	u5570
 12288  003AE6                     u5571:
 12289  003AE6  EF7C  F01D         	goto	l4791
 12290  003AEA                     u5570:
 12291  003AEA                     
 12292                           ; BSR set to: 1
 12293  003AEA  A598               	btfss	_flags& (0+255),2,b
 12294  003AEC  EF7A  F01D         	goto	u5581
 12295  003AF0  EF7C  F01D         	goto	u5580
 12296  003AF4                     u5581:
 12297  003AF4  EF7F  F01D         	goto	l4793
 12298  003AF8                     u5580:
 12299  003AF8                     l4791:
 12300                           
 12301                           ; BSR set to: 1
 12302                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
 12303  003AF8  0632               	decf	dtoa@w^0,f,c
 12304  003AFA  A0D8               	btfss	status,0,c
 12305  003AFC  0633               	decf	(dtoa@w+1)^0,f,c
 12306  003AFE                     l4793:
 12307                           
 12308                           ; BSR set to: 1
 12309                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
 12310  003AFE  0E00               	movlw	0
 12311  003B00  6E3F               	movwf	(dtoa@i+1)^0,c
 12312  003B02  0E4F               	movlw	79
 12313  003B04  6E3E               	movwf	dtoa@i^0,c
 12314  003B06                     
 12315                           ; BSR set to: 1
 12316                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
 12317  003B06  0E00               	movlw	0
 12318  003B08  6FEE               	movwf	(_dbuf+79)& (0+255),b
 12319                           
 12320                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12321  003B0A  EF03  F01E         	goto	l4807
 12322  003B0E                     l4797:
 12323                           
 12324                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
 12325  003B0E  063E               	decf	dtoa@i^0,f,c
 12326  003B10  A0D8               	btfss	status,0,c
 12327  003B12  063F               	decf	(dtoa@i+1)^0,f,c
 12328  003B14                     
 12329                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
 12330  003B14  0E9F               	movlw	low _dbuf
 12331  003B16  243E               	addwf	dtoa@i^0,w,c
 12332  003B18  6ED9               	movwf	fsr2l,c
 12333  003B1A  0E01               	movlw	high _dbuf
 12334  003B1C  203F               	addwfc	(dtoa@i+1)^0,w,c
 12335  003B1E  6EDA               	movwf	fsr2h,c
 12336  003B20  C036  F001         	movff	dtoa@n,___aomod@dividend
 12337  003B24  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
 12338  003B28  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
 12339  003B2C  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
 12340  003B30  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
 12341  003B34  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
 12342  003B38  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
 12343  003B3C  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
 12344  003B40  0E0A               	movlw	10
 12345  003B42  6E09               	movwf	___aomod@divisor^0,c
 12346  003B44  0E00               	movlw	0
 12347  003B46  6E0A               	movwf	(___aomod@divisor+1)^0,c
 12348  003B48  0E00               	movlw	0
 12349  003B4A  6E0B               	movwf	(___aomod@divisor+2)^0,c
 12350  003B4C  0E00               	movlw	0
 12351  003B4E  6E0C               	movwf	(___aomod@divisor+3)^0,c
 12352  003B50  0E00               	movlw	0
 12353  003B52  6E0D               	movwf	(___aomod@divisor+4)^0,c
 12354  003B54  0E00               	movlw	0
 12355  003B56  6E0E               	movwf	(___aomod@divisor+5)^0,c
 12356  003B58  0E00               	movlw	0
 12357  003B5A  6E0F               	movwf	(___aomod@divisor+6)^0,c
 12358  003B5C  0E00               	movlw	0
 12359  003B5E  6E10               	movwf	(___aomod@divisor+7)^0,c
 12360  003B60  EC97  F023         	call	___aomod	;wreg free
 12361  003B64  C001  F026         	movff	?___aomod,??_dtoa
 12362  003B68  C002  F027         	movff	?___aomod+1,??_dtoa+1
 12363  003B6C  C003  F028         	movff	?___aomod+2,??_dtoa+2
 12364  003B70  C004  F029         	movff	?___aomod+3,??_dtoa+3
 12365  003B74  C005  F02A         	movff	?___aomod+4,??_dtoa+4
 12366  003B78  C006  F02B         	movff	?___aomod+5,??_dtoa+5
 12367  003B7C  C007  F02C         	movff	?___aomod+6,??_dtoa+6
 12368  003B80  C008  F02D         	movff	?___aomod+7,??_dtoa+7
 12369  003B84  C026  F013         	movff	??_dtoa,abs@a
 12370  003B88  C028  F014         	movff	??_dtoa+2,abs@a+1
 12371  003B8C  ECB5  F02C         	call	_abs	;wreg free
 12372  003B90  5013               	movf	?_abs^0,w,c
 12373  003B92  0F30               	addlw	48
 12374  003B94  6EDF               	movwf	indf2,c
 12375  003B96                     
 12376                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
 12377  003B96  0630               	decf	dtoa@p^0,f,c
 12378  003B98  A0D8               	btfss	status,0,c
 12379  003B9A  0631               	decf	(dtoa@p+1)^0,f,c
 12380  003B9C                     
 12381                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
 12382  003B9C  0632               	decf	dtoa@w^0,f,c
 12383  003B9E  A0D8               	btfss	status,0,c
 12384  003BA0  0633               	decf	(dtoa@w+1)^0,f,c
 12385  003BA2                     
 12386                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
 12387  003BA2  C036  F001         	movff	dtoa@n,___aodiv@dividend
 12388  003BA6  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
 12389  003BAA  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
 12390  003BAE  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
 12391  003BB2  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
 12392  003BB6  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
 12393  003BBA  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
 12394  003BBE  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
 12395  003BC2  0E0A               	movlw	10
 12396  003BC4  6E09               	movwf	___aodiv@divisor^0,c
 12397  003BC6  0E00               	movlw	0
 12398  003BC8  6E0A               	movwf	(___aodiv@divisor+1)^0,c
 12399  003BCA  0E00               	movlw	0
 12400  003BCC  6E0B               	movwf	(___aodiv@divisor+2)^0,c
 12401  003BCE  0E00               	movlw	0
 12402  003BD0  6E0C               	movwf	(___aodiv@divisor+3)^0,c
 12403  003BD2  0E00               	movlw	0
 12404  003BD4  6E0D               	movwf	(___aodiv@divisor+4)^0,c
 12405  003BD6  0E00               	movlw	0
 12406  003BD8  6E0E               	movwf	(___aodiv@divisor+5)^0,c
 12407  003BDA  0E00               	movlw	0
 12408  003BDC  6E0F               	movwf	(___aodiv@divisor+6)^0,c
 12409  003BDE  0E00               	movlw	0
 12410  003BE0  6E10               	movwf	(___aodiv@divisor+7)^0,c
 12411  003BE2  EC11  F022         	call	___aodiv	;wreg free
 12412  003BE6  C001  F036         	movff	?___aodiv,dtoa@n
 12413  003BEA  C002  F037         	movff	?___aodiv+1,dtoa@n+1
 12414  003BEE  C003  F038         	movff	?___aodiv+2,dtoa@n+2
 12415  003BF2  C004  F039         	movff	?___aodiv+3,dtoa@n+3
 12416  003BF6  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
 12417  003BFA  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
 12418  003BFE  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
 12419  003C02  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
 12420  003C06                     l4807:
 12421                           
 12422                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12423  003C06  BE3F               	btfsc	(dtoa@i+1)^0,7,c
 12424  003C08  EF0E  F01E         	goto	u5591
 12425  003C0C  503F               	movf	(dtoa@i+1)^0,w,c
 12426  003C0E  E108               	bnz	u5590
 12427  003C10  043E               	decf	dtoa@i^0,w,c
 12428  003C12  A0D8               	btfss	status,0,c
 12429  003C14  EF0E  F01E         	goto	u5591
 12430  003C18  EF10  F01E         	goto	u5590
 12431  003C1C                     u5591:
 12432  003C1C  EF41  F01E         	goto	l4817
 12433  003C20                     u5590:
 12434  003C20  5036               	movf	dtoa@n^0,w,c
 12435  003C22  1037               	iorwf	(dtoa@n+1)^0,w,c
 12436  003C24  1038               	iorwf	(dtoa@n+2)^0,w,c
 12437  003C26  1039               	iorwf	(dtoa@n+3)^0,w,c
 12438  003C28  103A               	iorwf	(dtoa@n+4)^0,w,c
 12439  003C2A  103B               	iorwf	(dtoa@n+5)^0,w,c
 12440  003C2C  103C               	iorwf	(dtoa@n+6)^0,w,c
 12441  003C2E  103D               	iorwf	(dtoa@n+7)^0,w,c
 12442  003C30  A4D8               	btfss	status,2,c
 12443  003C32  EF1D  F01E         	goto	u5601
 12444  003C36  EF1F  F01E         	goto	u5600
 12445  003C3A                     u5601:
 12446  003C3A  EF87  F01D         	goto	l4797
 12447  003C3E                     u5600:
 12448  003C3E  BE31               	btfsc	(dtoa@p+1)^0,7,c
 12449  003C40  EF2C  F01E         	goto	u5610
 12450  003C44  5031               	movf	(dtoa@p+1)^0,w,c
 12451  003C46  E106               	bnz	u5611
 12452  003C48  0430               	decf	dtoa@p^0,w,c
 12453  003C4A  B0D8               	btfsc	status,0,c
 12454  003C4C  EF2A  F01E         	goto	u5611
 12455  003C50  EF2C  F01E         	goto	u5610
 12456  003C54                     u5611:
 12457  003C54  EF87  F01D         	goto	l4797
 12458  003C58                     u5610:
 12459  003C58  BE33               	btfsc	(dtoa@w+1)^0,7,c
 12460  003C5A  EF37  F01E         	goto	u5621
 12461  003C5E  5033               	movf	(dtoa@w+1)^0,w,c
 12462  003C60  E108               	bnz	u5620
 12463  003C62  0432               	decf	dtoa@w^0,w,c
 12464  003C64  A0D8               	btfss	status,0,c
 12465  003C66  EF37  F01E         	goto	u5621
 12466  003C6A  EF39  F01E         	goto	u5620
 12467  003C6E                     u5621:
 12468  003C6E  EF41  F01E         	goto	l4817
 12469  003C72                     u5620:
 12470  003C72  0101               	movlb	1	; () banked
 12471  003C74  B398               	btfsc	_flags& (0+255),1,b
 12472  003C76  EF3F  F01E         	goto	u5631
 12473  003C7A  EF41  F01E         	goto	u5630
 12474  003C7E                     u5631:
 12475  003C7E  EF87  F01D         	goto	l4797
 12476  003C82                     u5630:
 12477  003C82                     l4817:
 12478                           
 12479                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
 12480  003C82  5034               	movf	dtoa@s^0,w,c
 12481  003C84  1035               	iorwf	(dtoa@s+1)^0,w,c
 12482  003C86  A4D8               	btfss	status,2,c
 12483  003C88  EF48  F01E         	goto	u5641
 12484  003C8C  EF4A  F01E         	goto	u5640
 12485  003C90                     u5641:
 12486  003C90  EF52  F01E         	goto	l4821
 12487  003C94                     u5640:
 12488  003C94  0101               	movlb	1	; () banked
 12489  003C96  A598               	btfss	_flags& (0+255),2,b
 12490  003C98  EF50  F01E         	goto	u5651
 12491  003C9C  EF52  F01E         	goto	u5650
 12492  003CA0                     u5651:
 12493  003CA0  EF70  F01E         	goto	l4831
 12494  003CA4                     u5650:
 12495  003CA4                     l4821:
 12496                           
 12497                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
 12498  003CA4  063E               	decf	dtoa@i^0,f,c
 12499  003CA6  A0D8               	btfss	status,0,c
 12500  003CA8  063F               	decf	(dtoa@i+1)^0,f,c
 12501  003CAA                     
 12502                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
 12503  003CAA  5034               	movf	dtoa@s^0,w,c
 12504  003CAC  1035               	iorwf	(dtoa@s+1)^0,w,c
 12505  003CAE  A4D8               	btfss	status,2,c
 12506  003CB0  EF5C  F01E         	goto	u5661
 12507  003CB4  EF5E  F01E         	goto	u5660
 12508  003CB8                     u5661:
 12509  003CB8  EF64  F01E         	goto	l4827
 12510  003CBC                     u5660:
 12511  003CBC  0E00               	movlw	0
 12512  003CBE  6E2F               	movwf	(_dtoa$2481+1)^0,c
 12513  003CC0  0E2B               	movlw	43
 12514  003CC2  6E2E               	movwf	_dtoa$2481^0,c
 12515  003CC4  EF68  F01E         	goto	l4829
 12516  003CC8                     l4827:
 12517  003CC8  0E00               	movlw	0
 12518  003CCA  6E2F               	movwf	(_dtoa$2481+1)^0,c
 12519  003CCC  0E2D               	movlw	45
 12520  003CCE  6E2E               	movwf	_dtoa$2481^0,c
 12521  003CD0                     l4829:
 12522  003CD0  0E9F               	movlw	low _dbuf
 12523  003CD2  243E               	addwf	dtoa@i^0,w,c
 12524  003CD4  6ED9               	movwf	fsr2l,c
 12525  003CD6  0E01               	movlw	high _dbuf
 12526  003CD8  203F               	addwfc	(dtoa@i+1)^0,w,c
 12527  003CDA  6EDA               	movwf	fsr2h,c
 12528  003CDC  C02E  FFDF         	movff	_dtoa$2481,indf2
 12529  003CE0                     l4831:
 12530                           
 12531                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
 12532  003CE0  C01C  F011         	movff	dtoa@fp,pad@fp
 12533  003CE4  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
 12534  003CE8  0E9F               	movlw	low _dbuf
 12535  003CEA  243E               	addwf	dtoa@i^0,w,c
 12536  003CEC  6E13               	movwf	pad@buf^0,c
 12537  003CEE  0E01               	movlw	high _dbuf
 12538  003CF0  203F               	addwfc	(dtoa@i+1)^0,w,c
 12539  003CF2  6E14               	movwf	(pad@buf+1)^0,c
 12540  003CF4  C032  F015         	movff	dtoa@w,pad@p
 12541  003CF8  C033  F016         	movff	dtoa@w+1,pad@p+1
 12542  003CFC  ECAC  F027         	call	_pad	;wreg free
 12543  003D00  C011  F01C         	movff	?_pad,?_dtoa
 12544  003D04  C012  F01D         	movff	?_pad+1,?_dtoa+1
 12545  003D08  0012               	return		;funcret
 12546  003D0A                     __end_of_dtoa:
 12547                           	callstack 0
 12548                           
 12549 ;; *************** function _pad *****************
 12550 ;; Defined at:
 12551 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 12552 ;; Parameters:    Size  Location     Type
 12553 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 12554 ;;		 -> sprintf@f(6), 
 12555 ;;  buf             2   18[COMRAM] PTR unsigned char 
 12556 ;;		 -> dbuf(80), 
 12557 ;;  p               2   20[COMRAM] int 
 12558 ;; Auto vars:     Size  Location     Type
 12559 ;;  w               2   25[COMRAM] int 
 12560 ;;  i               2   23[COMRAM] int 
 12561 ;; Return value:  Size  Location     Type
 12562 ;;                  2   16[COMRAM] int 
 12563 ;; Registers used:
 12564 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12565 ;; Tracked objects:
 12566 ;;		On entry : 0/0
 12567 ;;		On exit  : 0/0
 12568 ;;		Unchanged: 0/0
 12569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12570 ;;      Params:         6       0       0       0       0       0       0
 12571 ;;      Locals:         4       0       0       0       0       0       0
 12572 ;;      Temps:          1       0       0       0       0       0       0
 12573 ;;      Totals:        11       0       0       0       0       0       0
 12574 ;;Total ram usage:       11 bytes
 12575 ;; Hardware stack levels used:    1
 12576 ;; Hardware stack levels required when called:    4
 12577 ;; This function calls:
 12578 ;;		_fputc
 12579 ;;		_fputs
 12580 ;;		_strlen
 12581 ;; This function is called by:
 12582 ;;		_dtoa
 12583 ;;		_efgtoa
 12584 ;; This function uses a non-reentrant model
 12585 ;;
 12586                           
 12587                           	psect	text40
 12588  004F58                     __ptext40:
 12589                           	callstack 0
 12590  004F58                     _pad:
 12591                           	callstack 20
 12592  004F58                     
 12593                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 12594  004F58  0101               	movlb	1	; () banked
 12595  004F5A  A198               	btfss	_flags& (0+255),0,b
 12596  004F5C  EFB2  F027         	goto	u5211
 12597  004F60  EFB4  F027         	goto	u5210
 12598  004F64                     u5211:
 12599  004F64  EFBE  F027         	goto	l4671
 12600  004F68                     u5210:
 12601  004F68                     
 12602                           ; BSR set to: 1
 12603                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 12604  004F68  C013  F00A         	movff	pad@buf,fputs@s
 12605  004F6C  C014  F00B         	movff	pad@buf+1,fputs@s+1
 12606  004F70  C011  F00C         	movff	pad@fp,fputs@fp
 12607  004F74  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 12608  004F78  EC72  F02C         	call	_fputs	;wreg free
 12609  004F7C                     l4671:
 12610                           
 12611                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 12612  004F7C  BE16               	btfsc	(pad@p+1)^0,7,c
 12613  004F7E  EFC3  F027         	goto	u5221
 12614  004F82  EFC5  F027         	goto	u5220
 12615  004F86                     u5221:
 12616  004F86  EFCB  F027         	goto	l4675
 12617  004F8A                     u5220:
 12618  004F8A  C015  F01A         	movff	pad@p,pad@w
 12619  004F8E  C016  F01B         	movff	pad@p+1,pad@w+1
 12620  004F92  EFCF  F027         	goto	l1214
 12621  004F96                     l4675:
 12622  004F96  0E00               	movlw	0
 12623  004F98  6E1B               	movwf	(pad@w+1)^0,c
 12624  004F9A  0E00               	movlw	0
 12625  004F9C  6E1A               	movwf	pad@w^0,c
 12626  004F9E                     l1214:
 12627                           
 12628                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 12629  004F9E  0E00               	movlw	0
 12630  004FA0  6E19               	movwf	(pad@i+1)^0,c
 12631  004FA2  0E00               	movlw	0
 12632  004FA4  6E18               	movwf	pad@i^0,c
 12633                           
 12634                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12635  004FA6  EFE1  F027         	goto	l4681
 12636  004FAA                     l4677:
 12637                           
 12638                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 12639  004FAA  0E00               	movlw	0
 12640  004FAC  6E02               	movwf	(fputc@c+1)^0,c
 12641  004FAE  0E20               	movlw	32
 12642  004FB0  6E01               	movwf	fputc@c^0,c
 12643  004FB2  C011  F003         	movff	pad@fp,fputc@fp
 12644  004FB6  C012  F004         	movff	pad@fp+1,fputc@fp+1
 12645  004FBA  EC47  F027         	call	_fputc	;wreg free
 12646  004FBE                     
 12647                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
 12648  004FBE  4A18               	infsnz	pad@i^0,f,c
 12649  004FC0  2A19               	incf	(pad@i+1)^0,f,c
 12650  004FC2                     l4681:
 12651                           
 12652                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12653  004FC2  501A               	movf	pad@w^0,w,c
 12654  004FC4  5C18               	subwf	pad@i^0,w,c
 12655  004FC6  5019               	movf	(pad@i+1)^0,w,c
 12656  004FC8  0A80               	xorlw	128
 12657  004FCA  6E17               	movwf	??_pad^0,c
 12658  004FCC  501B               	movf	(pad@w+1)^0,w,c
 12659  004FCE  0A80               	xorlw	128
 12660  004FD0  5817               	subwfb	??_pad^0,w,c
 12661  004FD2  A0D8               	btfss	status,0,c
 12662  004FD4  EFEE  F027         	goto	u5231
 12663  004FD8  EFF0  F027         	goto	u5230
 12664  004FDC                     u5231:
 12665  004FDC  EFD5  F027         	goto	l4677
 12666  004FE0                     u5230:
 12667  004FE0                     
 12668                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 12669  004FE0  0101               	movlb	1	; () banked
 12670  004FE2  B198               	btfsc	_flags& (0+255),0,b
 12671  004FE4  EFF6  F027         	goto	u5241
 12672  004FE8  EFF8  F027         	goto	u5240
 12673  004FEC                     u5241:
 12674  004FEC  EF02  F028         	goto	l4685
 12675  004FF0                     u5240:
 12676  004FF0                     
 12677                           ; BSR set to: 1
 12678                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 12679  004FF0  C013  F00A         	movff	pad@buf,fputs@s
 12680  004FF4  C014  F00B         	movff	pad@buf+1,fputs@s+1
 12681  004FF8  C011  F00C         	movff	pad@fp,fputs@fp
 12682  004FFC  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 12683  005000  EC72  F02C         	call	_fputs	;wreg free
 12684  005004                     l4685:
 12685                           
 12686                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
 12687  005004  C013  F001         	movff	pad@buf,strlen@s
 12688  005008  C014  F002         	movff	pad@buf+1,strlen@s+1
 12689  00500C  EC81  F02D         	call	_strlen	;wreg free
 12690  005010  501A               	movf	pad@w^0,w,c
 12691  005012  2401               	addwf	?_strlen^0,w,c
 12692  005014  6E11               	movwf	?_pad^0,c
 12693  005016  501B               	movf	(pad@w+1)^0,w,c
 12694  005018  2002               	addwfc	(?_strlen+1)^0,w,c
 12695  00501A  6E12               	movwf	(?_pad+1)^0,c
 12696  00501C  0012               	return		;funcret
 12697  00501E                     __end_of_pad:
 12698                           	callstack 0
 12699                           
 12700 ;; *************** function _strlen *****************
 12701 ;; Defined at:
 12702 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
 12703 ;; Parameters:    Size  Location     Type
 12704 ;;  s               2    0[COMRAM] PTR const unsigned char 
 12705 ;;		 -> dbuf(80), 
 12706 ;; Auto vars:     Size  Location     Type
 12707 ;;  a               2    2[COMRAM] PTR const unsigned char 
 12708 ;;		 -> dbuf(80), 
 12709 ;; Return value:  Size  Location     Type
 12710 ;;                  2    0[COMRAM] unsigned int 
 12711 ;; Registers used:
 12712 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12713 ;; Tracked objects:
 12714 ;;		On entry : 0/0
 12715 ;;		On exit  : 0/0
 12716 ;;		Unchanged: 0/0
 12717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12718 ;;      Params:         2       0       0       0       0       0       0
 12719 ;;      Locals:         2       0       0       0       0       0       0
 12720 ;;      Temps:          0       0       0       0       0       0       0
 12721 ;;      Totals:         4       0       0       0       0       0       0
 12722 ;;Total ram usage:        4 bytes
 12723 ;; Hardware stack levels used:    1
 12724 ;; Hardware stack levels required when called:    1
 12725 ;; This function calls:
 12726 ;;		Nothing
 12727 ;; This function is called by:
 12728 ;;		_pad
 12729 ;; This function uses a non-reentrant model
 12730 ;;
 12731                           
 12732                           	psect	text41
 12733  005B02                     __ptext41:
 12734                           	callstack 0
 12735  005B02                     _strlen:
 12736                           	callstack 22
 12737  005B02  C001  F003         	movff	strlen@s,strlen@a
 12738  005B06  C002  F004         	movff	strlen@s+1,strlen@a+1
 12739  005B0A  EF89  F02D         	goto	l4127
 12740  005B0E                     l4125:
 12741  005B0E  4A01               	infsnz	strlen@s^0,f,c
 12742  005B10  2A02               	incf	(strlen@s+1)^0,f,c
 12743  005B12                     l4127:
 12744  005B12  C001  FFD9         	movff	strlen@s,fsr2l
 12745  005B16  C002  FFDA         	movff	strlen@s+1,fsr2h
 12746  005B1A  50DF               	movf	indf2,w,c
 12747  005B1C  A4D8               	btfss	status,2,c
 12748  005B1E  EF93  F02D         	goto	u4351
 12749  005B22  EF95  F02D         	goto	u4350
 12750  005B26                     u4351:
 12751  005B26  EF87  F02D         	goto	l4125
 12752  005B2A                     u4350:
 12753  005B2A  5003               	movf	strlen@a^0,w,c
 12754  005B2C  5C01               	subwf	strlen@s^0,w,c
 12755  005B2E  6E01               	movwf	?_strlen^0,c
 12756  005B30  5004               	movf	(strlen@a+1)^0,w,c
 12757  005B32  5802               	subwfb	(strlen@s+1)^0,w,c
 12758  005B34  6E02               	movwf	(?_strlen+1)^0,c
 12759  005B36  0012               	return		;funcret
 12760  005B38                     __end_of_strlen:
 12761                           	callstack 0
 12762                           
 12763 ;; *************** function _fputs *****************
 12764 ;; Defined at:
 12765 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
 12766 ;; Parameters:    Size  Location     Type
 12767 ;;  s               2    9[COMRAM] PTR const unsigned char 
 12768 ;;		 -> dbuf(80), 
 12769 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 12770 ;;		 -> sprintf@f(6), 
 12771 ;; Auto vars:     Size  Location     Type
 12772 ;;  i               2   14[COMRAM] int 
 12773 ;;  c               1   13[COMRAM] unsigned char 
 12774 ;; Return value:  Size  Location     Type
 12775 ;;                  2    9[COMRAM] int 
 12776 ;; Registers used:
 12777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12778 ;; Tracked objects:
 12779 ;;		On entry : 0/0
 12780 ;;		On exit  : 0/0
 12781 ;;		Unchanged: 0/0
 12782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12783 ;;      Params:         4       0       0       0       0       0       0
 12784 ;;      Locals:         3       0       0       0       0       0       0
 12785 ;;      Temps:          0       0       0       0       0       0       0
 12786 ;;      Totals:         7       0       0       0       0       0       0
 12787 ;;Total ram usage:        7 bytes
 12788 ;; Hardware stack levels used:    1
 12789 ;; Hardware stack levels required when called:    3
 12790 ;; This function calls:
 12791 ;;		_fputc
 12792 ;; This function is called by:
 12793 ;;		_pad
 12794 ;; This function uses a non-reentrant model
 12795 ;;
 12796                           
 12797                           	psect	text42
 12798  0058E4                     __ptext42:
 12799                           	callstack 0
 12800  0058E4                     _fputs:
 12801                           	callstack 20
 12802  0058E4  0E00               	movlw	0
 12803  0058E6  6E10               	movwf	(fputs@i+1)^0,c
 12804  0058E8  0E00               	movlw	0
 12805  0058EA  6E0F               	movwf	fputs@i^0,c
 12806  0058EC  EF83  F02C         	goto	l4121
 12807  0058F0                     l4117:
 12808  0058F0  C00E  F001         	movff	fputs@c,fputc@c
 12809  0058F4  6A02               	clrf	(fputc@c+1)^0,c
 12810  0058F6  C00C  F003         	movff	fputs@fp,fputc@fp
 12811  0058FA  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
 12812  0058FE  EC47  F027         	call	_fputc	;wreg free
 12813  005902  4A0F               	infsnz	fputs@i^0,f,c
 12814  005904  2A10               	incf	(fputs@i+1)^0,f,c
 12815  005906                     l4121:
 12816  005906  500F               	movf	fputs@i^0,w,c
 12817  005908  240A               	addwf	fputs@s^0,w,c
 12818  00590A  6ED9               	movwf	fsr2l,c
 12819  00590C  5010               	movf	(fputs@i+1)^0,w,c
 12820  00590E  200B               	addwfc	(fputs@s+1)^0,w,c
 12821  005910  6EDA               	movwf	fsr2h,c
 12822  005912  50DF               	movf	indf2,w,c
 12823  005914  6E0E               	movwf	fputs@c^0,c
 12824  005916  500E               	movf	fputs@c^0,w,c
 12825  005918  A4D8               	btfss	status,2,c
 12826  00591A  EF91  F02C         	goto	u4341
 12827  00591E  EF93  F02C         	goto	u4340
 12828  005922                     u4341:
 12829  005922  EF78  F02C         	goto	l4117
 12830  005926                     u4340:
 12831  005926  0012               	return		;funcret
 12832  005928                     __end_of_fputs:
 12833                           	callstack 0
 12834                           
 12835 ;; *************** function _fputc *****************
 12836 ;; Defined at:
 12837 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
 12838 ;; Parameters:    Size  Location     Type
 12839 ;;  c               2    0[COMRAM] int 
 12840 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 12841 ;;		 -> sprintf@f(6), 
 12842 ;; Auto vars:     Size  Location     Type
 12843 ;;		None
 12844 ;; Return value:  Size  Location     Type
 12845 ;;                  2    0[COMRAM] int 
 12846 ;; Registers used:
 12847 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12848 ;; Tracked objects:
 12849 ;;		On entry : 0/0
 12850 ;;		On exit  : 0/0
 12851 ;;		Unchanged: 0/0
 12852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12853 ;;      Params:         4       0       0       0       0       0       0
 12854 ;;      Locals:         0       0       0       0       0       0       0
 12855 ;;      Temps:          5       0       0       0       0       0       0
 12856 ;;      Totals:         9       0       0       0       0       0       0
 12857 ;;Total ram usage:        9 bytes
 12858 ;; Hardware stack levels used:    1
 12859 ;; Hardware stack levels required when called:    2
 12860 ;; This function calls:
 12861 ;;		_putch
 12862 ;; This function is called by:
 12863 ;;		_pad
 12864 ;;		_vfpfcnvrt
 12865 ;;		_fputs
 12866 ;; This function uses a non-reentrant model
 12867 ;;
 12868                           
 12869                           	psect	text43
 12870  004E8E                     __ptext43:
 12871                           	callstack 0
 12872  004E8E                     _fputc:
 12873                           	callstack 23
 12874  004E8E  5003               	movf	fputc@fp^0,w,c
 12875  004E90  1004               	iorwf	(fputc@fp+1)^0,w,c
 12876  004E92  B4D8               	btfsc	status,2,c
 12877  004E94  EF4E  F027         	goto	u3911
 12878  004E98  EF50  F027         	goto	u3910
 12879  004E9C                     u3911:
 12880  004E9C  EF59  F027         	goto	l3903
 12881  004EA0                     u3910:
 12882  004EA0  5003               	movf	fputc@fp^0,w,c
 12883  004EA2  1004               	iorwf	(fputc@fp+1)^0,w,c
 12884  004EA4  A4D8               	btfss	status,2,c
 12885  004EA6  EF57  F027         	goto	u3921
 12886  004EAA  EF59  F027         	goto	u3920
 12887  004EAE                     u3921:
 12888  004EAE  EF5E  F027         	goto	l3905
 12889  004EB2                     u3920:
 12890  004EB2                     l3903:
 12891  004EB2  5001               	movf	fputc@c^0,w,c
 12892  004EB4  EC60  F02E         	call	_putch
 12893  004EB8  EFAB  F027         	goto	l1474
 12894  004EBC                     l3905:
 12895  004EBC  EE20 F004          	lfsr	2,4
 12896  004EC0  5003               	movf	fputc@fp^0,w,c
 12897  004EC2  26D9               	addwf	fsr2l,f,c
 12898  004EC4  5004               	movf	(fputc@fp+1)^0,w,c
 12899  004EC6  22DA               	addwfc	fsr2h,f,c
 12900  004EC8  50DE               	movf	postinc2,w,c
 12901  004ECA  10DE               	iorwf	postinc2,w,c
 12902  004ECC  B4D8               	btfsc	status,2,c
 12903  004ECE  EF6B  F027         	goto	u3931
 12904  004ED2  EF6D  F027         	goto	u3930
 12905  004ED6                     u3931:
 12906  004ED6  EF88  F027         	goto	l3909
 12907  004EDA                     u3930:
 12908  004EDA  EE20 F004          	lfsr	2,4
 12909  004EDE  5003               	movf	fputc@fp^0,w,c
 12910  004EE0  26D9               	addwf	fsr2l,f,c
 12911  004EE2  5004               	movf	(fputc@fp+1)^0,w,c
 12912  004EE4  22DA               	addwfc	fsr2h,f,c
 12913  004EE6  EE10 F002          	lfsr	1,2
 12914  004EEA  5003               	movf	fputc@fp^0,w,c
 12915  004EEC  26E1               	addwf	fsr1l,f,c
 12916  004EEE  5004               	movf	(fputc@fp+1)^0,w,c
 12917  004EF0  22E2               	addwfc	fsr1h,f,c
 12918  004EF2  50DE               	movf	postinc2,w,c
 12919  004EF4  5CE6               	subwf	postinc1,w,c
 12920  004EF6  50E6               	movf	postinc1,w,c
 12921  004EF8  0A80               	xorlw	128
 12922  004EFA  6E09               	movwf	(??_fputc+4)^0,c
 12923  004EFC  50DE               	movf	postinc2,w,c
 12924  004EFE  0A80               	xorlw	128
 12925  004F00  5809               	subwfb	(??_fputc+4)^0,w,c
 12926  004F02  B0D8               	btfsc	status,0,c
 12927  004F04  EF86  F027         	goto	u3941
 12928  004F08  EF88  F027         	goto	u3940
 12929  004F0C                     u3941:
 12930  004F0C  EFAB  F027         	goto	l1474
 12931  004F10                     u3940:
 12932  004F10                     l3909:
 12933  004F10  EE20 F002          	lfsr	2,2
 12934  004F14  5003               	movf	fputc@fp^0,w,c
 12935  004F16  26D9               	addwf	fsr2l,f,c
 12936  004F18  5004               	movf	(fputc@fp+1)^0,w,c
 12937  004F1A  22DA               	addwfc	fsr2h,f,c
 12938  004F1C  CFDE F005          	movff	postinc2,??_fputc
 12939  004F20  CFDD F006          	movff	postdec2,??_fputc+1
 12940  004F24  C003  FFD9         	movff	fputc@fp,fsr2l
 12941  004F28  C004  FFDA         	movff	fputc@fp+1,fsr2h
 12942  004F2C  CFDE F007          	movff	postinc2,??_fputc+2
 12943  004F30  CFDD F008          	movff	postdec2,??_fputc+3
 12944  004F34  5005               	movf	??_fputc^0,w,c
 12945  004F36  2407               	addwf	(??_fputc+2)^0,w,c
 12946  004F38  6ED9               	movwf	fsr2l,c
 12947  004F3A  5006               	movf	(??_fputc+1)^0,w,c
 12948  004F3C  2008               	addwfc	(??_fputc+3)^0,w,c
 12949  004F3E  6EDA               	movwf	fsr2h,c
 12950  004F40  C001  FFDF         	movff	fputc@c,indf2
 12951  004F44  EE20 F002          	lfsr	2,2
 12952  004F48  5003               	movf	fputc@fp^0,w,c
 12953  004F4A  26D9               	addwf	fsr2l,f,c
 12954  004F4C  5004               	movf	(fputc@fp+1)^0,w,c
 12955  004F4E  22DA               	addwfc	fsr2h,f,c
 12956  004F50  2ADE               	incf	postinc2,f,c
 12957  004F52  0E00               	movlw	0
 12958  004F54  22DD               	addwfc	postdec2,f,c
 12959  004F56                     l1474:
 12960  004F56  0012               	return		;funcret
 12961  004F58                     __end_of_fputc:
 12962                           	callstack 0
 12963                           
 12964 ;; *************** function _putch *****************
 12965 ;; Defined at:
 12966 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
 12967 ;; Parameters:    Size  Location     Type
 12968 ;;  c               1    wreg     unsigned char 
 12969 ;; Auto vars:     Size  Location     Type
 12970 ;;  c               1    0[COMRAM] unsigned char 
 12971 ;; Return value:  Size  Location     Type
 12972 ;;                  1    wreg      void 
 12973 ;; Registers used:
 12974 ;;		wreg
 12975 ;; Tracked objects:
 12976 ;;		On entry : 0/0
 12977 ;;		On exit  : 0/0
 12978 ;;		Unchanged: 0/0
 12979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12980 ;;      Params:         0       0       0       0       0       0       0
 12981 ;;      Locals:         0       0       0       0       0       0       0
 12982 ;;      Temps:          0       0       0       0       0       0       0
 12983 ;;      Totals:         0       0       0       0       0       0       0
 12984 ;;Total ram usage:        0 bytes
 12985 ;; Hardware stack levels used:    1
 12986 ;; Hardware stack levels required when called:    1
 12987 ;; This function calls:
 12988 ;;		Nothing
 12989 ;; This function is called by:
 12990 ;;		_fputc
 12991 ;; This function uses a non-reentrant model
 12992 ;;
 12993                           
 12994                           	psect	text44
 12995  005CC0                     __ptext44:
 12996                           	callstack 0
 12997  005CC0                     _putch:
 12998                           	callstack 23
 12999  005CC0  0012               	return		;funcret
 13000  005CC2                     __end_of_putch:
 13001                           	callstack 0
 13002                           
 13003 ;; *************** function _abs *****************
 13004 ;; Defined at:
 13005 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
 13006 ;; Parameters:    Size  Location     Type
 13007 ;;  a               2   18[COMRAM] int 
 13008 ;; Auto vars:     Size  Location     Type
 13009 ;;		None
 13010 ;; Return value:  Size  Location     Type
 13011 ;;                  2   18[COMRAM] int 
 13012 ;; Registers used:
 13013 ;;		wreg, status,2, status,0
 13014 ;; Tracked objects:
 13015 ;;		On entry : 0/0
 13016 ;;		On exit  : 0/0
 13017 ;;		Unchanged: 0/0
 13018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13019 ;;      Params:         2       0       0       0       0       0       0
 13020 ;;      Locals:         0       0       0       0       0       0       0
 13021 ;;      Temps:          2       0       0       0       0       0       0
 13022 ;;      Totals:         4       0       0       0       0       0       0
 13023 ;;Total ram usage:        4 bytes
 13024 ;; Hardware stack levels used:    1
 13025 ;; Hardware stack levels required when called:    1
 13026 ;; This function calls:
 13027 ;;		Nothing
 13028 ;; This function is called by:
 13029 ;;		_dtoa
 13030 ;; This function uses a non-reentrant model
 13031 ;;
 13032                           
 13033                           	psect	text45
 13034  00596A                     __ptext45:
 13035                           	callstack 0
 13036  00596A                     _abs:
 13037                           	callstack 23
 13038  00596A  BE14               	btfsc	(abs@a+1)^0,7,c
 13039  00596C  EFC2  F02C         	goto	u5250
 13040  005970  5014               	movf	(abs@a+1)^0,w,c
 13041  005972  E106               	bnz	u5251
 13042  005974  0413               	decf	abs@a^0,w,c
 13043  005976  B0D8               	btfsc	status,0,c
 13044  005978  EFC0  F02C         	goto	u5251
 13045  00597C  EFC2  F02C         	goto	u5250
 13046  005980                     u5251:
 13047  005980  EFD0  F02C         	goto	l1395
 13048  005984                     u5250:
 13049  005984  C013  F015         	movff	abs@a,??_abs
 13050  005988  C014  F016         	movff	abs@a+1,??_abs+1
 13051  00598C  1E15               	comf	??_abs^0,f,c
 13052  00598E  1E16               	comf	(??_abs+1)^0,f,c
 13053  005990  4A15               	infsnz	??_abs^0,f,c
 13054  005992  2A16               	incf	(??_abs+1)^0,f,c
 13055  005994  C015  F013         	movff	??_abs,?_abs
 13056  005998  C016  F014         	movff	??_abs+1,?_abs+1
 13057  00599C  EFD4  F02C         	goto	l1398
 13058  0059A0                     l1395:
 13059  0059A0  C013  F013         	movff	abs@a,?_abs
 13060  0059A4  C014  F014         	movff	abs@a+1,?_abs+1
 13061  0059A8                     l1398:
 13062  0059A8  0012               	return		;funcret
 13063  0059AA                     __end_of_abs:
 13064                           	callstack 0
 13065                           
 13066 ;; *************** function ___aomod *****************
 13067 ;; Defined at:
 13068 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
 13069 ;; Parameters:    Size  Location     Type
 13070 ;;  dividend        8    0[COMRAM] long long 
 13071 ;;  divisor         8    8[COMRAM] long long 
 13072 ;; Auto vars:     Size  Location     Type
 13073 ;;  sign            1   17[COMRAM] unsigned char 
 13074 ;;  counter         1   16[COMRAM] unsigned char 
 13075 ;; Return value:  Size  Location     Type
 13076 ;;                  8    0[COMRAM] long long 
 13077 ;; Registers used:
 13078 ;;		wreg, status,2, status,0
 13079 ;; Tracked objects:
 13080 ;;		On entry : 0/0
 13081 ;;		On exit  : 0/0
 13082 ;;		Unchanged: 0/0
 13083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13084 ;;      Params:        16       0       0       0       0       0       0
 13085 ;;      Locals:         2       0       0       0       0       0       0
 13086 ;;      Temps:          0       0       0       0       0       0       0
 13087 ;;      Totals:        18       0       0       0       0       0       0
 13088 ;;Total ram usage:       18 bytes
 13089 ;; Hardware stack levels used:    1
 13090 ;; Hardware stack levels required when called:    1
 13091 ;; This function calls:
 13092 ;;		Nothing
 13093 ;; This function is called by:
 13094 ;;		_dtoa
 13095 ;; This function uses a non-reentrant model
 13096 ;;
 13097                           
 13098                           	psect	text46
 13099  00472E                     __ptext46:
 13100                           	callstack 0
 13101  00472E                     ___aomod:
 13102                           	callstack 23
 13103  00472E  0E00               	movlw	0
 13104  004730  6E12               	movwf	___aomod@sign^0,c
 13105  004732  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 13106  004734  EFA0  F023         	goto	u4450
 13107  004738  EF9E  F023         	goto	u4451
 13108  00473C                     u4451:
 13109  00473C  EFB2  F023         	goto	l4195
 13110  004740                     u4450:
 13111  004740  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13112  004742  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13113  004744  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13114  004746  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13115  004748  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13116  00474A  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13117  00474C  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13118  00474E  6C01               	negf	___aomod@dividend^0,c
 13119  004750  0E00               	movlw	0
 13120  004752  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13121  004754  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13122  004756  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13123  004758  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13124  00475A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13125  00475C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13126  00475E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13127  004760  0E01               	movlw	1
 13128  004762  6E12               	movwf	___aomod@sign^0,c
 13129  004764                     l4195:
 13130  004764  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 13131  004766  EFB9  F023         	goto	u4460
 13132  00476A  EFB7  F023         	goto	u4461
 13133  00476E                     u4461:
 13134  00476E  EFC9  F023         	goto	l4199
 13135  004772                     u4460:
 13136  004772  1E10               	comf	(___aomod@divisor+7)^0,f,c
 13137  004774  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 13138  004776  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 13139  004778  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 13140  00477A  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 13141  00477C  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 13142  00477E  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 13143  004780  6C09               	negf	___aomod@divisor^0,c
 13144  004782  0E00               	movlw	0
 13145  004784  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 13146  004786  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 13147  004788  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 13148  00478A  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 13149  00478C  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 13150  00478E  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 13151  004790  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 13152  004792                     l4199:
 13153  004792  5009               	movf	___aomod@divisor^0,w,c
 13154  004794  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 13155  004796  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 13156  004798  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 13157  00479A  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 13158  00479C  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 13159  00479E  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 13160  0047A0  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 13161  0047A2  B4D8               	btfsc	status,2,c
 13162  0047A4  EFD6  F023         	goto	u4471
 13163  0047A8  EFD8  F023         	goto	u4470
 13164  0047AC                     u4471:
 13165  0047AC  EF20  F024         	goto	l4215
 13166  0047B0                     u4470:
 13167  0047B0  0E01               	movlw	1
 13168  0047B2  6E11               	movwf	___aomod@counter^0,c
 13169  0047B4  EFE6  F023         	goto	l4205
 13170  0047B8                     l4203:
 13171  0047B8  90D8               	bcf	status,0,c
 13172  0047BA  3609               	rlcf	___aomod@divisor^0,f,c
 13173  0047BC  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 13174  0047BE  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 13175  0047C0  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 13176  0047C2  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 13177  0047C4  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 13178  0047C6  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 13179  0047C8  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 13180  0047CA  2A11               	incf	___aomod@counter^0,f,c
 13181  0047CC                     l4205:
 13182  0047CC  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 13183  0047CE  EFEB  F023         	goto	u4481
 13184  0047D2  EFED  F023         	goto	u4480
 13185  0047D6                     u4481:
 13186  0047D6  EFDC  F023         	goto	l4203
 13187  0047DA                     u4480:
 13188  0047DA                     l4207:
 13189  0047DA  5009               	movf	___aomod@divisor^0,w,c
 13190  0047DC  5C01               	subwf	___aomod@dividend^0,w,c
 13191  0047DE  500A               	movf	(___aomod@divisor+1)^0,w,c
 13192  0047E0  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 13193  0047E2  500B               	movf	(___aomod@divisor+2)^0,w,c
 13194  0047E4  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 13195  0047E6  500C               	movf	(___aomod@divisor+3)^0,w,c
 13196  0047E8  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 13197  0047EA  500D               	movf	(___aomod@divisor+4)^0,w,c
 13198  0047EC  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 13199  0047EE  500E               	movf	(___aomod@divisor+5)^0,w,c
 13200  0047F0  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 13201  0047F2  500F               	movf	(___aomod@divisor+6)^0,w,c
 13202  0047F4  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 13203  0047F6  5010               	movf	(___aomod@divisor+7)^0,w,c
 13204  0047F8  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 13205  0047FA  A0D8               	btfss	status,0,c
 13206  0047FC  EF02  F024         	goto	u4491
 13207  004800  EF04  F024         	goto	u4490
 13208  004804                     u4491:
 13209  004804  EF14  F024         	goto	l4211
 13210  004808                     u4490:
 13211  004808  5009               	movf	___aomod@divisor^0,w,c
 13212  00480A  5E01               	subwf	___aomod@dividend^0,f,c
 13213  00480C  500A               	movf	(___aomod@divisor+1)^0,w,c
 13214  00480E  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 13215  004810  500B               	movf	(___aomod@divisor+2)^0,w,c
 13216  004812  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 13217  004814  500C               	movf	(___aomod@divisor+3)^0,w,c
 13218  004816  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 13219  004818  500D               	movf	(___aomod@divisor+4)^0,w,c
 13220  00481A  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 13221  00481C  500E               	movf	(___aomod@divisor+5)^0,w,c
 13222  00481E  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 13223  004820  500F               	movf	(___aomod@divisor+6)^0,w,c
 13224  004822  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 13225  004824  5010               	movf	(___aomod@divisor+7)^0,w,c
 13226  004826  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 13227  004828                     l4211:
 13228  004828  90D8               	bcf	status,0,c
 13229  00482A  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 13230  00482C  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 13231  00482E  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 13232  004830  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 13233  004832  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 13234  004834  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 13235  004836  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 13236  004838  3209               	rrcf	___aomod@divisor^0,f,c
 13237  00483A  2E11               	decfsz	___aomod@counter^0,f,c
 13238  00483C  EFED  F023         	goto	l4207
 13239  004840                     l4215:
 13240  004840  5012               	movf	___aomod@sign^0,w,c
 13241  004842  B4D8               	btfsc	status,2,c
 13242  004844  EF26  F024         	goto	u4501
 13243  004848  EF28  F024         	goto	u4500
 13244  00484C                     u4501:
 13245  00484C  EF38  F024         	goto	l4219
 13246  004850                     u4500:
 13247  004850  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13248  004852  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13249  004854  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13250  004856  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13251  004858  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13252  00485A  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13253  00485C  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13254  00485E  6C01               	negf	___aomod@dividend^0,c
 13255  004860  0E00               	movlw	0
 13256  004862  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13257  004864  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13258  004866  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13259  004868  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13260  00486A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13261  00486C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13262  00486E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13263  004870                     l4219:
 13264  004870  C001  F001         	movff	___aomod@dividend,?___aomod
 13265  004874  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 13266  004878  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 13267  00487C  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 13268  004880  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 13269  004884  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 13270  004888  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 13271  00488C  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 13272  004890  0012               	return		;funcret
 13273  004892                     __end_of___aomod:
 13274                           	callstack 0
 13275                           
 13276 ;; *************** function ___aodiv *****************
 13277 ;; Defined at:
 13278 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
 13279 ;; Parameters:    Size  Location     Type
 13280 ;;  dividend        8    0[COMRAM] long long 
 13281 ;;  divisor         8    8[COMRAM] long long 
 13282 ;; Auto vars:     Size  Location     Type
 13283 ;;  quotient        8   18[COMRAM] long long 
 13284 ;;  sign            1   17[COMRAM] unsigned char 
 13285 ;;  counter         1   16[COMRAM] unsigned char 
 13286 ;; Return value:  Size  Location     Type
 13287 ;;                  8    0[COMRAM] long long 
 13288 ;; Registers used:
 13289 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13290 ;; Tracked objects:
 13291 ;;		On entry : 0/0
 13292 ;;		On exit  : 0/0
 13293 ;;		Unchanged: 0/0
 13294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13295 ;;      Params:        16       0       0       0       0       0       0
 13296 ;;      Locals:        10       0       0       0       0       0       0
 13297 ;;      Temps:          0       0       0       0       0       0       0
 13298 ;;      Totals:        26       0       0       0       0       0       0
 13299 ;;Total ram usage:       26 bytes
 13300 ;; Hardware stack levels used:    1
 13301 ;; Hardware stack levels required when called:    1
 13302 ;; This function calls:
 13303 ;;		Nothing
 13304 ;; This function is called by:
 13305 ;;		_dtoa
 13306 ;; This function uses a non-reentrant model
 13307 ;;
 13308                           
 13309                           	psect	text47
 13310  004422                     __ptext47:
 13311                           	callstack 0
 13312  004422                     ___aodiv:
 13313                           	callstack 23
 13314  004422  0E00               	movlw	0
 13315  004424  6E12               	movwf	___aodiv@sign^0,c
 13316  004426  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 13317  004428  EF1A  F022         	goto	u4380
 13318  00442C  EF18  F022         	goto	u4381
 13319  004430                     u4381:
 13320  004430  EF2C  F022         	goto	l4151
 13321  004434                     u4380:
 13322  004434  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 13323  004436  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 13324  004438  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 13325  00443A  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 13326  00443C  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 13327  00443E  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 13328  004440  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 13329  004442  6C09               	negf	___aodiv@divisor^0,c
 13330  004444  0E00               	movlw	0
 13331  004446  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 13332  004448  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 13333  00444A  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 13334  00444C  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 13335  00444E  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 13336  004450  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 13337  004452  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 13338  004454  0E01               	movlw	1
 13339  004456  6E12               	movwf	___aodiv@sign^0,c
 13340  004458                     l4151:
 13341  004458  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 13342  00445A  EF33  F022         	goto	u4390
 13343  00445E  EF31  F022         	goto	u4391
 13344  004462                     u4391:
 13345  004462  EF45  F022         	goto	l4157
 13346  004466                     u4390:
 13347  004466  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 13348  004468  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 13349  00446A  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 13350  00446C  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 13351  00446E  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 13352  004470  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 13353  004472  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 13354  004474  6C01               	negf	___aodiv@dividend^0,c
 13355  004476  0E00               	movlw	0
 13356  004478  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 13357  00447A  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 13358  00447C  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 13359  00447E  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 13360  004480  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 13361  004482  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 13362  004484  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 13363  004486  0E01               	movlw	1
 13364  004488  1A12               	xorwf	___aodiv@sign^0,f,c
 13365  00448A                     l4157:
 13366  00448A  EE20  F013         	lfsr	2,___aodiv@quotient
 13367  00448E  0E07               	movlw	7
 13368  004490                     u4401:
 13369  004490  6ADE               	clrf	postinc2,c
 13370  004492  06E8               	decf	wreg,f,c
 13371  004494  E2FD               	bc	u4401
 13372  004496  5009               	movf	___aodiv@divisor^0,w,c
 13373  004498  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 13374  00449A  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 13375  00449C  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 13376  00449E  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 13377  0044A0  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 13378  0044A2  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 13379  0044A4  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 13380  0044A6  B4D8               	btfsc	status,2,c
 13381  0044A8  EF58  F022         	goto	u4411
 13382  0044AC  EF5A  F022         	goto	u4410
 13383  0044B0                     u4411:
 13384  0044B0  EFAC  F022         	goto	l4179
 13385  0044B4                     u4410:
 13386  0044B4  0E01               	movlw	1
 13387  0044B6  6E11               	movwf	___aodiv@counter^0,c
 13388  0044B8  EF68  F022         	goto	l4165
 13389  0044BC                     l4163:
 13390  0044BC  90D8               	bcf	status,0,c
 13391  0044BE  3609               	rlcf	___aodiv@divisor^0,f,c
 13392  0044C0  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 13393  0044C2  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 13394  0044C4  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 13395  0044C6  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 13396  0044C8  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 13397  0044CA  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 13398  0044CC  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 13399  0044CE  2A11               	incf	___aodiv@counter^0,f,c
 13400  0044D0                     l4165:
 13401  0044D0  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 13402  0044D2  EF6D  F022         	goto	u4421
 13403  0044D6  EF6F  F022         	goto	u4420
 13404  0044DA                     u4421:
 13405  0044DA  EF5E  F022         	goto	l4163
 13406  0044DE                     u4420:
 13407  0044DE                     l4167:
 13408  0044DE  90D8               	bcf	status,0,c
 13409  0044E0  3613               	rlcf	___aodiv@quotient^0,f,c
 13410  0044E2  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 13411  0044E4  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 13412  0044E6  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 13413  0044E8  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 13414  0044EA  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 13415  0044EC  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 13416  0044EE  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 13417  0044F0  5009               	movf	___aodiv@divisor^0,w,c
 13418  0044F2  5C01               	subwf	___aodiv@dividend^0,w,c
 13419  0044F4  500A               	movf	(___aodiv@divisor+1)^0,w,c
 13420  0044F6  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 13421  0044F8  500B               	movf	(___aodiv@divisor+2)^0,w,c
 13422  0044FA  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 13423  0044FC  500C               	movf	(___aodiv@divisor+3)^0,w,c
 13424  0044FE  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 13425  004500  500D               	movf	(___aodiv@divisor+4)^0,w,c
 13426  004502  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 13427  004504  500E               	movf	(___aodiv@divisor+5)^0,w,c
 13428  004506  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 13429  004508  500F               	movf	(___aodiv@divisor+6)^0,w,c
 13430  00450A  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 13431  00450C  5010               	movf	(___aodiv@divisor+7)^0,w,c
 13432  00450E  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 13433  004510  A0D8               	btfss	status,0,c
 13434  004512  EF8D  F022         	goto	u4431
 13435  004516  EF8F  F022         	goto	u4430
 13436  00451A                     u4431:
 13437  00451A  EFA0  F022         	goto	l4175
 13438  00451E                     u4430:
 13439  00451E  5009               	movf	___aodiv@divisor^0,w,c
 13440  004520  5E01               	subwf	___aodiv@dividend^0,f,c
 13441  004522  500A               	movf	(___aodiv@divisor+1)^0,w,c
 13442  004524  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 13443  004526  500B               	movf	(___aodiv@divisor+2)^0,w,c
 13444  004528  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 13445  00452A  500C               	movf	(___aodiv@divisor+3)^0,w,c
 13446  00452C  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 13447  00452E  500D               	movf	(___aodiv@divisor+4)^0,w,c
 13448  004530  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 13449  004532  500E               	movf	(___aodiv@divisor+5)^0,w,c
 13450  004534  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 13451  004536  500F               	movf	(___aodiv@divisor+6)^0,w,c
 13452  004538  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 13453  00453A  5010               	movf	(___aodiv@divisor+7)^0,w,c
 13454  00453C  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 13455  00453E  8013               	bsf	___aodiv@quotient^0,0,c
 13456  004540                     l4175:
 13457  004540  90D8               	bcf	status,0,c
 13458  004542  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 13459  004544  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 13460  004546  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 13461  004548  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 13462  00454A  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 13463  00454C  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 13464  00454E  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 13465  004550  3209               	rrcf	___aodiv@divisor^0,f,c
 13466  004552  2E11               	decfsz	___aodiv@counter^0,f,c
 13467  004554  EF6F  F022         	goto	l4167
 13468  004558                     l4179:
 13469  004558  5012               	movf	___aodiv@sign^0,w,c
 13470  00455A  B4D8               	btfsc	status,2,c
 13471  00455C  EFB2  F022         	goto	u4441
 13472  004560  EFB4  F022         	goto	u4440
 13473  004564                     u4441:
 13474  004564  EFC4  F022         	goto	l4183
 13475  004568                     u4440:
 13476  004568  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 13477  00456A  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 13478  00456C  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 13479  00456E  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 13480  004570  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 13481  004572  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 13482  004574  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 13483  004576  6C13               	negf	___aodiv@quotient^0,c
 13484  004578  0E00               	movlw	0
 13485  00457A  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 13486  00457C  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 13487  00457E  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 13488  004580  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 13489  004582  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 13490  004584  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 13491  004586  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 13492  004588                     l4183:
 13493  004588  C013  F001         	movff	___aodiv@quotient,?___aodiv
 13494  00458C  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 13495  004590  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 13496  004594  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 13497  004598  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 13498  00459C  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 13499  0045A0  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 13500  0045A4  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 13501  0045A8  0012               	return		;funcret
 13502  0045AA                     __end_of___aodiv:
 13503                           	callstack 0
 13504                           
 13505 ;; *************** function _atoi *****************
 13506 ;; Defined at:
 13507 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
 13508 ;; Parameters:    Size  Location     Type
 13509 ;;  s               2    7[COMRAM] PTR const unsigned char 
 13510 ;;		 -> STR_16(13), STR_14(14), STR_12(16), STR_10(16), 
 13511 ;;		 -> STR_8(18), STR_6(18), STR_4(18), STR_2(15), 
 13512 ;; Auto vars:     Size  Location     Type
 13513 ;;  n               2   20[COMRAM] int 
 13514 ;;  neg             2   13[COMRAM] int 
 13515 ;; Return value:  Size  Location     Type
 13516 ;;                  2    7[COMRAM] int 
 13517 ;; Registers used:
 13518 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13519 ;; Tracked objects:
 13520 ;;		On entry : 0/0
 13521 ;;		On exit  : 0/0
 13522 ;;		Unchanged: 0/0
 13523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13524 ;;      Params:         2       0       0       0       0       0       0
 13525 ;;      Locals:         9       0       0       0       0       0       0
 13526 ;;      Temps:          4       0       0       0       0       0       0
 13527 ;;      Totals:        15       0       0       0       0       0       0
 13528 ;;Total ram usage:       15 bytes
 13529 ;; Hardware stack levels used:    1
 13530 ;; Hardware stack levels required when called:    2
 13531 ;; This function calls:
 13532 ;;		___wmul
 13533 ;;		_isdigit
 13534 ;;		_isspace
 13535 ;; This function is called by:
 13536 ;;		_vfpfcnvrt
 13537 ;; This function uses a non-reentrant model
 13538 ;;
 13539                           
 13540                           	psect	text48
 13541  004292                     __ptext48:
 13542                           	callstack 0
 13543  004292                     _atoi:
 13544                           	callstack 23
 13545  004292  0E00               	movlw	0
 13546  004294  6E16               	movwf	(atoi@n+1)^0,c
 13547  004296  0E00               	movlw	0
 13548  004298  6E15               	movwf	atoi@n^0,c
 13549  00429A  0E00               	movlw	0
 13550  00429C  6E0F               	movwf	(atoi@neg+1)^0,c
 13551  00429E  0E00               	movlw	0
 13552  0042A0  6E0E               	movwf	atoi@neg^0,c
 13553  0042A2  EF55  F021         	goto	l5137
 13554  0042A6                     l5135:
 13555  0042A6  4A08               	infsnz	atoi@s^0,f,c
 13556  0042A8  2A09               	incf	(atoi@s+1)^0,f,c
 13557  0042AA                     l5137:
 13558  0042AA  0E01               	movlw	1
 13559  0042AC  6E14               	movwf	_atoi$2573^0,c
 13560  0042AE  C008  FFF6         	movff	atoi@s,tblptrl
 13561  0042B2  C009  FFF7         	movff	atoi@s+1,tblptrh
 13562  0042B6                     	if	0	;tblptru may be non-zero
 13563  0042B6                     	endif
 13564  0042B6                     	if	0	;tblptru may be non-zero
 13565  0042B6                     	endif
 13566  0042B6  0008               	tblrd		*
 13567  0042B8  50F5               	movf	tablat,w,c
 13568  0042BA  0A20               	xorlw	32
 13569  0042BC  B4D8               	btfsc	status,2,c
 13570  0042BE  EF63  F021         	goto	u6191
 13571  0042C2  EF65  F021         	goto	u6190
 13572  0042C6                     u6191:
 13573  0042C6  EF82  F021         	goto	l5145
 13574  0042CA                     u6190:
 13575  0042CA  0EF7               	movlw	247
 13576  0042CC  6E0A               	movwf	??_atoi^0,c
 13577  0042CE  0EFF               	movlw	255
 13578  0042D0  6E0B               	movwf	(??_atoi+1)^0,c
 13579  0042D2  C008  FFF6         	movff	atoi@s,tblptrl
 13580  0042D6  C009  FFF7         	movff	atoi@s+1,tblptrh
 13581  0042DA                     	if	0	;tblptru may be non-zero
 13582  0042DA                     	endif
 13583  0042DA                     	if	0	;tblptru may be non-zero
 13584  0042DA                     	endif
 13585  0042DA  0008               	tblrd		*
 13586  0042DC  50F5               	movf	tablat,w,c
 13587  0042DE  6E0C               	movwf	(??_atoi+2)^0,c
 13588  0042E0  6A0D               	clrf	(??_atoi+3)^0,c
 13589  0042E2  500A               	movf	??_atoi^0,w,c
 13590  0042E4  260C               	addwf	(??_atoi+2)^0,f,c
 13591  0042E6  500B               	movf	(??_atoi+1)^0,w,c
 13592  0042E8  220D               	addwfc	(??_atoi+3)^0,f,c
 13593  0042EA  500D               	movf	(??_atoi+3)^0,w,c
 13594  0042EC  E109               	bnz	u6200
 13595  0042EE  0E05               	movlw	5
 13596  0042F0  5C0C               	subwf	(??_atoi+2)^0,w,c
 13597  0042F2  A0D8               	btfss	status,0,c
 13598  0042F4  EF7E  F021         	goto	u6201
 13599  0042F8  EF80  F021         	goto	u6200
 13600  0042FC                     u6201:
 13601  0042FC  EF82  F021         	goto	l5145
 13602  004300                     u6200:
 13603  004300  0E00               	movlw	0
 13604  004302  6E14               	movwf	_atoi$2573^0,c
 13605  004304                     l5145:
 13606  004304  C014  F010         	movff	_atoi$2573,_atoi$2572
 13607  004308  6A11               	clrf	(_atoi$2572+1)^0,c
 13608  00430A  5010               	movf	_atoi$2572^0,w,c
 13609  00430C  1011               	iorwf	(_atoi$2572+1)^0,w,c
 13610  00430E  A4D8               	btfss	status,2,c
 13611  004310  EF8C  F021         	goto	u6211
 13612  004314  EF8E  F021         	goto	u6210
 13613  004318                     u6211:
 13614  004318  EF53  F021         	goto	l5135
 13615  00431C                     u6210:
 13616  00431C  EF98  F021         	goto	l5155
 13617  004320                     l5151:
 13618  004320  0E00               	movlw	0
 13619  004322  6E0F               	movwf	(atoi@neg+1)^0,c
 13620  004324  0E01               	movlw	1
 13621  004326  6E0E               	movwf	atoi@neg^0,c
 13622  004328                     l5153:
 13623  004328  4A08               	infsnz	atoi@s^0,f,c
 13624  00432A  2A09               	incf	(atoi@s+1)^0,f,c
 13625  00432C  EFCD  F021         	goto	l5161
 13626  004330                     l5155:
 13627  004330  C008  FFF6         	movff	atoi@s,tblptrl
 13628  004334  C009  FFF7         	movff	atoi@s+1,tblptrh
 13629  004338                     	if	0	;tblptru may be non-zero
 13630  004338                     	endif
 13631  004338                     	if	0	;tblptru may be non-zero
 13632  004338                     	endif
 13633  004338  0008               	tblrd		*
 13634  00433A  50F5               	movf	tablat,w,c
 13635  00433C  6E0A               	movwf	??_atoi^0,c
 13636  00433E  6A0B               	clrf	(??_atoi+1)^0,c
 13637                           
 13638                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13639                           ; Switch size 1, requested type "simple"
 13640                           ; Number of cases is 1, Range of values is 0 to 0
 13641                           ; switch strategies available:
 13642                           ; Name         Instructions Cycles
 13643                           ; simple_byte            4     3 (average)
 13644                           ;	Chosen strategy is simple_byte
 13645  004340  500B               	movf	(??_atoi+1)^0,w,c
 13646  004342  0A00               	xorlw	0	; case 0
 13647  004344  B4D8               	btfsc	status,2,c
 13648  004346  EFA7  F021         	goto	l6281
 13649  00434A  EFCD  F021         	goto	l5161
 13650  00434E                     l6281:
 13651                           
 13652                           ; Switch size 1, requested type "simple"
 13653                           ; Number of cases is 2, Range of values is 43 to 45
 13654                           ; switch strategies available:
 13655                           ; Name         Instructions Cycles
 13656                           ; simple_byte            7     4 (average)
 13657                           ;	Chosen strategy is simple_byte
 13658  00434E  500A               	movf	??_atoi^0,w,c
 13659  004350  0A2B               	xorlw	43	; case 43
 13660  004352  B4D8               	btfsc	status,2,c
 13661  004354  EF94  F021         	goto	l5153
 13662  004358  0A06               	xorlw	6	; case 45
 13663  00435A  B4D8               	btfsc	status,2,c
 13664  00435C  EF90  F021         	goto	l5151
 13665  004360  EFCD  F021         	goto	l5161
 13666  004364                     l5157:
 13667  004364  C015  F001         	movff	atoi@n,___wmul@multiplier
 13668  004368  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 13669  00436C  0E00               	movlw	0
 13670  00436E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 13671  004370  0E0A               	movlw	10
 13672  004372  6E03               	movwf	___wmul@multiplicand^0,c
 13673  004374  EC10  F02E         	call	___wmul	;wreg free
 13674  004378  C008  FFF6         	movff	atoi@s,tblptrl
 13675  00437C  C009  FFF7         	movff	atoi@s+1,tblptrh
 13676  004380                     	if	0	;tblptru may be non-zero
 13677  004380                     	endif
 13678  004380                     	if	0	;tblptru may be non-zero
 13679  004380                     	endif
 13680  004380  0008               	tblrd		*
 13681  004382  50F5               	movf	tablat,w,c
 13682  004384  5E01               	subwf	?___wmul^0,f,c
 13683  004386  0E00               	movlw	0
 13684  004388  5A02               	subwfb	(?___wmul+1)^0,f,c
 13685  00438A  0E30               	movlw	48
 13686  00438C  2401               	addwf	?___wmul^0,w,c
 13687  00438E  6E15               	movwf	atoi@n^0,c
 13688  004390  0E00               	movlw	0
 13689  004392  2002               	addwfc	(?___wmul+1)^0,w,c
 13690  004394  6E16               	movwf	(atoi@n+1)^0,c
 13691  004396  EF94  F021         	goto	l5153
 13692  00439A                     l5161:
 13693  00439A  0ED0               	movlw	208
 13694  00439C  6E0A               	movwf	??_atoi^0,c
 13695  00439E  0EFF               	movlw	255
 13696  0043A0  6E0B               	movwf	(??_atoi+1)^0,c
 13697  0043A2  C008  FFF6         	movff	atoi@s,tblptrl
 13698  0043A6  C009  FFF7         	movff	atoi@s+1,tblptrh
 13699  0043AA                     	if	0	;tblptru may be non-zero
 13700  0043AA                     	endif
 13701  0043AA                     	if	0	;tblptru may be non-zero
 13702  0043AA                     	endif
 13703  0043AA  0008               	tblrd		*
 13704  0043AC  50F5               	movf	tablat,w,c
 13705  0043AE  6E0C               	movwf	(??_atoi+2)^0,c
 13706  0043B0  6A0D               	clrf	(??_atoi+3)^0,c
 13707  0043B2  500A               	movf	??_atoi^0,w,c
 13708  0043B4  260C               	addwf	(??_atoi+2)^0,f,c
 13709  0043B6  500B               	movf	(??_atoi+1)^0,w,c
 13710  0043B8  220D               	addwfc	(??_atoi+3)^0,f,c
 13711  0043BA  500D               	movf	(??_atoi+3)^0,w,c
 13712  0043BC  E10A               	bnz	u6220
 13713  0043BE  0E0A               	movlw	10
 13714  0043C0  5C0C               	subwf	(??_atoi+2)^0,w,c
 13715  0043C2  A0D8               	btfss	status,0,c
 13716  0043C4  EFE6  F021         	goto	u6221
 13717  0043C8  EFE9  F021         	goto	u6220
 13718  0043CC                     u6221:
 13719  0043CC  0E01               	movlw	1
 13720  0043CE  EFEA  F021         	goto	u6230
 13721  0043D2                     u6220:
 13722  0043D2  0E00               	movlw	0
 13723  0043D4                     u6230:
 13724  0043D4  6E12               	movwf	_atoi$2574^0,c
 13725  0043D6  6A13               	clrf	(_atoi$2574+1)^0,c
 13726  0043D8  5012               	movf	_atoi$2574^0,w,c
 13727  0043DA  1013               	iorwf	(_atoi$2574+1)^0,w,c
 13728  0043DC  A4D8               	btfss	status,2,c
 13729  0043DE  EFF3  F021         	goto	u6241
 13730  0043E2  EFF5  F021         	goto	u6240
 13731  0043E6                     u6241:
 13732  0043E6  EFB2  F021         	goto	l5157
 13733  0043EA                     u6240:
 13734  0043EA  500E               	movf	atoi@neg^0,w,c
 13735  0043EC  100F               	iorwf	(atoi@neg+1)^0,w,c
 13736  0043EE  A4D8               	btfss	status,2,c
 13737  0043F0  EFFC  F021         	goto	u6251
 13738  0043F4  EFFE  F021         	goto	u6250
 13739  0043F8                     u6251:
 13740  0043F8  EF0C  F022         	goto	l1426
 13741  0043FC                     u6250:
 13742  0043FC  C015  F00A         	movff	atoi@n,??_atoi
 13743  004400  C016  F00B         	movff	atoi@n+1,??_atoi+1
 13744  004404  1E0A               	comf	??_atoi^0,f,c
 13745  004406  1E0B               	comf	(??_atoi+1)^0,f,c
 13746  004408  4A0A               	infsnz	??_atoi^0,f,c
 13747  00440A  2A0B               	incf	(??_atoi+1)^0,f,c
 13748  00440C  C00A  F008         	movff	??_atoi,?_atoi
 13749  004410  C00B  F009         	movff	??_atoi+1,?_atoi+1
 13750  004414  EF10  F022         	goto	l1429
 13751  004418                     l1426:
 13752  004418  C015  F008         	movff	atoi@n,?_atoi
 13753  00441C  C016  F009         	movff	atoi@n+1,?_atoi+1
 13754  004420                     l1429:
 13755  004420  0012               	return		;funcret
 13756  004422                     __end_of_atoi:
 13757                           	callstack 0
 13758                           
 13759 ;; *************** function _isspace *****************
 13760 ;; Defined at:
 13761 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
 13762 ;; Parameters:    Size  Location     Type
 13763 ;;  c               2    0[COMRAM] int 
 13764 ;; Auto vars:     Size  Location     Type
 13765 ;;		None
 13766 ;; Return value:  Size  Location     Type
 13767 ;;                  2    0[COMRAM] int 
 13768 ;; Registers used:
 13769 ;;		wreg, status,2, status,0
 13770 ;; Tracked objects:
 13771 ;;		On entry : 0/0
 13772 ;;		On exit  : 0/0
 13773 ;;		Unchanged: 0/0
 13774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13775 ;;      Params:         2       0       0       0       0       0       0
 13776 ;;      Locals:         1       0       0       0       0       0       0
 13777 ;;      Temps:          4       0       0       0       0       0       0
 13778 ;;      Totals:         7       0       0       0       0       0       0
 13779 ;;Total ram usage:        7 bytes
 13780 ;; Hardware stack levels used:    1
 13781 ;; Hardware stack levels required when called:    1
 13782 ;; This function calls:
 13783 ;;		Nothing
 13784 ;; This function is called by:
 13785 ;;		_atoi
 13786 ;; This function uses a non-reentrant model
 13787 ;;
 13788                           
 13789                           	psect	text49
 13790  00584C                     __ptext49:
 13791                           	callstack 0
 13792  00584C                     _isspace:
 13793                           	callstack 23
 13794  00584C  0E01               	movlw	1
 13795  00584E  6E07               	movwf	_isspace$2603^0,c
 13796  005850  0E20               	movlw	32
 13797  005852  1801               	xorwf	isspace@c^0,w,c
 13798  005854  1002               	iorwf	(isspace@c+1)^0,w,c
 13799  005856  B4D8               	btfsc	status,2,c
 13800  005858  EF30  F02C         	goto	u5501
 13801  00585C  EF32  F02C         	goto	u5500
 13802  005860                     u5501:
 13803  005860  EF4B  F02C         	goto	l4769
 13804  005864                     u5500:
 13805  005864  0EF7               	movlw	247
 13806  005866  6E03               	movwf	??_isspace^0,c
 13807  005868  0EFF               	movlw	255
 13808  00586A  6E04               	movwf	(??_isspace+1)^0,c
 13809  00586C  C001  F005         	movff	isspace@c,??_isspace+2
 13810  005870  C002  F006         	movff	isspace@c+1,??_isspace+3
 13811  005874  5003               	movf	??_isspace^0,w,c
 13812  005876  2605               	addwf	(??_isspace+2)^0,f,c
 13813  005878  5004               	movf	(??_isspace+1)^0,w,c
 13814  00587A  2206               	addwfc	(??_isspace+3)^0,f,c
 13815  00587C  5006               	movf	(??_isspace+3)^0,w,c
 13816  00587E  E109               	bnz	u5510
 13817  005880  0E05               	movlw	5
 13818  005882  5C05               	subwf	(??_isspace+2)^0,w,c
 13819  005884  A0D8               	btfss	status,0,c
 13820  005886  EF47  F02C         	goto	u5511
 13821  00588A  EF49  F02C         	goto	u5510
 13822  00588E                     u5511:
 13823  00588E  EF4B  F02C         	goto	l4769
 13824  005892                     u5510:
 13825  005892  0E00               	movlw	0
 13826  005894  6E07               	movwf	_isspace$2603^0,c
 13827  005896                     l4769:
 13828  005896  C007  F001         	movff	_isspace$2603,?_isspace
 13829  00589A  6A02               	clrf	(?_isspace+1)^0,c
 13830  00589C  0012               	return		;funcret
 13831  00589E                     __end_of_isspace:
 13832                           	callstack 0
 13833                           
 13834 ;; *************** function _isdigit *****************
 13835 ;; Defined at:
 13836 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
 13837 ;; Parameters:    Size  Location     Type
 13838 ;;  c               2    0[COMRAM] int 
 13839 ;; Auto vars:     Size  Location     Type
 13840 ;;		None
 13841 ;; Return value:  Size  Location     Type
 13842 ;;                  2    0[COMRAM] int 
 13843 ;; Registers used:
 13844 ;;		wreg, status,2, status,0
 13845 ;; Tracked objects:
 13846 ;;		On entry : 0/0
 13847 ;;		On exit  : 0/0
 13848 ;;		Unchanged: 0/0
 13849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13850 ;;      Params:         2       0       0       0       0       0       0
 13851 ;;      Locals:         0       0       0       0       0       0       0
 13852 ;;      Temps:          4       0       0       0       0       0       0
 13853 ;;      Totals:         6       0       0       0       0       0       0
 13854 ;;Total ram usage:        6 bytes
 13855 ;; Hardware stack levels used:    1
 13856 ;; Hardware stack levels required when called:    1
 13857 ;; This function calls:
 13858 ;;		Nothing
 13859 ;; This function is called by:
 13860 ;;		_vfpfcnvrt
 13861 ;;		_atoi
 13862 ;; This function uses a non-reentrant model
 13863 ;;
 13864                           
 13865                           	psect	text50
 13866  005A94                     __ptext50:
 13867                           	callstack 0
 13868  005A94                     _isdigit:
 13869                           	callstack 24
 13870  005A94  0ED0               	movlw	208
 13871  005A96  6E03               	movwf	??_isdigit^0,c
 13872  005A98  0EFF               	movlw	255
 13873  005A9A  6E04               	movwf	(??_isdigit+1)^0,c
 13874  005A9C  C001  F005         	movff	isdigit@c,??_isdigit+2
 13875  005AA0  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 13876  005AA4  5003               	movf	??_isdigit^0,w,c
 13877  005AA6  2605               	addwf	(??_isdigit+2)^0,f,c
 13878  005AA8  5004               	movf	(??_isdigit+1)^0,w,c
 13879  005AAA  2206               	addwfc	(??_isdigit+3)^0,f,c
 13880  005AAC  5006               	movf	(??_isdigit+3)^0,w,c
 13881  005AAE  E10A               	bnz	u5480
 13882  005AB0  0E0A               	movlw	10
 13883  005AB2  5C05               	subwf	(??_isdigit+2)^0,w,c
 13884  005AB4  A0D8               	btfss	status,0,c
 13885  005AB6  EF5F  F02D         	goto	u5481
 13886  005ABA  EF62  F02D         	goto	u5480
 13887  005ABE                     u5481:
 13888  005ABE  0E01               	movlw	1
 13889  005AC0  EF63  F02D         	goto	u5490
 13890  005AC4                     u5480:
 13891  005AC4  0E00               	movlw	0
 13892  005AC6                     u5490:
 13893  005AC6  6E01               	movwf	?_isdigit^0,c
 13894  005AC8  6A02               	clrf	(?_isdigit+1)^0,c
 13895  005ACA  0012               	return		;funcret
 13896  005ACC                     __end_of_isdigit:
 13897                           	callstack 0
 13898                           
 13899 ;; *************** function ___wmul *****************
 13900 ;; Defined at:
 13901 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
 13902 ;; Parameters:    Size  Location     Type
 13903 ;;  multiplier      2    0[COMRAM] unsigned int 
 13904 ;;  multiplicand    2    2[COMRAM] unsigned int 
 13905 ;; Auto vars:     Size  Location     Type
 13906 ;;  product         2    4[COMRAM] unsigned int 
 13907 ;; Return value:  Size  Location     Type
 13908 ;;                  2    0[COMRAM] unsigned int 
 13909 ;; Registers used:
 13910 ;;		wreg, status,2, status,0, prodl, prodh
 13911 ;; Tracked objects:
 13912 ;;		On entry : 0/0
 13913 ;;		On exit  : 0/0
 13914 ;;		Unchanged: 0/0
 13915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13916 ;;      Params:         4       0       0       0       0       0       0
 13917 ;;      Locals:         2       0       0       0       0       0       0
 13918 ;;      Temps:          0       0       0       0       0       0       0
 13919 ;;      Totals:         6       0       0       0       0       0       0
 13920 ;;Total ram usage:        6 bytes
 13921 ;; Hardware stack levels used:    1
 13922 ;; Hardware stack levels required when called:    1
 13923 ;; This function calls:
 13924 ;;		Nothing
 13925 ;; This function is called by:
 13926 ;;		_atoi
 13927 ;; This function uses a non-reentrant model
 13928 ;;
 13929                           
 13930                           	psect	text51
 13931  005C20                     __ptext51:
 13932                           	callstack 0
 13933  005C20                     ___wmul:
 13934                           	callstack 23
 13935  005C20  5001               	movf	___wmul@multiplier^0,w,c
 13936  005C22  0203               	mulwf	___wmul@multiplicand^0,c
 13937  005C24  CFF3 F005          	movff	prodl,___wmul@product
 13938  005C28  CFF4 F006          	movff	prodh,___wmul@product+1
 13939  005C2C  5001               	movf	___wmul@multiplier^0,w,c
 13940  005C2E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 13941  005C30  50F3               	movf	243,w,c
 13942  005C32  2606               	addwf	(___wmul@product+1)^0,f,c
 13943  005C34  5002               	movf	(___wmul@multiplier+1)^0,w,c
 13944  005C36  0203               	mulwf	___wmul@multiplicand^0,c
 13945  005C38  50F3               	movf	243,w,c
 13946  005C3A  2606               	addwf	(___wmul@product+1)^0,f,c
 13947  005C3C  C005  F001         	movff	___wmul@product,?___wmul
 13948  005C40  C006  F002         	movff	___wmul@product+1,?___wmul+1
 13949  005C44  0012               	return		;funcret
 13950  005C46                     __end_of___wmul:
 13951                           	callstack 0
 13952                           
 13953 ;; *************** function _eepromWrite *****************
 13954 ;; Defined at:
 13955 ;;		line 62 in file "fs_eeprom.c"
 13956 ;; Parameters:    Size  Location     Type
 13957 ;;  address         1    wreg     unsigned char 
 13958 ;;  data            1    0[COMRAM] unsigned char 
 13959 ;; Auto vars:     Size  Location     Type
 13960 ;;  address         1    1[COMRAM] unsigned char 
 13961 ;; Return value:  Size  Location     Type
 13962 ;;                  1    wreg      void 
 13963 ;; Registers used:
 13964 ;;		wreg, status,2
 13965 ;; Tracked objects:
 13966 ;;		On entry : 0/0
 13967 ;;		On exit  : 0/0
 13968 ;;		Unchanged: 0/0
 13969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13970 ;;      Params:         1       0       0       0       0       0       0
 13971 ;;      Locals:         1       0       0       0       0       0       0
 13972 ;;      Temps:          0       0       0       0       0       0       0
 13973 ;;      Totals:         2       0       0       0       0       0       0
 13974 ;;Total ram usage:        2 bytes
 13975 ;; Hardware stack levels used:    1
 13976 ;; Hardware stack levels required when called:    1
 13977 ;; This function calls:
 13978 ;;		Nothing
 13979 ;; This function is called by:
 13980 ;;		_stateMachine
 13981 ;; This function uses a non-reentrant model
 13982 ;;
 13983                           
 13984                           	psect	text52
 13985  005BA2                     __ptext52:
 13986                           	callstack 0
 13987  005BA2                     _eepromWrite:
 13988                           	callstack 27
 13989                           
 13990                           ;incstack = 0
 13991                           ;eepromWrite@address stored from wreg
 13992  005BA2  6E02               	movwf	eepromWrite@address^0,c
 13993  005BA4                     
 13994                           ;fs_eeprom.c: 62: void eepromWrite(uint8_t address, uint8_t data);fs_eeprom.c: 63: {;fs_
      +                          eeprom.c: 66:     EEADR = (uint8_t)address;
 13995  005BA4  C002  FFA9         	movff	eepromWrite@address,4009	;volatile
 13996  005BA8                     
 13997                           ;fs_eeprom.c: 68:     EEDATA = data;
 13998  005BA8  C001  FFA8         	movff	eepromWrite@data,4008	;volatile
 13999  005BAC                     
 14000                           ;fs_eeprom.c: 69:     EECON1bits.EEPGD = 0;
 14001  005BAC  9EA6               	bcf	166,7,c	;volsfr
 14002  005BAE                     
 14003                           ;fs_eeprom.c: 70:     EECON1bits.CFGS = 0;
 14004  005BAE  9CA6               	bcf	166,6,c	;volsfr
 14005  005BB0                     
 14006                           ;fs_eeprom.c: 71:     EECON1bits.WREN = 1;
 14007  005BB0  84A6               	bsf	166,2,c	;volsfr
 14008  005BB2                     
 14009                           ;fs_eeprom.c: 75:     EECON2 = 0x55;
 14010  005BB2  0E55               	movlw	85
 14011  005BB4  6EA7               	movwf	167,c	;volsfr
 14012  005BB6                     
 14013                           ;fs_eeprom.c: 76:     EECON2 = 0xAA;
 14014  005BB6  0EAA               	movlw	170
 14015  005BB8  6EA7               	movwf	167,c	;volsfr
 14016  005BBA                     
 14017                           ;fs_eeprom.c: 77:     EECON1bits.WR = 1;
 14018  005BBA  82A6               	bsf	166,1,c	;volsfr
 14019  005BBC                     l76:
 14020                           
 14021                           ;fs_eeprom.c: 80:     while(PIR2bits.EEIF == 0)
 14022  005BBC  A8A1               	btfss	161,4,c	;volatile
 14023  005BBE  EFE3  F02D         	goto	u6791
 14024  005BC2  EFE5  F02D         	goto	u6790
 14025  005BC6                     u6791:
 14026  005BC6  EFDE  F02D         	goto	l76
 14027  005BCA                     u6790:
 14028  005BCA                     
 14029                           ;fs_eeprom.c: 85:     PIR2bits.EEIF = 0;
 14030  005BCA  98A1               	bcf	161,4,c	;volatile
 14031                           
 14032                           ;fs_eeprom.c: 86:     EECON1bits.WREN = 0;
 14033  005BCC  94A6               	bcf	166,2,c	;volsfr
 14034  005BCE  0012               	return		;funcret
 14035  005BD0                     __end_of_eepromWrite:
 14036                           	callstack 0
 14037                           
 14038 ;; *************** function _Lcd_Write_String *****************
 14039 ;; Defined at:
 14040 ;;		line 155 in file "fs_lcd.c"
 14041 ;; Parameters:    Size  Location     Type
 14042 ;;  a               2    4[COMRAM] PTR unsigned char 
 14043 ;;		 -> STR_15(17), STR_13(17), STR_11(17), STR_9(17), 
 14044 ;;		 -> STR_7(17), STR_5(17), STR_3(17), STR_1(17), 
 14045 ;;		 -> stateMachine@textCursor2(16), 
 14046 ;; Auto vars:     Size  Location     Type
 14047 ;;  i               2    8[COMRAM] int 
 14048 ;; Return value:  Size  Location     Type
 14049 ;;                  1    wreg      void 
 14050 ;; Registers used:
 14051 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14052 ;; Tracked objects:
 14053 ;;		On entry : 0/0
 14054 ;;		On exit  : 0/0
 14055 ;;		Unchanged: 0/0
 14056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14057 ;;      Params:         2       0       0       0       0       0       0
 14058 ;;      Locals:         2       0       0       0       0       0       0
 14059 ;;      Temps:          2       0       0       0       0       0       0
 14060 ;;      Totals:         6       0       0       0       0       0       0
 14061 ;;Total ram usage:        6 bytes
 14062 ;; Hardware stack levels used:    1
 14063 ;; Hardware stack levels required when called:    3
 14064 ;; This function calls:
 14065 ;;		_Lcd_Write_Char
 14066 ;; This function is called by:
 14067 ;;		_stateMachine
 14068 ;; This function uses a non-reentrant model
 14069 ;;
 14070                           
 14071                           	psect	text53
 14072  005376                     __ptext53:
 14073                           	callstack 0
 14074  005376                     _Lcd_Write_String:
 14075                           	callstack 25
 14076  005376                     
 14077                           ;fs_lcd.c: 155: void Lcd_Write_String(char *a);fs_lcd.c: 156: {;fs_lcd.c: 157:    int i;
      +                          ;fs_lcd.c: 158:    for(i=0;a[i]!='\0';i++)
 14078  005376  0E00               	movlw	0
 14079  005378  6E0A               	movwf	(Lcd_Write_String@i+1)^0,c
 14080  00537A  0E00               	movlw	0
 14081  00537C  6E09               	movwf	Lcd_Write_String@i^0,c
 14082  00537E  EFDB  F029         	goto	l5621
 14083  005382                     l5617:
 14084                           
 14085                           ;fs_lcd.c: 159:    Lcd_Write_Char(a[i]);
 14086  005382  5009               	movf	Lcd_Write_String@i^0,w,c
 14087  005384  2405               	addwf	Lcd_Write_String@a^0,w,c
 14088  005386  6E07               	movwf	??_Lcd_Write_String^0,c
 14089  005388  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
 14090  00538A  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 14091  00538C  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
 14092  00538E  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
 14093  005392  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 14094  005396  6AF8               	clrf	tblptru,c
 14095  005398  0E05               	movlw	(high __ramtop+-1)
 14096  00539A  64F7               	cpfsgt	tblptrh,c
 14097  00539C  D003               	bra	u6827
 14098  00539E  0008               	tblrd		*
 14099  0053A0  50F5               	movf	tablat,w,c
 14100  0053A2  D005               	bra	u6820
 14101  0053A4                     u6827:
 14102  0053A4  CFF6 FFE1          	movff	tblptrl,fsr1l
 14103  0053A8  CFF7 FFE2          	movff	tblptrh,fsr1h
 14104  0053AC  50E7               	movf	indf1,w,c
 14105  0053AE                     u6820:
 14106  0053AE  EC9C  F02D         	call	_Lcd_Write_Char
 14107  0053B2  4A09               	infsnz	Lcd_Write_String@i^0,f,c
 14108  0053B4  2A0A               	incf	(Lcd_Write_String@i+1)^0,f,c
 14109  0053B6                     l5621:
 14110  0053B6  5009               	movf	Lcd_Write_String@i^0,w,c
 14111  0053B8  2405               	addwf	Lcd_Write_String@a^0,w,c
 14112  0053BA  6E07               	movwf	??_Lcd_Write_String^0,c
 14113  0053BC  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
 14114  0053BE  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 14115  0053C0  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
 14116  0053C2  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
 14117  0053C6  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 14118  0053CA  6AF8               	clrf	tblptru,c
 14119  0053CC  0E05               	movlw	(high __ramtop+-1)
 14120  0053CE  64F7               	cpfsgt	tblptrh,c
 14121  0053D0  D003               	bra	u6837
 14122  0053D2  0008               	tblrd		*
 14123  0053D4  50F5               	movf	tablat,w,c
 14124  0053D6  D005               	bra	u6830
 14125  0053D8                     u6837:
 14126  0053D8  CFF6 FFE1          	movff	tblptrl,fsr1l
 14127  0053DC  CFF7 FFE2          	movff	tblptrh,fsr1h
 14128  0053E0  50E7               	movf	indf1,w,c
 14129  0053E2                     u6830:
 14130  0053E2  0900               	iorlw	0
 14131  0053E4  A4D8               	btfss	status,2,c
 14132  0053E6  EFF7  F029         	goto	u6841
 14133  0053EA  EFF9  F029         	goto	u6840
 14134  0053EE                     u6841:
 14135  0053EE  EFC1  F029         	goto	l5617
 14136  0053F2                     u6840:
 14137  0053F2  0012               	return		;funcret
 14138  0053F4                     __end_of_Lcd_Write_String:
 14139                           	callstack 0
 14140                           
 14141 ;; *************** function _Lcd_Write_Char *****************
 14142 ;; Defined at:
 14143 ;;		line 132 in file "fs_lcd.c"
 14144 ;; Parameters:    Size  Location     Type
 14145 ;;  a               1    wreg     unsigned char 
 14146 ;; Auto vars:     Size  Location     Type
 14147 ;;  a               1    3[COMRAM] unsigned char 
 14148 ;;  y               1    2[COMRAM] unsigned char 
 14149 ;;  temp            1    1[COMRAM] unsigned char 
 14150 ;; Return value:  Size  Location     Type
 14151 ;;                  1    wreg      void 
 14152 ;; Registers used:
 14153 ;;		wreg, status,2, status,0, cstack
 14154 ;; Tracked objects:
 14155 ;;		On entry : 0/0
 14156 ;;		On exit  : 0/0
 14157 ;;		Unchanged: 0/0
 14158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14159 ;;      Params:         0       0       0       0       0       0       0
 14160 ;;      Locals:         3       0       0       0       0       0       0
 14161 ;;      Temps:          0       0       0       0       0       0       0
 14162 ;;      Totals:         3       0       0       0       0       0       0
 14163 ;;Total ram usage:        3 bytes
 14164 ;; Hardware stack levels used:    1
 14165 ;; Hardware stack levels required when called:    2
 14166 ;; This function calls:
 14167 ;;		_Lcd_Port
 14168 ;; This function is called by:
 14169 ;;		_Lcd_Write_String
 14170 ;; This function uses a non-reentrant model
 14171 ;;
 14172                           
 14173                           	psect	text54
 14174  005B38                     __ptext54:
 14175                           	callstack 0
 14176  005B38                     _Lcd_Write_Char:
 14177                           	callstack 25
 14178                           
 14179                           ;incstack = 0
 14180                           ;Lcd_Write_Char@a stored from wreg
 14181  005B38  6E04               	movwf	Lcd_Write_Char@a^0,c
 14182  005B3A                     
 14183                           ;fs_lcd.c: 132: void Lcd_Write_Char(char a);fs_lcd.c: 133: {;fs_lcd.c: 134:    char temp
      +                          ,y;;fs_lcd.c: 135:    temp = a&0x0F;
 14184  005B3A  5004               	movf	Lcd_Write_Char@a^0,w,c
 14185  005B3C  0B0F               	andlw	15
 14186  005B3E  6E02               	movwf	Lcd_Write_Char@temp^0,c
 14187                           
 14188                           ;fs_lcd.c: 136:    y = a&0xF0;
 14189  005B40  5004               	movf	Lcd_Write_Char@a^0,w,c
 14190  005B42  0BF0               	andlw	240
 14191  005B44  6E03               	movwf	Lcd_Write_Char@y^0,c
 14192  005B46                     
 14193                           ;fs_lcd.c: 137:    PORTDbits.RD6 = 1;
 14194  005B46  8C83               	bsf	131,6,c	;volatile
 14195  005B48                     
 14196                           ;fs_lcd.c: 138:    Lcd_Port(y>>4);
 14197  005B48  3803               	swapf	Lcd_Write_Char@y^0,w,c
 14198  005B4A  0B0F               	andlw	15
 14199  005B4C  ECA6  F02B         	call	_Lcd_Port
 14200  005B50                     
 14201                           ;fs_lcd.c: 139:    PORTDbits.RD7 = 1;
 14202  005B50  8E83               	bsf	131,7,c	;volatile
 14203  005B52                     
 14204                           ;fs_lcd.c: 140:    _delay((unsigned long)((30)*(64000000UL/4000000.0)));
 14205  005B52  0EA0               	movlw	160
 14206  005B54                     u7827:
 14207  005B54  2EE8               	decfsz	wreg,f,c
 14208  005B56  D7FE               	bra	u7827
 14209  005B58                     
 14210                           ;fs_lcd.c: 141:    PORTDbits.RD7 = 0;
 14211  005B58  9E83               	bcf	131,7,c	;volatile
 14212  005B5A                     
 14213                           ;fs_lcd.c: 142:    Lcd_Port(temp);
 14214  005B5A  5002               	movf	Lcd_Write_Char@temp^0,w,c
 14215  005B5C  ECA6  F02B         	call	_Lcd_Port
 14216  005B60                     
 14217                           ;fs_lcd.c: 143:    PORTDbits.RD7 = 1;
 14218  005B60  8E83               	bsf	131,7,c	;volatile
 14219  005B62                     
 14220                           ;fs_lcd.c: 144:    _delay((unsigned long)((25)*(64000000UL/4000000.0)));
 14221  005B62  0E85               	movlw	133
 14222  005B64                     u7837:
 14223  005B64  2EE8               	decfsz	wreg,f,c
 14224  005B66  D7FE               	bra	u7837
 14225  005B68  F000               	nop	
 14226  005B6A                     
 14227                           ;fs_lcd.c: 145:    PORTDbits.RD7 = 0;
 14228  005B6A  9E83               	bcf	131,7,c	;volatile
 14229  005B6C  0012               	return		;funcret
 14230  005B6E                     __end_of_Lcd_Write_Char:
 14231                           	callstack 0
 14232                           
 14233 ;; *************** function _Lcd_Set_Cursor *****************
 14234 ;; Defined at:
 14235 ;;		line 62 in file "fs_lcd.c"
 14236 ;; Parameters:    Size  Location     Type
 14237 ;;  a               1    wreg     unsigned char 
 14238 ;;  b               1    3[COMRAM] unsigned char 
 14239 ;; Auto vars:     Size  Location     Type
 14240 ;;  a               1    4[COMRAM] unsigned char 
 14241 ;;  temp            1    7[COMRAM] unsigned char 
 14242 ;;  y               1    6[COMRAM] unsigned char 
 14243 ;;  z               1    5[COMRAM] unsigned char 
 14244 ;; Return value:  Size  Location     Type
 14245 ;;                  1    wreg      void 
 14246 ;; Registers used:
 14247 ;;		wreg, status,2, status,0, cstack
 14248 ;; Tracked objects:
 14249 ;;		On entry : 0/0
 14250 ;;		On exit  : 0/0
 14251 ;;		Unchanged: 0/0
 14252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14253 ;;      Params:         1       0       0       0       0       0       0
 14254 ;;      Locals:         4       0       0       0       0       0       0
 14255 ;;      Temps:          0       0       0       0       0       0       0
 14256 ;;      Totals:         5       0       0       0       0       0       0
 14257 ;;Total ram usage:        5 bytes
 14258 ;; Hardware stack levels used:    1
 14259 ;; Hardware stack levels required when called:    3
 14260 ;; This function calls:
 14261 ;;		_Lcd_Cmd
 14262 ;; This function is called by:
 14263 ;;		_stateMachine
 14264 ;; This function uses a non-reentrant model
 14265 ;;
 14266                           
 14267                           	psect	text55
 14268  00562A                     __ptext55:
 14269                           	callstack 0
 14270  00562A                     _Lcd_Set_Cursor:
 14271                           	callstack 25
 14272                           
 14273                           ;incstack = 0
 14274                           ;Lcd_Set_Cursor@a stored from wreg
 14275  00562A  6E05               	movwf	Lcd_Set_Cursor@a^0,c
 14276  00562C                     
 14277                           ;fs_lcd.c: 62: void Lcd_Set_Cursor(char a, char b);fs_lcd.c: 63: {;fs_lcd.c: 64:    char
      +                           temp,z,y;;fs_lcd.c: 65:    if(a == 1)
 14278  00562C  0405               	decf	Lcd_Set_Cursor@a^0,w,c
 14279  00562E  A4D8               	btfss	status,2,c
 14280  005630  EF1C  F02B         	goto	u6801
 14281  005634  EF1E  F02B         	goto	u6800
 14282  005638                     u6801:
 14283  005638  EF2F  F02B         	goto	l5607
 14284  00563C                     u6800:
 14285  00563C                     
 14286                           ;fs_lcd.c: 66:    {;fs_lcd.c: 67:      temp = 0x80 + b - 1;
 14287  00563C  5004               	movf	Lcd_Set_Cursor@b^0,w,c
 14288  00563E  0F7F               	addlw	127
 14289  005640  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
 14290                           
 14291                           ;fs_lcd.c: 68:       z = temp>>4;
 14292  005642  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
 14293  005644  0B0F               	andlw	15
 14294  005646  6E06               	movwf	Lcd_Set_Cursor@z^0,c
 14295                           
 14296                           ;fs_lcd.c: 69:       y = temp & 0x0F;
 14297  005648  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
 14298  00564A  0B0F               	andlw	15
 14299  00564C  6E07               	movwf	Lcd_Set_Cursor@y^0,c
 14300  00564E                     
 14301                           ;fs_lcd.c: 70:       Lcd_Cmd(z);
 14302  00564E  5006               	movf	Lcd_Set_Cursor@z^0,w,c
 14303  005650  EC32  F02E         	call	_Lcd_Cmd
 14304  005654                     
 14305                           ;fs_lcd.c: 71:       Lcd_Cmd(y);
 14306  005654  5007               	movf	Lcd_Set_Cursor@y^0,w,c
 14307  005656  EC32  F02E         	call	_Lcd_Cmd
 14308                           
 14309                           ;fs_lcd.c: 72:    }
 14310  00565A  EF47  F02B         	goto	l116
 14311  00565E                     l5607:
 14312  00565E  0E02               	movlw	2
 14313  005660  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
 14314  005662  A4D8               	btfss	status,2,c
 14315  005664  EF36  F02B         	goto	u6811
 14316  005668  EF38  F02B         	goto	u6810
 14317  00566C                     u6811:
 14318  00566C  EF47  F02B         	goto	l116
 14319  005670                     u6810:
 14320  005670                     
 14321                           ;fs_lcd.c: 74:    {;fs_lcd.c: 75:       temp = 0xC0 + b - 1;
 14322  005670  5004               	movf	Lcd_Set_Cursor@b^0,w,c
 14323  005672  0FBF               	addlw	191
 14324  005674  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
 14325                           
 14326                           ;fs_lcd.c: 76:       z = temp>>4;
 14327  005676  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
 14328  005678  0B0F               	andlw	15
 14329  00567A  6E06               	movwf	Lcd_Set_Cursor@z^0,c
 14330                           
 14331                           ;fs_lcd.c: 77:       y = temp & 0x0F;
 14332  00567C  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
 14333  00567E  0B0F               	andlw	15
 14334  005680  6E07               	movwf	Lcd_Set_Cursor@y^0,c
 14335  005682                     
 14336                           ;fs_lcd.c: 78:       Lcd_Cmd(z);
 14337  005682  5006               	movf	Lcd_Set_Cursor@z^0,w,c
 14338  005684  EC32  F02E         	call	_Lcd_Cmd
 14339  005688                     
 14340                           ;fs_lcd.c: 79:       Lcd_Cmd(y);
 14341  005688  5007               	movf	Lcd_Set_Cursor@y^0,w,c
 14342  00568A  EC32  F02E         	call	_Lcd_Cmd
 14343  00568E                     l116:
 14344  00568E  0012               	return		;funcret
 14345  005690                     __end_of_Lcd_Set_Cursor:
 14346                           	callstack 0
 14347                           
 14348 ;; *************** function _buttonControlFlags *****************
 14349 ;; Defined at:
 14350 ;;		line 81 in file "fs_menu_controller.c"
 14351 ;; Parameters:    Size  Location     Type
 14352 ;;		None
 14353 ;; Auto vars:     Size  Location     Type
 14354 ;;		None
 14355 ;; Return value:  Size  Location     Type
 14356 ;;                  1    wreg      void 
 14357 ;; Registers used:
 14358 ;;		None
 14359 ;; Tracked objects:
 14360 ;;		On entry : 0/0
 14361 ;;		On exit  : 0/0
 14362 ;;		Unchanged: 0/0
 14363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14364 ;;      Params:         0       0       0       0       0       0       0
 14365 ;;      Locals:         0       0       0       0       0       0       0
 14366 ;;      Temps:          0       0       0       0       0       0       0
 14367 ;;      Totals:         0       0       0       0       0       0       0
 14368 ;;Total ram usage:        0 bytes
 14369 ;; Hardware stack levels used:    1
 14370 ;; Hardware stack levels required when called:    1
 14371 ;; This function calls:
 14372 ;;		Nothing
 14373 ;; This function is called by:
 14374 ;;		_menuControl
 14375 ;; This function uses a non-reentrant model
 14376 ;;
 14377                           
 14378                           	psect	text56
 14379  0045AA                     __ptext56:
 14380                           	callstack 0
 14381  0045AA                     _buttonControlFlags:
 14382                           	callstack 28
 14383  0045AA                     
 14384                           ;fs_menu_controller.c: 83:     if ((button_bounce_controller.menu == 0) && (PORTBbits.RB
      +                          7 == 0))
 14385  0045AA  0100               	movlb	0	; () banked
 14386  0045AC  B1FE               	btfsc	_button_bounce_controller& (0+255),0,b
 14387  0045AE  EFDB  F022         	goto	u6861
 14388  0045B2  EFDD  F022         	goto	u6860
 14389  0045B6                     u6861:
 14390  0045B6  EFE6  F022         	goto	l315
 14391  0045BA                     u6860:
 14392  0045BA                     
 14393                           ; BSR set to: 0
 14394  0045BA  BE81               	btfsc	129,7,c	;volatile
 14395  0045BC  EFE2  F022         	goto	u6871
 14396  0045C0  EFE4  F022         	goto	u6870
 14397  0045C4                     u6871:
 14398  0045C4  EFE6  F022         	goto	l315
 14399  0045C8                     u6870:
 14400  0045C8                     
 14401                           ; BSR set to: 0
 14402                           ;fs_menu_controller.c: 84:     {;fs_menu_controller.c: 85:         button_bounce_control
      +                          ler.menu = 1;
 14403  0045C8  81FE               	bsf	_button_bounce_controller& (0+255),0,b
 14404                           
 14405                           ;fs_menu_controller.c: 86:         menu_flags.menu_input_flag = 1;
 14406  0045CA  81FD               	bsf	_menu_flags& (0+255),0,b
 14407  0045CC                     l315:
 14408                           
 14409                           ; BSR set to: 0
 14410                           ;fs_menu_controller.c: 89:     if ((PORTBbits.RB7 == 1) && (button_bounce_controller.men
      +                          u == 1))
 14411  0045CC  AE81               	btfss	129,7,c	;volatile
 14412  0045CE  EFEB  F022         	goto	u6881
 14413  0045D2  EFED  F022         	goto	u6880
 14414  0045D6                     u6881:
 14415  0045D6  EFF6  F022         	goto	l316
 14416  0045DA                     u6880:
 14417  0045DA                     
 14418                           ; BSR set to: 0
 14419  0045DA  A1FE               	btfss	_button_bounce_controller& (0+255),0,b
 14420  0045DC  EFF2  F022         	goto	u6891
 14421  0045E0  EFF4  F022         	goto	u6890
 14422  0045E4                     u6891:
 14423  0045E4  EFF6  F022         	goto	l316
 14424  0045E8                     u6890:
 14425  0045E8                     
 14426                           ; BSR set to: 0
 14427                           ;fs_menu_controller.c: 90:     {;fs_menu_controller.c: 91:         button_bounce_control
      +                          ler.menu = 0;
 14428  0045E8  91FE               	bcf	_button_bounce_controller& (0+255),0,b
 14429                           
 14430                           ;fs_menu_controller.c: 92:         menu_flags.menu_input_flag = 0;
 14431  0045EA  91FD               	bcf	_menu_flags& (0+255),0,b
 14432  0045EC                     l316:
 14433                           
 14434                           ; BSR set to: 0
 14435                           ;fs_menu_controller.c: 95:     if ((button_bounce_controller.pause == 0) && (PORTDbits.R
      +                          D2 == 0))
 14436  0045EC  B7FE               	btfsc	_button_bounce_controller& (0+255),3,b
 14437  0045EE  EFFB  F022         	goto	u6901
 14438  0045F2  EFFD  F022         	goto	u6900
 14439  0045F6                     u6901:
 14440  0045F6  EF06  F023         	goto	l317
 14441  0045FA                     u6900:
 14442  0045FA                     
 14443                           ; BSR set to: 0
 14444  0045FA  B483               	btfsc	131,2,c	;volatile
 14445  0045FC  EF02  F023         	goto	u6911
 14446  004600  EF04  F023         	goto	u6910
 14447  004604                     u6911:
 14448  004604  EF06  F023         	goto	l317
 14449  004608                     u6910:
 14450  004608                     
 14451                           ; BSR set to: 0
 14452                           ;fs_menu_controller.c: 96:     {;fs_menu_controller.c: 97:         button_bounce_control
      +                          ler.pause = 1;
 14453  004608  87FE               	bsf	_button_bounce_controller& (0+255),3,b
 14454                           
 14455                           ;fs_menu_controller.c: 98:         menu_flags.menu_pause_flag = 1;
 14456  00460A  87FD               	bsf	_menu_flags& (0+255),3,b
 14457  00460C                     l317:
 14458                           
 14459                           ; BSR set to: 0
 14460                           ;fs_menu_controller.c: 100:     if ((PORTDbits.RD2 == 1) && (button_bounce_controller.pa
      +                          use == 1))
 14461  00460C  A483               	btfss	131,2,c	;volatile
 14462  00460E  EF0B  F023         	goto	u6921
 14463  004612  EF0D  F023         	goto	u6920
 14464  004616                     u6921:
 14465  004616  EF16  F023         	goto	l318
 14466  00461A                     u6920:
 14467  00461A                     
 14468                           ; BSR set to: 0
 14469  00461A  A7FE               	btfss	_button_bounce_controller& (0+255),3,b
 14470  00461C  EF12  F023         	goto	u6931
 14471  004620  EF14  F023         	goto	u6930
 14472  004624                     u6931:
 14473  004624  EF16  F023         	goto	l318
 14474  004628                     u6930:
 14475  004628                     
 14476                           ; BSR set to: 0
 14477                           ;fs_menu_controller.c: 101:     {;fs_menu_controller.c: 102:         button_bounce_contr
      +                          oller.pause = 0;
 14478  004628  97FE               	bcf	_button_bounce_controller& (0+255),3,b
 14479                           
 14480                           ;fs_menu_controller.c: 103:         menu_flags.menu_pause_flag = 0;
 14481  00462A  97FD               	bcf	_menu_flags& (0+255),3,b
 14482  00462C                     l318:
 14483                           
 14484                           ; BSR set to: 0
 14485                           ;fs_menu_controller.c: 107:     if ((button_bounce_controller.start == 0) && (PORTDbits.
      +                          RD0 == 0))
 14486  00462C  B3FE               	btfsc	_button_bounce_controller& (0+255),1,b
 14487  00462E  EF1B  F023         	goto	u6941
 14488  004632  EF1D  F023         	goto	u6940
 14489  004636                     u6941:
 14490  004636  EF26  F023         	goto	l319
 14491  00463A                     u6940:
 14492  00463A                     
 14493                           ; BSR set to: 0
 14494  00463A  B083               	btfsc	131,0,c	;volatile
 14495  00463C  EF22  F023         	goto	u6951
 14496  004640  EF24  F023         	goto	u6950
 14497  004644                     u6951:
 14498  004644  EF26  F023         	goto	l319
 14499  004648                     u6950:
 14500  004648                     
 14501                           ; BSR set to: 0
 14502                           ;fs_menu_controller.c: 108:     {;fs_menu_controller.c: 109:         button_bounce_contr
      +                          oller.start = 1;
 14503  004648  83FE               	bsf	_button_bounce_controller& (0+255),1,b
 14504                           
 14505                           ;fs_menu_controller.c: 110:         menu_flags.menu_start_flag = 1;
 14506  00464A  83FD               	bsf	_menu_flags& (0+255),1,b
 14507  00464C                     l319:
 14508                           
 14509                           ; BSR set to: 0
 14510                           ;fs_menu_controller.c: 112:     if ((PORTDbits.RD0 == 1) && (button_bounce_controller.st
      +                          art == 1))
 14511  00464C  A083               	btfss	131,0,c	;volatile
 14512  00464E  EF2B  F023         	goto	u6961
 14513  004652  EF2D  F023         	goto	u6960
 14514  004656                     u6961:
 14515  004656  EF36  F023         	goto	l320
 14516  00465A                     u6960:
 14517  00465A                     
 14518                           ; BSR set to: 0
 14519  00465A  A3FE               	btfss	_button_bounce_controller& (0+255),1,b
 14520  00465C  EF32  F023         	goto	u6971
 14521  004660  EF34  F023         	goto	u6970
 14522  004664                     u6971:
 14523  004664  EF36  F023         	goto	l320
 14524  004668                     u6970:
 14525  004668                     
 14526                           ; BSR set to: 0
 14527                           ;fs_menu_controller.c: 113:     {;fs_menu_controller.c: 114:         button_bounce_contr
      +                          oller.start = 0;
 14528  004668  93FE               	bcf	_button_bounce_controller& (0+255),1,b
 14529                           
 14530                           ;fs_menu_controller.c: 115:         menu_flags.menu_start_flag = 0;
 14531  00466A  93FD               	bcf	_menu_flags& (0+255),1,b
 14532  00466C                     l320:
 14533                           
 14534                           ; BSR set to: 0
 14535                           ;fs_menu_controller.c: 119:     if ((button_bounce_controller.stop == 0) && (PORTDbits.R
      +                          D1 == 0))
 14536  00466C  B5FE               	btfsc	_button_bounce_controller& (0+255),2,b
 14537  00466E  EF3B  F023         	goto	u6981
 14538  004672  EF3D  F023         	goto	u6980
 14539  004676                     u6981:
 14540  004676  EF46  F023         	goto	l321
 14541  00467A                     u6980:
 14542  00467A                     
 14543                           ; BSR set to: 0
 14544  00467A  B283               	btfsc	131,1,c	;volatile
 14545  00467C  EF42  F023         	goto	u6991
 14546  004680  EF44  F023         	goto	u6990
 14547  004684                     u6991:
 14548  004684  EF46  F023         	goto	l321
 14549  004688                     u6990:
 14550  004688                     
 14551                           ; BSR set to: 0
 14552                           ;fs_menu_controller.c: 120:     {;fs_menu_controller.c: 121:         button_bounce_contr
      +                          oller.stop = 1;
 14553  004688  85FE               	bsf	_button_bounce_controller& (0+255),2,b
 14554                           
 14555                           ;fs_menu_controller.c: 122:         menu_flags.menu_stop_flag = 1;
 14556  00468A  85FD               	bsf	_menu_flags& (0+255),2,b
 14557  00468C                     l321:
 14558                           
 14559                           ; BSR set to: 0
 14560                           ;fs_menu_controller.c: 124:     if ((PORTDbits.RD1 == 1) && (button_bounce_controller.st
      +                          op == 1))
 14561  00468C  A283               	btfss	131,1,c	;volatile
 14562  00468E  EF4B  F023         	goto	u7001
 14563  004692  EF4D  F023         	goto	u7000
 14564  004696                     u7001:
 14565  004696  EF56  F023         	goto	l322
 14566  00469A                     u7000:
 14567  00469A                     
 14568                           ; BSR set to: 0
 14569  00469A  A5FE               	btfss	_button_bounce_controller& (0+255),2,b
 14570  00469C  EF52  F023         	goto	u7011
 14571  0046A0  EF54  F023         	goto	u7010
 14572  0046A4                     u7011:
 14573  0046A4  EF56  F023         	goto	l322
 14574  0046A8                     u7010:
 14575  0046A8                     
 14576                           ; BSR set to: 0
 14577                           ;fs_menu_controller.c: 125:     {;fs_menu_controller.c: 126:         button_bounce_contr
      +                          oller.stop = 0;
 14578  0046A8  95FE               	bcf	_button_bounce_controller& (0+255),2,b
 14579                           
 14580                           ;fs_menu_controller.c: 127:         menu_flags.menu_stop_flag = 0;
 14581  0046AA  95FD               	bcf	_menu_flags& (0+255),2,b
 14582  0046AC                     l322:
 14583                           
 14584                           ; BSR set to: 0
 14585                           ;fs_menu_controller.c: 131:     if ((button_bounce_controller.increase == 0) && (PORTDbi
      +                          ts.RD4 == 0))
 14586  0046AC  BBFE               	btfsc	_button_bounce_controller& (0+255),5,b
 14587  0046AE  EF5B  F023         	goto	u7021
 14588  0046B2  EF5D  F023         	goto	u7020
 14589  0046B6                     u7021:
 14590  0046B6  EF66  F023         	goto	l323
 14591  0046BA                     u7020:
 14592  0046BA                     
 14593                           ; BSR set to: 0
 14594  0046BA  B883               	btfsc	131,4,c	;volatile
 14595  0046BC  EF62  F023         	goto	u7031
 14596  0046C0  EF64  F023         	goto	u7030
 14597  0046C4                     u7031:
 14598  0046C4  EF66  F023         	goto	l323
 14599  0046C8                     u7030:
 14600  0046C8                     
 14601                           ; BSR set to: 0
 14602                           ;fs_menu_controller.c: 132:     {;fs_menu_controller.c: 133:         button_bounce_contr
      +                          oller.increase = 1;
 14603  0046C8  8BFE               	bsf	_button_bounce_controller& (0+255),5,b
 14604                           
 14605                           ;fs_menu_controller.c: 134:         menu_flags.menu_increase_flag = 1;
 14606  0046CA  89FD               	bsf	_menu_flags& (0+255),4,b
 14607  0046CC                     l323:
 14608                           
 14609                           ; BSR set to: 0
 14610                           ;fs_menu_controller.c: 136:     if ((PORTDbits.RD4 == 1) && (button_bounce_controller.in
      +                          crease == 1))
 14611  0046CC  A883               	btfss	131,4,c	;volatile
 14612  0046CE  EF6B  F023         	goto	u7041
 14613  0046D2  EF6D  F023         	goto	u7040
 14614  0046D6                     u7041:
 14615  0046D6  EF76  F023         	goto	l324
 14616  0046DA                     u7040:
 14617  0046DA                     
 14618                           ; BSR set to: 0
 14619  0046DA  ABFE               	btfss	_button_bounce_controller& (0+255),5,b
 14620  0046DC  EF72  F023         	goto	u7051
 14621  0046E0  EF74  F023         	goto	u7050
 14622  0046E4                     u7051:
 14623  0046E4  EF76  F023         	goto	l324
 14624  0046E8                     u7050:
 14625  0046E8                     
 14626                           ; BSR set to: 0
 14627                           ;fs_menu_controller.c: 137:     {;fs_menu_controller.c: 138:         button_bounce_contr
      +                          oller.increase = 0;
 14628  0046E8  9BFE               	bcf	_button_bounce_controller& (0+255),5,b
 14629                           
 14630                           ;fs_menu_controller.c: 139:         menu_flags.menu_increase_flag = 0;
 14631  0046EA  99FD               	bcf	_menu_flags& (0+255),4,b
 14632  0046EC                     l324:
 14633                           
 14634                           ; BSR set to: 0
 14635                           ;fs_menu_controller.c: 143:     if ((button_bounce_controller.decrease == 0) && (PORTBbi
      +                          ts.RB6 == 0))
 14636  0046EC  B9FE               	btfsc	_button_bounce_controller& (0+255),4,b
 14637  0046EE  EF7B  F023         	goto	u7061
 14638  0046F2  EF7D  F023         	goto	u7060
 14639  0046F6                     u7061:
 14640  0046F6  EF86  F023         	goto	l325
 14641  0046FA                     u7060:
 14642  0046FA                     
 14643                           ; BSR set to: 0
 14644  0046FA  BC81               	btfsc	129,6,c	;volatile
 14645  0046FC  EF82  F023         	goto	u7071
 14646  004700  EF84  F023         	goto	u7070
 14647  004704                     u7071:
 14648  004704  EF86  F023         	goto	l325
 14649  004708                     u7070:
 14650  004708                     
 14651                           ; BSR set to: 0
 14652                           ;fs_menu_controller.c: 144:     {;fs_menu_controller.c: 145:         button_bounce_contr
      +                          oller.decrease = 1;
 14653  004708  89FE               	bsf	_button_bounce_controller& (0+255),4,b
 14654                           
 14655                           ;fs_menu_controller.c: 146:         menu_flags.menu_decrease_flag = 1;
 14656  00470A  8BFD               	bsf	_menu_flags& (0+255),5,b
 14657  00470C                     l325:
 14658                           
 14659                           ; BSR set to: 0
 14660                           ;fs_menu_controller.c: 148:     if ((PORTBbits.RB6 == 1) && (button_bounce_controller.de
      +                          crease == 1))
 14661  00470C  AC81               	btfss	129,6,c	;volatile
 14662  00470E  EF8B  F023         	goto	u7081
 14663  004712  EF8D  F023         	goto	u7080
 14664  004716                     u7081:
 14665  004716  EF96  F023         	goto	l327
 14666  00471A                     u7080:
 14667  00471A                     
 14668                           ; BSR set to: 0
 14669  00471A  A9FE               	btfss	_button_bounce_controller& (0+255),4,b
 14670  00471C  EF92  F023         	goto	u7091
 14671  004720  EF94  F023         	goto	u7090
 14672  004724                     u7091:
 14673  004724  EF96  F023         	goto	l327
 14674  004728                     u7090:
 14675  004728                     
 14676                           ; BSR set to: 0
 14677                           ;fs_menu_controller.c: 149:     {;fs_menu_controller.c: 150:         button_bounce_contr
      +                          oller.decrease = 0;
 14678  004728  99FE               	bcf	_button_bounce_controller& (0+255),4,b
 14679                           
 14680                           ;fs_menu_controller.c: 151:         menu_flags.menu_decrease_flag = 0;
 14681  00472A  9BFD               	bcf	_menu_flags& (0+255),5,b
 14682  00472C                     l327:
 14683                           
 14684                           ; BSR set to: 0
 14685  00472C  0012               	return		;funcret
 14686  00472E                     __end_of_buttonControlFlags:
 14687                           	callstack 0
 14688                           
 14689 ;; *************** function _mcu_init *****************
 14690 ;; Defined at:
 14691 ;;		line 41 in file "fs_mcu.c"
 14692 ;; Parameters:    Size  Location     Type
 14693 ;;		None
 14694 ;; Auto vars:     Size  Location     Type
 14695 ;;		None
 14696 ;; Return value:  Size  Location     Type
 14697 ;;                  1    wreg      void 
 14698 ;; Registers used:
 14699 ;;		wreg, status,2
 14700 ;; Tracked objects:
 14701 ;;		On entry : 0/0
 14702 ;;		On exit  : 0/0
 14703 ;;		Unchanged: 0/0
 14704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14705 ;;      Params:         0       0       0       0       0       0       0
 14706 ;;      Locals:         0       0       0       0       0       0       0
 14707 ;;      Temps:          0       0       0       0       0       0       0
 14708 ;;      Totals:         0       0       0       0       0       0       0
 14709 ;;Total ram usage:        0 bytes
 14710 ;; Hardware stack levels used:    1
 14711 ;; Hardware stack levels required when called:    1
 14712 ;; This function calls:
 14713 ;;		Nothing
 14714 ;; This function is called by:
 14715 ;;		_main
 14716 ;; This function uses a non-reentrant model
 14717 ;;
 14718                           
 14719                           	psect	text57
 14720  005C82                     __ptext57:
 14721                           	callstack 0
 14722  005C82                     _mcu_init:
 14723                           	callstack 29
 14724  005C82                     
 14725                           ;fs_mcu.c: 43:    OSCCONbits.IRCF = 0b111;
 14726  005C82  0E70               	movlw	112
 14727  005C84  12D3               	iorwf	211,f,c	;volatile
 14728  005C86                     
 14729                           ;fs_mcu.c: 44:    OSCTUNEbits.PLLEN = 0b1;
 14730  005C86  8C9B               	bsf	155,6,c	;volatile
 14731  005C88                     l247:
 14732  005C88  A4D3               	btfss	211,2,c	;volatile
 14733  005C8A  EF49  F02E         	goto	u7661
 14734  005C8E  EF4B  F02E         	goto	u7660
 14735  005C92                     u7661:
 14736  005C92  EF44  F02E         	goto	l247
 14737  005C96                     u7660:
 14738  005C96  0012               	return		;funcret
 14739  005C98                     __end_of_mcu_init:
 14740                           	callstack 0
 14741                           
 14742 ;; *************** function _lcd_init *****************
 14743 ;; Defined at:
 14744 ;;		line 88 in file "fs_lcd.c"
 14745 ;; Parameters:    Size  Location     Type
 14746 ;;		None
 14747 ;; Auto vars:     Size  Location     Type
 14748 ;;		None
 14749 ;; Return value:  Size  Location     Type
 14750 ;;                  1    wreg      void 
 14751 ;; Registers used:
 14752 ;;		wreg, status,2, cstack
 14753 ;; Tracked objects:
 14754 ;;		On entry : 0/0
 14755 ;;		On exit  : 0/0
 14756 ;;		Unchanged: 0/0
 14757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14758 ;;      Params:         0       0       0       0       0       0       0
 14759 ;;      Locals:         0       0       0       0       0       0       0
 14760 ;;      Temps:          2       0       0       0       0       0       0
 14761 ;;      Totals:         2       0       0       0       0       0       0
 14762 ;;Total ram usage:        2 bytes
 14763 ;; Hardware stack levels used:    1
 14764 ;; Hardware stack levels required when called:    3
 14765 ;; This function calls:
 14766 ;;		_Lcd_Cmd
 14767 ;;		_Lcd_Port
 14768 ;; This function is called by:
 14769 ;;		_main
 14770 ;; This function uses a non-reentrant model
 14771 ;;
 14772                           
 14773                           	psect	text58
 14774  0052E0                     __ptext58:
 14775                           	callstack 0
 14776  0052E0                     _lcd_init:
 14777                           	callstack 27
 14778  0052E0                     
 14779                           ;fs_lcd.c: 90:     TRISDbits.RD6 = 0;
 14780  0052E0  9C95               	bcf	149,6,c	;volatile
 14781                           
 14782                           ;fs_lcd.c: 91:     ANSELDbits.ANSD6 = 0;
 14783  0052E2  010F               	movlb	15	; () banked
 14784  0052E4  9D3B               	bcf	59,6,b	;volatile
 14785                           
 14786                           ;fs_lcd.c: 93:     TRISDbits.RD7 = 0;
 14787  0052E6  9E95               	bcf	149,7,c	;volatile
 14788                           
 14789                           ;fs_lcd.c: 94:     ANSELDbits.ANSD7 = 0;
 14790  0052E8  9F3B               	bcf	59,7,b	;volatile
 14791                           
 14792                           ;fs_lcd.c: 96:     TRISBbits.RB0 = 0;
 14793  0052EA  9093               	bcf	147,0,c	;volatile
 14794                           
 14795                           ;fs_lcd.c: 97:     ANSELBbits.ANSB0 = 0;
 14796  0052EC  9139               	bcf	57,0,b	;volatile
 14797                           
 14798                           ;fs_lcd.c: 99:     TRISBbits.RB1 = 0;
 14799  0052EE  9293               	bcf	147,1,c	;volatile
 14800                           
 14801                           ;fs_lcd.c: 100:     ANSELBbits.ANSB1 = 0;
 14802  0052F0  9339               	bcf	57,1,b	;volatile
 14803                           
 14804                           ;fs_lcd.c: 102:     TRISBbits.RB2 = 0;
 14805  0052F2  9493               	bcf	147,2,c	;volatile
 14806                           
 14807                           ;fs_lcd.c: 103:     ANSELBbits.ANSB2 = 0;
 14808  0052F4  9539               	bcf	57,2,b	;volatile
 14809                           
 14810                           ;fs_lcd.c: 105:     TRISBbits.RB3 = 0;
 14811  0052F6  9693               	bcf	147,3,c	;volatile
 14812                           
 14813                           ;fs_lcd.c: 106:     ANSELBbits.ANSB3 = 0;
 14814  0052F8  9739               	bcf	57,3,b	;volatile
 14815  0052FA                     
 14816                           ; BSR set to: 15
 14817                           ;fs_lcd.c: 109:     Lcd_Port(0x00);
 14818  0052FA  0E00               	movlw	0
 14819  0052FC  ECA6  F02B         	call	_Lcd_Port
 14820  005300                     
 14821                           ;fs_lcd.c: 110:      _delay((unsigned long)((20)*(64000000UL/4000.0)));
 14822  005300  0E02               	movlw	2
 14823  005302  6E05               	movwf	(??_lcd_init+1)^0,c
 14824  005304  0EA0               	movlw	160
 14825  005306  6E04               	movwf	??_lcd_init^0,c
 14826  005308  0E92               	movlw	146
 14827  00530A                     u7847:
 14828  00530A  2EE8               	decfsz	wreg,f,c
 14829  00530C  D7FE               	bra	u7847
 14830  00530E  2E04               	decfsz	??_lcd_init^0,f,c
 14831  005310  D7FC               	bra	u7847
 14832  005312  2E05               	decfsz	(??_lcd_init+1)^0,f,c
 14833  005314  D7FA               	bra	u7847
 14834  005316  D000               	nop2	
 14835  005318                     
 14836                           ;fs_lcd.c: 111:     Lcd_Cmd(0x03);
 14837  005318  0E03               	movlw	3
 14838  00531A  EC32  F02E         	call	_Lcd_Cmd
 14839  00531E                     
 14840                           ;fs_lcd.c: 112:      _delay((unsigned long)((5)*(64000000UL/4000.0)));
 14841  00531E  0E68               	movlw	104
 14842  005320  6E04               	movwf	??_lcd_init^0,c
 14843  005322  0EE4               	movlw	228
 14844  005324                     u7857:
 14845  005324  2EE8               	decfsz	wreg,f,c
 14846  005326  D7FE               	bra	u7857
 14847  005328  2E04               	decfsz	??_lcd_init^0,f,c
 14848  00532A  D7FC               	bra	u7857
 14849  00532C  D000               	nop2	
 14850  00532E                     
 14851                           ;fs_lcd.c: 113:     Lcd_Cmd(0x03);
 14852  00532E  0E03               	movlw	3
 14853  005330  EC32  F02E         	call	_Lcd_Cmd
 14854  005334                     
 14855                           ;fs_lcd.c: 114:      _delay((unsigned long)((11)*(64000000UL/4000.0)));
 14856  005334  0EE5               	movlw	229
 14857  005336  6E04               	movwf	??_lcd_init^0,c
 14858  005338  0E91               	movlw	145
 14859  00533A                     u7867:
 14860  00533A  2EE8               	decfsz	wreg,f,c
 14861  00533C  D7FE               	bra	u7867
 14862  00533E  2E04               	decfsz	??_lcd_init^0,f,c
 14863  005340  D7FC               	bra	u7867
 14864  005342  F000               	nop	
 14865  005344                     
 14866                           ;fs_lcd.c: 115:     Lcd_Cmd(0x03);
 14867  005344  0E03               	movlw	3
 14868  005346  EC32  F02E         	call	_Lcd_Cmd
 14869  00534A                     
 14870                           ;fs_lcd.c: 116:     Lcd_Cmd(0x02);
 14871  00534A  0E02               	movlw	2
 14872  00534C  EC32  F02E         	call	_Lcd_Cmd
 14873  005350                     
 14874                           ;fs_lcd.c: 117:     Lcd_Cmd(0x02);
 14875  005350  0E02               	movlw	2
 14876  005352  EC32  F02E         	call	_Lcd_Cmd
 14877  005356                     
 14878                           ;fs_lcd.c: 118:     Lcd_Cmd(0x08);
 14879  005356  0E08               	movlw	8
 14880  005358  EC32  F02E         	call	_Lcd_Cmd
 14881  00535C                     
 14882                           ;fs_lcd.c: 119:     Lcd_Cmd(0x00);
 14883  00535C  0E00               	movlw	0
 14884  00535E  EC32  F02E         	call	_Lcd_Cmd
 14885  005362                     
 14886                           ;fs_lcd.c: 120:     Lcd_Cmd(0x0C);
 14887  005362  0E0C               	movlw	12
 14888  005364  EC32  F02E         	call	_Lcd_Cmd
 14889  005368                     
 14890                           ;fs_lcd.c: 121:     Lcd_Cmd(0x00);
 14891  005368  0E00               	movlw	0
 14892  00536A  EC32  F02E         	call	_Lcd_Cmd
 14893  00536E                     
 14894                           ;fs_lcd.c: 122:     Lcd_Cmd(0x06);
 14895  00536E  0E06               	movlw	6
 14896  005370  EC32  F02E         	call	_Lcd_Cmd
 14897  005374  0012               	return		;funcret
 14898  005376                     __end_of_lcd_init:
 14899                           	callstack 0
 14900                           
 14901 ;; *************** function _adcInit *****************
 14902 ;; Defined at:
 14903 ;;		line 53 in file "fs_adc.c"
 14904 ;; Parameters:    Size  Location     Type
 14905 ;;		None
 14906 ;; Auto vars:     Size  Location     Type
 14907 ;;		None
 14908 ;; Return value:  Size  Location     Type
 14909 ;;                  1    wreg      void 
 14910 ;; Registers used:
 14911 ;;		wreg, status,2
 14912 ;; Tracked objects:
 14913 ;;		On entry : 0/0
 14914 ;;		On exit  : 0/0
 14915 ;;		Unchanged: 0/0
 14916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14917 ;;      Params:         0       0       0       0       0       0       0
 14918 ;;      Locals:         0       0       0       0       0       0       0
 14919 ;;      Temps:          0       0       0       0       0       0       0
 14920 ;;      Totals:         0       0       0       0       0       0       0
 14921 ;;Total ram usage:        0 bytes
 14922 ;; Hardware stack levels used:    1
 14923 ;; Hardware stack levels required when called:    1
 14924 ;; This function calls:
 14925 ;;		Nothing
 14926 ;; This function is called by:
 14927 ;;		_main
 14928 ;; This function uses a non-reentrant model
 14929 ;;
 14930                           
 14931                           	psect	text59
 14932  0059AA                     __ptext59:
 14933                           	callstack 0
 14934  0059AA                     _adcInit:
 14935                           	callstack 29
 14936  0059AA                     
 14937                           ;fs_adc.c: 55:     TRISAbits.TRISA0 = 1;
 14938  0059AA  8092               	bsf	146,0,c	;volatile
 14939                           
 14940                           ;fs_adc.c: 56:     ANSELAbits.ANSA0 = 1;
 14941  0059AC  010F               	movlb	15	; () banked
 14942  0059AE  8138               	bsf	56,0,b	;volatile
 14943                           
 14944                           ;fs_adc.c: 58:     TRISAbits.TRISA1 = 1;
 14945  0059B0  8292               	bsf	146,1,c	;volatile
 14946                           
 14947                           ;fs_adc.c: 59:     ANSELAbits.ANSA1 = 1;
 14948  0059B2  8338               	bsf	56,1,b	;volatile
 14949                           
 14950                           ;fs_adc.c: 61:     TRISAbits.TRISA2 = 1;
 14951  0059B4  8492               	bsf	146,2,c	;volatile
 14952                           
 14953                           ;fs_adc.c: 62:     ANSELAbits.ANSA2 = 1;
 14954  0059B6  8538               	bsf	56,2,b	;volatile
 14955                           
 14956                           ;fs_adc.c: 64:     TRISAbits.TRISA3 = 1;
 14957  0059B8  8692               	bsf	146,3,c	;volatile
 14958                           
 14959                           ;fs_adc.c: 65:     ANSELAbits.ANSA3 = 1;
 14960  0059BA  8738               	bsf	56,3,b	;volatile
 14961                           
 14962                           ;fs_adc.c: 67:     TRISAbits.TRISA5 = 1;
 14963  0059BC  8A92               	bsf	146,5,c	;volatile
 14964                           
 14965                           ;fs_adc.c: 68:     ANSELAbits.ANSA5 = 1;
 14966  0059BE  8B38               	bsf	56,5,b	;volatile
 14967                           
 14968                           ;fs_adc.c: 70:     TRISEbits.TRISE0 = 1;
 14969  0059C0  8096               	bsf	150,0,c	;volatile
 14970                           
 14971                           ;fs_adc.c: 71:     ANSELEbits.ANSE0 = 1;
 14972  0059C2  813C               	bsf	60,0,b	;volatile
 14973                           
 14974                           ;fs_adc.c: 73:     TRISEbits.TRISE1 = 1;
 14975  0059C4  8296               	bsf	150,1,c	;volatile
 14976                           
 14977                           ;fs_adc.c: 74:     ANSELEbits.ANSE1 = 1;
 14978  0059C6  833C               	bsf	60,1,b	;volatile
 14979                           
 14980                           ;fs_adc.c: 76:     TRISEbits.TRISE2 = 1;
 14981  0059C8  8496               	bsf	150,2,c	;volatile
 14982                           
 14983                           ;fs_adc.c: 77:     ANSELEbits.ANSE2 = 1;
 14984  0059CA  853C               	bsf	60,2,b	;volatile
 14985  0059CC                     
 14986                           ; BSR set to: 15
 14987                           ;fs_adc.c: 79:     ADCON0 = 0x01;
 14988  0059CC  0E01               	movlw	1
 14989  0059CE  6EC2               	movwf	194,c	;volatile
 14990                           
 14991                           ;fs_adc.c: 80:     ADCON1=0x00;
 14992  0059D0  0E00               	movlw	0
 14993  0059D2  6EC1               	movwf	193,c	;volatile
 14994  0059D4                     
 14995                           ; BSR set to: 15
 14996                           ;fs_adc.c: 81:  ADCON2bits.ADFM = 1;
 14997  0059D4  8EC0               	bsf	192,7,c	;volatile
 14998                           
 14999                           ;fs_adc.c: 82:     ADCON2bits.ACQT = 0b010;
 15000  0059D6  50C0               	movf	192,w,c	;volatile
 15001  0059D8  0BC7               	andlw	-57
 15002  0059DA  0910               	iorlw	16
 15003  0059DC  6EC0               	movwf	192,c	;volatile
 15004                           
 15005                           ;fs_adc.c: 83:     ADCON2bits.ADCS = 0b110;
 15006  0059DE  50C0               	movf	192,w,c	;volatile
 15007  0059E0  0BF8               	andlw	-8
 15008  0059E2  0906               	iorlw	6
 15009  0059E4  6EC0               	movwf	192,c	;volatile
 15010  0059E6                     
 15011                           ; BSR set to: 15
 15012  0059E6  0012               	return		;funcret
 15013  0059E8                     __end_of_adcInit:
 15014                           	callstack 0
 15015                           
 15016 ;; *************** function _PWM_Init *****************
 15017 ;; Defined at:
 15018 ;;		line 17 in file "fs_pwm.c"
 15019 ;; Parameters:    Size  Location     Type
 15020 ;;		None
 15021 ;; Auto vars:     Size  Location     Type
 15022 ;;		None
 15023 ;; Return value:  Size  Location     Type
 15024 ;;                  1    wreg      void 
 15025 ;; Registers used:
 15026 ;;		wreg, status,2
 15027 ;; Tracked objects:
 15028 ;;		On entry : 0/0
 15029 ;;		On exit  : 0/0
 15030 ;;		Unchanged: 0/0
 15031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15032 ;;      Params:         0       0       0       0       0       0       0
 15033 ;;      Locals:         0       0       0       0       0       0       0
 15034 ;;      Temps:          0       0       0       0       0       0       0
 15035 ;;      Totals:         0       0       0       0       0       0       0
 15036 ;;Total ram usage:        0 bytes
 15037 ;; Hardware stack levels used:    1
 15038 ;; Hardware stack levels required when called:    1
 15039 ;; This function calls:
 15040 ;;		Nothing
 15041 ;; This function is called by:
 15042 ;;		_main
 15043 ;; This function uses a non-reentrant model
 15044 ;;
 15045                           
 15046                           	psect	text60
 15047  005BF8                     __ptext60:
 15048                           	callstack 0
 15049  005BF8                     _PWM_Init:
 15050                           	callstack 29
 15051  005BF8                     
 15052                           ;fs_pwm.c: 19:     TRISCbits.RC2 = 0;
 15053  005BF8  9494               	bcf	148,2,c	;volatile
 15054                           
 15055                           ;fs_pwm.c: 20:     TRISCbits.RC1 = 0;
 15056  005BFA  9294               	bcf	148,1,c	;volatile
 15057  005BFC                     
 15058                           ;fs_pwm.c: 23:     CCP1CON = 0b00001100;
 15059  005BFC  0E0C               	movlw	12
 15060  005BFE  6EBD               	movwf	189,c	;volatile
 15061                           
 15062                           ;fs_pwm.c: 25:     CCP2CON = 0b00001100;
 15063  005C00  0E0C               	movlw	12
 15064  005C02  6E66               	movwf	102,c	;volatile
 15065                           
 15066                           ;fs_pwm.c: 29:     T2CONbits.T2CKPS = 0b01;
 15067  005C04  50BA               	movf	186,w,c	;volatile
 15068  005C06  0BFC               	andlw	-4
 15069  005C08  0901               	iorlw	1
 15070  005C0A  6EBA               	movwf	186,c	;volatile
 15071  005C0C                     
 15072                           ;fs_pwm.c: 30:     T2CONbits.TMR2ON = 1;
 15073  005C0C  84BA               	bsf	186,2,c	;volatile
 15074                           
 15075                           ;fs_pwm.c: 32:     TMR2 = 0;
 15076  005C0E  0E00               	movlw	0
 15077  005C10  6EBC               	movwf	188,c	;volatile
 15078                           
 15079                           ;fs_pwm.c: 33:     PR2 = 199;
 15080  005C12  0EC7               	movlw	199
 15081  005C14  6EBB               	movwf	187,c	;volatile
 15082                           
 15083                           ;fs_pwm.c: 34:     CCPR1L = 0;
 15084  005C16  0E00               	movlw	0
 15085  005C18  6EBE               	movwf	190,c	;volatile
 15086                           
 15087                           ;fs_pwm.c: 35:     CCPR2L = 0;
 15088  005C1A  0E00               	movlw	0
 15089  005C1C  6E67               	movwf	103,c	;volatile
 15090  005C1E  0012               	return		;funcret
 15091  005C20                     __end_of_PWM_Init:
 15092                           	callstack 0
 15093                           
 15094 ;; *************** function _Lcd_Clear *****************
 15095 ;; Defined at:
 15096 ;;		line 51 in file "fs_lcd.c"
 15097 ;; Parameters:    Size  Location     Type
 15098 ;;		None
 15099 ;; Auto vars:     Size  Location     Type
 15100 ;;		None
 15101 ;; Return value:  Size  Location     Type
 15102 ;;                  1    wreg      void 
 15103 ;; Registers used:
 15104 ;;		wreg, status,2, cstack
 15105 ;; Tracked objects:
 15106 ;;		On entry : 0/0
 15107 ;;		On exit  : 0/0
 15108 ;;		Unchanged: 0/0
 15109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15110 ;;      Params:         0       0       0       0       0       0       0
 15111 ;;      Locals:         0       0       0       0       0       0       0
 15112 ;;      Temps:          0       0       0       0       0       0       0
 15113 ;;      Totals:         0       0       0       0       0       0       0
 15114 ;;Total ram usage:        0 bytes
 15115 ;; Hardware stack levels used:    1
 15116 ;; Hardware stack levels required when called:    3
 15117 ;; This function calls:
 15118 ;;		_Lcd_Cmd
 15119 ;; This function is called by:
 15120 ;;		_main
 15121 ;; This function uses a non-reentrant model
 15122 ;;
 15123                           
 15124                           	psect	text61
 15125  005CAA                     __ptext61:
 15126                           	callstack 0
 15127  005CAA                     _Lcd_Clear:
 15128                           	callstack 27
 15129  005CAA                     
 15130                           ;fs_lcd.c: 53:    Lcd_Cmd(0);
 15131  005CAA  0E00               	movlw	0
 15132  005CAC  EC32  F02E         	call	_Lcd_Cmd
 15133                           
 15134                           ;fs_lcd.c: 54:    Lcd_Cmd(1);
 15135  005CB0  0E01               	movlw	1
 15136  005CB2  EC32  F02E         	call	_Lcd_Cmd
 15137  005CB6  0012               	return		;funcret
 15138  005CB8                     __end_of_Lcd_Clear:
 15139                           	callstack 0
 15140                           
 15141 ;; *************** function _Lcd_Cmd *****************
 15142 ;; Defined at:
 15143 ;;		line 35 in file "fs_lcd.c"
 15144 ;; Parameters:    Size  Location     Type
 15145 ;;  a               1    wreg     unsigned char 
 15146 ;; Auto vars:     Size  Location     Type
 15147 ;;  a               1    2[COMRAM] unsigned char 
 15148 ;; Return value:  Size  Location     Type
 15149 ;;                  1    wreg      void 
 15150 ;; Registers used:
 15151 ;;		wreg, status,2, cstack
 15152 ;; Tracked objects:
 15153 ;;		On entry : 0/0
 15154 ;;		On exit  : 0/0
 15155 ;;		Unchanged: 0/0
 15156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15157 ;;      Params:         0       0       0       0       0       0       0
 15158 ;;      Locals:         1       0       0       0       0       0       0
 15159 ;;      Temps:          1       0       0       0       0       0       0
 15160 ;;      Totals:         2       0       0       0       0       0       0
 15161 ;;Total ram usage:        2 bytes
 15162 ;; Hardware stack levels used:    1
 15163 ;; Hardware stack levels required when called:    2
 15164 ;; This function calls:
 15165 ;;		_Lcd_Port
 15166 ;; This function is called by:
 15167 ;;		_Lcd_Clear
 15168 ;;		_Lcd_Set_Cursor
 15169 ;;		_lcd_init
 15170 ;;		_Lcd_Shift_Right
 15171 ;;		_Lcd_Shift_Left
 15172 ;; This function uses a non-reentrant model
 15173 ;;
 15174                           
 15175                           	psect	text62
 15176  005C64                     __ptext62:
 15177                           	callstack 0
 15178  005C64                     _Lcd_Cmd:
 15179                           	callstack 25
 15180                           
 15181                           ;incstack = 0
 15182                           ;Lcd_Cmd@a stored from wreg
 15183  005C64  6E03               	movwf	Lcd_Cmd@a^0,c
 15184  005C66                     
 15185                           ;fs_lcd.c: 35: void Lcd_Cmd(char a);fs_lcd.c: 36: {;fs_lcd.c: 37:    PORTDbits.RD6 = 0;
 15186  005C66  9C83               	bcf	131,6,c	;volatile
 15187  005C68                     
 15188                           ;fs_lcd.c: 38:    Lcd_Port(a);
 15189  005C68  5003               	movf	Lcd_Cmd@a^0,w,c
 15190  005C6A  ECA6  F02B         	call	_Lcd_Port
 15191  005C6E                     
 15192                           ;fs_lcd.c: 39:    PORTDbits.RD7 = 1;
 15193  005C6E  8E83               	bsf	131,7,c	;volatile
 15194  005C70                     
 15195                           ;fs_lcd.c: 40:    _delay((unsigned long)((2)*(64000000UL/4000.0)));
 15196  005C70  0E2A               	movlw	42
 15197  005C72  6E02               	movwf	??_Lcd_Cmd^0,c
 15198  005C74  0E8E               	movlw	142
 15199  005C76                     u7877:
 15200  005C76  2EE8               	decfsz	wreg,f,c
 15201  005C78  D7FE               	bra	u7877
 15202  005C7A  2E02               	decfsz	??_Lcd_Cmd^0,f,c
 15203  005C7C  D7FC               	bra	u7877
 15204  005C7E                     
 15205                           ;fs_lcd.c: 41:    PORTDbits.RD7 = 0;
 15206  005C7E  9E83               	bcf	131,7,c	;volatile
 15207  005C80  0012               	return		;funcret
 15208  005C82                     __end_of_Lcd_Cmd:
 15209                           	callstack 0
 15210                           
 15211 ;; *************** function _Lcd_Port *****************
 15212 ;; Defined at:
 15213 ;;		line 12 in file "fs_lcd.c"
 15214 ;; Parameters:    Size  Location     Type
 15215 ;;  a               1    wreg     unsigned char 
 15216 ;; Auto vars:     Size  Location     Type
 15217 ;;  a               1    0[COMRAM] unsigned char 
 15218 ;; Return value:  Size  Location     Type
 15219 ;;                  1    wreg      void 
 15220 ;; Registers used:
 15221 ;;		wreg
 15222 ;; Tracked objects:
 15223 ;;		On entry : 0/0
 15224 ;;		On exit  : 0/0
 15225 ;;		Unchanged: 0/0
 15226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15227 ;;      Params:         0       0       0       0       0       0       0
 15228 ;;      Locals:         1       0       0       0       0       0       0
 15229 ;;      Temps:          0       0       0       0       0       0       0
 15230 ;;      Totals:         1       0       0       0       0       0       0
 15231 ;;Total ram usage:        1 bytes
 15232 ;; Hardware stack levels used:    1
 15233 ;; Hardware stack levels required when called:    1
 15234 ;; This function calls:
 15235 ;;		Nothing
 15236 ;; This function is called by:
 15237 ;;		_Lcd_Cmd
 15238 ;;		_lcd_init
 15239 ;;		_Lcd_Write_Char
 15240 ;; This function uses a non-reentrant model
 15241 ;;
 15242                           
 15243                           	psect	text63
 15244  00574C                     __ptext63:
 15245                           	callstack 0
 15246  00574C                     _Lcd_Port:
 15247                           	callstack 25
 15248                           
 15249                           ;incstack = 0
 15250                           ;Lcd_Port@a stored from wreg
 15251  00574C  6E01               	movwf	Lcd_Port@a^0,c
 15252  00574E                     
 15253                           ;fs_lcd.c: 12: void Lcd_Port(char a);fs_lcd.c: 13: {;fs_lcd.c: 14:    if(a & 1) { PORTBb
      +                          its.RB0 = 1;}
 15254  00574E  A001               	btfss	Lcd_Port@a^0,0,c
 15255  005750  EFAC  F02B         	goto	u6321
 15256  005754  EFAE  F02B         	goto	u6320
 15257  005758                     u6321:
 15258  005758  EFB1  F02B         	goto	l96
 15259  00575C                     u6320:
 15260  00575C  8081               	bsf	129,0,c	;volatile
 15261  00575E  EFB2  F02B         	goto	l5213
 15262  005762                     l96:
 15263  005762  9081               	bcf	129,0,c	;volatile
 15264  005764                     l5213:
 15265                           
 15266                           ;fs_lcd.c: 17:    if(a & 2) { PORTBbits.RB1 = 1;}
 15267  005764  A201               	btfss	Lcd_Port@a^0,1,c
 15268  005766  EFB7  F02B         	goto	u6331
 15269  00576A  EFB9  F02B         	goto	u6330
 15270  00576E                     u6331:
 15271  00576E  EFBC  F02B         	goto	l98
 15272  005772                     u6330:
 15273  005772  8281               	bsf	129,1,c	;volatile
 15274  005774  EFBD  F02B         	goto	l5217
 15275  005778                     l98:
 15276  005778  9281               	bcf	129,1,c	;volatile
 15277  00577A                     l5217:
 15278                           
 15279                           ;fs_lcd.c: 20:    if(a & 4) {PORTBbits.RB2 = 1;}
 15280  00577A  A401               	btfss	Lcd_Port@a^0,2,c
 15281  00577C  EFC2  F02B         	goto	u6341
 15282  005780  EFC4  F02B         	goto	u6340
 15283  005784                     u6341:
 15284  005784  EFC7  F02B         	goto	l100
 15285  005788                     u6340:
 15286  005788  8481               	bsf	129,2,c	;volatile
 15287  00578A  EFC8  F02B         	goto	l5221
 15288  00578E                     l100:
 15289  00578E  9481               	bcf	129,2,c	;volatile
 15290  005790                     l5221:
 15291                           
 15292                           ;fs_lcd.c: 23:    if(a & 8) {PORTBbits.RB3 = 1;}
 15293  005790  A601               	btfss	Lcd_Port@a^0,3,c
 15294  005792  EFCD  F02B         	goto	u6351
 15295  005796  EFCF  F02B         	goto	u6350
 15296  00579A                     u6351:
 15297  00579A  EFD2  F02B         	goto	l102
 15298  00579E                     u6350:
 15299  00579E  8681               	bsf	129,3,c	;volatile
 15300  0057A0  EFD3  F02B         	goto	l104
 15301  0057A4                     l102:
 15302  0057A4  9681               	bcf	129,3,c	;volatile
 15303  0057A6                     l104:
 15304  0057A6  0012               	return		;funcret
 15305  0057A8                     __end_of_Lcd_Port:
 15306                           	callstack 0
 15307                           
 15308 ;; *************** function _TIMER0 *****************
 15309 ;; Defined at:
 15310 ;;		line 33 in file "fs_timer.c"
 15311 ;; Parameters:    Size  Location     Type
 15312 ;;		None
 15313 ;; Auto vars:     Size  Location     Type
 15314 ;;		None
 15315 ;; Return value:  Size  Location     Type
 15316 ;;                  1    wreg      void 
 15317 ;; Registers used:
 15318 ;;		wreg, status,2, status,0
 15319 ;; Tracked objects:
 15320 ;;		On entry : 0/0
 15321 ;;		On exit  : 0/0
 15322 ;;		Unchanged: 0/0
 15323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15324 ;;      Params:         0       0       0       0       0       0       0
 15325 ;;      Locals:         0       0       0       0       0       0       0
 15326 ;;      Temps:          0       0       0       0       0       0       0
 15327 ;;      Totals:         0       0       0       0       0       0       0
 15328 ;;Total ram usage:        0 bytes
 15329 ;; Hardware stack levels used:    1
 15330 ;; This function calls:
 15331 ;;		Nothing
 15332 ;; This function is called by:
 15333 ;;		Interrupt level 2
 15334 ;; This function uses a non-reentrant model
 15335 ;;
 15336                           
 15337                           	psect	intcode
 15338  000008                     __pintcode:
 15339                           	callstack 0
 15340  000008                     _TIMER0:
 15341                           	callstack 20
 15342                           
 15343                           ;incstack = 0
 15344  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15345  00000A                     
 15346                           ;fs_timer.c: 35:     if ((INTCONbits.TMR0IF)&&(INTCONbits.TMR0IE))
 15347  00000A  A4F2               	btfss	242,2,c	;volatile
 15348  00000C  EF0A  F000         	goto	i2u777_41
 15349  000010  EF0C  F000         	goto	i2u777_40
 15350  000014                     i2u777_41:
 15351  000014  EF32  F000         	goto	i2l482
 15352  000018                     i2u777_40:
 15353  000018  AAF2               	btfss	242,5,c	;volatile
 15354  00001A  EF11  F000         	goto	i2u778_41
 15355  00001E  EF13  F000         	goto	i2u778_40
 15356  000022                     i2u778_41:
 15357  000022  EF32  F000         	goto	i2l482
 15358  000026                     i2u778_40:
 15359  000026                     
 15360                           ;fs_timer.c: 36:     {;fs_timer.c: 37:         INTCONbits.TMR0IF = 0;
 15361  000026  94F2               	bcf	242,2,c	;volatile
 15362  000028                     
 15363                           ;fs_timer.c: 38:         TMR0H = 0x63;
 15364  000028  0E63               	movlw	99
 15365  00002A  6ED7               	movwf	215,c	;volatile
 15366                           
 15367                           ;fs_timer.c: 39:         TMR0L = 0xC0;
 15368  00002C  0EC0               	movlw	192
 15369  00002E  6ED6               	movwf	214,c	;volatile
 15370  000030                     
 15371                           ;fs_timer.c: 41:         timer_value.timer_0_counter++;
 15372  000030  0100               	movlb	0	; () banked
 15373  000032  2BFC               	incf	(_timer_value+9)& (0+255),f,b
 15374  000034                     
 15375                           ; BSR set to: 0
 15376                           ;fs_timer.c: 43:         if(button_bounce_controller.menu == 1)
 15377  000034  A1FE               	btfss	_button_bounce_controller& (0+255),0,b
 15378  000036  EF1F  F000         	goto	i2u779_41
 15379  00003A  EF21  F000         	goto	i2u779_40
 15380  00003E                     i2u779_41:
 15381  00003E  EF24  F000         	goto	i2l6209
 15382  000042                     i2u779_40:
 15383  000042                     
 15384                           ; BSR set to: 0
 15385                           ;fs_timer.c: 44:         {;fs_timer.c: 45:              timer_value.menu_login_delay++;
 15386  000042  2BFB               	incf	(_timer_value+8)& (0+255),f,b
 15387                           
 15388                           ;fs_timer.c: 46:         }
 15389  000044  EF26  F000         	goto	i2l6211
 15390  000048                     i2l6209:
 15391                           
 15392                           ; BSR set to: 0
 15393                           ;fs_timer.c: 48:         {;fs_timer.c: 49:              timer_value.menu_login_delay = 0
      +                          ;
 15394  000048  0E00               	movlw	0
 15395  00004A  6FFB               	movwf	(_timer_value+8)& (0+255),b
 15396  00004C                     i2l6211:
 15397                           
 15398                           ; BSR set to: 0
 15399                           ;fs_timer.c: 52:         if (timer_value.timer_0_counter >= 100)
 15400  00004C  0E63               	movlw	99
 15401  00004E  65FC               	cpfsgt	(_timer_value+9)& (0+255),b
 15402  000050  EF2C  F000         	goto	i2u780_41
 15403  000054  EF2E  F000         	goto	i2u780_40
 15404  000058                     i2u780_41:
 15405  000058  EF32  F000         	goto	i2l482
 15406  00005C                     i2u780_40:
 15407  00005C                     
 15408                           ; BSR set to: 0
 15409                           ;fs_timer.c: 53:         {;fs_timer.c: 54:             timer_value.timer_0_counter = 0;
 15410  00005C  0E00               	movlw	0
 15411  00005E  6FFC               	movwf	(_timer_value+9)& (0+255),b
 15412  000060                     
 15413                           ; BSR set to: 0
 15414                           ;fs_timer.c: 55:             timer_counter_flag.one_second_flag = 1;
 15415  000060  0101               	movlb	1	; () banked
 15416  000062  819E               	bsf	_timer_counter_flag& (0+255),0,b
 15417  000064                     i2l482:
 15418  000064  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15419  000066  0011               	retfie		f
 15420  000068                     __end_of_TIMER0:
 15421                           	callstack 0
 15422                           
 15423                           	psect	rparam
 15424  0000                     
 15425                           	psect	temp
 15426  00005F                     btemp:
 15427                           	callstack 0
 15428  00005F                     	ds	1
 15429  0000                     int$flags	set	btemp
 15430  0000                     wtemp8	set	btemp+1
 15431  0000                     ttemp5	set	btemp+1
 15432  0000                     ttemp6	set	btemp+4
 15433  0000                     ttemp7	set	btemp+8
 15434                           
 15435                           	psect	idloc
 15436                           
 15437                           ;Config register IDLOC0 @ 0x200000
 15438                           ;	unspecified, using default values
 15439  200000                     	org	2097152
 15440  200000  FF                 	db	255
 15441                           
 15442                           ;Config register IDLOC1 @ 0x200001
 15443                           ;	unspecified, using default values
 15444  200001                     	org	2097153
 15445  200001  FF                 	db	255
 15446                           
 15447                           ;Config register IDLOC2 @ 0x200002
 15448                           ;	unspecified, using default values
 15449  200002                     	org	2097154
 15450  200002  FF                 	db	255
 15451                           
 15452                           ;Config register IDLOC3 @ 0x200003
 15453                           ;	unspecified, using default values
 15454  200003                     	org	2097155
 15455  200003  FF                 	db	255
 15456                           
 15457                           ;Config register IDLOC4 @ 0x200004
 15458                           ;	unspecified, using default values
 15459  200004                     	org	2097156
 15460  200004  FF                 	db	255
 15461                           
 15462                           ;Config register IDLOC5 @ 0x200005
 15463                           ;	unspecified, using default values
 15464  200005                     	org	2097157
 15465  200005  FF                 	db	255
 15466                           
 15467                           ;Config register IDLOC6 @ 0x200006
 15468                           ;	unspecified, using default values
 15469  200006                     	org	2097158
 15470  200006  FF                 	db	255
 15471                           
 15472                           ;Config register IDLOC7 @ 0x200007
 15473                           ;	unspecified, using default values
 15474  200007                     	org	2097159
 15475  200007  FF                 	db	255
 15476                           
 15477                           	psect	config
 15478                           
 15479                           ; Padding undefined space
 15480  300000                     	org	3145728
 15481  300000  FF                 	db	255
 15482                           
 15483                           ;Config register CONFIG1H @ 0x300001
 15484                           ;	Oscillator Selection bits
 15485                           ;	FOSC = INTIO67, Internal oscillator block
 15486                           ;	4X PLL Enable
 15487                           ;	PLLCFG = ON, Oscillator multiplied by 4
 15488                           ;	Primary clock enable bit
 15489                           ;	PRICLKEN = ON, Primary clock is always enabled
 15490                           ;	Fail-Safe Clock Monitor Enable bit
 15491                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 15492                           ;	Internal/External Oscillator Switchover bit
 15493                           ;	IESO = ON, Oscillator Switchover mode enabled
 15494  300001                     	org	3145729
 15495  300001  B8                 	db	184
 15496                           
 15497                           ;Config register CONFIG2L @ 0x300002
 15498                           ;	Power-up Timer Enable bit
 15499                           ;	PWRTEN = OFF, Power up timer disabled
 15500                           ;	Brown-out Reset Enable bits
 15501                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 15502                           ;	Brown Out Reset Voltage bits
 15503                           ;	BORV = 190, VBOR set to 1.90 V nominal
 15504  300002                     	org	3145730
 15505  300002  1F                 	db	31
 15506                           
 15507                           ;Config register CONFIG2H @ 0x300003
 15508                           ;	Watchdog Timer Enable bits
 15509                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 15510                           ;	Watchdog Timer Postscale Select bits
 15511                           ;	WDTPS = 32768, 1:32768
 15512  300003                     	org	3145731
 15513  300003  3C                 	db	60
 15514                           
 15515                           ; Padding undefined space
 15516  300004                     	org	3145732
 15517  300004  FF                 	db	255
 15518                           
 15519                           ;Config register CONFIG3H @ 0x300005
 15520                           ;	CCP2 MUX bit
 15521                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 15522                           ;	PORTB A/D Enable bit
 15523                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
 15524                           ;	P3A/CCP3 Mux bit
 15525                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 15526                           ;	HFINTOSC Fast Start-up
 15527                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 15528                           ;	Timer3 Clock input mux bit
 15529                           ;	T3CMX = PORTC0, T3CKI is on RC0
 15530                           ;	ECCP2 B output mux bit
 15531                           ;	P2BMX = PORTD2, P2B is on RD2
 15532                           ;	MCLR Pin Enable bit
 15533                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 15534  300005                     	org	3145733
 15535  300005  BD                 	db	189
 15536                           
 15537                           ;Config register CONFIG4L @ 0x300006
 15538                           ;	Stack Full/Underflow Reset Enable bit
 15539                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
 15540                           ;	Single-Supply ICSP Enable bit
 15541                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 15542                           ;	Extended Instruction Set Enable bit
 15543                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 15544                           ;	Background Debug
 15545                           ;	DEBUG = 0x1, unprogrammed default
 15546  300006                     	org	3145734
 15547  300006  84                 	db	132
 15548                           
 15549                           ; Padding undefined space
 15550  300007                     	org	3145735
 15551  300007  FF                 	db	255
 15552                           
 15553                           ;Config register CONFIG5L @ 0x300008
 15554                           ;	Code Protection Block 0
 15555                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 15556                           ;	Code Protection Block 1
 15557                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 15558                           ;	Code Protection Block 2
 15559                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 15560                           ;	Code Protection Block 3
 15561                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 15562  300008                     	org	3145736
 15563  300008  0F                 	db	15
 15564                           
 15565                           ;Config register CONFIG5H @ 0x300009
 15566                           ;	Boot Block Code Protection bit
 15567                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 15568                           ;	Data EEPROM Code Protection bit
 15569                           ;	CPD = OFF, Data EEPROM not code-protected
 15570  300009                     	org	3145737
 15571  300009  C0                 	db	192
 15572                           
 15573                           ;Config register CONFIG6L @ 0x30000A
 15574                           ;	Write Protection Block 0
 15575                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 15576                           ;	Write Protection Block 1
 15577                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 15578                           ;	Write Protection Block 2
 15579                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 15580                           ;	Write Protection Block 3
 15581                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 15582  30000A                     	org	3145738
 15583  30000A  0F                 	db	15
 15584                           
 15585                           ;Config register CONFIG6H @ 0x30000B
 15586                           ;	Configuration Register Write Protection bit
 15587                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 15588                           ;	Boot Block Write Protection bit
 15589                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 15590                           ;	Data EEPROM Write Protection bit
 15591                           ;	WRTD = OFF, Data EEPROM not write-protected
 15592  30000B                     	org	3145739
 15593  30000B  E0                 	db	224
 15594                           
 15595                           ;Config register CONFIG7L @ 0x30000C
 15596                           ;	Table Read Protection Block 0
 15597                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 15598                           ;	Table Read Protection Block 1
 15599                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 15600                           ;	Table Read Protection Block 2
 15601                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 15602                           ;	Table Read Protection Block 3
 15603                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 15604  30000C                     	org	3145740
 15605  30000C  0F                 	db	15
 15606                           
 15607                           ;Config register CONFIG7H @ 0x30000D
 15608                           ;	Boot Block Table Read Protection bit
 15609                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 15610  30000D                     	org	3145741
 15611  30000D  40                 	db	64
 15612                           tosu	equ	0xFFF
 15613                           tosh	equ	0xFFE
 15614                           tosl	equ	0xFFD
 15615                           stkptr	equ	0xFFC
 15616                           pclatu	equ	0xFFB
 15617                           pclath	equ	0xFFA
 15618                           pcl	equ	0xFF9
 15619                           tblptru	equ	0xFF8
 15620                           tblptrh	equ	0xFF7
 15621                           tblptrl	equ	0xFF6
 15622                           tablat	equ	0xFF5
 15623                           prodh	equ	0xFF4
 15624                           prodl	equ	0xFF3
 15625                           indf0	equ	0xFEF
 15626                           postinc0	equ	0xFEE
 15627                           postdec0	equ	0xFED
 15628                           preinc0	equ	0xFEC
 15629                           plusw0	equ	0xFEB
 15630                           fsr0h	equ	0xFEA
 15631                           fsr0l	equ	0xFE9
 15632                           wreg	equ	0xFE8
 15633                           indf1	equ	0xFE7
 15634                           postinc1	equ	0xFE6
 15635                           postdec1	equ	0xFE5
 15636                           preinc1	equ	0xFE4
 15637                           plusw1	equ	0xFE3
 15638                           fsr1h	equ	0xFE2
 15639                           fsr1l	equ	0xFE1
 15640                           bsr	equ	0xFE0
 15641                           indf2	equ	0xFDF
 15642                           postinc2	equ	0xFDE
 15643                           postdec2	equ	0xFDD
 15644                           preinc2	equ	0xFDC
 15645                           plusw2	equ	0xFDB
 15646                           fsr2h	equ	0xFDA
 15647                           fsr2l	equ	0xFD9
 15648                           status	equ	0xFD8

Data Sizes:
    Strings     214
    Constant    0
    Data        8
    BSS         284
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    147     160
    BANK1           256      0     247
    BANK2           256      0      32
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_27(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_27(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_22(CODE[4]), STR_21(CODE[4]), STR_18(CODE[4]), STR_17(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_22(CODE[4]), STR_21(CODE[4]), STR_18(CODE[4]), STR_17(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[13]), STR_14(CODE[14]), STR_12(CODE[16]), STR_10(CODE[16]), 
		 -> STR_8(CODE[18]), STR_6(CODE[18]), STR_4(CODE[18]), STR_2(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[13]), STR_14(CODE[14]), STR_12(CODE[16]), STR_10(CODE[16]), 
		 -> STR_8(CODE[18]), STR_6(CODE[18]), STR_4(CODE[18]), STR_2(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[13]), STR_14(CODE[14]), STR_12(CODE[16]), STR_10(CODE[16]), 
		 -> STR_8(CODE[18]), STR_6(CODE[18]), STR_4(CODE[18]), STR_2(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[13]), STR_14(CODE[14]), STR_12(CODE[16]), STR_10(CODE[16]), 
		 -> STR_8(CODE[18]), STR_6(CODE[18]), STR_4(CODE[18]), STR_2(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2365_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_15(CODE[17]), STR_13(CODE[17]), STR_11(CODE[17]), STR_9(CODE[17]), 
		 -> STR_7(CODE[17]), STR_5(CODE[17]), STR_3(CODE[17]), STR_1(CODE[17]), 
		 -> stateMachine@textCursor2(BANK0[16]), 


Critical Paths under _main in COMRAM

    _system_init->_eepromRead
    _stopMotor->_PWM1_setDC
    _stopMotor->_PWM2_setDC
    _startMotor->_PWM1_setDC
    _startMotor->_PWM2_setDC
    _startMotor->_speedControl
    _speedControl->___fltol
    _scanAdcConversion->___fltol
    _calculatedAverageValue->___xxtofl
    _PWM2_setDC->___fltol
    _PWM1_setDC->___fltol
    _fabsf->___xxtofl
    ___xxtofl->___lldiv
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___fltol->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _lcd_init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _TIMER0 in COMRAM

    None.

Critical Paths under _main in BANK0

    _menuControl->_stateMachine
    _stateMachine->_sprintf
    _startMotor->_speedControl
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _TIMER0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TIMER0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TIMER0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TIMER0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TIMER0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TIMER0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  100437
                          _Lcd_Clear
                         _PWM1_setDC
                         _PWM2_setDC
                           _PWM_Init
                            _adcInit
                           _lcd_init
                           _mcu_init
                        _menuControl
                     _menuInitialize
                        _system_init
                       _timer_0_init
 ---------------------------------------------------------------------------------
 (1) _timer_0_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_init                                          2     2      0      22
                                              1 COMRAM     2     2      0
                         _eepromRead
 ---------------------------------------------------------------------------------
 (2) _eepromRead                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _menuInitialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _menuControl                                          0     0      0   93759
                 _buttonControlFlags
                       _stateMachine
 ---------------------------------------------------------------------------------
 (2) _stateMachine                                        18    18      0   93759
                                            129 BANK0     18    18      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fladd
                             ___flge
                            ___flsub
                        _eepromWrite
                            _sprintf
                         _startMotor
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _stopMotor                                            0     0      0    6348
                         _PWM1_setDC
                         _PWM2_setDC
 ---------------------------------------------------------------------------------
 (3) _startMotor                                           0     0      0   32873
                         _PWM1_setDC
                         _PWM2_setDC
             _calculatedAverageValue
                  _scanAdcConversion
                       _speedControl
 ---------------------------------------------------------------------------------
 (4) _speedControl                                        10     6      4   11063
                                             87 COMRAM     6     2      4
                                              0 BANK0      4     4      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) _scanAdcConversion                                    2     2      0   12556
                                             87 COMRAM     2     2      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                       _readAdcValue
 ---------------------------------------------------------------------------------
 (5) _readAdcValue                                         7     5      2      46
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _calculatedAverageValue                              24    24      0    2906
                                             27 COMRAM    24    24      0
                            ___lldiv
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8    1282
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) _PWM2_setDC                                           6     4      2    3174
                                             87 COMRAM     6     4      2
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (4) _PWM1_setDC                                           6     4      2    3174
                                             87 COMRAM     6     4      2
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (5) _fabsf                                                8     4      4     199
                                             27 COMRAM     8     4      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4    1310
                                             13 COMRAM    14    10      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    10      8   42834
                                            111 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   41409
                                            103 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           50    44      6   41025
                                             71 BANK0     32    26      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   30053
                                             87 COMRAM     7     0      7
                                             10 BANK0     61    61      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     490
                                             77 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4    1369
                                             77 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _fabsf (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    3801
                                             68 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    3022
                                             52 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    5240
                                             27 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8     942
                                             52 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    4591
                                             52 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5042
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1396
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eepromWrite                                          2     1      1     500
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_String                                     6     4      2    1484
                                              4 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (4) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Set_Cursor                                       5     4      1    1596
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _buttonControlFlags                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mcu_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     198
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (4) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (5) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _TIMER0                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _PWM1_setDC
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
       _fabsf (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
     ___xxtofl
       ___lldiv (ARG)
     _fabsf
       ___xxtofl (ARG)
         ___lldiv (ARG)
   _PWM2_setDC
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
       _fabsf (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
     ___xxtofl
       ___lldiv (ARG)
     _fabsf
       ___xxtofl (ARG)
         ___lldiv (ARG)
   _PWM_Init
   _adcInit
   _lcd_init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _mcu_init
   _menuControl
     _buttonControlFlags
     _stateMachine
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___flge
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
       _eepromWrite
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fleq
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
                 _fabsf (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper
       _startMotor
         _PWM1_setDC
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
           _fabsf
             ___xxtofl (ARG)
               ___lldiv (ARG)
         _PWM2_setDC
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
           _fabsf
             ___xxtofl (ARG)
               ___lldiv (ARG)
         _calculatedAverageValue
           ___lldiv
           ___lmul
           ___xxtofl
             ___lldiv (ARG)
         _scanAdcConversion
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
           _readAdcValue
         _speedControl
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
       _stopMotor
         _PWM1_setDC
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
           _fabsf
             ___xxtofl (ARG)
               ___lldiv (ARG)
         _PWM2_setDC
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
           _fabsf
             ___xxtofl (ARG)
               ___lldiv (ARG)
   _menuInitialize
   _system_init
     _eepromRead
   _timer_0_init

 _TIMER0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      20       8       12.5%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      F7       6       96.5%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     93      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     215       9        0.0%
DATA                 0      0     215      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Aug 11 18:28:58 2020

                   ___fldiv@aexp 004D                     ___fldiv@bexp 004C  
                   ___fldiv@sign 0045                               l41 59E6  
                             l35 5940                               l38 5968  
                             l54 2486                               l70 5C52  
                             l72 5C60                               l57 3A26  
                             l73 5C62                               l76 5BBC  
                             l78 5BCA                               _KD 01EF  
                             l79 5BCE                               l96 5762  
                             l98 5778                               _KP 01F3  
                   ___awdiv@sign 0006              ___wmul@multiplicand 0003  
            __end_of_system_init 49B6                              l100 578E  
                            l102 57A4                              l110 5CB6  
                            l104 57A6         ??_calculatedAverageValue 001C  
                            l122 5B6C                              l107 5C80  
                            l116 568E                              l119 5374  
                            l320 466C                              l128 53F2  
                            l312 5BF6                              l321 468C  
                            l250 5C96                              l322 46AC  
                            l323 46CC                              l315 45CC  
                            l404 5C1E                              l324 46EC  
                            l316 45EC                              l412 546C  
                            l500 55BE                              l325 470C  
                            l317 460C                              l333 5554  
                            l253 49B4                              l318 462C  
                            l247 5C88                              l327 472C  
                            l319 464C                              l343 135C  
                            l408 54E6                              l344 13A6  
                            l441 40DC                              l602 45A8  
                            l522 52DE                              l515 52CE  
                            l444 5A22                              l348 144E  
                            l366 181A                              l358 166C  
                            l615 4890                              l447 5B00  
                            l383 1C80                     _startIsClick 019D  
                            l368 18B4                              l732 5190  
                            l485 5CA8                              l719 50E0  
                            l488 5C44                              l753 4B78  
                            l762 5A92                              l747 523A  
                            l499 55AE                              l758 4BBE  
                            l785 4ABA                              _PR2 000FBB  
                            _abs 596A                              _pad 4F58  
                   ___awmod@sign 0006                              wreg 000FE8  
                   ___flmul@aexp 002D                     ___flmul@bexp 002E  
                   ___flmul@sign 0028                     ___flmul@temp 0033  
                   ___flmul@prod 002F                      _stopIsClick 019C  
                   ___fltol@exp1 0057                             l1102 3042  
                           l1111 32B0                             l1112 329E  
                           l1016 2CAC                             l1033 2DC6  
                           l1025 2F7C                             l1017 2C9A  
                           l1106 33A6                             l1042 2E96  
                           l1018 2C60                             l1043 2E84  
                           ?_abs 0013                             l1109 3238  
                           l1214 4F9E                             l1070 3740  
                           l1150 41CC                             l1119 3368  
                           l1143 4134                             l1072 35A0  
                           l1217 4FE0                             l1225 3AC8  
                           l1081 35E6                             l1058 58E2  
                           l1146 4290                             l1219 501C  
                           l1227 3AD0                             l1083 365E  
                           l1075 3564                             l1307 0E68  
                           l1171 584A                             l1084 364C  
                           l1164 5BA0                             l1245 3D08  
                           l1501 4E8C                             l1157 4228  
                           l1511 56E6                             l1263 129C  
                           l4001 2C6E                             l1281 0ACC  
                           l1426 4418                             l4011 2C98  
                           l4003 2C7A                             l1435 3F1E  
                           l1516 56EE                             l1380 5628  
                           l1445 5ACA                             l1453 589C  
                           l1429 4420                             l4101 2F4E  
                           l4021 2CEE                             l4013 2CBA  
                           l4005 2C7E                             l1373 2A02  
                           l1365 2ABC                             l1390 4CBC  
                           l1438 3E62                             l4111 2F6C  
                           l4103 2F54                             l4031 2D28  
                           l4023 2CFC                             l4015 2CCA  
                           l4007 2C8C                             l4201 47B0  
                           l4121 5906                             l4105 2F56  
                           l4041 2D94                             l4033 2D2A  
                           l4025 2D0A                             l4009 2C8E  
                           l5001 0E40                             l1474 4F56  
                           l1482 5926                             l4211 4828  
                           l4203 47B8                             l1395 59A0  
                           l4115 58E4                             l4123 5B02  
                           l4107 2F5C                             l4051 2DEC  
                           l4043 2D96                             l4035 2D34  
                           l4027 2D16                             l4019 2CDE  
                           l1491 574A                             l1459 5A5A  
                           l5011 0EF8                             l5003 0E54  
                           l1379 5620                             l4213 483A  
                           l4205 47CC                             l1485 5CC0  
                           l4117 58F0                             l4125 5B0E  
                           l4301 358C                             l4109 2F6A  
                           l4061 2E1A                             l4045 2DA6  
                           l4029 2D1A                             l4037 2D3A  
                           l4133 5A24                             l5101 11CA  
                           l5021 0F48                             l5013 0F0C  
                           l5005 0E60                             l1398 59A8  
                           l4151 4458                             l4143 4422  
                           l4207 47DA                             l4215 4840  
                           l4119 5902                             l4127 5B12  
                           l4311 35CC                             l4303 358E  
                           l4231 33D4                             l4223 33A8  
                           l4063 2E28                             l4055 2E00  
                           l4071 2E46                             l4039 2D60  
                           l4047 2DB6                             l5111 1206  
                           l5103 11DC                             l5031 0F7C  
                           l5023 0F56                             l5015 0F1E  
                           l5007 0E84                             l4137 5C20  
                           l4161 44B4                             l4153 4466  
                           l4145 4426                             l4217 4850  
                           l4209 4808                             l1497 5B36  
                           l4129 5B2A                             l4321 3608  
                           l4313 35D6                             l4305 359E  
                           l4241 340E                             l4233 33E4  
                           l4225 33B4                             l4401 3076  
                           l4065 2E30                             l4057 2E0A  
                           l4049 2DDC                             l4073 2E54  
                           l5121 125E                             l5113 120C  
                           l5105 11E8                             l5041 0FAE  
                           l5033 0F8C                             l5025 0F66  
                           l5017 0F2C                             l5009 0EE8  
                           l5201 593E                             l6001 1A96  
                           l5211 575C                             l4139 5C3C  
                           l4171 451E                             l4163 44BC  
                           l4155 4486                             l4147 4434  
                           l4219 4870                             l4331 367A  
                           l4323 3616                             l4315 35E4  
                           l4307 35B0                             l4251 343A  
                           l4243 3414                             l4235 33F4  
                           l4227 33C2                             l4411 30C6  
                           l4403 3082                             l4083 2EA6  
                           l4091 2EFC                             l4075 2E58  
                           l4067 2E34                             l4059 2E18  
                           l5123 1266                             l5107 11F0  
                           l5051 1056                             l5043 0FC0  
                           l5035 0F90                             l5027 0F6A  
                           l5019 0F34                             l5203 594E  
                           l6011 1AFE                             l6003 1ACA  
                           l5221 5790                             l5213 5764  
                           l5141 42CA                             l5133 4292  
                           l4181 4568                             l4173 453E  
                           l4165 44D0                             l4157 448A  
                           l4149 4454                             l4501 5030  
                           l4341 36E6                             l4333 3688  
                           l4325 3644                             l4309 35C6  
                           l4317 35F6                             l4261 3474  
                           l4253 344A                             l4245 341A  
                           l4237 33F6                             l4229 33C4  
                           l4421 3108                             l4413 30D2  
                           l4405 308C                             l4093 2F0C  
                           l4085 2EB2                             l4077 2E66  
                           l4069 2E44                             l5125 1276  
                           l5117 1240                             l5109 1200  
                           l5061 10AE                             l5053 105E  
                           l5045 0FC4                             l5037 0F96  
                           l5029 0F70                             l5301 4260  
                           l5205 5960                             l6021 1B76  
                           l6013 1B24                             l6005 1ADE  
                           l6101 496C                             l5223 579E  
                           l5215 5772                             l5151 4320  
                           l5143 4300                             l5135 42A6  
                           l4183 4588                             l4175 4540  
                           l4167 44DE                             l4159 4496  
                           l4191 4740                             l4511 5056  
                           l4503 5038                             l4351 3734  
                           l4343 3700                             l4335 36B2  
                           l4319 3604                             l4263 348A  
                           l4255 345A                             l4247 3428  
                           l4239 33FE                             l4431 316A  
                           l4423 3114                             l4415 30DE  
                           l4407 30A2                             l4095 2F1C  
                           l4087 2EC0                             l4079 2E7C  
                           l5127 127C                             l5119 1252  
                           l5071 10F8                             l5063 10BE  
                           l5039 0F9C                             l5047 0FCA  
                           l5055 1062                             l5311 2488  
                           l5303 4270                             l6023 1BAA  
                           l6015 1B30                             l6007 1AE8  
                           l6031 1C02                             l6111 49A4  
                           l6103 496E                             l5217 577A  
                           l5209 574E                             l5161 439A  
                           l5153 4328                             l5145 4304  
                           l5137 42AA                             l4177 4552  
                           l4169 44F0                             l4193 4760  
                           l4521 508E                             l4513 505E  
                           l4505 503C                             l4353 3736  
                           l4345 371C                             l4329 366E  
                           l4337 36B6                             l4281 34DE  
                           l4265 349A                             l4273 34BA  
                           l4257 345C                             l4249 342A  
                           l4601 4B38                             l4441 3200  
                           l4433 3176                             l4425 3124  
                           l4417 30EC                             l4409 30AE  
                           l4361 2F7E                             l4097 2F3C  
                           l4089 2EFA                             l5081 112E  
                           l5073 1100                             l5065 10D0  
                           l5057 1080                             l5049 1022  
                           l5321 24F4                             l5313 24AC  
                           l5305 427E                             l5225 5B6E  
                           l5241 558E                             l5233 5556  
                           l6025 1BBA                             l6017 1B40  
                           l6009 1AF4                             l6121 54E8  
                           l6113 49AC                             l6105 4978  
                           l5219 5788                             l6115 5BF8  
                           l6043 59AA                             l6051 52E0  
                           l5155 4330                             l5139 42AE  
                           l4179 4558                             l4195 4764  
                           l4187 472E                             l4531 50BA  
                           l4523 5094                             l4515 5070  
                           l4507 504A                             l4347 3720  
                           l4339 36D0                             l4291 3530  
                           l4283 34F8                             l4275 34CA  
                           l4267 34A2                             l4259 3464  
                           l4611 4BBC                             l4603 4B46  
                           l4451 3256                             l4443 321E  
                           l4435 3192                             l4427 313E  
                           l4419 30F8                             l4371 2FBA  
                           l4363 2F8A                             l4099 2F40  
                           l5091 118A                             l5083 1136  
                           l5075 1110                             l5067 10D4  
                           l5059 109C                             l5411 2A5C  
                           l5331 2574                             l5323 252A  
                           l5315 24BA                             l5307 4280  
                           l5227 5B8E                             l5251 5276  
                           l5243 523C                             l5235 5566  
                           l6027 1BCA                             l6019 1B72  
                           l6131 5514                             l6123 54EC  
                           l6107 4982                             l5501 5C68  
                           l6117 5BFC                             l6045 59CC  
                           l6061 532E                             l6053 52FA  
                           l5165 43D8                             l5157 4364  
                           l5149 430A                             l4197 4772  
                           l4189 4732                             l3901 4EA0  
                           l4525 50AA                             l4517 5078  
                           l4533 50C0                             l4509 5052  
                           l4541 50E2                             l4349 372E  
                           l4293 3540                             l4285 3508  
                           l4277 34CA                             l4269 34A6  
                           l4605 4B58                             l4461 32C0  
                           l4453 325A                             l4445 3228  
                           l4437 31BC                             l4429 314E  
                           l4381 2FEC                             l4373 2FCA  
                           l4365 2F98                             l4701 4C52  
                           l5093 1192                             l5085 1142  
                           l5077 1118                             l5069 10E6  
                           l5181 4DEE                             l5405 2A16  
                           l5341 25FC                             l5325 2538  
                           l5317 24CC                             l5421 2A86  
                           l5229 5B90                             l5261 52BE  
                           l5253 5284                             l5245 524C  
                           l5237 5574                             l6029 1BCE  
                           l6037 1C1A                             l6141 5546  
                           l6133 5524                             l6125 54F0  
                           l6109 498C                             ?_pad 0011  
                           l5503 5C6E                             l6119 5C0C  
                           l6047 59D4                             l6071 5356  
                           l6063 5334                             l6055 5300  
                           l5511 5B46                             l5167 43EA  
                           l4199 4792                             l3903 4EB2  
                           l4535 50D0                             l4527 50B2  
                           l4519 5080                             l4551 510E  
                           l4543 50E6                             l4295 3554  
                           l4287 3518                             l4607 4B66  
                           l4471 3322                             l4463 32CC  
                           l4455 3268                             l4447 3236  
                           l4439 31F2                             l4391 302C  
                           l4383 2FFA                             l4375 2FD0  
                           l4367 2F9A                             l4615 5A5C  
                           l4631 4A0A                             l4623 49B6  
                           l4711 4CB4                             l5087 1148  
                           l5095 1198                             l5079 1126  
                           l5191 4E6A                             l5183 4DFC  
                           l5175 4DB8                             l5423 2AAA  
                           l5407 2A3A                             l5415 2A6A  
                           l5351 2696                             l5343 260A  
                           l5335 25BC                             l5327 2546  
                           l5319 24D0                             l5271 4144  
                           l5263 52C8                             l5255 528E  
                           l5247 5262                             l5239 5584  
                           l5431 1C86                             l6135 5526  
                           l6127 5500                             l6151 4CC6  
                           l5505 5C70                             l6049 5CAA  
                           l6073 535C                             l6065 5344  
                           l6057 5318                             l6081 5C82  
                           l5601 563C                             l5521 5B5A  
                           l5513 5B48                             l5169 43FC  
                           l3905 4EBC                             l4801 3B96  
                           l4537 50D8                             l4529 50B4  
                           l4561 5146                             l4553 5116  
                           l4545 50F4                             l4297 3562  
                           l4289 3528                             l4609 4BB6  
                           l4481 338A                             l4473 3336  
                           l4465 32DA                             l4457 3296  
                           l4449 3248                             l4393 3032  
                           l4385 2FFC                             l4377 2FE0  
                           l4369 2FAA                             l4617 5A72  
                           l3921 2AEA                             l3913 2ABE  
                           l4633 4A0C                             l4625 49CC  
                           l4705 4C5E                             l5097 11AA  
                           l5089 116E                             l5185 4E14  
                           l5177 4DE2                             l5417 2A78  
                           l5409 2A48                             l5361 2722  
                           l5345 262E                             l5329 2566  
                           l5337 25CE                             l5281 4182  
                           l5273 415A                             l5265 40E0  
                           l5257 52AC                             l5249 526A  
                           l5441 1DE6                             l5433 1C94  
                           l6137 5534                             l6129 5502  
                           l6161 4CDA                             l6153 4CCA  
                           l5507 5C7E                             l6075 5362  
                           l6067 534A                             l6059 531E  
                           l6083 5C86                             l5611 5682  
                           l5603 564E                             l5523 5B60  
                           l5515 5B50                             l3907 4EDA  
                           l4811 3C3E                             l4803 3B9C  
                           l4571 5180                             l4563 515C  
                           l4555 5128                             l4547 50FC  
                           l4299 356E                             l4483 338C  
                           l4475 3350                             l4467 3304  
                           l4395 3052                             l4387 300C  
                           l4379 2FE6                             l4619 5A82  
                           l3931 2B24                             l3923 2AFA  
                           l3915 2ACA                             l4491 589E  
                           l4635 4A1C                             l4707 4C70  
                           l4731 3D2A                             l4715 56F0  
                           l4723 56C6                             l5099 11C4  
                           l5187 4E30                             l5371 27DE  
                           l5363 2754                             l5355 26DE  
                           l5347 2668                             l5339 25F2  
                           l5291 420A                             l5283 41B4  
                           l5267 40F0                             l5531 546E  
                           l5259 52BC                             l5195 592A  
                           l5451 1FA2                             l5443 1E56  
                           l5435 1CFE                             l6139 5544  
                           l6091 5CA6                             l6171 4D08  
                           l6163 4CDE                             l6155 4CCE  
                           l6147 4CBE                             l6077 5368  
                           l6069 5350                             l5701 471A  
                           l5613 5688                             l5605 5654  
                           l5525 5B62                             l5517 5B52  
                           l5509 5B3A                             l5621 53B6  
                           l3909 4F10                             l4821 3CA4  
                           l4813 3C58                             l4805 3BA2  
                           l4573 5188                             l4565 5164  
                           l4557 5130                             l4549 5100  
                           l4581 51D0                             l4477 336C  
                           l4485 3392                             l4469 3308  
                           l4397 3062                             l4389 301C  
                           l3941 2B52                             l3933 2B2A  
                           l3925 2B0A                             l3917 2AD8  
                           l4493 58AE                             l4661 4A9A  
                           l4645 4A46                             l4637 4A20  
                           l4629 49E0                             l4741 3E16  
                           l4733 3D82                             l4717 5700  
                           l4725 56D8                             l4901 0910  
                           l5189 4E42                             l5381 2886  
                           l5373 2826                             l5365 2764  
                           l5349 2688                             l5357 26F0  
                           l5293 4218                             l5285 41B6  
                           l5277 416E                             l5269 40FE  
                           l5533 5486                             l5541 540C  
                           l5197 592A                             l5461 2102  
                           l5453 1FB0                             l5445 1E64  
                           l5437 1D6E                             l5429 1C82  
                           l6085 5BD0                             l6093 4892  
                           l6181 4D52                             l6173 4D18  
                           l6165 4CEA                             l6157 4CD2  
                           l6149 4CC2                             l6079 536E  
                           l5703 4728                             l5607 565E  
                           l5527 5B6A                             l5519 5B58  
                           l5615 5376                             l4671 4F7C  
                           l4823 3CAA                             l4831 3CE0  
                           l4815 3C72                             l4807 3C06  
                           l4567 516A                             l4559 5138  
                           l4583 51FE                             l4487 3396  
                           l4479 337C                             l3951 2B86  
                           l3943 2B54                             l3935 2B3C  
                           l3927 2B0C                             l3919 2ADA  
                           l4663 4AAA                             l4655 4A6E  
                           l4647 4A50                             l4639 4A2E  
                           l4751 3EFE                             l4743 3E52  
                           l4735 3D96                             l4719 5690  
                           l4911 099A                             l4903 092A  
                           l5391 291E                             l5383 2894  
                           l5367 2796                             l5359 2712  
                           l5631 5838                             l5623 57FA  
                           l5295 4236                             l5287 41C2  
                           l5279 4176                             l5535 54CE  
                           l5543 5454                             l5199 593C  
                           l5471 2268                             l5463 2172  
                           l5455 201A                             l5447 1ECE  
                           l5439 1D7C                             l5551 3F60  
                           l5711 12C4                             l6095 4964  
                           l6087 5C98                             l6191 4DA4  
                           l6183 4D62                             l6175 4D2A  
                           l6167 4CF6                             l6159 4CD6  
                           l5609 5670                             l5617 5382  
                           l4761 584C                             l6281 434E  
                           l4681 4FC2                             l4673 4F8A  
                           l4825 3CBC                             l4809 3C20  
                           l4817 3C82                             l4497 501E  
                           l4569 5170                             l4585 520E  
                           l4577 5192                             l4593 4ABC  
                           l3961 2BC2                             l3945 2B64  
                           l3953 2B8E                             l3937 2B3E  
                           l3929 2B14                             l4657 4A7A  
                           l4649 4A5A                             l4753 3F0E  
                           l4737 3DA4                             l4745 3E86  
                           l4729 3D0A                             l4921 0A72  
                           l4913 09F4                             l4841 0700  
                           l5385 28C4                             l5377 285E  
                           l5369 27BA                             l5625 580C  
                           l5297 4238                             l5289 41FE  
                           l5529 546E                             l5537 53F4  
                           l5473 22D2                             l5465 2180  
                           l5457 208A                             l5449 1F3A  
                           l5561 4068                             l5553 4026  
                           l5545 3F20                             l5641 59E8  
                           l5801 1522                             l5721 131E  
                           l5713 12CE                             l5705 129E  
                           l6097 4968                             l6089 5CA4  
                           l6185 4D76                             l6177 4D3C  
                           l6169 4D06                             l6193 4DAC  
                           l5619 53B2                             l4763 5850  
                           l4691 5984                             l4683 4FF0  
                           l4675 4F96                             l4667 4F58  
                           l4827 3CC8                             l4819 3C94  
                           l4499 5022                             l4587 5232  
                           l4579 51C0                             l4595 4AEA  
                           l3971 2BD6                             l3963 2BC6  
                           l3955 2B9E                             l3947 2B74  
                           l3939 2B44                             l4659 4A8A  
                           l4747 3EC2                             l4931 0ABE  
                           l4923 0A76                             l4915 0A28  
                           l4907 0960                             l4851 0750  
                           l4843 0708                             l4835 06D8  
                           l5395 298C                             l5379 2870  
                           l5627 5814                             l5299 423C  
                           l5539 53F4                             l5491 3774  
                           l5475 2342                             l5467 21EA  
                           l5459 2098                             l5483 242A  
                           l5571 40B8                             l5563 4070  
                           l5555 402E                             l5547 3F20  
                           l5635 5ACC                             l5643 5A0A  
                           l5811 1572                             l5803 152C  
                           l5731 1392                             l5723 133A  
                           l5715 12F4                             l5707 12AE  
                           l5651 5C4E                             l6099 496A  
                           l6187 4D7A                             l6179 4D4C  
                           l5661 45DA                             l4757 5A94  
                           l4765 5864                             l4685 5004  
                           l4677 4FAA                             l4669 4F68  
                           l4829 3CD0                             l4781 3AA0  
                           l4773 3A28                             l4589 5238  
                           l4597 4AFA                             l3981 2BEA  
                           l3973 2BDA                             l3965 2BCA  
                           l3957 2BB0                             l3949 2B84  
                           l4693 4BC0                             l4749 3ED6  
                           l4941 0B00                             l4925 0A88  
                           l4933 0AD8                             l4917 0A30  
                           l4909 0994                             l4861 078C  
                           l4853 0760                             l4845 072C  
                           l4837 06E2                             l5397 299E  
                           l5389 28F0                             l5581 5604  
                           l5629 581C                             l5493 383A  
                           l5477 2350                             l5469 225A  
                           l5573 40D4                             l5565 408C  
                           l5557 403C                             l5549 3F20  
                           l5637 5AD0                             l5645 5A16  
                           l6277 1C32                             l5901 1772  
                           l5821 1596                             l5813 157A  
                           l5805 1548                             l5741 13EC  
                           l5733 13A2                             l5725 134C  
                           l5717 1300                             l5709 12B8  
                           l5653 5C50                             l6189 4D8E  
                           l5671 4628                             l5663 45E8  
                           l5655 45AA                             l5591 5BB0  
                           l5583 5BA4                             l4767 5892  
                           l4679 4FBE                             l4791 3AF8  
                           l4783 3AA2                             l4775 3A48  
                           l4599 4B28                             l3983 2BEE  
                           l3975 2BDE                             l3967 2BCE  
                           l3959 2BBE                             l3991 2BFE  
                           l4695 4BE0                             l4951 0B66  
                           l4943 0B1C                             l4927 0A9C  
                           l4919 0A62                             l4871 07F2  
                           l4863 0790                             l4855 0774  
                           l4847 0736                             l4839 06F2  
                           l5399 29D2                             l5575 55C0  
                           l5495 3934                             l6279 2440  
                           l5479 23BA                             l5567 4094  
                           l5559 404C                             l5639 5AD4  
                           l5911 17C0                             l5903 177C  
                           l5823 15A6                             l5831 15CC  
                           l5815 157E                             l5807 1554  
                           l5751 1442                             l5743 13F4  
                           l5735 13B8                             l5727 136E  
                           l5719 1314                             l5647 5C48  
                           l5681 467A                             l5673 463A  
                           l5665 45FA                             l5657 45BA  
                           l5593 5BB2                             l5585 5BA8  
                           l4769 5896                             l4689 596A  
                           l4793 3AFE                             l4785 3ABC  
                           l4777 3A70                             l3993 2C02  
                           l3985 2BF2                             l3977 2BE2  
                           l3969 2BD2                             l4697 4C1E  
                           l4961 0BAE                             l4953 0B78  
                           l4945 0B52                             l4929 0AA4  
                           l4873 0804                             l4857 0780  
                           l4865 0796                             l4849 073E  
                           l5577 55C8                             l5497 39DC  
                           l5489 3742                             l5569 40B0  
                           l5913 17D0                             l5905 1784  
                           l5833 15DC                             l5841 1602  
                           l5825 15B8                             l5817 158E  
                           l5809 1568                             l5761 1464  
                           l5753 1446                             l5737 13CA  
                           l5745 140C                             l5729 1380  
                           l5649 5C4C                             l5499 5C66  
                           l5691 46C8                             l5683 4688  
                           l5675 4648                             l5667 4608  
                           l5659 45C8                             l5595 5BB6  
                           l5587 5BAC                             l3899 4E8E  
                           l4795 3B06                             l4787 3AD8  
                           l4779 3A90                             l3995 2C2C  
                           l3987 2BF6                             l3979 2BE6  
                           l4699 4C46                             l4971 0BF6  
                           l4963 0BBC                             l4955 0B8A  
                           l4947 0B5A                             l4939 0AEC  
                           l4891 08D8                             l4875 0820  
                           l4867 07BC                             l4883 086A  
                           l4859 0788                             l5579 55D6  
                           l5931 185A                             l5923 1820  
                           l5915 17D2                             l5907 178E  
                           l5851 164A                             l5843 160C  
                           l5835 15EE                             l5827 15BC  
                           l5819 1590                             l5771 1498  
                           l5763 1474                             l5755 1448  
                           l5747 141E                             l5739 13DC  
                           l5693 46DA                             l5685 469A  
                           l5677 465A                             l5669 461A  
                           l5597 5BBA                             l5589 5BAE  
                           l4797 3B0E                             l4789 3AEA  
                           l3997 2C48                             l3989 2BFA  
                           l4981 0D0A                             l4973 0C06  
                           l4965 0BD4                             l4957 0B98  
                           l4949 0B5E                             l4893 08F4  
                           l4885 0890                             l4877 0838  
                           l5941 18C6                             l5933 1880  
                           l5925 183A                             l5917 17FA  
                           l5909 17B4                             l5861 1692  
                           l5853 165E                             l5845 1618  
                           l5837 15F2                             l5829 15C2  
                           l5781 14C8                             l5773 14A2  
                           l5765 1486                             l5757 145C  
                           l5749 1430                             l5695 46E8  
                           l5687 46A8                             l5679 4668  
                           l5599 562C                             l4799 3B14  
                           l3999 2C58                             l4991 0DAA  
                           l4975 0C1A                             l4983 0D10  
                           l4967 0BE6                             l4959 0B9C  
                           l4879 0842                             l5943 18D8  
                           l5951 191C                             l5935 188C  
                           l5927 1844                             l5919 180C  
                           l5871 16C6                             l5863 16A4  
                           l5855 167A                             l5847 1622  
                           l5839 15F8                             l5791 14F6  
                           l5783 14DA                             l5775 14AA  
                           l5767 148A                             l5759 145E  
                           l5697 46FA                             l5689 46BA  
                           l4993 0DDC                             l4985 0D2E  
                           l4977 0C7E                             l4969 0BEE  
                           l4889 08C6                             l5953 1930  
                           l5945 18EA                             l5937 189C  
                           l5929 1850                             l5881 16F4  
                           l5873 16D8                             l5865 16A8  
                           l5857 167C                             l5849 163E  
                           l5793 14FE                             l5785 14DE  
                           l5777 14B2                             l5769 148E  
                           l5699 4708                             l4995 0DEC  
                           l4987 0D62                             l4979 0CD6  
                           l5971 1980                             l5963 1966  
                           l5955 193A                             l5947 18FC  
                           l5939 189E                             l5883 1700  
                           l5875 16DC                             l5867 16AC  
                           l5859 1682                             l5795 1506  
                           l5787 14E2                             l5779 14B8  
                           l4997 0DFC                             l4989 0D94  
                           l5981 19BC                             l5973 1990  
                           l5965 196A                             l5957 194A  
                           l5949 1904                             l5885 170A  
                           l5877 16E0                             l5869 16B6  
                           l5789 14EC                             l5797 150C  
                           l4999 0E30                             l5991 1A3A  
                           l5983 19C6                             l5967 197A  
                           l5975 1994                             l5959 1958  
                           l5895 174A                             l5887 1726  
                           l5879 16EA                             l5799 1516  
                           l5993 1A3E                             l5985 19EC  
                           l5977 19A6                             l5969 197C  
                           l5897 175C                             l5889 1732  
                           l5995 1A72                             l5987 19F8  
                           l5979 19B0                             l5899 1766  
                           l5997 1A82                             l5989 1A08  
                           l5999 1A92                             STR_1 0635  
                           STR_2 069A                             STR_3 0668  
                           STR_4 0601                             STR_5 0679  
                           STR_6 0601                             STR_7 0624  
                           STR_8 0601                             STR_9 0646  
                           u4000 2B64                             u4001 2B60  
                           u4010 2B74                             u4011 2B70  
                           u4100 2CBA                             u4020 2BB0  
                           u4101 2CB6                             u4021 2BAC  
                           u4110 2CCA                             u4030 2BBE  
                           u4111 2CC6                             u4031 2BBA  
                           u5000 510E                             u4200 2E28  
                           u4120 2CFC                             u4040 2C2C  
                           u5001 510A                             u4201 2E24  
                           u4121 2CF8                             u4041 2C28  
                           u5010 5128                             u4210 2E44  
                           u4130 2D0A                             u4050 2C44  
                           u5011 5124                             u4211 2E40  
                           u4131 2D06                             u4051 2C3E  
                           u5020 5146                             u5100 4B46  
                           u4300 2F1C                             u4220 2E54  
                           u4140 2D28                             u4060 2C46  
                           u5021 5142                             u5101 4B42  
                           u4301 2F18                             u4221 2E50  
                           u4141 2D24                             u5030 515C  
                           u5110 4B66                             u4310 2F3C  
                           u4230 2E66                             u4150 2D60  
                           u4070 2C6E                             u5031 5158  
                           u5111 4B62                             u4311 2F38  
                           u4231 2E62                             u4151 2D5C  
                           u4071 2C6A                             u5040 5180  
                           u5120 4BB6                             u4320 2F4E  
                           u4240 2E7C                             u4160 2DA6  
                           u4080 2C8C                             u5200 4A9A  
                           u6000 0EF8                             u4401 4490  
                           u5041 517C                             u5121 4BB2  
                           u4321 2F4A                             u4241 2E78  
                           u4161 2DA2                             u4081 2C88  
                           u5201 4A96                             u6001 0EF4  
                           u4410 44B4                             u5210 4F68  
                           u5050 51C0                             u5130 5A72  
                           u4330 2F6A                             u4250 2E92  
                           u4170 2DDC                             u4090 2CAC  
                           u6010 0F0C                             u4411 44B0  
                           u5211 4F64                             u5051 51BC  
                           u5131 5A6E                             u4331 2F66  
                           u4251 2E8E                             u4171 2DD8  
                           u4091 2CA8                             u6011 0F08  
                           u4420 44DE                             u4500 4850  
                           u4340 5926                             u5220 4F8A  
                           u5060 51FE                             u4260 2EA6  
                           u4180 2DEC                             u5140 49CC  
                           u6100 10BE                             u6020 0F1E  
                           u4421 44DA                             u4501 484C  
                           u4341 5922                             u5221 4F86  
                           u5061 51FA                             u4261 2EA2  
                           u4181 2DE8                             u5141 49C8  
                           u6101 10BA                             u6021 0F1A  
                           u4430 451E                             u4350 5B2A  
                           u5230 4FE0                             u4510 33C2  
                           u5070 5232                             u4270 2EC0  
                           u4190 2E18                             u5150 4A00  
                           u5310 4CAA                             u6110 10F8  
                           u6030 0F2C                             u4431 451A  
                           u4351 5B26                             u5231 4FDC  
                           u4511 33BE                             u5071 522E  
                           u4271 2EBC                             u4191 2E14  
                           u5311 4CA4                             u6111 10F4  
                           u6031 0F28                             u7000 469A  
                           u6200 4300                             u4440 4568  
                           u5240 4FF0                             u4600 3562  
                           u4520 33D4                             u5080 4AEA  
                           u4280 2EFA                             u5160 4A2E  
                           u5320 4CAC                             u5400 3DA4  
                           u4360 5A54                             u6120 1126  
                           u6040 0F48                             u7001 4696  
                           u6201 42FC                             u4441 4564  
                           u5241 4FEC                             u4601 355E  
                           u4521 33D0                             u5081 4AE6  
                           u4281 2EF6                             u5161 4A2A  
                           u5305 4C82                             u5401 3DA0  
                           u4361 5A4E                             u6121 1122  
                           u6041 0F44                             u7010 46A8  
                           u6210 431C                             u4450 4740  
                           u5250 5984                             u4610 358C  
                           u4530 33E4                             u5090 4B28  
                           u4290 2F0C                             u5170 4A42  
                           u5330 5738                             u4370 5A56  
                           u6130 11AA                             u6050 0F56  
                           u7011 46A4                             u6211 4318  
                           u4451 473C                             u5251 5980  
                           u4611 3588                             u4531 33E0  
                           u5091 4B24                             u4291 2F08  
                           u5171 4A3E                             u5155 49F6  
                           u6131 11A6                             u6051 0F52  
                           u7020 46BA                             u5500 5864  
                           u6220 43D2                             u4380 4434  
                           u4460 4772                             u4700 3688  
                           u4620 35B0                             u4540 3428  
                           u5180 4A6A                             u5260 4C00  
                           u5420 3E12                             u5340 574A  
                           u6140 11C4                             u6060 0FAE  
                           u6300 4E6A                             u7021 46B6  
                           u5501 5860                             u6221 43CC  
                           u4381 4430                             u4461 476E  
                           u4701 3684                             u4621 35AC  
                           u4541 3424                             u5181 4A66  
                           u5421 3E0E                             u5341 5746  
                           u6141 11C0                             u6061 0FAA  
                           u6301 4E66                             u7101 12A4  
                           u7030 46C8                             u5510 5892  
                           u6230 43D4                             u4390 4466  
                           u4470 47B0                             u3910 4EA0  
                           u4710 36D0                             u4630 35C6  
                           u4550 343A                             u5190 4A8A  
                           u5270 4C1E                             u5430 3E36  
                           u5350 56C0                             u6150 11DC  
                           u6070 1080                             u6310 594E  
                           u7110 1314                             u7031 46C4  
                           u5511 588E                             u4391 4462  
                           u4471 47AC                             u3911 4E9C  
                           u4711 36CC                             u4631 35C2  
                           u4551 3436                             u5191 4A86  
                           u5271 4C1A                             u5415 3DB8  
                           u5351 56BA                             u6151 11D8  
                           u6071 107C                             u6311 594A  
                           u7111 1310                             u6320 575C  
                           u7040 46DA                             u6240 43EA  
                           u4480 47DA                             u3920 4EB2  
                           u5600 3C3E                             u5520 3A58  
                           u4720 3700                             u4640 35E4  
                           u4560 344A                             u4800 3052  
                           u5280 4C46                             u5440 3E52  
                           u5416 3DC2                             u5360 56C2  
                           u6160 123A                             u6080 109C  
                           u6400 52AC                             u7200 13DC  
                           u7120 133A                             u6321 5758  
                           u7041 46D6                             u6241 43E6  
                           u4481 47D6                             u3921 4EAE  
                           u5601 3C3A                             u5521 3A52  
                           u4721 36FC                             u4641 35E0  
                           u4561 3446                             u4801 304E  
                           u5281 4C42                             u5265 4BF6  
                           u5441 3E4E                             u5417 3DD2  
                           u5337 572E                             u6161 1234  
                           u6081 1098                             u6401 52A8  
                           u7201 13D8                             u7121 1336  
                           u6330 5772                             u7050 46E8  
                           u6250 43FC                             u4490 4808  
                           u3930 4EDA                             u5610 3C58  
                           u5530 3A5A                             u4730 372E  
                           u4650 3604                             u4570 348A  
                           u4810 3062                             u5290 4C70  
                           u5450 3EA6                             u5370 56D8  
                           u6170 123C                             u6090 10AE  
                           u6410 40F0                             u7210 13EC  
                           u7130 134C                             u6331 576E  
                           u7051 46E4                             u6251 43F8  
                           u4491 4804                             u3931 4ED6  
                           u5611 3C54                             u4731 372A  
                           u4651 3600                             u4571 3486  
                           u4811 305E                             u5291 4C6C  
                           u5435 3E2C                             u5371 56D4  
                           u6091 10AA                             u6411 40EC  
                           u7211 13E8                             u7131 1348  
                           u6340 5788                             u7060 46FA  
                           u3940 4F10                             u5620 3C72  
                           u5540 3A70                             u4660 3616  
                           u4580 34CA                             u4900 3322  
                           u4820 31DC                             u4740 2F98  
                           u5460 3EC2                             u5380 3D52  
                           u6180 1252                             u5700 0774  
                           u6260 4DE2                             u6500 427E  
                           u6420 40FE                             u7300 1568  
                           u7220 141E                             u7140 136E  
                           u6341 5784                             u7061 46F6  
                           u3941 4F0C                             u5621 3C6E  
                           u5541 3A6C                             u4661 3612  
                           u4581 34C6                             u4901 331E  
                           u4741 2F94                             u5461 3EBE  
                           u6181 124E                             u5701 0770  
                           u6261 4DDE                             u6501 427A  
                           u6421 40FA                             u7301 1564  
                           u7221 141A                             u7141 136A  
                           u6350 579E                             u7070 4708  
                           u6190 42CA                             u5630 3C82  
                           u5550 3AA0                             u4670 3644  
                           u4590 3540                             u4910 3350  
                           u4830 3236                             u4750 2FAA  
                           u3950 2AD8                             u5470 3EFE  
                           u5390 3D82                             u5710 07BC  
                           u6270 4E14                             u6510 24AC  
                           u6430 415A                             u7310 158E  
                           u7230 1430                             u7150 1380  
                           u6351 579A                             u7071 4704  
                           u6191 42C6                             u5631 3C7E  
                           u5551 3A9C                             u4671 3640  
                           u4591 353C                             u4911 334C  
                           u4831 3232                             u4751 2FA6  
                           u3951 2AD4                             u5471 3EFA  
                           u5455 3E9C                             u5391 3D7E  
                           u5711 07B8                             u6271 4E10  
                           u6511 24A8                             u6431 4156  
                           u7311 158A                             u7231 142C  
                           u7151 137C                             u7080 471A  
                           u5480 5AC4                             u5640 3C94  
                           u5560 3ABC                             u4680 365A  
                           u4920 338A                             u4840 3256  
                           u4760 2FBA                             u3960 2AEA  
                           u5800 09F0                             u5720 07EC  
                           u6280 4E30                             u6600 26DA  
                           u6520 24F4                             u6440 41B0  
                           u6360 5574                             u7400 16C6  
                           u7320 15A6                             u7240 1442  
                           u7160 1392                             u7081 4716  
                           u5481 5ABE                             u5641 3C90  
                           u5561 3AB8                             u4681 3656  
                           u4921 3386                             u4841 3252  
                           u4825 31D2                             u4761 2FB6  
                           u3961 2AE6                             u5385 3D48  
                           u5801 09EC                             u5721 07E6  
                           u6281 4E2C                             u6521 24F0  
                           u6441 41AC                             u6361 5570  
                           u7401 16C2                             u7321 15A2  
                           u7241 143E                             u7161 138E  
                           u7090 4728                             u5490 5AC6  
                           u5650 3CA4                             u5570 3AEA  
                           u4930 5030                             u4690 366E  
                           u4850 3268                             u4770 2FFA  
                           u3970 2AFA                             u5810 0A62  
                           u5730 07EE                             u6290 4E42  
                           u6610 26F0                             u6530 2538  
                           u6450 41FA                             u6370 55AE  
                           u7410 16D8                             u7330 15B8  
                           u7250 145C                             u7170 13A2  
                           u7091 4724                             u5651 3CA0  
                           u5571 3AE6                             u4931 502C  
                           u4691 366A                             u4851 3264  
                           u4771 2FF6                             u3971 2AF6  
                           u5811 0A5E                             u6291 4E3E  
                           u6611 26EC                             u6531 2534  
                           u6451 41F6                             u6371 55AA  
                           u7411 16D4                             u7331 15B4  
                           u7251 1458                             u7171 139E  
                           u5660 3CBC                             u5580 3AF8  
                           u4940 504A                             u4860 3296  
                           u4780 300C                             u3980 2B3C  
                           u5900 0B8A                             u5820 0A88  
                           u5740 0804                             u6700 299E  
                           u6620 2722                             u6540 25B6  
                           u6460 4218                             u6380 5262  
                           u7500 1930                             u7420 1746  
                           u7340 15DC                             u7260 1474  
                           u7180 13B8                             u5661 3CB8  
                           u5581 3AF4                             u4941 5046  
                           u4861 3292                             u4781 3008  
                           u3981 2B38                             u5901 0B86  
                           u5821 0A84                             u5741 0800  
                           u6701 299A                             u6621 271E  
                           u6541 25B0                             u6461 4214  
                           u6381 525E                             u7501 192C  
                           u7421 1742                             u7341 15D8  
                           u7261 1470                             u7181 13B4  
                           u5590 3C20                             u4950 5070  
                           u4870 32AC                             u4790 301C  
                           u3990 2B52                             u5910 0B98  
                           u5830 0A9C                             u5750 0890  
                           u5670 0700                             u6710 2A3A  
                           u6630 2764                             u6550 25B8  
                           u6470 4228                             u6390 5284  
                           u7510 194A                             u7430 17D0  
                           u7350 15EE                             u7270 1486  
                           u7190 13CA                             u5591 3C1C  
                           u4951 506C                             u4871 32A8  
                           u4791 3018                             u3991 2B4E  
                           u5911 0B94                             u5831 0A98  
                           u5751 088C                             u5671 06FC  
                           u6711 2A36                             u6631 2760  
                           u6471 4224                             u6391 5280  
                           u7511 1946                             u7431 17CC  
                           u7351 15EA                             u7271 1482  
                           u7191 13C6                             u6800 563C  
                           u4960 508E                             u4880 32C0  
                           u5920 0BAE                             u5840 0ABE  
                           u5760 08C0                             u5680 0750  
                           u6640 27BA                             u6560 25CE  
                           u6480 4236                             u6720 5486  
                           u7600 1ADE                             u7520 1958  
                           u7440 180C                             u7360 165E  
                           u7280 14C8                             u6801 5638  
                           u4961 508A                             u4881 32BC  
                           u5921 0BAA                             u5841 0ABA  
                           u5761 08BA                             u5681 074C  
                           u6641 27B6                             u6561 25CA  
                           u6481 4232                             u6721 5482  
                           u7601 1ADA                             u7521 1954  
                           u7441 1808                             u7361 165A  
                           u7281 14C4                             u6810 5670  
                           u4970 50AA                             u4890 32DA  
                           u5930 0BBC                             u5850 0AE8  
                           u5770 08C2                             u5690 0760  
                           u6650 27DE                             u6570 25F2  
                           u6490 4270                             u6730 540C  
                           u7610 1B40                             u7530 197A  
                           u7450 189C                             u7370 167A  
                           u7290 14DA                             u6811 566C  
                           u4971 50A6                             u4891 32D6  
                           u5931 0BB8                             u5851 0AE4  
                           u5691 075C                             u6651 27DA  
                           u6571 25EE                             u6491 426C  
                           u6731 5408                             u7611 1B3C  
                           u7531 1976                             u7451 1898  
                           u7371 1676                             u7291 14D6  
                           u6900 45FA                             u6820 53AE  
                           u4980 50D0                             u5940 0BE6  
                           u5860 0B00                             u5780 08D8  
                           u6660 2870                             u6580 262E  
                           u6740 4068                             u7620 1B72  
                           u7540 1990                             u7460 18C6  
                           u7380 1692                             u7700 4D06  
                           u6901 45F6                             u4981 50CC  
                           u5941 0BE2                             u5861 0AFC  
                           u5781 08D4                             u6661 286C  
                           u6581 262A                             u6741 4064  
                           u7621 1B6E                             u7541 198C  
                           u7461 18C2                             u7381 168E  
                           u7701 4D02                             u6910 4608  
                           u6830 53E2                             u4990 50F4  
                           u5950 0D2E                             u5870 0B1C  
                           u5790 095C                             u6670 291E  
                           u6590 26D8                             u6750 408C  
                           u7630 1BBA                             u7550 19A6  
                           u7470 18D8                             u7390 16A4  
                           u7710 4D18                             u6911 4604  
                           u4991 50F0                             u5951 0D2A  
                           u5871 0B18                             u5791 0958  
                           u6671 291A                             u6591 26D2  
                           u6751 4088                             u7631 1BB6  
                           u7551 19A2                             u7471 18D4  
                           u7391 16A0                             u7711 4D14  
                           u6920 461A                             u6840 53F2  
                           u5960 0D94                             u5880 0B52  
                           u6680 2986                             u6760 40B0  
                           u7640 1BCA                             u7560 1A08  
                           u7480 18EA                             u7720 4D2A  
                           u6921 4616                             u6841 53EE  
                           u5961 0D90                             u5881 0B4E  
                           u6681 2980                             u6761 40AC  
                           u7641 1BC6                             u7561 1A04  
                           u7481 18E6                             u7721 4D26  
                           u6930 4628                             u5970 0DDC  
                           u5890 0B78                             u6690 2988  
                           u6770 40D4                             u7650 1C16  
                           u7570 1A3A                             u7490 18FC  
                           u6850 5C60                             u7730 4D3C  
                           u6931 4624                             u6827 53A4  
                           u5971 0DD8                             u5891 0B74  
                           u6771 40D0                             u7651 1C12  
                           u7571 1A36                             u7491 18F8  
                           u6851 5C5C                             u7731 4D38  
                           u7660 5C96                             u6940 463A  
                           u6860 45BA                             u5980 0DEC  
                           u6780 5620                             u7580 1A82  
                           u7740 4D4C                             u7661 5C92  
                           u6941 4636                             u6861 45B6  
                           u6837 53D8                             u5981 0DE8  
                           u6781 561C                             u7581 1A7E  
                           u7741 4D48                             u6950 4648  
                           u6870 45C8                             u6790 5BCA  
                           u5990 0E54                             u7590 1A92  
                           u7670 5500                             u7750 4D76  
                           u6951 4644                             u6871 45C4  
                           u6791 5BC6                             u5991 0E50  
                           u7591 1A8E                             u7671 54FC  
                           u7751 4D72                             u6960 465A  
                           u6880 45DA                             u7680 5524  
                           u7760 4DA4                             u6961 4656  
                           u6881 45D6                             u7681 5520  
                           u7817 4996                             u7761 4DA0  
                           u6970 4668                             u6890 45E8  
                           u7690 5544                             u6971 4664  
                           u6891 45E4                             u7827 5B54  
                           u7691 5540                             u6980 467A  
                           u6981 4676                             u7837 5B64  
                           u6990 4688                             u7847 530A  
                           u6991 4684                             u7857 5324  
                           u7867 533A                             u7877 5C76  
                           _TMR2 000FBC                             abs@a 0013  
              ?_Lcd_Write_String 0005                             _dbuf 019F  
                           _atoi 4292                             _main 4CBE  
                           _dtoa 3A28                             _prec 0196  
                           _nout 0192                             pad@i 0018  
                           pad@p 0015                             fsr1h 000FE2  
                           fsr2h 000FDA                             indf1 000FE7  
                           indf2 000FDF                             fsr1l 000FE1  
                           pad@w 001A                             fsr2l 000FD9  
                           btemp 005F                    ___fpclassifyf 4BC0  
                           prodh 000FF4                             prodl 000FF3  
                           start 0068               ??_Lcd_Write_String 0007  
                ___fldiv@new_exp 0046                  __end_of_Lcd_Cmd 5C82  
                   _tolower$2667 000D                     ___param_bank 000000  
                          ??_abs 0015                            ??_pad 0017  
                   ?_menuControl 0001                    ___fltol@sign1 0056  
                __end_of___aodiv 45AA                            ?_atoi 0008  
                __end_of___fladd 2F7E                            ?_main 0001  
                          ?_dtoa 001C                  __end_of___aomod 4892  
                __end_of_adcInit 59E8                  __end_of___fldiv 3742  
                __end_of___awdiv 50E2                  __end_of___flneg 5A94  
                          _EEADR 000FA9                            STR_10 068A  
                          STR_11 0657                            STR_12 068A  
                          STR_21 06C8                            STR_13 0613  
                          STR_22 06D0                            STR_14 06A9  
                          STR_15 0613                            STR_16 06B7  
                          STR_25 06D4                            STR_17 06C4  
                          STR_18 06CC                            STR_27 06D4  
                __end_of___awmod 5192                  __end_of___flmul 33A8  
                __end_of___flsub 58E4                  __end_of___fltol 4ABC  
                __end_of___lldiv 52E0                            _T0CON 000FD5  
                ___awdiv@divisor 0003                            i2l482 0064  
                ___awdiv@counter 0005                     vfpfcnvrt@fmt 00A9  
                          _TMR0H 000FD7                            _TMR0L 000FD6  
        __size_of_Lcd_Set_Cursor 0066              ___lmul@multiplicand 0005  
                          _fabsf 5B6E                            _flags 0198  
                          _fputc 4E8E                            _fputs 58E4  
                __end_of_isdigit 5ACC                      ?_PWM1_setDC 0058  
                   _adc_raw_data 0163                      ?_PWM2_setDC 0058  
                          atoi@n 0015                            pad@fp 0011  
                          atoi@s 0008                            _width 0194  
                          _putch 5CC0                            dtoa@d 001E  
                          dtoa@i 003E                            dtoa@n 0036  
                          dtoa@p 0030                            dtoa@s 0034  
                          dtoa@w 0032                  __end_of_isspace 589E  
                __end_of_isupper 5A5C                 __end_of_PWM_Init 5C20  
                          tablat 000FF5                            ttemp5 0060  
                          ttemp6 0063                            ttemp7 0067  
                          status 000FD8                            wtemp8 0060  
                __end_of_sprintf 584C                   ?___fpclassifyf 0001  
                __end_of_tolower 56F0                  __end_of_strncmp 4E8E  
                  ?_readAdcValue 0001                 __end_of_Lcd_Port 57A8  
                __initialization 57A8                      _system_init 4892  
                   __end_of_atoi 4422                     __end_of_main 4DB8  
                   __end_of_dtoa 3D0A                           ??_atoi 000A  
                         ??_main 005F                           ??_dtoa 0026  
             __size_of_Lcd_Clear 000E                    __activetblptr 000002  
__size_of_calculatedAverageValue 02E6                           ?_fabsf 001C  
                         _ADCON0 000FC2                           _ADCON1 000FC1  
                         ?_fputc 0001                           ?_fputs 000A  
                         _ADRESH 000FC4                           _ADRESL 000FC3  
                         _EEDATA 000FA8                           _CCPR1L 000FBE  
                         _CCPR2L 000F67                           _EECON2 000FA7  
               ___awdiv@dividend 0001                           ?_putch 0001  
                         i2l6201 0028                           i2l6211 004C  
                         i2l6203 0030                           i2l6213 005C  
                         i2l6205 0034                           i2l6215 0060  
                         i2l6207 0042                           i2l6209 0048  
                         i2l6195 000A                           i2l6197 0018  
                         i2l6199 0026                        ??_Lcd_Cmd 0002  
                         _TIMER0 0008                   ??_readAdcValue 0003  
        __size_of_Lcd_Write_Char 0036                 __end_of___xxtofl 4292  
              _scanAdcConversion 1C82               _timer_counter_flag 019E  
             ?_scanAdcConversion 0001             __size_of_eepromWrite 002E  
                   vfprintf@cfmt 00CD                 __end_of_lcd_init 5376  
                         ___flge 4ABC                           ___fleq 5192  
                         ___lmul 5556                        ??___aodiv 0011  
                      ??___fladd 003D                        ??___aomod 0011  
                         ___wmul 5C20                        ??_adcInit 0001  
                      ??___fldiv 003D                        ??___awdiv 0005  
                      ??___flneg 0005                        ??___awmod 0005  
                      ??___flmul 0024                        ??___flsub 004D  
                      ??___fltol 0052                        ??___lldiv 0009  
                         _efgtoa 06D8                           _floorf 3D0A  
            __size_of_PWM1_setDC 007A                           fabsf@u 0020  
                         fabsf@x 001C                 __end_of_mcu_init 5C98  
            __size_of_PWM2_setDC 007A              ??_scanAdcConversion 0058  
                         clear_0 57CE                           clear_1 57DA  
                         clear_2 57E6                  eepromWrite@data 0001  
               ___awdiv@quotient 0007                  ___awmod@divisor 0003  
                ___awmod@counter 0005                           pad@buf 0013  
                         dtoa@fp 001C                           _strcpy 56F0  
                         _strlen 5B02                           fputc@c 0001  
           readAdcValue@adcValue 0006                           fputs@c 000E  
                         fputs@i 000F                           fputs@s 000A  
                      ??_isdigit 0003                  ___fpclassifyf@e 0009  
                ___fpclassifyf@u 000B                  ___fpclassifyf@x 0001  
                   __mediumconst 0000                        ??_isspace 0003  
                         tblptrh 000FF7                        ??_isupper 0003  
                         tblptrl 000FF6                           tblptru 000FF8  
                         putch@c 0001                 __end_of_vfprintf 562A  
                      ??_sprintf 005F                        ??_tolower 0009  
                      ??_strncmp 0007       __end_of_buttonControlFlags 472E  
                Lcd_Set_Cursor@a 0005                  Lcd_Set_Cursor@b 0004  
                Lcd_Set_Cursor@y 0007                  Lcd_Set_Cursor@z 0006  
                     ___flge@ff1 0035                       ___flge@ff2 0039  
                ??___fpclassifyf 0005                     ___xxtofl@arg 0018  
                   ___xxtofl@exp 0017                     ___xxtofl@val 000E  
                     ___fleq@ff1 0001                       ___fleq@ff2 0005  
      __end_of_scanAdcConversion 2488                       __accesstop 0060  
        __end_of__initialization 57EC                       ___flneg@f1 0001  
         _calculatedAverageValue 3742                __end_of_Lcd_Clear 5CB8  
                  ___rparam_used 000001                       ___fltol@f1 004E  
                 __pcstackCOMRAM 0001                     __pidataBANK1 5CB8  
                  __end_of_fabsf 5BA2                    __end_of_fputc 4F58  
                  __end_of_fputs 5928                    __end_of_putch 5CC2  
                      ?_PWM_Init 0001                   _Lcd_Set_Cursor 562A  
              eepromRead@address 0001             __size_of_menuControl 006E  
                        ??_fabsf 0020                        ?_Lcd_Port 0001  
                        ??_fputc 0005                          ??_fputs 000E  
                        ??_putch 0001                       __pbssBANK0 00F3  
                     __pbssBANK1 0100                       __pbssBANK2 0200  
            PWM1_setDC@dutycycle 0058                          ?_TIMER0 0001  
                        ?___flge 0035                          ?___fleq 0001  
                        ?___lmul 0001                          ?___wmul 0001  
                        ?_efgtoa 0058                          _CCP1CON 000FBD  
                        _CCP2CON 000F66                          ?_floorf 004E  
                 ___lmul@product 0009        __size_of_Lcd_Write_String 007E  
         __end_of_Lcd_Set_Cursor 5690                       ??_PWM_Init 0001  
                        ?_strcpy 0001                          ?_strlen 0001  
           __end_of_readAdcValue 596A                       _eepromRead 5C46  
                      ?___xxtofl 000E               __size_of_vfpfcnvrt 0636  
                     ??_Lcd_Port 0001                     ??_PWM1_setDC 005A  
                   ??_PWM2_setDC 005A                        ?_lcd_init 0001  
        __size_of_menuInitialize 0028                    _menu_selected 019B  
             __size_of_stopMotor 003C       __size_of_scanAdcConversion 0806  
                 _Lcd_Write_Char 5B38                          _Lcd_Cmd 5C64  
                      ?_mcu_init 0001                  __size_of_TIMER0 0060  
              stateMachine@F6401 0200                       _controller 0150  
                        __Hparam 0000                          __Lparam 0000  
            PWM2_setDC@dutycycle 0058                     ?_system_init 0001  
                __size_of___flge 0104                  __size_of___fleq 00AA  
                        ___aodiv 4422                          ___fladd 2ABE  
                        ___aomod 472E                          _adcInit 59AA  
                        ___fldiv 33A8                          ___awdiv 501E  
                        ___flneg 5A5C                  __size_of___lmul 006A  
                        ___awmod 50E2                          ___flmul 2F7E  
                        ___flsub 589E                          ___fltol 49B6  
                        ___lldiv 523C                  __size_of___wmul 0026  
                      ?_vfprintf 00C7                     __psmallconst 0600  
                __size_of_efgtoa 0BC6                  __size_of_floorf 0216  
                        __pcinit 57A8               __end_of_PWM1_setDC 54E8  
                        __ramtop 0600                  ?_Lcd_Set_Cursor 0004  
             __end_of_PWM2_setDC 546E                          __ptext0 4CBE  
                        __ptext1 5C98                          __ptext2 4892  
                        __ptext3 5C46                          __ptext4 5BD0  
                        __ptext5 54E8                          __ptext6 129E  
                        __ptext7 59E8                          __ptext8 5ACC  
                        __ptext9 3F20                       _menu_flags 00FD  
                     _menu_value 018F                  __size_of_strcpy 005C  
                __size_of_strlen 0036                          _counter 018B  
        stateMachine@textCursor2 00E3                        _T2CONbits 000FBA  
                   __size_of_abs 0040                     __size_of_pad 00C6  
                        _isdigit 5A94                       ??___xxtofl 0012  
               ___awmod@dividend 0001                          _isspace 584C  
                        _isupper 5A24                          efgtoa@c 005E  
                        efgtoa@d 0087                          efgtoa@e 009F  
                        efgtoa@f 005A                          efgtoa@g 009B  
                        efgtoa@h 0091                          efgtoa@i 0099  
                        efgtoa@l 0095                          efgtoa@m 0083  
                        efgtoa@n 00A1                          efgtoa@p 008B  
                        efgtoa@t 007F                          efgtoa@u 00A3  
                        efgtoa@w 008E                    ?_speedControl 0058  
                        atoi@neg 000E                    ?_timer_0_init 0001  
                        _sprintf 57FA                          _tolower 5690  
                     ??_lcd_init 0004           __end_of_Lcd_Write_Char 5B6E  
                        _strncmp 4DB8             end_of_initialization 57EC  
           speedControl@position 0058                          floorf@e 0064  
                        floorf@m 0060                          floorf@u 0066  
                        floorf@x 004E                          fputc@fp 0003  
                     ??_mcu_init 0001                    __Lmediumconst 0000  
                        fputs@fp 000C                  ___lldiv@divisor 0005  
                ___lldiv@counter 000D                __end_of_vfpfcnvrt 2ABE  
                     efgtoa@mode 0090                       efgtoa@sign 0089  
                        postdec1 000FE5                          postdec2 000FDD  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE                        Lcd_Port@a 0001  
                     ??_vfprintf 005F                          strcpy@d 0009  
                        strlen@a 0003                          strcpy@s 0007  
                        strlen@s 0001                __end_of_stopMotor 5A24  
                      _PORTBbits 000F81                        _PORTDbits 000F83  
                    ?_eepromRead 0001                      ___fladd@grs 0044  
                  ___xxtofl@sign 0016                        _TRISAbits 000F92  
                 ??_speedControl 005C                        _TRISBbits 000F93  
                      _TRISCbits 000F94                        _TRISDbits 000F95  
                      _TRISEbits 000F96                   ??_timer_0_init 0001  
                    ___fldiv@grs 0048                      ___fldiv@rem 0041  
                     _startMotor 5ACC                  ?_Lcd_Write_Char 0001  
        ?_calculatedAverageValue 0001                Lcd_Write_String@a 0005  
              Lcd_Write_String@i 0009                      ___flmul@grs 0029  
                  ??_eepromWrite 0002         _button_bounce_controller 00FE  
                 __end_of_TIMER0 0068                    ?_stateMachine 0001  
             _buttonControlFlags 45AA                        _Lcd_Clear 5CAA  
                   _convert_data 0100            __size_of_readAdcValue 0042  
                 __end_of___flge 4BC0                   __end_of___fleq 523C  
                 __end_of___lmul 55C0                      vfpfcnvrt@ap 00AB  
                    vfpfcnvrt@ct 00C3                      vfpfcnvrt@fp 00A7  
                    vfpfcnvrt@ll 00B1                   __end_of___wmul 5C46  
               _Lcd_Write_String 5376                   __end_of_efgtoa 129E  
            ?_buttonControlFlags 0001                   __end_of_floorf 3F20  
                     floorf@F524 017F                   __end_of_strcpy 574C  
                 __end_of_strlen 5B38                __size_of_PWM_Init 0028  
            start_initialization 57A8                      __end_of_abs 59AA  
                    __end_of_pad 501E   __end_of_calculatedAverageValue 3A28  
                 _menuInitialize 5BD0                     _driver_limit 0173  
              __size_of_Lcd_Port 005C             ??_buttonControlFlags 0001  
                       ??_TIMER0 0001            __end_of___fpclassifyf 4CBE  
                   _readAdcValue 5928                   ??_stateMachine 00E1  
            __size_of_eepromRead 001E                      vfprintf@fmt 00C9  
                     ?_Lcd_Clear 0001                         ??___flge 003D  
                       ??___fleq 0009                         ??___lmul 0009  
            __end_of_eepromWrite 5BD0                         ??___wmul 0005  
                       ??_efgtoa 006A                      __pdataBANK1 01EF  
                       ??_floorf 0052             __size_of_system_init 0124  
                Lcd_Write_Char@a 0004                  Lcd_Write_Char@y 0003  
                  ??_menuControl 005F                         ??_strcpy 0005  
                       ??_strlen 0003                        ___fladd@a 0039  
                      ___fladd@b 0035                        ___fldiv@a 0039  
                      ___fldiv@b 0035                        ___flmul@a 0020  
                      ___flmul@b 001C                        ___flsub@a 0049  
                      ___flsub@b 0045           __end_of_menuInitialize 5BF8  
                  __pcstackBANK0 0060                 ___aodiv@dividend 0001  
              __size_of___xxtofl 01B4                      ?_startMotor 0001  
                       ?_Lcd_Cmd 0001                __size_of_lcd_init 0096  
                      _atoi$2572 0010                        _atoi$2573 0014  
                      _atoi$2574 0012                __size_of_mcu_init 0016  
                    _efgtoa$2510 0077                      _efgtoa$2505 0073  
                    _efgtoa$2514 0079                      _efgtoa$2506 0075  
                    _efgtoa$2515 007B                      _efgtoa$2516 007D  
                      _dtoa$2481 002E    stateMachine@secretMenuCounter 019A  
           __end_of_speedControl 40DE                 ??_Lcd_Set_Cursor 0005  
                      __pintcode 0008             __end_of_timer_0_init 5CAA  
                       ?___aodiv 0001                         ?___fladd 0035  
                       ?___aomod 0001                         ?_adcInit 0001  
                       ?___fldiv 0035                         ?___awdiv 0001  
               ___aodiv@quotient 0013                         ?___flneg 0001  
                       ?___awmod 0001                         ?___flmul 001C  
                       ?___flsub 0045                         ?___fltol 004E  
                       ?___lldiv 0001                __size_of_vfprintf 006A  
                      fabsf@F463 0187                      __smallconst 0600  
                       ?_isdigit 0001                         ?_isspace 0001  
                ?_menuInitialize 0001                         ?_isupper 0001  
            __end_of_menuControl 5556                   __size_of_fabsf 0034  
                       ?_sprintf 00CF                         ?_tolower 0007  
                 __size_of_fputc 00CA                   __size_of_fputs 0044  
                       ?_strncmp 0001                   __size_of_putch 0002  
             eepromWrite@address 0002                   ___wmul@product 0005  
                       _LATCbits 000F8B                         _LATDbits 000F8C  
                    _eepromWrite 5BA2                   PWM1_setDC@duty 005C  
                       Lcd_Cmd@a 0003                         _PIR2bits 000FA1  
                       i2u780_40 005C                         i2u780_41 0058  
                       i2u777_40 0018                         i2u777_41 0014  
                       i2u778_40 0026                         i2u778_41 0022  
                       i2u779_40 0042                         i2u779_41 003E  
                    ??_Lcd_Clear 0004                     _pauseIsClick 00FF  
            __size_of_startMotor 0036                        _vfpfcnvrt 2488  
                     _ADCON0bits 000FC2                       _ADCON2bits 000FC0  
                       _PWM_Init 5BF8                ___wmul@multiplier 0001  
                   ??_eepromRead 0001                 ??_Lcd_Write_Char 0002  
                 PWM2_setDC@duty 005C                        _stopMotor 59E8  
           __end_of_stateMachine 1C82                     _isspace$2603 0007  
                       _Lcd_Port 574C                       vfpfcnvrt@c 00C6  
                     vfpfcnvrt@f 00BF                ___lmul@multiplier 0001  
                      copy_data0 57BC         __end_of_Lcd_Write_String 53F4  
               __size_of_Lcd_Cmd 001E                       _EECON1bits 000FA6  
                       __Hrparam 0000                       vfprintf@ap 00CB  
                       __Lrparam 0000                       vfprintf@fp 00C7  
             __end_of_eepromRead 5C64                 __size_of___aodiv 0188  
               __size_of___fladd 04C0                 __size_of___aomod 0164  
               __size_of_adcInit 003E                 __size_of___fldiv 039A  
               __size_of___awdiv 00C4                 __size_of___flneg 0038  
               __size_of___awmod 00B0                 __size_of___flmul 042A  
               __size_of___flsub 0046                 __size_of___fltol 0106  
               __size_of___lldiv 00A4                       ?_vfpfcnvrt 00A7  
                    _menuControl 54E8                  ___aodiv@divisor 0009  
                ___aodiv@counter 0011                       _ANSELAbits 000F38  
                     _ANSELBbits 000F39                       _ANSELCbits 000F3A  
                     _ANSELDbits 000F3B                       _ANSELEbits 000F3C  
             ___fpclassifyf@F463 0183                       sprintf@fmt 00D1  
                       ___xxtofl 40DE                       ?_stopMotor 0001  
               __size_of_isdigit 0038                 __size_of_isspace 0052  
                       __ptext10 1C82                         __ptext11 5928  
                       __ptext20 55C0                         __ptext12 3742  
                       __ptext21 2488                         __ptext13 5556  
                       __ptext30 589E                         __ptext22 4DB8  
                       __ptext14 523C                         __ptext31 2ABE  
                       __ptext23 06D8                         __ptext15 53F4  
                       __ptext40 4F58                         __ptext32 5A5C  
                       __ptext24 5690                         __ptext16 546E  
                       __ptext41 5B02                         __ptext33 2F7E  
                       __ptext25 5A24                         __ptext17 5B6E  
                       __ptext50 5A94                         __ptext42 58E4  
                       __ptext34 4ABC                         __ptext26 56F0  
                       __ptext18 40DE                         __ptext51 5C20  
                       __ptext43 4E8E                         __ptext35 5192  
                       __ptext27 3D0A                         __ptext19 57FA  
                       __ptext60 5BF8                         __ptext52 5BA2  
                       __ptext44 5CC0                         __ptext36 33A8  
                       __ptext28 4BC0                         __ptext61 5CAA  
                       __ptext53 5376                         __ptext45 596A  
                       __ptext37 50E2                         __ptext29 49B6  
                       __ptext62 5C64                         __ptext54 5B38  
                       __ptext46 472E                         __ptext38 501E  
                       __ptext63 574C                         __ptext55 562A  
                       __ptext47 4422                         __ptext39 3A28  
                       __ptext56 45AA                         __ptext48 4292  
                       __ptext57 5C82                         __ptext49 584C  
                       __ptext58 52E0                         __ptext59 59AA  
               __size_of_isupper 0038                         _lcd_init 52E0  
               __size_of_sprintf 0052                 __size_of_tolower 0060  
                     strcpy@dest 0001                 __size_of_strncmp 00D6  
                       _mcu_init 5C82                    __size_of_atoi 0190  
                  __size_of_main 00FA                    __size_of_dtoa 02E2  
          __size_of_speedControl 01BE            __size_of_timer_0_init 0012  
                       efgtoa@fp 0058                         efgtoa@ne 0085  
                       efgtoa@pp 0081                         efgtoa@ou 006F  
                       int$flags 005F                         _vfprintf 55C0  
         readAdcValue@adcChannel 0005                 ___aomod@dividend 0001  
                 _vfpfcnvrt$2530 00B9                   _vfpfcnvrt$2531 00BB  
                 _vfpfcnvrt$2536 00BD                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2                         isdigit@c 0001  
                   _speedControl 3F20                     _timer_0_init 5C98  
                   ??_startMotor 005E               Lcd_Write_Char@temp 0002  
                       intlevel2 0000                        sprintf@ap 00D9  
    __size_of_buttonControlFlags 0184                         isspace@c 0001  
               ___lldiv@dividend 0001                        strcpy@src 0003  
                       isupper@c 0001                        strncmp@_l 0001  
                      strncmp@_r 0003                       _OSCCONbits 000FD3  
                  ??_system_init 0002                      efgtoa@nmode 008D  
                   _procces_data 0130                  ___aomod@divisor 0009  
                    ??_vfpfcnvrt 00AD                  ___aomod@counter 0011  
             Lcd_Set_Cursor@temp 0008                 ??_menuInitialize 0001  
             __end_of_startMotor 5B02            __size_of_stateMachine 09E4  
                       sprintf@f 00DB                         tolower@c 0007  
                       sprintf@s 00CF           __size_of___fpclassifyf 00FE  
               ___lldiv@quotient 0009                      ??_stopMotor 005E  
                       strncmp@l 0008                         strncmp@n 0005  
                       strncmp@r 000A                      _timer_value 00F3  
                  ___fladd@signs 0041                       _PWM1_setDC 546E  
                     _PWM2_setDC 53F4                     ___aodiv@sign 0012  
                    _textCursor2 0210                     ___fladd@aexp 0042  
                   ___fladd@bexp 0043                     ?_eepromWrite 0001  
                   ___aomod@sign 0012                     _stateMachine 129E  
