

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Aug 16 00:34:40 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    81                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    82                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    83                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    84                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    85  0000                     
    86                           ; Version 2.20
    87                           ; Generated 05/05/2020 GMT
    88                           ; 
    89                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    90                           ; All rights reserved.
    91                           ; 
    92                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    93                           ; 
    94                           ; Redistribution and use in source and binary forms, with or without modification, are
    95                           ; permitted provided that the following conditions are met:
    96                           ; 
    97                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    98                           ;        conditions and the following disclaimer.
    99                           ; 
   100                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   101                           ;        of conditions and the following disclaimer in the documentation and/or other
   102                           ;        materials provided with the distribution.
   103                           ; 
   104                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   105                           ;        software without specific prior written permission.
   106                           ; 
   107                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   108                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   109                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   110                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   111                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   112                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   113                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   114                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   115                           ; 
   116                           ; 
   117                           ; Code-generator required, PIC18F45K22 Definitions
   118                           ; 
   119                           ; SFR Addresses
   120  0000                     
   121                           	psect	eeprom_data
   122  F00000  1E 0A 04 00 00 00 00 00 	db	30,10,4,0,0,0,0,0	;# 
   123  0000                     
   124                           	psect	idataBANK1
   125  005C56                     __pidataBANK1:
   126                           	callstack 0
   127                           
   128                           ;initializer for _KD@fs_speed_controller$F1786
   129  005C56  0000               	dw	0
   130  005C58  3F80               	dw	16256
   131                           
   132                           ;initializer for _KP@fs_speed_controller$F1785
   133  005C5A  CCCD               	dw	52429
   134  005C5C  3E4C               	dw	15948
   135                           
   136                           ;initializer for _KD@fs_speed_controller$F1602
   137  005C5E  0000               	dw	0
   138  005C60  3F80               	dw	16256
   139                           
   140                           ;initializer for _KP@fs_speed_controller$F1601
   141  005C62  CCCD               	dw	52429
   142  005C64  3E4C               	dw	15948
   143                           
   144                           ;initializer for _KD@fs_speed_controller$F1184
   145  005C66  0000               	dw	0
   146  005C68  3F80               	dw	16256
   147                           
   148                           ;initializer for _KP@fs_speed_controller$F1183
   149  005C6A  CCCD               	dw	52429
   150  005C6C  3E4C               	dw	15948
   151                           
   152                           ;initializer for _KD
   153  005C6E  0000               	dw	0
   154  005C70  3F80               	dw	16256
   155                           
   156                           ;initializer for _KP
   157  005C72  CCCD               	dw	52429
   158  005C74  3E4C               	dw	15948
   159  0000                     _ANSELCbits	set	3898
   160  0000                     _ANSELBbits	set	3897
   161  0000                     _ANSELDbits	set	3899
   162  0000                     _ANSELEbits	set	3900
   163  0000                     _ANSELAbits	set	3896
   164  0000                     _T0CON	set	4053
   165  0000                     _TMR0L	set	4054
   166  0000                     _TMR0H	set	4055
   167  0000                     _INTCONbits	set	4082
   168  0000                     _CCPR2L	set	3943
   169  0000                     _CCPR1L	set	4030
   170  0000                     _PR2	set	4027
   171  0000                     _TMR2	set	4028
   172  0000                     _T2CONbits	set	4026
   173  0000                     _CCP2CON	set	3942
   174  0000                     _CCP1CON	set	4029
   175  0000                     _LATCbits	set	3979
   176  0000                     _LATDbits	set	3980
   177  0000                     _TRISCbits	set	3988
   178  0000                     _OSCTUNEbits	set	3995
   179  0000                     _OSCCONbits	set	4051
   180  0000                     _TRISBbits	set	3987
   181  0000                     _TRISDbits	set	3989
   182  0000                     _PORTDbits	set	3971
   183  0000                     _PORTBbits	set	3969
   184  0000                     _PIR2bits	set	4001
   185  0000                     _EECON2	set	4007
   186  0000                     _EEDATA	set	4008
   187  0000                     _EECON1bits	set	4006
   188  0000                     _EEADR	set	4009
   189  0000                     _ADCON2bits	set	4032
   190  0000                     _ADCON1	set	4033
   191  0000                     _ADCON0	set	4034
   192  0000                     _TRISEbits	set	3990
   193  0000                     _TRISAbits	set	3986
   194  0000                     _ADRESL	set	4035
   195  0000                     _ADRESH	set	4036
   196  0000                     _ADCON0bits	set	4034
   197                           
   198                           	psect	smallconst
   199  000600                     __psmallconst:
   200                           	callstack 0
   201  000600  00                 	db	0
   202  000601                     STR_4:
   203  000601  25                 	db	37
   204  000602  64                 	db	100	;'d'
   205  000603  20                 	db	32
   206  000604  20                 	db	32
   207  000605  20                 	db	32
   208  000606  20                 	db	32
   209  000607  20                 	db	32
   210  000608  20                 	db	32
   211  000609  20                 	db	32
   212  00060A  20                 	db	32
   213  00060B  20                 	db	32
   214  00060C  20                 	db	32
   215  00060D  20                 	db	32
   216  00060E  20                 	db	32
   217  00060F  20                 	db	32
   218  000610  20                 	db	32
   219  000611  20                 	db	32
   220  000612  00                 	db	0
   221  000613                     STR_13:
   222  000613  50                 	db	80	;'P'
   223  000614  49                 	db	73	;'I'
   224  000615  44                 	db	68	;'D'
   225  000616  20                 	db	32
   226  000617  50                 	db	80	;'P'
   227  000618  41                 	db	65	;'A'
   228  000619  52                 	db	82	;'R'
   229  00061A  41                 	db	65	;'A'
   230  00061B  4D                 	db	77	;'M'
   231  00061C  20                 	db	32
   232  00061D  20                 	db	32
   233  00061E  20                 	db	32
   234  00061F  20                 	db	32
   235  000620  20                 	db	32
   236  000621  20                 	db	32
   237  000622  20                 	db	32
   238  000623  00                 	db	0
   239  000624                     STR_7:
   240  000624  48                 	db	72	;'H'
   241  000625  49                 	db	73	;'I'
   242  000626  5A                 	db	90	;'Z'
   243  000627  20                 	db	32
   244  000628  4C                 	db	76	;'L'
   245  000629  69                 	db	105	;'i'
   246  00062A  4D                 	db	77	;'M'
   247  00062B  69                 	db	105	;'i'
   248  00062C  54                 	db	84	;'T'
   249  00062D  69                 	db	105	;'i'
   250  00062E  20                 	db	32
   251  00062F  20                 	db	32
   252  000630  20                 	db	32
   253  000631  20                 	db	32
   254  000632  20                 	db	32
   255  000633  20                 	db	32
   256  000634  00                 	db	0
   257  000635                     STR_1:
   258  000635  4B                 	db	75	;'K'
   259  000636  41                 	db	65	;'A'
   260  000637  4C                 	db	76	;'L'
   261  000638  41                 	db	65	;'A'
   262  000639  4E                 	db	78	;'N'
   263  00063A  20                 	db	32
   264  00063B  5A                 	db	90	;'Z'
   265  00063C  41                 	db	65	;'A'
   266  00063D  4D                 	db	77	;'M'
   267  00063E  41                 	db	65	;'A'
   268  00063F  4E                 	db	78	;'N'
   269  000640  20                 	db	32
   270  000641  20                 	db	32
   271  000642  20                 	db	32
   272  000643  20                 	db	32
   273  000644  20                 	db	32
   274  000645  00                 	db	0
   275  000646                     STR_9:
   276  000646  5A                 	db	90	;'Z'
   277  000647  41                 	db	65	;'A'
   278  000648  4D                 	db	77	;'M'
   279  000649  41                 	db	65	;'A'
   280  00064A  4E                 	db	78	;'N'
   281  00064B  20                 	db	32
   282  00064C  44                 	db	68	;'D'
   283  00064D  4F                 	db	79	;'O'
   284  00064E  4C                 	db	76	;'L'
   285  00064F  44                 	db	68	;'D'
   286  000650  55                 	db	85	;'U'
   287  000651  20                 	db	32
   288  000652  20                 	db	32
   289  000653  20                 	db	32
   290  000654  20                 	db	32
   291  000655  20                 	db	32
   292  000656  00                 	db	0
   293  000657                     STR_11:
   294  000657  48                 	db	72	;'H'
   295  000658  41                 	db	65	;'A'
   296  000659  52                 	db	82	;'R'
   297  00065A  45                 	db	69	;'E'
   298  00065B  4B                 	db	75	;'K'
   299  00065C  45                 	db	69	;'E'
   300  00065D  54                 	db	84	;'T'
   301  00065E  20                 	db	32
   302  00065F  44                 	db	68	;'D'
   303  000660  55                 	db	85	;'U'
   304  000661  52                 	db	82	;'R'
   305  000662  44                 	db	68	;'D'
   306  000663  55                 	db	85	;'U'
   307  000664  20                 	db	32
   308  000665  20                 	db	32
   309  000666  20                 	db	32
   310  000667  00                 	db	0
   311  000668                     STR_3:
   312  000668  48                 	db	72	;'H'
   313  000669  41                 	db	65	;'A'
   314  00066A  52                 	db	82	;'R'
   315  00066B  45                 	db	69	;'E'
   316  00066C  4B                 	db	75	;'K'
   317  00066D  54                 	db	84	;'T'
   318  00066E  20                 	db	32
   319  00066F  5A                 	db	90	;'Z'
   320  000670  41                 	db	65	;'A'
   321  000671  4D                 	db	77	;'M'
   322  000672  41                 	db	65	;'A'
   323  000673  4E                 	db	78	;'N'
   324  000674  49                 	db	73	;'I'
   325  000675  20                 	db	32
   326  000676  64                 	db	100	;'d'
   327  000677  6B                 	db	107	;'k'
   328  000678  00                 	db	0
   329  000679                     STR_5:
   330  000679  44                 	db	68	;'D'
   331  00067A  55                 	db	85	;'U'
   332  00067B  52                 	db	82	;'R'
   333  00067C  4D                 	db	77	;'M'
   334  00067D  41                 	db	65	;'A'
   335  00067E  20                 	db	32
   336  00067F  5A                 	db	90	;'Z'
   337  000680  41                 	db	65	;'A'
   338  000681  4D                 	db	77	;'M'
   339  000682  41                 	db	65	;'A'
   340  000683  4E                 	db	78	;'N'
   341  000684  49                 	db	73	;'I'
   342  000685  20                 	db	32
   343  000686  20                 	db	32
   344  000687  6D                 	db	109	;'m'
   345  000688  73                 	db	115	;'s'
   346  000689  00                 	db	0
   347  00068A                     STR_6:
   348  00068A  25                 	db	37
   349  00068B  64                 	db	100	;'d'
   350  00068C  20                 	db	32
   351  00068D  20                 	db	32
   352  00068E  20                 	db	32
   353  00068F  20                 	db	32
   354  000690  20                 	db	32
   355  000691  20                 	db	32
   356  000692  20                 	db	32
   357  000693  20                 	db	32
   358  000694  20                 	db	32
   359  000695  20                 	db	32
   360  000696  20                 	db	32
   361  000697  20                 	db	32
   362  000698  20                 	db	32
   363  000699  00                 	db	0
   364  00069A                     STR_10:
   365  00069A  20                 	db	32
   366  00069B  20                 	db	32
   367  00069C  20                 	db	32
   368  00069D  20                 	db	32
   369  00069E  20                 	db	32
   370  00069F  20                 	db	32
   371  0006A0  25                 	db	37
   372  0006A1  64                 	db	100	;'d'
   373  0006A2  3A                 	db	58	;':'
   374  0006A3  25                 	db	37
   375  0006A4  64                 	db	100	;'d'
   376  0006A5  20                 	db	32
   377  0006A6  20                 	db	32
   378  0006A7  20                 	db	32
   379  0006A8  20                 	db	32
   380  0006A9  00                 	db	0
   381  0006AA                     STR_2:
   382  0006AA  20                 	db	32
   383  0006AB  20                 	db	32
   384  0006AC  20                 	db	32
   385  0006AD  20                 	db	32
   386  0006AE  20                 	db	32
   387  0006AF  20                 	db	32
   388  0006B0  25                 	db	37
   389  0006B1  64                 	db	100	;'d'
   390  0006B2  3A                 	db	58	;':'
   391  0006B3  25                 	db	37
   392  0006B4  64                 	db	100	;'d'
   393  0006B5  20                 	db	32
   394  0006B6  20                 	db	32
   395  0006B7  20                 	db	32
   396  0006B8  00                 	db	0
   397  0006B9                     STR_14:
   398  0006B9  4B                 	db	75	;'K'
   399  0006BA  70                 	db	112	;'p'
   400  0006BB  3A                 	db	58	;':'
   401  0006BC  25                 	db	37
   402  0006BD  35                 	db	53	;'5'
   403  0006BE  2E                 	db	46
   404  0006BF  31                 	db	49	;'1'
   405  0006C0  66                 	db	102	;'f'
   406  0006C1  20                 	db	32
   407  0006C2  20                 	db	32
   408  0006C3  20                 	db	32
   409  0006C4  20                 	db	32
   410  0006C5  20                 	db	32
   411  0006C6  00                 	db	0
   412  0006C7                     STR_16:
   413  0006C7  4B                 	db	75	;'K'
   414  0006C8  64                 	db	100	;'d'
   415  0006C9  3A                 	db	58	;':'
   416  0006CA  25                 	db	37
   417  0006CB  35                 	db	53	;'5'
   418  0006CC  2E                 	db	46
   419  0006CD  31                 	db	49	;'1'
   420  0006CE  66                 	db	102	;'f'
   421  0006CF  20                 	db	32
   422  0006D0  20                 	db	32
   423  0006D1  20                 	db	32
   424  0006D2  20                 	db	32
   425  0006D3  00                 	db	0
   426  0006D4                     STR_17:
   427  0006D4  49                 	db	73	;'I'
   428  0006D5  4E                 	db	78	;'N'
   429  0006D6  46                 	db	70	;'F'
   430  0006D7  00                 	db	0
   431  0006D8                     STR_21:
   432  0006D8  4E                 	db	78	;'N'
   433  0006D9  41                 	db	65	;'A'
   434  0006DA  4E                 	db	78	;'N'
   435  0006DB  00                 	db	0
   436  0006DC                     STR_18:
   437  0006DC  69                 	db	105	;'i'
   438  0006DD  6E                 	db	110	;'n'
   439  0006DE  66                 	db	102	;'f'
   440  0006DF  00                 	db	0
   441  0006E0                     STR_22:
   442  0006E0  6E                 	db	110	;'n'
   443  0006E1  61                 	db	97	;'a'
   444  0006E2  6E                 	db	110	;'n'
   445  0006E3  00                 	db	0
   446  0006E4                     STR_25:
   447  0006E4  6C                 	db	108	;'l'
   448  0006E5  66                 	db	102	;'f'
   449  0006E6  00                 	db	0
   450  0006E7  00                 	db	0	; dummy byte at the end
   451  0000                     
   452                           ; #config settings
   453                           
   454                           	psect	cinit
   455  0057B6                     __pcinit:
   456                           	callstack 0
   457  0057B6                     start_initialization:
   458                           	callstack 0
   459  0057B6                     __initialization:
   460                           	callstack 0
   461                           
   462                           ; Initialize objects allocated to BANK1 (32 bytes)
   463                           ; load TBLPTR registers with __pidataBANK1
   464  0057B6  0E56               	movlw	low __pidataBANK1
   465  0057B8  6EF6               	movwf	tblptrl,c
   466  0057BA  0E5C               	movlw	high __pidataBANK1
   467  0057BC  6EF7               	movwf	tblptrh,c
   468  0057BE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   469  0057C0  6EF8               	movwf	tblptru,c
   470  0057C2  EE01  F0B3         	lfsr	0,__pdataBANK1
   471  0057C6  EE10 F020          	lfsr	1,32
   472  0057CA                     copy_data0:
   473  0057CA  0009               	tblrd		*+
   474  0057CC  CFF5 FFEE          	movff	tablat,postinc0
   475  0057D0  50E5               	movf	postdec1,w,c
   476  0057D2  50E1               	movf	fsr1l,w,c
   477  0057D4  E1FA               	bnz	copy_data0
   478                           
   479                           ; Clear objects allocated to BANK2 (80 bytes)
   480  0057D6  EE02  F000         	lfsr	0,__pbssBANK2
   481  0057DA  0E50               	movlw	80
   482  0057DC                     clear_0:
   483  0057DC  6AEE               	clrf	postinc0,c
   484  0057DE  06E8               	decf	wreg,f,c
   485  0057E0  E1FD               	bnz	clear_0
   486                           
   487                           ; Clear objects allocated to BANK1 (179 bytes)
   488  0057E2  EE01  F000         	lfsr	0,__pbssBANK1
   489  0057E6  0EB3               	movlw	179
   490  0057E8                     clear_1:
   491  0057E8  6AEE               	clrf	postinc0,c
   492  0057EA  06E8               	decf	wreg,f,c
   493  0057EC  E1FD               	bnz	clear_1
   494                           
   495                           ; Clear objects allocated to BANK0 (13 bytes)
   496  0057EE  EE00  F0F3         	lfsr	0,__pbssBANK0
   497  0057F2  0E0D               	movlw	13
   498  0057F4                     clear_2:
   499  0057F4  6AEE               	clrf	postinc0,c
   500  0057F6  06E8               	decf	wreg,f,c
   501  0057F8  E1FD               	bnz	clear_2
   502  0057FA                     end_of_initialization:
   503                           	callstack 0
   504  0057FA                     __end_of__initialization:
   505                           	callstack 0
   506  0057FA  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   507  0057FC  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   508  0057FE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   509  005800  6EF8               	movwf	tblptru,c
   510  005802  0100               	movlb	0
   511  005804  EFE1  F026         	goto	_main	;jump to C main() function
   512                           
   513                           	psect	bssBANK0
   514  0000F3                     __pbssBANK0:
   515                           	callstack 0
   516  0000F3                     _menu_value:
   517                           	callstack 0
   518  0000F3                     	ds	3
   519  0000F6                     _prec:
   520                           	callstack 0
   521  0000F6                     	ds	2
   522  0000F8                     _flags:
   523                           	callstack 0
   524  0000F8                     	ds	2
   525  0000FA                     stateMachine@secretMenuCounter:
   526                           	callstack 0
   527  0000FA                     	ds	1
   528  0000FB                     _menu_selected:
   529                           	callstack 0
   530  0000FB                     	ds	1
   531  0000FC                     _stopIsClick:
   532                           	callstack 0
   533  0000FC                     	ds	1
   534  0000FD                     _startIsClick:
   535                           	callstack 0
   536  0000FD                     	ds	1
   537  0000FE                     _pauseIsClick:
   538                           	callstack 0
   539  0000FE                     	ds	1
   540  0000FF                     _timer_counter_flag:
   541                           	callstack 0
   542  0000FF                     	ds	1
   543                           
   544                           	psect	bssBANK1
   545  000100                     __pbssBANK1:
   546                           	callstack 0
   547  000100                     _convert_data:
   548                           	callstack 0
   549  000100                     	ds	48
   550  000130                     _procces_data:
   551                           	callstack 0
   552  000130                     	ds	32
   553  000150                     _controller:
   554                           	callstack 0
   555  000150                     	ds	19
   556  000163                     	ds	16
   557  000173                     _adc_raw_data:
   558                           	callstack 0
   559  000173                     	ds	16
   560  000183                     _driver_limit:
   561                           	callstack 0
   562  000183                     	ds	12
   563  00018F                     _timer_value:
   564                           	callstack 0
   565  00018F                     	ds	8
   566  000197                     _menu_flags:
   567                           	callstack 0
   568  000197                     	ds	6
   569  00019D                     _button_bounce_controller:
   570                           	callstack 0
   571  00019D                     	ds	6
   572  0001A3                     floorf@F524:
   573                           	callstack 0
   574  0001A3                     	ds	4
   575  0001A7                     ___fpclassifyf@F463:
   576                           	callstack 0
   577  0001A7                     	ds	4
   578  0001AB                     fabsf@F463:
   579                           	callstack 0
   580  0001AB                     	ds	4
   581  0001AF                     _nout:
   582                           	callstack 0
   583  0001AF                     	ds	2
   584  0001B1                     _width:
   585                           	callstack 0
   586  0001B1                     	ds	2
   587                           
   588                           	psect	dataBANK1
   589  0001B3                     __pdataBANK1:
   590                           	callstack 0
   591  0001B3                     	ds	4
   592  0001B7                     	ds	4
   593  0001BB                     _KD@fs_speed_controller$F1602:
   594                           	callstack 0
   595  0001BB                     	ds	4
   596  0001BF                     _KP@fs_speed_controller$F1601:
   597                           	callstack 0
   598  0001BF                     	ds	4
   599  0001C3                     	ds	4
   600  0001C7                     	ds	4
   601  0001CB                     	ds	4
   602  0001CF                     	ds	4
   603                           
   604                           	psect	bssBANK2
   605  000200                     __pbssBANK2:
   606                           	callstack 0
   607  000200                     _dbuf:
   608                           	callstack 0
   609  000200                     	ds	80
   610                           
   611                           	psect	cstackBANK0
   612  000060                     __pcstackBANK0:
   613                           	callstack 0
   614  000060                     floorf@m:
   615                           	callstack 0
   616                           
   617                           ; 4 bytes @ 0x0
   618  000060                     	ds	4
   619  000064                     floorf@e:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x4
   623  000064                     	ds	2
   624  000066                     floorf@u:
   625                           	callstack 0
   626                           
   627                           ; 4 bytes @ 0x6
   628  000066                     	ds	4
   629  00006A                     ??_efgtoa:
   630                           
   631                           ; 1 bytes @ 0xA
   632  00006A                     	ds	5
   633  00006F                     efgtoa@ou:
   634                           	callstack 0
   635                           
   636                           ; 4 bytes @ 0xF
   637  00006F                     	ds	4
   638  000073                     _efgtoa$2509:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0x13
   642  000073                     	ds	2
   643  000075                     _efgtoa$2510:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x15
   647  000075                     	ds	2
   648  000077                     _efgtoa$2514:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0x17
   652  000077                     	ds	2
   653  000079                     _efgtoa$2518:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x19
   657  000079                     	ds	2
   658  00007B                     _efgtoa$2519:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x1B
   662  00007B                     	ds	2
   663  00007D                     _efgtoa$2520:
   664                           	callstack 0
   665                           
   666                           ; 2 bytes @ 0x1D
   667  00007D                     	ds	2
   668  00007F                     efgtoa@t:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x1F
   672  00007F                     	ds	2
   673  000081                     efgtoa@pp:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x21
   677  000081                     	ds	2
   678  000083                     efgtoa@m:
   679                           	callstack 0
   680                           
   681                           ; 2 bytes @ 0x23
   682  000083                     	ds	2
   683  000085                     efgtoa@ne:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x25
   687  000085                     	ds	2
   688  000087                     efgtoa@d:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x27
   692  000087                     	ds	2
   693  000089                     efgtoa@sign:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0x29
   697  000089                     	ds	2
   698  00008B                     efgtoa@p:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0x2B
   702  00008B                     	ds	2
   703  00008D                     efgtoa@nmode:
   704                           	callstack 0
   705                           
   706                           ; 1 bytes @ 0x2D
   707  00008D                     	ds	1
   708  00008E                     efgtoa@w:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x2E
   712  00008E                     	ds	2
   713  000090                     efgtoa@mode:
   714                           	callstack 0
   715                           
   716                           ; 1 bytes @ 0x30
   717  000090                     	ds	1
   718  000091                     efgtoa@h:
   719                           	callstack 0
   720                           
   721                           ; 4 bytes @ 0x31
   722  000091                     	ds	4
   723  000095                     efgtoa@l:
   724                           	callstack 0
   725                           
   726                           ; 4 bytes @ 0x35
   727  000095                     	ds	4
   728  000099                     efgtoa@i:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0x39
   732  000099                     	ds	2
   733  00009B                     efgtoa@g:
   734                           	callstack 0
   735                           
   736                           ; 4 bytes @ 0x3B
   737  00009B                     	ds	4
   738  00009F                     efgtoa@e:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0x3F
   742  00009F                     	ds	2
   743  0000A1                     efgtoa@n:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0x41
   747  0000A1                     	ds	2
   748  0000A3                     efgtoa@u:
   749                           	callstack 0
   750                           
   751                           ; 4 bytes @ 0x43
   752  0000A3                     	ds	4
   753  0000A7                     ?_vfpfcnvrt:
   754                           	callstack 0
   755  0000A7                     vfpfcnvrt@fp:
   756                           	callstack 0
   757                           
   758                           ; 2 bytes @ 0x47
   759  0000A7                     	ds	2
   760  0000A9                     vfpfcnvrt@fmt:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0x49
   764  0000A9                     	ds	2
   765  0000AB                     vfpfcnvrt@ap:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x4B
   769  0000AB                     	ds	2
   770  0000AD                     ??_vfpfcnvrt:
   771                           
   772                           ; 1 bytes @ 0x4D
   773  0000AD                     	ds	4
   774  0000B1                     vfpfcnvrt@ll:
   775                           	callstack 0
   776                           
   777                           ; 8 bytes @ 0x51
   778  0000B1                     	ds	8
   779  0000B9                     _vfpfcnvrt$2534:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x59
   783  0000B9                     	ds	2
   784  0000BB                     _vfpfcnvrt$2535:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x5B
   788  0000BB                     	ds	2
   789  0000BD                     _vfpfcnvrt$2540:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0x5D
   793  0000BD                     	ds	2
   794  0000BF                     vfpfcnvrt@f:
   795                           	callstack 0
   796                           
   797                           ; 4 bytes @ 0x5F
   798  0000BF                     	ds	4
   799  0000C3                     vfpfcnvrt@ct:
   800                           	callstack 0
   801                           
   802                           ; 3 bytes @ 0x63
   803  0000C3                     	ds	3
   804  0000C6                     vfpfcnvrt@c:
   805                           	callstack 0
   806                           
   807                           ; 1 bytes @ 0x66
   808  0000C6                     	ds	1
   809  0000C7                     ?_vfprintf:
   810                           	callstack 0
   811  0000C7                     vfprintf@fp:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0x67
   815  0000C7                     	ds	2
   816  0000C9                     vfprintf@fmt:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x69
   820  0000C9                     	ds	2
   821  0000CB                     vfprintf@ap:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0x6B
   825  0000CB                     	ds	2
   826  0000CD                     vfprintf@cfmt:
   827                           	callstack 0
   828                           
   829                           ; 2 bytes @ 0x6D
   830  0000CD                     	ds	2
   831  0000CF                     ?_sprintf:
   832                           	callstack 0
   833  0000CF                     sprintf@s:
   834                           	callstack 0
   835                           
   836                           ; 2 bytes @ 0x6F
   837  0000CF                     	ds	2
   838  0000D1                     sprintf@fmt:
   839                           	callstack 0
   840                           
   841                           ; 2 bytes @ 0x71
   842  0000D1                     	ds	8
   843  0000D9                     sprintf@ap:
   844                           	callstack 0
   845                           
   846                           ; 2 bytes @ 0x79
   847  0000D9                     	ds	2
   848  0000DB                     sprintf@f:
   849                           	callstack 0
   850                           
   851                           ; 6 bytes @ 0x7B
   852  0000DB                     	ds	6
   853  0000E1                     ??_stateMachine:
   854                           
   855                           ; 1 bytes @ 0x81
   856  0000E1                     	ds	2
   857  0000E3                     stateMachine@textCursor2:
   858                           	callstack 0
   859                           
   860                           ; 16 bytes @ 0x83
   861  0000E3                     	ds	16
   862                           
   863                           	psect	cstackCOMRAM
   864  000001                     __pcstackCOMRAM:
   865                           	callstack 0
   866  000001                     ?_strlen:
   867                           	callstack 0
   868  000001                     ?___fpclassifyf:
   869                           	callstack 0
   870  000001                     ?_isupper:
   871                           	callstack 0
   872  000001                     ?_isdigit:
   873                           	callstack 0
   874  000001                     ?_strncmp:
   875                           	callstack 0
   876  000001                     ?_isspace:
   877                           	callstack 0
   878  000001                     ?_readAdcValue:
   879                           	callstack 0
   880  000001                     ?___wmul:
   881                           	callstack 0
   882  000001                     ?___awdiv:
   883                           	callstack 0
   884  000001                     ?___awmod:
   885                           	callstack 0
   886  000001                     ?___lmul:
   887                           	callstack 0
   888  000001                     ?___lldiv:
   889                           	callstack 0
   890  000001                     ?___flneg:
   891                           	callstack 0
   892  000001                     ?___aodiv:
   893                           	callstack 0
   894  000001                     ?___aomod:
   895                           	callstack 0
   896  000001                     eepromRead@address:
   897                           	callstack 0
   898  000001                     eepromWrite@data:
   899                           	callstack 0
   900  000001                     Lcd_Port@a:
   901                           	callstack 0
   902  000001                     ___wmul@multiplier:
   903                           	callstack 0
   904  000001                     ___awdiv@dividend:
   905                           	callstack 0
   906  000001                     ___awmod@dividend:
   907                           	callstack 0
   908  000001                     isdigit@c:
   909                           	callstack 0
   910  000001                     isspace@c:
   911                           	callstack 0
   912  000001                     isupper@c:
   913                           	callstack 0
   914  000001                     fputc@c:
   915                           	callstack 0
   916  000001                     strcpy@dest:
   917                           	callstack 0
   918  000001                     strlen@s:
   919                           	callstack 0
   920  000001                     strncmp@_l:
   921                           	callstack 0
   922  000001                     ___lmul@multiplier:
   923                           	callstack 0
   924  000001                     ___lldiv@dividend:
   925                           	callstack 0
   926  000001                     ___fleq@ff1:
   927                           	callstack 0
   928  000001                     ___flneg@f1:
   929                           	callstack 0
   930  000001                     ___fpclassifyf@x:
   931                           	callstack 0
   932  000001                     ___aodiv@dividend:
   933                           	callstack 0
   934  000001                     ___aomod@dividend:
   935                           	callstack 0
   936                           
   937                           ; 8 bytes @ 0x0
   938  000001                     	ds	1
   939  000002                     ??_system_init:
   940  000002                     ??_Lcd_Cmd:
   941  000002                     eepromWrite@address:
   942                           	callstack 0
   943  000002                     Lcd_Write_Char@temp:
   944                           	callstack 0
   945                           
   946                           ; 1 bytes @ 0x1
   947  000002                     	ds	1
   948  000003                     ??_isupper:
   949  000003                     ??_isdigit:
   950  000003                     ??_isspace:
   951  000003                     ??_readAdcValue:
   952  000003                     Lcd_Cmd@a:
   953                           	callstack 0
   954  000003                     Lcd_Write_Char@y:
   955                           	callstack 0
   956  000003                     ___wmul@multiplicand:
   957                           	callstack 0
   958  000003                     ___awdiv@divisor:
   959                           	callstack 0
   960  000003                     ___awmod@divisor:
   961                           	callstack 0
   962  000003                     fputc@fp:
   963                           	callstack 0
   964  000003                     strcpy@src:
   965                           	callstack 0
   966  000003                     strlen@a:
   967                           	callstack 0
   968  000003                     strncmp@_r:
   969                           	callstack 0
   970                           
   971                           ; 2 bytes @ 0x2
   972  000003                     	ds	1
   973  000004                     ??_lcd_init:
   974  000004                     Lcd_Set_Cursor@b:
   975                           	callstack 0
   976  000004                     Lcd_Write_Char@a:
   977                           	callstack 0
   978                           
   979                           ; 1 bytes @ 0x3
   980  000004                     	ds	1
   981  000005                     ??_fputc:
   982  000005                     ??___fpclassifyf:
   983  000005                     ??_strcpy:
   984  000005                     readAdcValue@adcChannel:
   985                           	callstack 0
   986  000005                     Lcd_Set_Cursor@a:
   987                           	callstack 0
   988  000005                     ___awdiv@counter:
   989                           	callstack 0
   990  000005                     ___awmod@counter:
   991                           	callstack 0
   992  000005                     Lcd_Write_String@a:
   993                           	callstack 0
   994  000005                     ___wmul@product:
   995                           	callstack 0
   996  000005                     strncmp@n:
   997                           	callstack 0
   998  000005                     ___lmul@multiplicand:
   999                           	callstack 0
  1000  000005                     ___lldiv@divisor:
  1001                           	callstack 0
  1002  000005                     ___fleq@ff2:
  1003                           	callstack 0
  1004                           
  1005                           ; 4 bytes @ 0x4
  1006  000005                     	ds	1
  1007  000006                     Lcd_Set_Cursor@z:
  1008                           	callstack 0
  1009  000006                     ___awdiv@sign:
  1010                           	callstack 0
  1011  000006                     ___awmod@sign:
  1012                           	callstack 0
  1013  000006                     readAdcValue@adcValue:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x5
  1017  000006                     	ds	1
  1018  000007                     ??_strncmp:
  1019  000007                     ??_Lcd_Write_String:
  1020  000007                     ?_tolower:
  1021                           	callstack 0
  1022  000007                     Lcd_Set_Cursor@y:
  1023                           	callstack 0
  1024  000007                     _isspace$2607:
  1025                           	callstack 0
  1026  000007                     ___awdiv@quotient:
  1027                           	callstack 0
  1028  000007                     strcpy@s:
  1029                           	callstack 0
  1030  000007                     tolower@c:
  1031                           	callstack 0
  1032                           
  1033                           ; 2 bytes @ 0x6
  1034  000007                     	ds	1
  1035  000008                     ?_atoi:
  1036                           	callstack 0
  1037  000008                     Lcd_Set_Cursor@temp:
  1038                           	callstack 0
  1039  000008                     atoi@s:
  1040                           	callstack 0
  1041  000008                     strncmp@l:
  1042                           	callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x7
  1045  000008                     	ds	1
  1046  000009                     ??_tolower:
  1047  000009                     ??___fleq:
  1048  000009                     Lcd_Write_String@i:
  1049                           	callstack 0
  1050  000009                     ___fpclassifyf@e:
  1051                           	callstack 0
  1052  000009                     strcpy@d:
  1053                           	callstack 0
  1054  000009                     ___lmul@product:
  1055                           	callstack 0
  1056  000009                     ___lldiv@quotient:
  1057                           	callstack 0
  1058  000009                     ___aodiv@divisor:
  1059                           	callstack 0
  1060  000009                     ___aomod@divisor:
  1061                           	callstack 0
  1062                           
  1063                           ; 8 bytes @ 0x8
  1064  000009                     	ds	1
  1065  00000A                     ??_atoi:
  1066  00000A                     fputs@s:
  1067                           	callstack 0
  1068  00000A                     strncmp@r:
  1069                           	callstack 0
  1070                           
  1071                           ; 2 bytes @ 0x9
  1072  00000A                     	ds	1
  1073  00000B                     ___fpclassifyf@u:
  1074                           	callstack 0
  1075                           
  1076                           ; 4 bytes @ 0xA
  1077  00000B                     	ds	1
  1078  00000C                     fputs@fp:
  1079                           	callstack 0
  1080                           
  1081                           ; 2 bytes @ 0xB
  1082  00000C                     	ds	1
  1083  00000D                     ___lldiv@counter:
  1084                           	callstack 0
  1085  00000D                     _tolower$2671:
  1086                           	callstack 0
  1087                           
  1088                           ; 2 bytes @ 0xC
  1089  00000D                     	ds	1
  1090  00000E                     ?___xxtofl:
  1091                           	callstack 0
  1092  00000E                     fputs@c:
  1093                           	callstack 0
  1094  00000E                     atoi@neg:
  1095                           	callstack 0
  1096  00000E                     ___xxtofl@val:
  1097                           	callstack 0
  1098                           
  1099                           ; 4 bytes @ 0xD
  1100  00000E                     	ds	1
  1101  00000F                     fputs@i:
  1102                           	callstack 0
  1103                           
  1104                           ; 2 bytes @ 0xE
  1105  00000F                     	ds	1
  1106  000010                     _atoi$2576:
  1107                           	callstack 0
  1108                           
  1109                           ; 2 bytes @ 0xF
  1110  000010                     	ds	1
  1111  000011                     ?_pad:
  1112                           	callstack 0
  1113  000011                     ___aodiv@counter:
  1114                           	callstack 0
  1115  000011                     ___aomod@counter:
  1116                           	callstack 0
  1117  000011                     pad@fp:
  1118                           	callstack 0
  1119                           
  1120                           ; 2 bytes @ 0x10
  1121  000011                     	ds	1
  1122  000012                     ??___xxtofl:
  1123  000012                     ___aodiv@sign:
  1124                           	callstack 0
  1125  000012                     ___aomod@sign:
  1126                           	callstack 0
  1127  000012                     _atoi$2578:
  1128                           	callstack 0
  1129                           
  1130                           ; 2 bytes @ 0x11
  1131  000012                     	ds	1
  1132  000013                     ?_abs:
  1133                           	callstack 0
  1134  000013                     pad@buf:
  1135                           	callstack 0
  1136  000013                     abs@a:
  1137                           	callstack 0
  1138  000013                     ___aodiv@quotient:
  1139                           	callstack 0
  1140                           
  1141                           ; 8 bytes @ 0x12
  1142  000013                     	ds	1
  1143  000014                     _atoi$2577:
  1144                           	callstack 0
  1145                           
  1146                           ; 1 bytes @ 0x13
  1147  000014                     	ds	1
  1148  000015                     ??_abs:
  1149  000015                     pad@p:
  1150                           	callstack 0
  1151  000015                     atoi@n:
  1152                           	callstack 0
  1153                           
  1154                           ; 2 bytes @ 0x14
  1155  000015                     	ds	1
  1156  000016                     ___xxtofl@sign:
  1157                           	callstack 0
  1158                           
  1159                           ; 1 bytes @ 0x15
  1160  000016                     	ds	1
  1161  000017                     ??_pad:
  1162  000017                     ___xxtofl@exp:
  1163                           	callstack 0
  1164                           
  1165                           ; 1 bytes @ 0x16
  1166  000017                     	ds	1
  1167  000018                     pad@i:
  1168                           	callstack 0
  1169  000018                     ___xxtofl@arg:
  1170                           	callstack 0
  1171                           
  1172                           ; 4 bytes @ 0x17
  1173  000018                     	ds	2
  1174  00001A                     pad@w:
  1175                           	callstack 0
  1176                           
  1177                           ; 2 bytes @ 0x19
  1178  00001A                     	ds	2
  1179  00001C                     ??_calculatedAverageValue:
  1180  00001C                     ?_dtoa:
  1181                           	callstack 0
  1182  00001C                     ?_fabsf:
  1183                           	callstack 0
  1184  00001C                     ?___flmul:
  1185                           	callstack 0
  1186  00001C                     dtoa@fp:
  1187                           	callstack 0
  1188  00001C                     ___flmul@b:
  1189                           	callstack 0
  1190  00001C                     fabsf@x:
  1191                           	callstack 0
  1192                           
  1193                           ; 4 bytes @ 0x1B
  1194  00001C                     	ds	2
  1195  00001E                     dtoa@d:
  1196                           	callstack 0
  1197                           
  1198                           ; 8 bytes @ 0x1D
  1199  00001E                     	ds	2
  1200  000020                     ___flmul@a:
  1201                           	callstack 0
  1202  000020                     fabsf@u:
  1203                           	callstack 0
  1204                           
  1205                           ; 4 bytes @ 0x1F
  1206  000020                     	ds	4
  1207  000024                     ??___flmul:
  1208                           
  1209                           ; 1 bytes @ 0x23
  1210  000024                     	ds	2
  1211  000026                     ??_dtoa:
  1212                           
  1213                           ; 1 bytes @ 0x25
  1214  000026                     	ds	2
  1215  000028                     ___flmul@sign:
  1216                           	callstack 0
  1217                           
  1218                           ; 1 bytes @ 0x27
  1219  000028                     	ds	1
  1220  000029                     ___flmul@grs:
  1221                           	callstack 0
  1222                           
  1223                           ; 4 bytes @ 0x28
  1224  000029                     	ds	4
  1225  00002D                     ___flmul@aexp:
  1226                           	callstack 0
  1227                           
  1228                           ; 1 bytes @ 0x2C
  1229  00002D                     	ds	1
  1230  00002E                     ___flmul@bexp:
  1231                           	callstack 0
  1232  00002E                     _dtoa$2485:
  1233                           	callstack 0
  1234                           
  1235                           ; 2 bytes @ 0x2D
  1236  00002E                     	ds	1
  1237  00002F                     ___flmul@prod:
  1238                           	callstack 0
  1239                           
  1240                           ; 4 bytes @ 0x2E
  1241  00002F                     	ds	1
  1242  000030                     dtoa@p:
  1243                           	callstack 0
  1244                           
  1245                           ; 2 bytes @ 0x2F
  1246  000030                     	ds	2
  1247  000032                     dtoa@w:
  1248                           	callstack 0
  1249                           
  1250                           ; 2 bytes @ 0x31
  1251  000032                     	ds	1
  1252  000033                     ___flmul@temp:
  1253                           	callstack 0
  1254                           
  1255                           ; 2 bytes @ 0x32
  1256  000033                     	ds	1
  1257  000034                     dtoa@s:
  1258                           	callstack 0
  1259                           
  1260                           ; 2 bytes @ 0x33
  1261  000034                     	ds	1
  1262  000035                     ?___fladd:
  1263                           	callstack 0
  1264  000035                     ?___fldiv:
  1265                           	callstack 0
  1266  000035                     ___flge@ff1:
  1267                           	callstack 0
  1268  000035                     ___fladd@b:
  1269                           	callstack 0
  1270  000035                     ___fldiv@b:
  1271                           	callstack 0
  1272                           
  1273                           ; 4 bytes @ 0x34
  1274  000035                     	ds	1
  1275  000036                     dtoa@n:
  1276                           	callstack 0
  1277                           
  1278                           ; 8 bytes @ 0x35
  1279  000036                     	ds	3
  1280  000039                     ___flge@ff2:
  1281                           	callstack 0
  1282  000039                     ___fladd@a:
  1283                           	callstack 0
  1284  000039                     ___fldiv@a:
  1285                           	callstack 0
  1286                           
  1287                           ; 4 bytes @ 0x38
  1288  000039                     	ds	4
  1289  00003D                     ??___fladd:
  1290  00003D                     ??___fldiv:
  1291  00003D                     ??___flge:
  1292                           
  1293                           ; 1 bytes @ 0x3C
  1294  00003D                     	ds	1
  1295  00003E                     dtoa@i:
  1296                           	callstack 0
  1297                           
  1298                           ; 2 bytes @ 0x3D
  1299  00003E                     	ds	3
  1300  000041                     ___fladd@signs:
  1301                           	callstack 0
  1302  000041                     ___fldiv@rem:
  1303                           	callstack 0
  1304                           
  1305                           ; 4 bytes @ 0x40
  1306  000041                     	ds	1
  1307  000042                     ___fladd@aexp:
  1308                           	callstack 0
  1309                           
  1310                           ; 1 bytes @ 0x41
  1311  000042                     	ds	1
  1312  000043                     ___fladd@bexp:
  1313                           	callstack 0
  1314                           
  1315                           ; 1 bytes @ 0x42
  1316  000043                     	ds	1
  1317  000044                     ___fladd@grs:
  1318                           	callstack 0
  1319                           
  1320                           ; 1 bytes @ 0x43
  1321  000044                     	ds	1
  1322  000045                     ?___flsub:
  1323                           	callstack 0
  1324  000045                     ___fldiv@sign:
  1325                           	callstack 0
  1326  000045                     ___flsub@b:
  1327                           	callstack 0
  1328                           
  1329                           ; 4 bytes @ 0x44
  1330  000045                     	ds	1
  1331  000046                     ___fldiv@new_exp:
  1332                           	callstack 0
  1333                           
  1334                           ; 2 bytes @ 0x45
  1335  000046                     	ds	2
  1336  000048                     ___fldiv@grs:
  1337                           	callstack 0
  1338                           
  1339                           ; 4 bytes @ 0x47
  1340  000048                     	ds	1
  1341  000049                     ___flsub@a:
  1342                           	callstack 0
  1343                           
  1344                           ; 4 bytes @ 0x48
  1345  000049                     	ds	3
  1346  00004C                     ___fldiv@bexp:
  1347                           	callstack 0
  1348                           
  1349                           ; 1 bytes @ 0x4B
  1350  00004C                     	ds	1
  1351  00004D                     ___fldiv@aexp:
  1352                           	callstack 0
  1353                           
  1354                           ; 1 bytes @ 0x4C
  1355  00004D                     	ds	1
  1356  00004E                     ?_floorf:
  1357                           	callstack 0
  1358  00004E                     ?___fltol:
  1359                           	callstack 0
  1360  00004E                     ___fltol@f1:
  1361                           	callstack 0
  1362  00004E                     floorf@x:
  1363                           	callstack 0
  1364                           
  1365                           ; 4 bytes @ 0x4D
  1366  00004E                     	ds	4
  1367  000052                     ??_floorf:
  1368  000052                     ??___fltol:
  1369                           
  1370                           ; 1 bytes @ 0x51
  1371  000052                     	ds	4
  1372  000056                     ___fltol@sign1:
  1373                           	callstack 0
  1374                           
  1375                           ; 1 bytes @ 0x55
  1376  000056                     	ds	1
  1377  000057                     ___fltol@exp1:
  1378                           	callstack 0
  1379                           
  1380                           ; 1 bytes @ 0x56
  1381  000057                     	ds	1
  1382  000058                     ??_scanAdcConversion:
  1383  000058                     ?_efgtoa:
  1384                           	callstack 0
  1385  000058                     PWM1_setDC@dutycycle:
  1386                           	callstack 0
  1387  000058                     PWM2_setDC@dutycycle:
  1388                           	callstack 0
  1389  000058                     efgtoa@fp:
  1390                           	callstack 0
  1391  000058                     speedControl@position:
  1392                           	callstack 0
  1393                           
  1394                           ; 4 bytes @ 0x57
  1395  000058                     	ds	2
  1396  00005A                     ??_PWM1_setDC:
  1397  00005A                     ??_PWM2_setDC:
  1398  00005A                     efgtoa@f:
  1399                           	callstack 0
  1400                           
  1401                           ; 4 bytes @ 0x59
  1402  00005A                     	ds	2
  1403  00005C                     ??_speedControl:
  1404  00005C                     PWM1_setDC@duty:
  1405                           	callstack 0
  1406  00005C                     PWM2_setDC@duty:
  1407                           	callstack 0
  1408                           
  1409                           ; 2 bytes @ 0x5B
  1410  00005C                     	ds	2
  1411  00005E                     efgtoa@c:
  1412                           	callstack 0
  1413                           
  1414                           ; 1 bytes @ 0x5D
  1415  00005E                     	ds	1
  1416  00005F                     
  1417                           ; 1 bytes @ 0x5E
  1418 ;;
  1419 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1420 ;;
  1421 ;; *************** function _main *****************
  1422 ;; Defined at:
  1423 ;;		line 40 in file "fs_main.c"
  1424 ;; Parameters:    Size  Location     Type
  1425 ;;		None
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;		None
  1428 ;; Return value:  Size  Location     Type
  1429 ;;                  1    wreg      void 
  1430 ;; Registers used:
  1431 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1437 ;;      Params:         0       0       0       0       0       0       0
  1438 ;;      Locals:         0       0       0       0       0       0       0
  1439 ;;      Temps:          0       0       0       0       0       0       0
  1440 ;;      Totals:         0       0       0       0       0       0       0
  1441 ;;Total ram usage:        0 bytes
  1442 ;; Hardware stack levels required when called:   11
  1443 ;; This function calls:
  1444 ;;		_Lcd_Clear
  1445 ;;		_PWM1_setDC
  1446 ;;		_PWM2_setDC
  1447 ;;		_PWM_Init
  1448 ;;		_adcInit
  1449 ;;		_lcd_init
  1450 ;;		_mcu_init
  1451 ;;		_menuControl
  1452 ;;		_menuInitialize
  1453 ;;		_system_init
  1454 ;;		_timer_0_init
  1455 ;; This function is called by:
  1456 ;;		Startup code after reset
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text0
  1461  004DC2                     __ptext0:
  1462                           	callstack 0
  1463  004DC2                     _main:
  1464                           	callstack 20
  1465  004DC2                     
  1466                           ;fs_main.c: 42:     mcu_init();
  1467  004DC2  EC59  F02E         	call	_mcu_init	;wreg free
  1468  004DC6                     
  1469                           ;fs_main.c: 43:     menuInitialize();
  1470  004DC6  ECF0  F02D         	call	_menuInitialize	;wreg free
  1471  004DCA                     
  1472                           ;fs_main.c: 45:     adcInit();
  1473  004DCA  ECDC  F02C         	call	_adcInit	;wreg free
  1474  004DCE                     
  1475                           ;fs_main.c: 47:     timer_0_init();
  1476  004DCE  EC64  F02E         	call	_timer_0_init	;wreg free
  1477  004DD2                     
  1478                           ;fs_main.c: 48:     lcd_init();
  1479  004DD2  EC73  F029         	call	_lcd_init	;wreg free
  1480  004DD6                     
  1481                           ;fs_main.c: 49:     system_init();
  1482  004DD6  EC62  F024         	call	_system_init	;wreg free
  1483  004DDA                     
  1484                           ;fs_main.c: 50:     Lcd_Clear();
  1485  004DDA  EC6D  F02E         	call	_Lcd_Clear	;wreg free
  1486  004DDE                     
  1487                           ;fs_main.c: 52:     PWM_Init();
  1488  004DDE  EC04  F02E         	call	_PWM_Init	;wreg free
  1489  004DE2                     
  1490                           ;fs_main.c: 53:     PWM1_setDC(0);
  1491  004DE2  0E00               	movlw	0
  1492  004DE4  6E59               	movwf	(PWM1_setDC@dutycycle+1)^0,c
  1493  004DE6  0E00               	movlw	0
  1494  004DE8  6E58               	movwf	PWM1_setDC@dutycycle^0,c
  1495  004DEA  EC3A  F02A         	call	_PWM1_setDC	;wreg free
  1496  004DEE                     
  1497                           ;fs_main.c: 54:     PWM2_setDC(0);
  1498  004DEE  0E00               	movlw	0
  1499  004DF0  6E59               	movwf	(PWM2_setDC@dutycycle+1)^0,c
  1500  004DF2  0E00               	movlw	0
  1501  004DF4  6E58               	movwf	PWM2_setDC@dutycycle^0,c
  1502  004DF6  ECFD  F029         	call	_PWM2_setDC	;wreg free
  1503  004DFA                     l6186:
  1504                           
  1505                           ;fs_main.c: 57: {;fs_main.c: 58:     if (timer_counter_flag.one_second_flag == 1)
  1506  004DFA  0100               	movlb	0	; () banked
  1507  004DFC  A1FF               	btfss	_timer_counter_flag& (0+255),0,b
  1508  004DFE  EF03  F027         	goto	u7721
  1509  004E02  EF05  F027         	goto	u7720
  1510  004E06                     u7721:
  1511  004E06  EF44  F027         	goto	l6212
  1512  004E0A                     u7720:
  1513  004E0A                     
  1514                           ; BSR set to: 0
  1515                           ;fs_main.c: 59:     {;fs_main.c: 60:         timer_counter_flag.one_second_flag = 0;
  1516  004E0A  91FF               	bcf	_timer_counter_flag& (0+255),0,b
  1517  004E0C                     
  1518                           ; BSR set to: 0
  1519                           ;fs_main.c: 62:         if ( (startIsClick == 1) && (pauseIsClick == 0) && (stopIsClick 
      +                          == 0) && (menu_selected == MAIN_MENU) )
  1520  004E0C  05FD               	decf	_startIsClick& (0+255),w,b
  1521  004E0E  A4D8               	btfss	status,2,c
  1522  004E10  EF0C  F027         	goto	u7731
  1523  004E14  EF0E  F027         	goto	u7730
  1524  004E18                     u7731:
  1525  004E18  EF44  F027         	goto	l6212
  1526  004E1C                     u7730:
  1527  004E1C                     
  1528                           ; BSR set to: 0
  1529  004E1C  51FE               	movf	_pauseIsClick& (0+255),w,b
  1530  004E1E  A4D8               	btfss	status,2,c
  1531  004E20  EF14  F027         	goto	u7741
  1532  004E24  EF16  F027         	goto	u7740
  1533  004E28                     u7741:
  1534  004E28  EF44  F027         	goto	l6212
  1535  004E2C                     u7740:
  1536  004E2C                     
  1537                           ; BSR set to: 0
  1538  004E2C  51FC               	movf	_stopIsClick& (0+255),w,b
  1539  004E2E  A4D8               	btfss	status,2,c
  1540  004E30  EF1C  F027         	goto	u7751
  1541  004E34  EF1E  F027         	goto	u7750
  1542  004E38                     u7751:
  1543  004E38  EF44  F027         	goto	l6212
  1544  004E3C                     u7750:
  1545  004E3C                     
  1546                           ; BSR set to: 0
  1547  004E3C  51FB               	movf	_menu_selected& (0+255),w,b
  1548  004E3E  A4D8               	btfss	status,2,c
  1549  004E40  EF24  F027         	goto	u7761
  1550  004E44  EF26  F027         	goto	u7760
  1551  004E48                     u7761:
  1552  004E48  EF44  F027         	goto	l6212
  1553  004E4C                     u7760:
  1554  004E4C                     
  1555                           ; BSR set to: 0
  1556                           ;fs_main.c: 63:         {;fs_main.c: 64:             timer_value.second++;
  1557  004E4C  0101               	movlb	1	; () banked
  1558  004E4E  2B8F               	incf	_timer_value& (0+255),f,b
  1559  004E50                     
  1560                           ; BSR set to: 1
  1561                           ;fs_main.c: 65:             timer_value.remainingSecond = (uint8_t)60 - timer_value.seco
      +                          nd;
  1562  004E50  518F               	movf	_timer_value& (0+255),w,b
  1563  004E52  083C               	sublw	60
  1564  004E54  6F91               	movwf	(_timer_value+2)& (0+255),b
  1565  004E56                     
  1566                           ; BSR set to: 1
  1567                           ;fs_main.c: 67:             if (timer_value.remainingSecond == 59 )
  1568  004E56  0E3B               	movlw	59
  1569  004E58  1991               	xorwf	(_timer_value+2)& (0+255),w,b
  1570  004E5A  A4D8               	btfss	status,2,c
  1571  004E5C  EF32  F027         	goto	u7771
  1572  004E60  EF34  F027         	goto	u7770
  1573  004E64                     u7771:
  1574  004E64  EF3A  F027         	goto	l6208
  1575  004E68                     u7770:
  1576  004E68                     
  1577                           ; BSR set to: 1
  1578                           ;fs_main.c: 68:             {;fs_main.c: 69:                 timer_value.minute++;
  1579  004E68  2B90               	incf	(_timer_value+1)& (0+255),f,b
  1580  004E6A                     
  1581                           ; BSR set to: 1
  1582                           ;fs_main.c: 70:                 timer_value.remainingMinute = (int8_t)menu_value.driver_
      +                          time - timer_value.minute;
  1583  004E6A  5190               	movf	(_timer_value+1)& (0+255),w,b
  1584  004E6C  0100               	movlb	0	; () banked
  1585  004E6E  5DF3               	subwf	_menu_value& (0+255),w,b
  1586  004E70  0101               	movlb	1	; () banked
  1587  004E72  6F92               	movwf	(_timer_value+3)& (0+255),b
  1588  004E74                     l6208:
  1589                           
  1590                           ; BSR set to: 1
  1591                           ;fs_main.c: 73:             if (timer_value.second > 59)
  1592  004E74  0E3B               	movlw	59
  1593  004E76  658F               	cpfsgt	_timer_value& (0+255),b
  1594  004E78  EF40  F027         	goto	u7781
  1595  004E7C  EF42  F027         	goto	u7780
  1596  004E80                     u7781:
  1597  004E80  EF44  F027         	goto	l6212
  1598  004E84                     u7780:
  1599  004E84                     
  1600                           ; BSR set to: 1
  1601                           ;fs_main.c: 74:             {;fs_main.c: 75:                 timer_value.second = 0;
  1602  004E84  0E00               	movlw	0
  1603  004E86  6F8F               	movwf	_timer_value& (0+255),b
  1604  004E88                     l6212:
  1605                           
  1606                           ;fs_main.c: 80:     menuControl();
  1607  004E88  EC77  F02A         	call	_menuControl	;wreg free
  1608  004E8C  EFFD  F026         	goto	l6186
  1609  004E90  EF4D  F000         	goto	start
  1610  004E94                     __end_of_main:
  1611                           	callstack 0
  1612                           
  1613 ;; *************** function _timer_0_init *****************
  1614 ;; Defined at:
  1615 ;;		line 72 in file "fs_timer.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;		None
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;		None
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  1    wreg      void 
  1622 ;; Registers used:
  1623 ;;		wreg, status,2
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1629 ;;      Params:         0       0       0       0       0       0       0
  1630 ;;      Locals:         0       0       0       0       0       0       0
  1631 ;;      Temps:          0       0       0       0       0       0       0
  1632 ;;      Totals:         0       0       0       0       0       0       0
  1633 ;;Total ram usage:        0 bytes
  1634 ;; Hardware stack levels used:    1
  1635 ;; Hardware stack levels required when called:    1
  1636 ;; This function calls:
  1637 ;;		Nothing
  1638 ;; This function is called by:
  1639 ;;		_main
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643                           	psect	text1
  1644  005CC8                     __ptext1:
  1645                           	callstack 0
  1646  005CC8                     _timer_0_init:
  1647                           	callstack 29
  1648  005CC8                     
  1649                           ;fs_timer.c: 74:   T0CON = 0x81;
  1650  005CC8  0E81               	movlw	129
  1651  005CCA  6ED5               	movwf	213,c	;volatile
  1652                           
  1653                           ;fs_timer.c: 75:   TMR0H = 0x63;
  1654  005CCC  0E63               	movlw	99
  1655  005CCE  6ED7               	movwf	215,c	;volatile
  1656                           
  1657                           ;fs_timer.c: 76:   TMR0L = 0xC0;
  1658  005CD0  0EC0               	movlw	192
  1659  005CD2  6ED6               	movwf	214,c	;volatile
  1660  005CD4                     
  1661                           ;fs_timer.c: 77:   INTCONbits.GIE = 1;
  1662  005CD4  8EF2               	bsf	242,7,c	;volatile
  1663  005CD6                     
  1664                           ;fs_timer.c: 78:   INTCONbits.TMR0IE = 1;
  1665  005CD6  8AF2               	bsf	242,5,c	;volatile
  1666  005CD8  0012               	return		;funcret
  1667  005CDA                     __end_of_timer_0_init:
  1668                           	callstack 0
  1669                           
  1670 ;; *************** function _system_init *****************
  1671 ;; Defined at:
  1672 ;;		line 56 in file "fs_mcu.c"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;		None
  1675 ;; Auto vars:     Size  Location     Type
  1676 ;;		None
  1677 ;; Return value:  Size  Location     Type
  1678 ;;                  1    wreg      void 
  1679 ;; Registers used:
  1680 ;;		wreg, status,2, cstack
  1681 ;; Tracked objects:
  1682 ;;		On entry : 0/0
  1683 ;;		On exit  : 0/0
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1686 ;;      Params:         0       0       0       0       0       0       0
  1687 ;;      Locals:         0       0       0       0       0       0       0
  1688 ;;      Temps:          2       0       0       0       0       0       0
  1689 ;;      Totals:         2       0       0       0       0       0       0
  1690 ;;Total ram usage:        2 bytes
  1691 ;; Hardware stack levels used:    1
  1692 ;; Hardware stack levels required when called:    2
  1693 ;; This function calls:
  1694 ;;		_eepromRead
  1695 ;; This function is called by:
  1696 ;;		_main
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           	psect	text2
  1701  0048C4                     __ptext2:
  1702                           	callstack 0
  1703  0048C4                     _system_init:
  1704                           	callstack 28
  1705  0048C4                     
  1706                           ;fs_mcu.c: 58:     driver_limit.pay = 0;
  1707  0048C4  0E00               	movlw	0
  1708  0048C6  0101               	movlb	1	; () banked
  1709  0048C8  6F83               	movwf	_driver_limit& (0+255),b
  1710  0048CA  0E00               	movlw	0
  1711  0048CC  6F84               	movwf	(_driver_limit+1)& (0+255),b
  1712  0048CE  0E00               	movlw	0
  1713  0048D0  6F85               	movwf	(_driver_limit+2)& (0+255),b
  1714  0048D2  0E00               	movlw	0
  1715  0048D4  6F86               	movwf	(_driver_limit+3)& (0+255),b
  1716                           
  1717                           ;fs_mcu.c: 59:     driver_limit.payda = 0;
  1718  0048D6  0E00               	movlw	0
  1719  0048D8  6F87               	movwf	(_driver_limit+4)& (0+255),b
  1720  0048DA  0E00               	movlw	0
  1721  0048DC  6F88               	movwf	(_driver_limit+5)& (0+255),b
  1722  0048DE  0E00               	movlw	0
  1723  0048E0  6F89               	movwf	(_driver_limit+6)& (0+255),b
  1724  0048E2  0E00               	movlw	0
  1725  0048E4  6F8A               	movwf	(_driver_limit+7)& (0+255),b
  1726                           
  1727                           ;fs_mcu.c: 60:     driver_limit.ortalama = 0;
  1728  0048E6  0E00               	movlw	0
  1729  0048E8  6F8B               	movwf	(_driver_limit+8)& (0+255),b
  1730  0048EA  0E00               	movlw	0
  1731  0048EC  6F8C               	movwf	(_driver_limit+9)& (0+255),b
  1732  0048EE  0E00               	movlw	0
  1733  0048F0  6F8D               	movwf	(_driver_limit+10)& (0+255),b
  1734  0048F2  0E00               	movlw	0
  1735  0048F4  6F8E               	movwf	(_driver_limit+11)& (0+255),b
  1736                           
  1737                           ;fs_mcu.c: 61:     convert_data.convert_channel_0 = 0;
  1738  0048F6  0E00               	movlw	0
  1739  0048F8  6F00               	movwf	_convert_data& (0+255),b
  1740  0048FA  0E00               	movlw	0
  1741  0048FC  6F01               	movwf	(_convert_data+1)& (0+255),b
  1742  0048FE  0E00               	movlw	0
  1743  004900  6F02               	movwf	(_convert_data+2)& (0+255),b
  1744  004902  0E00               	movlw	0
  1745  004904  6F03               	movwf	(_convert_data+3)& (0+255),b
  1746                           
  1747                           ;fs_mcu.c: 62:     convert_data.convert_channel_1 = 0;
  1748  004906  0E00               	movlw	0
  1749  004908  6F04               	movwf	(_convert_data+4)& (0+255),b
  1750  00490A  0E00               	movlw	0
  1751  00490C  6F05               	movwf	(_convert_data+5)& (0+255),b
  1752  00490E  0E00               	movlw	0
  1753  004910  6F06               	movwf	(_convert_data+6)& (0+255),b
  1754  004912  0E00               	movlw	0
  1755  004914  6F07               	movwf	(_convert_data+7)& (0+255),b
  1756                           
  1757                           ;fs_mcu.c: 63:     convert_data.convert_channel_2 = 0;
  1758  004916  0E00               	movlw	0
  1759  004918  6F08               	movwf	(_convert_data+8)& (0+255),b
  1760  00491A  0E00               	movlw	0
  1761  00491C  6F09               	movwf	(_convert_data+9)& (0+255),b
  1762  00491E  0E00               	movlw	0
  1763  004920  6F0A               	movwf	(_convert_data+10)& (0+255),b
  1764  004922  0E00               	movlw	0
  1765  004924  6F0B               	movwf	(_convert_data+11)& (0+255),b
  1766                           
  1767                           ;fs_mcu.c: 64:     convert_data.convert_channel_3 = 0;
  1768  004926  0E00               	movlw	0
  1769  004928  6F0C               	movwf	(_convert_data+12)& (0+255),b
  1770  00492A  0E00               	movlw	0
  1771  00492C  6F0D               	movwf	(_convert_data+13)& (0+255),b
  1772  00492E  0E00               	movlw	0
  1773  004930  6F0E               	movwf	(_convert_data+14)& (0+255),b
  1774  004932  0E00               	movlw	0
  1775  004934  6F0F               	movwf	(_convert_data+15)& (0+255),b
  1776                           
  1777                           ;fs_mcu.c: 65:     convert_data.convert_channel_4 = 0;
  1778  004936  0E00               	movlw	0
  1779  004938  6F10               	movwf	(_convert_data+16)& (0+255),b
  1780  00493A  0E00               	movlw	0
  1781  00493C  6F11               	movwf	(_convert_data+17)& (0+255),b
  1782  00493E  0E00               	movlw	0
  1783  004940  6F12               	movwf	(_convert_data+18)& (0+255),b
  1784  004942  0E00               	movlw	0
  1785  004944  6F13               	movwf	(_convert_data+19)& (0+255),b
  1786                           
  1787                           ;fs_mcu.c: 66:     convert_data.convert_channel_5 = 0;
  1788  004946  0E00               	movlw	0
  1789  004948  6F14               	movwf	(_convert_data+20)& (0+255),b
  1790  00494A  0E00               	movlw	0
  1791  00494C  6F15               	movwf	(_convert_data+21)& (0+255),b
  1792  00494E  0E00               	movlw	0
  1793  004950  6F16               	movwf	(_convert_data+22)& (0+255),b
  1794  004952  0E00               	movlw	0
  1795  004954  6F17               	movwf	(_convert_data+23)& (0+255),b
  1796                           
  1797                           ;fs_mcu.c: 67:     convert_data.convert_channel_6 = 0;
  1798  004956  0E00               	movlw	0
  1799  004958  6F18               	movwf	(_convert_data+24)& (0+255),b
  1800  00495A  0E00               	movlw	0
  1801  00495C  6F19               	movwf	(_convert_data+25)& (0+255),b
  1802  00495E  0E00               	movlw	0
  1803  004960  6F1A               	movwf	(_convert_data+26)& (0+255),b
  1804  004962  0E00               	movlw	0
  1805  004964  6F1B               	movwf	(_convert_data+27)& (0+255),b
  1806                           
  1807                           ;fs_mcu.c: 68:     convert_data.convert_channel_7 = 0;
  1808  004966  0E00               	movlw	0
  1809  004968  6F1C               	movwf	(_convert_data+28)& (0+255),b
  1810  00496A  0E00               	movlw	0
  1811  00496C  6F1D               	movwf	(_convert_data+29)& (0+255),b
  1812  00496E  0E00               	movlw	0
  1813  004970  6F1E               	movwf	(_convert_data+30)& (0+255),b
  1814  004972  0E00               	movlw	0
  1815  004974  6F1F               	movwf	(_convert_data+31)& (0+255),b
  1816                           
  1817                           ;fs_mcu.c: 69:     controller.leftMotorSpeed = 0;
  1818  004976  0E00               	movlw	0
  1819  004978  6F57               	movwf	(_controller+7)& (0+255),b
  1820  00497A  0E00               	movlw	0
  1821  00497C  6F56               	movwf	(_controller+6)& (0+255),b
  1822                           
  1823                           ;fs_mcu.c: 70:     controller.rightMotorSpeed = 0;
  1824  00497E  0E00               	movlw	0
  1825  004980  6F59               	movwf	(_controller+9)& (0+255),b
  1826  004982  0E00               	movlw	0
  1827  004984  6F58               	movwf	(_controller+8)& (0+255),b
  1828                           
  1829                           ;fs_mcu.c: 71:     timer_value.timer_0_counter = 0;
  1830  004986  0E00               	movlw	0
  1831  004988  6F94               	movwf	(_timer_value+5)& (0+255),b
  1832                           
  1833                           ;fs_mcu.c: 72:     controller.error = 0;
  1834  00498A  0E00               	movlw	0
  1835  00498C  6F51               	movwf	(_controller+1)& (0+255),b
  1836  00498E  0E00               	movlw	0
  1837  004990  6F50               	movwf	_controller& (0+255),b
  1838                           
  1839                           ;fs_mcu.c: 74:     button_bounce_controller.menu = 0;
  1840  004992  0E00               	movlw	0
  1841  004994  6F9D               	movwf	_button_bounce_controller& (0+255),b
  1842                           
  1843                           ;fs_mcu.c: 75:     button_bounce_controller.pause = 0;
  1844  004996  0E00               	movlw	0
  1845  004998  6FA0               	movwf	(_button_bounce_controller+3)& (0+255),b
  1846                           
  1847                           ;fs_mcu.c: 76:     button_bounce_controller.start = 0;
  1848  00499A  0E00               	movlw	0
  1849  00499C  6F9E               	movwf	(_button_bounce_controller+1)& (0+255),b
  1850                           
  1851                           ;fs_mcu.c: 77:     button_bounce_controller.stop = 0;
  1852  00499E  0E00               	movlw	0
  1853  0049A0  6F9F               	movwf	(_button_bounce_controller+2)& (0+255),b
  1854  0049A2                     
  1855                           ; BSR set to: 1
  1856                           ;fs_mcu.c: 78:     menu_value.driver_time = (uint8_t)eepromRead(0x00);
  1857  0049A2  0E00               	movlw	0
  1858  0049A4  EC3B  F02E         	call	_eepromRead
  1859  0049A8  0100               	movlb	0	; () banked
  1860  0049AA  6FF3               	movwf	_menu_value& (0+255),b
  1861  0049AC                     
  1862                           ; BSR set to: 0
  1863                           ;fs_mcu.c: 79:     menu_value.stop_time = (uint8_t)eepromRead(0x01);
  1864  0049AC  0E01               	movlw	1
  1865  0049AE  EC3B  F02E         	call	_eepromRead
  1866  0049B2  0100               	movlb	0	; () banked
  1867  0049B4  6FF4               	movwf	(_menu_value+1)& (0+255),b
  1868  0049B6                     
  1869                           ; BSR set to: 0
  1870                           ;fs_mcu.c: 80:     menu_value.speed_limit = (uint8_t)eepromRead(0x02);
  1871  0049B6  0E02               	movlw	2
  1872  0049B8  EC3B  F02E         	call	_eepromRead
  1873  0049BC  0100               	movlb	0	; () banked
  1874  0049BE  6FF5               	movwf	(_menu_value+2)& (0+255),b
  1875  0049C0                     
  1876                           ; BSR set to: 0
  1877                           ;fs_mcu.c: 82:     _delay((unsigned long)((700)*(64000000UL/4000.0)));
  1878  0049C0  0E39               	movlw	57
  1879  0049C2  6E03               	movwf	(??_system_init+1)^0,c
  1880  0049C4  0ED2               	movlw	210
  1881  0049C6  6E02               	movwf	??_system_init^0,c
  1882  0049C8  0E4C               	movlw	76
  1883  0049CA                     u7857:
  1884  0049CA  2EE8               	decfsz	wreg,f,c
  1885  0049CC  D7FE               	bra	u7857
  1886  0049CE  2E02               	decfsz	??_system_init^0,f,c
  1887  0049D0  D7FC               	bra	u7857
  1888  0049D2  2E03               	decfsz	(??_system_init+1)^0,f,c
  1889  0049D4  D7FA               	bra	u7857
  1890  0049D6  D000               	nop2	
  1891  0049D8                     
  1892                           ;fs_mcu.c: 83:     timer_value.remainingMinute = menu_value.driver_time;
  1893  0049D8  C0F3  F192         	movff	_menu_value,_timer_value+3
  1894  0049DC                     
  1895                           ;fs_mcu.c: 84:     timer_value.remainingSecond = 0;
  1896  0049DC  0E00               	movlw	0
  1897  0049DE  0101               	movlb	1	; () banked
  1898  0049E0  6F91               	movwf	(_timer_value+2)& (0+255),b
  1899  0049E2                     
  1900                           ; BSR set to: 1
  1901  0049E2  0012               	return		;funcret
  1902  0049E4                     __end_of_system_init:
  1903                           	callstack 0
  1904                           
  1905 ;; *************** function _eepromRead *****************
  1906 ;; Defined at:
  1907 ;;		line 36 in file "fs_eeprom.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;  address         1    wreg     unsigned char 
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;  address         1    0[COMRAM] unsigned char 
  1912 ;; Return value:  Size  Location     Type
  1913 ;;                  1    wreg      unsigned char 
  1914 ;; Registers used:
  1915 ;;		wreg, status,2
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1921 ;;      Params:         0       0       0       0       0       0       0
  1922 ;;      Locals:         1       0       0       0       0       0       0
  1923 ;;      Temps:          0       0       0       0       0       0       0
  1924 ;;      Totals:         1       0       0       0       0       0       0
  1925 ;;Total ram usage:        1 bytes
  1926 ;; Hardware stack levels used:    1
  1927 ;; Hardware stack levels required when called:    1
  1928 ;; This function calls:
  1929 ;;		Nothing
  1930 ;; This function is called by:
  1931 ;;		_system_init
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           	psect	text3
  1936  005C76                     __ptext3:
  1937                           	callstack 0
  1938  005C76                     _eepromRead:
  1939                           	callstack 28
  1940                           
  1941                           ; BSR set to: 1
  1942                           ;incstack = 0
  1943                           ;eepromRead@address stored from wreg
  1944  005C76  6E01               	movwf	eepromRead@address^0,c
  1945  005C78                     
  1946                           ;fs_eeprom.c: 36: uint8_t eepromRead(uint8_t address);fs_eeprom.c: 37: {;fs_eeprom.c: 41
      +                          :     EEADR = (uint8_t)address;
  1947  005C78  C001  FFA9         	movff	eepromRead@address,4009	;volatile
  1948  005C7C                     
  1949                           ;fs_eeprom.c: 43:     EECON1bits.EEPGD = 0;
  1950  005C7C  9EA6               	bcf	166,7,c	;volsfr
  1951  005C7E                     
  1952                           ;fs_eeprom.c: 44:     EECON1bits.CFGS = 0;
  1953  005C7E  9CA6               	bcf	166,6,c	;volsfr
  1954  005C80                     
  1955                           ;fs_eeprom.c: 45:     EECON1bits.RD = 1;
  1956  005C80  80A6               	bsf	166,0,c	;volsfr
  1957  005C82                     l70:
  1958  005C82  B0A6               	btfsc	166,0,c	;volsfr
  1959  005C84  EF46  F02E         	goto	u6871
  1960  005C88  EF48  F02E         	goto	u6870
  1961  005C8C                     u6871:
  1962  005C8C  EF41  F02E         	goto	l70
  1963  005C90                     u6870:
  1964  005C90                     
  1965                           ;fs_eeprom.c: 51:     return EEDATA;
  1966  005C90  50A8               	movf	168,w,c	;volatile
  1967  005C92  0012               	return		;funcret
  1968  005C94                     __end_of_eepromRead:
  1969                           	callstack 0
  1970                           
  1971 ;; *************** function _menuInitialize *****************
  1972 ;; Defined at:
  1973 ;;		line 38 in file "fs_menu_controller.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;		None
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;		None
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  1    wreg      void 
  1980 ;; Registers used:
  1981 ;;		None
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1987 ;;      Params:         0       0       0       0       0       0       0
  1988 ;;      Locals:         0       0       0       0       0       0       0
  1989 ;;      Temps:          0       0       0       0       0       0       0
  1990 ;;      Totals:         0       0       0       0       0       0       0
  1991 ;;Total ram usage:        0 bytes
  1992 ;; Hardware stack levels used:    1
  1993 ;; Hardware stack levels required when called:    1
  1994 ;; This function calls:
  1995 ;;		Nothing
  1996 ;; This function is called by:
  1997 ;;		_main
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001                           	psect	text4
  2002  005BE0                     __ptext4:
  2003                           	callstack 0
  2004  005BE0                     _menuInitialize:
  2005                           	callstack 29
  2006  005BE0                     
  2007                           ;fs_menu_controller.c: 41:     TRISBbits.RB6 = 1;
  2008  005BE0  8C93               	bsf	147,6,c	;volatile
  2009                           
  2010                           ;fs_menu_controller.c: 44:     TRISBbits.RB7 = 1;
  2011  005BE2  8E93               	bsf	147,7,c	;volatile
  2012                           
  2013                           ;fs_menu_controller.c: 46:     ANSELDbits.ANSD4 = 0;
  2014  005BE4  010F               	movlb	15	; () banked
  2015  005BE6  993B               	bcf	59,4,b	;volatile
  2016                           
  2017                           ;fs_menu_controller.c: 47:     TRISDbits.RD4 = 1;
  2018  005BE8  8895               	bsf	149,4,c	;volatile
  2019                           
  2020                           ;fs_menu_controller.c: 49:     ANSELDbits.ANSD0 = 0;
  2021  005BEA  913B               	bcf	59,0,b	;volatile
  2022                           
  2023                           ;fs_menu_controller.c: 50:     TRISDbits.RD0 = 1;
  2024  005BEC  8095               	bsf	149,0,c	;volatile
  2025                           
  2026                           ;fs_menu_controller.c: 52:     ANSELDbits.ANSD1 = 0;
  2027  005BEE  933B               	bcf	59,1,b	;volatile
  2028                           
  2029                           ;fs_menu_controller.c: 53:     TRISDbits.RD1 = 1;
  2030  005BF0  8295               	bsf	149,1,c	;volatile
  2031                           
  2032                           ;fs_menu_controller.c: 55:     ANSELDbits.ANSD2 = 0;
  2033  005BF2  953B               	bcf	59,2,b	;volatile
  2034                           
  2035                           ;fs_menu_controller.c: 56:     TRISDbits.RD2 = 1;
  2036  005BF4  8495               	bsf	149,2,c	;volatile
  2037                           
  2038                           ;fs_menu_controller.c: 58:     ANSELDbits.ANSD3 = 0;
  2039  005BF6  973B               	bcf	59,3,b	;volatile
  2040                           
  2041                           ;fs_menu_controller.c: 59:     TRISDbits.RD3 = 1;
  2042  005BF8  8695               	bsf	149,3,c	;volatile
  2043                           
  2044                           ;fs_menu_controller.c: 61:     ANSELDbits.ANSD5 = 0;
  2045  005BFA  9B3B               	bcf	59,5,b	;volatile
  2046                           
  2047                           ;fs_menu_controller.c: 62:     TRISDbits.RD5 = 0;
  2048  005BFC  9A95               	bcf	149,5,c	;volatile
  2049                           
  2050                           ;fs_menu_controller.c: 64:     ANSELCbits.ANSC5 = 0;
  2051  005BFE  9B3A               	bcf	58,5,b	;volatile
  2052                           
  2053                           ;fs_menu_controller.c: 65:     TRISCbits.RC5 = 0;
  2054  005C00  9A94               	bcf	148,5,c	;volatile
  2055                           
  2056                           ;fs_menu_controller.c: 67:     ANSELCbits.ANSC4 = 0;
  2057  005C02  993A               	bcf	58,4,b	;volatile
  2058                           
  2059                           ;fs_menu_controller.c: 68:     TRISCbits.RC4 = 0;
  2060  005C04  9894               	bcf	148,4,c	;volatile
  2061  005C06                     
  2062                           ; BSR set to: 15
  2063  005C06  0012               	return		;funcret
  2064  005C08                     __end_of_menuInitialize:
  2065                           	callstack 0
  2066                           
  2067 ;; *************** function _menuControl *****************
  2068 ;; Defined at:
  2069 ;;		line 162 in file "fs_menu_controller.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;		None
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;		None
  2074 ;; Return value:  Size  Location     Type
  2075 ;;                  1    wreg      void 
  2076 ;; Registers used:
  2077 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2078 ;; Tracked objects:
  2079 ;;		On entry : 0/0
  2080 ;;		On exit  : 0/0
  2081 ;;		Unchanged: 0/0
  2082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2083 ;;      Params:         0       0       0       0       0       0       0
  2084 ;;      Locals:         0       0       0       0       0       0       0
  2085 ;;      Temps:          0       0       0       0       0       0       0
  2086 ;;      Totals:         0       0       0       0       0       0       0
  2087 ;;Total ram usage:        0 bytes
  2088 ;; Hardware stack levels used:    1
  2089 ;; Hardware stack levels required when called:   10
  2090 ;; This function calls:
  2091 ;;		_buttonControlFlags
  2092 ;;		_stateMachine
  2093 ;; This function is called by:
  2094 ;;		_main
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           	psect	text5
  2099  0054EE                     __ptext5:
  2100                           	callstack 0
  2101  0054EE                     _menuControl:
  2102                           	callstack 20
  2103  0054EE                     
  2104                           ;fs_menu_controller.c: 164:     buttonControlFlags();
  2105  0054EE  EC85  F01F         	call	_buttonControlFlags	;wreg free
  2106  0054F2                     
  2107                           ;fs_menu_controller.c: 165:     stateMachine();
  2108  0054F2  EC4C  F009         	call	_stateMachine	;wreg free
  2109  0054F6                     
  2110                           ;fs_menu_controller.c: 167:     if (menu_flags.menu_start_flag == 1)
  2111  0054F6  0101               	movlb	1	; () banked
  2112  0054F8  0598               	decf	(_menu_flags+1)& (0+255),w,b
  2113  0054FA  A4D8               	btfss	status,2,c
  2114  0054FC  EF82  F02A         	goto	u7691
  2115  005500  EF84  F02A         	goto	u7690
  2116  005504                     u7691:
  2117  005504  EF8D  F02A         	goto	l6154
  2118  005508                     u7690:
  2119  005508                     
  2120                           ; BSR set to: 1
  2121                           ;fs_menu_controller.c: 168:     {;fs_menu_controller.c: 169:         menu_flags.menu_sta
      +                          rt_flag = 0;
  2122  005508  0E00               	movlw	0
  2123  00550A  6F98               	movwf	(_menu_flags+1)& (0+255),b
  2124                           
  2125                           ;fs_menu_controller.c: 170:         startIsClick = 1;
  2126  00550C  0E01               	movlw	1
  2127  00550E  0100               	movlb	0	; () banked
  2128  005510  6FFD               	movwf	_startIsClick& (0+255),b
  2129                           
  2130                           ;fs_menu_controller.c: 171:         pauseIsClick = 0;
  2131  005512  0E00               	movlw	0
  2132  005514  6FFE               	movwf	_pauseIsClick& (0+255),b
  2133                           
  2134                           ;fs_menu_controller.c: 172:         stopIsClick = 0;
  2135  005516  0E00               	movlw	0
  2136  005518  6FFC               	movwf	_stopIsClick& (0+255),b
  2137  00551A                     l6154:
  2138                           
  2139                           ;fs_menu_controller.c: 175:     if (menu_flags.menu_pause_flag == 1)
  2140  00551A  0101               	movlb	1	; () banked
  2141  00551C  059A               	decf	(_menu_flags+3)& (0+255),w,b
  2142  00551E  A4D8               	btfss	status,2,c
  2143  005520  EF94  F02A         	goto	u7701
  2144  005524  EF96  F02A         	goto	u7700
  2145  005528                     u7701:
  2146  005528  EF9F  F02A         	goto	l6158
  2147  00552C                     u7700:
  2148  00552C                     
  2149                           ; BSR set to: 1
  2150                           ;fs_menu_controller.c: 176:     {;fs_menu_controller.c: 177:         menu_flags.menu_pau
      +                          se_flag = 0;
  2151  00552C  0E00               	movlw	0
  2152  00552E  6F9A               	movwf	(_menu_flags+3)& (0+255),b
  2153                           
  2154                           ;fs_menu_controller.c: 178:         pauseIsClick = 1;
  2155  005530  0E01               	movlw	1
  2156  005532  0100               	movlb	0	; () banked
  2157  005534  6FFE               	movwf	_pauseIsClick& (0+255),b
  2158                           
  2159                           ;fs_menu_controller.c: 179:         startIsClick = 0;
  2160  005536  0E00               	movlw	0
  2161  005538  6FFD               	movwf	_startIsClick& (0+255),b
  2162                           
  2163                           ;fs_menu_controller.c: 180:         stopIsClick = 0;
  2164  00553A  0E00               	movlw	0
  2165  00553C  6FFC               	movwf	_stopIsClick& (0+255),b
  2166  00553E                     l6158:
  2167                           
  2168                           ;fs_menu_controller.c: 183:     if (menu_flags.menu_stop_flag == 1)
  2169  00553E  0101               	movlb	1	; () banked
  2170  005540  0599               	decf	(_menu_flags+2)& (0+255),w,b
  2171  005542  A4D8               	btfss	status,2,c
  2172  005544  EFA6  F02A         	goto	u7711
  2173  005548  EFA8  F02A         	goto	u7710
  2174  00554C                     u7711:
  2175  00554C  EFB1  F02A         	goto	l329
  2176  005550                     u7710:
  2177  005550                     
  2178                           ; BSR set to: 1
  2179                           ;fs_menu_controller.c: 184:     {;fs_menu_controller.c: 185:         menu_flags.menu_sto
      +                          p_flag = 0;
  2180  005550  0E00               	movlw	0
  2181  005552  6F99               	movwf	(_menu_flags+2)& (0+255),b
  2182                           
  2183                           ;fs_menu_controller.c: 186:         pauseIsClick = 0;
  2184  005554  0E00               	movlw	0
  2185  005556  0100               	movlb	0	; () banked
  2186  005558  6FFE               	movwf	_pauseIsClick& (0+255),b
  2187                           
  2188                           ;fs_menu_controller.c: 187:         startIsClick = 0;
  2189  00555A  0E00               	movlw	0
  2190  00555C  6FFD               	movwf	_startIsClick& (0+255),b
  2191                           
  2192                           ;fs_menu_controller.c: 188:         stopIsClick = 1;
  2193  00555E  0E01               	movlw	1
  2194  005560  6FFC               	movwf	_stopIsClick& (0+255),b
  2195  005562                     l329:
  2196  005562  0012               	return		;funcret
  2197  005564                     __end_of_menuControl:
  2198                           	callstack 0
  2199                           
  2200 ;; *************** function _stateMachine *****************
  2201 ;; Defined at:
  2202 ;;		line 199 in file "fs_menu_controller.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;		None
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;  textCursor2    16  131[BANK0 ] unsigned char [16]
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  1    wreg      void 
  2209 ;; Registers used:
  2210 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2216 ;;      Params:         0       0       0       0       0       0       0
  2217 ;;      Locals:         0      16       0       0       0       0       0
  2218 ;;      Temps:          0       2       0       0       0       0       0
  2219 ;;      Totals:         0      18       0       0       0       0       0
  2220 ;;Total ram usage:       18 bytes
  2221 ;; Hardware stack levels used:    1
  2222 ;; Hardware stack levels required when called:    9
  2223 ;; This function calls:
  2224 ;;		_Lcd_Set_Cursor
  2225 ;;		_Lcd_Write_String
  2226 ;;		___fladd
  2227 ;;		___flge
  2228 ;;		___flsub
  2229 ;;		_eepromWrite
  2230 ;;		_sprintf
  2231 ;;		_startMotor
  2232 ;;		_stopMotor
  2233 ;; This function is called by:
  2234 ;;		_menuControl
  2235 ;; This function uses a non-reentrant model
  2236 ;;
  2237                           
  2238                           	psect	text6
  2239  001298                     __ptext6:
  2240                           	callstack 0
  2241  001298                     _stateMachine:
  2242                           	callstack 20
  2243  001298                     
  2244                           ;fs_menu_controller.c: 201:     char textCursor2[16] = {0};
  2245  001298  EE20  F0E3         	lfsr	2,stateMachine@textCursor2
  2246  00129C  0E0F               	movlw	15
  2247  00129E                     u7121:
  2248  00129E  6ADE               	clrf	postinc2,c
  2249  0012A0  06E8               	decf	wreg,f,c
  2250  0012A2  E2FD               	bc	u7121
  2251                           
  2252                           ;fs_menu_controller.c: 202:     static uint8_t secretMenuCounter = 0;;fs_menu_controller
      +                          .c: 204:     switch (menu_selected)
  2253  0012A4  EFFE  F00D         	goto	l6068
  2254  0012A8                     l5730:
  2255                           
  2256                           ; BSR set to: 0
  2257                           ;fs_menu_controller.c: 208:             Lcd_Set_Cursor(1,1);
  2258  0012A8  0E01               	movlw	1
  2259  0012AA  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2260  0012AC  0E01               	movlw	1
  2261  0012AE  EC1C  F02B         	call	_Lcd_Set_Cursor
  2262  0012B2                     
  2263                           ;fs_menu_controller.c: 209:             Lcd_Write_String("KALAN ZAMAN     ");
  2264  0012B2  0E35               	movlw	low STR_1
  2265  0012B4  6E05               	movwf	Lcd_Write_String@a^0,c
  2266  0012B6  0E06               	movlw	high STR_1
  2267  0012B8  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2268  0012BA  ECBE  F029         	call	_Lcd_Write_String	;wreg free
  2269  0012BE                     
  2270                           ;fs_menu_controller.c: 210:             Lcd_Set_Cursor(2,1);
  2271  0012BE  0E01               	movlw	1
  2272  0012C0  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2273  0012C2  0E02               	movlw	2
  2274  0012C4  EC1C  F02B         	call	_Lcd_Set_Cursor
  2275  0012C8                     
  2276                           ;fs_menu_controller.c: 211:             sprintf(textCursor2,"      %d:%d   ",timer_value
      +                          .remainingMinute,timer_value.remainingSecond);
  2277  0012C8  0EE3               	movlw	low stateMachine@textCursor2
  2278  0012CA  0100               	movlb	0	; () banked
  2279  0012CC  6FCF               	movwf	sprintf@s& (0+255),b
  2280  0012CE  0E00               	movlw	high stateMachine@textCursor2
  2281  0012D0  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2282  0012D2  0EAA               	movlw	low STR_2
  2283  0012D4  6FD1               	movwf	sprintf@fmt& (0+255),b
  2284  0012D6  0E06               	movlw	high STR_2
  2285  0012D8  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2286  0012DA  0101               	movlb	1	; () banked
  2287  0012DC  5192               	movf	(_timer_value+3)& (0+255),w,b
  2288  0012DE  0100               	movlb	0	; () banked
  2289  0012E0  6FD3               	movwf	(?_sprintf+4)& (0+255),b
  2290  0012E2  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  2291  0012E4  BFD3               	btfsc	(?_sprintf+4)& (0+255),7,b
  2292  0012E6  07D4               	decf	(?_sprintf+5)& (0+255),f,b
  2293  0012E8  C191  F0D5         	movff	_timer_value+2,?_sprintf+6
  2294  0012EC  6BD6               	clrf	(?_sprintf+7)& (0+255),b
  2295  0012EE  EC04  F02C         	call	_sprintf	;wreg free
  2296  0012F2                     
  2297                           ;fs_menu_controller.c: 212:             Lcd_Write_String(textCursor2);
  2298  0012F2  0EE3               	movlw	low stateMachine@textCursor2
  2299  0012F4  6E05               	movwf	Lcd_Write_String@a^0,c
  2300  0012F6  0E00               	movlw	high stateMachine@textCursor2
  2301  0012F8  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2302  0012FA  ECBE  F029         	call	_Lcd_Write_String	;wreg free
  2303  0012FE                     
  2304                           ;fs_menu_controller.c: 214:             if ( timer_value.menu_login_delay == 100)
  2305  0012FE  0E64               	movlw	100
  2306  001300  0101               	movlb	1	; () banked
  2307  001302  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  2308  001304  A4D8               	btfss	status,2,c
  2309  001306  EF87  F009         	goto	u7131
  2310  00130A  EF89  F009         	goto	u7130
  2311  00130E                     u7131:
  2312  00130E  EF8E  F009         	goto	l5744
  2313  001312                     u7130:
  2314  001312                     
  2315                           ; BSR set to: 1
  2316                           ;fs_menu_controller.c: 215:             {;fs_menu_controller.c: 216:                 tim
      +                          er_value.menu_login_delay = 0;
  2317  001312  0E00               	movlw	0
  2318  001314  6F93               	movwf	(_timer_value+4)& (0+255),b
  2319                           
  2320                           ;fs_menu_controller.c: 217:                 menu_selected = DRIVER_TIME_SETTING;
  2321  001316  0E01               	movlw	1
  2322  001318  0100               	movlb	0	; () banked
  2323  00131A  6FFB               	movwf	_menu_selected& (0+255),b
  2324  00131C                     l5744:
  2325                           
  2326                           ;fs_menu_controller.c: 220:             if ((timer_value.remainingMinute <= 0) && (timer
      +                          _value.remainingSecond == 0) )
  2327  00131C  0101               	movlb	1	; () banked
  2328  00131E  5192               	movf	(_timer_value+3)& (0+255),w,b
  2329  001320  0A80               	xorlw	128
  2330  001322  0F7F               	addlw	-129
  2331  001324  B0D8               	btfsc	status,0,c
  2332  001326  EF97  F009         	goto	u7141
  2333  00132A  EF99  F009         	goto	u7140
  2334  00132E                     u7141:
  2335  00132E  EFA7  F009         	goto	l339
  2336  001332                     u7140:
  2337  001332                     
  2338                           ; BSR set to: 1
  2339  001332  5191               	movf	(_timer_value+2)& (0+255),w,b
  2340  001334  A4D8               	btfss	status,2,c
  2341  001336  EF9F  F009         	goto	u7151
  2342  00133A  EFA1  F009         	goto	u7150
  2343  00133E                     u7151:
  2344  00133E  EFA7  F009         	goto	l339
  2345  001342                     u7150:
  2346  001342                     
  2347                           ; BSR set to: 1
  2348                           ;fs_menu_controller.c: 221:             {;fs_menu_controller.c: 222:                    
      +                           menu_selected = STOP_MENU;
  2349  001342  0E04               	movlw	4
  2350  001344  0100               	movlb	0	; () banked
  2351  001346  6FFB               	movwf	_menu_selected& (0+255),b
  2352                           
  2353                           ;fs_menu_controller.c: 223:                     timer_value.minute = 0;
  2354  001348  0E00               	movlw	0
  2355  00134A  0101               	movlb	1	; () banked
  2356  00134C  6F90               	movwf	(_timer_value+1)& (0+255),b
  2357  00134E                     l339:
  2358                           
  2359                           ; BSR set to: 1
  2360                           ;fs_menu_controller.c: 226:             if ( (startIsClick == 0) && (pauseIsClick == 1) 
      +                          && (stopIsClick == 0) && (menu_selected == MAIN_MENU))
  2361  00134E  0100               	movlb	0	; () banked
  2362  001350  51FD               	movf	_startIsClick& (0+255),w,b
  2363  001352  A4D8               	btfss	status,2,c
  2364  001354  EFAE  F009         	goto	u7161
  2365  001358  EFB0  F009         	goto	u7160
  2366  00135C                     u7161:
  2367  00135C  EFCF  F009         	goto	l340
  2368  001360                     u7160:
  2369  001360                     
  2370                           ; BSR set to: 0
  2371  001360  05FE               	decf	_pauseIsClick& (0+255),w,b
  2372  001362  A4D8               	btfss	status,2,c
  2373  001364  EFB6  F009         	goto	u7171
  2374  001368  EFB8  F009         	goto	u7170
  2375  00136C                     u7171:
  2376  00136C  EFCF  F009         	goto	l340
  2377  001370                     u7170:
  2378  001370                     
  2379                           ; BSR set to: 0
  2380  001370  51FC               	movf	_stopIsClick& (0+255),w,b
  2381  001372  A4D8               	btfss	status,2,c
  2382  001374  EFBE  F009         	goto	u7181
  2383  001378  EFC0  F009         	goto	u7180
  2384  00137C                     u7181:
  2385  00137C  EFCF  F009         	goto	l340
  2386  001380                     u7180:
  2387  001380                     
  2388                           ; BSR set to: 0
  2389  001380  51FB               	movf	_menu_selected& (0+255),w,b
  2390  001382  A4D8               	btfss	status,2,c
  2391  001384  EFC6  F009         	goto	u7191
  2392  001388  EFC8  F009         	goto	u7190
  2393  00138C                     u7191:
  2394  00138C  EFCF  F009         	goto	l340
  2395  001390                     u7190:
  2396  001390                     
  2397                           ; BSR set to: 0
  2398                           ;fs_menu_controller.c: 227:             {;fs_menu_controller.c: 228:                 men
      +                          u_selected = PAUSE_MENU;
  2399  001390  0E06               	movlw	6
  2400  001392  6FFB               	movwf	_menu_selected& (0+255),b
  2401  001394                     
  2402                           ; BSR set to: 0
  2403                           ;fs_menu_controller.c: 229:                 LATDbits.LATD5 = 0;
  2404  001394  9A8C               	bcf	140,5,c	;volatile
  2405  001396                     
  2406                           ; BSR set to: 0
  2407                           ;fs_menu_controller.c: 230:                 LATCbits.LATC5 = 0;
  2408  001396  9A8B               	bcf	139,5,c	;volatile
  2409  001398                     
  2410                           ; BSR set to: 0
  2411                           ;fs_menu_controller.c: 231:                 LATCbits.LATC4 = 0;
  2412  001398  988B               	bcf	139,4,c	;volatile
  2413                           
  2414                           ;fs_menu_controller.c: 232:                 startIsClick = 0;
  2415  00139A  0E00               	movlw	0
  2416  00139C  6FFD               	movwf	_startIsClick& (0+255),b
  2417  00139E                     l340:
  2418                           
  2419                           ; BSR set to: 0
  2420                           ;fs_menu_controller.c: 235:             if ( (startIsClick == 0) && (pauseIsClick == 0) 
      +                          && (stopIsClick == 1) && (menu_selected == MAIN_MENU) )
  2421  00139E  51FD               	movf	_startIsClick& (0+255),w,b
  2422  0013A0  A4D8               	btfss	status,2,c
  2423  0013A2  EFD5  F009         	goto	u7201
  2424  0013A6  EFD7  F009         	goto	u7200
  2425  0013AA                     u7201:
  2426  0013AA  EFFB  F009         	goto	l5780
  2427  0013AE                     u7200:
  2428  0013AE                     
  2429                           ; BSR set to: 0
  2430  0013AE  51FE               	movf	_pauseIsClick& (0+255),w,b
  2431  0013B0  A4D8               	btfss	status,2,c
  2432  0013B2  EFDD  F009         	goto	u7211
  2433  0013B6  EFDF  F009         	goto	u7210
  2434  0013BA                     u7211:
  2435  0013BA  EFFB  F009         	goto	l5780
  2436  0013BE                     u7210:
  2437  0013BE                     
  2438                           ; BSR set to: 0
  2439  0013BE  05FC               	decf	_stopIsClick& (0+255),w,b
  2440  0013C0  A4D8               	btfss	status,2,c
  2441  0013C2  EFE5  F009         	goto	u7221
  2442  0013C6  EFE7  F009         	goto	u7220
  2443  0013CA                     u7221:
  2444  0013CA  EFFB  F009         	goto	l5780
  2445  0013CE                     u7220:
  2446  0013CE                     
  2447                           ; BSR set to: 0
  2448  0013CE  51FB               	movf	_menu_selected& (0+255),w,b
  2449  0013D0  A4D8               	btfss	status,2,c
  2450  0013D2  EFED  F009         	goto	u7231
  2451  0013D6  EFEF  F009         	goto	u7230
  2452  0013DA                     u7231:
  2453  0013DA  EFFB  F009         	goto	l5780
  2454  0013DE                     u7230:
  2455  0013DE                     
  2456                           ; BSR set to: 0
  2457                           ;fs_menu_controller.c: 236:             {;fs_menu_controller.c: 237:                  ti
      +                          mer_value.remainingMinute = menu_value.driver_time;
  2458  0013DE  C0F3  F192         	movff	_menu_value,_timer_value+3
  2459  0013E2                     
  2460                           ; BSR set to: 0
  2461                           ;fs_menu_controller.c: 238:                  timer_value.remainingSecond = 0;
  2462  0013E2  0E00               	movlw	0
  2463  0013E4  0101               	movlb	1	; () banked
  2464  0013E6  6F91               	movwf	(_timer_value+2)& (0+255),b
  2465                           
  2466                           ;fs_menu_controller.c: 239:                  timer_value.second = 0;
  2467  0013E8  0E00               	movlw	0
  2468  0013EA  6F8F               	movwf	_timer_value& (0+255),b
  2469                           
  2470                           ;fs_menu_controller.c: 240:                  timer_value.minute = 0;
  2471  0013EC  0E00               	movlw	0
  2472  0013EE  6F90               	movwf	(_timer_value+1)& (0+255),b
  2473  0013F0                     
  2474                           ; BSR set to: 1
  2475                           ;fs_menu_controller.c: 241:                  LATDbits.LATD5 = 0;
  2476  0013F0  9A8C               	bcf	140,5,c	;volatile
  2477  0013F2                     
  2478                           ; BSR set to: 1
  2479                           ;fs_menu_controller.c: 242:                  LATCbits.LATC5 = 0;
  2480  0013F2  9A8B               	bcf	139,5,c	;volatile
  2481  0013F4                     
  2482                           ; BSR set to: 1
  2483                           ;fs_menu_controller.c: 243:                  LATCbits.LATC4 = 0;
  2484  0013F4  988B               	bcf	139,4,c	;volatile
  2485  0013F6                     l5780:
  2486                           
  2487                           ;fs_menu_controller.c: 246:             if ( (startIsClick == 1) && (pauseIsClick == 0) 
      +                          && (stopIsClick == 0) )
  2488  0013F6  0100               	movlb	0	; () banked
  2489  0013F8  05FD               	decf	_startIsClick& (0+255),w,b
  2490  0013FA  A4D8               	btfss	status,2,c
  2491  0013FC  EF02  F00A         	goto	u7241
  2492  001400  EF04  F00A         	goto	u7240
  2493  001404                     u7241:
  2494  001404  EF30  F00E         	goto	l379
  2495  001408                     u7240:
  2496  001408                     
  2497                           ; BSR set to: 0
  2498  001408  51FE               	movf	_pauseIsClick& (0+255),w,b
  2499  00140A  A4D8               	btfss	status,2,c
  2500  00140C  EF0A  F00A         	goto	u7251
  2501  001410  EF0C  F00A         	goto	u7250
  2502  001414                     u7251:
  2503  001414  EF30  F00E         	goto	l379
  2504  001418                     u7250:
  2505  001418                     
  2506                           ; BSR set to: 0
  2507  001418  51FC               	movf	_stopIsClick& (0+255),w,b
  2508  00141A  A4D8               	btfss	status,2,c
  2509  00141C  EF12  F00A         	goto	u7261
  2510  001420  EF14  F00A         	goto	u7260
  2511  001424                     u7261:
  2512  001424  EF30  F00E         	goto	l379
  2513  001428                     u7260:
  2514  001428                     
  2515                           ; BSR set to: 0
  2516                           ;fs_menu_controller.c: 247:             {;fs_menu_controller.c: 248:                 sta
      +                          rtMotor();
  2517  001428  EC89  F02D         	call	_startMotor	;wreg free
  2518  00142C                     
  2519                           ;fs_menu_controller.c: 249:                 LATDbits.LATD5 = 1;
  2520  00142C  8A8C               	bsf	140,5,c	;volatile
  2521  00142E                     
  2522                           ;fs_menu_controller.c: 250:                 LATCbits.LATC5 = 1;
  2523  00142E  8A8B               	bsf	139,5,c	;volatile
  2524  001430                     
  2525                           ;fs_menu_controller.c: 251:                 LATCbits.LATC4 = 1;
  2526  001430  888B               	bsf	139,4,c	;volatile
  2527  001432  EF30  F00E         	goto	l379
  2528  001436                     l5794:
  2529                           
  2530                           ; BSR set to: 0
  2531                           ;fs_menu_controller.c: 259:             stopMotor();
  2532  001436  ECFB  F02C         	call	_stopMotor	;wreg free
  2533  00143A                     
  2534                           ;fs_menu_controller.c: 261:             if (menu_flags.menu_input_flag == 1)
  2535  00143A  0101               	movlb	1	; () banked
  2536  00143C  0597               	decf	_menu_flags& (0+255),w,b
  2537  00143E  A4D8               	btfss	status,2,c
  2538  001440  EF24  F00A         	goto	u7271
  2539  001444  EF26  F00A         	goto	u7270
  2540  001448                     u7271:
  2541  001448  EF2B  F00A         	goto	l5800
  2542  00144C                     u7270:
  2543  00144C                     
  2544                           ; BSR set to: 1
  2545                           ;fs_menu_controller.c: 262:             {;fs_menu_controller.c: 263:                 men
      +                          u_flags.menu_input_flag = 0;
  2546  00144C  0E00               	movlw	0
  2547  00144E  6F97               	movwf	_menu_flags& (0+255),b
  2548                           
  2549                           ;fs_menu_controller.c: 264:                 menu_selected = STOP_TIME_SETTING;
  2550  001450  0E02               	movlw	2
  2551  001452  0100               	movlb	0	; () banked
  2552  001454  6FFB               	movwf	_menu_selected& (0+255),b
  2553  001456                     l5800:
  2554                           
  2555                           ;fs_menu_controller.c: 267:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_value.driver_time < 30))
  2556  001456  0101               	movlb	1	; () banked
  2557  001458  059B               	decf	(_menu_flags+4)& (0+255),w,b
  2558  00145A  A4D8               	btfss	status,2,c
  2559  00145C  EF32  F00A         	goto	u7281
  2560  001460  EF34  F00A         	goto	u7280
  2561  001464                     u7281:
  2562  001464  EF50  F00A         	goto	l5818
  2563  001468                     u7280:
  2564  001468                     
  2565                           ; BSR set to: 1
  2566  001468  0E1E               	movlw	30
  2567  00146A  0100               	movlb	0	; () banked
  2568  00146C  61F3               	cpfslt	_menu_value& (0+255),b
  2569  00146E  EF3B  F00A         	goto	u7291
  2570  001472  EF3D  F00A         	goto	u7290
  2571  001476                     u7291:
  2572  001476  EF50  F00A         	goto	l5818
  2573  00147A                     u7290:
  2574  00147A                     
  2575                           ; BSR set to: 0
  2576                           ;fs_menu_controller.c: 268:             {;fs_menu_controller.c: 269:                 men
      +                          u_flags.menu_increase_flag = 0;
  2577  00147A  0E00               	movlw	0
  2578  00147C  0101               	movlb	1	; () banked
  2579  00147E  6F9B               	movwf	(_menu_flags+4)& (0+255),b
  2580  001480                     
  2581                           ; BSR set to: 1
  2582                           ;fs_menu_controller.c: 270:                 menu_value.driver_time++;
  2583  001480  0100               	movlb	0	; () banked
  2584  001482  2BF3               	incf	_menu_value& (0+255),f,b
  2585  001484                     
  2586                           ; BSR set to: 0
  2587                           ;fs_menu_controller.c: 271:                 eepromWrite(0x00,(uint8_t)menu_value.driver_
      +                          time);
  2588  001484  C0F3  F001         	movff	_menu_value,eepromWrite@data
  2589  001488  0E00               	movlw	0
  2590  00148A  ECD9  F02D         	call	_eepromWrite
  2591  00148E                     
  2592                           ;fs_menu_controller.c: 272:                 timer_value.minute =0 ;
  2593  00148E  0E00               	movlw	0
  2594  001490  0101               	movlb	1	; () banked
  2595  001492  6F90               	movwf	(_timer_value+1)& (0+255),b
  2596  001494                     
  2597                           ; BSR set to: 1
  2598                           ;fs_menu_controller.c: 273:                 timer_value.second = 0;
  2599  001494  0E00               	movlw	0
  2600  001496  6F8F               	movwf	_timer_value& (0+255),b
  2601  001498                     
  2602                           ; BSR set to: 1
  2603                           ;fs_menu_controller.c: 274:                 timer_value.remainingSecond = 0;
  2604  001498  0E00               	movlw	0
  2605  00149A  6F91               	movwf	(_timer_value+2)& (0+255),b
  2606  00149C                     
  2607                           ; BSR set to: 1
  2608                           ;fs_menu_controller.c: 275:                 timer_value.remainingMinute = menu_value.dri
      +                          ver_time;
  2609  00149C  C0F3  F192         	movff	_menu_value,_timer_value+3
  2610  0014A0                     l5818:
  2611                           
  2612                           ;fs_menu_controller.c: 278:             if ((menu_flags.menu_decrease_flag == 1) && (men
      +                          u_value.driver_time > 0))
  2613  0014A0  0101               	movlb	1	; () banked
  2614  0014A2  059C               	decf	(_menu_flags+5)& (0+255),w,b
  2615  0014A4  A4D8               	btfss	status,2,c
  2616  0014A6  EF57  F00A         	goto	u7301
  2617  0014AA  EF59  F00A         	goto	u7300
  2618  0014AE                     u7301:
  2619  0014AE  EF75  F00A         	goto	l5836
  2620  0014B2                     u7300:
  2621  0014B2                     
  2622                           ; BSR set to: 1
  2623  0014B2  0100               	movlb	0	; () banked
  2624  0014B4  51F3               	movf	_menu_value& (0+255),w,b
  2625  0014B6  B4D8               	btfsc	status,2,c
  2626  0014B8  EF60  F00A         	goto	u7311
  2627  0014BC  EF62  F00A         	goto	u7310
  2628  0014C0                     u7311:
  2629  0014C0  EF75  F00A         	goto	l5836
  2630  0014C4                     u7310:
  2631  0014C4                     
  2632                           ; BSR set to: 0
  2633                           ;fs_menu_controller.c: 279:             {;fs_menu_controller.c: 280:                  me
      +                          nu_flags.menu_decrease_flag = 0;
  2634  0014C4  0E00               	movlw	0
  2635  0014C6  0101               	movlb	1	; () banked
  2636  0014C8  6F9C               	movwf	(_menu_flags+5)& (0+255),b
  2637  0014CA                     
  2638                           ; BSR set to: 1
  2639                           ;fs_menu_controller.c: 281:                  menu_value.driver_time--;
  2640  0014CA  0100               	movlb	0	; () banked
  2641  0014CC  07F3               	decf	_menu_value& (0+255),f,b
  2642  0014CE                     
  2643                           ; BSR set to: 0
  2644                           ;fs_menu_controller.c: 282:                  eepromWrite(0x00,(uint8_t)menu_value.driver
      +                          _time);
  2645  0014CE  C0F3  F001         	movff	_menu_value,eepromWrite@data
  2646  0014D2  0E00               	movlw	0
  2647  0014D4  ECD9  F02D         	call	_eepromWrite
  2648  0014D8                     
  2649                           ;fs_menu_controller.c: 283:                  timer_value.minute =0 ;
  2650  0014D8  0E00               	movlw	0
  2651  0014DA  0101               	movlb	1	; () banked
  2652  0014DC  6F90               	movwf	(_timer_value+1)& (0+255),b
  2653  0014DE                     
  2654                           ; BSR set to: 1
  2655                           ;fs_menu_controller.c: 284:                  timer_value.second = 0;
  2656  0014DE  0E00               	movlw	0
  2657  0014E0  6F8F               	movwf	_timer_value& (0+255),b
  2658  0014E2                     
  2659                           ; BSR set to: 1
  2660                           ;fs_menu_controller.c: 285:                  timer_value.remainingSecond = 0;
  2661  0014E2  0E00               	movlw	0
  2662  0014E4  6F91               	movwf	(_timer_value+2)& (0+255),b
  2663  0014E6                     
  2664                           ; BSR set to: 1
  2665                           ;fs_menu_controller.c: 286:                  timer_value.remainingMinute = menu_value.dr
      +                          iver_time;
  2666  0014E6  C0F3  F192         	movff	_menu_value,_timer_value+3
  2667  0014EA                     l5836:
  2668                           
  2669                           ;fs_menu_controller.c: 288:             Lcd_Set_Cursor(1,1);
  2670  0014EA  0E01               	movlw	1
  2671  0014EC  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2672  0014EE  0E01               	movlw	1
  2673  0014F0  EC1C  F02B         	call	_Lcd_Set_Cursor
  2674  0014F4                     
  2675                           ;fs_menu_controller.c: 289:             Lcd_Write_String("HAREKT ZAMANI dk");
  2676  0014F4  0E68               	movlw	low STR_3
  2677  0014F6  6E05               	movwf	Lcd_Write_String@a^0,c
  2678  0014F8  0E06               	movlw	high STR_3
  2679  0014FA  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2680  0014FC  ECBE  F029         	call	_Lcd_Write_String	;wreg free
  2681  001500                     
  2682                           ;fs_menu_controller.c: 290:             Lcd_Set_Cursor(2,1);
  2683  001500  0E01               	movlw	1
  2684  001502  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2685  001504  0E02               	movlw	2
  2686  001506  EC1C  F02B         	call	_Lcd_Set_Cursor
  2687  00150A                     
  2688                           ;fs_menu_controller.c: 291:             sprintf(textCursor2,"%d               ",menu_val
      +                          ue.driver_time);
  2689  00150A  0EE3               	movlw	low stateMachine@textCursor2
  2690  00150C  0100               	movlb	0	; () banked
  2691  00150E  6FCF               	movwf	sprintf@s& (0+255),b
  2692  001510  0E00               	movlw	high stateMachine@textCursor2
  2693  001512  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2694  001514  0E01               	movlw	low STR_4
  2695  001516  6FD1               	movwf	sprintf@fmt& (0+255),b
  2696  001518  0E06               	movlw	high STR_4
  2697  00151A  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2698  00151C  C0F3  F0D3         	movff	_menu_value,?_sprintf+4
  2699  001520  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  2700  001522  EC04  F02C         	call	_sprintf	;wreg free
  2701  001526                     
  2702                           ;fs_menu_controller.c: 292:             Lcd_Write_String(textCursor2);
  2703  001526  0EE3               	movlw	low stateMachine@textCursor2
  2704  001528  6E05               	movwf	Lcd_Write_String@a^0,c
  2705  00152A  0E00               	movlw	high stateMachine@textCursor2
  2706  00152C  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2707  00152E  ECBE  F029         	call	_Lcd_Write_String	;wreg free
  2708  001532                     
  2709                           ;fs_menu_controller.c: 294:             if(timer_value.menu_login_delay == 100)
  2710  001532  0E64               	movlw	100
  2711  001534  0101               	movlb	1	; () banked
  2712  001536  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  2713  001538  A4D8               	btfss	status,2,c
  2714  00153A  EFA1  F00A         	goto	u7321
  2715  00153E  EFA3  F00A         	goto	u7320
  2716  001542                     u7321:
  2717  001542  EF30  F00E         	goto	l379
  2718  001546                     u7320:
  2719  001546                     l5848:
  2720                           
  2721                           ; BSR set to: 1
  2722                           ;fs_menu_controller.c: 295:             {;fs_menu_controller.c: 296:                 tim
      +                          er_value.menu_login_delay = 0;
  2723  001546  0E00               	movlw	0
  2724  001548  6F93               	movwf	(_timer_value+4)& (0+255),b
  2725                           
  2726                           ;fs_menu_controller.c: 297:                 menu_selected = PAUSE_MENU;
  2727  00154A  0E06               	movlw	6
  2728  00154C  0100               	movlb	0	; () banked
  2729  00154E  6FFB               	movwf	_menu_selected& (0+255),b
  2730  001550  EF30  F00E         	goto	l379
  2731  001554                     l5850:
  2732                           
  2733                           ; BSR set to: 0
  2734                           ;fs_menu_controller.c: 303:             stopMotor();
  2735  001554  ECFB  F02C         	call	_stopMotor	;wreg free
  2736  001558                     
  2737                           ;fs_menu_controller.c: 305:             if (menu_flags.menu_input_flag == 1)
  2738  001558  0101               	movlb	1	; () banked
  2739  00155A  0597               	decf	_menu_flags& (0+255),w,b
  2740  00155C  A4D8               	btfss	status,2,c
  2741  00155E  EFB3  F00A         	goto	u7331
  2742  001562  EFB5  F00A         	goto	u7330
  2743  001566                     u7331:
  2744  001566  EFBA  F00A         	goto	l5856
  2745  00156A                     u7330:
  2746  00156A                     
  2747                           ; BSR set to: 1
  2748                           ;fs_menu_controller.c: 306:             {;fs_menu_controller.c: 307:                 men
      +                          u_flags.menu_input_flag = 0;
  2749  00156A  0E00               	movlw	0
  2750  00156C  6F97               	movwf	_menu_flags& (0+255),b
  2751                           
  2752                           ;fs_menu_controller.c: 308:                 menu_selected = SPEED_LIMIT_SETTING;
  2753  00156E  0E03               	movlw	3
  2754  001570  0100               	movlb	0	; () banked
  2755  001572  6FFB               	movwf	_menu_selected& (0+255),b
  2756  001574                     l5856:
  2757                           
  2758                           ;fs_menu_controller.c: 311:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_value.stop_time < 250))
  2759  001574  0101               	movlb	1	; () banked
  2760  001576  059B               	decf	(_menu_flags+4)& (0+255),w,b
  2761  001578  A4D8               	btfss	status,2,c
  2762  00157A  EFC1  F00A         	goto	u7341
  2763  00157E  EFC3  F00A         	goto	u7340
  2764  001582                     u7341:
  2765  001582  EFD7  F00A         	goto	l5866
  2766  001586                     u7340:
  2767  001586                     
  2768                           ; BSR set to: 1
  2769  001586  0EFA               	movlw	250
  2770  001588  0100               	movlb	0	; () banked
  2771  00158A  61F4               	cpfslt	(_menu_value+1)& (0+255),b
  2772  00158C  EFCA  F00A         	goto	u7351
  2773  001590  EFCC  F00A         	goto	u7350
  2774  001594                     u7351:
  2775  001594  EFD7  F00A         	goto	l5866
  2776  001598                     u7350:
  2777  001598                     
  2778                           ; BSR set to: 0
  2779                           ;fs_menu_controller.c: 312:             {;fs_menu_controller.c: 313:                 men
      +                          u_flags.menu_increase_flag = 0;
  2780  001598  0E00               	movlw	0
  2781  00159A  0101               	movlb	1	; () banked
  2782  00159C  6F9B               	movwf	(_menu_flags+4)& (0+255),b
  2783  00159E                     
  2784                           ; BSR set to: 1
  2785                           ;fs_menu_controller.c: 314:                 menu_value.stop_time += 10;
  2786  00159E  0E0A               	movlw	10
  2787  0015A0  0100               	movlb	0	; () banked
  2788  0015A2  27F4               	addwf	(_menu_value+1)& (0+255),f,b
  2789  0015A4                     
  2790                           ; BSR set to: 0
  2791                           ;fs_menu_controller.c: 315:                 eepromWrite(0x01,(uint8_t)menu_value.stop_ti
      +                          me);
  2792  0015A4  C0F4  F001         	movff	_menu_value+1,eepromWrite@data
  2793  0015A8  0E01               	movlw	1
  2794  0015AA  ECD9  F02D         	call	_eepromWrite
  2795  0015AE                     l5866:
  2796                           
  2797                           ;fs_menu_controller.c: 318:             if ((menu_flags.menu_decrease_flag == 1) && (men
      +                          u_value.stop_time > 10))
  2798  0015AE  0101               	movlb	1	; () banked
  2799  0015B0  059C               	decf	(_menu_flags+5)& (0+255),w,b
  2800  0015B2  A4D8               	btfss	status,2,c
  2801  0015B4  EFDE  F00A         	goto	u7361
  2802  0015B8  EFE0  F00A         	goto	u7360
  2803  0015BC                     u7361:
  2804  0015BC  EFF4  F00A         	goto	l352
  2805  0015C0                     u7360:
  2806  0015C0                     
  2807                           ; BSR set to: 1
  2808  0015C0  0E0A               	movlw	10
  2809  0015C2  0100               	movlb	0	; () banked
  2810  0015C4  65F4               	cpfsgt	(_menu_value+1)& (0+255),b
  2811  0015C6  EFE7  F00A         	goto	u7371
  2812  0015CA  EFE9  F00A         	goto	u7370
  2813  0015CE                     u7371:
  2814  0015CE  EFF4  F00A         	goto	l352
  2815  0015D2                     u7370:
  2816  0015D2                     
  2817                           ; BSR set to: 0
  2818                           ;fs_menu_controller.c: 319:             {;fs_menu_controller.c: 320:                  me
      +                          nu_flags.menu_decrease_flag = 0;
  2819  0015D2  0E00               	movlw	0
  2820  0015D4  0101               	movlb	1	; () banked
  2821  0015D6  6F9C               	movwf	(_menu_flags+5)& (0+255),b
  2822  0015D8                     
  2823                           ; BSR set to: 1
  2824                           ;fs_menu_controller.c: 321:                  menu_value.stop_time -= 10;
  2825  0015D8  0E0A               	movlw	10
  2826  0015DA  0100               	movlb	0	; () banked
  2827  0015DC  5FF4               	subwf	(_menu_value+1)& (0+255),f,b
  2828  0015DE                     
  2829                           ; BSR set to: 0
  2830                           ;fs_menu_controller.c: 322:                  eepromWrite(0x01,(uint8_t)menu_value.stop_t
      +                          ime);
  2831  0015DE  C0F4  F001         	movff	_menu_value+1,eepromWrite@data
  2832  0015E2  0E01               	movlw	1
  2833  0015E4  ECD9  F02D         	call	_eepromWrite
  2834  0015E8                     l352:
  2835                           
  2836                           ;fs_menu_controller.c: 324:             Lcd_Set_Cursor(1,1);
  2837  0015E8  0E01               	movlw	1
  2838  0015EA  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2839  0015EC  0E01               	movlw	1
  2840  0015EE  EC1C  F02B         	call	_Lcd_Set_Cursor
  2841  0015F2                     
  2842                           ;fs_menu_controller.c: 325:             Lcd_Write_String("DURMA ZAMANI  ms");
  2843  0015F2  0E79               	movlw	low STR_5
  2844  0015F4  6E05               	movwf	Lcd_Write_String@a^0,c
  2845  0015F6  0E06               	movlw	high STR_5
  2846  0015F8  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2847  0015FA  ECBE  F029         	call	_Lcd_Write_String	;wreg free
  2848  0015FE                     
  2849                           ;fs_menu_controller.c: 326:             Lcd_Set_Cursor(2,1);
  2850  0015FE  0E01               	movlw	1
  2851  001600  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2852  001602  0E02               	movlw	2
  2853  001604  EC1C  F02B         	call	_Lcd_Set_Cursor
  2854  001608                     
  2855                           ;fs_menu_controller.c: 327:             sprintf(textCursor2,"%d             ",menu_value
      +                          .stop_time);
  2856  001608  0EE3               	movlw	low stateMachine@textCursor2
  2857  00160A  0100               	movlb	0	; () banked
  2858  00160C  6FCF               	movwf	sprintf@s& (0+255),b
  2859  00160E  0E00               	movlw	high stateMachine@textCursor2
  2860  001610  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2861  001612  0E8A               	movlw	low STR_6
  2862  001614  6FD1               	movwf	sprintf@fmt& (0+255),b
  2863  001616  0E06               	movlw	high STR_6
  2864  001618  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2865  00161A  C0F4  F0D3         	movff	_menu_value+1,?_sprintf+4
  2866  00161E  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  2867  001620  EC04  F02C         	call	_sprintf	;wreg free
  2868  001624                     
  2869                           ;fs_menu_controller.c: 328:             Lcd_Write_String(textCursor2);
  2870  001624  0EE3               	movlw	low stateMachine@textCursor2
  2871  001626  6E05               	movwf	Lcd_Write_String@a^0,c
  2872  001628  0E00               	movlw	high stateMachine@textCursor2
  2873  00162A  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2874  00162C  ECBE  F029         	call	_Lcd_Write_String	;wreg free
  2875  001630                     
  2876                           ;fs_menu_controller.c: 330:             if(timer_value.menu_login_delay == 100)
  2877  001630  0E64               	movlw	100
  2878  001632  0101               	movlb	1	; () banked
  2879  001634  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  2880  001636  A4D8               	btfss	status,2,c
  2881  001638  EF20  F00B         	goto	u7381
  2882  00163C  EF22  F00B         	goto	u7380
  2883  001640                     u7381:
  2884  001640  EF30  F00E         	goto	l379
  2885  001644                     u7380:
  2886  001644  EFA3  F00A         	goto	l5848
  2887  001648                     l5888:
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;fs_menu_controller.c: 338:             stopMotor();
  2891  001648  ECFB  F02C         	call	_stopMotor	;wreg free
  2892  00164C                     
  2893                           ;fs_menu_controller.c: 340:             if (menu_flags.menu_input_flag == 1)
  2894  00164C  0101               	movlb	1	; () banked
  2895  00164E  0597               	decf	_menu_flags& (0+255),w,b
  2896  001650  A4D8               	btfss	status,2,c
  2897  001652  EF2D  F00B         	goto	u7391
  2898  001656  EF2F  F00B         	goto	u7390
  2899  00165A                     u7391:
  2900  00165A  EF34  F00B         	goto	l5894
  2901  00165E                     u7390:
  2902  00165E                     
  2903                           ; BSR set to: 1
  2904                           ;fs_menu_controller.c: 341:             {;fs_menu_controller.c: 342:                 men
      +                          u_flags.menu_input_flag = 0;
  2905  00165E  0E00               	movlw	0
  2906  001660  6F97               	movwf	_menu_flags& (0+255),b
  2907                           
  2908                           ;fs_menu_controller.c: 343:                 menu_selected = DRIVER_TIME_SETTING;
  2909  001662  0E01               	movlw	1
  2910  001664  0100               	movlb	0	; () banked
  2911  001666  6FFB               	movwf	_menu_selected& (0+255),b
  2912  001668                     l5894:
  2913                           
  2914                           ;fs_menu_controller.c: 346:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_value.speed_limit < 5))
  2915  001668  0101               	movlb	1	; () banked
  2916  00166A  059B               	decf	(_menu_flags+4)& (0+255),w,b
  2917  00166C  A4D8               	btfss	status,2,c
  2918  00166E  EF3B  F00B         	goto	u7401
  2919  001672  EF3D  F00B         	goto	u7400
  2920  001676                     u7401:
  2921  001676  EF50  F00B         	goto	l5904
  2922  00167A                     u7400:
  2923  00167A                     
  2924                           ; BSR set to: 1
  2925  00167A  0E05               	movlw	5
  2926  00167C  0100               	movlb	0	; () banked
  2927  00167E  61F5               	cpfslt	(_menu_value+2)& (0+255),b
  2928  001680  EF44  F00B         	goto	u7411
  2929  001684  EF46  F00B         	goto	u7410
  2930  001688                     u7411:
  2931  001688  EF50  F00B         	goto	l5904
  2932  00168C                     u7410:
  2933  00168C                     
  2934                           ; BSR set to: 0
  2935                           ;fs_menu_controller.c: 347:             {;fs_menu_controller.c: 348:                 men
      +                          u_flags.menu_increase_flag = 0;
  2936  00168C  0E00               	movlw	0
  2937  00168E  0101               	movlb	1	; () banked
  2938  001690  6F9B               	movwf	(_menu_flags+4)& (0+255),b
  2939  001692                     
  2940                           ; BSR set to: 1
  2941                           ;fs_menu_controller.c: 349:                 menu_value.speed_limit += 1;
  2942  001692  0100               	movlb	0	; () banked
  2943  001694  2BF5               	incf	(_menu_value+2)& (0+255),f,b
  2944  001696                     
  2945                           ; BSR set to: 0
  2946                           ;fs_menu_controller.c: 350:                 eepromWrite(0x02,menu_value.speed_limit);
  2947  001696  C0F5  F001         	movff	_menu_value+2,eepromWrite@data
  2948  00169A  0E02               	movlw	2
  2949  00169C  ECD9  F02D         	call	_eepromWrite
  2950  0016A0                     l5904:
  2951                           
  2952                           ;fs_menu_controller.c: 353:             if ((menu_flags.menu_decrease_flag == 1) && (men
      +                          u_value.speed_limit > 1))
  2953  0016A0  0101               	movlb	1	; () banked
  2954  0016A2  059C               	decf	(_menu_flags+5)& (0+255),w,b
  2955  0016A4  A4D8               	btfss	status,2,c
  2956  0016A6  EF57  F00B         	goto	u7421
  2957  0016AA  EF59  F00B         	goto	u7420
  2958  0016AE                     u7421:
  2959  0016AE  EF6C  F00B         	goto	l5914
  2960  0016B2                     u7420:
  2961  0016B2                     
  2962                           ; BSR set to: 1
  2963  0016B2  0E01               	movlw	1
  2964  0016B4  0100               	movlb	0	; () banked
  2965  0016B6  65F5               	cpfsgt	(_menu_value+2)& (0+255),b
  2966  0016B8  EF60  F00B         	goto	u7431
  2967  0016BC  EF62  F00B         	goto	u7430
  2968  0016C0                     u7431:
  2969  0016C0  EF6C  F00B         	goto	l5914
  2970  0016C4                     u7430:
  2971  0016C4                     
  2972                           ; BSR set to: 0
  2973                           ;fs_menu_controller.c: 354:             {;fs_menu_controller.c: 355:                  me
      +                          nu_flags.menu_decrease_flag = 0;
  2974  0016C4  0E00               	movlw	0
  2975  0016C6  0101               	movlb	1	; () banked
  2976  0016C8  6F9C               	movwf	(_menu_flags+5)& (0+255),b
  2977  0016CA                     
  2978                           ; BSR set to: 1
  2979                           ;fs_menu_controller.c: 356:                  menu_value.speed_limit -= 1;
  2980  0016CA  0100               	movlb	0	; () banked
  2981  0016CC  07F5               	decf	(_menu_value+2)& (0+255),f,b
  2982  0016CE                     
  2983                           ; BSR set to: 0
  2984                           ;fs_menu_controller.c: 357:                  eepromWrite(0x02,menu_value.speed_limit);
  2985  0016CE  C0F5  F001         	movff	_menu_value+2,eepromWrite@data
  2986  0016D2  0E02               	movlw	2
  2987  0016D4  ECD9  F02D         	call	_eepromWrite
  2988  0016D8                     l5914:
  2989                           
  2990                           ;fs_menu_controller.c: 359:             Lcd_Set_Cursor(1,1);
  2991  0016D8  0E01               	movlw	1
  2992  0016DA  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2993  0016DC  0E01               	movlw	1
  2994  0016DE  EC1C  F02B         	call	_Lcd_Set_Cursor
  2995  0016E2                     
  2996                           ;fs_menu_controller.c: 360:             Lcd_Write_String("HIZ LiMiTi      ");
  2997  0016E2  0E24               	movlw	low STR_7
  2998  0016E4  6E05               	movwf	Lcd_Write_String@a^0,c
  2999  0016E6  0E06               	movlw	high STR_7
  3000  0016E8  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3001  0016EA  ECBE  F029         	call	_Lcd_Write_String	;wreg free
  3002  0016EE                     
  3003                           ;fs_menu_controller.c: 361:             Lcd_Set_Cursor(2,1);
  3004  0016EE  0E01               	movlw	1
  3005  0016F0  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3006  0016F2  0E02               	movlw	2
  3007  0016F4  EC1C  F02B         	call	_Lcd_Set_Cursor
  3008  0016F8                     
  3009                           ;fs_menu_controller.c: 362:             sprintf(textCursor2,"%d               ",menu_val
      +                          ue.speed_limit);
  3010  0016F8  0EE3               	movlw	low stateMachine@textCursor2
  3011  0016FA  0100               	movlb	0	; () banked
  3012  0016FC  6FCF               	movwf	sprintf@s& (0+255),b
  3013  0016FE  0E00               	movlw	high stateMachine@textCursor2
  3014  001700  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3015  001702  0E01               	movlw	low STR_4
  3016  001704  6FD1               	movwf	sprintf@fmt& (0+255),b
  3017  001706  0E06               	movlw	high STR_4
  3018  001708  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3019  00170A  C0F5  F0D3         	movff	_menu_value+2,?_sprintf+4
  3020  00170E  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  3021  001710  EC04  F02C         	call	_sprintf	;wreg free
  3022  001714                     
  3023                           ;fs_menu_controller.c: 363:             Lcd_Write_String(textCursor2);
  3024  001714  0EE3               	movlw	low stateMachine@textCursor2
  3025  001716  6E05               	movwf	Lcd_Write_String@a^0,c
  3026  001718  0E00               	movlw	high stateMachine@textCursor2
  3027  00171A  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3028  00171C  ECBE  F029         	call	_Lcd_Write_String	;wreg free
  3029  001720                     
  3030                           ;fs_menu_controller.c: 365:             if(timer_value.menu_login_delay == 100)
  3031  001720  0E64               	movlw	100
  3032  001722  0101               	movlb	1	; () banked
  3033  001724  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  3034  001726  A4D8               	btfss	status,2,c
  3035  001728  EF98  F00B         	goto	u7441
  3036  00172C  EF9A  F00B         	goto	u7440
  3037  001730                     u7441:
  3038  001730  EF30  F00E         	goto	l379
  3039  001734                     u7440:
  3040  001734  EFA3  F00A         	goto	l5848
  3041  001738                     l5928:
  3042                           
  3043                           ; BSR set to: 0
  3044                           ;fs_menu_controller.c: 373:             startIsClick = 0;
  3045  001738  0E00               	movlw	0
  3046  00173A  6FFD               	movwf	_startIsClick& (0+255),b
  3047                           
  3048                           ;fs_menu_controller.c: 374:             pauseIsClick = 0;
  3049  00173C  0E00               	movlw	0
  3050  00173E  6FFE               	movwf	_pauseIsClick& (0+255),b
  3051                           
  3052                           ;fs_menu_controller.c: 375:             stopIsClick = 1;
  3053  001740  0E01               	movlw	1
  3054  001742  6FFC               	movwf	_stopIsClick& (0+255),b
  3055  001744                     
  3056                           ; BSR set to: 0
  3057                           ;fs_menu_controller.c: 377:             Lcd_Set_Cursor(1,1);
  3058  001744  0E01               	movlw	1
  3059  001746  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3060  001748  0E01               	movlw	1
  3061  00174A  EC1C  F02B         	call	_Lcd_Set_Cursor
  3062  00174E                     
  3063                           ;fs_menu_controller.c: 378:             Lcd_Write_String("ZAMAN DOLDU     ");
  3064  00174E  0E46               	movlw	low STR_9
  3065  001750  6E05               	movwf	Lcd_Write_String@a^0,c
  3066  001752  0E06               	movlw	high STR_9
  3067  001754  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3068  001756  ECBE  F029         	call	_Lcd_Write_String	;wreg free
  3069  00175A                     
  3070                           ;fs_menu_controller.c: 380:             timer_value.remainingSecond = 0;
  3071  00175A  0E00               	movlw	0
  3072  00175C  0101               	movlb	1	; () banked
  3073  00175E  6F91               	movwf	(_timer_value+2)& (0+255),b
  3074  001760                     
  3075                           ; BSR set to: 1
  3076                           ;fs_menu_controller.c: 381:             timer_value.remainingMinute = 0;
  3077  001760  0E00               	movlw	0
  3078  001762  6F92               	movwf	(_timer_value+3)& (0+255),b
  3079  001764                     
  3080                           ; BSR set to: 1
  3081                           ;fs_menu_controller.c: 383:             Lcd_Set_Cursor(2,1);
  3082  001764  0E01               	movlw	1
  3083  001766  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3084  001768  0E02               	movlw	2
  3085  00176A  EC1C  F02B         	call	_Lcd_Set_Cursor
  3086  00176E                     
  3087                           ;fs_menu_controller.c: 384:             sprintf(textCursor2,"      %d:%d    ",timer_valu
      +                          e.remainingMinute,timer_value.remainingSecond);
  3088  00176E  0EE3               	movlw	low stateMachine@textCursor2
  3089  001770  0100               	movlb	0	; () banked
  3090  001772  6FCF               	movwf	sprintf@s& (0+255),b
  3091  001774  0E00               	movlw	high stateMachine@textCursor2
  3092  001776  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3093  001778  0E9A               	movlw	low STR_10
  3094  00177A  6FD1               	movwf	sprintf@fmt& (0+255),b
  3095  00177C  0E06               	movlw	high STR_10
  3096  00177E  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3097  001780  0101               	movlb	1	; () banked
  3098  001782  5192               	movf	(_timer_value+3)& (0+255),w,b
  3099  001784  0100               	movlb	0	; () banked
  3100  001786  6FD3               	movwf	(?_sprintf+4)& (0+255),b
  3101  001788  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  3102  00178A  BFD3               	btfsc	(?_sprintf+4)& (0+255),7,b
  3103  00178C  07D4               	decf	(?_sprintf+5)& (0+255),f,b
  3104  00178E  C191  F0D5         	movff	_timer_value+2,?_sprintf+6
  3105  001792  6BD6               	clrf	(?_sprintf+7)& (0+255),b
  3106  001794  EC04  F02C         	call	_sprintf	;wreg free
  3107  001798                     
  3108                           ;fs_menu_controller.c: 385:             Lcd_Write_String(textCursor2);
  3109  001798  0EE3               	movlw	low stateMachine@textCursor2
  3110  00179A  6E05               	movwf	Lcd_Write_String@a^0,c
  3111  00179C  0E00               	movlw	high stateMachine@textCursor2
  3112  00179E  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3113  0017A0  ECBE  F029         	call	_Lcd_Write_String	;wreg free
  3114  0017A4                     
  3115                           ;fs_menu_controller.c: 387:         if (menu_flags.menu_start_flag == 1)
  3116  0017A4  0101               	movlb	1	; () banked
  3117  0017A6  0598               	decf	(_menu_flags+1)& (0+255),w,b
  3118  0017A8  A4D8               	btfss	status,2,c
  3119  0017AA  EFD9  F00B         	goto	u7451
  3120  0017AE  EFDB  F00B         	goto	u7450
  3121  0017B2                     u7451:
  3122  0017B2  EFEB  F00B         	goto	l5948
  3123  0017B6                     u7450:
  3124  0017B6                     
  3125                           ; BSR set to: 1
  3126                           ;fs_menu_controller.c: 388:         {;fs_menu_controller.c: 389:             menu_flags.
      +                          menu_start_flag = 0;
  3127  0017B6  0E00               	movlw	0
  3128  0017B8  6F98               	movwf	(_menu_flags+1)& (0+255),b
  3129                           
  3130                           ;fs_menu_controller.c: 390:             menu_selected = START_MENU;
  3131  0017BA  0E05               	movlw	5
  3132  0017BC  0100               	movlb	0	; () banked
  3133  0017BE  6FFB               	movwf	_menu_selected& (0+255),b
  3134                           
  3135                           ;fs_menu_controller.c: 392:             startIsClick = 1;
  3136  0017C0  0E01               	movlw	1
  3137  0017C2  6FFD               	movwf	_startIsClick& (0+255),b
  3138                           
  3139                           ;fs_menu_controller.c: 393:             pauseIsClick = 0;
  3140  0017C4  0E00               	movlw	0
  3141  0017C6  6FFE               	movwf	_pauseIsClick& (0+255),b
  3142                           
  3143                           ;fs_menu_controller.c: 394:             stopIsClick = 0;
  3144  0017C8  0E00               	movlw	0
  3145  0017CA  6FFC               	movwf	_stopIsClick& (0+255),b
  3146                           
  3147                           ;fs_menu_controller.c: 395:             timer_value.second = 0;
  3148  0017CC  0E00               	movlw	0
  3149  0017CE  0101               	movlb	1	; () banked
  3150  0017D0  6F8F               	movwf	_timer_value& (0+255),b
  3151                           
  3152                           ;fs_menu_controller.c: 396:             timer_value.minute = 0;
  3153  0017D2  0E00               	movlw	0
  3154  0017D4  6F90               	movwf	(_timer_value+1)& (0+255),b
  3155  0017D6                     l5948:
  3156                           
  3157                           ; BSR set to: 1
  3158                           ;fs_menu_controller.c: 399:         if ( timer_value.menu_login_delay == 100)
  3159  0017D6  0E64               	movlw	100
  3160  0017D8  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  3161  0017DA  A4D8               	btfss	status,2,c
  3162  0017DC  EFF2  F00B         	goto	u7461
  3163  0017E0  EFF4  F00B         	goto	u7460
  3164  0017E4                     u7461:
  3165  0017E4  EFF9  F00B         	goto	l5952
  3166  0017E8                     u7460:
  3167  0017E8                     
  3168                           ; BSR set to: 1
  3169                           ;fs_menu_controller.c: 400:         {;fs_menu_controller.c: 401:             timer_value
      +                          .menu_login_delay = 0;
  3170  0017E8  0E00               	movlw	0
  3171  0017EA  6F93               	movwf	(_timer_value+4)& (0+255),b
  3172                           
  3173                           ;fs_menu_controller.c: 402:             menu_selected = DRIVER_TIME_SETTING;
  3174  0017EC  0E01               	movlw	1
  3175  0017EE  0100               	movlb	0	; () banked
  3176  0017F0  6FFB               	movwf	_menu_selected& (0+255),b
  3177  0017F2                     l5952:
  3178                           
  3179                           ;fs_menu_controller.c: 404:         stopMotor();
  3180  0017F2  ECFB  F02C         	call	_stopMotor	;wreg free
  3181                           
  3182                           ;fs_menu_controller.c: 407:        break;
  3183  0017F6  EF30  F00E         	goto	l379
  3184  0017FA                     l362:
  3185                           
  3186                           ; BSR set to: 0
  3187                           ;fs_menu_controller.c: 410:             timer_value.remainingMinute = menu_value.driver_
      +                          time;
  3188  0017FA  C0F3  F192         	movff	_menu_value,_timer_value+3
  3189  0017FE                     
  3190                           ; BSR set to: 0
  3191                           ;fs_menu_controller.c: 411:             timer_value.remainingSecond = 0;
  3192  0017FE  0E00               	movlw	0
  3193  001800  0101               	movlb	1	; () banked
  3194  001802  6F91               	movwf	(_timer_value+2)& (0+255),b
  3195                           
  3196                           ;fs_menu_controller.c: 412:             startIsClick = 1;
  3197  001804  0E01               	movlw	1
  3198  001806  0100               	movlb	0	; () banked
  3199  001808  6FFD               	movwf	_startIsClick& (0+255),b
  3200                           
  3201                           ;fs_menu_controller.c: 413:             stopIsClick = 0;
  3202  00180A  0E00               	movlw	0
  3203  00180C  6FFC               	movwf	_stopIsClick& (0+255),b
  3204                           
  3205                           ;fs_menu_controller.c: 414:             menu_selected = MAIN_MENU;
  3206  00180E  0E00               	movlw	0
  3207  001810  6FFB               	movwf	_menu_selected& (0+255),b
  3208                           
  3209                           ;fs_menu_controller.c: 415:         break;
  3210  001812  EF30  F00E         	goto	l379
  3211  001816                     l5956:
  3212                           
  3213                           ; BSR set to: 0
  3214                           ;fs_menu_controller.c: 418:             startIsClick = 0;
  3215  001816  0E00               	movlw	0
  3216  001818  6FFD               	movwf	_startIsClick& (0+255),b
  3217  00181A                     
  3218                           ; BSR set to: 0
  3219                           ;fs_menu_controller.c: 422:             Lcd_Set_Cursor(1,1);
  3220  00181A  0E01               	movlw	1
  3221  00181C  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3222  00181E  0E01               	movlw	1
  3223  001820  EC1C  F02B         	call	_Lcd_Set_Cursor
  3224  001824                     
  3225                           ;fs_menu_controller.c: 423:             Lcd_Write_String("HAREKET DURDU   ");
  3226  001824  0E57               	movlw	low STR_11
  3227  001826  6E05               	movwf	Lcd_Write_String@a^0,c
  3228  001828  0E06               	movlw	high STR_11
  3229  00182A  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3230  00182C  ECBE  F029         	call	_Lcd_Write_String	;wreg free
  3231  001830                     
  3232                           ;fs_menu_controller.c: 424:             Lcd_Set_Cursor(2,1);
  3233  001830  0E01               	movlw	1
  3234  001832  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3235  001834  0E02               	movlw	2
  3236  001836  EC1C  F02B         	call	_Lcd_Set_Cursor
  3237  00183A                     
  3238                           ;fs_menu_controller.c: 425:             sprintf(textCursor2,"      %d:%d    ",timer_valu
      +                          e.remainingMinute,timer_value.remainingSecond);
  3239  00183A  0EE3               	movlw	low stateMachine@textCursor2
  3240  00183C  0100               	movlb	0	; () banked
  3241  00183E  6FCF               	movwf	sprintf@s& (0+255),b
  3242  001840  0E00               	movlw	high stateMachine@textCursor2
  3243  001842  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3244  001844  0E9A               	movlw	low STR_10
  3245  001846  6FD1               	movwf	sprintf@fmt& (0+255),b
  3246  001848  0E06               	movlw	high STR_10
  3247  00184A  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3248  00184C  0101               	movlb	1	; () banked
  3249  00184E  5192               	movf	(_timer_value+3)& (0+255),w,b
  3250  001850  0100               	movlb	0	; () banked
  3251  001852  6FD3               	movwf	(?_sprintf+4)& (0+255),b
  3252  001854  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  3253  001856  BFD3               	btfsc	(?_sprintf+4)& (0+255),7,b
  3254  001858  07D4               	decf	(?_sprintf+5)& (0+255),f,b
  3255  00185A  C191  F0D5         	movff	_timer_value+2,?_sprintf+6
  3256  00185E  6BD6               	clrf	(?_sprintf+7)& (0+255),b
  3257  001860  EC04  F02C         	call	_sprintf	;wreg free
  3258  001864                     
  3259                           ;fs_menu_controller.c: 426:             Lcd_Write_String(textCursor2);
  3260  001864  0EE3               	movlw	low stateMachine@textCursor2
  3261  001866  6E05               	movwf	Lcd_Write_String@a^0,c
  3262  001868  0E00               	movlw	high stateMachine@textCursor2
  3263  00186A  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3264  00186C  ECBE  F029         	call	_Lcd_Write_String	;wreg free
  3265  001870                     
  3266                           ;fs_menu_controller.c: 428:             if (menu_flags.menu_start_flag == 1)
  3267  001870  0101               	movlb	1	; () banked
  3268  001872  0598               	decf	(_menu_flags+1)& (0+255),w,b
  3269  001874  A4D8               	btfss	status,2,c
  3270  001876  EF3F  F00C         	goto	u7471
  3271  00187A  EF41  F00C         	goto	u7470
  3272  00187E                     u7471:
  3273  00187E  EF4C  F00C         	goto	l364
  3274  001882                     u7470:
  3275  001882                     
  3276                           ; BSR set to: 1
  3277                           ;fs_menu_controller.c: 429:             {;fs_menu_controller.c: 430:                 men
      +                          u_flags.menu_start_flag = 0;
  3278  001882  0E00               	movlw	0
  3279  001884  6F98               	movwf	(_menu_flags+1)& (0+255),b
  3280                           
  3281                           ;fs_menu_controller.c: 431:                 menu_selected = MAIN_MENU;
  3282  001886  0E00               	movlw	0
  3283  001888  0100               	movlb	0	; () banked
  3284  00188A  6FFB               	movwf	_menu_selected& (0+255),b
  3285                           
  3286                           ;fs_menu_controller.c: 433:                 startIsClick = 1;
  3287  00188C  0E01               	movlw	1
  3288  00188E  6FFD               	movwf	_startIsClick& (0+255),b
  3289                           
  3290                           ;fs_menu_controller.c: 434:                 pauseIsClick = 0;
  3291  001890  0E00               	movlw	0
  3292  001892  6FFE               	movwf	_pauseIsClick& (0+255),b
  3293                           
  3294                           ;fs_menu_controller.c: 435:                 stopIsClick = 0;
  3295  001894  0E00               	movlw	0
  3296  001896  6FFC               	movwf	_stopIsClick& (0+255),b
  3297  001898                     l364:
  3298                           
  3299                           ;fs_menu_controller.c: 438:             if ( (startIsClick == 0) && (pauseIsClick == 0) 
      +                          && (stopIsClick == 1) && (menu_selected == PAUSE_MENU))
  3300  001898  0100               	movlb	0	; () banked
  3301  00189A  51FD               	movf	_startIsClick& (0+255),w,b
  3302  00189C  A4D8               	btfss	status,2,c
  3303  00189E  EF53  F00C         	goto	u7481
  3304  0018A2  EF55  F00C         	goto	u7480
  3305  0018A6                     u7481:
  3306  0018A6  EF77  F00C         	goto	l5982
  3307  0018AA                     u7480:
  3308  0018AA                     
  3309                           ; BSR set to: 0
  3310  0018AA  51FE               	movf	_pauseIsClick& (0+255),w,b
  3311  0018AC  A4D8               	btfss	status,2,c
  3312  0018AE  EF5B  F00C         	goto	u7491
  3313  0018B2  EF5D  F00C         	goto	u7490
  3314  0018B6                     u7491:
  3315  0018B6  EF77  F00C         	goto	l5982
  3316  0018BA                     u7490:
  3317  0018BA                     
  3318                           ; BSR set to: 0
  3319  0018BA  05FC               	decf	_stopIsClick& (0+255),w,b
  3320  0018BC  A4D8               	btfss	status,2,c
  3321  0018BE  EF63  F00C         	goto	u7501
  3322  0018C2  EF65  F00C         	goto	u7500
  3323  0018C6                     u7501:
  3324  0018C6  EF77  F00C         	goto	l5982
  3325  0018CA                     u7500:
  3326  0018CA                     
  3327                           ; BSR set to: 0
  3328  0018CA  0E06               	movlw	6
  3329  0018CC  19FB               	xorwf	_menu_selected& (0+255),w,b
  3330  0018CE  A4D8               	btfss	status,2,c
  3331  0018D0  EF6C  F00C         	goto	u7511
  3332  0018D4  EF6E  F00C         	goto	u7510
  3333  0018D8                     u7511:
  3334  0018D8  EF77  F00C         	goto	l5982
  3335  0018DC                     u7510:
  3336  0018DC                     
  3337                           ; BSR set to: 0
  3338                           ;fs_menu_controller.c: 439:             {;fs_menu_controller.c: 440:                  ti
      +                          mer_value.remainingMinute = menu_value.driver_time;
  3339  0018DC  C0F3  F192         	movff	_menu_value,_timer_value+3
  3340  0018E0                     
  3341                           ; BSR set to: 0
  3342                           ;fs_menu_controller.c: 441:                  timer_value.remainingSecond = 0;
  3343  0018E0  0E00               	movlw	0
  3344  0018E2  0101               	movlb	1	; () banked
  3345  0018E4  6F91               	movwf	(_timer_value+2)& (0+255),b
  3346                           
  3347                           ;fs_menu_controller.c: 442:                  timer_value.second = 0;
  3348  0018E6  0E00               	movlw	0
  3349  0018E8  6F8F               	movwf	_timer_value& (0+255),b
  3350                           
  3351                           ;fs_menu_controller.c: 443:                  timer_value.minute = 0;
  3352  0018EA  0E00               	movlw	0
  3353  0018EC  6F90               	movwf	(_timer_value+1)& (0+255),b
  3354  0018EE                     l5982:
  3355                           
  3356                           ;fs_menu_controller.c: 446:             if ( timer_value.menu_login_delay == 100)
  3357  0018EE  0E64               	movlw	100
  3358  0018F0  0101               	movlb	1	; () banked
  3359  0018F2  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  3360  0018F4  A4D8               	btfss	status,2,c
  3361  0018F6  EF7F  F00C         	goto	u7521
  3362  0018FA  EF81  F00C         	goto	u7520
  3363  0018FE                     u7521:
  3364  0018FE  EF86  F00C         	goto	l5986
  3365  001902                     u7520:
  3366  001902                     
  3367                           ; BSR set to: 1
  3368                           ;fs_menu_controller.c: 447:             {;fs_menu_controller.c: 448:                 tim
      +                          er_value.menu_login_delay = 0;
  3369  001902  0E00               	movlw	0
  3370  001904  6F93               	movwf	(_timer_value+4)& (0+255),b
  3371                           
  3372                           ;fs_menu_controller.c: 449:                 menu_selected = DRIVER_TIME_SETTING;
  3373  001906  0E01               	movlw	1
  3374  001908  0100               	movlb	0	; () banked
  3375  00190A  6FFB               	movwf	_menu_selected& (0+255),b
  3376  00190C                     l5986:
  3377                           
  3378                           ;fs_menu_controller.c: 452:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_flags.menu_decrease_flag == 1))
  3379  00190C  0101               	movlb	1	; () banked
  3380  00190E  059B               	decf	(_menu_flags+4)& (0+255),w,b
  3381  001910  A4D8               	btfss	status,2,c
  3382  001912  EF8D  F00C         	goto	u7531
  3383  001916  EF8F  F00C         	goto	u7530
  3384  00191A                     u7531:
  3385  00191A  EFF9  F00B         	goto	l5952
  3386  00191E                     u7530:
  3387  00191E                     
  3388                           ; BSR set to: 1
  3389  00191E  059C               	decf	(_menu_flags+5)& (0+255),w,b
  3390  001920  A4D8               	btfss	status,2,c
  3391  001922  EF95  F00C         	goto	u7541
  3392  001926  EF97  F00C         	goto	u7540
  3393  00192A                     u7541:
  3394  00192A  EFF9  F00B         	goto	l5952
  3395  00192E                     u7540:
  3396  00192E                     
  3397                           ; BSR set to: 1
  3398                           ;fs_menu_controller.c: 453:             {;fs_menu_controller.c: 454:                 men
      +                          u_selected = SECRET_MENU;
  3399  00192E  0E08               	movlw	8
  3400  001930  0100               	movlb	0	; () banked
  3401  001932  6FFB               	movwf	_menu_selected& (0+255),b
  3402                           
  3403                           ;fs_menu_controller.c: 455:                 secretMenuCounter = 1;
  3404  001934  0E01               	movlw	1
  3405  001936  6FFA               	movwf	stateMachine@secretMenuCounter& (0+255),b
  3406  001938  EFF9  F00B         	goto	l5952
  3407  00193C                     l5994:
  3408                           
  3409                           ; BSR set to: 0
  3410                           ;fs_menu_controller.c: 467:             stopMotor();
  3411  00193C  ECFB  F02C         	call	_stopMotor	;wreg free
  3412  001940                     
  3413                           ;fs_menu_controller.c: 469:             if (menu_flags.menu_input_flag == 1)
  3414  001940  0101               	movlb	1	; () banked
  3415  001942  0597               	decf	_menu_flags& (0+255),w,b
  3416  001944  A4D8               	btfss	status,2,c
  3417  001946  EFA7  F00C         	goto	u7551
  3418  00194A  EFA9  F00C         	goto	u7550
  3419  00194E                     u7551:
  3420  00194E  EFB7  F00C         	goto	l6006
  3421  001952                     u7550:
  3422  001952                     
  3423                           ; BSR set to: 1
  3424                           ;fs_menu_controller.c: 470:             {;fs_menu_controller.c: 471:                 men
      +                          u_flags.menu_input_flag = 0;
  3425  001952  0E00               	movlw	0
  3426  001954  6F97               	movwf	_menu_flags& (0+255),b
  3427  001956                     
  3428                           ; BSR set to: 1
  3429                           ;fs_menu_controller.c: 472:                 secretMenuCounter++;
  3430  001956  0100               	movlb	0	; () banked
  3431  001958  2BFA               	incf	stateMachine@secretMenuCounter& (0+255),f,b
  3432  00195A                     
  3433                           ; BSR set to: 0
  3434                           ;fs_menu_controller.c: 474:                 if (secretMenuCounter >2)
  3435  00195A  0E02               	movlw	2
  3436  00195C  65FA               	cpfsgt	stateMachine@secretMenuCounter& (0+255),b
  3437  00195E  EFB3  F00C         	goto	u7561
  3438  001962  EFB5  F00C         	goto	u7560
  3439  001966                     u7561:
  3440  001966  EFB7  F00C         	goto	l6006
  3441  00196A                     u7560:
  3442  00196A                     
  3443                           ; BSR set to: 0
  3444                           ;fs_menu_controller.c: 475:                 {;fs_menu_controller.c: 476:                
      +                               secretMenuCounter = 1;
  3445  00196A  0E01               	movlw	1
  3446  00196C  6FFA               	movwf	stateMachine@secretMenuCounter& (0+255),b
  3447  00196E                     l6006:
  3448                           
  3449                           ;fs_menu_controller.c: 480:             if (secretMenuCounter == 1)
  3450  00196E  0100               	movlb	0	; () banked
  3451  001970  05FA               	decf	stateMachine@secretMenuCounter& (0+255),w,b
  3452  001972  A4D8               	btfss	status,2,c
  3453  001974  EFBE  F00C         	goto	u7571
  3454  001978  EFC0  F00C         	goto	u7570
  3455  00197C                     u7571:
  3456  00197C  EF54  F00D         	goto	l6034
  3457  001980                     u7570:
  3458  001980                     
  3459                           ; BSR set to: 0
  3460                           ;fs_menu_controller.c: 481:             {;fs_menu_controller.c: 482:                 Lcd
      +                          _Set_Cursor(1,1);
  3461  001980  0E01               	movlw	1
  3462  001982  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3463  001984  0E01               	movlw	1
  3464  001986  EC1C  F02B         	call	_Lcd_Set_Cursor
  3465  00198A                     
  3466                           ;fs_menu_controller.c: 483:                 Lcd_Write_String("PID PARAM       ");
  3467  00198A  0E13               	movlw	low STR_13
  3468  00198C  6E05               	movwf	Lcd_Write_String@a^0,c
  3469  00198E  0E06               	movlw	high STR_13
  3470  001990  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3471  001992  ECBE  F029         	call	_Lcd_Write_String	;wreg free
  3472  001996                     
  3473                           ;fs_menu_controller.c: 484:                 Lcd_Set_Cursor(2,1);
  3474  001996  0E01               	movlw	1
  3475  001998  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3476  00199A  0E02               	movlw	2
  3477  00199C  EC1C  F02B         	call	_Lcd_Set_Cursor
  3478  0019A0                     
  3479                           ;fs_menu_controller.c: 485:                 sprintf(textCursor2,"Kp:%5.1f     ",KP);
  3480  0019A0  0EE3               	movlw	low stateMachine@textCursor2
  3481  0019A2  0100               	movlb	0	; () banked
  3482  0019A4  6FCF               	movwf	sprintf@s& (0+255),b
  3483  0019A6  0E00               	movlw	high stateMachine@textCursor2
  3484  0019A8  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3485  0019AA  0EB9               	movlw	low STR_14
  3486  0019AC  6FD1               	movwf	sprintf@fmt& (0+255),b
  3487  0019AE  0E06               	movlw	high STR_14
  3488  0019B0  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3489  0019B2  C1BF  F0D3         	movff	_KP@fs_speed_controller$F1601,?_sprintf+4
  3490  0019B6  C1C0  F0D4         	movff	_KP@fs_speed_controller$F1601+1,?_sprintf+5
  3491  0019BA  C1C1  F0D5         	movff	_KP@fs_speed_controller$F1601+2,?_sprintf+6
  3492  0019BE  C1C2  F0D6         	movff	_KP@fs_speed_controller$F1601+3,?_sprintf+7
  3493  0019C2  EC04  F02C         	call	_sprintf	;wreg free
  3494  0019C6                     
  3495                           ;fs_menu_controller.c: 486:                 Lcd_Write_String(textCursor2);
  3496  0019C6  0EE3               	movlw	low stateMachine@textCursor2
  3497  0019C8  6E05               	movwf	Lcd_Write_String@a^0,c
  3498  0019CA  0E00               	movlw	high stateMachine@textCursor2
  3499  0019CC  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3500  0019CE  ECBE  F029         	call	_Lcd_Write_String	;wreg free
  3501  0019D2                     
  3502                           ;fs_menu_controller.c: 488:                 if ((menu_flags.menu_increase_flag == 1) && 
      +                          (KP < 2.5))
  3503  0019D2  0101               	movlb	1	; () banked
  3504  0019D4  059B               	decf	(_menu_flags+4)& (0+255),w,b
  3505  0019D6  A4D8               	btfss	status,2,c
  3506  0019D8  EFF0  F00C         	goto	u7581
  3507  0019DC  EFF2  F00C         	goto	u7580
  3508  0019E0                     u7581:
  3509  0019E0  EF28  F00D         	goto	l6026
  3510  0019E4                     u7580:
  3511  0019E4                     
  3512                           ; BSR set to: 1
  3513  0019E4  C1BF  F035         	movff	_KP@fs_speed_controller$F1601,___flge@ff1
  3514  0019E8  C1C0  F036         	movff	_KP@fs_speed_controller$F1601+1,___flge@ff1+1
  3515  0019EC  C1C1  F037         	movff	_KP@fs_speed_controller$F1601+2,___flge@ff1+2
  3516  0019F0  C1C2  F038         	movff	_KP@fs_speed_controller$F1601+3,___flge@ff1+3
  3517  0019F4  0E00               	movlw	0
  3518  0019F6  6E39               	movwf	___flge@ff2^0,c
  3519  0019F8  0E00               	movlw	0
  3520  0019FA  6E3A               	movwf	(___flge@ff2+1)^0,c
  3521  0019FC  0E20               	movlw	32
  3522  0019FE  6E3B               	movwf	(___flge@ff2+2)^0,c
  3523  001A00  0E40               	movlw	64
  3524  001A02  6E3C               	movwf	(___flge@ff2+3)^0,c
  3525  001A04  EC75  F025         	call	___flge	;wreg free
  3526  001A08  B0D8               	btfsc	status,0,c
  3527  001A0A  EF09  F00D         	goto	u7591
  3528  001A0E  EF0B  F00D         	goto	u7590
  3529  001A12                     u7591:
  3530  001A12  EF28  F00D         	goto	l6026
  3531  001A16                     u7590:
  3532  001A16                     
  3533                           ;fs_menu_controller.c: 489:                 {;fs_menu_controller.c: 490:                
      +                               menu_flags.menu_increase_flag = 0;
  3534  001A16  0E00               	movlw	0
  3535  001A18  0101               	movlb	1	; () banked
  3536  001A1A  6F9B               	movwf	(_menu_flags+4)& (0+255),b
  3537  001A1C                     
  3538                           ; BSR set to: 1
  3539                           ;fs_menu_controller.c: 491:                     KP += 0.1;
  3540  001A1C  C1BF  F035         	movff	_KP@fs_speed_controller$F1601,___fladd@b
  3541  001A20  C1C0  F036         	movff	_KP@fs_speed_controller$F1601+1,___fladd@b+1
  3542  001A24  C1C1  F037         	movff	_KP@fs_speed_controller$F1601+2,___fladd@b+2
  3543  001A28  C1C2  F038         	movff	_KP@fs_speed_controller$F1601+3,___fladd@b+3
  3544  001A2C  0ECD               	movlw	205
  3545  001A2E  6E39               	movwf	___fladd@a^0,c
  3546  001A30  0ECC               	movlw	204
  3547  001A32  6E3A               	movwf	(___fladd@a+1)^0,c
  3548  001A34  0ECC               	movlw	204
  3549  001A36  6E3B               	movwf	(___fladd@a+2)^0,c
  3550  001A38  0E3D               	movlw	61
  3551  001A3A  6E3C               	movwf	(___fladd@a+3)^0,c
  3552  001A3C  EC53  F015         	call	___fladd	;wreg free
  3553  001A40  C035  F1BF         	movff	?___fladd,_KP@fs_speed_controller$F1601
  3554  001A44  C036  F1C0         	movff	?___fladd+1,_KP@fs_speed_controller$F1601+1
  3555  001A48  C037  F1C1         	movff	?___fladd+2,_KP@fs_speed_controller$F1601+2
  3556  001A4C  C038  F1C2         	movff	?___fladd+3,_KP@fs_speed_controller$F1601+3
  3557  001A50                     l6026:
  3558                           
  3559                           ;fs_menu_controller.c: 494:                 if ((menu_flags.menu_decrease_flag == 1) && 
      +                          (KP >= 0))
  3560  001A50  0101               	movlb	1	; () banked
  3561  001A52  059C               	decf	(_menu_flags+5)& (0+255),w,b
  3562  001A54  A4D8               	btfss	status,2,c
  3563  001A56  EF2F  F00D         	goto	u7601
  3564  001A5A  EF31  F00D         	goto	u7600
  3565  001A5E                     u7601:
  3566  001A5E  EF54  F00D         	goto	l6034
  3567  001A62                     u7600:
  3568  001A62                     
  3569                           ; BSR set to: 1
  3570  001A62  BFC2               	btfsc	(_KP@fs_speed_controller$F1601+3)& (0+255),7,b
  3571  001A64  EF36  F00D         	goto	u7611
  3572  001A68  EF38  F00D         	goto	u7610
  3573  001A6C                     u7611:
  3574  001A6C  EF54  F00D         	goto	l6034
  3575  001A70                     u7610:
  3576  001A70                     
  3577                           ; BSR set to: 1
  3578                           ;fs_menu_controller.c: 495:                 {;fs_menu_controller.c: 496:                
      +                               menu_flags.menu_decrease_flag = 0;
  3579  001A70  0E00               	movlw	0
  3580  001A72  6F9C               	movwf	(_menu_flags+5)& (0+255),b
  3581  001A74                     
  3582                           ; BSR set to: 1
  3583                           ;fs_menu_controller.c: 497:                      KP -= 0.1;
  3584  001A74  C1BF  F045         	movff	_KP@fs_speed_controller$F1601,___flsub@b
  3585  001A78  C1C0  F046         	movff	_KP@fs_speed_controller$F1601+1,___flsub@b+1
  3586  001A7C  C1C1  F047         	movff	_KP@fs_speed_controller$F1601+2,___flsub@b+2
  3587  001A80  C1C2  F048         	movff	_KP@fs_speed_controller$F1601+3,___flsub@b+3
  3588  001A84  0ECD               	movlw	205
  3589  001A86  6E49               	movwf	___flsub@a^0,c
  3590  001A88  0ECC               	movlw	204
  3591  001A8A  6E4A               	movwf	(___flsub@a+1)^0,c
  3592  001A8C  0ECC               	movlw	204
  3593  001A8E  6E4B               	movwf	(___flsub@a+2)^0,c
  3594  001A90  0E3D               	movlw	61
  3595  001A92  6E4C               	movwf	(___flsub@a+3)^0,c
  3596  001A94  EC56  F02C         	call	___flsub	;wreg free
  3597  001A98  C045  F1BF         	movff	?___flsub,_KP@fs_speed_controller$F1601
  3598  001A9C  C046  F1C0         	movff	?___flsub+1,_KP@fs_speed_controller$F1601+1
  3599  001AA0  C047  F1C1         	movff	?___flsub+2,_KP@fs_speed_controller$F1601+2
  3600  001AA4  C048  F1C2         	movff	?___flsub+3,_KP@fs_speed_controller$F1601+3
  3601  001AA8                     l6034:
  3602                           
  3603                           ;fs_menu_controller.c: 501:             if (secretMenuCounter == 2)
  3604  001AA8  0E02               	movlw	2
  3605  001AAA  0100               	movlb	0	; () banked
  3606  001AAC  19FA               	xorwf	stateMachine@secretMenuCounter& (0+255),w,b
  3607  001AAE  A4D8               	btfss	status,2,c
  3608  001AB0  EF5C  F00D         	goto	u7621
  3609  001AB4  EF5E  F00D         	goto	u7620
  3610  001AB8                     u7621:
  3611  001AB8  EFF2  F00D         	goto	l6062
  3612  001ABC                     u7620:
  3613  001ABC                     
  3614                           ; BSR set to: 0
  3615                           ;fs_menu_controller.c: 502:             {;fs_menu_controller.c: 503:                 Lcd
      +                          _Set_Cursor(1,1);
  3616  001ABC  0E01               	movlw	1
  3617  001ABE  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3618  001AC0  0E01               	movlw	1
  3619  001AC2  EC1C  F02B         	call	_Lcd_Set_Cursor
  3620  001AC6                     
  3621                           ;fs_menu_controller.c: 504:                 Lcd_Write_String("PID PARAM       ");
  3622  001AC6  0E13               	movlw	low STR_13
  3623  001AC8  6E05               	movwf	Lcd_Write_String@a^0,c
  3624  001ACA  0E06               	movlw	high STR_13
  3625  001ACC  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3626  001ACE  ECBE  F029         	call	_Lcd_Write_String	;wreg free
  3627  001AD2                     
  3628                           ;fs_menu_controller.c: 505:                 Lcd_Set_Cursor(2,1);
  3629  001AD2  0E01               	movlw	1
  3630  001AD4  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3631  001AD6  0E02               	movlw	2
  3632  001AD8  EC1C  F02B         	call	_Lcd_Set_Cursor
  3633  001ADC                     
  3634                           ;fs_menu_controller.c: 506:                 sprintf(textCursor2,"Kd:%5.1f    ",KD);
  3635  001ADC  0EE3               	movlw	low stateMachine@textCursor2
  3636  001ADE  0100               	movlb	0	; () banked
  3637  001AE0  6FCF               	movwf	sprintf@s& (0+255),b
  3638  001AE2  0E00               	movlw	high stateMachine@textCursor2
  3639  001AE4  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3640  001AE6  0EC7               	movlw	low STR_16
  3641  001AE8  6FD1               	movwf	sprintf@fmt& (0+255),b
  3642  001AEA  0E06               	movlw	high STR_16
  3643  001AEC  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3644  001AEE  C1BB  F0D3         	movff	_KD@fs_speed_controller$F1602,?_sprintf+4
  3645  001AF2  C1BC  F0D4         	movff	_KD@fs_speed_controller$F1602+1,?_sprintf+5
  3646  001AF6  C1BD  F0D5         	movff	_KD@fs_speed_controller$F1602+2,?_sprintf+6
  3647  001AFA  C1BE  F0D6         	movff	_KD@fs_speed_controller$F1602+3,?_sprintf+7
  3648  001AFE  EC04  F02C         	call	_sprintf	;wreg free
  3649  001B02                     
  3650                           ;fs_menu_controller.c: 507:                 Lcd_Write_String(textCursor2);
  3651  001B02  0EE3               	movlw	low stateMachine@textCursor2
  3652  001B04  6E05               	movwf	Lcd_Write_String@a^0,c
  3653  001B06  0E00               	movlw	high stateMachine@textCursor2
  3654  001B08  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3655  001B0A  ECBE  F029         	call	_Lcd_Write_String	;wreg free
  3656  001B0E                     
  3657                           ;fs_menu_controller.c: 509:                 if ((menu_flags.menu_increase_flag == 1) && 
      +                          (KD < 2.5))
  3658  001B0E  0101               	movlb	1	; () banked
  3659  001B10  059B               	decf	(_menu_flags+4)& (0+255),w,b
  3660  001B12  A4D8               	btfss	status,2,c
  3661  001B14  EF8E  F00D         	goto	u7631
  3662  001B18  EF90  F00D         	goto	u7630
  3663  001B1C                     u7631:
  3664  001B1C  EFC6  F00D         	goto	l6054
  3665  001B20                     u7630:
  3666  001B20                     
  3667                           ; BSR set to: 1
  3668  001B20  C1BB  F035         	movff	_KD@fs_speed_controller$F1602,___flge@ff1
  3669  001B24  C1BC  F036         	movff	_KD@fs_speed_controller$F1602+1,___flge@ff1+1
  3670  001B28  C1BD  F037         	movff	_KD@fs_speed_controller$F1602+2,___flge@ff1+2
  3671  001B2C  C1BE  F038         	movff	_KD@fs_speed_controller$F1602+3,___flge@ff1+3
  3672  001B30  0E00               	movlw	0
  3673  001B32  6E39               	movwf	___flge@ff2^0,c
  3674  001B34  0E00               	movlw	0
  3675  001B36  6E3A               	movwf	(___flge@ff2+1)^0,c
  3676  001B38  0E20               	movlw	32
  3677  001B3A  6E3B               	movwf	(___flge@ff2+2)^0,c
  3678  001B3C  0E40               	movlw	64
  3679  001B3E  6E3C               	movwf	(___flge@ff2+3)^0,c
  3680  001B40  EC75  F025         	call	___flge	;wreg free
  3681  001B44  B0D8               	btfsc	status,0,c
  3682  001B46  EFA7  F00D         	goto	u7641
  3683  001B4A  EFA9  F00D         	goto	u7640
  3684  001B4E                     u7641:
  3685  001B4E  EFC6  F00D         	goto	l6054
  3686  001B52                     u7640:
  3687  001B52                     
  3688                           ;fs_menu_controller.c: 510:                 {;fs_menu_controller.c: 511:                
      +                               menu_flags.menu_increase_flag = 0;
  3689  001B52  0E00               	movlw	0
  3690  001B54  0101               	movlb	1	; () banked
  3691  001B56  6F9B               	movwf	(_menu_flags+4)& (0+255),b
  3692  001B58                     
  3693                           ; BSR set to: 1
  3694                           ;fs_menu_controller.c: 512:                     KD += 0.1;
  3695  001B58  C1BB  F035         	movff	_KD@fs_speed_controller$F1602,___fladd@b
  3696  001B5C  C1BC  F036         	movff	_KD@fs_speed_controller$F1602+1,___fladd@b+1
  3697  001B60  C1BD  F037         	movff	_KD@fs_speed_controller$F1602+2,___fladd@b+2
  3698  001B64  C1BE  F038         	movff	_KD@fs_speed_controller$F1602+3,___fladd@b+3
  3699  001B68  0ECD               	movlw	205
  3700  001B6A  6E39               	movwf	___fladd@a^0,c
  3701  001B6C  0ECC               	movlw	204
  3702  001B6E  6E3A               	movwf	(___fladd@a+1)^0,c
  3703  001B70  0ECC               	movlw	204
  3704  001B72  6E3B               	movwf	(___fladd@a+2)^0,c
  3705  001B74  0E3D               	movlw	61
  3706  001B76  6E3C               	movwf	(___fladd@a+3)^0,c
  3707  001B78  EC53  F015         	call	___fladd	;wreg free
  3708  001B7C  C035  F1BB         	movff	?___fladd,_KD@fs_speed_controller$F1602
  3709  001B80  C036  F1BC         	movff	?___fladd+1,_KD@fs_speed_controller$F1602+1
  3710  001B84  C037  F1BD         	movff	?___fladd+2,_KD@fs_speed_controller$F1602+2
  3711  001B88  C038  F1BE         	movff	?___fladd+3,_KD@fs_speed_controller$F1602+3
  3712  001B8C                     l6054:
  3713                           
  3714                           ;fs_menu_controller.c: 515:                 if ((menu_flags.menu_decrease_flag == 1) && 
      +                          (KD >= 0))
  3715  001B8C  0101               	movlb	1	; () banked
  3716  001B8E  059C               	decf	(_menu_flags+5)& (0+255),w,b
  3717  001B90  A4D8               	btfss	status,2,c
  3718  001B92  EFCD  F00D         	goto	u7651
  3719  001B96  EFCF  F00D         	goto	u7650
  3720  001B9A                     u7651:
  3721  001B9A  EFF2  F00D         	goto	l6062
  3722  001B9E                     u7650:
  3723  001B9E                     
  3724                           ; BSR set to: 1
  3725  001B9E  BFBE               	btfsc	(_KD@fs_speed_controller$F1602+3)& (0+255),7,b
  3726  001BA0  EFD4  F00D         	goto	u7661
  3727  001BA4  EFD6  F00D         	goto	u7660
  3728  001BA8                     u7661:
  3729  001BA8  EFF2  F00D         	goto	l6062
  3730  001BAC                     u7660:
  3731  001BAC                     
  3732                           ; BSR set to: 1
  3733                           ;fs_menu_controller.c: 516:                 {;fs_menu_controller.c: 517:                
      +                               menu_flags.menu_decrease_flag = 0;
  3734  001BAC  0E00               	movlw	0
  3735  001BAE  6F9C               	movwf	(_menu_flags+5)& (0+255),b
  3736  001BB0                     
  3737                           ; BSR set to: 1
  3738                           ;fs_menu_controller.c: 518:                      KD -= 0.1;
  3739  001BB0  C1BB  F045         	movff	_KD@fs_speed_controller$F1602,___flsub@b
  3740  001BB4  C1BC  F046         	movff	_KD@fs_speed_controller$F1602+1,___flsub@b+1
  3741  001BB8  C1BD  F047         	movff	_KD@fs_speed_controller$F1602+2,___flsub@b+2
  3742  001BBC  C1BE  F048         	movff	_KD@fs_speed_controller$F1602+3,___flsub@b+3
  3743  001BC0  0ECD               	movlw	205
  3744  001BC2  6E49               	movwf	___flsub@a^0,c
  3745  001BC4  0ECC               	movlw	204
  3746  001BC6  6E4A               	movwf	(___flsub@a+1)^0,c
  3747  001BC8  0ECC               	movlw	204
  3748  001BCA  6E4B               	movwf	(___flsub@a+2)^0,c
  3749  001BCC  0E3D               	movlw	61
  3750  001BCE  6E4C               	movwf	(___flsub@a+3)^0,c
  3751  001BD0  EC56  F02C         	call	___flsub	;wreg free
  3752  001BD4  C045  F1BB         	movff	?___flsub,_KD@fs_speed_controller$F1602
  3753  001BD8  C046  F1BC         	movff	?___flsub+1,_KD@fs_speed_controller$F1602+1
  3754  001BDC  C047  F1BD         	movff	?___flsub+2,_KD@fs_speed_controller$F1602+2
  3755  001BE0  C048  F1BE         	movff	?___flsub+3,_KD@fs_speed_controller$F1602+3
  3756  001BE4                     l6062:
  3757                           
  3758                           ;fs_menu_controller.c: 522:             if ( timer_value.menu_login_delay == 100)
  3759  001BE4  0E64               	movlw	100
  3760  001BE6  0101               	movlb	1	; () banked
  3761  001BE8  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  3762  001BEA  A4D8               	btfss	status,2,c
  3763  001BEC  EFFA  F00D         	goto	u7671
  3764  001BF0  EFFC  F00D         	goto	u7670
  3765  001BF4                     u7671:
  3766  001BF4  EF30  F00E         	goto	l379
  3767  001BF8                     u7670:
  3768  001BF8  EFA3  F00A         	goto	l5848
  3769  001BFC                     l6068:
  3770  001BFC  0100               	movlb	0	; () banked
  3771  001BFE  51FB               	movf	_menu_selected& (0+255),w,b
  3772  001C00  6FE1               	movwf	??_stateMachine& (0+255),b
  3773  001C02  6BE2               	clrf	(??_stateMachine+1)& (0+255),b
  3774                           
  3775                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3776                           ; Switch size 1, requested type "simple"
  3777                           ; Number of cases is 1, Range of values is 0 to 0
  3778                           ; switch strategies available:
  3779                           ; Name         Instructions Cycles
  3780                           ; simple_byte            4     3 (average)
  3781                           ;	Chosen strategy is simple_byte
  3782  001C04  51E2               	movf	(??_stateMachine+1)& (0+255),w,b
  3783  001C06  0A00               	xorlw	0	; case 0
  3784  001C08  B4D8               	btfsc	status,2,c
  3785  001C0A  EF09  F00E         	goto	l6322
  3786  001C0E  EF30  F00E         	goto	l379
  3787  001C12                     l6322:
  3788                           
  3789                           ; BSR set to: 0
  3790                           ; Switch size 1, requested type "simple"
  3791                           ; Number of cases is 9, Range of values is 0 to 8
  3792                           ; switch strategies available:
  3793                           ; Name         Instructions Cycles
  3794                           ; simple_byte           28    15 (average)
  3795                           ;	Chosen strategy is simple_byte
  3796  001C12  51E1               	movf	??_stateMachine& (0+255),w,b
  3797  001C14  0A00               	xorlw	0	; case 0
  3798  001C16  B4D8               	btfsc	status,2,c
  3799  001C18  EF54  F009         	goto	l5730
  3800  001C1C  0A01               	xorlw	1	; case 1
  3801  001C1E  B4D8               	btfsc	status,2,c
  3802  001C20  EF1B  F00A         	goto	l5794
  3803  001C24  0A03               	xorlw	3	; case 2
  3804  001C26  B4D8               	btfsc	status,2,c
  3805  001C28  EFAA  F00A         	goto	l5850
  3806  001C2C  0A01               	xorlw	1	; case 3
  3807  001C2E  B4D8               	btfsc	status,2,c
  3808  001C30  EF24  F00B         	goto	l5888
  3809  001C34  0A07               	xorlw	7	; case 4
  3810  001C36  B4D8               	btfsc	status,2,c
  3811  001C38  EF9C  F00B         	goto	l5928
  3812  001C3C  0A01               	xorlw	1	; case 5
  3813  001C3E  B4D8               	btfsc	status,2,c
  3814  001C40  EFFD  F00B         	goto	l362
  3815  001C44  0A03               	xorlw	3	; case 6
  3816  001C46  B4D8               	btfsc	status,2,c
  3817  001C48  EF0B  F00C         	goto	l5956
  3818  001C4C  0A01               	xorlw	1	; case 7
  3819  001C4E  B4D8               	btfsc	status,2,c
  3820  001C50  EF30  F00E         	goto	l379
  3821  001C54  0A0F               	xorlw	15	; case 8
  3822  001C56  B4D8               	btfsc	status,2,c
  3823  001C58  EF9E  F00C         	goto	l5994
  3824  001C5C  EF30  F00E         	goto	l379
  3825  001C60                     l379:
  3826  001C60  0012               	return		;funcret
  3827  001C62                     __end_of_stateMachine:
  3828                           	callstack 0
  3829                           
  3830 ;; *************** function _stopMotor *****************
  3831 ;; Defined at:
  3832 ;;		line 79 in file "fs_speed_controller.c"
  3833 ;; Parameters:    Size  Location     Type
  3834 ;;		None
  3835 ;; Auto vars:     Size  Location     Type
  3836 ;;		None
  3837 ;; Return value:  Size  Location     Type
  3838 ;;                  1    wreg      void 
  3839 ;; Registers used:
  3840 ;;		wreg, status,2, status,0, cstack
  3841 ;; Tracked objects:
  3842 ;;		On entry : 0/0
  3843 ;;		On exit  : 0/0
  3844 ;;		Unchanged: 0/0
  3845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3846 ;;      Params:         0       0       0       0       0       0       0
  3847 ;;      Locals:         0       0       0       0       0       0       0
  3848 ;;      Temps:          0       0       0       0       0       0       0
  3849 ;;      Totals:         0       0       0       0       0       0       0
  3850 ;;Total ram usage:        0 bytes
  3851 ;; Hardware stack levels used:    1
  3852 ;; Hardware stack levels required when called:    3
  3853 ;; This function calls:
  3854 ;;		_PWM1_setDC
  3855 ;;		_PWM2_setDC
  3856 ;; This function is called by:
  3857 ;;		_stateMachine
  3858 ;; This function uses a non-reentrant model
  3859 ;;
  3860                           
  3861                           	psect	text7
  3862  0059F6                     __ptext7:
  3863                           	callstack 0
  3864  0059F6                     _stopMotor:
  3865                           	callstack 25
  3866  0059F6                     
  3867                           ;fs_speed_controller.c: 81:     controller.rightMotorSpeed = 0;
  3868  0059F6  0E00               	movlw	0
  3869  0059F8  0101               	movlb	1	; () banked
  3870  0059FA  6F59               	movwf	(_controller+9)& (0+255),b
  3871  0059FC  0E00               	movlw	0
  3872  0059FE  6F58               	movwf	(_controller+8)& (0+255),b
  3873                           
  3874                           ;fs_speed_controller.c: 82:     controller.leftMotorSpeed = 0;
  3875  005A00  0E00               	movlw	0
  3876  005A02  6F57               	movwf	(_controller+7)& (0+255),b
  3877  005A04  0E00               	movlw	0
  3878  005A06  6F56               	movwf	(_controller+6)& (0+255),b
  3879                           
  3880                           ;fs_speed_controller.c: 83:     driver_limit.ortalama = 0;
  3881  005A08  0E00               	movlw	0
  3882  005A0A  6F8B               	movwf	(_driver_limit+8)& (0+255),b
  3883  005A0C  0E00               	movlw	0
  3884  005A0E  6F8C               	movwf	(_driver_limit+9)& (0+255),b
  3885  005A10  0E00               	movlw	0
  3886  005A12  6F8D               	movwf	(_driver_limit+10)& (0+255),b
  3887  005A14  0E00               	movlw	0
  3888  005A16  6F8E               	movwf	(_driver_limit+11)& (0+255),b
  3889  005A18                     
  3890                           ; BSR set to: 1
  3891                           ;fs_speed_controller.c: 84:     PWM1_setDC(controller.leftMotorSpeed);
  3892  005A18  C156  F058         	movff	_controller+6,PWM1_setDC@dutycycle
  3893  005A1C  C157  F059         	movff	_controller+7,PWM1_setDC@dutycycle+1
  3894  005A20  EC3A  F02A         	call	_PWM1_setDC	;wreg free
  3895  005A24                     
  3896                           ;fs_speed_controller.c: 85:     PWM2_setDC(controller.rightMotorSpeed);
  3897  005A24  C158  F058         	movff	_controller+8,PWM2_setDC@dutycycle
  3898  005A28  C159  F059         	movff	_controller+9,PWM2_setDC@dutycycle+1
  3899  005A2C  ECFD  F029         	call	_PWM2_setDC	;wreg free
  3900  005A30  0012               	return		;funcret
  3901  005A32                     __end_of_stopMotor:
  3902                           	callstack 0
  3903                           
  3904 ;; *************** function _startMotor *****************
  3905 ;; Defined at:
  3906 ;;		line 95 in file "fs_speed_controller.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;		None
  3909 ;; Auto vars:     Size  Location     Type
  3910 ;;		None
  3911 ;; Return value:  Size  Location     Type
  3912 ;;                  1    wreg      void 
  3913 ;; Registers used:
  3914 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3915 ;; Tracked objects:
  3916 ;;		On entry : 0/0
  3917 ;;		On exit  : 0/0
  3918 ;;		Unchanged: 0/0
  3919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3920 ;;      Params:         0       0       0       0       0       0       0
  3921 ;;      Locals:         0       0       0       0       0       0       0
  3922 ;;      Temps:          0       0       0       0       0       0       0
  3923 ;;      Totals:         0       0       0       0       0       0       0
  3924 ;;Total ram usage:        0 bytes
  3925 ;; Hardware stack levels used:    1
  3926 ;; Hardware stack levels required when called:    3
  3927 ;; This function calls:
  3928 ;;		_PWM1_setDC
  3929 ;;		_PWM2_setDC
  3930 ;;		_calculatedAverageValue
  3931 ;;		_scanAdcConversion
  3932 ;;		_speedControl
  3933 ;; This function is called by:
  3934 ;;		_stateMachine
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           	psect	text8
  3939  005B12                     __ptext8:
  3940                           	callstack 0
  3941  005B12                     _startMotor:
  3942                           	callstack 25
  3943  005B12                     
  3944                           ;fs_speed_controller.c: 97:         scanAdcConversion();
  3945  005B12  EC31  F00E         	call	_scanAdcConversion	;wreg free
  3946  005B16                     
  3947                           ;fs_speed_controller.c: 98:         calculatedAverageValue();
  3948  005B16  EC95  F01B         	call	_calculatedAverageValue	;wreg free
  3949  005B1A                     
  3950                           ;fs_speed_controller.c: 99:         speedControl(driver_limit.ortalama);
  3951  005B1A  C18B  F058         	movff	_driver_limit+8,speedControl@position
  3952  005B1E  C18C  F059         	movff	_driver_limit+9,speedControl@position+1
  3953  005B22  C18D  F05A         	movff	_driver_limit+10,speedControl@position+2
  3954  005B26  C18E  F05B         	movff	_driver_limit+11,speedControl@position+3
  3955  005B2A  EC6B  F020         	call	_speedControl	;wreg free
  3956                           
  3957                           ;fs_speed_controller.c: 100:         PWM1_setDC(controller.leftMotorSpeed);
  3958  005B2E  C156  F058         	movff	_controller+6,PWM1_setDC@dutycycle
  3959  005B32  C157  F059         	movff	_controller+7,PWM1_setDC@dutycycle+1
  3960  005B36  EC3A  F02A         	call	_PWM1_setDC	;wreg free
  3961                           
  3962                           ;fs_speed_controller.c: 101:         PWM2_setDC(controller.rightMotorSpeed);
  3963  005B3A  C158  F058         	movff	_controller+8,PWM2_setDC@dutycycle
  3964  005B3E  C159  F059         	movff	_controller+9,PWM2_setDC@dutycycle+1
  3965  005B42  ECFD  F029         	call	_PWM2_setDC	;wreg free
  3966  005B46  0012               	return		;funcret
  3967  005B48                     __end_of_startMotor:
  3968                           	callstack 0
  3969                           
  3970 ;; *************** function _speedControl *****************
  3971 ;; Defined at:
  3972 ;;		line 38 in file "fs_speed_controller.c"
  3973 ;; Parameters:    Size  Location     Type
  3974 ;;  position        4   87[COMRAM] float 
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;  pos             4    0        float 
  3977 ;; Return value:  Size  Location     Type
  3978 ;;                  1    wreg      void 
  3979 ;; Registers used:
  3980 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3981 ;; Tracked objects:
  3982 ;;		On entry : 0/0
  3983 ;;		On exit  : 0/0
  3984 ;;		Unchanged: 0/0
  3985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3986 ;;      Params:         4       0       0       0       0       0       0
  3987 ;;      Locals:         0       4       0       0       0       0       0
  3988 ;;      Temps:          2       0       0       0       0       0       0
  3989 ;;      Totals:         6       4       0       0       0       0       0
  3990 ;;Total ram usage:       10 bytes
  3991 ;; Hardware stack levels used:    1
  3992 ;; Hardware stack levels required when called:    2
  3993 ;; This function calls:
  3994 ;;		___fladd
  3995 ;;		___flmul
  3996 ;;		___fltol
  3997 ;;		___xxtofl
  3998 ;; This function is called by:
  3999 ;;		_startMotor
  4000 ;; This function uses a non-reentrant model
  4001 ;;
  4002                           
  4003                           	psect	text9
  4004  0040D6                     __ptext9:
  4005                           	callstack 0
  4006  0040D6                     _speedControl:
  4007                           	callstack 25
  4008  0040D6                     
  4009                           ;fs_speed_controller.c: 44:     controller.error = (int16_t)(position - 3400.0);
  4010  0040D6  0E00               	movlw	0
  4011  0040D8  6E39               	movwf	___fladd@a^0,c
  4012  0040DA  0E80               	movlw	128
  4013  0040DC  6E3A               	movwf	(___fladd@a+1)^0,c
  4014  0040DE  0E54               	movlw	84
  4015  0040E0  6E3B               	movwf	(___fladd@a+2)^0,c
  4016  0040E2  0EC5               	movlw	197
  4017  0040E4  6E3C               	movwf	(___fladd@a+3)^0,c
  4018  0040E6  C058  F035         	movff	speedControl@position,___fladd@b
  4019  0040EA  C059  F036         	movff	speedControl@position+1,___fladd@b+1
  4020  0040EE  C05A  F037         	movff	speedControl@position+2,___fladd@b+2
  4021  0040F2  C05B  F038         	movff	speedControl@position+3,___fladd@b+3
  4022  0040F6  EC53  F015         	call	___fladd	;wreg free
  4023  0040FA  C035  F04E         	movff	?___fladd,___fltol@f1
  4024  0040FE  C036  F04F         	movff	?___fladd+1,___fltol@f1+1
  4025  004102  C037  F050         	movff	?___fladd+2,___fltol@f1+2
  4026  004106  C038  F051         	movff	?___fladd+3,___fltol@f1+3
  4027  00410A  ECF2  F024         	call	___fltol	;wreg free
  4028  00410E  C04E  F150         	movff	?___fltol,_controller
  4029  004112  C04F  F151         	movff	?___fltol+1,_controller+1
  4030  004116  0E00               	movlw	0
  4031  004118  6E20               	movwf	___flmul@a^0,c
  4032  00411A  0E00               	movlw	0
  4033  00411C  6E21               	movwf	(___flmul@a+1)^0,c
  4034  00411E  0E80               	movlw	128
  4035  004120  6E22               	movwf	(___flmul@a+2)^0,c
  4036  004122  0E3F               	movlw	63
  4037  004124  6E23               	movwf	(___flmul@a+3)^0,c
  4038  004126  0101               	movlb	1	; () banked
  4039  004128  5152               	movf	(_controller+2)& (0+255),w,b
  4040  00412A  5D50               	subwf	_controller& (0+255),w,b
  4041  00412C  6E5C               	movwf	??_speedControl^0,c
  4042  00412E  5153               	movf	(_controller+3)& (0+255),w,b
  4043  004130  5951               	subwfb	(_controller+1)& (0+255),w,b
  4044  004132  6E5D               	movwf	(??_speedControl+1)^0,c
  4045  004134  C05C  F00E         	movff	??_speedControl,___xxtofl@val
  4046  004138  C05D  F00F         	movff	??_speedControl+1,___xxtofl@val+1
  4047  00413C  0E00               	movlw	0
  4048  00413E  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  4049  004140  0EFF               	movlw	-1
  4050  004142  6E10               	movwf	(___xxtofl@val+2)^0,c
  4051  004144  6E11               	movwf	(___xxtofl@val+3)^0,c
  4052  004146  0E01               	movlw	1
  4053  004148  EC4A  F021         	call	___xxtofl
  4054  00414C  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4055  004150  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4056  004154  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4057  004158  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4058  00415C  ECB3  F017         	call	___flmul	;wreg free
  4059  004160  C01C  F039         	movff	?___flmul,___fladd@a
  4060  004164  C01D  F03A         	movff	?___flmul+1,___fladd@a+1
  4061  004168  C01E  F03B         	movff	?___flmul+2,___fladd@a+2
  4062  00416C  C01F  F03C         	movff	?___flmul+3,___fladd@a+3
  4063  004170  0ECD               	movlw	205
  4064  004172  6E20               	movwf	___flmul@a^0,c
  4065  004174  0ECC               	movlw	204
  4066  004176  6E21               	movwf	(___flmul@a+1)^0,c
  4067  004178  0E4C               	movlw	76
  4068  00417A  6E22               	movwf	(___flmul@a+2)^0,c
  4069  00417C  0E3E               	movlw	62
  4070  00417E  6E23               	movwf	(___flmul@a+3)^0,c
  4071  004180  C150  F00E         	movff	_controller,___xxtofl@val
  4072  004184  C151  F00F         	movff	_controller+1,___xxtofl@val+1
  4073  004188  0E00               	movlw	0
  4074  00418A  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  4075  00418C  0EFF               	movlw	-1
  4076  00418E  6E10               	movwf	(___xxtofl@val+2)^0,c
  4077  004190  6E11               	movwf	(___xxtofl@val+3)^0,c
  4078  004192  0E01               	movlw	1
  4079  004194  EC4A  F021         	call	___xxtofl
  4080  004198  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4081  00419C  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4082  0041A0  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4083  0041A4  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4084  0041A8  ECB3  F017         	call	___flmul	;wreg free
  4085  0041AC  C01C  F035         	movff	?___flmul,___fladd@b
  4086  0041B0  C01D  F036         	movff	?___flmul+1,___fladd@b+1
  4087  0041B4  C01E  F037         	movff	?___flmul+2,___fladd@b+2
  4088  0041B8  C01F  F038         	movff	?___flmul+3,___fladd@b+3
  4089  0041BC  EC53  F015         	call	___fladd	;wreg free
  4090  0041C0  C035  F04E         	movff	?___fladd,___fltol@f1
  4091  0041C4  C036  F04F         	movff	?___fladd+1,___fltol@f1+1
  4092  0041C8  C037  F050         	movff	?___fladd+2,___fltol@f1+2
  4093  0041CC  C038  F051         	movff	?___fladd+3,___fltol@f1+3
  4094  0041D0  ECF2  F024         	call	___fltol	;wreg free
  4095  0041D4  C04E  F154         	movff	?___fltol,_controller+4
  4096  0041D8  C04F  F155         	movff	?___fltol+1,_controller+5
  4097  0041DC                     
  4098                           ;fs_speed_controller.c: 46:     controller.lastError = controller.error;
  4099  0041DC  C150  F152         	movff	_controller,_controller+2
  4100  0041E0  C151  F153         	movff	_controller+1,_controller+3
  4101  0041E4                     
  4102                           ;fs_speed_controller.c: 48:    controller.leftMotorSpeed =(int16_t) (200 + controller.mo
      +                          torSpeed + 70);
  4103  0041E4  0E0E               	movlw	14
  4104  0041E6  0101               	movlb	1	; () banked
  4105  0041E8  2554               	addwf	(_controller+4)& (0+255),w,b
  4106  0041EA  6F56               	movwf	(_controller+6)& (0+255),b
  4107  0041EC  0E01               	movlw	1
  4108  0041EE  2155               	addwfc	(_controller+5)& (0+255),w,b
  4109  0041F0  6F57               	movwf	(_controller+7)& (0+255),b
  4110  0041F2                     
  4111                           ; BSR set to: 1
  4112                           ;fs_speed_controller.c: 49:    controller.rightMotorSpeed =(int16_t) (200 - controller.m
      +                          otorSpeed);
  4113  0041F2  5154               	movf	(_controller+4)& (0+255),w,b
  4114  0041F4  08C8               	sublw	200
  4115  0041F6  6F58               	movwf	(_controller+8)& (0+255),b
  4116  0041F8  5155               	movf	(_controller+5)& (0+255),w,b
  4117  0041FA  A0D8               	btfss	status,0,c
  4118  0041FC  2AE8               	incf	wreg,f,c
  4119  0041FE  0800               	sublw	0
  4120  004200  6F59               	movwf	(_controller+9)& (0+255),b
  4121  004202                     
  4122                           ; BSR set to: 1
  4123                           ;fs_speed_controller.c: 51:     if (controller.leftMotorSpeed < 50)
  4124  004202  BF57               	btfsc	(_controller+7)& (0+255),7,b
  4125  004204  EF0F  F021         	goto	u6760
  4126  004208  5157               	movf	(_controller+7)& (0+255),w,b
  4127  00420A  E107               	bnz	u6761
  4128  00420C  0E32               	movlw	50
  4129  00420E  5D56               	subwf	(_controller+6)& (0+255),w,b
  4130  004210  B0D8               	btfsc	status,0,c
  4131  004212  EF0D  F021         	goto	u6761
  4132  004216  EF0F  F021         	goto	u6760
  4133  00421A                     u6761:
  4134  00421A  EF13  F021         	goto	l5574
  4135  00421E                     u6760:
  4136  00421E                     
  4137                           ; BSR set to: 1
  4138                           ;fs_speed_controller.c: 52:     {;fs_speed_controller.c: 53:         controller.leftMoto
      +                          rSpeed = 50;
  4139  00421E  0E00               	movlw	0
  4140  004220  6F57               	movwf	(_controller+7)& (0+255),b
  4141  004222  0E32               	movlw	50
  4142  004224  6F56               	movwf	(_controller+6)& (0+255),b
  4143  004226                     l5574:
  4144                           
  4145                           ; BSR set to: 1
  4146                           ;fs_speed_controller.c: 56:     if (controller.rightMotorSpeed < 50)
  4147  004226  BF59               	btfsc	(_controller+9)& (0+255),7,b
  4148  004228  EF21  F021         	goto	u6770
  4149  00422C  5159               	movf	(_controller+9)& (0+255),w,b
  4150  00422E  E107               	bnz	u6771
  4151  004230  0E32               	movlw	50
  4152  004232  5D58               	subwf	(_controller+8)& (0+255),w,b
  4153  004234  B0D8               	btfsc	status,0,c
  4154  004236  EF1F  F021         	goto	u6771
  4155  00423A  EF21  F021         	goto	u6770
  4156  00423E                     u6771:
  4157  00423E  EF25  F021         	goto	l5578
  4158  004242                     u6770:
  4159  004242                     
  4160                           ; BSR set to: 1
  4161                           ;fs_speed_controller.c: 57:     {;fs_speed_controller.c: 58:       controller.rightMotor
      +                          Speed = 50;
  4162  004242  0E00               	movlw	0
  4163  004244  6F59               	movwf	(_controller+9)& (0+255),b
  4164  004246  0E32               	movlw	50
  4165  004248  6F58               	movwf	(_controller+8)& (0+255),b
  4166  00424A                     l5578:
  4167                           
  4168                           ; BSR set to: 1
  4169                           ;fs_speed_controller.c: 61:     if (controller.leftMotorSpeed > 350)
  4170  00424A  BF57               	btfsc	(_controller+7)& (0+255),7,b
  4171  00424C  EF31  F021         	goto	u6781
  4172  004250  0E5F               	movlw	95
  4173  004252  5D56               	subwf	(_controller+6)& (0+255),w,b
  4174  004254  0E01               	movlw	1
  4175  004256  5957               	subwfb	(_controller+7)& (0+255),w,b
  4176  004258  A0D8               	btfss	status,0,c
  4177  00425A  EF31  F021         	goto	u6781
  4178  00425E  EF33  F021         	goto	u6780
  4179  004262                     u6781:
  4180  004262  EF37  F021         	goto	l5582
  4181  004266                     u6780:
  4182  004266                     
  4183                           ; BSR set to: 1
  4184                           ;fs_speed_controller.c: 62:    {;fs_speed_controller.c: 63:         controller.leftMotor
      +                          Speed = 350;
  4185  004266  0E01               	movlw	1
  4186  004268  6F57               	movwf	(_controller+7)& (0+255),b
  4187  00426A  0E5E               	movlw	94
  4188  00426C  6F56               	movwf	(_controller+6)& (0+255),b
  4189  00426E                     l5582:
  4190                           
  4191                           ; BSR set to: 1
  4192                           ;fs_speed_controller.c: 66:     if (controller.rightMotorSpeed > 350)
  4193  00426E  BF59               	btfsc	(_controller+9)& (0+255),7,b
  4194  004270  EF43  F021         	goto	u6791
  4195  004274  0E5F               	movlw	95
  4196  004276  5D58               	subwf	(_controller+8)& (0+255),w,b
  4197  004278  0E01               	movlw	1
  4198  00427A  5959               	subwfb	(_controller+9)& (0+255),w,b
  4199  00427C  A0D8               	btfss	status,0,c
  4200  00427E  EF43  F021         	goto	u6791
  4201  004282  EF45  F021         	goto	u6790
  4202  004286                     u6791:
  4203  004286  EF49  F021         	goto	l437
  4204  00428A                     u6790:
  4205  00428A                     
  4206                           ; BSR set to: 1
  4207                           ;fs_speed_controller.c: 67:     {;fs_speed_controller.c: 68:         controller.rightMot
      +                          orSpeed = 350;
  4208  00428A  0E01               	movlw	1
  4209  00428C  6F59               	movwf	(_controller+9)& (0+255),b
  4210  00428E  0E5E               	movlw	94
  4211  004290  6F58               	movwf	(_controller+8)& (0+255),b
  4212  004292                     l437:
  4213                           
  4214                           ; BSR set to: 1
  4215  004292  0012               	return		;funcret
  4216  004294                     __end_of_speedControl:
  4217                           	callstack 0
  4218                           
  4219 ;; *************** function _scanAdcConversion *****************
  4220 ;; Defined at:
  4221 ;;		line 93 in file "fs_adc.c"
  4222 ;; Parameters:    Size  Location     Type
  4223 ;;		None
  4224 ;; Auto vars:     Size  Location     Type
  4225 ;;		None
  4226 ;; Return value:  Size  Location     Type
  4227 ;;                  1    wreg      void 
  4228 ;; Registers used:
  4229 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/0
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4235 ;;      Params:         0       0       0       0       0       0       0
  4236 ;;      Locals:         0       0       0       0       0       0       0
  4237 ;;      Temps:          2       0       0       0       0       0       0
  4238 ;;      Totals:         2       0       0       0       0       0       0
  4239 ;;Total ram usage:        2 bytes
  4240 ;; Hardware stack levels used:    1
  4241 ;; Hardware stack levels required when called:    2
  4242 ;; This function calls:
  4243 ;;		___fldiv
  4244 ;;		___flmul
  4245 ;;		___fltol
  4246 ;;		___xxtofl
  4247 ;;		_readAdcValue
  4248 ;; This function is called by:
  4249 ;;		_startMotor
  4250 ;; This function uses a non-reentrant model
  4251 ;;
  4252                           
  4253                           	psect	text10
  4254  001C62                     __ptext10:
  4255                           	callstack 0
  4256  001C62                     _scanAdcConversion:
  4257                           	callstack 25
  4258  001C62                     
  4259                           ;fs_adc.c: 95:     switch(timer_value.timer_0_counter)
  4260  001C62  EF05  F012         	goto	l5492
  4261  001C66                     l5440:
  4262                           
  4263                           ; BSR set to: 1
  4264                           ;fs_adc.c: 98:             adc_raw_data.channel_0 = readAdcValue(0);
  4265  001C66  0E00               	movlw	0
  4266  001C68  EC9B  F02C         	call	_readAdcValue
  4267  001C6C  C001  F173         	movff	?_readAdcValue,_adc_raw_data
  4268  001C70  C002  F174         	movff	?_readAdcValue+1,_adc_raw_data+1
  4269  001C74                     
  4270                           ;fs_adc.c: 99:             procces_data.channel_0 = (float)((adc_raw_data.channel_0*5.0)
      +                          /1024.0);
  4271  001C74  0E00               	movlw	0
  4272  001C76  6E20               	movwf	___flmul@a^0,c
  4273  001C78  0E00               	movlw	0
  4274  001C7A  6E21               	movwf	(___flmul@a+1)^0,c
  4275  001C7C  0EA0               	movlw	160
  4276  001C7E  6E22               	movwf	(___flmul@a+2)^0,c
  4277  001C80  0E40               	movlw	64
  4278  001C82  6E23               	movwf	(___flmul@a+3)^0,c
  4279  001C84  C173  F00E         	movff	_adc_raw_data,___xxtofl@val
  4280  001C88  C174  F00F         	movff	_adc_raw_data+1,___xxtofl@val+1
  4281  001C8C  6A10               	clrf	(___xxtofl@val+2)^0,c
  4282  001C8E  6A11               	clrf	(___xxtofl@val+3)^0,c
  4283  001C90  0E00               	movlw	0
  4284  001C92  EC4A  F021         	call	___xxtofl
  4285  001C96  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4286  001C9A  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4287  001C9E  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4288  001CA2  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4289  001CA6  ECB3  F017         	call	___flmul	;wreg free
  4290  001CAA  C01C  F035         	movff	?___flmul,___fldiv@b
  4291  001CAE  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4292  001CB2  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4293  001CB6  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4294  001CBA  0E00               	movlw	0
  4295  001CBC  6E39               	movwf	___fldiv@a^0,c
  4296  001CBE  0E00               	movlw	0
  4297  001CC0  6E3A               	movwf	(___fldiv@a+1)^0,c
  4298  001CC2  0E80               	movlw	128
  4299  001CC4  6E3B               	movwf	(___fldiv@a+2)^0,c
  4300  001CC6  0E44               	movlw	68
  4301  001CC8  6E3C               	movwf	(___fldiv@a+3)^0,c
  4302  001CCA  ECC8  F019         	call	___fldiv	;wreg free
  4303  001CCE  C035  F130         	movff	?___fldiv,_procces_data
  4304  001CD2  C036  F131         	movff	?___fldiv+1,_procces_data+1
  4305  001CD6  C037  F132         	movff	?___fldiv+2,_procces_data+2
  4306  001CDA  C038  F133         	movff	?___fldiv+3,_procces_data+3
  4307  001CDE                     
  4308                           ;fs_adc.c: 100:             convert_data.convert_channel_0 = (uint32_t)((procces_data.ch
      +                          annel_0*999)/5);
  4309  001CDE  0E00               	movlw	0
  4310  001CE0  6E39               	movwf	___fldiv@a^0,c
  4311  001CE2  0E00               	movlw	0
  4312  001CE4  6E3A               	movwf	(___fldiv@a+1)^0,c
  4313  001CE6  0EA0               	movlw	160
  4314  001CE8  6E3B               	movwf	(___fldiv@a+2)^0,c
  4315  001CEA  0E40               	movlw	64
  4316  001CEC  6E3C               	movwf	(___fldiv@a+3)^0,c
  4317  001CEE  0E00               	movlw	0
  4318  001CF0  6E20               	movwf	___flmul@a^0,c
  4319  001CF2  0EC0               	movlw	192
  4320  001CF4  6E21               	movwf	(___flmul@a+1)^0,c
  4321  001CF6  0E79               	movlw	121
  4322  001CF8  6E22               	movwf	(___flmul@a+2)^0,c
  4323  001CFA  0E44               	movlw	68
  4324  001CFC  6E23               	movwf	(___flmul@a+3)^0,c
  4325  001CFE  C130  F01C         	movff	_procces_data,___flmul@b
  4326  001D02  C131  F01D         	movff	_procces_data+1,___flmul@b+1
  4327  001D06  C132  F01E         	movff	_procces_data+2,___flmul@b+2
  4328  001D0A  C133  F01F         	movff	_procces_data+3,___flmul@b+3
  4329  001D0E  ECB3  F017         	call	___flmul	;wreg free
  4330  001D12  C01C  F035         	movff	?___flmul,___fldiv@b
  4331  001D16  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4332  001D1A  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4333  001D1E  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4334  001D22  ECC8  F019         	call	___fldiv	;wreg free
  4335  001D26  C035  F04E         	movff	?___fldiv,___fltol@f1
  4336  001D2A  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4337  001D2E  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4338  001D32  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4339  001D36  ECF2  F024         	call	___fltol	;wreg free
  4340  001D3A  C04E  F100         	movff	?___fltol,_convert_data
  4341  001D3E  C04F  F101         	movff	?___fltol+1,_convert_data+1
  4342  001D42  C050  F102         	movff	?___fltol+2,_convert_data+2
  4343  001D46  C051  F103         	movff	?___fltol+3,_convert_data+3
  4344                           
  4345                           ;fs_adc.c: 101:         break;
  4346  001D4A  EF33  F012         	goto	l54
  4347  001D4E                     l5446:
  4348                           
  4349                           ; BSR set to: 1
  4350                           ;fs_adc.c: 104:             adc_raw_data.channel_1 = readAdcValue(1);
  4351  001D4E  0E01               	movlw	1
  4352  001D50  EC9B  F02C         	call	_readAdcValue
  4353  001D54  C001  F175         	movff	?_readAdcValue,_adc_raw_data+2
  4354  001D58  C002  F176         	movff	?_readAdcValue+1,_adc_raw_data+3
  4355  001D5C                     
  4356                           ;fs_adc.c: 105:             procces_data.channel_1 = (float)((adc_raw_data.channel_1*5.0
      +                          )/1024.0);
  4357  001D5C  0E00               	movlw	0
  4358  001D5E  6E20               	movwf	___flmul@a^0,c
  4359  001D60  0E00               	movlw	0
  4360  001D62  6E21               	movwf	(___flmul@a+1)^0,c
  4361  001D64  0EA0               	movlw	160
  4362  001D66  6E22               	movwf	(___flmul@a+2)^0,c
  4363  001D68  0E40               	movlw	64
  4364  001D6A  6E23               	movwf	(___flmul@a+3)^0,c
  4365  001D6C  C175  F00E         	movff	_adc_raw_data+2,___xxtofl@val
  4366  001D70  C176  F00F         	movff	_adc_raw_data+3,___xxtofl@val+1
  4367  001D74  6A10               	clrf	(___xxtofl@val+2)^0,c
  4368  001D76  6A11               	clrf	(___xxtofl@val+3)^0,c
  4369  001D78  0E00               	movlw	0
  4370  001D7A  EC4A  F021         	call	___xxtofl
  4371  001D7E  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4372  001D82  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4373  001D86  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4374  001D8A  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4375  001D8E  ECB3  F017         	call	___flmul	;wreg free
  4376  001D92  C01C  F035         	movff	?___flmul,___fldiv@b
  4377  001D96  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4378  001D9A  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4379  001D9E  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4380  001DA2  0E00               	movlw	0
  4381  001DA4  6E39               	movwf	___fldiv@a^0,c
  4382  001DA6  0E00               	movlw	0
  4383  001DA8  6E3A               	movwf	(___fldiv@a+1)^0,c
  4384  001DAA  0E80               	movlw	128
  4385  001DAC  6E3B               	movwf	(___fldiv@a+2)^0,c
  4386  001DAE  0E44               	movlw	68
  4387  001DB0  6E3C               	movwf	(___fldiv@a+3)^0,c
  4388  001DB2  ECC8  F019         	call	___fldiv	;wreg free
  4389  001DB6  C035  F134         	movff	?___fldiv,_procces_data+4
  4390  001DBA  C036  F135         	movff	?___fldiv+1,_procces_data+5
  4391  001DBE  C037  F136         	movff	?___fldiv+2,_procces_data+6
  4392  001DC2  C038  F137         	movff	?___fldiv+3,_procces_data+7
  4393  001DC6                     
  4394                           ;fs_adc.c: 106:             convert_data.convert_channel_1 = (uint32_t)((procces_data.ch
      +                          annel_1*999)/5);
  4395  001DC6  0E00               	movlw	0
  4396  001DC8  6E39               	movwf	___fldiv@a^0,c
  4397  001DCA  0E00               	movlw	0
  4398  001DCC  6E3A               	movwf	(___fldiv@a+1)^0,c
  4399  001DCE  0EA0               	movlw	160
  4400  001DD0  6E3B               	movwf	(___fldiv@a+2)^0,c
  4401  001DD2  0E40               	movlw	64
  4402  001DD4  6E3C               	movwf	(___fldiv@a+3)^0,c
  4403  001DD6  0E00               	movlw	0
  4404  001DD8  6E20               	movwf	___flmul@a^0,c
  4405  001DDA  0EC0               	movlw	192
  4406  001DDC  6E21               	movwf	(___flmul@a+1)^0,c
  4407  001DDE  0E79               	movlw	121
  4408  001DE0  6E22               	movwf	(___flmul@a+2)^0,c
  4409  001DE2  0E44               	movlw	68
  4410  001DE4  6E23               	movwf	(___flmul@a+3)^0,c
  4411  001DE6  C134  F01C         	movff	_procces_data+4,___flmul@b
  4412  001DEA  C135  F01D         	movff	_procces_data+5,___flmul@b+1
  4413  001DEE  C136  F01E         	movff	_procces_data+6,___flmul@b+2
  4414  001DF2  C137  F01F         	movff	_procces_data+7,___flmul@b+3
  4415  001DF6  ECB3  F017         	call	___flmul	;wreg free
  4416  001DFA  C01C  F035         	movff	?___flmul,___fldiv@b
  4417  001DFE  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4418  001E02  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4419  001E06  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4420  001E0A  ECC8  F019         	call	___fldiv	;wreg free
  4421  001E0E  C035  F04E         	movff	?___fldiv,___fltol@f1
  4422  001E12  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4423  001E16  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4424  001E1A  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4425  001E1E  ECF2  F024         	call	___fltol	;wreg free
  4426  001E22  C04E  F104         	movff	?___fltol,_convert_data+4
  4427  001E26  C04F  F105         	movff	?___fltol+1,_convert_data+5
  4428  001E2A  C050  F106         	movff	?___fltol+2,_convert_data+6
  4429  001E2E  C051  F107         	movff	?___fltol+3,_convert_data+7
  4430                           
  4431                           ;fs_adc.c: 107:         break;
  4432  001E32  EF33  F012         	goto	l54
  4433  001E36                     l5452:
  4434                           
  4435                           ; BSR set to: 1
  4436                           ;fs_adc.c: 110:             adc_raw_data.channel_2 = readAdcValue(2);
  4437  001E36  0E02               	movlw	2
  4438  001E38  EC9B  F02C         	call	_readAdcValue
  4439  001E3C  C001  F177         	movff	?_readAdcValue,_adc_raw_data+4
  4440  001E40  C002  F178         	movff	?_readAdcValue+1,_adc_raw_data+5
  4441  001E44                     
  4442                           ;fs_adc.c: 111:             procces_data.channel_2 = (float)((adc_raw_data.channel_2*5.0
      +                          )/1024.0);
  4443  001E44  0E00               	movlw	0
  4444  001E46  6E20               	movwf	___flmul@a^0,c
  4445  001E48  0E00               	movlw	0
  4446  001E4A  6E21               	movwf	(___flmul@a+1)^0,c
  4447  001E4C  0EA0               	movlw	160
  4448  001E4E  6E22               	movwf	(___flmul@a+2)^0,c
  4449  001E50  0E40               	movlw	64
  4450  001E52  6E23               	movwf	(___flmul@a+3)^0,c
  4451  001E54  C177  F00E         	movff	_adc_raw_data+4,___xxtofl@val
  4452  001E58  C178  F00F         	movff	_adc_raw_data+5,___xxtofl@val+1
  4453  001E5C  6A10               	clrf	(___xxtofl@val+2)^0,c
  4454  001E5E  6A11               	clrf	(___xxtofl@val+3)^0,c
  4455  001E60  0E00               	movlw	0
  4456  001E62  EC4A  F021         	call	___xxtofl
  4457  001E66  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4458  001E6A  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4459  001E6E  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4460  001E72  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4461  001E76  ECB3  F017         	call	___flmul	;wreg free
  4462  001E7A  C01C  F035         	movff	?___flmul,___fldiv@b
  4463  001E7E  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4464  001E82  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4465  001E86  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4466  001E8A  0E00               	movlw	0
  4467  001E8C  6E39               	movwf	___fldiv@a^0,c
  4468  001E8E  0E00               	movlw	0
  4469  001E90  6E3A               	movwf	(___fldiv@a+1)^0,c
  4470  001E92  0E80               	movlw	128
  4471  001E94  6E3B               	movwf	(___fldiv@a+2)^0,c
  4472  001E96  0E44               	movlw	68
  4473  001E98  6E3C               	movwf	(___fldiv@a+3)^0,c
  4474  001E9A  ECC8  F019         	call	___fldiv	;wreg free
  4475  001E9E  C035  F138         	movff	?___fldiv,_procces_data+8
  4476  001EA2  C036  F139         	movff	?___fldiv+1,_procces_data+9
  4477  001EA6  C037  F13A         	movff	?___fldiv+2,_procces_data+10
  4478  001EAA  C038  F13B         	movff	?___fldiv+3,_procces_data+11
  4479  001EAE                     
  4480                           ;fs_adc.c: 112:             convert_data.convert_channel_2 = (uint32_t)((procces_data.ch
      +                          annel_2*999)/5);
  4481  001EAE  0E00               	movlw	0
  4482  001EB0  6E39               	movwf	___fldiv@a^0,c
  4483  001EB2  0E00               	movlw	0
  4484  001EB4  6E3A               	movwf	(___fldiv@a+1)^0,c
  4485  001EB6  0EA0               	movlw	160
  4486  001EB8  6E3B               	movwf	(___fldiv@a+2)^0,c
  4487  001EBA  0E40               	movlw	64
  4488  001EBC  6E3C               	movwf	(___fldiv@a+3)^0,c
  4489  001EBE  0E00               	movlw	0
  4490  001EC0  6E20               	movwf	___flmul@a^0,c
  4491  001EC2  0EC0               	movlw	192
  4492  001EC4  6E21               	movwf	(___flmul@a+1)^0,c
  4493  001EC6  0E79               	movlw	121
  4494  001EC8  6E22               	movwf	(___flmul@a+2)^0,c
  4495  001ECA  0E44               	movlw	68
  4496  001ECC  6E23               	movwf	(___flmul@a+3)^0,c
  4497  001ECE  C138  F01C         	movff	_procces_data+8,___flmul@b
  4498  001ED2  C139  F01D         	movff	_procces_data+9,___flmul@b+1
  4499  001ED6  C13A  F01E         	movff	_procces_data+10,___flmul@b+2
  4500  001EDA  C13B  F01F         	movff	_procces_data+11,___flmul@b+3
  4501  001EDE  ECB3  F017         	call	___flmul	;wreg free
  4502  001EE2  C01C  F035         	movff	?___flmul,___fldiv@b
  4503  001EE6  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4504  001EEA  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4505  001EEE  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4506  001EF2  ECC8  F019         	call	___fldiv	;wreg free
  4507  001EF6  C035  F04E         	movff	?___fldiv,___fltol@f1
  4508  001EFA  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4509  001EFE  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4510  001F02  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4511  001F06  ECF2  F024         	call	___fltol	;wreg free
  4512  001F0A  C04E  F108         	movff	?___fltol,_convert_data+8
  4513  001F0E  C04F  F109         	movff	?___fltol+1,_convert_data+9
  4514  001F12  C050  F10A         	movff	?___fltol+2,_convert_data+10
  4515  001F16  C051  F10B         	movff	?___fltol+3,_convert_data+11
  4516  001F1A                     
  4517                           ;fs_adc.c: 113:             convert_data.convert_channel_2_f = (uint16_t)((procces_data.
      +                          channel_2*999)/5);
  4518  001F1A  0E00               	movlw	0
  4519  001F1C  6E39               	movwf	___fldiv@a^0,c
  4520  001F1E  0E00               	movlw	0
  4521  001F20  6E3A               	movwf	(___fldiv@a+1)^0,c
  4522  001F22  0EA0               	movlw	160
  4523  001F24  6E3B               	movwf	(___fldiv@a+2)^0,c
  4524  001F26  0E40               	movlw	64
  4525  001F28  6E3C               	movwf	(___fldiv@a+3)^0,c
  4526  001F2A  0E00               	movlw	0
  4527  001F2C  6E20               	movwf	___flmul@a^0,c
  4528  001F2E  0EC0               	movlw	192
  4529  001F30  6E21               	movwf	(___flmul@a+1)^0,c
  4530  001F32  0E79               	movlw	121
  4531  001F34  6E22               	movwf	(___flmul@a+2)^0,c
  4532  001F36  0E44               	movlw	68
  4533  001F38  6E23               	movwf	(___flmul@a+3)^0,c
  4534  001F3A  C138  F01C         	movff	_procces_data+8,___flmul@b
  4535  001F3E  C139  F01D         	movff	_procces_data+9,___flmul@b+1
  4536  001F42  C13A  F01E         	movff	_procces_data+10,___flmul@b+2
  4537  001F46  C13B  F01F         	movff	_procces_data+11,___flmul@b+3
  4538  001F4A  ECB3  F017         	call	___flmul	;wreg free
  4539  001F4E  C01C  F035         	movff	?___flmul,___fldiv@b
  4540  001F52  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4541  001F56  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4542  001F5A  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4543  001F5E  ECC8  F019         	call	___fldiv	;wreg free
  4544  001F62  C035  F04E         	movff	?___fldiv,___fltol@f1
  4545  001F66  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4546  001F6A  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4547  001F6E  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4548  001F72  ECF2  F024         	call	___fltol	;wreg free
  4549  001F76  C04E  F124         	movff	?___fltol,_convert_data+36
  4550  001F7A  C04F  F125         	movff	?___fltol+1,_convert_data+37
  4551                           
  4552                           ;fs_adc.c: 114:         break;
  4553  001F7E  EF33  F012         	goto	l54
  4554  001F82                     l5460:
  4555                           
  4556                           ; BSR set to: 1
  4557                           ;fs_adc.c: 117:             adc_raw_data.channel_3 = readAdcValue(3);
  4558  001F82  0E03               	movlw	3
  4559  001F84  EC9B  F02C         	call	_readAdcValue
  4560  001F88  C001  F179         	movff	?_readAdcValue,_adc_raw_data+6
  4561  001F8C  C002  F17A         	movff	?_readAdcValue+1,_adc_raw_data+7
  4562  001F90                     
  4563                           ;fs_adc.c: 118:             procces_data.channel_3 = (float)((adc_raw_data.channel_3*5.0
      +                          )/1024.0);
  4564  001F90  0E00               	movlw	0
  4565  001F92  6E20               	movwf	___flmul@a^0,c
  4566  001F94  0E00               	movlw	0
  4567  001F96  6E21               	movwf	(___flmul@a+1)^0,c
  4568  001F98  0EA0               	movlw	160
  4569  001F9A  6E22               	movwf	(___flmul@a+2)^0,c
  4570  001F9C  0E40               	movlw	64
  4571  001F9E  6E23               	movwf	(___flmul@a+3)^0,c
  4572  001FA0  C179  F00E         	movff	_adc_raw_data+6,___xxtofl@val
  4573  001FA4  C17A  F00F         	movff	_adc_raw_data+7,___xxtofl@val+1
  4574  001FA8  6A10               	clrf	(___xxtofl@val+2)^0,c
  4575  001FAA  6A11               	clrf	(___xxtofl@val+3)^0,c
  4576  001FAC  0E00               	movlw	0
  4577  001FAE  EC4A  F021         	call	___xxtofl
  4578  001FB2  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4579  001FB6  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4580  001FBA  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4581  001FBE  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4582  001FC2  ECB3  F017         	call	___flmul	;wreg free
  4583  001FC6  C01C  F035         	movff	?___flmul,___fldiv@b
  4584  001FCA  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4585  001FCE  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4586  001FD2  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4587  001FD6  0E00               	movlw	0
  4588  001FD8  6E39               	movwf	___fldiv@a^0,c
  4589  001FDA  0E00               	movlw	0
  4590  001FDC  6E3A               	movwf	(___fldiv@a+1)^0,c
  4591  001FDE  0E80               	movlw	128
  4592  001FE0  6E3B               	movwf	(___fldiv@a+2)^0,c
  4593  001FE2  0E44               	movlw	68
  4594  001FE4  6E3C               	movwf	(___fldiv@a+3)^0,c
  4595  001FE6  ECC8  F019         	call	___fldiv	;wreg free
  4596  001FEA  C035  F13C         	movff	?___fldiv,_procces_data+12
  4597  001FEE  C036  F13D         	movff	?___fldiv+1,_procces_data+13
  4598  001FF2  C037  F13E         	movff	?___fldiv+2,_procces_data+14
  4599  001FF6  C038  F13F         	movff	?___fldiv+3,_procces_data+15
  4600  001FFA                     
  4601                           ;fs_adc.c: 119:             convert_data.convert_channel_3 = (uint32_t)((procces_data.ch
      +                          annel_3*999)/5);
  4602  001FFA  0E00               	movlw	0
  4603  001FFC  6E39               	movwf	___fldiv@a^0,c
  4604  001FFE  0E00               	movlw	0
  4605  002000  6E3A               	movwf	(___fldiv@a+1)^0,c
  4606  002002  0EA0               	movlw	160
  4607  002004  6E3B               	movwf	(___fldiv@a+2)^0,c
  4608  002006  0E40               	movlw	64
  4609  002008  6E3C               	movwf	(___fldiv@a+3)^0,c
  4610  00200A  0E00               	movlw	0
  4611  00200C  6E20               	movwf	___flmul@a^0,c
  4612  00200E  0EC0               	movlw	192
  4613  002010  6E21               	movwf	(___flmul@a+1)^0,c
  4614  002012  0E79               	movlw	121
  4615  002014  6E22               	movwf	(___flmul@a+2)^0,c
  4616  002016  0E44               	movlw	68
  4617  002018  6E23               	movwf	(___flmul@a+3)^0,c
  4618  00201A  C13C  F01C         	movff	_procces_data+12,___flmul@b
  4619  00201E  C13D  F01D         	movff	_procces_data+13,___flmul@b+1
  4620  002022  C13E  F01E         	movff	_procces_data+14,___flmul@b+2
  4621  002026  C13F  F01F         	movff	_procces_data+15,___flmul@b+3
  4622  00202A  ECB3  F017         	call	___flmul	;wreg free
  4623  00202E  C01C  F035         	movff	?___flmul,___fldiv@b
  4624  002032  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4625  002036  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4626  00203A  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4627  00203E  ECC8  F019         	call	___fldiv	;wreg free
  4628  002042  C035  F04E         	movff	?___fldiv,___fltol@f1
  4629  002046  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4630  00204A  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4631  00204E  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4632  002052  ECF2  F024         	call	___fltol	;wreg free
  4633  002056  C04E  F10C         	movff	?___fltol,_convert_data+12
  4634  00205A  C04F  F10D         	movff	?___fltol+1,_convert_data+13
  4635  00205E  C050  F10E         	movff	?___fltol+2,_convert_data+14
  4636  002062  C051  F10F         	movff	?___fltol+3,_convert_data+15
  4637                           
  4638                           ;fs_adc.c: 120:         break;
  4639  002066  EF33  F012         	goto	l54
  4640  00206A                     l5466:
  4641                           
  4642                           ; BSR set to: 1
  4643                           ;fs_adc.c: 123:             adc_raw_data.channel_4 = readAdcValue(4);
  4644  00206A  0E04               	movlw	4
  4645  00206C  EC9B  F02C         	call	_readAdcValue
  4646  002070  C001  F17B         	movff	?_readAdcValue,_adc_raw_data+8
  4647  002074  C002  F17C         	movff	?_readAdcValue+1,_adc_raw_data+9
  4648  002078                     
  4649                           ;fs_adc.c: 124:             procces_data.channel_4 = (float)((adc_raw_data.channel_4*5.0
      +                          )/1024.0);
  4650  002078  0E00               	movlw	0
  4651  00207A  6E20               	movwf	___flmul@a^0,c
  4652  00207C  0E00               	movlw	0
  4653  00207E  6E21               	movwf	(___flmul@a+1)^0,c
  4654  002080  0EA0               	movlw	160
  4655  002082  6E22               	movwf	(___flmul@a+2)^0,c
  4656  002084  0E40               	movlw	64
  4657  002086  6E23               	movwf	(___flmul@a+3)^0,c
  4658  002088  C17B  F00E         	movff	_adc_raw_data+8,___xxtofl@val
  4659  00208C  C17C  F00F         	movff	_adc_raw_data+9,___xxtofl@val+1
  4660  002090  6A10               	clrf	(___xxtofl@val+2)^0,c
  4661  002092  6A11               	clrf	(___xxtofl@val+3)^0,c
  4662  002094  0E00               	movlw	0
  4663  002096  EC4A  F021         	call	___xxtofl
  4664  00209A  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4665  00209E  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4666  0020A2  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4667  0020A6  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4668  0020AA  ECB3  F017         	call	___flmul	;wreg free
  4669  0020AE  C01C  F035         	movff	?___flmul,___fldiv@b
  4670  0020B2  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4671  0020B6  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4672  0020BA  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4673  0020BE  0E00               	movlw	0
  4674  0020C0  6E39               	movwf	___fldiv@a^0,c
  4675  0020C2  0E00               	movlw	0
  4676  0020C4  6E3A               	movwf	(___fldiv@a+1)^0,c
  4677  0020C6  0E80               	movlw	128
  4678  0020C8  6E3B               	movwf	(___fldiv@a+2)^0,c
  4679  0020CA  0E44               	movlw	68
  4680  0020CC  6E3C               	movwf	(___fldiv@a+3)^0,c
  4681  0020CE  ECC8  F019         	call	___fldiv	;wreg free
  4682  0020D2  C035  F140         	movff	?___fldiv,_procces_data+16
  4683  0020D6  C036  F141         	movff	?___fldiv+1,_procces_data+17
  4684  0020DA  C037  F142         	movff	?___fldiv+2,_procces_data+18
  4685  0020DE  C038  F143         	movff	?___fldiv+3,_procces_data+19
  4686  0020E2                     
  4687                           ;fs_adc.c: 125:             convert_data.convert_channel_4 = (uint32_t)((procces_data.ch
      +                          annel_4*999)/5);
  4688  0020E2  0E00               	movlw	0
  4689  0020E4  6E39               	movwf	___fldiv@a^0,c
  4690  0020E6  0E00               	movlw	0
  4691  0020E8  6E3A               	movwf	(___fldiv@a+1)^0,c
  4692  0020EA  0EA0               	movlw	160
  4693  0020EC  6E3B               	movwf	(___fldiv@a+2)^0,c
  4694  0020EE  0E40               	movlw	64
  4695  0020F0  6E3C               	movwf	(___fldiv@a+3)^0,c
  4696  0020F2  0E00               	movlw	0
  4697  0020F4  6E20               	movwf	___flmul@a^0,c
  4698  0020F6  0EC0               	movlw	192
  4699  0020F8  6E21               	movwf	(___flmul@a+1)^0,c
  4700  0020FA  0E79               	movlw	121
  4701  0020FC  6E22               	movwf	(___flmul@a+2)^0,c
  4702  0020FE  0E44               	movlw	68
  4703  002100  6E23               	movwf	(___flmul@a+3)^0,c
  4704  002102  C140  F01C         	movff	_procces_data+16,___flmul@b
  4705  002106  C141  F01D         	movff	_procces_data+17,___flmul@b+1
  4706  00210A  C142  F01E         	movff	_procces_data+18,___flmul@b+2
  4707  00210E  C143  F01F         	movff	_procces_data+19,___flmul@b+3
  4708  002112  ECB3  F017         	call	___flmul	;wreg free
  4709  002116  C01C  F035         	movff	?___flmul,___fldiv@b
  4710  00211A  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4711  00211E  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4712  002122  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4713  002126  ECC8  F019         	call	___fldiv	;wreg free
  4714  00212A  C035  F04E         	movff	?___fldiv,___fltol@f1
  4715  00212E  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4716  002132  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4717  002136  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4718  00213A  ECF2  F024         	call	___fltol	;wreg free
  4719  00213E  C04E  F110         	movff	?___fltol,_convert_data+16
  4720  002142  C04F  F111         	movff	?___fltol+1,_convert_data+17
  4721  002146  C050  F112         	movff	?___fltol+2,_convert_data+18
  4722  00214A  C051  F113         	movff	?___fltol+3,_convert_data+19
  4723                           
  4724                           ;fs_adc.c: 126:         break;
  4725  00214E  EF33  F012         	goto	l54
  4726  002152                     l5472:
  4727                           
  4728                           ; BSR set to: 1
  4729                           ;fs_adc.c: 129:            adc_raw_data.channel_5 = readAdcValue(5);
  4730  002152  0E05               	movlw	5
  4731  002154  EC9B  F02C         	call	_readAdcValue
  4732  002158  C001  F17D         	movff	?_readAdcValue,_adc_raw_data+10
  4733  00215C  C002  F17E         	movff	?_readAdcValue+1,_adc_raw_data+11
  4734  002160                     
  4735                           ;fs_adc.c: 130:            procces_data.channel_5 = (float)((adc_raw_data.channel_5*5.0)
      +                          /1024.0);
  4736  002160  0E00               	movlw	0
  4737  002162  6E20               	movwf	___flmul@a^0,c
  4738  002164  0E00               	movlw	0
  4739  002166  6E21               	movwf	(___flmul@a+1)^0,c
  4740  002168  0EA0               	movlw	160
  4741  00216A  6E22               	movwf	(___flmul@a+2)^0,c
  4742  00216C  0E40               	movlw	64
  4743  00216E  6E23               	movwf	(___flmul@a+3)^0,c
  4744  002170  C17D  F00E         	movff	_adc_raw_data+10,___xxtofl@val
  4745  002174  C17E  F00F         	movff	_adc_raw_data+11,___xxtofl@val+1
  4746  002178  6A10               	clrf	(___xxtofl@val+2)^0,c
  4747  00217A  6A11               	clrf	(___xxtofl@val+3)^0,c
  4748  00217C  0E00               	movlw	0
  4749  00217E  EC4A  F021         	call	___xxtofl
  4750  002182  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4751  002186  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4752  00218A  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4753  00218E  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4754  002192  ECB3  F017         	call	___flmul	;wreg free
  4755  002196  C01C  F035         	movff	?___flmul,___fldiv@b
  4756  00219A  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4757  00219E  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4758  0021A2  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4759  0021A6  0E00               	movlw	0
  4760  0021A8  6E39               	movwf	___fldiv@a^0,c
  4761  0021AA  0E00               	movlw	0
  4762  0021AC  6E3A               	movwf	(___fldiv@a+1)^0,c
  4763  0021AE  0E80               	movlw	128
  4764  0021B0  6E3B               	movwf	(___fldiv@a+2)^0,c
  4765  0021B2  0E44               	movlw	68
  4766  0021B4  6E3C               	movwf	(___fldiv@a+3)^0,c
  4767  0021B6  ECC8  F019         	call	___fldiv	;wreg free
  4768  0021BA  C035  F144         	movff	?___fldiv,_procces_data+20
  4769  0021BE  C036  F145         	movff	?___fldiv+1,_procces_data+21
  4770  0021C2  C037  F146         	movff	?___fldiv+2,_procces_data+22
  4771  0021C6  C038  F147         	movff	?___fldiv+3,_procces_data+23
  4772  0021CA                     
  4773                           ;fs_adc.c: 131:            convert_data.convert_channel_5 = (uint32_t)((procces_data.cha
      +                          nnel_5*999)/5);
  4774  0021CA  0E00               	movlw	0
  4775  0021CC  6E39               	movwf	___fldiv@a^0,c
  4776  0021CE  0E00               	movlw	0
  4777  0021D0  6E3A               	movwf	(___fldiv@a+1)^0,c
  4778  0021D2  0EA0               	movlw	160
  4779  0021D4  6E3B               	movwf	(___fldiv@a+2)^0,c
  4780  0021D6  0E40               	movlw	64
  4781  0021D8  6E3C               	movwf	(___fldiv@a+3)^0,c
  4782  0021DA  0E00               	movlw	0
  4783  0021DC  6E20               	movwf	___flmul@a^0,c
  4784  0021DE  0EC0               	movlw	192
  4785  0021E0  6E21               	movwf	(___flmul@a+1)^0,c
  4786  0021E2  0E79               	movlw	121
  4787  0021E4  6E22               	movwf	(___flmul@a+2)^0,c
  4788  0021E6  0E44               	movlw	68
  4789  0021E8  6E23               	movwf	(___flmul@a+3)^0,c
  4790  0021EA  C144  F01C         	movff	_procces_data+20,___flmul@b
  4791  0021EE  C145  F01D         	movff	_procces_data+21,___flmul@b+1
  4792  0021F2  C146  F01E         	movff	_procces_data+22,___flmul@b+2
  4793  0021F6  C147  F01F         	movff	_procces_data+23,___flmul@b+3
  4794  0021FA  ECB3  F017         	call	___flmul	;wreg free
  4795  0021FE  C01C  F035         	movff	?___flmul,___fldiv@b
  4796  002202  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4797  002206  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4798  00220A  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4799  00220E  ECC8  F019         	call	___fldiv	;wreg free
  4800  002212  C035  F04E         	movff	?___fldiv,___fltol@f1
  4801  002216  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4802  00221A  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4803  00221E  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4804  002222  ECF2  F024         	call	___fltol	;wreg free
  4805  002226  C04E  F114         	movff	?___fltol,_convert_data+20
  4806  00222A  C04F  F115         	movff	?___fltol+1,_convert_data+21
  4807  00222E  C050  F116         	movff	?___fltol+2,_convert_data+22
  4808  002232  C051  F117         	movff	?___fltol+3,_convert_data+23
  4809                           
  4810                           ;fs_adc.c: 132:         break;
  4811  002236  EF33  F012         	goto	l54
  4812  00223A                     l5478:
  4813                           
  4814                           ; BSR set to: 1
  4815                           ;fs_adc.c: 135:             adc_raw_data.channel_6 = readAdcValue(6);
  4816  00223A  0E06               	movlw	6
  4817  00223C  EC9B  F02C         	call	_readAdcValue
  4818  002240  C001  F17F         	movff	?_readAdcValue,_adc_raw_data+12
  4819  002244  C002  F180         	movff	?_readAdcValue+1,_adc_raw_data+13
  4820  002248                     
  4821                           ;fs_adc.c: 136:             procces_data.channel_6 = (float)((adc_raw_data.channel_6*5.0
      +                          )/1024.0);
  4822  002248  0E00               	movlw	0
  4823  00224A  6E20               	movwf	___flmul@a^0,c
  4824  00224C  0E00               	movlw	0
  4825  00224E  6E21               	movwf	(___flmul@a+1)^0,c
  4826  002250  0EA0               	movlw	160
  4827  002252  6E22               	movwf	(___flmul@a+2)^0,c
  4828  002254  0E40               	movlw	64
  4829  002256  6E23               	movwf	(___flmul@a+3)^0,c
  4830  002258  C17F  F00E         	movff	_adc_raw_data+12,___xxtofl@val
  4831  00225C  C180  F00F         	movff	_adc_raw_data+13,___xxtofl@val+1
  4832  002260  6A10               	clrf	(___xxtofl@val+2)^0,c
  4833  002262  6A11               	clrf	(___xxtofl@val+3)^0,c
  4834  002264  0E00               	movlw	0
  4835  002266  EC4A  F021         	call	___xxtofl
  4836  00226A  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4837  00226E  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4838  002272  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4839  002276  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4840  00227A  ECB3  F017         	call	___flmul	;wreg free
  4841  00227E  C01C  F035         	movff	?___flmul,___fldiv@b
  4842  002282  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4843  002286  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4844  00228A  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4845  00228E  0E00               	movlw	0
  4846  002290  6E39               	movwf	___fldiv@a^0,c
  4847  002292  0E00               	movlw	0
  4848  002294  6E3A               	movwf	(___fldiv@a+1)^0,c
  4849  002296  0E80               	movlw	128
  4850  002298  6E3B               	movwf	(___fldiv@a+2)^0,c
  4851  00229A  0E44               	movlw	68
  4852  00229C  6E3C               	movwf	(___fldiv@a+3)^0,c
  4853  00229E  ECC8  F019         	call	___fldiv	;wreg free
  4854  0022A2  C035  F148         	movff	?___fldiv,_procces_data+24
  4855  0022A6  C036  F149         	movff	?___fldiv+1,_procces_data+25
  4856  0022AA  C037  F14A         	movff	?___fldiv+2,_procces_data+26
  4857  0022AE  C038  F14B         	movff	?___fldiv+3,_procces_data+27
  4858  0022B2                     
  4859                           ;fs_adc.c: 137:             convert_data.convert_channel_6 = (uint32_t)((procces_data.ch
      +                          annel_6*999)/5);
  4860  0022B2  0E00               	movlw	0
  4861  0022B4  6E39               	movwf	___fldiv@a^0,c
  4862  0022B6  0E00               	movlw	0
  4863  0022B8  6E3A               	movwf	(___fldiv@a+1)^0,c
  4864  0022BA  0EA0               	movlw	160
  4865  0022BC  6E3B               	movwf	(___fldiv@a+2)^0,c
  4866  0022BE  0E40               	movlw	64
  4867  0022C0  6E3C               	movwf	(___fldiv@a+3)^0,c
  4868  0022C2  0E00               	movlw	0
  4869  0022C4  6E20               	movwf	___flmul@a^0,c
  4870  0022C6  0EC0               	movlw	192
  4871  0022C8  6E21               	movwf	(___flmul@a+1)^0,c
  4872  0022CA  0E79               	movlw	121
  4873  0022CC  6E22               	movwf	(___flmul@a+2)^0,c
  4874  0022CE  0E44               	movlw	68
  4875  0022D0  6E23               	movwf	(___flmul@a+3)^0,c
  4876  0022D2  C148  F01C         	movff	_procces_data+24,___flmul@b
  4877  0022D6  C149  F01D         	movff	_procces_data+25,___flmul@b+1
  4878  0022DA  C14A  F01E         	movff	_procces_data+26,___flmul@b+2
  4879  0022DE  C14B  F01F         	movff	_procces_data+27,___flmul@b+3
  4880  0022E2  ECB3  F017         	call	___flmul	;wreg free
  4881  0022E6  C01C  F035         	movff	?___flmul,___fldiv@b
  4882  0022EA  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4883  0022EE  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4884  0022F2  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4885  0022F6  ECC8  F019         	call	___fldiv	;wreg free
  4886  0022FA  C035  F04E         	movff	?___fldiv,___fltol@f1
  4887  0022FE  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4888  002302  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4889  002306  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4890  00230A  ECF2  F024         	call	___fltol	;wreg free
  4891  00230E  C04E  F118         	movff	?___fltol,_convert_data+24
  4892  002312  C04F  F119         	movff	?___fltol+1,_convert_data+25
  4893  002316  C050  F11A         	movff	?___fltol+2,_convert_data+26
  4894  00231A  C051  F11B         	movff	?___fltol+3,_convert_data+27
  4895                           
  4896                           ;fs_adc.c: 138:         break;
  4897  00231E  EF33  F012         	goto	l54
  4898  002322                     l5484:
  4899                           
  4900                           ; BSR set to: 1
  4901                           ;fs_adc.c: 141:             adc_raw_data.channel_7 = readAdcValue(7);
  4902  002322  0E07               	movlw	7
  4903  002324  EC9B  F02C         	call	_readAdcValue
  4904  002328  C001  F181         	movff	?_readAdcValue,_adc_raw_data+14
  4905  00232C  C002  F182         	movff	?_readAdcValue+1,_adc_raw_data+15
  4906  002330                     
  4907                           ;fs_adc.c: 142:             procces_data.channel_7 = (float)((adc_raw_data.channel_7*5.0
      +                          )/1024.0);
  4908  002330  0E00               	movlw	0
  4909  002332  6E20               	movwf	___flmul@a^0,c
  4910  002334  0E00               	movlw	0
  4911  002336  6E21               	movwf	(___flmul@a+1)^0,c
  4912  002338  0EA0               	movlw	160
  4913  00233A  6E22               	movwf	(___flmul@a+2)^0,c
  4914  00233C  0E40               	movlw	64
  4915  00233E  6E23               	movwf	(___flmul@a+3)^0,c
  4916  002340  C181  F00E         	movff	_adc_raw_data+14,___xxtofl@val
  4917  002344  C182  F00F         	movff	_adc_raw_data+15,___xxtofl@val+1
  4918  002348  6A10               	clrf	(___xxtofl@val+2)^0,c
  4919  00234A  6A11               	clrf	(___xxtofl@val+3)^0,c
  4920  00234C  0E00               	movlw	0
  4921  00234E  EC4A  F021         	call	___xxtofl
  4922  002352  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4923  002356  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4924  00235A  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4925  00235E  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4926  002362  ECB3  F017         	call	___flmul	;wreg free
  4927  002366  C01C  F035         	movff	?___flmul,___fldiv@b
  4928  00236A  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4929  00236E  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4930  002372  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4931  002376  0E00               	movlw	0
  4932  002378  6E39               	movwf	___fldiv@a^0,c
  4933  00237A  0E00               	movlw	0
  4934  00237C  6E3A               	movwf	(___fldiv@a+1)^0,c
  4935  00237E  0E80               	movlw	128
  4936  002380  6E3B               	movwf	(___fldiv@a+2)^0,c
  4937  002382  0E44               	movlw	68
  4938  002384  6E3C               	movwf	(___fldiv@a+3)^0,c
  4939  002386  ECC8  F019         	call	___fldiv	;wreg free
  4940  00238A  C035  F14C         	movff	?___fldiv,_procces_data+28
  4941  00238E  C036  F14D         	movff	?___fldiv+1,_procces_data+29
  4942  002392  C037  F14E         	movff	?___fldiv+2,_procces_data+30
  4943  002396  C038  F14F         	movff	?___fldiv+3,_procces_data+31
  4944  00239A                     
  4945                           ;fs_adc.c: 143:             convert_data.convert_channel_7 = (uint32_t)((procces_data.ch
      +                          annel_7*999)/5);
  4946  00239A  0E00               	movlw	0
  4947  00239C  6E39               	movwf	___fldiv@a^0,c
  4948  00239E  0E00               	movlw	0
  4949  0023A0  6E3A               	movwf	(___fldiv@a+1)^0,c
  4950  0023A2  0EA0               	movlw	160
  4951  0023A4  6E3B               	movwf	(___fldiv@a+2)^0,c
  4952  0023A6  0E40               	movlw	64
  4953  0023A8  6E3C               	movwf	(___fldiv@a+3)^0,c
  4954  0023AA  0E00               	movlw	0
  4955  0023AC  6E20               	movwf	___flmul@a^0,c
  4956  0023AE  0EC0               	movlw	192
  4957  0023B0  6E21               	movwf	(___flmul@a+1)^0,c
  4958  0023B2  0E79               	movlw	121
  4959  0023B4  6E22               	movwf	(___flmul@a+2)^0,c
  4960  0023B6  0E44               	movlw	68
  4961  0023B8  6E23               	movwf	(___flmul@a+3)^0,c
  4962  0023BA  C14C  F01C         	movff	_procces_data+28,___flmul@b
  4963  0023BE  C14D  F01D         	movff	_procces_data+29,___flmul@b+1
  4964  0023C2  C14E  F01E         	movff	_procces_data+30,___flmul@b+2
  4965  0023C6  C14F  F01F         	movff	_procces_data+31,___flmul@b+3
  4966  0023CA  ECB3  F017         	call	___flmul	;wreg free
  4967  0023CE  C01C  F035         	movff	?___flmul,___fldiv@b
  4968  0023D2  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4969  0023D6  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4970  0023DA  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4971  0023DE  ECC8  F019         	call	___fldiv	;wreg free
  4972  0023E2  C035  F04E         	movff	?___fldiv,___fltol@f1
  4973  0023E6  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4974  0023EA  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4975  0023EE  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4976  0023F2  ECF2  F024         	call	___fltol	;wreg free
  4977  0023F6  C04E  F11C         	movff	?___fltol,_convert_data+28
  4978  0023FA  C04F  F11D         	movff	?___fltol+1,_convert_data+29
  4979  0023FE  C050  F11E         	movff	?___fltol+2,_convert_data+30
  4980  002402  C051  F11F         	movff	?___fltol+3,_convert_data+31
  4981                           
  4982                           ;fs_adc.c: 144:         break;
  4983  002406  EF33  F012         	goto	l54
  4984  00240A                     l5492:
  4985  00240A  0101               	movlb	1	; () banked
  4986  00240C  5194               	movf	(_timer_value+5)& (0+255),w,b
  4987  00240E  6E58               	movwf	??_scanAdcConversion^0,c
  4988  002410  6A59               	clrf	(??_scanAdcConversion+1)^0,c
  4989                           
  4990                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4991                           ; Switch size 1, requested type "simple"
  4992                           ; Number of cases is 1, Range of values is 0 to 0
  4993                           ; switch strategies available:
  4994                           ; Name         Instructions Cycles
  4995                           ; simple_byte            4     3 (average)
  4996                           ;	Chosen strategy is simple_byte
  4997  002412  5059               	movf	(??_scanAdcConversion+1)^0,w,c
  4998  002414  0A00               	xorlw	0	; case 0
  4999  002416  B4D8               	btfsc	status,2,c
  5000  002418  EF10  F012         	goto	l6324
  5001  00241C  EF33  F012         	goto	l54
  5002  002420                     l6324:
  5003                           
  5004                           ; BSR set to: 1
  5005                           ; Switch size 1, requested type "simple"
  5006                           ; Number of cases is 8, Range of values is 1 to 8
  5007                           ; switch strategies available:
  5008                           ; Name         Instructions Cycles
  5009                           ; simple_byte           25    13 (average)
  5010                           ;	Chosen strategy is simple_byte
  5011  002420  5058               	movf	??_scanAdcConversion^0,w,c
  5012  002422  0A01               	xorlw	1	; case 1
  5013  002424  B4D8               	btfsc	status,2,c
  5014  002426  EF33  F00E         	goto	l5440
  5015  00242A  0A03               	xorlw	3	; case 2
  5016  00242C  B4D8               	btfsc	status,2,c
  5017  00242E  EFA7  F00E         	goto	l5446
  5018  002432  0A01               	xorlw	1	; case 3
  5019  002434  B4D8               	btfsc	status,2,c
  5020  002436  EF1B  F00F         	goto	l5452
  5021  00243A  0A07               	xorlw	7	; case 4
  5022  00243C  B4D8               	btfsc	status,2,c
  5023  00243E  EFC1  F00F         	goto	l5460
  5024  002442  0A01               	xorlw	1	; case 5
  5025  002444  B4D8               	btfsc	status,2,c
  5026  002446  EF35  F010         	goto	l5466
  5027  00244A  0A03               	xorlw	3	; case 6
  5028  00244C  B4D8               	btfsc	status,2,c
  5029  00244E  EFA9  F010         	goto	l5472
  5030  002452  0A01               	xorlw	1	; case 7
  5031  002454  B4D8               	btfsc	status,2,c
  5032  002456  EF1D  F011         	goto	l5478
  5033  00245A  0A0F               	xorlw	15	; case 8
  5034  00245C  B4D8               	btfsc	status,2,c
  5035  00245E  EF91  F011         	goto	l5484
  5036  002462  EF33  F012         	goto	l54
  5037  002466                     l54:
  5038  002466  0012               	return		;funcret
  5039  002468                     __end_of_scanAdcConversion:
  5040                           	callstack 0
  5041                           
  5042 ;; *************** function _readAdcValue *****************
  5043 ;; Defined at:
  5044 ;;		line 34 in file "fs_adc.c"
  5045 ;; Parameters:    Size  Location     Type
  5046 ;;  adcChannel      1    wreg     unsigned char 
  5047 ;; Auto vars:     Size  Location     Type
  5048 ;;  adcChannel      1    4[COMRAM] unsigned char 
  5049 ;;  adcValue        2    5[COMRAM] unsigned short 
  5050 ;; Return value:  Size  Location     Type
  5051 ;;                  2    0[COMRAM] unsigned short 
  5052 ;; Registers used:
  5053 ;;		wreg, status,2, status,0
  5054 ;; Tracked objects:
  5055 ;;		On entry : 0/0
  5056 ;;		On exit  : 0/0
  5057 ;;		Unchanged: 0/0
  5058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5059 ;;      Params:         2       0       0       0       0       0       0
  5060 ;;      Locals:         3       0       0       0       0       0       0
  5061 ;;      Temps:          2       0       0       0       0       0       0
  5062 ;;      Totals:         7       0       0       0       0       0       0
  5063 ;;Total ram usage:        7 bytes
  5064 ;; Hardware stack levels used:    1
  5065 ;; Hardware stack levels required when called:    1
  5066 ;; This function calls:
  5067 ;;		Nothing
  5068 ;; This function is called by:
  5069 ;;		_scanAdcConversion
  5070 ;; This function uses a non-reentrant model
  5071 ;;
  5072                           
  5073                           	psect	text11
  5074  005936                     __ptext11:
  5075                           	callstack 0
  5076  005936                     _readAdcValue:
  5077                           	callstack 25
  5078                           
  5079                           ;incstack = 0
  5080                           ;readAdcValue@adcChannel stored from wreg
  5081  005936  6E05               	movwf	readAdcValue@adcChannel^0,c
  5082  005938                     
  5083                           ;fs_adc.c: 38:  ADCON0bits.CHS = adcChannel;
  5084  005938  C005  F003         	movff	readAdcValue@adcChannel,??_readAdcValue
  5085  00593C  4603               	rlncf	??_readAdcValue^0,f,c
  5086  00593E  4603               	rlncf	??_readAdcValue^0,f,c
  5087  005940  50C2               	movf	194,w,c	;volatile
  5088  005942  1803               	xorwf	??_readAdcValue^0,w,c
  5089  005944  0B83               	andlw	-125
  5090  005946  1803               	xorwf	??_readAdcValue^0,w,c
  5091  005948  6EC2               	movwf	194,c	;volatile
  5092  00594A                     
  5093                           ;fs_adc.c: 39:  ADCON0bits.ADON = 1;
  5094  00594A  80C2               	bsf	194,0,c	;volatile
  5095  00594C                     
  5096                           ;fs_adc.c: 40:  ADCON0bits.GO_nDONE = 1;
  5097  00594C  82C2               	bsf	194,1,c	;volatile
  5098  00594E                     l35:
  5099  00594E  B2C2               	btfsc	194,1,c	;volatile
  5100  005950  EFAC  F02C         	goto	u6331
  5101  005954  EFAE  F02C         	goto	u6330
  5102  005958                     u6331:
  5103  005958  EFA7  F02C         	goto	l35
  5104  00595C                     u6330:
  5105  00595C                     
  5106                           ;fs_adc.c: 42:  adcValue = (uint16_t)((ADRESH << 8) + ADRESL);
  5107  00595C  50C4               	movf	196,w,c	;volatile
  5108  00595E  6E04               	movwf	(??_readAdcValue+1)^0,c
  5109  005960  6A03               	clrf	??_readAdcValue^0,c
  5110  005962  50C3               	movf	195,w,c	;volatile
  5111  005964  2403               	addwf	??_readAdcValue^0,w,c
  5112  005966  6E06               	movwf	readAdcValue@adcValue^0,c
  5113  005968  0E00               	movlw	0
  5114  00596A  2004               	addwfc	(??_readAdcValue+1)^0,w,c
  5115  00596C  6E07               	movwf	(readAdcValue@adcValue+1)^0,c
  5116  00596E                     
  5117                           ;fs_adc.c: 43:     return adcValue;
  5118  00596E  C006  F001         	movff	readAdcValue@adcValue,?_readAdcValue
  5119  005972  C007  F002         	movff	readAdcValue@adcValue+1,?_readAdcValue+1
  5120  005976  0012               	return		;funcret
  5121  005978                     __end_of_readAdcValue:
  5122                           	callstack 0
  5123                           
  5124 ;; *************** function _calculatedAverageValue *****************
  5125 ;; Defined at:
  5126 ;;		line 154 in file "fs_adc.c"
  5127 ;; Parameters:    Size  Location     Type
  5128 ;;		None
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;		None
  5131 ;; Return value:  Size  Location     Type
  5132 ;;                  1    wreg      void 
  5133 ;; Registers used:
  5134 ;;		wreg, status,2, status,0, cstack
  5135 ;; Tracked objects:
  5136 ;;		On entry : 0/0
  5137 ;;		On exit  : 0/0
  5138 ;;		Unchanged: 0/0
  5139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5140 ;;      Params:         0       0       0       0       0       0       0
  5141 ;;      Locals:         0       0       0       0       0       0       0
  5142 ;;      Temps:         24       0       0       0       0       0       0
  5143 ;;      Totals:        24       0       0       0       0       0       0
  5144 ;;Total ram usage:       24 bytes
  5145 ;; Hardware stack levels used:    1
  5146 ;; Hardware stack levels required when called:    2
  5147 ;; This function calls:
  5148 ;;		___lldiv
  5149 ;;		___lmul
  5150 ;;		___xxtofl
  5151 ;; This function is called by:
  5152 ;;		_startMotor
  5153 ;; This function uses a non-reentrant model
  5154 ;;
  5155                           
  5156                           	psect	text12
  5157  00372A                     __ptext12:
  5158                           	callstack 0
  5159  00372A                     _calculatedAverageValue:
  5160                           	callstack 25
  5161  00372A                     
  5162                           ;fs_adc.c: 156:     driver_limit.pay = 0;
  5163  00372A  0E00               	movlw	0
  5164  00372C  0101               	movlb	1	; () banked
  5165  00372E  6F83               	movwf	_driver_limit& (0+255),b
  5166  003730  0E00               	movlw	0
  5167  003732  6F84               	movwf	(_driver_limit+1)& (0+255),b
  5168  003734  0E00               	movlw	0
  5169  003736  6F85               	movwf	(_driver_limit+2)& (0+255),b
  5170  003738  0E00               	movlw	0
  5171  00373A  6F86               	movwf	(_driver_limit+3)& (0+255),b
  5172                           
  5173                           ;fs_adc.c: 157:     driver_limit.payda = 0;
  5174  00373C  0E00               	movlw	0
  5175  00373E  6F87               	movwf	(_driver_limit+4)& (0+255),b
  5176  003740  0E00               	movlw	0
  5177  003742  6F88               	movwf	(_driver_limit+5)& (0+255),b
  5178  003744  0E00               	movlw	0
  5179  003746  6F89               	movwf	(_driver_limit+6)& (0+255),b
  5180  003748  0E00               	movlw	0
  5181  00374A  6F8A               	movwf	(_driver_limit+7)& (0+255),b
  5182                           
  5183                           ;fs_adc.c: 158:     driver_limit.ortalama = 0;
  5184  00374C  0E00               	movlw	0
  5185  00374E  6F8B               	movwf	(_driver_limit+8)& (0+255),b
  5186  003750  0E00               	movlw	0
  5187  003752  6F8C               	movwf	(_driver_limit+9)& (0+255),b
  5188  003754  0E00               	movlw	0
  5189  003756  6F8D               	movwf	(_driver_limit+10)& (0+255),b
  5190  003758  0E00               	movlw	0
  5191  00375A  6F8E               	movwf	(_driver_limit+11)& (0+255),b
  5192  00375C                     
  5193                           ; BSR set to: 1
  5194                           ;fs_adc.c: 161:    driver_limit.pay =(uint32_t) ( (convert_data.convert_channel_0 *1) +
  5195  00375C  C10C  F001         	movff	_convert_data+12,___lmul@multiplier
  5196  003760  C10D  F002         	movff	_convert_data+13,___lmul@multiplier+1
  5197  003764  C10E  F003         	movff	_convert_data+14,___lmul@multiplier+2
  5198  003768  C10F  F004         	movff	_convert_data+15,___lmul@multiplier+3
  5199  00376C  0EB8               	movlw	184
  5200  00376E  6E05               	movwf	___lmul@multiplicand^0,c
  5201  003770  0E0B               	movlw	11
  5202  003772  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5203  003774  0E00               	movlw	0
  5204  003776  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5205  003778  0E00               	movlw	0
  5206  00377A  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5207  00377C  ECB2  F02A         	call	___lmul	;wreg free
  5208  003780  C001  F01C         	movff	?___lmul,??_calculatedAverageValue
  5209  003784  C002  F01D         	movff	?___lmul+1,??_calculatedAverageValue+1
  5210  003788  C003  F01E         	movff	?___lmul+2,??_calculatedAverageValue+2
  5211  00378C  C004  F01F         	movff	?___lmul+3,??_calculatedAverageValue+3
  5212  003790  C108  F001         	movff	_convert_data+8,___lmul@multiplier
  5213  003794  C109  F002         	movff	_convert_data+9,___lmul@multiplier+1
  5214  003798  C10A  F003         	movff	_convert_data+10,___lmul@multiplier+2
  5215  00379C  C10B  F004         	movff	_convert_data+11,___lmul@multiplier+3
  5216  0037A0  0ED0               	movlw	208
  5217  0037A2  6E05               	movwf	___lmul@multiplicand^0,c
  5218  0037A4  0E07               	movlw	7
  5219  0037A6  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5220  0037A8  0E00               	movlw	0
  5221  0037AA  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5222  0037AC  0E00               	movlw	0
  5223  0037AE  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5224  0037B0  ECB2  F02A         	call	___lmul	;wreg free
  5225  0037B4  5001               	movf	?___lmul^0,w,c
  5226  0037B6  241C               	addwf	??_calculatedAverageValue^0,w,c
  5227  0037B8  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5228  0037BA  5002               	movf	(?___lmul+1)^0,w,c
  5229  0037BC  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5230  0037BE  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5231  0037C0  5003               	movf	(?___lmul+2)^0,w,c
  5232  0037C2  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5233  0037C4  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5234  0037C6  5004               	movf	(?___lmul+3)^0,w,c
  5235  0037C8  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5236  0037CA  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5237  0037CC  C104  F001         	movff	_convert_data+4,___lmul@multiplier
  5238  0037D0  C105  F002         	movff	_convert_data+5,___lmul@multiplier+1
  5239  0037D4  C106  F003         	movff	_convert_data+6,___lmul@multiplier+2
  5240  0037D8  C107  F004         	movff	_convert_data+7,___lmul@multiplier+3
  5241  0037DC  0EE8               	movlw	232
  5242  0037DE  6E05               	movwf	___lmul@multiplicand^0,c
  5243  0037E0  0E03               	movlw	3
  5244  0037E2  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5245  0037E4  0E00               	movlw	0
  5246  0037E6  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5247  0037E8  0E00               	movlw	0
  5248  0037EA  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5249  0037EC  ECB2  F02A         	call	___lmul	;wreg free
  5250  0037F0  5001               	movf	?___lmul^0,w,c
  5251  0037F2  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5252  0037F4  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5253  0037F6  5002               	movf	(?___lmul+1)^0,w,c
  5254  0037F8  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5255  0037FA  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5256  0037FC  5003               	movf	(?___lmul+2)^0,w,c
  5257  0037FE  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5258  003800  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5259  003802  5004               	movf	(?___lmul+3)^0,w,c
  5260  003804  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5261  003806  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5262  003808  0101               	movlb	1	; () banked
  5263  00380A  5100               	movf	_convert_data& (0+255),w,b
  5264  00380C  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5265  00380E  6F83               	movwf	_driver_limit& (0+255),b
  5266  003810  5101               	movf	(_convert_data+1)& (0+255),w,b
  5267  003812  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5268  003814  6F84               	movwf	(_driver_limit+1)& (0+255),b
  5269  003816  5102               	movf	(_convert_data+2)& (0+255),w,b
  5270  003818  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5271  00381A  6F85               	movwf	(_driver_limit+2)& (0+255),b
  5272  00381C  5103               	movf	(_convert_data+3)& (0+255),w,b
  5273  00381E  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5274  003820  6F86               	movwf	(_driver_limit+3)& (0+255),b
  5275  003822                     
  5276                           ; BSR set to: 1
  5277                           ;fs_adc.c: 166:    driver_limit.pay += (uint32_t)( (convert_data.convert_channel_4 * 400
      +                          0) +
  5278  003822  C11C  F001         	movff	_convert_data+28,___lmul@multiplier
  5279  003826  C11D  F002         	movff	_convert_data+29,___lmul@multiplier+1
  5280  00382A  C11E  F003         	movff	_convert_data+30,___lmul@multiplier+2
  5281  00382E  C11F  F004         	movff	_convert_data+31,___lmul@multiplier+3
  5282  003832  0E58               	movlw	88
  5283  003834  6E05               	movwf	___lmul@multiplicand^0,c
  5284  003836  0E1B               	movlw	27
  5285  003838  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5286  00383A  0E00               	movlw	0
  5287  00383C  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5288  00383E  0E00               	movlw	0
  5289  003840  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5290  003842  ECB2  F02A         	call	___lmul	;wreg free
  5291  003846  C001  F01C         	movff	?___lmul,??_calculatedAverageValue
  5292  00384A  C002  F01D         	movff	?___lmul+1,??_calculatedAverageValue+1
  5293  00384E  C003  F01E         	movff	?___lmul+2,??_calculatedAverageValue+2
  5294  003852  C004  F01F         	movff	?___lmul+3,??_calculatedAverageValue+3
  5295  003856  C118  F001         	movff	_convert_data+24,___lmul@multiplier
  5296  00385A  C119  F002         	movff	_convert_data+25,___lmul@multiplier+1
  5297  00385E  C11A  F003         	movff	_convert_data+26,___lmul@multiplier+2
  5298  003862  C11B  F004         	movff	_convert_data+27,___lmul@multiplier+3
  5299  003866  0E70               	movlw	112
  5300  003868  6E05               	movwf	___lmul@multiplicand^0,c
  5301  00386A  0E17               	movlw	23
  5302  00386C  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5303  00386E  0E00               	movlw	0
  5304  003870  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5305  003872  0E00               	movlw	0
  5306  003874  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5307  003876  ECB2  F02A         	call	___lmul	;wreg free
  5308  00387A  5001               	movf	?___lmul^0,w,c
  5309  00387C  241C               	addwf	??_calculatedAverageValue^0,w,c
  5310  00387E  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5311  003880  5002               	movf	(?___lmul+1)^0,w,c
  5312  003882  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5313  003884  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5314  003886  5003               	movf	(?___lmul+2)^0,w,c
  5315  003888  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5316  00388A  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5317  00388C  5004               	movf	(?___lmul+3)^0,w,c
  5318  00388E  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5319  003890  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5320  003892  C114  F001         	movff	_convert_data+20,___lmul@multiplier
  5321  003896  C115  F002         	movff	_convert_data+21,___lmul@multiplier+1
  5322  00389A  C116  F003         	movff	_convert_data+22,___lmul@multiplier+2
  5323  00389E  C117  F004         	movff	_convert_data+23,___lmul@multiplier+3
  5324  0038A2  0E88               	movlw	136
  5325  0038A4  6E05               	movwf	___lmul@multiplicand^0,c
  5326  0038A6  0E13               	movlw	19
  5327  0038A8  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5328  0038AA  0E00               	movlw	0
  5329  0038AC  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5330  0038AE  0E00               	movlw	0
  5331  0038B0  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5332  0038B2  ECB2  F02A         	call	___lmul	;wreg free
  5333  0038B6  5001               	movf	?___lmul^0,w,c
  5334  0038B8  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5335  0038BA  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5336  0038BC  5002               	movf	(?___lmul+1)^0,w,c
  5337  0038BE  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5338  0038C0  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5339  0038C2  5003               	movf	(?___lmul+2)^0,w,c
  5340  0038C4  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5341  0038C6  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5342  0038C8  5004               	movf	(?___lmul+3)^0,w,c
  5343  0038CA  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5344  0038CC  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5345  0038CE  C110  F001         	movff	_convert_data+16,___lmul@multiplier
  5346  0038D2  C111  F002         	movff	_convert_data+17,___lmul@multiplier+1
  5347  0038D6  C112  F003         	movff	_convert_data+18,___lmul@multiplier+2
  5348  0038DA  C113  F004         	movff	_convert_data+19,___lmul@multiplier+3
  5349  0038DE  0EA0               	movlw	160
  5350  0038E0  6E05               	movwf	___lmul@multiplicand^0,c
  5351  0038E2  0E0F               	movlw	15
  5352  0038E4  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5353  0038E6  0E00               	movlw	0
  5354  0038E8  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5355  0038EA  0E00               	movlw	0
  5356  0038EC  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5357  0038EE  ECB2  F02A         	call	___lmul	;wreg free
  5358  0038F2  5001               	movf	?___lmul^0,w,c
  5359  0038F4  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5360  0038F6  6E28               	movwf	(??_calculatedAverageValue+12)^0,c
  5361  0038F8  5002               	movf	(?___lmul+1)^0,w,c
  5362  0038FA  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5363  0038FC  6E29               	movwf	(??_calculatedAverageValue+13)^0,c
  5364  0038FE  5003               	movf	(?___lmul+2)^0,w,c
  5365  003900  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5366  003902  6E2A               	movwf	(??_calculatedAverageValue+14)^0,c
  5367  003904  5004               	movf	(?___lmul+3)^0,w,c
  5368  003906  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5369  003908  6E2B               	movwf	(??_calculatedAverageValue+15)^0,c
  5370  00390A  5028               	movf	(??_calculatedAverageValue+12)^0,w,c
  5371  00390C  0101               	movlb	1	; () banked
  5372  00390E  2783               	addwf	_driver_limit& (0+255),f,b
  5373  003910  5029               	movf	(??_calculatedAverageValue+13)^0,w,c
  5374  003912  2384               	addwfc	(_driver_limit+1)& (0+255),f,b
  5375  003914  502A               	movf	(??_calculatedAverageValue+14)^0,w,c
  5376  003916  2385               	addwfc	(_driver_limit+2)& (0+255),f,b
  5377  003918  502B               	movf	(??_calculatedAverageValue+15)^0,w,c
  5378  00391A  2386               	addwfc	(_driver_limit+3)& (0+255),f,b
  5379  00391C                     
  5380                           ; BSR set to: 1
  5381                           ;fs_adc.c: 171:     driver_limit.payda = (uint32_t) (convert_data.convert_channel_0 + co
      +                          nvert_data.convert_channel_1 +
  5382  00391C  5108               	movf	(_convert_data+8)& (0+255),w,b
  5383  00391E  2504               	addwf	(_convert_data+4)& (0+255),w,b
  5384  003920  6E1C               	movwf	??_calculatedAverageValue^0,c
  5385  003922  5109               	movf	(_convert_data+9)& (0+255),w,b
  5386  003924  2105               	addwfc	(_convert_data+5)& (0+255),w,b
  5387  003926  6E1D               	movwf	(??_calculatedAverageValue+1)^0,c
  5388  003928  510A               	movf	(_convert_data+10)& (0+255),w,b
  5389  00392A  2106               	addwfc	(_convert_data+6)& (0+255),w,b
  5390  00392C  6E1E               	movwf	(??_calculatedAverageValue+2)^0,c
  5391  00392E  510B               	movf	(_convert_data+11)& (0+255),w,b
  5392  003930  2107               	addwfc	(_convert_data+7)& (0+255),w,b
  5393  003932  6E1F               	movwf	(??_calculatedAverageValue+3)^0,c
  5394  003934  510C               	movf	(_convert_data+12)& (0+255),w,b
  5395  003936  241C               	addwf	??_calculatedAverageValue^0,w,c
  5396  003938  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5397  00393A  510D               	movf	(_convert_data+13)& (0+255),w,b
  5398  00393C  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5399  00393E  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5400  003940  510E               	movf	(_convert_data+14)& (0+255),w,b
  5401  003942  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5402  003944  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5403  003946  510F               	movf	(_convert_data+15)& (0+255),w,b
  5404  003948  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5405  00394A  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5406  00394C  5110               	movf	(_convert_data+16)& (0+255),w,b
  5407  00394E  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5408  003950  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5409  003952  5111               	movf	(_convert_data+17)& (0+255),w,b
  5410  003954  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5411  003956  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5412  003958  5112               	movf	(_convert_data+18)& (0+255),w,b
  5413  00395A  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5414  00395C  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5415  00395E  5113               	movf	(_convert_data+19)& (0+255),w,b
  5416  003960  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5417  003962  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5418  003964  5114               	movf	(_convert_data+20)& (0+255),w,b
  5419  003966  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5420  003968  6E28               	movwf	(??_calculatedAverageValue+12)^0,c
  5421  00396A  5115               	movf	(_convert_data+21)& (0+255),w,b
  5422  00396C  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5423  00396E  6E29               	movwf	(??_calculatedAverageValue+13)^0,c
  5424  003970  5116               	movf	(_convert_data+22)& (0+255),w,b
  5425  003972  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5426  003974  6E2A               	movwf	(??_calculatedAverageValue+14)^0,c
  5427  003976  5117               	movf	(_convert_data+23)& (0+255),w,b
  5428  003978  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5429  00397A  6E2B               	movwf	(??_calculatedAverageValue+15)^0,c
  5430  00397C  5118               	movf	(_convert_data+24)& (0+255),w,b
  5431  00397E  2428               	addwf	(??_calculatedAverageValue+12)^0,w,c
  5432  003980  6E2C               	movwf	(??_calculatedAverageValue+16)^0,c
  5433  003982  5119               	movf	(_convert_data+25)& (0+255),w,b
  5434  003984  2029               	addwfc	(??_calculatedAverageValue+13)^0,w,c
  5435  003986  6E2D               	movwf	(??_calculatedAverageValue+17)^0,c
  5436  003988  511A               	movf	(_convert_data+26)& (0+255),w,b
  5437  00398A  202A               	addwfc	(??_calculatedAverageValue+14)^0,w,c
  5438  00398C  6E2E               	movwf	(??_calculatedAverageValue+18)^0,c
  5439  00398E  511B               	movf	(_convert_data+27)& (0+255),w,b
  5440  003990  202B               	addwfc	(??_calculatedAverageValue+15)^0,w,c
  5441  003992  6E2F               	movwf	(??_calculatedAverageValue+19)^0,c
  5442  003994  511C               	movf	(_convert_data+28)& (0+255),w,b
  5443  003996  242C               	addwf	(??_calculatedAverageValue+16)^0,w,c
  5444  003998  6E30               	movwf	(??_calculatedAverageValue+20)^0,c
  5445  00399A  511D               	movf	(_convert_data+29)& (0+255),w,b
  5446  00399C  202D               	addwfc	(??_calculatedAverageValue+17)^0,w,c
  5447  00399E  6E31               	movwf	(??_calculatedAverageValue+21)^0,c
  5448  0039A0  511E               	movf	(_convert_data+30)& (0+255),w,b
  5449  0039A2  202E               	addwfc	(??_calculatedAverageValue+18)^0,w,c
  5450  0039A4  6E32               	movwf	(??_calculatedAverageValue+22)^0,c
  5451  0039A6  511F               	movf	(_convert_data+31)& (0+255),w,b
  5452  0039A8  202F               	addwfc	(??_calculatedAverageValue+19)^0,w,c
  5453  0039AA  6E33               	movwf	(??_calculatedAverageValue+23)^0,c
  5454  0039AC  5100               	movf	_convert_data& (0+255),w,b
  5455  0039AE  2430               	addwf	(??_calculatedAverageValue+20)^0,w,c
  5456  0039B0  6F87               	movwf	(_driver_limit+4)& (0+255),b
  5457  0039B2  5101               	movf	(_convert_data+1)& (0+255),w,b
  5458  0039B4  2031               	addwfc	(??_calculatedAverageValue+21)^0,w,c
  5459  0039B6  6F88               	movwf	(_driver_limit+5)& (0+255),b
  5460  0039B8  5102               	movf	(_convert_data+2)& (0+255),w,b
  5461  0039BA  2032               	addwfc	(??_calculatedAverageValue+22)^0,w,c
  5462  0039BC  6F89               	movwf	(_driver_limit+6)& (0+255),b
  5463  0039BE  5103               	movf	(_convert_data+3)& (0+255),w,b
  5464  0039C0  2033               	addwfc	(??_calculatedAverageValue+23)^0,w,c
  5465  0039C2  6F8A               	movwf	(_driver_limit+7)& (0+255),b
  5466  0039C4                     
  5467                           ; BSR set to: 1
  5468                           ;fs_adc.c: 176:     driver_limit.ortalama = (float)(driver_limit.pay/driver_limit.payda)
      +                          ;
  5469  0039C4  C187  F005         	movff	_driver_limit+4,___lldiv@divisor
  5470  0039C8  C188  F006         	movff	_driver_limit+5,___lldiv@divisor+1
  5471  0039CC  C189  F007         	movff	_driver_limit+6,___lldiv@divisor+2
  5472  0039D0  C18A  F008         	movff	_driver_limit+7,___lldiv@divisor+3
  5473  0039D4  C183  F001         	movff	_driver_limit,___lldiv@dividend
  5474  0039D8  C184  F002         	movff	_driver_limit+1,___lldiv@dividend+1
  5475  0039DC  C185  F003         	movff	_driver_limit+2,___lldiv@dividend+2
  5476  0039E0  C186  F004         	movff	_driver_limit+3,___lldiv@dividend+3
  5477  0039E4  EC21  F029         	call	___lldiv	;wreg free
  5478  0039E8  C001  F00E         	movff	?___lldiv,___xxtofl@val
  5479  0039EC  C002  F00F         	movff	?___lldiv+1,___xxtofl@val+1
  5480  0039F0  C003  F010         	movff	?___lldiv+2,___xxtofl@val+2
  5481  0039F4  C004  F011         	movff	?___lldiv+3,___xxtofl@val+3
  5482  0039F8  0E00               	movlw	0
  5483  0039FA  EC4A  F021         	call	___xxtofl
  5484  0039FE  C00E  F18B         	movff	?___xxtofl,_driver_limit+8
  5485  003A02  C00F  F18C         	movff	?___xxtofl+1,_driver_limit+9
  5486  003A06  C010  F18D         	movff	?___xxtofl+2,_driver_limit+10
  5487  003A0A  C011  F18E         	movff	?___xxtofl+3,_driver_limit+11
  5488  003A0E  0012               	return		;funcret
  5489  003A10                     __end_of_calculatedAverageValue:
  5490                           	callstack 0
  5491                           
  5492 ;; *************** function ___lmul *****************
  5493 ;; Defined at:
  5494 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul32.c"
  5495 ;; Parameters:    Size  Location     Type
  5496 ;;  multiplier      4    0[COMRAM] unsigned long 
  5497 ;;  multiplicand    4    4[COMRAM] unsigned long 
  5498 ;; Auto vars:     Size  Location     Type
  5499 ;;  product         4    8[COMRAM] unsigned long 
  5500 ;; Return value:  Size  Location     Type
  5501 ;;                  4    0[COMRAM] unsigned long 
  5502 ;; Registers used:
  5503 ;;		wreg, status,2, status,0
  5504 ;; Tracked objects:
  5505 ;;		On entry : 0/0
  5506 ;;		On exit  : 0/0
  5507 ;;		Unchanged: 0/0
  5508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5509 ;;      Params:         8       0       0       0       0       0       0
  5510 ;;      Locals:         4       0       0       0       0       0       0
  5511 ;;      Temps:          0       0       0       0       0       0       0
  5512 ;;      Totals:        12       0       0       0       0       0       0
  5513 ;;Total ram usage:       12 bytes
  5514 ;; Hardware stack levels used:    1
  5515 ;; Hardware stack levels required when called:    1
  5516 ;; This function calls:
  5517 ;;		Nothing
  5518 ;; This function is called by:
  5519 ;;		_calculatedAverageValue
  5520 ;; This function uses a non-reentrant model
  5521 ;;
  5522                           
  5523                           	psect	text13
  5524  005564                     __ptext13:
  5525                           	callstack 0
  5526  005564                     ___lmul:
  5527                           	callstack 25
  5528  005564  0E00               	movlw	0
  5529  005566  6E09               	movwf	___lmul@product^0,c
  5530  005568  0E00               	movlw	0
  5531  00556A  6E0A               	movwf	(___lmul@product+1)^0,c
  5532  00556C  0E00               	movlw	0
  5533  00556E  6E0B               	movwf	(___lmul@product+2)^0,c
  5534  005570  0E00               	movlw	0
  5535  005572  6E0C               	movwf	(___lmul@product+3)^0,c
  5536  005574                     l5244:
  5537  005574  A001               	btfss	___lmul@multiplier^0,0,c
  5538  005576  EFBF  F02A         	goto	u6381
  5539  00557A  EFC1  F02A         	goto	u6380
  5540  00557E                     u6381:
  5541  00557E  EFC9  F02A         	goto	l5248
  5542  005582                     u6380:
  5543  005582  5005               	movf	___lmul@multiplicand^0,w,c
  5544  005584  2609               	addwf	___lmul@product^0,f,c
  5545  005586  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  5546  005588  220A               	addwfc	(___lmul@product+1)^0,f,c
  5547  00558A  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  5548  00558C  220B               	addwfc	(___lmul@product+2)^0,f,c
  5549  00558E  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  5550  005590  220C               	addwfc	(___lmul@product+3)^0,f,c
  5551  005592                     l5248:
  5552  005592  90D8               	bcf	status,0,c
  5553  005594  3605               	rlcf	___lmul@multiplicand^0,f,c
  5554  005596  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  5555  005598  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  5556  00559A  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  5557  00559C  90D8               	bcf	status,0,c
  5558  00559E  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  5559  0055A0  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  5560  0055A2  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  5561  0055A4  3201               	rrcf	___lmul@multiplier^0,f,c
  5562  0055A6  5001               	movf	___lmul@multiplier^0,w,c
  5563  0055A8  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  5564  0055AA  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  5565  0055AC  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  5566  0055AE  A4D8               	btfss	status,2,c
  5567  0055B0  EFDC  F02A         	goto	u6391
  5568  0055B4  EFDE  F02A         	goto	u6390
  5569  0055B8                     u6391:
  5570  0055B8  EFBA  F02A         	goto	l5244
  5571  0055BC                     u6390:
  5572  0055BC  C009  F001         	movff	___lmul@product,?___lmul
  5573  0055C0  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  5574  0055C4  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  5575  0055C8  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  5576  0055CC  0012               	return		;funcret
  5577  0055CE                     __end_of___lmul:
  5578                           	callstack 0
  5579                           
  5580 ;; *************** function ___lldiv *****************
  5581 ;; Defined at:
  5582 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__lldiv.c"
  5583 ;; Parameters:    Size  Location     Type
  5584 ;;  dividend        4    0[COMRAM] unsigned long 
  5585 ;;  divisor         4    4[COMRAM] unsigned long 
  5586 ;; Auto vars:     Size  Location     Type
  5587 ;;  quotient        4    8[COMRAM] unsigned long 
  5588 ;;  counter         1   12[COMRAM] unsigned char 
  5589 ;; Return value:  Size  Location     Type
  5590 ;;                  4    0[COMRAM] unsigned long 
  5591 ;; Registers used:
  5592 ;;		wreg, status,2, status,0
  5593 ;; Tracked objects:
  5594 ;;		On entry : 0/0
  5595 ;;		On exit  : 0/0
  5596 ;;		Unchanged: 0/0
  5597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5598 ;;      Params:         8       0       0       0       0       0       0
  5599 ;;      Locals:         5       0       0       0       0       0       0
  5600 ;;      Temps:          0       0       0       0       0       0       0
  5601 ;;      Totals:        13       0       0       0       0       0       0
  5602 ;;Total ram usage:       13 bytes
  5603 ;; Hardware stack levels used:    1
  5604 ;; Hardware stack levels required when called:    1
  5605 ;; This function calls:
  5606 ;;		Nothing
  5607 ;; This function is called by:
  5608 ;;		_calculatedAverageValue
  5609 ;; This function uses a non-reentrant model
  5610 ;;
  5611                           
  5612                           	psect	text14
  5613  005242                     __ptext14:
  5614                           	callstack 0
  5615  005242                     ___lldiv:
  5616                           	callstack 25
  5617  005242  0E00               	movlw	0
  5618  005244  6E09               	movwf	___lldiv@quotient^0,c
  5619  005246  0E00               	movlw	0
  5620  005248  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  5621  00524A  0E00               	movlw	0
  5622  00524C  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  5623  00524E  0E00               	movlw	0
  5624  005250  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  5625  005252  5005               	movf	___lldiv@divisor^0,w,c
  5626  005254  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  5627  005256  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  5628  005258  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  5629  00525A  B4D8               	btfsc	status,2,c
  5630  00525C  EF32  F029         	goto	u6401
  5631  005260  EF34  F029         	goto	u6400
  5632  005264                     u6401:
  5633  005264  EF6A  F029         	goto	l512
  5634  005268                     u6400:
  5635  005268  0E01               	movlw	1
  5636  00526A  6E0D               	movwf	___lldiv@counter^0,c
  5637  00526C  EF3E  F029         	goto	l5260
  5638  005270                     l5258:
  5639  005270  90D8               	bcf	status,0,c
  5640  005272  3605               	rlcf	___lldiv@divisor^0,f,c
  5641  005274  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  5642  005276  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  5643  005278  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  5644  00527A  2A0D               	incf	___lldiv@counter^0,f,c
  5645  00527C                     l5260:
  5646  00527C  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  5647  00527E  EF43  F029         	goto	u6411
  5648  005282  EF45  F029         	goto	u6410
  5649  005286                     u6411:
  5650  005286  EF38  F029         	goto	l5258
  5651  00528A                     u6410:
  5652  00528A                     l5262:
  5653  00528A  90D8               	bcf	status,0,c
  5654  00528C  3609               	rlcf	___lldiv@quotient^0,f,c
  5655  00528E  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  5656  005290  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  5657  005292  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  5658  005294  5005               	movf	___lldiv@divisor^0,w,c
  5659  005296  5C01               	subwf	___lldiv@dividend^0,w,c
  5660  005298  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5661  00529A  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  5662  00529C  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5663  00529E  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  5664  0052A0  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5665  0052A2  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  5666  0052A4  A0D8               	btfss	status,0,c
  5667  0052A6  EF57  F029         	goto	u6421
  5668  0052AA  EF59  F029         	goto	u6420
  5669  0052AE                     u6421:
  5670  0052AE  EF62  F029         	goto	l5270
  5671  0052B2                     u6420:
  5672  0052B2  5005               	movf	___lldiv@divisor^0,w,c
  5673  0052B4  5E01               	subwf	___lldiv@dividend^0,f,c
  5674  0052B6  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5675  0052B8  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  5676  0052BA  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5677  0052BC  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  5678  0052BE  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5679  0052C0  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  5680  0052C2  8009               	bsf	___lldiv@quotient^0,0,c
  5681  0052C4                     l5270:
  5682  0052C4  90D8               	bcf	status,0,c
  5683  0052C6  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  5684  0052C8  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  5685  0052CA  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  5686  0052CC  3205               	rrcf	___lldiv@divisor^0,f,c
  5687  0052CE  2E0D               	decfsz	___lldiv@counter^0,f,c
  5688  0052D0  EF45  F029         	goto	l5262
  5689  0052D4                     l512:
  5690  0052D4  C009  F001         	movff	___lldiv@quotient,?___lldiv
  5691  0052D8  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  5692  0052DC  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  5693  0052E0  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  5694  0052E4  0012               	return		;funcret
  5695  0052E6                     __end_of___lldiv:
  5696                           	callstack 0
  5697                           
  5698 ;; *************** function _PWM2_setDC *****************
  5699 ;; Defined at:
  5700 ;;		line 59 in file "fs_pwm.c"
  5701 ;; Parameters:    Size  Location     Type
  5702 ;;  dutycycle       2   87[COMRAM] short 
  5703 ;; Auto vars:     Size  Location     Type
  5704 ;;  duty            2   91[COMRAM] unsigned short 
  5705 ;; Return value:  Size  Location     Type
  5706 ;;                  1    wreg      void 
  5707 ;; Registers used:
  5708 ;;		wreg, status,2, status,0, cstack
  5709 ;; Tracked objects:
  5710 ;;		On entry : 0/0
  5711 ;;		On exit  : 0/0
  5712 ;;		Unchanged: 0/0
  5713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5714 ;;      Params:         2       0       0       0       0       0       0
  5715 ;;      Locals:         2       0       0       0       0       0       0
  5716 ;;      Temps:          2       0       0       0       0       0       0
  5717 ;;      Totals:         6       0       0       0       0       0       0
  5718 ;;Total ram usage:        6 bytes
  5719 ;; Hardware stack levels used:    1
  5720 ;; Hardware stack levels required when called:    2
  5721 ;; This function calls:
  5722 ;;		___fltol
  5723 ;;		___xxtofl
  5724 ;;		_fabsf
  5725 ;; This function is called by:
  5726 ;;		_main
  5727 ;;		_stopMotor
  5728 ;;		_startMotor
  5729 ;; This function uses a non-reentrant model
  5730 ;;
  5731                           
  5732                           	psect	text15
  5733  0053FA                     __ptext15:
  5734                           	callstack 0
  5735  0053FA                     _PWM2_setDC:
  5736                           	callstack 25
  5737  0053FA                     
  5738                           ;fs_pwm.c: 63:     if (dutycycle <= 1023)
  5739  0053FA  BE59               	btfsc	(PWM2_setDC@dutycycle+1)^0,7,c
  5740  0053FC  EF09  F02A         	goto	u6750
  5741  005400  0E04               	movlw	4
  5742  005402  5C59               	subwf	(PWM2_setDC@dutycycle+1)^0,w,c
  5743  005404  B0D8               	btfsc	status,0,c
  5744  005406  EF07  F02A         	goto	u6751
  5745  00540A  EF09  F02A         	goto	u6750
  5746  00540E                     u6751:
  5747  00540E  EF39  F02A         	goto	l408
  5748  005412                     u6750:
  5749  005412                     
  5750                           ;fs_pwm.c: 64:     {;fs_pwm.c: 65:         duty = (uint16_t) fabsf(dutycycle);
  5751  005412  C058  F00E         	movff	PWM2_setDC@dutycycle,___xxtofl@val
  5752  005416  C059  F00F         	movff	PWM2_setDC@dutycycle+1,___xxtofl@val+1
  5753  00541A  0E00               	movlw	0
  5754  00541C  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  5755  00541E  0EFF               	movlw	-1
  5756  005420  6E10               	movwf	(___xxtofl@val+2)^0,c
  5757  005422  6E11               	movwf	(___xxtofl@val+3)^0,c
  5758  005424  0E01               	movlw	1
  5759  005426  EC4A  F021         	call	___xxtofl
  5760  00542A  C00E  F01C         	movff	?___xxtofl,fabsf@x
  5761  00542E  C00F  F01D         	movff	?___xxtofl+1,fabsf@x+1
  5762  005432  C010  F01E         	movff	?___xxtofl+2,fabsf@x+2
  5763  005436  C011  F01F         	movff	?___xxtofl+3,fabsf@x+3
  5764  00543A  ECBF  F02D         	call	_fabsf	;wreg free
  5765  00543E  C01C  F04E         	movff	?_fabsf,___fltol@f1
  5766  005442  C01D  F04F         	movff	?_fabsf+1,___fltol@f1+1
  5767  005446  C01E  F050         	movff	?_fabsf+2,___fltol@f1+2
  5768  00544A  C01F  F051         	movff	?_fabsf+3,___fltol@f1+3
  5769  00544E  ECF2  F024         	call	___fltol	;wreg free
  5770  005452  C04E  F05C         	movff	?___fltol,PWM2_setDC@duty
  5771  005456  C04F  F05D         	movff	?___fltol+1,PWM2_setDC@duty+1
  5772  00545A                     
  5773                           ;fs_pwm.c: 66:         CCPR2L = duty>>2;
  5774  00545A  C05C  F05A         	movff	PWM2_setDC@duty,??_PWM2_setDC
  5775  00545E  C05D  F05B         	movff	PWM2_setDC@duty+1,??_PWM2_setDC+1
  5776  005462  90D8               	bcf	status,0,c
  5777  005464  325B               	rrcf	(??_PWM2_setDC+1)^0,f,c
  5778  005466  325A               	rrcf	??_PWM2_setDC^0,f,c
  5779  005468  90D8               	bcf	status,0,c
  5780  00546A  325B               	rrcf	(??_PWM2_setDC+1)^0,f,c
  5781  00546C  325A               	rrcf	??_PWM2_setDC^0,f,c
  5782  00546E  505A               	movf	??_PWM2_setDC^0,w,c
  5783  005470  6E67               	movwf	103,c	;volatile
  5784  005472                     l408:
  5785  005472  0012               	return		;funcret
  5786  005474                     __end_of_PWM2_setDC:
  5787                           	callstack 0
  5788                           
  5789 ;; *************** function _PWM1_setDC *****************
  5790 ;; Defined at:
  5791 ;;		line 43 in file "fs_pwm.c"
  5792 ;; Parameters:    Size  Location     Type
  5793 ;;  dutycycle       2   87[COMRAM] short 
  5794 ;; Auto vars:     Size  Location     Type
  5795 ;;  duty            2   91[COMRAM] unsigned short 
  5796 ;; Return value:  Size  Location     Type
  5797 ;;                  1    wreg      void 
  5798 ;; Registers used:
  5799 ;;		wreg, status,2, status,0, cstack
  5800 ;; Tracked objects:
  5801 ;;		On entry : 0/0
  5802 ;;		On exit  : 0/0
  5803 ;;		Unchanged: 0/0
  5804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5805 ;;      Params:         2       0       0       0       0       0       0
  5806 ;;      Locals:         2       0       0       0       0       0       0
  5807 ;;      Temps:          2       0       0       0       0       0       0
  5808 ;;      Totals:         6       0       0       0       0       0       0
  5809 ;;Total ram usage:        6 bytes
  5810 ;; Hardware stack levels used:    1
  5811 ;; Hardware stack levels required when called:    2
  5812 ;; This function calls:
  5813 ;;		___fltol
  5814 ;;		___xxtofl
  5815 ;;		_fabsf
  5816 ;; This function is called by:
  5817 ;;		_main
  5818 ;;		_stopMotor
  5819 ;;		_startMotor
  5820 ;; This function uses a non-reentrant model
  5821 ;;
  5822                           
  5823                           	psect	text16
  5824  005474                     __ptext16:
  5825                           	callstack 0
  5826  005474                     _PWM1_setDC:
  5827                           	callstack 25
  5828  005474                     
  5829                           ;fs_pwm.c: 47:     if (dutycycle <= 1023)
  5830  005474  BE59               	btfsc	(PWM1_setDC@dutycycle+1)^0,7,c
  5831  005476  EF46  F02A         	goto	u6740
  5832  00547A  0E04               	movlw	4
  5833  00547C  5C59               	subwf	(PWM1_setDC@dutycycle+1)^0,w,c
  5834  00547E  B0D8               	btfsc	status,0,c
  5835  005480  EF44  F02A         	goto	u6741
  5836  005484  EF46  F02A         	goto	u6740
  5837  005488                     u6741:
  5838  005488  EF76  F02A         	goto	l404
  5839  00548C                     u6740:
  5840  00548C                     
  5841                           ;fs_pwm.c: 48:     {;fs_pwm.c: 49:         duty = (uint16_t) fabsf(dutycycle);
  5842  00548C  C058  F00E         	movff	PWM1_setDC@dutycycle,___xxtofl@val
  5843  005490  C059  F00F         	movff	PWM1_setDC@dutycycle+1,___xxtofl@val+1
  5844  005494  0E00               	movlw	0
  5845  005496  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  5846  005498  0EFF               	movlw	-1
  5847  00549A  6E10               	movwf	(___xxtofl@val+2)^0,c
  5848  00549C  6E11               	movwf	(___xxtofl@val+3)^0,c
  5849  00549E  0E01               	movlw	1
  5850  0054A0  EC4A  F021         	call	___xxtofl
  5851  0054A4  C00E  F01C         	movff	?___xxtofl,fabsf@x
  5852  0054A8  C00F  F01D         	movff	?___xxtofl+1,fabsf@x+1
  5853  0054AC  C010  F01E         	movff	?___xxtofl+2,fabsf@x+2
  5854  0054B0  C011  F01F         	movff	?___xxtofl+3,fabsf@x+3
  5855  0054B4  ECBF  F02D         	call	_fabsf	;wreg free
  5856  0054B8  C01C  F04E         	movff	?_fabsf,___fltol@f1
  5857  0054BC  C01D  F04F         	movff	?_fabsf+1,___fltol@f1+1
  5858  0054C0  C01E  F050         	movff	?_fabsf+2,___fltol@f1+2
  5859  0054C4  C01F  F051         	movff	?_fabsf+3,___fltol@f1+3
  5860  0054C8  ECF2  F024         	call	___fltol	;wreg free
  5861  0054CC  C04E  F05C         	movff	?___fltol,PWM1_setDC@duty
  5862  0054D0  C04F  F05D         	movff	?___fltol+1,PWM1_setDC@duty+1
  5863  0054D4                     
  5864                           ;fs_pwm.c: 50:         CCPR1L = duty>>2;
  5865  0054D4  C05C  F05A         	movff	PWM1_setDC@duty,??_PWM1_setDC
  5866  0054D8  C05D  F05B         	movff	PWM1_setDC@duty+1,??_PWM1_setDC+1
  5867  0054DC  90D8               	bcf	status,0,c
  5868  0054DE  325B               	rrcf	(??_PWM1_setDC+1)^0,f,c
  5869  0054E0  325A               	rrcf	??_PWM1_setDC^0,f,c
  5870  0054E2  90D8               	bcf	status,0,c
  5871  0054E4  325B               	rrcf	(??_PWM1_setDC+1)^0,f,c
  5872  0054E6  325A               	rrcf	??_PWM1_setDC^0,f,c
  5873  0054E8  505A               	movf	??_PWM1_setDC^0,w,c
  5874  0054EA  6EBE               	movwf	190,c	;volatile
  5875  0054EC                     l404:
  5876  0054EC  0012               	return		;funcret
  5877  0054EE                     __end_of_PWM1_setDC:
  5878                           	callstack 0
  5879                           
  5880 ;; *************** function _fabsf *****************
  5881 ;; Defined at:
  5882 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fabsf.c"
  5883 ;; Parameters:    Size  Location     Type
  5884 ;;  x               4   27[COMRAM] float 
  5885 ;; Auto vars:     Size  Location     Type
  5886 ;;  u               4   31[COMRAM] struct .
  5887 ;; Return value:  Size  Location     Type
  5888 ;;                  4   27[COMRAM] float 
  5889 ;; Registers used:
  5890 ;;		status,2, status,0
  5891 ;; Tracked objects:
  5892 ;;		On entry : 0/0
  5893 ;;		On exit  : 0/0
  5894 ;;		Unchanged: 0/0
  5895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5896 ;;      Params:         4       0       0       0       0       0       0
  5897 ;;      Locals:         4       0       0       0       0       0       0
  5898 ;;      Temps:          0       0       0       0       0       0       0
  5899 ;;      Totals:         8       0       0       0       0       0       0
  5900 ;;Total ram usage:        8 bytes
  5901 ;; Hardware stack levels used:    1
  5902 ;; Hardware stack levels required when called:    1
  5903 ;; This function calls:
  5904 ;;		Nothing
  5905 ;; This function is called by:
  5906 ;;		_PWM1_setDC
  5907 ;;		_PWM2_setDC
  5908 ;; This function uses a non-reentrant model
  5909 ;;
  5910                           
  5911                           	psect	text17
  5912  005B7E                     __ptext17:
  5913                           	callstack 0
  5914  005B7E                     _fabsf:
  5915                           	callstack 25
  5916  005B7E  C1AB  F020         	movff	fabsf@F463,fabsf@u
  5917  005B82  C1AC  F021         	movff	fabsf@F463+1,fabsf@u+1
  5918  005B86  C1AD  F022         	movff	fabsf@F463+2,fabsf@u+2
  5919  005B8A  C1AE  F023         	movff	fabsf@F463+3,fabsf@u+3
  5920  005B8E  C01C  F020         	movff	fabsf@x,fabsf@u
  5921  005B92  C01D  F021         	movff	fabsf@x+1,fabsf@u+1
  5922  005B96  C01E  F022         	movff	fabsf@x+2,fabsf@u+2
  5923  005B9A  C01F  F023         	movff	fabsf@x+3,fabsf@u+3
  5924  005B9E  9E23               	bcf	(fabsf@u+3)^0,7,c
  5925  005BA0  C020  F01C         	movff	fabsf@u,?_fabsf
  5926  005BA4  C021  F01D         	movff	fabsf@u+1,?_fabsf+1
  5927  005BA8  C022  F01E         	movff	fabsf@u+2,?_fabsf+2
  5928  005BAC  C023  F01F         	movff	fabsf@u+3,?_fabsf+3
  5929  005BB0  0012               	return		;funcret
  5930  005BB2                     __end_of_fabsf:
  5931                           	callstack 0
  5932                           
  5933 ;; *************** function ___xxtofl *****************
  5934 ;; Defined at:
  5935 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
  5936 ;; Parameters:    Size  Location     Type
  5937 ;;  sign            1    wreg     unsigned char 
  5938 ;;  val             4   13[COMRAM] long 
  5939 ;; Auto vars:     Size  Location     Type
  5940 ;;  sign            1   21[COMRAM] unsigned char 
  5941 ;;  arg             4   23[COMRAM] unsigned long 
  5942 ;;  exp             1   22[COMRAM] unsigned char 
  5943 ;; Return value:  Size  Location     Type
  5944 ;;                  4   13[COMRAM] unsigned char 
  5945 ;; Registers used:
  5946 ;;		wreg, status,2, status,0
  5947 ;; Tracked objects:
  5948 ;;		On entry : 0/0
  5949 ;;		On exit  : 0/0
  5950 ;;		Unchanged: 0/0
  5951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5952 ;;      Params:         4       0       0       0       0       0       0
  5953 ;;      Locals:         6       0       0       0       0       0       0
  5954 ;;      Temps:          4       0       0       0       0       0       0
  5955 ;;      Totals:        14       0       0       0       0       0       0
  5956 ;;Total ram usage:       14 bytes
  5957 ;; Hardware stack levels used:    1
  5958 ;; Hardware stack levels required when called:    1
  5959 ;; This function calls:
  5960 ;;		Nothing
  5961 ;; This function is called by:
  5962 ;;		_scanAdcConversion
  5963 ;;		_calculatedAverageValue
  5964 ;;		_PWM1_setDC
  5965 ;;		_PWM2_setDC
  5966 ;;		_speedControl
  5967 ;; This function uses a non-reentrant model
  5968 ;;
  5969                           
  5970                           	psect	text18
  5971  004294                     __ptext18:
  5972                           	callstack 0
  5973  004294                     ___xxtofl:
  5974                           	callstack 25
  5975                           
  5976                           ;incstack = 0
  5977                           ;___xxtofl@sign stored from wreg
  5978  004294  6E16               	movwf	___xxtofl@sign^0,c
  5979  004296  5016               	movf	___xxtofl@sign^0,w,c
  5980  004298  B4D8               	btfsc	status,2,c
  5981  00429A  EF51  F021         	goto	u6431
  5982  00429E  EF53  F021         	goto	u6430
  5983  0042A2                     u6431:
  5984  0042A2  EF75  F021         	goto	l1140
  5985  0042A6                     u6430:
  5986  0042A6  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
  5987  0042A8  EF5A  F021         	goto	u6440
  5988  0042AC  EF58  F021         	goto	u6441
  5989  0042B0                     u6441:
  5990  0042B0  EF75  F021         	goto	l1140
  5991  0042B4                     u6440:
  5992  0042B4  C00E  F012         	movff	___xxtofl@val,??___xxtofl
  5993  0042B8  C00F  F013         	movff	___xxtofl@val+1,??___xxtofl+1
  5994  0042BC  C010  F014         	movff	___xxtofl@val+2,??___xxtofl+2
  5995  0042C0  C011  F015         	movff	___xxtofl@val+3,??___xxtofl+3
  5996  0042C4  1E12               	comf	??___xxtofl^0,f,c
  5997  0042C6  1E13               	comf	(??___xxtofl+1)^0,f,c
  5998  0042C8  1E14               	comf	(??___xxtofl+2)^0,f,c
  5999  0042CA  1E15               	comf	(??___xxtofl+3)^0,f,c
  6000  0042CC  2A12               	incf	??___xxtofl^0,f,c
  6001  0042CE  0E00               	movlw	0
  6002  0042D0  2213               	addwfc	(??___xxtofl+1)^0,f,c
  6003  0042D2  2214               	addwfc	(??___xxtofl+2)^0,f,c
  6004  0042D4  2215               	addwfc	(??___xxtofl+3)^0,f,c
  6005  0042D6  C012  F018         	movff	??___xxtofl,___xxtofl@arg
  6006  0042DA  C013  F019         	movff	??___xxtofl+1,___xxtofl@arg+1
  6007  0042DE  C014  F01A         	movff	??___xxtofl+2,___xxtofl@arg+2
  6008  0042E2  C015  F01B         	movff	??___xxtofl+3,___xxtofl@arg+3
  6009  0042E6  EF7D  F021         	goto	l5280
  6010  0042EA                     l1140:
  6011  0042EA  C00E  F018         	movff	___xxtofl@val,___xxtofl@arg
  6012  0042EE  C00F  F019         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6013  0042F2  C010  F01A         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6014  0042F6  C011  F01B         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6015  0042FA                     l5280:
  6016  0042FA  500E               	movf	___xxtofl@val^0,w,c
  6017  0042FC  100F               	iorwf	(___xxtofl@val+1)^0,w,c
  6018  0042FE  1010               	iorwf	(___xxtofl@val+2)^0,w,c
  6019  004300  1011               	iorwf	(___xxtofl@val+3)^0,w,c
  6020  004302  A4D8               	btfss	status,2,c
  6021  004304  EF86  F021         	goto	u6451
  6022  004308  EF88  F021         	goto	u6450
  6023  00430C                     u6451:
  6024  00430C  EF92  F021         	goto	l5286
  6025  004310                     u6450:
  6026  004310  0E00               	movlw	0
  6027  004312  6E0E               	movwf	?___xxtofl^0,c
  6028  004314  0E00               	movlw	0
  6029  004316  6E0F               	movwf	(?___xxtofl+1)^0,c
  6030  004318  0E00               	movlw	0
  6031  00431A  6E10               	movwf	(?___xxtofl+2)^0,c
  6032  00431C  0E00               	movlw	0
  6033  00431E  6E11               	movwf	(?___xxtofl+3)^0,c
  6034  004320  EF23  F022         	goto	l1143
  6035  004324                     l5286:
  6036  004324  0E96               	movlw	150
  6037  004326  6E17               	movwf	___xxtofl@exp^0,c
  6038  004328  EF9C  F021         	goto	l5290
  6039  00432C                     l5288:
  6040  00432C  2A17               	incf	___xxtofl@exp^0,f,c
  6041  00432E  90D8               	bcf	status,0,c
  6042  004330  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
  6043  004332  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
  6044  004334  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
  6045  004336  3218               	rrcf	___xxtofl@arg^0,f,c
  6046  004338                     l5290:
  6047  004338  0E00               	movlw	0
  6048  00433A  1418               	andwf	___xxtofl@arg^0,w,c
  6049  00433C  6E12               	movwf	??___xxtofl^0,c
  6050  00433E  0E00               	movlw	0
  6051  004340  1419               	andwf	(___xxtofl@arg+1)^0,w,c
  6052  004342  6E13               	movwf	(??___xxtofl+1)^0,c
  6053  004344  0E00               	movlw	0
  6054  004346  141A               	andwf	(___xxtofl@arg+2)^0,w,c
  6055  004348  6E14               	movwf	(??___xxtofl+2)^0,c
  6056  00434A  0EFE               	movlw	254
  6057  00434C  141B               	andwf	(___xxtofl@arg+3)^0,w,c
  6058  00434E  6E15               	movwf	(??___xxtofl+3)^0,c
  6059  004350  5012               	movf	??___xxtofl^0,w,c
  6060  004352  1013               	iorwf	(??___xxtofl+1)^0,w,c
  6061  004354  1014               	iorwf	(??___xxtofl+2)^0,w,c
  6062  004356  1015               	iorwf	(??___xxtofl+3)^0,w,c
  6063  004358  A4D8               	btfss	status,2,c
  6064  00435A  EFB1  F021         	goto	u6461
  6065  00435E  EFB3  F021         	goto	u6460
  6066  004362                     u6461:
  6067  004362  EF96  F021         	goto	l5288
  6068  004366                     u6460:
  6069  004366  EFC1  F021         	goto	l1147
  6070  00436A                     l5292:
  6071  00436A  2A17               	incf	___xxtofl@exp^0,f,c
  6072  00436C  0E01               	movlw	1
  6073  00436E  2618               	addwf	___xxtofl@arg^0,f,c
  6074  004370  0E00               	movlw	0
  6075  004372  2219               	addwfc	(___xxtofl@arg+1)^0,f,c
  6076  004374  221A               	addwfc	(___xxtofl@arg+2)^0,f,c
  6077  004376  221B               	addwfc	(___xxtofl@arg+3)^0,f,c
  6078  004378  90D8               	bcf	status,0,c
  6079  00437A  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
  6080  00437C  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
  6081  00437E  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
  6082  004380  3218               	rrcf	___xxtofl@arg^0,f,c
  6083  004382                     l1147:
  6084  004382  0E00               	movlw	0
  6085  004384  1418               	andwf	___xxtofl@arg^0,w,c
  6086  004386  6E12               	movwf	??___xxtofl^0,c
  6087  004388  0E00               	movlw	0
  6088  00438A  1419               	andwf	(___xxtofl@arg+1)^0,w,c
  6089  00438C  6E13               	movwf	(??___xxtofl+1)^0,c
  6090  00438E  0E00               	movlw	0
  6091  004390  141A               	andwf	(___xxtofl@arg+2)^0,w,c
  6092  004392  6E14               	movwf	(??___xxtofl+2)^0,c
  6093  004394  0EFF               	movlw	255
  6094  004396  141B               	andwf	(___xxtofl@arg+3)^0,w,c
  6095  004398  6E15               	movwf	(??___xxtofl+3)^0,c
  6096  00439A  5012               	movf	??___xxtofl^0,w,c
  6097  00439C  1013               	iorwf	(??___xxtofl+1)^0,w,c
  6098  00439E  1014               	iorwf	(??___xxtofl+2)^0,w,c
  6099  0043A0  1015               	iorwf	(??___xxtofl+3)^0,w,c
  6100  0043A2  A4D8               	btfss	status,2,c
  6101  0043A4  EFD6  F021         	goto	u6471
  6102  0043A8  EFD8  F021         	goto	u6470
  6103  0043AC                     u6471:
  6104  0043AC  EFB5  F021         	goto	l5292
  6105  0043B0                     u6470:
  6106  0043B0  EFE0  F021         	goto	l5300
  6107  0043B4                     l5298:
  6108  0043B4  0617               	decf	___xxtofl@exp^0,f,c
  6109  0043B6  90D8               	bcf	status,0,c
  6110  0043B8  3618               	rlcf	___xxtofl@arg^0,f,c
  6111  0043BA  3619               	rlcf	(___xxtofl@arg+1)^0,f,c
  6112  0043BC  361A               	rlcf	(___xxtofl@arg+2)^0,f,c
  6113  0043BE  361B               	rlcf	(___xxtofl@arg+3)^0,f,c
  6114  0043C0                     l5300:
  6115  0043C0  BE1A               	btfsc	(___xxtofl@arg+2)^0,7,c
  6116  0043C2  EFE5  F021         	goto	u6481
  6117  0043C6  EFE7  F021         	goto	u6480
  6118  0043CA                     u6481:
  6119  0043CA  EFEF  F021         	goto	l1154
  6120  0043CE                     u6480:
  6121  0043CE  0E02               	movlw	2
  6122  0043D0  6017               	cpfslt	___xxtofl@exp^0,c
  6123  0043D2  EFED  F021         	goto	u6491
  6124  0043D6  EFEF  F021         	goto	u6490
  6125  0043DA                     u6491:
  6126  0043DA  EFDA  F021         	goto	l5298
  6127  0043DE                     u6490:
  6128  0043DE                     l1154:
  6129  0043DE  B017               	btfsc	___xxtofl@exp^0,0,c
  6130  0043E0  EFF4  F021         	goto	u6501
  6131  0043E4  EFF6  F021         	goto	u6500
  6132  0043E8                     u6501:
  6133  0043E8  EFF7  F021         	goto	l5306
  6134  0043EC                     u6500:
  6135  0043EC  9E1A               	bcf	(___xxtofl@arg+2)^0,7,c
  6136  0043EE                     l5306:
  6137  0043EE  90D8               	bcf	status,0,c
  6138  0043F0  3217               	rrcf	___xxtofl@exp^0,f,c
  6139  0043F2  C017  F012         	movff	___xxtofl@exp,??___xxtofl
  6140  0043F6  6A13               	clrf	(??___xxtofl+1)^0,c
  6141  0043F8  6A14               	clrf	(??___xxtofl+2)^0,c
  6142  0043FA  6A15               	clrf	(??___xxtofl+3)^0,c
  6143  0043FC  C012  F015         	movff	??___xxtofl,??___xxtofl+3
  6144  004400  6A14               	clrf	(??___xxtofl+2)^0,c
  6145  004402  6A13               	clrf	(??___xxtofl+1)^0,c
  6146  004404  6A12               	clrf	??___xxtofl^0,c
  6147  004406  5012               	movf	??___xxtofl^0,w,c
  6148  004408  1218               	iorwf	___xxtofl@arg^0,f,c
  6149  00440A  5013               	movf	(??___xxtofl+1)^0,w,c
  6150  00440C  1219               	iorwf	(___xxtofl@arg+1)^0,f,c
  6151  00440E  5014               	movf	(??___xxtofl+2)^0,w,c
  6152  004410  121A               	iorwf	(___xxtofl@arg+2)^0,f,c
  6153  004412  5015               	movf	(??___xxtofl+3)^0,w,c
  6154  004414  121B               	iorwf	(___xxtofl@arg+3)^0,f,c
  6155  004416  5016               	movf	___xxtofl@sign^0,w,c
  6156  004418  B4D8               	btfsc	status,2,c
  6157  00441A  EF11  F022         	goto	u6511
  6158  00441E  EF13  F022         	goto	u6510
  6159  004422                     u6511:
  6160  004422  EF1B  F022         	goto	l5316
  6161  004426                     u6510:
  6162  004426  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
  6163  004428  EF1A  F022         	goto	u6520
  6164  00442C  EF18  F022         	goto	u6521
  6165  004430                     u6521:
  6166  004430  EF1B  F022         	goto	l5316
  6167  004434                     u6520:
  6168  004434  8E1B               	bsf	(___xxtofl@arg+3)^0,7,c
  6169  004436                     l5316:
  6170  004436  C018  F00E         	movff	___xxtofl@arg,?___xxtofl
  6171  00443A  C019  F00F         	movff	___xxtofl@arg+1,?___xxtofl+1
  6172  00443E  C01A  F010         	movff	___xxtofl@arg+2,?___xxtofl+2
  6173  004442  C01B  F011         	movff	___xxtofl@arg+3,?___xxtofl+3
  6174  004446                     l1143:
  6175  004446  0012               	return		;funcret
  6176  004448                     __end_of___xxtofl:
  6177                           	callstack 0
  6178                           
  6179 ;; *************** function _sprintf *****************
  6180 ;; Defined at:
  6181 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  6182 ;; Parameters:    Size  Location     Type
  6183 ;;  s               2  111[BANK0 ] PTR unsigned char 
  6184 ;;		 -> stateMachine@textCursor2(16), 
  6185 ;;  fmt             2  113[BANK0 ] PTR const unsigned char 
  6186 ;;		 -> STR_16(13), STR_14(14), STR_12(16), STR_10(16), 
  6187 ;;		 -> STR_8(18), STR_6(16), STR_4(18), STR_2(15), 
  6188 ;; Auto vars:     Size  Location     Type
  6189 ;;  f               6  123[BANK0 ] struct _IO_FILE
  6190 ;;  ap              2  121[BANK0 ] PTR void [1]
  6191 ;;		 -> ?_sprintf(2), 
  6192 ;;  ret             2    0        int 
  6193 ;; Return value:  Size  Location     Type
  6194 ;;                  2  111[BANK0 ] int 
  6195 ;; Registers used:
  6196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6197 ;; Tracked objects:
  6198 ;;		On entry : 0/0
  6199 ;;		On exit  : 0/0
  6200 ;;		Unchanged: 0/0
  6201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6202 ;;      Params:         0       8       0       0       0       0       0
  6203 ;;      Locals:         0      10       0       0       0       0       0
  6204 ;;      Temps:          0       0       0       0       0       0       0
  6205 ;;      Totals:         0      18       0       0       0       0       0
  6206 ;;Total ram usage:       18 bytes
  6207 ;; Hardware stack levels used:    1
  6208 ;; Hardware stack levels required when called:    8
  6209 ;; This function calls:
  6210 ;;		_vfprintf
  6211 ;; This function is called by:
  6212 ;;		_stateMachine
  6213 ;; This function uses a non-reentrant model
  6214 ;;
  6215                           
  6216                           	psect	text19
  6217  005808                     __ptext19:
  6218                           	callstack 0
  6219  005808                     _sprintf:
  6220                           	callstack 20
  6221  005808  0ED3               	movlw	low (?_sprintf+4)
  6222  00580A  0100               	movlb	0	; () banked
  6223  00580C  6FD9               	movwf	sprintf@ap& (0+255),b
  6224  00580E  0E00               	movlw	high (?_sprintf+4)
  6225  005810  6FDA               	movwf	(sprintf@ap+1)& (0+255),b
  6226  005812  C0CF  F0DB         	movff	sprintf@s,sprintf@f
  6227  005816  C0D0  F0DC         	movff	sprintf@s+1,sprintf@f+1
  6228  00581A                     
  6229                           ; BSR set to: 0
  6230  00581A  0E00               	movlw	0
  6231  00581C  6FDE               	movwf	(sprintf@f+3)& (0+255),b
  6232  00581E  0E00               	movlw	0
  6233  005820  6FDD               	movwf	(sprintf@f+2)& (0+255),b
  6234  005822                     
  6235                           ; BSR set to: 0
  6236  005822  0E00               	movlw	0
  6237  005824  6FE0               	movwf	(sprintf@f+5)& (0+255),b
  6238  005826  0E00               	movlw	0
  6239  005828  6FDF               	movwf	(sprintf@f+4)& (0+255),b
  6240  00582A                     
  6241                           ; BSR set to: 0
  6242  00582A  0EDB               	movlw	low sprintf@f
  6243  00582C  6FC7               	movwf	vfprintf@fp& (0+255),b
  6244  00582E  0E00               	movlw	high sprintf@f
  6245  005830  6FC8               	movwf	(vfprintf@fp+1)& (0+255),b
  6246  005832  C0D1  F0C9         	movff	sprintf@fmt,vfprintf@fmt
  6247  005836  C0D2  F0CA         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6248  00583A  0ED9               	movlw	low sprintf@ap
  6249  00583C  6FCB               	movwf	vfprintf@ap& (0+255),b
  6250  00583E  0E00               	movlw	high sprintf@ap
  6251  005840  6FCC               	movwf	(vfprintf@ap+1)& (0+255),b
  6252  005842  ECE7  F02A         	call	_vfprintf	;wreg free
  6253  005846  0100               	movlb	0	; () banked
  6254  005848  51DD               	movf	(sprintf@f+2)& (0+255),w,b
  6255  00584A  25CF               	addwf	sprintf@s& (0+255),w,b
  6256  00584C  6ED9               	movwf	fsr2l,c
  6257  00584E  51DE               	movf	(sprintf@f+3)& (0+255),w,b
  6258  005850  21D0               	addwfc	(sprintf@s+1)& (0+255),w,b
  6259  005852  6EDA               	movwf	fsr2h,c
  6260  005854  0E00               	movlw	0
  6261  005856  6EDF               	movwf	indf2,c
  6262  005858                     
  6263                           ; BSR set to: 0
  6264  005858  0012               	return		;funcret
  6265  00585A                     __end_of_sprintf:
  6266                           	callstack 0
  6267                           
  6268 ;; *************** function _vfprintf *****************
  6269 ;; Defined at:
  6270 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6271 ;; Parameters:    Size  Location     Type
  6272 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  6273 ;;		 -> sprintf@f(6), 
  6274 ;;  fmt             2  105[BANK0 ] PTR const unsigned char 
  6275 ;;		 -> STR_16(13), STR_14(14), STR_12(16), STR_10(16), 
  6276 ;;		 -> STR_8(18), STR_6(16), STR_4(18), STR_2(15), 
  6277 ;;  ap              2  107[BANK0 ] PTR PTR void 
  6278 ;;		 -> sprintf@ap(2), 
  6279 ;; Auto vars:     Size  Location     Type
  6280 ;;  cfmt            2  109[BANK0 ] PTR unsigned char 
  6281 ;;		 -> STR_16(13), STR_14(14), STR_12(16), STR_10(16), 
  6282 ;;		 -> STR_8(18), STR_6(16), STR_4(18), STR_2(15), 
  6283 ;; Return value:  Size  Location     Type
  6284 ;;                  2  103[BANK0 ] int 
  6285 ;; Registers used:
  6286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6287 ;; Tracked objects:
  6288 ;;		On entry : 0/0
  6289 ;;		On exit  : 0/0
  6290 ;;		Unchanged: 0/0
  6291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6292 ;;      Params:         0       6       0       0       0       0       0
  6293 ;;      Locals:         0       2       0       0       0       0       0
  6294 ;;      Temps:          0       0       0       0       0       0       0
  6295 ;;      Totals:         0       8       0       0       0       0       0
  6296 ;;Total ram usage:        8 bytes
  6297 ;; Hardware stack levels used:    1
  6298 ;; Hardware stack levels required when called:    7
  6299 ;; This function calls:
  6300 ;;		_vfpfcnvrt
  6301 ;; This function is called by:
  6302 ;;		_sprintf
  6303 ;; This function uses a non-reentrant model
  6304 ;;
  6305                           
  6306                           	psect	text20
  6307  0055CE                     __ptext20:
  6308                           	callstack 0
  6309  0055CE                     _vfprintf:
  6310                           	callstack 20
  6311  0055CE                     
  6312                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6313  0055CE  C0C9  F0CD         	movff	vfprintf@fmt,vfprintf@cfmt
  6314  0055D2  C0CA  F0CE         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6315  0055D6                     
  6316                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  6317  0055D6  0E00               	movlw	0
  6318  0055D8  0101               	movlb	1	; () banked
  6319  0055DA  6FB0               	movwf	(_nout+1)& (0+255),b
  6320  0055DC  0E00               	movlw	0
  6321  0055DE  6FAF               	movwf	_nout& (0+255),b
  6322                           
  6323                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  6324  0055E0  EF09  F02B         	goto	l5592
  6325  0055E4                     l5590:
  6326                           
  6327                           ; BSR set to: 1
  6328                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6329  0055E4  C0C7  F0A7         	movff	vfprintf@fp,vfpfcnvrt@fp
  6330  0055E8  C0C8  F0A8         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6331  0055EC  0ECD               	movlw	low vfprintf@cfmt
  6332  0055EE  0100               	movlb	0	; () banked
  6333  0055F0  6FA9               	movwf	vfpfcnvrt@fmt& (0+255),b
  6334  0055F2  0E00               	movlw	high vfprintf@cfmt
  6335  0055F4  6FAA               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  6336  0055F6  C0CB  F0AB         	movff	vfprintf@ap,vfpfcnvrt@ap
  6337  0055FA  C0CC  F0AC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6338  0055FE  EC34  F012         	call	_vfpfcnvrt	;wreg free
  6339  005602  0100               	movlb	0	; () banked
  6340  005604  51A7               	movf	?_vfpfcnvrt& (0+255),w,b
  6341  005606  0101               	movlb	1	; () banked
  6342  005608  27AF               	addwf	_nout& (0+255),f,b
  6343  00560A  0100               	movlb	0	; () banked
  6344  00560C  51A8               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  6345  00560E  0101               	movlb	1	; () banked
  6346  005610  23B0               	addwfc	(_nout+1)& (0+255),f,b
  6347  005612                     l5592:
  6348                           
  6349                           ; BSR set to: 1
  6350                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  6351  005612  C0CD  FFF6         	movff	vfprintf@cfmt,tblptrl
  6352  005616  C0CE  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6353  00561A                     	if	0	;tblptru may be non-zero
  6354  00561A                     	endif
  6355  00561A                     	if	0	;tblptru may be non-zero
  6356  00561A                     	endif
  6357  00561A  0008               	tblrd		*
  6358  00561C  50F5               	movf	tablat,w,c
  6359  00561E  0900               	iorlw	0
  6360  005620  A4D8               	btfss	status,2,c
  6361  005622  EF15  F02B         	goto	u6801
  6362  005626  EF17  F02B         	goto	u6800
  6363  00562A                     u6801:
  6364  00562A  EFF2  F02A         	goto	l5590
  6365  00562E                     u6800:
  6366  00562E                     
  6367                           ; BSR set to: 1
  6368                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  6369  00562E  C1AF  F0C7         	movff	_nout,?_vfprintf
  6370  005632  C1B0  F0C8         	movff	_nout+1,?_vfprintf+1
  6371  005636                     
  6372                           ; BSR set to: 1
  6373  005636  0012               	return		;funcret
  6374  005638                     __end_of_vfprintf:
  6375                           	callstack 0
  6376                           
  6377 ;; *************** function _vfpfcnvrt *****************
  6378 ;; Defined at:
  6379 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6380 ;; Parameters:    Size  Location     Type
  6381 ;;  fp              2   71[BANK0 ] PTR struct _IO_FILE
  6382 ;;		 -> sprintf@f(6), 
  6383 ;;  fmt             2   73[BANK0 ] PTR PTR unsigned char 
  6384 ;;		 -> vfprintf@cfmt(2), 
  6385 ;;  ap              2   75[BANK0 ] PTR PTR void 
  6386 ;;		 -> sprintf@ap(2), 
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;  ll              8   81[BANK0 ] long long 
  6389 ;;  llu             8    0        unsigned long long 
  6390 ;;  f               4   95[BANK0 ] unsigned long long 
  6391 ;;  ct              3   99[BANK0 ] unsigned char [3]
  6392 ;;  vp              3    0        PTR void 
  6393 ;;  cp              3    0        PTR unsigned char 
  6394 ;;  i               2    0        int 
  6395 ;;  done            2    0        int 
  6396 ;;  c               1  102[BANK0 ] unsigned char 
  6397 ;; Return value:  Size  Location     Type
  6398 ;;                  2   71[BANK0 ] int 
  6399 ;; Registers used:
  6400 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6401 ;; Tracked objects:
  6402 ;;		On entry : 0/0
  6403 ;;		On exit  : 0/0
  6404 ;;		Unchanged: 0/0
  6405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6406 ;;      Params:         0       6       0       0       0       0       0
  6407 ;;      Locals:         0      22       0       0       0       0       0
  6408 ;;      Temps:          0       4       0       0       0       0       0
  6409 ;;      Totals:         0      32       0       0       0       0       0
  6410 ;;Total ram usage:       32 bytes
  6411 ;; Hardware stack levels used:    1
  6412 ;; Hardware stack levels required when called:    6
  6413 ;; This function calls:
  6414 ;;		_atoi
  6415 ;;		_dtoa
  6416 ;;		_efgtoa
  6417 ;;		_fputc
  6418 ;;		_isdigit
  6419 ;;		_isupper
  6420 ;;		_strncmp
  6421 ;;		_tolower
  6422 ;; This function is called by:
  6423 ;;		_vfprintf
  6424 ;; This function uses a non-reentrant model
  6425 ;;
  6426                           
  6427                           	psect	text21
  6428  002468                     __ptext21:
  6429                           	callstack 0
  6430  002468                     _vfpfcnvrt:
  6431                           	callstack 20
  6432  002468                     
  6433                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  6434  002468  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6435  00246C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6436  002470  CFDE FFF6          	movff	postinc2,tblptrl
  6437  002474  CFDD FFF7          	movff	postdec2,tblptrh
  6438  002478                     	if	0	;tblptru may be non-zero
  6439  002478                     	endif
  6440  002478                     	if	0	;tblptru may be non-zero
  6441  002478                     	endif
  6442  002478  0008               	tblrd		*
  6443  00247A  50F5               	movf	tablat,w,c
  6444  00247C  0A25               	xorlw	37
  6445  00247E  A4D8               	btfss	status,2,c
  6446  002480  EF44  F012         	goto	u6531
  6447  002484  EF46  F012         	goto	u6530
  6448  002488                     u6531:
  6449  002488  EF37  F015         	goto	l5430
  6450  00248C                     u6530:
  6451  00248C                     
  6452                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  6453  00248C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6454  002490  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6455  002494  2ADE               	incf	postinc2,f,c
  6456  002496  0E00               	movlw	0
  6457  002498  22DD               	addwfc	postdec2,f,c
  6458  00249A                     
  6459                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  6460  00249A  0E00               	movlw	0
  6461  00249C  0101               	movlb	1	; () banked
  6462  00249E  6FB2               	movwf	(_width+1)& (0+255),b
  6463  0024A0  0E00               	movlw	0
  6464  0024A2  6FB1               	movwf	_width& (0+255),b
  6465  0024A4  C1B1  F0F8         	movff	_width,_flags
  6466  0024A8  C1B2  F0F9         	movff	_width+1,_flags+1
  6467  0024AC                     
  6468                           ; BSR set to: 1
  6469                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  6470  0024AC  0100               	movlb	0	; () banked
  6471  0024AE  69F6               	setf	_prec& (0+255),b
  6472  0024B0  69F7               	setf	(_prec+1)& (0+255),b
  6473  0024B2                     
  6474                           ; BSR set to: 0
  6475                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  6476  0024B2  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6477  0024B6  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6478  0024BA  CFDE FFF6          	movff	postinc2,tblptrl
  6479  0024BE  CFDD FFF7          	movff	postdec2,tblptrh
  6480  0024C2                     	if	0	;tblptru may be non-zero
  6481  0024C2                     	endif
  6482  0024C2                     	if	0	;tblptru may be non-zero
  6483  0024C2                     	endif
  6484  0024C2  0008               	tblrd		*
  6485  0024C4  50F5               	movf	tablat,w,c
  6486  0024C6  0A2A               	xorlw	42
  6487  0024C8  A4D8               	btfss	status,2,c
  6488  0024CA  EF69  F012         	goto	u6541
  6489  0024CE  EF6B  F012         	goto	u6540
  6490  0024D2                     u6541:
  6491  0024D2  EF97  F012         	goto	l5336
  6492  0024D6                     u6540:
  6493  0024D6                     
  6494                           ; BSR set to: 0
  6495                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  6496  0024D6  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6497  0024DA  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6498  0024DE  2ADE               	incf	postinc2,f,c
  6499  0024E0  0E00               	movlw	0
  6500  0024E2  22DD               	addwfc	postdec2,f,c
  6501                           
  6502                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6503  0024E4  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6504  0024E8  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6505  0024EC  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6506  0024F0  0E02               	movlw	2
  6507  0024F2  26DE               	addwf	postinc2,f,c
  6508  0024F4  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6509  0024F8  0E00               	movlw	0
  6510  0024FA  22DD               	addwfc	postdec2,f,c
  6511  0024FC  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6512  002500  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6513  002504  CFDE F1B1          	movff	postinc2,_width
  6514  002508  CFDD F1B2          	movff	postdec2,_width+1
  6515  00250C                     
  6516                           ; BSR set to: 0
  6517                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  6518  00250C  0101               	movlb	1	; () banked
  6519  00250E  BFB2               	btfsc	(_width+1)& (0+255),7,b
  6520  002510  EF8E  F012         	goto	u6550
  6521  002514  EF8C  F012         	goto	u6551
  6522  002518                     u6551:
  6523  002518  EFDB  F012         	goto	l5346
  6524  00251C                     u6550:
  6525  00251C                     
  6526                           ; BSR set to: 1
  6527                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  6528  00251C  0100               	movlb	0	; () banked
  6529  00251E  81F8               	bsf	_flags& (0+255),0,b
  6530                           
  6531                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  6532  002520  0101               	movlb	1	; () banked
  6533  002522  6DB1               	negf	_width& (0+255),b
  6534  002524  1FB2               	comf	(_width+1)& (0+255),f,b
  6535  002526  B0D8               	btfsc	status,0,c
  6536  002528  2BB2               	incf	(_width+1)& (0+255),f,b
  6537  00252A  EFDB  F012         	goto	l5346
  6538  00252E                     l5336:
  6539                           
  6540                           ; BSR set to: 0
  6541                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  6542  00252E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6543  002532  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6544  002536  CFDE F008          	movff	postinc2,atoi@s
  6545  00253A  CFDD F009          	movff	postdec2,atoi@s+1
  6546  00253E  EC24  F022         	call	_atoi	;wreg free
  6547  002542  C008  F1B1         	movff	?_atoi,_width
  6548  002546  C009  F1B2         	movff	?_atoi+1,_width+1
  6549                           
  6550                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6551  00254A  EFAE  F012         	goto	l5340
  6552  00254E                     l5338:
  6553                           
  6554                           ; BSR set to: 0
  6555                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  6556  00254E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6557  002552  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6558  002556  2ADE               	incf	postinc2,f,c
  6559  002558  0E00               	movlw	0
  6560  00255A  22DD               	addwfc	postdec2,f,c
  6561  00255C                     l5340:
  6562  00255C  0ED0               	movlw	208
  6563  00255E  0100               	movlb	0	; () banked
  6564  002560  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  6565  002562  0EFF               	movlw	255
  6566  002564  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6567  002566  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6568  00256A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6569  00256E  CFDE FFF6          	movff	postinc2,tblptrl
  6570  002572  CFDD FFF7          	movff	postdec2,tblptrh
  6571  002576                     	if	0	;tblptru may be non-zero
  6572  002576                     	endif
  6573  002576                     	if	0	;tblptru may be non-zero
  6574  002576                     	endif
  6575  002576  0008               	tblrd		*
  6576  002578  50F5               	movf	tablat,w,c
  6577  00257A  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6578  00257C  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  6579  00257E  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  6580  002580  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  6581  002582  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6582  002584  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  6583  002586  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  6584  002588  E10A               	bnz	u6560
  6585  00258A  0E0A               	movlw	10
  6586  00258C  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  6587  00258E  A0D8               	btfss	status,0,c
  6588  002590  EFCC  F012         	goto	u6561
  6589  002594  EFCF  F012         	goto	u6560
  6590  002598                     u6561:
  6591  002598  0E01               	movlw	1
  6592  00259A  EFD0  F012         	goto	u6570
  6593  00259E                     u6560:
  6594  00259E  0E00               	movlw	0
  6595  0025A0                     u6570:
  6596  0025A0  6FB9               	movwf	_vfpfcnvrt$2534& (0+255),b
  6597  0025A2  6BBA               	clrf	(_vfpfcnvrt$2534+1)& (0+255),b
  6598  0025A4                     
  6599                           ; BSR set to: 0
  6600  0025A4  51B9               	movf	_vfpfcnvrt$2534& (0+255),w,b
  6601  0025A6  11BA               	iorwf	(_vfpfcnvrt$2534+1)& (0+255),w,b
  6602  0025A8  A4D8               	btfss	status,2,c
  6603  0025AA  EFD9  F012         	goto	u6581
  6604  0025AE  EFDB  F012         	goto	u6580
  6605  0025B2                     u6581:
  6606  0025B2  EFA7  F012         	goto	l5338
  6607  0025B6                     u6580:
  6608  0025B6                     l5346:
  6609                           
  6610                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  6611  0025B6  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6612  0025BA  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6613  0025BE  CFDE FFF6          	movff	postinc2,tblptrl
  6614  0025C2  CFDD FFF7          	movff	postdec2,tblptrh
  6615  0025C6                     	if	0	;tblptru may be non-zero
  6616  0025C6                     	endif
  6617  0025C6                     	if	0	;tblptru may be non-zero
  6618  0025C6                     	endif
  6619  0025C6  0008               	tblrd		*
  6620  0025C8  50F5               	movf	tablat,w,c
  6621  0025CA  0A2E               	xorlw	46
  6622  0025CC  A4D8               	btfss	status,2,c
  6623  0025CE  EFEB  F012         	goto	u6591
  6624  0025D2  EFED  F012         	goto	u6590
  6625  0025D6                     u6591:
  6626  0025D6  EF6C  F013         	goto	l5366
  6627  0025DA                     u6590:
  6628  0025DA                     
  6629                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  6630  0025DA  0E00               	movlw	0
  6631  0025DC  0100               	movlb	0	; () banked
  6632  0025DE  6FF7               	movwf	(_prec+1)& (0+255),b
  6633  0025E0  0E00               	movlw	0
  6634  0025E2  6FF6               	movwf	_prec& (0+255),b
  6635  0025E4                     
  6636                           ; BSR set to: 0
  6637                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  6638  0025E4  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6639  0025E8  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6640  0025EC  2ADE               	incf	postinc2,f,c
  6641  0025EE  0E00               	movlw	0
  6642  0025F0  22DD               	addwfc	postdec2,f,c
  6643  0025F2                     
  6644                           ; BSR set to: 0
  6645                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  6646  0025F2  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6647  0025F6  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6648  0025FA  CFDE FFF6          	movff	postinc2,tblptrl
  6649  0025FE  CFDD FFF7          	movff	postdec2,tblptrh
  6650  002602                     	if	0	;tblptru may be non-zero
  6651  002602                     	endif
  6652  002602                     	if	0	;tblptru may be non-zero
  6653  002602                     	endif
  6654  002602  0008               	tblrd		*
  6655  002604  50F5               	movf	tablat,w,c
  6656  002606  0A2A               	xorlw	42
  6657  002608  A4D8               	btfss	status,2,c
  6658  00260A  EF09  F013         	goto	u6601
  6659  00260E  EF0B  F013         	goto	u6600
  6660  002612                     u6601:
  6661  002612  EF28  F013         	goto	l5356
  6662  002616                     u6600:
  6663  002616                     
  6664                           ; BSR set to: 0
  6665                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  6666  002616  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6667  00261A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6668  00261E  2ADE               	incf	postinc2,f,c
  6669  002620  0E00               	movlw	0
  6670  002622  22DD               	addwfc	postdec2,f,c
  6671                           
  6672                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  6673  002624  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6674  002628  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6675  00262C  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6676  002630  0E02               	movlw	2
  6677  002632  26DE               	addwf	postinc2,f,c
  6678  002634  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6679  002638  0E00               	movlw	0
  6680  00263A  22DD               	addwfc	postdec2,f,c
  6681  00263C  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6682  002640  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6683  002644  CFDE F0F6          	movff	postinc2,_prec
  6684  002648  CFDD F0F7          	movff	postdec2,_prec+1
  6685                           
  6686                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  6687  00264C  EF6C  F013         	goto	l5366
  6688  002650                     l5356:
  6689                           
  6690                           ; BSR set to: 0
  6691                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  6692  002650  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6693  002654  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6694  002658  CFDE F008          	movff	postinc2,atoi@s
  6695  00265C  CFDD F009          	movff	postdec2,atoi@s+1
  6696  002660  EC24  F022         	call	_atoi	;wreg free
  6697  002664  C008  F0F6         	movff	?_atoi,_prec
  6698  002668  C009  F0F7         	movff	?_atoi+1,_prec+1
  6699                           
  6700                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6701  00266C  EF3F  F013         	goto	l5360
  6702  002670                     l5358:
  6703                           
  6704                           ; BSR set to: 0
  6705                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  6706  002670  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6707  002674  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6708  002678  2ADE               	incf	postinc2,f,c
  6709  00267A  0E00               	movlw	0
  6710  00267C  22DD               	addwfc	postdec2,f,c
  6711  00267E                     l5360:
  6712  00267E  0ED0               	movlw	208
  6713  002680  0100               	movlb	0	; () banked
  6714  002682  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  6715  002684  0EFF               	movlw	255
  6716  002686  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6717  002688  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6718  00268C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6719  002690  CFDE FFF6          	movff	postinc2,tblptrl
  6720  002694  CFDD FFF7          	movff	postdec2,tblptrh
  6721  002698                     	if	0	;tblptru may be non-zero
  6722  002698                     	endif
  6723  002698                     	if	0	;tblptru may be non-zero
  6724  002698                     	endif
  6725  002698  0008               	tblrd		*
  6726  00269A  50F5               	movf	tablat,w,c
  6727  00269C  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6728  00269E  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  6729  0026A0  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  6730  0026A2  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  6731  0026A4  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6732  0026A6  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  6733  0026A8  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  6734  0026AA  E10A               	bnz	u6610
  6735  0026AC  0E0A               	movlw	10
  6736  0026AE  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  6737  0026B0  A0D8               	btfss	status,0,c
  6738  0026B2  EF5D  F013         	goto	u6611
  6739  0026B6  EF60  F013         	goto	u6610
  6740  0026BA                     u6611:
  6741  0026BA  0E01               	movlw	1
  6742  0026BC  EF61  F013         	goto	u6620
  6743  0026C0                     u6610:
  6744  0026C0  0E00               	movlw	0
  6745  0026C2                     u6620:
  6746  0026C2  6FBB               	movwf	_vfpfcnvrt$2535& (0+255),b
  6747  0026C4  6BBC               	clrf	(_vfpfcnvrt$2535+1)& (0+255),b
  6748  0026C6                     
  6749                           ; BSR set to: 0
  6750  0026C6  51BB               	movf	_vfpfcnvrt$2535& (0+255),w,b
  6751  0026C8  11BC               	iorwf	(_vfpfcnvrt$2535+1)& (0+255),w,b
  6752  0026CA  A4D8               	btfss	status,2,c
  6753  0026CC  EF6A  F013         	goto	u6631
  6754  0026D0  EF6C  F013         	goto	u6630
  6755  0026D4                     u6631:
  6756  0026D4  EF38  F013         	goto	l5358
  6757  0026D8                     u6630:
  6758  0026D8                     l5366:
  6759                           
  6760                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0
      +                          ] = tolower((int)(*fmt)[0]);
  6761  0026D8  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6762  0026DC  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6763  0026E0  CFDE FFF6          	movff	postinc2,tblptrl
  6764  0026E4  CFDD FFF7          	movff	postdec2,tblptrh
  6765  0026E8                     	if	0	;tblptru may be non-zero
  6766  0026E8                     	endif
  6767  0026E8                     	if	0	;tblptru may be non-zero
  6768  0026E8                     	endif
  6769  0026E8  0008               	tblrd		*
  6770  0026EA  50F5               	movf	tablat,w,c
  6771  0026EC  6E07               	movwf	tolower@c^0,c
  6772  0026EE  6A08               	clrf	(tolower@c+1)^0,c
  6773  0026F0  EC4F  F02B         	call	_tolower	;wreg free
  6774  0026F4  5007               	movf	?_tolower^0,w,c
  6775  0026F6  0100               	movlb	0	; () banked
  6776  0026F8  6FC3               	movwf	vfpfcnvrt@ct& (0+255),b
  6777  0026FA                     
  6778                           ; BSR set to: 0
  6779                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (
      +                          ct[0]) {
  6780  0026FA  51C3               	movf	vfpfcnvrt@ct& (0+255),w,b
  6781  0026FC  B4D8               	btfsc	status,2,c
  6782  0026FE  EF83  F013         	goto	u6641
  6783  002702  EF85  F013         	goto	u6640
  6784  002706                     u6641:
  6785  002706  EFBF  F013         	goto	l5376
  6786  00270A                     u6640:
  6787  00270A                     
  6788                           ; BSR set to: 0
  6789                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             
      +                          ct[1] = tolower((int)(*fmt)[1]);
  6790  00270A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6791  00270E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6792  002712  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  6793  002716  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  6794  00271A  0E01               	movlw	1
  6795  00271C  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  6796  00271E  0E00               	movlw	0
  6797  002720  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6798  002722  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6799  002726  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6800  00272A                     	if	0	;tblptru may be non-zero
  6801  00272A                     	endif
  6802  00272A                     	if	0	;tblptru may be non-zero
  6803  00272A                     	endif
  6804  00272A  0008               	tblrd		*
  6805  00272C  50F5               	movf	tablat,w,c
  6806  00272E  6E07               	movwf	tolower@c^0,c
  6807  002730  6A08               	clrf	(tolower@c+1)^0,c
  6808  002732  EC4F  F02B         	call	_tolower	;wreg free
  6809  002736  5007               	movf	?_tolower^0,w,c
  6810  002738  0100               	movlb	0	; () banked
  6811  00273A  6FC4               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  6812  00273C                     
  6813                           ; BSR set to: 0
  6814                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             
      +                          if (ct[1]) {
  6815  00273C  51C4               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  6816  00273E  B4D8               	btfsc	status,2,c
  6817  002740  EFA4  F013         	goto	u6651
  6818  002744  EFA6  F013         	goto	u6650
  6819  002748                     u6651:
  6820  002748  EFBF  F013         	goto	l5376
  6821  00274C                     u6650:
  6822  00274C                     
  6823                           ; BSR set to: 0
  6824                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:             
      +                              ct[2] = tolower((int)(*fmt)[2]);
  6825  00274C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6826  002750  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6827  002754  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  6828  002758  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  6829  00275C  0E02               	movlw	2
  6830  00275E  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  6831  002760  0E00               	movlw	0
  6832  002762  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6833  002764  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6834  002768  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6835  00276C                     	if	0	;tblptru may be non-zero
  6836  00276C                     	endif
  6837  00276C                     	if	0	;tblptru may be non-zero
  6838  00276C                     	endif
  6839  00276C  0008               	tblrd		*
  6840  00276E  50F5               	movf	tablat,w,c
  6841  002770  6E07               	movwf	tolower@c^0,c
  6842  002772  6A08               	clrf	(tolower@c+1)^0,c
  6843  002774  EC4F  F02B         	call	_tolower	;wreg free
  6844  002778  5007               	movf	?_tolower^0,w,c
  6845  00277A  0100               	movlb	0	; () banked
  6846  00277C  6FC5               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  6847  00277E                     l5376:
  6848                           
  6849                           ; BSR set to: 0
  6850                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6851  00277E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6852  002782  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6853  002786  CFDE FFF6          	movff	postinc2,tblptrl
  6854  00278A  CFDD FFF7          	movff	postdec2,tblptrh
  6855  00278E                     	if	0	;tblptru may be non-zero
  6856  00278E                     	endif
  6857  00278E                     	if	0	;tblptru may be non-zero
  6858  00278E                     	endif
  6859  00278E  0008               	tblrd		*
  6860  002790  50F5               	movf	tablat,w,c
  6861  002792  0A64               	xorlw	100
  6862  002794  B4D8               	btfsc	status,2,c
  6863  002796  EFCF  F013         	goto	u6661
  6864  00279A  EFD1  F013         	goto	u6660
  6865  00279E                     u6661:
  6866  00279E  EFE3  F013         	goto	l5380
  6867  0027A2                     u6660:
  6868  0027A2                     
  6869                           ; BSR set to: 0
  6870  0027A2  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6871  0027A6  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6872  0027AA  CFDE FFF6          	movff	postinc2,tblptrl
  6873  0027AE  CFDD FFF7          	movff	postdec2,tblptrh
  6874  0027B2                     	if	0	;tblptru may be non-zero
  6875  0027B2                     	endif
  6876  0027B2                     	if	0	;tblptru may be non-zero
  6877  0027B2                     	endif
  6878  0027B2  0008               	tblrd		*
  6879  0027B4  50F5               	movf	tablat,w,c
  6880  0027B6  0A69               	xorlw	105
  6881  0027B8  A4D8               	btfss	status,2,c
  6882  0027BA  EFE1  F013         	goto	u6671
  6883  0027BE  EFE3  F013         	goto	u6670
  6884  0027C2                     u6671:
  6885  0027C2  EF23  F014         	goto	l5386
  6886  0027C6                     u6670:
  6887  0027C6                     l5380:
  6888                           
  6889                           ; BSR set to: 0
  6890                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  6891  0027C6  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6892  0027CA  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6893  0027CE  2ADE               	incf	postinc2,f,c
  6894  0027D0  0E00               	movlw	0
  6895  0027D2  22DD               	addwfc	postdec2,f,c
  6896                           
  6897                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6898  0027D4  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6899  0027D8  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6900  0027DC  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6901  0027E0  0E02               	movlw	2
  6902  0027E2  26DE               	addwf	postinc2,f,c
  6903  0027E4  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6904  0027E8  0E00               	movlw	0
  6905  0027EA  22DD               	addwfc	postdec2,f,c
  6906  0027EC  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6907  0027F0  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6908  0027F4  CFDE F0B1          	movff	postinc2,vfpfcnvrt@ll
  6909  0027F8  CFDD F0B2          	movff	postdec2,vfpfcnvrt@ll+1
  6910  0027FC  0E00               	movlw	0
  6911  0027FE  BFB2               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  6912  002800  0EFF               	movlw	-1
  6913  002802  6FB3               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  6914  002804  6FB4               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  6915  002806  6FB5               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  6916  002808  6FB6               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  6917  00280A  6FB7               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  6918  00280C  6FB8               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  6919  00280E                     
  6920                           ; BSR set to: 0
  6921                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  6922  00280E  C0A7  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  6923  002812  C0A8  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6924  002816  C0B1  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  6925  00281A  C0B2  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  6926  00281E  C0B3  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  6927  002822  C0B4  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  6928  002826  C0B5  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  6929  00282A  C0B6  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  6930  00282E  C0B7  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  6931  002832  C0B8  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  6932  002836  EC08  F01D         	call	_dtoa	;wreg free
  6933  00283A  C01C  F0A7         	movff	?_dtoa,?_vfpfcnvrt
  6934  00283E  C01D  F0A8         	movff	?_dtoa+1,?_vfpfcnvrt+1
  6935  002842  EF52  F015         	goto	l1362
  6936  002846                     l5386:
  6937                           
  6938                           ; BSR set to: 0
  6939                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (
      +                          ct[0] == 'f') {
  6940  002846  0E66               	movlw	102
  6941  002848  19C3               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  6942  00284A  A4D8               	btfss	status,2,c
  6943  00284C  EF2A  F014         	goto	u6681
  6944  002850  EF2C  F014         	goto	u6680
  6945  002854                     u6681:
  6946  002854  EF6C  F014         	goto	l5398
  6947  002858                     u6680:
  6948  002858                     
  6949                           ; BSR set to: 0
  6950                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             
      +                          c = (*fmt)[0];
  6951  002858  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6952  00285C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6953  002860  CFDE FFF6          	movff	postinc2,tblptrl
  6954  002864  CFDD FFF7          	movff	postdec2,tblptrh
  6955  002868                     	if	0	;tblptru may be non-zero
  6956  002868                     	endif
  6957  002868                     	if	0	;tblptru may be non-zero
  6958  002868                     	endif
  6959  002868  0008               	tblrd		*
  6960  00286A  CFF5 F0C6          	movff	tablat,vfpfcnvrt@c
  6961  00286E                     
  6962                           ; BSR set to: 0
  6963                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             
      +                          ++*fmt;
  6964  00286E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6965  002872  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6966  002876  2ADE               	incf	postinc2,f,c
  6967  002878  0E00               	movlw	0
  6968  00287A  22DD               	addwfc	postdec2,f,c
  6969  00287C                     
  6970                           ; BSR set to: 0
  6971                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  6972  00287C  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6973  002880  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6974  002884  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6975  002888  0E04               	movlw	4
  6976  00288A  26DE               	addwf	postinc2,f,c
  6977  00288C  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6978  002890  0E00               	movlw	0
  6979  002892  22DD               	addwfc	postdec2,f,c
  6980  002894  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6981  002898  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6982  00289C  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  6983  0028A0  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  6984  0028A4  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  6985  0028A8  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  6986  0028AC                     l5394:
  6987                           
  6988                           ; BSR set to: 0
  6989                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             
      +                          return efgtoa(fp, f, c);
  6990  0028AC  C0A7  F058         	movff	vfpfcnvrt@fp,efgtoa@fp
  6991  0028B0  C0A8  F059         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  6992  0028B4  C0BF  F05A         	movff	vfpfcnvrt@f,efgtoa@f
  6993  0028B8  C0C0  F05B         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  6994  0028BC  C0C1  F05C         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  6995  0028C0  C0C2  F05D         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  6996  0028C4  C0C6  F05E         	movff	vfpfcnvrt@c,efgtoa@c
  6997  0028C8  EC74  F003         	call	_efgtoa	;wreg free
  6998  0028CC  C058  F0A7         	movff	?_efgtoa,?_vfpfcnvrt
  6999  0028D0  C059  F0A8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  7000  0028D4  EF52  F015         	goto	l1362
  7001  0028D8                     l5398:
  7002                           
  7003                           ; BSR set to: 0
  7004                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  7005  0028D8  0EC3               	movlw	low vfpfcnvrt@ct
  7006  0028DA  6E01               	movwf	strncmp@_l^0,c
  7007  0028DC  0E00               	movlw	high vfpfcnvrt@ct
  7008  0028DE  6E02               	movwf	(strncmp@_l+1)^0,c
  7009  0028E0  0EE4               	movlw	low STR_25
  7010  0028E2  6E03               	movwf	strncmp@_r^0,c
  7011  0028E4  0E06               	movlw	high STR_25
  7012  0028E6  6E04               	movwf	(strncmp@_r+1)^0,c
  7013  0028E8  0E00               	movlw	0
  7014  0028EA  6E06               	movwf	(strncmp@n+1)^0,c
  7015  0028EC  0E02               	movlw	2
  7016  0028EE  6E05               	movwf	strncmp@n^0,c
  7017  0028F0  EC76  F026         	call	_strncmp	;wreg free
  7018  0028F4  5001               	movf	?_strncmp^0,w,c
  7019  0028F6  1002               	iorwf	(?_strncmp+1)^0,w,c
  7020  0028F8  A4D8               	btfss	status,2,c
  7021  0028FA  EF81  F014         	goto	u6691
  7022  0028FE  EF83  F014         	goto	u6690
  7023  002902                     u6691:
  7024  002902  EFFF  F014         	goto	l5414
  7025  002906                     u6690:
  7026  002906                     
  7027                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  7028  002906  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7029  00290A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7030  00290E  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  7031  002912  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  7032  002916  0E01               	movlw	1
  7033  002918  0100               	movlb	0	; () banked
  7034  00291A  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  7035  00291C  0E00               	movlw	0
  7036  00291E  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  7037  002920  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  7038  002924  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  7039  002928                     	if	0	;tblptru may be non-zero
  7040  002928                     	endif
  7041  002928                     	if	0	;tblptru may be non-zero
  7042  002928                     	endif
  7043  002928  0008               	tblrd		*
  7044  00292A  CFF5 F0C6          	movff	tablat,vfpfcnvrt@c
  7045  00292E  0EBF               	movlw	191
  7046  002930  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  7047  002932  0EFF               	movlw	255
  7048  002934  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7049  002936  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7050  00293A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7051  00293E  CFDE FFF6          	movff	postinc2,tblptrl
  7052  002942  CFDD FFF7          	movff	postdec2,tblptrh
  7053  002946                     	if	0	;tblptru may be non-zero
  7054  002946                     	endif
  7055  002946                     	if	0	;tblptru may be non-zero
  7056  002946                     	endif
  7057  002946  0008               	tblrd		*
  7058  002948  50F5               	movf	tablat,w,c
  7059  00294A  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  7060  00294C  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  7061  00294E  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  7062  002950  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  7063  002952  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7064  002954  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  7065  002956  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  7066  002958  E10A               	bnz	u6700
  7067  00295A  0E1A               	movlw	26
  7068  00295C  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  7069  00295E  A0D8               	btfss	status,0,c
  7070  002960  EFB4  F014         	goto	u6701
  7071  002964  EFB7  F014         	goto	u6700
  7072  002968                     u6701:
  7073  002968  0E01               	movlw	1
  7074  00296A  EFB8  F014         	goto	u6710
  7075  00296E                     u6700:
  7076  00296E  0E00               	movlw	0
  7077  002970                     u6710:
  7078  002970  6FBD               	movwf	_vfpfcnvrt$2540& (0+255),b
  7079  002972  6BBE               	clrf	(_vfpfcnvrt$2540+1)& (0+255),b
  7080  002974                     
  7081                           ; BSR set to: 0
  7082  002974  51BD               	movf	_vfpfcnvrt$2540& (0+255),w,b
  7083  002976  11BE               	iorwf	(_vfpfcnvrt$2540+1)& (0+255),w,b
  7084  002978  B4D8               	btfsc	status,2,c
  7085  00297A  EFC1  F014         	goto	u6721
  7086  00297E  EFC3  F014         	goto	u6720
  7087  002982                     u6721:
  7088  002982  EFDD  F014         	goto	l5408
  7089  002986                     u6720:
  7090  002986                     
  7091                           ; BSR set to: 0
  7092                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  7093  002986  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7094  00298A  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7095  00298E  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7096  002992  0E04               	movlw	4
  7097  002994  26DE               	addwf	postinc2,f,c
  7098  002996  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7099  00299A  0E00               	movlw	0
  7100  00299C  22DD               	addwfc	postdec2,f,c
  7101  00299E  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7102  0029A2  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7103  0029A6  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  7104  0029AA  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  7105  0029AE  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  7106  0029B2  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  7107                           
  7108                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             
      +                          } else {
  7109  0029B6  EFF5  F014         	goto	l1370
  7110  0029BA                     l5408:
  7111                           
  7112                           ; BSR set to: 0
  7113                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  7114  0029BA  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7115  0029BE  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7116  0029C2  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7117  0029C6  0E04               	movlw	4
  7118  0029C8  26DE               	addwf	postinc2,f,c
  7119  0029CA  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7120  0029CE  0E00               	movlw	0
  7121  0029D0  22DD               	addwfc	postdec2,f,c
  7122  0029D2  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7123  0029D6  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7124  0029DA  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  7125  0029DE  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  7126  0029E2  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  7127  0029E6  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  7128  0029EA                     l1370:
  7129                           
  7130                           ; BSR set to: 0
  7131                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  7132  0029EA  0E02               	movlw	2
  7133  0029EC  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7134  0029F0  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7135  0029F4  26DE               	addwf	postinc2,f,c
  7136  0029F6  0E00               	movlw	0
  7137  0029F8  22DD               	addwfc	postdec2,f,c
  7138  0029FA  EF56  F014         	goto	l5394
  7139  0029FE                     l5414:
  7140                           
  7141                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  7142  0029FE  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7143  002A02  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7144  002A06  CFDE FFF6          	movff	postinc2,tblptrl
  7145  002A0A  CFDD FFF7          	movff	postdec2,tblptrh
  7146  002A0E                     	if	0	;tblptru may be non-zero
  7147  002A0E                     	endif
  7148  002A0E                     	if	0	;tblptru may be non-zero
  7149  002A0E                     	endif
  7150  002A0E  0008               	tblrd		*
  7151  002A10  50F5               	movf	tablat,w,c
  7152  002A12  0A25               	xorlw	37
  7153  002A14  A4D8               	btfss	status,2,c
  7154  002A16  EF0F  F015         	goto	u6731
  7155  002A1A  EF11  F015         	goto	u6730
  7156  002A1E                     u6731:
  7157  002A1E  EF29  F015         	goto	l5424
  7158  002A22                     u6730:
  7159  002A22                     
  7160                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  7161  002A22  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7162  002A26  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7163  002A2A  2ADE               	incf	postinc2,f,c
  7164  002A2C  0E00               	movlw	0
  7165  002A2E  22DD               	addwfc	postdec2,f,c
  7166  002A30                     
  7167                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  7168  002A30  0E00               	movlw	0
  7169  002A32  6E02               	movwf	(fputc@c+1)^0,c
  7170  002A34  0E25               	movlw	37
  7171  002A36  6E01               	movwf	fputc@c^0,c
  7172  002A38  C0A7  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7173  002A3C  C0A8  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7174  002A40  EC4A  F027         	call	_fputc	;wreg free
  7175  002A44                     l5420:
  7176                           
  7177                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  7178  002A44  0E00               	movlw	0
  7179  002A46  0100               	movlb	0	; () banked
  7180  002A48  6FA8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7181  002A4A  0E01               	movlw	1
  7182  002A4C  6FA7               	movwf	?_vfpfcnvrt& (0+255),b
  7183  002A4E  EF52  F015         	goto	l1362
  7184  002A52                     l5424:
  7185                           
  7186                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  7187  002A52  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7188  002A56  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7189  002A5A  2ADE               	incf	postinc2,f,c
  7190  002A5C  0E00               	movlw	0
  7191  002A5E  22DD               	addwfc	postdec2,f,c
  7192  002A60                     
  7193                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  7194  002A60  0E00               	movlw	0
  7195  002A62  0100               	movlb	0	; () banked
  7196  002A64  6FA8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7197  002A66  0E00               	movlw	0
  7198  002A68  6FA7               	movwf	?_vfpfcnvrt& (0+255),b
  7199  002A6A  EF52  F015         	goto	l1362
  7200  002A6E                     l5430:
  7201                           
  7202                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  7203  002A6E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7204  002A72  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7205  002A76  CFDE FFF6          	movff	postinc2,tblptrl
  7206  002A7A  CFDD FFF7          	movff	postdec2,tblptrh
  7207  002A7E                     	if	0	;tblptru may be non-zero
  7208  002A7E                     	endif
  7209  002A7E                     	if	0	;tblptru may be non-zero
  7210  002A7E                     	endif
  7211  002A7E  0008               	tblrd		*
  7212  002A80  50F5               	movf	tablat,w,c
  7213  002A82  6E01               	movwf	fputc@c^0,c
  7214  002A84  6A02               	clrf	(fputc@c+1)^0,c
  7215  002A86  C0A7  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7216  002A8A  C0A8  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7217  002A8E  EC4A  F027         	call	_fputc	;wreg free
  7218  002A92                     
  7219                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  7220  002A92  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7221  002A96  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7222  002A9A  2ADE               	incf	postinc2,f,c
  7223  002A9C  0E00               	movlw	0
  7224  002A9E  22DD               	addwfc	postdec2,f,c
  7225  002AA0  EF22  F015         	goto	l5420
  7226  002AA4                     l1362:
  7227  002AA4  0012               	return		;funcret
  7228  002AA6                     __end_of_vfpfcnvrt:
  7229                           	callstack 0
  7230                           
  7231 ;; *************** function _strncmp *****************
  7232 ;; Defined at:
  7233 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  7234 ;; Parameters:    Size  Location     Type
  7235 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  7236 ;;		 -> vfpfcnvrt@ct(3), 
  7237 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  7238 ;;		 -> STR_27(3), 
  7239 ;;  n               2    4[COMRAM] unsigned int 
  7240 ;; Auto vars:     Size  Location     Type
  7241 ;;  r               2    9[COMRAM] PTR const unsigned char 
  7242 ;;		 -> STR_27(3), 
  7243 ;;  l               2    7[COMRAM] PTR const unsigned char 
  7244 ;;		 -> vfpfcnvrt@ct(3), 
  7245 ;; Return value:  Size  Location     Type
  7246 ;;                  2    0[COMRAM] int 
  7247 ;; Registers used:
  7248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7249 ;; Tracked objects:
  7250 ;;		On entry : 0/0
  7251 ;;		On exit  : 0/0
  7252 ;;		Unchanged: 0/0
  7253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7254 ;;      Params:         6       0       0       0       0       0       0
  7255 ;;      Locals:         4       0       0       0       0       0       0
  7256 ;;      Temps:          1       0       0       0       0       0       0
  7257 ;;      Totals:        11       0       0       0       0       0       0
  7258 ;;Total ram usage:       11 bytes
  7259 ;; Hardware stack levels used:    1
  7260 ;; Hardware stack levels required when called:    1
  7261 ;; This function calls:
  7262 ;;		Nothing
  7263 ;; This function is called by:
  7264 ;;		_vfpfcnvrt
  7265 ;; This function uses a non-reentrant model
  7266 ;;
  7267                           
  7268                           	psect	text22
  7269  004CEC                     __ptext22:
  7270                           	callstack 0
  7271  004CEC                     _strncmp:
  7272                           	callstack 24
  7273  004CEC  C001  F008         	movff	strncmp@_l,strncmp@l
  7274  004CF0  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  7275  004CF4  C003  F00A         	movff	strncmp@_r,strncmp@r
  7276  004CF8  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  7277  004CFC  0605               	decf	strncmp@n^0,f,c
  7278  004CFE  A0D8               	btfss	status,0,c
  7279  004D00  0606               	decf	(strncmp@n+1)^0,f,c
  7280  004D02  2805               	incf	strncmp@n^0,w,c
  7281  004D04  E106               	bnz	u6281
  7282  004D06  2806               	incf	(strncmp@n+1)^0,w,c
  7283  004D08  A4D8               	btfss	status,2,c
  7284  004D0A  EF89  F026         	goto	u6281
  7285  004D0E  EF8B  F026         	goto	u6280
  7286  004D12                     u6281:
  7287  004D12  EF98  F026         	goto	l5192
  7288  004D16                     u6280:
  7289  004D16  0E00               	movlw	0
  7290  004D18  6E02               	movwf	(?_strncmp+1)^0,c
  7291  004D1A  0E00               	movlw	0
  7292  004D1C  6E01               	movwf	?_strncmp^0,c
  7293  004D1E  EFE0  F026         	goto	l1498
  7294  004D22                     l5190:
  7295  004D22  4A08               	infsnz	strncmp@l^0,f,c
  7296  004D24  2A09               	incf	(strncmp@l+1)^0,f,c
  7297  004D26  4A0A               	infsnz	strncmp@r^0,f,c
  7298  004D28  2A0B               	incf	(strncmp@r+1)^0,f,c
  7299  004D2A  0605               	decf	strncmp@n^0,f,c
  7300  004D2C  A0D8               	btfss	status,0,c
  7301  004D2E  0606               	decf	(strncmp@n+1)^0,f,c
  7302  004D30                     l5192:
  7303  004D30  C008  FFD9         	movff	strncmp@l,fsr2l
  7304  004D34  C009  FFDA         	movff	strncmp@l+1,fsr2h
  7305  004D38  50DF               	movf	indf2,w,c
  7306  004D3A  B4D8               	btfsc	status,2,c
  7307  004D3C  EFA2  F026         	goto	u6291
  7308  004D40  EFA4  F026         	goto	u6290
  7309  004D44                     u6291:
  7310  004D44  EFCF  F026         	goto	l5200
  7311  004D48                     u6290:
  7312  004D48  C00A  FFF6         	movff	strncmp@r,tblptrl
  7313  004D4C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7314  004D50                     	if	0	;tblptru may be non-zero
  7315  004D50                     	endif
  7316  004D50                     	if	0	;tblptru may be non-zero
  7317  004D50                     	endif
  7318  004D50  0008               	tblrd		*
  7319  004D52  50F5               	movf	tablat,w,c
  7320  004D54  0900               	iorlw	0
  7321  004D56  B4D8               	btfsc	status,2,c
  7322  004D58  EFB0  F026         	goto	u6301
  7323  004D5C  EFB2  F026         	goto	u6300
  7324  004D60                     u6301:
  7325  004D60  EFCF  F026         	goto	l5200
  7326  004D64                     u6300:
  7327  004D64  5005               	movf	strncmp@n^0,w,c
  7328  004D66  1006               	iorwf	(strncmp@n+1)^0,w,c
  7329  004D68  B4D8               	btfsc	status,2,c
  7330  004D6A  EFB9  F026         	goto	u6311
  7331  004D6E  EFBB  F026         	goto	u6310
  7332  004D72                     u6311:
  7333  004D72  EFCF  F026         	goto	l5200
  7334  004D76                     u6310:
  7335  004D76  C008  FFD9         	movff	strncmp@l,fsr2l
  7336  004D7A  C009  FFDA         	movff	strncmp@l+1,fsr2h
  7337  004D7E  50DF               	movf	indf2,w,c
  7338  004D80  6E07               	movwf	??_strncmp^0,c
  7339  004D82  C00A  FFF6         	movff	strncmp@r,tblptrl
  7340  004D86  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7341  004D8A                     	if	0	;tblptru may be non-zero
  7342  004D8A                     	endif
  7343  004D8A                     	if	0	;tblptru may be non-zero
  7344  004D8A                     	endif
  7345  004D8A  0008               	tblrd		*
  7346  004D8C  50F5               	movf	tablat,w,c
  7347  004D8E  1807               	xorwf	??_strncmp^0,w,c
  7348  004D90  B4D8               	btfsc	status,2,c
  7349  004D92  EFCD  F026         	goto	u6321
  7350  004D96  EFCF  F026         	goto	u6320
  7351  004D9A                     u6321:
  7352  004D9A  EF91  F026         	goto	l5190
  7353  004D9E                     u6320:
  7354  004D9E                     l5200:
  7355  004D9E  C008  FFD9         	movff	strncmp@l,fsr2l
  7356  004DA2  C009  FFDA         	movff	strncmp@l+1,fsr2h
  7357  004DA6  50DF               	movf	indf2,w,c
  7358  004DA8  6E07               	movwf	??_strncmp^0,c
  7359  004DAA  C00A  FFF6         	movff	strncmp@r,tblptrl
  7360  004DAE  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7361  004DB2                     	if	0	;tblptru may be non-zero
  7362  004DB2                     	endif
  7363  004DB2                     	if	0	;tblptru may be non-zero
  7364  004DB2                     	endif
  7365  004DB2  0008               	tblrd		*
  7366  004DB4  50F5               	movf	tablat,w,c
  7367  004DB6  5C07               	subwf	??_strncmp^0,w,c
  7368  004DB8  6E01               	movwf	?_strncmp^0,c
  7369  004DBA  6A02               	clrf	(?_strncmp+1)^0,c
  7370  004DBC  A0D8               	btfss	status,0,c
  7371  004DBE  0602               	decf	(?_strncmp+1)^0,f,c
  7372  004DC0                     l1498:
  7373  004DC0  0012               	return		;funcret
  7374  004DC2                     __end_of_strncmp:
  7375                           	callstack 0
  7376                           
  7377 ;; *************** function _efgtoa *****************
  7378 ;; Defined at:
  7379 ;;		line 319 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7380 ;; Parameters:    Size  Location     Type
  7381 ;;  fp              2   87[COMRAM] PTR struct _IO_FILE
  7382 ;;		 -> sprintf@f(6), 
  7383 ;;  f               4   89[COMRAM] PTR struct _IO_FILE
  7384 ;;  c               1   93[COMRAM] unsigned char 
  7385 ;; Auto vars:     Size  Location     Type
  7386 ;;  u               4   67[BANK0 ] unsigned char 
  7387 ;;  g               4   59[BANK0 ] unsigned char 
  7388 ;;  l               4   53[BANK0 ] unsigned char 
  7389 ;;  h               4   49[BANK0 ] unsigned char 
  7390 ;;  ou              4   15[BANK0 ] unsigned char 
  7391 ;;  n               2   65[BANK0 ] int 
  7392 ;;  e               2   63[BANK0 ] int 
  7393 ;;  i               2   57[BANK0 ] int 
  7394 ;;  w               2   46[BANK0 ] int 
  7395 ;;  p               2   43[BANK0 ] int 
  7396 ;;  sign            2   41[BANK0 ] int 
  7397 ;;  d               2   39[BANK0 ] int 
  7398 ;;  ne              2   37[BANK0 ] int 
  7399 ;;  m               2   35[BANK0 ] int 
  7400 ;;  pp              2   33[BANK0 ] int 
  7401 ;;  t               2   31[BANK0 ] int 
  7402 ;;  mode            1   48[BANK0 ] unsigned char 
  7403 ;;  nmode           1   45[BANK0 ] unsigned char 
  7404 ;; Return value:  Size  Location     Type
  7405 ;;                  2   87[COMRAM] int 
  7406 ;; Registers used:
  7407 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7408 ;; Tracked objects:
  7409 ;;		On entry : 0/0
  7410 ;;		On exit  : 0/0
  7411 ;;		Unchanged: 0/0
  7412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7413 ;;      Params:         7       0       0       0       0       0       0
  7414 ;;      Locals:         0      56       0       0       0       0       0
  7415 ;;      Temps:          0       5       0       0       0       0       0
  7416 ;;      Totals:         7      61       0       0       0       0       0
  7417 ;;Total ram usage:       68 bytes
  7418 ;; Hardware stack levels used:    1
  7419 ;; Hardware stack levels required when called:    5
  7420 ;; This function calls:
  7421 ;;		___awdiv
  7422 ;;		___awmod
  7423 ;;		___fladd
  7424 ;;		___fldiv
  7425 ;;		___fleq
  7426 ;;		___flge
  7427 ;;		___flmul
  7428 ;;		___flneg
  7429 ;;		___flsub
  7430 ;;		___fltol
  7431 ;;		___fpclassifyf
  7432 ;;		_floorf
  7433 ;;		_isupper
  7434 ;;		_pad
  7435 ;;		_strcpy
  7436 ;;		_tolower
  7437 ;; This function is called by:
  7438 ;;		_vfpfcnvrt
  7439 ;; This function uses a non-reentrant model
  7440 ;;
  7441                           
  7442                           	psect	text23
  7443  0006E8                     __ptext23:
  7444                           	callstack 0
  7445  0006E8                     _efgtoa:
  7446                           	callstack 20
  7447  0006E8                     
  7448                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\
      +                          c99\common\doprnt.c: 320: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\
      +                          doprnt.c: 321:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c9
      +                          9\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;
  7449  0006E8  0E00               	movlw	0
  7450  0006EA  0100               	movlb	0	; () banked
  7451  0006EC  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  7452  0006EE  0E00               	movlw	0
  7453  0006F0  6F89               	movwf	efgtoa@sign& (0+255),b
  7454  0006F2                     
  7455                           ; BSR set to: 0
  7456                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  7457  0006F2  C05A  F09B         	movff	efgtoa@f,efgtoa@g
  7458  0006F6  C05B  F09C         	movff	efgtoa@f+1,efgtoa@g+1
  7459  0006FA  C05C  F09D         	movff	efgtoa@f+2,efgtoa@g+2
  7460  0006FE  C05D  F09E         	movff	efgtoa@f+3,efgtoa@g+3
  7461  000702                     
  7462                           ; BSR set to: 0
  7463                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 
      +                          0.0) {
  7464  000702  BF9E               	btfsc	(efgtoa@g+3)& (0+255),7,b
  7465  000704  EF88  F003         	goto	u5690
  7466  000708  EF86  F003         	goto	u5691
  7467  00070C                     u5691:
  7468  00070C  EF9E  F003         	goto	l4854
  7469  000710                     u5690:
  7470  000710                     
  7471                           ; BSR set to: 0
  7472                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign
      +                           = 1;
  7473  000710  0E00               	movlw	0
  7474  000712  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  7475  000714  0E01               	movlw	1
  7476  000716  6F89               	movwf	efgtoa@sign& (0+255),b
  7477  000718                     
  7478                           ; BSR set to: 0
  7479                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = 
      +                          -g;
  7480  000718  C09B  F001         	movff	efgtoa@g,___flneg@f1
  7481  00071C  C09C  F002         	movff	efgtoa@g+1,___flneg@f1+1
  7482  000720  C09D  F003         	movff	efgtoa@g+2,___flneg@f1+2
  7483  000724  C09E  F004         	movff	efgtoa@g+3,___flneg@f1+3
  7484  000728  EC35  F02D         	call	___flneg	;wreg free
  7485  00072C  C001  F09B         	movff	?___flneg,efgtoa@g
  7486  000730  C002  F09C         	movff	?___flneg+1,efgtoa@g+1
  7487  000734  C003  F09D         	movff	?___flneg+2,efgtoa@g+2
  7488  000738  C004  F09E         	movff	?___flneg+3,efgtoa@g+3
  7489  00073C                     l4854:
  7490                           
  7491                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  7492  00073C  0E00               	movlw	0
  7493  00073E  0100               	movlb	0	; () banked
  7494  000740  6FA2               	movwf	(efgtoa@n+1)& (0+255),b
  7495  000742  0E00               	movlw	0
  7496  000744  6FA1               	movwf	efgtoa@n& (0+255),b
  7497  000746                     
  7498                           ; BSR set to: 0
  7499                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = widt
      +                          h;
  7500  000746  C1B1  F08E         	movff	_width,efgtoa@w
  7501  00074A  C1B2  F08F         	movff	_width+1,efgtoa@w+1
  7502  00074E                     
  7503                           ; BSR set to: 0
  7504                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign
      +                           || (flags & (1 << 2))) {
  7505  00074E  5189               	movf	efgtoa@sign& (0+255),w,b
  7506  000750  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7507  000752  A4D8               	btfss	status,2,c
  7508  000754  EFAE  F003         	goto	u5701
  7509  000758  EFB0  F003         	goto	u5700
  7510  00075C                     u5701:
  7511  00075C  EFB7  F003         	goto	l4862
  7512  000760                     u5700:
  7513  000760                     
  7514                           ; BSR set to: 0
  7515  000760  A5F8               	btfss	_flags& (0+255),2,b
  7516  000762  EFB5  F003         	goto	u5711
  7517  000766  EFB7  F003         	goto	u5710
  7518  00076A                     u5711:
  7519  00076A  EFD1  F003         	goto	l4874
  7520  00076E                     u5710:
  7521  00076E                     l4862:
  7522                           
  7523                           ; BSR set to: 0
  7524                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf
      +                          [n] = sign ? '-' : '+';
  7525  00076E  5189               	movf	efgtoa@sign& (0+255),w,b
  7526  000770  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7527  000772  A4D8               	btfss	status,2,c
  7528  000774  EFBE  F003         	goto	u5721
  7529  000778  EFC0  F003         	goto	u5720
  7530  00077C                     u5721:
  7531  00077C  EFC6  F003         	goto	l4866
  7532  000780                     u5720:
  7533  000780                     
  7534                           ; BSR set to: 0
  7535  000780  0E00               	movlw	0
  7536  000782  6F74               	movwf	(_efgtoa$2509+1)& (0+255),b
  7537  000784  0E2B               	movlw	43
  7538  000786  6F73               	movwf	_efgtoa$2509& (0+255),b
  7539  000788  EFCA  F003         	goto	l4868
  7540  00078C                     l4866:
  7541                           
  7542                           ; BSR set to: 0
  7543  00078C  0E00               	movlw	0
  7544  00078E  6F74               	movwf	(_efgtoa$2509+1)& (0+255),b
  7545  000790  0E2D               	movlw	45
  7546  000792  6F73               	movwf	_efgtoa$2509& (0+255),b
  7547  000794                     l4868:
  7548                           
  7549                           ; BSR set to: 0
  7550  000794  C073  F200         	movff	_efgtoa$2509,_dbuf
  7551  000798                     
  7552                           ; BSR set to: 0
  7553                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  7554  000798  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  7555  00079A  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  7556  00079C                     
  7557                           ; BSR set to: 0
  7558                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  7559  00079C  078E               	decf	efgtoa@w& (0+255),f,b
  7560  00079E  A0D8               	btfss	status,0,c
  7561  0007A0  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  7562  0007A2                     l4874:
  7563                           
  7564                           ; BSR set to: 0
  7565                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  7566  0007A2  C09B  F001         	movff	efgtoa@g,___fpclassifyf@x
  7567  0007A6  C09C  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7568  0007AA  C09D  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7569  0007AE  C09E  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7570  0007B2  ECF7  F025         	call	___fpclassifyf	;wreg free
  7571  0007B6  0401               	decf	?___fpclassifyf^0,w,c
  7572  0007B8  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  7573  0007BA  A4D8               	btfss	status,2,c
  7574  0007BC  EFE2  F003         	goto	u5731
  7575  0007C0  EFE4  F003         	goto	u5730
  7576  0007C4                     u5731:
  7577  0007C4  EF3B  F004         	goto	l4892
  7578  0007C8                     u5730:
  7579  0007C8  0EBF               	movlw	191
  7580  0007CA  0100               	movlb	0	; () banked
  7581  0007CC  6F6A               	movwf	??_efgtoa& (0+255),b
  7582  0007CE  0EFF               	movlw	255
  7583  0007D0  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  7584  0007D2  505E               	movf	efgtoa@c^0,w,c
  7585  0007D4  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  7586  0007D6  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  7587  0007D8  516A               	movf	??_efgtoa& (0+255),w,b
  7588  0007DA  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  7589  0007DC  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  7590  0007DE  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7591  0007E0  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  7592  0007E2  E10A               	bnz	u5740
  7593  0007E4  0E1A               	movlw	26
  7594  0007E6  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  7595  0007E8  A0D8               	btfss	status,0,c
  7596  0007EA  EFF9  F003         	goto	u5741
  7597  0007EE  EFFC  F003         	goto	u5740
  7598  0007F2                     u5741:
  7599  0007F2  0E01               	movlw	1
  7600  0007F4  EFFD  F003         	goto	u5750
  7601  0007F8                     u5740:
  7602  0007F8  0E00               	movlw	0
  7603  0007FA                     u5750:
  7604  0007FA  6F75               	movwf	_efgtoa$2510& (0+255),b
  7605  0007FC  6B76               	clrf	(_efgtoa$2510+1)& (0+255),b
  7606  0007FE                     
  7607                           ; BSR set to: 0
  7608  0007FE  5175               	movf	_efgtoa$2510& (0+255),w,b
  7609  000800  1176               	iorwf	(_efgtoa$2510+1)& (0+255),w,b
  7610  000802  B4D8               	btfsc	status,2,c
  7611  000804  EF06  F004         	goto	u5761
  7612  000808  EF08  F004         	goto	u5760
  7613  00080C                     u5761:
  7614  00080C  EF16  F004         	goto	l4884
  7615  000810                     u5760:
  7616  000810                     
  7617                           ; BSR set to: 0
  7618                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             
      +                          strcpy(&dbuf[n], "INF");
  7619  000810  0E00               	movlw	low _dbuf
  7620  000812  25A1               	addwf	efgtoa@n& (0+255),w,b
  7621  000814  6E01               	movwf	strcpy@dest^0,c
  7622  000816  0E02               	movlw	high _dbuf
  7623  000818  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7624  00081A  6E02               	movwf	(strcpy@dest+1)^0,c
  7625  00081C  0ED4               	movlw	low STR_17
  7626  00081E  6E03               	movwf	strcpy@src^0,c
  7627  000820  0E06               	movlw	high STR_17
  7628  000822  6E04               	movwf	(strcpy@src+1)^0,c
  7629  000824  EC7F  F02B         	call	_strcpy	;wreg free
  7630                           
  7631                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } el
      +                          se {
  7632  000828  EF22  F004         	goto	l4886
  7633  00082C                     l4884:
  7634                           
  7635                           ; BSR set to: 0
  7636                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             
      +                          strcpy(&dbuf[n], "inf");
  7637  00082C  0E00               	movlw	low _dbuf
  7638  00082E  25A1               	addwf	efgtoa@n& (0+255),w,b
  7639  000830  6E01               	movwf	strcpy@dest^0,c
  7640  000832  0E02               	movlw	high _dbuf
  7641  000834  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7642  000836  6E02               	movwf	(strcpy@dest+1)^0,c
  7643  000838  0EDC               	movlw	low STR_18
  7644  00083A  6E03               	movwf	strcpy@src^0,c
  7645  00083C  0E06               	movlw	high STR_18
  7646  00083E  6E04               	movwf	(strcpy@src+1)^0,c
  7647  000840  EC7F  F02B         	call	_strcpy	;wreg free
  7648  000844                     l4886:
  7649                           
  7650                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  7651  000844  0100               	movlb	0	; () banked
  7652  000846  0EFD               	movlw	253
  7653  000848  278E               	addwf	efgtoa@w& (0+255),f,b
  7654  00084A  0EFF               	movlw	255
  7655  00084C  238F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  7656  00084E                     l4888:
  7657                           
  7658                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         retu
      +                          rn pad(fp, &dbuf[0], w);
  7659  00084E  C058  F011         	movff	efgtoa@fp,pad@fp
  7660  000852  C059  F012         	movff	efgtoa@fp+1,pad@fp+1
  7661  000856  0E00               	movlw	low _dbuf
  7662  000858  6E13               	movwf	pad@buf^0,c
  7663  00085A  0E02               	movlw	high _dbuf
  7664  00085C  6E14               	movwf	(pad@buf+1)^0,c
  7665  00085E  C08E  F015         	movff	efgtoa@w,pad@p
  7666  000862  C08F  F016         	movff	efgtoa@w+1,pad@p+1
  7667  000866  ECAF  F027         	call	_pad	;wreg free
  7668  00086A  C011  F058         	movff	?_pad,?_efgtoa
  7669  00086E  C012  F059         	movff	?_pad+1,?_efgtoa+1
  7670  000872  EF4B  F009         	goto	l1260
  7671  000876                     l4892:
  7672                           
  7673                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  7674  000876  C09B  F001         	movff	efgtoa@g,___fpclassifyf@x
  7675  00087A  C09C  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7676  00087E  C09D  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7677  000882  C09E  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7678  000886  ECF7  F025         	call	___fpclassifyf	;wreg free
  7679  00088A  5001               	movf	?___fpclassifyf^0,w,c
  7680  00088C  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  7681  00088E  A4D8               	btfss	status,2,c
  7682  000890  EF4C  F004         	goto	u5771
  7683  000894  EF4E  F004         	goto	u5770
  7684  000898                     u5771:
  7685  000898  EF8E  F004         	goto	l4910
  7686  00089C                     u5770:
  7687  00089C  0EBF               	movlw	191
  7688  00089E  0100               	movlb	0	; () banked
  7689  0008A0  6F6A               	movwf	??_efgtoa& (0+255),b
  7690  0008A2  0EFF               	movlw	255
  7691  0008A4  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  7692  0008A6  505E               	movf	efgtoa@c^0,w,c
  7693  0008A8  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  7694  0008AA  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  7695  0008AC  516A               	movf	??_efgtoa& (0+255),w,b
  7696  0008AE  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  7697  0008B0  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  7698  0008B2  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7699  0008B4  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  7700  0008B6  E10A               	bnz	u5780
  7701  0008B8  0E1A               	movlw	26
  7702  0008BA  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  7703  0008BC  A0D8               	btfss	status,0,c
  7704  0008BE  EF63  F004         	goto	u5781
  7705  0008C2  EF66  F004         	goto	u5780
  7706  0008C6                     u5781:
  7707  0008C6  0E01               	movlw	1
  7708  0008C8  EF67  F004         	goto	u5790
  7709  0008CC                     u5780:
  7710  0008CC  0E00               	movlw	0
  7711  0008CE                     u5790:
  7712  0008CE  6F77               	movwf	_efgtoa$2514& (0+255),b
  7713  0008D0  6B78               	clrf	(_efgtoa$2514+1)& (0+255),b
  7714  0008D2                     
  7715                           ; BSR set to: 0
  7716  0008D2  5177               	movf	_efgtoa$2514& (0+255),w,b
  7717  0008D4  1178               	iorwf	(_efgtoa$2514+1)& (0+255),w,b
  7718  0008D6  B4D8               	btfsc	status,2,c
  7719  0008D8  EF70  F004         	goto	u5801
  7720  0008DC  EF72  F004         	goto	u5800
  7721  0008E0                     u5801:
  7722  0008E0  EF80  F004         	goto	l4902
  7723  0008E4                     u5800:
  7724  0008E4                     
  7725                           ; BSR set to: 0
  7726                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             
      +                          strcpy(&dbuf[n], "NAN");
  7727  0008E4  0E00               	movlw	low _dbuf
  7728  0008E6  25A1               	addwf	efgtoa@n& (0+255),w,b
  7729  0008E8  6E01               	movwf	strcpy@dest^0,c
  7730  0008EA  0E02               	movlw	high _dbuf
  7731  0008EC  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7732  0008EE  6E02               	movwf	(strcpy@dest+1)^0,c
  7733  0008F0  0ED8               	movlw	low STR_21
  7734  0008F2  6E03               	movwf	strcpy@src^0,c
  7735  0008F4  0E06               	movlw	high STR_21
  7736  0008F6  6E04               	movwf	(strcpy@src+1)^0,c
  7737  0008F8  EC7F  F02B         	call	_strcpy	;wreg free
  7738                           
  7739                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } el
      +                          se {
  7740  0008FC  EF22  F004         	goto	l4886
  7741  000900                     l4902:
  7742                           
  7743                           ; BSR set to: 0
  7744                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             
      +                          strcpy(&dbuf[n], "nan");
  7745  000900  0E00               	movlw	low _dbuf
  7746  000902  25A1               	addwf	efgtoa@n& (0+255),w,b
  7747  000904  6E01               	movwf	strcpy@dest^0,c
  7748  000906  0E02               	movlw	high _dbuf
  7749  000908  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7750  00090A  6E02               	movwf	(strcpy@dest+1)^0,c
  7751  00090C  0EE0               	movlw	low STR_22
  7752  00090E  6E03               	movwf	strcpy@src^0,c
  7753  000910  0E06               	movlw	high STR_22
  7754  000912  6E04               	movwf	(strcpy@src+1)^0,c
  7755  000914  EC7F  F02B         	call	_strcpy	;wreg free
  7756  000918  EF22  F004         	goto	l4886
  7757  00091C                     l4910:
  7758                           
  7759                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  7760  00091C  0E00               	movlw	0
  7761  00091E  0100               	movlb	0	; () banked
  7762  000920  6FA3               	movwf	efgtoa@u& (0+255),b
  7763  000922  0E00               	movlw	0
  7764  000924  6FA4               	movwf	(efgtoa@u+1)& (0+255),b
  7765  000926  0E80               	movlw	128
  7766  000928  6FA5               	movwf	(efgtoa@u+2)& (0+255),b
  7767  00092A  0E3F               	movlw	63
  7768  00092C  6FA6               	movwf	(efgtoa@u+3)& (0+255),b
  7769                           
  7770                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  7771  00092E  0E00               	movlw	0
  7772  000930  6FA0               	movwf	(efgtoa@e+1)& (0+255),b
  7773  000932  0E00               	movlw	0
  7774  000934  6F9F               	movwf	efgtoa@e& (0+255),b
  7775  000936                     
  7776                           ; BSR set to: 0
  7777                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g 
      +                          == 0.0)) {
  7778  000936  C09B  F001         	movff	efgtoa@g,___fleq@ff1
  7779  00093A  C09C  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  7780  00093E  C09D  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  7781  000942  C09E  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  7782  000946  0E00               	movlw	0
  7783  000948  6E05               	movwf	___fleq@ff2^0,c
  7784  00094A  0E00               	movlw	0
  7785  00094C  6E06               	movwf	(___fleq@ff2+1)^0,c
  7786  00094E  0E00               	movlw	0
  7787  000950  6E07               	movwf	(___fleq@ff2+2)^0,c
  7788  000952  0E00               	movlw	0
  7789  000954  6E08               	movwf	(___fleq@ff2+3)^0,c
  7790  000956  ECCC  F028         	call	___fleq	;wreg free
  7791  00095A  B0D8               	btfsc	status,0,c
  7792  00095C  EFB2  F004         	goto	u5811
  7793  000960  EFB4  F004         	goto	u5810
  7794  000964                     u5811:
  7795  000964  EF37  F005         	goto	l4928
  7796  000968                     u5810:
  7797  000968  EFD3  F004         	goto	l4920
  7798  00096C                     l4916:
  7799                           
  7800                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             
      +                          u = u*10.0;
  7801  00096C  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  7802  000970  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  7803  000974  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  7804  000978  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  7805  00097C  0E00               	movlw	0
  7806  00097E  6E20               	movwf	___flmul@a^0,c
  7807  000980  0E00               	movlw	0
  7808  000982  6E21               	movwf	(___flmul@a+1)^0,c
  7809  000984  0E20               	movlw	32
  7810  000986  6E22               	movwf	(___flmul@a+2)^0,c
  7811  000988  0E41               	movlw	65
  7812  00098A  6E23               	movwf	(___flmul@a+3)^0,c
  7813  00098C  ECB3  F017         	call	___flmul	;wreg free
  7814  000990  C01C  F0A3         	movff	?___flmul,efgtoa@u
  7815  000994  C01D  F0A4         	movff	?___flmul+1,efgtoa@u+1
  7816  000998  C01E  F0A5         	movff	?___flmul+2,efgtoa@u+2
  7817  00099C  C01F  F0A6         	movff	?___flmul+3,efgtoa@u+3
  7818  0009A0                     
  7819                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             
      +                          ++e;
  7820  0009A0  0100               	movlb	0	; () banked
  7821  0009A2  4B9F               	infsnz	efgtoa@e& (0+255),f,b
  7822  0009A4  2BA0               	incf	(efgtoa@e+1)& (0+255),f,b
  7823  0009A6                     l4920:
  7824                           
  7825                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         whil
      +                          e (!(g < (u*10.0))) {
  7826  0009A6  C09B  F035         	movff	efgtoa@g,___flge@ff1
  7827  0009AA  C09C  F036         	movff	efgtoa@g+1,___flge@ff1+1
  7828  0009AE  C09D  F037         	movff	efgtoa@g+2,___flge@ff1+2
  7829  0009B2  C09E  F038         	movff	efgtoa@g+3,___flge@ff1+3
  7830  0009B6  0E00               	movlw	0
  7831  0009B8  6E20               	movwf	___flmul@a^0,c
  7832  0009BA  0E00               	movlw	0
  7833  0009BC  6E21               	movwf	(___flmul@a+1)^0,c
  7834  0009BE  0E20               	movlw	32
  7835  0009C0  6E22               	movwf	(___flmul@a+2)^0,c
  7836  0009C2  0E41               	movlw	65
  7837  0009C4  6E23               	movwf	(___flmul@a+3)^0,c
  7838  0009C6  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  7839  0009CA  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  7840  0009CE  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  7841  0009D2  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  7842  0009D6  ECB3  F017         	call	___flmul	;wreg free
  7843  0009DA  C01C  F039         	movff	?___flmul,___flge@ff2
  7844  0009DE  C01D  F03A         	movff	?___flmul+1,___flge@ff2+1
  7845  0009E2  C01E  F03B         	movff	?___flmul+2,___flge@ff2+2
  7846  0009E6  C01F  F03C         	movff	?___flmul+3,___flge@ff2+3
  7847  0009EA  EC75  F025         	call	___flge	;wreg free
  7848  0009EE  B0D8               	btfsc	status,0,c
  7849  0009F0  EFFC  F004         	goto	u5821
  7850  0009F4  EFFE  F004         	goto	u5820
  7851  0009F8                     u5821:
  7852  0009F8  EFB6  F004         	goto	l4916
  7853  0009FC                     u5820:
  7854  0009FC  EF1E  F005         	goto	l4926
  7855  000A00                     l4922:
  7856                           
  7857                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             
      +                          u = u/10.0;
  7858  000A00  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  7859  000A04  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  7860  000A08  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  7861  000A0C  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  7862  000A10  0E00               	movlw	0
  7863  000A12  6E39               	movwf	___fldiv@a^0,c
  7864  000A14  0E00               	movlw	0
  7865  000A16  6E3A               	movwf	(___fldiv@a+1)^0,c
  7866  000A18  0E20               	movlw	32
  7867  000A1A  6E3B               	movwf	(___fldiv@a+2)^0,c
  7868  000A1C  0E41               	movlw	65
  7869  000A1E  6E3C               	movwf	(___fldiv@a+3)^0,c
  7870  000A20  ECC8  F019         	call	___fldiv	;wreg free
  7871  000A24  C035  F0A3         	movff	?___fldiv,efgtoa@u
  7872  000A28  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  7873  000A2C  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  7874  000A30  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  7875  000A34                     
  7876                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             
      +                          --e;
  7877  000A34  0100               	movlb	0	; () banked
  7878  000A36  079F               	decf	efgtoa@e& (0+255),f,b
  7879  000A38  A0D8               	btfss	status,0,c
  7880  000A3A  07A0               	decf	(efgtoa@e+1)& (0+255),f,b
  7881  000A3C                     l4926:
  7882                           
  7883                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         whil
      +                          e (g < u) {
  7884  000A3C  C09B  F035         	movff	efgtoa@g,___flge@ff1
  7885  000A40  C09C  F036         	movff	efgtoa@g+1,___flge@ff1+1
  7886  000A44  C09D  F037         	movff	efgtoa@g+2,___flge@ff1+2
  7887  000A48  C09E  F038         	movff	efgtoa@g+3,___flge@ff1+3
  7888  000A4C  C0A3  F039         	movff	efgtoa@u,___flge@ff2
  7889  000A50  C0A4  F03A         	movff	efgtoa@u+1,___flge@ff2+1
  7890  000A54  C0A5  F03B         	movff	efgtoa@u+2,___flge@ff2+2
  7891  000A58  C0A6  F03C         	movff	efgtoa@u+3,___flge@ff2+3
  7892  000A5C  EC75  F025         	call	___flge	;wreg free
  7893  000A60  A0D8               	btfss	status,0,c
  7894  000A62  EF35  F005         	goto	u5831
  7895  000A66  EF37  F005         	goto	u5830
  7896  000A6A                     u5831:
  7897  000A6A  EF00  F005         	goto	l4922
  7898  000A6E                     u5830:
  7899  000A6E                     l4928:
  7900                           
  7901                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = t
      +                          olower((int)c);
  7902  000A6E  C05E  F007         	movff	efgtoa@c,tolower@c
  7903  000A72  6A08               	clrf	(tolower@c+1)^0,c
  7904  000A74  EC4F  F02B         	call	_tolower	;wreg free
  7905  000A78  5007               	movf	?_tolower^0,w,c
  7906  000A7A  0100               	movlb	0	; () banked
  7907  000A7C  6F90               	movwf	efgtoa@mode& (0+255),b
  7908  000A7E                     
  7909                           ; BSR set to: 0
  7910                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = 
      +                          mode;
  7911  000A7E  C090  F08D         	movff	efgtoa@mode,efgtoa@nmode
  7912  000A82                     
  7913                           ; BSR set to: 0
  7914                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode
      +                           == 'g') {
  7915  000A82  0E67               	movlw	103
  7916  000A84  1990               	xorwf	efgtoa@mode& (0+255),w,b
  7917  000A86  A4D8               	btfss	status,2,c
  7918  000A88  EF48  F005         	goto	u5841
  7919  000A8C  EF4A  F005         	goto	u5840
  7920  000A90                     u5841:
  7921  000A90  EF70  F005         	goto	l4942
  7922  000A94                     u5840:
  7923  000A94                     
  7924                           ; BSR set to: 0
  7925                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec =
      +                          = 0) {
  7926  000A94  51F6               	movf	_prec& (0+255),w,b
  7927  000A96  11F7               	iorwf	(_prec+1)& (0+255),w,b
  7928  000A98  A4D8               	btfss	status,2,c
  7929  000A9A  EF51  F005         	goto	u5851
  7930  000A9E  EF53  F005         	goto	u5850
  7931  000AA2                     u5851:
  7932  000AA2  EF57  F005         	goto	l4938
  7933  000AA6                     u5850:
  7934  000AA6                     
  7935                           ; BSR set to: 0
  7936                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  7937  000AA6  0E00               	movlw	0
  7938  000AA8  6FF7               	movwf	(_prec+1)& (0+255),b
  7939  000AAA  0E01               	movlw	1
  7940  000AAC  6FF6               	movwf	_prec& (0+255),b
  7941  000AAE                     l4938:
  7942                           
  7943                           ; BSR set to: 0
  7944                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = 
      +                          (0 < prec) ? prec : 6;
  7945  000AAE  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  7946  000AB0  EF64  F005         	goto	u5860
  7947  000AB4  51F7               	movf	(_prec+1)& (0+255),w,b
  7948  000AB6  E106               	bnz	u5861
  7949  000AB8  05F6               	decf	_prec& (0+255),w,b
  7950  000ABA  B0D8               	btfsc	status,0,c
  7951  000ABC  EF62  F005         	goto	u5861
  7952  000AC0  EF64  F005         	goto	u5860
  7953  000AC4                     u5861:
  7954  000AC4  EF6A  F005         	goto	l1278
  7955  000AC8                     u5860:
  7956  000AC8                     l4940:
  7957                           
  7958                           ; BSR set to: 0
  7959  000AC8  0E00               	movlw	0
  7960  000ACA  6F8C               	movwf	(efgtoa@p+1)& (0+255),b
  7961  000ACC  0E06               	movlw	6
  7962  000ACE  6F8B               	movwf	efgtoa@p& (0+255),b
  7963  000AD0  EF79  F005         	goto	l4948
  7964  000AD4                     l1278:
  7965                           
  7966                           ; BSR set to: 0
  7967  000AD4  C0F6  F08B         	movff	_prec,efgtoa@p
  7968  000AD8  C0F7  F08C         	movff	_prec+1,efgtoa@p+1
  7969  000ADC  EF79  F005         	goto	l4948
  7970  000AE0                     l4942:
  7971                           
  7972                           ; BSR set to: 0
  7973                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = 
      +                          (prec < 0) ? 6 : prec;
  7974  000AE0  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  7975  000AE2  EF75  F005         	goto	u5871
  7976  000AE6  EF77  F005         	goto	u5870
  7977  000AEA                     u5871:
  7978  000AEA  EF64  F005         	goto	l4940
  7979  000AEE                     u5870:
  7980  000AEE  EF6A  F005         	goto	l1278
  7981  000AF2                     l4948:
  7982                           
  7983                           ; BSR set to: 0
  7984                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode
      +                           == 'g') {
  7985  000AF2  0E67               	movlw	103
  7986  000AF4  1990               	xorwf	efgtoa@mode& (0+255),w,b
  7987  000AF6  A4D8               	btfss	status,2,c
  7988  000AF8  EF80  F005         	goto	u5881
  7989  000AFC  EF82  F005         	goto	u5880
  7990  000B00                     u5881:
  7991  000B00  EFB1  F005         	goto	l4958
  7992  000B04                     u5880:
  7993  000B04                     
  7994                           ; BSR set to: 0
  7995                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  7996  000B04  AFA0               	btfss	(efgtoa@e+1)& (0+255),7,b
  7997  000B06  EF90  F005         	goto	u5890
  7998  000B0A  0EFC               	movlw	252
  7999  000B0C  5D9F               	subwf	efgtoa@e& (0+255),w,b
  8000  000B0E  0EFF               	movlw	255
  8001  000B10  59A0               	subwfb	(efgtoa@e+1)& (0+255),w,b
  8002  000B12  A0D8               	btfss	status,0,c
  8003  000B14  EF8E  F005         	goto	u5891
  8004  000B18  EF90  F005         	goto	u5890
  8005  000B1C                     u5891:
  8006  000B1C  EFAF  F005         	goto	l4956
  8007  000B20                     u5890:
  8008  000B20                     
  8009                           ; BSR set to: 0
  8010  000B20  0EFF               	movlw	255
  8011  000B22  6F6A               	movwf	??_efgtoa& (0+255),b
  8012  000B24  0EFF               	movlw	255
  8013  000B26  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  8014  000B28  C08B  F06C         	movff	efgtoa@p,??_efgtoa+2
  8015  000B2C  C08C  F06D         	movff	efgtoa@p+1,??_efgtoa+3
  8016  000B30  516A               	movf	??_efgtoa& (0+255),w,b
  8017  000B32  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  8018  000B34  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  8019  000B36  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8020  000B38  519F               	movf	efgtoa@e& (0+255),w,b
  8021  000B3A  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  8022  000B3C  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  8023  000B3E  0A80               	xorlw	128
  8024  000B40  6F6E               	movwf	(??_efgtoa+4)& (0+255),b
  8025  000B42  51A0               	movf	(efgtoa@e+1)& (0+255),w,b
  8026  000B44  0A80               	xorlw	128
  8027  000B46  596E               	subwfb	(??_efgtoa+4)& (0+255),w,b
  8028  000B48  A0D8               	btfss	status,0,c
  8029  000B4A  EFA9  F005         	goto	u5901
  8030  000B4E  EFAB  F005         	goto	u5900
  8031  000B52                     u5901:
  8032  000B52  EFAF  F005         	goto	l4956
  8033  000B56                     u5900:
  8034  000B56                     
  8035                           ; BSR set to: 0
  8036                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             
      +                          nmode = 'f';
  8037  000B56  0E66               	movlw	102
  8038  000B58  6F8D               	movwf	efgtoa@nmode& (0+255),b
  8039                           
  8040                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } el
      +                          se {
  8041  000B5A  EFB1  F005         	goto	l4958
  8042  000B5E                     l4956:
  8043                           
  8044                           ; BSR set to: 0
  8045                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             
      +                          nmode = 'e';
  8046  000B5E  0E65               	movlw	101
  8047  000B60  6F8D               	movwf	efgtoa@nmode& (0+255),b
  8048  000B62                     l4958:
  8049                           
  8050                           ; BSR set to: 0
  8051                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  8052  000B62  C08B  F083         	movff	efgtoa@p,efgtoa@m
  8053  000B66  C08C  F084         	movff	efgtoa@p+1,efgtoa@m+1
  8054  000B6A                     
  8055                           ; BSR set to: 0
  8056                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  8057  000B6A  0E67               	movlw	103
  8058  000B6C  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8059  000B6E  A4D8               	btfss	status,2,c
  8060  000B70  EFBC  F005         	goto	u5911
  8061  000B74  EFBE  F005         	goto	u5910
  8062  000B78                     u5911:
  8063  000B78  EFCE  F005         	goto	l4966
  8064  000B7C                     u5910:
  8065  000B7C                     
  8066                           ; BSR set to: 0
  8067  000B7C  0E66               	movlw	102
  8068  000B7E  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8069  000B80  A4D8               	btfss	status,2,c
  8070  000B82  EFC5  F005         	goto	u5921
  8071  000B86  EFC7  F005         	goto	u5920
  8072  000B8A                     u5921:
  8073  000B8A  EFD0  F005         	goto	l4968
  8074  000B8E                     u5920:
  8075  000B8E                     
  8076                           ; BSR set to: 0
  8077  000B8E  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8078  000B90  EFCE  F005         	goto	u5930
  8079  000B94  EFCC  F005         	goto	u5931
  8080  000B98                     u5931:
  8081  000B98  EFD0  F005         	goto	l4968
  8082  000B9C                     u5930:
  8083  000B9C                     l4966:
  8084                           
  8085                           ; BSR set to: 0
  8086                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  8087  000B9C  4B83               	infsnz	efgtoa@m& (0+255),f,b
  8088  000B9E  2B84               	incf	(efgtoa@m+1)& (0+255),f,b
  8089  000BA0                     l4968:
  8090                           
  8091                           ; BSR set to: 0
  8092                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmod
      +                          e == 'f') {
  8093  000BA0  0E66               	movlw	102
  8094  000BA2  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8095  000BA4  A4D8               	btfss	status,2,c
  8096  000BA6  EFD7  F005         	goto	u5941
  8097  000BAA  EFD9  F005         	goto	u5940
  8098  000BAE                     u5941:
  8099  000BAE  EFF9  F005         	goto	l4978
  8100  000BB2                     u5940:
  8101  000BB2                     
  8102                           ; BSR set to: 0
  8103                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (
      +                          e < 0) {
  8104  000BB2  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8105  000BB4  EFE0  F005         	goto	u5950
  8106  000BB8  EFDE  F005         	goto	u5951
  8107  000BBC                     u5951:
  8108  000BBC  EFEC  F005         	goto	l4974
  8109  000BC0                     u5950:
  8110  000BC0                     
  8111                           ; BSR set to: 0
  8112                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             
      +                          u = 1.0;
  8113  000BC0  0E00               	movlw	0
  8114  000BC2  6FA3               	movwf	efgtoa@u& (0+255),b
  8115  000BC4  0E00               	movlw	0
  8116  000BC6  6FA4               	movwf	(efgtoa@u+1)& (0+255),b
  8117  000BC8  0E80               	movlw	128
  8118  000BCA  6FA5               	movwf	(efgtoa@u+2)& (0+255),b
  8119  000BCC  0E3F               	movlw	63
  8120  000BCE  6FA6               	movwf	(efgtoa@u+3)& (0+255),b
  8121                           
  8122                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             
      +                          e = 0;
  8123  000BD0  0E00               	movlw	0
  8124  000BD2  6FA0               	movwf	(efgtoa@e+1)& (0+255),b
  8125  000BD4  0E00               	movlw	0
  8126  000BD6  6F9F               	movwf	efgtoa@e& (0+255),b
  8127  000BD8                     l4974:
  8128                           
  8129                           ; BSR set to: 0
  8130                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (
      +                          !(mode == 'g')) {
  8131  000BD8  0E67               	movlw	103
  8132  000BDA  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8133  000BDC  B4D8               	btfsc	status,2,c
  8134  000BDE  EFF3  F005         	goto	u5961
  8135  000BE2  EFF5  F005         	goto	u5960
  8136  000BE6                     u5961:
  8137  000BE6  EFF9  F005         	goto	l4978
  8138  000BEA                     u5960:
  8139  000BEA                     
  8140                           ; BSR set to: 0
  8141                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             
      +                          m += e;
  8142  000BEA  519F               	movf	efgtoa@e& (0+255),w,b
  8143  000BEC  2783               	addwf	efgtoa@m& (0+255),f,b
  8144  000BEE  51A0               	movf	(efgtoa@e+1)& (0+255),w,b
  8145  000BF0  2384               	addwfc	(efgtoa@m+1)& (0+255),f,b
  8146  000BF2                     l4978:
  8147                           
  8148                           ; BSR set to: 0
  8149                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  8150  000BF2  0E00               	movlw	0
  8151  000BF4  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  8152  000BF6  0E00               	movlw	0
  8153  000BF8  6F99               	movwf	efgtoa@i& (0+255),b
  8154  000BFA                     
  8155                           ; BSR set to: 0
  8156                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  8157  000BFA  C09B  F091         	movff	efgtoa@g,efgtoa@h
  8158  000BFE  C09C  F092         	movff	efgtoa@g+1,efgtoa@h+1
  8159  000C02  C09D  F093         	movff	efgtoa@g+2,efgtoa@h+2
  8160  000C06  C09E  F094         	movff	efgtoa@g+3,efgtoa@h+3
  8161  000C0A                     
  8162                           ; BSR set to: 0
  8163                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  8164  000C0A  C0A3  F06F         	movff	efgtoa@u,efgtoa@ou
  8165  000C0E  C0A4  F070         	movff	efgtoa@u+1,efgtoa@ou+1
  8166  000C12  C0A5  F071         	movff	efgtoa@u+2,efgtoa@ou+2
  8167  000C16  C0A6  F072         	movff	efgtoa@u+3,efgtoa@ou+3
  8168                           
  8169                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  8170  000C1A  EF8A  F006         	goto	l4992
  8171  000C1E                     l4984:
  8172                           
  8173                           ; BSR set to: 0
  8174                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = 
      +                          floorf(h/u);
  8175  000C1E  C091  F035         	movff	efgtoa@h,___fldiv@b
  8176  000C22  C092  F036         	movff	efgtoa@h+1,___fldiv@b+1
  8177  000C26  C093  F037         	movff	efgtoa@h+2,___fldiv@b+2
  8178  000C2A  C094  F038         	movff	efgtoa@h+3,___fldiv@b+3
  8179  000C2E  C0A3  F039         	movff	efgtoa@u,___fldiv@a
  8180  000C32  C0A4  F03A         	movff	efgtoa@u+1,___fldiv@a+1
  8181  000C36  C0A5  F03B         	movff	efgtoa@u+2,___fldiv@a+2
  8182  000C3A  C0A6  F03C         	movff	efgtoa@u+3,___fldiv@a+3
  8183  000C3E  ECC8  F019         	call	___fldiv	;wreg free
  8184  000C42  C035  F04E         	movff	?___fldiv,floorf@x
  8185  000C46  C036  F04F         	movff	?___fldiv+1,floorf@x+1
  8186  000C4A  C037  F050         	movff	?___fldiv+2,floorf@x+2
  8187  000C4E  C038  F051         	movff	?___fldiv+3,floorf@x+3
  8188  000C52  EC7A  F01E         	call	_floorf	;wreg free
  8189  000C56  C04E  F095         	movff	?_floorf,efgtoa@l
  8190  000C5A  C04F  F096         	movff	?_floorf+1,efgtoa@l+1
  8191  000C5E  C050  F097         	movff	?_floorf+2,efgtoa@l+2
  8192  000C62  C051  F098         	movff	?_floorf+3,efgtoa@l+3
  8193                           
  8194                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = 
      +                          (int)l;
  8195  000C66  C095  F04E         	movff	efgtoa@l,___fltol@f1
  8196  000C6A  C096  F04F         	movff	efgtoa@l+1,___fltol@f1+1
  8197  000C6E  C097  F050         	movff	efgtoa@l+2,___fltol@f1+2
  8198  000C72  C098  F051         	movff	efgtoa@l+3,___fltol@f1+3
  8199  000C76  ECF2  F024         	call	___fltol	;wreg free
  8200  000C7A  C04E  F087         	movff	?___fltol,efgtoa@d
  8201  000C7E  C04F  F088         	movff	?___fltol+1,efgtoa@d+1
  8202  000C82                     
  8203                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -=
      +                           l*u;
  8204  000C82  C091  F045         	movff	efgtoa@h,___flsub@b
  8205  000C86  C092  F046         	movff	efgtoa@h+1,___flsub@b+1
  8206  000C8A  C093  F047         	movff	efgtoa@h+2,___flsub@b+2
  8207  000C8E  C094  F048         	movff	efgtoa@h+3,___flsub@b+3
  8208  000C92  C0A3  F020         	movff	efgtoa@u,___flmul@a
  8209  000C96  C0A4  F021         	movff	efgtoa@u+1,___flmul@a+1
  8210  000C9A  C0A5  F022         	movff	efgtoa@u+2,___flmul@a+2
  8211  000C9E  C0A6  F023         	movff	efgtoa@u+3,___flmul@a+3
  8212  000CA2  C095  F01C         	movff	efgtoa@l,___flmul@b
  8213  000CA6  C096  F01D         	movff	efgtoa@l+1,___flmul@b+1
  8214  000CAA  C097  F01E         	movff	efgtoa@l+2,___flmul@b+2
  8215  000CAE  C098  F01F         	movff	efgtoa@l+3,___flmul@b+3
  8216  000CB2  ECB3  F017         	call	___flmul	;wreg free
  8217  000CB6  C01C  F049         	movff	?___flmul,___flsub@a
  8218  000CBA  C01D  F04A         	movff	?___flmul+1,___flsub@a+1
  8219  000CBE  C01E  F04B         	movff	?___flmul+2,___flsub@a+2
  8220  000CC2  C01F  F04C         	movff	?___flmul+3,___flsub@a+3
  8221  000CC6  EC56  F02C         	call	___flsub	;wreg free
  8222  000CCA  C045  F091         	movff	?___flsub,efgtoa@h
  8223  000CCE  C046  F092         	movff	?___flsub+1,efgtoa@h+1
  8224  000CD2  C047  F093         	movff	?___flsub+2,efgtoa@h+2
  8225  000CD6  C048  F094         	movff	?___flsub+3,efgtoa@h+3
  8226  000CDA                     
  8227                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = 
      +                          u/10.0;
  8228  000CDA  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  8229  000CDE  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  8230  000CE2  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  8231  000CE6  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  8232  000CEA  0E00               	movlw	0
  8233  000CEC  6E39               	movwf	___fldiv@a^0,c
  8234  000CEE  0E00               	movlw	0
  8235  000CF0  6E3A               	movwf	(___fldiv@a+1)^0,c
  8236  000CF2  0E20               	movlw	32
  8237  000CF4  6E3B               	movwf	(___fldiv@a+2)^0,c
  8238  000CF6  0E41               	movlw	65
  8239  000CF8  6E3C               	movwf	(___fldiv@a+3)^0,c
  8240  000CFA  ECC8  F019         	call	___fldiv	;wreg free
  8241  000CFE  C035  F0A3         	movff	?___fldiv,efgtoa@u
  8242  000D02  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  8243  000D06  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  8244  000D0A  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  8245  000D0E                     
  8246                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  8247  000D0E  0100               	movlb	0	; () banked
  8248  000D10  4B99               	infsnz	efgtoa@i& (0+255),f,b
  8249  000D12  2B9A               	incf	(efgtoa@i+1)& (0+255),f,b
  8250  000D14                     l4992:
  8251                           
  8252                           ; BSR set to: 0
  8253                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  8254  000D14  5183               	movf	efgtoa@m& (0+255),w,b
  8255  000D16  5D99               	subwf	efgtoa@i& (0+255),w,b
  8256  000D18  519A               	movf	(efgtoa@i+1)& (0+255),w,b
  8257  000D1A  0A80               	xorlw	128
  8258  000D1C  6F6A               	movwf	??_efgtoa& (0+255),b
  8259  000D1E  5184               	movf	(efgtoa@m+1)& (0+255),w,b
  8260  000D20  0A80               	xorlw	128
  8261  000D22  596A               	subwfb	??_efgtoa& (0+255),w,b
  8262  000D24  A0D8               	btfss	status,0,c
  8263  000D26  EF97  F006         	goto	u5971
  8264  000D2A  EF99  F006         	goto	u5970
  8265  000D2E                     u5971:
  8266  000D2E  EF0F  F006         	goto	l4984
  8267  000D32                     u5970:
  8268  000D32                     
  8269                           ; BSR set to: 0
  8270                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.
      +                          0;
  8271  000D32  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  8272  000D36  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  8273  000D3A  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  8274  000D3E  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  8275  000D42  0E00               	movlw	0
  8276  000D44  6E20               	movwf	___flmul@a^0,c
  8277  000D46  0E00               	movlw	0
  8278  000D48  6E21               	movwf	(___flmul@a+1)^0,c
  8279  000D4A  0EA0               	movlw	160
  8280  000D4C  6E22               	movwf	(___flmul@a+2)^0,c
  8281  000D4E  0E40               	movlw	64
  8282  000D50  6E23               	movwf	(___flmul@a+3)^0,c
  8283  000D52  ECB3  F017         	call	___flmul	;wreg free
  8284  000D56  C01C  F095         	movff	?___flmul,efgtoa@l
  8285  000D5A  C01D  F096         	movff	?___flmul+1,efgtoa@l+1
  8286  000D5E  C01E  F097         	movff	?___flmul+2,efgtoa@l+2
  8287  000D62  C01F  F098         	movff	?___flmul+3,efgtoa@l+3
  8288  000D66                     
  8289                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < 
      +                          l) {
  8290  000D66  C091  F035         	movff	efgtoa@h,___flge@ff1
  8291  000D6A  C092  F036         	movff	efgtoa@h+1,___flge@ff1+1
  8292  000D6E  C093  F037         	movff	efgtoa@h+2,___flge@ff1+2
  8293  000D72  C094  F038         	movff	efgtoa@h+3,___flge@ff1+3
  8294  000D76  C095  F039         	movff	efgtoa@l,___flge@ff2
  8295  000D7A  C096  F03A         	movff	efgtoa@l+1,___flge@ff2+1
  8296  000D7E  C097  F03B         	movff	efgtoa@l+2,___flge@ff2+2
  8297  000D82  C098  F03C         	movff	efgtoa@l+3,___flge@ff2+3
  8298  000D86  EC75  F025         	call	___flge	;wreg free
  8299  000D8A  B0D8               	btfsc	status,0,c
  8300  000D8C  EFCA  F006         	goto	u5981
  8301  000D90  EFCC  F006         	goto	u5980
  8302  000D94                     u5981:
  8303  000D94  EFD7  F006         	goto	l5000
  8304  000D98                     u5980:
  8305  000D98                     
  8306                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 
      +                          0.0;
  8307  000D98  0E00               	movlw	0
  8308  000D9A  0100               	movlb	0	; () banked
  8309  000D9C  6F95               	movwf	efgtoa@l& (0+255),b
  8310  000D9E  0E00               	movlw	0
  8311  000DA0  6F96               	movwf	(efgtoa@l+1)& (0+255),b
  8312  000DA2  0E00               	movlw	0
  8313  000DA4  6F97               	movwf	(efgtoa@l+2)& (0+255),b
  8314  000DA6  0E00               	movlw	0
  8315  000DA8  6F98               	movwf	(efgtoa@l+3)& (0+255),b
  8316                           
  8317                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  8318  000DAA  EF00  F007         	goto	l5006
  8319  000DAE                     l5000:
  8320                           
  8321                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if (
      +                          (h == l) && !(d % 2)) {
  8322  000DAE  C091  F001         	movff	efgtoa@h,___fleq@ff1
  8323  000DB2  C092  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  8324  000DB6  C093  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  8325  000DBA  C094  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  8326  000DBE  C095  F005         	movff	efgtoa@l,___fleq@ff2
  8327  000DC2  C096  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  8328  000DC6  C097  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  8329  000DCA  C098  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  8330  000DCE  ECCC  F028         	call	___fleq	;wreg free
  8331  000DD2  A0D8               	btfss	status,0,c
  8332  000DD4  EFEE  F006         	goto	u5991
  8333  000DD8  EFF0  F006         	goto	u5990
  8334  000DDC                     u5991:
  8335  000DDC  EF00  F007         	goto	l5006
  8336  000DE0                     u5990:
  8337  000DE0  0100               	movlb	0	; () banked
  8338  000DE2  B187               	btfsc	efgtoa@d& (0+255),0,b
  8339  000DE4  EFF6  F006         	goto	u6001
  8340  000DE8  EFF8  F006         	goto	u6000
  8341  000DEC                     u6001:
  8342  000DEC  EF00  F007         	goto	l5006
  8343  000DF0                     u6000:
  8344  000DF0                     
  8345                           ; BSR set to: 0
  8346                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             
      +                          l = 0.0;
  8347  000DF0  0E00               	movlw	0
  8348  000DF2  6F95               	movwf	efgtoa@l& (0+255),b
  8349  000DF4  0E00               	movlw	0
  8350  000DF6  6F96               	movwf	(efgtoa@l+1)& (0+255),b
  8351  000DF8  0E00               	movlw	0
  8352  000DFA  6F97               	movwf	(efgtoa@l+2)& (0+255),b
  8353  000DFC  0E00               	movlw	0
  8354  000DFE  6F98               	movwf	(efgtoa@l+3)& (0+255),b
  8355  000E00                     l5006:
  8356                           
  8357                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + 
      +                          l;
  8358  000E00  C09B  F035         	movff	efgtoa@g,___fladd@b
  8359  000E04  C09C  F036         	movff	efgtoa@g+1,___fladd@b+1
  8360  000E08  C09D  F037         	movff	efgtoa@g+2,___fladd@b+2
  8361  000E0C  C09E  F038         	movff	efgtoa@g+3,___fladd@b+3
  8362  000E10  C095  F039         	movff	efgtoa@l,___fladd@a
  8363  000E14  C096  F03A         	movff	efgtoa@l+1,___fladd@a+1
  8364  000E18  C097  F03B         	movff	efgtoa@l+2,___fladd@a+2
  8365  000E1C  C098  F03C         	movff	efgtoa@l+3,___fladd@a+3
  8366  000E20  EC53  F015         	call	___fladd	;wreg free
  8367  000E24  C035  F091         	movff	?___fladd,efgtoa@h
  8368  000E28  C036  F092         	movff	?___fladd+1,efgtoa@h+1
  8369  000E2C  C037  F093         	movff	?___fladd+2,efgtoa@h+2
  8370  000E30  C038  F094         	movff	?___fladd+3,efgtoa@h+3
  8371  000E34                     
  8372                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  8373  000E34  C06F  F0A3         	movff	efgtoa@ou,efgtoa@u
  8374  000E38  C070  F0A4         	movff	efgtoa@ou+1,efgtoa@u+1
  8375  000E3C  C071  F0A5         	movff	efgtoa@ou+2,efgtoa@u+2
  8376  000E40  C072  F0A6         	movff	efgtoa@ou+3,efgtoa@u+3
  8377  000E44                     
  8378                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  8379  000E44  0E65               	movlw	101
  8380  000E46  0100               	movlb	0	; () banked
  8381  000E48  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8382  000E4A  B4D8               	btfsc	status,2,c
  8383  000E4C  EF2A  F007         	goto	u6011
  8384  000E50  EF2C  F007         	goto	u6010
  8385  000E54                     u6011:
  8386  000E54  EF32  F007         	goto	l5014
  8387  000E58                     u6010:
  8388  000E58                     
  8389                           ; BSR set to: 0
  8390  000E58  C09F  F085         	movff	efgtoa@e,efgtoa@ne
  8391  000E5C  C0A0  F086         	movff	efgtoa@e+1,efgtoa@ne+1
  8392  000E60  EF36  F007         	goto	l1304
  8393  000E64                     l5014:
  8394                           
  8395                           ; BSR set to: 0
  8396  000E64  0E00               	movlw	0
  8397  000E66  6F86               	movwf	(efgtoa@ne+1)& (0+255),b
  8398  000E68  0E00               	movlw	0
  8399  000E6A  6F85               	movwf	efgtoa@ne& (0+255),b
  8400  000E6C                     l1304:
  8401                           
  8402                           ; BSR set to: 0
  8403                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  8404  000E6C  0E00               	movlw	0
  8405  000E6E  6F82               	movwf	(efgtoa@pp+1)& (0+255),b
  8406  000E70  0E00               	movlw	0
  8407  000E72  6F81               	movwf	efgtoa@pp& (0+255),b
  8408                           
  8409                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  8410  000E74  0E00               	movlw	0
  8411  000E76  6F80               	movwf	(efgtoa@t+1)& (0+255),b
  8412  000E78  0E00               	movlw	0
  8413  000E7A  6F7F               	movwf	efgtoa@t& (0+255),b
  8414                           
  8415                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  8416  000E7C  0E00               	movlw	0
  8417  000E7E  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  8418  000E80  0E00               	movlw	0
  8419  000E82  6F99               	movwf	efgtoa@i& (0+255),b
  8420                           
  8421                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  8422  000E84  EF31  F008         	goto	l5064
  8423  000E88                     l5016:
  8424                           
  8425                           ; BSR set to: 0
  8426                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = 
      +                          floorf(h/u);
  8427  000E88  C091  F035         	movff	efgtoa@h,___fldiv@b
  8428  000E8C  C092  F036         	movff	efgtoa@h+1,___fldiv@b+1
  8429  000E90  C093  F037         	movff	efgtoa@h+2,___fldiv@b+2
  8430  000E94  C094  F038         	movff	efgtoa@h+3,___fldiv@b+3
  8431  000E98  C0A3  F039         	movff	efgtoa@u,___fldiv@a
  8432  000E9C  C0A4  F03A         	movff	efgtoa@u+1,___fldiv@a+1
  8433  000EA0  C0A5  F03B         	movff	efgtoa@u+2,___fldiv@a+2
  8434  000EA4  C0A6  F03C         	movff	efgtoa@u+3,___fldiv@a+3
  8435  000EA8  ECC8  F019         	call	___fldiv	;wreg free
  8436  000EAC  C035  F04E         	movff	?___fldiv,floorf@x
  8437  000EB0  C036  F04F         	movff	?___fldiv+1,floorf@x+1
  8438  000EB4  C037  F050         	movff	?___fldiv+2,floorf@x+2
  8439  000EB8  C038  F051         	movff	?___fldiv+3,floorf@x+3
  8440  000EBC  EC7A  F01E         	call	_floorf	;wreg free
  8441  000EC0  C04E  F095         	movff	?_floorf,efgtoa@l
  8442  000EC4  C04F  F096         	movff	?_floorf+1,efgtoa@l+1
  8443  000EC8  C050  F097         	movff	?_floorf+2,efgtoa@l+2
  8444  000ECC  C051  F098         	movff	?_floorf+3,efgtoa@l+3
  8445                           
  8446                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = 
      +                          (int)l;
  8447  000ED0  C095  F04E         	movff	efgtoa@l,___fltol@f1
  8448  000ED4  C096  F04F         	movff	efgtoa@l+1,___fltol@f1+1
  8449  000ED8  C097  F050         	movff	efgtoa@l+2,___fltol@f1+2
  8450  000EDC  C098  F051         	movff	efgtoa@l+3,___fltol@f1+3
  8451  000EE0  ECF2  F024         	call	___fltol	;wreg free
  8452  000EE4  C04E  F087         	movff	?___fltol,efgtoa@d
  8453  000EE8  C04F  F088         	movff	?___fltol+1,efgtoa@d+1
  8454  000EEC                     
  8455                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  8456  000EEC  0100               	movlb	0	; () banked
  8457  000EEE  B9F8               	btfsc	_flags& (0+255),4,b
  8458  000EF0  EF7C  F007         	goto	u6021
  8459  000EF4  EF7E  F007         	goto	u6020
  8460  000EF8                     u6021:
  8461  000EF8  EF9B  F007         	goto	l5028
  8462  000EFC                     u6020:
  8463  000EFC                     
  8464                           ; BSR set to: 0
  8465  000EFC  5187               	movf	efgtoa@d& (0+255),w,b
  8466  000EFE  1188               	iorwf	(efgtoa@d+1)& (0+255),w,b
  8467  000F00  A4D8               	btfss	status,2,c
  8468  000F02  EF85  F007         	goto	u6031
  8469  000F06  EF87  F007         	goto	u6030
  8470  000F0A                     u6031:
  8471  000F0A  EF9B  F007         	goto	l5028
  8472  000F0E                     u6030:
  8473  000F0E                     
  8474                           ; BSR set to: 0
  8475  000F0E  0E67               	movlw	103
  8476  000F10  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8477  000F12  A4D8               	btfss	status,2,c
  8478  000F14  EF8E  F007         	goto	u6041
  8479  000F18  EF90  F007         	goto	u6040
  8480  000F1C                     u6041:
  8481  000F1C  EF9B  F007         	goto	l5028
  8482  000F20                     u6040:
  8483  000F20                     
  8484                           ; BSR set to: 0
  8485  000F20  BF86               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  8486  000F22  EF97  F007         	goto	u6050
  8487  000F26  EF95  F007         	goto	u6051
  8488  000F2A                     u6051:
  8489  000F2A  EF9B  F007         	goto	l5028
  8490  000F2E                     u6050:
  8491  000F2E                     
  8492                           ; BSR set to: 0
  8493                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             
      +                          ++t;
  8494  000F2E  4B7F               	infsnz	efgtoa@t& (0+255),f,b
  8495  000F30  2B80               	incf	(efgtoa@t+1)& (0+255),f,b
  8496                           
  8497                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } el
      +                          se {
  8498  000F32  EFE5  F007         	goto	l5056
  8499  000F36                     l5028:
  8500                           
  8501                           ; BSR set to: 0
  8502                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             
      +                          if (!pp && (ne < 0)) {
  8503  000F36  5181               	movf	efgtoa@pp& (0+255),w,b
  8504  000F38  1182               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  8505  000F3A  A4D8               	btfss	status,2,c
  8506  000F3C  EFA2  F007         	goto	u6061
  8507  000F40  EFA4  F007         	goto	u6060
  8508  000F44                     u6061:
  8509  000F44  EFCE  F007         	goto	l5048
  8510  000F48                     u6060:
  8511  000F48                     
  8512                           ; BSR set to: 0
  8513  000F48  BF86               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  8514  000F4A  EFAB  F007         	goto	u6070
  8515  000F4E  EFA9  F007         	goto	u6071
  8516  000F52                     u6071:
  8517  000F52  EFCE  F007         	goto	l5048
  8518  000F56                     u6070:
  8519  000F56                     
  8520                           ; BSR set to: 0
  8521                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:             
      +                              dbuf[n++] = '.';
  8522  000F56  0E00               	movlw	low _dbuf
  8523  000F58  25A1               	addwf	efgtoa@n& (0+255),w,b
  8524  000F5A  6ED9               	movwf	fsr2l,c
  8525  000F5C  0E02               	movlw	high _dbuf
  8526  000F5E  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8527  000F60  6EDA               	movwf	fsr2h,c
  8528  000F62  0E2E               	movlw	46
  8529  000F64  6EDF               	movwf	indf2,c
  8530  000F66                     
  8531                           ; BSR set to: 0
  8532  000F66  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8533  000F68  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8534  000F6A                     
  8535                           ; BSR set to: 0
  8536                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:             
      +                              --w;
  8537  000F6A  078E               	decf	efgtoa@w& (0+255),f,b
  8538  000F6C  A0D8               	btfss	status,0,c
  8539  000F6E  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8540  000F70                     
  8541                           ; BSR set to: 0
  8542                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:             
      +                              pp = 1;
  8543  000F70  0E00               	movlw	0
  8544  000F72  6F82               	movwf	(efgtoa@pp+1)& (0+255),b
  8545  000F74  0E01               	movlw	1
  8546  000F76  6F81               	movwf	efgtoa@pp& (0+255),b
  8547  000F78  EFCE  F007         	goto	l5048
  8548  000F7C                     l5040:
  8549                           
  8550                           ; BSR set to: 0
  8551                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:             
      +                              dbuf[n++] = '0';
  8552  000F7C  0E00               	movlw	low _dbuf
  8553  000F7E  25A1               	addwf	efgtoa@n& (0+255),w,b
  8554  000F80  6ED9               	movwf	fsr2l,c
  8555  000F82  0E02               	movlw	high _dbuf
  8556  000F84  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8557  000F86  6EDA               	movwf	fsr2h,c
  8558  000F88  0E30               	movlw	48
  8559  000F8A  6EDF               	movwf	indf2,c
  8560  000F8C                     
  8561                           ; BSR set to: 0
  8562  000F8C  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8563  000F8E  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8564  000F90                     
  8565                           ; BSR set to: 0
  8566                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:             
      +                              --w;
  8567  000F90  078E               	decf	efgtoa@w& (0+255),f,b
  8568  000F92  A0D8               	btfss	status,0,c
  8569  000F94  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8570  000F96                     
  8571                           ; BSR set to: 0
  8572                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:             
      +                              --t;
  8573  000F96  077F               	decf	efgtoa@t& (0+255),f,b
  8574  000F98  A0D8               	btfss	status,0,c
  8575  000F9A  0780               	decf	(efgtoa@t+1)& (0+255),f,b
  8576  000F9C                     l5048:
  8577                           
  8578                           ; BSR set to: 0
  8579                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             
      +                          while (t) {
  8580  000F9C  517F               	movf	efgtoa@t& (0+255),w,b
  8581  000F9E  1180               	iorwf	(efgtoa@t+1)& (0+255),w,b
  8582  000FA0  A4D8               	btfss	status,2,c
  8583  000FA2  EFD5  F007         	goto	u6081
  8584  000FA6  EFD7  F007         	goto	u6080
  8585  000FAA                     u6081:
  8586  000FAA  EFBE  F007         	goto	l5040
  8587  000FAE                     u6080:
  8588  000FAE                     
  8589                           ; BSR set to: 0
  8590                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             
      +                          dbuf[n++] = '0' + d;
  8591  000FAE  0E00               	movlw	low _dbuf
  8592  000FB0  25A1               	addwf	efgtoa@n& (0+255),w,b
  8593  000FB2  6ED9               	movwf	fsr2l,c
  8594  000FB4  0E02               	movlw	high _dbuf
  8595  000FB6  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8596  000FB8  6EDA               	movwf	fsr2h,c
  8597  000FBA  5187               	movf	efgtoa@d& (0+255),w,b
  8598  000FBC  0F30               	addlw	48
  8599  000FBE  6EDF               	movwf	indf2,c
  8600  000FC0                     
  8601                           ; BSR set to: 0
  8602  000FC0  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8603  000FC2  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8604  000FC4                     
  8605                           ; BSR set to: 0
  8606                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             
      +                          --w;
  8607  000FC4  078E               	decf	efgtoa@w& (0+255),f,b
  8608  000FC6  A0D8               	btfss	status,0,c
  8609  000FC8  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8610  000FCA                     l5056:
  8611                           
  8612                           ; BSR set to: 0
  8613                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -=
      +                           l*u;
  8614  000FCA  C091  F045         	movff	efgtoa@h,___flsub@b
  8615  000FCE  C092  F046         	movff	efgtoa@h+1,___flsub@b+1
  8616  000FD2  C093  F047         	movff	efgtoa@h+2,___flsub@b+2
  8617  000FD6  C094  F048         	movff	efgtoa@h+3,___flsub@b+3
  8618  000FDA  C0A3  F020         	movff	efgtoa@u,___flmul@a
  8619  000FDE  C0A4  F021         	movff	efgtoa@u+1,___flmul@a+1
  8620  000FE2  C0A5  F022         	movff	efgtoa@u+2,___flmul@a+2
  8621  000FE6  C0A6  F023         	movff	efgtoa@u+3,___flmul@a+3
  8622  000FEA  C095  F01C         	movff	efgtoa@l,___flmul@b
  8623  000FEE  C096  F01D         	movff	efgtoa@l+1,___flmul@b+1
  8624  000FF2  C097  F01E         	movff	efgtoa@l+2,___flmul@b+2
  8625  000FF6  C098  F01F         	movff	efgtoa@l+3,___flmul@b+3
  8626  000FFA  ECB3  F017         	call	___flmul	;wreg free
  8627  000FFE  C01C  F049         	movff	?___flmul,___flsub@a
  8628  001002  C01D  F04A         	movff	?___flmul+1,___flsub@a+1
  8629  001006  C01E  F04B         	movff	?___flmul+2,___flsub@a+2
  8630  00100A  C01F  F04C         	movff	?___flmul+3,___flsub@a+3
  8631  00100E  EC56  F02C         	call	___flsub	;wreg free
  8632  001012  C045  F091         	movff	?___flsub,efgtoa@h
  8633  001016  C046  F092         	movff	?___flsub+1,efgtoa@h+1
  8634  00101A  C047  F093         	movff	?___flsub+2,efgtoa@h+2
  8635  00101E  C048  F094         	movff	?___flsub+3,efgtoa@h+3
  8636  001022                     
  8637                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = 
      +                          u/10.0;
  8638  001022  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  8639  001026  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  8640  00102A  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  8641  00102E  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  8642  001032  0E00               	movlw	0
  8643  001034  6E39               	movwf	___fldiv@a^0,c
  8644  001036  0E00               	movlw	0
  8645  001038  6E3A               	movwf	(___fldiv@a+1)^0,c
  8646  00103A  0E20               	movlw	32
  8647  00103C  6E3B               	movwf	(___fldiv@a+2)^0,c
  8648  00103E  0E41               	movlw	65
  8649  001040  6E3C               	movwf	(___fldiv@a+3)^0,c
  8650  001042  ECC8  F019         	call	___fldiv	;wreg free
  8651  001046  C035  F0A3         	movff	?___fldiv,efgtoa@u
  8652  00104A  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  8653  00104E  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  8654  001052  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  8655  001056                     
  8656                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne
      +                          ;
  8657  001056  0100               	movlb	0	; () banked
  8658  001058  0785               	decf	efgtoa@ne& (0+255),f,b
  8659  00105A  A0D8               	btfss	status,0,c
  8660  00105C  0786               	decf	(efgtoa@ne+1)& (0+255),f,b
  8661  00105E                     
  8662                           ; BSR set to: 0
  8663                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  8664  00105E  4B99               	infsnz	efgtoa@i& (0+255),f,b
  8665  001060  2B9A               	incf	(efgtoa@i+1)& (0+255),f,b
  8666  001062                     l5064:
  8667                           
  8668                           ; BSR set to: 0
  8669                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  8670  001062  5183               	movf	efgtoa@m& (0+255),w,b
  8671  001064  5D99               	subwf	efgtoa@i& (0+255),w,b
  8672  001066  519A               	movf	(efgtoa@i+1)& (0+255),w,b
  8673  001068  0A80               	xorlw	128
  8674  00106A  6F6A               	movwf	??_efgtoa& (0+255),b
  8675  00106C  5184               	movf	(efgtoa@m+1)& (0+255),w,b
  8676  00106E  0A80               	xorlw	128
  8677  001070  596A               	subwfb	??_efgtoa& (0+255),w,b
  8678  001072  B0D8               	btfsc	status,0,c
  8679  001074  EF3E  F008         	goto	u6091
  8680  001078  EF40  F008         	goto	u6090
  8681  00107C                     u6091:
  8682  00107C  EF4E  F008         	goto	l5068
  8683  001080                     u6090:
  8684  001080                     
  8685                           ; BSR set to: 0
  8686  001080  BFA2               	btfsc	(efgtoa@n+1)& (0+255),7,b
  8687  001082  EF4C  F008         	goto	u6101
  8688  001086  51A2               	movf	(efgtoa@n+1)& (0+255),w,b
  8689  001088  E109               	bnz	u6100
  8690  00108A  0E4B               	movlw	75
  8691  00108C  5DA1               	subwf	efgtoa@n& (0+255),w,b
  8692  00108E  A0D8               	btfss	status,0,c
  8693  001090  EF4C  F008         	goto	u6101
  8694  001094  EF4E  F008         	goto	u6100
  8695  001098                     u6101:
  8696  001098  EF44  F007         	goto	l5016
  8697  00109C                     u6100:
  8698  00109C                     l5068:
  8699                           
  8700                           ; BSR set to: 0
  8701                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp 
      +                          && (flags & (1 << 4))) {
  8702  00109C  5181               	movf	efgtoa@pp& (0+255),w,b
  8703  00109E  1182               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  8704  0010A0  A4D8               	btfss	status,2,c
  8705  0010A2  EF55  F008         	goto	u6111
  8706  0010A6  EF57  F008         	goto	u6110
  8707  0010AA                     u6111:
  8708  0010AA  EF68  F008         	goto	l5076
  8709  0010AE                     u6110:
  8710  0010AE                     
  8711                           ; BSR set to: 0
  8712  0010AE  A9F8               	btfss	_flags& (0+255),4,b
  8713  0010B0  EF5C  F008         	goto	u6121
  8714  0010B4  EF5E  F008         	goto	u6120
  8715  0010B8                     u6121:
  8716  0010B8  EF68  F008         	goto	l5076
  8717  0010BC                     u6120:
  8718  0010BC                     
  8719                           ; BSR set to: 0
  8720                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf
      +                          [n++] = '.';
  8721  0010BC  0E00               	movlw	low _dbuf
  8722  0010BE  25A1               	addwf	efgtoa@n& (0+255),w,b
  8723  0010C0  6ED9               	movwf	fsr2l,c
  8724  0010C2  0E02               	movlw	high _dbuf
  8725  0010C4  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8726  0010C6  6EDA               	movwf	fsr2h,c
  8727  0010C8  0E2E               	movlw	46
  8728  0010CA  6EDF               	movwf	indf2,c
  8729  0010CC                     
  8730                           ; BSR set to: 0
  8731  0010CC  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8732  0010CE  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8733  0010D0                     l5076:
  8734                           
  8735                           ; BSR set to: 0
  8736                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] 
      +                          = '\0';
  8737  0010D0  0E00               	movlw	low _dbuf
  8738  0010D2  25A1               	addwf	efgtoa@n& (0+255),w,b
  8739  0010D4  6ED9               	movwf	fsr2l,c
  8740  0010D6  0E02               	movlw	high _dbuf
  8741  0010D8  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8742  0010DA  6EDA               	movwf	fsr2h,c
  8743  0010DC  0E00               	movlw	0
  8744  0010DE  6EDF               	movwf	indf2,c
  8745  0010E0                     
  8746                           ; BSR set to: 0
  8747                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmod
      +                          e == 'e') {
  8748  0010E0  0E65               	movlw	101
  8749  0010E2  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8750  0010E4  A4D8               	btfss	status,2,c
  8751  0010E6  EF77  F008         	goto	u6131
  8752  0010EA  EF79  F008         	goto	u6130
  8753  0010EE                     u6131:
  8754  0010EE  EF27  F004         	goto	l4888
  8755  0010F2                     u6130:
  8756  0010F2                     
  8757                           ; BSR set to: 0
  8758                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = 
      +                          sizeof(dbuf) - 1;
  8759  0010F2  0E00               	movlw	0
  8760  0010F4  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  8761  0010F6  0E4F               	movlw	79
  8762  0010F8  6F99               	movwf	efgtoa@i& (0+255),b
  8763  0010FA                     
  8764                           ; BSR set to: 0
  8765                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf
      +                          [i] = '\0';
  8766  0010FA  0E00               	movlw	low _dbuf
  8767  0010FC  2599               	addwf	efgtoa@i& (0+255),w,b
  8768  0010FE  6ED9               	movwf	fsr2l,c
  8769  001100  0E02               	movlw	high _dbuf
  8770  001102  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8771  001104  6EDA               	movwf	fsr2h,c
  8772  001106  0E00               	movlw	0
  8773  001108  6EDF               	movwf	indf2,c
  8774  00110A                     
  8775                           ; BSR set to: 0
  8776                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign
      +                           = 0;
  8777  00110A  0E00               	movlw	0
  8778  00110C  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  8779  00110E  0E00               	movlw	0
  8780  001110  6F89               	movwf	efgtoa@sign& (0+255),b
  8781  001112                     
  8782                           ; BSR set to: 0
  8783                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (
      +                          e < 0) {
  8784  001112  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8785  001114  EF90  F008         	goto	u6140
  8786  001118  EF8E  F008         	goto	u6141
  8787  00111C                     u6141:
  8788  00111C  EF98  F008         	goto	l5092
  8789  001120                     u6140:
  8790  001120                     
  8791                           ; BSR set to: 0
  8792                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             
      +                          sign = 1;
  8793  001120  0E00               	movlw	0
  8794  001122  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  8795  001124  0E01               	movlw	1
  8796  001126  6F89               	movwf	efgtoa@sign& (0+255),b
  8797  001128                     
  8798                           ; BSR set to: 0
  8799                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             
      +                          e = -e;
  8800  001128  6D9F               	negf	efgtoa@e& (0+255),b
  8801  00112A  1FA0               	comf	(efgtoa@e+1)& (0+255),f,b
  8802  00112C  B0D8               	btfsc	status,0,c
  8803  00112E  2BA0               	incf	(efgtoa@e+1)& (0+255),f,b
  8804  001130                     l5092:
  8805                           
  8806                           ; BSR set to: 0
  8807                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 
      +                          2;
  8808  001130  0E00               	movlw	0
  8809  001132  6F8C               	movwf	(efgtoa@p+1)& (0+255),b
  8810  001134  0E02               	movlw	2
  8811  001136  6F8B               	movwf	efgtoa@p& (0+255),b
  8812                           
  8813                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  8814  001138  EFC9  F008         	goto	l5104
  8815  00113C                     l5094:
  8816                           
  8817                           ; BSR set to: 0
  8818                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             
      +                          --i;
  8819  00113C  0799               	decf	efgtoa@i& (0+255),f,b
  8820  00113E  A0D8               	btfss	status,0,c
  8821  001140  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  8822  001142                     
  8823                           ; BSR set to: 0
  8824                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             
      +                          dbuf[i] = '0' + (e % 10);
  8825  001142  0E00               	movlw	low _dbuf
  8826  001144  2599               	addwf	efgtoa@i& (0+255),w,b
  8827  001146  6ED9               	movwf	fsr2l,c
  8828  001148  0E02               	movlw	high _dbuf
  8829  00114A  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8830  00114C  6EDA               	movwf	fsr2h,c
  8831  00114E  C09F  F001         	movff	efgtoa@e,___awmod@dividend
  8832  001152  C0A0  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  8833  001156  0E00               	movlw	0
  8834  001158  6E04               	movwf	(___awmod@divisor+1)^0,c
  8835  00115A  0E0A               	movlw	10
  8836  00115C  6E03               	movwf	___awmod@divisor^0,c
  8837  00115E  EC74  F028         	call	___awmod	;wreg free
  8838  001162  5001               	movf	?___awmod^0,w,c
  8839  001164  0F30               	addlw	48
  8840  001166  6EDF               	movwf	indf2,c
  8841  001168                     
  8842                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             
      +                          e = e / 10;
  8843  001168  C09F  F001         	movff	efgtoa@e,___awdiv@dividend
  8844  00116C  C0A0  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  8845  001170  0E00               	movlw	0
  8846  001172  6E04               	movwf	(___awdiv@divisor+1)^0,c
  8847  001174  0E0A               	movlw	10
  8848  001176  6E03               	movwf	___awdiv@divisor^0,c
  8849  001178  EC12  F028         	call	___awdiv	;wreg free
  8850  00117C  C001  F09F         	movff	?___awdiv,efgtoa@e
  8851  001180  C002  F0A0         	movff	?___awdiv+1,efgtoa@e+1
  8852  001184                     
  8853                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             
      +                          --p;
  8854  001184  0100               	movlb	0	; () banked
  8855  001186  078B               	decf	efgtoa@p& (0+255),f,b
  8856  001188  A0D8               	btfss	status,0,c
  8857  00118A  078C               	decf	(efgtoa@p+1)& (0+255),f,b
  8858  00118C                     
  8859                           ; BSR set to: 0
  8860                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             
      +                          --w;
  8861  00118C  078E               	decf	efgtoa@w& (0+255),f,b
  8862  00118E  A0D8               	btfss	status,0,c
  8863  001190  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8864  001192                     l5104:
  8865                           
  8866                           ; BSR set to: 0
  8867                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  8868  001192  519F               	movf	efgtoa@e& (0+255),w,b
  8869  001194  11A0               	iorwf	(efgtoa@e+1)& (0+255),w,b
  8870  001196  A4D8               	btfss	status,2,c
  8871  001198  EFD0  F008         	goto	u6151
  8872  00119C  EFD2  F008         	goto	u6150
  8873  0011A0                     u6151:
  8874  0011A0  EF9E  F008         	goto	l5094
  8875  0011A4                     u6150:
  8876  0011A4                     
  8877                           ; BSR set to: 0
  8878  0011A4  BF8C               	btfsc	(efgtoa@p+1)& (0+255),7,b
  8879  0011A6  EFDF  F008         	goto	u6160
  8880  0011AA  518C               	movf	(efgtoa@p+1)& (0+255),w,b
  8881  0011AC  E106               	bnz	u6161
  8882  0011AE  058B               	decf	efgtoa@p& (0+255),w,b
  8883  0011B0  B0D8               	btfsc	status,0,c
  8884  0011B2  EFDD  F008         	goto	u6161
  8885  0011B6  EFDF  F008         	goto	u6160
  8886  0011BA                     u6161:
  8887  0011BA  EF9E  F008         	goto	l5094
  8888  0011BE                     u6160:
  8889  0011BE                     
  8890                           ; BSR set to: 0
  8891                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  8892  0011BE  0799               	decf	efgtoa@i& (0+255),f,b
  8893  0011C0  A0D8               	btfss	status,0,c
  8894  0011C2  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  8895  0011C4                     
  8896                           ; BSR set to: 0
  8897                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [i] = sign ? '-' : '+';
  8898  0011C4  5189               	movf	efgtoa@sign& (0+255),w,b
  8899  0011C6  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8900  0011C8  A4D8               	btfss	status,2,c
  8901  0011CA  EFE9  F008         	goto	u6171
  8902  0011CE  EFEB  F008         	goto	u6170
  8903  0011D2                     u6171:
  8904  0011D2  EFF1  F008         	goto	l5114
  8905  0011D6                     u6170:
  8906  0011D6                     
  8907                           ; BSR set to: 0
  8908  0011D6  0E00               	movlw	0
  8909  0011D8  6F7A               	movwf	(_efgtoa$2518+1)& (0+255),b
  8910  0011DA  0E2B               	movlw	43
  8911  0011DC  6F79               	movwf	_efgtoa$2518& (0+255),b
  8912  0011DE  EFF5  F008         	goto	l5116
  8913  0011E2                     l5114:
  8914                           
  8915                           ; BSR set to: 0
  8916  0011E2  0E00               	movlw	0
  8917  0011E4  6F7A               	movwf	(_efgtoa$2518+1)& (0+255),b
  8918  0011E6  0E2D               	movlw	45
  8919  0011E8  6F79               	movwf	_efgtoa$2518& (0+255),b
  8920  0011EA                     l5116:
  8921                           
  8922                           ; BSR set to: 0
  8923  0011EA  0E00               	movlw	low _dbuf
  8924  0011EC  2599               	addwf	efgtoa@i& (0+255),w,b
  8925  0011EE  6ED9               	movwf	fsr2l,c
  8926  0011F0  0E02               	movlw	high _dbuf
  8927  0011F2  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8928  0011F4  6EDA               	movwf	fsr2h,c
  8929  0011F6  C079  FFDF         	movff	_efgtoa$2518,indf2
  8930  0011FA                     
  8931                           ; BSR set to: 0
  8932                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  8933  0011FA  078E               	decf	efgtoa@w& (0+255),f,b
  8934  0011FC  A0D8               	btfss	status,0,c
  8935  0011FE  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8936  001200                     
  8937                           ; BSR set to: 0
  8938                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  8939  001200  0799               	decf	efgtoa@i& (0+255),f,b
  8940  001202  A0D8               	btfss	status,0,c
  8941  001204  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  8942  001206                     
  8943                           ; BSR set to: 0
  8944  001206  0EBF               	movlw	191
  8945  001208  6F6A               	movwf	??_efgtoa& (0+255),b
  8946  00120A  0EFF               	movlw	255
  8947  00120C  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  8948  00120E  505E               	movf	efgtoa@c^0,w,c
  8949  001210  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  8950  001212  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  8951  001214  516A               	movf	??_efgtoa& (0+255),w,b
  8952  001216  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  8953  001218  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  8954  00121A  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8955  00121C  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  8956  00121E  E10A               	bnz	u6180
  8957  001220  0E1A               	movlw	26
  8958  001222  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  8959  001224  A0D8               	btfss	status,0,c
  8960  001226  EF17  F009         	goto	u6181
  8961  00122A  EF1A  F009         	goto	u6180
  8962  00122E                     u6181:
  8963  00122E  0E01               	movlw	1
  8964  001230  EF1B  F009         	goto	u6190
  8965  001234                     u6180:
  8966  001234  0E00               	movlw	0
  8967  001236                     u6190:
  8968  001236  6F7D               	movwf	_efgtoa$2520& (0+255),b
  8969  001238  6B7E               	clrf	(_efgtoa$2520+1)& (0+255),b
  8970  00123A                     
  8971                           ; BSR set to: 0
  8972  00123A  517D               	movf	_efgtoa$2520& (0+255),w,b
  8973  00123C  117E               	iorwf	(_efgtoa$2520+1)& (0+255),w,b
  8974  00123E  A4D8               	btfss	status,2,c
  8975  001240  EF24  F009         	goto	u6201
  8976  001244  EF26  F009         	goto	u6200
  8977  001248                     u6201:
  8978  001248  EF2C  F009         	goto	l5130
  8979  00124C                     u6200:
  8980  00124C                     
  8981                           ; BSR set to: 0
  8982  00124C  0E00               	movlw	0
  8983  00124E  6F7C               	movwf	(_efgtoa$2519+1)& (0+255),b
  8984  001250  0E65               	movlw	101
  8985  001252  6F7B               	movwf	_efgtoa$2519& (0+255),b
  8986  001254  EF30  F009         	goto	l5132
  8987  001258                     l5130:
  8988                           
  8989                           ; BSR set to: 0
  8990  001258  0E00               	movlw	0
  8991  00125A  6F7C               	movwf	(_efgtoa$2519+1)& (0+255),b
  8992  00125C  0E45               	movlw	69
  8993  00125E  6F7B               	movwf	_efgtoa$2519& (0+255),b
  8994  001260                     l5132:
  8995                           
  8996                           ; BSR set to: 0
  8997  001260  0E00               	movlw	low _dbuf
  8998  001262  2599               	addwf	efgtoa@i& (0+255),w,b
  8999  001264  6ED9               	movwf	fsr2l,c
  9000  001266  0E02               	movlw	high _dbuf
  9001  001268  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9002  00126A  6EDA               	movwf	fsr2h,c
  9003  00126C  C07B  FFDF         	movff	_efgtoa$2519,indf2
  9004  001270                     
  9005                           ; BSR set to: 0
  9006                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  9007  001270  078E               	decf	efgtoa@w& (0+255),f,b
  9008  001272  A0D8               	btfss	status,0,c
  9009  001274  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  9010  001276                     
  9011                           ; BSR set to: 0
  9012                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  9013  001276  0E00               	movlw	low _dbuf
  9014  001278  25A1               	addwf	efgtoa@n& (0+255),w,b
  9015  00127A  6E01               	movwf	strcpy@dest^0,c
  9016  00127C  0E02               	movlw	high _dbuf
  9017  00127E  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9018  001280  6E02               	movwf	(strcpy@dest+1)^0,c
  9019  001282  0E00               	movlw	low _dbuf
  9020  001284  2599               	addwf	efgtoa@i& (0+255),w,b
  9021  001286  6E03               	movwf	strcpy@src^0,c
  9022  001288  0E02               	movlw	high _dbuf
  9023  00128A  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9024  00128C  6E04               	movwf	(strcpy@src+1)^0,c
  9025  00128E  EC7F  F02B         	call	_strcpy	;wreg free
  9026  001292  EF27  F004         	goto	l4888
  9027  001296                     l1260:
  9028  001296  0012               	return		;funcret
  9029  001298                     __end_of_efgtoa:
  9030                           	callstack 0
  9031                           
  9032 ;; *************** function _tolower *****************
  9033 ;; Defined at:
  9034 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\tolower.c"
  9035 ;; Parameters:    Size  Location     Type
  9036 ;;  c               2    6[COMRAM] int 
  9037 ;; Auto vars:     Size  Location     Type
  9038 ;;		None
  9039 ;; Return value:  Size  Location     Type
  9040 ;;                  2    6[COMRAM] int 
  9041 ;; Registers used:
  9042 ;;		wreg, status,2, status,0
  9043 ;; Tracked objects:
  9044 ;;		On entry : 0/0
  9045 ;;		On exit  : 0/0
  9046 ;;		Unchanged: 0/0
  9047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9048 ;;      Params:         2       0       0       0       0       0       0
  9049 ;;      Locals:         2       0       0       0       0       0       0
  9050 ;;      Temps:          4       0       0       0       0       0       0
  9051 ;;      Totals:         8       0       0       0       0       0       0
  9052 ;;Total ram usage:        8 bytes
  9053 ;; Hardware stack levels used:    1
  9054 ;; Hardware stack levels required when called:    2
  9055 ;; This function calls:
  9056 ;;		_isupper
  9057 ;; This function is called by:
  9058 ;;		_efgtoa
  9059 ;;		_vfpfcnvrt
  9060 ;; This function uses a non-reentrant model
  9061 ;;
  9062                           
  9063                           	psect	text24
  9064  00569E                     __ptext24:
  9065                           	callstack 0
  9066  00569E                     _tolower:
  9067                           	callstack 23
  9068  00569E  0EBF               	movlw	191
  9069  0056A0  6E09               	movwf	??_tolower^0,c
  9070  0056A2  0EFF               	movlw	255
  9071  0056A4  6E0A               	movwf	(??_tolower+1)^0,c
  9072  0056A6  C007  F00B         	movff	tolower@c,??_tolower+2
  9073  0056AA  C008  F00C         	movff	tolower@c+1,??_tolower+3
  9074  0056AE  5009               	movf	??_tolower^0,w,c
  9075  0056B0  260B               	addwf	(??_tolower+2)^0,f,c
  9076  0056B2  500A               	movf	(??_tolower+1)^0,w,c
  9077  0056B4  220C               	addwfc	(??_tolower+3)^0,f,c
  9078  0056B6  500C               	movf	(??_tolower+3)^0,w,c
  9079  0056B8  E10A               	bnz	u5370
  9080  0056BA  0E1A               	movlw	26
  9081  0056BC  5C0B               	subwf	(??_tolower+2)^0,w,c
  9082  0056BE  A0D8               	btfss	status,0,c
  9083  0056C0  EF64  F02B         	goto	u5371
  9084  0056C4  EF67  F02B         	goto	u5370
  9085  0056C8                     u5371:
  9086  0056C8  0E01               	movlw	1
  9087  0056CA  EF68  F02B         	goto	u5380
  9088  0056CE                     u5370:
  9089  0056CE  0E00               	movlw	0
  9090  0056D0                     u5380:
  9091  0056D0  6E0D               	movwf	_tolower$2671^0,c
  9092  0056D2  6A0E               	clrf	(_tolower$2671+1)^0,c
  9093  0056D4  500D               	movf	_tolower$2671^0,w,c
  9094  0056D6  100E               	iorwf	(_tolower$2671+1)^0,w,c
  9095  0056D8  B4D8               	btfsc	status,2,c
  9096  0056DA  EF71  F02B         	goto	u5391
  9097  0056DE  EF73  F02B         	goto	u5390
  9098  0056E2                     u5391:
  9099  0056E2  EF7A  F02B         	goto	l1508
  9100  0056E6                     u5390:
  9101  0056E6  0E20               	movlw	32
  9102  0056E8  1007               	iorwf	tolower@c^0,w,c
  9103  0056EA  6E07               	movwf	?_tolower^0,c
  9104  0056EC  5008               	movf	(tolower@c+1)^0,w,c
  9105  0056EE  6E08               	movwf	(?_tolower+1)^0,c
  9106  0056F0  EF7E  F02B         	goto	l1513
  9107  0056F4                     l1508:
  9108  0056F4  C007  F007         	movff	tolower@c,?_tolower
  9109  0056F8  C008  F008         	movff	tolower@c+1,?_tolower+1
  9110  0056FC                     l1513:
  9111  0056FC  0012               	return		;funcret
  9112  0056FE                     __end_of_tolower:
  9113                           	callstack 0
  9114                           
  9115 ;; *************** function _isupper *****************
  9116 ;; Defined at:
  9117 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  9118 ;; Parameters:    Size  Location     Type
  9119 ;;  c               2    0[COMRAM] int 
  9120 ;; Auto vars:     Size  Location     Type
  9121 ;;		None
  9122 ;; Return value:  Size  Location     Type
  9123 ;;                  2    0[COMRAM] int 
  9124 ;; Registers used:
  9125 ;;		wreg, status,2, status,0
  9126 ;; Tracked objects:
  9127 ;;		On entry : 0/0
  9128 ;;		On exit  : 0/0
  9129 ;;		Unchanged: 0/0
  9130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9131 ;;      Params:         2       0       0       0       0       0       0
  9132 ;;      Locals:         0       0       0       0       0       0       0
  9133 ;;      Temps:          4       0       0       0       0       0       0
  9134 ;;      Totals:         6       0       0       0       0       0       0
  9135 ;;Total ram usage:        6 bytes
  9136 ;; Hardware stack levels used:    1
  9137 ;; Hardware stack levels required when called:    1
  9138 ;; This function calls:
  9139 ;;		Nothing
  9140 ;; This function is called by:
  9141 ;;		_efgtoa
  9142 ;;		_vfpfcnvrt
  9143 ;;		_tolower
  9144 ;; This function uses a non-reentrant model
  9145 ;;
  9146                           
  9147                           	psect	text25
  9148  005A32                     __ptext25:
  9149                           	callstack 0
  9150  005A32                     _isupper:
  9151                           	callstack 23
  9152  005A32  0EBF               	movlw	191
  9153  005A34  6E03               	movwf	??_isupper^0,c
  9154  005A36  0EFF               	movlw	255
  9155  005A38  6E04               	movwf	(??_isupper+1)^0,c
  9156  005A3A  C001  F005         	movff	isupper@c,??_isupper+2
  9157  005A3E  C002  F006         	movff	isupper@c+1,??_isupper+3
  9158  005A42  5003               	movf	??_isupper^0,w,c
  9159  005A44  2605               	addwf	(??_isupper+2)^0,f,c
  9160  005A46  5004               	movf	(??_isupper+1)^0,w,c
  9161  005A48  2206               	addwfc	(??_isupper+3)^0,f,c
  9162  005A4A  5006               	movf	(??_isupper+3)^0,w,c
  9163  005A4C  E10A               	bnz	u4380
  9164  005A4E  0E1A               	movlw	26
  9165  005A50  5C05               	subwf	(??_isupper+2)^0,w,c
  9166  005A52  A0D8               	btfss	status,0,c
  9167  005A54  EF2E  F02D         	goto	u4381
  9168  005A58  EF31  F02D         	goto	u4380
  9169  005A5C                     u4381:
  9170  005A5C  0E01               	movlw	1
  9171  005A5E  EF32  F02D         	goto	u4390
  9172  005A62                     u4380:
  9173  005A62  0E00               	movlw	0
  9174  005A64                     u4390:
  9175  005A64  6E01               	movwf	?_isupper^0,c
  9176  005A66  6A02               	clrf	(?_isupper+1)^0,c
  9177  005A68  0012               	return		;funcret
  9178  005A6A                     __end_of_isupper:
  9179                           	callstack 0
  9180                           
  9181 ;; *************** function _strcpy *****************
  9182 ;; Defined at:
  9183 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  9184 ;; Parameters:    Size  Location     Type
  9185 ;;  dest            2    0[COMRAM] PTR unsigned char 
  9186 ;;		 -> dbuf(80), 
  9187 ;;  src             2    2[COMRAM] PTR const unsigned char 
  9188 ;;		 -> STR_22(4), STR_21(4), STR_18(4), STR_17(4), 
  9189 ;;		 -> dbuf(80), 
  9190 ;; Auto vars:     Size  Location     Type
  9191 ;;  d               2    8[COMRAM] PTR unsigned char 
  9192 ;;		 -> dbuf(80), 
  9193 ;;  s               2    6[COMRAM] PTR const unsigned char 
  9194 ;;		 -> STR_22(4), STR_21(4), STR_18(4), STR_17(4), 
  9195 ;;		 -> dbuf(80), 
  9196 ;; Return value:  Size  Location     Type
  9197 ;;                  2    0[COMRAM] PTR unsigned char 
  9198 ;; Registers used:
  9199 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9200 ;; Tracked objects:
  9201 ;;		On entry : 0/0
  9202 ;;		On exit  : 0/0
  9203 ;;		Unchanged: 0/0
  9204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9205 ;;      Params:         4       0       0       0       0       0       0
  9206 ;;      Locals:         4       0       0       0       0       0       0
  9207 ;;      Temps:          2       0       0       0       0       0       0
  9208 ;;      Totals:        10       0       0       0       0       0       0
  9209 ;;Total ram usage:       10 bytes
  9210 ;; Hardware stack levels used:    1
  9211 ;; Hardware stack levels required when called:    1
  9212 ;; This function calls:
  9213 ;;		Nothing
  9214 ;; This function is called by:
  9215 ;;		_efgtoa
  9216 ;; This function uses a non-reentrant model
  9217 ;;
  9218                           
  9219                           	psect	text26
  9220  0056FE                     __ptext26:
  9221                           	callstack 0
  9222  0056FE                     _strcpy:
  9223                           	callstack 23
  9224  0056FE  C003  F007         	movff	strcpy@src,strcpy@s
  9225  005702  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  9226  005706  C001  F009         	movff	strcpy@dest,strcpy@d
  9227  00570A  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  9228  00570E                     l4726:
  9229  00570E  5007               	movf	strcpy@s^0,w,c
  9230  005710  6E05               	movwf	??_strcpy^0,c
  9231  005712  5008               	movf	(strcpy@s+1)^0,w,c
  9232  005714  6E06               	movwf	(??_strcpy+1)^0,c
  9233  005716  4A07               	infsnz	strcpy@s^0,f,c
  9234  005718  2A08               	incf	(strcpy@s+1)^0,f,c
  9235  00571A  C005  FFF6         	movff	??_strcpy,tblptrl
  9236  00571E  C006  FFF7         	movff	??_strcpy+1,tblptrh
  9237  005722  6AF8               	clrf	tblptru,c
  9238  005724  C009  FFD9         	movff	strcpy@d,fsr2l
  9239  005728  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  9240  00572C  4A09               	infsnz	strcpy@d^0,f,c
  9241  00572E  2A0A               	incf	(strcpy@d+1)^0,f,c
  9242  005730  0E05               	movlw	(high __ramtop+-1)
  9243  005732  64F7               	cpfsgt	tblptrh,c
  9244  005734  D003               	bra	u5357
  9245  005736  0008               	tblrd		*
  9246  005738  50F5               	movf	tablat,w,c
  9247  00573A  D005               	bra	u5350
  9248  00573C                     u5357:
  9249  00573C  CFF6 FFE1          	movff	tblptrl,fsr1l
  9250  005740  CFF7 FFE2          	movff	tblptrh,fsr1h
  9251  005744  50E7               	movf	indf1,w,c
  9252  005746                     u5350:
  9253  005746  6EDF               	movwf	indf2,c
  9254  005748  50DF               	movf	indf2,w,c
  9255  00574A  A4D8               	btfss	status,2,c
  9256  00574C  EFAA  F02B         	goto	u5361
  9257  005750  EFAC  F02B         	goto	u5360
  9258  005754                     u5361:
  9259  005754  EF87  F02B         	goto	l4726
  9260  005758                     u5360:
  9261  005758  0012               	return		;funcret
  9262  00575A                     __end_of_strcpy:
  9263                           	callstack 0
  9264                           
  9265 ;; *************** function _floorf *****************
  9266 ;; Defined at:
  9267 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\floorf.c"
  9268 ;; Parameters:    Size  Location     Type
  9269 ;;  x               4   77[COMRAM] float 
  9270 ;; Auto vars:     Size  Location     Type
  9271 ;;  u               4    6[BANK0 ] struct .
  9272 ;;  m               4    0[BANK0 ] unsigned long 
  9273 ;;  e               2    4[BANK0 ] int 
  9274 ;; Return value:  Size  Location     Type
  9275 ;;                  4   77[COMRAM] float 
  9276 ;; Registers used:
  9277 ;;		wreg, status,2, status,0
  9278 ;; Tracked objects:
  9279 ;;		On entry : 0/0
  9280 ;;		On exit  : 0/0
  9281 ;;		Unchanged: 0/0
  9282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9283 ;;      Params:         4       0       0       0       0       0       0
  9284 ;;      Locals:         0      10       0       0       0       0       0
  9285 ;;      Temps:          6       0       0       0       0       0       0
  9286 ;;      Totals:        10      10       0       0       0       0       0
  9287 ;;Total ram usage:       20 bytes
  9288 ;; Hardware stack levels used:    1
  9289 ;; Hardware stack levels required when called:    1
  9290 ;; This function calls:
  9291 ;;		Nothing
  9292 ;; This function is called by:
  9293 ;;		_efgtoa
  9294 ;; This function uses a non-reentrant model
  9295 ;;
  9296                           
  9297                           	psect	text27
  9298  003CF4                     __ptext27:
  9299                           	callstack 0
  9300  003CF4                     _floorf:
  9301                           	callstack 23
  9302  003CF4  C1A3  F066         	movff	floorf@F524,floorf@u
  9303  003CF8  C1A4  F067         	movff	floorf@F524+1,floorf@u+1
  9304  003CFC  C1A5  F068         	movff	floorf@F524+2,floorf@u+2
  9305  003D00  C1A6  F069         	movff	floorf@F524+3,floorf@u+3
  9306  003D04  C04E  F066         	movff	floorf@x,floorf@u
  9307  003D08  C04F  F067         	movff	floorf@x+1,floorf@u+1
  9308  003D0C  C050  F068         	movff	floorf@x+2,floorf@u+2
  9309  003D10  C051  F069         	movff	floorf@x+3,floorf@u+3
  9310  003D14  0E81               	movlw	129
  9311  003D16  6E52               	movwf	??_floorf^0,c
  9312  003D18  0EFF               	movlw	255
  9313  003D1A  6E53               	movwf	(??_floorf+1)^0,c
  9314  003D1C  C066  F054         	movff	floorf@u,??_floorf+2
  9315  003D20  C067  F055         	movff	floorf@u+1,??_floorf+3
  9316  003D24  C068  F056         	movff	floorf@u+2,??_floorf+4
  9317  003D28  C069  F057         	movff	floorf@u+3,??_floorf+5
  9318  003D2C  0E18               	movlw	24
  9319  003D2E  EF9E  F01E         	goto	u5400
  9320  003D32                     u5405:
  9321  003D32  90D8               	bcf	status,0,c
  9322  003D34  3257               	rrcf	(??_floorf+5)^0,f,c
  9323  003D36  3256               	rrcf	(??_floorf+4)^0,f,c
  9324  003D38  3255               	rrcf	(??_floorf+3)^0,f,c
  9325  003D3A  3254               	rrcf	(??_floorf+2)^0,f,c
  9326  003D3C                     u5400:
  9327  003D3C  2EE8               	decfsz	wreg,f,c
  9328  003D3E  EF99  F01E         	goto	u5405
  9329  003D42  5054               	movf	(??_floorf+2)^0,w,c
  9330  003D44  2452               	addwf	??_floorf^0,w,c
  9331  003D46  0100               	movlb	0	; () banked
  9332  003D48  6F64               	movwf	floorf@e& (0+255),b
  9333  003D4A  0E00               	movlw	0
  9334  003D4C  2053               	addwfc	(??_floorf+1)^0,w,c
  9335  003D4E  6F65               	movwf	(floorf@e+1)& (0+255),b
  9336  003D50  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  9337  003D52  EFB4  F01E         	goto	u5411
  9338  003D56  5165               	movf	(floorf@e+1)& (0+255),w,b
  9339  003D58  E109               	bnz	u5410
  9340  003D5A  0E17               	movlw	23
  9341  003D5C  5D64               	subwf	floorf@e& (0+255),w,b
  9342  003D5E  A0D8               	btfss	status,0,c
  9343  003D60  EFB4  F01E         	goto	u5411
  9344  003D64  EFB6  F01E         	goto	u5410
  9345  003D68                     u5411:
  9346  003D68  EFC0  F01E         	goto	l4744
  9347  003D6C                     u5410:
  9348  003D6C                     l4742:
  9349                           
  9350                           ; BSR set to: 0
  9351  003D6C  C04E  F04E         	movff	floorf@x,?_floorf
  9352  003D70  C04F  F04F         	movff	floorf@x+1,?_floorf+1
  9353  003D74  C050  F050         	movff	floorf@x+2,?_floorf+2
  9354  003D78  C051  F051         	movff	floorf@x+3,?_floorf+3
  9355  003D7C  EF84  F01F         	goto	l1432
  9356  003D80                     l4744:
  9357                           
  9358                           ; BSR set to: 0
  9359  003D80  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  9360  003D82  EFC5  F01E         	goto	u5421
  9361  003D86  EFC7  F01E         	goto	u5420
  9362  003D8A                     u5421:
  9363  003D8A  EF38  F01F         	goto	l4754
  9364  003D8E                     u5420:
  9365  003D8E                     
  9366                           ; BSR set to: 0
  9367  003D8E  C064  F052         	movff	floorf@e,??_floorf
  9368  003D92  0EFF               	movlw	255
  9369  003D94  6E53               	movwf	(??_floorf+1)^0,c
  9370  003D96  0EFF               	movlw	255
  9371  003D98  6E54               	movwf	(??_floorf+2)^0,c
  9372  003D9A  0E7F               	movlw	127
  9373  003D9C  6E55               	movwf	(??_floorf+3)^0,c
  9374  003D9E  0E00               	movlw	0
  9375  003DA0  6E56               	movwf	(??_floorf+4)^0,c
  9376  003DA2                     u5435:
  9377  003DA2  6652               	tstfsz	??_floorf^0,c
  9378  003DA4  EFD6  F01E         	goto	u5436
  9379  003DA8  EFDE  F01E         	goto	u5437
  9380  003DAC                     u5436:
  9381  003DAC  3456               	rlcf	(??_floorf+4)^0,w,c
  9382  003DAE  3256               	rrcf	(??_floorf+4)^0,f,c
  9383  003DB0  3255               	rrcf	(??_floorf+3)^0,f,c
  9384  003DB2  3254               	rrcf	(??_floorf+2)^0,f,c
  9385  003DB4  3253               	rrcf	(??_floorf+1)^0,f,c
  9386  003DB6  2E52               	decfsz	??_floorf^0,f,c
  9387  003DB8  EFD1  F01E         	goto	u5435
  9388  003DBC                     u5437:
  9389  003DBC  C053  F060         	movff	??_floorf+1,floorf@m
  9390  003DC0  C054  F061         	movff	??_floorf+2,floorf@m+1
  9391  003DC4  C055  F062         	movff	??_floorf+3,floorf@m+2
  9392  003DC8  C056  F063         	movff	??_floorf+4,floorf@m+3
  9393  003DCC  0100               	movlb	0	; () banked
  9394  003DCE  5160               	movf	floorf@m& (0+255),w,b
  9395  003DD0  1566               	andwf	floorf@u& (0+255),w,b
  9396  003DD2  6E52               	movwf	??_floorf^0,c
  9397  003DD4  5161               	movf	(floorf@m+1)& (0+255),w,b
  9398  003DD6  1567               	andwf	(floorf@u+1)& (0+255),w,b
  9399  003DD8  6E53               	movwf	(??_floorf+1)^0,c
  9400  003DDA  5162               	movf	(floorf@m+2)& (0+255),w,b
  9401  003DDC  1568               	andwf	(floorf@u+2)& (0+255),w,b
  9402  003DDE  6E54               	movwf	(??_floorf+2)^0,c
  9403  003DE0  5163               	movf	(floorf@m+3)& (0+255),w,b
  9404  003DE2  1569               	andwf	(floorf@u+3)& (0+255),w,b
  9405  003DE4  6E55               	movwf	(??_floorf+3)^0,c
  9406  003DE6  5052               	movf	??_floorf^0,w,c
  9407  003DE8  1053               	iorwf	(??_floorf+1)^0,w,c
  9408  003DEA  1054               	iorwf	(??_floorf+2)^0,w,c
  9409  003DEC  1055               	iorwf	(??_floorf+3)^0,w,c
  9410  003DEE  A4D8               	btfss	status,2,c
  9411  003DF0  EFFC  F01E         	goto	u5441
  9412  003DF4  EFFE  F01E         	goto	u5440
  9413  003DF8                     u5441:
  9414  003DF8  EF00  F01F         	goto	l4750
  9415  003DFC                     u5440:
  9416  003DFC  EFB6  F01E         	goto	l4742
  9417  003E00                     l4750:
  9418                           
  9419                           ; BSR set to: 0
  9420  003E00  C066  F052         	movff	floorf@u,??_floorf
  9421  003E04  C067  F053         	movff	floorf@u+1,??_floorf+1
  9422  003E08  C068  F054         	movff	floorf@u+2,??_floorf+2
  9423  003E0C  C069  F055         	movff	floorf@u+3,??_floorf+3
  9424  003E10  0E20               	movlw	32
  9425  003E12  EF10  F01F         	goto	u5450
  9426  003E16                     u5455:
  9427  003E16  90D8               	bcf	status,0,c
  9428  003E18  3255               	rrcf	(??_floorf+3)^0,f,c
  9429  003E1A  3254               	rrcf	(??_floorf+2)^0,f,c
  9430  003E1C  3253               	rrcf	(??_floorf+1)^0,f,c
  9431  003E1E  3252               	rrcf	??_floorf^0,f,c
  9432  003E20                     u5450:
  9433  003E20  2EE8               	decfsz	wreg,f,c
  9434  003E22  EF0B  F01F         	goto	u5455
  9435  003E26  5052               	movf	??_floorf^0,w,c
  9436  003E28  1053               	iorwf	(??_floorf+1)^0,w,c
  9437  003E2A  1054               	iorwf	(??_floorf+2)^0,w,c
  9438  003E2C  1055               	iorwf	(??_floorf+3)^0,w,c
  9439  003E2E  B4D8               	btfsc	status,2,c
  9440  003E30  EF1C  F01F         	goto	u5461
  9441  003E34  EF1E  F01F         	goto	u5460
  9442  003E38                     u5461:
  9443  003E38  EF26  F01F         	goto	l1435
  9444  003E3C                     u5460:
  9445  003E3C                     
  9446                           ; BSR set to: 0
  9447  003E3C  5160               	movf	floorf@m& (0+255),w,b
  9448  003E3E  2766               	addwf	floorf@u& (0+255),f,b
  9449  003E40  5161               	movf	(floorf@m+1)& (0+255),w,b
  9450  003E42  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  9451  003E44  5162               	movf	(floorf@m+2)& (0+255),w,b
  9452  003E46  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  9453  003E48  5163               	movf	(floorf@m+3)& (0+255),w,b
  9454  003E4A  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  9455  003E4C                     l1435:
  9456                           
  9457                           ; BSR set to: 0
  9458  003E4C  1D60               	comf	floorf@m& (0+255),w,b
  9459  003E4E  6E52               	movwf	??_floorf^0,c
  9460  003E50  1D61               	comf	(floorf@m+1)& (0+255),w,b
  9461  003E52  6E53               	movwf	(??_floorf+1)^0,c
  9462  003E54  1D62               	comf	(floorf@m+2)& (0+255),w,b
  9463  003E56  6E54               	movwf	(??_floorf+2)^0,c
  9464  003E58  1D63               	comf	(floorf@m+3)& (0+255),w,b
  9465  003E5A  6E55               	movwf	(??_floorf+3)^0,c
  9466  003E5C  5052               	movf	??_floorf^0,w,c
  9467  003E5E  1766               	andwf	floorf@u& (0+255),f,b
  9468  003E60  5053               	movf	(??_floorf+1)^0,w,c
  9469  003E62  1767               	andwf	(floorf@u+1)& (0+255),f,b
  9470  003E64  5054               	movf	(??_floorf+2)^0,w,c
  9471  003E66  1768               	andwf	(floorf@u+2)& (0+255),f,b
  9472  003E68  5055               	movf	(??_floorf+3)^0,w,c
  9473  003E6A  1769               	andwf	(floorf@u+3)& (0+255),f,b
  9474  003E6C  EF7C  F01F         	goto	l4762
  9475  003E70                     l4754:
  9476                           
  9477                           ; BSR set to: 0
  9478  003E70  C066  F052         	movff	floorf@u,??_floorf
  9479  003E74  C067  F053         	movff	floorf@u+1,??_floorf+1
  9480  003E78  C068  F054         	movff	floorf@u+2,??_floorf+2
  9481  003E7C  C069  F055         	movff	floorf@u+3,??_floorf+3
  9482  003E80  0E20               	movlw	32
  9483  003E82  EF48  F01F         	goto	u5470
  9484  003E86                     u5475:
  9485  003E86  90D8               	bcf	status,0,c
  9486  003E88  3255               	rrcf	(??_floorf+3)^0,f,c
  9487  003E8A  3254               	rrcf	(??_floorf+2)^0,f,c
  9488  003E8C  3253               	rrcf	(??_floorf+1)^0,f,c
  9489  003E8E  3252               	rrcf	??_floorf^0,f,c
  9490  003E90                     u5470:
  9491  003E90  2EE8               	decfsz	wreg,f,c
  9492  003E92  EF43  F01F         	goto	u5475
  9493  003E96  5052               	movf	??_floorf^0,w,c
  9494  003E98  1053               	iorwf	(??_floorf+1)^0,w,c
  9495  003E9A  1054               	iorwf	(??_floorf+2)^0,w,c
  9496  003E9C  1055               	iorwf	(??_floorf+3)^0,w,c
  9497  003E9E  A4D8               	btfss	status,2,c
  9498  003EA0  EF54  F01F         	goto	u5481
  9499  003EA4  EF56  F01F         	goto	u5480
  9500  003EA8                     u5481:
  9501  003EA8  EF60  F01F         	goto	l4758
  9502  003EAC                     u5480:
  9503  003EAC                     
  9504                           ; BSR set to: 0
  9505  003EAC  0E00               	movlw	0
  9506  003EAE  6F66               	movwf	floorf@u& (0+255),b
  9507  003EB0  0E00               	movlw	0
  9508  003EB2  6F67               	movwf	(floorf@u+1)& (0+255),b
  9509  003EB4  0E00               	movlw	0
  9510  003EB6  6F68               	movwf	(floorf@u+2)& (0+255),b
  9511  003EB8  0E00               	movlw	0
  9512  003EBA  6F69               	movwf	(floorf@u+3)& (0+255),b
  9513  003EBC  EF7C  F01F         	goto	l4762
  9514  003EC0                     l4758:
  9515                           
  9516                           ; BSR set to: 0
  9517  003EC0  90D8               	bcf	status,0,c
  9518  003EC2  3566               	rlcf	floorf@u& (0+255),w,b
  9519  003EC4  6E52               	movwf	??_floorf^0,c
  9520  003EC6  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  9521  003EC8  6E53               	movwf	(??_floorf+1)^0,c
  9522  003ECA  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  9523  003ECC  6E54               	movwf	(??_floorf+2)^0,c
  9524  003ECE  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  9525  003ED0  6E55               	movwf	(??_floorf+3)^0,c
  9526  003ED2  5052               	movf	??_floorf^0,w,c
  9527  003ED4  1053               	iorwf	(??_floorf+1)^0,w,c
  9528  003ED6  1054               	iorwf	(??_floorf+2)^0,w,c
  9529  003ED8  1055               	iorwf	(??_floorf+3)^0,w,c
  9530  003EDA  B4D8               	btfsc	status,2,c
  9531  003EDC  EF72  F01F         	goto	u5491
  9532  003EE0  EF74  F01F         	goto	u5490
  9533  003EE4                     u5491:
  9534  003EE4  EF7C  F01F         	goto	l4762
  9535  003EE8                     u5490:
  9536  003EE8                     
  9537                           ; BSR set to: 0
  9538  003EE8  0E00               	movlw	0
  9539  003EEA  6F66               	movwf	floorf@u& (0+255),b
  9540  003EEC  0E00               	movlw	0
  9541  003EEE  6F67               	movwf	(floorf@u+1)& (0+255),b
  9542  003EF0  0E80               	movlw	128
  9543  003EF2  6F68               	movwf	(floorf@u+2)& (0+255),b
  9544  003EF4  0EBF               	movlw	191
  9545  003EF6  6F69               	movwf	(floorf@u+3)& (0+255),b
  9546  003EF8                     l4762:
  9547                           
  9548                           ; BSR set to: 0
  9549  003EF8  C066  F04E         	movff	floorf@u,?_floorf
  9550  003EFC  C067  F04F         	movff	floorf@u+1,?_floorf+1
  9551  003F00  C068  F050         	movff	floorf@u+2,?_floorf+2
  9552  003F04  C069  F051         	movff	floorf@u+3,?_floorf+3
  9553  003F08                     l1432:
  9554                           
  9555                           ; BSR set to: 0
  9556  003F08  0012               	return		;funcret
  9557  003F0A                     __end_of_floorf:
  9558                           	callstack 0
  9559                           
  9560 ;; *************** function ___fpclassifyf *****************
  9561 ;; Defined at:
  9562 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
  9563 ;; Parameters:    Size  Location     Type
  9564 ;;  x               4    0[COMRAM] float 
  9565 ;; Auto vars:     Size  Location     Type
  9566 ;;  u               4   10[COMRAM] struct .
  9567 ;;  e               2    8[COMRAM] int 
  9568 ;; Return value:  Size  Location     Type
  9569 ;;                  2    0[COMRAM] int 
  9570 ;; Registers used:
  9571 ;;		wreg, status,2, status,0
  9572 ;; Tracked objects:
  9573 ;;		On entry : 0/0
  9574 ;;		On exit  : 0/0
  9575 ;;		Unchanged: 0/0
  9576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9577 ;;      Params:         4       0       0       0       0       0       0
  9578 ;;      Locals:         6       0       0       0       0       0       0
  9579 ;;      Temps:          4       0       0       0       0       0       0
  9580 ;;      Totals:        14       0       0       0       0       0       0
  9581 ;;Total ram usage:       14 bytes
  9582 ;; Hardware stack levels used:    1
  9583 ;; Hardware stack levels required when called:    1
  9584 ;; This function calls:
  9585 ;;		Nothing
  9586 ;; This function is called by:
  9587 ;;		_efgtoa
  9588 ;; This function uses a non-reentrant model
  9589 ;;
  9590                           
  9591                           	psect	text28
  9592  004BEE                     __ptext28:
  9593                           	callstack 0
  9594  004BEE                     ___fpclassifyf:
  9595                           	callstack 23
  9596  004BEE  C1A7  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  9597  004BF2  C1A8  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  9598  004BF6  C1A9  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  9599  004BFA  C1AA  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  9600  004BFE  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  9601  004C02  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  9602  004C06  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  9603  004C0A  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  9604  004C0E  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  9605  004C12  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9606  004C16  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9607  004C1A  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9608  004C1E  0E18               	movlw	24
  9609  004C20  EF17  F026         	goto	u5280
  9610  004C24                     u5285:
  9611  004C24  90D8               	bcf	status,0,c
  9612  004C26  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  9613  004C28  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  9614  004C2A  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  9615  004C2C  3205               	rrcf	??___fpclassifyf^0,f,c
  9616  004C2E                     u5280:
  9617  004C2E  2EE8               	decfsz	wreg,f,c
  9618  004C30  EF12  F026         	goto	u5285
  9619  004C34  5005               	movf	??___fpclassifyf^0,w,c
  9620  004C36  6E09               	movwf	___fpclassifyf@e^0,c
  9621  004C38  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  9622  004C3A  5009               	movf	___fpclassifyf@e^0,w,c
  9623  004C3C  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9624  004C3E  A4D8               	btfss	status,2,c
  9625  004C40  EF24  F026         	goto	u5291
  9626  004C44  EF26  F026         	goto	u5290
  9627  004C48                     u5291:
  9628  004C48  EF46  F026         	goto	l4714
  9629  004C4C                     u5290:
  9630  004C4C  90D8               	bcf	status,0,c
  9631  004C4E  340B               	rlcf	___fpclassifyf@u^0,w,c
  9632  004C50  6E05               	movwf	??___fpclassifyf^0,c
  9633  004C52  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  9634  004C54  6E06               	movwf	(??___fpclassifyf+1)^0,c
  9635  004C56  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  9636  004C58  6E07               	movwf	(??___fpclassifyf+2)^0,c
  9637  004C5A  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  9638  004C5C  6E08               	movwf	(??___fpclassifyf+3)^0,c
  9639  004C5E  5005               	movf	??___fpclassifyf^0,w,c
  9640  004C60  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  9641  004C62  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  9642  004C64  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  9643  004C66  A4D8               	btfss	status,2,c
  9644  004C68  EF38  F026         	goto	u5301
  9645  004C6C  EF3A  F026         	goto	u5300
  9646  004C70                     u5301:
  9647  004C70  EF40  F026         	goto	l4710
  9648  004C74                     u5300:
  9649  004C74  0E00               	movlw	0
  9650  004C76  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9651  004C78  0E02               	movlw	2
  9652  004C7A  6E01               	movwf	?___fpclassifyf^0,c
  9653  004C7C  EF75  F026         	goto	l1387
  9654  004C80                     l4710:
  9655  004C80  0E00               	movlw	0
  9656  004C82  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9657  004C84  0E03               	movlw	3
  9658  004C86  6E01               	movwf	?___fpclassifyf^0,c
  9659  004C88  EF75  F026         	goto	l1387
  9660  004C8C                     l4714:
  9661  004C8C  2809               	incf	___fpclassifyf@e^0,w,c
  9662  004C8E  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9663  004C90  A4D8               	btfss	status,2,c
  9664  004C92  EF4D  F026         	goto	u5311
  9665  004C96  EF4F  F026         	goto	u5310
  9666  004C9A                     u5311:
  9667  004C9A  EF71  F026         	goto	l4720
  9668  004C9E                     u5310:
  9669  004C9E  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  9670  004CA2  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9671  004CA6  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9672  004CAA  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9673  004CAE  0E09               	movlw	9
  9674  004CB0                     u5325:
  9675  004CB0  90D8               	bcf	status,0,c
  9676  004CB2  3605               	rlcf	??___fpclassifyf^0,f,c
  9677  004CB4  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  9678  004CB6  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  9679  004CB8  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  9680  004CBA  2EE8               	decfsz	wreg,f,c
  9681  004CBC  EF58  F026         	goto	u5325
  9682  004CC0  5005               	movf	??___fpclassifyf^0,w,c
  9683  004CC2  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  9684  004CC4  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  9685  004CC6  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  9686  004CC8  B4D8               	btfsc	status,2,c
  9687  004CCA  EF69  F026         	goto	u5331
  9688  004CCE  EF6C  F026         	goto	u5330
  9689  004CD2                     u5331:
  9690  004CD2  0E01               	movlw	1
  9691  004CD4  EF6D  F026         	goto	u5340
  9692  004CD8                     u5330:
  9693  004CD8  0E00               	movlw	0
  9694  004CDA                     u5340:
  9695  004CDA  6E01               	movwf	?___fpclassifyf^0,c
  9696  004CDC  6A02               	clrf	(?___fpclassifyf+1)^0,c
  9697  004CDE  EF75  F026         	goto	l1387
  9698  004CE2                     l4720:
  9699  004CE2  0E00               	movlw	0
  9700  004CE4  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9701  004CE6  0E04               	movlw	4
  9702  004CE8  6E01               	movwf	?___fpclassifyf^0,c
  9703  004CEA                     l1387:
  9704  004CEA  0012               	return		;funcret
  9705  004CEC                     __end_of___fpclassifyf:
  9706                           	callstack 0
  9707                           
  9708 ;; *************** function ___fltol *****************
  9709 ;; Defined at:
  9710 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
  9711 ;; Parameters:    Size  Location     Type
  9712 ;;  f1              4   77[COMRAM] int 
  9713 ;; Auto vars:     Size  Location     Type
  9714 ;;  exp1            1   86[COMRAM] unsigned char 
  9715 ;;  sign1           1   85[COMRAM] unsigned char 
  9716 ;; Return value:  Size  Location     Type
  9717 ;;                  4   77[COMRAM] long 
  9718 ;; Registers used:
  9719 ;;		wreg, status,2, status,0
  9720 ;; Tracked objects:
  9721 ;;		On entry : 0/0
  9722 ;;		On exit  : 0/0
  9723 ;;		Unchanged: 0/0
  9724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9725 ;;      Params:         4       0       0       0       0       0       0
  9726 ;;      Locals:         2       0       0       0       0       0       0
  9727 ;;      Temps:          4       0       0       0       0       0       0
  9728 ;;      Totals:        10       0       0       0       0       0       0
  9729 ;;Total ram usage:       10 bytes
  9730 ;; Hardware stack levels used:    1
  9731 ;; Hardware stack levels required when called:    1
  9732 ;; This function calls:
  9733 ;;		Nothing
  9734 ;; This function is called by:
  9735 ;;		_scanAdcConversion
  9736 ;;		_PWM1_setDC
  9737 ;;		_PWM2_setDC
  9738 ;;		_speedControl
  9739 ;;		_efgtoa
  9740 ;; This function uses a non-reentrant model
  9741 ;;
  9742                           
  9743                           	psect	text29
  9744  0049E4                     __ptext29:
  9745                           	callstack 0
  9746  0049E4                     ___fltol:
  9747                           	callstack 25
  9748  0049E4  3450               	rlcf	(___fltol@f1+2)^0,w,c
  9749  0049E6  3451               	rlcf	(___fltol@f1+3)^0,w,c
  9750  0049E8  6E57               	movwf	___fltol@exp1^0,c
  9751  0049EA  5057               	movf	___fltol@exp1^0,w,c
  9752  0049EC  A4D8               	btfss	status,2,c
  9753  0049EE  EFFB  F024         	goto	u5161
  9754  0049F2  EFFD  F024         	goto	u5160
  9755  0049F6                     u5161:
  9756  0049F6  EF07  F025         	goto	l4638
  9757  0049FA                     u5160:
  9758  0049FA                     l4634:
  9759  0049FA  0E00               	movlw	0
  9760  0049FC  6E4E               	movwf	?___fltol^0,c
  9761  0049FE  0E00               	movlw	0
  9762  004A00  6E4F               	movwf	(?___fltol+1)^0,c
  9763  004A02  0E00               	movlw	0
  9764  004A04  6E50               	movwf	(?___fltol+2)^0,c
  9765  004A06  0E00               	movlw	0
  9766  004A08  6E51               	movwf	(?___fltol+3)^0,c
  9767  004A0A  EF74  F025         	goto	l782
  9768  004A0E                     l4638:
  9769  004A0E  C04E  F052         	movff	___fltol@f1,??___fltol
  9770  004A12  C04F  F053         	movff	___fltol@f1+1,??___fltol+1
  9771  004A16  C050  F054         	movff	___fltol@f1+2,??___fltol+2
  9772  004A1A  C051  F055         	movff	___fltol@f1+3,??___fltol+3
  9773  004A1E  0E20               	movlw	32
  9774  004A20  EF17  F025         	goto	u5170
  9775  004A24                     u5175:
  9776  004A24  90D8               	bcf	status,0,c
  9777  004A26  3255               	rrcf	(??___fltol+3)^0,f,c
  9778  004A28  3254               	rrcf	(??___fltol+2)^0,f,c
  9779  004A2A  3253               	rrcf	(??___fltol+1)^0,f,c
  9780  004A2C  3252               	rrcf	??___fltol^0,f,c
  9781  004A2E                     u5170:
  9782  004A2E  2EE8               	decfsz	wreg,f,c
  9783  004A30  EF12  F025         	goto	u5175
  9784  004A34  5052               	movf	??___fltol^0,w,c
  9785  004A36  6E56               	movwf	___fltol@sign1^0,c
  9786  004A38  8E50               	bsf	(___fltol@f1+2)^0,7,c
  9787  004A3A  0EFF               	movlw	255
  9788  004A3C  164E               	andwf	___fltol@f1^0,f,c
  9789  004A3E  0EFF               	movlw	255
  9790  004A40  164F               	andwf	(___fltol@f1+1)^0,f,c
  9791  004A42  0EFF               	movlw	255
  9792  004A44  1650               	andwf	(___fltol@f1+2)^0,f,c
  9793  004A46  0E00               	movlw	0
  9794  004A48  1651               	andwf	(___fltol@f1+3)^0,f,c
  9795  004A4A  0E96               	movlw	150
  9796  004A4C  5E57               	subwf	___fltol@exp1^0,f,c
  9797  004A4E  BE57               	btfsc	___fltol@exp1^0,7,c
  9798  004A50  EF2E  F025         	goto	u5180
  9799  004A54  EF2C  F025         	goto	u5181
  9800  004A58                     u5181:
  9801  004A58  EF44  F025         	goto	l4658
  9802  004A5C                     u5180:
  9803  004A5C  5057               	movf	___fltol@exp1^0,w,c
  9804  004A5E  0A80               	xorlw	128
  9805  004A60  0F97               	addlw	151
  9806  004A62  B0D8               	btfsc	status,0,c
  9807  004A64  EF36  F025         	goto	u5191
  9808  004A68  EF38  F025         	goto	u5190
  9809  004A6C                     u5191:
  9810  004A6C  EF3A  F025         	goto	l4654
  9811  004A70                     u5190:
  9812  004A70  EFFD  F024         	goto	l4634
  9813  004A74                     l4654:
  9814  004A74  90D8               	bcf	status,0,c
  9815  004A76  3251               	rrcf	(___fltol@f1+3)^0,f,c
  9816  004A78  3250               	rrcf	(___fltol@f1+2)^0,f,c
  9817  004A7A  324F               	rrcf	(___fltol@f1+1)^0,f,c
  9818  004A7C  324E               	rrcf	___fltol@f1^0,f,c
  9819  004A7E  3E57               	incfsz	___fltol@exp1^0,f,c
  9820  004A80  EF3A  F025         	goto	l4654
  9821  004A84  EF5C  F025         	goto	l4668
  9822  004A88                     l4658:
  9823  004A88  0E1F               	movlw	31
  9824  004A8A  6457               	cpfsgt	___fltol@exp1^0,c
  9825  004A8C  EF4A  F025         	goto	u5201
  9826  004A90  EF4C  F025         	goto	u5200
  9827  004A94                     u5201:
  9828  004A94  EF54  F025         	goto	l4666
  9829  004A98                     u5200:
  9830  004A98  EFFD  F024         	goto	l4634
  9831  004A9C                     l4664:
  9832  004A9C  90D8               	bcf	status,0,c
  9833  004A9E  364E               	rlcf	___fltol@f1^0,f,c
  9834  004AA0  364F               	rlcf	(___fltol@f1+1)^0,f,c
  9835  004AA2  3650               	rlcf	(___fltol@f1+2)^0,f,c
  9836  004AA4  3651               	rlcf	(___fltol@f1+3)^0,f,c
  9837  004AA6  0657               	decf	___fltol@exp1^0,f,c
  9838  004AA8                     l4666:
  9839  004AA8  5057               	movf	___fltol@exp1^0,w,c
  9840  004AAA  A4D8               	btfss	status,2,c
  9841  004AAC  EF5A  F025         	goto	u5211
  9842  004AB0  EF5C  F025         	goto	u5210
  9843  004AB4                     u5211:
  9844  004AB4  EF4E  F025         	goto	l4664
  9845  004AB8                     u5210:
  9846  004AB8                     l4668:
  9847  004AB8  5056               	movf	___fltol@sign1^0,w,c
  9848  004ABA  B4D8               	btfsc	status,2,c
  9849  004ABC  EF62  F025         	goto	u5221
  9850  004AC0  EF64  F025         	goto	u5220
  9851  004AC4                     u5221:
  9852  004AC4  EF6C  F025         	goto	l4672
  9853  004AC8                     u5220:
  9854  004AC8  1E51               	comf	(___fltol@f1+3)^0,f,c
  9855  004ACA  1E50               	comf	(___fltol@f1+2)^0,f,c
  9856  004ACC  1E4F               	comf	(___fltol@f1+1)^0,f,c
  9857  004ACE  6C4E               	negf	___fltol@f1^0,c
  9858  004AD0  0E00               	movlw	0
  9859  004AD2  224F               	addwfc	(___fltol@f1+1)^0,f,c
  9860  004AD4  2250               	addwfc	(___fltol@f1+2)^0,f,c
  9861  004AD6  2251               	addwfc	(___fltol@f1+3)^0,f,c
  9862  004AD8                     l4672:
  9863  004AD8  C04E  F04E         	movff	___fltol@f1,?___fltol
  9864  004ADC  C04F  F04F         	movff	___fltol@f1+1,?___fltol+1
  9865  004AE0  C050  F050         	movff	___fltol@f1+2,?___fltol+2
  9866  004AE4  C051  F051         	movff	___fltol@f1+3,?___fltol+3
  9867  004AE8                     l782:
  9868  004AE8  0012               	return		;funcret
  9869  004AEA                     __end_of___fltol:
  9870                           	callstack 0
  9871                           
  9872 ;; *************** function ___flsub *****************
  9873 ;; Defined at:
  9874 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  9875 ;; Parameters:    Size  Location     Type
  9876 ;;  b               4   68[COMRAM] long 
  9877 ;;  a               4   72[COMRAM] long 
  9878 ;; Auto vars:     Size  Location     Type
  9879 ;;		None
  9880 ;; Return value:  Size  Location     Type
  9881 ;;                  4   68[COMRAM] long 
  9882 ;; Registers used:
  9883 ;;		wreg, status,2, status,0, cstack
  9884 ;; Tracked objects:
  9885 ;;		On entry : 0/0
  9886 ;;		On exit  : 0/0
  9887 ;;		Unchanged: 0/0
  9888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9889 ;;      Params:         8       0       0       0       0       0       0
  9890 ;;      Locals:         0       0       0       0       0       0       0
  9891 ;;      Temps:          0       0       0       0       0       0       0
  9892 ;;      Totals:         8       0       0       0       0       0       0
  9893 ;;Total ram usage:        8 bytes
  9894 ;; Hardware stack levels used:    1
  9895 ;; Hardware stack levels required when called:    2
  9896 ;; This function calls:
  9897 ;;		___fladd
  9898 ;; This function is called by:
  9899 ;;		_stateMachine
  9900 ;;		_efgtoa
  9901 ;; This function uses a non-reentrant model
  9902 ;;
  9903                           
  9904                           	psect	text30
  9905  0058AC                     __ptext30:
  9906                           	callstack 0
  9907  0058AC                     ___flsub:
  9908                           	callstack 22
  9909  0058AC  0E00               	movlw	0
  9910  0058AE  1A49               	xorwf	___flsub@a^0,f,c
  9911  0058B0  0E00               	movlw	0
  9912  0058B2  1A4A               	xorwf	(___flsub@a+1)^0,f,c
  9913  0058B4  0E00               	movlw	0
  9914  0058B6  1A4B               	xorwf	(___flsub@a+2)^0,f,c
  9915  0058B8  0E80               	movlw	128
  9916  0058BA  1A4C               	xorwf	(___flsub@a+3)^0,f,c
  9917  0058BC  C045  F035         	movff	___flsub@b,___fladd@b
  9918  0058C0  C046  F036         	movff	___flsub@b+1,___fladd@b+1
  9919  0058C4  C047  F037         	movff	___flsub@b+2,___fladd@b+2
  9920  0058C8  C048  F038         	movff	___flsub@b+3,___fladd@b+3
  9921  0058CC  C049  F039         	movff	___flsub@a,___fladd@a
  9922  0058D0  C04A  F03A         	movff	___flsub@a+1,___fladd@a+1
  9923  0058D4  C04B  F03B         	movff	___flsub@a+2,___fladd@a+2
  9924  0058D8  C04C  F03C         	movff	___flsub@a+3,___fladd@a+3
  9925  0058DC  EC53  F015         	call	___fladd	;wreg free
  9926  0058E0  C035  F045         	movff	?___fladd,?___flsub
  9927  0058E4  C036  F046         	movff	?___fladd+1,?___flsub+1
  9928  0058E8  C037  F047         	movff	?___fladd+2,?___flsub+2
  9929  0058EC  C038  F048         	movff	?___fladd+3,?___flsub+3
  9930  0058F0  0012               	return		;funcret
  9931  0058F2                     __end_of___flsub:
  9932                           	callstack 0
  9933                           
  9934 ;; *************** function ___fladd *****************
  9935 ;; Defined at:
  9936 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  9937 ;; Parameters:    Size  Location     Type
  9938 ;;  b               4   52[COMRAM] long 
  9939 ;;  a               4   56[COMRAM] long 
  9940 ;; Auto vars:     Size  Location     Type
  9941 ;;  grs             1   67[COMRAM] unsigned char 
  9942 ;;  bexp            1   66[COMRAM] unsigned char 
  9943 ;;  aexp            1   65[COMRAM] unsigned char 
  9944 ;;  signs           1   64[COMRAM] unsigned char 
  9945 ;; Return value:  Size  Location     Type
  9946 ;;                  4   52[COMRAM] unsigned char 
  9947 ;; Registers used:
  9948 ;;		wreg, status,2, status,0
  9949 ;; Tracked objects:
  9950 ;;		On entry : 0/0
  9951 ;;		On exit  : 0/0
  9952 ;;		Unchanged: 0/0
  9953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9954 ;;      Params:         8       0       0       0       0       0       0
  9955 ;;      Locals:         4       0       0       0       0       0       0
  9956 ;;      Temps:          4       0       0       0       0       0       0
  9957 ;;      Totals:        16       0       0       0       0       0       0
  9958 ;;Total ram usage:       16 bytes
  9959 ;; Hardware stack levels used:    1
  9960 ;; Hardware stack levels required when called:    1
  9961 ;; This function calls:
  9962 ;;		Nothing
  9963 ;; This function is called by:
  9964 ;;		_stateMachine
  9965 ;;		_speedControl
  9966 ;;		___flsub
  9967 ;;		_efgtoa
  9968 ;; This function uses a non-reentrant model
  9969 ;;
  9970                           
  9971                           	psect	text31
  9972  002AA6                     __ptext31:
  9973                           	callstack 0
  9974  002AA6                     ___fladd:
  9975                           	callstack 25
  9976  002AA6  5038               	movf	(___fladd@b+3)^0,w,c
  9977  002AA8  0B80               	andlw	128
  9978  002AAA  6E41               	movwf	___fladd@signs^0,c
  9979  002AAC  5038               	movf	(___fladd@b+3)^0,w,c
  9980  002AAE  2438               	addwf	(___fladd@b+3)^0,w,c
  9981  002AB0  6E43               	movwf	___fladd@bexp^0,c
  9982  002AB2  AE37               	btfss	(___fladd@b+2)^0,7,c
  9983  002AB4  EF5E  F015         	goto	u3971
  9984  002AB8  EF60  F015         	goto	u3970
  9985  002ABC                     u3971:
  9986  002ABC  EF61  F015         	goto	l3928
  9987  002AC0                     u3970:
  9988  002AC0  8043               	bsf	___fladd@bexp^0,0,c
  9989  002AC2                     l3928:
  9990  002AC2  5043               	movf	___fladd@bexp^0,w,c
  9991  002AC4  B4D8               	btfsc	status,2,c
  9992  002AC6  EF67  F015         	goto	u3981
  9993  002ACA  EF69  F015         	goto	u3980
  9994  002ACE                     u3981:
  9995  002ACE  EF7E  F015         	goto	l3938
  9996  002AD2                     u3980:
  9997  002AD2  2843               	incf	___fladd@bexp^0,w,c
  9998  002AD4  A4D8               	btfss	status,2,c
  9999  002AD6  EF6F  F015         	goto	u3991
 10000  002ADA  EF71  F015         	goto	u3990
 10001  002ADE                     u3991:
 10002  002ADE  EF79  F015         	goto	l3934
 10003  002AE2                     u3990:
 10004  002AE2  0E00               	movlw	0
 10005  002AE4  6E35               	movwf	___fladd@b^0,c
 10006  002AE6  0E00               	movlw	0
 10007  002AE8  6E36               	movwf	(___fladd@b+1)^0,c
 10008  002AEA  0E00               	movlw	0
 10009  002AEC  6E37               	movwf	(___fladd@b+2)^0,c
 10010  002AEE  0E00               	movlw	0
 10011  002AF0  6E38               	movwf	(___fladd@b+3)^0,c
 10012  002AF2                     l3934:
 10013  002AF2  8E37               	bsf	(___fladd@b+2)^0,7,c
 10014  002AF4  0E00               	movlw	0
 10015  002AF6  6E38               	movwf	(___fladd@b+3)^0,c
 10016  002AF8  EF86  F015         	goto	l3940
 10017  002AFC                     l3938:
 10018  002AFC  0E00               	movlw	0
 10019  002AFE  6E35               	movwf	___fladd@b^0,c
 10020  002B00  0E00               	movlw	0
 10021  002B02  6E36               	movwf	(___fladd@b+1)^0,c
 10022  002B04  0E00               	movlw	0
 10023  002B06  6E37               	movwf	(___fladd@b+2)^0,c
 10024  002B08  0E00               	movlw	0
 10025  002B0A  6E38               	movwf	(___fladd@b+3)^0,c
 10026  002B0C                     l3940:
 10027  002B0C  503C               	movf	(___fladd@a+3)^0,w,c
 10028  002B0E  0B80               	andlw	128
 10029  002B10  6E42               	movwf	___fladd@aexp^0,c
 10030  002B12  5041               	movf	___fladd@signs^0,w,c
 10031  002B14  1842               	xorwf	___fladd@aexp^0,w,c
 10032  002B16  B4D8               	btfsc	status,2,c
 10033  002B18  EF90  F015         	goto	u4001
 10034  002B1C  EF92  F015         	goto	u4000
 10035  002B20                     u4001:
 10036  002B20  EF93  F015         	goto	l3946
 10037  002B24                     u4000:
 10038  002B24  8C41               	bsf	___fladd@signs^0,6,c
 10039  002B26                     l3946:
 10040  002B26  503C               	movf	(___fladd@a+3)^0,w,c
 10041  002B28  243C               	addwf	(___fladd@a+3)^0,w,c
 10042  002B2A  6E42               	movwf	___fladd@aexp^0,c
 10043  002B2C  AE3B               	btfss	(___fladd@a+2)^0,7,c
 10044  002B2E  EF9B  F015         	goto	u4011
 10045  002B32  EF9D  F015         	goto	u4010
 10046  002B36                     u4011:
 10047  002B36  EF9E  F015         	goto	l3952
 10048  002B3A                     u4010:
 10049  002B3A  8042               	bsf	___fladd@aexp^0,0,c
 10050  002B3C                     l3952:
 10051  002B3C  5042               	movf	___fladd@aexp^0,w,c
 10052  002B3E  B4D8               	btfsc	status,2,c
 10053  002B40  EFA4  F015         	goto	u4021
 10054  002B44  EFA6  F015         	goto	u4020
 10055  002B48                     u4021:
 10056  002B48  EFBB  F015         	goto	l3962
 10057  002B4C                     u4020:
 10058  002B4C  2842               	incf	___fladd@aexp^0,w,c
 10059  002B4E  A4D8               	btfss	status,2,c
 10060  002B50  EFAC  F015         	goto	u4031
 10061  002B54  EFAE  F015         	goto	u4030
 10062  002B58                     u4031:
 10063  002B58  EFB6  F015         	goto	l3958
 10064  002B5C                     u4030:
 10065  002B5C  0E00               	movlw	0
 10066  002B5E  6E39               	movwf	___fladd@a^0,c
 10067  002B60  0E00               	movlw	0
 10068  002B62  6E3A               	movwf	(___fladd@a+1)^0,c
 10069  002B64  0E00               	movlw	0
 10070  002B66  6E3B               	movwf	(___fladd@a+2)^0,c
 10071  002B68  0E00               	movlw	0
 10072  002B6A  6E3C               	movwf	(___fladd@a+3)^0,c
 10073  002B6C                     l3958:
 10074  002B6C  8E3B               	bsf	(___fladd@a+2)^0,7,c
 10075  002B6E  0E00               	movlw	0
 10076  002B70  6E3C               	movwf	(___fladd@a+3)^0,c
 10077  002B72  EFC3  F015         	goto	l3964
 10078  002B76                     l3962:
 10079  002B76  0E00               	movlw	0
 10080  002B78  6E39               	movwf	___fladd@a^0,c
 10081  002B7A  0E00               	movlw	0
 10082  002B7C  6E3A               	movwf	(___fladd@a+1)^0,c
 10083  002B7E  0E00               	movlw	0
 10084  002B80  6E3B               	movwf	(___fladd@a+2)^0,c
 10085  002B82  0E00               	movlw	0
 10086  002B84  6E3C               	movwf	(___fladd@a+3)^0,c
 10087  002B86                     l3964:
 10088  002B86  5043               	movf	___fladd@bexp^0,w,c
 10089  002B88  5C42               	subwf	___fladd@aexp^0,w,c
 10090  002B8A  B0D8               	btfsc	status,0,c
 10091  002B8C  EFCA  F015         	goto	u4041
 10092  002B90  EFCC  F015         	goto	u4040
 10093  002B94                     u4041:
 10094  002B94  EFF3  F015         	goto	l4000
 10095  002B98                     u4040:
 10096  002B98  AC41               	btfss	___fladd@signs^0,6,c
 10097  002B9A  EFD1  F015         	goto	u4051
 10098  002B9E  EFD3  F015         	goto	u4050
 10099  002BA2                     u4051:
 10100  002BA2  EFD5  F015         	goto	l3970
 10101  002BA6                     u4050:
 10102  002BA6  0E80               	movlw	128
 10103  002BA8  1A41               	xorwf	___fladd@signs^0,f,c
 10104  002BAA                     l3970:
 10105  002BAA  C043  F044         	movff	___fladd@bexp,___fladd@grs
 10106  002BAE  C042  F043         	movff	___fladd@aexp,___fladd@bexp
 10107  002BB2  C044  F042         	movff	___fladd@grs,___fladd@aexp
 10108  002BB6  C035  F044         	movff	___fladd@b,___fladd@grs
 10109  002BBA  C039  F035         	movff	___fladd@a,___fladd@b
 10110  002BBE  C044  F039         	movff	___fladd@grs,___fladd@a
 10111  002BC2  C036  F044         	movff	___fladd@b+1,___fladd@grs
 10112  002BC6  C03A  F036         	movff	___fladd@a+1,___fladd@b+1
 10113  002BCA  C044  F03A         	movff	___fladd@grs,___fladd@a+1
 10114  002BCE  C037  F044         	movff	___fladd@b+2,___fladd@grs
 10115  002BD2  C03B  F037         	movff	___fladd@a+2,___fladd@b+2
 10116  002BD6  C044  F03B         	movff	___fladd@grs,___fladd@a+2
 10117  002BDA  C038  F044         	movff	___fladd@b+3,___fladd@grs
 10118  002BDE  C03C  F038         	movff	___fladd@a+3,___fladd@b+3
 10119  002BE2  C044  F03C         	movff	___fladd@grs,___fladd@a+3
 10120  002BE6                     l4000:
 10121  002BE6  0E00               	movlw	0
 10122  002BE8  6E44               	movwf	___fladd@grs^0,c
 10123  002BEA  5043               	movf	___fladd@bexp^0,w,c
 10124  002BEC  C042  F03D         	movff	___fladd@aexp,??___fladd
 10125  002BF0  6A3E               	clrf	(??___fladd+1)^0,c
 10126  002BF2  5E3D               	subwf	??___fladd^0,f,c
 10127  002BF4  0E00               	movlw	0
 10128  002BF6  5A3E               	subwfb	(??___fladd+1)^0,f,c
 10129  002BF8  BE3E               	btfsc	(??___fladd+1)^0,7,c
 10130  002BFA  EF08  F016         	goto	u4061
 10131  002BFE  503E               	movf	(??___fladd+1)^0,w,c
 10132  002C00  E109               	bnz	u4060
 10133  002C02  0E1A               	movlw	26
 10134  002C04  5C3D               	subwf	??___fladd^0,w,c
 10135  002C06  A0D8               	btfss	status,0,c
 10136  002C08  EF08  F016         	goto	u4061
 10137  002C0C  EF0A  F016         	goto	u4060
 10138  002C10                     u4061:
 10139  002C10  EF41  F016         	goto	l1014
 10140  002C14                     u4060:
 10141  002C14  5035               	movf	___fladd@b^0,w,c
 10142  002C16  1036               	iorwf	(___fladd@b+1)^0,w,c
 10143  002C18  1037               	iorwf	(___fladd@b+2)^0,w,c
 10144  002C1A  1038               	iorwf	(___fladd@b+3)^0,w,c
 10145  002C1C  A4D8               	btfss	status,2,c
 10146  002C1E  EF13  F016         	goto	u4071
 10147  002C22  EF16  F016         	goto	u4070
 10148  002C26                     u4071:
 10149  002C26  0E01               	movlw	1
 10150  002C28  EF17  F016         	goto	u4080
 10151  002C2C                     u4070:
 10152  002C2C  0E00               	movlw	0
 10153  002C2E                     u4080:
 10154  002C2E  6E44               	movwf	___fladd@grs^0,c
 10155  002C30  0E00               	movlw	0
 10156  002C32  6E35               	movwf	___fladd@b^0,c
 10157  002C34  0E00               	movlw	0
 10158  002C36  6E36               	movwf	(___fladd@b+1)^0,c
 10159  002C38  0E00               	movlw	0
 10160  002C3A  6E37               	movwf	(___fladd@b+2)^0,c
 10161  002C3C  0E00               	movlw	0
 10162  002C3E  6E38               	movwf	(___fladd@b+3)^0,c
 10163  002C40  C042  F043         	movff	___fladd@aexp,___fladd@bexp
 10164  002C44  EF4A  F016         	goto	l1013
 10165  002C48                     l1015:
 10166  002C48  A044               	btfss	___fladd@grs^0,0,c
 10167  002C4A  EF29  F016         	goto	u4091
 10168  002C4E  EF2B  F016         	goto	u4090
 10169  002C52                     u4091:
 10170  002C52  EF31  F016         	goto	l4012
 10171  002C56                     u4090:
 10172  002C56  90D8               	bcf	status,0,c
 10173  002C58  3044               	rrcf	___fladd@grs^0,w,c
 10174  002C5A  0901               	iorlw	1
 10175  002C5C  6E44               	movwf	___fladd@grs^0,c
 10176  002C5E  EF33  F016         	goto	l4014
 10177  002C62                     l4012:
 10178  002C62  90D8               	bcf	status,0,c
 10179  002C64  3244               	rrcf	___fladd@grs^0,f,c
 10180  002C66                     l4014:
 10181  002C66  A035               	btfss	___fladd@b^0,0,c
 10182  002C68  EF38  F016         	goto	u4101
 10183  002C6C  EF3A  F016         	goto	u4100
 10184  002C70                     u4101:
 10185  002C70  EF3B  F016         	goto	l4018
 10186  002C74                     u4100:
 10187  002C74  8E44               	bsf	___fladd@grs^0,7,c
 10188  002C76                     l4018:
 10189  002C76  3438               	rlcf	(___fladd@b+3)^0,w,c
 10190  002C78  3238               	rrcf	(___fladd@b+3)^0,f,c
 10191  002C7A  3237               	rrcf	(___fladd@b+2)^0,f,c
 10192  002C7C  3236               	rrcf	(___fladd@b+1)^0,f,c
 10193  002C7E  3235               	rrcf	___fladd@b^0,f,c
 10194  002C80  2A43               	incf	___fladd@bexp^0,f,c
 10195  002C82                     l1014:
 10196  002C82  5042               	movf	___fladd@aexp^0,w,c
 10197  002C84  5C43               	subwf	___fladd@bexp^0,w,c
 10198  002C86  A0D8               	btfss	status,0,c
 10199  002C88  EF48  F016         	goto	u4111
 10200  002C8C  EF4A  F016         	goto	u4110
 10201  002C90                     u4111:
 10202  002C90  EF24  F016         	goto	l1015
 10203  002C94                     u4110:
 10204  002C94                     l1013:
 10205  002C94  BC41               	btfsc	___fladd@signs^0,6,c
 10206  002C96  EF4F  F016         	goto	u4121
 10207  002C9A  EF51  F016         	goto	u4120
 10208  002C9E                     u4121:
 10209  002C9E  EF91  F016         	goto	l4046
 10210  002CA2                     u4120:
 10211  002CA2  5043               	movf	___fladd@bexp^0,w,c
 10212  002CA4  A4D8               	btfss	status,2,c
 10213  002CA6  EF57  F016         	goto	u4131
 10214  002CAA  EF59  F016         	goto	u4130
 10215  002CAE                     u4131:
 10216  002CAE  EF63  F016         	goto	l4028
 10217  002CB2                     u4130:
 10218  002CB2  0E00               	movlw	0
 10219  002CB4  6E35               	movwf	?___fladd^0,c
 10220  002CB6  0E00               	movlw	0
 10221  002CB8  6E36               	movwf	(?___fladd+1)^0,c
 10222  002CBA  0E00               	movlw	0
 10223  002CBC  6E37               	movwf	(?___fladd+2)^0,c
 10224  002CBE  0E00               	movlw	0
 10225  002CC0  6E38               	movwf	(?___fladd+3)^0,c
 10226  002CC2  EFB2  F017         	goto	l1022
 10227  002CC6                     l4028:
 10228  002CC6  5039               	movf	___fladd@a^0,w,c
 10229  002CC8  2635               	addwf	___fladd@b^0,f,c
 10230  002CCA  503A               	movf	(___fladd@a+1)^0,w,c
 10231  002CCC  2236               	addwfc	(___fladd@b+1)^0,f,c
 10232  002CCE  503B               	movf	(___fladd@a+2)^0,w,c
 10233  002CD0  2237               	addwfc	(___fladd@b+2)^0,f,c
 10234  002CD2  503C               	movf	(___fladd@a+3)^0,w,c
 10235  002CD4  2238               	addwfc	(___fladd@b+3)^0,f,c
 10236  002CD6  A038               	btfss	(___fladd@b+3)^0,0,c
 10237  002CD8  EF70  F016         	goto	u4141
 10238  002CDC  EF72  F016         	goto	u4140
 10239  002CE0                     u4141:
 10240  002CE0  EF1E  F017         	goto	l4082
 10241  002CE4                     u4140:
 10242  002CE4  A044               	btfss	___fladd@grs^0,0,c
 10243  002CE6  EF77  F016         	goto	u4151
 10244  002CEA  EF79  F016         	goto	u4150
 10245  002CEE                     u4151:
 10246  002CEE  EF7F  F016         	goto	l4036
 10247  002CF2                     u4150:
 10248  002CF2  90D8               	bcf	status,0,c
 10249  002CF4  3044               	rrcf	___fladd@grs^0,w,c
 10250  002CF6  0901               	iorlw	1
 10251  002CF8  6E44               	movwf	___fladd@grs^0,c
 10252  002CFA  EF81  F016         	goto	l4038
 10253  002CFE                     l4036:
 10254  002CFE  90D8               	bcf	status,0,c
 10255  002D00  3244               	rrcf	___fladd@grs^0,f,c
 10256  002D02                     l4038:
 10257  002D02  A035               	btfss	___fladd@b^0,0,c
 10258  002D04  EF86  F016         	goto	u4161
 10259  002D08  EF88  F016         	goto	u4160
 10260  002D0C                     u4161:
 10261  002D0C  EF89  F016         	goto	l4042
 10262  002D10                     u4160:
 10263  002D10  8E44               	bsf	___fladd@grs^0,7,c
 10264  002D12                     l4042:
 10265  002D12  3438               	rlcf	(___fladd@b+3)^0,w,c
 10266  002D14  3238               	rrcf	(___fladd@b+3)^0,f,c
 10267  002D16  3237               	rrcf	(___fladd@b+2)^0,f,c
 10268  002D18  3236               	rrcf	(___fladd@b+1)^0,f,c
 10269  002D1A  3235               	rrcf	___fladd@b^0,f,c
 10270  002D1C  2A43               	incf	___fladd@bexp^0,f,c
 10271  002D1E  EF1E  F017         	goto	l4082
 10272  002D22                     l4046:
 10273  002D22  5039               	movf	___fladd@a^0,w,c
 10274  002D24  5C35               	subwf	___fladd@b^0,w,c
 10275  002D26  503A               	movf	(___fladd@a+1)^0,w,c
 10276  002D28  5836               	subwfb	(___fladd@b+1)^0,w,c
 10277  002D2A  503B               	movf	(___fladd@a+2)^0,w,c
 10278  002D2C  5837               	subwfb	(___fladd@b+2)^0,w,c
 10279  002D2E  5038               	movf	(___fladd@b+3)^0,w,c
 10280  002D30  0A80               	xorlw	128
 10281  002D32  6E3D               	movwf	??___fladd^0,c
 10282  002D34  503C               	movf	(___fladd@a+3)^0,w,c
 10283  002D36  0A80               	xorlw	128
 10284  002D38  583D               	subwfb	??___fladd^0,w,c
 10285  002D3A  B0D8               	btfsc	status,0,c
 10286  002D3C  EFA2  F016         	goto	u4171
 10287  002D40  EFA4  F016         	goto	u4170
 10288  002D44                     u4171:
 10289  002D44  EFCF  F016         	goto	l4056
 10290  002D48                     u4170:
 10291  002D48  5035               	movf	___fladd@b^0,w,c
 10292  002D4A  5C39               	subwf	___fladd@a^0,w,c
 10293  002D4C  6E3D               	movwf	??___fladd^0,c
 10294  002D4E  5036               	movf	(___fladd@b+1)^0,w,c
 10295  002D50  583A               	subwfb	(___fladd@a+1)^0,w,c
 10296  002D52  6E3E               	movwf	(??___fladd+1)^0,c
 10297  002D54  5037               	movf	(___fladd@b+2)^0,w,c
 10298  002D56  583B               	subwfb	(___fladd@a+2)^0,w,c
 10299  002D58  6E3F               	movwf	(??___fladd+2)^0,c
 10300  002D5A  5038               	movf	(___fladd@b+3)^0,w,c
 10301  002D5C  583C               	subwfb	(___fladd@a+3)^0,w,c
 10302  002D5E  6E40               	movwf	(??___fladd+3)^0,c
 10303  002D60  0EFF               	movlw	255
 10304  002D62  243D               	addwf	??___fladd^0,w,c
 10305  002D64  6E35               	movwf	___fladd@b^0,c
 10306  002D66  0EFF               	movlw	255
 10307  002D68  203E               	addwfc	(??___fladd+1)^0,w,c
 10308  002D6A  6E36               	movwf	(___fladd@b+1)^0,c
 10309  002D6C  0EFF               	movlw	255
 10310  002D6E  203F               	addwfc	(??___fladd+2)^0,w,c
 10311  002D70  6E37               	movwf	(___fladd@b+2)^0,c
 10312  002D72  0EFF               	movlw	255
 10313  002D74  2040               	addwfc	(??___fladd+3)^0,w,c
 10314  002D76  6E38               	movwf	(___fladd@b+3)^0,c
 10315  002D78  0E80               	movlw	128
 10316  002D7A  1A41               	xorwf	___fladd@signs^0,f,c
 10317  002D7C  6C44               	negf	___fladd@grs^0,c
 10318  002D7E  5044               	movf	___fladd@grs^0,w,c
 10319  002D80  A4D8               	btfss	status,2,c
 10320  002D82  EFC5  F016         	goto	u4181
 10321  002D86  EFC7  F016         	goto	u4180
 10322  002D8A                     u4181:
 10323  002D8A  EFD7  F016         	goto	l1030
 10324  002D8E                     u4180:
 10325  002D8E  0E01               	movlw	1
 10326  002D90  2635               	addwf	___fladd@b^0,f,c
 10327  002D92  0E00               	movlw	0
 10328  002D94  2236               	addwfc	(___fladd@b+1)^0,f,c
 10329  002D96  2237               	addwfc	(___fladd@b+2)^0,f,c
 10330  002D98  2238               	addwfc	(___fladd@b+3)^0,f,c
 10331  002D9A  EFD7  F016         	goto	l1030
 10332  002D9E                     l4056:
 10333  002D9E  5039               	movf	___fladd@a^0,w,c
 10334  002DA0  5E35               	subwf	___fladd@b^0,f,c
 10335  002DA2  503A               	movf	(___fladd@a+1)^0,w,c
 10336  002DA4  5A36               	subwfb	(___fladd@b+1)^0,f,c
 10337  002DA6  503B               	movf	(___fladd@a+2)^0,w,c
 10338  002DA8  5A37               	subwfb	(___fladd@b+2)^0,f,c
 10339  002DAA  503C               	movf	(___fladd@a+3)^0,w,c
 10340  002DAC  5A38               	subwfb	(___fladd@b+3)^0,f,c
 10341  002DAE                     l1030:
 10342  002DAE  5035               	movf	___fladd@b^0,w,c
 10343  002DB0  1036               	iorwf	(___fladd@b+1)^0,w,c
 10344  002DB2  1037               	iorwf	(___fladd@b+2)^0,w,c
 10345  002DB4  1038               	iorwf	(___fladd@b+3)^0,w,c
 10346  002DB6  A4D8               	btfss	status,2,c
 10347  002DB8  EFE0  F016         	goto	u4191
 10348  002DBC  EFE2  F016         	goto	u4190
 10349  002DC0                     u4191:
 10350  002DC0  EF17  F017         	goto	l4080
 10351  002DC4                     u4190:
 10352  002DC4  5044               	movf	___fladd@grs^0,w,c
 10353  002DC6  A4D8               	btfss	status,2,c
 10354  002DC8  EFE8  F016         	goto	u4201
 10355  002DCC  EFEA  F016         	goto	u4200
 10356  002DD0                     u4201:
 10357  002DD0  EF17  F017         	goto	l4080
 10358  002DD4                     u4200:
 10359  002DD4  0E00               	movlw	0
 10360  002DD6  6E35               	movwf	?___fladd^0,c
 10361  002DD8  0E00               	movlw	0
 10362  002DDA  6E36               	movwf	(?___fladd+1)^0,c
 10363  002DDC  0E00               	movlw	0
 10364  002DDE  6E37               	movwf	(?___fladd+2)^0,c
 10365  002DE0  0E00               	movlw	0
 10366  002DE2  6E38               	movwf	(?___fladd+3)^0,c
 10367  002DE4  EFB2  F017         	goto	l1022
 10368  002DE8                     l4064:
 10369  002DE8  90D8               	bcf	status,0,c
 10370  002DEA  3635               	rlcf	___fladd@b^0,f,c
 10371  002DEC  3636               	rlcf	(___fladd@b+1)^0,f,c
 10372  002DEE  3637               	rlcf	(___fladd@b+2)^0,f,c
 10373  002DF0  3638               	rlcf	(___fladd@b+3)^0,f,c
 10374  002DF2  AE44               	btfss	___fladd@grs^0,7,c
 10375  002DF4  EFFE  F016         	goto	u4211
 10376  002DF8  EF00  F017         	goto	u4210
 10377  002DFC                     u4211:
 10378  002DFC  EF01  F017         	goto	l4070
 10379  002E00                     u4210:
 10380  002E00  8035               	bsf	___fladd@b^0,0,c
 10381  002E02                     l4070:
 10382  002E02  A044               	btfss	___fladd@grs^0,0,c
 10383  002E04  EF06  F017         	goto	u4221
 10384  002E08  EF08  F017         	goto	u4220
 10385  002E0C                     u4221:
 10386  002E0C  EF0C  F017         	goto	l4074
 10387  002E10                     u4220:
 10388  002E10  80D8               	bsf	status,0,c
 10389  002E12  3644               	rlcf	___fladd@grs^0,f,c
 10390  002E14  EF0E  F017         	goto	l4076
 10391  002E18                     l4074:
 10392  002E18  90D8               	bcf	status,0,c
 10393  002E1A  3644               	rlcf	___fladd@grs^0,f,c
 10394  002E1C                     l4076:
 10395  002E1C  5043               	movf	___fladd@bexp^0,w,c
 10396  002E1E  B4D8               	btfsc	status,2,c
 10397  002E20  EF14  F017         	goto	u4231
 10398  002E24  EF16  F017         	goto	u4230
 10399  002E28                     u4231:
 10400  002E28  EF17  F017         	goto	l4080
 10401  002E2C                     u4230:
 10402  002E2C  0643               	decf	___fladd@bexp^0,f,c
 10403  002E2E                     l4080:
 10404  002E2E  AE37               	btfss	(___fladd@b+2)^0,7,c
 10405  002E30  EF1C  F017         	goto	u4241
 10406  002E34  EF1E  F017         	goto	u4240
 10407  002E38                     u4241:
 10408  002E38  EFF4  F016         	goto	l4064
 10409  002E3C                     u4240:
 10410  002E3C                     l4082:
 10411  002E3C  0E00               	movlw	0
 10412  002E3E  6E42               	movwf	___fladd@aexp^0,c
 10413  002E40  AE44               	btfss	___fladd@grs^0,7,c
 10414  002E42  EF25  F017         	goto	u4251
 10415  002E46  EF27  F017         	goto	u4250
 10416  002E4A                     u4251:
 10417  002E4A  EF3F  F017         	goto	l1039
 10418  002E4E                     u4250:
 10419  002E4E  C044  F03D         	movff	___fladd@grs,??___fladd
 10420  002E52  0E7F               	movlw	127
 10421  002E54  163D               	andwf	??___fladd^0,f,c
 10422  002E56  B4D8               	btfsc	status,2,c
 10423  002E58  EF30  F017         	goto	u4261
 10424  002E5C  EF32  F017         	goto	u4260
 10425  002E60                     u4261:
 10426  002E60  EF36  F017         	goto	l1040
 10427  002E64                     u4260:
 10428  002E64                     l4088:
 10429  002E64  0E01               	movlw	1
 10430  002E66  6E42               	movwf	___fladd@aexp^0,c
 10431  002E68  EF3F  F017         	goto	l1039
 10432  002E6C                     l1040:
 10433  002E6C  A035               	btfss	___fladd@b^0,0,c
 10434  002E6E  EF3B  F017         	goto	u4271
 10435  002E72  EF3D  F017         	goto	u4270
 10436  002E76                     u4271:
 10437  002E76  EF3F  F017         	goto	l1039
 10438  002E7A                     u4270:
 10439  002E7A  EF32  F017         	goto	l4088
 10440  002E7E                     l1039:
 10441  002E7E  5042               	movf	___fladd@aexp^0,w,c
 10442  002E80  B4D8               	btfsc	status,2,c
 10443  002E82  EF45  F017         	goto	u4281
 10444  002E86  EF47  F017         	goto	u4280
 10445  002E8A                     u4281:
 10446  002E8A  EF72  F017         	goto	l4100
 10447  002E8E                     u4280:
 10448  002E8E  0E01               	movlw	1
 10449  002E90  2635               	addwf	___fladd@b^0,f,c
 10450  002E92  0E00               	movlw	0
 10451  002E94  2236               	addwfc	(___fladd@b+1)^0,f,c
 10452  002E96  2237               	addwfc	(___fladd@b+2)^0,f,c
 10453  002E98  2238               	addwfc	(___fladd@b+3)^0,f,c
 10454  002E9A  A038               	btfss	(___fladd@b+3)^0,0,c
 10455  002E9C  EF52  F017         	goto	u4291
 10456  002EA0  EF54  F017         	goto	u4290
 10457  002EA4                     u4291:
 10458  002EA4  EF72  F017         	goto	l4100
 10459  002EA8                     u4290:
 10460  002EA8  C035  F03D         	movff	___fladd@b,??___fladd
 10461  002EAC  C036  F03E         	movff	___fladd@b+1,??___fladd+1
 10462  002EB0  C037  F03F         	movff	___fladd@b+2,??___fladd+2
 10463  002EB4  C038  F040         	movff	___fladd@b+3,??___fladd+3
 10464  002EB8  3440               	rlcf	(??___fladd+3)^0,w,c
 10465  002EBA  3240               	rrcf	(??___fladd+3)^0,f,c
 10466  002EBC  323F               	rrcf	(??___fladd+2)^0,f,c
 10467  002EBE  323E               	rrcf	(??___fladd+1)^0,f,c
 10468  002EC0  323D               	rrcf	??___fladd^0,f,c
 10469  002EC2  C03D  F035         	movff	??___fladd,___fladd@b
 10470  002EC6  C03E  F036         	movff	??___fladd+1,___fladd@b+1
 10471  002ECA  C03F  F037         	movff	??___fladd+2,___fladd@b+2
 10472  002ECE  C040  F038         	movff	??___fladd+3,___fladd@b+3
 10473  002ED2  2843               	incf	___fladd@bexp^0,w,c
 10474  002ED4  B4D8               	btfsc	status,2,c
 10475  002ED6  EF6F  F017         	goto	u4301
 10476  002EDA  EF71  F017         	goto	u4300
 10477  002EDE                     u4301:
 10478  002EDE  EF72  F017         	goto	l4100
 10479  002EE2                     u4300:
 10480  002EE2  2A43               	incf	___fladd@bexp^0,f,c
 10481  002EE4                     l4100:
 10482  002EE4  2843               	incf	___fladd@bexp^0,w,c
 10483  002EE6  B4D8               	btfsc	status,2,c
 10484  002EE8  EF78  F017         	goto	u4311
 10485  002EEC  EF7A  F017         	goto	u4310
 10486  002EF0                     u4311:
 10487  002EF0  EF82  F017         	goto	l4104
 10488  002EF4                     u4310:
 10489  002EF4  5043               	movf	___fladd@bexp^0,w,c
 10490  002EF6  A4D8               	btfss	status,2,c
 10491  002EF8  EF80  F017         	goto	u4321
 10492  002EFC  EF82  F017         	goto	u4320
 10493  002F00                     u4321:
 10494  002F00  EF94  F017         	goto	l4108
 10495  002F04                     u4320:
 10496  002F04                     l4104:
 10497  002F04  0E00               	movlw	0
 10498  002F06  6E35               	movwf	___fladd@b^0,c
 10499  002F08  0E00               	movlw	0
 10500  002F0A  6E36               	movwf	(___fladd@b+1)^0,c
 10501  002F0C  0E00               	movlw	0
 10502  002F0E  6E37               	movwf	(___fladd@b+2)^0,c
 10503  002F10  0E00               	movlw	0
 10504  002F12  6E38               	movwf	(___fladd@b+3)^0,c
 10505  002F14  5043               	movf	___fladd@bexp^0,w,c
 10506  002F16  A4D8               	btfss	status,2,c
 10507  002F18  EF90  F017         	goto	u4331
 10508  002F1C  EF92  F017         	goto	u4330
 10509  002F20                     u4331:
 10510  002F20  EF94  F017         	goto	l4108
 10511  002F24                     u4330:
 10512  002F24  0E00               	movlw	0
 10513  002F26  6E41               	movwf	___fladd@signs^0,c
 10514  002F28                     l4108:
 10515  002F28  A043               	btfss	___fladd@bexp^0,0,c
 10516  002F2A  EF99  F017         	goto	u4341
 10517  002F2E  EF9B  F017         	goto	u4340
 10518  002F32                     u4341:
 10519  002F32  EF9E  F017         	goto	l4112
 10520  002F36                     u4340:
 10521  002F36  8E37               	bsf	(___fladd@b+2)^0,7,c
 10522  002F38  EF9F  F017         	goto	l4114
 10523  002F3C                     l4112:
 10524  002F3C  9E37               	bcf	(___fladd@b+2)^0,7,c
 10525  002F3E                     l4114:
 10526  002F3E  90D8               	bcf	status,0,c
 10527  002F40  3043               	rrcf	___fladd@bexp^0,w,c
 10528  002F42  6E38               	movwf	(___fladd@b+3)^0,c
 10529  002F44  AE41               	btfss	___fladd@signs^0,7,c
 10530  002F46  EFA7  F017         	goto	u4351
 10531  002F4A  EFA9  F017         	goto	u4350
 10532  002F4E                     u4351:
 10533  002F4E  EFAA  F017         	goto	l4120
 10534  002F52                     u4350:
 10535  002F52  8E38               	bsf	(___fladd@b+3)^0,7,c
 10536  002F54                     l4120:
 10537  002F54  C035  F035         	movff	___fladd@b,?___fladd
 10538  002F58  C036  F036         	movff	___fladd@b+1,?___fladd+1
 10539  002F5C  C037  F037         	movff	___fladd@b+2,?___fladd+2
 10540  002F60  C038  F038         	movff	___fladd@b+3,?___fladd+3
 10541  002F64                     l1022:
 10542  002F64  0012               	return		;funcret
 10543  002F66                     __end_of___fladd:
 10544                           	callstack 0
 10545                           
 10546 ;; *************** function ___flneg *****************
 10547 ;; Defined at:
 10548 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
 10549 ;; Parameters:    Size  Location     Type
 10550 ;;  f1              4    0[COMRAM] unsigned char 
 10551 ;; Auto vars:     Size  Location     Type
 10552 ;;		None
 10553 ;; Return value:  Size  Location     Type
 10554 ;;                  4    0[COMRAM] unsigned char 
 10555 ;; Registers used:
 10556 ;;		wreg, status,2, status,0
 10557 ;; Tracked objects:
 10558 ;;		On entry : 0/0
 10559 ;;		On exit  : 0/0
 10560 ;;		Unchanged: 0/0
 10561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10562 ;;      Params:         4       0       0       0       0       0       0
 10563 ;;      Locals:         0       0       0       0       0       0       0
 10564 ;;      Temps:          0       0       0       0       0       0       0
 10565 ;;      Totals:         4       0       0       0       0       0       0
 10566 ;;Total ram usage:        4 bytes
 10567 ;; Hardware stack levels used:    1
 10568 ;; Hardware stack levels required when called:    1
 10569 ;; This function calls:
 10570 ;;		Nothing
 10571 ;; This function is called by:
 10572 ;;		_efgtoa
 10573 ;; This function uses a non-reentrant model
 10574 ;;
 10575                           
 10576                           	psect	text32
 10577  005A6A                     __ptext32:
 10578                           	callstack 0
 10579  005A6A                     ___flneg:
 10580                           	callstack 23
 10581  005A6A  5001               	movf	___flneg@f1^0,w,c
 10582  005A6C  1002               	iorwf	(___flneg@f1+1)^0,w,c
 10583  005A6E  1003               	iorwf	(___flneg@f1+2)^0,w,c
 10584  005A70  1004               	iorwf	(___flneg@f1+3)^0,w,c
 10585  005A72  B4D8               	btfsc	status,2,c
 10586  005A74  EF3E  F02D         	goto	u5151
 10587  005A78  EF40  F02D         	goto	u5150
 10588  005A7C                     u5151:
 10589  005A7C  EF48  F02D         	goto	l4628
 10590  005A80                     u5150:
 10591  005A80  0E00               	movlw	0
 10592  005A82  1A01               	xorwf	___flneg@f1^0,f,c
 10593  005A84  0E00               	movlw	0
 10594  005A86  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 10595  005A88  0E00               	movlw	0
 10596  005A8A  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 10597  005A8C  0E80               	movlw	128
 10598  005A8E  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 10599  005A90                     l4628:
 10600  005A90  C001  F001         	movff	___flneg@f1,?___flneg
 10601  005A94  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 10602  005A98  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 10603  005A9C  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 10604  005AA0  0012               	return		;funcret
 10605  005AA2                     __end_of___flneg:
 10606                           	callstack 0
 10607                           
 10608 ;; *************** function ___flmul *****************
 10609 ;; Defined at:
 10610 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
 10611 ;; Parameters:    Size  Location     Type
 10612 ;;  b               4   27[COMRAM] unsigned char 
 10613 ;;  a               4   31[COMRAM] unsigned char 
 10614 ;; Auto vars:     Size  Location     Type
 10615 ;;  prod            4   46[COMRAM] struct .
 10616 ;;  grs             4   40[COMRAM] unsigned long 
 10617 ;;  temp            2   50[COMRAM] struct .
 10618 ;;  bexp            1   45[COMRAM] unsigned char 
 10619 ;;  aexp            1   44[COMRAM] unsigned char 
 10620 ;;  sign            1   39[COMRAM] unsigned char 
 10621 ;; Return value:  Size  Location     Type
 10622 ;;                  4   27[COMRAM] unsigned char 
 10623 ;; Registers used:
 10624 ;;		wreg, status,2, status,0, prodl, prodh
 10625 ;; Tracked objects:
 10626 ;;		On entry : 0/0
 10627 ;;		On exit  : 0/0
 10628 ;;		Unchanged: 0/0
 10629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10630 ;;      Params:         8       0       0       0       0       0       0
 10631 ;;      Locals:        13       0       0       0       0       0       0
 10632 ;;      Temps:          4       0       0       0       0       0       0
 10633 ;;      Totals:        25       0       0       0       0       0       0
 10634 ;;Total ram usage:       25 bytes
 10635 ;; Hardware stack levels used:    1
 10636 ;; Hardware stack levels required when called:    1
 10637 ;; This function calls:
 10638 ;;		Nothing
 10639 ;; This function is called by:
 10640 ;;		_scanAdcConversion
 10641 ;;		_speedControl
 10642 ;;		_efgtoa
 10643 ;; This function uses a non-reentrant model
 10644 ;;
 10645                           
 10646                           	psect	text33
 10647  002F66                     __ptext33:
 10648                           	callstack 0
 10649  002F66                     ___flmul:
 10650                           	callstack 25
 10651  002F66  501F               	movf	(___flmul@b+3)^0,w,c
 10652  002F68  0B80               	andlw	128
 10653  002F6A  6E28               	movwf	___flmul@sign^0,c
 10654  002F6C  501F               	movf	(___flmul@b+3)^0,w,c
 10655  002F6E  241F               	addwf	(___flmul@b+3)^0,w,c
 10656  002F70  6E2E               	movwf	___flmul@bexp^0,c
 10657  002F72  AE1E               	btfss	(___flmul@b+2)^0,7,c
 10658  002F74  EFBE  F017         	goto	u4761
 10659  002F78  EFC0  F017         	goto	u4760
 10660  002F7C                     u4761:
 10661  002F7C  EFC1  F017         	goto	l4376
 10662  002F80                     u4760:
 10663  002F80  802E               	bsf	___flmul@bexp^0,0,c
 10664  002F82                     l4376:
 10665  002F82  502E               	movf	___flmul@bexp^0,w,c
 10666  002F84  B4D8               	btfsc	status,2,c
 10667  002F86  EFC7  F017         	goto	u4771
 10668  002F8A  EFC9  F017         	goto	u4770
 10669  002F8E                     u4771:
 10670  002F8E  EFDC  F017         	goto	l4384
 10671  002F92                     u4770:
 10672  002F92  282E               	incf	___flmul@bexp^0,w,c
 10673  002F94  A4D8               	btfss	status,2,c
 10674  002F96  EFCF  F017         	goto	u4781
 10675  002F9A  EFD1  F017         	goto	u4780
 10676  002F9E                     u4781:
 10677  002F9E  EFD9  F017         	goto	l4382
 10678  002FA2                     u4780:
 10679  002FA2  0E00               	movlw	0
 10680  002FA4  6E1C               	movwf	___flmul@b^0,c
 10681  002FA6  0E00               	movlw	0
 10682  002FA8  6E1D               	movwf	(___flmul@b+1)^0,c
 10683  002FAA  0E00               	movlw	0
 10684  002FAC  6E1E               	movwf	(___flmul@b+2)^0,c
 10685  002FAE  0E00               	movlw	0
 10686  002FB0  6E1F               	movwf	(___flmul@b+3)^0,c
 10687  002FB2                     l4382:
 10688  002FB2  8E1E               	bsf	(___flmul@b+2)^0,7,c
 10689  002FB4  EFE4  F017         	goto	l4386
 10690  002FB8                     l4384:
 10691  002FB8  0E00               	movlw	0
 10692  002FBA  6E1C               	movwf	___flmul@b^0,c
 10693  002FBC  0E00               	movlw	0
 10694  002FBE  6E1D               	movwf	(___flmul@b+1)^0,c
 10695  002FC0  0E00               	movlw	0
 10696  002FC2  6E1E               	movwf	(___flmul@b+2)^0,c
 10697  002FC4  0E00               	movlw	0
 10698  002FC6  6E1F               	movwf	(___flmul@b+3)^0,c
 10699  002FC8                     l4386:
 10700  002FC8  5023               	movf	(___flmul@a+3)^0,w,c
 10701  002FCA  0B80               	andlw	128
 10702  002FCC  1A28               	xorwf	___flmul@sign^0,f,c
 10703  002FCE  5023               	movf	(___flmul@a+3)^0,w,c
 10704  002FD0  2423               	addwf	(___flmul@a+3)^0,w,c
 10705  002FD2  6E2D               	movwf	___flmul@aexp^0,c
 10706  002FD4  AE22               	btfss	(___flmul@a+2)^0,7,c
 10707  002FD6  EFEF  F017         	goto	u4791
 10708  002FDA  EFF1  F017         	goto	u4790
 10709  002FDE                     u4791:
 10710  002FDE  EFF2  F017         	goto	l4394
 10711  002FE2                     u4790:
 10712  002FE2  802D               	bsf	___flmul@aexp^0,0,c
 10713  002FE4                     l4394:
 10714  002FE4  502D               	movf	___flmul@aexp^0,w,c
 10715  002FE6  B4D8               	btfsc	status,2,c
 10716  002FE8  EFF8  F017         	goto	u4801
 10717  002FEC  EFFA  F017         	goto	u4800
 10718  002FF0                     u4801:
 10719  002FF0  EF0D  F018         	goto	l4402
 10720  002FF4                     u4800:
 10721  002FF4  282D               	incf	___flmul@aexp^0,w,c
 10722  002FF6  A4D8               	btfss	status,2,c
 10723  002FF8  EF00  F018         	goto	u4811
 10724  002FFC  EF02  F018         	goto	u4810
 10725  003000                     u4811:
 10726  003000  EF0A  F018         	goto	l4400
 10727  003004                     u4810:
 10728  003004  0E00               	movlw	0
 10729  003006  6E20               	movwf	___flmul@a^0,c
 10730  003008  0E00               	movlw	0
 10731  00300A  6E21               	movwf	(___flmul@a+1)^0,c
 10732  00300C  0E00               	movlw	0
 10733  00300E  6E22               	movwf	(___flmul@a+2)^0,c
 10734  003010  0E00               	movlw	0
 10735  003012  6E23               	movwf	(___flmul@a+3)^0,c
 10736  003014                     l4400:
 10737  003014  8E22               	bsf	(___flmul@a+2)^0,7,c
 10738  003016  EF15  F018         	goto	l1099
 10739  00301A                     l4402:
 10740  00301A  0E00               	movlw	0
 10741  00301C  6E20               	movwf	___flmul@a^0,c
 10742  00301E  0E00               	movlw	0
 10743  003020  6E21               	movwf	(___flmul@a+1)^0,c
 10744  003022  0E00               	movlw	0
 10745  003024  6E22               	movwf	(___flmul@a+2)^0,c
 10746  003026  0E00               	movlw	0
 10747  003028  6E23               	movwf	(___flmul@a+3)^0,c
 10748  00302A                     l1099:
 10749  00302A  502D               	movf	___flmul@aexp^0,w,c
 10750  00302C  B4D8               	btfsc	status,2,c
 10751  00302E  EF1B  F018         	goto	u4821
 10752  003032  EF1D  F018         	goto	u4820
 10753  003036                     u4821:
 10754  003036  EF25  F018         	goto	l4406
 10755  00303A                     u4820:
 10756  00303A  502E               	movf	___flmul@bexp^0,w,c
 10757  00303C  A4D8               	btfss	status,2,c
 10758  00303E  EF23  F018         	goto	u4831
 10759  003042  EF25  F018         	goto	u4830
 10760  003046                     u4831:
 10761  003046  EF2F  F018         	goto	l4410
 10762  00304A                     u4830:
 10763  00304A                     l4406:
 10764  00304A  0E00               	movlw	0
 10765  00304C  6E1C               	movwf	?___flmul^0,c
 10766  00304E  0E00               	movlw	0
 10767  003050  6E1D               	movwf	(?___flmul+1)^0,c
 10768  003052  0E00               	movlw	0
 10769  003054  6E1E               	movwf	(?___flmul+2)^0,c
 10770  003056  0E00               	movlw	0
 10771  003058  6E1F               	movwf	(?___flmul+3)^0,c
 10772  00305A  EFC7  F019         	goto	l1103
 10773  00305E                     l4410:
 10774  00305E  5022               	movf	(___flmul@a+2)^0,w,c
 10775  003060  021C               	mulwf	___flmul@b^0,c
 10776  003062  CFF3 F033          	movff	prodl,___flmul@temp
 10777  003066  CFF4 F034          	movff	prodh,___flmul@temp+1
 10778  00306A  5033               	movf	___flmul@temp^0,w,c
 10779  00306C  6E29               	movwf	___flmul@grs^0,c
 10780  00306E  6A2A               	clrf	(___flmul@grs+1)^0,c
 10781  003070  6A2B               	clrf	(___flmul@grs+2)^0,c
 10782  003072  6A2C               	clrf	(___flmul@grs+3)^0,c
 10783  003074  5034               	movf	(___flmul@temp+1)^0,w,c
 10784  003076  6E2F               	movwf	___flmul@prod^0,c
 10785  003078  6A30               	clrf	(___flmul@prod+1)^0,c
 10786  00307A  6A31               	clrf	(___flmul@prod+2)^0,c
 10787  00307C  6A32               	clrf	(___flmul@prod+3)^0,c
 10788  00307E  5021               	movf	(___flmul@a+1)^0,w,c
 10789  003080  021D               	mulwf	(___flmul@b+1)^0,c
 10790  003082  CFF3 F033          	movff	prodl,___flmul@temp
 10791  003086  CFF4 F034          	movff	prodh,___flmul@temp+1
 10792  00308A  5033               	movf	___flmul@temp^0,w,c
 10793  00308C  2629               	addwf	___flmul@grs^0,f,c
 10794  00308E  0E00               	movlw	0
 10795  003090  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10796  003092  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10797  003094  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10798  003096  5034               	movf	(___flmul@temp+1)^0,w,c
 10799  003098  262F               	addwf	___flmul@prod^0,f,c
 10800  00309A  0E00               	movlw	0
 10801  00309C  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10802  00309E  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10803  0030A0  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10804  0030A2  5020               	movf	___flmul@a^0,w,c
 10805  0030A4  021E               	mulwf	(___flmul@b+2)^0,c
 10806  0030A6  CFF3 F033          	movff	prodl,___flmul@temp
 10807  0030AA  CFF4 F034          	movff	prodh,___flmul@temp+1
 10808  0030AE  5033               	movf	___flmul@temp^0,w,c
 10809  0030B0  2629               	addwf	___flmul@grs^0,f,c
 10810  0030B2  0E00               	movlw	0
 10811  0030B4  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10812  0030B6  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10813  0030B8  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10814  0030BA  5034               	movf	(___flmul@temp+1)^0,w,c
 10815  0030BC  262F               	addwf	___flmul@prod^0,f,c
 10816  0030BE  0E00               	movlw	0
 10817  0030C0  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10818  0030C2  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10819  0030C4  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10820  0030C6  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 10821  0030CA  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 10822  0030CE  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 10823  0030D2  6A29               	clrf	___flmul@grs^0,c
 10824  0030D4  5020               	movf	___flmul@a^0,w,c
 10825  0030D6  021D               	mulwf	(___flmul@b+1)^0,c
 10826  0030D8  CFF3 F033          	movff	prodl,___flmul@temp
 10827  0030DC  CFF4 F034          	movff	prodh,___flmul@temp+1
 10828  0030E0  5033               	movf	___flmul@temp^0,w,c
 10829  0030E2  2629               	addwf	___flmul@grs^0,f,c
 10830  0030E4  5034               	movf	(___flmul@temp+1)^0,w,c
 10831  0030E6  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10832  0030E8  0E00               	movlw	0
 10833  0030EA  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10834  0030EC  0E00               	movlw	0
 10835  0030EE  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10836  0030F0  5021               	movf	(___flmul@a+1)^0,w,c
 10837  0030F2  021C               	mulwf	___flmul@b^0,c
 10838  0030F4  CFF3 F033          	movff	prodl,___flmul@temp
 10839  0030F8  CFF4 F034          	movff	prodh,___flmul@temp+1
 10840  0030FC  5033               	movf	___flmul@temp^0,w,c
 10841  0030FE  2629               	addwf	___flmul@grs^0,f,c
 10842  003100  5034               	movf	(___flmul@temp+1)^0,w,c
 10843  003102  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10844  003104  0E00               	movlw	0
 10845  003106  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10846  003108  0E00               	movlw	0
 10847  00310A  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10848  00310C  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 10849  003110  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 10850  003114  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 10851  003118  6A29               	clrf	___flmul@grs^0,c
 10852  00311A  5020               	movf	___flmul@a^0,w,c
 10853  00311C  021C               	mulwf	___flmul@b^0,c
 10854  00311E  CFF3 F033          	movff	prodl,___flmul@temp
 10855  003122  CFF4 F034          	movff	prodh,___flmul@temp+1
 10856  003126  5033               	movf	___flmul@temp^0,w,c
 10857  003128  2629               	addwf	___flmul@grs^0,f,c
 10858  00312A  5034               	movf	(___flmul@temp+1)^0,w,c
 10859  00312C  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10860  00312E  0E00               	movlw	0
 10861  003130  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10862  003132  0E00               	movlw	0
 10863  003134  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10864  003136  5022               	movf	(___flmul@a+2)^0,w,c
 10865  003138  021D               	mulwf	(___flmul@b+1)^0,c
 10866  00313A  CFF3 F033          	movff	prodl,___flmul@temp
 10867  00313E  CFF4 F034          	movff	prodh,___flmul@temp+1
 10868  003142  5033               	movf	___flmul@temp^0,w,c
 10869  003144  262F               	addwf	___flmul@prod^0,f,c
 10870  003146  5034               	movf	(___flmul@temp+1)^0,w,c
 10871  003148  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10872  00314A  0E00               	movlw	0
 10873  00314C  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10874  00314E  0E00               	movlw	0
 10875  003150  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10876  003152  5021               	movf	(___flmul@a+1)^0,w,c
 10877  003154  021E               	mulwf	(___flmul@b+2)^0,c
 10878  003156  CFF3 F033          	movff	prodl,___flmul@temp
 10879  00315A  CFF4 F034          	movff	prodh,___flmul@temp+1
 10880  00315E  5033               	movf	___flmul@temp^0,w,c
 10881  003160  262F               	addwf	___flmul@prod^0,f,c
 10882  003162  5034               	movf	(___flmul@temp+1)^0,w,c
 10883  003164  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10884  003166  0E00               	movlw	0
 10885  003168  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10886  00316A  0E00               	movlw	0
 10887  00316C  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10888  00316E  5022               	movf	(___flmul@a+2)^0,w,c
 10889  003170  021E               	mulwf	(___flmul@b+2)^0,c
 10890  003172  CFF3 F033          	movff	prodl,___flmul@temp
 10891  003176  CFF4 F034          	movff	prodh,___flmul@temp+1
 10892  00317A  5033               	movf	___flmul@temp^0,w,c
 10893  00317C  6E24               	movwf	??___flmul^0,c
 10894  00317E  5034               	movf	(___flmul@temp+1)^0,w,c
 10895  003180  6E25               	movwf	(??___flmul+1)^0,c
 10896  003182  6A26               	clrf	(??___flmul+2)^0,c
 10897  003184  6A27               	clrf	(??___flmul+3)^0,c
 10898  003186  C026  F027         	movff	??___flmul+2,??___flmul+3
 10899  00318A  C025  F026         	movff	??___flmul+1,??___flmul+2
 10900  00318E  C024  F025         	movff	??___flmul,??___flmul+1
 10901  003192  6A24               	clrf	??___flmul^0,c
 10902  003194  5024               	movf	??___flmul^0,w,c
 10903  003196  262F               	addwf	___flmul@prod^0,f,c
 10904  003198  5025               	movf	(??___flmul+1)^0,w,c
 10905  00319A  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10906  00319C  5026               	movf	(??___flmul+2)^0,w,c
 10907  00319E  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10908  0031A0  5027               	movf	(??___flmul+3)^0,w,c
 10909  0031A2  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10910  0031A4  C029  F024         	movff	___flmul@grs,??___flmul
 10911  0031A8  C02A  F025         	movff	___flmul@grs+1,??___flmul+1
 10912  0031AC  C02B  F026         	movff	___flmul@grs+2,??___flmul+2
 10913  0031B0  C02C  F027         	movff	___flmul@grs+3,??___flmul+3
 10914  0031B4  0E19               	movlw	25
 10915  0031B6  EFE2  F018         	goto	u4840
 10916  0031BA                     u4845:
 10917  0031BA  90D8               	bcf	status,0,c
 10918  0031BC  3227               	rrcf	(??___flmul+3)^0,f,c
 10919  0031BE  3226               	rrcf	(??___flmul+2)^0,f,c
 10920  0031C0  3225               	rrcf	(??___flmul+1)^0,f,c
 10921  0031C2  3224               	rrcf	??___flmul^0,f,c
 10922  0031C4                     u4840:
 10923  0031C4  2EE8               	decfsz	wreg,f,c
 10924  0031C6  EFDD  F018         	goto	u4845
 10925  0031CA  5024               	movf	??___flmul^0,w,c
 10926  0031CC  262F               	addwf	___flmul@prod^0,f,c
 10927  0031CE  5025               	movf	(??___flmul+1)^0,w,c
 10928  0031D0  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10929  0031D2  5026               	movf	(??___flmul+2)^0,w,c
 10930  0031D4  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10931  0031D6  5027               	movf	(??___flmul+3)^0,w,c
 10932  0031D8  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10933  0031DA  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 10934  0031DE  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 10935  0031E2  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 10936  0031E6  6A29               	clrf	___flmul@grs^0,c
 10937  0031E8  502D               	movf	___flmul@aexp^0,w,c
 10938  0031EA  C02E  F024         	movff	___flmul@bexp,??___flmul
 10939  0031EE  6A25               	clrf	(??___flmul+1)^0,c
 10940  0031F0  2624               	addwf	??___flmul^0,f,c
 10941  0031F2  0E00               	movlw	0
 10942  0031F4  2225               	addwfc	(??___flmul+1)^0,f,c
 10943  0031F6  0E82               	movlw	130
 10944  0031F8  2424               	addwf	??___flmul^0,w,c
 10945  0031FA  6E33               	movwf	___flmul@temp^0,c
 10946  0031FC  0EFF               	movlw	255
 10947  0031FE  2025               	addwfc	(??___flmul+1)^0,w,c
 10948  003200  6E34               	movwf	(___flmul@temp+1)^0,c
 10949  003202  EF18  F019         	goto	l4458
 10950  003206                     l4452:
 10951  003206  90D8               	bcf	status,0,c
 10952  003208  362F               	rlcf	___flmul@prod^0,f,c
 10953  00320A  3630               	rlcf	(___flmul@prod+1)^0,f,c
 10954  00320C  3631               	rlcf	(___flmul@prod+2)^0,f,c
 10955  00320E  3632               	rlcf	(___flmul@prod+3)^0,f,c
 10956  003210  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 10957  003212  EF0D  F019         	goto	u4851
 10958  003216  EF0F  F019         	goto	u4850
 10959  00321A                     u4851:
 10960  00321A  EF10  F019         	goto	l1106
 10961  00321E                     u4850:
 10962  00321E  802F               	bsf	___flmul@prod^0,0,c
 10963  003220                     l1106:
 10964  003220  90D8               	bcf	status,0,c
 10965  003222  3629               	rlcf	___flmul@grs^0,f,c
 10966  003224  362A               	rlcf	(___flmul@grs+1)^0,f,c
 10967  003226  362B               	rlcf	(___flmul@grs+2)^0,f,c
 10968  003228  362C               	rlcf	(___flmul@grs+3)^0,f,c
 10969  00322A  0633               	decf	___flmul@temp^0,f,c
 10970  00322C  A0D8               	btfss	status,0,c
 10971  00322E  0634               	decf	(___flmul@temp+1)^0,f,c
 10972  003230                     l4458:
 10973  003230  AE31               	btfss	(___flmul@prod+2)^0,7,c
 10974  003232  EF1D  F019         	goto	u4861
 10975  003236  EF1F  F019         	goto	u4860
 10976  00323A                     u4861:
 10977  00323A  EF03  F019         	goto	l4452
 10978  00323E                     u4860:
 10979  00323E  0E00               	movlw	0
 10980  003240  6E2D               	movwf	___flmul@aexp^0,c
 10981  003242  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 10982  003244  EF26  F019         	goto	u4871
 10983  003248  EF28  F019         	goto	u4870
 10984  00324C                     u4871:
 10985  00324C  EF4C  F019         	goto	l1108
 10986  003250                     u4870:
 10987  003250  0EFF               	movlw	255
 10988  003252  1429               	andwf	___flmul@grs^0,w,c
 10989  003254  6E24               	movwf	??___flmul^0,c
 10990  003256  0EFF               	movlw	255
 10991  003258  142A               	andwf	(___flmul@grs+1)^0,w,c
 10992  00325A  6E25               	movwf	(??___flmul+1)^0,c
 10993  00325C  0EFF               	movlw	255
 10994  00325E  142B               	andwf	(___flmul@grs+2)^0,w,c
 10995  003260  6E26               	movwf	(??___flmul+2)^0,c
 10996  003262  0E7F               	movlw	127
 10997  003264  142C               	andwf	(___flmul@grs+3)^0,w,c
 10998  003266  6E27               	movwf	(??___flmul+3)^0,c
 10999  003268  5024               	movf	??___flmul^0,w,c
 11000  00326A  1025               	iorwf	(??___flmul+1)^0,w,c
 11001  00326C  1026               	iorwf	(??___flmul+2)^0,w,c
 11002  00326E  1027               	iorwf	(??___flmul+3)^0,w,c
 11003  003270  B4D8               	btfsc	status,2,c
 11004  003272  EF3D  F019         	goto	u4881
 11005  003276  EF3F  F019         	goto	u4880
 11006  00327A                     u4881:
 11007  00327A  EF43  F019         	goto	l1109
 11008  00327E                     u4880:
 11009  00327E                     l4466:
 11010  00327E  0E01               	movlw	1
 11011  003280  6E2D               	movwf	___flmul@aexp^0,c
 11012  003282  EF4C  F019         	goto	l1108
 11013  003286                     l1109:
 11014  003286  A02F               	btfss	___flmul@prod^0,0,c
 11015  003288  EF48  F019         	goto	u4891
 11016  00328C  EF4A  F019         	goto	u4890
 11017  003290                     u4891:
 11018  003290  EF4C  F019         	goto	l1108
 11019  003294                     u4890:
 11020  003294  EF3F  F019         	goto	l4466
 11021  003298                     l1108:
 11022  003298  502D               	movf	___flmul@aexp^0,w,c
 11023  00329A  B4D8               	btfsc	status,2,c
 11024  00329C  EF52  F019         	goto	u4901
 11025  0032A0  EF54  F019         	goto	u4900
 11026  0032A4                     u4901:
 11027  0032A4  EF78  F019         	goto	l4478
 11028  0032A8                     u4900:
 11029  0032A8  0E01               	movlw	1
 11030  0032AA  262F               	addwf	___flmul@prod^0,f,c
 11031  0032AC  0E00               	movlw	0
 11032  0032AE  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11033  0032B0  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11034  0032B2  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11035  0032B4  A032               	btfss	(___flmul@prod+3)^0,0,c
 11036  0032B6  EF5F  F019         	goto	u4911
 11037  0032BA  EF61  F019         	goto	u4910
 11038  0032BE                     u4911:
 11039  0032BE  EF78  F019         	goto	l4478
 11040  0032C2                     u4910:
 11041  0032C2  C02F  F024         	movff	___flmul@prod,??___flmul
 11042  0032C6  C030  F025         	movff	___flmul@prod+1,??___flmul+1
 11043  0032CA  C031  F026         	movff	___flmul@prod+2,??___flmul+2
 11044  0032CE  C032  F027         	movff	___flmul@prod+3,??___flmul+3
 11045  0032D2  3427               	rlcf	(??___flmul+3)^0,w,c
 11046  0032D4  3227               	rrcf	(??___flmul+3)^0,f,c
 11047  0032D6  3226               	rrcf	(??___flmul+2)^0,f,c
 11048  0032D8  3225               	rrcf	(??___flmul+1)^0,f,c
 11049  0032DA  3224               	rrcf	??___flmul^0,f,c
 11050  0032DC  C024  F02F         	movff	??___flmul,___flmul@prod
 11051  0032E0  C025  F030         	movff	??___flmul+1,___flmul@prod+1
 11052  0032E4  C026  F031         	movff	??___flmul+2,___flmul@prod+2
 11053  0032E8  C027  F032         	movff	??___flmul+3,___flmul@prod+3
 11054  0032EC  4A33               	infsnz	___flmul@temp^0,f,c
 11055  0032EE  2A34               	incf	(___flmul@temp+1)^0,f,c
 11056  0032F0                     l4478:
 11057  0032F0  BE34               	btfsc	(___flmul@temp+1)^0,7,c
 11058  0032F2  EF83  F019         	goto	u4921
 11059  0032F6  5034               	movf	(___flmul@temp+1)^0,w,c
 11060  0032F8  E108               	bnz	u4920
 11061  0032FA  2833               	incf	___flmul@temp^0,w,c
 11062  0032FC  A0D8               	btfss	status,0,c
 11063  0032FE  EF83  F019         	goto	u4921
 11064  003302  EF85  F019         	goto	u4920
 11065  003306                     u4921:
 11066  003306  EF8F  F019         	goto	l4482
 11067  00330A                     u4920:
 11068  00330A  0E00               	movlw	0
 11069  00330C  6E2F               	movwf	___flmul@prod^0,c
 11070  00330E  0E00               	movlw	0
 11071  003310  6E30               	movwf	(___flmul@prod+1)^0,c
 11072  003312  0E80               	movlw	128
 11073  003314  6E31               	movwf	(___flmul@prod+2)^0,c
 11074  003316  0E7F               	movlw	127
 11075  003318  6E32               	movwf	(___flmul@prod+3)^0,c
 11076  00331A  EFBD  F019         	goto	l4494
 11077  00331E                     l4482:
 11078  00331E  BE34               	btfsc	(___flmul@temp+1)^0,7,c
 11079  003320  EF9C  F019         	goto	u4930
 11080  003324  5034               	movf	(___flmul@temp+1)^0,w,c
 11081  003326  E106               	bnz	u4931
 11082  003328  0433               	decf	___flmul@temp^0,w,c
 11083  00332A  B0D8               	btfsc	status,0,c
 11084  00332C  EF9A  F019         	goto	u4931
 11085  003330  EF9C  F019         	goto	u4930
 11086  003334                     u4931:
 11087  003334  EFA8  F019         	goto	l1116
 11088  003338                     u4930:
 11089  003338  0E00               	movlw	0
 11090  00333A  6E2F               	movwf	___flmul@prod^0,c
 11091  00333C  0E00               	movlw	0
 11092  00333E  6E30               	movwf	(___flmul@prod+1)^0,c
 11093  003340  0E00               	movlw	0
 11094  003342  6E31               	movwf	(___flmul@prod+2)^0,c
 11095  003344  0E00               	movlw	0
 11096  003346  6E32               	movwf	(___flmul@prod+3)^0,c
 11097  003348  0E00               	movlw	0
 11098  00334A  6E28               	movwf	___flmul@sign^0,c
 11099  00334C  EFBD  F019         	goto	l4494
 11100  003350                     l1116:
 11101  003350  C033  F02E         	movff	___flmul@temp,___flmul@bexp
 11102  003354  0EFF               	movlw	255
 11103  003356  162F               	andwf	___flmul@prod^0,f,c
 11104  003358  0EFF               	movlw	255
 11105  00335A  1630               	andwf	(___flmul@prod+1)^0,f,c
 11106  00335C  0E7F               	movlw	127
 11107  00335E  1631               	andwf	(___flmul@prod+2)^0,f,c
 11108  003360  0E00               	movlw	0
 11109  003362  1632               	andwf	(___flmul@prod+3)^0,f,c
 11110  003364  A02E               	btfss	___flmul@bexp^0,0,c
 11111  003366  EFB7  F019         	goto	u4941
 11112  00336A  EFB9  F019         	goto	u4940
 11113  00336E                     u4941:
 11114  00336E  EFBA  F019         	goto	l4492
 11115  003372                     u4940:
 11116  003372  8E31               	bsf	(___flmul@prod+2)^0,7,c
 11117  003374                     l4492:
 11118  003374  90D8               	bcf	status,0,c
 11119  003376  302E               	rrcf	___flmul@bexp^0,w,c
 11120  003378  6E32               	movwf	(___flmul@prod+3)^0,c
 11121  00337A                     l4494:
 11122  00337A  5028               	movf	___flmul@sign^0,w,c
 11123  00337C  1232               	iorwf	(___flmul@prod+3)^0,f,c
 11124  00337E  C02F  F01C         	movff	___flmul@prod,?___flmul
 11125  003382  C030  F01D         	movff	___flmul@prod+1,?___flmul+1
 11126  003386  C031  F01E         	movff	___flmul@prod+2,?___flmul+2
 11127  00338A  C032  F01F         	movff	___flmul@prod+3,?___flmul+3
 11128  00338E                     l1103:
 11129  00338E  0012               	return		;funcret
 11130  003390                     __end_of___flmul:
 11131                           	callstack 0
 11132                           
 11133 ;; *************** function ___flge *****************
 11134 ;; Defined at:
 11135 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
 11136 ;; Parameters:    Size  Location     Type
 11137 ;;  ff1             4   52[COMRAM] unsigned char 
 11138 ;;  ff2             4   56[COMRAM] unsigned char 
 11139 ;; Auto vars:     Size  Location     Type
 11140 ;;		None
 11141 ;; Return value:  Size  Location     Type
 11142 ;;		None               void
 11143 ;; Registers used:
 11144 ;;		wreg, status,2, status,0
 11145 ;; Tracked objects:
 11146 ;;		On entry : 0/0
 11147 ;;		On exit  : 0/0
 11148 ;;		Unchanged: 0/0
 11149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11150 ;;      Params:         8       0       0       0       0       0       0
 11151 ;;      Locals:         0       0       0       0       0       0       0
 11152 ;;      Temps:          4       0       0       0       0       0       0
 11153 ;;      Totals:        12       0       0       0       0       0       0
 11154 ;;Total ram usage:       12 bytes
 11155 ;; Hardware stack levels used:    1
 11156 ;; Hardware stack levels required when called:    1
 11157 ;; This function calls:
 11158 ;;		Nothing
 11159 ;; This function is called by:
 11160 ;;		_stateMachine
 11161 ;;		_efgtoa
 11162 ;; This function uses a non-reentrant model
 11163 ;;
 11164                           
 11165                           	psect	text34
 11166  004AEA                     __ptext34:
 11167                           	callstack 0
 11168  004AEA                     ___flge:
 11169                           	callstack 23
 11170  004AEA  0E00               	movlw	0
 11171  004AEC  1435               	andwf	___flge@ff1^0,w,c
 11172  004AEE  6E3D               	movwf	??___flge^0,c
 11173  004AF0  0E00               	movlw	0
 11174  004AF2  1436               	andwf	(___flge@ff1+1)^0,w,c
 11175  004AF4  6E3E               	movwf	(??___flge+1)^0,c
 11176  004AF6  0E80               	movlw	128
 11177  004AF8  1437               	andwf	(___flge@ff1+2)^0,w,c
 11178  004AFA  6E3F               	movwf	(??___flge+2)^0,c
 11179  004AFC  0E7F               	movlw	127
 11180  004AFE  1438               	andwf	(___flge@ff1+3)^0,w,c
 11181  004B00  6E40               	movwf	(??___flge+3)^0,c
 11182  004B02  503D               	movf	??___flge^0,w,c
 11183  004B04  103E               	iorwf	(??___flge+1)^0,w,c
 11184  004B06  103F               	iorwf	(??___flge+2)^0,w,c
 11185  004B08  1040               	iorwf	(??___flge+3)^0,w,c
 11186  004B0A  A4D8               	btfss	status,2,c
 11187  004B0C  EF8A  F025         	goto	u5101
 11188  004B10  EF8C  F025         	goto	u5100
 11189  004B14                     u5101:
 11190  004B14  EF94  F025         	goto	l4606
 11191  004B18                     u5100:
 11192  004B18  0E00               	movlw	0
 11193  004B1A  6E35               	movwf	___flge@ff1^0,c
 11194  004B1C  0E00               	movlw	0
 11195  004B1E  6E36               	movwf	(___flge@ff1+1)^0,c
 11196  004B20  0E00               	movlw	0
 11197  004B22  6E37               	movwf	(___flge@ff1+2)^0,c
 11198  004B24  0E00               	movlw	0
 11199  004B26  6E38               	movwf	(___flge@ff1+3)^0,c
 11200  004B28                     l4606:
 11201  004B28  0E00               	movlw	0
 11202  004B2A  1439               	andwf	___flge@ff2^0,w,c
 11203  004B2C  6E3D               	movwf	??___flge^0,c
 11204  004B2E  0E00               	movlw	0
 11205  004B30  143A               	andwf	(___flge@ff2+1)^0,w,c
 11206  004B32  6E3E               	movwf	(??___flge+1)^0,c
 11207  004B34  0E80               	movlw	128
 11208  004B36  143B               	andwf	(___flge@ff2+2)^0,w,c
 11209  004B38  6E3F               	movwf	(??___flge+2)^0,c
 11210  004B3A  0E7F               	movlw	127
 11211  004B3C  143C               	andwf	(___flge@ff2+3)^0,w,c
 11212  004B3E  6E40               	movwf	(??___flge+3)^0,c
 11213  004B40  503D               	movf	??___flge^0,w,c
 11214  004B42  103E               	iorwf	(??___flge+1)^0,w,c
 11215  004B44  103F               	iorwf	(??___flge+2)^0,w,c
 11216  004B46  1040               	iorwf	(??___flge+3)^0,w,c
 11217  004B48  A4D8               	btfss	status,2,c
 11218  004B4A  EFA9  F025         	goto	u5111
 11219  004B4E  EFAB  F025         	goto	u5110
 11220  004B52                     u5111:
 11221  004B52  EFB3  F025         	goto	l4610
 11222  004B56                     u5110:
 11223  004B56  0E00               	movlw	0
 11224  004B58  6E39               	movwf	___flge@ff2^0,c
 11225  004B5A  0E00               	movlw	0
 11226  004B5C  6E3A               	movwf	(___flge@ff2+1)^0,c
 11227  004B5E  0E00               	movlw	0
 11228  004B60  6E3B               	movwf	(___flge@ff2+2)^0,c
 11229  004B62  0E00               	movlw	0
 11230  004B64  6E3C               	movwf	(___flge@ff2+3)^0,c
 11231  004B66                     l4610:
 11232  004B66  AE38               	btfss	(___flge@ff1+3)^0,7,c
 11233  004B68  EFB8  F025         	goto	u5121
 11234  004B6C  EFBA  F025         	goto	u5120
 11235  004B70                     u5121:
 11236  004B70  EFC3  F025         	goto	l4614
 11237  004B74                     u5120:
 11238  004B74  6C35               	negf	___flge@ff1^0,c
 11239  004B76  1E36               	comf	(___flge@ff1+1)^0,f,c
 11240  004B78  B0D8               	btfsc	status,0,c
 11241  004B7A  2A36               	incf	(___flge@ff1+1)^0,f,c
 11242  004B7C  1E37               	comf	(___flge@ff1+2)^0,f,c
 11243  004B7E  B0D8               	btfsc	status,0,c
 11244  004B80  2A37               	incf	(___flge@ff1+2)^0,f,c
 11245  004B82  0E80               	movlw	128
 11246  004B84  5638               	subfwb	(___flge@ff1+3)^0,f,c
 11247  004B86                     l4614:
 11248  004B86  AE3C               	btfss	(___flge@ff2+3)^0,7,c
 11249  004B88  EFC8  F025         	goto	u5131
 11250  004B8C  EFCA  F025         	goto	u5130
 11251  004B90                     u5131:
 11252  004B90  EFD3  F025         	goto	l750
 11253  004B94                     u5130:
 11254  004B94  6C39               	negf	___flge@ff2^0,c
 11255  004B96  1E3A               	comf	(___flge@ff2+1)^0,f,c
 11256  004B98  B0D8               	btfsc	status,0,c
 11257  004B9A  2A3A               	incf	(___flge@ff2+1)^0,f,c
 11258  004B9C  1E3B               	comf	(___flge@ff2+2)^0,f,c
 11259  004B9E  B0D8               	btfsc	status,0,c
 11260  004BA0  2A3B               	incf	(___flge@ff2+2)^0,f,c
 11261  004BA2  0E80               	movlw	128
 11262  004BA4  563C               	subfwb	(___flge@ff2+3)^0,f,c
 11263  004BA6                     l750:
 11264  004BA6  0E00               	movlw	0
 11265  004BA8  1A35               	xorwf	___flge@ff1^0,f,c
 11266  004BAA  0E00               	movlw	0
 11267  004BAC  1A36               	xorwf	(___flge@ff1+1)^0,f,c
 11268  004BAE  0E00               	movlw	0
 11269  004BB0  1A37               	xorwf	(___flge@ff1+2)^0,f,c
 11270  004BB2  0E80               	movlw	128
 11271  004BB4  1A38               	xorwf	(___flge@ff1+3)^0,f,c
 11272  004BB6  0E00               	movlw	0
 11273  004BB8  1A39               	xorwf	___flge@ff2^0,f,c
 11274  004BBA  0E00               	movlw	0
 11275  004BBC  1A3A               	xorwf	(___flge@ff2+1)^0,f,c
 11276  004BBE  0E00               	movlw	0
 11277  004BC0  1A3B               	xorwf	(___flge@ff2+2)^0,f,c
 11278  004BC2  0E80               	movlw	128
 11279  004BC4  1A3C               	xorwf	(___flge@ff2+3)^0,f,c
 11280  004BC6  5039               	movf	___flge@ff2^0,w,c
 11281  004BC8  5C35               	subwf	___flge@ff1^0,w,c
 11282  004BCA  503A               	movf	(___flge@ff2+1)^0,w,c
 11283  004BCC  5836               	subwfb	(___flge@ff1+1)^0,w,c
 11284  004BCE  503B               	movf	(___flge@ff2+2)^0,w,c
 11285  004BD0  5837               	subwfb	(___flge@ff1+2)^0,w,c
 11286  004BD2  503C               	movf	(___flge@ff2+3)^0,w,c
 11287  004BD4  5838               	subwfb	(___flge@ff1+3)^0,w,c
 11288  004BD6  B0D8               	btfsc	status,0,c
 11289  004BD8  EFF0  F025         	goto	u5141
 11290  004BDC  EFF2  F025         	goto	u5140
 11291  004BE0                     u5141:
 11292  004BE0  EFF5  F025         	goto	l4620
 11293  004BE4                     u5140:
 11294  004BE4  90D8               	bcf	status,0,c
 11295  004BE6  EFF6  F025         	goto	l755
 11296  004BEA                     l4620:
 11297  004BEA  80D8               	bsf	status,0,c
 11298  004BEC                     l755:
 11299  004BEC  0012               	return		;funcret
 11300  004BEE                     __end_of___flge:
 11301                           	callstack 0
 11302                           
 11303 ;; *************** function ___fleq *****************
 11304 ;; Defined at:
 11305 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fleq.c"
 11306 ;; Parameters:    Size  Location     Type
 11307 ;;  ff1             4    0[COMRAM] unsigned char 
 11308 ;;  ff2             4    4[COMRAM] unsigned char 
 11309 ;; Auto vars:     Size  Location     Type
 11310 ;;		None
 11311 ;; Return value:  Size  Location     Type
 11312 ;;		None               void
 11313 ;; Registers used:
 11314 ;;		wreg, status,2, status,0
 11315 ;; Tracked objects:
 11316 ;;		On entry : 0/0
 11317 ;;		On exit  : 0/0
 11318 ;;		Unchanged: 0/0
 11319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11320 ;;      Params:         8       0       0       0       0       0       0
 11321 ;;      Locals:         0       0       0       0       0       0       0
 11322 ;;      Temps:          4       0       0       0       0       0       0
 11323 ;;      Totals:        12       0       0       0       0       0       0
 11324 ;;Total ram usage:       12 bytes
 11325 ;; Hardware stack levels used:    1
 11326 ;; Hardware stack levels required when called:    1
 11327 ;; This function calls:
 11328 ;;		Nothing
 11329 ;; This function is called by:
 11330 ;;		_efgtoa
 11331 ;; This function uses a non-reentrant model
 11332 ;;
 11333                           
 11334                           	psect	text35
 11335  005198                     __ptext35:
 11336                           	callstack 0
 11337  005198                     ___fleq:
 11338                           	callstack 23
 11339  005198  0E00               	movlw	0
 11340  00519A  1401               	andwf	___fleq@ff1^0,w,c
 11341  00519C  6E09               	movwf	??___fleq^0,c
 11342  00519E  0E00               	movlw	0
 11343  0051A0  1402               	andwf	(___fleq@ff1+1)^0,w,c
 11344  0051A2  6E0A               	movwf	(??___fleq+1)^0,c
 11345  0051A4  0E80               	movlw	128
 11346  0051A6  1403               	andwf	(___fleq@ff1+2)^0,w,c
 11347  0051A8  6E0B               	movwf	(??___fleq+2)^0,c
 11348  0051AA  0E7F               	movlw	127
 11349  0051AC  1404               	andwf	(___fleq@ff1+3)^0,w,c
 11350  0051AE  6E0C               	movwf	(??___fleq+3)^0,c
 11351  0051B0  5009               	movf	??___fleq^0,w,c
 11352  0051B2  100A               	iorwf	(??___fleq+1)^0,w,c
 11353  0051B4  100B               	iorwf	(??___fleq+2)^0,w,c
 11354  0051B6  100C               	iorwf	(??___fleq+3)^0,w,c
 11355  0051B8  A4D8               	btfss	status,2,c
 11356  0051BA  EFE1  F028         	goto	u5071
 11357  0051BE  EFE3  F028         	goto	u5070
 11358  0051C2                     u5071:
 11359  0051C2  EFEB  F028         	goto	l4590
 11360  0051C6                     u5070:
 11361  0051C6  0E00               	movlw	0
 11362  0051C8  6E01               	movwf	___fleq@ff1^0,c
 11363  0051CA  0E00               	movlw	0
 11364  0051CC  6E02               	movwf	(___fleq@ff1+1)^0,c
 11365  0051CE  0E00               	movlw	0
 11366  0051D0  6E03               	movwf	(___fleq@ff1+2)^0,c
 11367  0051D2  0E00               	movlw	0
 11368  0051D4  6E04               	movwf	(___fleq@ff1+3)^0,c
 11369  0051D6                     l4590:
 11370  0051D6  0E00               	movlw	0
 11371  0051D8  1405               	andwf	___fleq@ff2^0,w,c
 11372  0051DA  6E09               	movwf	??___fleq^0,c
 11373  0051DC  0E00               	movlw	0
 11374  0051DE  1406               	andwf	(___fleq@ff2+1)^0,w,c
 11375  0051E0  6E0A               	movwf	(??___fleq+1)^0,c
 11376  0051E2  0E80               	movlw	128
 11377  0051E4  1407               	andwf	(___fleq@ff2+2)^0,w,c
 11378  0051E6  6E0B               	movwf	(??___fleq+2)^0,c
 11379  0051E8  0E7F               	movlw	127
 11380  0051EA  1408               	andwf	(___fleq@ff2+3)^0,w,c
 11381  0051EC  6E0C               	movwf	(??___fleq+3)^0,c
 11382  0051EE  5009               	movf	??___fleq^0,w,c
 11383  0051F0  100A               	iorwf	(??___fleq+1)^0,w,c
 11384  0051F2  100B               	iorwf	(??___fleq+2)^0,w,c
 11385  0051F4  100C               	iorwf	(??___fleq+3)^0,w,c
 11386  0051F6  A4D8               	btfss	status,2,c
 11387  0051F8  EF00  F029         	goto	u5081
 11388  0051FC  EF02  F029         	goto	u5080
 11389  005200                     u5081:
 11390  005200  EF0A  F029         	goto	l4594
 11391  005204                     u5080:
 11392  005204  0E00               	movlw	0
 11393  005206  6E05               	movwf	___fleq@ff2^0,c
 11394  005208  0E00               	movlw	0
 11395  00520A  6E06               	movwf	(___fleq@ff2+1)^0,c
 11396  00520C  0E00               	movlw	0
 11397  00520E  6E07               	movwf	(___fleq@ff2+2)^0,c
 11398  005210  0E00               	movlw	0
 11399  005212  6E08               	movwf	(___fleq@ff2+3)^0,c
 11400  005214                     l4594:
 11401  005214  5005               	movf	___fleq@ff2^0,w,c
 11402  005216  1801               	xorwf	___fleq@ff1^0,w,c
 11403  005218  E10F               	bnz	u5090
 11404  00521A  5006               	movf	(___fleq@ff2+1)^0,w,c
 11405  00521C  1802               	xorwf	(___fleq@ff1+1)^0,w,c
 11406  00521E  E10C               	bnz	u5090
 11407  005220  5007               	movf	(___fleq@ff2+2)^0,w,c
 11408  005222  1803               	xorwf	(___fleq@ff1+2)^0,w,c
 11409  005224  E109               	bnz	u5090
 11410  005226  5008               	movf	(___fleq@ff2+3)^0,w,c
 11411  005228  1804               	xorwf	(___fleq@ff1+3)^0,w,c
 11412  00522A  B4D8               	btfsc	status,2,c
 11413  00522C  EF1A  F029         	goto	u5091
 11414  005230  EF1C  F029         	goto	u5090
 11415  005234                     u5091:
 11416  005234  EF1F  F029         	goto	l4598
 11417  005238                     u5090:
 11418  005238  90D8               	bcf	status,0,c
 11419  00523A  EF20  F029         	goto	l744
 11420  00523E                     l4598:
 11421  00523E  80D8               	bsf	status,0,c
 11422  005240                     l744:
 11423  005240  0012               	return		;funcret
 11424  005242                     __end_of___fleq:
 11425                           	callstack 0
 11426                           
 11427 ;; *************** function ___fldiv *****************
 11428 ;; Defined at:
 11429 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
 11430 ;; Parameters:    Size  Location     Type
 11431 ;;  b               4   52[COMRAM] unsigned char 
 11432 ;;  a               4   56[COMRAM] unsigned char 
 11433 ;; Auto vars:     Size  Location     Type
 11434 ;;  grs             4   71[COMRAM] unsigned long 
 11435 ;;  rem             4   64[COMRAM] unsigned long 
 11436 ;;  new_exp         2   69[COMRAM] short 
 11437 ;;  aexp            1   76[COMRAM] unsigned char 
 11438 ;;  bexp            1   75[COMRAM] unsigned char 
 11439 ;;  sign            1   68[COMRAM] unsigned char 
 11440 ;; Return value:  Size  Location     Type
 11441 ;;                  4   52[COMRAM] unsigned char 
 11442 ;; Registers used:
 11443 ;;		wreg, status,2, status,0
 11444 ;; Tracked objects:
 11445 ;;		On entry : 0/0
 11446 ;;		On exit  : 0/0
 11447 ;;		Unchanged: 0/0
 11448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11449 ;;      Params:         8       0       0       0       0       0       0
 11450 ;;      Locals:        13       0       0       0       0       0       0
 11451 ;;      Temps:          4       0       0       0       0       0       0
 11452 ;;      Totals:        25       0       0       0       0       0       0
 11453 ;;Total ram usage:       25 bytes
 11454 ;; Hardware stack levels used:    1
 11455 ;; Hardware stack levels required when called:    1
 11456 ;; This function calls:
 11457 ;;		Nothing
 11458 ;; This function is called by:
 11459 ;;		_scanAdcConversion
 11460 ;;		_efgtoa
 11461 ;; This function uses a non-reentrant model
 11462 ;;
 11463                           
 11464                           	psect	text36
 11465  003390                     __ptext36:
 11466                           	callstack 0
 11467  003390                     ___fldiv:
 11468                           	callstack 25
 11469  003390  5038               	movf	(___fldiv@b+3)^0,w,c
 11470  003392  0B80               	andlw	128
 11471  003394  6E45               	movwf	___fldiv@sign^0,c
 11472  003396  5038               	movf	(___fldiv@b+3)^0,w,c
 11473  003398  2438               	addwf	(___fldiv@b+3)^0,w,c
 11474  00339A  6E4C               	movwf	___fldiv@bexp^0,c
 11475  00339C  AE37               	btfss	(___fldiv@b+2)^0,7,c
 11476  00339E  EFD3  F019         	goto	u4531
 11477  0033A2  EFD5  F019         	goto	u4530
 11478  0033A6                     u4531:
 11479  0033A6  EFD6  F019         	goto	l4238
 11480  0033AA                     u4530:
 11481  0033AA  804C               	bsf	___fldiv@bexp^0,0,c
 11482  0033AC                     l4238:
 11483  0033AC  504C               	movf	___fldiv@bexp^0,w,c
 11484  0033AE  B4D8               	btfsc	status,2,c
 11485  0033B0  EFDC  F019         	goto	u4541
 11486  0033B4  EFDE  F019         	goto	u4540
 11487  0033B8                     u4541:
 11488  0033B8  EFF3  F019         	goto	l4248
 11489  0033BC                     u4540:
 11490  0033BC  284C               	incf	___fldiv@bexp^0,w,c
 11491  0033BE  A4D8               	btfss	status,2,c
 11492  0033C0  EFE4  F019         	goto	u4551
 11493  0033C4  EFE6  F019         	goto	u4550
 11494  0033C8                     u4551:
 11495  0033C8  EFEE  F019         	goto	l4244
 11496  0033CC                     u4550:
 11497  0033CC  0E00               	movlw	0
 11498  0033CE  6E35               	movwf	___fldiv@b^0,c
 11499  0033D0  0E00               	movlw	0
 11500  0033D2  6E36               	movwf	(___fldiv@b+1)^0,c
 11501  0033D4  0E00               	movlw	0
 11502  0033D6  6E37               	movwf	(___fldiv@b+2)^0,c
 11503  0033D8  0E00               	movlw	0
 11504  0033DA  6E38               	movwf	(___fldiv@b+3)^0,c
 11505  0033DC                     l4244:
 11506  0033DC  8E37               	bsf	(___fldiv@b+2)^0,7,c
 11507  0033DE  0E00               	movlw	0
 11508  0033E0  6E38               	movwf	(___fldiv@b+3)^0,c
 11509  0033E2  EFFB  F019         	goto	l4250
 11510  0033E6                     l4248:
 11511  0033E6  0E00               	movlw	0
 11512  0033E8  6E35               	movwf	___fldiv@b^0,c
 11513  0033EA  0E00               	movlw	0
 11514  0033EC  6E36               	movwf	(___fldiv@b+1)^0,c
 11515  0033EE  0E00               	movlw	0
 11516  0033F0  6E37               	movwf	(___fldiv@b+2)^0,c
 11517  0033F2  0E00               	movlw	0
 11518  0033F4  6E38               	movwf	(___fldiv@b+3)^0,c
 11519  0033F6                     l4250:
 11520  0033F6  503C               	movf	(___fldiv@a+3)^0,w,c
 11521  0033F8  0B80               	andlw	128
 11522  0033FA  1A45               	xorwf	___fldiv@sign^0,f,c
 11523  0033FC  503C               	movf	(___fldiv@a+3)^0,w,c
 11524  0033FE  243C               	addwf	(___fldiv@a+3)^0,w,c
 11525  003400  6E4D               	movwf	___fldiv@aexp^0,c
 11526  003402  AE3B               	btfss	(___fldiv@a+2)^0,7,c
 11527  003404  EF06  F01A         	goto	u4561
 11528  003408  EF08  F01A         	goto	u4560
 11529  00340C                     u4561:
 11530  00340C  EF09  F01A         	goto	l4258
 11531  003410                     u4560:
 11532  003410  804D               	bsf	___fldiv@aexp^0,0,c
 11533  003412                     l4258:
 11534  003412  504D               	movf	___fldiv@aexp^0,w,c
 11535  003414  B4D8               	btfsc	status,2,c
 11536  003416  EF0F  F01A         	goto	u4571
 11537  00341A  EF11  F01A         	goto	u4570
 11538  00341E                     u4571:
 11539  00341E  EF26  F01A         	goto	l4268
 11540  003422                     u4570:
 11541  003422  284D               	incf	___fldiv@aexp^0,w,c
 11542  003424  A4D8               	btfss	status,2,c
 11543  003426  EF17  F01A         	goto	u4581
 11544  00342A  EF19  F01A         	goto	u4580
 11545  00342E                     u4581:
 11546  00342E  EF21  F01A         	goto	l4264
 11547  003432                     u4580:
 11548  003432  0E00               	movlw	0
 11549  003434  6E39               	movwf	___fldiv@a^0,c
 11550  003436  0E00               	movlw	0
 11551  003438  6E3A               	movwf	(___fldiv@a+1)^0,c
 11552  00343A  0E00               	movlw	0
 11553  00343C  6E3B               	movwf	(___fldiv@a+2)^0,c
 11554  00343E  0E00               	movlw	0
 11555  003440  6E3C               	movwf	(___fldiv@a+3)^0,c
 11556  003442                     l4264:
 11557  003442  8E3B               	bsf	(___fldiv@a+2)^0,7,c
 11558  003444  0E00               	movlw	0
 11559  003446  6E3C               	movwf	(___fldiv@a+3)^0,c
 11560  003448  EF2E  F01A         	goto	l4270
 11561  00344C                     l4268:
 11562  00344C  0E00               	movlw	0
 11563  00344E  6E39               	movwf	___fldiv@a^0,c
 11564  003450  0E00               	movlw	0
 11565  003452  6E3A               	movwf	(___fldiv@a+1)^0,c
 11566  003454  0E00               	movlw	0
 11567  003456  6E3B               	movwf	(___fldiv@a+2)^0,c
 11568  003458  0E00               	movlw	0
 11569  00345A  6E3C               	movwf	(___fldiv@a+3)^0,c
 11570  00345C                     l4270:
 11571  00345C  5039               	movf	___fldiv@a^0,w,c
 11572  00345E  103A               	iorwf	(___fldiv@a+1)^0,w,c
 11573  003460  103B               	iorwf	(___fldiv@a+2)^0,w,c
 11574  003462  103C               	iorwf	(___fldiv@a+3)^0,w,c
 11575  003464  A4D8               	btfss	status,2,c
 11576  003466  EF37  F01A         	goto	u4591
 11577  00346A  EF39  F01A         	goto	u4590
 11578  00346E                     u4591:
 11579  00346E  EF51  F01A         	goto	l4282
 11580  003472                     u4590:
 11581  003472  0E00               	movlw	0
 11582  003474  6E35               	movwf	___fldiv@b^0,c
 11583  003476  0E00               	movlw	0
 11584  003478  6E36               	movwf	(___fldiv@b+1)^0,c
 11585  00347A  0E00               	movlw	0
 11586  00347C  6E37               	movwf	(___fldiv@b+2)^0,c
 11587  00347E  0E00               	movlw	0
 11588  003480  6E38               	movwf	(___fldiv@b+3)^0,c
 11589  003482  0E80               	movlw	128
 11590  003484  1237               	iorwf	(___fldiv@b+2)^0,f,c
 11591  003486  0E7F               	movlw	127
 11592  003488  1238               	iorwf	(___fldiv@b+3)^0,f,c
 11593  00348A                     l4276:
 11594  00348A  5045               	movf	___fldiv@sign^0,w,c
 11595  00348C  1238               	iorwf	(___fldiv@b+3)^0,f,c
 11596  00348E  C035  F035         	movff	___fldiv@b,?___fldiv
 11597  003492  C036  F036         	movff	___fldiv@b+1,?___fldiv+1
 11598  003496  C037  F037         	movff	___fldiv@b+2,?___fldiv+2
 11599  00349A  C038  F038         	movff	___fldiv@b+3,?___fldiv+3
 11600  00349E  EF94  F01B         	goto	l1067
 11601  0034A2                     l4282:
 11602  0034A2  504C               	movf	___fldiv@bexp^0,w,c
 11603  0034A4  A4D8               	btfss	status,2,c
 11604  0034A6  EF57  F01A         	goto	u4601
 11605  0034AA  EF59  F01A         	goto	u4600
 11606  0034AE                     u4601:
 11607  0034AE  EF63  F01A         	goto	l4290
 11608  0034B2                     u4600:
 11609  0034B2  0E00               	movlw	0
 11610  0034B4  6E35               	movwf	?___fldiv^0,c
 11611  0034B6  0E00               	movlw	0
 11612  0034B8  6E36               	movwf	(?___fldiv+1)^0,c
 11613  0034BA  0E00               	movlw	0
 11614  0034BC  6E37               	movwf	(?___fldiv+2)^0,c
 11615  0034BE  0E00               	movlw	0
 11616  0034C0  6E38               	movwf	(?___fldiv+3)^0,c
 11617  0034C2  EF94  F01B         	goto	l1067
 11618  0034C6                     l4290:
 11619  0034C6  504D               	movf	___fldiv@aexp^0,w,c
 11620  0034C8  C04C  F03D         	movff	___fldiv@bexp,??___fldiv
 11621  0034CC  6A3E               	clrf	(??___fldiv+1)^0,c
 11622  0034CE  5E3D               	subwf	??___fldiv^0,f,c
 11623  0034D0  0E00               	movlw	0
 11624  0034D2  5A3E               	subwfb	(??___fldiv+1)^0,f,c
 11625  0034D4  0E7F               	movlw	127
 11626  0034D6  243D               	addwf	??___fldiv^0,w,c
 11627  0034D8  6E46               	movwf	___fldiv@new_exp^0,c
 11628  0034DA  0E00               	movlw	0
 11629  0034DC  203E               	addwfc	(??___fldiv+1)^0,w,c
 11630  0034DE  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 11631  0034E0  C035  F041         	movff	___fldiv@b,___fldiv@rem
 11632  0034E4  C036  F042         	movff	___fldiv@b+1,___fldiv@rem+1
 11633  0034E8  C037  F043         	movff	___fldiv@b+2,___fldiv@rem+2
 11634  0034EC  C038  F044         	movff	___fldiv@b+3,___fldiv@rem+3
 11635  0034F0  0E00               	movlw	0
 11636  0034F2  6E35               	movwf	___fldiv@b^0,c
 11637  0034F4  0E00               	movlw	0
 11638  0034F6  6E36               	movwf	(___fldiv@b+1)^0,c
 11639  0034F8  0E00               	movlw	0
 11640  0034FA  6E37               	movwf	(___fldiv@b+2)^0,c
 11641  0034FC  0E00               	movlw	0
 11642  0034FE  6E38               	movwf	(___fldiv@b+3)^0,c
 11643  003500  0E00               	movlw	0
 11644  003502  6E48               	movwf	___fldiv@grs^0,c
 11645  003504  0E00               	movlw	0
 11646  003506  6E49               	movwf	(___fldiv@grs+1)^0,c
 11647  003508  0E00               	movlw	0
 11648  00350A  6E4A               	movwf	(___fldiv@grs+2)^0,c
 11649  00350C  0E00               	movlw	0
 11650  00350E  6E4B               	movwf	(___fldiv@grs+3)^0,c
 11651  003510  0E00               	movlw	0
 11652  003512  6E4D               	movwf	___fldiv@aexp^0,c
 11653  003514  EFC4  F01A         	goto	l1069
 11654  003518                     l4300:
 11655  003518  504D               	movf	___fldiv@aexp^0,w,c
 11656  00351A  B4D8               	btfsc	status,2,c
 11657  00351C  EF92  F01A         	goto	u4611
 11658  003520  EF94  F01A         	goto	u4610
 11659  003524                     u4611:
 11660  003524  EFAB  F01A         	goto	l4308
 11661  003528                     u4610:
 11662  003528  90D8               	bcf	status,0,c
 11663  00352A  3641               	rlcf	___fldiv@rem^0,f,c
 11664  00352C  3642               	rlcf	(___fldiv@rem+1)^0,f,c
 11665  00352E  3643               	rlcf	(___fldiv@rem+2)^0,f,c
 11666  003530  3644               	rlcf	(___fldiv@rem+3)^0,f,c
 11667  003532  90D8               	bcf	status,0,c
 11668  003534  3635               	rlcf	___fldiv@b^0,f,c
 11669  003536  3636               	rlcf	(___fldiv@b+1)^0,f,c
 11670  003538  3637               	rlcf	(___fldiv@b+2)^0,f,c
 11671  00353A  3638               	rlcf	(___fldiv@b+3)^0,f,c
 11672  00353C  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 11673  00353E  EFA3  F01A         	goto	u4621
 11674  003542  EFA5  F01A         	goto	u4620
 11675  003546                     u4621:
 11676  003546  EFA6  F01A         	goto	l1072
 11677  00354A                     u4620:
 11678  00354A  8035               	bsf	___fldiv@b^0,0,c
 11679  00354C                     l1072:
 11680  00354C  90D8               	bcf	status,0,c
 11681  00354E  3648               	rlcf	___fldiv@grs^0,f,c
 11682  003550  3649               	rlcf	(___fldiv@grs+1)^0,f,c
 11683  003552  364A               	rlcf	(___fldiv@grs+2)^0,f,c
 11684  003554  364B               	rlcf	(___fldiv@grs+3)^0,f,c
 11685  003556                     l4308:
 11686  003556  5039               	movf	___fldiv@a^0,w,c
 11687  003558  5C41               	subwf	___fldiv@rem^0,w,c
 11688  00355A  503A               	movf	(___fldiv@a+1)^0,w,c
 11689  00355C  5842               	subwfb	(___fldiv@rem+1)^0,w,c
 11690  00355E  503B               	movf	(___fldiv@a+2)^0,w,c
 11691  003560  5843               	subwfb	(___fldiv@rem+2)^0,w,c
 11692  003562  503C               	movf	(___fldiv@a+3)^0,w,c
 11693  003564  5844               	subwfb	(___fldiv@rem+3)^0,w,c
 11694  003566  A0D8               	btfss	status,0,c
 11695  003568  EFB8  F01A         	goto	u4631
 11696  00356C  EFBA  F01A         	goto	u4630
 11697  003570                     u4631:
 11698  003570  EFC3  F01A         	goto	l4314
 11699  003574                     u4630:
 11700  003574  8C4B               	bsf	(___fldiv@grs+3)^0,6,c
 11701  003576  5039               	movf	___fldiv@a^0,w,c
 11702  003578  5E41               	subwf	___fldiv@rem^0,f,c
 11703  00357A  503A               	movf	(___fldiv@a+1)^0,w,c
 11704  00357C  5A42               	subwfb	(___fldiv@rem+1)^0,f,c
 11705  00357E  503B               	movf	(___fldiv@a+2)^0,w,c
 11706  003580  5A43               	subwfb	(___fldiv@rem+2)^0,f,c
 11707  003582  503C               	movf	(___fldiv@a+3)^0,w,c
 11708  003584  5A44               	subwfb	(___fldiv@rem+3)^0,f,c
 11709  003586                     l4314:
 11710  003586  2A4D               	incf	___fldiv@aexp^0,f,c
 11711  003588                     l1069:
 11712  003588  0E19               	movlw	25
 11713  00358A  644D               	cpfsgt	___fldiv@aexp^0,c
 11714  00358C  EFCA  F01A         	goto	u4641
 11715  003590  EFCC  F01A         	goto	u4640
 11716  003594                     u4641:
 11717  003594  EF8C  F01A         	goto	l4300
 11718  003598                     u4640:
 11719  003598  5041               	movf	___fldiv@rem^0,w,c
 11720  00359A  1042               	iorwf	(___fldiv@rem+1)^0,w,c
 11721  00359C  1043               	iorwf	(___fldiv@rem+2)^0,w,c
 11722  00359E  1044               	iorwf	(___fldiv@rem+3)^0,w,c
 11723  0035A0  B4D8               	btfsc	status,2,c
 11724  0035A2  EFD5  F01A         	goto	u4651
 11725  0035A6  EFD7  F01A         	goto	u4650
 11726  0035AA                     u4651:
 11727  0035AA  EFEF  F01A         	goto	l4326
 11728  0035AE                     u4650:
 11729  0035AE  8048               	bsf	___fldiv@grs^0,0,c
 11730  0035B0  EFEF  F01A         	goto	l4326
 11731  0035B4                     l4320:
 11732  0035B4  90D8               	bcf	status,0,c
 11733  0035B6  3635               	rlcf	___fldiv@b^0,f,c
 11734  0035B8  3636               	rlcf	(___fldiv@b+1)^0,f,c
 11735  0035BA  3637               	rlcf	(___fldiv@b+2)^0,f,c
 11736  0035BC  3638               	rlcf	(___fldiv@b+3)^0,f,c
 11737  0035BE  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 11738  0035C0  EFE4  F01A         	goto	u4661
 11739  0035C4  EFE6  F01A         	goto	u4660
 11740  0035C8                     u4661:
 11741  0035C8  EFE7  F01A         	goto	l1078
 11742  0035CC                     u4660:
 11743  0035CC  8035               	bsf	___fldiv@b^0,0,c
 11744  0035CE                     l1078:
 11745  0035CE  90D8               	bcf	status,0,c
 11746  0035D0  3648               	rlcf	___fldiv@grs^0,f,c
 11747  0035D2  3649               	rlcf	(___fldiv@grs+1)^0,f,c
 11748  0035D4  364A               	rlcf	(___fldiv@grs+2)^0,f,c
 11749  0035D6  364B               	rlcf	(___fldiv@grs+3)^0,f,c
 11750  0035D8  0646               	decf	___fldiv@new_exp^0,f,c
 11751  0035DA  A0D8               	btfss	status,0,c
 11752  0035DC  0647               	decf	(___fldiv@new_exp+1)^0,f,c
 11753  0035DE                     l4326:
 11754  0035DE  AE37               	btfss	(___fldiv@b+2)^0,7,c
 11755  0035E0  EFF4  F01A         	goto	u4671
 11756  0035E4  EFF6  F01A         	goto	u4670
 11757  0035E8                     u4671:
 11758  0035E8  EFDA  F01A         	goto	l4320
 11759  0035EC                     u4670:
 11760  0035EC  0E00               	movlw	0
 11761  0035EE  6E4D               	movwf	___fldiv@aexp^0,c
 11762  0035F0  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 11763  0035F2  EFFD  F01A         	goto	u4681
 11764  0035F6  EFFF  F01A         	goto	u4680
 11765  0035FA                     u4681:
 11766  0035FA  EF23  F01B         	goto	l1080
 11767  0035FE                     u4680:
 11768  0035FE  0EFF               	movlw	255
 11769  003600  1448               	andwf	___fldiv@grs^0,w,c
 11770  003602  6E3D               	movwf	??___fldiv^0,c
 11771  003604  0EFF               	movlw	255
 11772  003606  1449               	andwf	(___fldiv@grs+1)^0,w,c
 11773  003608  6E3E               	movwf	(??___fldiv+1)^0,c
 11774  00360A  0EFF               	movlw	255
 11775  00360C  144A               	andwf	(___fldiv@grs+2)^0,w,c
 11776  00360E  6E3F               	movwf	(??___fldiv+2)^0,c
 11777  003610  0E7F               	movlw	127
 11778  003612  144B               	andwf	(___fldiv@grs+3)^0,w,c
 11779  003614  6E40               	movwf	(??___fldiv+3)^0,c
 11780  003616  503D               	movf	??___fldiv^0,w,c
 11781  003618  103E               	iorwf	(??___fldiv+1)^0,w,c
 11782  00361A  103F               	iorwf	(??___fldiv+2)^0,w,c
 11783  00361C  1040               	iorwf	(??___fldiv+3)^0,w,c
 11784  00361E  B4D8               	btfsc	status,2,c
 11785  003620  EF14  F01B         	goto	u4691
 11786  003624  EF16  F01B         	goto	u4690
 11787  003628                     u4691:
 11788  003628  EF1A  F01B         	goto	l1081
 11789  00362C                     u4690:
 11790  00362C                     l4334:
 11791  00362C  0E01               	movlw	1
 11792  00362E  6E4D               	movwf	___fldiv@aexp^0,c
 11793  003630  EF23  F01B         	goto	l1080
 11794  003634                     l1081:
 11795  003634  A035               	btfss	___fldiv@b^0,0,c
 11796  003636  EF1F  F01B         	goto	u4701
 11797  00363A  EF21  F01B         	goto	u4700
 11798  00363E                     u4701:
 11799  00363E  EF23  F01B         	goto	l1080
 11800  003642                     u4700:
 11801  003642  EF16  F01B         	goto	l4334
 11802  003646                     l1080:
 11803  003646  504D               	movf	___fldiv@aexp^0,w,c
 11804  003648  B4D8               	btfsc	status,2,c
 11805  00364A  EF29  F01B         	goto	u4711
 11806  00364E  EF2B  F01B         	goto	u4710
 11807  003652                     u4711:
 11808  003652  EF4F  F01B         	goto	l4346
 11809  003656                     u4710:
 11810  003656  0E01               	movlw	1
 11811  003658  2635               	addwf	___fldiv@b^0,f,c
 11812  00365A  0E00               	movlw	0
 11813  00365C  2236               	addwfc	(___fldiv@b+1)^0,f,c
 11814  00365E  2237               	addwfc	(___fldiv@b+2)^0,f,c
 11815  003660  2238               	addwfc	(___fldiv@b+3)^0,f,c
 11816  003662  A038               	btfss	(___fldiv@b+3)^0,0,c
 11817  003664  EF36  F01B         	goto	u4721
 11818  003668  EF38  F01B         	goto	u4720
 11819  00366C                     u4721:
 11820  00366C  EF4F  F01B         	goto	l4346
 11821  003670                     u4720:
 11822  003670  C035  F03D         	movff	___fldiv@b,??___fldiv
 11823  003674  C036  F03E         	movff	___fldiv@b+1,??___fldiv+1
 11824  003678  C037  F03F         	movff	___fldiv@b+2,??___fldiv+2
 11825  00367C  C038  F040         	movff	___fldiv@b+3,??___fldiv+3
 11826  003680  3440               	rlcf	(??___fldiv+3)^0,w,c
 11827  003682  3240               	rrcf	(??___fldiv+3)^0,f,c
 11828  003684  323F               	rrcf	(??___fldiv+2)^0,f,c
 11829  003686  323E               	rrcf	(??___fldiv+1)^0,f,c
 11830  003688  323D               	rrcf	??___fldiv^0,f,c
 11831  00368A  C03D  F035         	movff	??___fldiv,___fldiv@b
 11832  00368E  C03E  F036         	movff	??___fldiv+1,___fldiv@b+1
 11833  003692  C03F  F037         	movff	??___fldiv+2,___fldiv@b+2
 11834  003696  C040  F038         	movff	??___fldiv+3,___fldiv@b+3
 11835  00369A  4A46               	infsnz	___fldiv@new_exp^0,f,c
 11836  00369C  2A47               	incf	(___fldiv@new_exp+1)^0,f,c
 11837  00369E                     l4346:
 11838  00369E  BE47               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11839  0036A0  EF5A  F01B         	goto	u4731
 11840  0036A4  5047               	movf	(___fldiv@new_exp+1)^0,w,c
 11841  0036A6  E108               	bnz	u4730
 11842  0036A8  2846               	incf	___fldiv@new_exp^0,w,c
 11843  0036AA  A0D8               	btfss	status,0,c
 11844  0036AC  EF5A  F01B         	goto	u4731
 11845  0036B0  EF5C  F01B         	goto	u4730
 11846  0036B4                     u4731:
 11847  0036B4  EF67  F01B         	goto	l4350
 11848  0036B8                     u4730:
 11849  0036B8  0E00               	movlw	0
 11850  0036BA  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 11851  0036BC  6846               	setf	___fldiv@new_exp^0,c
 11852  0036BE  0E00               	movlw	0
 11853  0036C0  6E35               	movwf	___fldiv@b^0,c
 11854  0036C2  0E00               	movlw	0
 11855  0036C4  6E36               	movwf	(___fldiv@b+1)^0,c
 11856  0036C6  0E00               	movlw	0
 11857  0036C8  6E37               	movwf	(___fldiv@b+2)^0,c
 11858  0036CA  0E00               	movlw	0
 11859  0036CC  6E38               	movwf	(___fldiv@b+3)^0,c
 11860  0036CE                     l4350:
 11861  0036CE  BE47               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11862  0036D0  EF74  F01B         	goto	u4740
 11863  0036D4  5047               	movf	(___fldiv@new_exp+1)^0,w,c
 11864  0036D6  E106               	bnz	u4741
 11865  0036D8  0446               	decf	___fldiv@new_exp^0,w,c
 11866  0036DA  B0D8               	btfsc	status,0,c
 11867  0036DC  EF72  F01B         	goto	u4741
 11868  0036E0  EF74  F01B         	goto	u4740
 11869  0036E4                     u4741:
 11870  0036E4  EF82  F01B         	goto	l4354
 11871  0036E8                     u4740:
 11872  0036E8  0E00               	movlw	0
 11873  0036EA  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 11874  0036EC  0E00               	movlw	0
 11875  0036EE  6E46               	movwf	___fldiv@new_exp^0,c
 11876  0036F0  0E00               	movlw	0
 11877  0036F2  6E35               	movwf	___fldiv@b^0,c
 11878  0036F4  0E00               	movlw	0
 11879  0036F6  6E36               	movwf	(___fldiv@b+1)^0,c
 11880  0036F8  0E00               	movlw	0
 11881  0036FA  6E37               	movwf	(___fldiv@b+2)^0,c
 11882  0036FC  0E00               	movlw	0
 11883  0036FE  6E38               	movwf	(___fldiv@b+3)^0,c
 11884  003700  0E00               	movlw	0
 11885  003702  6E45               	movwf	___fldiv@sign^0,c
 11886  003704                     l4354:
 11887  003704  C046  F04C         	movff	___fldiv@new_exp,___fldiv@bexp
 11888  003708  A04C               	btfss	___fldiv@bexp^0,0,c
 11889  00370A  EF89  F01B         	goto	u4751
 11890  00370E  EF8B  F01B         	goto	u4750
 11891  003712                     u4751:
 11892  003712  EF8E  F01B         	goto	l4360
 11893  003716                     u4750:
 11894  003716  8E37               	bsf	(___fldiv@b+2)^0,7,c
 11895  003718  EF8F  F01B         	goto	l4362
 11896  00371C                     l4360:
 11897  00371C  9E37               	bcf	(___fldiv@b+2)^0,7,c
 11898  00371E                     l4362:
 11899  00371E  90D8               	bcf	status,0,c
 11900  003720  304C               	rrcf	___fldiv@bexp^0,w,c
 11901  003722  6E38               	movwf	(___fldiv@b+3)^0,c
 11902  003724  EF45  F01A         	goto	l4276
 11903  003728                     l1067:
 11904  003728  0012               	return		;funcret
 11905  00372A                     __end_of___fldiv:
 11906                           	callstack 0
 11907                           
 11908 ;; *************** function ___awmod *****************
 11909 ;; Defined at:
 11910 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
 11911 ;; Parameters:    Size  Location     Type
 11912 ;;  dividend        2    0[COMRAM] int 
 11913 ;;  divisor         2    2[COMRAM] int 
 11914 ;; Auto vars:     Size  Location     Type
 11915 ;;  sign            1    5[COMRAM] unsigned char 
 11916 ;;  counter         1    4[COMRAM] unsigned char 
 11917 ;; Return value:  Size  Location     Type
 11918 ;;                  2    0[COMRAM] int 
 11919 ;; Registers used:
 11920 ;;		wreg, status,2, status,0
 11921 ;; Tracked objects:
 11922 ;;		On entry : 0/0
 11923 ;;		On exit  : 0/0
 11924 ;;		Unchanged: 0/0
 11925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11926 ;;      Params:         4       0       0       0       0       0       0
 11927 ;;      Locals:         2       0       0       0       0       0       0
 11928 ;;      Temps:          0       0       0       0       0       0       0
 11929 ;;      Totals:         6       0       0       0       0       0       0
 11930 ;;Total ram usage:        6 bytes
 11931 ;; Hardware stack levels used:    1
 11932 ;; Hardware stack levels required when called:    1
 11933 ;; This function calls:
 11934 ;;		Nothing
 11935 ;; This function is called by:
 11936 ;;		_efgtoa
 11937 ;; This function uses a non-reentrant model
 11938 ;;
 11939                           
 11940                           	psect	text37
 11941  0050E8                     __ptext37:
 11942                           	callstack 0
 11943  0050E8                     ___awmod:
 11944                           	callstack 23
 11945  0050E8  0E00               	movlw	0
 11946  0050EA  6E06               	movwf	___awmod@sign^0,c
 11947  0050EC  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
 11948  0050EE  EF7D  F028         	goto	u5010
 11949  0050F2  EF7B  F028         	goto	u5011
 11950  0050F6                     u5011:
 11951  0050F6  EF83  F028         	goto	l4558
 11952  0050FA                     u5010:
 11953  0050FA  6C01               	negf	___awmod@dividend^0,c
 11954  0050FC  1E02               	comf	(___awmod@dividend+1)^0,f,c
 11955  0050FE  B0D8               	btfsc	status,0,c
 11956  005100  2A02               	incf	(___awmod@dividend+1)^0,f,c
 11957  005102  0E01               	movlw	1
 11958  005104  6E06               	movwf	___awmod@sign^0,c
 11959  005106                     l4558:
 11960  005106  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
 11961  005108  EF8A  F028         	goto	u5020
 11962  00510C  EF88  F028         	goto	u5021
 11963  005110                     u5021:
 11964  005110  EF8E  F028         	goto	l4562
 11965  005114                     u5020:
 11966  005114  6C03               	negf	___awmod@divisor^0,c
 11967  005116  1E04               	comf	(___awmod@divisor+1)^0,f,c
 11968  005118  B0D8               	btfsc	status,0,c
 11969  00511A  2A04               	incf	(___awmod@divisor+1)^0,f,c
 11970  00511C                     l4562:
 11971  00511C  5003               	movf	___awmod@divisor^0,w,c
 11972  00511E  1004               	iorwf	(___awmod@divisor+1)^0,w,c
 11973  005120  B4D8               	btfsc	status,2,c
 11974  005122  EF95  F028         	goto	u5031
 11975  005126  EF97  F028         	goto	u5030
 11976  00512A                     u5031:
 11977  00512A  EFBB  F028         	goto	l4578
 11978  00512E                     u5030:
 11979  00512E  0E01               	movlw	1
 11980  005130  6E05               	movwf	___awmod@counter^0,c
 11981  005132  EF9F  F028         	goto	l4568
 11982  005136                     l4566:
 11983  005136  90D8               	bcf	status,0,c
 11984  005138  3603               	rlcf	___awmod@divisor^0,f,c
 11985  00513A  3604               	rlcf	(___awmod@divisor+1)^0,f,c
 11986  00513C  2A05               	incf	___awmod@counter^0,f,c
 11987  00513E                     l4568:
 11988  00513E  AE04               	btfss	(___awmod@divisor+1)^0,7,c
 11989  005140  EFA4  F028         	goto	u5041
 11990  005144  EFA6  F028         	goto	u5040
 11991  005148                     u5041:
 11992  005148  EF9B  F028         	goto	l4566
 11993  00514C                     u5040:
 11994  00514C                     l4570:
 11995  00514C  5003               	movf	___awmod@divisor^0,w,c
 11996  00514E  5C01               	subwf	___awmod@dividend^0,w,c
 11997  005150  5004               	movf	(___awmod@divisor+1)^0,w,c
 11998  005152  5802               	subwfb	(___awmod@dividend+1)^0,w,c
 11999  005154  A0D8               	btfss	status,0,c
 12000  005156  EFAF  F028         	goto	u5051
 12001  00515A  EFB1  F028         	goto	u5050
 12002  00515E                     u5051:
 12003  00515E  EFB5  F028         	goto	l4574
 12004  005162                     u5050:
 12005  005162  5003               	movf	___awmod@divisor^0,w,c
 12006  005164  5E01               	subwf	___awmod@dividend^0,f,c
 12007  005166  5004               	movf	(___awmod@divisor+1)^0,w,c
 12008  005168  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
 12009  00516A                     l4574:
 12010  00516A  90D8               	bcf	status,0,c
 12011  00516C  3204               	rrcf	(___awmod@divisor+1)^0,f,c
 12012  00516E  3203               	rrcf	___awmod@divisor^0,f,c
 12013  005170  2E05               	decfsz	___awmod@counter^0,f,c
 12014  005172  EFA6  F028         	goto	l4570
 12015  005176                     l4578:
 12016  005176  5006               	movf	___awmod@sign^0,w,c
 12017  005178  B4D8               	btfsc	status,2,c
 12018  00517A  EFC1  F028         	goto	u5061
 12019  00517E  EFC3  F028         	goto	u5060
 12020  005182                     u5061:
 12021  005182  EFC7  F028         	goto	l4582
 12022  005186                     u5060:
 12023  005186  6C01               	negf	___awmod@dividend^0,c
 12024  005188  1E02               	comf	(___awmod@dividend+1)^0,f,c
 12025  00518A  B0D8               	btfsc	status,0,c
 12026  00518C  2A02               	incf	(___awmod@dividend+1)^0,f,c
 12027  00518E                     l4582:
 12028  00518E  C001  F001         	movff	___awmod@dividend,?___awmod
 12029  005192  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
 12030  005196  0012               	return		;funcret
 12031  005198                     __end_of___awmod:
 12032                           	callstack 0
 12033                           
 12034 ;; *************** function ___awdiv *****************
 12035 ;; Defined at:
 12036 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
 12037 ;; Parameters:    Size  Location     Type
 12038 ;;  dividend        2    0[COMRAM] int 
 12039 ;;  divisor         2    2[COMRAM] int 
 12040 ;; Auto vars:     Size  Location     Type
 12041 ;;  quotient        2    6[COMRAM] int 
 12042 ;;  sign            1    5[COMRAM] unsigned char 
 12043 ;;  counter         1    4[COMRAM] unsigned char 
 12044 ;; Return value:  Size  Location     Type
 12045 ;;                  2    0[COMRAM] int 
 12046 ;; Registers used:
 12047 ;;		wreg, status,2, status,0
 12048 ;; Tracked objects:
 12049 ;;		On entry : 0/0
 12050 ;;		On exit  : 0/0
 12051 ;;		Unchanged: 0/0
 12052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12053 ;;      Params:         4       0       0       0       0       0       0
 12054 ;;      Locals:         4       0       0       0       0       0       0
 12055 ;;      Temps:          0       0       0       0       0       0       0
 12056 ;;      Totals:         8       0       0       0       0       0       0
 12057 ;;Total ram usage:        8 bytes
 12058 ;; Hardware stack levels used:    1
 12059 ;; Hardware stack levels required when called:    1
 12060 ;; This function calls:
 12061 ;;		Nothing
 12062 ;; This function is called by:
 12063 ;;		_efgtoa
 12064 ;; This function uses a non-reentrant model
 12065 ;;
 12066                           
 12067                           	psect	text38
 12068  005024                     __ptext38:
 12069                           	callstack 0
 12070  005024                     ___awdiv:
 12071                           	callstack 23
 12072  005024  0E00               	movlw	0
 12073  005026  6E06               	movwf	___awdiv@sign^0,c
 12074  005028  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 12075  00502A  EF1B  F028         	goto	u4950
 12076  00502E  EF19  F028         	goto	u4951
 12077  005032                     u4951:
 12078  005032  EF21  F028         	goto	l4514
 12079  005036                     u4950:
 12080  005036  6C03               	negf	___awdiv@divisor^0,c
 12081  005038  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 12082  00503A  B0D8               	btfsc	status,0,c
 12083  00503C  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 12084  00503E  0E01               	movlw	1
 12085  005040  6E06               	movwf	___awdiv@sign^0,c
 12086  005042                     l4514:
 12087  005042  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 12088  005044  EF28  F028         	goto	u4960
 12089  005048  EF26  F028         	goto	u4961
 12090  00504C                     u4961:
 12091  00504C  EF2E  F028         	goto	l4520
 12092  005050                     u4960:
 12093  005050  6C01               	negf	___awdiv@dividend^0,c
 12094  005052  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 12095  005054  B0D8               	btfsc	status,0,c
 12096  005056  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 12097  005058  0E01               	movlw	1
 12098  00505A  1A06               	xorwf	___awdiv@sign^0,f,c
 12099  00505C                     l4520:
 12100  00505C  0E00               	movlw	0
 12101  00505E  6E08               	movwf	(___awdiv@quotient+1)^0,c
 12102  005060  0E00               	movlw	0
 12103  005062  6E07               	movwf	___awdiv@quotient^0,c
 12104  005064  5003               	movf	___awdiv@divisor^0,w,c
 12105  005066  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 12106  005068  B4D8               	btfsc	status,2,c
 12107  00506A  EF39  F028         	goto	u4971
 12108  00506E  EF3B  F028         	goto	u4970
 12109  005072                     u4971:
 12110  005072  EF63  F028         	goto	l4542
 12111  005076                     u4970:
 12112  005076  0E01               	movlw	1
 12113  005078  6E05               	movwf	___awdiv@counter^0,c
 12114  00507A  EF43  F028         	goto	l4528
 12115  00507E                     l4526:
 12116  00507E  90D8               	bcf	status,0,c
 12117  005080  3603               	rlcf	___awdiv@divisor^0,f,c
 12118  005082  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 12119  005084  2A05               	incf	___awdiv@counter^0,f,c
 12120  005086                     l4528:
 12121  005086  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 12122  005088  EF48  F028         	goto	u4981
 12123  00508C  EF4A  F028         	goto	u4980
 12124  005090                     u4981:
 12125  005090  EF3F  F028         	goto	l4526
 12126  005094                     u4980:
 12127  005094                     l4530:
 12128  005094  90D8               	bcf	status,0,c
 12129  005096  3607               	rlcf	___awdiv@quotient^0,f,c
 12130  005098  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 12131  00509A  5003               	movf	___awdiv@divisor^0,w,c
 12132  00509C  5C01               	subwf	___awdiv@dividend^0,w,c
 12133  00509E  5004               	movf	(___awdiv@divisor+1)^0,w,c
 12134  0050A0  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 12135  0050A2  A0D8               	btfss	status,0,c
 12136  0050A4  EF56  F028         	goto	u4991
 12137  0050A8  EF58  F028         	goto	u4990
 12138  0050AC                     u4991:
 12139  0050AC  EF5D  F028         	goto	l4538
 12140  0050B0                     u4990:
 12141  0050B0  5003               	movf	___awdiv@divisor^0,w,c
 12142  0050B2  5E01               	subwf	___awdiv@dividend^0,f,c
 12143  0050B4  5004               	movf	(___awdiv@divisor+1)^0,w,c
 12144  0050B6  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 12145  0050B8  8007               	bsf	___awdiv@quotient^0,0,c
 12146  0050BA                     l4538:
 12147  0050BA  90D8               	bcf	status,0,c
 12148  0050BC  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 12149  0050BE  3203               	rrcf	___awdiv@divisor^0,f,c
 12150  0050C0  2E05               	decfsz	___awdiv@counter^0,f,c
 12151  0050C2  EF4A  F028         	goto	l4530
 12152  0050C6                     l4542:
 12153  0050C6  5006               	movf	___awdiv@sign^0,w,c
 12154  0050C8  B4D8               	btfsc	status,2,c
 12155  0050CA  EF69  F028         	goto	u5001
 12156  0050CE  EF6B  F028         	goto	u5000
 12157  0050D2                     u5001:
 12158  0050D2  EF6F  F028         	goto	l4546
 12159  0050D6                     u5000:
 12160  0050D6  6C07               	negf	___awdiv@quotient^0,c
 12161  0050D8  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 12162  0050DA  B0D8               	btfsc	status,0,c
 12163  0050DC  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 12164  0050DE                     l4546:
 12165  0050DE  C007  F001         	movff	___awdiv@quotient,?___awdiv
 12166  0050E2  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 12167  0050E6  0012               	return		;funcret
 12168  0050E8                     __end_of___awdiv:
 12169                           	callstack 0
 12170                           
 12171 ;; *************** function _dtoa *****************
 12172 ;; Defined at:
 12173 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 12174 ;; Parameters:    Size  Location     Type
 12175 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
 12176 ;;		 -> sprintf@f(6), 
 12177 ;;  d               8   29[COMRAM] long long 
 12178 ;; Auto vars:     Size  Location     Type
 12179 ;;  n               8   53[COMRAM] long long 
 12180 ;;  i               2   61[COMRAM] int 
 12181 ;;  s               2   51[COMRAM] int 
 12182 ;;  w               2   49[COMRAM] int 
 12183 ;;  p               2   47[COMRAM] int 
 12184 ;; Return value:  Size  Location     Type
 12185 ;;                  2   27[COMRAM] int 
 12186 ;; Registers used:
 12187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12188 ;; Tracked objects:
 12189 ;;		On entry : 0/0
 12190 ;;		On exit  : 0/0
 12191 ;;		Unchanged: 0/0
 12192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12193 ;;      Params:        10       0       0       0       0       0       0
 12194 ;;      Locals:        18       0       0       0       0       0       0
 12195 ;;      Temps:          8       0       0       0       0       0       0
 12196 ;;      Totals:        36       0       0       0       0       0       0
 12197 ;;Total ram usage:       36 bytes
 12198 ;; Hardware stack levels used:    1
 12199 ;; Hardware stack levels required when called:    5
 12200 ;; This function calls:
 12201 ;;		___aodiv
 12202 ;;		___aomod
 12203 ;;		_abs
 12204 ;;		_pad
 12205 ;; This function is called by:
 12206 ;;		_vfpfcnvrt
 12207 ;; This function uses a non-reentrant model
 12208 ;;
 12209                           
 12210                           	psect	text39
 12211  003A10                     __ptext39:
 12212                           	callstack 0
 12213  003A10                     _dtoa:
 12214                           	callstack 20
 12215  003A10                     
 12216                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
 12217  003A10  C01E  F036         	movff	dtoa@d,dtoa@n
 12218  003A14  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
 12219  003A18  C020  F038         	movff	dtoa@d+2,dtoa@n+2
 12220  003A1C  C021  F039         	movff	dtoa@d+3,dtoa@n+3
 12221  003A20  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
 12222  003A24  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
 12223  003A28  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
 12224  003A2C  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
 12225  003A30                     
 12226                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
 12227  003A30  BE3D               	btfsc	(dtoa@n+7)^0,7,c
 12228  003A32  EF1D  F01D         	goto	u5541
 12229  003A36  EF20  F01D         	goto	u5540
 12230  003A3A                     u5541:
 12231  003A3A  0E01               	movlw	1
 12232  003A3C  EF21  F01D         	goto	u5550
 12233  003A40                     u5540:
 12234  003A40  0E00               	movlw	0
 12235  003A42                     u5550:
 12236  003A42  6E34               	movwf	dtoa@s^0,c
 12237  003A44  6A35               	clrf	(dtoa@s+1)^0,c
 12238                           
 12239                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
 12240  003A46  5034               	movf	dtoa@s^0,w,c
 12241  003A48  1035               	iorwf	(dtoa@s+1)^0,w,c
 12242  003A4A  B4D8               	btfsc	status,2,c
 12243  003A4C  EF2A  F01D         	goto	u5561
 12244  003A50  EF2C  F01D         	goto	u5560
 12245  003A54                     u5561:
 12246  003A54  EF3C  F01D         	goto	l4788
 12247  003A58                     u5560:
 12248  003A58                     
 12249                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
 12250  003A58  1E3D               	comf	(dtoa@n+7)^0,f,c
 12251  003A5A  1E3C               	comf	(dtoa@n+6)^0,f,c
 12252  003A5C  1E3B               	comf	(dtoa@n+5)^0,f,c
 12253  003A5E  1E3A               	comf	(dtoa@n+4)^0,f,c
 12254  003A60  1E39               	comf	(dtoa@n+3)^0,f,c
 12255  003A62  1E38               	comf	(dtoa@n+2)^0,f,c
 12256  003A64  1E37               	comf	(dtoa@n+1)^0,f,c
 12257  003A66  6C36               	negf	dtoa@n^0,c
 12258  003A68  0E00               	movlw	0
 12259  003A6A  2237               	addwfc	(dtoa@n+1)^0,f,c
 12260  003A6C  2238               	addwfc	(dtoa@n+2)^0,f,c
 12261  003A6E  2239               	addwfc	(dtoa@n+3)^0,f,c
 12262  003A70  223A               	addwfc	(dtoa@n+4)^0,f,c
 12263  003A72  223B               	addwfc	(dtoa@n+5)^0,f,c
 12264  003A74  223C               	addwfc	(dtoa@n+6)^0,f,c
 12265  003A76  223D               	addwfc	(dtoa@n+7)^0,f,c
 12266  003A78                     l4788:
 12267                           
 12268                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
 12269  003A78  0100               	movlb	0	; () banked
 12270  003A7A  BFF7               	btfsc	(_prec+1)& (0+255),7,b
 12271  003A7C  EF42  F01D         	goto	u5571
 12272  003A80  EF44  F01D         	goto	u5570
 12273  003A84                     u5571:
 12274  003A84  EF45  F01D         	goto	l4792
 12275  003A88                     u5570:
 12276  003A88                     
 12277                           ; BSR set to: 0
 12278                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
 12279  003A88  93F8               	bcf	_flags& (0+255),1,b
 12280  003A8A                     l4792:
 12281                           
 12282                           ; BSR set to: 0
 12283                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
 12284  003A8A  BFF7               	btfsc	(_prec+1)& (0+255),7,b
 12285  003A8C  EF52  F01D         	goto	u5580
 12286  003A90  51F7               	movf	(_prec+1)& (0+255),w,b
 12287  003A92  E106               	bnz	u5581
 12288  003A94  05F6               	decf	_prec& (0+255),w,b
 12289  003A96  B0D8               	btfsc	status,0,c
 12290  003A98  EF50  F01D         	goto	u5581
 12291  003A9C  EF52  F01D         	goto	u5580
 12292  003AA0                     u5581:
 12293  003AA0  EF58  F01D         	goto	l1222
 12294  003AA4                     u5580:
 12295  003AA4                     
 12296                           ; BSR set to: 0
 12297  003AA4  0E00               	movlw	0
 12298  003AA6  6E31               	movwf	(dtoa@p+1)^0,c
 12299  003AA8  0E01               	movlw	1
 12300  003AAA  6E30               	movwf	dtoa@p^0,c
 12301  003AAC  EF5C  F01D         	goto	l1224
 12302  003AB0                     l1222:
 12303                           
 12304                           ; BSR set to: 0
 12305  003AB0  C0F6  F030         	movff	_prec,dtoa@p
 12306  003AB4  C0F7  F031         	movff	_prec+1,dtoa@p+1
 12307  003AB8                     l1224:
 12308                           
 12309                           ; BSR set to: 0
 12310                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
 12311  003AB8  C1B1  F032         	movff	_width,dtoa@w
 12312  003ABC  C1B2  F033         	movff	_width+1,dtoa@w+1
 12313  003AC0                     
 12314                           ; BSR set to: 0
 12315                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
 12316  003AC0  5034               	movf	dtoa@s^0,w,c
 12317  003AC2  1035               	iorwf	(dtoa@s+1)^0,w,c
 12318  003AC4  A4D8               	btfss	status,2,c
 12319  003AC6  EF67  F01D         	goto	u5591
 12320  003ACA  EF69  F01D         	goto	u5590
 12321  003ACE                     u5591:
 12322  003ACE  EF70  F01D         	goto	l4800
 12323  003AD2                     u5590:
 12324  003AD2                     
 12325                           ; BSR set to: 0
 12326  003AD2  A5F8               	btfss	_flags& (0+255),2,b
 12327  003AD4  EF6E  F01D         	goto	u5601
 12328  003AD8  EF70  F01D         	goto	u5600
 12329  003ADC                     u5601:
 12330  003ADC  EF73  F01D         	goto	l4802
 12331  003AE0                     u5600:
 12332  003AE0                     l4800:
 12333                           
 12334                           ; BSR set to: 0
 12335                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
 12336  003AE0  0632               	decf	dtoa@w^0,f,c
 12337  003AE2  A0D8               	btfss	status,0,c
 12338  003AE4  0633               	decf	(dtoa@w+1)^0,f,c
 12339  003AE6                     l4802:
 12340                           
 12341                           ; BSR set to: 0
 12342                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
 12343  003AE6  0E00               	movlw	0
 12344  003AE8  6E3F               	movwf	(dtoa@i+1)^0,c
 12345  003AEA  0E4F               	movlw	79
 12346  003AEC  6E3E               	movwf	dtoa@i^0,c
 12347  003AEE                     
 12348                           ; BSR set to: 0
 12349                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
 12350  003AEE  0E00               	movlw	0
 12351  003AF0  0102               	movlb	2	; () banked
 12352  003AF2  6F4F               	movwf	(_dbuf+79)& (0+255),b
 12353                           
 12354                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12355  003AF4  EFF8  F01D         	goto	l4816
 12356  003AF8                     l4806:
 12357                           
 12358                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
 12359  003AF8  063E               	decf	dtoa@i^0,f,c
 12360  003AFA  A0D8               	btfss	status,0,c
 12361  003AFC  063F               	decf	(dtoa@i+1)^0,f,c
 12362  003AFE                     
 12363                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
 12364  003AFE  0E00               	movlw	low _dbuf
 12365  003B00  243E               	addwf	dtoa@i^0,w,c
 12366  003B02  6ED9               	movwf	fsr2l,c
 12367  003B04  0E02               	movlw	high _dbuf
 12368  003B06  203F               	addwfc	(dtoa@i+1)^0,w,c
 12369  003B08  6EDA               	movwf	fsr2h,c
 12370  003B0A  C036  F001         	movff	dtoa@n,___aomod@dividend
 12371  003B0E  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
 12372  003B12  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
 12373  003B16  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
 12374  003B1A  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
 12375  003B1E  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
 12376  003B22  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
 12377  003B26  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
 12378  003B2A  0E0A               	movlw	10
 12379  003B2C  6E09               	movwf	___aomod@divisor^0,c
 12380  003B2E  0E00               	movlw	0
 12381  003B30  6E0A               	movwf	(___aomod@divisor+1)^0,c
 12382  003B32  0E00               	movlw	0
 12383  003B34  6E0B               	movwf	(___aomod@divisor+2)^0,c
 12384  003B36  0E00               	movlw	0
 12385  003B38  6E0C               	movwf	(___aomod@divisor+3)^0,c
 12386  003B3A  0E00               	movlw	0
 12387  003B3C  6E0D               	movwf	(___aomod@divisor+4)^0,c
 12388  003B3E  0E00               	movlw	0
 12389  003B40  6E0E               	movwf	(___aomod@divisor+5)^0,c
 12390  003B42  0E00               	movlw	0
 12391  003B44  6E0F               	movwf	(___aomod@divisor+6)^0,c
 12392  003B46  0E00               	movlw	0
 12393  003B48  6E10               	movwf	(___aomod@divisor+7)^0,c
 12394  003B4A  ECB0  F023         	call	___aomod	;wreg free
 12395  003B4E  C001  F026         	movff	?___aomod,??_dtoa
 12396  003B52  C002  F027         	movff	?___aomod+1,??_dtoa+1
 12397  003B56  C003  F028         	movff	?___aomod+2,??_dtoa+2
 12398  003B5A  C004  F029         	movff	?___aomod+3,??_dtoa+3
 12399  003B5E  C005  F02A         	movff	?___aomod+4,??_dtoa+4
 12400  003B62  C006  F02B         	movff	?___aomod+5,??_dtoa+5
 12401  003B66  C007  F02C         	movff	?___aomod+6,??_dtoa+6
 12402  003B6A  C008  F02D         	movff	?___aomod+7,??_dtoa+7
 12403  003B6E  C026  F013         	movff	??_dtoa,abs@a
 12404  003B72  C028  F014         	movff	??_dtoa+2,abs@a+1
 12405  003B76  ECBC  F02C         	call	_abs	;wreg free
 12406  003B7A  5013               	movf	?_abs^0,w,c
 12407  003B7C  0F30               	addlw	48
 12408  003B7E  6EDF               	movwf	indf2,c
 12409  003B80                     
 12410                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
 12411  003B80  0630               	decf	dtoa@p^0,f,c
 12412  003B82  A0D8               	btfss	status,0,c
 12413  003B84  0631               	decf	(dtoa@p+1)^0,f,c
 12414  003B86                     
 12415                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
 12416  003B86  0632               	decf	dtoa@w^0,f,c
 12417  003B88  A0D8               	btfss	status,0,c
 12418  003B8A  0633               	decf	(dtoa@w+1)^0,f,c
 12419  003B8C                     
 12420                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
 12421  003B8C  C036  F001         	movff	dtoa@n,___aodiv@dividend
 12422  003B90  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
 12423  003B94  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
 12424  003B98  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
 12425  003B9C  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
 12426  003BA0  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
 12427  003BA4  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
 12428  003BA8  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
 12429  003BAC  0E0A               	movlw	10
 12430  003BAE  6E09               	movwf	___aodiv@divisor^0,c
 12431  003BB0  0E00               	movlw	0
 12432  003BB2  6E0A               	movwf	(___aodiv@divisor+1)^0,c
 12433  003BB4  0E00               	movlw	0
 12434  003BB6  6E0B               	movwf	(___aodiv@divisor+2)^0,c
 12435  003BB8  0E00               	movlw	0
 12436  003BBA  6E0C               	movwf	(___aodiv@divisor+3)^0,c
 12437  003BBC  0E00               	movlw	0
 12438  003BBE  6E0D               	movwf	(___aodiv@divisor+4)^0,c
 12439  003BC0  0E00               	movlw	0
 12440  003BC2  6E0E               	movwf	(___aodiv@divisor+5)^0,c
 12441  003BC4  0E00               	movlw	0
 12442  003BC6  6E0F               	movwf	(___aodiv@divisor+6)^0,c
 12443  003BC8  0E00               	movlw	0
 12444  003BCA  6E10               	movwf	(___aodiv@divisor+7)^0,c
 12445  003BCC  ECEC  F022         	call	___aodiv	;wreg free
 12446  003BD0  C001  F036         	movff	?___aodiv,dtoa@n
 12447  003BD4  C002  F037         	movff	?___aodiv+1,dtoa@n+1
 12448  003BD8  C003  F038         	movff	?___aodiv+2,dtoa@n+2
 12449  003BDC  C004  F039         	movff	?___aodiv+3,dtoa@n+3
 12450  003BE0  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
 12451  003BE4  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
 12452  003BE8  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
 12453  003BEC  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
 12454  003BF0                     l4816:
 12455                           
 12456                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12457  003BF0  BE3F               	btfsc	(dtoa@i+1)^0,7,c
 12458  003BF2  EF03  F01E         	goto	u5611
 12459  003BF6  503F               	movf	(dtoa@i+1)^0,w,c
 12460  003BF8  E108               	bnz	u5610
 12461  003BFA  043E               	decf	dtoa@i^0,w,c
 12462  003BFC  A0D8               	btfss	status,0,c
 12463  003BFE  EF03  F01E         	goto	u5611
 12464  003C02  EF05  F01E         	goto	u5610
 12465  003C06                     u5611:
 12466  003C06  EF36  F01E         	goto	l4826
 12467  003C0A                     u5610:
 12468  003C0A  5036               	movf	dtoa@n^0,w,c
 12469  003C0C  1037               	iorwf	(dtoa@n+1)^0,w,c
 12470  003C0E  1038               	iorwf	(dtoa@n+2)^0,w,c
 12471  003C10  1039               	iorwf	(dtoa@n+3)^0,w,c
 12472  003C12  103A               	iorwf	(dtoa@n+4)^0,w,c
 12473  003C14  103B               	iorwf	(dtoa@n+5)^0,w,c
 12474  003C16  103C               	iorwf	(dtoa@n+6)^0,w,c
 12475  003C18  103D               	iorwf	(dtoa@n+7)^0,w,c
 12476  003C1A  A4D8               	btfss	status,2,c
 12477  003C1C  EF12  F01E         	goto	u5621
 12478  003C20  EF14  F01E         	goto	u5620
 12479  003C24                     u5621:
 12480  003C24  EF7C  F01D         	goto	l4806
 12481  003C28                     u5620:
 12482  003C28  BE31               	btfsc	(dtoa@p+1)^0,7,c
 12483  003C2A  EF21  F01E         	goto	u5630
 12484  003C2E  5031               	movf	(dtoa@p+1)^0,w,c
 12485  003C30  E106               	bnz	u5631
 12486  003C32  0430               	decf	dtoa@p^0,w,c
 12487  003C34  B0D8               	btfsc	status,0,c
 12488  003C36  EF1F  F01E         	goto	u5631
 12489  003C3A  EF21  F01E         	goto	u5630
 12490  003C3E                     u5631:
 12491  003C3E  EF7C  F01D         	goto	l4806
 12492  003C42                     u5630:
 12493  003C42  BE33               	btfsc	(dtoa@w+1)^0,7,c
 12494  003C44  EF2C  F01E         	goto	u5641
 12495  003C48  5033               	movf	(dtoa@w+1)^0,w,c
 12496  003C4A  E108               	bnz	u5640
 12497  003C4C  0432               	decf	dtoa@w^0,w,c
 12498  003C4E  A0D8               	btfss	status,0,c
 12499  003C50  EF2C  F01E         	goto	u5641
 12500  003C54  EF2E  F01E         	goto	u5640
 12501  003C58                     u5641:
 12502  003C58  EF36  F01E         	goto	l4826
 12503  003C5C                     u5640:
 12504  003C5C  0100               	movlb	0	; () banked
 12505  003C5E  B3F8               	btfsc	_flags& (0+255),1,b
 12506  003C60  EF34  F01E         	goto	u5651
 12507  003C64  EF36  F01E         	goto	u5650
 12508  003C68                     u5651:
 12509  003C68  EF7C  F01D         	goto	l4806
 12510  003C6C                     u5650:
 12511  003C6C                     l4826:
 12512                           
 12513                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
 12514  003C6C  5034               	movf	dtoa@s^0,w,c
 12515  003C6E  1035               	iorwf	(dtoa@s+1)^0,w,c
 12516  003C70  A4D8               	btfss	status,2,c
 12517  003C72  EF3D  F01E         	goto	u5661
 12518  003C76  EF3F  F01E         	goto	u5660
 12519  003C7A                     u5661:
 12520  003C7A  EF47  F01E         	goto	l4830
 12521  003C7E                     u5660:
 12522  003C7E  0100               	movlb	0	; () banked
 12523  003C80  A5F8               	btfss	_flags& (0+255),2,b
 12524  003C82  EF45  F01E         	goto	u5671
 12525  003C86  EF47  F01E         	goto	u5670
 12526  003C8A                     u5671:
 12527  003C8A  EF65  F01E         	goto	l4840
 12528  003C8E                     u5670:
 12529  003C8E                     l4830:
 12530                           
 12531                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
 12532  003C8E  063E               	decf	dtoa@i^0,f,c
 12533  003C90  A0D8               	btfss	status,0,c
 12534  003C92  063F               	decf	(dtoa@i+1)^0,f,c
 12535  003C94                     
 12536                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
 12537  003C94  5034               	movf	dtoa@s^0,w,c
 12538  003C96  1035               	iorwf	(dtoa@s+1)^0,w,c
 12539  003C98  A4D8               	btfss	status,2,c
 12540  003C9A  EF51  F01E         	goto	u5681
 12541  003C9E  EF53  F01E         	goto	u5680
 12542  003CA2                     u5681:
 12543  003CA2  EF59  F01E         	goto	l4836
 12544  003CA6                     u5680:
 12545  003CA6  0E00               	movlw	0
 12546  003CA8  6E2F               	movwf	(_dtoa$2485+1)^0,c
 12547  003CAA  0E2B               	movlw	43
 12548  003CAC  6E2E               	movwf	_dtoa$2485^0,c
 12549  003CAE  EF5D  F01E         	goto	l4838
 12550  003CB2                     l4836:
 12551  003CB2  0E00               	movlw	0
 12552  003CB4  6E2F               	movwf	(_dtoa$2485+1)^0,c
 12553  003CB6  0E2D               	movlw	45
 12554  003CB8  6E2E               	movwf	_dtoa$2485^0,c
 12555  003CBA                     l4838:
 12556  003CBA  0E00               	movlw	low _dbuf
 12557  003CBC  243E               	addwf	dtoa@i^0,w,c
 12558  003CBE  6ED9               	movwf	fsr2l,c
 12559  003CC0  0E02               	movlw	high _dbuf
 12560  003CC2  203F               	addwfc	(dtoa@i+1)^0,w,c
 12561  003CC4  6EDA               	movwf	fsr2h,c
 12562  003CC6  C02E  FFDF         	movff	_dtoa$2485,indf2
 12563  003CCA                     l4840:
 12564                           
 12565                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
 12566  003CCA  C01C  F011         	movff	dtoa@fp,pad@fp
 12567  003CCE  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
 12568  003CD2  0E00               	movlw	low _dbuf
 12569  003CD4  243E               	addwf	dtoa@i^0,w,c
 12570  003CD6  6E13               	movwf	pad@buf^0,c
 12571  003CD8  0E02               	movlw	high _dbuf
 12572  003CDA  203F               	addwfc	(dtoa@i+1)^0,w,c
 12573  003CDC  6E14               	movwf	(pad@buf+1)^0,c
 12574  003CDE  C032  F015         	movff	dtoa@w,pad@p
 12575  003CE2  C033  F016         	movff	dtoa@w+1,pad@p+1
 12576  003CE6  ECAF  F027         	call	_pad	;wreg free
 12577  003CEA  C011  F01C         	movff	?_pad,?_dtoa
 12578  003CEE  C012  F01D         	movff	?_pad+1,?_dtoa+1
 12579  003CF2  0012               	return		;funcret
 12580  003CF4                     __end_of_dtoa:
 12581                           	callstack 0
 12582                           
 12583 ;; *************** function _pad *****************
 12584 ;; Defined at:
 12585 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 12586 ;; Parameters:    Size  Location     Type
 12587 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 12588 ;;		 -> sprintf@f(6), 
 12589 ;;  buf             2   18[COMRAM] PTR unsigned char 
 12590 ;;		 -> dbuf(80), 
 12591 ;;  p               2   20[COMRAM] int 
 12592 ;; Auto vars:     Size  Location     Type
 12593 ;;  w               2   25[COMRAM] int 
 12594 ;;  i               2   23[COMRAM] int 
 12595 ;; Return value:  Size  Location     Type
 12596 ;;                  2   16[COMRAM] int 
 12597 ;; Registers used:
 12598 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12599 ;; Tracked objects:
 12600 ;;		On entry : 0/0
 12601 ;;		On exit  : 0/0
 12602 ;;		Unchanged: 0/0
 12603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12604 ;;      Params:         6       0       0       0       0       0       0
 12605 ;;      Locals:         4       0       0       0       0       0       0
 12606 ;;      Temps:          1       0       0       0       0       0       0
 12607 ;;      Totals:        11       0       0       0       0       0       0
 12608 ;;Total ram usage:       11 bytes
 12609 ;; Hardware stack levels used:    1
 12610 ;; Hardware stack levels required when called:    4
 12611 ;; This function calls:
 12612 ;;		_fputc
 12613 ;;		_fputs
 12614 ;;		_strlen
 12615 ;; This function is called by:
 12616 ;;		_dtoa
 12617 ;;		_efgtoa
 12618 ;; This function uses a non-reentrant model
 12619 ;;
 12620                           
 12621                           	psect	text40
 12622  004F5E                     __ptext40:
 12623                           	callstack 0
 12624  004F5E                     _pad:
 12625                           	callstack 20
 12626  004F5E                     
 12627                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 12628  004F5E  0100               	movlb	0	; () banked
 12629  004F60  A1F8               	btfss	_flags& (0+255),0,b
 12630  004F62  EFB5  F027         	goto	u5231
 12631  004F66  EFB7  F027         	goto	u5230
 12632  004F6A                     u5231:
 12633  004F6A  EFC1  F027         	goto	l4680
 12634  004F6E                     u5230:
 12635  004F6E                     
 12636                           ; BSR set to: 0
 12637                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 12638  004F6E  C013  F00A         	movff	pad@buf,fputs@s
 12639  004F72  C014  F00B         	movff	pad@buf+1,fputs@s+1
 12640  004F76  C011  F00C         	movff	pad@fp,fputs@fp
 12641  004F7A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 12642  004F7E  EC79  F02C         	call	_fputs	;wreg free
 12643  004F82                     l4680:
 12644                           
 12645                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 12646  004F82  BE16               	btfsc	(pad@p+1)^0,7,c
 12647  004F84  EFC6  F027         	goto	u5241
 12648  004F88  EFC8  F027         	goto	u5240
 12649  004F8C                     u5241:
 12650  004F8C  EFCE  F027         	goto	l4684
 12651  004F90                     u5240:
 12652  004F90  C015  F01A         	movff	pad@p,pad@w
 12653  004F94  C016  F01B         	movff	pad@p+1,pad@w+1
 12654  004F98  EFD2  F027         	goto	l1211
 12655  004F9C                     l4684:
 12656  004F9C  0E00               	movlw	0
 12657  004F9E  6E1B               	movwf	(pad@w+1)^0,c
 12658  004FA0  0E00               	movlw	0
 12659  004FA2  6E1A               	movwf	pad@w^0,c
 12660  004FA4                     l1211:
 12661                           
 12662                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 12663  004FA4  0E00               	movlw	0
 12664  004FA6  6E19               	movwf	(pad@i+1)^0,c
 12665  004FA8  0E00               	movlw	0
 12666  004FAA  6E18               	movwf	pad@i^0,c
 12667                           
 12668                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12669  004FAC  EFE4  F027         	goto	l4690
 12670  004FB0                     l4686:
 12671                           
 12672                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 12673  004FB0  0E00               	movlw	0
 12674  004FB2  6E02               	movwf	(fputc@c+1)^0,c
 12675  004FB4  0E20               	movlw	32
 12676  004FB6  6E01               	movwf	fputc@c^0,c
 12677  004FB8  C011  F003         	movff	pad@fp,fputc@fp
 12678  004FBC  C012  F004         	movff	pad@fp+1,fputc@fp+1
 12679  004FC0  EC4A  F027         	call	_fputc	;wreg free
 12680  004FC4                     
 12681                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
 12682  004FC4  4A18               	infsnz	pad@i^0,f,c
 12683  004FC6  2A19               	incf	(pad@i+1)^0,f,c
 12684  004FC8                     l4690:
 12685                           
 12686                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12687  004FC8  501A               	movf	pad@w^0,w,c
 12688  004FCA  5C18               	subwf	pad@i^0,w,c
 12689  004FCC  5019               	movf	(pad@i+1)^0,w,c
 12690  004FCE  0A80               	xorlw	128
 12691  004FD0  6E17               	movwf	??_pad^0,c
 12692  004FD2  501B               	movf	(pad@w+1)^0,w,c
 12693  004FD4  0A80               	xorlw	128
 12694  004FD6  5817               	subwfb	??_pad^0,w,c
 12695  004FD8  A0D8               	btfss	status,0,c
 12696  004FDA  EFF1  F027         	goto	u5251
 12697  004FDE  EFF3  F027         	goto	u5250
 12698  004FE2                     u5251:
 12699  004FE2  EFD8  F027         	goto	l4686
 12700  004FE6                     u5250:
 12701  004FE6                     
 12702                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 12703  004FE6  0100               	movlb	0	; () banked
 12704  004FE8  B1F8               	btfsc	_flags& (0+255),0,b
 12705  004FEA  EFF9  F027         	goto	u5261
 12706  004FEE  EFFB  F027         	goto	u5260
 12707  004FF2                     u5261:
 12708  004FF2  EF05  F028         	goto	l4694
 12709  004FF6                     u5260:
 12710  004FF6                     
 12711                           ; BSR set to: 0
 12712                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 12713  004FF6  C013  F00A         	movff	pad@buf,fputs@s
 12714  004FFA  C014  F00B         	movff	pad@buf+1,fputs@s+1
 12715  004FFE  C011  F00C         	movff	pad@fp,fputs@fp
 12716  005002  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 12717  005006  EC79  F02C         	call	_fputs	;wreg free
 12718  00500A                     l4694:
 12719                           
 12720                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
 12721  00500A  C013  F001         	movff	pad@buf,strlen@s
 12722  00500E  C014  F002         	movff	pad@buf+1,strlen@s+1
 12723  005012  ECA4  F02D         	call	_strlen	;wreg free
 12724  005016  501A               	movf	pad@w^0,w,c
 12725  005018  2401               	addwf	?_strlen^0,w,c
 12726  00501A  6E11               	movwf	?_pad^0,c
 12727  00501C  501B               	movf	(pad@w+1)^0,w,c
 12728  00501E  2002               	addwfc	(?_strlen+1)^0,w,c
 12729  005020  6E12               	movwf	(?_pad+1)^0,c
 12730  005022  0012               	return		;funcret
 12731  005024                     __end_of_pad:
 12732                           	callstack 0
 12733                           
 12734 ;; *************** function _strlen *****************
 12735 ;; Defined at:
 12736 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
 12737 ;; Parameters:    Size  Location     Type
 12738 ;;  s               2    0[COMRAM] PTR const unsigned char 
 12739 ;;		 -> dbuf(80), 
 12740 ;; Auto vars:     Size  Location     Type
 12741 ;;  a               2    2[COMRAM] PTR const unsigned char 
 12742 ;;		 -> dbuf(80), 
 12743 ;; Return value:  Size  Location     Type
 12744 ;;                  2    0[COMRAM] unsigned int 
 12745 ;; Registers used:
 12746 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12747 ;; Tracked objects:
 12748 ;;		On entry : 0/0
 12749 ;;		On exit  : 0/0
 12750 ;;		Unchanged: 0/0
 12751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12752 ;;      Params:         2       0       0       0       0       0       0
 12753 ;;      Locals:         2       0       0       0       0       0       0
 12754 ;;      Temps:          0       0       0       0       0       0       0
 12755 ;;      Totals:         4       0       0       0       0       0       0
 12756 ;;Total ram usage:        4 bytes
 12757 ;; Hardware stack levels used:    1
 12758 ;; Hardware stack levels required when called:    1
 12759 ;; This function calls:
 12760 ;;		Nothing
 12761 ;; This function is called by:
 12762 ;;		_pad
 12763 ;; This function uses a non-reentrant model
 12764 ;;
 12765                           
 12766                           	psect	text41
 12767  005B48                     __ptext41:
 12768                           	callstack 0
 12769  005B48                     _strlen:
 12770                           	callstack 22
 12771  005B48  C001  F003         	movff	strlen@s,strlen@a
 12772  005B4C  C002  F004         	movff	strlen@s+1,strlen@a+1
 12773  005B50  EFAC  F02D         	goto	l4136
 12774  005B54                     l4134:
 12775  005B54  4A01               	infsnz	strlen@s^0,f,c
 12776  005B56  2A02               	incf	(strlen@s+1)^0,f,c
 12777  005B58                     l4136:
 12778  005B58  C001  FFD9         	movff	strlen@s,fsr2l
 12779  005B5C  C002  FFDA         	movff	strlen@s+1,fsr2h
 12780  005B60  50DF               	movf	indf2,w,c
 12781  005B62  A4D8               	btfss	status,2,c
 12782  005B64  EFB6  F02D         	goto	u4371
 12783  005B68  EFB8  F02D         	goto	u4370
 12784  005B6C                     u4371:
 12785  005B6C  EFAA  F02D         	goto	l4134
 12786  005B70                     u4370:
 12787  005B70  5003               	movf	strlen@a^0,w,c
 12788  005B72  5C01               	subwf	strlen@s^0,w,c
 12789  005B74  6E01               	movwf	?_strlen^0,c
 12790  005B76  5004               	movf	(strlen@a+1)^0,w,c
 12791  005B78  5802               	subwfb	(strlen@s+1)^0,w,c
 12792  005B7A  6E02               	movwf	(?_strlen+1)^0,c
 12793  005B7C  0012               	return		;funcret
 12794  005B7E                     __end_of_strlen:
 12795                           	callstack 0
 12796                           
 12797 ;; *************** function _fputs *****************
 12798 ;; Defined at:
 12799 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
 12800 ;; Parameters:    Size  Location     Type
 12801 ;;  s               2    9[COMRAM] PTR const unsigned char 
 12802 ;;		 -> dbuf(80), 
 12803 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 12804 ;;		 -> sprintf@f(6), 
 12805 ;; Auto vars:     Size  Location     Type
 12806 ;;  i               2   14[COMRAM] int 
 12807 ;;  c               1   13[COMRAM] unsigned char 
 12808 ;; Return value:  Size  Location     Type
 12809 ;;                  2    9[COMRAM] int 
 12810 ;; Registers used:
 12811 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12812 ;; Tracked objects:
 12813 ;;		On entry : 0/0
 12814 ;;		On exit  : 0/0
 12815 ;;		Unchanged: 0/0
 12816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12817 ;;      Params:         4       0       0       0       0       0       0
 12818 ;;      Locals:         3       0       0       0       0       0       0
 12819 ;;      Temps:          0       0       0       0       0       0       0
 12820 ;;      Totals:         7       0       0       0       0       0       0
 12821 ;;Total ram usage:        7 bytes
 12822 ;; Hardware stack levels used:    1
 12823 ;; Hardware stack levels required when called:    3
 12824 ;; This function calls:
 12825 ;;		_fputc
 12826 ;; This function is called by:
 12827 ;;		_pad
 12828 ;; This function uses a non-reentrant model
 12829 ;;
 12830                           
 12831                           	psect	text42
 12832  0058F2                     __ptext42:
 12833                           	callstack 0
 12834  0058F2                     _fputs:
 12835                           	callstack 20
 12836  0058F2  0E00               	movlw	0
 12837  0058F4  6E10               	movwf	(fputs@i+1)^0,c
 12838  0058F6  0E00               	movlw	0
 12839  0058F8  6E0F               	movwf	fputs@i^0,c
 12840  0058FA  EF8A  F02C         	goto	l4130
 12841  0058FE                     l4126:
 12842  0058FE  C00E  F001         	movff	fputs@c,fputc@c
 12843  005902  6A02               	clrf	(fputc@c+1)^0,c
 12844  005904  C00C  F003         	movff	fputs@fp,fputc@fp
 12845  005908  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
 12846  00590C  EC4A  F027         	call	_fputc	;wreg free
 12847  005910  4A0F               	infsnz	fputs@i^0,f,c
 12848  005912  2A10               	incf	(fputs@i+1)^0,f,c
 12849  005914                     l4130:
 12850  005914  500F               	movf	fputs@i^0,w,c
 12851  005916  240A               	addwf	fputs@s^0,w,c
 12852  005918  6ED9               	movwf	fsr2l,c
 12853  00591A  5010               	movf	(fputs@i+1)^0,w,c
 12854  00591C  200B               	addwfc	(fputs@s+1)^0,w,c
 12855  00591E  6EDA               	movwf	fsr2h,c
 12856  005920  50DF               	movf	indf2,w,c
 12857  005922  6E0E               	movwf	fputs@c^0,c
 12858  005924  500E               	movf	fputs@c^0,w,c
 12859  005926  A4D8               	btfss	status,2,c
 12860  005928  EF98  F02C         	goto	u4361
 12861  00592C  EF9A  F02C         	goto	u4360
 12862  005930                     u4361:
 12863  005930  EF7F  F02C         	goto	l4126
 12864  005934                     u4360:
 12865  005934  0012               	return		;funcret
 12866  005936                     __end_of_fputs:
 12867                           	callstack 0
 12868                           
 12869 ;; *************** function _fputc *****************
 12870 ;; Defined at:
 12871 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
 12872 ;; Parameters:    Size  Location     Type
 12873 ;;  c               2    0[COMRAM] int 
 12874 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 12875 ;;		 -> sprintf@f(6), 
 12876 ;; Auto vars:     Size  Location     Type
 12877 ;;		None
 12878 ;; Return value:  Size  Location     Type
 12879 ;;                  2    0[COMRAM] int 
 12880 ;; Registers used:
 12881 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12882 ;; Tracked objects:
 12883 ;;		On entry : 0/0
 12884 ;;		On exit  : 0/0
 12885 ;;		Unchanged: 0/0
 12886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12887 ;;      Params:         4       0       0       0       0       0       0
 12888 ;;      Locals:         0       0       0       0       0       0       0
 12889 ;;      Temps:          5       0       0       0       0       0       0
 12890 ;;      Totals:         9       0       0       0       0       0       0
 12891 ;;Total ram usage:        9 bytes
 12892 ;; Hardware stack levels used:    1
 12893 ;; Hardware stack levels required when called:    2
 12894 ;; This function calls:
 12895 ;;		_putch
 12896 ;; This function is called by:
 12897 ;;		_pad
 12898 ;;		_vfpfcnvrt
 12899 ;;		_fputs
 12900 ;; This function uses a non-reentrant model
 12901 ;;
 12902                           
 12903                           	psect	text43
 12904  004E94                     __ptext43:
 12905                           	callstack 0
 12906  004E94                     _fputc:
 12907                           	callstack 23
 12908  004E94  5003               	movf	fputc@fp^0,w,c
 12909  004E96  1004               	iorwf	(fputc@fp+1)^0,w,c
 12910  004E98  B4D8               	btfsc	status,2,c
 12911  004E9A  EF51  F027         	goto	u3931
 12912  004E9E  EF53  F027         	goto	u3930
 12913  004EA2                     u3931:
 12914  004EA2  EF5C  F027         	goto	l3912
 12915  004EA6                     u3930:
 12916  004EA6  5003               	movf	fputc@fp^0,w,c
 12917  004EA8  1004               	iorwf	(fputc@fp+1)^0,w,c
 12918  004EAA  A4D8               	btfss	status,2,c
 12919  004EAC  EF5A  F027         	goto	u3941
 12920  004EB0  EF5C  F027         	goto	u3940
 12921  004EB4                     u3941:
 12922  004EB4  EF61  F027         	goto	l3914
 12923  004EB8                     u3940:
 12924  004EB8                     l3912:
 12925  004EB8  5001               	movf	fputc@c^0,w,c
 12926  004EBA  EC74  F02E         	call	_putch
 12927  004EBE  EFAE  F027         	goto	l1471
 12928  004EC2                     l3914:
 12929  004EC2  EE20 F004          	lfsr	2,4
 12930  004EC6  5003               	movf	fputc@fp^0,w,c
 12931  004EC8  26D9               	addwf	fsr2l,f,c
 12932  004ECA  5004               	movf	(fputc@fp+1)^0,w,c
 12933  004ECC  22DA               	addwfc	fsr2h,f,c
 12934  004ECE  50DE               	movf	postinc2,w,c
 12935  004ED0  10DE               	iorwf	postinc2,w,c
 12936  004ED2  B4D8               	btfsc	status,2,c
 12937  004ED4  EF6E  F027         	goto	u3951
 12938  004ED8  EF70  F027         	goto	u3950
 12939  004EDC                     u3951:
 12940  004EDC  EF8B  F027         	goto	l3918
 12941  004EE0                     u3950:
 12942  004EE0  EE20 F004          	lfsr	2,4
 12943  004EE4  5003               	movf	fputc@fp^0,w,c
 12944  004EE6  26D9               	addwf	fsr2l,f,c
 12945  004EE8  5004               	movf	(fputc@fp+1)^0,w,c
 12946  004EEA  22DA               	addwfc	fsr2h,f,c
 12947  004EEC  EE10 F002          	lfsr	1,2
 12948  004EF0  5003               	movf	fputc@fp^0,w,c
 12949  004EF2  26E1               	addwf	fsr1l,f,c
 12950  004EF4  5004               	movf	(fputc@fp+1)^0,w,c
 12951  004EF6  22E2               	addwfc	fsr1h,f,c
 12952  004EF8  50DE               	movf	postinc2,w,c
 12953  004EFA  5CE6               	subwf	postinc1,w,c
 12954  004EFC  50E6               	movf	postinc1,w,c
 12955  004EFE  0A80               	xorlw	128
 12956  004F00  6E09               	movwf	(??_fputc+4)^0,c
 12957  004F02  50DE               	movf	postinc2,w,c
 12958  004F04  0A80               	xorlw	128
 12959  004F06  5809               	subwfb	(??_fputc+4)^0,w,c
 12960  004F08  B0D8               	btfsc	status,0,c
 12961  004F0A  EF89  F027         	goto	u3961
 12962  004F0E  EF8B  F027         	goto	u3960
 12963  004F12                     u3961:
 12964  004F12  EFAE  F027         	goto	l1471
 12965  004F16                     u3960:
 12966  004F16                     l3918:
 12967  004F16  EE20 F002          	lfsr	2,2
 12968  004F1A  5003               	movf	fputc@fp^0,w,c
 12969  004F1C  26D9               	addwf	fsr2l,f,c
 12970  004F1E  5004               	movf	(fputc@fp+1)^0,w,c
 12971  004F20  22DA               	addwfc	fsr2h,f,c
 12972  004F22  CFDE F005          	movff	postinc2,??_fputc
 12973  004F26  CFDD F006          	movff	postdec2,??_fputc+1
 12974  004F2A  C003  FFD9         	movff	fputc@fp,fsr2l
 12975  004F2E  C004  FFDA         	movff	fputc@fp+1,fsr2h
 12976  004F32  CFDE F007          	movff	postinc2,??_fputc+2
 12977  004F36  CFDD F008          	movff	postdec2,??_fputc+3
 12978  004F3A  5005               	movf	??_fputc^0,w,c
 12979  004F3C  2407               	addwf	(??_fputc+2)^0,w,c
 12980  004F3E  6ED9               	movwf	fsr2l,c
 12981  004F40  5006               	movf	(??_fputc+1)^0,w,c
 12982  004F42  2008               	addwfc	(??_fputc+3)^0,w,c
 12983  004F44  6EDA               	movwf	fsr2h,c
 12984  004F46  C001  FFDF         	movff	fputc@c,indf2
 12985  004F4A  EE20 F002          	lfsr	2,2
 12986  004F4E  5003               	movf	fputc@fp^0,w,c
 12987  004F50  26D9               	addwf	fsr2l,f,c
 12988  004F52  5004               	movf	(fputc@fp+1)^0,w,c
 12989  004F54  22DA               	addwfc	fsr2h,f,c
 12990  004F56  2ADE               	incf	postinc2,f,c
 12991  004F58  0E00               	movlw	0
 12992  004F5A  22DD               	addwfc	postdec2,f,c
 12993  004F5C                     l1471:
 12994  004F5C  0012               	return		;funcret
 12995  004F5E                     __end_of_fputc:
 12996                           	callstack 0
 12997                           
 12998 ;; *************** function _putch *****************
 12999 ;; Defined at:
 13000 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
 13001 ;; Parameters:    Size  Location     Type
 13002 ;;  c               1    wreg     unsigned char 
 13003 ;; Auto vars:     Size  Location     Type
 13004 ;;  c               1    0[COMRAM] unsigned char 
 13005 ;; Return value:  Size  Location     Type
 13006 ;;                  1    wreg      void 
 13007 ;; Registers used:
 13008 ;;		wreg
 13009 ;; Tracked objects:
 13010 ;;		On entry : 0/0
 13011 ;;		On exit  : 0/0
 13012 ;;		Unchanged: 0/0
 13013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13014 ;;      Params:         0       0       0       0       0       0       0
 13015 ;;      Locals:         0       0       0       0       0       0       0
 13016 ;;      Temps:          0       0       0       0       0       0       0
 13017 ;;      Totals:         0       0       0       0       0       0       0
 13018 ;;Total ram usage:        0 bytes
 13019 ;; Hardware stack levels used:    1
 13020 ;; Hardware stack levels required when called:    1
 13021 ;; This function calls:
 13022 ;;		Nothing
 13023 ;; This function is called by:
 13024 ;;		_fputc
 13025 ;; This function uses a non-reentrant model
 13026 ;;
 13027                           
 13028                           	psect	text44
 13029  005CE8                     __ptext44:
 13030                           	callstack 0
 13031  005CE8                     _putch:
 13032                           	callstack 23
 13033  005CE8  0012               	return		;funcret
 13034  005CEA                     __end_of_putch:
 13035                           	callstack 0
 13036                           
 13037 ;; *************** function _abs *****************
 13038 ;; Defined at:
 13039 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
 13040 ;; Parameters:    Size  Location     Type
 13041 ;;  a               2   18[COMRAM] int 
 13042 ;; Auto vars:     Size  Location     Type
 13043 ;;		None
 13044 ;; Return value:  Size  Location     Type
 13045 ;;                  2   18[COMRAM] int 
 13046 ;; Registers used:
 13047 ;;		wreg, status,2, status,0
 13048 ;; Tracked objects:
 13049 ;;		On entry : 0/0
 13050 ;;		On exit  : 0/0
 13051 ;;		Unchanged: 0/0
 13052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13053 ;;      Params:         2       0       0       0       0       0       0
 13054 ;;      Locals:         0       0       0       0       0       0       0
 13055 ;;      Temps:          2       0       0       0       0       0       0
 13056 ;;      Totals:         4       0       0       0       0       0       0
 13057 ;;Total ram usage:        4 bytes
 13058 ;; Hardware stack levels used:    1
 13059 ;; Hardware stack levels required when called:    1
 13060 ;; This function calls:
 13061 ;;		Nothing
 13062 ;; This function is called by:
 13063 ;;		_dtoa
 13064 ;; This function uses a non-reentrant model
 13065 ;;
 13066                           
 13067                           	psect	text45
 13068  005978                     __ptext45:
 13069                           	callstack 0
 13070  005978                     _abs:
 13071                           	callstack 23
 13072  005978  BE14               	btfsc	(abs@a+1)^0,7,c
 13073  00597A  EFC9  F02C         	goto	u5270
 13074  00597E  5014               	movf	(abs@a+1)^0,w,c
 13075  005980  E106               	bnz	u5271
 13076  005982  0413               	decf	abs@a^0,w,c
 13077  005984  B0D8               	btfsc	status,0,c
 13078  005986  EFC7  F02C         	goto	u5271
 13079  00598A  EFC9  F02C         	goto	u5270
 13080  00598E                     u5271:
 13081  00598E  EFD7  F02C         	goto	l1392
 13082  005992                     u5270:
 13083  005992  C013  F015         	movff	abs@a,??_abs
 13084  005996  C014  F016         	movff	abs@a+1,??_abs+1
 13085  00599A  1E15               	comf	??_abs^0,f,c
 13086  00599C  1E16               	comf	(??_abs+1)^0,f,c
 13087  00599E  4A15               	infsnz	??_abs^0,f,c
 13088  0059A0  2A16               	incf	(??_abs+1)^0,f,c
 13089  0059A2  C015  F013         	movff	??_abs,?_abs
 13090  0059A6  C016  F014         	movff	??_abs+1,?_abs+1
 13091  0059AA  EFDB  F02C         	goto	l1395
 13092  0059AE                     l1392:
 13093  0059AE  C013  F013         	movff	abs@a,?_abs
 13094  0059B2  C014  F014         	movff	abs@a+1,?_abs+1
 13095  0059B6                     l1395:
 13096  0059B6  0012               	return		;funcret
 13097  0059B8                     __end_of_abs:
 13098                           	callstack 0
 13099                           
 13100 ;; *************** function ___aomod *****************
 13101 ;; Defined at:
 13102 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
 13103 ;; Parameters:    Size  Location     Type
 13104 ;;  dividend        8    0[COMRAM] long long 
 13105 ;;  divisor         8    8[COMRAM] long long 
 13106 ;; Auto vars:     Size  Location     Type
 13107 ;;  sign            1   17[COMRAM] unsigned char 
 13108 ;;  counter         1   16[COMRAM] unsigned char 
 13109 ;; Return value:  Size  Location     Type
 13110 ;;                  8    0[COMRAM] long long 
 13111 ;; Registers used:
 13112 ;;		wreg, status,2, status,0
 13113 ;; Tracked objects:
 13114 ;;		On entry : 0/0
 13115 ;;		On exit  : 0/0
 13116 ;;		Unchanged: 0/0
 13117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13118 ;;      Params:        16       0       0       0       0       0       0
 13119 ;;      Locals:         2       0       0       0       0       0       0
 13120 ;;      Temps:          0       0       0       0       0       0       0
 13121 ;;      Totals:        18       0       0       0       0       0       0
 13122 ;;Total ram usage:       18 bytes
 13123 ;; Hardware stack levels used:    1
 13124 ;; Hardware stack levels required when called:    1
 13125 ;; This function calls:
 13126 ;;		Nothing
 13127 ;; This function is called by:
 13128 ;;		_dtoa
 13129 ;; This function uses a non-reentrant model
 13130 ;;
 13131                           
 13132                           	psect	text46
 13133  004760                     __ptext46:
 13134                           	callstack 0
 13135  004760                     ___aomod:
 13136                           	callstack 23
 13137  004760  0E00               	movlw	0
 13138  004762  6E12               	movwf	___aomod@sign^0,c
 13139  004764  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 13140  004766  EFB9  F023         	goto	u4470
 13141  00476A  EFB7  F023         	goto	u4471
 13142  00476E                     u4471:
 13143  00476E  EFCB  F023         	goto	l4204
 13144  004772                     u4470:
 13145  004772  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13146  004774  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13147  004776  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13148  004778  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13149  00477A  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13150  00477C  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13151  00477E  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13152  004780  6C01               	negf	___aomod@dividend^0,c
 13153  004782  0E00               	movlw	0
 13154  004784  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13155  004786  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13156  004788  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13157  00478A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13158  00478C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13159  00478E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13160  004790  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13161  004792  0E01               	movlw	1
 13162  004794  6E12               	movwf	___aomod@sign^0,c
 13163  004796                     l4204:
 13164  004796  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 13165  004798  EFD2  F023         	goto	u4480
 13166  00479C  EFD0  F023         	goto	u4481
 13167  0047A0                     u4481:
 13168  0047A0  EFE2  F023         	goto	l4208
 13169  0047A4                     u4480:
 13170  0047A4  1E10               	comf	(___aomod@divisor+7)^0,f,c
 13171  0047A6  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 13172  0047A8  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 13173  0047AA  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 13174  0047AC  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 13175  0047AE  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 13176  0047B0  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 13177  0047B2  6C09               	negf	___aomod@divisor^0,c
 13178  0047B4  0E00               	movlw	0
 13179  0047B6  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 13180  0047B8  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 13181  0047BA  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 13182  0047BC  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 13183  0047BE  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 13184  0047C0  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 13185  0047C2  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 13186  0047C4                     l4208:
 13187  0047C4  5009               	movf	___aomod@divisor^0,w,c
 13188  0047C6  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 13189  0047C8  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 13190  0047CA  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 13191  0047CC  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 13192  0047CE  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 13193  0047D0  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 13194  0047D2  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 13195  0047D4  B4D8               	btfsc	status,2,c
 13196  0047D6  EFEF  F023         	goto	u4491
 13197  0047DA  EFF1  F023         	goto	u4490
 13198  0047DE                     u4491:
 13199  0047DE  EF39  F024         	goto	l4224
 13200  0047E2                     u4490:
 13201  0047E2  0E01               	movlw	1
 13202  0047E4  6E11               	movwf	___aomod@counter^0,c
 13203  0047E6  EFFF  F023         	goto	l4214
 13204  0047EA                     l4212:
 13205  0047EA  90D8               	bcf	status,0,c
 13206  0047EC  3609               	rlcf	___aomod@divisor^0,f,c
 13207  0047EE  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 13208  0047F0  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 13209  0047F2  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 13210  0047F4  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 13211  0047F6  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 13212  0047F8  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 13213  0047FA  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 13214  0047FC  2A11               	incf	___aomod@counter^0,f,c
 13215  0047FE                     l4214:
 13216  0047FE  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 13217  004800  EF04  F024         	goto	u4501
 13218  004804  EF06  F024         	goto	u4500
 13219  004808                     u4501:
 13220  004808  EFF5  F023         	goto	l4212
 13221  00480C                     u4500:
 13222  00480C                     l4216:
 13223  00480C  5009               	movf	___aomod@divisor^0,w,c
 13224  00480E  5C01               	subwf	___aomod@dividend^0,w,c
 13225  004810  500A               	movf	(___aomod@divisor+1)^0,w,c
 13226  004812  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 13227  004814  500B               	movf	(___aomod@divisor+2)^0,w,c
 13228  004816  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 13229  004818  500C               	movf	(___aomod@divisor+3)^0,w,c
 13230  00481A  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 13231  00481C  500D               	movf	(___aomod@divisor+4)^0,w,c
 13232  00481E  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 13233  004820  500E               	movf	(___aomod@divisor+5)^0,w,c
 13234  004822  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 13235  004824  500F               	movf	(___aomod@divisor+6)^0,w,c
 13236  004826  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 13237  004828  5010               	movf	(___aomod@divisor+7)^0,w,c
 13238  00482A  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 13239  00482C  A0D8               	btfss	status,0,c
 13240  00482E  EF1B  F024         	goto	u4511
 13241  004832  EF1D  F024         	goto	u4510
 13242  004836                     u4511:
 13243  004836  EF2D  F024         	goto	l4220
 13244  00483A                     u4510:
 13245  00483A  5009               	movf	___aomod@divisor^0,w,c
 13246  00483C  5E01               	subwf	___aomod@dividend^0,f,c
 13247  00483E  500A               	movf	(___aomod@divisor+1)^0,w,c
 13248  004840  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 13249  004842  500B               	movf	(___aomod@divisor+2)^0,w,c
 13250  004844  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 13251  004846  500C               	movf	(___aomod@divisor+3)^0,w,c
 13252  004848  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 13253  00484A  500D               	movf	(___aomod@divisor+4)^0,w,c
 13254  00484C  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 13255  00484E  500E               	movf	(___aomod@divisor+5)^0,w,c
 13256  004850  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 13257  004852  500F               	movf	(___aomod@divisor+6)^0,w,c
 13258  004854  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 13259  004856  5010               	movf	(___aomod@divisor+7)^0,w,c
 13260  004858  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 13261  00485A                     l4220:
 13262  00485A  90D8               	bcf	status,0,c
 13263  00485C  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 13264  00485E  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 13265  004860  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 13266  004862  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 13267  004864  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 13268  004866  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 13269  004868  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 13270  00486A  3209               	rrcf	___aomod@divisor^0,f,c
 13271  00486C  2E11               	decfsz	___aomod@counter^0,f,c
 13272  00486E  EF06  F024         	goto	l4216
 13273  004872                     l4224:
 13274  004872  5012               	movf	___aomod@sign^0,w,c
 13275  004874  B4D8               	btfsc	status,2,c
 13276  004876  EF3F  F024         	goto	u4521
 13277  00487A  EF41  F024         	goto	u4520
 13278  00487E                     u4521:
 13279  00487E  EF51  F024         	goto	l4228
 13280  004882                     u4520:
 13281  004882  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13282  004884  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13283  004886  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13284  004888  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13285  00488A  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13286  00488C  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13287  00488E  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13288  004890  6C01               	negf	___aomod@dividend^0,c
 13289  004892  0E00               	movlw	0
 13290  004894  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13291  004896  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13292  004898  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13293  00489A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13294  00489C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13295  00489E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13296  0048A0  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13297  0048A2                     l4228:
 13298  0048A2  C001  F001         	movff	___aomod@dividend,?___aomod
 13299  0048A6  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 13300  0048AA  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 13301  0048AE  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 13302  0048B2  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 13303  0048B6  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 13304  0048BA  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 13305  0048BE  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 13306  0048C2  0012               	return		;funcret
 13307  0048C4                     __end_of___aomod:
 13308                           	callstack 0
 13309                           
 13310 ;; *************** function ___aodiv *****************
 13311 ;; Defined at:
 13312 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
 13313 ;; Parameters:    Size  Location     Type
 13314 ;;  dividend        8    0[COMRAM] long long 
 13315 ;;  divisor         8    8[COMRAM] long long 
 13316 ;; Auto vars:     Size  Location     Type
 13317 ;;  quotient        8   18[COMRAM] long long 
 13318 ;;  sign            1   17[COMRAM] unsigned char 
 13319 ;;  counter         1   16[COMRAM] unsigned char 
 13320 ;; Return value:  Size  Location     Type
 13321 ;;                  8    0[COMRAM] long long 
 13322 ;; Registers used:
 13323 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13324 ;; Tracked objects:
 13325 ;;		On entry : 0/0
 13326 ;;		On exit  : 0/0
 13327 ;;		Unchanged: 0/0
 13328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13329 ;;      Params:        16       0       0       0       0       0       0
 13330 ;;      Locals:        10       0       0       0       0       0       0
 13331 ;;      Temps:          0       0       0       0       0       0       0
 13332 ;;      Totals:        26       0       0       0       0       0       0
 13333 ;;Total ram usage:       26 bytes
 13334 ;; Hardware stack levels used:    1
 13335 ;; Hardware stack levels required when called:    1
 13336 ;; This function calls:
 13337 ;;		Nothing
 13338 ;; This function is called by:
 13339 ;;		_dtoa
 13340 ;; This function uses a non-reentrant model
 13341 ;;
 13342                           
 13343                           	psect	text47
 13344  0045D8                     __ptext47:
 13345                           	callstack 0
 13346  0045D8                     ___aodiv:
 13347                           	callstack 23
 13348  0045D8  0E00               	movlw	0
 13349  0045DA  6E12               	movwf	___aodiv@sign^0,c
 13350  0045DC  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 13351  0045DE  EFF5  F022         	goto	u4400
 13352  0045E2  EFF3  F022         	goto	u4401
 13353  0045E6                     u4401:
 13354  0045E6  EF07  F023         	goto	l4160
 13355  0045EA                     u4400:
 13356  0045EA  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 13357  0045EC  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 13358  0045EE  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 13359  0045F0  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 13360  0045F2  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 13361  0045F4  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 13362  0045F6  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 13363  0045F8  6C09               	negf	___aodiv@divisor^0,c
 13364  0045FA  0E00               	movlw	0
 13365  0045FC  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 13366  0045FE  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 13367  004600  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 13368  004602  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 13369  004604  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 13370  004606  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 13371  004608  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 13372  00460A  0E01               	movlw	1
 13373  00460C  6E12               	movwf	___aodiv@sign^0,c
 13374  00460E                     l4160:
 13375  00460E  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 13376  004610  EF0E  F023         	goto	u4410
 13377  004614  EF0C  F023         	goto	u4411
 13378  004618                     u4411:
 13379  004618  EF20  F023         	goto	l4166
 13380  00461C                     u4410:
 13381  00461C  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 13382  00461E  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 13383  004620  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 13384  004622  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 13385  004624  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 13386  004626  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 13387  004628  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 13388  00462A  6C01               	negf	___aodiv@dividend^0,c
 13389  00462C  0E00               	movlw	0
 13390  00462E  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 13391  004630  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 13392  004632  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 13393  004634  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 13394  004636  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 13395  004638  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 13396  00463A  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 13397  00463C  0E01               	movlw	1
 13398  00463E  1A12               	xorwf	___aodiv@sign^0,f,c
 13399  004640                     l4166:
 13400  004640  EE20  F013         	lfsr	2,___aodiv@quotient
 13401  004644  0E07               	movlw	7
 13402  004646                     u4421:
 13403  004646  6ADE               	clrf	postinc2,c
 13404  004648  06E8               	decf	wreg,f,c
 13405  00464A  E2FD               	bc	u4421
 13406  00464C  5009               	movf	___aodiv@divisor^0,w,c
 13407  00464E  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 13408  004650  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 13409  004652  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 13410  004654  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 13411  004656  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 13412  004658  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 13413  00465A  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 13414  00465C  B4D8               	btfsc	status,2,c
 13415  00465E  EF33  F023         	goto	u4431
 13416  004662  EF35  F023         	goto	u4430
 13417  004666                     u4431:
 13418  004666  EF87  F023         	goto	l4188
 13419  00466A                     u4430:
 13420  00466A  0E01               	movlw	1
 13421  00466C  6E11               	movwf	___aodiv@counter^0,c
 13422  00466E  EF43  F023         	goto	l4174
 13423  004672                     l4172:
 13424  004672  90D8               	bcf	status,0,c
 13425  004674  3609               	rlcf	___aodiv@divisor^0,f,c
 13426  004676  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 13427  004678  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 13428  00467A  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 13429  00467C  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 13430  00467E  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 13431  004680  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 13432  004682  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 13433  004684  2A11               	incf	___aodiv@counter^0,f,c
 13434  004686                     l4174:
 13435  004686  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 13436  004688  EF48  F023         	goto	u4441
 13437  00468C  EF4A  F023         	goto	u4440
 13438  004690                     u4441:
 13439  004690  EF39  F023         	goto	l4172
 13440  004694                     u4440:
 13441  004694                     l4176:
 13442  004694  90D8               	bcf	status,0,c
 13443  004696  3613               	rlcf	___aodiv@quotient^0,f,c
 13444  004698  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 13445  00469A  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 13446  00469C  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 13447  00469E  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 13448  0046A0  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 13449  0046A2  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 13450  0046A4  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 13451  0046A6  5009               	movf	___aodiv@divisor^0,w,c
 13452  0046A8  5C01               	subwf	___aodiv@dividend^0,w,c
 13453  0046AA  500A               	movf	(___aodiv@divisor+1)^0,w,c
 13454  0046AC  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 13455  0046AE  500B               	movf	(___aodiv@divisor+2)^0,w,c
 13456  0046B0  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 13457  0046B2  500C               	movf	(___aodiv@divisor+3)^0,w,c
 13458  0046B4  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 13459  0046B6  500D               	movf	(___aodiv@divisor+4)^0,w,c
 13460  0046B8  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 13461  0046BA  500E               	movf	(___aodiv@divisor+5)^0,w,c
 13462  0046BC  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 13463  0046BE  500F               	movf	(___aodiv@divisor+6)^0,w,c
 13464  0046C0  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 13465  0046C2  5010               	movf	(___aodiv@divisor+7)^0,w,c
 13466  0046C4  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 13467  0046C6  A0D8               	btfss	status,0,c
 13468  0046C8  EF68  F023         	goto	u4451
 13469  0046CC  EF6A  F023         	goto	u4450
 13470  0046D0                     u4451:
 13471  0046D0  EF7B  F023         	goto	l4184
 13472  0046D4                     u4450:
 13473  0046D4  5009               	movf	___aodiv@divisor^0,w,c
 13474  0046D6  5E01               	subwf	___aodiv@dividend^0,f,c
 13475  0046D8  500A               	movf	(___aodiv@divisor+1)^0,w,c
 13476  0046DA  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 13477  0046DC  500B               	movf	(___aodiv@divisor+2)^0,w,c
 13478  0046DE  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 13479  0046E0  500C               	movf	(___aodiv@divisor+3)^0,w,c
 13480  0046E2  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 13481  0046E4  500D               	movf	(___aodiv@divisor+4)^0,w,c
 13482  0046E6  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 13483  0046E8  500E               	movf	(___aodiv@divisor+5)^0,w,c
 13484  0046EA  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 13485  0046EC  500F               	movf	(___aodiv@divisor+6)^0,w,c
 13486  0046EE  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 13487  0046F0  5010               	movf	(___aodiv@divisor+7)^0,w,c
 13488  0046F2  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 13489  0046F4  8013               	bsf	___aodiv@quotient^0,0,c
 13490  0046F6                     l4184:
 13491  0046F6  90D8               	bcf	status,0,c
 13492  0046F8  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 13493  0046FA  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 13494  0046FC  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 13495  0046FE  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 13496  004700  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 13497  004702  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 13498  004704  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 13499  004706  3209               	rrcf	___aodiv@divisor^0,f,c
 13500  004708  2E11               	decfsz	___aodiv@counter^0,f,c
 13501  00470A  EF4A  F023         	goto	l4176
 13502  00470E                     l4188:
 13503  00470E  5012               	movf	___aodiv@sign^0,w,c
 13504  004710  B4D8               	btfsc	status,2,c
 13505  004712  EF8D  F023         	goto	u4461
 13506  004716  EF8F  F023         	goto	u4460
 13507  00471A                     u4461:
 13508  00471A  EF9F  F023         	goto	l4192
 13509  00471E                     u4460:
 13510  00471E  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 13511  004720  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 13512  004722  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 13513  004724  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 13514  004726  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 13515  004728  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 13516  00472A  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 13517  00472C  6C13               	negf	___aodiv@quotient^0,c
 13518  00472E  0E00               	movlw	0
 13519  004730  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 13520  004732  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 13521  004734  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 13522  004736  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 13523  004738  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 13524  00473A  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 13525  00473C  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 13526  00473E                     l4192:
 13527  00473E  C013  F001         	movff	___aodiv@quotient,?___aodiv
 13528  004742  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 13529  004746  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 13530  00474A  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 13531  00474E  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 13532  004752  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 13533  004756  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 13534  00475A  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 13535  00475E  0012               	return		;funcret
 13536  004760                     __end_of___aodiv:
 13537                           	callstack 0
 13538                           
 13539 ;; *************** function _atoi *****************
 13540 ;; Defined at:
 13541 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
 13542 ;; Parameters:    Size  Location     Type
 13543 ;;  s               2    7[COMRAM] PTR const unsigned char 
 13544 ;;		 -> STR_16(13), STR_14(14), STR_12(16), STR_10(16), 
 13545 ;;		 -> STR_8(18), STR_6(16), STR_4(18), STR_2(15), 
 13546 ;; Auto vars:     Size  Location     Type
 13547 ;;  n               2   20[COMRAM] int 
 13548 ;;  neg             2   13[COMRAM] int 
 13549 ;; Return value:  Size  Location     Type
 13550 ;;                  2    7[COMRAM] int 
 13551 ;; Registers used:
 13552 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13553 ;; Tracked objects:
 13554 ;;		On entry : 0/0
 13555 ;;		On exit  : 0/0
 13556 ;;		Unchanged: 0/0
 13557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13558 ;;      Params:         2       0       0       0       0       0       0
 13559 ;;      Locals:         9       0       0       0       0       0       0
 13560 ;;      Temps:          4       0       0       0       0       0       0
 13561 ;;      Totals:        15       0       0       0       0       0       0
 13562 ;;Total ram usage:       15 bytes
 13563 ;; Hardware stack levels used:    1
 13564 ;; Hardware stack levels required when called:    2
 13565 ;; This function calls:
 13566 ;;		___wmul
 13567 ;;		_isdigit
 13568 ;;		_isspace
 13569 ;; This function is called by:
 13570 ;;		_vfpfcnvrt
 13571 ;; This function uses a non-reentrant model
 13572 ;;
 13573                           
 13574                           	psect	text48
 13575  004448                     __ptext48:
 13576                           	callstack 0
 13577  004448                     _atoi:
 13578                           	callstack 23
 13579  004448  0E00               	movlw	0
 13580  00444A  6E16               	movwf	(atoi@n+1)^0,c
 13581  00444C  0E00               	movlw	0
 13582  00444E  6E15               	movwf	atoi@n^0,c
 13583  004450  0E00               	movlw	0
 13584  004452  6E0F               	movwf	(atoi@neg+1)^0,c
 13585  004454  0E00               	movlw	0
 13586  004456  6E0E               	movwf	atoi@neg^0,c
 13587  004458  EF30  F022         	goto	l5146
 13588  00445C                     l5144:
 13589  00445C  4A08               	infsnz	atoi@s^0,f,c
 13590  00445E  2A09               	incf	(atoi@s+1)^0,f,c
 13591  004460                     l5146:
 13592  004460  0E01               	movlw	1
 13593  004462  6E14               	movwf	_atoi$2577^0,c
 13594  004464  C008  FFF6         	movff	atoi@s,tblptrl
 13595  004468  C009  FFF7         	movff	atoi@s+1,tblptrh
 13596  00446C                     	if	0	;tblptru may be non-zero
 13597  00446C                     	endif
 13598  00446C                     	if	0	;tblptru may be non-zero
 13599  00446C                     	endif
 13600  00446C  0008               	tblrd		*
 13601  00446E  50F5               	movf	tablat,w,c
 13602  004470  0A20               	xorlw	32
 13603  004472  B4D8               	btfsc	status,2,c
 13604  004474  EF3E  F022         	goto	u6211
 13605  004478  EF40  F022         	goto	u6210
 13606  00447C                     u6211:
 13607  00447C  EF5D  F022         	goto	l5154
 13608  004480                     u6210:
 13609  004480  0EF7               	movlw	247
 13610  004482  6E0A               	movwf	??_atoi^0,c
 13611  004484  0EFF               	movlw	255
 13612  004486  6E0B               	movwf	(??_atoi+1)^0,c
 13613  004488  C008  FFF6         	movff	atoi@s,tblptrl
 13614  00448C  C009  FFF7         	movff	atoi@s+1,tblptrh
 13615  004490                     	if	0	;tblptru may be non-zero
 13616  004490                     	endif
 13617  004490                     	if	0	;tblptru may be non-zero
 13618  004490                     	endif
 13619  004490  0008               	tblrd		*
 13620  004492  50F5               	movf	tablat,w,c
 13621  004494  6E0C               	movwf	(??_atoi+2)^0,c
 13622  004496  6A0D               	clrf	(??_atoi+3)^0,c
 13623  004498  500A               	movf	??_atoi^0,w,c
 13624  00449A  260C               	addwf	(??_atoi+2)^0,f,c
 13625  00449C  500B               	movf	(??_atoi+1)^0,w,c
 13626  00449E  220D               	addwfc	(??_atoi+3)^0,f,c
 13627  0044A0  500D               	movf	(??_atoi+3)^0,w,c
 13628  0044A2  E109               	bnz	u6220
 13629  0044A4  0E05               	movlw	5
 13630  0044A6  5C0C               	subwf	(??_atoi+2)^0,w,c
 13631  0044A8  A0D8               	btfss	status,0,c
 13632  0044AA  EF59  F022         	goto	u6221
 13633  0044AE  EF5B  F022         	goto	u6220
 13634  0044B2                     u6221:
 13635  0044B2  EF5D  F022         	goto	l5154
 13636  0044B6                     u6220:
 13637  0044B6  0E00               	movlw	0
 13638  0044B8  6E14               	movwf	_atoi$2577^0,c
 13639  0044BA                     l5154:
 13640  0044BA  C014  F010         	movff	_atoi$2577,_atoi$2576
 13641  0044BE  6A11               	clrf	(_atoi$2576+1)^0,c
 13642  0044C0  5010               	movf	_atoi$2576^0,w,c
 13643  0044C2  1011               	iorwf	(_atoi$2576+1)^0,w,c
 13644  0044C4  A4D8               	btfss	status,2,c
 13645  0044C6  EF67  F022         	goto	u6231
 13646  0044CA  EF69  F022         	goto	u6230
 13647  0044CE                     u6231:
 13648  0044CE  EF2E  F022         	goto	l5144
 13649  0044D2                     u6230:
 13650  0044D2  EF73  F022         	goto	l5164
 13651  0044D6                     l5160:
 13652  0044D6  0E00               	movlw	0
 13653  0044D8  6E0F               	movwf	(atoi@neg+1)^0,c
 13654  0044DA  0E01               	movlw	1
 13655  0044DC  6E0E               	movwf	atoi@neg^0,c
 13656  0044DE                     l5162:
 13657  0044DE  4A08               	infsnz	atoi@s^0,f,c
 13658  0044E0  2A09               	incf	(atoi@s+1)^0,f,c
 13659  0044E2  EFA8  F022         	goto	l5170
 13660  0044E6                     l5164:
 13661  0044E6  C008  FFF6         	movff	atoi@s,tblptrl
 13662  0044EA  C009  FFF7         	movff	atoi@s+1,tblptrh
 13663  0044EE                     	if	0	;tblptru may be non-zero
 13664  0044EE                     	endif
 13665  0044EE                     	if	0	;tblptru may be non-zero
 13666  0044EE                     	endif
 13667  0044EE  0008               	tblrd		*
 13668  0044F0  50F5               	movf	tablat,w,c
 13669  0044F2  6E0A               	movwf	??_atoi^0,c
 13670  0044F4  6A0B               	clrf	(??_atoi+1)^0,c
 13671                           
 13672                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13673                           ; Switch size 1, requested type "simple"
 13674                           ; Number of cases is 1, Range of values is 0 to 0
 13675                           ; switch strategies available:
 13676                           ; Name         Instructions Cycles
 13677                           ; simple_byte            4     3 (average)
 13678                           ;	Chosen strategy is simple_byte
 13679  0044F6  500B               	movf	(??_atoi+1)^0,w,c
 13680  0044F8  0A00               	xorlw	0	; case 0
 13681  0044FA  B4D8               	btfsc	status,2,c
 13682  0044FC  EF82  F022         	goto	l6326
 13683  004500  EFA8  F022         	goto	l5170
 13684  004504                     l6326:
 13685                           
 13686                           ; Switch size 1, requested type "simple"
 13687                           ; Number of cases is 2, Range of values is 43 to 45
 13688                           ; switch strategies available:
 13689                           ; Name         Instructions Cycles
 13690                           ; simple_byte            7     4 (average)
 13691                           ;	Chosen strategy is simple_byte
 13692  004504  500A               	movf	??_atoi^0,w,c
 13693  004506  0A2B               	xorlw	43	; case 43
 13694  004508  B4D8               	btfsc	status,2,c
 13695  00450A  EF6F  F022         	goto	l5162
 13696  00450E  0A06               	xorlw	6	; case 45
 13697  004510  B4D8               	btfsc	status,2,c
 13698  004512  EF6B  F022         	goto	l5160
 13699  004516  EFA8  F022         	goto	l5170
 13700  00451A                     l5166:
 13701  00451A  C015  F001         	movff	atoi@n,___wmul@multiplier
 13702  00451E  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 13703  004522  0E00               	movlw	0
 13704  004524  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 13705  004526  0E0A               	movlw	10
 13706  004528  6E03               	movwf	___wmul@multiplicand^0,c
 13707  00452A  EC18  F02E         	call	___wmul	;wreg free
 13708  00452E  C008  FFF6         	movff	atoi@s,tblptrl
 13709  004532  C009  FFF7         	movff	atoi@s+1,tblptrh
 13710  004536                     	if	0	;tblptru may be non-zero
 13711  004536                     	endif
 13712  004536                     	if	0	;tblptru may be non-zero
 13713  004536                     	endif
 13714  004536  0008               	tblrd		*
 13715  004538  50F5               	movf	tablat,w,c
 13716  00453A  5E01               	subwf	?___wmul^0,f,c
 13717  00453C  0E00               	movlw	0
 13718  00453E  5A02               	subwfb	(?___wmul+1)^0,f,c
 13719  004540  0E30               	movlw	48
 13720  004542  2401               	addwf	?___wmul^0,w,c
 13721  004544  6E15               	movwf	atoi@n^0,c
 13722  004546  0E00               	movlw	0
 13723  004548  2002               	addwfc	(?___wmul+1)^0,w,c
 13724  00454A  6E16               	movwf	(atoi@n+1)^0,c
 13725  00454C  EF6F  F022         	goto	l5162
 13726  004550                     l5170:
 13727  004550  0ED0               	movlw	208
 13728  004552  6E0A               	movwf	??_atoi^0,c
 13729  004554  0EFF               	movlw	255
 13730  004556  6E0B               	movwf	(??_atoi+1)^0,c
 13731  004558  C008  FFF6         	movff	atoi@s,tblptrl
 13732  00455C  C009  FFF7         	movff	atoi@s+1,tblptrh
 13733  004560                     	if	0	;tblptru may be non-zero
 13734  004560                     	endif
 13735  004560                     	if	0	;tblptru may be non-zero
 13736  004560                     	endif
 13737  004560  0008               	tblrd		*
 13738  004562  50F5               	movf	tablat,w,c
 13739  004564  6E0C               	movwf	(??_atoi+2)^0,c
 13740  004566  6A0D               	clrf	(??_atoi+3)^0,c
 13741  004568  500A               	movf	??_atoi^0,w,c
 13742  00456A  260C               	addwf	(??_atoi+2)^0,f,c
 13743  00456C  500B               	movf	(??_atoi+1)^0,w,c
 13744  00456E  220D               	addwfc	(??_atoi+3)^0,f,c
 13745  004570  500D               	movf	(??_atoi+3)^0,w,c
 13746  004572  E10A               	bnz	u6240
 13747  004574  0E0A               	movlw	10
 13748  004576  5C0C               	subwf	(??_atoi+2)^0,w,c
 13749  004578  A0D8               	btfss	status,0,c
 13750  00457A  EFC1  F022         	goto	u6241
 13751  00457E  EFC4  F022         	goto	u6240
 13752  004582                     u6241:
 13753  004582  0E01               	movlw	1
 13754  004584  EFC5  F022         	goto	u6250
 13755  004588                     u6240:
 13756  004588  0E00               	movlw	0
 13757  00458A                     u6250:
 13758  00458A  6E12               	movwf	_atoi$2578^0,c
 13759  00458C  6A13               	clrf	(_atoi$2578+1)^0,c
 13760  00458E  5012               	movf	_atoi$2578^0,w,c
 13761  004590  1013               	iorwf	(_atoi$2578+1)^0,w,c
 13762  004592  A4D8               	btfss	status,2,c
 13763  004594  EFCE  F022         	goto	u6261
 13764  004598  EFD0  F022         	goto	u6260
 13765  00459C                     u6261:
 13766  00459C  EF8D  F022         	goto	l5166
 13767  0045A0                     u6260:
 13768  0045A0  500E               	movf	atoi@neg^0,w,c
 13769  0045A2  100F               	iorwf	(atoi@neg+1)^0,w,c
 13770  0045A4  A4D8               	btfss	status,2,c
 13771  0045A6  EFD7  F022         	goto	u6271
 13772  0045AA  EFD9  F022         	goto	u6270
 13773  0045AE                     u6271:
 13774  0045AE  EFE7  F022         	goto	l1423
 13775  0045B2                     u6270:
 13776  0045B2  C015  F00A         	movff	atoi@n,??_atoi
 13777  0045B6  C016  F00B         	movff	atoi@n+1,??_atoi+1
 13778  0045BA  1E0A               	comf	??_atoi^0,f,c
 13779  0045BC  1E0B               	comf	(??_atoi+1)^0,f,c
 13780  0045BE  4A0A               	infsnz	??_atoi^0,f,c
 13781  0045C0  2A0B               	incf	(??_atoi+1)^0,f,c
 13782  0045C2  C00A  F008         	movff	??_atoi,?_atoi
 13783  0045C6  C00B  F009         	movff	??_atoi+1,?_atoi+1
 13784  0045CA  EFEB  F022         	goto	l1426
 13785  0045CE                     l1423:
 13786  0045CE  C015  F008         	movff	atoi@n,?_atoi
 13787  0045D2  C016  F009         	movff	atoi@n+1,?_atoi+1
 13788  0045D6                     l1426:
 13789  0045D6  0012               	return		;funcret
 13790  0045D8                     __end_of_atoi:
 13791                           	callstack 0
 13792                           
 13793 ;; *************** function _isspace *****************
 13794 ;; Defined at:
 13795 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
 13796 ;; Parameters:    Size  Location     Type
 13797 ;;  c               2    0[COMRAM] int 
 13798 ;; Auto vars:     Size  Location     Type
 13799 ;;		None
 13800 ;; Return value:  Size  Location     Type
 13801 ;;                  2    0[COMRAM] int 
 13802 ;; Registers used:
 13803 ;;		wreg, status,2, status,0
 13804 ;; Tracked objects:
 13805 ;;		On entry : 0/0
 13806 ;;		On exit  : 0/0
 13807 ;;		Unchanged: 0/0
 13808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13809 ;;      Params:         2       0       0       0       0       0       0
 13810 ;;      Locals:         1       0       0       0       0       0       0
 13811 ;;      Temps:          4       0       0       0       0       0       0
 13812 ;;      Totals:         7       0       0       0       0       0       0
 13813 ;;Total ram usage:        7 bytes
 13814 ;; Hardware stack levels used:    1
 13815 ;; Hardware stack levels required when called:    1
 13816 ;; This function calls:
 13817 ;;		Nothing
 13818 ;; This function is called by:
 13819 ;;		_atoi
 13820 ;; This function uses a non-reentrant model
 13821 ;;
 13822                           
 13823                           	psect	text49
 13824  00585A                     __ptext49:
 13825                           	callstack 0
 13826  00585A                     _isspace:
 13827                           	callstack 23
 13828  00585A  0E01               	movlw	1
 13829  00585C  6E07               	movwf	_isspace$2607^0,c
 13830  00585E  0E20               	movlw	32
 13831  005860  1801               	xorwf	isspace@c^0,w,c
 13832  005862  1002               	iorwf	(isspace@c+1)^0,w,c
 13833  005864  B4D8               	btfsc	status,2,c
 13834  005866  EF37  F02C         	goto	u5521
 13835  00586A  EF39  F02C         	goto	u5520
 13836  00586E                     u5521:
 13837  00586E  EF52  F02C         	goto	l4778
 13838  005872                     u5520:
 13839  005872  0EF7               	movlw	247
 13840  005874  6E03               	movwf	??_isspace^0,c
 13841  005876  0EFF               	movlw	255
 13842  005878  6E04               	movwf	(??_isspace+1)^0,c
 13843  00587A  C001  F005         	movff	isspace@c,??_isspace+2
 13844  00587E  C002  F006         	movff	isspace@c+1,??_isspace+3
 13845  005882  5003               	movf	??_isspace^0,w,c
 13846  005884  2605               	addwf	(??_isspace+2)^0,f,c
 13847  005886  5004               	movf	(??_isspace+1)^0,w,c
 13848  005888  2206               	addwfc	(??_isspace+3)^0,f,c
 13849  00588A  5006               	movf	(??_isspace+3)^0,w,c
 13850  00588C  E109               	bnz	u5530
 13851  00588E  0E05               	movlw	5
 13852  005890  5C05               	subwf	(??_isspace+2)^0,w,c
 13853  005892  A0D8               	btfss	status,0,c
 13854  005894  EF4E  F02C         	goto	u5531
 13855  005898  EF50  F02C         	goto	u5530
 13856  00589C                     u5531:
 13857  00589C  EF52  F02C         	goto	l4778
 13858  0058A0                     u5530:
 13859  0058A0  0E00               	movlw	0
 13860  0058A2  6E07               	movwf	_isspace$2607^0,c
 13861  0058A4                     l4778:
 13862  0058A4  C007  F001         	movff	_isspace$2607,?_isspace
 13863  0058A8  6A02               	clrf	(?_isspace+1)^0,c
 13864  0058AA  0012               	return		;funcret
 13865  0058AC                     __end_of_isspace:
 13866                           	callstack 0
 13867                           
 13868 ;; *************** function _isdigit *****************
 13869 ;; Defined at:
 13870 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
 13871 ;; Parameters:    Size  Location     Type
 13872 ;;  c               2    0[COMRAM] int 
 13873 ;; Auto vars:     Size  Location     Type
 13874 ;;		None
 13875 ;; Return value:  Size  Location     Type
 13876 ;;                  2    0[COMRAM] int 
 13877 ;; Registers used:
 13878 ;;		wreg, status,2, status,0
 13879 ;; Tracked objects:
 13880 ;;		On entry : 0/0
 13881 ;;		On exit  : 0/0
 13882 ;;		Unchanged: 0/0
 13883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13884 ;;      Params:         2       0       0       0       0       0       0
 13885 ;;      Locals:         0       0       0       0       0       0       0
 13886 ;;      Temps:          4       0       0       0       0       0       0
 13887 ;;      Totals:         6       0       0       0       0       0       0
 13888 ;;Total ram usage:        6 bytes
 13889 ;; Hardware stack levels used:    1
 13890 ;; Hardware stack levels required when called:    1
 13891 ;; This function calls:
 13892 ;;		Nothing
 13893 ;; This function is called by:
 13894 ;;		_vfpfcnvrt
 13895 ;;		_atoi
 13896 ;; This function uses a non-reentrant model
 13897 ;;
 13898                           
 13899                           	psect	text50
 13900  005AA2                     __ptext50:
 13901                           	callstack 0
 13902  005AA2                     _isdigit:
 13903                           	callstack 24
 13904  005AA2  0ED0               	movlw	208
 13905  005AA4  6E03               	movwf	??_isdigit^0,c
 13906  005AA6  0EFF               	movlw	255
 13907  005AA8  6E04               	movwf	(??_isdigit+1)^0,c
 13908  005AAA  C001  F005         	movff	isdigit@c,??_isdigit+2
 13909  005AAE  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 13910  005AB2  5003               	movf	??_isdigit^0,w,c
 13911  005AB4  2605               	addwf	(??_isdigit+2)^0,f,c
 13912  005AB6  5004               	movf	(??_isdigit+1)^0,w,c
 13913  005AB8  2206               	addwfc	(??_isdigit+3)^0,f,c
 13914  005ABA  5006               	movf	(??_isdigit+3)^0,w,c
 13915  005ABC  E10A               	bnz	u5500
 13916  005ABE  0E0A               	movlw	10
 13917  005AC0  5C05               	subwf	(??_isdigit+2)^0,w,c
 13918  005AC2  A0D8               	btfss	status,0,c
 13919  005AC4  EF66  F02D         	goto	u5501
 13920  005AC8  EF69  F02D         	goto	u5500
 13921  005ACC                     u5501:
 13922  005ACC  0E01               	movlw	1
 13923  005ACE  EF6A  F02D         	goto	u5510
 13924  005AD2                     u5500:
 13925  005AD2  0E00               	movlw	0
 13926  005AD4                     u5510:
 13927  005AD4  6E01               	movwf	?_isdigit^0,c
 13928  005AD6  6A02               	clrf	(?_isdigit+1)^0,c
 13929  005AD8  0012               	return		;funcret
 13930  005ADA                     __end_of_isdigit:
 13931                           	callstack 0
 13932                           
 13933 ;; *************** function ___wmul *****************
 13934 ;; Defined at:
 13935 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
 13936 ;; Parameters:    Size  Location     Type
 13937 ;;  multiplier      2    0[COMRAM] unsigned int 
 13938 ;;  multiplicand    2    2[COMRAM] unsigned int 
 13939 ;; Auto vars:     Size  Location     Type
 13940 ;;  product         2    4[COMRAM] unsigned int 
 13941 ;; Return value:  Size  Location     Type
 13942 ;;                  2    0[COMRAM] unsigned int 
 13943 ;; Registers used:
 13944 ;;		wreg, status,2, status,0, prodl, prodh
 13945 ;; Tracked objects:
 13946 ;;		On entry : 0/0
 13947 ;;		On exit  : 0/0
 13948 ;;		Unchanged: 0/0
 13949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13950 ;;      Params:         4       0       0       0       0       0       0
 13951 ;;      Locals:         2       0       0       0       0       0       0
 13952 ;;      Temps:          0       0       0       0       0       0       0
 13953 ;;      Totals:         6       0       0       0       0       0       0
 13954 ;;Total ram usage:        6 bytes
 13955 ;; Hardware stack levels used:    1
 13956 ;; Hardware stack levels required when called:    1
 13957 ;; This function calls:
 13958 ;;		Nothing
 13959 ;; This function is called by:
 13960 ;;		_atoi
 13961 ;; This function uses a non-reentrant model
 13962 ;;
 13963                           
 13964                           	psect	text51
 13965  005C30                     __ptext51:
 13966                           	callstack 0
 13967  005C30                     ___wmul:
 13968                           	callstack 23
 13969  005C30  5001               	movf	___wmul@multiplier^0,w,c
 13970  005C32  0203               	mulwf	___wmul@multiplicand^0,c
 13971  005C34  CFF3 F005          	movff	prodl,___wmul@product
 13972  005C38  CFF4 F006          	movff	prodh,___wmul@product+1
 13973  005C3C  5001               	movf	___wmul@multiplier^0,w,c
 13974  005C3E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 13975  005C40  50F3               	movf	243,w,c
 13976  005C42  2606               	addwf	(___wmul@product+1)^0,f,c
 13977  005C44  5002               	movf	(___wmul@multiplier+1)^0,w,c
 13978  005C46  0203               	mulwf	___wmul@multiplicand^0,c
 13979  005C48  50F3               	movf	243,w,c
 13980  005C4A  2606               	addwf	(___wmul@product+1)^0,f,c
 13981  005C4C  C005  F001         	movff	___wmul@product,?___wmul
 13982  005C50  C006  F002         	movff	___wmul@product+1,?___wmul+1
 13983  005C54  0012               	return		;funcret
 13984  005C56                     __end_of___wmul:
 13985                           	callstack 0
 13986                           
 13987 ;; *************** function _eepromWrite *****************
 13988 ;; Defined at:
 13989 ;;		line 62 in file "fs_eeprom.c"
 13990 ;; Parameters:    Size  Location     Type
 13991 ;;  address         1    wreg     unsigned char 
 13992 ;;  data            1    0[COMRAM] unsigned char 
 13993 ;; Auto vars:     Size  Location     Type
 13994 ;;  address         1    1[COMRAM] unsigned char 
 13995 ;; Return value:  Size  Location     Type
 13996 ;;                  1    wreg      void 
 13997 ;; Registers used:
 13998 ;;		wreg, status,2
 13999 ;; Tracked objects:
 14000 ;;		On entry : 0/0
 14001 ;;		On exit  : 0/0
 14002 ;;		Unchanged: 0/0
 14003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14004 ;;      Params:         1       0       0       0       0       0       0
 14005 ;;      Locals:         1       0       0       0       0       0       0
 14006 ;;      Temps:          0       0       0       0       0       0       0
 14007 ;;      Totals:         2       0       0       0       0       0       0
 14008 ;;Total ram usage:        2 bytes
 14009 ;; Hardware stack levels used:    1
 14010 ;; Hardware stack levels required when called:    1
 14011 ;; This function calls:
 14012 ;;		Nothing
 14013 ;; This function is called by:
 14014 ;;		_stateMachine
 14015 ;; This function uses a non-reentrant model
 14016 ;;
 14017                           
 14018                           	psect	text52
 14019  005BB2                     __ptext52:
 14020                           	callstack 0
 14021  005BB2                     _eepromWrite:
 14022                           	callstack 27
 14023                           
 14024                           ;incstack = 0
 14025                           ;eepromWrite@address stored from wreg
 14026  005BB2  6E02               	movwf	eepromWrite@address^0,c
 14027  005BB4                     
 14028                           ;fs_eeprom.c: 62: void eepromWrite(uint8_t address, uint8_t data);fs_eeprom.c: 63: {;fs_
      +                          eeprom.c: 66:     EEADR = (uint8_t)address;
 14029  005BB4  C002  FFA9         	movff	eepromWrite@address,4009	;volatile
 14030  005BB8                     
 14031                           ;fs_eeprom.c: 68:     EEDATA = data;
 14032  005BB8  C001  FFA8         	movff	eepromWrite@data,4008	;volatile
 14033  005BBC                     
 14034                           ;fs_eeprom.c: 69:     EECON1bits.EEPGD = 0;
 14035  005BBC  9EA6               	bcf	166,7,c	;volsfr
 14036  005BBE                     
 14037                           ;fs_eeprom.c: 70:     EECON1bits.CFGS = 0;
 14038  005BBE  9CA6               	bcf	166,6,c	;volsfr
 14039  005BC0                     
 14040                           ;fs_eeprom.c: 71:     EECON1bits.WREN = 1;
 14041  005BC0  84A6               	bsf	166,2,c	;volsfr
 14042  005BC2                     
 14043                           ;fs_eeprom.c: 75:     EECON2 = 0x55;
 14044  005BC2  0E55               	movlw	85
 14045  005BC4  6EA7               	movwf	167,c	;volsfr
 14046  005BC6                     
 14047                           ;fs_eeprom.c: 76:     EECON2 = 0xAA;
 14048  005BC6  0EAA               	movlw	170
 14049  005BC8  6EA7               	movwf	167,c	;volsfr
 14050  005BCA                     
 14051                           ;fs_eeprom.c: 77:     EECON1bits.WR = 1;
 14052  005BCA  82A6               	bsf	166,1,c	;volsfr
 14053  005BCC                     l76:
 14054                           
 14055                           ;fs_eeprom.c: 80:     while(PIR2bits.EEIF == 0)
 14056  005BCC  A8A1               	btfss	161,4,c	;volatile
 14057  005BCE  EFEB  F02D         	goto	u6811
 14058  005BD2  EFED  F02D         	goto	u6810
 14059  005BD6                     u6811:
 14060  005BD6  EFE6  F02D         	goto	l76
 14061  005BDA                     u6810:
 14062  005BDA                     
 14063                           ;fs_eeprom.c: 85:     PIR2bits.EEIF = 0;
 14064  005BDA  98A1               	bcf	161,4,c	;volatile
 14065                           
 14066                           ;fs_eeprom.c: 86:     EECON1bits.WREN = 0;
 14067  005BDC  94A6               	bcf	166,2,c	;volsfr
 14068  005BDE  0012               	return		;funcret
 14069  005BE0                     __end_of_eepromWrite:
 14070                           	callstack 0
 14071                           
 14072 ;; *************** function _Lcd_Write_String *****************
 14073 ;; Defined at:
 14074 ;;		line 155 in file "fs_lcd.c"
 14075 ;; Parameters:    Size  Location     Type
 14076 ;;  a               2    4[COMRAM] PTR unsigned char 
 14077 ;;		 -> STR_15(17), STR_13(17), STR_11(17), STR_9(17), 
 14078 ;;		 -> STR_7(17), STR_5(17), STR_3(17), STR_1(17), 
 14079 ;;		 -> stateMachine@textCursor2(16), 
 14080 ;; Auto vars:     Size  Location     Type
 14081 ;;  i               2    8[COMRAM] int 
 14082 ;; Return value:  Size  Location     Type
 14083 ;;                  1    wreg      void 
 14084 ;; Registers used:
 14085 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14086 ;; Tracked objects:
 14087 ;;		On entry : 0/0
 14088 ;;		On exit  : 0/0
 14089 ;;		Unchanged: 0/0
 14090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14091 ;;      Params:         2       0       0       0       0       0       0
 14092 ;;      Locals:         2       0       0       0       0       0       0
 14093 ;;      Temps:          2       0       0       0       0       0       0
 14094 ;;      Totals:         6       0       0       0       0       0       0
 14095 ;;Total ram usage:        6 bytes
 14096 ;; Hardware stack levels used:    1
 14097 ;; Hardware stack levels required when called:    3
 14098 ;; This function calls:
 14099 ;;		_Lcd_Write_Char
 14100 ;; This function is called by:
 14101 ;;		_stateMachine
 14102 ;; This function uses a non-reentrant model
 14103 ;;
 14104                           
 14105                           	psect	text53
 14106  00537C                     __ptext53:
 14107                           	callstack 0
 14108  00537C                     _Lcd_Write_String:
 14109                           	callstack 25
 14110  00537C                     
 14111                           ;fs_lcd.c: 155: void Lcd_Write_String(char *a);fs_lcd.c: 156: {;fs_lcd.c: 157:    int i;
      +                          ;fs_lcd.c: 158:    for(i=0;a[i]!='\0';i++)
 14112  00537C  0E00               	movlw	0
 14113  00537E  6E0A               	movwf	(Lcd_Write_String@i+1)^0,c
 14114  005380  0E00               	movlw	0
 14115  005382  6E09               	movwf	Lcd_Write_String@i^0,c
 14116  005384  EFDE  F029         	goto	l5632
 14117  005388                     l5628:
 14118                           
 14119                           ;fs_lcd.c: 159:    Lcd_Write_Char(a[i]);
 14120  005388  5009               	movf	Lcd_Write_String@i^0,w,c
 14121  00538A  2405               	addwf	Lcd_Write_String@a^0,w,c
 14122  00538C  6E07               	movwf	??_Lcd_Write_String^0,c
 14123  00538E  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
 14124  005390  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 14125  005392  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
 14126  005394  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
 14127  005398  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 14128  00539C  6AF8               	clrf	tblptru,c
 14129  00539E  0E05               	movlw	(high __ramtop+-1)
 14130  0053A0  64F7               	cpfsgt	tblptrh,c
 14131  0053A2  D003               	bra	u6847
 14132  0053A4  0008               	tblrd		*
 14133  0053A6  50F5               	movf	tablat,w,c
 14134  0053A8  D005               	bra	u6840
 14135  0053AA                     u6847:
 14136  0053AA  CFF6 FFE1          	movff	tblptrl,fsr1l
 14137  0053AE  CFF7 FFE2          	movff	tblptrh,fsr1h
 14138  0053B2  50E7               	movf	indf1,w,c
 14139  0053B4                     u6840:
 14140  0053B4  EC6D  F02D         	call	_Lcd_Write_Char
 14141  0053B8  4A09               	infsnz	Lcd_Write_String@i^0,f,c
 14142  0053BA  2A0A               	incf	(Lcd_Write_String@i+1)^0,f,c
 14143  0053BC                     l5632:
 14144  0053BC  5009               	movf	Lcd_Write_String@i^0,w,c
 14145  0053BE  2405               	addwf	Lcd_Write_String@a^0,w,c
 14146  0053C0  6E07               	movwf	??_Lcd_Write_String^0,c
 14147  0053C2  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
 14148  0053C4  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 14149  0053C6  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
 14150  0053C8  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
 14151  0053CC  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 14152  0053D0  6AF8               	clrf	tblptru,c
 14153  0053D2  0E05               	movlw	(high __ramtop+-1)
 14154  0053D4  64F7               	cpfsgt	tblptrh,c
 14155  0053D6  D003               	bra	u6857
 14156  0053D8  0008               	tblrd		*
 14157  0053DA  50F5               	movf	tablat,w,c
 14158  0053DC  D005               	bra	u6850
 14159  0053DE                     u6857:
 14160  0053DE  CFF6 FFE1          	movff	tblptrl,fsr1l
 14161  0053E2  CFF7 FFE2          	movff	tblptrh,fsr1h
 14162  0053E6  50E7               	movf	indf1,w,c
 14163  0053E8                     u6850:
 14164  0053E8  0900               	iorlw	0
 14165  0053EA  A4D8               	btfss	status,2,c
 14166  0053EC  EFFA  F029         	goto	u6861
 14167  0053F0  EFFC  F029         	goto	u6860
 14168  0053F4                     u6861:
 14169  0053F4  EFC4  F029         	goto	l5628
 14170  0053F8                     u6860:
 14171  0053F8  0012               	return		;funcret
 14172  0053FA                     __end_of_Lcd_Write_String:
 14173                           	callstack 0
 14174                           
 14175 ;; *************** function _Lcd_Write_Char *****************
 14176 ;; Defined at:
 14177 ;;		line 132 in file "fs_lcd.c"
 14178 ;; Parameters:    Size  Location     Type
 14179 ;;  a               1    wreg     unsigned char 
 14180 ;; Auto vars:     Size  Location     Type
 14181 ;;  a               1    3[COMRAM] unsigned char 
 14182 ;;  y               1    2[COMRAM] unsigned char 
 14183 ;;  temp            1    1[COMRAM] unsigned char 
 14184 ;; Return value:  Size  Location     Type
 14185 ;;                  1    wreg      void 
 14186 ;; Registers used:
 14187 ;;		wreg, status,2, status,0, cstack
 14188 ;; Tracked objects:
 14189 ;;		On entry : 0/0
 14190 ;;		On exit  : 0/0
 14191 ;;		Unchanged: 0/0
 14192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14193 ;;      Params:         0       0       0       0       0       0       0
 14194 ;;      Locals:         3       0       0       0       0       0       0
 14195 ;;      Temps:          0       0       0       0       0       0       0
 14196 ;;      Totals:         3       0       0       0       0       0       0
 14197 ;;Total ram usage:        3 bytes
 14198 ;; Hardware stack levels used:    1
 14199 ;; Hardware stack levels required when called:    2
 14200 ;; This function calls:
 14201 ;;		_Lcd_Port
 14202 ;; This function is called by:
 14203 ;;		_Lcd_Write_String
 14204 ;; This function uses a non-reentrant model
 14205 ;;
 14206                           
 14207                           	psect	text54
 14208  005ADA                     __ptext54:
 14209                           	callstack 0
 14210  005ADA                     _Lcd_Write_Char:
 14211                           	callstack 25
 14212                           
 14213                           ;incstack = 0
 14214                           ;Lcd_Write_Char@a stored from wreg
 14215  005ADA  6E04               	movwf	Lcd_Write_Char@a^0,c
 14216  005ADC                     
 14217                           ;fs_lcd.c: 132: void Lcd_Write_Char(char a);fs_lcd.c: 133: {;fs_lcd.c: 134:    char temp
      +                          ,y;;fs_lcd.c: 135:    temp = a&0x0F;
 14218  005ADC  5004               	movf	Lcd_Write_Char@a^0,w,c
 14219  005ADE  0B0F               	andlw	15
 14220  005AE0  6E02               	movwf	Lcd_Write_Char@temp^0,c
 14221                           
 14222                           ;fs_lcd.c: 136:    y = a&0xF0;
 14223  005AE2  5004               	movf	Lcd_Write_Char@a^0,w,c
 14224  005AE4  0BF0               	andlw	240
 14225  005AE6  6E03               	movwf	Lcd_Write_Char@y^0,c
 14226  005AE8                     
 14227                           ;fs_lcd.c: 137:    PORTDbits.RD6 = 1;
 14228  005AE8  8C83               	bsf	131,6,c	;volatile
 14229  005AEA                     
 14230                           ;fs_lcd.c: 138:    Lcd_Port(y>>4);
 14231  005AEA  3803               	swapf	Lcd_Write_Char@y^0,w,c
 14232  005AEC  0B0F               	andlw	15
 14233  005AEE  ECAD  F02B         	call	_Lcd_Port
 14234  005AF2                     
 14235                           ;fs_lcd.c: 139:    PORTDbits.RD7 = 1;
 14236  005AF2  8E83               	bsf	131,7,c	;volatile
 14237  005AF4                     
 14238                           ;fs_lcd.c: 140:    _delay((unsigned long)((40)*(64000000UL/4000000.0)));
 14239  005AF4  0ED5               	movlw	213
 14240  005AF6                     u7867:
 14241  005AF6  2EE8               	decfsz	wreg,f,c
 14242  005AF8  D7FE               	bra	u7867
 14243  005AFA  F000               	nop	
 14244  005AFC                     
 14245                           ;fs_lcd.c: 141:    PORTDbits.RD7 = 0;
 14246  005AFC  9E83               	bcf	131,7,c	;volatile
 14247  005AFE                     
 14248                           ;fs_lcd.c: 142:    Lcd_Port(temp);
 14249  005AFE  5002               	movf	Lcd_Write_Char@temp^0,w,c
 14250  005B00  ECAD  F02B         	call	_Lcd_Port
 14251  005B04                     
 14252                           ;fs_lcd.c: 143:    PORTDbits.RD7 = 1;
 14253  005B04  8E83               	bsf	131,7,c	;volatile
 14254  005B06                     
 14255                           ;fs_lcd.c: 144:    _delay((unsigned long)((40)*(64000000UL/4000000.0)));
 14256  005B06  0ED5               	movlw	213
 14257  005B08                     u7877:
 14258  005B08  2EE8               	decfsz	wreg,f,c
 14259  005B0A  D7FE               	bra	u7877
 14260  005B0C  F000               	nop	
 14261  005B0E                     
 14262                           ;fs_lcd.c: 145:    PORTDbits.RD7 = 0;
 14263  005B0E  9E83               	bcf	131,7,c	;volatile
 14264  005B10  0012               	return		;funcret
 14265  005B12                     __end_of_Lcd_Write_Char:
 14266                           	callstack 0
 14267                           
 14268 ;; *************** function _Lcd_Set_Cursor *****************
 14269 ;; Defined at:
 14270 ;;		line 62 in file "fs_lcd.c"
 14271 ;; Parameters:    Size  Location     Type
 14272 ;;  a               1    wreg     unsigned char 
 14273 ;;  b               1    3[COMRAM] unsigned char 
 14274 ;; Auto vars:     Size  Location     Type
 14275 ;;  a               1    4[COMRAM] unsigned char 
 14276 ;;  temp            1    7[COMRAM] unsigned char 
 14277 ;;  y               1    6[COMRAM] unsigned char 
 14278 ;;  z               1    5[COMRAM] unsigned char 
 14279 ;; Return value:  Size  Location     Type
 14280 ;;                  1    wreg      void 
 14281 ;; Registers used:
 14282 ;;		wreg, status,2, status,0, cstack
 14283 ;; Tracked objects:
 14284 ;;		On entry : 0/0
 14285 ;;		On exit  : 0/0
 14286 ;;		Unchanged: 0/0
 14287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14288 ;;      Params:         1       0       0       0       0       0       0
 14289 ;;      Locals:         4       0       0       0       0       0       0
 14290 ;;      Temps:          0       0       0       0       0       0       0
 14291 ;;      Totals:         5       0       0       0       0       0       0
 14292 ;;Total ram usage:        5 bytes
 14293 ;; Hardware stack levels used:    1
 14294 ;; Hardware stack levels required when called:    3
 14295 ;; This function calls:
 14296 ;;		_Lcd_Cmd
 14297 ;; This function is called by:
 14298 ;;		_stateMachine
 14299 ;; This function uses a non-reentrant model
 14300 ;;
 14301                           
 14302                           	psect	text55
 14303  005638                     __ptext55:
 14304                           	callstack 0
 14305  005638                     _Lcd_Set_Cursor:
 14306                           	callstack 25
 14307                           
 14308                           ;incstack = 0
 14309                           ;Lcd_Set_Cursor@a stored from wreg
 14310  005638  6E05               	movwf	Lcd_Set_Cursor@a^0,c
 14311  00563A                     
 14312                           ;fs_lcd.c: 62: void Lcd_Set_Cursor(char a, char b);fs_lcd.c: 63: {;fs_lcd.c: 64:    char
      +                           temp,z,y;;fs_lcd.c: 65:    if(a == 1)
 14313  00563A  0405               	decf	Lcd_Set_Cursor@a^0,w,c
 14314  00563C  A4D8               	btfss	status,2,c
 14315  00563E  EF23  F02B         	goto	u6821
 14316  005642  EF25  F02B         	goto	u6820
 14317  005646                     u6821:
 14318  005646  EF36  F02B         	goto	l5618
 14319  00564A                     u6820:
 14320  00564A                     
 14321                           ;fs_lcd.c: 66:    {;fs_lcd.c: 67:      temp = 0x80 + b - 1;
 14322  00564A  5004               	movf	Lcd_Set_Cursor@b^0,w,c
 14323  00564C  0F7F               	addlw	127
 14324  00564E  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
 14325                           
 14326                           ;fs_lcd.c: 68:       z = temp>>4;
 14327  005650  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
 14328  005652  0B0F               	andlw	15
 14329  005654  6E06               	movwf	Lcd_Set_Cursor@z^0,c
 14330                           
 14331                           ;fs_lcd.c: 69:       y = temp & 0x0F;
 14332  005656  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
 14333  005658  0B0F               	andlw	15
 14334  00565A  6E07               	movwf	Lcd_Set_Cursor@y^0,c
 14335  00565C                     
 14336                           ;fs_lcd.c: 70:       Lcd_Cmd(z);
 14337  00565C  5006               	movf	Lcd_Set_Cursor@z^0,w,c
 14338  00565E  EC4A  F02E         	call	_Lcd_Cmd
 14339  005662                     
 14340                           ;fs_lcd.c: 71:       Lcd_Cmd(y);
 14341  005662  5007               	movf	Lcd_Set_Cursor@y^0,w,c
 14342  005664  EC4A  F02E         	call	_Lcd_Cmd
 14343                           
 14344                           ;fs_lcd.c: 72:    }
 14345  005668  EF4E  F02B         	goto	l116
 14346  00566C                     l5618:
 14347  00566C  0E02               	movlw	2
 14348  00566E  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
 14349  005670  A4D8               	btfss	status,2,c
 14350  005672  EF3D  F02B         	goto	u6831
 14351  005676  EF3F  F02B         	goto	u6830
 14352  00567A                     u6831:
 14353  00567A  EF4E  F02B         	goto	l116
 14354  00567E                     u6830:
 14355  00567E                     
 14356                           ;fs_lcd.c: 74:    {;fs_lcd.c: 75:       temp = 0xC0 + b - 1;
 14357  00567E  5004               	movf	Lcd_Set_Cursor@b^0,w,c
 14358  005680  0FBF               	addlw	191
 14359  005682  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
 14360                           
 14361                           ;fs_lcd.c: 76:       z = temp>>4;
 14362  005684  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
 14363  005686  0B0F               	andlw	15
 14364  005688  6E06               	movwf	Lcd_Set_Cursor@z^0,c
 14365                           
 14366                           ;fs_lcd.c: 77:       y = temp & 0x0F;
 14367  00568A  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
 14368  00568C  0B0F               	andlw	15
 14369  00568E  6E07               	movwf	Lcd_Set_Cursor@y^0,c
 14370  005690                     
 14371                           ;fs_lcd.c: 78:       Lcd_Cmd(z);
 14372  005690  5006               	movf	Lcd_Set_Cursor@z^0,w,c
 14373  005692  EC4A  F02E         	call	_Lcd_Cmd
 14374  005696                     
 14375                           ;fs_lcd.c: 79:       Lcd_Cmd(y);
 14376  005696  5007               	movf	Lcd_Set_Cursor@y^0,w,c
 14377  005698  EC4A  F02E         	call	_Lcd_Cmd
 14378  00569C                     l116:
 14379  00569C  0012               	return		;funcret
 14380  00569E                     __end_of_Lcd_Set_Cursor:
 14381                           	callstack 0
 14382                           
 14383 ;; *************** function _buttonControlFlags *****************
 14384 ;; Defined at:
 14385 ;;		line 79 in file "fs_menu_controller.c"
 14386 ;; Parameters:    Size  Location     Type
 14387 ;;		None
 14388 ;; Auto vars:     Size  Location     Type
 14389 ;;		None
 14390 ;; Return value:  Size  Location     Type
 14391 ;;                  1    wreg      void 
 14392 ;; Registers used:
 14393 ;;		wreg, status,2, status,0
 14394 ;; Tracked objects:
 14395 ;;		On entry : 0/0
 14396 ;;		On exit  : 0/0
 14397 ;;		Unchanged: 0/0
 14398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14399 ;;      Params:         0       0       0       0       0       0       0
 14400 ;;      Locals:         0       0       0       0       0       0       0
 14401 ;;      Temps:          0       0       0       0       0       0       0
 14402 ;;      Totals:         0       0       0       0       0       0       0
 14403 ;;Total ram usage:        0 bytes
 14404 ;; Hardware stack levels used:    1
 14405 ;; Hardware stack levels required when called:    1
 14406 ;; This function calls:
 14407 ;;		Nothing
 14408 ;; This function is called by:
 14409 ;;		_menuControl
 14410 ;; This function uses a non-reentrant model
 14411 ;;
 14412                           
 14413                           	psect	text56
 14414  003F0A                     __ptext56:
 14415                           	callstack 0
 14416  003F0A                     _buttonControlFlags:
 14417                           	callstack 28
 14418  003F0A                     
 14419                           ;fs_menu_controller.c: 82:     if ((button_bounce_controller.menu == 0) && (PORTBbits.RB
      +                          7 == 0))
 14420  003F0A  0101               	movlb	1	; () banked
 14421  003F0C  519D               	movf	_button_bounce_controller& (0+255),w,b
 14422  003F0E  A4D8               	btfss	status,2,c
 14423  003F10  EF8C  F01F         	goto	u6881
 14424  003F14  EF8E  F01F         	goto	u6880
 14425  003F18                     u6881:
 14426  003F18  EF99  F01F         	goto	l5672
 14427  003F1C                     u6880:
 14428  003F1C                     
 14429                           ; BSR set to: 1
 14430  003F1C  BE81               	btfsc	129,7,c	;volatile
 14431  003F1E  EF93  F01F         	goto	u6891
 14432  003F22  EF95  F01F         	goto	u6890
 14433  003F26                     u6891:
 14434  003F26  EF99  F01F         	goto	l5672
 14435  003F2A                     u6890:
 14436  003F2A                     
 14437                           ; BSR set to: 1
 14438                           ;fs_menu_controller.c: 83:     {;fs_menu_controller.c: 84:         button_bounce_control
      +                          ler.menu = 1;
 14439  003F2A  0E01               	movlw	1
 14440  003F2C  6F9D               	movwf	_button_bounce_controller& (0+255),b
 14441                           
 14442                           ;fs_menu_controller.c: 85:         menu_flags.menu_input_flag = 1;
 14443  003F2E  0E01               	movlw	1
 14444  003F30  6F97               	movwf	_menu_flags& (0+255),b
 14445  003F32                     l5672:
 14446                           
 14447                           ; BSR set to: 1
 14448                           ;fs_menu_controller.c: 88:     if ((PORTBbits.RB7 == 1) && (button_bounce_controller.men
      +                          u == 1))
 14449  003F32  AE81               	btfss	129,7,c	;volatile
 14450  003F34  EF9E  F01F         	goto	u6901
 14451  003F38  EFA0  F01F         	goto	u6900
 14452  003F3C                     u6901:
 14453  003F3C  EFAC  F01F         	goto	l312
 14454  003F40                     u6900:
 14455  003F40                     
 14456                           ; BSR set to: 1
 14457  003F40  059D               	decf	_button_bounce_controller& (0+255),w,b
 14458  003F42  A4D8               	btfss	status,2,c
 14459  003F44  EFA6  F01F         	goto	u6911
 14460  003F48  EFA8  F01F         	goto	u6910
 14461  003F4C                     u6911:
 14462  003F4C  EFAC  F01F         	goto	l312
 14463  003F50                     u6910:
 14464  003F50                     
 14465                           ; BSR set to: 1
 14466                           ;fs_menu_controller.c: 89:     {;fs_menu_controller.c: 90:         button_bounce_control
      +                          ler.menu = 0;
 14467  003F50  0E00               	movlw	0
 14468  003F52  6F9D               	movwf	_button_bounce_controller& (0+255),b
 14469                           
 14470                           ;fs_menu_controller.c: 91:         menu_flags.menu_input_flag = 0;
 14471  003F54  0E00               	movlw	0
 14472  003F56  6F97               	movwf	_menu_flags& (0+255),b
 14473  003F58                     l312:
 14474                           
 14475                           ; BSR set to: 1
 14476                           ;fs_menu_controller.c: 95:     if ((button_bounce_controller.pause == 0) && (PORTDbits.R
      +                          D2 == 0))
 14477  003F58  51A0               	movf	(_button_bounce_controller+3)& (0+255),w,b
 14478  003F5A  A4D8               	btfss	status,2,c
 14479  003F5C  EFB2  F01F         	goto	u6921
 14480  003F60  EFB4  F01F         	goto	u6920
 14481  003F64                     u6921:
 14482  003F64  EFBF  F01F         	goto	l5682
 14483  003F68                     u6920:
 14484  003F68                     
 14485                           ; BSR set to: 1
 14486  003F68  B483               	btfsc	131,2,c	;volatile
 14487  003F6A  EFB9  F01F         	goto	u6931
 14488  003F6E  EFBB  F01F         	goto	u6930
 14489  003F72                     u6931:
 14490  003F72  EFBF  F01F         	goto	l5682
 14491  003F76                     u6930:
 14492  003F76                     
 14493                           ; BSR set to: 1
 14494                           ;fs_menu_controller.c: 96:     {;fs_menu_controller.c: 97:         button_bounce_control
      +                          ler.pause = 1;
 14495  003F76  0E01               	movlw	1
 14496  003F78  6FA0               	movwf	(_button_bounce_controller+3)& (0+255),b
 14497                           
 14498                           ;fs_menu_controller.c: 98:         menu_flags.menu_pause_flag = 1;
 14499  003F7A  0E01               	movlw	1
 14500  003F7C  6F9A               	movwf	(_menu_flags+3)& (0+255),b
 14501  003F7E                     l5682:
 14502                           
 14503                           ; BSR set to: 1
 14504                           ;fs_menu_controller.c: 100:     if ((PORTDbits.RD2 == 1) && (button_bounce_controller.pa
      +                          use == 1))
 14505  003F7E  A483               	btfss	131,2,c	;volatile
 14506  003F80  EFC4  F01F         	goto	u6941
 14507  003F84  EFC6  F01F         	goto	u6940
 14508  003F88                     u6941:
 14509  003F88  EFD2  F01F         	goto	l314
 14510  003F8C                     u6940:
 14511  003F8C                     
 14512                           ; BSR set to: 1
 14513  003F8C  05A0               	decf	(_button_bounce_controller+3)& (0+255),w,b
 14514  003F8E  A4D8               	btfss	status,2,c
 14515  003F90  EFCC  F01F         	goto	u6951
 14516  003F94  EFCE  F01F         	goto	u6950
 14517  003F98                     u6951:
 14518  003F98  EFD2  F01F         	goto	l314
 14519  003F9C                     u6950:
 14520  003F9C                     
 14521                           ; BSR set to: 1
 14522                           ;fs_menu_controller.c: 101:     {;fs_menu_controller.c: 102:         button_bounce_contr
      +                          oller.pause = 0;
 14523  003F9C  0E00               	movlw	0
 14524  003F9E  6FA0               	movwf	(_button_bounce_controller+3)& (0+255),b
 14525                           
 14526                           ;fs_menu_controller.c: 103:         menu_flags.menu_pause_flag = 0;
 14527  003FA0  0E00               	movlw	0
 14528  003FA2  6F9A               	movwf	(_menu_flags+3)& (0+255),b
 14529  003FA4                     l314:
 14530                           
 14531                           ; BSR set to: 1
 14532                           ;fs_menu_controller.c: 107:     if ((button_bounce_controller.start == 0) && (PORTDbits.
      +                          RD0 == 0))
 14533  003FA4  519E               	movf	(_button_bounce_controller+1)& (0+255),w,b
 14534  003FA6  A4D8               	btfss	status,2,c
 14535  003FA8  EFD8  F01F         	goto	u6961
 14536  003FAC  EFDA  F01F         	goto	u6960
 14537  003FB0                     u6961:
 14538  003FB0  EFE5  F01F         	goto	l5692
 14539  003FB4                     u6960:
 14540  003FB4                     
 14541                           ; BSR set to: 1
 14542  003FB4  B083               	btfsc	131,0,c	;volatile
 14543  003FB6  EFDF  F01F         	goto	u6971
 14544  003FBA  EFE1  F01F         	goto	u6970
 14545  003FBE                     u6971:
 14546  003FBE  EFE5  F01F         	goto	l5692
 14547  003FC2                     u6970:
 14548  003FC2                     
 14549                           ; BSR set to: 1
 14550                           ;fs_menu_controller.c: 108:     {;fs_menu_controller.c: 109:         button_bounce_contr
      +                          oller.start = 1;
 14551  003FC2  0E01               	movlw	1
 14552  003FC4  6F9E               	movwf	(_button_bounce_controller+1)& (0+255),b
 14553                           
 14554                           ;fs_menu_controller.c: 110:         menu_flags.menu_start_flag = 1;
 14555  003FC6  0E01               	movlw	1
 14556  003FC8  6F98               	movwf	(_menu_flags+1)& (0+255),b
 14557  003FCA                     l5692:
 14558                           
 14559                           ; BSR set to: 1
 14560                           ;fs_menu_controller.c: 112:     if ((PORTDbits.RD0 == 1) && (button_bounce_controller.st
      +                          art == 1))
 14561  003FCA  A083               	btfss	131,0,c	;volatile
 14562  003FCC  EFEA  F01F         	goto	u6981
 14563  003FD0  EFEC  F01F         	goto	u6980
 14564  003FD4                     u6981:
 14565  003FD4  EFF8  F01F         	goto	l316
 14566  003FD8                     u6980:
 14567  003FD8                     
 14568                           ; BSR set to: 1
 14569  003FD8  059E               	decf	(_button_bounce_controller+1)& (0+255),w,b
 14570  003FDA  A4D8               	btfss	status,2,c
 14571  003FDC  EFF2  F01F         	goto	u6991
 14572  003FE0  EFF4  F01F         	goto	u6990
 14573  003FE4                     u6991:
 14574  003FE4  EFF8  F01F         	goto	l316
 14575  003FE8                     u6990:
 14576  003FE8                     
 14577                           ; BSR set to: 1
 14578                           ;fs_menu_controller.c: 113:     {;fs_menu_controller.c: 114:         button_bounce_contr
      +                          oller.start = 0;
 14579  003FE8  0E00               	movlw	0
 14580  003FEA  6F9E               	movwf	(_button_bounce_controller+1)& (0+255),b
 14581                           
 14582                           ;fs_menu_controller.c: 115:         menu_flags.menu_start_flag = 0;
 14583  003FEC  0E00               	movlw	0
 14584  003FEE  6F98               	movwf	(_menu_flags+1)& (0+255),b
 14585  003FF0                     l316:
 14586                           
 14587                           ; BSR set to: 1
 14588                           ;fs_menu_controller.c: 119:     if ((button_bounce_controller.stop == 0) && (PORTDbits.R
      +                          D1 == 0))
 14589  003FF0  519F               	movf	(_button_bounce_controller+2)& (0+255),w,b
 14590  003FF2  A4D8               	btfss	status,2,c
 14591  003FF4  EFFE  F01F         	goto	u7001
 14592  003FF8  EF00  F020         	goto	u7000
 14593  003FFC                     u7001:
 14594  003FFC  EF0B  F020         	goto	l5702
 14595  004000                     u7000:
 14596  004000                     
 14597                           ; BSR set to: 1
 14598  004000  B283               	btfsc	131,1,c	;volatile
 14599  004002  EF05  F020         	goto	u7011
 14600  004006  EF07  F020         	goto	u7010
 14601  00400A                     u7011:
 14602  00400A  EF0B  F020         	goto	l5702
 14603  00400E                     u7010:
 14604  00400E                     
 14605                           ; BSR set to: 1
 14606                           ;fs_menu_controller.c: 120:     {;fs_menu_controller.c: 121:         button_bounce_contr
      +                          oller.stop = 1;
 14607  00400E  0E01               	movlw	1
 14608  004010  6F9F               	movwf	(_button_bounce_controller+2)& (0+255),b
 14609                           
 14610                           ;fs_menu_controller.c: 122:         menu_flags.menu_stop_flag = 1;
 14611  004012  0E01               	movlw	1
 14612  004014  6F99               	movwf	(_menu_flags+2)& (0+255),b
 14613  004016                     l5702:
 14614                           
 14615                           ; BSR set to: 1
 14616                           ;fs_menu_controller.c: 124:     if ((PORTDbits.RD1 == 1) && (button_bounce_controller.st
      +                          op == 1))
 14617  004016  A283               	btfss	131,1,c	;volatile
 14618  004018  EF10  F020         	goto	u7021
 14619  00401C  EF12  F020         	goto	u7020
 14620  004020                     u7021:
 14621  004020  EF1E  F020         	goto	l318
 14622  004024                     u7020:
 14623  004024                     
 14624                           ; BSR set to: 1
 14625  004024  059F               	decf	(_button_bounce_controller+2)& (0+255),w,b
 14626  004026  A4D8               	btfss	status,2,c
 14627  004028  EF18  F020         	goto	u7031
 14628  00402C  EF1A  F020         	goto	u7030
 14629  004030                     u7031:
 14630  004030  EF1E  F020         	goto	l318
 14631  004034                     u7030:
 14632  004034                     
 14633                           ; BSR set to: 1
 14634                           ;fs_menu_controller.c: 125:     {;fs_menu_controller.c: 126:         button_bounce_contr
      +                          oller.stop = 0;
 14635  004034  0E00               	movlw	0
 14636  004036  6F9F               	movwf	(_button_bounce_controller+2)& (0+255),b
 14637                           
 14638                           ;fs_menu_controller.c: 127:         menu_flags.menu_stop_flag = 0;
 14639  004038  0E00               	movlw	0
 14640  00403A  6F99               	movwf	(_menu_flags+2)& (0+255),b
 14641  00403C                     l318:
 14642                           
 14643                           ; BSR set to: 1
 14644                           ;fs_menu_controller.c: 131:     if ((button_bounce_controller.increase == 0) && (PORTBbi
      +                          ts.RB6 == 0))
 14645  00403C  51A2               	movf	(_button_bounce_controller+5)& (0+255),w,b
 14646  00403E  A4D8               	btfss	status,2,c
 14647  004040  EF24  F020         	goto	u7041
 14648  004044  EF26  F020         	goto	u7040
 14649  004048                     u7041:
 14650  004048  EF31  F020         	goto	l5712
 14651  00404C                     u7040:
 14652  00404C                     
 14653                           ; BSR set to: 1
 14654  00404C  BC81               	btfsc	129,6,c	;volatile
 14655  00404E  EF2B  F020         	goto	u7051
 14656  004052  EF2D  F020         	goto	u7050
 14657  004056                     u7051:
 14658  004056  EF31  F020         	goto	l5712
 14659  00405A                     u7050:
 14660  00405A                     
 14661                           ; BSR set to: 1
 14662                           ;fs_menu_controller.c: 132:     {;fs_menu_controller.c: 133:         button_bounce_contr
      +                          oller.increase = 1;
 14663  00405A  0E01               	movlw	1
 14664  00405C  6FA2               	movwf	(_button_bounce_controller+5)& (0+255),b
 14665                           
 14666                           ;fs_menu_controller.c: 134:         menu_flags.menu_increase_flag = 1;
 14667  00405E  0E01               	movlw	1
 14668  004060  6F9B               	movwf	(_menu_flags+4)& (0+255),b
 14669  004062                     l5712:
 14670                           
 14671                           ; BSR set to: 1
 14672                           ;fs_menu_controller.c: 136:     if ((PORTBbits.RB6 == 1) && (button_bounce_controller.in
      +                          crease == 1))
 14673  004062  AC81               	btfss	129,6,c	;volatile
 14674  004064  EF36  F020         	goto	u7061
 14675  004068  EF38  F020         	goto	u7060
 14676  00406C                     u7061:
 14677  00406C  EF44  F020         	goto	l320
 14678  004070                     u7060:
 14679  004070                     
 14680                           ; BSR set to: 1
 14681  004070  05A2               	decf	(_button_bounce_controller+5)& (0+255),w,b
 14682  004072  A4D8               	btfss	status,2,c
 14683  004074  EF3E  F020         	goto	u7071
 14684  004078  EF40  F020         	goto	u7070
 14685  00407C                     u7071:
 14686  00407C  EF44  F020         	goto	l320
 14687  004080                     u7070:
 14688  004080                     
 14689                           ; BSR set to: 1
 14690                           ;fs_menu_controller.c: 137:     {;fs_menu_controller.c: 138:         button_bounce_contr
      +                          oller.increase = 0;
 14691  004080  0E00               	movlw	0
 14692  004082  6FA2               	movwf	(_button_bounce_controller+5)& (0+255),b
 14693                           
 14694                           ;fs_menu_controller.c: 139:         menu_flags.menu_increase_flag = 0;
 14695  004084  0E00               	movlw	0
 14696  004086  6F9B               	movwf	(_menu_flags+4)& (0+255),b
 14697  004088                     l320:
 14698                           
 14699                           ; BSR set to: 1
 14700                           ;fs_menu_controller.c: 143:     if ((button_bounce_controller.decrease == 0) && (PORTDbi
      +                          ts.RD4 == 0))
 14701  004088  51A1               	movf	(_button_bounce_controller+4)& (0+255),w,b
 14702  00408A  A4D8               	btfss	status,2,c
 14703  00408C  EF4A  F020         	goto	u7081
 14704  004090  EF4C  F020         	goto	u7080
 14705  004094                     u7081:
 14706  004094  EF57  F020         	goto	l5722
 14707  004098                     u7080:
 14708  004098                     
 14709                           ; BSR set to: 1
 14710  004098  B883               	btfsc	131,4,c	;volatile
 14711  00409A  EF51  F020         	goto	u7091
 14712  00409E  EF53  F020         	goto	u7090
 14713  0040A2                     u7091:
 14714  0040A2  EF57  F020         	goto	l5722
 14715  0040A6                     u7090:
 14716  0040A6                     
 14717                           ; BSR set to: 1
 14718                           ;fs_menu_controller.c: 144:     {;fs_menu_controller.c: 145:         button_bounce_contr
      +                          oller.decrease = 1;
 14719  0040A6  0E01               	movlw	1
 14720  0040A8  6FA1               	movwf	(_button_bounce_controller+4)& (0+255),b
 14721                           
 14722                           ;fs_menu_controller.c: 146:         menu_flags.menu_decrease_flag = 1;
 14723  0040AA  0E01               	movlw	1
 14724  0040AC  6F9C               	movwf	(_menu_flags+5)& (0+255),b
 14725  0040AE                     l5722:
 14726                           
 14727                           ; BSR set to: 1
 14728                           ;fs_menu_controller.c: 148:     if ((PORTDbits.RD4 == 1) && (button_bounce_controller.de
      +                          crease == 1))
 14729  0040AE  A883               	btfss	131,4,c	;volatile
 14730  0040B0  EF5C  F020         	goto	u7101
 14731  0040B4  EF5E  F020         	goto	u7100
 14732  0040B8                     u7101:
 14733  0040B8  EF6A  F020         	goto	l323
 14734  0040BC                     u7100:
 14735  0040BC                     
 14736                           ; BSR set to: 1
 14737  0040BC  05A1               	decf	(_button_bounce_controller+4)& (0+255),w,b
 14738  0040BE  A4D8               	btfss	status,2,c
 14739  0040C0  EF64  F020         	goto	u7111
 14740  0040C4  EF66  F020         	goto	u7110
 14741  0040C8                     u7111:
 14742  0040C8  EF6A  F020         	goto	l323
 14743  0040CC                     u7110:
 14744  0040CC                     
 14745                           ; BSR set to: 1
 14746                           ;fs_menu_controller.c: 149:     {;fs_menu_controller.c: 150:         button_bounce_contr
      +                          oller.decrease = 0;
 14747  0040CC  0E00               	movlw	0
 14748  0040CE  6FA1               	movwf	(_button_bounce_controller+4)& (0+255),b
 14749                           
 14750                           ;fs_menu_controller.c: 151:         menu_flags.menu_decrease_flag = 0;
 14751  0040D0  0E00               	movlw	0
 14752  0040D2  6F9C               	movwf	(_menu_flags+5)& (0+255),b
 14753  0040D4                     l323:
 14754                           
 14755                           ; BSR set to: 1
 14756  0040D4  0012               	return		;funcret
 14757  0040D6                     __end_of_buttonControlFlags:
 14758                           	callstack 0
 14759                           
 14760 ;; *************** function _mcu_init *****************
 14761 ;; Defined at:
 14762 ;;		line 42 in file "fs_mcu.c"
 14763 ;; Parameters:    Size  Location     Type
 14764 ;;		None
 14765 ;; Auto vars:     Size  Location     Type
 14766 ;;		None
 14767 ;; Return value:  Size  Location     Type
 14768 ;;                  1    wreg      void 
 14769 ;; Registers used:
 14770 ;;		wreg, status,2
 14771 ;; Tracked objects:
 14772 ;;		On entry : 0/0
 14773 ;;		On exit  : 0/0
 14774 ;;		Unchanged: 0/0
 14775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14776 ;;      Params:         0       0       0       0       0       0       0
 14777 ;;      Locals:         0       0       0       0       0       0       0
 14778 ;;      Temps:          0       0       0       0       0       0       0
 14779 ;;      Totals:         0       0       0       0       0       0       0
 14780 ;;Total ram usage:        0 bytes
 14781 ;; Hardware stack levels used:    1
 14782 ;; Hardware stack levels required when called:    1
 14783 ;; This function calls:
 14784 ;;		Nothing
 14785 ;; This function is called by:
 14786 ;;		_main
 14787 ;; This function uses a non-reentrant model
 14788 ;;
 14789                           
 14790                           	psect	text57
 14791  005CB2                     __ptext57:
 14792                           	callstack 0
 14793  005CB2                     _mcu_init:
 14794                           	callstack 29
 14795  005CB2                     
 14796                           ;fs_mcu.c: 44:    OSCCONbits.IRCF = 0b111;
 14797  005CB2  0E70               	movlw	112
 14798  005CB4  12D3               	iorwf	211,f,c	;volatile
 14799  005CB6                     
 14800                           ;fs_mcu.c: 45:    OSCTUNEbits.PLLEN = 0b1;
 14801  005CB6  8C9B               	bsf	155,6,c	;volatile
 14802  005CB8                     l243:
 14803  005CB8  A4D3               	btfss	211,2,c	;volatile
 14804  005CBA  EF61  F02E         	goto	u7681
 14805  005CBE  EF63  F02E         	goto	u7680
 14806  005CC2                     u7681:
 14807  005CC2  EF5C  F02E         	goto	l243
 14808  005CC6                     u7680:
 14809  005CC6  0012               	return		;funcret
 14810  005CC8                     __end_of_mcu_init:
 14811                           	callstack 0
 14812                           
 14813 ;; *************** function _lcd_init *****************
 14814 ;; Defined at:
 14815 ;;		line 88 in file "fs_lcd.c"
 14816 ;; Parameters:    Size  Location     Type
 14817 ;;		None
 14818 ;; Auto vars:     Size  Location     Type
 14819 ;;		None
 14820 ;; Return value:  Size  Location     Type
 14821 ;;                  1    wreg      void 
 14822 ;; Registers used:
 14823 ;;		wreg, status,2, cstack
 14824 ;; Tracked objects:
 14825 ;;		On entry : 0/0
 14826 ;;		On exit  : 0/0
 14827 ;;		Unchanged: 0/0
 14828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14829 ;;      Params:         0       0       0       0       0       0       0
 14830 ;;      Locals:         0       0       0       0       0       0       0
 14831 ;;      Temps:          2       0       0       0       0       0       0
 14832 ;;      Totals:         2       0       0       0       0       0       0
 14833 ;;Total ram usage:        2 bytes
 14834 ;; Hardware stack levels used:    1
 14835 ;; Hardware stack levels required when called:    3
 14836 ;; This function calls:
 14837 ;;		_Lcd_Cmd
 14838 ;;		_Lcd_Port
 14839 ;; This function is called by:
 14840 ;;		_main
 14841 ;; This function uses a non-reentrant model
 14842 ;;
 14843                           
 14844                           	psect	text58
 14845  0052E6                     __ptext58:
 14846                           	callstack 0
 14847  0052E6                     _lcd_init:
 14848                           	callstack 27
 14849  0052E6                     
 14850                           ;fs_lcd.c: 90:     TRISDbits.RD6 = 0;
 14851  0052E6  9C95               	bcf	149,6,c	;volatile
 14852                           
 14853                           ;fs_lcd.c: 91:     ANSELDbits.ANSD6 = 0;
 14854  0052E8  010F               	movlb	15	; () banked
 14855  0052EA  9D3B               	bcf	59,6,b	;volatile
 14856                           
 14857                           ;fs_lcd.c: 93:     TRISDbits.RD7 = 0;
 14858  0052EC  9E95               	bcf	149,7,c	;volatile
 14859                           
 14860                           ;fs_lcd.c: 94:     ANSELDbits.ANSD7 = 0;
 14861  0052EE  9F3B               	bcf	59,7,b	;volatile
 14862                           
 14863                           ;fs_lcd.c: 96:     TRISBbits.RB0 = 0;
 14864  0052F0  9093               	bcf	147,0,c	;volatile
 14865                           
 14866                           ;fs_lcd.c: 97:     ANSELBbits.ANSB0 = 0;
 14867  0052F2  9139               	bcf	57,0,b	;volatile
 14868                           
 14869                           ;fs_lcd.c: 99:     TRISBbits.RB1 = 0;
 14870  0052F4  9293               	bcf	147,1,c	;volatile
 14871                           
 14872                           ;fs_lcd.c: 100:     ANSELBbits.ANSB1 = 0;
 14873  0052F6  9339               	bcf	57,1,b	;volatile
 14874                           
 14875                           ;fs_lcd.c: 102:     TRISBbits.RB2 = 0;
 14876  0052F8  9493               	bcf	147,2,c	;volatile
 14877                           
 14878                           ;fs_lcd.c: 103:     ANSELBbits.ANSB2 = 0;
 14879  0052FA  9539               	bcf	57,2,b	;volatile
 14880                           
 14881                           ;fs_lcd.c: 105:     TRISBbits.RB3 = 0;
 14882  0052FC  9693               	bcf	147,3,c	;volatile
 14883                           
 14884                           ;fs_lcd.c: 106:     ANSELBbits.ANSB3 = 0;
 14885  0052FE  9739               	bcf	57,3,b	;volatile
 14886  005300                     
 14887                           ; BSR set to: 15
 14888                           ;fs_lcd.c: 109:     Lcd_Port(0x00);
 14889  005300  0E00               	movlw	0
 14890  005302  ECAD  F02B         	call	_Lcd_Port
 14891  005306                     
 14892                           ;fs_lcd.c: 110:      _delay((unsigned long)((20)*(64000000UL/4000.0)));
 14893  005306  0E02               	movlw	2
 14894  005308  6E05               	movwf	(??_lcd_init+1)^0,c
 14895  00530A  0EA0               	movlw	160
 14896  00530C  6E04               	movwf	??_lcd_init^0,c
 14897  00530E  0E92               	movlw	146
 14898  005310                     u7887:
 14899  005310  2EE8               	decfsz	wreg,f,c
 14900  005312  D7FE               	bra	u7887
 14901  005314  2E04               	decfsz	??_lcd_init^0,f,c
 14902  005316  D7FC               	bra	u7887
 14903  005318  2E05               	decfsz	(??_lcd_init+1)^0,f,c
 14904  00531A  D7FA               	bra	u7887
 14905  00531C  D000               	nop2	
 14906  00531E                     
 14907                           ;fs_lcd.c: 111:     Lcd_Cmd(0x03);
 14908  00531E  0E03               	movlw	3
 14909  005320  EC4A  F02E         	call	_Lcd_Cmd
 14910  005324                     
 14911                           ;fs_lcd.c: 112:      _delay((unsigned long)((5)*(64000000UL/4000.0)));
 14912  005324  0E68               	movlw	104
 14913  005326  6E04               	movwf	??_lcd_init^0,c
 14914  005328  0EE4               	movlw	228
 14915  00532A                     u7897:
 14916  00532A  2EE8               	decfsz	wreg,f,c
 14917  00532C  D7FE               	bra	u7897
 14918  00532E  2E04               	decfsz	??_lcd_init^0,f,c
 14919  005330  D7FC               	bra	u7897
 14920  005332  D000               	nop2	
 14921  005334                     
 14922                           ;fs_lcd.c: 113:     Lcd_Cmd(0x03);
 14923  005334  0E03               	movlw	3
 14924  005336  EC4A  F02E         	call	_Lcd_Cmd
 14925  00533A                     
 14926                           ;fs_lcd.c: 114:      _delay((unsigned long)((11)*(64000000UL/4000.0)));
 14927  00533A  0EE5               	movlw	229
 14928  00533C  6E04               	movwf	??_lcd_init^0,c
 14929  00533E  0E91               	movlw	145
 14930  005340                     u7907:
 14931  005340  2EE8               	decfsz	wreg,f,c
 14932  005342  D7FE               	bra	u7907
 14933  005344  2E04               	decfsz	??_lcd_init^0,f,c
 14934  005346  D7FC               	bra	u7907
 14935  005348  F000               	nop	
 14936  00534A                     
 14937                           ;fs_lcd.c: 115:     Lcd_Cmd(0x03);
 14938  00534A  0E03               	movlw	3
 14939  00534C  EC4A  F02E         	call	_Lcd_Cmd
 14940  005350                     
 14941                           ;fs_lcd.c: 116:     Lcd_Cmd(0x02);
 14942  005350  0E02               	movlw	2
 14943  005352  EC4A  F02E         	call	_Lcd_Cmd
 14944  005356                     
 14945                           ;fs_lcd.c: 117:     Lcd_Cmd(0x02);
 14946  005356  0E02               	movlw	2
 14947  005358  EC4A  F02E         	call	_Lcd_Cmd
 14948  00535C                     
 14949                           ;fs_lcd.c: 118:     Lcd_Cmd(0x08);
 14950  00535C  0E08               	movlw	8
 14951  00535E  EC4A  F02E         	call	_Lcd_Cmd
 14952  005362                     
 14953                           ;fs_lcd.c: 119:     Lcd_Cmd(0x00);
 14954  005362  0E00               	movlw	0
 14955  005364  EC4A  F02E         	call	_Lcd_Cmd
 14956  005368                     
 14957                           ;fs_lcd.c: 120:     Lcd_Cmd(0x0C);
 14958  005368  0E0C               	movlw	12
 14959  00536A  EC4A  F02E         	call	_Lcd_Cmd
 14960  00536E                     
 14961                           ;fs_lcd.c: 121:     Lcd_Cmd(0x00);
 14962  00536E  0E00               	movlw	0
 14963  005370  EC4A  F02E         	call	_Lcd_Cmd
 14964  005374                     
 14965                           ;fs_lcd.c: 122:     Lcd_Cmd(0x06);
 14966  005374  0E06               	movlw	6
 14967  005376  EC4A  F02E         	call	_Lcd_Cmd
 14968  00537A  0012               	return		;funcret
 14969  00537C                     __end_of_lcd_init:
 14970                           	callstack 0
 14971                           
 14972 ;; *************** function _adcInit *****************
 14973 ;; Defined at:
 14974 ;;		line 53 in file "fs_adc.c"
 14975 ;; Parameters:    Size  Location     Type
 14976 ;;		None
 14977 ;; Auto vars:     Size  Location     Type
 14978 ;;		None
 14979 ;; Return value:  Size  Location     Type
 14980 ;;                  1    wreg      void 
 14981 ;; Registers used:
 14982 ;;		wreg, status,2
 14983 ;; Tracked objects:
 14984 ;;		On entry : 0/0
 14985 ;;		On exit  : 0/0
 14986 ;;		Unchanged: 0/0
 14987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14988 ;;      Params:         0       0       0       0       0       0       0
 14989 ;;      Locals:         0       0       0       0       0       0       0
 14990 ;;      Temps:          0       0       0       0       0       0       0
 14991 ;;      Totals:         0       0       0       0       0       0       0
 14992 ;;Total ram usage:        0 bytes
 14993 ;; Hardware stack levels used:    1
 14994 ;; Hardware stack levels required when called:    1
 14995 ;; This function calls:
 14996 ;;		Nothing
 14997 ;; This function is called by:
 14998 ;;		_main
 14999 ;; This function uses a non-reentrant model
 15000 ;;
 15001                           
 15002                           	psect	text59
 15003  0059B8                     __ptext59:
 15004                           	callstack 0
 15005  0059B8                     _adcInit:
 15006                           	callstack 29
 15007  0059B8                     
 15008                           ;fs_adc.c: 55:     TRISAbits.TRISA0 = 1;
 15009  0059B8  8092               	bsf	146,0,c	;volatile
 15010                           
 15011                           ;fs_adc.c: 56:     ANSELAbits.ANSA0 = 1;
 15012  0059BA  010F               	movlb	15	; () banked
 15013  0059BC  8138               	bsf	56,0,b	;volatile
 15014                           
 15015                           ;fs_adc.c: 58:     TRISAbits.TRISA1 = 1;
 15016  0059BE  8292               	bsf	146,1,c	;volatile
 15017                           
 15018                           ;fs_adc.c: 59:     ANSELAbits.ANSA1 = 1;
 15019  0059C0  8338               	bsf	56,1,b	;volatile
 15020                           
 15021                           ;fs_adc.c: 61:     TRISAbits.TRISA2 = 1;
 15022  0059C2  8492               	bsf	146,2,c	;volatile
 15023                           
 15024                           ;fs_adc.c: 62:     ANSELAbits.ANSA2 = 1;
 15025  0059C4  8538               	bsf	56,2,b	;volatile
 15026                           
 15027                           ;fs_adc.c: 64:     TRISAbits.TRISA3 = 1;
 15028  0059C6  8692               	bsf	146,3,c	;volatile
 15029                           
 15030                           ;fs_adc.c: 65:     ANSELAbits.ANSA3 = 1;
 15031  0059C8  8738               	bsf	56,3,b	;volatile
 15032                           
 15033                           ;fs_adc.c: 67:     TRISAbits.TRISA5 = 1;
 15034  0059CA  8A92               	bsf	146,5,c	;volatile
 15035                           
 15036                           ;fs_adc.c: 68:     ANSELAbits.ANSA5 = 1;
 15037  0059CC  8B38               	bsf	56,5,b	;volatile
 15038                           
 15039                           ;fs_adc.c: 70:     TRISEbits.TRISE0 = 1;
 15040  0059CE  8096               	bsf	150,0,c	;volatile
 15041                           
 15042                           ;fs_adc.c: 71:     ANSELEbits.ANSE0 = 1;
 15043  0059D0  813C               	bsf	60,0,b	;volatile
 15044                           
 15045                           ;fs_adc.c: 73:     TRISEbits.TRISE1 = 1;
 15046  0059D2  8296               	bsf	150,1,c	;volatile
 15047                           
 15048                           ;fs_adc.c: 74:     ANSELEbits.ANSE1 = 1;
 15049  0059D4  833C               	bsf	60,1,b	;volatile
 15050                           
 15051                           ;fs_adc.c: 76:     TRISEbits.TRISE2 = 1;
 15052  0059D6  8496               	bsf	150,2,c	;volatile
 15053                           
 15054                           ;fs_adc.c: 77:     ANSELEbits.ANSE2 = 1;
 15055  0059D8  853C               	bsf	60,2,b	;volatile
 15056  0059DA                     
 15057                           ; BSR set to: 15
 15058                           ;fs_adc.c: 79:     ADCON0 = 0x01;
 15059  0059DA  0E01               	movlw	1
 15060  0059DC  6EC2               	movwf	194,c	;volatile
 15061                           
 15062                           ;fs_adc.c: 80:     ADCON1=0x00;
 15063  0059DE  0E00               	movlw	0
 15064  0059E0  6EC1               	movwf	193,c	;volatile
 15065  0059E2                     
 15066                           ; BSR set to: 15
 15067                           ;fs_adc.c: 81:  ADCON2bits.ADFM = 1;
 15068  0059E2  8EC0               	bsf	192,7,c	;volatile
 15069                           
 15070                           ;fs_adc.c: 82:     ADCON2bits.ACQT = 0b010;
 15071  0059E4  50C0               	movf	192,w,c	;volatile
 15072  0059E6  0BC7               	andlw	-57
 15073  0059E8  0910               	iorlw	16
 15074  0059EA  6EC0               	movwf	192,c	;volatile
 15075                           
 15076                           ;fs_adc.c: 83:     ADCON2bits.ADCS = 0b110;
 15077  0059EC  50C0               	movf	192,w,c	;volatile
 15078  0059EE  0BF8               	andlw	-8
 15079  0059F0  0906               	iorlw	6
 15080  0059F2  6EC0               	movwf	192,c	;volatile
 15081  0059F4                     
 15082                           ; BSR set to: 15
 15083  0059F4  0012               	return		;funcret
 15084  0059F6                     __end_of_adcInit:
 15085                           	callstack 0
 15086                           
 15087 ;; *************** function _PWM_Init *****************
 15088 ;; Defined at:
 15089 ;;		line 17 in file "fs_pwm.c"
 15090 ;; Parameters:    Size  Location     Type
 15091 ;;		None
 15092 ;; Auto vars:     Size  Location     Type
 15093 ;;		None
 15094 ;; Return value:  Size  Location     Type
 15095 ;;                  1    wreg      void 
 15096 ;; Registers used:
 15097 ;;		wreg, status,2
 15098 ;; Tracked objects:
 15099 ;;		On entry : 0/0
 15100 ;;		On exit  : 0/0
 15101 ;;		Unchanged: 0/0
 15102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15103 ;;      Params:         0       0       0       0       0       0       0
 15104 ;;      Locals:         0       0       0       0       0       0       0
 15105 ;;      Temps:          0       0       0       0       0       0       0
 15106 ;;      Totals:         0       0       0       0       0       0       0
 15107 ;;Total ram usage:        0 bytes
 15108 ;; Hardware stack levels used:    1
 15109 ;; Hardware stack levels required when called:    1
 15110 ;; This function calls:
 15111 ;;		Nothing
 15112 ;; This function is called by:
 15113 ;;		_main
 15114 ;; This function uses a non-reentrant model
 15115 ;;
 15116                           
 15117                           	psect	text60
 15118  005C08                     __ptext60:
 15119                           	callstack 0
 15120  005C08                     _PWM_Init:
 15121                           	callstack 29
 15122  005C08                     
 15123                           ;fs_pwm.c: 19:     TRISCbits.RC2 = 0;
 15124  005C08  9494               	bcf	148,2,c	;volatile
 15125                           
 15126                           ;fs_pwm.c: 20:     TRISCbits.RC1 = 0;
 15127  005C0A  9294               	bcf	148,1,c	;volatile
 15128  005C0C                     
 15129                           ;fs_pwm.c: 23:     CCP1CON = 0b00001100;
 15130  005C0C  0E0C               	movlw	12
 15131  005C0E  6EBD               	movwf	189,c	;volatile
 15132                           
 15133                           ;fs_pwm.c: 25:     CCP2CON = 0b00001100;
 15134  005C10  0E0C               	movlw	12
 15135  005C12  6E66               	movwf	102,c	;volatile
 15136                           
 15137                           ;fs_pwm.c: 29:     T2CONbits.T2CKPS = 0b01;
 15138  005C14  50BA               	movf	186,w,c	;volatile
 15139  005C16  0BFC               	andlw	-4
 15140  005C18  0901               	iorlw	1
 15141  005C1A  6EBA               	movwf	186,c	;volatile
 15142  005C1C                     
 15143                           ;fs_pwm.c: 30:     T2CONbits.TMR2ON = 1;
 15144  005C1C  84BA               	bsf	186,2,c	;volatile
 15145                           
 15146                           ;fs_pwm.c: 32:     TMR2 = 0;
 15147  005C1E  0E00               	movlw	0
 15148  005C20  6EBC               	movwf	188,c	;volatile
 15149                           
 15150                           ;fs_pwm.c: 33:     PR2 = 199;
 15151  005C22  0EC7               	movlw	199
 15152  005C24  6EBB               	movwf	187,c	;volatile
 15153                           
 15154                           ;fs_pwm.c: 34:     CCPR1L = 0;
 15155  005C26  0E00               	movlw	0
 15156  005C28  6EBE               	movwf	190,c	;volatile
 15157                           
 15158                           ;fs_pwm.c: 35:     CCPR2L = 0;
 15159  005C2A  0E00               	movlw	0
 15160  005C2C  6E67               	movwf	103,c	;volatile
 15161  005C2E  0012               	return		;funcret
 15162  005C30                     __end_of_PWM_Init:
 15163                           	callstack 0
 15164                           
 15165 ;; *************** function _Lcd_Clear *****************
 15166 ;; Defined at:
 15167 ;;		line 51 in file "fs_lcd.c"
 15168 ;; Parameters:    Size  Location     Type
 15169 ;;		None
 15170 ;; Auto vars:     Size  Location     Type
 15171 ;;		None
 15172 ;; Return value:  Size  Location     Type
 15173 ;;                  1    wreg      void 
 15174 ;; Registers used:
 15175 ;;		wreg, status,2, cstack
 15176 ;; Tracked objects:
 15177 ;;		On entry : 0/0
 15178 ;;		On exit  : 0/0
 15179 ;;		Unchanged: 0/0
 15180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15181 ;;      Params:         0       0       0       0       0       0       0
 15182 ;;      Locals:         0       0       0       0       0       0       0
 15183 ;;      Temps:          0       0       0       0       0       0       0
 15184 ;;      Totals:         0       0       0       0       0       0       0
 15185 ;;Total ram usage:        0 bytes
 15186 ;; Hardware stack levels used:    1
 15187 ;; Hardware stack levels required when called:    3
 15188 ;; This function calls:
 15189 ;;		_Lcd_Cmd
 15190 ;; This function is called by:
 15191 ;;		_main
 15192 ;; This function uses a non-reentrant model
 15193 ;;
 15194                           
 15195                           	psect	text61
 15196  005CDA                     __ptext61:
 15197                           	callstack 0
 15198  005CDA                     _Lcd_Clear:
 15199                           	callstack 27
 15200  005CDA                     
 15201                           ;fs_lcd.c: 53:    Lcd_Cmd(0);
 15202  005CDA  0E00               	movlw	0
 15203  005CDC  EC4A  F02E         	call	_Lcd_Cmd
 15204                           
 15205                           ;fs_lcd.c: 54:    Lcd_Cmd(1);
 15206  005CE0  0E01               	movlw	1
 15207  005CE2  EC4A  F02E         	call	_Lcd_Cmd
 15208  005CE6  0012               	return		;funcret
 15209  005CE8                     __end_of_Lcd_Clear:
 15210                           	callstack 0
 15211                           
 15212 ;; *************** function _Lcd_Cmd *****************
 15213 ;; Defined at:
 15214 ;;		line 35 in file "fs_lcd.c"
 15215 ;; Parameters:    Size  Location     Type
 15216 ;;  a               1    wreg     unsigned char 
 15217 ;; Auto vars:     Size  Location     Type
 15218 ;;  a               1    2[COMRAM] unsigned char 
 15219 ;; Return value:  Size  Location     Type
 15220 ;;                  1    wreg      void 
 15221 ;; Registers used:
 15222 ;;		wreg, status,2, cstack
 15223 ;; Tracked objects:
 15224 ;;		On entry : 0/0
 15225 ;;		On exit  : 0/0
 15226 ;;		Unchanged: 0/0
 15227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15228 ;;      Params:         0       0       0       0       0       0       0
 15229 ;;      Locals:         1       0       0       0       0       0       0
 15230 ;;      Temps:          1       0       0       0       0       0       0
 15231 ;;      Totals:         2       0       0       0       0       0       0
 15232 ;;Total ram usage:        2 bytes
 15233 ;; Hardware stack levels used:    1
 15234 ;; Hardware stack levels required when called:    2
 15235 ;; This function calls:
 15236 ;;		_Lcd_Port
 15237 ;; This function is called by:
 15238 ;;		_Lcd_Clear
 15239 ;;		_Lcd_Set_Cursor
 15240 ;;		_lcd_init
 15241 ;;		_Lcd_Shift_Right
 15242 ;;		_Lcd_Shift_Left
 15243 ;; This function uses a non-reentrant model
 15244 ;;
 15245                           
 15246                           	psect	text62
 15247  005C94                     __ptext62:
 15248                           	callstack 0
 15249  005C94                     _Lcd_Cmd:
 15250                           	callstack 25
 15251                           
 15252                           ;incstack = 0
 15253                           ;Lcd_Cmd@a stored from wreg
 15254  005C94  6E03               	movwf	Lcd_Cmd@a^0,c
 15255  005C96                     
 15256                           ;fs_lcd.c: 35: void Lcd_Cmd(char a);fs_lcd.c: 36: {;fs_lcd.c: 37:    PORTDbits.RD6 = 0;
 15257  005C96  9C83               	bcf	131,6,c	;volatile
 15258  005C98                     
 15259                           ;fs_lcd.c: 38:    Lcd_Port(a);
 15260  005C98  5003               	movf	Lcd_Cmd@a^0,w,c
 15261  005C9A  ECAD  F02B         	call	_Lcd_Port
 15262  005C9E                     
 15263                           ;fs_lcd.c: 39:    PORTDbits.RD7 = 1;
 15264  005C9E  8E83               	bsf	131,7,c	;volatile
 15265  005CA0                     
 15266                           ;fs_lcd.c: 40:    _delay((unsigned long)((2)*(64000000UL/4000.0)));
 15267  005CA0  0E2A               	movlw	42
 15268  005CA2  6E02               	movwf	??_Lcd_Cmd^0,c
 15269  005CA4  0E8E               	movlw	142
 15270  005CA6                     u7917:
 15271  005CA6  2EE8               	decfsz	wreg,f,c
 15272  005CA8  D7FE               	bra	u7917
 15273  005CAA  2E02               	decfsz	??_Lcd_Cmd^0,f,c
 15274  005CAC  D7FC               	bra	u7917
 15275  005CAE                     
 15276                           ;fs_lcd.c: 41:    PORTDbits.RD7 = 0;
 15277  005CAE  9E83               	bcf	131,7,c	;volatile
 15278  005CB0  0012               	return		;funcret
 15279  005CB2                     __end_of_Lcd_Cmd:
 15280                           	callstack 0
 15281                           
 15282 ;; *************** function _Lcd_Port *****************
 15283 ;; Defined at:
 15284 ;;		line 12 in file "fs_lcd.c"
 15285 ;; Parameters:    Size  Location     Type
 15286 ;;  a               1    wreg     unsigned char 
 15287 ;; Auto vars:     Size  Location     Type
 15288 ;;  a               1    0[COMRAM] unsigned char 
 15289 ;; Return value:  Size  Location     Type
 15290 ;;                  1    wreg      void 
 15291 ;; Registers used:
 15292 ;;		wreg
 15293 ;; Tracked objects:
 15294 ;;		On entry : 0/0
 15295 ;;		On exit  : 0/0
 15296 ;;		Unchanged: 0/0
 15297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15298 ;;      Params:         0       0       0       0       0       0       0
 15299 ;;      Locals:         1       0       0       0       0       0       0
 15300 ;;      Temps:          0       0       0       0       0       0       0
 15301 ;;      Totals:         1       0       0       0       0       0       0
 15302 ;;Total ram usage:        1 bytes
 15303 ;; Hardware stack levels used:    1
 15304 ;; Hardware stack levels required when called:    1
 15305 ;; This function calls:
 15306 ;;		Nothing
 15307 ;; This function is called by:
 15308 ;;		_Lcd_Cmd
 15309 ;;		_lcd_init
 15310 ;;		_Lcd_Write_Char
 15311 ;; This function uses a non-reentrant model
 15312 ;;
 15313                           
 15314                           	psect	text63
 15315  00575A                     __ptext63:
 15316                           	callstack 0
 15317  00575A                     _Lcd_Port:
 15318                           	callstack 25
 15319                           
 15320                           ;incstack = 0
 15321                           ;Lcd_Port@a stored from wreg
 15322  00575A  6E01               	movwf	Lcd_Port@a^0,c
 15323  00575C                     
 15324                           ;fs_lcd.c: 12: void Lcd_Port(char a);fs_lcd.c: 13: {;fs_lcd.c: 14:    if(a & 1) { PORTBb
      +                          its.RB0 = 1;}
 15325  00575C  A001               	btfss	Lcd_Port@a^0,0,c
 15326  00575E  EFB3  F02B         	goto	u6341
 15327  005762  EFB5  F02B         	goto	u6340
 15328  005766                     u6341:
 15329  005766  EFB8  F02B         	goto	l96
 15330  00576A                     u6340:
 15331  00576A  8081               	bsf	129,0,c	;volatile
 15332  00576C  EFB9  F02B         	goto	l5222
 15333  005770                     l96:
 15334  005770  9081               	bcf	129,0,c	;volatile
 15335  005772                     l5222:
 15336                           
 15337                           ;fs_lcd.c: 17:    if(a & 2) { PORTBbits.RB1 = 1;}
 15338  005772  A201               	btfss	Lcd_Port@a^0,1,c
 15339  005774  EFBE  F02B         	goto	u6351
 15340  005778  EFC0  F02B         	goto	u6350
 15341  00577C                     u6351:
 15342  00577C  EFC3  F02B         	goto	l98
 15343  005780                     u6350:
 15344  005780  8281               	bsf	129,1,c	;volatile
 15345  005782  EFC4  F02B         	goto	l5226
 15346  005786                     l98:
 15347  005786  9281               	bcf	129,1,c	;volatile
 15348  005788                     l5226:
 15349                           
 15350                           ;fs_lcd.c: 20:    if(a & 4) {PORTBbits.RB2 = 1;}
 15351  005788  A401               	btfss	Lcd_Port@a^0,2,c
 15352  00578A  EFC9  F02B         	goto	u6361
 15353  00578E  EFCB  F02B         	goto	u6360
 15354  005792                     u6361:
 15355  005792  EFCE  F02B         	goto	l100
 15356  005796                     u6360:
 15357  005796  8481               	bsf	129,2,c	;volatile
 15358  005798  EFCF  F02B         	goto	l5230
 15359  00579C                     l100:
 15360  00579C  9481               	bcf	129,2,c	;volatile
 15361  00579E                     l5230:
 15362                           
 15363                           ;fs_lcd.c: 23:    if(a & 8) {PORTBbits.RB3 = 1;}
 15364  00579E  A601               	btfss	Lcd_Port@a^0,3,c
 15365  0057A0  EFD4  F02B         	goto	u6371
 15366  0057A4  EFD6  F02B         	goto	u6370
 15367  0057A8                     u6371:
 15368  0057A8  EFD9  F02B         	goto	l102
 15369  0057AC                     u6370:
 15370  0057AC  8681               	bsf	129,3,c	;volatile
 15371  0057AE  EFDA  F02B         	goto	l104
 15372  0057B2                     l102:
 15373  0057B2  9681               	bcf	129,3,c	;volatile
 15374  0057B4                     l104:
 15375  0057B4  0012               	return		;funcret
 15376  0057B6                     __end_of_Lcd_Port:
 15377                           	callstack 0
 15378                           
 15379 ;; *************** function _TIMER0 *****************
 15380 ;; Defined at:
 15381 ;;		line 33 in file "fs_timer.c"
 15382 ;; Parameters:    Size  Location     Type
 15383 ;;		None
 15384 ;; Auto vars:     Size  Location     Type
 15385 ;;		None
 15386 ;; Return value:  Size  Location     Type
 15387 ;;                  1    wreg      void 
 15388 ;; Registers used:
 15389 ;;		wreg, status,2, status,0
 15390 ;; Tracked objects:
 15391 ;;		On entry : 0/0
 15392 ;;		On exit  : 0/0
 15393 ;;		Unchanged: 0/0
 15394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15395 ;;      Params:         0       0       0       0       0       0       0
 15396 ;;      Locals:         0       0       0       0       0       0       0
 15397 ;;      Temps:          0       0       0       0       0       0       0
 15398 ;;      Totals:         0       0       0       0       0       0       0
 15399 ;;Total ram usage:        0 bytes
 15400 ;; Hardware stack levels used:    1
 15401 ;; This function calls:
 15402 ;;		Nothing
 15403 ;; This function is called by:
 15404 ;;		Interrupt level 2
 15405 ;; This function uses a non-reentrant model
 15406 ;;
 15407                           
 15408                           	psect	intcode
 15409  000008                     __pintcode:
 15410                           	callstack 0
 15411  000008                     _TIMER0:
 15412                           	callstack 20
 15413                           
 15414                           ;incstack = 0
 15415  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15416  00000A                     
 15417                           ;fs_timer.c: 35:     if ((INTCONbits.TMR0IF)&&(INTCONbits.TMR0IE))
 15418  00000A  A4F2               	btfss	242,2,c	;volatile
 15419  00000C  EF0A  F000         	goto	i2u779_41
 15420  000010  EF0C  F000         	goto	i2u779_40
 15421  000014                     i2u779_41:
 15422  000014  EF4B  F000         	goto	i2l479
 15423  000018                     i2u779_40:
 15424  000018  AAF2               	btfss	242,5,c	;volatile
 15425  00001A  EF11  F000         	goto	i2u780_41
 15426  00001E  EF13  F000         	goto	i2u780_40
 15427  000022                     i2u780_41:
 15428  000022  EF4B  F000         	goto	i2l479
 15429  000026                     i2u780_40:
 15430  000026                     
 15431                           ;fs_timer.c: 36:     {;fs_timer.c: 37:         INTCONbits.TMR0IF = 0;
 15432  000026  94F2               	bcf	242,2,c	;volatile
 15433  000028                     
 15434                           ;fs_timer.c: 38:         TMR0H = 0x63;
 15435  000028  0E63               	movlw	99
 15436  00002A  6ED7               	movwf	215,c	;volatile
 15437                           
 15438                           ;fs_timer.c: 39:         TMR0L = 0xC0;
 15439  00002C  0EC0               	movlw	192
 15440  00002E  6ED6               	movwf	214,c	;volatile
 15441  000030                     
 15442                           ;fs_timer.c: 41:         timer_value.timer_0_counter++;
 15443  000030  0101               	movlb	1	; () banked
 15444  000032  2B94               	incf	(_timer_value+5)& (0+255),f,b
 15445  000034                     
 15446                           ; BSR set to: 1
 15447                           ;fs_timer.c: 43:         if (startIsClick == 1)
 15448  000034  0100               	movlb	0	; () banked
 15449  000036  05FD               	decf	_startIsClick& (0+255),w,b
 15450  000038  A4D8               	btfss	status,2,c
 15451  00003A  EF21  F000         	goto	i2u781_41
 15452  00003E  EF23  F000         	goto	i2u781_40
 15453  000042                     i2u781_41:
 15454  000042  EF26  F000         	goto	i2l6228
 15455  000046                     i2u781_40:
 15456  000046                     
 15457                           ; BSR set to: 0
 15458                           ;fs_timer.c: 44:         {;fs_timer.c: 45:             timer_value.second_counter++;
 15459  000046  0101               	movlb	1	; () banked
 15460  000048  4B95               	infsnz	(_timer_value+6)& (0+255),f,b
 15461  00004A  2B96               	incf	(_timer_value+7)& (0+255),f,b
 15462  00004C                     i2l6228:
 15463                           
 15464                           ;fs_timer.c: 48:         if(button_bounce_controller.menu == 1)
 15465  00004C  0101               	movlb	1	; () banked
 15466  00004E  059D               	decf	_button_bounce_controller& (0+255),w,b
 15467  000050  A4D8               	btfss	status,2,c
 15468  000052  EF2D  F000         	goto	i2u782_41
 15469  000056  EF2F  F000         	goto	i2u782_40
 15470  00005A                     i2u782_41:
 15471  00005A  EF30  F000         	goto	i2l6232
 15472  00005E                     i2u782_40:
 15473  00005E                     
 15474                           ; BSR set to: 1
 15475                           ;fs_timer.c: 49:         {;fs_timer.c: 50:              timer_value.menu_login_delay++;
 15476  00005E  2B93               	incf	(_timer_value+4)& (0+255),f,b
 15477  000060                     i2l6232:
 15478                           
 15479                           ; BSR set to: 1
 15480                           ;fs_timer.c: 52:         if(button_bounce_controller.menu == 0)
 15481  000060  519D               	movf	_button_bounce_controller& (0+255),w,b
 15482  000062  A4D8               	btfss	status,2,c
 15483  000064  EF36  F000         	goto	i2u783_41
 15484  000068  EF38  F000         	goto	i2u783_40
 15485  00006C                     i2u783_41:
 15486  00006C  EF3A  F000         	goto	i2l6236
 15487  000070                     i2u783_40:
 15488  000070                     
 15489                           ; BSR set to: 1
 15490                           ;fs_timer.c: 53:         {;fs_timer.c: 54:              timer_value.menu_login_delay = 0
      +                          ;
 15491  000070  0E00               	movlw	0
 15492  000072  6F93               	movwf	(_timer_value+4)& (0+255),b
 15493  000074                     i2l6236:
 15494                           
 15495                           ; BSR set to: 1
 15496                           ;fs_timer.c: 57:         if (timer_value.second_counter >= 100)
 15497  000074  5196               	movf	(_timer_value+7)& (0+255),w,b
 15498  000076  E109               	bnz	i2u784_40
 15499  000078  0E64               	movlw	100
 15500  00007A  5D95               	subwf	(_timer_value+6)& (0+255),w,b
 15501  00007C  A0D8               	btfss	status,0,c
 15502  00007E  EF43  F000         	goto	i2u784_41
 15503  000082  EF45  F000         	goto	i2u784_40
 15504  000086                     i2u784_41:
 15505  000086  EF4B  F000         	goto	i2l479
 15506  00008A                     i2u784_40:
 15507  00008A                     
 15508                           ; BSR set to: 1
 15509                           ;fs_timer.c: 58:         {;fs_timer.c: 59:             timer_value.second_counter = 0;
 15510  00008A  0E00               	movlw	0
 15511  00008C  6F96               	movwf	(_timer_value+7)& (0+255),b
 15512  00008E  0E00               	movlw	0
 15513  000090  6F95               	movwf	(_timer_value+6)& (0+255),b
 15514  000092                     
 15515                           ; BSR set to: 1
 15516                           ;fs_timer.c: 60:             timer_counter_flag.one_second_flag = 1;
 15517  000092  0100               	movlb	0	; () banked
 15518  000094  81FF               	bsf	_timer_counter_flag& (0+255),0,b
 15519  000096                     i2l479:
 15520  000096  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15521  000098  0011               	retfie		f
 15522  00009A                     __end_of_TIMER0:
 15523                           	callstack 0
 15524                           
 15525                           	psect	rparam
 15526  0000                     
 15527                           	psect	temp
 15528  00005F                     btemp:
 15529                           	callstack 0
 15530  00005F                     	ds	1
 15531  0000                     int$flags	set	btemp
 15532  0000                     wtemp8	set	btemp+1
 15533  0000                     ttemp5	set	btemp+1
 15534  0000                     ttemp6	set	btemp+4
 15535  0000                     ttemp7	set	btemp+8
 15536                           
 15537                           	psect	idloc
 15538                           
 15539                           ;Config register IDLOC0 @ 0x200000
 15540                           ;	unspecified, using default values
 15541  200000                     	org	2097152
 15542  200000  FF                 	db	255
 15543                           
 15544                           ;Config register IDLOC1 @ 0x200001
 15545                           ;	unspecified, using default values
 15546  200001                     	org	2097153
 15547  200001  FF                 	db	255
 15548                           
 15549                           ;Config register IDLOC2 @ 0x200002
 15550                           ;	unspecified, using default values
 15551  200002                     	org	2097154
 15552  200002  FF                 	db	255
 15553                           
 15554                           ;Config register IDLOC3 @ 0x200003
 15555                           ;	unspecified, using default values
 15556  200003                     	org	2097155
 15557  200003  FF                 	db	255
 15558                           
 15559                           ;Config register IDLOC4 @ 0x200004
 15560                           ;	unspecified, using default values
 15561  200004                     	org	2097156
 15562  200004  FF                 	db	255
 15563                           
 15564                           ;Config register IDLOC5 @ 0x200005
 15565                           ;	unspecified, using default values
 15566  200005                     	org	2097157
 15567  200005  FF                 	db	255
 15568                           
 15569                           ;Config register IDLOC6 @ 0x200006
 15570                           ;	unspecified, using default values
 15571  200006                     	org	2097158
 15572  200006  FF                 	db	255
 15573                           
 15574                           ;Config register IDLOC7 @ 0x200007
 15575                           ;	unspecified, using default values
 15576  200007                     	org	2097159
 15577  200007  FF                 	db	255
 15578                           
 15579                           	psect	config
 15580                           
 15581                           ; Padding undefined space
 15582  300000                     	org	3145728
 15583  300000  FF                 	db	255
 15584                           
 15585                           ;Config register CONFIG1H @ 0x300001
 15586                           ;	Oscillator Selection bits
 15587                           ;	FOSC = INTIO67, Internal oscillator block
 15588                           ;	4X PLL Enable
 15589                           ;	PLLCFG = ON, Oscillator multiplied by 4
 15590                           ;	Primary clock enable bit
 15591                           ;	PRICLKEN = ON, Primary clock is always enabled
 15592                           ;	Fail-Safe Clock Monitor Enable bit
 15593                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 15594                           ;	Internal/External Oscillator Switchover bit
 15595                           ;	IESO = ON, Oscillator Switchover mode enabled
 15596  300001                     	org	3145729
 15597  300001  B8                 	db	184
 15598                           
 15599                           ;Config register CONFIG2L @ 0x300002
 15600                           ;	Power-up Timer Enable bit
 15601                           ;	PWRTEN = OFF, Power up timer disabled
 15602                           ;	Brown-out Reset Enable bits
 15603                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 15604                           ;	Brown Out Reset Voltage bits
 15605                           ;	BORV = 190, VBOR set to 1.90 V nominal
 15606  300002                     	org	3145730
 15607  300002  1F                 	db	31
 15608                           
 15609                           ;Config register CONFIG2H @ 0x300003
 15610                           ;	Watchdog Timer Enable bits
 15611                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 15612                           ;	Watchdog Timer Postscale Select bits
 15613                           ;	WDTPS = 32768, 1:32768
 15614  300003                     	org	3145731
 15615  300003  3C                 	db	60
 15616                           
 15617                           ; Padding undefined space
 15618  300004                     	org	3145732
 15619  300004  FF                 	db	255
 15620                           
 15621                           ;Config register CONFIG3H @ 0x300005
 15622                           ;	CCP2 MUX bit
 15623                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 15624                           ;	PORTB A/D Enable bit
 15625                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
 15626                           ;	P3A/CCP3 Mux bit
 15627                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 15628                           ;	HFINTOSC Fast Start-up
 15629                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 15630                           ;	Timer3 Clock input mux bit
 15631                           ;	T3CMX = PORTC0, T3CKI is on RC0
 15632                           ;	ECCP2 B output mux bit
 15633                           ;	P2BMX = PORTD2, P2B is on RD2
 15634                           ;	MCLR Pin Enable bit
 15635                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 15636  300005                     	org	3145733
 15637  300005  BD                 	db	189
 15638                           
 15639                           ;Config register CONFIG4L @ 0x300006
 15640                           ;	Stack Full/Underflow Reset Enable bit
 15641                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
 15642                           ;	Single-Supply ICSP Enable bit
 15643                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 15644                           ;	Extended Instruction Set Enable bit
 15645                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 15646                           ;	Background Debug
 15647                           ;	DEBUG = 0x1, unprogrammed default
 15648  300006                     	org	3145734
 15649  300006  84                 	db	132
 15650                           
 15651                           ; Padding undefined space
 15652  300007                     	org	3145735
 15653  300007  FF                 	db	255
 15654                           
 15655                           ;Config register CONFIG5L @ 0x300008
 15656                           ;	Code Protection Block 0
 15657                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 15658                           ;	Code Protection Block 1
 15659                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 15660                           ;	Code Protection Block 2
 15661                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 15662                           ;	Code Protection Block 3
 15663                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 15664  300008                     	org	3145736
 15665  300008  0F                 	db	15
 15666                           
 15667                           ;Config register CONFIG5H @ 0x300009
 15668                           ;	Boot Block Code Protection bit
 15669                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 15670                           ;	Data EEPROM Code Protection bit
 15671                           ;	CPD = OFF, Data EEPROM not code-protected
 15672  300009                     	org	3145737
 15673  300009  C0                 	db	192
 15674                           
 15675                           ;Config register CONFIG6L @ 0x30000A
 15676                           ;	Write Protection Block 0
 15677                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 15678                           ;	Write Protection Block 1
 15679                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 15680                           ;	Write Protection Block 2
 15681                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 15682                           ;	Write Protection Block 3
 15683                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 15684  30000A                     	org	3145738
 15685  30000A  0F                 	db	15
 15686                           
 15687                           ;Config register CONFIG6H @ 0x30000B
 15688                           ;	Configuration Register Write Protection bit
 15689                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 15690                           ;	Boot Block Write Protection bit
 15691                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 15692                           ;	Data EEPROM Write Protection bit
 15693                           ;	WRTD = OFF, Data EEPROM not write-protected
 15694  30000B                     	org	3145739
 15695  30000B  E0                 	db	224
 15696                           
 15697                           ;Config register CONFIG7L @ 0x30000C
 15698                           ;	Table Read Protection Block 0
 15699                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 15700                           ;	Table Read Protection Block 1
 15701                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 15702                           ;	Table Read Protection Block 2
 15703                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 15704                           ;	Table Read Protection Block 3
 15705                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 15706  30000C                     	org	3145740
 15707  30000C  0F                 	db	15
 15708                           
 15709                           ;Config register CONFIG7H @ 0x30000D
 15710                           ;	Boot Block Table Read Protection bit
 15711                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 15712  30000D                     	org	3145741
 15713  30000D  40                 	db	64
 15714                           tosu	equ	0xFFF
 15715                           tosh	equ	0xFFE
 15716                           tosl	equ	0xFFD
 15717                           stkptr	equ	0xFFC
 15718                           pclatu	equ	0xFFB
 15719                           pclath	equ	0xFFA
 15720                           pcl	equ	0xFF9
 15721                           tblptru	equ	0xFF8
 15722                           tblptrh	equ	0xFF7
 15723                           tblptrl	equ	0xFF6
 15724                           tablat	equ	0xFF5
 15725                           prodh	equ	0xFF4
 15726                           prodl	equ	0xFF3
 15727                           indf0	equ	0xFEF
 15728                           postinc0	equ	0xFEE
 15729                           postdec0	equ	0xFED
 15730                           preinc0	equ	0xFEC
 15731                           plusw0	equ	0xFEB
 15732                           fsr0h	equ	0xFEA
 15733                           fsr0l	equ	0xFE9
 15734                           wreg	equ	0xFE8
 15735                           indf1	equ	0xFE7
 15736                           postinc1	equ	0xFE6
 15737                           postdec1	equ	0xFE5
 15738                           preinc1	equ	0xFE4
 15739                           plusw1	equ	0xFE3
 15740                           fsr1h	equ	0xFE2
 15741                           fsr1l	equ	0xFE1
 15742                           bsr	equ	0xFE0
 15743                           indf2	equ	0xFDF
 15744                           postinc2	equ	0xFDE
 15745                           postdec2	equ	0xFDD
 15746                           preinc2	equ	0xFDC
 15747                           plusw2	equ	0xFDB
 15748                           fsr2h	equ	0xFDA
 15749                           fsr2l	equ	0xFD9
 15750                           status	equ	0xFD8

Data Sizes:
    Strings     230
    Constant    0
    Data        32
    BSS         272
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    147     160
    BANK1           256      0     211
    BANK2           256      0      80
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_27(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_27(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_22(CODE[4]), STR_21(CODE[4]), STR_18(CODE[4]), STR_17(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_22(CODE[4]), STR_21(CODE[4]), STR_18(CODE[4]), STR_17(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[13]), STR_14(CODE[14]), STR_12(CODE[16]), STR_10(CODE[16]), 
		 -> STR_8(CODE[18]), STR_6(CODE[16]), STR_4(CODE[18]), STR_2(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[13]), STR_14(CODE[14]), STR_12(CODE[16]), STR_10(CODE[16]), 
		 -> STR_8(CODE[18]), STR_6(CODE[16]), STR_4(CODE[18]), STR_2(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[13]), STR_14(CODE[14]), STR_12(CODE[16]), STR_10(CODE[16]), 
		 -> STR_8(CODE[18]), STR_6(CODE[16]), STR_4(CODE[18]), STR_2(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[13]), STR_14(CODE[14]), STR_12(CODE[16]), STR_10(CODE[16]), 
		 -> STR_8(CODE[18]), STR_6(CODE[16]), STR_4(CODE[18]), STR_2(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2369_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_15(CODE[17]), STR_13(CODE[17]), STR_11(CODE[17]), STR_9(CODE[17]), 
		 -> STR_7(CODE[17]), STR_5(CODE[17]), STR_3(CODE[17]), STR_1(CODE[17]), 
		 -> stateMachine@textCursor2(BANK0[16]), 


Critical Paths under _main in COMRAM

    _system_init->_eepromRead
    _stopMotor->_PWM1_setDC
    _stopMotor->_PWM2_setDC
    _startMotor->_PWM1_setDC
    _startMotor->_PWM2_setDC
    _startMotor->_speedControl
    _speedControl->___fltol
    _scanAdcConversion->___fltol
    _calculatedAverageValue->___xxtofl
    _PWM2_setDC->___fltol
    _PWM1_setDC->___fltol
    _fabsf->___xxtofl
    ___xxtofl->___lldiv
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___fltol->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _lcd_init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _TIMER0 in COMRAM

    None.

Critical Paths under _main in BANK0

    _menuControl->_stateMachine
    _stateMachine->_sprintf
    _startMotor->_speedControl
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _TIMER0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TIMER0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TIMER0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TIMER0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TIMER0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TIMER0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  100437
                          _Lcd_Clear
                         _PWM1_setDC
                         _PWM2_setDC
                           _PWM_Init
                            _adcInit
                           _lcd_init
                           _mcu_init
                        _menuControl
                     _menuInitialize
                        _system_init
                       _timer_0_init
 ---------------------------------------------------------------------------------
 (1) _timer_0_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_init                                          2     2      0      22
                                              1 COMRAM     2     2      0
                         _eepromRead
 ---------------------------------------------------------------------------------
 (2) _eepromRead                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _menuInitialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _menuControl                                          0     0      0   93759
                 _buttonControlFlags
                       _stateMachine
 ---------------------------------------------------------------------------------
 (2) _stateMachine                                        18    18      0   93759
                                            129 BANK0     18    18      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fladd
                             ___flge
                            ___flsub
                        _eepromWrite
                            _sprintf
                         _startMotor
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _stopMotor                                            0     0      0    6348
                         _PWM1_setDC
                         _PWM2_setDC
 ---------------------------------------------------------------------------------
 (3) _startMotor                                           0     0      0   32873
                         _PWM1_setDC
                         _PWM2_setDC
             _calculatedAverageValue
                  _scanAdcConversion
                       _speedControl
 ---------------------------------------------------------------------------------
 (4) _speedControl                                        10     6      4   11063
                                             87 COMRAM     6     2      4
                                              0 BANK0      4     4      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) _scanAdcConversion                                    2     2      0   12556
                                             87 COMRAM     2     2      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                       _readAdcValue
 ---------------------------------------------------------------------------------
 (5) _readAdcValue                                         7     5      2      46
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _calculatedAverageValue                              24    24      0    2906
                                             27 COMRAM    24    24      0
                            ___lldiv
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8    1282
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) _PWM2_setDC                                           6     4      2    3174
                                             87 COMRAM     6     4      2
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (4) _PWM1_setDC                                           6     4      2    3174
                                             87 COMRAM     6     4      2
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (5) _fabsf                                                8     4      4     199
                                             27 COMRAM     8     4      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4    1310
                                             13 COMRAM    14    10      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    10      8   42834
                                            111 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   41409
                                            103 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           50    44      6   41025
                                             71 BANK0     32    26      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   30053
                                             87 COMRAM     7     0      7
                                             10 BANK0     61    61      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     490
                                             77 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4    1369
                                             77 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _fabsf (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    3801
                                             68 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    3022
                                             52 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    5240
                                             27 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8     942
                                             52 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    4591
                                             52 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5042
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1396
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eepromWrite                                          2     1      1     500
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_String                                     6     4      2    1484
                                              4 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (4) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Set_Cursor                                       5     4      1    1596
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _buttonControlFlags                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mcu_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     198
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (4) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (5) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _TIMER0                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _PWM1_setDC
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
       _fabsf (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
     ___xxtofl
       ___lldiv (ARG)
     _fabsf
       ___xxtofl (ARG)
         ___lldiv (ARG)
   _PWM2_setDC
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
       _fabsf (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
     ___xxtofl
       ___lldiv (ARG)
     _fabsf
       ___xxtofl (ARG)
         ___lldiv (ARG)
   _PWM_Init
   _adcInit
   _lcd_init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _mcu_init
   _menuControl
     _buttonControlFlags
     _stateMachine
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___flge
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
       _eepromWrite
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fleq
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
                 _fabsf (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper
       _startMotor
         _PWM1_setDC
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
           _fabsf
             ___xxtofl (ARG)
               ___lldiv (ARG)
         _PWM2_setDC
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
           _fabsf
             ___xxtofl (ARG)
               ___lldiv (ARG)
         _calculatedAverageValue
           ___lldiv
           ___lmul
           ___xxtofl
             ___lldiv (ARG)
         _scanAdcConversion
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
           _readAdcValue
         _speedControl
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
       _stopMotor
         _PWM1_setDC
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
           _fabsf
             ___xxtofl (ARG)
               ___lldiv (ARG)
         _PWM2_setDC
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
           _fabsf
             ___xxtofl (ARG)
               ___lldiv (ARG)
   _menuInitialize
   _system_init
     _eepromRead
   _timer_0_init

 _TIMER0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      50       8       31.2%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      D3       6       82.4%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     93      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     221       9        0.0%
DATA                 0      0     221      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Aug 16 00:34:40 2020

                   ___fldiv@aexp 004D                     ___fldiv@bexp 004C  
                   ___fldiv@sign 0045                               l41 59F4  
                             l35 594E                               l38 5976  
                             l54 2466                               l70 5C82  
                             l72 5C90                               l57 3A0E  
                             l73 5C92                               l76 5BCC  
                             l78 5BDA                               _KD 01CB  
                             l79 5BDE                               l96 5770  
                             l98 5786                               _KP 01CF  
                   ___awdiv@sign 0006              ___wmul@multiplicand 0003  
            __end_of_system_init 49E4                              l100 579C  
                            l102 57B2                              l110 5CE6  
                            l104 57B4         ??_calculatedAverageValue 001C  
                            l122 5B10                              l107 5CB0  
                            l116 569C                              l119 537A  
                            l400 5C2E                              l320 4088  
                            l312 3F58                              l128 53F8  
                            l314 3FA4                              l243 5CB8  
                            l323 40D4                              l316 3FF0  
                            l404 54EC                              l340 139E  
                            l308 5C06                              l246 5CC6  
                            l318 403C                              l408 5472  
                            l512 52D4                              l440 5A30  
                            l352 15E8                              l329 5562  
                            l249 49E2                              l362 17FA  
                            l443 5B46                              l339 134E  
                            l612 48C2                              l364 1898  
                            l437 4292                              l519 52E4  
                   _startIsClick 00FD                              l482 5CD8  
                            l379 1C60                              l716 50E6  
                            l485 5C54                              l750 4BA6  
                            l744 5240                              l496 55BC  
                            l729 5196                              l497 55CC  
                            l755 4BEC                              l782 4AE8  
                            l599 475E                              l759 5AA0  
                            _PR2 000FBB                              _abs 5978  
                            _pad 4F5E                     ___awmod@sign 0006  
                            wreg 000FE8                     ___flmul@aexp 002D  
                   ___flmul@bexp 002E                     ___flmul@sign 0028  
                   ___flmul@temp 0033                     ___flmul@prod 002F  
                    _stopIsClick 00FC                     ___fltol@exp1 0057  
                           l1013 2C94                             l1030 2DAE  
                           l1022 2F64                             l1014 2C82  
                           l1103 338E                             l1015 2C48  
                           l1040 2E6C                             l1106 3220  
                           l1211 4FA4                             ?_abs 0013  
                           l1116 3350                             l1108 3298  
                           l1140 42EA                             l1109 3286  
                           l1214 4FE6                             l1222 3AB0  
                           l1039 2E7E                             l1055 58F0  
                           l1143 4446                             l1216 5022  
                           l1224 3AB8                             l1080 3646  
                           l1072 354C                             l1304 0E6C  
                           l1081 3634                             l1161 5BB0  
                           l1242 3CF2                             l1154 43DE  
                           l1067 3728                             l1147 4382  
                           l1260 1296                             l1069 3588  
                           l1078 35CE                             l1423 45CE  
                           l4000 2BE6                             l1432 3F08  
                           l1168 5858                             l1513 56FC  
                           l1442 5AD8                             l1450 58AA  
                           l1426 45D6                             l4010 2C56  
                           l4002 2BEA                             l1370 29EA  
                           l1362 2AA4                             l1099 302A  
                           l1435 3E4C                             l4100 2EE4  
                           l4020 2C80                             l4012 2C62  
                           l4004 2C14                             l1508 56F4  
                           l4110 2F36                             l4102 2EF4  
                           l4030 2CD6                             l4022 2CA2  
                           l4014 2C66                             l4006 2C30  
                           l1278 0AD4                             l1471 4F5C  
                           l4200 4772                             l1392 59AE  
                           l4120 2F54                             l4112 2F3C  
                           l4104 2F04                             l4040 2D10  
                           l4032 2CE4                             l4024 2CB2  
                           l4016 2C74                             l4008 2C40  
                           l1456 5A68                             l5000 0DAE  
                           l1376 562E                             l1377 5636  
                           l4210 47E2                             l4202 4792  
                           l1482 5CE8                             l4130 5914  
                           l4114 2F3E                             l4106 2F24  
                           l4050 2D7C                             l4042 2D12  
                           l4034 2CF2                             l4018 2C76  
                           l5010 0E44                             l5002 0DE0  
                           l1395 59B6                             l1387 4CEA  
                           l4220 485A                             l4212 47EA  
                           l4204 4796                             l4124 58F2  
                           l4132 5B48                             l4300 3518  
                           l4116 2F44                             l4108 2F28  
                           l4060 2DD4                             l4052 2D7E  
                           l4044 2D1C                             l4036 2CFE  
                           l4028 2CC6                             l5100 1184  
                           l5020 0EFC                             l5012 0E58  
                           l5004 0DF0                             l4222 486C  
                           l4214 47FE                             l4206 47A4  
                           l4126 58FE                             l1494 5B7C  
                           l4134 5B54                             l4310 3574  
                           l4302 3528                             l4118 2F52  
                           l4070 2E02                             l4054 2D8E  
                           l4038 2D02                             l4046 2D22  
                           l4142 5A32                             l5110 11C4  
                           l5102 118C                             l5030 0F48  
                           l5022 0F0E                             l5014 0E64  
                           l5006 0E00                             l1479 5934  
                           l4160 460E                             l4152 45D8  
                           l4216 480C                             l4224 4872  
                           l4208 47C4                             l4128 5910  
                           l4136 5B58                             l4320 35B4  
                           l4312 3576                             l4304 353C  
                           l4240 33BC                             l4232 3390  
                           l4400 3014                             l4072 2E10  
                           l4064 2DE8                             l4080 2E2E  
                           l4048 2D48                             l4056 2D9E  
                           l1488 5758                             l5120 1200  
                           l5112 11D6                             l5104 1192  
                           l5040 0F7C                             l5032 0F56  
                           l5024 0F20                             l5016 0E88  
                           l5008 0E34                             l5200 4D9E  
                           l6000 1956                             l4146 5C30  
                           l4170 466A                             l4162 461C  
                           l4154 45DC                             l4226 4882  
                           l4218 483A                             l4138 5B70  
                           l4330 35F0                             l4322 35BE  
                           l4314 3586                             l4306 354A  
                           l4250 33F6                             l4242 33CC  
                           l4234 339C                             l4410 305E  
                           l4402 301A                             l4074 2E18  
                           l4066 2DF2                             l4058 2DC4  
                           l4082 2E3C                             l5130 1258  
                           l5122 1206                             l5114 11E2  
                           l5106 11A4                             l5050 0FAE  
                           l5042 0F8C                             l5034 0F66  
                           l5026 0F2E                             l5018 0EEC  
                           l1498 4DC0                             l5210 594C  
                           l6010 198A                             l6002 195A  
                           l5220 576A                             l6100 5350  
                           l4148 5C4C                             l4180 46D4  
                           l4172 4672                             l4164 463C  
                           l4156 45EA                             l4228 48A2  
                           l4340 3662                             l4332 35FE  
                           l4324 35CC                             l4316 3598  
                           l4308 3556                             l4260 3422  
                           l4252 33FC                             l4244 33DC  
                           l4236 33AA                             l4420 30AE  
                           l4412 306A                             l4404 303A  
                           l4092 2E8E                             l4084 2E40  
                           l4076 2E1C                             l4068 2E00  
                           l4500 58AC                             l5132 1260  
                           l5116 11EA                             l5108 11BE  
                           l5060 1056                             l5052 0FC0  
                           l5044 0F90                             l5036 0F6A  
                           l5028 0F36                             l5300 43C0  
                           l5212 595C                             l5204 5938  
                           l6020 19E4                             l6012 1996  
                           l6004 196A                             l5230 579E  
                           l5222 5772                             l6110 536E  
                           l6102 5356                             l5150 4480  
                           l5142 4448                             l4190 471E  
                           l4182 46F4                             l4174 4686  
                           l4166 4640                             l4158 460A  
                           l4510 5036                             l4350 36CE  
                           l4342 3670                             l4334 362C  
                           l4318 35AE                             l4326 35DE  
                           l4270 345C                             l4262 3432  
                           l4254 3402                             l4246 33DE  
                           l4238 33AC                             l4430 30F0  
                           l4422 30BA                             l4414 3074  
                           l4406 304A                             l4094 2E9A  
                           l4086 2E4E                             l4078 2E2C  
                           l4502 58BC                             l5134 1270  
                           l5126 123A                             l5118 11FA  
                           l5070 10AE                             l5062 105E  
                           l5054 0FC4                             l5046 0F96  
                           l5038 0F70                             l5310 4416  
                           l5302 43CE                             l5214 596E  
                           l5206 5938                             l6030 1A70  
                           l6022 1A16                             l6014 19A0  
                           l6006 196E                             l5232 57AC  
                           l5224 5780                             l6112 5374  
                           l6104 535C                             l5160 44D6  
                           l5152 44B6                             l5144 445C  
                           l4192 473E                             l4184 46F6  
                           l4176 4694                             l4168 464C  
                           l4520 505C                             l4512 503E  
                           l4360 371C                             l4352 36E8  
                           l4344 369A                             l4328 35EC  
                           l4272 3472                             l4264 3442  
                           l4256 3410                             l4248 33E6  
                           l4440 3152                             l4432 30FC  
                           l4424 30C6                             l4416 308A  
                           l4096 2EA8                             l4088 2E64  
                           l5136 1276                             l5128 124C  
                           l5080 10F2                             l5072 10BC  
                           l5048 0F9C                             l5056 0FCA  
                           l5064 1062                             l5400 2906  
                           l5320 2468                             l5312 4426  
                           l5304 43EC                             l5208 594A  
                           l6040 1AD2                             l6032 1A74  
                           l6024 1A1C                             l6016 19C6  
                           l6008 1980                             l6120 5CC8  
                           l6200 4E50                             l5226 5788  
                           l5218 575C                             l6106 5362  
                           l6114 5CB2                             l5170 4550  
                           l5162 44DE                             l5154 44BA  
                           l5146 4460                             l4186 4708  
                           l4178 46A6                             l4530 5094  
                           l4522 5064                             l4514 5042  
                           l4506 5024                             l4362 371E  
                           l4354 3704                             l4338 3656  
                           l4346 369E                             l4290 34C6  
                           l4274 3482                             l4282 34A2  
                           l4266 3444                             l4258 3412  
                           l4610 4B66                             l4602 4AEA  
                           l4450 31E8                             l4442 315E  
                           l4434 310C                             l4426 30D4  
                           l4418 3096                             l4370 2F66  
                           l4098 2EE2                             l5090 1128  
                           l5082 10FA                             l5074 10CC  
                           l5066 1080                             l5058 1022  
                           l5330 24D6                             l5322 248C  
                           l5314 4434                             l5306 43EE  
                           l5234 5B7E                             l5250 559C  
                           l5242 5564                             l6050 1B52  
                           l6042 1ADC                             l6026 1A50  
                           l6018 19D2                             l6034 1AA8  
                           l6130 49AC                             l6122 5CD4  
                           l6210 4E84                             l6202 4E56  
                           l5228 5796                             l6140 5C08  
                           l6108 5368                             l6116 5CB6  
                           l5164 44E6                             l5148 4464  
                           l4188 470E                             l4196 4760  
                           l4700 5992                             l4540 50C0  
                           l4532 509A                             l4524 5076  
                           l4516 5050                             l4508 5028  
                           l4356 3708                             l4348 36B8  
                           l4292 34E0                             l4284 34B2  
                           l4276 348A                             l4268 344C  
                           l4620 4BEA                             l4612 4B74  
                           l4604 4B18                             l4460 323E  
                           l4452 3206                             l4444 317A  
                           l4436 3126                             l4428 30E0  
                           l4380 2FA2                             l4372 2F72  
                           l5092 1130                             l5084 110A  
                           l5076 10D0                             l5068 109C  
                           l5420 2A44                             l5404 2974  
                           l5340 255C                             l5332 250C  
                           l5324 249A                             l5316 4436  
                           l5308 43F2                             l5236 5B9E  
                           l5260 527C                             l5252 5242  
                           l5244 5574                             l5500 372A  
                           l6060 1BB0                             l6052 1B58  
                           l6044 1B02                             l6036 1ABC  
                           l6028 1A62                             l6132 49B6  
                           l6124 5CD6                             l6204 4E68  
                           l6212 4E88                             l5510 5C96  
                           l6142 5C0C                             l5174 458E  
                           l5166 451A                             l5158 44C0  
                           l4198 4764                             l3910 4EA6  
                           l4534 50B0                             l4526 507E  
                           l4542 50C6                             l4518 5058  
                           l4550 50E8                             l4358 3716  
                           l4294 34F0                             l4286 34B2  
                           l4278 348E                             l4614 4B86  
                           l4606 4B28                             l4470 32A8  
                           l4462 3242                             l4454 3210  
                           l4446 31A4                             l4438 3136  
                           l4390 2FD4                             l4382 2FB2  
                           l4374 2F80                             l4710 4C80  
                           l4702 4BEE                             l5094 113C  
                           l5086 1112                             l5078 10E0  
                           l5190 4D22                             l5406 2986  
                           l5414 29FE                             l5350 25E4  
                           l5334 251C                             l5326 24AC  
                           l5430 2A6E                             l5238 5BA0  
                           l5270 52C4                             l5262 528A  
                           l5254 5252                             l5246 5582  
                           l5502 375C                             l6054 1B8C  
                           l6046 1B0E                             l6038 1AC6  
                           l6062 1BE4                             l6150 54F6  
                           l6118 5BE0                             l6134 49C0  
                           l6126 48C4                             l6206 4E6A  
                           ?_pad 0011                             l5512 5C98  
                           l6144 5C1C                             l6080 59E2  
                           l5520 5ADC                             l5600 5BBE  
                           l5176 45A0                             l3912 4EB8  
                           l4800 3AE0                             l4544 50D6  
                           l4536 50B8                             l4528 5086  
                           l4560 5114                             l4552 50EC  
                           l4296 3500                             l4616 4B94  
                           l4608 4B56                             l4480 330A  
                           l4472 32B4                             l4464 3250  
                           l4456 321E                             l4448 31DA  
                           l4392 2FE2                             l4384 2FB8  
                           l4376 2F82                             l4624 5A6A  
                           l4640 4A38                             l4632 49E4  
                           l4720 4CE2                             l4704 4C0E  
                           l5096 1142                             l5088 1120  
                           l5192 4D30                             l5184 4CEC  
                           l5432 2A92                             l5416 2A22  
                           l5424 2A52                             l5408 29BA  
                           l5360 267E                             l5352 25F2  
                           l5344 25A4                             l5336 252E  
                           l5328 24B2                             l5280 42FA  
                           l5272 52CE                             l5264 5294  
                           l5256 5268                             l5248 5592  
                           l5504 3822                             l5440 1C66  
                           l6056 1B9E                             l6048 1B20  
                           l6160 5550                             l6152 5508  
                           l6136 49D8                             l6128 49A2  
                           l6208 4E74                             l5514 5C9E  
                           l6082 5CDA                             l6090 531E  
                           l5610 563A                             l5530 5AFC  
                           l5522 5AE8                             l5602 5BC0  
                           l5178 45B2                             l3914 4EC2  
                           l4810 3B80                             l4802 3AE6  
                           l4546 50DE                             l4538 50BA  
                           l4570 514C                             l4562 511C  
                           l4554 50FA                             l4298 3510  
                           l4618 4BE4                             l4490 3372  
                           l4482 331E                             l4474 32C2  
                           l4466 327E                             l4458 3230  
                           l4394 2FE4                             l4386 2FC8  
                           l4378 2F92                             l4626 5A80  
                           l3930 2AD2                             l3922 2AA6  
                           l4642 4A3A                             l4634 49FA  
                           l4706 4C4C                             l4714 4C8C  
                           l5098 1168                             l5194 4D48  
                           l5186 4D16                             l5426 2A60  
                           l5418 2A30                             l5370 270A  
                           l5354 2616                             l5338 254E  
                           l5346 25B6                             l5290 4338  
                           l5282 4310                             l5274 4296  
                           l5266 52B2                             l5258 5270  
                           l5506 391C                             l5450 1DC6  
                           l5442 1C74                             l6322 1C12  
                           l6058 1BAC                             l6154 551A  
                           l6146 54EE                             l6138 49DC  
                           l6170 4DCA                             l5516 5CA0  
                           l6076 59B8                             l6092 5324  
                           l6084 52E6                             l5700 400E  
                           l5620 567E                             l5612 564A  
                           l5532 5AFE                             l5524 5AEA  
                           l5604 5BC2                             l3916 4EE0  
                           l3908 4E94                             l4820 3C28  
                           l4812 3B86                             l4804 3AEE  
                           l4580 5186                             l4572 5162  
                           l4564 512E                             l4556 5102  
                           l4492 3374                             l4484 3338  
                           l4476 32EC                             l4396 2FF4  
                           l4388 2FCE                             l4628 5A90  
                           l3940 2B0C                             l3932 2AE2  
                           l3924 2AB2                             l4644 4A4A  
                           l4716 4C9E                             l4708 4C74  
                           l4740 3D14                             l4724 56FE  
                           l4732 56D4                             l4900 08E4  
                           l5196 4D64                             l5380 27C6  
                           l5372 273C                             l5364 26C6  
                           l5356 2650                             l5348 25DA  
                           l5292 436A                             l5276 42A6  
                           l5540 5474                             l5268 52C2  
                           l5508 39C4                             l6324 2420  
                           l5460 1F82                             l5452 1E36  
                           l5444 1CDE                             l6068 1BFC  
                           l6156 552C                             l6148 54F2  
                           l6180 4DDE                             l6172 4DCE  
                           l5518 5CAE                             l6078 59DA  
                           l6094 5334                             l6086 5300  
                           l5710 405A                             l5702 4016  
                           l5622 5690                             l5614 565C  
                           l5534 5B04                             l5526 5AF2  
                           l5630 53B8                             l5606 5BC6  
                           l6326 4504                             l3918 4F16  
                           l4830 3C8E                             l4822 3C42  
                           l4814 3B8C                             l4806 3AF8  
                           l4582 518E                             l4574 516A  
                           l4566 5136                             l4558 5106  
                           l4590 51D6                             l4486 3354  
                           l4494 337A                             l4478 32F0  
                           l4398 3004                             l3950 2B3A  
                           l3942 2B12                             l3934 2AF2  
                           l3926 2AC0                             l4670 4AC8  
                           l4654 4A74                             l4646 4A4E  
                           l4638 4A0E                             l4750 3E00  
                           l4742 3D6C                             l4726 570E  
                           l4734 56E6                             l4902 0900  
                           l4910 091C                             l5198 4D76  
                           l5390 286E                             l5382 280E  
                           l5374 274C                             l5358 2670  
                           l5366 26D8                             l5294 436C  
                           l5286 4324                             l5278 42B4  
                           l5542 5474                             l5550 53FA  
                           l5470 20E2                             l5462 1F90  
                           l5454 1E44                             l5446 1D4E  
                           l5438 1C62                             l6158 553E  
                           l6190 4E0C                             l6182 4DE2  
                           l6174 4DD2                             l6166 4DC2  
                           l6096 533A                             l6088 5306  
                           l5720 40A6                             l5712 4062  
                           l5704 4024                             l5624 5696  
                           l5616 5662                             l5536 5B06  
                           l5528 5AF4                             l5632 53BC  
                           l5608 5BCA                             l4680 4F82  
                           l4832 3C94                             l4840 3CCA  
                           l4824 3C5C                             l4808 3AFE  
                           l4816 3BF0                             l4576 5170  
                           l4568 513E                             l4592 5204  
                           l4496 337E                             l4488 3364  
                           l3960 2B6E                             l3952 2B3C  
                           l3944 2B24                             l3936 2AF4  
                           l3928 2AC2                             l4672 4AD8  
                           l4664 4A9C                             l4656 4A7E  
                           l4648 4A5C                             l4760 3EE8  
                           l4752 3E3C                             l4744 3D80  
                           l4728 569E                             l4920 09A6  
                           l4912 0936                             l5392 287C  
                           l5376 277E                             l5368 26FA  
                           l5640 582A                             l5296 4378  
                           l5288 432C                             l5544 548C  
                           l5552 5412                             l5480 2248  
                           l5472 2152                             l5464 1FFA  
                           l5456 1EAE                             l5448 1D5C  
                           l5560 40D6                             l5800 1456  
                           l6192 4E1C                             l6184 4DEE  
                           l6176 4DD6                             l6168 4DC6  
                           l6098 534A                             l5722 40AE  
                           l5714 4070                             l5706 4034  
                           l5618 566C                             l5538 5B0E  
                           l5626 537C                             l4770 585A  
                           l4690 4FC8                             l4682 4F90  
                           l4834 3CA6                             l4818 3C0A  
                           l4826 3C6C                             l4578 5176  
                           l4594 5214                             l4586 5198  
                           l3970 2BAA                             l3954 2B4C  
                           l3962 2B76                             l3946 2B26  
                           l3938 2AFC                             l4666 4AA8  
                           l4658 4A88                             l4762 3EF8  
                           l4746 3D8E                             l4754 3E70  
                           l4738 3CF4                             l4930 0A7E  
                           l4922 0A00                             l4850 0710  
                           l5394 28AC                             l5386 2846  
                           l5378 27A2                             l5642 5846  
                           l5634 5808                             l5298 43B4  
                           l5546 54D4                             l5554 545A  
                           l5482 22B2                             l5474 2160  
                           l5466 206A                             l5458 1F1A  
                           l5570 4202                             l5562 4116  
                           l5650 5B1A                             l5810 148E  
                           l5802 1468                             l5730 12A8  
                           l6194 4E2C                             l6186 4DFA  
                           l6178 4DDA                             l5724 40BC  
                           l5716 4080                             l5708 404C  
                           l5628 5388                             l4772 585E  
                           l4692 4FF6                             l4684 4F9C  
                           l4676 4F5E                             l4836 3CB2  
                           l4828 3C7E                             l4596 5238  
                           l4588 51C6                             l3980 2BBE  
                           l3972 2BAE                             l3964 2B86  
                           l3956 2B5C                             l3948 2B2C  
                           l4668 4AB8                             l4756 3EAC  
                           l4940 0AC8                             l4932 0A82  
                           l4924 0A34                             l4916 096C  
                           l4860 0760                             l4852 0718  
                           l4844 06E8                             l5388 2858  
                           l5636 581A                             l5548 53FA  
                           l5484 2322                             l5476 21CA  
                           l5468 2078                             l5492 240A  
                           l5580 4266                             l5572 421E  
                           l5564 41DC                             l5556 40D6  
                           l5652 59F6                             l5900 1692  
                           l5820 14B2                             l5812 1494  
                           l5804 147A                             l5740 12FE  
                           l5732 12B2                             l5660 5C7C  
                           l6196 4E3C                             l6188 4E0A  
                           l5726 40CC                             l5718 4098  
                           l5670 3F2A                             l4766 5AA2  
                           l4774 5872                             l4694 500A  
                           l4686 4FB0                             l4678 4F6E  
                           l4838 3CBA                             l4790 3A88  
                           l4782 3A10                             l4598 523E  
                           l3990 2BD2                             l3982 2BC2  
                           l3974 2BB2                             l3966 2B98  
                           l3958 2B6C                             l4758 3EC0  
                           l4950 0B04                             l4934 0A94  
                           l4942 0AE0                             l4926 0A3C  
                           l4918 09A0                             l4870 0798  
                           l4862 076E                             l4854 073C  
                           l4846 06F2                             l5398 28D8  
                           l5590 55E4                             l5638 5822  
                           l5486 2330                             l5478 223A  
                           l5582 426E                             l5574 4226  
                           l5566 41E4                             l5558 40D6  
                           l5646 5B12                             l5654 5A18  
                           l5910 16CA                             l5902 1696  
                           l5830 14DE                             l5822 14C4  
                           l5814 1498                             l5806 1480  
                           l5750 1360                             l5742 1312  
                           l5734 12BE                             l5662 5C7E  
                           l6198 4E4C                             l5680 3F76  
                           l5672 3F32                             l4776 58A0  
                           l4688 4FC4                             l4792 3A8A  
                           l4784 3A30                             l3992 2BD6  
                           l3984 2BC6                             l3976 2BB6  
                           l3968 2BA6                             l4960 0B6A  
                           l4952 0B20                             l4936 0AA6  
                           l4928 0A6E                             l4880 07FE  
                           l4872 079C                             l4864 0780  
                           l4856 0746                             l4848 0702  
                           l5592 5612                             l5488 239A  
                           l5584 428A                             l5576 4242  
                           l5568 41F2                             l5648 5B16  
                           l5656 5A24                             l5920 16F8  
                           l5912 16CE                             l5904 16A0  
                           l5840 1500                             l5832 14E2  
                           l5824 14CA                             l5816 149C  
                           l5808 1484                             l5760 1396  
                           l5752 1370                             l5744 131C  
                           l5736 12C8                             l5728 1298  
                           l5664 5C80                             l5690 3FC2  
                           l5682 3F7E                             l5674 3F40  
                           l5666 3F0A                             l5594 5BB4  
                           l4778 58A4                             l4698 5978  
                           l4794 3AA4                             l4786 3A58  
                           l3994 2BDA                             l3986 2BCA  
                           l3978 2BBA                             l4970 0BB2  
                           l4962 0B7C                             l4954 0B56  
                           l4938 0AAE                             l4882 0810  
                           l4866 078C                             l4874 07A2  
                           l4858 074E                             l5586 55CE  
                           l5578 424A                             l5930 1744  
                           l5922 1714                             l5906 16B2  
                           l5914 16D8                             l5850 1554  
                           l5842 150A                             l5834 14E6  
                           l5826 14CE                             l5818 14A0  
                           l5770 13DE                             l5762 1398  
                           l5754 1380                             l5746 1332  
                           l5738 12F2                             l5658 5C78  
                           l5692 3FCA                             l5684 3F8C  
                           l5676 3F50                             l5668 3F1C  
                           l5596 5BB8                             l4796 3AC0  
                           l4788 3A78                             l3996 2BDE  
                           l3988 2BCE                             l4980 0BFA  
                           l4972 0BC0                             l4964 0B8E  
                           l4956 0B5E                             l4948 0AF2  
                           l4884 082C                             l4876 07C8  
                           l4892 0876                             l4868 0794  
                           l5588 55D6                             l5940 176E  
                           l5932 174E                             l5924 1720  
                           l5916 16E2                             l5908 16C4  
                           l5860 1598                             l5852 1558  
                           l5844 1526                             l5828 14D8  
                           l5836 14EA                             l5772 13E2  
                           l5764 13AE                             l5780 13F6  
                           l5756 1390                             l5748 1342  
                           l5694 3FD8                             l5686 3F9C  
                           l5678 3F68                             l5598 5BBC  
                           l4798 3AD2                             l3998 2BE2  
                           l4990 0D0E                             l4982 0C0A  
                           l4974 0BD8                             l4966 0B9C  
                           l4958 0B62                             l4894 089C  
                           l4886 0844                             l5950 17E8  
                           l5942 1798                             l5934 175A  
                           l5918 16EE                             l5870 15D2  
                           l5862 159E                             l5854 156A  
                           l5846 1532                             l5838 14F4  
                           l5790 142E                             l5782 1408  
                           l5774 13F0                             l5766 13BE  
                           l5758 1394                             l5696 3FE8  
                           l5688 3FB4                             l4984 0C1E  
                           l4992 0D14                             l4976 0BEA  
                           l4968 0BA0                             l4888 084E  
                           l5960 1824                             l5952 17F2  
                           l5944 17A4                             l5936 1760  
                           l5928 1738                             l5880 1608  
                           l5872 15D8                             l5864 15A4  
                           l5856 1574                             l5848 1546  
                           l5792 1430                             l5784 1418  
                           l5776 13F2                             l5768 13CE  
                           l5698 4000                             l4994 0D32  
                           l4986 0C82                             l4978 0BF2  
                           l4898 08D2                             l5970 1882  
                           l5962 1830                             l5954 17FE  
                           l5946 17B6                             l5938 1764  
                           l5890 164C                             l5882 1624  
                           l5874 15DE                             l5858 1586  
                           l5866 15AE                             l5794 1436  
                           l5786 1428                             l5778 13F4  
                           l4996 0D66                             l4988 0CDA  
                           l5980 18E0                             l5972 18AA  
                           l5964 183A                             l5956 1816  
                           l5948 17D6                             l5892 165E  
                           l5884 1630                             l5876 15F2  
                           l5868 15C0                             l5796 143A  
                           l5788 142C                             l4998 0D98  
                           l5990 192E                             l5974 18BA  
                           l5982 18EE                             l5966 1864  
                           l5958 181A                             l5894 1668  
                           l5878 15FE                             l5798 144C  
                           l5984 1902                             l5976 18CA  
                           l5968 1870                             l5896 167A  
                           l5888 1648                             l5994 193C  
                           l5986 190C                             l5978 18DC  
                           l5898 168C                             l5996 1940  
                           l5988 191E                             l5998 1952  
                           STR_1 0635                             STR_2 06AA  
                           STR_3 0668                             STR_4 0601  
                           STR_5 0679                             STR_6 068A  
                           STR_7 0624                             STR_8 0601  
                           STR_9 0646                             u4000 2B24  
                           u4001 2B20                             u4010 2B3A  
                           u4011 2B36                             u4100 2C74  
                           u4020 2B4C                             u4101 2C70  
                           u4021 2B48                             u4110 2C94  
                           u4030 2B5C                             u4111 2C90  
                           u4031 2B58                             u5000 50D6  
                           u4200 2DD4                             u4120 2CA2  
                           u4040 2B98                             u5001 50D2  
                           u4201 2DD0                             u4121 2C9E  
                           u4041 2B94                             u5010 50FA  
                           u4210 2E00                             u4130 2CB2  
                           u4050 2BA6                             u5011 50F6  
                           u4211 2DFC                             u4131 2CAE  
                           u4051 2BA2                             u5020 5114  
                           u5100 4B18                             u4300 2EE2  
                           u4220 2E10                             u4140 2CE4  
                           u4060 2C14                             u5021 5110  
                           u5101 4B14                             u4301 2EDE  
                           u4221 2E0C                             u4141 2CE0  
                           u4061 2C10                             u5030 512E  
                           u5110 4B56                             u4310 2EF4  
                           u4230 2E2C                             u4150 2CF2  
                           u4070 2C2C                             u5031 512A  
                           u5111 4B52                             u4311 2EF0  
                           u4231 2E28                             u4151 2CEE  
                           u4071 2C26                             u4400 45EA  
                           u5040 514C                             u5120 4B74  
                           u4320 2F04                             u4240 2E3C  
                           u4160 2D10                             u4080 2C2E  
                           u5200 4A98                             u6000 0DF0  
                           u4401 45E6                             u5041 5148  
                           u5121 4B70                             u4321 2F00  
                           u4241 2E38                             u4161 2D0C  
                           u5201 4A94                             u6001 0DEC  
                           u4410 461C                             u5050 5162  
                           u5130 4B94                             u4330 2F24  
                           u4250 2E4E                             u4170 2D48  
                           u4090 2C56                             u5210 4AB8  
                           u6010 0E58                             u4411 4618  
                           u5051 515E                             u5131 4B90  
                           u4331 2F20                             u4251 2E4A  
                           u4171 2D44                             u4091 2C52  
                           u5211 4AB4                             u6011 0E54  
                           u4500 480C                             u5060 5186  
                           u5140 4BE4                             u4340 2F36  
                           u4260 2E64                             u4180 2D8E  
                           u5220 4AC8                             u5300 4C74  
                           u6100 109C                             u6020 0EFC  
                           u4421 4646                             u4501 4808  
                           u5061 5182                             u5141 4BE0  
                           u4341 2F32                             u4261 2E60  
                           u4181 2D8A                             u5221 4AC4  
                           u5301 4C70                             u6101 1098  
                           u6021 0EF8                             u4430 466A  
                           u4510 483A                             u5230 4F6E  
                           u5070 51C6                             u5150 5A80  
                           u4350 2F52                             u4270 2E7A  
                           u4190 2DC4                             u5310 4C9E  
                           u6110 10AE                             u6030 0F0E  
                           u4431 4666                             u4511 4836  
                           u5231 4F6A                             u5071 51C2  
                           u5151 5A7C                             u4351 2F4E  
                           u4271 2E76                             u4191 2DC0  
                           u5311 4C9A                             u6111 10AA  
                           u6031 0F0A                             u7000 4000  
                           u4440 4694                             u4520 4882  
                           u4360 5934                             u5240 4F90  
                           u4600 34B2                             u5080 5204  
                           u4280 2E8E                             u5160 49FA  
                           u5400 3D3C                             u6200 124C  
                           u6120 10BC                             u6040 0F20  
                           u7001 3FFC                             u4441 4690  
                           u4521 487E                             u4361 5930  
                           u5241 4F8C                             u4601 34AE  
                           u5081 5200                             u4281 2E8A  
                           u5161 49F6                             u6201 1248  
                           u6121 10B8                             u6041 0F1C  
                           u7010 400E                             u6210 4480  
                           u4450 46D4                             u4370 5B70  
                           u5250 4FE6                             u4610 3528  
                           u4530 33AA                             u5090 5238  
                           u4290 2EA8                             u5170 4A2E  
                           u5330 4CD8                             u5410 3D6C  
                           u6130 10F2                             u6050 0F2E  
                           u7011 400A                             u6211 447C  
                           u4451 46D0                             u4371 5B6C  
                           u5251 4FE2                             u4611 3524  
                           u4531 33A6                             u5091 5234  
                           u4291 2EA4                             u5331 4CD2  
                           u5411 3D68                             u6131 10EE  
                           u6051 0F2A                             u7100 40BC  
                           u7020 4024                             u5500 5AD2  
                           u6220 44B6                             u4460 471E  
                           u5260 4FF6                             u4700 3642  
                           u4620 354A                             u4540 33BC  
                           u5180 4A5C                             u5340 4CDA  
                           u5420 3D8E                             u4380 5A62  
                           u6140 1120                             u6060 0F48  
                           u6300 4D64                             u7101 40B8  
                           u7021 4020                             u5501 5ACC  
                           u6221 44B2                             u4461 471A  
                           u5261 4FF2                             u4701 363E  
                           u4621 3546                             u4541 33B8  
                           u5181 4A58                             u5325 4CB0  
                           u5421 3D8A                             u5405 3D32  
                           u4381 5A5C                             u6141 111C  
                           u6061 0F44                             u6301 4D60  
                           u7110 40CC                             u7030 4034  
                           u5510 5AD4                             u6230 44D2  
                           u4470 4772                             u5270 5992  
                           u4710 3656                             u4630 3574  
                           u4550 33CC                             u5190 4A70  
                           u5350 5746                             u4390 5A64  
                           u6150 11A4                             u6070 0F56  
                           u6310 4D76                             u7111 40C8  
                           u7031 4030                             u6231 44CE  
                           u4471 476E                             u5271 598E  
                           u4711 3652                             u4631 3570  
                           u4551 33C8                             u5191 4A6C  
                           u5175 4A24                             u6151 11A0  
                           u6071 0F52                             u6311 4D72  
                           u7040 404C                             u5520 5872  
                           u6240 4588                             u4480 47A4  
                           u5600 3AE0                             u4720 3670  
                           u4640 3598                             u4560 3410  
                           u4800 2FF4                             u5280 4C2E  
                           u5440 3DFC                             u5360 5758  
                           u6160 11BE                             u6080 0FAE  
                           u6320 4D9E                             u6400 5268  
                           u7200 13AE                             u7041 4048  
                           u5521 586E                             u6241 4582  
                           u4481 47A0                             u5601 3ADC  
                           u4721 366C                             u4641 3594  
                           u4561 340C                             u4801 2FF0  
                           u5441 3DF8                             u5361 5754  
                           u6161 11BA                             u6081 0FAA  
                           u6321 4D9A                             u6401 5264  
                           u7201 13AA                             u7121 129E  
                           u7050 405A                             u5530 58A0  
                           u6250 458A                             u4490 47E2  
                           u3930 4EA6                             u5610 3C0A  
                           u4730 36B8                             u4650 35AE  
                           u4570 3422                             u4810 3004  
                           u5290 4C4C                             u5450 3E20  
                           u5370 56CE                             u6170 11D6  
                           u6090 1080                             u6410 528A  
                           u6330 595C                             u7210 13BE  
                           u7130 1312                             u7051 4056  
                           u5531 589C                             u4491 47DE  
                           u3931 4EA2                             u5611 3C06  
                           u4731 36B4                             u4651 35AA  
                           u4571 341E                             u4811 3000  
                           u5291 4C48                             u5435 3DA2  
                           u5371 56C8                             u6171 11D2  
                           u6091 107C                             u6411 5286  
                           u6331 5958                             u7211 13BA  
                           u7131 130E                             u6340 576A  
                           u7060 4070                             u6260 45A0  
                           u3940 4EB8                             u5620 3C28  
                           u5540 3A40                             u4740 36E8  
                           u4660 35CC                             u4580 3432  
                           u4900 32A8                             u4820 303A  
                           u5460 3E3C                             u5436 3DAC  
                           u5380 56D0                             u6180 1234  
                           u5700 0760                             u6500 43EC  
                           u6420 52B2                             u7300 14B2  
                           u7220 13CE                             u7140 1332  
                           u6341 5766                             u7061 406C  
                           u6261 459C                             u3941 4EB4  
                           u5621 3C24                             u5541 3A3A  
                           u4741 36E4                             u4661 35C8  
                           u4581 342E                             u4901 32A4  
                           u4821 3036                             u5285 4C24  
                           u5461 3E38                             u5437 3DBC  
                           u5357 573C                             u6181 122E  
                           u5701 075C                             u6501 43E8  
                           u6421 52AE                             u7301 14AE  
                           u7221 13CA                             u7141 132E  
                           u6350 5780                             u7070 4080  
                           u6270 45B2                             u3950 4EE0  
                           u5630 3C42                             u5550 3A42  
                           u4750 3716                             u4670 35EC  
                           u4590 3472                             u4910 32C2  
                           u4830 304A                             u5470 3E90  
                           u5390 56E6                             u6190 1236  
                           u5710 076E                             u6510 4426  
                           u6430 42A6                             u7310 14C4  
                           u7230 13DE                             u7150 1342  
                           u6351 577C                             u7071 407C  
                           u6271 45AE                             u3951 4EDC  
                           u5631 3C3E                             u4751 3712  
                           u4671 35E8                             u4591 346E  
                           u4911 32BE                             u4831 3046  
                           u5455 3E16                             u5391 56E2  
                           u5711 076A                             u6511 4422  
                           u6431 42A2                             u7311 14C0  
                           u7231 13DA                             u7151 133E  
                           u6360 5796                             u7080 4098  
                           u3960 4F16                             u5640 3C5C  
                           u5560 3A58                             u4680 35FE  
                           u4920 330A                             u4840 31C4  
                           u4760 2F80                             u5480 3EAC  
                           u5800 08E4                             u5720 0780  
                           u6280 4D16                             u6600 2616  
                           u6520 4434                             u6440 42B4  
                           u7400 167A                             u7320 1546  
                           u7240 1408                             u7160 1360  
                           u6361 5792                             u7081 4094  
                           u3961 4F12                             u5641 3C58  
                           u5561 3A54                             u4681 35FA  
                           u4921 3306                             u4761 2F7C  
                           u5481 3EA8                             u5801 08E0  
                           u5721 077C                             u6281 4D12  
                           u6601 2612                             u6521 4430  
                           u6441 42B0                             u7401 1676  
                           u7321 1542                             u7241 1404  
                           u7161 135C                             u6370 57AC  
                           u7090 40A6                             u5650 3C6C  
                           u5570 3A88                             u4690 362C  
                           u4930 3338                             u4850 321E  
                           u4770 2F92                             u3970 2AC0  
                           u5490 3EE8                             u5810 0968  
                           u5730 07C8                             u6290 4D48  
                           u6610 26C0                             u6530 248C  
                           u6450 4310                             u7410 168C  
                           u7330 156A                             u7250 1418  
                           u7170 1370                             u6371 57A8  
                           u7091 40A2                             u5651 3C68  
                           u5571 3A84                             u4691 3628  
                           u4931 3334                             u4851 321A  
                           u4771 2F8E                             u3971 2ABC  
                           u5491 3EE4                             u5475 3E86  
                           u5811 0964                             u5731 07C4  
                           u6291 4D44                             u6611 26BA  
                           u6531 2488                             u6451 430C  
                           u7411 1688                             u7331 1566  
                           u7251 1414                             u7171 136C  
                           u5660 3C7E                             u5580 3AA4  
                           u4940 3372                             u4860 323E  
                           u4780 2FA2                             u3980 2AD2  
                           u5900 0B56                             u5820 09FC  
                           u5740 07F8                             u6700 296E  
                           u6620 26C2                             u6540 24D6  
                           u6460 4366                             u6380 5582  
                           u7500 18CA                             u7420 16B2  
                           u7340 1586                             u7260 1428  
                           u7180 1380                             u5661 3C7A  
                           u5581 3AA0                             u4941 336E  
                           u4861 323A                             u4845 31BA  
                           u4781 2F9E                             u3981 2ACE  
                           u5901 0B52                             u5821 09F8  
                           u5741 07F2                             u6701 2968  
                           u6541 24D2                             u6461 4362  
                           u6381 557E                             u7501 18C6  
                           u7421 16AE                             u7341 1582  
                           u7261 1424                             u7181 137C  
                           u5670 3C8E                             u5590 3AD2  
                           u4950 5036                             u4870 3250  
                           u4790 2FE2                             u3990 2AE2  
                           u5910 0B7C                             u5830 0A6E  
                           u5750 07FA                             u6710 2970  
                           u6630 26D8                             u6550 251C  
                           u6470 43B0                             u6390 55BC  
                           u7510 18DC                             u7430 16C4  
                           u7350 1598                             u7270 144C  
                           u7190 1390                             u5671 3C8A  
                           u5591 3ACE                             u4951 5032  
                           u4871 324C                             u4791 2FDE  
                           u3991 2ADE                             u5911 0B78  
                           u5831 0A6A                             u6631 26D4  
                           u6551 2518                             u6471 43AC  
                           u6391 55B8                             u7511 18D8  
                           u7431 16C0                             u7351 1594  
                           u7271 1448                             u7191 138C  
                           u5680 3CA6                             u4960 5050  
                           u4880 327E                             u5920 0B8E  
                           u5840 0A94                             u5760 0810  
                           u6720 2986                             u6640 270A  
                           u6560 259E                             u6800 562E  
                           u6480 43CE                             u7600 1A62  
                           u7520 1902                             u7440 1734  
                           u7360 15C0                             u7280 1468  
                           u5681 3CA2                             u4961 504C  
                           u4881 327A                             u5921 0B8A  
                           u5841 0A90                             u5761 080C  
                           u6721 2982                             u6641 2706  
                           u6561 2598                             u6801 562A  
                           u6481 43CA                             u7601 1A5E  
                           u7521 18FE                             u7441 1730  
                           u7361 15BC                             u7281 1464  
                           u6810 5BDA                             u4970 5076  
                           u4890 3294                             u5930 0B9C  
                           u5850 0AA6                             u5770 089C  
                           u5690 0710                             u6730 2A22  
                           u6650 274C                             u6570 25A0  
                           u6490 43DE                             u7610 1A70  
                           u7530 191E                             u7450 17B6  
                           u7370 15D2                             u7290 147A  
                           u6811 5BD6                             u4971 5072  
                           u4891 3290                             u5931 0B98  
                           u5851 0AA2                             u5771 0898  
                           u5691 070C                             u6731 2A1E  
                           u6651 2748                             u6491 43DA  
                           u7611 1A6C                             u7531 191A  
                           u7451 17B2                             u7371 15CE  
                           u7291 1476                             u6900 3F40  
                           u6820 564A                             u4980 5094  
                           u5940 0BB2                             u5860 0AC8  
                           u5780 08CC                             u6660 27A2  
                           u6580 25B6                             u6740 548C  
                           u7620 1ABC                             u7540 192E  
                           u7460 17E8                             u7380 1644  
                           u7700 552C                             u6901 3F3C  
                           u6821 5646                             u4981 5090  
                           u5941 0BAE                             u5861 0AC4  
                           u5781 08C6                             u6661 279E  
                           u6581 25B2                             u6741 5488  
                           u7621 1AB8                             u7541 192A  
                           u7461 17E4                             u7381 1640  
                           u7701 5528                             u6910 3F50  
                           u6830 567E                             u4990 50B0  
                           u5950 0BC0                             u5870 0AEE  
                           u5790 08CE                             u6670 27C6  
                           u6590 25DA                             u6750 5412  
                           u7630 1B20                             u7550 1952  
                           u7470 1882                             u7390 165E  
                           u7710 5550                             u6911 3F4C  
                           u6831 567A                             u4991 50AC  
                           u5951 0BBC                             u5871 0AEA  
                           u6671 27C2                             u6591 25D6  
                           u6751 540E                             u7631 1B1C  
                           u7551 194E                             u7471 187E  
                           u7391 165A                             u7711 554C  
                           u6920 3F68                             u6840 53B4  
                           u5960 0BEA                             u5880 0B04  
                           u6680 2858                             u6760 421E  
                           u7640 1B52                             u7560 196A  
                           u7480 18AA                             u7720 4E0A  
                           u6921 3F64                             u5961 0BE6  
                           u5881 0B00                             u6681 2854  
                           u6761 421A                             u7641 1B4E  
                           u7561 1966                             u7481 18A6  
                           u7721 4E06                             u6930 3F76  
                           u6850 53E8                             u5970 0D32  
                           u5890 0B20                             u6690 2906  
                           u6770 4242                             u7650 1B9E  
                           u7570 1980                             u7490 18BA  
                           u7730 4E1C                             u6931 3F72  
                           u5971 0D2E                             u5891 0B1C  
                           u6691 2902                             u6771 423E  
                           u7651 1B9A                             u7571 197C  
                           u7491 18B6                             u7731 4E18  
                           u6940 3F8C                             u6860 53F8  
                           u5980 0D98                             u6780 4266  
                           u7660 1BAC                             u7580 19E4  
                           u7740 4E2C                             u6941 3F88  
                           u6861 53F4                             u5981 0D94  
                           u6781 4262                             u7661 1BA8  
                           u7581 19E0                             u7741 4E28  
                           u6950 3F9C                             u5990 0DE0  
                           u6790 428A                             u7670 1BF8  
                           u7590 1A16                             u6870 5C90  
                           u7750 4E3C                             u6951 3F98  
                           u6847 53AA                             u5991 0DDC  
                           u6791 4286                             u7671 1BF4  
                           u7591 1A12                             u6871 5C8C  
                           u7751 4E38                             u7680 5CC6  
                           u6960 3FB4                             u6880 3F1C  
                           u7760 4E4C                             u7681 5CC2  
                           u6961 3FB0                             u6881 3F18  
                           u6857 53DE                             u7761 4E48  
                           u6970 3FC2                             u6890 3F2A  
                           u7690 5508                             u7770 4E68  
                           u7907 5340                             u6971 3FBE  
                           u6891 3F26                             u7691 5504  
                           u7771 4E64                             u6980 3FD8  
                           u7780 4E84                             u7917 5CA6  
                           u6981 3FD4                             u7781 4E80  
                           u6990 3FE8                             u6991 3FE4  
                           u7857 49CA                             u7867 5AF6  
                           u7877 5B08                             u7887 5310  
                           u7897 532A                             _TMR2 000FBC  
                           abs@a 0013                ?_Lcd_Write_String 0005  
                           _dbuf 0200                             _atoi 4448  
                           _main 4DC2                             _dtoa 3A10  
                           _prec 00F6                             _nout 01AF  
                           pad@i 0018                             pad@p 0015  
                           fsr1h 000FE2                             fsr2h 000FDA  
                           indf1 000FE7                             indf2 000FDF  
                           fsr1l 000FE1                             pad@w 001A  
                           fsr2l 000FD9                             btemp 005F  
                  ___fpclassifyf 4BEE                             prodh 000FF4  
                           prodl 000FF3                             start 009A  
             ??_Lcd_Write_String 0007                  ___fldiv@new_exp 0046  
                __end_of_Lcd_Cmd 5CB2                     _tolower$2671 000D  
                   ___param_bank 000000                            ??_abs 0015  
                          ??_pad 0017                     ?_menuControl 0001  
                  ___fltol@sign1 0056                  __end_of___aodiv 4760  
                          ?_atoi 0008                  __end_of___fladd 2F66  
                          ?_main 0001                            ?_dtoa 001C  
                __end_of___aomod 48C4                  __end_of_adcInit 59F6  
                __end_of___fldiv 372A                  __end_of___awdiv 50E8  
                __end_of___flneg 5AA2                            _EEADR 000FA9  
                          STR_10 069A                            STR_11 0657  
                          STR_12 069A                            STR_21 06D8  
                          STR_13 0613                            STR_22 06E0  
                          STR_14 06B9                            STR_15 0613  
                          STR_16 06C7                            STR_25 06E4  
                          STR_17 06D4                            STR_18 06DC  
                          STR_27 06E4                  __end_of___awmod 5198  
                __end_of___flmul 3390                  __end_of___flsub 58F2  
                __end_of___fltol 4AEA                  __end_of___lldiv 52E6  
                          _T0CON 000FD5                  ___awdiv@divisor 0003  
                          i2l479 0096                  ___awdiv@counter 0005  
                   vfpfcnvrt@fmt 00A9                            _TMR0H 000FD7  
                          _TMR0L 000FD6          __size_of_Lcd_Set_Cursor 0066  
            ___lmul@multiplicand 0005                            _fabsf 5B7E  
                          _flags 00F8                            _fputc 4E94  
                          _fputs 58F2                  __end_of_isdigit 5ADA  
                    ?_PWM1_setDC 0058                     _adc_raw_data 0173  
                    ?_PWM2_setDC 0058                            atoi@n 0015  
                          pad@fp 0011                            atoi@s 0008  
                          _width 01B1                            _putch 5CE8  
                          dtoa@d 001E                            dtoa@i 003E  
                          dtoa@n 0036                            dtoa@p 0030  
                          dtoa@s 0034                            dtoa@w 0032  
                __end_of_isspace 58AC                  __end_of_isupper 5A6A  
               __end_of_PWM_Init 5C30                            tablat 000FF5  
                          ttemp5 0060                            ttemp6 0063  
                          ttemp7 0067                            status 000FD8  
                          wtemp8 0060                  __end_of_sprintf 585A  
                 ?___fpclassifyf 0001                  __end_of_tolower 56FE  
                __end_of_strncmp 4DC2                    ?_readAdcValue 0001  
               __end_of_Lcd_Port 57B6                  __initialization 57B6  
                    _system_init 48C4                     __end_of_atoi 45D8  
                   __end_of_main 4E94                     __end_of_dtoa 3CF4  
                         ??_atoi 000A                           ??_main 005F  
                         ??_dtoa 0026               __size_of_Lcd_Clear 000E  
                  __activetblptr 000002  __size_of_calculatedAverageValue 02E6  
                         ?_fabsf 001C                           _ADCON0 000FC2  
                         _ADCON1 000FC1                           ?_fputc 0001  
                         ?_fputs 000A                           _ADRESH 000FC4  
                         _ADRESL 000FC3                           _EEDATA 000FA8  
                         _CCPR1L 000FBE                           _CCPR2L 000F67  
                         _EECON2 000FA7                 ___awdiv@dividend 0001  
                         ?_putch 0001                           i2l6220 0028  
                         i2l6230 005E                           i2l6222 0030  
                         i2l6214 000A                           i2l6240 0092  
                         i2l6232 0060                           i2l6224 0034  
                         i2l6216 0018                           i2l6234 0070  
                         i2l6226 0046                           i2l6218 0026  
                         i2l6236 0074                           i2l6228 004C  
                         i2l6238 008A                        ??_Lcd_Cmd 0002  
                         _TIMER0 0008                   ??_readAdcValue 0003  
        __size_of_Lcd_Write_Char 0038                 __end_of___xxtofl 4448  
              _scanAdcConversion 1C62               _timer_counter_flag 00FF  
             ?_scanAdcConversion 0001             __size_of_eepromWrite 002E  
                   vfprintf@cfmt 00CD                 __end_of_lcd_init 537C  
                         ___flge 4AEA                           ___fleq 5198  
                         ___lmul 5564                        ??___aodiv 0011  
                      ??___fladd 003D                        ??___aomod 0011  
                         ___wmul 5C30                        ??_adcInit 0001  
                      ??___fldiv 003D                        ??___awdiv 0005  
                      ??___flneg 0005                        ??___awmod 0005  
                      ??___flmul 0024                        ??___flsub 004D  
                      ??___fltol 0052                        ??___lldiv 0009  
                         _efgtoa 06E8                           _floorf 3CF4  
            __size_of_PWM1_setDC 007A                           fabsf@u 0020  
                         fabsf@x 001C                 __end_of_mcu_init 5CC8  
            __size_of_PWM2_setDC 007A              ??_scanAdcConversion 0058  
                         clear_0 57DC                           clear_1 57E8  
                         clear_2 57F4                  eepromWrite@data 0001  
               ___awdiv@quotient 0007                  ___awmod@divisor 0003  
                ___awmod@counter 0005                           pad@buf 0013  
                         dtoa@fp 001C                           _strcpy 56FE  
                         _strlen 5B48                           fputc@c 0001  
           readAdcValue@adcValue 0006                           fputs@c 000E  
                         fputs@i 000F                           fputs@s 000A  
                      ??_isdigit 0003                  ___fpclassifyf@e 0009  
                ___fpclassifyf@u 000B                  ___fpclassifyf@x 0001  
                   __mediumconst 0000                        ??_isspace 0003  
                         tblptrh 000FF7                        ??_isupper 0003  
                         tblptrl 000FF6                           tblptru 000FF8  
                         putch@c 0001                 __end_of_vfprintf 5638  
                      ??_sprintf 005F                        ??_tolower 0009  
                      ??_strncmp 0007       __end_of_buttonControlFlags 40D6  
                Lcd_Set_Cursor@a 0005                  Lcd_Set_Cursor@b 0004  
                Lcd_Set_Cursor@y 0007                  Lcd_Set_Cursor@z 0006  
                     ___flge@ff1 0035                       ___flge@ff2 0039  
                ??___fpclassifyf 0005                     ___xxtofl@arg 0018  
                   ___xxtofl@exp 0017                     ___xxtofl@val 000E  
                     ___fleq@ff1 0001                       ___fleq@ff2 0005  
      __end_of_scanAdcConversion 2468                       __accesstop 0060  
        __end_of__initialization 57FA                       ___flneg@f1 0001  
         _calculatedAverageValue 372A                __end_of_Lcd_Clear 5CE8  
                  ___rparam_used 000001                       ___fltol@f1 004E  
                 __pcstackCOMRAM 0001                     __pidataBANK1 5C56  
                  __end_of_fabsf 5BB2                    __end_of_fputc 4F5E  
                  __end_of_fputs 5936                    __end_of_putch 5CEA  
                      ?_PWM_Init 0001                   _Lcd_Set_Cursor 5638  
   _KP@fs_speed_controller$F1183 01C7     _KP@fs_speed_controller$F1601 01BF  
   _KP@fs_speed_controller$F1785 01B7                eepromRead@address 0001  
           __size_of_menuControl 0076                          ??_fabsf 0020  
                      ?_Lcd_Port 0001                          ??_fputc 0005  
                        ??_fputs 000E                          ??_putch 0001  
                     __pbssBANK0 00F3                       __pbssBANK1 0100  
                     __pbssBANK2 0200              PWM1_setDC@dutycycle 0058  
                        ?_TIMER0 0001                          ?___flge 0035  
                        ?___fleq 0001                          ?___lmul 0001  
                        ?___wmul 0001                          ?_efgtoa 0058  
                        _CCP1CON 000FBD                          _CCP2CON 000F66  
                        ?_floorf 004E                   ___lmul@product 0009  
      __size_of_Lcd_Write_String 007E           __end_of_Lcd_Set_Cursor 569E  
                     ??_PWM_Init 0001                          ?_strcpy 0001  
                        ?_strlen 0001             __end_of_readAdcValue 5978  
                     _eepromRead 5C76                        ?___xxtofl 000E  
             __size_of_vfpfcnvrt 063E                       ??_Lcd_Port 0001  
                   ??_PWM1_setDC 005A                     ??_PWM2_setDC 005A  
                      ?_lcd_init 0001          __size_of_menuInitialize 0028  
                  _menu_selected 00FB               __size_of_stopMotor 003C  
     __size_of_scanAdcConversion 0806                   _Lcd_Write_Char 5ADA  
                        _Lcd_Cmd 5C94                        ?_mcu_init 0001  
                __size_of_TIMER0 0092                stateMachine@F6402 0163  
                     _controller 0150                          __Hparam 0000  
                        __Lparam 0000              PWM2_setDC@dutycycle 0058  
                   ?_system_init 0001                  __size_of___flge 0104  
                __size_of___fleq 00AA                          ___aodiv 45D8  
                        ___fladd 2AA6                          ___aomod 4760  
                        _adcInit 59B8                          ___fldiv 3390  
                        ___awdiv 5024                          ___flneg 5A6A  
                __size_of___lmul 006A                          ___awmod 50E8  
                        ___flmul 2F66                          ___flsub 58AC  
                        ___fltol 49E4                          ___lldiv 5242  
                __size_of___wmul 0026                        ?_vfprintf 00C7  
                   __psmallconst 0600                  __size_of_efgtoa 0BB0  
                __size_of_floorf 0216                          __pcinit 57B6  
             __end_of_PWM1_setDC 54EE                          __ramtop 0600  
                ?_Lcd_Set_Cursor 0004               __end_of_PWM2_setDC 5474  
                        __ptext0 4DC2                          __ptext1 5CC8  
                        __ptext2 48C4                          __ptext3 5C76  
                        __ptext4 5BE0                          __ptext5 54EE  
                        __ptext6 1298                          __ptext7 59F6  
                        __ptext8 5B12                          __ptext9 40D6  
                     _menu_flags 0197                       _menu_value 00F3  
                __size_of_strcpy 005C                  __size_of_strlen 0036  
        stateMachine@textCursor2 00E3                        _T2CONbits 000FBA  
                   __size_of_abs 0040                     __size_of_pad 00C6  
                        _isdigit 5AA2                       ??___xxtofl 0012  
               ___awmod@dividend 0001                          _isspace 585A  
                        _isupper 5A32                          efgtoa@c 005E  
                        efgtoa@d 0087                          efgtoa@e 009F  
                        efgtoa@f 005A                          efgtoa@g 009B  
                        efgtoa@h 0091                          efgtoa@i 0099  
                        efgtoa@l 0095                          efgtoa@m 0083  
                        efgtoa@n 00A1                          efgtoa@p 008B  
                        efgtoa@t 007F                          efgtoa@u 00A3  
                        efgtoa@w 008E                    ?_speedControl 0058  
                        atoi@neg 000E                    ?_timer_0_init 0001  
                        _sprintf 5808                          _tolower 569E  
                     ??_lcd_init 0004           __end_of_Lcd_Write_Char 5B12  
                        _strncmp 4CEC             end_of_initialization 57FA  
           speedControl@position 0058                          floorf@e 0064  
                        floorf@m 0060                          floorf@u 0066  
                        floorf@x 004E                          fputc@fp 0003  
                     ??_mcu_init 0001                    __Lmediumconst 0000  
                        fputs@fp 000C                  ___lldiv@divisor 0005  
                ___lldiv@counter 000D                __end_of_vfpfcnvrt 2AA6  
                     efgtoa@mode 0090                       efgtoa@sign 0089  
                        postdec1 000FE5                          postdec2 000FDD  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE                        Lcd_Port@a 0001  
                     ??_vfprintf 005F                          strcpy@d 0009  
                        strlen@a 0003                          strcpy@s 0007  
                        strlen@s 0001                __end_of_stopMotor 5A32  
                      _PORTBbits 000F81                        _PORTDbits 000F83  
                    ?_eepromRead 0001                      ___fladd@grs 0044  
                  ___xxtofl@sign 0016                        _TRISAbits 000F92  
                 ??_speedControl 005C                        _TRISBbits 000F93  
                      _TRISCbits 000F94                        _TRISDbits 000F95  
                      _TRISEbits 000F96                   ??_timer_0_init 0001  
                    ___fldiv@grs 0048                      ___fldiv@rem 0041  
                     _startMotor 5B12                  ?_Lcd_Write_Char 0001  
        ?_calculatedAverageValue 0001                Lcd_Write_String@a 0005  
              Lcd_Write_String@i 0009                      ___flmul@grs 0029  
                  ??_eepromWrite 0002         _button_bounce_controller 019D  
                 __end_of_TIMER0 009A                    ?_stateMachine 0001  
             _buttonControlFlags 3F0A                        _Lcd_Clear 5CDA  
                   _convert_data 0100            __size_of_readAdcValue 0042  
                 __end_of___flge 4BEE                   __end_of___fleq 5242  
                 __end_of___lmul 55CE                      vfpfcnvrt@ap 00AB  
                    vfpfcnvrt@ct 00C3                      vfpfcnvrt@fp 00A7  
                    vfpfcnvrt@ll 00B1                   __end_of___wmul 5C56  
               _Lcd_Write_String 537C                   __end_of_efgtoa 1298  
            ?_buttonControlFlags 0001                   __end_of_floorf 3F0A  
                     floorf@F524 01A3                   __end_of_strcpy 575A  
                 __end_of_strlen 5B7E                __size_of_PWM_Init 0028  
            start_initialization 57B6                      __end_of_abs 59B8  
                    __end_of_pad 5024   __end_of_calculatedAverageValue 3A10  
                 _menuInitialize 5BE0                     _driver_limit 0183  
              __size_of_Lcd_Port 005C             ??_buttonControlFlags 0001  
                       ??_TIMER0 0001            __end_of___fpclassifyf 4CEC  
                   _readAdcValue 5936                   ??_stateMachine 00E1  
            __size_of_eepromRead 001E                      vfprintf@fmt 00C9  
                     ?_Lcd_Clear 0001                         ??___flge 003D  
                       ??___fleq 0009                         ??___lmul 0009  
            __end_of_eepromWrite 5BE0                         ??___wmul 0005  
                       ??_efgtoa 006A                      __pdataBANK1 01B3  
                       ??_floorf 0052             __size_of_system_init 0120  
                Lcd_Write_Char@a 0004                  Lcd_Write_Char@y 0003  
                  ??_menuControl 005F                         ??_strcpy 0005  
                       ??_strlen 0003                        ___fladd@a 0039  
                      ___fladd@b 0035                        ___fldiv@a 0039  
                      ___fldiv@b 0035                        ___flmul@a 0020  
                      ___flmul@b 001C                        ___flsub@a 0049  
                      ___flsub@b 0045           __end_of_menuInitialize 5C08  
                  __pcstackBANK0 0060                 ___aodiv@dividend 0001  
              __size_of___xxtofl 01B4                      ?_startMotor 0001  
                       ?_Lcd_Cmd 0001                __size_of_lcd_init 0096  
                      _atoi$2576 0010                        _atoi$2577 0014  
                      _atoi$2578 0012                __size_of_mcu_init 0016  
                    _efgtoa$2510 0075                      _efgtoa$2520 007D  
                    _efgtoa$2514 0077                      _efgtoa$2509 0073  
                    _efgtoa$2518 0079                      _efgtoa$2519 007B  
                      _dtoa$2485 002E    stateMachine@secretMenuCounter 00FA  
           __end_of_speedControl 4294                 ??_Lcd_Set_Cursor 0005  
                      __pintcode 0008             __end_of_timer_0_init 5CDA  
                       ?___aodiv 0001                         ?___fladd 0035  
                       ?___aomod 0001                         ?_adcInit 0001  
                       ?___fldiv 0035                         ?___awdiv 0001  
               ___aodiv@quotient 0013                         ?___flneg 0001  
                       ?___awmod 0001                         ?___flmul 001C  
                       ?___flsub 0045                         ?___fltol 004E  
                       ?___lldiv 0001                __size_of_vfprintf 006A  
                      fabsf@F463 01AB                      __smallconst 0600  
                       ?_isdigit 0001                         ?_isspace 0001  
                ?_menuInitialize 0001                         ?_isupper 0001  
            __end_of_menuControl 5564                   __size_of_fabsf 0034  
                       ?_sprintf 00CF                         ?_tolower 0007  
                 __size_of_fputc 00CA                   __size_of_fputs 0044  
                       ?_strncmp 0001                   __size_of_putch 0002  
             eepromWrite@address 0002                   ___wmul@product 0005  
                       _LATCbits 000F8B                         _LATDbits 000F8C  
                    _eepromWrite 5BB2                   PWM1_setDC@duty 005C  
                       Lcd_Cmd@a 0003                         _PIR2bits 000FA1  
                       i2u780_40 0026                         i2u780_41 0022  
                       i2u781_40 0046                         i2u781_41 0042  
                       i2u782_40 005E                         i2u782_41 005A  
                       i2u783_40 0070                         i2u783_41 006C  
                       i2u784_40 008A                         i2u784_41 0086  
                       i2u779_40 0018                         i2u779_41 0014  
                    ??_Lcd_Clear 0004                     _pauseIsClick 00FE  
            __size_of_startMotor 0036                        _vfpfcnvrt 2468  
                     _ADCON0bits 000FC2                       _ADCON2bits 000FC0  
                       _PWM_Init 5C08                ___wmul@multiplier 0001  
                   ??_eepromRead 0001                 ??_Lcd_Write_Char 0002  
                 PWM2_setDC@duty 005C                        _stopMotor 59F6  
           __end_of_stateMachine 1C62                     _isspace$2607 0007  
                       _Lcd_Port 575A                       vfpfcnvrt@c 00C6  
                     vfpfcnvrt@f 00BF                ___lmul@multiplier 0001  
                      copy_data0 57CA         __end_of_Lcd_Write_String 53FA  
               __size_of_Lcd_Cmd 001E                       _EECON1bits 000FA6  
                       __Hrparam 0000                       vfprintf@ap 00CB  
                       __Lrparam 0000                       vfprintf@fp 00C7  
             __end_of_eepromRead 5C94                 __size_of___aodiv 0188  
               __size_of___fladd 04C0                 __size_of___aomod 0164  
               __size_of_adcInit 003E                 __size_of___fldiv 039A  
               __size_of___awdiv 00C4                 __size_of___flneg 0038  
               __size_of___awmod 00B0                 __size_of___flmul 042A  
               __size_of___flsub 0046                 __size_of___fltol 0106  
               __size_of___lldiv 00A4                       ?_vfpfcnvrt 00A7  
                    _menuControl 54EE                  ___aodiv@divisor 0009  
                ___aodiv@counter 0011                       _ANSELAbits 000F38  
                     _ANSELBbits 000F39                       _ANSELCbits 000F3A  
                     _ANSELDbits 000F3B                       _ANSELEbits 000F3C  
             ___fpclassifyf@F463 01A7                       sprintf@fmt 00D1  
                       ___xxtofl 4294                       ?_stopMotor 0001  
               __size_of_isdigit 0038                 __size_of_isspace 0052  
                       __ptext10 1C62                         __ptext11 5936  
                       __ptext20 55CE                         __ptext12 372A  
                       __ptext21 2468                         __ptext13 5564  
                       __ptext30 58AC                         __ptext22 4CEC  
                       __ptext14 5242                         __ptext31 2AA6  
                       __ptext23 06E8                         __ptext15 53FA  
                       __ptext40 4F5E                         __ptext32 5A6A  
                       __ptext24 569E                         __ptext16 5474  
                       __ptext41 5B48                         __ptext33 2F66  
                       __ptext25 5A32                         __ptext17 5B7E  
                       __ptext50 5AA2                         __ptext42 58F2  
                       __ptext34 4AEA                         __ptext26 56FE  
                       __ptext18 4294                         __ptext51 5C30  
                       __ptext43 4E94                         __ptext35 5198  
                       __ptext27 3CF4                         __ptext19 5808  
                       __ptext60 5C08                         __ptext52 5BB2  
                       __ptext44 5CE8                         __ptext36 3390  
                       __ptext28 4BEE                         __ptext61 5CDA  
                       __ptext53 537C                         __ptext45 5978  
                       __ptext37 50E8                         __ptext29 49E4  
                       __ptext62 5C94                         __ptext54 5ADA  
                       __ptext46 4760                         __ptext38 5024  
                       __ptext63 575A                         __ptext55 5638  
                       __ptext47 45D8                         __ptext39 3A10  
                       __ptext56 3F0A                         __ptext48 4448  
                       __ptext57 5CB2                         __ptext49 585A  
                       __ptext58 52E6                         __ptext59 59B8  
               __size_of_isupper 0038                         _lcd_init 52E6  
               __size_of_sprintf 0052                 __size_of_tolower 0060  
                     strcpy@dest 0001                 __size_of_strncmp 00D6  
                       _mcu_init 5CB2                    __size_of_atoi 0190  
                  __size_of_main 00D2                    __size_of_dtoa 02E4  
          __size_of_speedControl 01BE            __size_of_timer_0_init 0012  
                       efgtoa@fp 0058                         efgtoa@ne 0085  
                       efgtoa@pp 0081                         efgtoa@ou 006F  
                       int$flags 005F                         _vfprintf 55CE  
         readAdcValue@adcChannel 0005                 ___aomod@dividend 0001  
                 _vfpfcnvrt$2540 00BD                   _vfpfcnvrt$2534 00B9  
                 _vfpfcnvrt$2535 00BB                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2     _KD@fs_speed_controller$F1184 01C3  
   _KD@fs_speed_controller$F1602 01BB     _KD@fs_speed_controller$F1786 01B3  
                       isdigit@c 0001                     _speedControl 40D6  
                   _timer_0_init 5CC8                     ??_startMotor 005E  
             Lcd_Write_Char@temp 0002                         intlevel2 0000  
                      sprintf@ap 00D9      __size_of_buttonControlFlags 01CC  
                       isspace@c 0001                 ___lldiv@dividend 0001  
                      strcpy@src 0003                         isupper@c 0001  
                      strncmp@_l 0001                        strncmp@_r 0003  
                     _OSCCONbits 000FD3                    ??_system_init 0002  
                    efgtoa@nmode 008D                     _procces_data 0130  
                ___aomod@divisor 0009                      ??_vfpfcnvrt 00AD  
                ___aomod@counter 0011               Lcd_Set_Cursor@temp 0008  
               ??_menuInitialize 0001               __end_of_startMotor 5B48  
          __size_of_stateMachine 09CA                         sprintf@f 00DB  
                       tolower@c 0007                         sprintf@s 00CF  
         __size_of___fpclassifyf 00FE                 ___lldiv@quotient 0009  
                    ??_stopMotor 005E                         strncmp@l 0008  
                       strncmp@n 0005                         strncmp@r 000A  
                    _timer_value 018F                    ___fladd@signs 0041  
                     _PWM1_setDC 5474                       _PWM2_setDC 53FA  
                   ___aodiv@sign 0012                     ___fladd@aexp 0042  
                   ___fladd@bexp 0043                     ?_eepromWrite 0001  
                   ___aomod@sign 0012                     _stateMachine 1298  
