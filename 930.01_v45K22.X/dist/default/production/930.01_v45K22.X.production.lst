

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Aug 21 15:57:25 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=3
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=3
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=3
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    92                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    93                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    94                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    95                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    96                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    97  0000                     
    98                           ; Version 2.20
    99                           ; Generated 05/05/2020 GMT
   100                           ; 
   101                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   102                           ; All rights reserved.
   103                           ; 
   104                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   105                           ; 
   106                           ; Redistribution and use in source and binary forms, with or without modification, are
   107                           ; permitted provided that the following conditions are met:
   108                           ; 
   109                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   110                           ;        conditions and the following disclaimer.
   111                           ; 
   112                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   113                           ;        of conditions and the following disclaimer in the documentation and/or other
   114                           ;        materials provided with the distribution.
   115                           ; 
   116                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   117                           ;        software without specific prior written permission.
   118                           ; 
   119                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   120                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   121                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   122                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   123                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   124                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   125                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   126                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   127                           ; 
   128                           ; 
   129                           ; Code-generator required, PIC18F45K22 Definitions
   130                           ; 
   131                           ; SFR Addresses
   132  0000                     
   133                           	psect	eeprom_data
   134  F00000  1E 0A 04 00 00 00 00 00 	db	30,10,4,0,0,0,0,0	;# 
   135  0000                     
   136                           	psect	idataBANK1
   137  0053F2                     __pidataBANK1:
   138                           	callstack 0
   139                           
   140                           ;initializer for _KD@fs_speed_controller$F2361
   141  0053F2  0000               	dw	0
   142  0053F4  3F80               	dw	16256
   143                           
   144                           ;initializer for _KP@fs_speed_controller$F2360
   145  0053F6  CCCD               	dw	52429
   146  0053F8  3E4C               	dw	15948
   147                           
   148                           ;initializer for _KD@fs_speed_controller$F2208
   149  0053FA  0000               	dw	0
   150  0053FC  3F80               	dw	16256
   151                           
   152                           ;initializer for _KP@fs_speed_controller$F2207
   153  0053FE  CCCD               	dw	52429
   154  005400  3E4C               	dw	15948
   155                           
   156                           ;initializer for _KD@fs_speed_controller$F2077
   157  005402  0000               	dw	0
   158  005404  3F80               	dw	16256
   159                           
   160                           ;initializer for _KP@fs_speed_controller$F2076
   161  005406  CCCD               	dw	52429
   162  005408  3E4C               	dw	15948
   163                           
   164                           ;initializer for _KD@fs_speed_controller$F1843
   165  00540A  0000               	dw	0
   166  00540C  3F80               	dw	16256
   167                           
   168                           ;initializer for _KP@fs_speed_controller$F1842
   169  00540E  CCCD               	dw	52429
   170  005410  3E4C               	dw	15948
   171                           
   172                           ;initializer for _KD@fs_speed_controller$F1343
   173  005412  0000               	dw	0
   174  005414  3F80               	dw	16256
   175                           
   176                           ;initializer for _KP@fs_speed_controller$F1342
   177  005416  CCCD               	dw	52429
   178  005418  3E4C               	dw	15948
   179                           
   180                           ;initializer for _KD@fs_speed_controller$F1164
   181  00541A  0000               	dw	0
   182  00541C  3F80               	dw	16256
   183                           
   184                           ;initializer for _KP@fs_speed_controller$F1163
   185  00541E  CCCD               	dw	52429
   186  005420  3E4C               	dw	15948
   187                           
   188                           ;initializer for _KD@fs_speed_controller$F950
   189  005422  0000               	dw	0
   190  005424  3F80               	dw	16256
   191                           
   192                           ;initializer for _KP@fs_speed_controller$F949
   193  005426  CCCD               	dw	52429
   194  005428  3E4C               	dw	15948
   195                           
   196                           ;initializer for _KD
   197  00542A  0000               	dw	0
   198  00542C  3F80               	dw	16256
   199                           
   200                           ;initializer for _KP
   201  00542E  CCCD               	dw	52429
   202  005430  3E4C               	dw	15948
   203  0000                     _ANSELCbits	set	3898
   204  0000                     _ANSELBbits	set	3897
   205  0000                     _ANSELDbits	set	3899
   206  0000                     _ANSELEbits	set	3900
   207  0000                     _ANSELAbits	set	3896
   208  0000                     _T0CON	set	4053
   209  0000                     _TMR0L	set	4054
   210  0000                     _TMR0H	set	4055
   211  0000                     _INTCONbits	set	4082
   212  0000                     _CCPR2L	set	3943
   213  0000                     _CCPR1L	set	4030
   214  0000                     _PR2	set	4027
   215  0000                     _TMR2	set	4028
   216  0000                     _T2CONbits	set	4026
   217  0000                     _CCP2CON	set	3942
   218  0000                     _CCP1CON	set	4029
   219  0000                     _LATCbits	set	3979
   220  0000                     _LATDbits	set	3980
   221  0000                     _TRISCbits	set	3988
   222  0000                     _OSCTUNEbits	set	3995
   223  0000                     _OSCCONbits	set	4051
   224  0000                     _TRISBbits	set	3987
   225  0000                     _TRISDbits	set	3989
   226  0000                     _PORTDbits	set	3971
   227  0000                     _PORTBbits	set	3969
   228  0000                     _PIR2bits	set	4001
   229  0000                     _EECON2	set	4007
   230  0000                     _EEDATA	set	4008
   231  0000                     _EECON1bits	set	4006
   232  0000                     _EEADR	set	4009
   233  0000                     _ADCON2bits	set	4032
   234  0000                     _ADCON1	set	4033
   235  0000                     _ADCON0	set	4034
   236  0000                     _TRISEbits	set	3990
   237  0000                     _TRISAbits	set	3986
   238  0000                     _ADRESL	set	4035
   239  0000                     _ADRESH	set	4036
   240  0000                     _ADCON0bits	set	4034
   241                           
   242                           	psect	mediumconst
   243  007EF6                     __pmediumconst:
   244                           	callstack 0
   245  007EF6  00                 	db	0
   246  007EF7                     STR_14:
   247  007EF7  25                 	db	37
   248  007EF8  64                 	db	100	;'d'
   249  007EF9  20                 	db	32
   250  007EFA  20                 	db	32
   251  007EFB  20                 	db	32
   252  007EFC  20                 	db	32
   253  007EFD  20                 	db	32
   254  007EFE  20                 	db	32
   255  007EFF  20                 	db	32
   256  007F00  20                 	db	32
   257  007F01  20                 	db	32
   258  007F02  20                 	db	32
   259  007F03  20                 	db	32
   260  007F04  20                 	db	32
   261  007F05  20                 	db	32
   262  007F06  20                 	db	32
   263  007F07  20                 	db	32
   264  007F08  00                 	db	0
   265  007F09                     STR_9:
   266  007F09  50                 	db	80	;'P'
   267  007F0A  49                 	db	73	;'I'
   268  007F0B  44                 	db	68	;'D'
   269  007F0C  20                 	db	32
   270  007F0D  50                 	db	80	;'P'
   271  007F0E  41                 	db	65	;'A'
   272  007F0F  52                 	db	82	;'R'
   273  007F10  41                 	db	65	;'A'
   274  007F11  4D                 	db	77	;'M'
   275  007F12  20                 	db	32
   276  007F13  20                 	db	32
   277  007F14  20                 	db	32
   278  007F15  20                 	db	32
   279  007F16  20                 	db	32
   280  007F17  20                 	db	32
   281  007F18  20                 	db	32
   282  007F19  00                 	db	0
   283  007F1A                     STR_13:
   284  007F1A  48                 	db	72	;'H'
   285  007F1B  49                 	db	73	;'I'
   286  007F1C  5A                 	db	90	;'Z'
   287  007F1D  20                 	db	32
   288  007F1E  4C                 	db	76	;'L'
   289  007F1F  69                 	db	105	;'i'
   290  007F20  4D                 	db	77	;'M'
   291  007F21  69                 	db	105	;'i'
   292  007F22  54                 	db	84	;'T'
   293  007F23  69                 	db	105	;'i'
   294  007F24  20                 	db	32
   295  007F25  20                 	db	32
   296  007F26  20                 	db	32
   297  007F27  20                 	db	32
   298  007F28  20                 	db	32
   299  007F29  20                 	db	32
   300  007F2A  00                 	db	0
   301  007F2B                     STR_3:
   302  007F2B  4B                 	db	75	;'K'
   303  007F2C  41                 	db	65	;'A'
   304  007F2D  4C                 	db	76	;'L'
   305  007F2E  41                 	db	65	;'A'
   306  007F2F  4E                 	db	78	;'N'
   307  007F30  20                 	db	32
   308  007F31  5A                 	db	90	;'Z'
   309  007F32  41                 	db	65	;'A'
   310  007F33  4D                 	db	77	;'M'
   311  007F34  41                 	db	65	;'A'
   312  007F35  4E                 	db	78	;'N'
   313  007F36  20                 	db	32
   314  007F37  20                 	db	32
   315  007F38  20                 	db	32
   316  007F39  20                 	db	32
   317  007F3A  20                 	db	32
   318  007F3B  00                 	db	0
   319  007F3C                     STR_5:
   320  007F3C  5A                 	db	90	;'Z'
   321  007F3D  41                 	db	65	;'A'
   322  007F3E  4D                 	db	77	;'M'
   323  007F3F  41                 	db	65	;'A'
   324  007F40  4E                 	db	78	;'N'
   325  007F41  20                 	db	32
   326  007F42  44                 	db	68	;'D'
   327  007F43  4F                 	db	79	;'O'
   328  007F44  4C                 	db	76	;'L'
   329  007F45  44                 	db	68	;'D'
   330  007F46  55                 	db	85	;'U'
   331  007F47  20                 	db	32
   332  007F48  20                 	db	32
   333  007F49  20                 	db	32
   334  007F4A  20                 	db	32
   335  007F4B  20                 	db	32
   336  007F4C  00                 	db	0
   337  007F4D                     STR_7:
   338  007F4D  48                 	db	72	;'H'
   339  007F4E  41                 	db	65	;'A'
   340  007F4F  52                 	db	82	;'R'
   341  007F50  45                 	db	69	;'E'
   342  007F51  4B                 	db	75	;'K'
   343  007F52  45                 	db	69	;'E'
   344  007F53  54                 	db	84	;'T'
   345  007F54  20                 	db	32
   346  007F55  44                 	db	68	;'D'
   347  007F56  55                 	db	85	;'U'
   348  007F57  52                 	db	82	;'R'
   349  007F58  44                 	db	68	;'D'
   350  007F59  55                 	db	85	;'U'
   351  007F5A  20                 	db	32
   352  007F5B  20                 	db	32
   353  007F5C  20                 	db	32
   354  007F5D  00                 	db	0
   355  007F5E                     STR_17:
   356  007F5E  48                 	db	72	;'H'
   357  007F5F  41                 	db	65	;'A'
   358  007F60  52                 	db	82	;'R'
   359  007F61  45                 	db	69	;'E'
   360  007F62  4B                 	db	75	;'K'
   361  007F63  54                 	db	84	;'T'
   362  007F64  20                 	db	32
   363  007F65  5A                 	db	90	;'Z'
   364  007F66  41                 	db	65	;'A'
   365  007F67  4D                 	db	77	;'M'
   366  007F68  41                 	db	65	;'A'
   367  007F69  4E                 	db	78	;'N'
   368  007F6A  49                 	db	73	;'I'
   369  007F6B  20                 	db	32
   370  007F6C  64                 	db	100	;'d'
   371  007F6D  6B                 	db	107	;'k'
   372  007F6E  00                 	db	0
   373  007F6F                     STR_15:
   374  007F6F  44                 	db	68	;'D'
   375  007F70  55                 	db	85	;'U'
   376  007F71  52                 	db	82	;'R'
   377  007F72  4D                 	db	77	;'M'
   378  007F73  41                 	db	65	;'A'
   379  007F74  20                 	db	32
   380  007F75  5A                 	db	90	;'Z'
   381  007F76  41                 	db	65	;'A'
   382  007F77  4D                 	db	77	;'M'
   383  007F78  41                 	db	65	;'A'
   384  007F79  4E                 	db	78	;'N'
   385  007F7A  49                 	db	73	;'I'
   386  007F7B  20                 	db	32
   387  007F7C  20                 	db	32
   388  007F7D  6D                 	db	109	;'m'
   389  007F7E  73                 	db	115	;'s'
   390  007F7F  00                 	db	0
   391  007F80                     STR_2:
   392  007F80  20                 	db	32
   393  007F81  69                 	db	105	;'i'
   394  007F82  59                 	db	89	;'Y'
   395  007F83  69                 	db	105	;'i'
   396  007F84  20                 	db	32
   397  007F85  45                 	db	69	;'E'
   398  007F86  67                 	db	103	;'g'
   399  007F87  6C                 	db	108	;'l'
   400  007F88  65                 	db	101	;'e'
   401  007F89  6E                 	db	110	;'n'
   402  007F8A  63                 	db	99	;'c'
   403  007F8B  65                 	db	101	;'e'
   404  007F8C  6C                 	db	108	;'l'
   405  007F8D  65                 	db	101	;'e'
   406  007F8E  72                 	db	114	;'r'
   407  007F8F  20                 	db	32
   408  007F90  00                 	db	0
   409  007F91                     STR_16:
   410  007F91  25                 	db	37
   411  007F92  64                 	db	100	;'d'
   412  007F93  20                 	db	32
   413  007F94  20                 	db	32
   414  007F95  20                 	db	32
   415  007F96  20                 	db	32
   416  007F97  20                 	db	32
   417  007F98  20                 	db	32
   418  007F99  20                 	db	32
   419  007F9A  20                 	db	32
   420  007F9B  20                 	db	32
   421  007F9C  20                 	db	32
   422  007F9D  20                 	db	32
   423  007F9E  20                 	db	32
   424  007F9F  20                 	db	32
   425  007FA0  00                 	db	0
   426  007FA1                     STR_6:
   427  007FA1  20                 	db	32
   428  007FA2  20                 	db	32
   429  007FA3  20                 	db	32
   430  007FA4  20                 	db	32
   431  007FA5  20                 	db	32
   432  007FA6  20                 	db	32
   433  007FA7  25                 	db	37
   434  007FA8  64                 	db	100	;'d'
   435  007FA9  3A                 	db	58	;':'
   436  007FAA  25                 	db	37
   437  007FAB  64                 	db	100	;'d'
   438  007FAC  20                 	db	32
   439  007FAD  20                 	db	32
   440  007FAE  20                 	db	32
   441  007FAF  20                 	db	32
   442  007FB0  00                 	db	0
   443  007FB1                     STR_1:
   444  007FB1  20                 	db	32
   445  007FB2  20                 	db	32
   446  007FB3  20                 	db	32
   447  007FB4  45                 	db	69	;'E'
   448  007FB5  72                 	db	114	;'r'
   449  007FB6  67                 	db	103	;'g'
   450  007FB7  69                 	db	105	;'i'
   451  007FB8  6E                 	db	110	;'n'
   452  007FB9  20                 	db	32
   453  007FBA  4F                 	db	79	;'O'
   454  007FBB  79                 	db	121	;'y'
   455  007FBC  75                 	db	117	;'u'
   456  007FBD  6E                 	db	110	;'n'
   457  007FBE  20                 	db	32
   458  007FBF  20                 	db	32
   459  007FC0  00                 	db	0
   460  007FC1                     STR_4:
   461  007FC1  20                 	db	32
   462  007FC2  20                 	db	32
   463  007FC3  20                 	db	32
   464  007FC4  20                 	db	32
   465  007FC5  20                 	db	32
   466  007FC6  20                 	db	32
   467  007FC7  25                 	db	37
   468  007FC8  64                 	db	100	;'d'
   469  007FC9  3A                 	db	58	;':'
   470  007FCA  25                 	db	37
   471  007FCB  64                 	db	100	;'d'
   472  007FCC  20                 	db	32
   473  007FCD  20                 	db	32
   474  007FCE  20                 	db	32
   475  007FCF  00                 	db	0
   476  007FD0                     STR_10:
   477  007FD0  4B                 	db	75	;'K'
   478  007FD1  70                 	db	112	;'p'
   479  007FD2  3A                 	db	58	;':'
   480  007FD3  25                 	db	37
   481  007FD4  35                 	db	53	;'5'
   482  007FD5  2E                 	db	46
   483  007FD6  31                 	db	49	;'1'
   484  007FD7  66                 	db	102	;'f'
   485  007FD8  20                 	db	32
   486  007FD9  20                 	db	32
   487  007FDA  20                 	db	32
   488  007FDB  20                 	db	32
   489  007FDC  20                 	db	32
   490  007FDD  00                 	db	0
   491  007FDE                     STR_12:
   492  007FDE  4B                 	db	75	;'K'
   493  007FDF  64                 	db	100	;'d'
   494  007FE0  3A                 	db	58	;':'
   495  007FE1  25                 	db	37
   496  007FE2  35                 	db	53	;'5'
   497  007FE3  2E                 	db	46
   498  007FE4  31                 	db	49	;'1'
   499  007FE5  66                 	db	102	;'f'
   500  007FE6  20                 	db	32
   501  007FE7  20                 	db	32
   502  007FE8  20                 	db	32
   503  007FE9  20                 	db	32
   504  007FEA  00                 	db	0
   505  007FEB                     STR_19:
   506  007FEB  49                 	db	73	;'I'
   507  007FEC  4E                 	db	78	;'N'
   508  007FED  46                 	db	70	;'F'
   509  007FEE  00                 	db	0
   510  007FEF                     STR_23:
   511  007FEF  4E                 	db	78	;'N'
   512  007FF0  41                 	db	65	;'A'
   513  007FF1  4E                 	db	78	;'N'
   514  007FF2  00                 	db	0
   515  007FF3                     STR_20:
   516  007FF3  69                 	db	105	;'i'
   517  007FF4  6E                 	db	110	;'n'
   518  007FF5  66                 	db	102	;'f'
   519  007FF6  00                 	db	0
   520  007FF7                     STR_24:
   521  007FF7  6E                 	db	110	;'n'
   522  007FF8  61                 	db	97	;'a'
   523  007FF9  6E                 	db	110	;'n'
   524  007FFA  00                 	db	0
   525  007FFB                     STR_27:
   526  007FFB  6C                 	db	108	;'l'
   527  007FFC  66                 	db	102	;'f'
   528  007FFD  00                 	db	0
   529  007FFE  00                 	db	0	; dummy byte at the end
   530  0000                     
   531                           ; #config settings
   532                           
   533                           	psect	cinit
   534  0051E6                     __pcinit:
   535                           	callstack 0
   536  0051E6                     start_initialization:
   537                           	callstack 0
   538  0051E6                     __initialization:
   539                           	callstack 0
   540                           
   541                           ; Initialize objects allocated to BANK1 (64 bytes)
   542                           ; load TBLPTR registers with __pidataBANK1
   543  0051E6  0EF2               	movlw	low __pidataBANK1
   544  0051E8  6EF6               	movwf	tblptrl,c
   545  0051EA  0E53               	movlw	high __pidataBANK1
   546  0051EC  6EF7               	movwf	tblptrh,c
   547  0051EE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   548  0051F0  6EF8               	movwf	tblptru,c
   549  0051F2  EE01  F0B3         	lfsr	0,__pdataBANK1
   550  0051F6  EE10 F040          	lfsr	1,64
   551  0051FA                     copy_data0:
   552  0051FA  0009               	tblrd		*+
   553  0051FC  CFF5 FFEE          	movff	tablat,postinc0
   554  005200  50E5               	movf	postdec1,w,c
   555  005202  50E1               	movf	fsr1l,w,c
   556  005204  E1FA               	bnz	copy_data0
   557                           
   558                           ; Clear objects allocated to BANK2 (176 bytes)
   559  005206  EE02  F000         	lfsr	0,__pbssBANK2
   560  00520A  0EB0               	movlw	176
   561  00520C                     clear_0:
   562  00520C  6AEE               	clrf	postinc0,c
   563  00520E  06E8               	decf	wreg,f,c
   564  005210  E1FD               	bnz	clear_0
   565                           
   566                           ; Clear objects allocated to BANK1 (179 bytes)
   567  005212  EE01  F000         	lfsr	0,__pbssBANK1
   568  005216  0EB3               	movlw	179
   569  005218                     clear_1:
   570  005218  6AEE               	clrf	postinc0,c
   571  00521A  06E8               	decf	wreg,f,c
   572  00521C  E1FD               	bnz	clear_1
   573                           
   574                           ; Clear objects allocated to BANK0 (13 bytes)
   575  00521E  EE00  F0F3         	lfsr	0,__pbssBANK0
   576  005222  0E0D               	movlw	13
   577  005224                     clear_2:
   578  005224  6AEE               	clrf	postinc0,c
   579  005226  06E8               	decf	wreg,f,c
   580  005228  E1FD               	bnz	clear_2
   581  00522A                     end_of_initialization:
   582                           	callstack 0
   583  00522A                     __end_of__initialization:
   584                           	callstack 0
   585  00522A  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   586  00522C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   587  00522E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   588  005230  6EF8               	movwf	tblptru,c
   589  005232  0100               	movlb	0
   590  005234  EFDD  F02B         	goto	_main	;jump to C main() function
   591                           
   592                           	psect	bssBANK0
   593  0000F3                     __pbssBANK0:
   594                           	callstack 0
   595  0000F3                     _menu_value:
   596                           	callstack 0
   597  0000F3                     	ds	3
   598  0000F6                     _prec:
   599                           	callstack 0
   600  0000F6                     	ds	2
   601  0000F8                     _flags:
   602                           	callstack 0
   603  0000F8                     	ds	2
   604  0000FA                     _timer_counter_flag:
   605                           	callstack 0
   606  0000FA                     	ds	1
   607  0000FB                     _menu_selected:
   608                           	callstack 0
   609  0000FB                     	ds	1
   610  0000FC                     _secretMenuCounter:
   611                           	callstack 0
   612  0000FC                     	ds	1
   613  0000FD                     _stopIsClick:
   614                           	callstack 0
   615  0000FD                     	ds	1
   616  0000FE                     _startIsClick:
   617                           	callstack 0
   618  0000FE                     	ds	1
   619  0000FF                     _pauseIsClick:
   620                           	callstack 0
   621  0000FF                     	ds	1
   622                           
   623                           	psect	bssBANK1
   624  000100                     __pbssBANK1:
   625                           	callstack 0
   626  000100                     _convert_data:
   627                           	callstack 0
   628  000100                     	ds	48
   629  000130                     _procces_data:
   630                           	callstack 0
   631  000130                     	ds	32
   632  000150                     _controller:
   633                           	callstack 0
   634  000150                     	ds	19
   635  000163                     	ds	16
   636  000173                     _adc_raw_data:
   637                           	callstack 0
   638  000173                     	ds	16
   639  000183                     _driver_limit:
   640                           	callstack 0
   641  000183                     	ds	12
   642  00018F                     _timer_value:
   643                           	callstack 0
   644  00018F                     	ds	8
   645  000197                     _menu_flags:
   646                           	callstack 0
   647  000197                     	ds	6
   648  00019D                     _button_bounce_controller:
   649                           	callstack 0
   650  00019D                     	ds	6
   651  0001A3                     floorf@F524:
   652                           	callstack 0
   653  0001A3                     	ds	4
   654  0001A7                     ___fpclassifyf@F463:
   655                           	callstack 0
   656  0001A7                     	ds	4
   657  0001AB                     fabsf@F463:
   658                           	callstack 0
   659  0001AB                     	ds	4
   660  0001AF                     _nout:
   661                           	callstack 0
   662  0001AF                     	ds	2
   663  0001B1                     _width:
   664                           	callstack 0
   665  0001B1                     	ds	2
   666                           
   667                           	psect	dataBANK1
   668  0001B3                     __pdataBANK1:
   669                           	callstack 0
   670  0001B3                     	ds	4
   671  0001B7                     	ds	4
   672  0001BB                     	ds	4
   673  0001BF                     	ds	4
   674  0001C3                     	ds	4
   675  0001C7                     	ds	4
   676  0001CB                     _KD@fs_speed_controller$F1843:
   677                           	callstack 0
   678  0001CB                     	ds	4
   679  0001CF                     _KP@fs_speed_controller$F1842:
   680                           	callstack 0
   681  0001CF                     	ds	4
   682  0001D3                     	ds	4
   683  0001D7                     	ds	4
   684  0001DB                     	ds	4
   685  0001DF                     	ds	4
   686  0001E3                     	ds	4
   687  0001E7                     	ds	4
   688  0001EB                     	ds	4
   689  0001EF                     	ds	4
   690                           
   691                           	psect	bssBANK2
   692  000200                     __pbssBANK2:
   693                           	callstack 0
   694  000200                     	ds	16
   695  000210                     	ds	16
   696  000220                     	ds	16
   697  000230                     	ds	16
   698  000240                     	ds	16
   699  000250                     	ds	16
   700  000260                     _dbuf:
   701                           	callstack 0
   702  000260                     	ds	80
   703                           
   704                           	psect	cstackBANK0
   705  000060                     __pcstackBANK0:
   706                           	callstack 0
   707  000060                     floorf@m:
   708                           	callstack 0
   709                           
   710                           ; 4 bytes @ 0x0
   711  000060                     	ds	4
   712  000064                     floorf@e:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0x4
   716  000064                     	ds	2
   717  000066                     floorf@u:
   718                           	callstack 0
   719                           
   720                           ; 4 bytes @ 0x6
   721  000066                     	ds	4
   722  00006A                     ??_efgtoa:
   723                           
   724                           ; 1 bytes @ 0xA
   725  00006A                     	ds	5
   726  00006F                     efgtoa@ou:
   727                           	callstack 0
   728                           
   729                           ; 4 bytes @ 0xF
   730  00006F                     	ds	4
   731  000073                     _efgtoa$2983:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x13
   735  000073                     	ds	2
   736  000075                     _efgtoa$2984:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x15
   740  000075                     	ds	2
   741  000077                     _efgtoa$2988:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x17
   745  000077                     	ds	2
   746  000079                     _efgtoa$2992:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0x19
   750  000079                     	ds	2
   751  00007B                     _efgtoa$2993:
   752                           	callstack 0
   753                           
   754                           ; 2 bytes @ 0x1B
   755  00007B                     	ds	2
   756  00007D                     _efgtoa$2994:
   757                           	callstack 0
   758                           
   759                           ; 2 bytes @ 0x1D
   760  00007D                     	ds	2
   761  00007F                     efgtoa@t:
   762                           	callstack 0
   763                           
   764                           ; 2 bytes @ 0x1F
   765  00007F                     	ds	2
   766  000081                     efgtoa@pp:
   767                           	callstack 0
   768                           
   769                           ; 2 bytes @ 0x21
   770  000081                     	ds	2
   771  000083                     efgtoa@m:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0x23
   775  000083                     	ds	2
   776  000085                     efgtoa@ne:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x25
   780  000085                     	ds	2
   781  000087                     efgtoa@d:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x27
   785  000087                     	ds	2
   786  000089                     efgtoa@sign:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x29
   790  000089                     	ds	2
   791  00008B                     efgtoa@p:
   792                           	callstack 0
   793                           
   794                           ; 2 bytes @ 0x2B
   795  00008B                     	ds	2
   796  00008D                     efgtoa@nmode:
   797                           	callstack 0
   798                           
   799                           ; 1 bytes @ 0x2D
   800  00008D                     	ds	1
   801  00008E                     efgtoa@w:
   802                           	callstack 0
   803                           
   804                           ; 2 bytes @ 0x2E
   805  00008E                     	ds	2
   806  000090                     efgtoa@mode:
   807                           	callstack 0
   808                           
   809                           ; 1 bytes @ 0x30
   810  000090                     	ds	1
   811  000091                     efgtoa@h:
   812                           	callstack 0
   813                           
   814                           ; 4 bytes @ 0x31
   815  000091                     	ds	4
   816  000095                     efgtoa@l:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0x35
   820  000095                     	ds	4
   821  000099                     efgtoa@i:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0x39
   825  000099                     	ds	2
   826  00009B                     efgtoa@g:
   827                           	callstack 0
   828                           
   829                           ; 4 bytes @ 0x3B
   830  00009B                     	ds	4
   831  00009F                     efgtoa@e:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0x3F
   835  00009F                     	ds	2
   836  0000A1                     efgtoa@n:
   837                           	callstack 0
   838                           
   839                           ; 2 bytes @ 0x41
   840  0000A1                     	ds	2
   841  0000A3                     efgtoa@u:
   842                           	callstack 0
   843                           
   844                           ; 4 bytes @ 0x43
   845  0000A3                     	ds	4
   846  0000A7                     ?_vfpfcnvrt:
   847                           	callstack 0
   848  0000A7                     vfpfcnvrt@fp:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x47
   852  0000A7                     	ds	2
   853  0000A9                     vfpfcnvrt@fmt:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0x49
   857  0000A9                     	ds	2
   858  0000AB                     vfpfcnvrt@ap:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x4B
   862  0000AB                     	ds	2
   863  0000AD                     ??_vfpfcnvrt:
   864                           
   865                           ; 1 bytes @ 0x4D
   866  0000AD                     	ds	4
   867  0000B1                     vfpfcnvrt@ll:
   868                           	callstack 0
   869                           
   870                           ; 8 bytes @ 0x51
   871  0000B1                     	ds	8
   872  0000B9                     _vfpfcnvrt$3008:
   873                           	callstack 0
   874                           
   875                           ; 2 bytes @ 0x59
   876  0000B9                     	ds	2
   877  0000BB                     _vfpfcnvrt$3009:
   878                           	callstack 0
   879                           
   880                           ; 2 bytes @ 0x5B
   881  0000BB                     	ds	2
   882  0000BD                     _vfpfcnvrt$3014:
   883                           	callstack 0
   884                           
   885                           ; 2 bytes @ 0x5D
   886  0000BD                     	ds	2
   887  0000BF                     vfpfcnvrt@f:
   888                           	callstack 0
   889                           
   890                           ; 4 bytes @ 0x5F
   891  0000BF                     	ds	4
   892  0000C3                     vfpfcnvrt@ct:
   893                           	callstack 0
   894                           
   895                           ; 3 bytes @ 0x63
   896  0000C3                     	ds	3
   897  0000C6                     vfpfcnvrt@c:
   898                           	callstack 0
   899                           
   900                           ; 1 bytes @ 0x66
   901  0000C6                     	ds	1
   902  0000C7                     ?_vfprintf:
   903                           	callstack 0
   904  0000C7                     vfprintf@fp:
   905                           	callstack 0
   906                           
   907                           ; 2 bytes @ 0x67
   908  0000C7                     	ds	2
   909  0000C9                     vfprintf@fmt:
   910                           	callstack 0
   911                           
   912                           ; 2 bytes @ 0x69
   913  0000C9                     	ds	2
   914  0000CB                     vfprintf@ap:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x6B
   918  0000CB                     	ds	2
   919  0000CD                     vfprintf@cfmt:
   920                           	callstack 0
   921                           
   922                           ; 2 bytes @ 0x6D
   923  0000CD                     	ds	2
   924  0000CF                     ?_sprintf:
   925                           	callstack 0
   926  0000CF                     sprintf@s:
   927                           	callstack 0
   928                           
   929                           ; 2 bytes @ 0x6F
   930  0000CF                     	ds	2
   931  0000D1                     sprintf@fmt:
   932                           	callstack 0
   933                           
   934                           ; 2 bytes @ 0x71
   935  0000D1                     	ds	8
   936  0000D9                     sprintf@ap:
   937                           	callstack 0
   938                           
   939                           ; 2 bytes @ 0x79
   940  0000D9                     	ds	2
   941  0000DB                     sprintf@f:
   942                           	callstack 0
   943                           
   944                           ; 6 bytes @ 0x7B
   945  0000DB                     	ds	6
   946  0000E1                     mainMenu@textCursor2:
   947                           	callstack 0
   948  0000E1                     stopMenu@textCursor2:
   949                           	callstack 0
   950  0000E1                     pauseMenu@textCursor2:
   951                           	callstack 0
   952  0000E1                     secretMenu@textCursor2:
   953                           	callstack 0
   954  0000E1                     speedLimitSettingMenu@textCursor2:
   955                           	callstack 0
   956  0000E1                     stopTimeSettingMenu@textCursor2:
   957                           	callstack 0
   958  0000E1                     driverTimeSettingMenu@textCursor2:
   959                           	callstack 0
   960                           
   961                           ; 16 bytes @ 0x81
   962  0000E1                     	ds	16
   963  0000F1                     ??_stateMachine:
   964                           
   965                           ; 1 bytes @ 0x91
   966  0000F1                     	ds	2
   967                           
   968                           	psect	cstackCOMRAM
   969  000001                     __pcstackCOMRAM:
   970                           	callstack 0
   971  000001                     ?_strlen:
   972                           	callstack 0
   973  000001                     ?___fpclassifyf:
   974                           	callstack 0
   975  000001                     ?_isupper:
   976                           	callstack 0
   977  000001                     ?_isdigit:
   978                           	callstack 0
   979  000001                     ?_strncmp:
   980                           	callstack 0
   981  000001                     ?_isspace:
   982                           	callstack 0
   983  000001                     ?_readAdcValue:
   984                           	callstack 0
   985  000001                     ?___wmul:
   986                           	callstack 0
   987  000001                     ?___awdiv:
   988                           	callstack 0
   989  000001                     ?___awmod:
   990                           	callstack 0
   991  000001                     ?___lmul:
   992                           	callstack 0
   993  000001                     ?___lldiv:
   994                           	callstack 0
   995  000001                     ?___flneg:
   996                           	callstack 0
   997  000001                     ?___aodiv:
   998                           	callstack 0
   999  000001                     ?___aomod:
  1000                           	callstack 0
  1001  000001                     eepromRead@address:
  1002                           	callstack 0
  1003  000001                     eepromWrite@data:
  1004                           	callstack 0
  1005  000001                     lcdPort@a:
  1006                           	callstack 0
  1007  000001                     ___wmul@multiplier:
  1008                           	callstack 0
  1009  000001                     ___awdiv@dividend:
  1010                           	callstack 0
  1011  000001                     ___awmod@dividend:
  1012                           	callstack 0
  1013  000001                     isdigit@c:
  1014                           	callstack 0
  1015  000001                     isspace@c:
  1016                           	callstack 0
  1017  000001                     isupper@c:
  1018                           	callstack 0
  1019  000001                     fputc@c:
  1020                           	callstack 0
  1021  000001                     strcpy@dest:
  1022                           	callstack 0
  1023  000001                     strlen@s:
  1024                           	callstack 0
  1025  000001                     strncmp@_l:
  1026                           	callstack 0
  1027  000001                     ___lmul@multiplier:
  1028                           	callstack 0
  1029  000001                     ___lldiv@dividend:
  1030                           	callstack 0
  1031  000001                     ___fleq@ff1:
  1032                           	callstack 0
  1033  000001                     ___flneg@f1:
  1034                           	callstack 0
  1035  000001                     ___fpclassifyf@x:
  1036                           	callstack 0
  1037  000001                     ___aodiv@dividend:
  1038                           	callstack 0
  1039  000001                     ___aomod@dividend:
  1040                           	callstack 0
  1041                           
  1042                           ; 8 bytes @ 0x0
  1043  000001                     	ds	1
  1044  000002                     ??_systemInit:
  1045  000002                     ??_lcdCmd:
  1046  000002                     eepromWrite@address:
  1047                           	callstack 0
  1048  000002                     lcdWriteChar@temp:
  1049                           	callstack 0
  1050                           
  1051                           ; 1 bytes @ 0x1
  1052  000002                     	ds	1
  1053  000003                     ??_isupper:
  1054  000003                     ??_isdigit:
  1055  000003                     ??_isspace:
  1056  000003                     ??_readAdcValue:
  1057  000003                     lcdCmd@a:
  1058                           	callstack 0
  1059  000003                     lcdWriteChar@y:
  1060                           	callstack 0
  1061  000003                     ___wmul@multiplicand:
  1062                           	callstack 0
  1063  000003                     ___awdiv@divisor:
  1064                           	callstack 0
  1065  000003                     ___awmod@divisor:
  1066                           	callstack 0
  1067  000003                     fputc@fp:
  1068                           	callstack 0
  1069  000003                     strcpy@src:
  1070                           	callstack 0
  1071  000003                     strlen@a:
  1072                           	callstack 0
  1073  000003                     strncmp@_r:
  1074                           	callstack 0
  1075                           
  1076                           ; 2 bytes @ 0x2
  1077  000003                     	ds	1
  1078  000004                     ??_lcdInit:
  1079  000004                     lcdSetCursor@b:
  1080                           	callstack 0
  1081  000004                     lcdWriteChar@a:
  1082                           	callstack 0
  1083                           
  1084                           ; 1 bytes @ 0x3
  1085  000004                     	ds	1
  1086  000005                     ??_fputc:
  1087  000005                     ??___fpclassifyf:
  1088  000005                     ??_strcpy:
  1089  000005                     readAdcValue@adcChannel:
  1090                           	callstack 0
  1091  000005                     lcdSetCursor@a:
  1092                           	callstack 0
  1093  000005                     ___awdiv@counter:
  1094                           	callstack 0
  1095  000005                     ___awmod@counter:
  1096                           	callstack 0
  1097  000005                     lcdWriteString@a:
  1098                           	callstack 0
  1099  000005                     ___wmul@product:
  1100                           	callstack 0
  1101  000005                     strncmp@n:
  1102                           	callstack 0
  1103  000005                     ___lmul@multiplicand:
  1104                           	callstack 0
  1105  000005                     ___lldiv@divisor:
  1106                           	callstack 0
  1107  000005                     ___fleq@ff2:
  1108                           	callstack 0
  1109                           
  1110                           ; 4 bytes @ 0x4
  1111  000005                     	ds	1
  1112  000006                     lcdSetCursor@z:
  1113                           	callstack 0
  1114  000006                     ___awdiv@sign:
  1115                           	callstack 0
  1116  000006                     ___awmod@sign:
  1117                           	callstack 0
  1118  000006                     readAdcValue@adcValue:
  1119                           	callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x5
  1122  000006                     	ds	1
  1123  000007                     ??_strncmp:
  1124  000007                     ??_lcdWriteString:
  1125  000007                     ?_tolower:
  1126                           	callstack 0
  1127  000007                     lcdSetCursor@y:
  1128                           	callstack 0
  1129  000007                     _isspace$3081:
  1130                           	callstack 0
  1131  000007                     ___awdiv@quotient:
  1132                           	callstack 0
  1133  000007                     strcpy@s:
  1134                           	callstack 0
  1135  000007                     tolower@c:
  1136                           	callstack 0
  1137                           
  1138                           ; 2 bytes @ 0x6
  1139  000007                     	ds	1
  1140  000008                     ?_atoi:
  1141                           	callstack 0
  1142  000008                     lcdSetCursor@temp:
  1143                           	callstack 0
  1144  000008                     atoi@s:
  1145                           	callstack 0
  1146  000008                     strncmp@l:
  1147                           	callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x7
  1150  000008                     	ds	1
  1151  000009                     ??_tolower:
  1152  000009                     ??___fleq:
  1153  000009                     lcdWriteString@i:
  1154                           	callstack 0
  1155  000009                     ___fpclassifyf@e:
  1156                           	callstack 0
  1157  000009                     strcpy@d:
  1158                           	callstack 0
  1159  000009                     ___lmul@product:
  1160                           	callstack 0
  1161  000009                     ___lldiv@quotient:
  1162                           	callstack 0
  1163  000009                     ___aodiv@divisor:
  1164                           	callstack 0
  1165  000009                     ___aomod@divisor:
  1166                           	callstack 0
  1167                           
  1168                           ; 8 bytes @ 0x8
  1169  000009                     	ds	1
  1170  00000A                     ??_atoi:
  1171  00000A                     fputs@s:
  1172                           	callstack 0
  1173  00000A                     strncmp@r:
  1174                           	callstack 0
  1175                           
  1176                           ; 2 bytes @ 0x9
  1177  00000A                     	ds	1
  1178  00000B                     ??_openLCD_Script:
  1179  00000B                     ___fpclassifyf@u:
  1180                           	callstack 0
  1181                           
  1182                           ; 4 bytes @ 0xA
  1183  00000B                     	ds	1
  1184  00000C                     fputs@fp:
  1185                           	callstack 0
  1186                           
  1187                           ; 2 bytes @ 0xB
  1188  00000C                     	ds	1
  1189  00000D                     ___lldiv@counter:
  1190                           	callstack 0
  1191  00000D                     _tolower$3145:
  1192                           	callstack 0
  1193                           
  1194                           ; 2 bytes @ 0xC
  1195  00000D                     	ds	1
  1196  00000E                     ?___xxtofl:
  1197                           	callstack 0
  1198  00000E                     fputs@c:
  1199                           	callstack 0
  1200  00000E                     atoi@neg:
  1201                           	callstack 0
  1202  00000E                     ___xxtofl@val:
  1203                           	callstack 0
  1204                           
  1205                           ; 4 bytes @ 0xD
  1206  00000E                     	ds	1
  1207  00000F                     fputs@i:
  1208                           	callstack 0
  1209                           
  1210                           ; 2 bytes @ 0xE
  1211  00000F                     	ds	1
  1212  000010                     _atoi$3050:
  1213                           	callstack 0
  1214                           
  1215                           ; 2 bytes @ 0xF
  1216  000010                     	ds	1
  1217  000011                     ?_pad:
  1218                           	callstack 0
  1219  000011                     ___aodiv@counter:
  1220                           	callstack 0
  1221  000011                     ___aomod@counter:
  1222                           	callstack 0
  1223  000011                     pad@fp:
  1224                           	callstack 0
  1225                           
  1226                           ; 2 bytes @ 0x10
  1227  000011                     	ds	1
  1228  000012                     ??___xxtofl:
  1229  000012                     ___aodiv@sign:
  1230                           	callstack 0
  1231  000012                     ___aomod@sign:
  1232                           	callstack 0
  1233  000012                     _atoi$3052:
  1234                           	callstack 0
  1235                           
  1236                           ; 2 bytes @ 0x11
  1237  000012                     	ds	1
  1238  000013                     ?_abs:
  1239                           	callstack 0
  1240  000013                     pad@buf:
  1241                           	callstack 0
  1242  000013                     abs@a:
  1243                           	callstack 0
  1244  000013                     ___aodiv@quotient:
  1245                           	callstack 0
  1246                           
  1247                           ; 8 bytes @ 0x12
  1248  000013                     	ds	1
  1249  000014                     _atoi$3051:
  1250                           	callstack 0
  1251                           
  1252                           ; 1 bytes @ 0x13
  1253  000014                     	ds	1
  1254  000015                     ??_abs:
  1255  000015                     pad@p:
  1256                           	callstack 0
  1257  000015                     atoi@n:
  1258                           	callstack 0
  1259                           
  1260                           ; 2 bytes @ 0x14
  1261  000015                     	ds	1
  1262  000016                     ___xxtofl@sign:
  1263                           	callstack 0
  1264                           
  1265                           ; 1 bytes @ 0x15
  1266  000016                     	ds	1
  1267  000017                     ??_pad:
  1268  000017                     ___xxtofl@exp:
  1269                           	callstack 0
  1270                           
  1271                           ; 1 bytes @ 0x16
  1272  000017                     	ds	1
  1273  000018                     pad@i:
  1274                           	callstack 0
  1275  000018                     ___xxtofl@arg:
  1276                           	callstack 0
  1277                           
  1278                           ; 4 bytes @ 0x17
  1279  000018                     	ds	2
  1280  00001A                     pad@w:
  1281                           	callstack 0
  1282                           
  1283                           ; 2 bytes @ 0x19
  1284  00001A                     	ds	2
  1285  00001C                     ??_calculatedAverageValue:
  1286  00001C                     ?_dtoa:
  1287                           	callstack 0
  1288  00001C                     ?_fabsf:
  1289                           	callstack 0
  1290  00001C                     ?___flmul:
  1291                           	callstack 0
  1292  00001C                     dtoa@fp:
  1293                           	callstack 0
  1294  00001C                     ___flmul@b:
  1295                           	callstack 0
  1296  00001C                     fabsf@x:
  1297                           	callstack 0
  1298                           
  1299                           ; 4 bytes @ 0x1B
  1300  00001C                     	ds	2
  1301  00001E                     dtoa@d:
  1302                           	callstack 0
  1303                           
  1304                           ; 8 bytes @ 0x1D
  1305  00001E                     	ds	2
  1306  000020                     ___flmul@a:
  1307                           	callstack 0
  1308  000020                     fabsf@u:
  1309                           	callstack 0
  1310                           
  1311                           ; 4 bytes @ 0x1F
  1312  000020                     	ds	4
  1313  000024                     ??___flmul:
  1314                           
  1315                           ; 1 bytes @ 0x23
  1316  000024                     	ds	2
  1317  000026                     ??_dtoa:
  1318                           
  1319                           ; 1 bytes @ 0x25
  1320  000026                     	ds	2
  1321  000028                     ___flmul@sign:
  1322                           	callstack 0
  1323                           
  1324                           ; 1 bytes @ 0x27
  1325  000028                     	ds	1
  1326  000029                     ___flmul@grs:
  1327                           	callstack 0
  1328                           
  1329                           ; 4 bytes @ 0x28
  1330  000029                     	ds	4
  1331  00002D                     ___flmul@aexp:
  1332                           	callstack 0
  1333                           
  1334                           ; 1 bytes @ 0x2C
  1335  00002D                     	ds	1
  1336  00002E                     ___flmul@bexp:
  1337                           	callstack 0
  1338  00002E                     _dtoa$2959:
  1339                           	callstack 0
  1340                           
  1341                           ; 2 bytes @ 0x2D
  1342  00002E                     	ds	1
  1343  00002F                     ___flmul@prod:
  1344                           	callstack 0
  1345                           
  1346                           ; 4 bytes @ 0x2E
  1347  00002F                     	ds	1
  1348  000030                     dtoa@p:
  1349                           	callstack 0
  1350                           
  1351                           ; 2 bytes @ 0x2F
  1352  000030                     	ds	2
  1353  000032                     dtoa@w:
  1354                           	callstack 0
  1355                           
  1356                           ; 2 bytes @ 0x31
  1357  000032                     	ds	1
  1358  000033                     ___flmul@temp:
  1359                           	callstack 0
  1360                           
  1361                           ; 2 bytes @ 0x32
  1362  000033                     	ds	1
  1363  000034                     dtoa@s:
  1364                           	callstack 0
  1365                           
  1366                           ; 2 bytes @ 0x33
  1367  000034                     	ds	1
  1368  000035                     ?___fladd:
  1369                           	callstack 0
  1370  000035                     ?___fldiv:
  1371                           	callstack 0
  1372  000035                     ___flge@ff1:
  1373                           	callstack 0
  1374  000035                     ___fladd@b:
  1375                           	callstack 0
  1376  000035                     ___fldiv@b:
  1377                           	callstack 0
  1378                           
  1379                           ; 4 bytes @ 0x34
  1380  000035                     	ds	1
  1381  000036                     dtoa@n:
  1382                           	callstack 0
  1383                           
  1384                           ; 8 bytes @ 0x35
  1385  000036                     	ds	3
  1386  000039                     ___flge@ff2:
  1387                           	callstack 0
  1388  000039                     ___fladd@a:
  1389                           	callstack 0
  1390  000039                     ___fldiv@a:
  1391                           	callstack 0
  1392                           
  1393                           ; 4 bytes @ 0x38
  1394  000039                     	ds	4
  1395  00003D                     ??___fladd:
  1396  00003D                     ??___fldiv:
  1397  00003D                     ??___flge:
  1398                           
  1399                           ; 1 bytes @ 0x3C
  1400  00003D                     	ds	1
  1401  00003E                     dtoa@i:
  1402                           	callstack 0
  1403                           
  1404                           ; 2 bytes @ 0x3D
  1405  00003E                     	ds	3
  1406  000041                     ___fladd@signs:
  1407                           	callstack 0
  1408  000041                     ___fldiv@rem:
  1409                           	callstack 0
  1410                           
  1411                           ; 4 bytes @ 0x40
  1412  000041                     	ds	1
  1413  000042                     ___fladd@aexp:
  1414                           	callstack 0
  1415                           
  1416                           ; 1 bytes @ 0x41
  1417  000042                     	ds	1
  1418  000043                     ___fladd@bexp:
  1419                           	callstack 0
  1420                           
  1421                           ; 1 bytes @ 0x42
  1422  000043                     	ds	1
  1423  000044                     ___fladd@grs:
  1424                           	callstack 0
  1425                           
  1426                           ; 1 bytes @ 0x43
  1427  000044                     	ds	1
  1428  000045                     ?___flsub:
  1429                           	callstack 0
  1430  000045                     ___fldiv@sign:
  1431                           	callstack 0
  1432  000045                     ___flsub@b:
  1433                           	callstack 0
  1434                           
  1435                           ; 4 bytes @ 0x44
  1436  000045                     	ds	1
  1437  000046                     ___fldiv@new_exp:
  1438                           	callstack 0
  1439                           
  1440                           ; 2 bytes @ 0x45
  1441  000046                     	ds	2
  1442  000048                     ___fldiv@grs:
  1443                           	callstack 0
  1444                           
  1445                           ; 4 bytes @ 0x47
  1446  000048                     	ds	1
  1447  000049                     ___flsub@a:
  1448                           	callstack 0
  1449                           
  1450                           ; 4 bytes @ 0x48
  1451  000049                     	ds	3
  1452  00004C                     ___fldiv@bexp:
  1453                           	callstack 0
  1454                           
  1455                           ; 1 bytes @ 0x4B
  1456  00004C                     	ds	1
  1457  00004D                     ___fldiv@aexp:
  1458                           	callstack 0
  1459                           
  1460                           ; 1 bytes @ 0x4C
  1461  00004D                     	ds	1
  1462  00004E                     ?_floorf:
  1463                           	callstack 0
  1464  00004E                     ?___fltol:
  1465                           	callstack 0
  1466  00004E                     ___fltol@f1:
  1467                           	callstack 0
  1468  00004E                     floorf@x:
  1469                           	callstack 0
  1470                           
  1471                           ; 4 bytes @ 0x4D
  1472  00004E                     	ds	4
  1473  000052                     ??_floorf:
  1474  000052                     ??___fltol:
  1475                           
  1476                           ; 1 bytes @ 0x51
  1477  000052                     	ds	4
  1478  000056                     ___fltol@sign1:
  1479                           	callstack 0
  1480                           
  1481                           ; 1 bytes @ 0x55
  1482  000056                     	ds	1
  1483  000057                     ___fltol@exp1:
  1484                           	callstack 0
  1485                           
  1486                           ; 1 bytes @ 0x56
  1487  000057                     	ds	1
  1488  000058                     ??_scanAdcConversion:
  1489  000058                     ?_efgtoa:
  1490                           	callstack 0
  1491  000058                     PWM1_setDC@dutycycle:
  1492                           	callstack 0
  1493  000058                     PWM2_setDC@dutycycle:
  1494                           	callstack 0
  1495  000058                     efgtoa@fp:
  1496                           	callstack 0
  1497  000058                     speedControl@position:
  1498                           	callstack 0
  1499                           
  1500                           ; 4 bytes @ 0x57
  1501  000058                     	ds	2
  1502  00005A                     ??_PWM1_setDC:
  1503  00005A                     ??_PWM2_setDC:
  1504  00005A                     efgtoa@f:
  1505                           	callstack 0
  1506                           
  1507                           ; 4 bytes @ 0x59
  1508  00005A                     	ds	2
  1509  00005C                     ??_speedControl:
  1510  00005C                     PWM1_setDC@duty:
  1511                           	callstack 0
  1512  00005C                     PWM2_setDC@duty:
  1513                           	callstack 0
  1514                           
  1515                           ; 2 bytes @ 0x5B
  1516  00005C                     	ds	2
  1517  00005E                     efgtoa@c:
  1518                           	callstack 0
  1519                           
  1520                           ; 1 bytes @ 0x5D
  1521  00005E                     	ds	1
  1522  00005F                     
  1523                           ; 1 bytes @ 0x5E
  1524 ;;
  1525 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1526 ;;
  1527 ;; *************** function _main *****************
  1528 ;; Defined at:
  1529 ;;		line 102 in file "fs_main.c"
  1530 ;; Parameters:    Size  Location     Type
  1531 ;;		None
  1532 ;; Auto vars:     Size  Location     Type
  1533 ;;		None
  1534 ;; Return value:  Size  Location     Type
  1535 ;;                  1    wreg      void 
  1536 ;; Registers used:
  1537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1543 ;;      Params:         0       0       0       0       0       0       0
  1544 ;;      Locals:         0       0       0       0       0       0       0
  1545 ;;      Temps:          0       0       0       0       0       0       0
  1546 ;;      Totals:         0       0       0       0       0       0       0
  1547 ;;Total ram usage:        0 bytes
  1548 ;; Hardware stack levels required when called:   12
  1549 ;; This function calls:
  1550 ;;		_loopTaskInit
  1551 ;;		_loopTaskMenuControl
  1552 ;;		_loopTaskTimeMachine
  1553 ;; This function is called by:
  1554 ;;		Startup code after reset
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           	psect	text0
  1559  0057BA                     __ptext0:
  1560                           	callstack 0
  1561  0057BA                     _main:
  1562                           	callstack 19
  1563  0057BA                     
  1564                           ;fs_main.c: 104:     loopTaskInit();
  1565  0057BA  EC39  F02A         	call	_loopTaskInit	;wreg free
  1566  0057BE                     l6509:
  1567                           
  1568                           ;fs_main.c: 107:     {;fs_main.c: 108:         loopTaskTimeMachine();
  1569  0057BE  EC8E  F026         	call	_loopTaskTimeMachine	;wreg free
  1570  0057C2                     
  1571                           ;fs_main.c: 109:         loopTaskMenuControl();
  1572  0057C2  EC8F  F027         	call	_loopTaskMenuControl	;wreg free
  1573  0057C6  EFDF  F02B         	goto	l6509
  1574  0057CA  EF57  F000         	goto	start
  1575  0057CE                     __end_of_main:
  1576                           	callstack 0
  1577                           
  1578 ;; *************** function _loopTaskTimeMachine *****************
  1579 ;; Defined at:
  1580 ;;		line 47 in file "fs_main.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;		None
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;		None
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  1    wreg      void 
  1587 ;; Registers used:
  1588 ;;		wreg, status,2, status,0
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1594 ;;      Params:         0       0       0       0       0       0       0
  1595 ;;      Locals:         0       0       0       0       0       0       0
  1596 ;;      Temps:          0       0       0       0       0       0       0
  1597 ;;      Totals:         0       0       0       0       0       0       0
  1598 ;;Total ram usage:        0 bytes
  1599 ;; Hardware stack levels used:    1
  1600 ;; Hardware stack levels required when called:    1
  1601 ;; This function calls:
  1602 ;;		Nothing
  1603 ;; This function is called by:
  1604 ;;		_main
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           	psect	text1
  1609  004D1C                     __ptext1:
  1610                           	callstack 0
  1611  004D1C                     _loopTaskTimeMachine:
  1612                           	callstack 29
  1613  004D1C                     
  1614                           ;fs_main.c: 49:     if (timer_counter_flag.one_second_flag == 1)
  1615  004D1C  0100               	movlb	0	; () banked
  1616  004D1E  A1FA               	btfss	_timer_counter_flag& (0+255),0,b
  1617  004D20  EF94  F026         	goto	u7811
  1618  004D24  EF96  F026         	goto	u7810
  1619  004D28                     u7811:
  1620  004D28  EFD5  F026         	goto	l255
  1621  004D2C                     u7810:
  1622  004D2C                     
  1623                           ; BSR set to: 0
  1624                           ;fs_main.c: 50:     {;fs_main.c: 51:         timer_counter_flag.one_second_flag = 0;
  1625  004D2C  91FA               	bcf	_timer_counter_flag& (0+255),0,b
  1626  004D2E                     
  1627                           ; BSR set to: 0
  1628                           ;fs_main.c: 53:         if ( (startIsClick == 1) && (pauseIsClick == 0) && (stopIsClick 
      +                          == 0) && (menu_selected == MAIN_MENU) )
  1629  004D2E  05FE               	decf	_startIsClick& (0+255),w,b
  1630  004D30  A4D8               	btfss	status,2,c
  1631  004D32  EF9D  F026         	goto	u7821
  1632  004D36  EF9F  F026         	goto	u7820
  1633  004D3A                     u7821:
  1634  004D3A  EFD5  F026         	goto	l255
  1635  004D3E                     u7820:
  1636  004D3E                     
  1637                           ; BSR set to: 0
  1638  004D3E  51FF               	movf	_pauseIsClick& (0+255),w,b
  1639  004D40  A4D8               	btfss	status,2,c
  1640  004D42  EFA5  F026         	goto	u7831
  1641  004D46  EFA7  F026         	goto	u7830
  1642  004D4A                     u7831:
  1643  004D4A  EFD5  F026         	goto	l255
  1644  004D4E                     u7830:
  1645  004D4E                     
  1646                           ; BSR set to: 0
  1647  004D4E  51FD               	movf	_stopIsClick& (0+255),w,b
  1648  004D50  A4D8               	btfss	status,2,c
  1649  004D52  EFAD  F026         	goto	u7841
  1650  004D56  EFAF  F026         	goto	u7840
  1651  004D5A                     u7841:
  1652  004D5A  EFD5  F026         	goto	l255
  1653  004D5E                     u7840:
  1654  004D5E                     
  1655                           ; BSR set to: 0
  1656  004D5E  51FB               	movf	_menu_selected& (0+255),w,b
  1657  004D60  A4D8               	btfss	status,2,c
  1658  004D62  EFB5  F026         	goto	u7851
  1659  004D66  EFB7  F026         	goto	u7850
  1660  004D6A                     u7851:
  1661  004D6A  EFD5  F026         	goto	l255
  1662  004D6E                     u7850:
  1663  004D6E                     
  1664                           ; BSR set to: 0
  1665                           ;fs_main.c: 54:         {;fs_main.c: 55:             timer_value.second++;
  1666  004D6E  0101               	movlb	1	; () banked
  1667  004D70  2B8F               	incf	_timer_value& (0+255),f,b
  1668  004D72                     
  1669                           ; BSR set to: 1
  1670                           ;fs_main.c: 56:             timer_value.remainingSecond = (uint8_t)60 - timer_value.seco
      +                          nd;
  1671  004D72  518F               	movf	_timer_value& (0+255),w,b
  1672  004D74  083C               	sublw	60
  1673  004D76  6F91               	movwf	(_timer_value+2)& (0+255),b
  1674  004D78                     
  1675                           ; BSR set to: 1
  1676                           ;fs_main.c: 58:             if (timer_value.remainingSecond == 59 )
  1677  004D78  0E3B               	movlw	59
  1678  004D7A  1991               	xorwf	(_timer_value+2)& (0+255),w,b
  1679  004D7C  A4D8               	btfss	status,2,c
  1680  004D7E  EFC3  F026         	goto	u7861
  1681  004D82  EFC5  F026         	goto	u7860
  1682  004D86                     u7861:
  1683  004D86  EFCB  F026         	goto	l6461
  1684  004D8A                     u7860:
  1685  004D8A                     
  1686                           ; BSR set to: 1
  1687                           ;fs_main.c: 59:             {;fs_main.c: 60:                 timer_value.minute++;
  1688  004D8A  2B90               	incf	(_timer_value+1)& (0+255),f,b
  1689  004D8C                     
  1690                           ; BSR set to: 1
  1691                           ;fs_main.c: 61:                 timer_value.remainingMinute = (int8_t)menu_value.driver_
      +                          time - timer_value.minute;
  1692  004D8C  5190               	movf	(_timer_value+1)& (0+255),w,b
  1693  004D8E  0100               	movlb	0	; () banked
  1694  004D90  5DF3               	subwf	_menu_value& (0+255),w,b
  1695  004D92  0101               	movlb	1	; () banked
  1696  004D94  6F92               	movwf	(_timer_value+3)& (0+255),b
  1697  004D96                     l6461:
  1698                           
  1699                           ; BSR set to: 1
  1700                           ;fs_main.c: 64:             if (timer_value.second > 59)
  1701  004D96  0E3B               	movlw	59
  1702  004D98  658F               	cpfsgt	_timer_value& (0+255),b
  1703  004D9A  EFD1  F026         	goto	u7871
  1704  004D9E  EFD3  F026         	goto	u7870
  1705  004DA2                     u7871:
  1706  004DA2  EFD5  F026         	goto	l255
  1707  004DA6                     u7870:
  1708  004DA6                     
  1709                           ; BSR set to: 1
  1710                           ;fs_main.c: 65:             {;fs_main.c: 66:                 timer_value.second = 0;
  1711  004DA6  0E00               	movlw	0
  1712  004DA8  6F8F               	movwf	_timer_value& (0+255),b
  1713  004DAA                     l255:
  1714  004DAA  0012               	return		;funcret
  1715  004DAC                     __end_of_loopTaskTimeMachine:
  1716                           	callstack 0
  1717                           
  1718 ;; *************** function _loopTaskMenuControl *****************
  1719 ;; Defined at:
  1720 ;;		line 159 in file "fs_menu_controller.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;		None
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;		None
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1    wreg      void 
  1727 ;; Registers used:
  1728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1734 ;;      Params:         0       0       0       0       0       0       0
  1735 ;;      Locals:         0       0       0       0       0       0       0
  1736 ;;      Temps:          0       0       0       0       0       0       0
  1737 ;;      Totals:         0       0       0       0       0       0       0
  1738 ;;Total ram usage:        0 bytes
  1739 ;; Hardware stack levels used:    1
  1740 ;; Hardware stack levels required when called:   11
  1741 ;; This function calls:
  1742 ;;		_buttonControlFlags
  1743 ;;		_stateMachine
  1744 ;; This function is called by:
  1745 ;;		_main
  1746 ;; This function uses a non-reentrant model
  1747 ;;
  1748                           
  1749                           	psect	text2
  1750  004F1E                     __ptext2:
  1751                           	callstack 0
  1752  004F1E                     _loopTaskMenuControl:
  1753                           	callstack 19
  1754  004F1E                     
  1755                           ;fs_menu_controller.c: 161:     buttonControlFlags();
  1756  004F1E  ECF1  F018         	call	_buttonControlFlags	;wreg free
  1757  004F22                     
  1758                           ;fs_menu_controller.c: 162:     stateMachine();
  1759  004F22  ECEB  F024         	call	_stateMachine	;wreg free
  1760  004F26                     
  1761                           ;fs_menu_controller.c: 164:     if (menu_flags.menu_start_flag == 1)
  1762  004F26  0101               	movlb	1	; () banked
  1763  004F28  0598               	decf	(_menu_flags+1)& (0+255),w,b
  1764  004F2A  A4D8               	btfss	status,2,c
  1765  004F2C  EF9A  F027         	goto	u7881
  1766  004F30  EF9C  F027         	goto	u7880
  1767  004F34                     u7881:
  1768  004F34  EFA5  F027         	goto	l6495
  1769  004F38                     u7880:
  1770  004F38                     
  1771                           ; BSR set to: 1
  1772                           ;fs_menu_controller.c: 165:     {;fs_menu_controller.c: 166:         menu_flags.menu_sta
      +                          rt_flag = 0;
  1773  004F38  0E00               	movlw	0
  1774  004F3A  6F98               	movwf	(_menu_flags+1)& (0+255),b
  1775                           
  1776                           ;fs_menu_controller.c: 167:         startIsClick = 1;
  1777  004F3C  0E01               	movlw	1
  1778  004F3E  0100               	movlb	0	; () banked
  1779  004F40  6FFE               	movwf	_startIsClick& (0+255),b
  1780                           
  1781                           ;fs_menu_controller.c: 168:         pauseIsClick = 0;
  1782  004F42  0E00               	movlw	0
  1783  004F44  6FFF               	movwf	_pauseIsClick& (0+255),b
  1784                           
  1785                           ;fs_menu_controller.c: 169:         stopIsClick = 0;
  1786  004F46  0E00               	movlw	0
  1787  004F48  6FFD               	movwf	_stopIsClick& (0+255),b
  1788  004F4A                     l6495:
  1789                           
  1790                           ;fs_menu_controller.c: 172:     if (menu_flags.menu_pause_flag == 1)
  1791  004F4A  0101               	movlb	1	; () banked
  1792  004F4C  059A               	decf	(_menu_flags+3)& (0+255),w,b
  1793  004F4E  A4D8               	btfss	status,2,c
  1794  004F50  EFAC  F027         	goto	u7891
  1795  004F54  EFAE  F027         	goto	u7890
  1796  004F58                     u7891:
  1797  004F58  EFB7  F027         	goto	l6499
  1798  004F5C                     u7890:
  1799  004F5C                     
  1800                           ; BSR set to: 1
  1801                           ;fs_menu_controller.c: 173:     {;fs_menu_controller.c: 174:         menu_flags.menu_pau
      +                          se_flag = 0;
  1802  004F5C  0E00               	movlw	0
  1803  004F5E  6F9A               	movwf	(_menu_flags+3)& (0+255),b
  1804                           
  1805                           ;fs_menu_controller.c: 175:         pauseIsClick = 1;
  1806  004F60  0E01               	movlw	1
  1807  004F62  0100               	movlb	0	; () banked
  1808  004F64  6FFF               	movwf	_pauseIsClick& (0+255),b
  1809                           
  1810                           ;fs_menu_controller.c: 176:         startIsClick = 0;
  1811  004F66  0E00               	movlw	0
  1812  004F68  6FFE               	movwf	_startIsClick& (0+255),b
  1813                           
  1814                           ;fs_menu_controller.c: 177:         stopIsClick = 0;
  1815  004F6A  0E00               	movlw	0
  1816  004F6C  6FFD               	movwf	_stopIsClick& (0+255),b
  1817  004F6E                     l6499:
  1818                           
  1819                           ;fs_menu_controller.c: 180:     if (menu_flags.menu_stop_flag == 1)
  1820  004F6E  0101               	movlb	1	; () banked
  1821  004F70  0599               	decf	(_menu_flags+2)& (0+255),w,b
  1822  004F72  A4D8               	btfss	status,2,c
  1823  004F74  EFBE  F027         	goto	u7901
  1824  004F78  EFC0  F027         	goto	u7900
  1825  004F7C                     u7901:
  1826  004F7C  EFC9  F027         	goto	l434
  1827  004F80                     u7900:
  1828  004F80                     
  1829                           ; BSR set to: 1
  1830                           ;fs_menu_controller.c: 181:     {;fs_menu_controller.c: 182:         menu_flags.menu_sto
      +                          p_flag = 0;
  1831  004F80  0E00               	movlw	0
  1832  004F82  6F99               	movwf	(_menu_flags+2)& (0+255),b
  1833                           
  1834                           ;fs_menu_controller.c: 183:         pauseIsClick = 0;
  1835  004F84  0E00               	movlw	0
  1836  004F86  0100               	movlb	0	; () banked
  1837  004F88  6FFF               	movwf	_pauseIsClick& (0+255),b
  1838                           
  1839                           ;fs_menu_controller.c: 184:         startIsClick = 0;
  1840  004F8A  0E00               	movlw	0
  1841  004F8C  6FFE               	movwf	_startIsClick& (0+255),b
  1842                           
  1843                           ;fs_menu_controller.c: 185:         stopIsClick = 1;
  1844  004F8E  0E01               	movlw	1
  1845  004F90  6FFD               	movwf	_stopIsClick& (0+255),b
  1846  004F92                     l434:
  1847  004F92  0012               	return		;funcret
  1848  004F94                     __end_of_loopTaskMenuControl:
  1849                           	callstack 0
  1850                           
  1851 ;; *************** function _stateMachine *****************
  1852 ;; Defined at:
  1853 ;;		line 196 in file "fs_menu_controller.c"
  1854 ;; Parameters:    Size  Location     Type
  1855 ;;		None
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;		None
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  1    wreg      void 
  1860 ;; Registers used:
  1861 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1867 ;;      Params:         0       0       0       0       0       0       0
  1868 ;;      Locals:         0       0       0       0       0       0       0
  1869 ;;      Temps:          0       2       0       0       0       0       0
  1870 ;;      Totals:         0       2       0       0       0       0       0
  1871 ;;Total ram usage:        2 bytes
  1872 ;; Hardware stack levels used:    1
  1873 ;; Hardware stack levels required when called:   10
  1874 ;; This function calls:
  1875 ;;		_driverTimeSettingMenu
  1876 ;;		_exitLine
  1877 ;;		_mainMenu
  1878 ;;		_pauseMenu
  1879 ;;		_secretMenu
  1880 ;;		_speedLimitSettingMenu
  1881 ;;		_startMenu
  1882 ;;		_stopMenu
  1883 ;;		_stopTimeSettingMenu
  1884 ;; This function is called by:
  1885 ;;		_loopTaskMenuControl
  1886 ;; This function uses a non-reentrant model
  1887 ;;
  1888                           
  1889                           	psect	text3
  1890  0049D6                     __ptext3:
  1891                           	callstack 0
  1892  0049D6                     _stateMachine:
  1893                           	callstack 19
  1894  0049D6                     
  1895                           ;fs_menu_controller.c: 198:     switch (menu_selected)
  1896  0049D6  EF11  F025         	goto	l6433
  1897  0049DA                     l6413:
  1898                           
  1899                           ; BSR set to: 0
  1900                           ;fs_menu_controller.c: 201:             mainMenu();
  1901  0049DA  EC90  F01B         	call	_mainMenu	;wreg free
  1902                           
  1903                           ;fs_menu_controller.c: 202:         break;
  1904  0049DE  EF43  F025         	goto	l448
  1905  0049E2                     l6415:
  1906                           
  1907                           ; BSR set to: 0
  1908                           ;fs_menu_controller.c: 205:             driverTimeSettingMenu();
  1909  0049E2  EC39  F01F         	call	_driverTimeSettingMenu	;wreg free
  1910                           
  1911                           ;fs_menu_controller.c: 206:         break;
  1912  0049E6  EF43  F025         	goto	l448
  1913  0049EA                     l6417:
  1914                           
  1915                           ; BSR set to: 0
  1916                           ;fs_menu_controller.c: 209:             stopTimeSettingMenu();
  1917  0049EA  EC5F  F020         	call	_stopTimeSettingMenu	;wreg free
  1918                           
  1919                           ;fs_menu_controller.c: 210:         break;
  1920  0049EE  EF43  F025         	goto	l448
  1921  0049F2                     l6419:
  1922                           
  1923                           ; BSR set to: 0
  1924                           ;fs_menu_controller.c: 213:             speedLimitSettingMenu();
  1925  0049F2  ECE5  F020         	call	_speedLimitSettingMenu	;wreg free
  1926                           
  1927                           ;fs_menu_controller.c: 214:         break;
  1928  0049F6  EF43  F025         	goto	l448
  1929  0049FA                     l6421:
  1930                           
  1931                           ; BSR set to: 0
  1932                           ;fs_menu_controller.c: 217:             stopMenu();
  1933  0049FA  EC58  F023         	call	_stopMenu	;wreg free
  1934                           
  1935                           ;fs_menu_controller.c: 218:         break;
  1936  0049FE  EF43  F025         	goto	l448
  1937  004A02                     l6423:
  1938                           
  1939                           ; BSR set to: 0
  1940                           ;fs_menu_controller.c: 221:             startMenu();
  1941  004A02  ECC5  F02B         	call	_startMenu	;wreg free
  1942                           
  1943                           ;fs_menu_controller.c: 222:         break;
  1944  004A06  EF43  F025         	goto	l448
  1945  004A0A                     l6425:
  1946                           
  1947                           ; BSR set to: 0
  1948                           ;fs_menu_controller.c: 225:             pauseMenu();
  1949  004A0A  EC9C  F01E         	call	_pauseMenu	;wreg free
  1950                           
  1951                           ;fs_menu_controller.c: 226:         break;
  1952  004A0E  EF43  F025         	goto	l448
  1953  004A12                     l6427:
  1954                           
  1955                           ; BSR set to: 0
  1956                           ;fs_menu_controller.c: 229:             exitLine();
  1957  004A12  ECF7  F02B         	call	_exitLine	;wreg free
  1958                           
  1959                           ;fs_menu_controller.c: 230:         break;
  1960  004A16  EF43  F025         	goto	l448
  1961  004A1A                     l6429:
  1962                           
  1963                           ; BSR set to: 0
  1964                           ;fs_menu_controller.c: 233:             secretMenu();
  1965  004A1A  EC7A  F016         	call	_secretMenu	;wreg free
  1966                           
  1967                           ;fs_menu_controller.c: 234:         break;
  1968  004A1E  EF43  F025         	goto	l448
  1969  004A22                     l6433:
  1970  004A22  0100               	movlb	0	; () banked
  1971  004A24  51FB               	movf	_menu_selected& (0+255),w,b
  1972  004A26  6FF1               	movwf	??_stateMachine& (0+255),b
  1973  004A28  6BF2               	clrf	(??_stateMachine+1)& (0+255),b
  1974                           
  1975                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1976                           ; Switch size 1, requested type "simple"
  1977                           ; Number of cases is 1, Range of values is 0 to 0
  1978                           ; switch strategies available:
  1979                           ; Name         Instructions Cycles
  1980                           ; simple_byte            4     3 (average)
  1981                           ;	Chosen strategy is simple_byte
  1982  004A2A  51F2               	movf	(??_stateMachine+1)& (0+255),w,b
  1983  004A2C  0A00               	xorlw	0	; case 0
  1984  004A2E  B4D8               	btfsc	status,2,c
  1985  004A30  EF1C  F025         	goto	l6615
  1986  004A34  EF43  F025         	goto	l448
  1987  004A38                     l6615:
  1988                           
  1989                           ; BSR set to: 0
  1990                           ; Switch size 1, requested type "simple"
  1991                           ; Number of cases is 9, Range of values is 0 to 8
  1992                           ; switch strategies available:
  1993                           ; Name         Instructions Cycles
  1994                           ; simple_byte           28    15 (average)
  1995                           ;	Chosen strategy is simple_byte
  1996  004A38  51F1               	movf	??_stateMachine& (0+255),w,b
  1997  004A3A  0A00               	xorlw	0	; case 0
  1998  004A3C  B4D8               	btfsc	status,2,c
  1999  004A3E  EFED  F024         	goto	l6413
  2000  004A42  0A01               	xorlw	1	; case 1
  2001  004A44  B4D8               	btfsc	status,2,c
  2002  004A46  EFF1  F024         	goto	l6415
  2003  004A4A  0A03               	xorlw	3	; case 2
  2004  004A4C  B4D8               	btfsc	status,2,c
  2005  004A4E  EFF5  F024         	goto	l6417
  2006  004A52  0A01               	xorlw	1	; case 3
  2007  004A54  B4D8               	btfsc	status,2,c
  2008  004A56  EFF9  F024         	goto	l6419
  2009  004A5A  0A07               	xorlw	7	; case 4
  2010  004A5C  B4D8               	btfsc	status,2,c
  2011  004A5E  EFFD  F024         	goto	l6421
  2012  004A62  0A01               	xorlw	1	; case 5
  2013  004A64  B4D8               	btfsc	status,2,c
  2014  004A66  EF01  F025         	goto	l6423
  2015  004A6A  0A03               	xorlw	3	; case 6
  2016  004A6C  B4D8               	btfsc	status,2,c
  2017  004A6E  EF05  F025         	goto	l6425
  2018  004A72  0A01               	xorlw	1	; case 7
  2019  004A74  B4D8               	btfsc	status,2,c
  2020  004A76  EF09  F025         	goto	l6427
  2021  004A7A  0A0F               	xorlw	15	; case 8
  2022  004A7C  B4D8               	btfsc	status,2,c
  2023  004A7E  EF0D  F025         	goto	l6429
  2024  004A82  EF43  F025         	goto	l448
  2025  004A86                     l448:
  2026  004A86  0012               	return		;funcret
  2027  004A88                     __end_of_stateMachine:
  2028                           	callstack 0
  2029                           
  2030 ;; *************** function _stopTimeSettingMenu *****************
  2031 ;; Defined at:
  2032 ;;		line 539 in file "fs_menu_controller.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;		None
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      void 
  2039 ;; Registers used:
  2040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2046 ;;      Params:         0       0       0       0       0       0       0
  2047 ;;      Locals:         0      16       0       0       0       0       0
  2048 ;;      Temps:          0       0       0       0       0       0       0
  2049 ;;      Totals:         0      16       0       0       0       0       0
  2050 ;;Total ram usage:       16 bytes
  2051 ;; Hardware stack levels used:    1
  2052 ;; Hardware stack levels required when called:    9
  2053 ;; This function calls:
  2054 ;;		_eepromWrite
  2055 ;;		_lcdSetCursor
  2056 ;;		_lcdWriteString
  2057 ;;		_sprintf
  2058 ;;		_stopMotor
  2059 ;; This function is called by:
  2060 ;;		_stateMachine
  2061 ;; This function uses a non-reentrant model
  2062 ;;
  2063                           
  2064                           	psect	text4
  2065  0040BE                     __ptext4:
  2066                           	callstack 0
  2067  0040BE                     _stopTimeSettingMenu:
  2068                           	callstack 19
  2069  0040BE                     
  2070                           ;fs_menu_controller.c: 541:     char textCursor2[16] = {0};
  2071  0040BE  EE20  F0E1         	lfsr	2,stopTimeSettingMenu@textCursor2
  2072  0040C2  0E0F               	movlw	15
  2073  0040C4                     u7171:
  2074  0040C4  6ADE               	clrf	postinc2,c
  2075  0040C6  06E8               	decf	wreg,f,c
  2076  0040C8  E2FD               	bc	u7171
  2077  0040CA                     
  2078                           ;fs_menu_controller.c: 543:     stopMotor();
  2079  0040CA  EC77  F02A         	call	_stopMotor	;wreg free
  2080  0040CE                     
  2081                           ;fs_menu_controller.c: 545:     if (menu_flags.menu_input_flag == 1)
  2082  0040CE  0101               	movlb	1	; () banked
  2083  0040D0  0597               	decf	_menu_flags& (0+255),w,b
  2084  0040D2  A4D8               	btfss	status,2,c
  2085  0040D4  EF6E  F020         	goto	u7181
  2086  0040D8  EF70  F020         	goto	u7180
  2087  0040DC                     u7181:
  2088  0040DC  EF75  F020         	goto	l6071
  2089  0040E0                     u7180:
  2090  0040E0                     
  2091                           ; BSR set to: 1
  2092                           ;fs_menu_controller.c: 546:     {;fs_menu_controller.c: 547:         menu_flags.menu_inp
      +                          ut_flag = 0;
  2093  0040E0  0E00               	movlw	0
  2094  0040E2  6F97               	movwf	_menu_flags& (0+255),b
  2095                           
  2096                           ;fs_menu_controller.c: 548:         menu_selected = SPEED_LIMIT_SETTING;
  2097  0040E4  0E03               	movlw	3
  2098  0040E6  0100               	movlb	0	; () banked
  2099  0040E8  6FFB               	movwf	_menu_selected& (0+255),b
  2100  0040EA                     l6071:
  2101                           
  2102                           ;fs_menu_controller.c: 551:     if ((menu_flags.menu_increase_flag == 1) && (menu_value.
      +                          stop_time < 250))
  2103  0040EA  0101               	movlb	1	; () banked
  2104  0040EC  059B               	decf	(_menu_flags+4)& (0+255),w,b
  2105  0040EE  A4D8               	btfss	status,2,c
  2106  0040F0  EF7C  F020         	goto	u7191
  2107  0040F4  EF7E  F020         	goto	u7190
  2108  0040F8                     u7191:
  2109  0040F8  EF92  F020         	goto	l6081
  2110  0040FC                     u7190:
  2111  0040FC                     
  2112                           ; BSR set to: 1
  2113  0040FC  0EFA               	movlw	250
  2114  0040FE  0100               	movlb	0	; () banked
  2115  004100  61F4               	cpfslt	(_menu_value+1)& (0+255),b
  2116  004102  EF85  F020         	goto	u7201
  2117  004106  EF87  F020         	goto	u7200
  2118  00410A                     u7201:
  2119  00410A  EF92  F020         	goto	l6081
  2120  00410E                     u7200:
  2121  00410E                     
  2122                           ; BSR set to: 0
  2123                           ;fs_menu_controller.c: 552:     {;fs_menu_controller.c: 553:         menu_flags.menu_inc
      +                          rease_flag = 0;
  2124  00410E  0E00               	movlw	0
  2125  004110  0101               	movlb	1	; () banked
  2126  004112  6F9B               	movwf	(_menu_flags+4)& (0+255),b
  2127  004114                     
  2128                           ; BSR set to: 1
  2129                           ;fs_menu_controller.c: 554:         menu_value.stop_time += 10;
  2130  004114  0E0A               	movlw	10
  2131  004116  0100               	movlb	0	; () banked
  2132  004118  27F4               	addwf	(_menu_value+1)& (0+255),f,b
  2133  00411A                     
  2134                           ; BSR set to: 0
  2135                           ;fs_menu_controller.c: 555:         eepromWrite(0x01,(uint8_t)menu_value.stop_time);
  2136  00411A  C0F4  F001         	movff	_menu_value+1,eepromWrite@data
  2137  00411E  0E01               	movlw	1
  2138  004120  EC55  F02B         	call	_eepromWrite
  2139  004124                     l6081:
  2140                           
  2141                           ;fs_menu_controller.c: 558:     if ((menu_flags.menu_decrease_flag == 1) && (menu_value.
      +                          stop_time > 10))
  2142  004124  0101               	movlb	1	; () banked
  2143  004126  059C               	decf	(_menu_flags+5)& (0+255),w,b
  2144  004128  A4D8               	btfss	status,2,c
  2145  00412A  EF99  F020         	goto	u7211
  2146  00412E  EF9B  F020         	goto	u7210
  2147  004132                     u7211:
  2148  004132  EFAF  F020         	goto	l507
  2149  004136                     u7210:
  2150  004136                     
  2151                           ; BSR set to: 1
  2152  004136  0E0A               	movlw	10
  2153  004138  0100               	movlb	0	; () banked
  2154  00413A  65F4               	cpfsgt	(_menu_value+1)& (0+255),b
  2155  00413C  EFA2  F020         	goto	u7221
  2156  004140  EFA4  F020         	goto	u7220
  2157  004144                     u7221:
  2158  004144  EFAF  F020         	goto	l507
  2159  004148                     u7220:
  2160  004148                     
  2161                           ; BSR set to: 0
  2162                           ;fs_menu_controller.c: 559:     {;fs_menu_controller.c: 560:          menu_flags.menu_de
      +                          crease_flag = 0;
  2163  004148  0E00               	movlw	0
  2164  00414A  0101               	movlb	1	; () banked
  2165  00414C  6F9C               	movwf	(_menu_flags+5)& (0+255),b
  2166  00414E                     
  2167                           ; BSR set to: 1
  2168                           ;fs_menu_controller.c: 561:          menu_value.stop_time -= 10;
  2169  00414E  0E0A               	movlw	10
  2170  004150  0100               	movlb	0	; () banked
  2171  004152  5FF4               	subwf	(_menu_value+1)& (0+255),f,b
  2172  004154                     
  2173                           ; BSR set to: 0
  2174                           ;fs_menu_controller.c: 562:          eepromWrite(0x01,(uint8_t)menu_value.stop_time);
  2175  004154  C0F4  F001         	movff	_menu_value+1,eepromWrite@data
  2176  004158  0E01               	movlw	1
  2177  00415A  EC55  F02B         	call	_eepromWrite
  2178  00415E                     l507:
  2179                           
  2180                           ;fs_menu_controller.c: 564:     lcdSetCursor(1,1);
  2181  00415E  0E01               	movlw	1
  2182  004160  6E04               	movwf	lcdSetCursor@b^0,c
  2183  004162  0E01               	movlw	1
  2184  004164  EC34  F028         	call	_lcdSetCursor
  2185  004168                     
  2186                           ;fs_menu_controller.c: 565:     lcdWriteString("DURMA ZAMANI  ms");
  2187  004168  0E6F               	movlw	low STR_15
  2188  00416A  6E05               	movwf	lcdWriteString@a^0,c
  2189  00416C  0E7F               	movlw	high STR_15
  2190  00416E  6E06               	movwf	(lcdWriteString@a+1)^0,c
  2191  004170  ECD6  F026         	call	_lcdWriteString	;wreg free
  2192  004174                     
  2193                           ;fs_menu_controller.c: 566:     lcdSetCursor(2,1);
  2194  004174  0E01               	movlw	1
  2195  004176  6E04               	movwf	lcdSetCursor@b^0,c
  2196  004178  0E02               	movlw	2
  2197  00417A  EC34  F028         	call	_lcdSetCursor
  2198  00417E                     
  2199                           ;fs_menu_controller.c: 567:     sprintf(textCursor2,"%d             ",menu_value.stop_ti
      +                          me);
  2200  00417E  0EE1               	movlw	low stopTimeSettingMenu@textCursor2
  2201  004180  0100               	movlb	0	; () banked
  2202  004182  6FCF               	movwf	sprintf@s& (0+255),b
  2203  004184  0E00               	movlw	high stopTimeSettingMenu@textCursor2
  2204  004186  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2205  004188  0E91               	movlw	low STR_16
  2206  00418A  6FD1               	movwf	sprintf@fmt& (0+255),b
  2207  00418C  0E7F               	movlw	high STR_16
  2208  00418E  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2209  004190  C0F4  F0D3         	movff	_menu_value+1,?_sprintf+4
  2210  004194  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  2211  004196  EC1C  F029         	call	_sprintf	;wreg free
  2212  00419A                     
  2213                           ;fs_menu_controller.c: 568:     lcdWriteString(textCursor2);
  2214  00419A  0EE1               	movlw	low stopTimeSettingMenu@textCursor2
  2215  00419C  6E05               	movwf	lcdWriteString@a^0,c
  2216  00419E  0E00               	movlw	high stopTimeSettingMenu@textCursor2
  2217  0041A0  6E06               	movwf	(lcdWriteString@a+1)^0,c
  2218  0041A2  ECD6  F026         	call	_lcdWriteString	;wreg free
  2219  0041A6                     
  2220                           ;fs_menu_controller.c: 570:     if(timer_value.menu_login_delay == 100)
  2221  0041A6  0E64               	movlw	100
  2222  0041A8  0101               	movlb	1	; () banked
  2223  0041AA  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  2224  0041AC  A4D8               	btfss	status,2,c
  2225  0041AE  EFDB  F020         	goto	u7231
  2226  0041B2  EFDD  F020         	goto	u7230
  2227  0041B6                     u7231:
  2228  0041B6  EFE4  F020         	goto	l509
  2229  0041BA                     u7230:
  2230  0041BA                     
  2231                           ; BSR set to: 1
  2232                           ;fs_menu_controller.c: 571:     {;fs_menu_controller.c: 572:         button_bounce_contr
      +                          oller.menu = 0;
  2233  0041BA  0E00               	movlw	0
  2234  0041BC  6F9D               	movwf	_button_bounce_controller& (0+255),b
  2235                           
  2236                           ;fs_menu_controller.c: 573:         timer_value.menu_login_delay = 0;
  2237  0041BE  0E00               	movlw	0
  2238  0041C0  6F93               	movwf	(_timer_value+4)& (0+255),b
  2239                           
  2240                           ;fs_menu_controller.c: 574:         menu_selected = PAUSE_MENU;
  2241  0041C2  0E06               	movlw	6
  2242  0041C4  0100               	movlb	0	; () banked
  2243  0041C6  6FFB               	movwf	_menu_selected& (0+255),b
  2244  0041C8                     l509:
  2245  0041C8  0012               	return		;funcret
  2246  0041CA                     __end_of_stopTimeSettingMenu:
  2247                           	callstack 0
  2248                           
  2249 ;; *************** function _stopMenu *****************
  2250 ;; Defined at:
  2251 ;;		line 304 in file "fs_menu_controller.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;		None
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  2256 ;; Return value:  Size  Location     Type
  2257 ;;                  1    wreg      void 
  2258 ;; Registers used:
  2259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2265 ;;      Params:         0       0       0       0       0       0       0
  2266 ;;      Locals:         0      16       0       0       0       0       0
  2267 ;;      Temps:          0       0       0       0       0       0       0
  2268 ;;      Totals:         0      16       0       0       0       0       0
  2269 ;;Total ram usage:       16 bytes
  2270 ;; Hardware stack levels used:    1
  2271 ;; Hardware stack levels required when called:    9
  2272 ;; This function calls:
  2273 ;;		_lcdSetCursor
  2274 ;;		_lcdWriteString
  2275 ;;		_sprintf
  2276 ;;		_stopMotor
  2277 ;; This function is called by:
  2278 ;;		_stateMachine
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282                           	psect	text5
  2283  0046B0                     __ptext5:
  2284                           	callstack 0
  2285  0046B0                     _stopMenu:
  2286                           	callstack 19
  2287  0046B0                     
  2288                           ;fs_menu_controller.c: 306:     char textCursor2[16] = {0};
  2289  0046B0  EE20  F0E1         	lfsr	2,stopMenu@textCursor2
  2290  0046B4  0E0F               	movlw	15
  2291  0046B6                     u7311:
  2292  0046B6  6ADE               	clrf	postinc2,c
  2293  0046B8  06E8               	decf	wreg,f,c
  2294  0046BA  E2FD               	bc	u7311
  2295  0046BC                     
  2296                           ;fs_menu_controller.c: 308:     stopMotor();
  2297  0046BC  EC77  F02A         	call	_stopMotor	;wreg free
  2298  0046C0                     
  2299                           ;fs_menu_controller.c: 310:     startIsClick = 0;
  2300  0046C0  0E00               	movlw	0
  2301  0046C2  0100               	movlb	0	; () banked
  2302  0046C4  6FFE               	movwf	_startIsClick& (0+255),b
  2303  0046C6                     
  2304                           ; BSR set to: 0
  2305                           ;fs_menu_controller.c: 311:     pauseIsClick = 0;
  2306  0046C6  0E00               	movlw	0
  2307  0046C8  6FFF               	movwf	_pauseIsClick& (0+255),b
  2308  0046CA                     
  2309                           ; BSR set to: 0
  2310                           ;fs_menu_controller.c: 312:     stopIsClick = 1;
  2311  0046CA  0E01               	movlw	1
  2312  0046CC  6FFD               	movwf	_stopIsClick& (0+255),b
  2313  0046CE                     
  2314                           ; BSR set to: 0
  2315                           ;fs_menu_controller.c: 314:     lcdSetCursor(1,1);
  2316  0046CE  0E01               	movlw	1
  2317  0046D0  6E04               	movwf	lcdSetCursor@b^0,c
  2318  0046D2  0E01               	movlw	1
  2319  0046D4  EC34  F028         	call	_lcdSetCursor
  2320  0046D8                     
  2321                           ;fs_menu_controller.c: 315:     lcdWriteString("ZAMAN DOLDU     ");
  2322  0046D8  0E3C               	movlw	low STR_5
  2323  0046DA  6E05               	movwf	lcdWriteString@a^0,c
  2324  0046DC  0E7F               	movlw	high STR_5
  2325  0046DE  6E06               	movwf	(lcdWriteString@a+1)^0,c
  2326  0046E0  ECD6  F026         	call	_lcdWriteString	;wreg free
  2327  0046E4                     
  2328                           ;fs_menu_controller.c: 317:     timer_value.remainingSecond = 0;
  2329  0046E4  0E00               	movlw	0
  2330  0046E6  0101               	movlb	1	; () banked
  2331  0046E8  6F91               	movwf	(_timer_value+2)& (0+255),b
  2332  0046EA                     
  2333                           ; BSR set to: 1
  2334                           ;fs_menu_controller.c: 318:     timer_value.remainingMinute = 0;
  2335  0046EA  0E00               	movlw	0
  2336  0046EC  6F92               	movwf	(_timer_value+3)& (0+255),b
  2337  0046EE                     
  2338                           ; BSR set to: 1
  2339                           ;fs_menu_controller.c: 320:     lcdSetCursor(2,1);
  2340  0046EE  0E01               	movlw	1
  2341  0046F0  6E04               	movwf	lcdSetCursor@b^0,c
  2342  0046F2  0E02               	movlw	2
  2343  0046F4  EC34  F028         	call	_lcdSetCursor
  2344  0046F8                     
  2345                           ;fs_menu_controller.c: 321:     sprintf(textCursor2,"      %d:%d    ",timer_value.remain
      +                          ingMinute,timer_value.remainingSecond);
  2346  0046F8  0EE1               	movlw	low stopMenu@textCursor2
  2347  0046FA  0100               	movlb	0	; () banked
  2348  0046FC  6FCF               	movwf	sprintf@s& (0+255),b
  2349  0046FE  0E00               	movlw	high stopMenu@textCursor2
  2350  004700  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2351  004702  0EA1               	movlw	low STR_6
  2352  004704  6FD1               	movwf	sprintf@fmt& (0+255),b
  2353  004706  0E7F               	movlw	high STR_6
  2354  004708  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2355  00470A  0101               	movlb	1	; () banked
  2356  00470C  5192               	movf	(_timer_value+3)& (0+255),w,b
  2357  00470E  0100               	movlb	0	; () banked
  2358  004710  6FD3               	movwf	(?_sprintf+4)& (0+255),b
  2359  004712  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  2360  004714  BFD3               	btfsc	(?_sprintf+4)& (0+255),7,b
  2361  004716  07D4               	decf	(?_sprintf+5)& (0+255),f,b
  2362  004718  C191  F0D5         	movff	_timer_value+2,?_sprintf+6
  2363  00471C  6BD6               	clrf	(?_sprintf+7)& (0+255),b
  2364  00471E  EC1C  F029         	call	_sprintf	;wreg free
  2365  004722                     
  2366                           ;fs_menu_controller.c: 322:     lcdWriteString(textCursor2);
  2367  004722  0EE1               	movlw	low stopMenu@textCursor2
  2368  004724  6E05               	movwf	lcdWriteString@a^0,c
  2369  004726  0E00               	movlw	high stopMenu@textCursor2
  2370  004728  6E06               	movwf	(lcdWriteString@a+1)^0,c
  2371  00472A  ECD6  F026         	call	_lcdWriteString	;wreg free
  2372  00472E                     
  2373                           ;fs_menu_controller.c: 324:     if (menu_flags.menu_start_flag == 1)
  2374  00472E  0101               	movlb	1	; () banked
  2375  004730  0598               	decf	(_menu_flags+1)& (0+255),w,b
  2376  004732  A4D8               	btfss	status,2,c
  2377  004734  EF9E  F023         	goto	u7321
  2378  004738  EFA0  F023         	goto	u7320
  2379  00473C                     u7321:
  2380  00473C  EFB0  F023         	goto	l6173
  2381  004740                     u7320:
  2382  004740                     
  2383                           ; BSR set to: 1
  2384                           ;fs_menu_controller.c: 325:     {;fs_menu_controller.c: 326:         menu_flags.menu_sta
      +                          rt_flag = 0;
  2385  004740  0E00               	movlw	0
  2386  004742  6F98               	movwf	(_menu_flags+1)& (0+255),b
  2387                           
  2388                           ;fs_menu_controller.c: 327:         menu_selected = START_MENU;
  2389  004744  0E05               	movlw	5
  2390  004746  0100               	movlb	0	; () banked
  2391  004748  6FFB               	movwf	_menu_selected& (0+255),b
  2392                           
  2393                           ;fs_menu_controller.c: 329:         startIsClick = 1;
  2394  00474A  0E01               	movlw	1
  2395  00474C  6FFE               	movwf	_startIsClick& (0+255),b
  2396                           
  2397                           ;fs_menu_controller.c: 330:         pauseIsClick = 0;
  2398  00474E  0E00               	movlw	0
  2399  004750  6FFF               	movwf	_pauseIsClick& (0+255),b
  2400                           
  2401                           ;fs_menu_controller.c: 331:         stopIsClick = 0;
  2402  004752  0E00               	movlw	0
  2403  004754  6FFD               	movwf	_stopIsClick& (0+255),b
  2404                           
  2405                           ;fs_menu_controller.c: 332:         timer_value.second = 0;
  2406  004756  0E00               	movlw	0
  2407  004758  0101               	movlb	1	; () banked
  2408  00475A  6F8F               	movwf	_timer_value& (0+255),b
  2409                           
  2410                           ;fs_menu_controller.c: 333:         timer_value.minute = 0;
  2411  00475C  0E00               	movlw	0
  2412  00475E  6F90               	movwf	(_timer_value+1)& (0+255),b
  2413  004760                     l6173:
  2414                           
  2415                           ; BSR set to: 1
  2416                           ;fs_menu_controller.c: 336:     if ( timer_value.menu_login_delay == 100)
  2417  004760  0E64               	movlw	100
  2418  004762  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  2419  004764  A4D8               	btfss	status,2,c
  2420  004766  EFB7  F023         	goto	u7331
  2421  00476A  EFB9  F023         	goto	u7330
  2422  00476E                     u7331:
  2423  00476E  EFC0  F023         	goto	l465
  2424  004772                     u7330:
  2425  004772                     
  2426                           ; BSR set to: 1
  2427                           ;fs_menu_controller.c: 337:     {;fs_menu_controller.c: 338:         button_bounce_contr
      +                          oller.menu = 0;
  2428  004772  0E00               	movlw	0
  2429  004774  6F9D               	movwf	_button_bounce_controller& (0+255),b
  2430                           
  2431                           ;fs_menu_controller.c: 339:         timer_value.menu_login_delay = 0;
  2432  004776  0E00               	movlw	0
  2433  004778  6F93               	movwf	(_timer_value+4)& (0+255),b
  2434                           
  2435                           ;fs_menu_controller.c: 340:         menu_selected = DRIVER_TIME_SETTING;
  2436  00477A  0E01               	movlw	1
  2437  00477C  0100               	movlb	0	; () banked
  2438  00477E  6FFB               	movwf	_menu_selected& (0+255),b
  2439  004780                     l465:
  2440  004780  0012               	return		;funcret
  2441  004782                     __end_of_stopMenu:
  2442                           	callstack 0
  2443                           
  2444 ;; *************** function _startMenu *****************
  2445 ;; Defined at:
  2446 ;;		line 407 in file "fs_menu_controller.c"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;		None
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;		None
  2451 ;; Return value:  Size  Location     Type
  2452 ;;                  1    wreg      void 
  2453 ;; Registers used:
  2454 ;;		wreg, status,2
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2460 ;;      Params:         0       0       0       0       0       0       0
  2461 ;;      Locals:         0       0       0       0       0       0       0
  2462 ;;      Temps:          0       0       0       0       0       0       0
  2463 ;;      Totals:         0       0       0       0       0       0       0
  2464 ;;Total ram usage:        0 bytes
  2465 ;; Hardware stack levels used:    1
  2466 ;; Hardware stack levels required when called:    1
  2467 ;; This function calls:
  2468 ;;		Nothing
  2469 ;; This function is called by:
  2470 ;;		_stateMachine
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474                           	psect	text6
  2475  00578A                     __ptext6:
  2476                           	callstack 0
  2477  00578A                     _startMenu:
  2478                           	callstack 27
  2479  00578A                     
  2480                           ;fs_menu_controller.c: 409:     timer_value.remainingMinute = menu_value.driver_time;
  2481  00578A  C0F3  F192         	movff	_menu_value,_timer_value+3
  2482  00578E                     
  2483                           ;fs_menu_controller.c: 410:     timer_value.remainingSecond = 0;
  2484  00578E  0E00               	movlw	0
  2485  005790  0101               	movlb	1	; () banked
  2486  005792  6F91               	movwf	(_timer_value+2)& (0+255),b
  2487                           
  2488                           ;fs_menu_controller.c: 411:     startIsClick = 1;
  2489  005794  0E01               	movlw	1
  2490  005796  0100               	movlb	0	; () banked
  2491  005798  6FFE               	movwf	_startIsClick& (0+255),b
  2492                           
  2493                           ;fs_menu_controller.c: 412:     stopIsClick = 0;
  2494  00579A  0E00               	movlw	0
  2495  00579C  6FFD               	movwf	_stopIsClick& (0+255),b
  2496                           
  2497                           ;fs_menu_controller.c: 413:     menu_selected = MAIN_MENU;
  2498  00579E  0E00               	movlw	0
  2499  0057A0  6FFB               	movwf	_menu_selected& (0+255),b
  2500  0057A2                     
  2501                           ; BSR set to: 0
  2502  0057A2  0012               	return		;funcret
  2503  0057A4                     __end_of_startMenu:
  2504                           	callstack 0
  2505                           
  2506 ;; *************** function _speedLimitSettingMenu *****************
  2507 ;; Defined at:
  2508 ;;		line 495 in file "fs_menu_controller.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;		None
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  1    wreg      void 
  2515 ;; Registers used:
  2516 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2522 ;;      Params:         0       0       0       0       0       0       0
  2523 ;;      Locals:         0      16       0       0       0       0       0
  2524 ;;      Temps:          0       0       0       0       0       0       0
  2525 ;;      Totals:         0      16       0       0       0       0       0
  2526 ;;Total ram usage:       16 bytes
  2527 ;; Hardware stack levels used:    1
  2528 ;; Hardware stack levels required when called:    9
  2529 ;; This function calls:
  2530 ;;		_eepromWrite
  2531 ;;		_lcdSetCursor
  2532 ;;		_lcdWriteString
  2533 ;;		_sprintf
  2534 ;;		_stopMotor
  2535 ;; This function is called by:
  2536 ;;		_stateMachine
  2537 ;; This function uses a non-reentrant model
  2538 ;;
  2539                           
  2540                           	psect	text7
  2541  0041CA                     __ptext7:
  2542                           	callstack 0
  2543  0041CA                     _speedLimitSettingMenu:
  2544                           	callstack 19
  2545  0041CA                     
  2546                           ;fs_menu_controller.c: 497:     char textCursor2[16] = {0};
  2547  0041CA  EE20  F0E1         	lfsr	2,speedLimitSettingMenu@textCursor2
  2548  0041CE  0E0F               	movlw	15
  2549  0041D0                     u7241:
  2550  0041D0  6ADE               	clrf	postinc2,c
  2551  0041D2  06E8               	decf	wreg,f,c
  2552  0041D4  E2FD               	bc	u7241
  2553  0041D6                     
  2554                           ;fs_menu_controller.c: 498:     stopMotor();
  2555  0041D6  EC77  F02A         	call	_stopMotor	;wreg free
  2556  0041DA                     
  2557                           ;fs_menu_controller.c: 500:     if (menu_flags.menu_input_flag == 1)
  2558  0041DA  0101               	movlb	1	; () banked
  2559  0041DC  0597               	decf	_menu_flags& (0+255),w,b
  2560  0041DE  A4D8               	btfss	status,2,c
  2561  0041E0  EFF4  F020         	goto	u7251
  2562  0041E4  EFF6  F020         	goto	u7250
  2563  0041E8                     u7251:
  2564  0041E8  EFFB  F020         	goto	l6111
  2565  0041EC                     u7250:
  2566  0041EC                     
  2567                           ; BSR set to: 1
  2568                           ;fs_menu_controller.c: 501:     {;fs_menu_controller.c: 502:         menu_flags.menu_inp
      +                          ut_flag = 0;
  2569  0041EC  0E00               	movlw	0
  2570  0041EE  6F97               	movwf	_menu_flags& (0+255),b
  2571                           
  2572                           ;fs_menu_controller.c: 503:         menu_selected = DRIVER_TIME_SETTING;
  2573  0041F0  0E01               	movlw	1
  2574  0041F2  0100               	movlb	0	; () banked
  2575  0041F4  6FFB               	movwf	_menu_selected& (0+255),b
  2576  0041F6                     l6111:
  2577                           
  2578                           ;fs_menu_controller.c: 506:     if ((menu_flags.menu_increase_flag == 1) && (menu_value.
      +                          speed_limit < 5))
  2579  0041F6  0101               	movlb	1	; () banked
  2580  0041F8  059B               	decf	(_menu_flags+4)& (0+255),w,b
  2581  0041FA  A4D8               	btfss	status,2,c
  2582  0041FC  EF02  F021         	goto	u7261
  2583  004200  EF04  F021         	goto	u7260
  2584  004204                     u7261:
  2585  004204  EF17  F021         	goto	l6121
  2586  004208                     u7260:
  2587  004208                     
  2588                           ; BSR set to: 1
  2589  004208  0E05               	movlw	5
  2590  00420A  0100               	movlb	0	; () banked
  2591  00420C  61F5               	cpfslt	(_menu_value+2)& (0+255),b
  2592  00420E  EF0B  F021         	goto	u7271
  2593  004212  EF0D  F021         	goto	u7270
  2594  004216                     u7271:
  2595  004216  EF17  F021         	goto	l6121
  2596  00421A                     u7270:
  2597  00421A                     
  2598                           ; BSR set to: 0
  2599                           ;fs_menu_controller.c: 507:     {;fs_menu_controller.c: 508:         menu_flags.menu_inc
      +                          rease_flag = 0;
  2600  00421A  0E00               	movlw	0
  2601  00421C  0101               	movlb	1	; () banked
  2602  00421E  6F9B               	movwf	(_menu_flags+4)& (0+255),b
  2603  004220                     
  2604                           ; BSR set to: 1
  2605                           ;fs_menu_controller.c: 509:         menu_value.speed_limit += 1;
  2606  004220  0100               	movlb	0	; () banked
  2607  004222  2BF5               	incf	(_menu_value+2)& (0+255),f,b
  2608  004224                     
  2609                           ; BSR set to: 0
  2610                           ;fs_menu_controller.c: 510:         eepromWrite(0x02,menu_value.speed_limit);
  2611  004224  C0F5  F001         	movff	_menu_value+2,eepromWrite@data
  2612  004228  0E02               	movlw	2
  2613  00422A  EC55  F02B         	call	_eepromWrite
  2614  00422E                     l6121:
  2615                           
  2616                           ;fs_menu_controller.c: 513:     if ((menu_flags.menu_decrease_flag == 1) && (menu_value.
      +                          speed_limit > 1))
  2617  00422E  0101               	movlb	1	; () banked
  2618  004230  059C               	decf	(_menu_flags+5)& (0+255),w,b
  2619  004232  A4D8               	btfss	status,2,c
  2620  004234  EF1E  F021         	goto	u7281
  2621  004238  EF20  F021         	goto	u7280
  2622  00423C                     u7281:
  2623  00423C  EF33  F021         	goto	l6131
  2624  004240                     u7280:
  2625  004240                     
  2626                           ; BSR set to: 1
  2627  004240  0E01               	movlw	1
  2628  004242  0100               	movlb	0	; () banked
  2629  004244  65F5               	cpfsgt	(_menu_value+2)& (0+255),b
  2630  004246  EF27  F021         	goto	u7291
  2631  00424A  EF29  F021         	goto	u7290
  2632  00424E                     u7291:
  2633  00424E  EF33  F021         	goto	l6131
  2634  004252                     u7290:
  2635  004252                     
  2636                           ; BSR set to: 0
  2637                           ;fs_menu_controller.c: 514:     {;fs_menu_controller.c: 515:          menu_flags.menu_de
      +                          crease_flag = 0;
  2638  004252  0E00               	movlw	0
  2639  004254  0101               	movlb	1	; () banked
  2640  004256  6F9C               	movwf	(_menu_flags+5)& (0+255),b
  2641  004258                     
  2642                           ; BSR set to: 1
  2643                           ;fs_menu_controller.c: 516:          menu_value.speed_limit -= 1;
  2644  004258  0100               	movlb	0	; () banked
  2645  00425A  07F5               	decf	(_menu_value+2)& (0+255),f,b
  2646  00425C                     
  2647                           ; BSR set to: 0
  2648                           ;fs_menu_controller.c: 517:          eepromWrite(0x02,menu_value.speed_limit);
  2649  00425C  C0F5  F001         	movff	_menu_value+2,eepromWrite@data
  2650  004260  0E02               	movlw	2
  2651  004262  EC55  F02B         	call	_eepromWrite
  2652  004266                     l6131:
  2653                           
  2654                           ;fs_menu_controller.c: 519:     lcdSetCursor(1,1);
  2655  004266  0E01               	movlw	1
  2656  004268  6E04               	movwf	lcdSetCursor@b^0,c
  2657  00426A  0E01               	movlw	1
  2658  00426C  EC34  F028         	call	_lcdSetCursor
  2659  004270                     
  2660                           ;fs_menu_controller.c: 520:     lcdWriteString("HIZ LiMiTi      ");
  2661  004270  0E1A               	movlw	low STR_13
  2662  004272  6E05               	movwf	lcdWriteString@a^0,c
  2663  004274  0E7F               	movlw	high STR_13
  2664  004276  6E06               	movwf	(lcdWriteString@a+1)^0,c
  2665  004278  ECD6  F026         	call	_lcdWriteString	;wreg free
  2666  00427C                     
  2667                           ;fs_menu_controller.c: 521:     lcdSetCursor(2,1);
  2668  00427C  0E01               	movlw	1
  2669  00427E  6E04               	movwf	lcdSetCursor@b^0,c
  2670  004280  0E02               	movlw	2
  2671  004282  EC34  F028         	call	_lcdSetCursor
  2672  004286                     
  2673                           ;fs_menu_controller.c: 522:     sprintf(textCursor2,"%d               ",menu_value.speed
      +                          _limit);
  2674  004286  0EE1               	movlw	low speedLimitSettingMenu@textCursor2
  2675  004288  0100               	movlb	0	; () banked
  2676  00428A  6FCF               	movwf	sprintf@s& (0+255),b
  2677  00428C  0E00               	movlw	high speedLimitSettingMenu@textCursor2
  2678  00428E  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2679  004290  0EF7               	movlw	low STR_14
  2680  004292  6FD1               	movwf	sprintf@fmt& (0+255),b
  2681  004294  0E7E               	movlw	high STR_14
  2682  004296  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2683  004298  C0F5  F0D3         	movff	_menu_value+2,?_sprintf+4
  2684  00429C  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  2685  00429E  EC1C  F029         	call	_sprintf	;wreg free
  2686  0042A2                     
  2687                           ;fs_menu_controller.c: 523:     lcdWriteString(textCursor2);
  2688  0042A2  0EE1               	movlw	low speedLimitSettingMenu@textCursor2
  2689  0042A4  6E05               	movwf	lcdWriteString@a^0,c
  2690  0042A6  0E00               	movlw	high speedLimitSettingMenu@textCursor2
  2691  0042A8  6E06               	movwf	(lcdWriteString@a+1)^0,c
  2692  0042AA  ECD6  F026         	call	_lcdWriteString	;wreg free
  2693  0042AE                     
  2694                           ;fs_menu_controller.c: 525:     if(timer_value.menu_login_delay == 100)
  2695  0042AE  0E64               	movlw	100
  2696  0042B0  0101               	movlb	1	; () banked
  2697  0042B2  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  2698  0042B4  A4D8               	btfss	status,2,c
  2699  0042B6  EF5F  F021         	goto	u7301
  2700  0042BA  EF61  F021         	goto	u7300
  2701  0042BE                     u7301:
  2702  0042BE  EF68  F021         	goto	l500
  2703  0042C2                     u7300:
  2704  0042C2                     
  2705                           ; BSR set to: 1
  2706                           ;fs_menu_controller.c: 526:     {;fs_menu_controller.c: 527:         button_bounce_contr
      +                          oller.menu = 0;
  2707  0042C2  0E00               	movlw	0
  2708  0042C4  6F9D               	movwf	_button_bounce_controller& (0+255),b
  2709                           
  2710                           ;fs_menu_controller.c: 528:         timer_value.menu_login_delay = 0;
  2711  0042C6  0E00               	movlw	0
  2712  0042C8  6F93               	movwf	(_timer_value+4)& (0+255),b
  2713                           
  2714                           ;fs_menu_controller.c: 529:         menu_selected = PAUSE_MENU;
  2715  0042CA  0E06               	movlw	6
  2716  0042CC  0100               	movlb	0	; () banked
  2717  0042CE  6FFB               	movwf	_menu_selected& (0+255),b
  2718  0042D0                     l500:
  2719  0042D0  0012               	return		;funcret
  2720  0042D2                     __end_of_speedLimitSettingMenu:
  2721                           	callstack 0
  2722                           
  2723 ;; *************** function _secretMenu *****************
  2724 ;; Defined at:
  2725 ;;		line 422 in file "fs_menu_controller.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;		None
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  2730 ;; Return value:  Size  Location     Type
  2731 ;;                  1    wreg      void 
  2732 ;; Registers used:
  2733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2734 ;; Tracked objects:
  2735 ;;		On entry : 0/0
  2736 ;;		On exit  : 0/0
  2737 ;;		Unchanged: 0/0
  2738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2739 ;;      Params:         0       0       0       0       0       0       0
  2740 ;;      Locals:         0      16       0       0       0       0       0
  2741 ;;      Temps:          0       0       0       0       0       0       0
  2742 ;;      Totals:         0      16       0       0       0       0       0
  2743 ;;Total ram usage:       16 bytes
  2744 ;; Hardware stack levels used:    1
  2745 ;; Hardware stack levels required when called:    9
  2746 ;; This function calls:
  2747 ;;		___fladd
  2748 ;;		___flge
  2749 ;;		___flsub
  2750 ;;		_lcdSetCursor
  2751 ;;		_lcdWriteString
  2752 ;;		_sprintf
  2753 ;;		_stopMotor
  2754 ;; This function is called by:
  2755 ;;		_stateMachine
  2756 ;; This function uses a non-reentrant model
  2757 ;;
  2758                           
  2759                           	psect	text8
  2760  002CF4                     __ptext8:
  2761                           	callstack 0
  2762  002CF4                     _secretMenu:
  2763                           	callstack 19
  2764  002CF4                     
  2765                           ;fs_menu_controller.c: 424:     char textCursor2[16] = {0};
  2766  002CF4  EE20  F0E1         	lfsr	2,secretMenu@textCursor2
  2767  002CF8  0E0F               	movlw	15
  2768  002CFA                     u7431:
  2769  002CFA  6ADE               	clrf	postinc2,c
  2770  002CFC  06E8               	decf	wreg,f,c
  2771  002CFE  E2FD               	bc	u7431
  2772  002D00                     
  2773                           ;fs_menu_controller.c: 426:     stopMotor();
  2774  002D00  EC77  F02A         	call	_stopMotor	;wreg free
  2775  002D04                     
  2776                           ;fs_menu_controller.c: 428:     if (menu_flags.menu_input_flag == 1)
  2777  002D04  0101               	movlb	1	; () banked
  2778  002D06  0597               	decf	_menu_flags& (0+255),w,b
  2779  002D08  A4D8               	btfss	status,2,c
  2780  002D0A  EF89  F016         	goto	u7441
  2781  002D0E  EF8B  F016         	goto	u7440
  2782  002D12                     u7441:
  2783  002D12  EF99  F016         	goto	l6235
  2784  002D16                     u7440:
  2785  002D16                     
  2786                           ; BSR set to: 1
  2787                           ;fs_menu_controller.c: 429:     {;fs_menu_controller.c: 430:         menu_flags.menu_inp
      +                          ut_flag = 0;
  2788  002D16  0E00               	movlw	0
  2789  002D18  6F97               	movwf	_menu_flags& (0+255),b
  2790  002D1A                     
  2791                           ; BSR set to: 1
  2792                           ;fs_menu_controller.c: 431:         secretMenuCounter++;
  2793  002D1A  0100               	movlb	0	; () banked
  2794  002D1C  2BFC               	incf	_secretMenuCounter& (0+255),f,b
  2795  002D1E                     
  2796                           ; BSR set to: 0
  2797                           ;fs_menu_controller.c: 433:         if (secretMenuCounter >2)
  2798  002D1E  0E02               	movlw	2
  2799  002D20  65FC               	cpfsgt	_secretMenuCounter& (0+255),b
  2800  002D22  EF95  F016         	goto	u7451
  2801  002D26  EF97  F016         	goto	u7450
  2802  002D2A                     u7451:
  2803  002D2A  EF99  F016         	goto	l6235
  2804  002D2E                     u7450:
  2805  002D2E                     
  2806                           ; BSR set to: 0
  2807                           ;fs_menu_controller.c: 434:         {;fs_menu_controller.c: 435:             secretMenuC
      +                          ounter = 1;
  2808  002D2E  0E01               	movlw	1
  2809  002D30  6FFC               	movwf	_secretMenuCounter& (0+255),b
  2810  002D32                     l6235:
  2811                           
  2812                           ;fs_menu_controller.c: 439:     if (secretMenuCounter == 1)
  2813  002D32  0100               	movlb	0	; () banked
  2814  002D34  05FC               	decf	_secretMenuCounter& (0+255),w,b
  2815  002D36  A4D8               	btfss	status,2,c
  2816  002D38  EFA0  F016         	goto	u7461
  2817  002D3C  EFA2  F016         	goto	u7460
  2818  002D40                     u7461:
  2819  002D40  EF36  F017         	goto	l6263
  2820  002D44                     u7460:
  2821  002D44                     
  2822                           ; BSR set to: 0
  2823                           ;fs_menu_controller.c: 440:     {;fs_menu_controller.c: 441:         lcdSetCursor(1,1);
  2824  002D44  0E01               	movlw	1
  2825  002D46  6E04               	movwf	lcdSetCursor@b^0,c
  2826  002D48  0E01               	movlw	1
  2827  002D4A  EC34  F028         	call	_lcdSetCursor
  2828  002D4E                     
  2829                           ;fs_menu_controller.c: 442:         lcdWriteString("PID PARAM       ");
  2830  002D4E  0E09               	movlw	low STR_9
  2831  002D50  6E05               	movwf	lcdWriteString@a^0,c
  2832  002D52  0E7F               	movlw	high STR_9
  2833  002D54  6E06               	movwf	(lcdWriteString@a+1)^0,c
  2834  002D56  ECD6  F026         	call	_lcdWriteString	;wreg free
  2835  002D5A                     
  2836                           ;fs_menu_controller.c: 443:         lcdSetCursor(2,1);
  2837  002D5A  0E01               	movlw	1
  2838  002D5C  6E04               	movwf	lcdSetCursor@b^0,c
  2839  002D5E  0E02               	movlw	2
  2840  002D60  EC34  F028         	call	_lcdSetCursor
  2841  002D64                     
  2842                           ;fs_menu_controller.c: 444:         sprintf(textCursor2,"Kp:%5.1f     ",KP);
  2843  002D64  0EE1               	movlw	low secretMenu@textCursor2
  2844  002D66  0100               	movlb	0	; () banked
  2845  002D68  6FCF               	movwf	sprintf@s& (0+255),b
  2846  002D6A  0E00               	movlw	high secretMenu@textCursor2
  2847  002D6C  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2848  002D6E  0ED0               	movlw	low STR_10
  2849  002D70  6FD1               	movwf	sprintf@fmt& (0+255),b
  2850  002D72  0E7F               	movlw	high STR_10
  2851  002D74  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2852  002D76  C1CF  F0D3         	movff	_KP@fs_speed_controller$F1842,?_sprintf+4
  2853  002D7A  C1D0  F0D4         	movff	_KP@fs_speed_controller$F1842+1,?_sprintf+5
  2854  002D7E  C1D1  F0D5         	movff	_KP@fs_speed_controller$F1842+2,?_sprintf+6
  2855  002D82  C1D2  F0D6         	movff	_KP@fs_speed_controller$F1842+3,?_sprintf+7
  2856  002D86  EC1C  F029         	call	_sprintf	;wreg free
  2857  002D8A                     
  2858                           ;fs_menu_controller.c: 445:         lcdWriteString(textCursor2);
  2859  002D8A  0EE1               	movlw	low secretMenu@textCursor2
  2860  002D8C  6E05               	movwf	lcdWriteString@a^0,c
  2861  002D8E  0E00               	movlw	high secretMenu@textCursor2
  2862  002D90  6E06               	movwf	(lcdWriteString@a+1)^0,c
  2863  002D92  ECD6  F026         	call	_lcdWriteString	;wreg free
  2864  002D96                     
  2865                           ;fs_menu_controller.c: 447:         if ((menu_flags.menu_increase_flag == 1) && (KP < 2.
      +                          5))
  2866  002D96  0101               	movlb	1	; () banked
  2867  002D98  059B               	decf	(_menu_flags+4)& (0+255),w,b
  2868  002D9A  A4D8               	btfss	status,2,c
  2869  002D9C  EFD2  F016         	goto	u7471
  2870  002DA0  EFD4  F016         	goto	u7470
  2871  002DA4                     u7471:
  2872  002DA4  EF0A  F017         	goto	l6255
  2873  002DA8                     u7470:
  2874  002DA8                     
  2875                           ; BSR set to: 1
  2876  002DA8  C1CF  F035         	movff	_KP@fs_speed_controller$F1842,___flge@ff1
  2877  002DAC  C1D0  F036         	movff	_KP@fs_speed_controller$F1842+1,___flge@ff1+1
  2878  002DB0  C1D1  F037         	movff	_KP@fs_speed_controller$F1842+2,___flge@ff1+2
  2879  002DB4  C1D2  F038         	movff	_KP@fs_speed_controller$F1842+3,___flge@ff1+3
  2880  002DB8  0E00               	movlw	0
  2881  002DBA  6E39               	movwf	___flge@ff2^0,c
  2882  002DBC  0E00               	movlw	0
  2883  002DBE  6E3A               	movwf	(___flge@ff2+1)^0,c
  2884  002DC0  0E20               	movlw	32
  2885  002DC2  6E3B               	movwf	(___flge@ff2+2)^0,c
  2886  002DC4  0E40               	movlw	64
  2887  002DC6  6E3C               	movwf	(___flge@ff2+3)^0,c
  2888  002DC8  ECEC  F021         	call	___flge	;wreg free
  2889  002DCC  B0D8               	btfsc	status,0,c
  2890  002DCE  EFEB  F016         	goto	u7481
  2891  002DD2  EFED  F016         	goto	u7480
  2892  002DD6                     u7481:
  2893  002DD6  EF0A  F017         	goto	l6255
  2894  002DDA                     u7480:
  2895  002DDA                     
  2896                           ;fs_menu_controller.c: 448:         {;fs_menu_controller.c: 449:             menu_flags.
      +                          menu_increase_flag = 0;
  2897  002DDA  0E00               	movlw	0
  2898  002DDC  0101               	movlb	1	; () banked
  2899  002DDE  6F9B               	movwf	(_menu_flags+4)& (0+255),b
  2900  002DE0                     
  2901                           ; BSR set to: 1
  2902                           ;fs_menu_controller.c: 450:             KP += 0.1;
  2903  002DE0  C1CF  F035         	movff	_KP@fs_speed_controller$F1842,___fladd@b
  2904  002DE4  C1D0  F036         	movff	_KP@fs_speed_controller$F1842+1,___fladd@b+1
  2905  002DE8  C1D1  F037         	movff	_KP@fs_speed_controller$F1842+2,___fladd@b+2
  2906  002DEC  C1D2  F038         	movff	_KP@fs_speed_controller$F1842+3,___fladd@b+3
  2907  002DF0  0ECD               	movlw	205
  2908  002DF2  6E39               	movwf	___fladd@a^0,c
  2909  002DF4  0ECC               	movlw	204
  2910  002DF6  6E3A               	movwf	(___fladd@a+1)^0,c
  2911  002DF8  0ECC               	movlw	204
  2912  002DFA  6E3B               	movwf	(___fladd@a+2)^0,c
  2913  002DFC  0E3D               	movlw	61
  2914  002DFE  6E3C               	movwf	(___fladd@a+3)^0,c
  2915  002E00  EC53  F00D         	call	___fladd	;wreg free
  2916  002E04  C035  F1CF         	movff	?___fladd,_KP@fs_speed_controller$F1842
  2917  002E08  C036  F1D0         	movff	?___fladd+1,_KP@fs_speed_controller$F1842+1
  2918  002E0C  C037  F1D1         	movff	?___fladd+2,_KP@fs_speed_controller$F1842+2
  2919  002E10  C038  F1D2         	movff	?___fladd+3,_KP@fs_speed_controller$F1842+3
  2920  002E14                     l6255:
  2921                           
  2922                           ;fs_menu_controller.c: 453:         if ((menu_flags.menu_decrease_flag == 1) && (KP >= 0
      +                          ))
  2923  002E14  0101               	movlb	1	; () banked
  2924  002E16  059C               	decf	(_menu_flags+5)& (0+255),w,b
  2925  002E18  A4D8               	btfss	status,2,c
  2926  002E1A  EF11  F017         	goto	u7491
  2927  002E1E  EF13  F017         	goto	u7490
  2928  002E22                     u7491:
  2929  002E22  EF36  F017         	goto	l6263
  2930  002E26                     u7490:
  2931  002E26                     
  2932                           ; BSR set to: 1
  2933  002E26  BFD2               	btfsc	(_KP@fs_speed_controller$F1842+3)& (0+255),7,b
  2934  002E28  EF18  F017         	goto	u7501
  2935  002E2C  EF1A  F017         	goto	u7500
  2936  002E30                     u7501:
  2937  002E30  EF36  F017         	goto	l6263
  2938  002E34                     u7500:
  2939  002E34                     
  2940                           ; BSR set to: 1
  2941                           ;fs_menu_controller.c: 454:         {;fs_menu_controller.c: 455:             menu_flags.
      +                          menu_decrease_flag = 0;
  2942  002E34  0E00               	movlw	0
  2943  002E36  6F9C               	movwf	(_menu_flags+5)& (0+255),b
  2944  002E38                     
  2945                           ; BSR set to: 1
  2946                           ;fs_menu_controller.c: 456:              KP -= 0.1;
  2947  002E38  C1CF  F045         	movff	_KP@fs_speed_controller$F1842,___flsub@b
  2948  002E3C  C1D0  F046         	movff	_KP@fs_speed_controller$F1842+1,___flsub@b+1
  2949  002E40  C1D1  F047         	movff	_KP@fs_speed_controller$F1842+2,___flsub@b+2
  2950  002E44  C1D2  F048         	movff	_KP@fs_speed_controller$F1842+3,___flsub@b+3
  2951  002E48  0ECD               	movlw	205
  2952  002E4A  6E49               	movwf	___flsub@a^0,c
  2953  002E4C  0ECC               	movlw	204
  2954  002E4E  6E4A               	movwf	(___flsub@a+1)^0,c
  2955  002E50  0ECC               	movlw	204
  2956  002E52  6E4B               	movwf	(___flsub@a+2)^0,c
  2957  002E54  0E3D               	movlw	61
  2958  002E56  6E4C               	movwf	(___flsub@a+3)^0,c
  2959  002E58  EC93  F029         	call	___flsub	;wreg free
  2960  002E5C  C045  F1CF         	movff	?___flsub,_KP@fs_speed_controller$F1842
  2961  002E60  C046  F1D0         	movff	?___flsub+1,_KP@fs_speed_controller$F1842+1
  2962  002E64  C047  F1D1         	movff	?___flsub+2,_KP@fs_speed_controller$F1842+2
  2963  002E68  C048  F1D2         	movff	?___flsub+3,_KP@fs_speed_controller$F1842+3
  2964  002E6C                     l6263:
  2965                           
  2966                           ;fs_menu_controller.c: 460:     if (secretMenuCounter == 2)
  2967  002E6C  0E02               	movlw	2
  2968  002E6E  0100               	movlb	0	; () banked
  2969  002E70  19FC               	xorwf	_secretMenuCounter& (0+255),w,b
  2970  002E72  A4D8               	btfss	status,2,c
  2971  002E74  EF3E  F017         	goto	u7511
  2972  002E78  EF40  F017         	goto	u7510
  2973  002E7C                     u7511:
  2974  002E7C  EFD4  F017         	goto	l6291
  2975  002E80                     u7510:
  2976  002E80                     
  2977                           ; BSR set to: 0
  2978                           ;fs_menu_controller.c: 461:     {;fs_menu_controller.c: 462:         lcdSetCursor(1,1);
  2979  002E80  0E01               	movlw	1
  2980  002E82  6E04               	movwf	lcdSetCursor@b^0,c
  2981  002E84  0E01               	movlw	1
  2982  002E86  EC34  F028         	call	_lcdSetCursor
  2983  002E8A                     
  2984                           ;fs_menu_controller.c: 463:         lcdWriteString("PID PARAM       ");
  2985  002E8A  0E09               	movlw	low STR_9
  2986  002E8C  6E05               	movwf	lcdWriteString@a^0,c
  2987  002E8E  0E7F               	movlw	high STR_9
  2988  002E90  6E06               	movwf	(lcdWriteString@a+1)^0,c
  2989  002E92  ECD6  F026         	call	_lcdWriteString	;wreg free
  2990  002E96                     
  2991                           ;fs_menu_controller.c: 464:         lcdSetCursor(2,1);
  2992  002E96  0E01               	movlw	1
  2993  002E98  6E04               	movwf	lcdSetCursor@b^0,c
  2994  002E9A  0E02               	movlw	2
  2995  002E9C  EC34  F028         	call	_lcdSetCursor
  2996  002EA0                     
  2997                           ;fs_menu_controller.c: 465:         sprintf(textCursor2,"Kd:%5.1f    ",KD);
  2998  002EA0  0EE1               	movlw	low secretMenu@textCursor2
  2999  002EA2  0100               	movlb	0	; () banked
  3000  002EA4  6FCF               	movwf	sprintf@s& (0+255),b
  3001  002EA6  0E00               	movlw	high secretMenu@textCursor2
  3002  002EA8  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3003  002EAA  0EDE               	movlw	low STR_12
  3004  002EAC  6FD1               	movwf	sprintf@fmt& (0+255),b
  3005  002EAE  0E7F               	movlw	high STR_12
  3006  002EB0  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3007  002EB2  C1CB  F0D3         	movff	_KD@fs_speed_controller$F1843,?_sprintf+4
  3008  002EB6  C1CC  F0D4         	movff	_KD@fs_speed_controller$F1843+1,?_sprintf+5
  3009  002EBA  C1CD  F0D5         	movff	_KD@fs_speed_controller$F1843+2,?_sprintf+6
  3010  002EBE  C1CE  F0D6         	movff	_KD@fs_speed_controller$F1843+3,?_sprintf+7
  3011  002EC2  EC1C  F029         	call	_sprintf	;wreg free
  3012  002EC6                     
  3013                           ;fs_menu_controller.c: 466:         lcdWriteString(textCursor2);
  3014  002EC6  0EE1               	movlw	low secretMenu@textCursor2
  3015  002EC8  6E05               	movwf	lcdWriteString@a^0,c
  3016  002ECA  0E00               	movlw	high secretMenu@textCursor2
  3017  002ECC  6E06               	movwf	(lcdWriteString@a+1)^0,c
  3018  002ECE  ECD6  F026         	call	_lcdWriteString	;wreg free
  3019  002ED2                     
  3020                           ;fs_menu_controller.c: 468:         if ((menu_flags.menu_increase_flag == 1) && (KD < 2.
      +                          5))
  3021  002ED2  0101               	movlb	1	; () banked
  3022  002ED4  059B               	decf	(_menu_flags+4)& (0+255),w,b
  3023  002ED6  A4D8               	btfss	status,2,c
  3024  002ED8  EF70  F017         	goto	u7521
  3025  002EDC  EF72  F017         	goto	u7520
  3026  002EE0                     u7521:
  3027  002EE0  EFA8  F017         	goto	l6283
  3028  002EE4                     u7520:
  3029  002EE4                     
  3030                           ; BSR set to: 1
  3031  002EE4  C1CB  F035         	movff	_KD@fs_speed_controller$F1843,___flge@ff1
  3032  002EE8  C1CC  F036         	movff	_KD@fs_speed_controller$F1843+1,___flge@ff1+1
  3033  002EEC  C1CD  F037         	movff	_KD@fs_speed_controller$F1843+2,___flge@ff1+2
  3034  002EF0  C1CE  F038         	movff	_KD@fs_speed_controller$F1843+3,___flge@ff1+3
  3035  002EF4  0E00               	movlw	0
  3036  002EF6  6E39               	movwf	___flge@ff2^0,c
  3037  002EF8  0E00               	movlw	0
  3038  002EFA  6E3A               	movwf	(___flge@ff2+1)^0,c
  3039  002EFC  0E20               	movlw	32
  3040  002EFE  6E3B               	movwf	(___flge@ff2+2)^0,c
  3041  002F00  0E40               	movlw	64
  3042  002F02  6E3C               	movwf	(___flge@ff2+3)^0,c
  3043  002F04  ECEC  F021         	call	___flge	;wreg free
  3044  002F08  B0D8               	btfsc	status,0,c
  3045  002F0A  EF89  F017         	goto	u7531
  3046  002F0E  EF8B  F017         	goto	u7530
  3047  002F12                     u7531:
  3048  002F12  EFA8  F017         	goto	l6283
  3049  002F16                     u7530:
  3050  002F16                     
  3051                           ;fs_menu_controller.c: 469:         {;fs_menu_controller.c: 470:             menu_flags.
      +                          menu_increase_flag = 0;
  3052  002F16  0E00               	movlw	0
  3053  002F18  0101               	movlb	1	; () banked
  3054  002F1A  6F9B               	movwf	(_menu_flags+4)& (0+255),b
  3055  002F1C                     
  3056                           ; BSR set to: 1
  3057                           ;fs_menu_controller.c: 471:             KD += 0.1;
  3058  002F1C  C1CB  F035         	movff	_KD@fs_speed_controller$F1843,___fladd@b
  3059  002F20  C1CC  F036         	movff	_KD@fs_speed_controller$F1843+1,___fladd@b+1
  3060  002F24  C1CD  F037         	movff	_KD@fs_speed_controller$F1843+2,___fladd@b+2
  3061  002F28  C1CE  F038         	movff	_KD@fs_speed_controller$F1843+3,___fladd@b+3
  3062  002F2C  0ECD               	movlw	205
  3063  002F2E  6E39               	movwf	___fladd@a^0,c
  3064  002F30  0ECC               	movlw	204
  3065  002F32  6E3A               	movwf	(___fladd@a+1)^0,c
  3066  002F34  0ECC               	movlw	204
  3067  002F36  6E3B               	movwf	(___fladd@a+2)^0,c
  3068  002F38  0E3D               	movlw	61
  3069  002F3A  6E3C               	movwf	(___fladd@a+3)^0,c
  3070  002F3C  EC53  F00D         	call	___fladd	;wreg free
  3071  002F40  C035  F1CB         	movff	?___fladd,_KD@fs_speed_controller$F1843
  3072  002F44  C036  F1CC         	movff	?___fladd+1,_KD@fs_speed_controller$F1843+1
  3073  002F48  C037  F1CD         	movff	?___fladd+2,_KD@fs_speed_controller$F1843+2
  3074  002F4C  C038  F1CE         	movff	?___fladd+3,_KD@fs_speed_controller$F1843+3
  3075  002F50                     l6283:
  3076                           
  3077                           ;fs_menu_controller.c: 474:         if ((menu_flags.menu_decrease_flag == 1) && (KD >= 0
      +                          ))
  3078  002F50  0101               	movlb	1	; () banked
  3079  002F52  059C               	decf	(_menu_flags+5)& (0+255),w,b
  3080  002F54  A4D8               	btfss	status,2,c
  3081  002F56  EFAF  F017         	goto	u7541
  3082  002F5A  EFB1  F017         	goto	u7540
  3083  002F5E                     u7541:
  3084  002F5E  EFD4  F017         	goto	l6291
  3085  002F62                     u7540:
  3086  002F62                     
  3087                           ; BSR set to: 1
  3088  002F62  BFCE               	btfsc	(_KD@fs_speed_controller$F1843+3)& (0+255),7,b
  3089  002F64  EFB6  F017         	goto	u7551
  3090  002F68  EFB8  F017         	goto	u7550
  3091  002F6C                     u7551:
  3092  002F6C  EFD4  F017         	goto	l6291
  3093  002F70                     u7550:
  3094  002F70                     
  3095                           ; BSR set to: 1
  3096                           ;fs_menu_controller.c: 475:         {;fs_menu_controller.c: 476:             menu_flags.
      +                          menu_decrease_flag = 0;
  3097  002F70  0E00               	movlw	0
  3098  002F72  6F9C               	movwf	(_menu_flags+5)& (0+255),b
  3099  002F74                     
  3100                           ; BSR set to: 1
  3101                           ;fs_menu_controller.c: 477:              KD -= 0.1;
  3102  002F74  C1CB  F045         	movff	_KD@fs_speed_controller$F1843,___flsub@b
  3103  002F78  C1CC  F046         	movff	_KD@fs_speed_controller$F1843+1,___flsub@b+1
  3104  002F7C  C1CD  F047         	movff	_KD@fs_speed_controller$F1843+2,___flsub@b+2
  3105  002F80  C1CE  F048         	movff	_KD@fs_speed_controller$F1843+3,___flsub@b+3
  3106  002F84  0ECD               	movlw	205
  3107  002F86  6E49               	movwf	___flsub@a^0,c
  3108  002F88  0ECC               	movlw	204
  3109  002F8A  6E4A               	movwf	(___flsub@a+1)^0,c
  3110  002F8C  0ECC               	movlw	204
  3111  002F8E  6E4B               	movwf	(___flsub@a+2)^0,c
  3112  002F90  0E3D               	movlw	61
  3113  002F92  6E4C               	movwf	(___flsub@a+3)^0,c
  3114  002F94  EC93  F029         	call	___flsub	;wreg free
  3115  002F98  C045  F1CB         	movff	?___flsub,_KD@fs_speed_controller$F1843
  3116  002F9C  C046  F1CC         	movff	?___flsub+1,_KD@fs_speed_controller$F1843+1
  3117  002FA0  C047  F1CD         	movff	?___flsub+2,_KD@fs_speed_controller$F1843+2
  3118  002FA4  C048  F1CE         	movff	?___flsub+3,_KD@fs_speed_controller$F1843+3
  3119  002FA8                     l6291:
  3120                           
  3121                           ;fs_menu_controller.c: 481:     if ( timer_value.menu_login_delay == 100)
  3122  002FA8  0E64               	movlw	100
  3123  002FAA  0101               	movlb	1	; () banked
  3124  002FAC  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  3125  002FAE  A4D8               	btfss	status,2,c
  3126  002FB0  EFDC  F017         	goto	u7561
  3127  002FB4  EFDE  F017         	goto	u7560
  3128  002FB8                     u7561:
  3129  002FB8  EFE5  F017         	goto	l491
  3130  002FBC                     u7560:
  3131  002FBC                     
  3132                           ; BSR set to: 1
  3133                           ;fs_menu_controller.c: 482:     {;fs_menu_controller.c: 483:         button_bounce_contr
      +                          oller.menu = 0;
  3134  002FBC  0E00               	movlw	0
  3135  002FBE  6F9D               	movwf	_button_bounce_controller& (0+255),b
  3136                           
  3137                           ;fs_menu_controller.c: 484:         timer_value.menu_login_delay = 0;
  3138  002FC0  0E00               	movlw	0
  3139  002FC2  6F93               	movwf	(_timer_value+4)& (0+255),b
  3140                           
  3141                           ;fs_menu_controller.c: 485:         menu_selected = PAUSE_MENU;
  3142  002FC4  0E06               	movlw	6
  3143  002FC6  0100               	movlb	0	; () banked
  3144  002FC8  6FFB               	movwf	_menu_selected& (0+255),b
  3145  002FCA                     l491:
  3146  002FCA  0012               	return		;funcret
  3147  002FCC                     __end_of_secretMenu:
  3148                           	callstack 0
  3149                           
  3150 ;; *************** function _pauseMenu *****************
  3151 ;; Defined at:
  3152 ;;		line 352 in file "fs_menu_controller.c"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;		None
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  1    wreg      void 
  3159 ;; Registers used:
  3160 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3166 ;;      Params:         0       0       0       0       0       0       0
  3167 ;;      Locals:         0      16       0       0       0       0       0
  3168 ;;      Temps:          0       0       0       0       0       0       0
  3169 ;;      Totals:         0      16       0       0       0       0       0
  3170 ;;Total ram usage:       16 bytes
  3171 ;; Hardware stack levels used:    1
  3172 ;; Hardware stack levels required when called:    9
  3173 ;; This function calls:
  3174 ;;		_lcdSetCursor
  3175 ;;		_lcdWriteString
  3176 ;;		_sprintf
  3177 ;;		_stopMotor
  3178 ;; This function is called by:
  3179 ;;		_stateMachine
  3180 ;; This function uses a non-reentrant model
  3181 ;;
  3182                           
  3183                           	psect	text9
  3184  003D38                     __ptext9:
  3185                           	callstack 0
  3186  003D38                     _pauseMenu:
  3187                           	callstack 19
  3188  003D38                     
  3189                           ;fs_menu_controller.c: 354:     char textCursor2[16] = {0};
  3190  003D38  EE20  F0E1         	lfsr	2,pauseMenu@textCursor2
  3191  003D3C  0E0F               	movlw	15
  3192  003D3E                     u7341:
  3193  003D3E  6ADE               	clrf	postinc2,c
  3194  003D40  06E8               	decf	wreg,f,c
  3195  003D42  E2FD               	bc	u7341
  3196  003D44                     
  3197                           ;fs_menu_controller.c: 356:     startIsClick = 0;
  3198  003D44  0E00               	movlw	0
  3199  003D46  0100               	movlb	0	; () banked
  3200  003D48  6FFE               	movwf	_startIsClick& (0+255),b
  3201  003D4A                     
  3202                           ; BSR set to: 0
  3203                           ;fs_menu_controller.c: 360:     stopMotor();
  3204  003D4A  EC77  F02A         	call	_stopMotor	;wreg free
  3205  003D4E                     
  3206                           ;fs_menu_controller.c: 362:     lcdSetCursor(1,1);
  3207  003D4E  0E01               	movlw	1
  3208  003D50  6E04               	movwf	lcdSetCursor@b^0,c
  3209  003D52  0E01               	movlw	1
  3210  003D54  EC34  F028         	call	_lcdSetCursor
  3211  003D58                     
  3212                           ;fs_menu_controller.c: 363:     lcdWriteString("HAREKET DURDU   ");
  3213  003D58  0E4D               	movlw	low STR_7
  3214  003D5A  6E05               	movwf	lcdWriteString@a^0,c
  3215  003D5C  0E7F               	movlw	high STR_7
  3216  003D5E  6E06               	movwf	(lcdWriteString@a+1)^0,c
  3217  003D60  ECD6  F026         	call	_lcdWriteString	;wreg free
  3218  003D64                     
  3219                           ;fs_menu_controller.c: 364:     lcdSetCursor(2,1);
  3220  003D64  0E01               	movlw	1
  3221  003D66  6E04               	movwf	lcdSetCursor@b^0,c
  3222  003D68  0E02               	movlw	2
  3223  003D6A  EC34  F028         	call	_lcdSetCursor
  3224  003D6E                     
  3225                           ;fs_menu_controller.c: 365:     sprintf(textCursor2,"      %d:%d    ",timer_value.remain
      +                          ingMinute,timer_value.remainingSecond);
  3226  003D6E  0EE1               	movlw	low pauseMenu@textCursor2
  3227  003D70  0100               	movlb	0	; () banked
  3228  003D72  6FCF               	movwf	sprintf@s& (0+255),b
  3229  003D74  0E00               	movlw	high pauseMenu@textCursor2
  3230  003D76  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3231  003D78  0EA1               	movlw	low STR_6
  3232  003D7A  6FD1               	movwf	sprintf@fmt& (0+255),b
  3233  003D7C  0E7F               	movlw	high STR_6
  3234  003D7E  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3235  003D80  0101               	movlb	1	; () banked
  3236  003D82  5192               	movf	(_timer_value+3)& (0+255),w,b
  3237  003D84  0100               	movlb	0	; () banked
  3238  003D86  6FD3               	movwf	(?_sprintf+4)& (0+255),b
  3239  003D88  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  3240  003D8A  BFD3               	btfsc	(?_sprintf+4)& (0+255),7,b
  3241  003D8C  07D4               	decf	(?_sprintf+5)& (0+255),f,b
  3242  003D8E  C191  F0D5         	movff	_timer_value+2,?_sprintf+6
  3243  003D92  6BD6               	clrf	(?_sprintf+7)& (0+255),b
  3244  003D94  EC1C  F029         	call	_sprintf	;wreg free
  3245  003D98                     
  3246                           ;fs_menu_controller.c: 366:     lcdWriteString(textCursor2);
  3247  003D98  0EE1               	movlw	low pauseMenu@textCursor2
  3248  003D9A  6E05               	movwf	lcdWriteString@a^0,c
  3249  003D9C  0E00               	movlw	high pauseMenu@textCursor2
  3250  003D9E  6E06               	movwf	(lcdWriteString@a+1)^0,c
  3251  003DA0  ECD6  F026         	call	_lcdWriteString	;wreg free
  3252  003DA4                     
  3253                           ;fs_menu_controller.c: 368:     if (menu_flags.menu_start_flag == 1)
  3254  003DA4  0101               	movlb	1	; () banked
  3255  003DA6  0598               	decf	(_menu_flags+1)& (0+255),w,b
  3256  003DA8  A4D8               	btfss	status,2,c
  3257  003DAA  EFD9  F01E         	goto	u7351
  3258  003DAE  EFDB  F01E         	goto	u7350
  3259  003DB2                     u7351:
  3260  003DB2  EFE6  F01E         	goto	l470
  3261  003DB6                     u7350:
  3262  003DB6                     
  3263                           ; BSR set to: 1
  3264                           ;fs_menu_controller.c: 369:     {;fs_menu_controller.c: 370:         menu_flags.menu_sta
      +                          rt_flag = 0;
  3265  003DB6  0E00               	movlw	0
  3266  003DB8  6F98               	movwf	(_menu_flags+1)& (0+255),b
  3267                           
  3268                           ;fs_menu_controller.c: 371:         menu_selected = MAIN_MENU;
  3269  003DBA  0E00               	movlw	0
  3270  003DBC  0100               	movlb	0	; () banked
  3271  003DBE  6FFB               	movwf	_menu_selected& (0+255),b
  3272                           
  3273                           ;fs_menu_controller.c: 373:         startIsClick = 1;
  3274  003DC0  0E01               	movlw	1
  3275  003DC2  6FFE               	movwf	_startIsClick& (0+255),b
  3276                           
  3277                           ;fs_menu_controller.c: 374:         pauseIsClick = 0;
  3278  003DC4  0E00               	movlw	0
  3279  003DC6  6FFF               	movwf	_pauseIsClick& (0+255),b
  3280                           
  3281                           ;fs_menu_controller.c: 375:         stopIsClick = 0;
  3282  003DC8  0E00               	movlw	0
  3283  003DCA  6FFD               	movwf	_stopIsClick& (0+255),b
  3284  003DCC                     l470:
  3285                           
  3286                           ;fs_menu_controller.c: 378:     if ( (startIsClick == 0) && (pauseIsClick == 0) && (stop
      +                          IsClick == 1) && (menu_selected == PAUSE_MENU))
  3287  003DCC  0100               	movlb	0	; () banked
  3288  003DCE  51FE               	movf	_startIsClick& (0+255),w,b
  3289  003DD0  A4D8               	btfss	status,2,c
  3290  003DD2  EFED  F01E         	goto	u7361
  3291  003DD6  EFEF  F01E         	goto	u7360
  3292  003DDA                     u7361:
  3293  003DDA  EF11  F01F         	goto	l6211
  3294  003DDE                     u7360:
  3295  003DDE                     
  3296                           ; BSR set to: 0
  3297  003DDE  51FF               	movf	_pauseIsClick& (0+255),w,b
  3298  003DE0  A4D8               	btfss	status,2,c
  3299  003DE2  EFF5  F01E         	goto	u7371
  3300  003DE6  EFF7  F01E         	goto	u7370
  3301  003DEA                     u7371:
  3302  003DEA  EF11  F01F         	goto	l6211
  3303  003DEE                     u7370:
  3304  003DEE                     
  3305                           ; BSR set to: 0
  3306  003DEE  05FD               	decf	_stopIsClick& (0+255),w,b
  3307  003DF0  A4D8               	btfss	status,2,c
  3308  003DF2  EFFD  F01E         	goto	u7381
  3309  003DF6  EFFF  F01E         	goto	u7380
  3310  003DFA                     u7381:
  3311  003DFA  EF11  F01F         	goto	l6211
  3312  003DFE                     u7380:
  3313  003DFE                     
  3314                           ; BSR set to: 0
  3315  003DFE  0E06               	movlw	6
  3316  003E00  19FB               	xorwf	_menu_selected& (0+255),w,b
  3317  003E02  A4D8               	btfss	status,2,c
  3318  003E04  EF06  F01F         	goto	u7391
  3319  003E08  EF08  F01F         	goto	u7390
  3320  003E0C                     u7391:
  3321  003E0C  EF11  F01F         	goto	l6211
  3322  003E10                     u7390:
  3323  003E10                     
  3324                           ; BSR set to: 0
  3325                           ;fs_menu_controller.c: 379:     {;fs_menu_controller.c: 380:          timer_value.remain
      +                          ingMinute = menu_value.driver_time;
  3326  003E10  C0F3  F192         	movff	_menu_value,_timer_value+3
  3327  003E14                     
  3328                           ; BSR set to: 0
  3329                           ;fs_menu_controller.c: 381:          timer_value.remainingSecond = 0;
  3330  003E14  0E00               	movlw	0
  3331  003E16  0101               	movlb	1	; () banked
  3332  003E18  6F91               	movwf	(_timer_value+2)& (0+255),b
  3333                           
  3334                           ;fs_menu_controller.c: 382:          timer_value.second = 0;
  3335  003E1A  0E00               	movlw	0
  3336  003E1C  6F8F               	movwf	_timer_value& (0+255),b
  3337                           
  3338                           ;fs_menu_controller.c: 383:          timer_value.minute = 0;
  3339  003E1E  0E00               	movlw	0
  3340  003E20  6F90               	movwf	(_timer_value+1)& (0+255),b
  3341  003E22                     l6211:
  3342                           
  3343                           ;fs_menu_controller.c: 386:     if ( timer_value.menu_login_delay == 100)
  3344  003E22  0E64               	movlw	100
  3345  003E24  0101               	movlb	1	; () banked
  3346  003E26  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  3347  003E28  A4D8               	btfss	status,2,c
  3348  003E2A  EF19  F01F         	goto	u7401
  3349  003E2E  EF1B  F01F         	goto	u7400
  3350  003E32                     u7401:
  3351  003E32  EF22  F01F         	goto	l6215
  3352  003E36                     u7400:
  3353  003E36                     
  3354                           ; BSR set to: 1
  3355                           ;fs_menu_controller.c: 387:     {;fs_menu_controller.c: 388:         button_bounce_contr
      +                          oller.menu = 0;
  3356  003E36  0E00               	movlw	0
  3357  003E38  6F9D               	movwf	_button_bounce_controller& (0+255),b
  3358                           
  3359                           ;fs_menu_controller.c: 389:         timer_value.menu_login_delay = 0;
  3360  003E3A  0E00               	movlw	0
  3361  003E3C  6F93               	movwf	(_timer_value+4)& (0+255),b
  3362                           
  3363                           ;fs_menu_controller.c: 390:         menu_selected = DRIVER_TIME_SETTING;
  3364  003E3E  0E01               	movlw	1
  3365  003E40  0100               	movlb	0	; () banked
  3366  003E42  6FFB               	movwf	_menu_selected& (0+255),b
  3367  003E44                     l6215:
  3368                           
  3369                           ;fs_menu_controller.c: 393:     if ((menu_flags.menu_increase_flag == 1) && (menu_flags.
      +                          menu_decrease_flag == 1))
  3370  003E44  0101               	movlb	1	; () banked
  3371  003E46  059B               	decf	(_menu_flags+4)& (0+255),w,b
  3372  003E48  A4D8               	btfss	status,2,c
  3373  003E4A  EF29  F01F         	goto	u7411
  3374  003E4E  EF2B  F01F         	goto	u7410
  3375  003E52                     u7411:
  3376  003E52  EF38  F01F         	goto	l474
  3377  003E56                     u7410:
  3378  003E56                     
  3379                           ; BSR set to: 1
  3380  003E56  059C               	decf	(_menu_flags+5)& (0+255),w,b
  3381  003E58  A4D8               	btfss	status,2,c
  3382  003E5A  EF31  F01F         	goto	u7421
  3383  003E5E  EF33  F01F         	goto	u7420
  3384  003E62                     u7421:
  3385  003E62  EF38  F01F         	goto	l474
  3386  003E66                     u7420:
  3387  003E66                     
  3388                           ; BSR set to: 1
  3389                           ;fs_menu_controller.c: 394:     {;fs_menu_controller.c: 395:         menu_selected = SEC
      +                          RET_MENU;
  3390  003E66  0E08               	movlw	8
  3391  003E68  0100               	movlb	0	; () banked
  3392  003E6A  6FFB               	movwf	_menu_selected& (0+255),b
  3393                           
  3394                           ;fs_menu_controller.c: 396:         secretMenuCounter = 1;
  3395  003E6C  0E01               	movlw	1
  3396  003E6E  6FFC               	movwf	_secretMenuCounter& (0+255),b
  3397  003E70                     l474:
  3398  003E70  0012               	return		;funcret
  3399  003E72                     __end_of_pauseMenu:
  3400                           	callstack 0
  3401                           
  3402 ;; *************** function _mainMenu *****************
  3403 ;; Defined at:
  3404 ;;		line 245 in file "fs_menu_controller.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;		None
  3407 ;; Auto vars:     Size  Location     Type
  3408 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  3409 ;; Return value:  Size  Location     Type
  3410 ;;                  1    wreg      void 
  3411 ;; Registers used:
  3412 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3413 ;; Tracked objects:
  3414 ;;		On entry : 0/0
  3415 ;;		On exit  : 0/0
  3416 ;;		Unchanged: 0/0
  3417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3418 ;;      Params:         0       0       0       0       0       0       0
  3419 ;;      Locals:         0      16       0       0       0       0       0
  3420 ;;      Temps:          0       0       0       0       0       0       0
  3421 ;;      Totals:         0      16       0       0       0       0       0
  3422 ;;Total ram usage:       16 bytes
  3423 ;; Hardware stack levels used:    1
  3424 ;; Hardware stack levels required when called:    9
  3425 ;; This function calls:
  3426 ;;		_lcdSetCursor
  3427 ;;		_lcdWriteString
  3428 ;;		_sprintf
  3429 ;;		_startMotor
  3430 ;; This function is called by:
  3431 ;;		_stateMachine
  3432 ;; This function uses a non-reentrant model
  3433 ;;
  3434                           
  3435                           	psect	text10
  3436  003720                     __ptext10:
  3437                           	callstack 0
  3438  003720                     _mainMenu:
  3439                           	callstack 19
  3440  003720                     
  3441                           ;fs_menu_controller.c: 247:     char textCursor2[16] = {0};
  3442  003720  EE20  F0E1         	lfsr	2,mainMenu@textCursor2
  3443  003724  0E0F               	movlw	15
  3444  003726                     u6951:
  3445  003726  6ADE               	clrf	postinc2,c
  3446  003728  06E8               	decf	wreg,f,c
  3447  00372A  E2FD               	bc	u6951
  3448  00372C                     
  3449                           ;fs_menu_controller.c: 249:     lcdSetCursor(1,1);
  3450  00372C  0E01               	movlw	1
  3451  00372E  6E04               	movwf	lcdSetCursor@b^0,c
  3452  003730  0E01               	movlw	1
  3453  003732  EC34  F028         	call	_lcdSetCursor
  3454  003736                     
  3455                           ;fs_menu_controller.c: 250:     lcdWriteString("KALAN ZAMAN     ");
  3456  003736  0E2B               	movlw	low STR_3
  3457  003738  6E05               	movwf	lcdWriteString@a^0,c
  3458  00373A  0E7F               	movlw	high STR_3
  3459  00373C  6E06               	movwf	(lcdWriteString@a+1)^0,c
  3460  00373E  ECD6  F026         	call	_lcdWriteString	;wreg free
  3461  003742                     
  3462                           ;fs_menu_controller.c: 251:     lcdSetCursor(2,1);
  3463  003742  0E01               	movlw	1
  3464  003744  6E04               	movwf	lcdSetCursor@b^0,c
  3465  003746  0E02               	movlw	2
  3466  003748  EC34  F028         	call	_lcdSetCursor
  3467  00374C                     
  3468                           ;fs_menu_controller.c: 252:     sprintf(textCursor2,"      %d:%d   ",timer_value.remaini
      +                          ngMinute,timer_value.remainingSecond);
  3469  00374C  0EE1               	movlw	low mainMenu@textCursor2
  3470  00374E  0100               	movlb	0	; () banked
  3471  003750  6FCF               	movwf	sprintf@s& (0+255),b
  3472  003752  0E00               	movlw	high mainMenu@textCursor2
  3473  003754  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3474  003756  0EC1               	movlw	low STR_4
  3475  003758  6FD1               	movwf	sprintf@fmt& (0+255),b
  3476  00375A  0E7F               	movlw	high STR_4
  3477  00375C  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3478  00375E  0101               	movlb	1	; () banked
  3479  003760  5192               	movf	(_timer_value+3)& (0+255),w,b
  3480  003762  0100               	movlb	0	; () banked
  3481  003764  6FD3               	movwf	(?_sprintf+4)& (0+255),b
  3482  003766  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  3483  003768  BFD3               	btfsc	(?_sprintf+4)& (0+255),7,b
  3484  00376A  07D4               	decf	(?_sprintf+5)& (0+255),f,b
  3485  00376C  C191  F0D5         	movff	_timer_value+2,?_sprintf+6
  3486  003770  6BD6               	clrf	(?_sprintf+7)& (0+255),b
  3487  003772  EC1C  F029         	call	_sprintf	;wreg free
  3488  003776                     
  3489                           ;fs_menu_controller.c: 253:     lcdWriteString(textCursor2);
  3490  003776  0EE1               	movlw	low mainMenu@textCursor2
  3491  003778  6E05               	movwf	lcdWriteString@a^0,c
  3492  00377A  0E00               	movlw	high mainMenu@textCursor2
  3493  00377C  6E06               	movwf	(lcdWriteString@a+1)^0,c
  3494  00377E  ECD6  F026         	call	_lcdWriteString	;wreg free
  3495  003782                     
  3496                           ;fs_menu_controller.c: 255:     if ( timer_value.menu_login_delay == 100)
  3497  003782  0E64               	movlw	100
  3498  003784  0101               	movlb	1	; () banked
  3499  003786  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  3500  003788  A4D8               	btfss	status,2,c
  3501  00378A  EFC9  F01B         	goto	u6961
  3502  00378E  EFCB  F01B         	goto	u6960
  3503  003792                     u6961:
  3504  003792  EFD2  F01B         	goto	l5955
  3505  003796                     u6960:
  3506  003796                     
  3507                           ; BSR set to: 1
  3508                           ;fs_menu_controller.c: 256:     {;fs_menu_controller.c: 257:         button_bounce_contr
      +                          oller.menu = 0;
  3509  003796  0E00               	movlw	0
  3510  003798  6F9D               	movwf	_button_bounce_controller& (0+255),b
  3511                           
  3512                           ;fs_menu_controller.c: 258:         timer_value.menu_login_delay = 0;
  3513  00379A  0E00               	movlw	0
  3514  00379C  6F93               	movwf	(_timer_value+4)& (0+255),b
  3515                           
  3516                           ;fs_menu_controller.c: 259:         menu_selected = DRIVER_TIME_SETTING;
  3517  00379E  0E01               	movlw	1
  3518  0037A0  0100               	movlb	0	; () banked
  3519  0037A2  6FFB               	movwf	_menu_selected& (0+255),b
  3520  0037A4                     l5955:
  3521                           
  3522                           ;fs_menu_controller.c: 262:     if ((timer_value.remainingMinute <= 0) && (timer_value.r
      +                          emainingSecond == 0) )
  3523  0037A4  0101               	movlb	1	; () banked
  3524  0037A6  5192               	movf	(_timer_value+3)& (0+255),w,b
  3525  0037A8  0A80               	xorlw	128
  3526  0037AA  0F7F               	addlw	-129
  3527  0037AC  B0D8               	btfsc	status,0,c
  3528  0037AE  EFDB  F01B         	goto	u6971
  3529  0037B2  EFDD  F01B         	goto	u6970
  3530  0037B6                     u6971:
  3531  0037B6  EFEB  F01B         	goto	l454
  3532  0037BA                     u6970:
  3533  0037BA                     
  3534                           ; BSR set to: 1
  3535  0037BA  5191               	movf	(_timer_value+2)& (0+255),w,b
  3536  0037BC  A4D8               	btfss	status,2,c
  3537  0037BE  EFE3  F01B         	goto	u6981
  3538  0037C2  EFE5  F01B         	goto	u6980
  3539  0037C6                     u6981:
  3540  0037C6  EFEB  F01B         	goto	l454
  3541  0037CA                     u6980:
  3542  0037CA                     
  3543                           ; BSR set to: 1
  3544                           ;fs_menu_controller.c: 263:     {;fs_menu_controller.c: 264:             menu_selected =
      +                           STOP_MENU;
  3545  0037CA  0E04               	movlw	4
  3546  0037CC  0100               	movlb	0	; () banked
  3547  0037CE  6FFB               	movwf	_menu_selected& (0+255),b
  3548                           
  3549                           ;fs_menu_controller.c: 265:             timer_value.minute = 0;
  3550  0037D0  0E00               	movlw	0
  3551  0037D2  0101               	movlb	1	; () banked
  3552  0037D4  6F90               	movwf	(_timer_value+1)& (0+255),b
  3553  0037D6                     l454:
  3554                           
  3555                           ; BSR set to: 1
  3556                           ;fs_menu_controller.c: 268:     if ( (startIsClick == 0) && (pauseIsClick == 1) && (stop
      +                          IsClick == 0) && (menu_selected == MAIN_MENU))
  3557  0037D6  0100               	movlb	0	; () banked
  3558  0037D8  51FE               	movf	_startIsClick& (0+255),w,b
  3559  0037DA  A4D8               	btfss	status,2,c
  3560  0037DC  EFF2  F01B         	goto	u6991
  3561  0037E0  EFF4  F01B         	goto	u6990
  3562  0037E4                     u6991:
  3563  0037E4  EF13  F01C         	goto	l455
  3564  0037E8                     u6990:
  3565  0037E8                     
  3566                           ; BSR set to: 0
  3567  0037E8  05FF               	decf	_pauseIsClick& (0+255),w,b
  3568  0037EA  A4D8               	btfss	status,2,c
  3569  0037EC  EFFA  F01B         	goto	u7001
  3570  0037F0  EFFC  F01B         	goto	u7000
  3571  0037F4                     u7001:
  3572  0037F4  EF13  F01C         	goto	l455
  3573  0037F8                     u7000:
  3574  0037F8                     
  3575                           ; BSR set to: 0
  3576  0037F8  51FD               	movf	_stopIsClick& (0+255),w,b
  3577  0037FA  A4D8               	btfss	status,2,c
  3578  0037FC  EF02  F01C         	goto	u7011
  3579  003800  EF04  F01C         	goto	u7010
  3580  003804                     u7011:
  3581  003804  EF13  F01C         	goto	l455
  3582  003808                     u7010:
  3583  003808                     
  3584                           ; BSR set to: 0
  3585  003808  51FB               	movf	_menu_selected& (0+255),w,b
  3586  00380A  A4D8               	btfss	status,2,c
  3587  00380C  EF0A  F01C         	goto	u7021
  3588  003810  EF0C  F01C         	goto	u7020
  3589  003814                     u7021:
  3590  003814  EF13  F01C         	goto	l455
  3591  003818                     u7020:
  3592  003818                     
  3593                           ; BSR set to: 0
  3594                           ;fs_menu_controller.c: 269:     {;fs_menu_controller.c: 270:         menu_selected = PAU
      +                          SE_MENU;
  3595  003818  0E06               	movlw	6
  3596  00381A  6FFB               	movwf	_menu_selected& (0+255),b
  3597  00381C                     
  3598                           ; BSR set to: 0
  3599                           ;fs_menu_controller.c: 271:         LATDbits.LATD5 = 0;
  3600  00381C  9A8C               	bcf	140,5,c	;volatile
  3601  00381E                     
  3602                           ; BSR set to: 0
  3603                           ;fs_menu_controller.c: 272:         LATCbits.LATC5 = 0;
  3604  00381E  9A8B               	bcf	139,5,c	;volatile
  3605  003820                     
  3606                           ; BSR set to: 0
  3607                           ;fs_menu_controller.c: 273:         LATCbits.LATC4 = 0;
  3608  003820  988B               	bcf	139,4,c	;volatile
  3609                           
  3610                           ;fs_menu_controller.c: 274:         startIsClick = 0;
  3611  003822  0E00               	movlw	0
  3612  003824  6FFE               	movwf	_startIsClick& (0+255),b
  3613  003826                     l455:
  3614                           
  3615                           ; BSR set to: 0
  3616                           ;fs_menu_controller.c: 277:     if ( (startIsClick == 0) && (pauseIsClick == 0) && (stop
      +                          IsClick == 1) && (menu_selected == MAIN_MENU) )
  3617  003826  51FE               	movf	_startIsClick& (0+255),w,b
  3618  003828  A4D8               	btfss	status,2,c
  3619  00382A  EF19  F01C         	goto	u7031
  3620  00382E  EF1B  F01C         	goto	u7030
  3621  003832                     u7031:
  3622  003832  EF3F  F01C         	goto	l5991
  3623  003836                     u7030:
  3624  003836                     
  3625                           ; BSR set to: 0
  3626  003836  51FF               	movf	_pauseIsClick& (0+255),w,b
  3627  003838  A4D8               	btfss	status,2,c
  3628  00383A  EF21  F01C         	goto	u7041
  3629  00383E  EF23  F01C         	goto	u7040
  3630  003842                     u7041:
  3631  003842  EF3F  F01C         	goto	l5991
  3632  003846                     u7040:
  3633  003846                     
  3634                           ; BSR set to: 0
  3635  003846  05FD               	decf	_stopIsClick& (0+255),w,b
  3636  003848  A4D8               	btfss	status,2,c
  3637  00384A  EF29  F01C         	goto	u7051
  3638  00384E  EF2B  F01C         	goto	u7050
  3639  003852                     u7051:
  3640  003852  EF3F  F01C         	goto	l5991
  3641  003856                     u7050:
  3642  003856                     
  3643                           ; BSR set to: 0
  3644  003856  51FB               	movf	_menu_selected& (0+255),w,b
  3645  003858  A4D8               	btfss	status,2,c
  3646  00385A  EF31  F01C         	goto	u7061
  3647  00385E  EF33  F01C         	goto	u7060
  3648  003862                     u7061:
  3649  003862  EF3F  F01C         	goto	l5991
  3650  003866                     u7060:
  3651  003866                     
  3652                           ; BSR set to: 0
  3653                           ;fs_menu_controller.c: 278:     {;fs_menu_controller.c: 279:          timer_value.remain
      +                          ingMinute = menu_value.driver_time;
  3654  003866  C0F3  F192         	movff	_menu_value,_timer_value+3
  3655  00386A                     
  3656                           ; BSR set to: 0
  3657                           ;fs_menu_controller.c: 280:          timer_value.remainingSecond = 0;
  3658  00386A  0E00               	movlw	0
  3659  00386C  0101               	movlb	1	; () banked
  3660  00386E  6F91               	movwf	(_timer_value+2)& (0+255),b
  3661                           
  3662                           ;fs_menu_controller.c: 281:          timer_value.second = 0;
  3663  003870  0E00               	movlw	0
  3664  003872  6F8F               	movwf	_timer_value& (0+255),b
  3665                           
  3666                           ;fs_menu_controller.c: 282:          timer_value.minute = 0;
  3667  003874  0E00               	movlw	0
  3668  003876  6F90               	movwf	(_timer_value+1)& (0+255),b
  3669  003878                     
  3670                           ; BSR set to: 1
  3671                           ;fs_menu_controller.c: 283:          LATDbits.LATD5 = 0;
  3672  003878  9A8C               	bcf	140,5,c	;volatile
  3673  00387A                     
  3674                           ; BSR set to: 1
  3675                           ;fs_menu_controller.c: 284:          LATCbits.LATC5 = 0;
  3676  00387A  9A8B               	bcf	139,5,c	;volatile
  3677  00387C                     
  3678                           ; BSR set to: 1
  3679                           ;fs_menu_controller.c: 285:          LATCbits.LATC4 = 0;
  3680  00387C  988B               	bcf	139,4,c	;volatile
  3681  00387E                     l5991:
  3682                           
  3683                           ;fs_menu_controller.c: 288:     if ( (startIsClick == 1) && (pauseIsClick == 0) && (stop
      +                          IsClick == 0) )
  3684  00387E  0100               	movlb	0	; () banked
  3685  003880  05FE               	decf	_startIsClick& (0+255),w,b
  3686  003882  A4D8               	btfss	status,2,c
  3687  003884  EF46  F01C         	goto	u7071
  3688  003888  EF48  F01C         	goto	u7070
  3689  00388C                     u7071:
  3690  00388C  EF5D  F01C         	goto	l458
  3691  003890                     u7070:
  3692  003890                     
  3693                           ; BSR set to: 0
  3694  003890  51FF               	movf	_pauseIsClick& (0+255),w,b
  3695  003892  A4D8               	btfss	status,2,c
  3696  003894  EF4E  F01C         	goto	u7081
  3697  003898  EF50  F01C         	goto	u7080
  3698  00389C                     u7081:
  3699  00389C  EF5D  F01C         	goto	l458
  3700  0038A0                     u7080:
  3701  0038A0                     
  3702                           ; BSR set to: 0
  3703  0038A0  51FD               	movf	_stopIsClick& (0+255),w,b
  3704  0038A2  A4D8               	btfss	status,2,c
  3705  0038A4  EF56  F01C         	goto	u7091
  3706  0038A8  EF58  F01C         	goto	u7090
  3707  0038AC                     u7091:
  3708  0038AC  EF5D  F01C         	goto	l458
  3709  0038B0                     u7090:
  3710  0038B0                     
  3711                           ; BSR set to: 0
  3712                           ;fs_menu_controller.c: 289:     {;fs_menu_controller.c: 290:         startMotor();
  3713  0038B0  EC05  F02B         	call	_startMotor	;wreg free
  3714  0038B4                     
  3715                           ;fs_menu_controller.c: 291:         LATDbits.LATD5 = 1;
  3716  0038B4  8A8C               	bsf	140,5,c	;volatile
  3717  0038B6                     
  3718                           ;fs_menu_controller.c: 292:         LATCbits.LATC5 = 1;
  3719  0038B6  8A8B               	bsf	139,5,c	;volatile
  3720  0038B8                     
  3721                           ;fs_menu_controller.c: 293:         LATCbits.LATC4 = 1;
  3722  0038B8  888B               	bsf	139,4,c	;volatile
  3723  0038BA                     l458:
  3724  0038BA  0012               	return		;funcret
  3725  0038BC                     __end_of_mainMenu:
  3726                           	callstack 0
  3727                           
  3728 ;; *************** function _startMotor *****************
  3729 ;; Defined at:
  3730 ;;		line 93 in file "fs_speed_controller.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;		None
  3733 ;; Auto vars:     Size  Location     Type
  3734 ;;		None
  3735 ;; Return value:  Size  Location     Type
  3736 ;;                  1    wreg      void 
  3737 ;; Registers used:
  3738 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3739 ;; Tracked objects:
  3740 ;;		On entry : 0/0
  3741 ;;		On exit  : 0/0
  3742 ;;		Unchanged: 0/0
  3743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3744 ;;      Params:         0       0       0       0       0       0       0
  3745 ;;      Locals:         0       0       0       0       0       0       0
  3746 ;;      Temps:          0       0       0       0       0       0       0
  3747 ;;      Totals:         0       0       0       0       0       0       0
  3748 ;;Total ram usage:        0 bytes
  3749 ;; Hardware stack levels used:    1
  3750 ;; Hardware stack levels required when called:    3
  3751 ;; This function calls:
  3752 ;;		_PWM1_setDC
  3753 ;;		_PWM2_setDC
  3754 ;;		_calculatedAverageValue
  3755 ;;		_scanAdcConversion
  3756 ;;		_speedControl
  3757 ;; This function is called by:
  3758 ;;		_mainMenu
  3759 ;; This function uses a non-reentrant model
  3760 ;;
  3761                           
  3762                           	psect	text11
  3763  00560A                     __ptext11:
  3764                           	callstack 0
  3765  00560A                     _startMotor:
  3766                           	callstack 24
  3767  00560A                     
  3768                           ;fs_speed_controller.c: 95:         scanAdcConversion();
  3769  00560A  EC31  F006         	call	_scanAdcConversion	;wreg free
  3770  00560E                     
  3771                           ;fs_speed_controller.c: 96:         calculatedAverageValue();
  3772  00560E  EC95  F013         	call	_calculatedAverageValue	;wreg free
  3773  005612                     
  3774                           ;fs_speed_controller.c: 97:         speedControl(driver_limit.ortalama);
  3775  005612  C18B  F058         	movff	_driver_limit+8,speedControl@position
  3776  005616  C18C  F059         	movff	_driver_limit+9,speedControl@position+1
  3777  00561A  C18D  F05A         	movff	_driver_limit+10,speedControl@position+2
  3778  00561E  C18E  F05B         	movff	_driver_limit+11,speedControl@position+3
  3779  005622  ECD7  F019         	call	_speedControl	;wreg free
  3780                           
  3781                           ;fs_speed_controller.c: 98:         PWM1_setDC(controller.leftMotorSpeed);
  3782  005626  C156  F058         	movff	_controller+6,PWM1_setDC@dutycycle
  3783  00562A  C157  F059         	movff	_controller+7,PWM1_setDC@dutycycle+1
  3784  00562E  EC52  F027         	call	_PWM1_setDC	;wreg free
  3785                           
  3786                           ;fs_speed_controller.c: 99:         PWM2_setDC(controller.rightMotorSpeed);
  3787  005632  C158  F058         	movff	_controller+8,PWM2_setDC@dutycycle
  3788  005636  C159  F059         	movff	_controller+9,PWM2_setDC@dutycycle+1
  3789  00563A  EC15  F027         	call	_PWM2_setDC	;wreg free
  3790  00563E  0012               	return		;funcret
  3791  005640                     __end_of_startMotor:
  3792                           	callstack 0
  3793                           
  3794 ;; *************** function _speedControl *****************
  3795 ;; Defined at:
  3796 ;;		line 36 in file "fs_speed_controller.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;  position        4   87[COMRAM] float 
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;  pos             4    0        float 
  3801 ;; Return value:  Size  Location     Type
  3802 ;;                  1    wreg      void 
  3803 ;; Registers used:
  3804 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3810 ;;      Params:         4       0       0       0       0       0       0
  3811 ;;      Locals:         0       4       0       0       0       0       0
  3812 ;;      Temps:          2       0       0       0       0       0       0
  3813 ;;      Totals:         6       4       0       0       0       0       0
  3814 ;;Total ram usage:       10 bytes
  3815 ;; Hardware stack levels used:    1
  3816 ;; Hardware stack levels required when called:    2
  3817 ;; This function calls:
  3818 ;;		___fladd
  3819 ;;		___flmul
  3820 ;;		___fltol
  3821 ;;		___xxtofl
  3822 ;; This function is called by:
  3823 ;;		_startMotor
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           	psect	text12
  3828  0033AE                     __ptext12:
  3829                           	callstack 0
  3830  0033AE                     _speedControl:
  3831                           	callstack 24
  3832  0033AE                     
  3833                           ;fs_speed_controller.c: 42:     controller.error = (int16_t)(position - 3400.0);
  3834  0033AE  0E00               	movlw	0
  3835  0033B0  6E39               	movwf	___fladd@a^0,c
  3836  0033B2  0E80               	movlw	128
  3837  0033B4  6E3A               	movwf	(___fladd@a+1)^0,c
  3838  0033B6  0E54               	movlw	84
  3839  0033B8  6E3B               	movwf	(___fladd@a+2)^0,c
  3840  0033BA  0EC5               	movlw	197
  3841  0033BC  6E3C               	movwf	(___fladd@a+3)^0,c
  3842  0033BE  C058  F035         	movff	speedControl@position,___fladd@b
  3843  0033C2  C059  F036         	movff	speedControl@position+1,___fladd@b+1
  3844  0033C6  C05A  F037         	movff	speedControl@position+2,___fladd@b+2
  3845  0033CA  C05B  F038         	movff	speedControl@position+3,___fladd@b+3
  3846  0033CE  EC53  F00D         	call	___fladd	;wreg free
  3847  0033D2  C035  F04E         	movff	?___fladd,___fltol@f1
  3848  0033D6  C036  F04F         	movff	?___fladd+1,___fltol@f1+1
  3849  0033DA  C037  F050         	movff	?___fladd+2,___fltol@f1+2
  3850  0033DE  C038  F051         	movff	?___fladd+3,___fltol@f1+3
  3851  0033E2  EC69  F021         	call	___fltol	;wreg free
  3852  0033E6  C04E  F150         	movff	?___fltol,_controller
  3853  0033EA  C04F  F151         	movff	?___fltol+1,_controller+1
  3854  0033EE  0E00               	movlw	0
  3855  0033F0  6E20               	movwf	___flmul@a^0,c
  3856  0033F2  0E00               	movlw	0
  3857  0033F4  6E21               	movwf	(___flmul@a+1)^0,c
  3858  0033F6  0E80               	movlw	128
  3859  0033F8  6E22               	movwf	(___flmul@a+2)^0,c
  3860  0033FA  0E3F               	movlw	63
  3861  0033FC  6E23               	movwf	(___flmul@a+3)^0,c
  3862  0033FE  0101               	movlb	1	; () banked
  3863  003400  5152               	movf	(_controller+2)& (0+255),w,b
  3864  003402  5D50               	subwf	_controller& (0+255),w,b
  3865  003404  6E5C               	movwf	??_speedControl^0,c
  3866  003406  5153               	movf	(_controller+3)& (0+255),w,b
  3867  003408  5951               	subwfb	(_controller+1)& (0+255),w,b
  3868  00340A  6E5D               	movwf	(??_speedControl+1)^0,c
  3869  00340C  C05C  F00E         	movff	??_speedControl,___xxtofl@val
  3870  003410  C05D  F00F         	movff	??_speedControl+1,___xxtofl@val+1
  3871  003414  0E00               	movlw	0
  3872  003416  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  3873  003418  0EFF               	movlw	-1
  3874  00341A  6E10               	movwf	(___xxtofl@val+2)^0,c
  3875  00341C  6E11               	movwf	(___xxtofl@val+3)^0,c
  3876  00341E  0E01               	movlw	1
  3877  003420  ECB6  F01A         	call	___xxtofl
  3878  003424  C00E  F01C         	movff	?___xxtofl,___flmul@b
  3879  003428  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  3880  00342C  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  3881  003430  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  3882  003434  ECB3  F00F         	call	___flmul	;wreg free
  3883  003438  C01C  F039         	movff	?___flmul,___fladd@a
  3884  00343C  C01D  F03A         	movff	?___flmul+1,___fladd@a+1
  3885  003440  C01E  F03B         	movff	?___flmul+2,___fladd@a+2
  3886  003444  C01F  F03C         	movff	?___flmul+3,___fladd@a+3
  3887  003448  0ECD               	movlw	205
  3888  00344A  6E20               	movwf	___flmul@a^0,c
  3889  00344C  0ECC               	movlw	204
  3890  00344E  6E21               	movwf	(___flmul@a+1)^0,c
  3891  003450  0E4C               	movlw	76
  3892  003452  6E22               	movwf	(___flmul@a+2)^0,c
  3893  003454  0E3E               	movlw	62
  3894  003456  6E23               	movwf	(___flmul@a+3)^0,c
  3895  003458  C150  F00E         	movff	_controller,___xxtofl@val
  3896  00345C  C151  F00F         	movff	_controller+1,___xxtofl@val+1
  3897  003460  0E00               	movlw	0
  3898  003462  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  3899  003464  0EFF               	movlw	-1
  3900  003466  6E10               	movwf	(___xxtofl@val+2)^0,c
  3901  003468  6E11               	movwf	(___xxtofl@val+3)^0,c
  3902  00346A  0E01               	movlw	1
  3903  00346C  ECB6  F01A         	call	___xxtofl
  3904  003470  C00E  F01C         	movff	?___xxtofl,___flmul@b
  3905  003474  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  3906  003478  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  3907  00347C  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  3908  003480  ECB3  F00F         	call	___flmul	;wreg free
  3909  003484  C01C  F035         	movff	?___flmul,___fladd@b
  3910  003488  C01D  F036         	movff	?___flmul+1,___fladd@b+1
  3911  00348C  C01E  F037         	movff	?___flmul+2,___fladd@b+2
  3912  003490  C01F  F038         	movff	?___flmul+3,___fladd@b+3
  3913  003494  EC53  F00D         	call	___fladd	;wreg free
  3914  003498  C035  F04E         	movff	?___fladd,___fltol@f1
  3915  00349C  C036  F04F         	movff	?___fladd+1,___fltol@f1+1
  3916  0034A0  C037  F050         	movff	?___fladd+2,___fltol@f1+2
  3917  0034A4  C038  F051         	movff	?___fladd+3,___fltol@f1+3
  3918  0034A8  EC69  F021         	call	___fltol	;wreg free
  3919  0034AC  C04E  F154         	movff	?___fltol,_controller+4
  3920  0034B0  C04F  F155         	movff	?___fltol+1,_controller+5
  3921  0034B4                     
  3922                           ;fs_speed_controller.c: 44:     controller.lastError = controller.error;
  3923  0034B4  C150  F152         	movff	_controller,_controller+2
  3924  0034B8  C151  F153         	movff	_controller+1,_controller+3
  3925  0034BC                     
  3926                           ;fs_speed_controller.c: 46:    controller.leftMotorSpeed =(int16_t) (200 + controller.mo
      +                          torSpeed + 70);
  3927  0034BC  0E0E               	movlw	14
  3928  0034BE  0101               	movlb	1	; () banked
  3929  0034C0  2554               	addwf	(_controller+4)& (0+255),w,b
  3930  0034C2  6F56               	movwf	(_controller+6)& (0+255),b
  3931  0034C4  0E01               	movlw	1
  3932  0034C6  2155               	addwfc	(_controller+5)& (0+255),w,b
  3933  0034C8  6F57               	movwf	(_controller+7)& (0+255),b
  3934  0034CA                     
  3935                           ; BSR set to: 1
  3936                           ;fs_speed_controller.c: 47:    controller.rightMotorSpeed =(int16_t) (200 - controller.m
      +                          otorSpeed);
  3937  0034CA  5154               	movf	(_controller+4)& (0+255),w,b
  3938  0034CC  08C8               	sublw	200
  3939  0034CE  6F58               	movwf	(_controller+8)& (0+255),b
  3940  0034D0  5155               	movf	(_controller+5)& (0+255),w,b
  3941  0034D2  A0D8               	btfss	status,0,c
  3942  0034D4  2AE8               	incf	wreg,f,c
  3943  0034D6  0800               	sublw	0
  3944  0034D8  6F59               	movwf	(_controller+9)& (0+255),b
  3945  0034DA                     
  3946                           ; BSR set to: 1
  3947                           ;fs_speed_controller.c: 49:     if (controller.leftMotorSpeed < 50)
  3948  0034DA  BF57               	btfsc	(_controller+7)& (0+255),7,b
  3949  0034DC  EF7B  F01A         	goto	u6830
  3950  0034E0  5157               	movf	(_controller+7)& (0+255),w,b
  3951  0034E2  E107               	bnz	u6831
  3952  0034E4  0E32               	movlw	50
  3953  0034E6  5D56               	subwf	(_controller+6)& (0+255),w,b
  3954  0034E8  B0D8               	btfsc	status,0,c
  3955  0034EA  EF79  F01A         	goto	u6831
  3956  0034EE  EF7B  F01A         	goto	u6830
  3957  0034F2                     u6831:
  3958  0034F2  EF7F  F01A         	goto	l5845
  3959  0034F6                     u6830:
  3960  0034F6                     
  3961                           ; BSR set to: 1
  3962                           ;fs_speed_controller.c: 50:     {;fs_speed_controller.c: 51:         controller.leftMoto
      +                          rSpeed = 50;
  3963  0034F6  0E00               	movlw	0
  3964  0034F8  6F57               	movwf	(_controller+7)& (0+255),b
  3965  0034FA  0E32               	movlw	50
  3966  0034FC  6F56               	movwf	(_controller+6)& (0+255),b
  3967  0034FE                     l5845:
  3968                           
  3969                           ; BSR set to: 1
  3970                           ;fs_speed_controller.c: 54:     if (controller.rightMotorSpeed < 50)
  3971  0034FE  BF59               	btfsc	(_controller+9)& (0+255),7,b
  3972  003500  EF8D  F01A         	goto	u6840
  3973  003504  5159               	movf	(_controller+9)& (0+255),w,b
  3974  003506  E107               	bnz	u6841
  3975  003508  0E32               	movlw	50
  3976  00350A  5D58               	subwf	(_controller+8)& (0+255),w,b
  3977  00350C  B0D8               	btfsc	status,0,c
  3978  00350E  EF8B  F01A         	goto	u6841
  3979  003512  EF8D  F01A         	goto	u6840
  3980  003516                     u6841:
  3981  003516  EF91  F01A         	goto	l5849
  3982  00351A                     u6840:
  3983  00351A                     
  3984                           ; BSR set to: 1
  3985                           ;fs_speed_controller.c: 55:     {;fs_speed_controller.c: 56:       controller.rightMotor
      +                          Speed = 50;
  3986  00351A  0E00               	movlw	0
  3987  00351C  6F59               	movwf	(_controller+9)& (0+255),b
  3988  00351E  0E32               	movlw	50
  3989  003520  6F58               	movwf	(_controller+8)& (0+255),b
  3990  003522                     l5849:
  3991                           
  3992                           ; BSR set to: 1
  3993                           ;fs_speed_controller.c: 59:     if (controller.leftMotorSpeed > 350)
  3994  003522  BF57               	btfsc	(_controller+7)& (0+255),7,b
  3995  003524  EF9D  F01A         	goto	u6851
  3996  003528  0E5F               	movlw	95
  3997  00352A  5D56               	subwf	(_controller+6)& (0+255),w,b
  3998  00352C  0E01               	movlw	1
  3999  00352E  5957               	subwfb	(_controller+7)& (0+255),w,b
  4000  003530  A0D8               	btfss	status,0,c
  4001  003532  EF9D  F01A         	goto	u6851
  4002  003536  EF9F  F01A         	goto	u6850
  4003  00353A                     u6851:
  4004  00353A  EFA3  F01A         	goto	l5853
  4005  00353E                     u6850:
  4006  00353E                     
  4007                           ; BSR set to: 1
  4008                           ;fs_speed_controller.c: 60:    {;fs_speed_controller.c: 61:         controller.leftMotor
      +                          Speed = 350;
  4009  00353E  0E01               	movlw	1
  4010  003540  6F57               	movwf	(_controller+7)& (0+255),b
  4011  003542  0E5E               	movlw	94
  4012  003544  6F56               	movwf	(_controller+6)& (0+255),b
  4013  003546                     l5853:
  4014                           
  4015                           ; BSR set to: 1
  4016                           ;fs_speed_controller.c: 64:     if (controller.rightMotorSpeed > 350)
  4017  003546  BF59               	btfsc	(_controller+9)& (0+255),7,b
  4018  003548  EFAF  F01A         	goto	u6861
  4019  00354C  0E5F               	movlw	95
  4020  00354E  5D58               	subwf	(_controller+8)& (0+255),w,b
  4021  003550  0E01               	movlw	1
  4022  003552  5959               	subwfb	(_controller+9)& (0+255),w,b
  4023  003554  A0D8               	btfss	status,0,c
  4024  003556  EFAF  F01A         	goto	u6861
  4025  00355A  EFB1  F01A         	goto	u6860
  4026  00355E                     u6861:
  4027  00355E  EFB5  F01A         	goto	l633
  4028  003562                     u6860:
  4029  003562                     
  4030                           ; BSR set to: 1
  4031                           ;fs_speed_controller.c: 65:     {;fs_speed_controller.c: 66:         controller.rightMot
      +                          orSpeed = 350;
  4032  003562  0E01               	movlw	1
  4033  003564  6F59               	movwf	(_controller+9)& (0+255),b
  4034  003566  0E5E               	movlw	94
  4035  003568  6F58               	movwf	(_controller+8)& (0+255),b
  4036  00356A                     l633:
  4037                           
  4038                           ; BSR set to: 1
  4039  00356A  0012               	return		;funcret
  4040  00356C                     __end_of_speedControl:
  4041                           	callstack 0
  4042                           
  4043 ;; *************** function _scanAdcConversion *****************
  4044 ;; Defined at:
  4045 ;;		line 93 in file "fs_adc.c"
  4046 ;; Parameters:    Size  Location     Type
  4047 ;;		None
  4048 ;; Auto vars:     Size  Location     Type
  4049 ;;		None
  4050 ;; Return value:  Size  Location     Type
  4051 ;;                  1    wreg      void 
  4052 ;; Registers used:
  4053 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4054 ;; Tracked objects:
  4055 ;;		On entry : 0/0
  4056 ;;		On exit  : 0/0
  4057 ;;		Unchanged: 0/0
  4058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4059 ;;      Params:         0       0       0       0       0       0       0
  4060 ;;      Locals:         0       0       0       0       0       0       0
  4061 ;;      Temps:          2       0       0       0       0       0       0
  4062 ;;      Totals:         2       0       0       0       0       0       0
  4063 ;;Total ram usage:        2 bytes
  4064 ;; Hardware stack levels used:    1
  4065 ;; Hardware stack levels required when called:    2
  4066 ;; This function calls:
  4067 ;;		___fldiv
  4068 ;;		___flmul
  4069 ;;		___fltol
  4070 ;;		___xxtofl
  4071 ;;		_readAdcValue
  4072 ;; This function is called by:
  4073 ;;		_startMotor
  4074 ;; This function uses a non-reentrant model
  4075 ;;
  4076                           
  4077                           	psect	text13
  4078  000C62                     __ptext13:
  4079                           	callstack 0
  4080  000C62                     _scanAdcConversion:
  4081                           	callstack 24
  4082  000C62                     
  4083                           ;fs_adc.c: 95:     switch(timer_value.adc_conversion_time)
  4084  000C62  EF05  F00A         	goto	l5763
  4085  000C66                     l5711:
  4086                           
  4087                           ; BSR set to: 1
  4088                           ;fs_adc.c: 98:             adc_raw_data.channel_0 = readAdcValue(0);
  4089  000C66  0E00               	movlw	0
  4090  000C68  ECD8  F029         	call	_readAdcValue
  4091  000C6C  C001  F173         	movff	?_readAdcValue,_adc_raw_data
  4092  000C70  C002  F174         	movff	?_readAdcValue+1,_adc_raw_data+1
  4093  000C74                     
  4094                           ;fs_adc.c: 99:             procces_data.channel_0 = (float)((adc_raw_data.channel_0*5.0)
      +                          /1024.0);
  4095  000C74  0E00               	movlw	0
  4096  000C76  6E20               	movwf	___flmul@a^0,c
  4097  000C78  0E00               	movlw	0
  4098  000C7A  6E21               	movwf	(___flmul@a+1)^0,c
  4099  000C7C  0EA0               	movlw	160
  4100  000C7E  6E22               	movwf	(___flmul@a+2)^0,c
  4101  000C80  0E40               	movlw	64
  4102  000C82  6E23               	movwf	(___flmul@a+3)^0,c
  4103  000C84  C173  F00E         	movff	_adc_raw_data,___xxtofl@val
  4104  000C88  C174  F00F         	movff	_adc_raw_data+1,___xxtofl@val+1
  4105  000C8C  6A10               	clrf	(___xxtofl@val+2)^0,c
  4106  000C8E  6A11               	clrf	(___xxtofl@val+3)^0,c
  4107  000C90  0E00               	movlw	0
  4108  000C92  ECB6  F01A         	call	___xxtofl
  4109  000C96  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4110  000C9A  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4111  000C9E  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4112  000CA2  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4113  000CA6  ECB3  F00F         	call	___flmul	;wreg free
  4114  000CAA  C01C  F035         	movff	?___flmul,___fldiv@b
  4115  000CAE  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4116  000CB2  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4117  000CB6  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4118  000CBA  0E00               	movlw	0
  4119  000CBC  6E39               	movwf	___fldiv@a^0,c
  4120  000CBE  0E00               	movlw	0
  4121  000CC0  6E3A               	movwf	(___fldiv@a+1)^0,c
  4122  000CC2  0E80               	movlw	128
  4123  000CC4  6E3B               	movwf	(___fldiv@a+2)^0,c
  4124  000CC6  0E44               	movlw	68
  4125  000CC8  6E3C               	movwf	(___fldiv@a+3)^0,c
  4126  000CCA  ECC8  F011         	call	___fldiv	;wreg free
  4127  000CCE  C035  F130         	movff	?___fldiv,_procces_data
  4128  000CD2  C036  F131         	movff	?___fldiv+1,_procces_data+1
  4129  000CD6  C037  F132         	movff	?___fldiv+2,_procces_data+2
  4130  000CDA  C038  F133         	movff	?___fldiv+3,_procces_data+3
  4131  000CDE                     
  4132                           ;fs_adc.c: 100:             convert_data.convert_channel_0 = (uint32_t)((procces_data.ch
      +                          annel_0*999)/5);
  4133  000CDE  0E00               	movlw	0
  4134  000CE0  6E39               	movwf	___fldiv@a^0,c
  4135  000CE2  0E00               	movlw	0
  4136  000CE4  6E3A               	movwf	(___fldiv@a+1)^0,c
  4137  000CE6  0EA0               	movlw	160
  4138  000CE8  6E3B               	movwf	(___fldiv@a+2)^0,c
  4139  000CEA  0E40               	movlw	64
  4140  000CEC  6E3C               	movwf	(___fldiv@a+3)^0,c
  4141  000CEE  0E00               	movlw	0
  4142  000CF0  6E20               	movwf	___flmul@a^0,c
  4143  000CF2  0EC0               	movlw	192
  4144  000CF4  6E21               	movwf	(___flmul@a+1)^0,c
  4145  000CF6  0E79               	movlw	121
  4146  000CF8  6E22               	movwf	(___flmul@a+2)^0,c
  4147  000CFA  0E44               	movlw	68
  4148  000CFC  6E23               	movwf	(___flmul@a+3)^0,c
  4149  000CFE  C130  F01C         	movff	_procces_data,___flmul@b
  4150  000D02  C131  F01D         	movff	_procces_data+1,___flmul@b+1
  4151  000D06  C132  F01E         	movff	_procces_data+2,___flmul@b+2
  4152  000D0A  C133  F01F         	movff	_procces_data+3,___flmul@b+3
  4153  000D0E  ECB3  F00F         	call	___flmul	;wreg free
  4154  000D12  C01C  F035         	movff	?___flmul,___fldiv@b
  4155  000D16  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4156  000D1A  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4157  000D1E  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4158  000D22  ECC8  F011         	call	___fldiv	;wreg free
  4159  000D26  C035  F04E         	movff	?___fldiv,___fltol@f1
  4160  000D2A  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4161  000D2E  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4162  000D32  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4163  000D36  EC69  F021         	call	___fltol	;wreg free
  4164  000D3A  C04E  F100         	movff	?___fltol,_convert_data
  4165  000D3E  C04F  F101         	movff	?___fltol+1,_convert_data+1
  4166  000D42  C050  F102         	movff	?___fltol+2,_convert_data+2
  4167  000D46  C051  F103         	movff	?___fltol+3,_convert_data+3
  4168                           
  4169                           ;fs_adc.c: 101:         break;
  4170  000D4A  EF33  F00A         	goto	l76
  4171  000D4E                     l5717:
  4172                           
  4173                           ; BSR set to: 1
  4174                           ;fs_adc.c: 104:             adc_raw_data.channel_1 = readAdcValue(1);
  4175  000D4E  0E01               	movlw	1
  4176  000D50  ECD8  F029         	call	_readAdcValue
  4177  000D54  C001  F175         	movff	?_readAdcValue,_adc_raw_data+2
  4178  000D58  C002  F176         	movff	?_readAdcValue+1,_adc_raw_data+3
  4179  000D5C                     
  4180                           ;fs_adc.c: 105:             procces_data.channel_1 = (float)((adc_raw_data.channel_1*5.0
      +                          )/1024.0);
  4181  000D5C  0E00               	movlw	0
  4182  000D5E  6E20               	movwf	___flmul@a^0,c
  4183  000D60  0E00               	movlw	0
  4184  000D62  6E21               	movwf	(___flmul@a+1)^0,c
  4185  000D64  0EA0               	movlw	160
  4186  000D66  6E22               	movwf	(___flmul@a+2)^0,c
  4187  000D68  0E40               	movlw	64
  4188  000D6A  6E23               	movwf	(___flmul@a+3)^0,c
  4189  000D6C  C175  F00E         	movff	_adc_raw_data+2,___xxtofl@val
  4190  000D70  C176  F00F         	movff	_adc_raw_data+3,___xxtofl@val+1
  4191  000D74  6A10               	clrf	(___xxtofl@val+2)^0,c
  4192  000D76  6A11               	clrf	(___xxtofl@val+3)^0,c
  4193  000D78  0E00               	movlw	0
  4194  000D7A  ECB6  F01A         	call	___xxtofl
  4195  000D7E  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4196  000D82  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4197  000D86  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4198  000D8A  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4199  000D8E  ECB3  F00F         	call	___flmul	;wreg free
  4200  000D92  C01C  F035         	movff	?___flmul,___fldiv@b
  4201  000D96  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4202  000D9A  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4203  000D9E  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4204  000DA2  0E00               	movlw	0
  4205  000DA4  6E39               	movwf	___fldiv@a^0,c
  4206  000DA6  0E00               	movlw	0
  4207  000DA8  6E3A               	movwf	(___fldiv@a+1)^0,c
  4208  000DAA  0E80               	movlw	128
  4209  000DAC  6E3B               	movwf	(___fldiv@a+2)^0,c
  4210  000DAE  0E44               	movlw	68
  4211  000DB0  6E3C               	movwf	(___fldiv@a+3)^0,c
  4212  000DB2  ECC8  F011         	call	___fldiv	;wreg free
  4213  000DB6  C035  F134         	movff	?___fldiv,_procces_data+4
  4214  000DBA  C036  F135         	movff	?___fldiv+1,_procces_data+5
  4215  000DBE  C037  F136         	movff	?___fldiv+2,_procces_data+6
  4216  000DC2  C038  F137         	movff	?___fldiv+3,_procces_data+7
  4217  000DC6                     
  4218                           ;fs_adc.c: 106:             convert_data.convert_channel_1 = (uint32_t)((procces_data.ch
      +                          annel_1*999)/5);
  4219  000DC6  0E00               	movlw	0
  4220  000DC8  6E39               	movwf	___fldiv@a^0,c
  4221  000DCA  0E00               	movlw	0
  4222  000DCC  6E3A               	movwf	(___fldiv@a+1)^0,c
  4223  000DCE  0EA0               	movlw	160
  4224  000DD0  6E3B               	movwf	(___fldiv@a+2)^0,c
  4225  000DD2  0E40               	movlw	64
  4226  000DD4  6E3C               	movwf	(___fldiv@a+3)^0,c
  4227  000DD6  0E00               	movlw	0
  4228  000DD8  6E20               	movwf	___flmul@a^0,c
  4229  000DDA  0EC0               	movlw	192
  4230  000DDC  6E21               	movwf	(___flmul@a+1)^0,c
  4231  000DDE  0E79               	movlw	121
  4232  000DE0  6E22               	movwf	(___flmul@a+2)^0,c
  4233  000DE2  0E44               	movlw	68
  4234  000DE4  6E23               	movwf	(___flmul@a+3)^0,c
  4235  000DE6  C134  F01C         	movff	_procces_data+4,___flmul@b
  4236  000DEA  C135  F01D         	movff	_procces_data+5,___flmul@b+1
  4237  000DEE  C136  F01E         	movff	_procces_data+6,___flmul@b+2
  4238  000DF2  C137  F01F         	movff	_procces_data+7,___flmul@b+3
  4239  000DF6  ECB3  F00F         	call	___flmul	;wreg free
  4240  000DFA  C01C  F035         	movff	?___flmul,___fldiv@b
  4241  000DFE  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4242  000E02  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4243  000E06  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4244  000E0A  ECC8  F011         	call	___fldiv	;wreg free
  4245  000E0E  C035  F04E         	movff	?___fldiv,___fltol@f1
  4246  000E12  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4247  000E16  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4248  000E1A  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4249  000E1E  EC69  F021         	call	___fltol	;wreg free
  4250  000E22  C04E  F104         	movff	?___fltol,_convert_data+4
  4251  000E26  C04F  F105         	movff	?___fltol+1,_convert_data+5
  4252  000E2A  C050  F106         	movff	?___fltol+2,_convert_data+6
  4253  000E2E  C051  F107         	movff	?___fltol+3,_convert_data+7
  4254                           
  4255                           ;fs_adc.c: 107:         break;
  4256  000E32  EF33  F00A         	goto	l76
  4257  000E36                     l5723:
  4258                           
  4259                           ; BSR set to: 1
  4260                           ;fs_adc.c: 110:             adc_raw_data.channel_2 = readAdcValue(2);
  4261  000E36  0E02               	movlw	2
  4262  000E38  ECD8  F029         	call	_readAdcValue
  4263  000E3C  C001  F177         	movff	?_readAdcValue,_adc_raw_data+4
  4264  000E40  C002  F178         	movff	?_readAdcValue+1,_adc_raw_data+5
  4265  000E44                     
  4266                           ;fs_adc.c: 111:             procces_data.channel_2 = (float)((adc_raw_data.channel_2*5.0
      +                          )/1024.0);
  4267  000E44  0E00               	movlw	0
  4268  000E46  6E20               	movwf	___flmul@a^0,c
  4269  000E48  0E00               	movlw	0
  4270  000E4A  6E21               	movwf	(___flmul@a+1)^0,c
  4271  000E4C  0EA0               	movlw	160
  4272  000E4E  6E22               	movwf	(___flmul@a+2)^0,c
  4273  000E50  0E40               	movlw	64
  4274  000E52  6E23               	movwf	(___flmul@a+3)^0,c
  4275  000E54  C177  F00E         	movff	_adc_raw_data+4,___xxtofl@val
  4276  000E58  C178  F00F         	movff	_adc_raw_data+5,___xxtofl@val+1
  4277  000E5C  6A10               	clrf	(___xxtofl@val+2)^0,c
  4278  000E5E  6A11               	clrf	(___xxtofl@val+3)^0,c
  4279  000E60  0E00               	movlw	0
  4280  000E62  ECB6  F01A         	call	___xxtofl
  4281  000E66  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4282  000E6A  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4283  000E6E  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4284  000E72  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4285  000E76  ECB3  F00F         	call	___flmul	;wreg free
  4286  000E7A  C01C  F035         	movff	?___flmul,___fldiv@b
  4287  000E7E  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4288  000E82  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4289  000E86  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4290  000E8A  0E00               	movlw	0
  4291  000E8C  6E39               	movwf	___fldiv@a^0,c
  4292  000E8E  0E00               	movlw	0
  4293  000E90  6E3A               	movwf	(___fldiv@a+1)^0,c
  4294  000E92  0E80               	movlw	128
  4295  000E94  6E3B               	movwf	(___fldiv@a+2)^0,c
  4296  000E96  0E44               	movlw	68
  4297  000E98  6E3C               	movwf	(___fldiv@a+3)^0,c
  4298  000E9A  ECC8  F011         	call	___fldiv	;wreg free
  4299  000E9E  C035  F138         	movff	?___fldiv,_procces_data+8
  4300  000EA2  C036  F139         	movff	?___fldiv+1,_procces_data+9
  4301  000EA6  C037  F13A         	movff	?___fldiv+2,_procces_data+10
  4302  000EAA  C038  F13B         	movff	?___fldiv+3,_procces_data+11
  4303  000EAE                     
  4304                           ;fs_adc.c: 112:             convert_data.convert_channel_2 = (uint32_t)((procces_data.ch
      +                          annel_2*999)/5);
  4305  000EAE  0E00               	movlw	0
  4306  000EB0  6E39               	movwf	___fldiv@a^0,c
  4307  000EB2  0E00               	movlw	0
  4308  000EB4  6E3A               	movwf	(___fldiv@a+1)^0,c
  4309  000EB6  0EA0               	movlw	160
  4310  000EB8  6E3B               	movwf	(___fldiv@a+2)^0,c
  4311  000EBA  0E40               	movlw	64
  4312  000EBC  6E3C               	movwf	(___fldiv@a+3)^0,c
  4313  000EBE  0E00               	movlw	0
  4314  000EC0  6E20               	movwf	___flmul@a^0,c
  4315  000EC2  0EC0               	movlw	192
  4316  000EC4  6E21               	movwf	(___flmul@a+1)^0,c
  4317  000EC6  0E79               	movlw	121
  4318  000EC8  6E22               	movwf	(___flmul@a+2)^0,c
  4319  000ECA  0E44               	movlw	68
  4320  000ECC  6E23               	movwf	(___flmul@a+3)^0,c
  4321  000ECE  C138  F01C         	movff	_procces_data+8,___flmul@b
  4322  000ED2  C139  F01D         	movff	_procces_data+9,___flmul@b+1
  4323  000ED6  C13A  F01E         	movff	_procces_data+10,___flmul@b+2
  4324  000EDA  C13B  F01F         	movff	_procces_data+11,___flmul@b+3
  4325  000EDE  ECB3  F00F         	call	___flmul	;wreg free
  4326  000EE2  C01C  F035         	movff	?___flmul,___fldiv@b
  4327  000EE6  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4328  000EEA  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4329  000EEE  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4330  000EF2  ECC8  F011         	call	___fldiv	;wreg free
  4331  000EF6  C035  F04E         	movff	?___fldiv,___fltol@f1
  4332  000EFA  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4333  000EFE  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4334  000F02  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4335  000F06  EC69  F021         	call	___fltol	;wreg free
  4336  000F0A  C04E  F108         	movff	?___fltol,_convert_data+8
  4337  000F0E  C04F  F109         	movff	?___fltol+1,_convert_data+9
  4338  000F12  C050  F10A         	movff	?___fltol+2,_convert_data+10
  4339  000F16  C051  F10B         	movff	?___fltol+3,_convert_data+11
  4340  000F1A                     
  4341                           ;fs_adc.c: 113:             convert_data.convert_channel_2_f = (uint16_t)((procces_data.
      +                          channel_2*999)/5);
  4342  000F1A  0E00               	movlw	0
  4343  000F1C  6E39               	movwf	___fldiv@a^0,c
  4344  000F1E  0E00               	movlw	0
  4345  000F20  6E3A               	movwf	(___fldiv@a+1)^0,c
  4346  000F22  0EA0               	movlw	160
  4347  000F24  6E3B               	movwf	(___fldiv@a+2)^0,c
  4348  000F26  0E40               	movlw	64
  4349  000F28  6E3C               	movwf	(___fldiv@a+3)^0,c
  4350  000F2A  0E00               	movlw	0
  4351  000F2C  6E20               	movwf	___flmul@a^0,c
  4352  000F2E  0EC0               	movlw	192
  4353  000F30  6E21               	movwf	(___flmul@a+1)^0,c
  4354  000F32  0E79               	movlw	121
  4355  000F34  6E22               	movwf	(___flmul@a+2)^0,c
  4356  000F36  0E44               	movlw	68
  4357  000F38  6E23               	movwf	(___flmul@a+3)^0,c
  4358  000F3A  C138  F01C         	movff	_procces_data+8,___flmul@b
  4359  000F3E  C139  F01D         	movff	_procces_data+9,___flmul@b+1
  4360  000F42  C13A  F01E         	movff	_procces_data+10,___flmul@b+2
  4361  000F46  C13B  F01F         	movff	_procces_data+11,___flmul@b+3
  4362  000F4A  ECB3  F00F         	call	___flmul	;wreg free
  4363  000F4E  C01C  F035         	movff	?___flmul,___fldiv@b
  4364  000F52  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4365  000F56  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4366  000F5A  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4367  000F5E  ECC8  F011         	call	___fldiv	;wreg free
  4368  000F62  C035  F04E         	movff	?___fldiv,___fltol@f1
  4369  000F66  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4370  000F6A  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4371  000F6E  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4372  000F72  EC69  F021         	call	___fltol	;wreg free
  4373  000F76  C04E  F124         	movff	?___fltol,_convert_data+36
  4374  000F7A  C04F  F125         	movff	?___fltol+1,_convert_data+37
  4375                           
  4376                           ;fs_adc.c: 114:         break;
  4377  000F7E  EF33  F00A         	goto	l76
  4378  000F82                     l5731:
  4379                           
  4380                           ; BSR set to: 1
  4381                           ;fs_adc.c: 117:             adc_raw_data.channel_3 = readAdcValue(3);
  4382  000F82  0E03               	movlw	3
  4383  000F84  ECD8  F029         	call	_readAdcValue
  4384  000F88  C001  F179         	movff	?_readAdcValue,_adc_raw_data+6
  4385  000F8C  C002  F17A         	movff	?_readAdcValue+1,_adc_raw_data+7
  4386  000F90                     
  4387                           ;fs_adc.c: 118:             procces_data.channel_3 = (float)((adc_raw_data.channel_3*5.0
      +                          )/1024.0);
  4388  000F90  0E00               	movlw	0
  4389  000F92  6E20               	movwf	___flmul@a^0,c
  4390  000F94  0E00               	movlw	0
  4391  000F96  6E21               	movwf	(___flmul@a+1)^0,c
  4392  000F98  0EA0               	movlw	160
  4393  000F9A  6E22               	movwf	(___flmul@a+2)^0,c
  4394  000F9C  0E40               	movlw	64
  4395  000F9E  6E23               	movwf	(___flmul@a+3)^0,c
  4396  000FA0  C179  F00E         	movff	_adc_raw_data+6,___xxtofl@val
  4397  000FA4  C17A  F00F         	movff	_adc_raw_data+7,___xxtofl@val+1
  4398  000FA8  6A10               	clrf	(___xxtofl@val+2)^0,c
  4399  000FAA  6A11               	clrf	(___xxtofl@val+3)^0,c
  4400  000FAC  0E00               	movlw	0
  4401  000FAE  ECB6  F01A         	call	___xxtofl
  4402  000FB2  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4403  000FB6  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4404  000FBA  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4405  000FBE  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4406  000FC2  ECB3  F00F         	call	___flmul	;wreg free
  4407  000FC6  C01C  F035         	movff	?___flmul,___fldiv@b
  4408  000FCA  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4409  000FCE  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4410  000FD2  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4411  000FD6  0E00               	movlw	0
  4412  000FD8  6E39               	movwf	___fldiv@a^0,c
  4413  000FDA  0E00               	movlw	0
  4414  000FDC  6E3A               	movwf	(___fldiv@a+1)^0,c
  4415  000FDE  0E80               	movlw	128
  4416  000FE0  6E3B               	movwf	(___fldiv@a+2)^0,c
  4417  000FE2  0E44               	movlw	68
  4418  000FE4  6E3C               	movwf	(___fldiv@a+3)^0,c
  4419  000FE6  ECC8  F011         	call	___fldiv	;wreg free
  4420  000FEA  C035  F13C         	movff	?___fldiv,_procces_data+12
  4421  000FEE  C036  F13D         	movff	?___fldiv+1,_procces_data+13
  4422  000FF2  C037  F13E         	movff	?___fldiv+2,_procces_data+14
  4423  000FF6  C038  F13F         	movff	?___fldiv+3,_procces_data+15
  4424  000FFA                     
  4425                           ;fs_adc.c: 119:             convert_data.convert_channel_3 = (uint32_t)((procces_data.ch
      +                          annel_3*999)/5);
  4426  000FFA  0E00               	movlw	0
  4427  000FFC  6E39               	movwf	___fldiv@a^0,c
  4428  000FFE  0E00               	movlw	0
  4429  001000  6E3A               	movwf	(___fldiv@a+1)^0,c
  4430  001002  0EA0               	movlw	160
  4431  001004  6E3B               	movwf	(___fldiv@a+2)^0,c
  4432  001006  0E40               	movlw	64
  4433  001008  6E3C               	movwf	(___fldiv@a+3)^0,c
  4434  00100A  0E00               	movlw	0
  4435  00100C  6E20               	movwf	___flmul@a^0,c
  4436  00100E  0EC0               	movlw	192
  4437  001010  6E21               	movwf	(___flmul@a+1)^0,c
  4438  001012  0E79               	movlw	121
  4439  001014  6E22               	movwf	(___flmul@a+2)^0,c
  4440  001016  0E44               	movlw	68
  4441  001018  6E23               	movwf	(___flmul@a+3)^0,c
  4442  00101A  C13C  F01C         	movff	_procces_data+12,___flmul@b
  4443  00101E  C13D  F01D         	movff	_procces_data+13,___flmul@b+1
  4444  001022  C13E  F01E         	movff	_procces_data+14,___flmul@b+2
  4445  001026  C13F  F01F         	movff	_procces_data+15,___flmul@b+3
  4446  00102A  ECB3  F00F         	call	___flmul	;wreg free
  4447  00102E  C01C  F035         	movff	?___flmul,___fldiv@b
  4448  001032  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4449  001036  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4450  00103A  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4451  00103E  ECC8  F011         	call	___fldiv	;wreg free
  4452  001042  C035  F04E         	movff	?___fldiv,___fltol@f1
  4453  001046  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4454  00104A  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4455  00104E  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4456  001052  EC69  F021         	call	___fltol	;wreg free
  4457  001056  C04E  F10C         	movff	?___fltol,_convert_data+12
  4458  00105A  C04F  F10D         	movff	?___fltol+1,_convert_data+13
  4459  00105E  C050  F10E         	movff	?___fltol+2,_convert_data+14
  4460  001062  C051  F10F         	movff	?___fltol+3,_convert_data+15
  4461                           
  4462                           ;fs_adc.c: 120:         break;
  4463  001066  EF33  F00A         	goto	l76
  4464  00106A                     l5737:
  4465                           
  4466                           ; BSR set to: 1
  4467                           ;fs_adc.c: 123:             adc_raw_data.channel_4 = readAdcValue(4);
  4468  00106A  0E04               	movlw	4
  4469  00106C  ECD8  F029         	call	_readAdcValue
  4470  001070  C001  F17B         	movff	?_readAdcValue,_adc_raw_data+8
  4471  001074  C002  F17C         	movff	?_readAdcValue+1,_adc_raw_data+9
  4472  001078                     
  4473                           ;fs_adc.c: 124:             procces_data.channel_4 = (float)((adc_raw_data.channel_4*5.0
      +                          )/1024.0);
  4474  001078  0E00               	movlw	0
  4475  00107A  6E20               	movwf	___flmul@a^0,c
  4476  00107C  0E00               	movlw	0
  4477  00107E  6E21               	movwf	(___flmul@a+1)^0,c
  4478  001080  0EA0               	movlw	160
  4479  001082  6E22               	movwf	(___flmul@a+2)^0,c
  4480  001084  0E40               	movlw	64
  4481  001086  6E23               	movwf	(___flmul@a+3)^0,c
  4482  001088  C17B  F00E         	movff	_adc_raw_data+8,___xxtofl@val
  4483  00108C  C17C  F00F         	movff	_adc_raw_data+9,___xxtofl@val+1
  4484  001090  6A10               	clrf	(___xxtofl@val+2)^0,c
  4485  001092  6A11               	clrf	(___xxtofl@val+3)^0,c
  4486  001094  0E00               	movlw	0
  4487  001096  ECB6  F01A         	call	___xxtofl
  4488  00109A  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4489  00109E  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4490  0010A2  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4491  0010A6  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4492  0010AA  ECB3  F00F         	call	___flmul	;wreg free
  4493  0010AE  C01C  F035         	movff	?___flmul,___fldiv@b
  4494  0010B2  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4495  0010B6  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4496  0010BA  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4497  0010BE  0E00               	movlw	0
  4498  0010C0  6E39               	movwf	___fldiv@a^0,c
  4499  0010C2  0E00               	movlw	0
  4500  0010C4  6E3A               	movwf	(___fldiv@a+1)^0,c
  4501  0010C6  0E80               	movlw	128
  4502  0010C8  6E3B               	movwf	(___fldiv@a+2)^0,c
  4503  0010CA  0E44               	movlw	68
  4504  0010CC  6E3C               	movwf	(___fldiv@a+3)^0,c
  4505  0010CE  ECC8  F011         	call	___fldiv	;wreg free
  4506  0010D2  C035  F140         	movff	?___fldiv,_procces_data+16
  4507  0010D6  C036  F141         	movff	?___fldiv+1,_procces_data+17
  4508  0010DA  C037  F142         	movff	?___fldiv+2,_procces_data+18
  4509  0010DE  C038  F143         	movff	?___fldiv+3,_procces_data+19
  4510  0010E2                     
  4511                           ;fs_adc.c: 125:             convert_data.convert_channel_4 = (uint32_t)((procces_data.ch
      +                          annel_4*999)/5);
  4512  0010E2  0E00               	movlw	0
  4513  0010E4  6E39               	movwf	___fldiv@a^0,c
  4514  0010E6  0E00               	movlw	0
  4515  0010E8  6E3A               	movwf	(___fldiv@a+1)^0,c
  4516  0010EA  0EA0               	movlw	160
  4517  0010EC  6E3B               	movwf	(___fldiv@a+2)^0,c
  4518  0010EE  0E40               	movlw	64
  4519  0010F0  6E3C               	movwf	(___fldiv@a+3)^0,c
  4520  0010F2  0E00               	movlw	0
  4521  0010F4  6E20               	movwf	___flmul@a^0,c
  4522  0010F6  0EC0               	movlw	192
  4523  0010F8  6E21               	movwf	(___flmul@a+1)^0,c
  4524  0010FA  0E79               	movlw	121
  4525  0010FC  6E22               	movwf	(___flmul@a+2)^0,c
  4526  0010FE  0E44               	movlw	68
  4527  001100  6E23               	movwf	(___flmul@a+3)^0,c
  4528  001102  C140  F01C         	movff	_procces_data+16,___flmul@b
  4529  001106  C141  F01D         	movff	_procces_data+17,___flmul@b+1
  4530  00110A  C142  F01E         	movff	_procces_data+18,___flmul@b+2
  4531  00110E  C143  F01F         	movff	_procces_data+19,___flmul@b+3
  4532  001112  ECB3  F00F         	call	___flmul	;wreg free
  4533  001116  C01C  F035         	movff	?___flmul,___fldiv@b
  4534  00111A  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4535  00111E  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4536  001122  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4537  001126  ECC8  F011         	call	___fldiv	;wreg free
  4538  00112A  C035  F04E         	movff	?___fldiv,___fltol@f1
  4539  00112E  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4540  001132  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4541  001136  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4542  00113A  EC69  F021         	call	___fltol	;wreg free
  4543  00113E  C04E  F110         	movff	?___fltol,_convert_data+16
  4544  001142  C04F  F111         	movff	?___fltol+1,_convert_data+17
  4545  001146  C050  F112         	movff	?___fltol+2,_convert_data+18
  4546  00114A  C051  F113         	movff	?___fltol+3,_convert_data+19
  4547                           
  4548                           ;fs_adc.c: 126:         break;
  4549  00114E  EF33  F00A         	goto	l76
  4550  001152                     l5743:
  4551                           
  4552                           ; BSR set to: 1
  4553                           ;fs_adc.c: 129:            adc_raw_data.channel_5 = readAdcValue(5);
  4554  001152  0E05               	movlw	5
  4555  001154  ECD8  F029         	call	_readAdcValue
  4556  001158  C001  F17D         	movff	?_readAdcValue,_adc_raw_data+10
  4557  00115C  C002  F17E         	movff	?_readAdcValue+1,_adc_raw_data+11
  4558  001160                     
  4559                           ;fs_adc.c: 130:            procces_data.channel_5 = (float)((adc_raw_data.channel_5*5.0)
      +                          /1024.0);
  4560  001160  0E00               	movlw	0
  4561  001162  6E20               	movwf	___flmul@a^0,c
  4562  001164  0E00               	movlw	0
  4563  001166  6E21               	movwf	(___flmul@a+1)^0,c
  4564  001168  0EA0               	movlw	160
  4565  00116A  6E22               	movwf	(___flmul@a+2)^0,c
  4566  00116C  0E40               	movlw	64
  4567  00116E  6E23               	movwf	(___flmul@a+3)^0,c
  4568  001170  C17D  F00E         	movff	_adc_raw_data+10,___xxtofl@val
  4569  001174  C17E  F00F         	movff	_adc_raw_data+11,___xxtofl@val+1
  4570  001178  6A10               	clrf	(___xxtofl@val+2)^0,c
  4571  00117A  6A11               	clrf	(___xxtofl@val+3)^0,c
  4572  00117C  0E00               	movlw	0
  4573  00117E  ECB6  F01A         	call	___xxtofl
  4574  001182  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4575  001186  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4576  00118A  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4577  00118E  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4578  001192  ECB3  F00F         	call	___flmul	;wreg free
  4579  001196  C01C  F035         	movff	?___flmul,___fldiv@b
  4580  00119A  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4581  00119E  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4582  0011A2  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4583  0011A6  0E00               	movlw	0
  4584  0011A8  6E39               	movwf	___fldiv@a^0,c
  4585  0011AA  0E00               	movlw	0
  4586  0011AC  6E3A               	movwf	(___fldiv@a+1)^0,c
  4587  0011AE  0E80               	movlw	128
  4588  0011B0  6E3B               	movwf	(___fldiv@a+2)^0,c
  4589  0011B2  0E44               	movlw	68
  4590  0011B4  6E3C               	movwf	(___fldiv@a+3)^0,c
  4591  0011B6  ECC8  F011         	call	___fldiv	;wreg free
  4592  0011BA  C035  F144         	movff	?___fldiv,_procces_data+20
  4593  0011BE  C036  F145         	movff	?___fldiv+1,_procces_data+21
  4594  0011C2  C037  F146         	movff	?___fldiv+2,_procces_data+22
  4595  0011C6  C038  F147         	movff	?___fldiv+3,_procces_data+23
  4596  0011CA                     
  4597                           ;fs_adc.c: 131:            convert_data.convert_channel_5 = (uint32_t)((procces_data.cha
      +                          nnel_5*999)/5);
  4598  0011CA  0E00               	movlw	0
  4599  0011CC  6E39               	movwf	___fldiv@a^0,c
  4600  0011CE  0E00               	movlw	0
  4601  0011D0  6E3A               	movwf	(___fldiv@a+1)^0,c
  4602  0011D2  0EA0               	movlw	160
  4603  0011D4  6E3B               	movwf	(___fldiv@a+2)^0,c
  4604  0011D6  0E40               	movlw	64
  4605  0011D8  6E3C               	movwf	(___fldiv@a+3)^0,c
  4606  0011DA  0E00               	movlw	0
  4607  0011DC  6E20               	movwf	___flmul@a^0,c
  4608  0011DE  0EC0               	movlw	192
  4609  0011E0  6E21               	movwf	(___flmul@a+1)^0,c
  4610  0011E2  0E79               	movlw	121
  4611  0011E4  6E22               	movwf	(___flmul@a+2)^0,c
  4612  0011E6  0E44               	movlw	68
  4613  0011E8  6E23               	movwf	(___flmul@a+3)^0,c
  4614  0011EA  C144  F01C         	movff	_procces_data+20,___flmul@b
  4615  0011EE  C145  F01D         	movff	_procces_data+21,___flmul@b+1
  4616  0011F2  C146  F01E         	movff	_procces_data+22,___flmul@b+2
  4617  0011F6  C147  F01F         	movff	_procces_data+23,___flmul@b+3
  4618  0011FA  ECB3  F00F         	call	___flmul	;wreg free
  4619  0011FE  C01C  F035         	movff	?___flmul,___fldiv@b
  4620  001202  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4621  001206  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4622  00120A  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4623  00120E  ECC8  F011         	call	___fldiv	;wreg free
  4624  001212  C035  F04E         	movff	?___fldiv,___fltol@f1
  4625  001216  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4626  00121A  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4627  00121E  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4628  001222  EC69  F021         	call	___fltol	;wreg free
  4629  001226  C04E  F114         	movff	?___fltol,_convert_data+20
  4630  00122A  C04F  F115         	movff	?___fltol+1,_convert_data+21
  4631  00122E  C050  F116         	movff	?___fltol+2,_convert_data+22
  4632  001232  C051  F117         	movff	?___fltol+3,_convert_data+23
  4633                           
  4634                           ;fs_adc.c: 132:         break;
  4635  001236  EF33  F00A         	goto	l76
  4636  00123A                     l5749:
  4637                           
  4638                           ; BSR set to: 1
  4639                           ;fs_adc.c: 135:             adc_raw_data.channel_6 = readAdcValue(6);
  4640  00123A  0E06               	movlw	6
  4641  00123C  ECD8  F029         	call	_readAdcValue
  4642  001240  C001  F17F         	movff	?_readAdcValue,_adc_raw_data+12
  4643  001244  C002  F180         	movff	?_readAdcValue+1,_adc_raw_data+13
  4644  001248                     
  4645                           ;fs_adc.c: 136:             procces_data.channel_6 = (float)((adc_raw_data.channel_6*5.0
      +                          )/1024.0);
  4646  001248  0E00               	movlw	0
  4647  00124A  6E20               	movwf	___flmul@a^0,c
  4648  00124C  0E00               	movlw	0
  4649  00124E  6E21               	movwf	(___flmul@a+1)^0,c
  4650  001250  0EA0               	movlw	160
  4651  001252  6E22               	movwf	(___flmul@a+2)^0,c
  4652  001254  0E40               	movlw	64
  4653  001256  6E23               	movwf	(___flmul@a+3)^0,c
  4654  001258  C17F  F00E         	movff	_adc_raw_data+12,___xxtofl@val
  4655  00125C  C180  F00F         	movff	_adc_raw_data+13,___xxtofl@val+1
  4656  001260  6A10               	clrf	(___xxtofl@val+2)^0,c
  4657  001262  6A11               	clrf	(___xxtofl@val+3)^0,c
  4658  001264  0E00               	movlw	0
  4659  001266  ECB6  F01A         	call	___xxtofl
  4660  00126A  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4661  00126E  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4662  001272  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4663  001276  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4664  00127A  ECB3  F00F         	call	___flmul	;wreg free
  4665  00127E  C01C  F035         	movff	?___flmul,___fldiv@b
  4666  001282  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4667  001286  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4668  00128A  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4669  00128E  0E00               	movlw	0
  4670  001290  6E39               	movwf	___fldiv@a^0,c
  4671  001292  0E00               	movlw	0
  4672  001294  6E3A               	movwf	(___fldiv@a+1)^0,c
  4673  001296  0E80               	movlw	128
  4674  001298  6E3B               	movwf	(___fldiv@a+2)^0,c
  4675  00129A  0E44               	movlw	68
  4676  00129C  6E3C               	movwf	(___fldiv@a+3)^0,c
  4677  00129E  ECC8  F011         	call	___fldiv	;wreg free
  4678  0012A2  C035  F148         	movff	?___fldiv,_procces_data+24
  4679  0012A6  C036  F149         	movff	?___fldiv+1,_procces_data+25
  4680  0012AA  C037  F14A         	movff	?___fldiv+2,_procces_data+26
  4681  0012AE  C038  F14B         	movff	?___fldiv+3,_procces_data+27
  4682  0012B2                     
  4683                           ;fs_adc.c: 137:             convert_data.convert_channel_6 = (uint32_t)((procces_data.ch
      +                          annel_6*999)/5);
  4684  0012B2  0E00               	movlw	0
  4685  0012B4  6E39               	movwf	___fldiv@a^0,c
  4686  0012B6  0E00               	movlw	0
  4687  0012B8  6E3A               	movwf	(___fldiv@a+1)^0,c
  4688  0012BA  0EA0               	movlw	160
  4689  0012BC  6E3B               	movwf	(___fldiv@a+2)^0,c
  4690  0012BE  0E40               	movlw	64
  4691  0012C0  6E3C               	movwf	(___fldiv@a+3)^0,c
  4692  0012C2  0E00               	movlw	0
  4693  0012C4  6E20               	movwf	___flmul@a^0,c
  4694  0012C6  0EC0               	movlw	192
  4695  0012C8  6E21               	movwf	(___flmul@a+1)^0,c
  4696  0012CA  0E79               	movlw	121
  4697  0012CC  6E22               	movwf	(___flmul@a+2)^0,c
  4698  0012CE  0E44               	movlw	68
  4699  0012D0  6E23               	movwf	(___flmul@a+3)^0,c
  4700  0012D2  C148  F01C         	movff	_procces_data+24,___flmul@b
  4701  0012D6  C149  F01D         	movff	_procces_data+25,___flmul@b+1
  4702  0012DA  C14A  F01E         	movff	_procces_data+26,___flmul@b+2
  4703  0012DE  C14B  F01F         	movff	_procces_data+27,___flmul@b+3
  4704  0012E2  ECB3  F00F         	call	___flmul	;wreg free
  4705  0012E6  C01C  F035         	movff	?___flmul,___fldiv@b
  4706  0012EA  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4707  0012EE  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4708  0012F2  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4709  0012F6  ECC8  F011         	call	___fldiv	;wreg free
  4710  0012FA  C035  F04E         	movff	?___fldiv,___fltol@f1
  4711  0012FE  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4712  001302  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4713  001306  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4714  00130A  EC69  F021         	call	___fltol	;wreg free
  4715  00130E  C04E  F118         	movff	?___fltol,_convert_data+24
  4716  001312  C04F  F119         	movff	?___fltol+1,_convert_data+25
  4717  001316  C050  F11A         	movff	?___fltol+2,_convert_data+26
  4718  00131A  C051  F11B         	movff	?___fltol+3,_convert_data+27
  4719                           
  4720                           ;fs_adc.c: 138:         break;
  4721  00131E  EF33  F00A         	goto	l76
  4722  001322                     l5755:
  4723                           
  4724                           ; BSR set to: 1
  4725                           ;fs_adc.c: 141:             adc_raw_data.channel_7 = readAdcValue(7);
  4726  001322  0E07               	movlw	7
  4727  001324  ECD8  F029         	call	_readAdcValue
  4728  001328  C001  F181         	movff	?_readAdcValue,_adc_raw_data+14
  4729  00132C  C002  F182         	movff	?_readAdcValue+1,_adc_raw_data+15
  4730  001330                     
  4731                           ;fs_adc.c: 142:             procces_data.channel_7 = (float)((adc_raw_data.channel_7*5.0
      +                          )/1024.0);
  4732  001330  0E00               	movlw	0
  4733  001332  6E20               	movwf	___flmul@a^0,c
  4734  001334  0E00               	movlw	0
  4735  001336  6E21               	movwf	(___flmul@a+1)^0,c
  4736  001338  0EA0               	movlw	160
  4737  00133A  6E22               	movwf	(___flmul@a+2)^0,c
  4738  00133C  0E40               	movlw	64
  4739  00133E  6E23               	movwf	(___flmul@a+3)^0,c
  4740  001340  C181  F00E         	movff	_adc_raw_data+14,___xxtofl@val
  4741  001344  C182  F00F         	movff	_adc_raw_data+15,___xxtofl@val+1
  4742  001348  6A10               	clrf	(___xxtofl@val+2)^0,c
  4743  00134A  6A11               	clrf	(___xxtofl@val+3)^0,c
  4744  00134C  0E00               	movlw	0
  4745  00134E  ECB6  F01A         	call	___xxtofl
  4746  001352  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4747  001356  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4748  00135A  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4749  00135E  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4750  001362  ECB3  F00F         	call	___flmul	;wreg free
  4751  001366  C01C  F035         	movff	?___flmul,___fldiv@b
  4752  00136A  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4753  00136E  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4754  001372  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4755  001376  0E00               	movlw	0
  4756  001378  6E39               	movwf	___fldiv@a^0,c
  4757  00137A  0E00               	movlw	0
  4758  00137C  6E3A               	movwf	(___fldiv@a+1)^0,c
  4759  00137E  0E80               	movlw	128
  4760  001380  6E3B               	movwf	(___fldiv@a+2)^0,c
  4761  001382  0E44               	movlw	68
  4762  001384  6E3C               	movwf	(___fldiv@a+3)^0,c
  4763  001386  ECC8  F011         	call	___fldiv	;wreg free
  4764  00138A  C035  F14C         	movff	?___fldiv,_procces_data+28
  4765  00138E  C036  F14D         	movff	?___fldiv+1,_procces_data+29
  4766  001392  C037  F14E         	movff	?___fldiv+2,_procces_data+30
  4767  001396  C038  F14F         	movff	?___fldiv+3,_procces_data+31
  4768  00139A                     
  4769                           ;fs_adc.c: 143:             convert_data.convert_channel_7 = (uint32_t)((procces_data.ch
      +                          annel_7*999)/5);
  4770  00139A  0E00               	movlw	0
  4771  00139C  6E39               	movwf	___fldiv@a^0,c
  4772  00139E  0E00               	movlw	0
  4773  0013A0  6E3A               	movwf	(___fldiv@a+1)^0,c
  4774  0013A2  0EA0               	movlw	160
  4775  0013A4  6E3B               	movwf	(___fldiv@a+2)^0,c
  4776  0013A6  0E40               	movlw	64
  4777  0013A8  6E3C               	movwf	(___fldiv@a+3)^0,c
  4778  0013AA  0E00               	movlw	0
  4779  0013AC  6E20               	movwf	___flmul@a^0,c
  4780  0013AE  0EC0               	movlw	192
  4781  0013B0  6E21               	movwf	(___flmul@a+1)^0,c
  4782  0013B2  0E79               	movlw	121
  4783  0013B4  6E22               	movwf	(___flmul@a+2)^0,c
  4784  0013B6  0E44               	movlw	68
  4785  0013B8  6E23               	movwf	(___flmul@a+3)^0,c
  4786  0013BA  C14C  F01C         	movff	_procces_data+28,___flmul@b
  4787  0013BE  C14D  F01D         	movff	_procces_data+29,___flmul@b+1
  4788  0013C2  C14E  F01E         	movff	_procces_data+30,___flmul@b+2
  4789  0013C6  C14F  F01F         	movff	_procces_data+31,___flmul@b+3
  4790  0013CA  ECB3  F00F         	call	___flmul	;wreg free
  4791  0013CE  C01C  F035         	movff	?___flmul,___fldiv@b
  4792  0013D2  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4793  0013D6  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4794  0013DA  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4795  0013DE  ECC8  F011         	call	___fldiv	;wreg free
  4796  0013E2  C035  F04E         	movff	?___fldiv,___fltol@f1
  4797  0013E6  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4798  0013EA  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4799  0013EE  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4800  0013F2  EC69  F021         	call	___fltol	;wreg free
  4801  0013F6  C04E  F11C         	movff	?___fltol,_convert_data+28
  4802  0013FA  C04F  F11D         	movff	?___fltol+1,_convert_data+29
  4803  0013FE  C050  F11E         	movff	?___fltol+2,_convert_data+30
  4804  001402  C051  F11F         	movff	?___fltol+3,_convert_data+31
  4805                           
  4806                           ;fs_adc.c: 144:         break;
  4807  001406  EF33  F00A         	goto	l76
  4808  00140A                     l5763:
  4809  00140A  0101               	movlb	1	; () banked
  4810  00140C  5194               	movf	(_timer_value+5)& (0+255),w,b
  4811  00140E  6E58               	movwf	??_scanAdcConversion^0,c
  4812  001410  6A59               	clrf	(??_scanAdcConversion+1)^0,c
  4813                           
  4814                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4815                           ; Switch size 1, requested type "simple"
  4816                           ; Number of cases is 1, Range of values is 0 to 0
  4817                           ; switch strategies available:
  4818                           ; Name         Instructions Cycles
  4819                           ; simple_byte            4     3 (average)
  4820                           ;	Chosen strategy is simple_byte
  4821  001412  5059               	movf	(??_scanAdcConversion+1)^0,w,c
  4822  001414  0A00               	xorlw	0	; case 0
  4823  001416  B4D8               	btfsc	status,2,c
  4824  001418  EF10  F00A         	goto	l6617
  4825  00141C  EF33  F00A         	goto	l76
  4826  001420                     l6617:
  4827                           
  4828                           ; BSR set to: 1
  4829                           ; Switch size 1, requested type "simple"
  4830                           ; Number of cases is 8, Range of values is 1 to 8
  4831                           ; switch strategies available:
  4832                           ; Name         Instructions Cycles
  4833                           ; simple_byte           25    13 (average)
  4834                           ;	Chosen strategy is simple_byte
  4835  001420  5058               	movf	??_scanAdcConversion^0,w,c
  4836  001422  0A01               	xorlw	1	; case 1
  4837  001424  B4D8               	btfsc	status,2,c
  4838  001426  EF33  F006         	goto	l5711
  4839  00142A  0A03               	xorlw	3	; case 2
  4840  00142C  B4D8               	btfsc	status,2,c
  4841  00142E  EFA7  F006         	goto	l5717
  4842  001432  0A01               	xorlw	1	; case 3
  4843  001434  B4D8               	btfsc	status,2,c
  4844  001436  EF1B  F007         	goto	l5723
  4845  00143A  0A07               	xorlw	7	; case 4
  4846  00143C  B4D8               	btfsc	status,2,c
  4847  00143E  EFC1  F007         	goto	l5731
  4848  001442  0A01               	xorlw	1	; case 5
  4849  001444  B4D8               	btfsc	status,2,c
  4850  001446  EF35  F008         	goto	l5737
  4851  00144A  0A03               	xorlw	3	; case 6
  4852  00144C  B4D8               	btfsc	status,2,c
  4853  00144E  EFA9  F008         	goto	l5743
  4854  001452  0A01               	xorlw	1	; case 7
  4855  001454  B4D8               	btfsc	status,2,c
  4856  001456  EF1D  F009         	goto	l5749
  4857  00145A  0A0F               	xorlw	15	; case 8
  4858  00145C  B4D8               	btfsc	status,2,c
  4859  00145E  EF91  F009         	goto	l5755
  4860  001462  EF33  F00A         	goto	l76
  4861  001466                     l76:
  4862  001466  0012               	return		;funcret
  4863  001468                     __end_of_scanAdcConversion:
  4864                           	callstack 0
  4865                           
  4866 ;; *************** function _readAdcValue *****************
  4867 ;; Defined at:
  4868 ;;		line 34 in file "fs_adc.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;  adcChannel      1    wreg     unsigned char 
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;  adcChannel      1    4[COMRAM] unsigned char 
  4873 ;;  adcValue        2    5[COMRAM] unsigned short 
  4874 ;; Return value:  Size  Location     Type
  4875 ;;                  2    0[COMRAM] unsigned short 
  4876 ;; Registers used:
  4877 ;;		wreg, status,2, status,0
  4878 ;; Tracked objects:
  4879 ;;		On entry : 0/0
  4880 ;;		On exit  : 0/0
  4881 ;;		Unchanged: 0/0
  4882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4883 ;;      Params:         2       0       0       0       0       0       0
  4884 ;;      Locals:         3       0       0       0       0       0       0
  4885 ;;      Temps:          2       0       0       0       0       0       0
  4886 ;;      Totals:         7       0       0       0       0       0       0
  4887 ;;Total ram usage:        7 bytes
  4888 ;; Hardware stack levels used:    1
  4889 ;; Hardware stack levels required when called:    1
  4890 ;; This function calls:
  4891 ;;		Nothing
  4892 ;; This function is called by:
  4893 ;;		_scanAdcConversion
  4894 ;; This function uses a non-reentrant model
  4895 ;;
  4896                           
  4897                           	psect	text14
  4898  0053B0                     __ptext14:
  4899                           	callstack 0
  4900  0053B0                     _readAdcValue:
  4901                           	callstack 24
  4902                           
  4903                           ;incstack = 0
  4904                           ;readAdcValue@adcChannel stored from wreg
  4905  0053B0  6E05               	movwf	readAdcValue@adcChannel^0,c
  4906  0053B2                     
  4907                           ;fs_adc.c: 38:  ADCON0bits.CHS = adcChannel;
  4908  0053B2  C005  F003         	movff	readAdcValue@adcChannel,??_readAdcValue
  4909  0053B6  4603               	rlncf	??_readAdcValue^0,f,c
  4910  0053B8  4603               	rlncf	??_readAdcValue^0,f,c
  4911  0053BA  50C2               	movf	194,w,c	;volatile
  4912  0053BC  1803               	xorwf	??_readAdcValue^0,w,c
  4913  0053BE  0B83               	andlw	-125
  4914  0053C0  1803               	xorwf	??_readAdcValue^0,w,c
  4915  0053C2  6EC2               	movwf	194,c	;volatile
  4916  0053C4                     
  4917                           ;fs_adc.c: 39:  ADCON0bits.ADON = 1;
  4918  0053C4  80C2               	bsf	194,0,c	;volatile
  4919  0053C6                     
  4920                           ;fs_adc.c: 40:  ADCON0bits.GO_nDONE = 1;
  4921  0053C6  82C2               	bsf	194,1,c	;volatile
  4922  0053C8                     l57:
  4923  0053C8  B2C2               	btfsc	194,1,c	;volatile
  4924  0053CA  EFE9  F029         	goto	u6401
  4925  0053CE  EFEB  F029         	goto	u6400
  4926  0053D2                     u6401:
  4927  0053D2  EFE4  F029         	goto	l57
  4928  0053D6                     u6400:
  4929  0053D6                     
  4930                           ;fs_adc.c: 42:  adcValue = (uint16_t)((ADRESH << 8) + ADRESL);
  4931  0053D6  50C4               	movf	196,w,c	;volatile
  4932  0053D8  6E04               	movwf	(??_readAdcValue+1)^0,c
  4933  0053DA  6A03               	clrf	??_readAdcValue^0,c
  4934  0053DC  50C3               	movf	195,w,c	;volatile
  4935  0053DE  2403               	addwf	??_readAdcValue^0,w,c
  4936  0053E0  6E06               	movwf	readAdcValue@adcValue^0,c
  4937  0053E2  0E00               	movlw	0
  4938  0053E4  2004               	addwfc	(??_readAdcValue+1)^0,w,c
  4939  0053E6  6E07               	movwf	(readAdcValue@adcValue+1)^0,c
  4940  0053E8                     
  4941                           ;fs_adc.c: 43:     return adcValue;
  4942  0053E8  C006  F001         	movff	readAdcValue@adcValue,?_readAdcValue
  4943  0053EC  C007  F002         	movff	readAdcValue@adcValue+1,?_readAdcValue+1
  4944  0053F0  0012               	return		;funcret
  4945  0053F2                     __end_of_readAdcValue:
  4946                           	callstack 0
  4947                           
  4948 ;; *************** function _calculatedAverageValue *****************
  4949 ;; Defined at:
  4950 ;;		line 154 in file "fs_adc.c"
  4951 ;; Parameters:    Size  Location     Type
  4952 ;;		None
  4953 ;; Auto vars:     Size  Location     Type
  4954 ;;		None
  4955 ;; Return value:  Size  Location     Type
  4956 ;;                  1    wreg      void 
  4957 ;; Registers used:
  4958 ;;		wreg, status,2, status,0, cstack
  4959 ;; Tracked objects:
  4960 ;;		On entry : 0/0
  4961 ;;		On exit  : 0/0
  4962 ;;		Unchanged: 0/0
  4963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4964 ;;      Params:         0       0       0       0       0       0       0
  4965 ;;      Locals:         0       0       0       0       0       0       0
  4966 ;;      Temps:         24       0       0       0       0       0       0
  4967 ;;      Totals:        24       0       0       0       0       0       0
  4968 ;;Total ram usage:       24 bytes
  4969 ;; Hardware stack levels used:    1
  4970 ;; Hardware stack levels required when called:    2
  4971 ;; This function calls:
  4972 ;;		___lldiv
  4973 ;;		___lmul
  4974 ;;		___xxtofl
  4975 ;; This function is called by:
  4976 ;;		_startMotor
  4977 ;; This function uses a non-reentrant model
  4978 ;;
  4979                           
  4980                           	psect	text15
  4981  00272A                     __ptext15:
  4982                           	callstack 0
  4983  00272A                     _calculatedAverageValue:
  4984                           	callstack 24
  4985  00272A                     
  4986                           ;fs_adc.c: 156:     driver_limit.pay = 0;
  4987  00272A  0E00               	movlw	0
  4988  00272C  0101               	movlb	1	; () banked
  4989  00272E  6F83               	movwf	_driver_limit& (0+255),b
  4990  002730  0E00               	movlw	0
  4991  002732  6F84               	movwf	(_driver_limit+1)& (0+255),b
  4992  002734  0E00               	movlw	0
  4993  002736  6F85               	movwf	(_driver_limit+2)& (0+255),b
  4994  002738  0E00               	movlw	0
  4995  00273A  6F86               	movwf	(_driver_limit+3)& (0+255),b
  4996                           
  4997                           ;fs_adc.c: 157:     driver_limit.payda = 0;
  4998  00273C  0E00               	movlw	0
  4999  00273E  6F87               	movwf	(_driver_limit+4)& (0+255),b
  5000  002740  0E00               	movlw	0
  5001  002742  6F88               	movwf	(_driver_limit+5)& (0+255),b
  5002  002744  0E00               	movlw	0
  5003  002746  6F89               	movwf	(_driver_limit+6)& (0+255),b
  5004  002748  0E00               	movlw	0
  5005  00274A  6F8A               	movwf	(_driver_limit+7)& (0+255),b
  5006                           
  5007                           ;fs_adc.c: 158:     driver_limit.ortalama = 0;
  5008  00274C  0E00               	movlw	0
  5009  00274E  6F8B               	movwf	(_driver_limit+8)& (0+255),b
  5010  002750  0E00               	movlw	0
  5011  002752  6F8C               	movwf	(_driver_limit+9)& (0+255),b
  5012  002754  0E00               	movlw	0
  5013  002756  6F8D               	movwf	(_driver_limit+10)& (0+255),b
  5014  002758  0E00               	movlw	0
  5015  00275A  6F8E               	movwf	(_driver_limit+11)& (0+255),b
  5016  00275C                     
  5017                           ; BSR set to: 1
  5018                           ;fs_adc.c: 161:    driver_limit.pay =(uint32_t) ( (convert_data.convert_channel_0 *1) +
  5019  00275C  C10C  F001         	movff	_convert_data+12,___lmul@multiplier
  5020  002760  C10D  F002         	movff	_convert_data+13,___lmul@multiplier+1
  5021  002764  C10E  F003         	movff	_convert_data+14,___lmul@multiplier+2
  5022  002768  C10F  F004         	movff	_convert_data+15,___lmul@multiplier+3
  5023  00276C  0EB8               	movlw	184
  5024  00276E  6E05               	movwf	___lmul@multiplicand^0,c
  5025  002770  0E0B               	movlw	11
  5026  002772  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5027  002774  0E00               	movlw	0
  5028  002776  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5029  002778  0E00               	movlw	0
  5030  00277A  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5031  00277C  ECCA  F027         	call	___lmul	;wreg free
  5032  002780  C001  F01C         	movff	?___lmul,??_calculatedAverageValue
  5033  002784  C002  F01D         	movff	?___lmul+1,??_calculatedAverageValue+1
  5034  002788  C003  F01E         	movff	?___lmul+2,??_calculatedAverageValue+2
  5035  00278C  C004  F01F         	movff	?___lmul+3,??_calculatedAverageValue+3
  5036  002790  C108  F001         	movff	_convert_data+8,___lmul@multiplier
  5037  002794  C109  F002         	movff	_convert_data+9,___lmul@multiplier+1
  5038  002798  C10A  F003         	movff	_convert_data+10,___lmul@multiplier+2
  5039  00279C  C10B  F004         	movff	_convert_data+11,___lmul@multiplier+3
  5040  0027A0  0ED0               	movlw	208
  5041  0027A2  6E05               	movwf	___lmul@multiplicand^0,c
  5042  0027A4  0E07               	movlw	7
  5043  0027A6  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5044  0027A8  0E00               	movlw	0
  5045  0027AA  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5046  0027AC  0E00               	movlw	0
  5047  0027AE  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5048  0027B0  ECCA  F027         	call	___lmul	;wreg free
  5049  0027B4  5001               	movf	?___lmul^0,w,c
  5050  0027B6  241C               	addwf	??_calculatedAverageValue^0,w,c
  5051  0027B8  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5052  0027BA  5002               	movf	(?___lmul+1)^0,w,c
  5053  0027BC  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5054  0027BE  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5055  0027C0  5003               	movf	(?___lmul+2)^0,w,c
  5056  0027C2  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5057  0027C4  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5058  0027C6  5004               	movf	(?___lmul+3)^0,w,c
  5059  0027C8  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5060  0027CA  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5061  0027CC  C104  F001         	movff	_convert_data+4,___lmul@multiplier
  5062  0027D0  C105  F002         	movff	_convert_data+5,___lmul@multiplier+1
  5063  0027D4  C106  F003         	movff	_convert_data+6,___lmul@multiplier+2
  5064  0027D8  C107  F004         	movff	_convert_data+7,___lmul@multiplier+3
  5065  0027DC  0EE8               	movlw	232
  5066  0027DE  6E05               	movwf	___lmul@multiplicand^0,c
  5067  0027E0  0E03               	movlw	3
  5068  0027E2  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5069  0027E4  0E00               	movlw	0
  5070  0027E6  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5071  0027E8  0E00               	movlw	0
  5072  0027EA  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5073  0027EC  ECCA  F027         	call	___lmul	;wreg free
  5074  0027F0  5001               	movf	?___lmul^0,w,c
  5075  0027F2  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5076  0027F4  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5077  0027F6  5002               	movf	(?___lmul+1)^0,w,c
  5078  0027F8  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5079  0027FA  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5080  0027FC  5003               	movf	(?___lmul+2)^0,w,c
  5081  0027FE  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5082  002800  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5083  002802  5004               	movf	(?___lmul+3)^0,w,c
  5084  002804  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5085  002806  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5086  002808  0101               	movlb	1	; () banked
  5087  00280A  5100               	movf	_convert_data& (0+255),w,b
  5088  00280C  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5089  00280E  6F83               	movwf	_driver_limit& (0+255),b
  5090  002810  5101               	movf	(_convert_data+1)& (0+255),w,b
  5091  002812  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5092  002814  6F84               	movwf	(_driver_limit+1)& (0+255),b
  5093  002816  5102               	movf	(_convert_data+2)& (0+255),w,b
  5094  002818  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5095  00281A  6F85               	movwf	(_driver_limit+2)& (0+255),b
  5096  00281C  5103               	movf	(_convert_data+3)& (0+255),w,b
  5097  00281E  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5098  002820  6F86               	movwf	(_driver_limit+3)& (0+255),b
  5099  002822                     
  5100                           ; BSR set to: 1
  5101                           ;fs_adc.c: 166:    driver_limit.pay += (uint32_t)( (convert_data.convert_channel_4 * 400
      +                          0) +
  5102  002822  C11C  F001         	movff	_convert_data+28,___lmul@multiplier
  5103  002826  C11D  F002         	movff	_convert_data+29,___lmul@multiplier+1
  5104  00282A  C11E  F003         	movff	_convert_data+30,___lmul@multiplier+2
  5105  00282E  C11F  F004         	movff	_convert_data+31,___lmul@multiplier+3
  5106  002832  0E58               	movlw	88
  5107  002834  6E05               	movwf	___lmul@multiplicand^0,c
  5108  002836  0E1B               	movlw	27
  5109  002838  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5110  00283A  0E00               	movlw	0
  5111  00283C  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5112  00283E  0E00               	movlw	0
  5113  002840  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5114  002842  ECCA  F027         	call	___lmul	;wreg free
  5115  002846  C001  F01C         	movff	?___lmul,??_calculatedAverageValue
  5116  00284A  C002  F01D         	movff	?___lmul+1,??_calculatedAverageValue+1
  5117  00284E  C003  F01E         	movff	?___lmul+2,??_calculatedAverageValue+2
  5118  002852  C004  F01F         	movff	?___lmul+3,??_calculatedAverageValue+3
  5119  002856  C118  F001         	movff	_convert_data+24,___lmul@multiplier
  5120  00285A  C119  F002         	movff	_convert_data+25,___lmul@multiplier+1
  5121  00285E  C11A  F003         	movff	_convert_data+26,___lmul@multiplier+2
  5122  002862  C11B  F004         	movff	_convert_data+27,___lmul@multiplier+3
  5123  002866  0E70               	movlw	112
  5124  002868  6E05               	movwf	___lmul@multiplicand^0,c
  5125  00286A  0E17               	movlw	23
  5126  00286C  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5127  00286E  0E00               	movlw	0
  5128  002870  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5129  002872  0E00               	movlw	0
  5130  002874  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5131  002876  ECCA  F027         	call	___lmul	;wreg free
  5132  00287A  5001               	movf	?___lmul^0,w,c
  5133  00287C  241C               	addwf	??_calculatedAverageValue^0,w,c
  5134  00287E  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5135  002880  5002               	movf	(?___lmul+1)^0,w,c
  5136  002882  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5137  002884  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5138  002886  5003               	movf	(?___lmul+2)^0,w,c
  5139  002888  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5140  00288A  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5141  00288C  5004               	movf	(?___lmul+3)^0,w,c
  5142  00288E  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5143  002890  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5144  002892  C114  F001         	movff	_convert_data+20,___lmul@multiplier
  5145  002896  C115  F002         	movff	_convert_data+21,___lmul@multiplier+1
  5146  00289A  C116  F003         	movff	_convert_data+22,___lmul@multiplier+2
  5147  00289E  C117  F004         	movff	_convert_data+23,___lmul@multiplier+3
  5148  0028A2  0E88               	movlw	136
  5149  0028A4  6E05               	movwf	___lmul@multiplicand^0,c
  5150  0028A6  0E13               	movlw	19
  5151  0028A8  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5152  0028AA  0E00               	movlw	0
  5153  0028AC  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5154  0028AE  0E00               	movlw	0
  5155  0028B0  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5156  0028B2  ECCA  F027         	call	___lmul	;wreg free
  5157  0028B6  5001               	movf	?___lmul^0,w,c
  5158  0028B8  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5159  0028BA  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5160  0028BC  5002               	movf	(?___lmul+1)^0,w,c
  5161  0028BE  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5162  0028C0  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5163  0028C2  5003               	movf	(?___lmul+2)^0,w,c
  5164  0028C4  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5165  0028C6  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5166  0028C8  5004               	movf	(?___lmul+3)^0,w,c
  5167  0028CA  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5168  0028CC  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5169  0028CE  C110  F001         	movff	_convert_data+16,___lmul@multiplier
  5170  0028D2  C111  F002         	movff	_convert_data+17,___lmul@multiplier+1
  5171  0028D6  C112  F003         	movff	_convert_data+18,___lmul@multiplier+2
  5172  0028DA  C113  F004         	movff	_convert_data+19,___lmul@multiplier+3
  5173  0028DE  0EA0               	movlw	160
  5174  0028E0  6E05               	movwf	___lmul@multiplicand^0,c
  5175  0028E2  0E0F               	movlw	15
  5176  0028E4  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5177  0028E6  0E00               	movlw	0
  5178  0028E8  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5179  0028EA  0E00               	movlw	0
  5180  0028EC  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5181  0028EE  ECCA  F027         	call	___lmul	;wreg free
  5182  0028F2  5001               	movf	?___lmul^0,w,c
  5183  0028F4  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5184  0028F6  6E28               	movwf	(??_calculatedAverageValue+12)^0,c
  5185  0028F8  5002               	movf	(?___lmul+1)^0,w,c
  5186  0028FA  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5187  0028FC  6E29               	movwf	(??_calculatedAverageValue+13)^0,c
  5188  0028FE  5003               	movf	(?___lmul+2)^0,w,c
  5189  002900  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5190  002902  6E2A               	movwf	(??_calculatedAverageValue+14)^0,c
  5191  002904  5004               	movf	(?___lmul+3)^0,w,c
  5192  002906  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5193  002908  6E2B               	movwf	(??_calculatedAverageValue+15)^0,c
  5194  00290A  5028               	movf	(??_calculatedAverageValue+12)^0,w,c
  5195  00290C  0101               	movlb	1	; () banked
  5196  00290E  2783               	addwf	_driver_limit& (0+255),f,b
  5197  002910  5029               	movf	(??_calculatedAverageValue+13)^0,w,c
  5198  002912  2384               	addwfc	(_driver_limit+1)& (0+255),f,b
  5199  002914  502A               	movf	(??_calculatedAverageValue+14)^0,w,c
  5200  002916  2385               	addwfc	(_driver_limit+2)& (0+255),f,b
  5201  002918  502B               	movf	(??_calculatedAverageValue+15)^0,w,c
  5202  00291A  2386               	addwfc	(_driver_limit+3)& (0+255),f,b
  5203  00291C                     
  5204                           ; BSR set to: 1
  5205                           ;fs_adc.c: 171:     driver_limit.payda = (uint32_t) (convert_data.convert_channel_0 + co
      +                          nvert_data.convert_channel_1 +
  5206  00291C  5108               	movf	(_convert_data+8)& (0+255),w,b
  5207  00291E  2504               	addwf	(_convert_data+4)& (0+255),w,b
  5208  002920  6E1C               	movwf	??_calculatedAverageValue^0,c
  5209  002922  5109               	movf	(_convert_data+9)& (0+255),w,b
  5210  002924  2105               	addwfc	(_convert_data+5)& (0+255),w,b
  5211  002926  6E1D               	movwf	(??_calculatedAverageValue+1)^0,c
  5212  002928  510A               	movf	(_convert_data+10)& (0+255),w,b
  5213  00292A  2106               	addwfc	(_convert_data+6)& (0+255),w,b
  5214  00292C  6E1E               	movwf	(??_calculatedAverageValue+2)^0,c
  5215  00292E  510B               	movf	(_convert_data+11)& (0+255),w,b
  5216  002930  2107               	addwfc	(_convert_data+7)& (0+255),w,b
  5217  002932  6E1F               	movwf	(??_calculatedAverageValue+3)^0,c
  5218  002934  510C               	movf	(_convert_data+12)& (0+255),w,b
  5219  002936  241C               	addwf	??_calculatedAverageValue^0,w,c
  5220  002938  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5221  00293A  510D               	movf	(_convert_data+13)& (0+255),w,b
  5222  00293C  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5223  00293E  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5224  002940  510E               	movf	(_convert_data+14)& (0+255),w,b
  5225  002942  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5226  002944  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5227  002946  510F               	movf	(_convert_data+15)& (0+255),w,b
  5228  002948  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5229  00294A  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5230  00294C  5110               	movf	(_convert_data+16)& (0+255),w,b
  5231  00294E  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5232  002950  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5233  002952  5111               	movf	(_convert_data+17)& (0+255),w,b
  5234  002954  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5235  002956  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5236  002958  5112               	movf	(_convert_data+18)& (0+255),w,b
  5237  00295A  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5238  00295C  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5239  00295E  5113               	movf	(_convert_data+19)& (0+255),w,b
  5240  002960  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5241  002962  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5242  002964  5114               	movf	(_convert_data+20)& (0+255),w,b
  5243  002966  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5244  002968  6E28               	movwf	(??_calculatedAverageValue+12)^0,c
  5245  00296A  5115               	movf	(_convert_data+21)& (0+255),w,b
  5246  00296C  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5247  00296E  6E29               	movwf	(??_calculatedAverageValue+13)^0,c
  5248  002970  5116               	movf	(_convert_data+22)& (0+255),w,b
  5249  002972  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5250  002974  6E2A               	movwf	(??_calculatedAverageValue+14)^0,c
  5251  002976  5117               	movf	(_convert_data+23)& (0+255),w,b
  5252  002978  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5253  00297A  6E2B               	movwf	(??_calculatedAverageValue+15)^0,c
  5254  00297C  5118               	movf	(_convert_data+24)& (0+255),w,b
  5255  00297E  2428               	addwf	(??_calculatedAverageValue+12)^0,w,c
  5256  002980  6E2C               	movwf	(??_calculatedAverageValue+16)^0,c
  5257  002982  5119               	movf	(_convert_data+25)& (0+255),w,b
  5258  002984  2029               	addwfc	(??_calculatedAverageValue+13)^0,w,c
  5259  002986  6E2D               	movwf	(??_calculatedAverageValue+17)^0,c
  5260  002988  511A               	movf	(_convert_data+26)& (0+255),w,b
  5261  00298A  202A               	addwfc	(??_calculatedAverageValue+14)^0,w,c
  5262  00298C  6E2E               	movwf	(??_calculatedAverageValue+18)^0,c
  5263  00298E  511B               	movf	(_convert_data+27)& (0+255),w,b
  5264  002990  202B               	addwfc	(??_calculatedAverageValue+15)^0,w,c
  5265  002992  6E2F               	movwf	(??_calculatedAverageValue+19)^0,c
  5266  002994  511C               	movf	(_convert_data+28)& (0+255),w,b
  5267  002996  242C               	addwf	(??_calculatedAverageValue+16)^0,w,c
  5268  002998  6E30               	movwf	(??_calculatedAverageValue+20)^0,c
  5269  00299A  511D               	movf	(_convert_data+29)& (0+255),w,b
  5270  00299C  202D               	addwfc	(??_calculatedAverageValue+17)^0,w,c
  5271  00299E  6E31               	movwf	(??_calculatedAverageValue+21)^0,c
  5272  0029A0  511E               	movf	(_convert_data+30)& (0+255),w,b
  5273  0029A2  202E               	addwfc	(??_calculatedAverageValue+18)^0,w,c
  5274  0029A4  6E32               	movwf	(??_calculatedAverageValue+22)^0,c
  5275  0029A6  511F               	movf	(_convert_data+31)& (0+255),w,b
  5276  0029A8  202F               	addwfc	(??_calculatedAverageValue+19)^0,w,c
  5277  0029AA  6E33               	movwf	(??_calculatedAverageValue+23)^0,c
  5278  0029AC  5100               	movf	_convert_data& (0+255),w,b
  5279  0029AE  2430               	addwf	(??_calculatedAverageValue+20)^0,w,c
  5280  0029B0  6F87               	movwf	(_driver_limit+4)& (0+255),b
  5281  0029B2  5101               	movf	(_convert_data+1)& (0+255),w,b
  5282  0029B4  2031               	addwfc	(??_calculatedAverageValue+21)^0,w,c
  5283  0029B6  6F88               	movwf	(_driver_limit+5)& (0+255),b
  5284  0029B8  5102               	movf	(_convert_data+2)& (0+255),w,b
  5285  0029BA  2032               	addwfc	(??_calculatedAverageValue+22)^0,w,c
  5286  0029BC  6F89               	movwf	(_driver_limit+6)& (0+255),b
  5287  0029BE  5103               	movf	(_convert_data+3)& (0+255),w,b
  5288  0029C0  2033               	addwfc	(??_calculatedAverageValue+23)^0,w,c
  5289  0029C2  6F8A               	movwf	(_driver_limit+7)& (0+255),b
  5290  0029C4                     
  5291                           ; BSR set to: 1
  5292                           ;fs_adc.c: 176:     driver_limit.ortalama = (float)(driver_limit.pay/driver_limit.payda)
      +                          ;
  5293  0029C4  C187  F005         	movff	_driver_limit+4,___lldiv@divisor
  5294  0029C8  C188  F006         	movff	_driver_limit+5,___lldiv@divisor+1
  5295  0029CC  C189  F007         	movff	_driver_limit+6,___lldiv@divisor+2
  5296  0029D0  C18A  F008         	movff	_driver_limit+7,___lldiv@divisor+3
  5297  0029D4  C183  F001         	movff	_driver_limit,___lldiv@dividend
  5298  0029D8  C184  F002         	movff	_driver_limit+1,___lldiv@dividend+1
  5299  0029DC  C185  F003         	movff	_driver_limit+2,___lldiv@dividend+2
  5300  0029E0  C186  F004         	movff	_driver_limit+3,___lldiv@dividend+3
  5301  0029E4  ECF1  F025         	call	___lldiv	;wreg free
  5302  0029E8  C001  F00E         	movff	?___lldiv,___xxtofl@val
  5303  0029EC  C002  F00F         	movff	?___lldiv+1,___xxtofl@val+1
  5304  0029F0  C003  F010         	movff	?___lldiv+2,___xxtofl@val+2
  5305  0029F4  C004  F011         	movff	?___lldiv+3,___xxtofl@val+3
  5306  0029F8  0E00               	movlw	0
  5307  0029FA  ECB6  F01A         	call	___xxtofl
  5308  0029FE  C00E  F18B         	movff	?___xxtofl,_driver_limit+8
  5309  002A02  C00F  F18C         	movff	?___xxtofl+1,_driver_limit+9
  5310  002A06  C010  F18D         	movff	?___xxtofl+2,_driver_limit+10
  5311  002A0A  C011  F18E         	movff	?___xxtofl+3,_driver_limit+11
  5312  002A0E  0012               	return		;funcret
  5313  002A10                     __end_of_calculatedAverageValue:
  5314                           	callstack 0
  5315                           
  5316 ;; *************** function ___lmul *****************
  5317 ;; Defined at:
  5318 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul32.c"
  5319 ;; Parameters:    Size  Location     Type
  5320 ;;  multiplier      4    0[COMRAM] unsigned long 
  5321 ;;  multiplicand    4    4[COMRAM] unsigned long 
  5322 ;; Auto vars:     Size  Location     Type
  5323 ;;  product         4    8[COMRAM] unsigned long 
  5324 ;; Return value:  Size  Location     Type
  5325 ;;                  4    0[COMRAM] unsigned long 
  5326 ;; Registers used:
  5327 ;;		wreg, status,2, status,0
  5328 ;; Tracked objects:
  5329 ;;		On entry : 0/0
  5330 ;;		On exit  : 0/0
  5331 ;;		Unchanged: 0/0
  5332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5333 ;;      Params:         8       0       0       0       0       0       0
  5334 ;;      Locals:         4       0       0       0       0       0       0
  5335 ;;      Temps:          0       0       0       0       0       0       0
  5336 ;;      Totals:        12       0       0       0       0       0       0
  5337 ;;Total ram usage:       12 bytes
  5338 ;; Hardware stack levels used:    1
  5339 ;; Hardware stack levels required when called:    1
  5340 ;; This function calls:
  5341 ;;		Nothing
  5342 ;; This function is called by:
  5343 ;;		_calculatedAverageValue
  5344 ;; This function uses a non-reentrant model
  5345 ;;
  5346                           
  5347                           	psect	text16
  5348  004F94                     __ptext16:
  5349                           	callstack 0
  5350  004F94                     ___lmul:
  5351                           	callstack 24
  5352  004F94  0E00               	movlw	0
  5353  004F96  6E09               	movwf	___lmul@product^0,c
  5354  004F98  0E00               	movlw	0
  5355  004F9A  6E0A               	movwf	(___lmul@product+1)^0,c
  5356  004F9C  0E00               	movlw	0
  5357  004F9E  6E0B               	movwf	(___lmul@product+2)^0,c
  5358  004FA0  0E00               	movlw	0
  5359  004FA2  6E0C               	movwf	(___lmul@product+3)^0,c
  5360  004FA4                     l5515:
  5361  004FA4  A001               	btfss	___lmul@multiplier^0,0,c
  5362  004FA6  EFD7  F027         	goto	u6451
  5363  004FAA  EFD9  F027         	goto	u6450
  5364  004FAE                     u6451:
  5365  004FAE  EFE1  F027         	goto	l5519
  5366  004FB2                     u6450:
  5367  004FB2  5005               	movf	___lmul@multiplicand^0,w,c
  5368  004FB4  2609               	addwf	___lmul@product^0,f,c
  5369  004FB6  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  5370  004FB8  220A               	addwfc	(___lmul@product+1)^0,f,c
  5371  004FBA  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  5372  004FBC  220B               	addwfc	(___lmul@product+2)^0,f,c
  5373  004FBE  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  5374  004FC0  220C               	addwfc	(___lmul@product+3)^0,f,c
  5375  004FC2                     l5519:
  5376  004FC2  90D8               	bcf	status,0,c
  5377  004FC4  3605               	rlcf	___lmul@multiplicand^0,f,c
  5378  004FC6  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  5379  004FC8  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  5380  004FCA  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  5381  004FCC  90D8               	bcf	status,0,c
  5382  004FCE  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  5383  004FD0  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  5384  004FD2  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  5385  004FD4  3201               	rrcf	___lmul@multiplier^0,f,c
  5386  004FD6  5001               	movf	___lmul@multiplier^0,w,c
  5387  004FD8  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  5388  004FDA  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  5389  004FDC  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  5390  004FDE  A4D8               	btfss	status,2,c
  5391  004FE0  EFF4  F027         	goto	u6461
  5392  004FE4  EFF6  F027         	goto	u6460
  5393  004FE8                     u6461:
  5394  004FE8  EFD2  F027         	goto	l5515
  5395  004FEC                     u6460:
  5396  004FEC  C009  F001         	movff	___lmul@product,?___lmul
  5397  004FF0  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  5398  004FF4  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  5399  004FF8  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  5400  004FFC  0012               	return		;funcret
  5401  004FFE                     __end_of___lmul:
  5402                           	callstack 0
  5403                           
  5404 ;; *************** function ___lldiv *****************
  5405 ;; Defined at:
  5406 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__lldiv.c"
  5407 ;; Parameters:    Size  Location     Type
  5408 ;;  dividend        4    0[COMRAM] unsigned long 
  5409 ;;  divisor         4    4[COMRAM] unsigned long 
  5410 ;; Auto vars:     Size  Location     Type
  5411 ;;  quotient        4    8[COMRAM] unsigned long 
  5412 ;;  counter         1   12[COMRAM] unsigned char 
  5413 ;; Return value:  Size  Location     Type
  5414 ;;                  4    0[COMRAM] unsigned long 
  5415 ;; Registers used:
  5416 ;;		wreg, status,2, status,0
  5417 ;; Tracked objects:
  5418 ;;		On entry : 0/0
  5419 ;;		On exit  : 0/0
  5420 ;;		Unchanged: 0/0
  5421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5422 ;;      Params:         8       0       0       0       0       0       0
  5423 ;;      Locals:         5       0       0       0       0       0       0
  5424 ;;      Temps:          0       0       0       0       0       0       0
  5425 ;;      Totals:        13       0       0       0       0       0       0
  5426 ;;Total ram usage:       13 bytes
  5427 ;; Hardware stack levels used:    1
  5428 ;; Hardware stack levels required when called:    1
  5429 ;; This function calls:
  5430 ;;		Nothing
  5431 ;; This function is called by:
  5432 ;;		_calculatedAverageValue
  5433 ;; This function uses a non-reentrant model
  5434 ;;
  5435                           
  5436                           	psect	text17
  5437  004BE2                     __ptext17:
  5438                           	callstack 0
  5439  004BE2                     ___lldiv:
  5440                           	callstack 24
  5441  004BE2  0E00               	movlw	0
  5442  004BE4  6E09               	movwf	___lldiv@quotient^0,c
  5443  004BE6  0E00               	movlw	0
  5444  004BE8  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  5445  004BEA  0E00               	movlw	0
  5446  004BEC  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  5447  004BEE  0E00               	movlw	0
  5448  004BF0  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  5449  004BF2  5005               	movf	___lldiv@divisor^0,w,c
  5450  004BF4  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  5451  004BF6  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  5452  004BF8  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  5453  004BFA  B4D8               	btfsc	status,2,c
  5454  004BFC  EF02  F026         	goto	u6471
  5455  004C00  EF04  F026         	goto	u6470
  5456  004C04                     u6471:
  5457  004C04  EF3A  F026         	goto	l725
  5458  004C08                     u6470:
  5459  004C08  0E01               	movlw	1
  5460  004C0A  6E0D               	movwf	___lldiv@counter^0,c
  5461  004C0C  EF0E  F026         	goto	l5531
  5462  004C10                     l5529:
  5463  004C10  90D8               	bcf	status,0,c
  5464  004C12  3605               	rlcf	___lldiv@divisor^0,f,c
  5465  004C14  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  5466  004C16  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  5467  004C18  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  5468  004C1A  2A0D               	incf	___lldiv@counter^0,f,c
  5469  004C1C                     l5531:
  5470  004C1C  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  5471  004C1E  EF13  F026         	goto	u6481
  5472  004C22  EF15  F026         	goto	u6480
  5473  004C26                     u6481:
  5474  004C26  EF08  F026         	goto	l5529
  5475  004C2A                     u6480:
  5476  004C2A                     l5533:
  5477  004C2A  90D8               	bcf	status,0,c
  5478  004C2C  3609               	rlcf	___lldiv@quotient^0,f,c
  5479  004C2E  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  5480  004C30  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  5481  004C32  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  5482  004C34  5005               	movf	___lldiv@divisor^0,w,c
  5483  004C36  5C01               	subwf	___lldiv@dividend^0,w,c
  5484  004C38  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5485  004C3A  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  5486  004C3C  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5487  004C3E  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  5488  004C40  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5489  004C42  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  5490  004C44  A0D8               	btfss	status,0,c
  5491  004C46  EF27  F026         	goto	u6491
  5492  004C4A  EF29  F026         	goto	u6490
  5493  004C4E                     u6491:
  5494  004C4E  EF32  F026         	goto	l5541
  5495  004C52                     u6490:
  5496  004C52  5005               	movf	___lldiv@divisor^0,w,c
  5497  004C54  5E01               	subwf	___lldiv@dividend^0,f,c
  5498  004C56  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5499  004C58  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  5500  004C5A  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5501  004C5C  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  5502  004C5E  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5503  004C60  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  5504  004C62  8009               	bsf	___lldiv@quotient^0,0,c
  5505  004C64                     l5541:
  5506  004C64  90D8               	bcf	status,0,c
  5507  004C66  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  5508  004C68  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  5509  004C6A  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  5510  004C6C  3205               	rrcf	___lldiv@divisor^0,f,c
  5511  004C6E  2E0D               	decfsz	___lldiv@counter^0,f,c
  5512  004C70  EF15  F026         	goto	l5533
  5513  004C74                     l725:
  5514  004C74  C009  F001         	movff	___lldiv@quotient,?___lldiv
  5515  004C78  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  5516  004C7C  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  5517  004C80  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  5518  004C84  0012               	return		;funcret
  5519  004C86                     __end_of___lldiv:
  5520                           	callstack 0
  5521                           
  5522 ;; *************** function _exitLine *****************
  5523 ;; Defined at:
  5524 ;;		line 639 in file "fs_menu_controller.c"
  5525 ;; Parameters:    Size  Location     Type
  5526 ;;		None
  5527 ;; Auto vars:     Size  Location     Type
  5528 ;;		None
  5529 ;; Return value:  Size  Location     Type
  5530 ;;                  1    wreg      void 
  5531 ;; Registers used:
  5532 ;;		None
  5533 ;; Tracked objects:
  5534 ;;		On entry : 0/0
  5535 ;;		On exit  : 0/0
  5536 ;;		Unchanged: 0/0
  5537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5538 ;;      Params:         0       0       0       0       0       0       0
  5539 ;;      Locals:         0       0       0       0       0       0       0
  5540 ;;      Temps:          0       0       0       0       0       0       0
  5541 ;;      Totals:         0       0       0       0       0       0       0
  5542 ;;Total ram usage:        0 bytes
  5543 ;; Hardware stack levels used:    1
  5544 ;; Hardware stack levels required when called:    1
  5545 ;; This function calls:
  5546 ;;		Nothing
  5547 ;; This function is called by:
  5548 ;;		_stateMachine
  5549 ;; This function uses a non-reentrant model
  5550 ;;
  5551                           
  5552                           	psect	text18
  5553  0057EE                     __ptext18:
  5554                           	callstack 0
  5555  0057EE                     _exitLine:
  5556                           	callstack 27
  5557  0057EE  0012               	return		;funcret
  5558  0057F0                     __end_of_exitLine:
  5559                           	callstack 0
  5560                           
  5561 ;; *************** function _driverTimeSettingMenu *****************
  5562 ;; Defined at:
  5563 ;;		line 585 in file "fs_menu_controller.c"
  5564 ;; Parameters:    Size  Location     Type
  5565 ;;		None
  5566 ;; Auto vars:     Size  Location     Type
  5567 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  5568 ;; Return value:  Size  Location     Type
  5569 ;;                  1    wreg      void 
  5570 ;; Registers used:
  5571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5572 ;; Tracked objects:
  5573 ;;		On entry : 0/0
  5574 ;;		On exit  : 0/0
  5575 ;;		Unchanged: 0/0
  5576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5577 ;;      Params:         0       0       0       0       0       0       0
  5578 ;;      Locals:         0      16       0       0       0       0       0
  5579 ;;      Temps:          0       0       0       0       0       0       0
  5580 ;;      Totals:         0      16       0       0       0       0       0
  5581 ;;Total ram usage:       16 bytes
  5582 ;; Hardware stack levels used:    1
  5583 ;; Hardware stack levels required when called:    9
  5584 ;; This function calls:
  5585 ;;		_eepromWrite
  5586 ;;		_lcdSetCursor
  5587 ;;		_lcdWriteString
  5588 ;;		_sprintf
  5589 ;;		_stopMotor
  5590 ;; This function is called by:
  5591 ;;		_stateMachine
  5592 ;; This function uses a non-reentrant model
  5593 ;;
  5594                           
  5595                           	psect	text19
  5596  003E72                     __ptext19:
  5597                           	callstack 0
  5598  003E72                     _driverTimeSettingMenu:
  5599                           	callstack 19
  5600  003E72                     
  5601                           ;fs_menu_controller.c: 587:     char textCursor2[16] = {0};
  5602  003E72  EE20  F0E1         	lfsr	2,driverTimeSettingMenu@textCursor2
  5603  003E76  0E0F               	movlw	15
  5604  003E78                     u7101:
  5605  003E78  6ADE               	clrf	postinc2,c
  5606  003E7A  06E8               	decf	wreg,f,c
  5607  003E7C  E2FD               	bc	u7101
  5608  003E7E                     
  5609                           ;fs_menu_controller.c: 589:     stopMotor();
  5610  003E7E  EC77  F02A         	call	_stopMotor	;wreg free
  5611  003E82                     
  5612                           ;fs_menu_controller.c: 591:     if (menu_flags.menu_input_flag == 1)
  5613  003E82  0101               	movlb	1	; () banked
  5614  003E84  0597               	decf	_menu_flags& (0+255),w,b
  5615  003E86  A4D8               	btfss	status,2,c
  5616  003E88  EF48  F01F         	goto	u7111
  5617  003E8C  EF4A  F01F         	goto	u7110
  5618  003E90                     u7111:
  5619  003E90  EF4F  F01F         	goto	l6013
  5620  003E94                     u7110:
  5621  003E94                     
  5622                           ; BSR set to: 1
  5623                           ;fs_menu_controller.c: 592:     {;fs_menu_controller.c: 593:         menu_flags.menu_inp
      +                          ut_flag = 0;
  5624  003E94  0E00               	movlw	0
  5625  003E96  6F97               	movwf	_menu_flags& (0+255),b
  5626                           
  5627                           ;fs_menu_controller.c: 594:         menu_selected = STOP_TIME_SETTING;
  5628  003E98  0E02               	movlw	2
  5629  003E9A  0100               	movlb	0	; () banked
  5630  003E9C  6FFB               	movwf	_menu_selected& (0+255),b
  5631  003E9E                     l6013:
  5632                           
  5633                           ;fs_menu_controller.c: 597:     if ((menu_flags.menu_increase_flag == 1) && (menu_value.
      +                          driver_time < 30))
  5634  003E9E  0101               	movlb	1	; () banked
  5635  003EA0  059B               	decf	(_menu_flags+4)& (0+255),w,b
  5636  003EA2  A4D8               	btfss	status,2,c
  5637  003EA4  EF56  F01F         	goto	u7121
  5638  003EA8  EF58  F01F         	goto	u7120
  5639  003EAC                     u7121:
  5640  003EAC  EF74  F01F         	goto	l6031
  5641  003EB0                     u7120:
  5642  003EB0                     
  5643                           ; BSR set to: 1
  5644  003EB0  0E1E               	movlw	30
  5645  003EB2  0100               	movlb	0	; () banked
  5646  003EB4  61F3               	cpfslt	_menu_value& (0+255),b
  5647  003EB6  EF5F  F01F         	goto	u7131
  5648  003EBA  EF61  F01F         	goto	u7130
  5649  003EBE                     u7131:
  5650  003EBE  EF74  F01F         	goto	l6031
  5651  003EC2                     u7130:
  5652  003EC2                     
  5653                           ; BSR set to: 0
  5654                           ;fs_menu_controller.c: 598:     {;fs_menu_controller.c: 599:         menu_flags.menu_inc
      +                          rease_flag = 0;
  5655  003EC2  0E00               	movlw	0
  5656  003EC4  0101               	movlb	1	; () banked
  5657  003EC6  6F9B               	movwf	(_menu_flags+4)& (0+255),b
  5658  003EC8                     
  5659                           ; BSR set to: 1
  5660                           ;fs_menu_controller.c: 600:         menu_value.driver_time++;
  5661  003EC8  0100               	movlb	0	; () banked
  5662  003ECA  2BF3               	incf	_menu_value& (0+255),f,b
  5663  003ECC                     
  5664                           ; BSR set to: 0
  5665                           ;fs_menu_controller.c: 601:         eepromWrite(0x00,(uint8_t)menu_value.driver_time);
  5666  003ECC  C0F3  F001         	movff	_menu_value,eepromWrite@data
  5667  003ED0  0E00               	movlw	0
  5668  003ED2  EC55  F02B         	call	_eepromWrite
  5669  003ED6                     
  5670                           ;fs_menu_controller.c: 602:         timer_value.minute =0 ;
  5671  003ED6  0E00               	movlw	0
  5672  003ED8  0101               	movlb	1	; () banked
  5673  003EDA  6F90               	movwf	(_timer_value+1)& (0+255),b
  5674  003EDC                     
  5675                           ; BSR set to: 1
  5676                           ;fs_menu_controller.c: 603:         timer_value.second = 0;
  5677  003EDC  0E00               	movlw	0
  5678  003EDE  6F8F               	movwf	_timer_value& (0+255),b
  5679  003EE0                     
  5680                           ; BSR set to: 1
  5681                           ;fs_menu_controller.c: 604:         timer_value.remainingSecond = 0;
  5682  003EE0  0E00               	movlw	0
  5683  003EE2  6F91               	movwf	(_timer_value+2)& (0+255),b
  5684  003EE4                     
  5685                           ; BSR set to: 1
  5686                           ;fs_menu_controller.c: 605:         timer_value.remainingMinute = menu_value.driver_time
      +                          ;
  5687  003EE4  C0F3  F192         	movff	_menu_value,_timer_value+3
  5688  003EE8                     l6031:
  5689                           
  5690                           ;fs_menu_controller.c: 608:     if ((menu_flags.menu_decrease_flag == 1) && (menu_value.
      +                          driver_time > 0))
  5691  003EE8  0101               	movlb	1	; () banked
  5692  003EEA  059C               	decf	(_menu_flags+5)& (0+255),w,b
  5693  003EEC  A4D8               	btfss	status,2,c
  5694  003EEE  EF7B  F01F         	goto	u7141
  5695  003EF2  EF7D  F01F         	goto	u7140
  5696  003EF6                     u7141:
  5697  003EF6  EF99  F01F         	goto	l6049
  5698  003EFA                     u7140:
  5699  003EFA                     
  5700                           ; BSR set to: 1
  5701  003EFA  0100               	movlb	0	; () banked
  5702  003EFC  51F3               	movf	_menu_value& (0+255),w,b
  5703  003EFE  B4D8               	btfsc	status,2,c
  5704  003F00  EF84  F01F         	goto	u7151
  5705  003F04  EF86  F01F         	goto	u7150
  5706  003F08                     u7151:
  5707  003F08  EF99  F01F         	goto	l6049
  5708  003F0C                     u7150:
  5709  003F0C                     
  5710                           ; BSR set to: 0
  5711                           ;fs_menu_controller.c: 609:     {;fs_menu_controller.c: 610:          menu_flags.menu_de
      +                          crease_flag = 0;
  5712  003F0C  0E00               	movlw	0
  5713  003F0E  0101               	movlb	1	; () banked
  5714  003F10  6F9C               	movwf	(_menu_flags+5)& (0+255),b
  5715  003F12                     
  5716                           ; BSR set to: 1
  5717                           ;fs_menu_controller.c: 611:          menu_value.driver_time--;
  5718  003F12  0100               	movlb	0	; () banked
  5719  003F14  07F3               	decf	_menu_value& (0+255),f,b
  5720  003F16                     
  5721                           ; BSR set to: 0
  5722                           ;fs_menu_controller.c: 612:          eepromWrite(0x00,(uint8_t)menu_value.driver_time);
  5723  003F16  C0F3  F001         	movff	_menu_value,eepromWrite@data
  5724  003F1A  0E00               	movlw	0
  5725  003F1C  EC55  F02B         	call	_eepromWrite
  5726  003F20                     
  5727                           ;fs_menu_controller.c: 613:          timer_value.minute =0 ;
  5728  003F20  0E00               	movlw	0
  5729  003F22  0101               	movlb	1	; () banked
  5730  003F24  6F90               	movwf	(_timer_value+1)& (0+255),b
  5731  003F26                     
  5732                           ; BSR set to: 1
  5733                           ;fs_menu_controller.c: 614:          timer_value.second = 0;
  5734  003F26  0E00               	movlw	0
  5735  003F28  6F8F               	movwf	_timer_value& (0+255),b
  5736  003F2A                     
  5737                           ; BSR set to: 1
  5738                           ;fs_menu_controller.c: 615:          timer_value.remainingSecond = 0;
  5739  003F2A  0E00               	movlw	0
  5740  003F2C  6F91               	movwf	(_timer_value+2)& (0+255),b
  5741  003F2E                     
  5742                           ; BSR set to: 1
  5743                           ;fs_menu_controller.c: 616:          timer_value.remainingMinute = menu_value.driver_tim
      +                          e;
  5744  003F2E  C0F3  F192         	movff	_menu_value,_timer_value+3
  5745  003F32                     l6049:
  5746                           
  5747                           ;fs_menu_controller.c: 618:     lcdSetCursor(1,1);
  5748  003F32  0E01               	movlw	1
  5749  003F34  6E04               	movwf	lcdSetCursor@b^0,c
  5750  003F36  0E01               	movlw	1
  5751  003F38  EC34  F028         	call	_lcdSetCursor
  5752  003F3C                     
  5753                           ;fs_menu_controller.c: 619:     lcdWriteString("HAREKT ZAMANI dk");
  5754  003F3C  0E5E               	movlw	low STR_17
  5755  003F3E  6E05               	movwf	lcdWriteString@a^0,c
  5756  003F40  0E7F               	movlw	high STR_17
  5757  003F42  6E06               	movwf	(lcdWriteString@a+1)^0,c
  5758  003F44  ECD6  F026         	call	_lcdWriteString	;wreg free
  5759  003F48                     
  5760                           ;fs_menu_controller.c: 620:     lcdSetCursor(2,1);
  5761  003F48  0E01               	movlw	1
  5762  003F4A  6E04               	movwf	lcdSetCursor@b^0,c
  5763  003F4C  0E02               	movlw	2
  5764  003F4E  EC34  F028         	call	_lcdSetCursor
  5765  003F52                     
  5766                           ;fs_menu_controller.c: 621:     sprintf(textCursor2,"%d               ",menu_value.drive
      +                          r_time);
  5767  003F52  0EE1               	movlw	low driverTimeSettingMenu@textCursor2
  5768  003F54  0100               	movlb	0	; () banked
  5769  003F56  6FCF               	movwf	sprintf@s& (0+255),b
  5770  003F58  0E00               	movlw	high driverTimeSettingMenu@textCursor2
  5771  003F5A  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  5772  003F5C  0EF7               	movlw	low STR_14
  5773  003F5E  6FD1               	movwf	sprintf@fmt& (0+255),b
  5774  003F60  0E7E               	movlw	high STR_14
  5775  003F62  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  5776  003F64  C0F3  F0D3         	movff	_menu_value,?_sprintf+4
  5777  003F68  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  5778  003F6A  EC1C  F029         	call	_sprintf	;wreg free
  5779  003F6E                     
  5780                           ;fs_menu_controller.c: 622:     lcdWriteString(textCursor2);
  5781  003F6E  0EE1               	movlw	low driverTimeSettingMenu@textCursor2
  5782  003F70  6E05               	movwf	lcdWriteString@a^0,c
  5783  003F72  0E00               	movlw	high driverTimeSettingMenu@textCursor2
  5784  003F74  6E06               	movwf	(lcdWriteString@a+1)^0,c
  5785  003F76  ECD6  F026         	call	_lcdWriteString	;wreg free
  5786  003F7A                     
  5787                           ;fs_menu_controller.c: 624:     if(timer_value.menu_login_delay == 100)
  5788  003F7A  0E64               	movlw	100
  5789  003F7C  0101               	movlb	1	; () banked
  5790  003F7E  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  5791  003F80  A4D8               	btfss	status,2,c
  5792  003F82  EFC5  F01F         	goto	u7161
  5793  003F86  EFC7  F01F         	goto	u7160
  5794  003F8A                     u7161:
  5795  003F8A  EFCE  F01F         	goto	l518
  5796  003F8E                     u7160:
  5797  003F8E                     
  5798                           ; BSR set to: 1
  5799                           ;fs_menu_controller.c: 625:     {;fs_menu_controller.c: 626:         button_bounce_contr
      +                          oller.menu = 0;
  5800  003F8E  0E00               	movlw	0
  5801  003F90  6F9D               	movwf	_button_bounce_controller& (0+255),b
  5802                           
  5803                           ;fs_menu_controller.c: 627:         timer_value.menu_login_delay = 0;
  5804  003F92  0E00               	movlw	0
  5805  003F94  6F93               	movwf	(_timer_value+4)& (0+255),b
  5806                           
  5807                           ;fs_menu_controller.c: 628:         menu_selected = PAUSE_MENU;
  5808  003F96  0E06               	movlw	6
  5809  003F98  0100               	movlb	0	; () banked
  5810  003F9A  6FFB               	movwf	_menu_selected& (0+255),b
  5811  003F9C                     l518:
  5812  003F9C  0012               	return		;funcret
  5813  003F9E                     __end_of_driverTimeSettingMenu:
  5814                           	callstack 0
  5815                           
  5816 ;; *************** function _stopMotor *****************
  5817 ;; Defined at:
  5818 ;;		line 77 in file "fs_speed_controller.c"
  5819 ;; Parameters:    Size  Location     Type
  5820 ;;		None
  5821 ;; Auto vars:     Size  Location     Type
  5822 ;;		None
  5823 ;; Return value:  Size  Location     Type
  5824 ;;                  1    wreg      void 
  5825 ;; Registers used:
  5826 ;;		wreg, status,2, status,0, cstack
  5827 ;; Tracked objects:
  5828 ;;		On entry : 0/0
  5829 ;;		On exit  : 0/0
  5830 ;;		Unchanged: 0/0
  5831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5832 ;;      Params:         0       0       0       0       0       0       0
  5833 ;;      Locals:         0       0       0       0       0       0       0
  5834 ;;      Temps:          0       0       0       0       0       0       0
  5835 ;;      Totals:         0       0       0       0       0       0       0
  5836 ;;Total ram usage:        0 bytes
  5837 ;; Hardware stack levels used:    1
  5838 ;; Hardware stack levels required when called:    3
  5839 ;; This function calls:
  5840 ;;		_PWM1_setDC
  5841 ;;		_PWM2_setDC
  5842 ;; This function is called by:
  5843 ;;		_stopMenu
  5844 ;;		_pauseMenu
  5845 ;;		_secretMenu
  5846 ;;		_speedLimitSettingMenu
  5847 ;;		_stopTimeSettingMenu
  5848 ;;		_driverTimeSettingMenu
  5849 ;; This function uses a non-reentrant model
  5850 ;;
  5851                           
  5852                           	psect	text20
  5853  0054EE                     __ptext20:
  5854                           	callstack 0
  5855  0054EE                     _stopMotor:
  5856                           	callstack 24
  5857  0054EE                     
  5858                           ;fs_speed_controller.c: 79:     controller.rightMotorSpeed = 0;
  5859  0054EE  0E00               	movlw	0
  5860  0054F0  0101               	movlb	1	; () banked
  5861  0054F2  6F59               	movwf	(_controller+9)& (0+255),b
  5862  0054F4  0E00               	movlw	0
  5863  0054F6  6F58               	movwf	(_controller+8)& (0+255),b
  5864                           
  5865                           ;fs_speed_controller.c: 80:     controller.leftMotorSpeed = 0;
  5866  0054F8  0E00               	movlw	0
  5867  0054FA  6F57               	movwf	(_controller+7)& (0+255),b
  5868  0054FC  0E00               	movlw	0
  5869  0054FE  6F56               	movwf	(_controller+6)& (0+255),b
  5870                           
  5871                           ;fs_speed_controller.c: 81:     driver_limit.ortalama = 0;
  5872  005500  0E00               	movlw	0
  5873  005502  6F8B               	movwf	(_driver_limit+8)& (0+255),b
  5874  005504  0E00               	movlw	0
  5875  005506  6F8C               	movwf	(_driver_limit+9)& (0+255),b
  5876  005508  0E00               	movlw	0
  5877  00550A  6F8D               	movwf	(_driver_limit+10)& (0+255),b
  5878  00550C  0E00               	movlw	0
  5879  00550E  6F8E               	movwf	(_driver_limit+11)& (0+255),b
  5880  005510                     
  5881                           ; BSR set to: 1
  5882                           ;fs_speed_controller.c: 82:     PWM1_setDC(controller.leftMotorSpeed);
  5883  005510  C156  F058         	movff	_controller+6,PWM1_setDC@dutycycle
  5884  005514  C157  F059         	movff	_controller+7,PWM1_setDC@dutycycle+1
  5885  005518  EC52  F027         	call	_PWM1_setDC	;wreg free
  5886  00551C                     
  5887                           ;fs_speed_controller.c: 83:     PWM2_setDC(controller.rightMotorSpeed);
  5888  00551C  C158  F058         	movff	_controller+8,PWM2_setDC@dutycycle
  5889  005520  C159  F059         	movff	_controller+9,PWM2_setDC@dutycycle+1
  5890  005524  EC15  F027         	call	_PWM2_setDC	;wreg free
  5891  005528  0012               	return		;funcret
  5892  00552A                     __end_of_stopMotor:
  5893                           	callstack 0
  5894                           
  5895 ;; *************** function _sprintf *****************
  5896 ;; Defined at:
  5897 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  5898 ;; Parameters:    Size  Location     Type
  5899 ;;  s               2  111[BANK0 ] PTR unsigned char 
  5900 ;;		 -> driverTimeSettingMenu@textCursor2(16), stopTimeSettingMenu@textCursor2(16), speedLimitSettingMenu@textCursor2(16
      +), secretMenu@textCursor2(16), 
  5901 ;;		 -> pauseMenu@textCursor2(16), stopMenu@textCursor2(16), mainMenu@textCursor2(16), 
  5902 ;;  fmt             2  113[BANK0 ] PTR const unsigned char 
  5903 ;;		 -> STR_18(18), STR_16(16), STR_14(18), STR_12(13), 
  5904 ;;		 -> STR_10(14), STR_8(16), STR_6(16), STR_4(15), 
  5905 ;; Auto vars:     Size  Location     Type
  5906 ;;  f               6  123[BANK0 ] struct _IO_FILE
  5907 ;;  ap              2  121[BANK0 ] PTR void [1]
  5908 ;;		 -> ?_sprintf(2), 
  5909 ;;  ret             2    0        int 
  5910 ;; Return value:  Size  Location     Type
  5911 ;;                  2  111[BANK0 ] int 
  5912 ;; Registers used:
  5913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5914 ;; Tracked objects:
  5915 ;;		On entry : 0/0
  5916 ;;		On exit  : 0/0
  5917 ;;		Unchanged: 0/0
  5918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5919 ;;      Params:         0       8       0       0       0       0       0
  5920 ;;      Locals:         0      10       0       0       0       0       0
  5921 ;;      Temps:          0       0       0       0       0       0       0
  5922 ;;      Totals:         0      18       0       0       0       0       0
  5923 ;;Total ram usage:       18 bytes
  5924 ;; Hardware stack levels used:    1
  5925 ;; Hardware stack levels required when called:    8
  5926 ;; This function calls:
  5927 ;;		_vfprintf
  5928 ;; This function is called by:
  5929 ;;		_mainMenu
  5930 ;;		_stopMenu
  5931 ;;		_pauseMenu
  5932 ;;		_secretMenu
  5933 ;;		_speedLimitSettingMenu
  5934 ;;		_stopTimeSettingMenu
  5935 ;;		_driverTimeSettingMenu
  5936 ;; This function uses a non-reentrant model
  5937 ;;
  5938                           
  5939                           	psect	text21
  5940  005238                     __ptext21:
  5941                           	callstack 0
  5942  005238                     _sprintf:
  5943                           	callstack 19
  5944  005238  0ED3               	movlw	low (?_sprintf+4)
  5945  00523A  0100               	movlb	0	; () banked
  5946  00523C  6FD9               	movwf	sprintf@ap& (0+255),b
  5947  00523E  0E00               	movlw	high (?_sprintf+4)
  5948  005240  6FDA               	movwf	(sprintf@ap+1)& (0+255),b
  5949  005242  C0CF  F0DB         	movff	sprintf@s,sprintf@f
  5950  005246  C0D0  F0DC         	movff	sprintf@s+1,sprintf@f+1
  5951  00524A                     
  5952                           ; BSR set to: 0
  5953  00524A  0E00               	movlw	0
  5954  00524C  6FDE               	movwf	(sprintf@f+3)& (0+255),b
  5955  00524E  0E00               	movlw	0
  5956  005250  6FDD               	movwf	(sprintf@f+2)& (0+255),b
  5957  005252                     
  5958                           ; BSR set to: 0
  5959  005252  0E00               	movlw	0
  5960  005254  6FE0               	movwf	(sprintf@f+5)& (0+255),b
  5961  005256  0E00               	movlw	0
  5962  005258  6FDF               	movwf	(sprintf@f+4)& (0+255),b
  5963  00525A                     
  5964                           ; BSR set to: 0
  5965  00525A  0EDB               	movlw	low sprintf@f
  5966  00525C  6FC7               	movwf	vfprintf@fp& (0+255),b
  5967  00525E  0E00               	movlw	high sprintf@f
  5968  005260  6FC8               	movwf	(vfprintf@fp+1)& (0+255),b
  5969  005262  C0D1  F0C9         	movff	sprintf@fmt,vfprintf@fmt
  5970  005266  C0D2  F0CA         	movff	sprintf@fmt+1,vfprintf@fmt+1
  5971  00526A  0ED9               	movlw	low sprintf@ap
  5972  00526C  6FCB               	movwf	vfprintf@ap& (0+255),b
  5973  00526E  0E00               	movlw	high sprintf@ap
  5974  005270  6FCC               	movwf	(vfprintf@ap+1)& (0+255),b
  5975  005272  ECFF  F027         	call	_vfprintf	;wreg free
  5976  005276  0100               	movlb	0	; () banked
  5977  005278  51DD               	movf	(sprintf@f+2)& (0+255),w,b
  5978  00527A  25CF               	addwf	sprintf@s& (0+255),w,b
  5979  00527C  6ED9               	movwf	fsr2l,c
  5980  00527E  51DE               	movf	(sprintf@f+3)& (0+255),w,b
  5981  005280  21D0               	addwfc	(sprintf@s+1)& (0+255),w,b
  5982  005282  6EDA               	movwf	fsr2h,c
  5983  005284  0E00               	movlw	0
  5984  005286  6EDF               	movwf	indf2,c
  5985  005288                     
  5986                           ; BSR set to: 0
  5987  005288  0012               	return		;funcret
  5988  00528A                     __end_of_sprintf:
  5989                           	callstack 0
  5990                           
  5991 ;; *************** function _vfprintf *****************
  5992 ;; Defined at:
  5993 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  5994 ;; Parameters:    Size  Location     Type
  5995 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  5996 ;;		 -> sprintf@f(6), 
  5997 ;;  fmt             2  105[BANK0 ] PTR const unsigned char 
  5998 ;;		 -> STR_18(18), STR_16(16), STR_14(18), STR_12(13), 
  5999 ;;		 -> STR_10(14), STR_8(16), STR_6(16), STR_4(15), 
  6000 ;;  ap              2  107[BANK0 ] PTR PTR void 
  6001 ;;		 -> sprintf@ap(2), 
  6002 ;; Auto vars:     Size  Location     Type
  6003 ;;  cfmt            2  109[BANK0 ] PTR unsigned char 
  6004 ;;		 -> STR_18(18), STR_16(16), STR_14(18), STR_12(13), 
  6005 ;;		 -> STR_10(14), STR_8(16), STR_6(16), STR_4(15), 
  6006 ;; Return value:  Size  Location     Type
  6007 ;;                  2  103[BANK0 ] int 
  6008 ;; Registers used:
  6009 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6010 ;; Tracked objects:
  6011 ;;		On entry : 0/0
  6012 ;;		On exit  : 0/0
  6013 ;;		Unchanged: 0/0
  6014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6015 ;;      Params:         0       6       0       0       0       0       0
  6016 ;;      Locals:         0       2       0       0       0       0       0
  6017 ;;      Temps:          0       0       0       0       0       0       0
  6018 ;;      Totals:         0       8       0       0       0       0       0
  6019 ;;Total ram usage:        8 bytes
  6020 ;; Hardware stack levels used:    1
  6021 ;; Hardware stack levels required when called:    7
  6022 ;; This function calls:
  6023 ;;		_vfpfcnvrt
  6024 ;; This function is called by:
  6025 ;;		_sprintf
  6026 ;; This function uses a non-reentrant model
  6027 ;;
  6028                           
  6029                           	psect	text22
  6030  004FFE                     __ptext22:
  6031                           	callstack 0
  6032  004FFE                     _vfprintf:
  6033                           	callstack 19
  6034  004FFE                     
  6035                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6036  004FFE  C0C9  F0CD         	movff	vfprintf@fmt,vfprintf@cfmt
  6037  005002  C0CA  F0CE         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6038  005006                     
  6039                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  6040  005006  0E00               	movlw	0
  6041  005008  0101               	movlb	1	; () banked
  6042  00500A  6FB0               	movwf	(_nout+1)& (0+255),b
  6043  00500C  0E00               	movlw	0
  6044  00500E  6FAF               	movwf	_nout& (0+255),b
  6045                           
  6046                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  6047  005010  EF21  F028         	goto	l5863
  6048  005014                     l5861:
  6049                           
  6050                           ; BSR set to: 1
  6051                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6052  005014  C0C7  F0A7         	movff	vfprintf@fp,vfpfcnvrt@fp
  6053  005018  C0C8  F0A8         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6054  00501C  0ECD               	movlw	low vfprintf@cfmt
  6055  00501E  0100               	movlb	0	; () banked
  6056  005020  6FA9               	movwf	vfpfcnvrt@fmt& (0+255),b
  6057  005022  0E00               	movlw	high vfprintf@cfmt
  6058  005024  6FAA               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  6059  005026  C0CB  F0AB         	movff	vfprintf@ap,vfpfcnvrt@ap
  6060  00502A  C0CC  F0AC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6061  00502E  EC34  F00A         	call	_vfpfcnvrt	;wreg free
  6062  005032  0100               	movlb	0	; () banked
  6063  005034  51A7               	movf	?_vfpfcnvrt& (0+255),w,b
  6064  005036  0101               	movlb	1	; () banked
  6065  005038  27AF               	addwf	_nout& (0+255),f,b
  6066  00503A  0100               	movlb	0	; () banked
  6067  00503C  51A8               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  6068  00503E  0101               	movlb	1	; () banked
  6069  005040  23B0               	addwfc	(_nout+1)& (0+255),f,b
  6070  005042                     l5863:
  6071                           
  6072                           ; BSR set to: 1
  6073                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  6074  005042  C0CD  FFF6         	movff	vfprintf@cfmt,tblptrl
  6075  005046  C0CE  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6076  00504A                     	if	0	;tblptru may be non-zero
  6077  00504A                     	endif
  6078  00504A                     	if	0	;tblptru may be non-zero
  6079  00504A                     	endif
  6080  00504A  0008               	tblrd		*
  6081  00504C  50F5               	movf	tablat,w,c
  6082  00504E  0900               	iorlw	0
  6083  005050  A4D8               	btfss	status,2,c
  6084  005052  EF2D  F028         	goto	u6871
  6085  005056  EF2F  F028         	goto	u6870
  6086  00505A                     u6871:
  6087  00505A  EF0A  F028         	goto	l5861
  6088  00505E                     u6870:
  6089  00505E                     
  6090                           ; BSR set to: 1
  6091                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  6092  00505E  C1AF  F0C7         	movff	_nout,?_vfprintf
  6093  005062  C1B0  F0C8         	movff	_nout+1,?_vfprintf+1
  6094  005066                     
  6095                           ; BSR set to: 1
  6096  005066  0012               	return		;funcret
  6097  005068                     __end_of_vfprintf:
  6098                           	callstack 0
  6099                           
  6100 ;; *************** function _vfpfcnvrt *****************
  6101 ;; Defined at:
  6102 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6103 ;; Parameters:    Size  Location     Type
  6104 ;;  fp              2   71[BANK0 ] PTR struct _IO_FILE
  6105 ;;		 -> sprintf@f(6), 
  6106 ;;  fmt             2   73[BANK0 ] PTR PTR unsigned char 
  6107 ;;		 -> vfprintf@cfmt(2), 
  6108 ;;  ap              2   75[BANK0 ] PTR PTR void 
  6109 ;;		 -> sprintf@ap(2), 
  6110 ;; Auto vars:     Size  Location     Type
  6111 ;;  ll              8   81[BANK0 ] long long 
  6112 ;;  llu             8    0        unsigned long long 
  6113 ;;  f               4   95[BANK0 ] unsigned long long 
  6114 ;;  ct              3   99[BANK0 ] unsigned char [3]
  6115 ;;  vp              3    0        PTR void 
  6116 ;;  cp              3    0        PTR unsigned char 
  6117 ;;  i               2    0        int 
  6118 ;;  done            2    0        int 
  6119 ;;  c               1  102[BANK0 ] unsigned char 
  6120 ;; Return value:  Size  Location     Type
  6121 ;;                  2   71[BANK0 ] int 
  6122 ;; Registers used:
  6123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6124 ;; Tracked objects:
  6125 ;;		On entry : 0/0
  6126 ;;		On exit  : 0/0
  6127 ;;		Unchanged: 0/0
  6128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6129 ;;      Params:         0       6       0       0       0       0       0
  6130 ;;      Locals:         0      22       0       0       0       0       0
  6131 ;;      Temps:          0       4       0       0       0       0       0
  6132 ;;      Totals:         0      32       0       0       0       0       0
  6133 ;;Total ram usage:       32 bytes
  6134 ;; Hardware stack levels used:    1
  6135 ;; Hardware stack levels required when called:    6
  6136 ;; This function calls:
  6137 ;;		_atoi
  6138 ;;		_dtoa
  6139 ;;		_efgtoa
  6140 ;;		_fputc
  6141 ;;		_isdigit
  6142 ;;		_isupper
  6143 ;;		_strncmp
  6144 ;;		_tolower
  6145 ;; This function is called by:
  6146 ;;		_vfprintf
  6147 ;; This function uses a non-reentrant model
  6148 ;;
  6149                           
  6150                           	psect	text23
  6151  001468                     __ptext23:
  6152                           	callstack 0
  6153  001468                     _vfpfcnvrt:
  6154                           	callstack 19
  6155  001468                     
  6156                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  6157  001468  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6158  00146C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6159  001470  CFDE FFF6          	movff	postinc2,tblptrl
  6160  001474  CFDD FFF7          	movff	postdec2,tblptrh
  6161  001478                     	if	0	;tblptru may be non-zero
  6162  001478                     	endif
  6163  001478                     	if	0	;tblptru may be non-zero
  6164  001478                     	endif
  6165  001478  0008               	tblrd		*
  6166  00147A  50F5               	movf	tablat,w,c
  6167  00147C  0A25               	xorlw	37
  6168  00147E  A4D8               	btfss	status,2,c
  6169  001480  EF44  F00A         	goto	u6601
  6170  001484  EF46  F00A         	goto	u6600
  6171  001488                     u6601:
  6172  001488  EF37  F00D         	goto	l5701
  6173  00148C                     u6600:
  6174  00148C                     
  6175                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  6176  00148C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6177  001490  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6178  001494  2ADE               	incf	postinc2,f,c
  6179  001496  0E00               	movlw	0
  6180  001498  22DD               	addwfc	postdec2,f,c
  6181  00149A                     
  6182                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  6183  00149A  0E00               	movlw	0
  6184  00149C  0101               	movlb	1	; () banked
  6185  00149E  6FB2               	movwf	(_width+1)& (0+255),b
  6186  0014A0  0E00               	movlw	0
  6187  0014A2  6FB1               	movwf	_width& (0+255),b
  6188  0014A4  C1B1  F0F8         	movff	_width,_flags
  6189  0014A8  C1B2  F0F9         	movff	_width+1,_flags+1
  6190  0014AC                     
  6191                           ; BSR set to: 1
  6192                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  6193  0014AC  0100               	movlb	0	; () banked
  6194  0014AE  69F6               	setf	_prec& (0+255),b
  6195  0014B0  69F7               	setf	(_prec+1)& (0+255),b
  6196  0014B2                     
  6197                           ; BSR set to: 0
  6198                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  6199  0014B2  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6200  0014B6  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6201  0014BA  CFDE FFF6          	movff	postinc2,tblptrl
  6202  0014BE  CFDD FFF7          	movff	postdec2,tblptrh
  6203  0014C2                     	if	0	;tblptru may be non-zero
  6204  0014C2                     	endif
  6205  0014C2                     	if	0	;tblptru may be non-zero
  6206  0014C2                     	endif
  6207  0014C2  0008               	tblrd		*
  6208  0014C4  50F5               	movf	tablat,w,c
  6209  0014C6  0A2A               	xorlw	42
  6210  0014C8  A4D8               	btfss	status,2,c
  6211  0014CA  EF69  F00A         	goto	u6611
  6212  0014CE  EF6B  F00A         	goto	u6610
  6213  0014D2                     u6611:
  6214  0014D2  EF97  F00A         	goto	l5607
  6215  0014D6                     u6610:
  6216  0014D6                     
  6217                           ; BSR set to: 0
  6218                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  6219  0014D6  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6220  0014DA  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6221  0014DE  2ADE               	incf	postinc2,f,c
  6222  0014E0  0E00               	movlw	0
  6223  0014E2  22DD               	addwfc	postdec2,f,c
  6224                           
  6225                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6226  0014E4  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6227  0014E8  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6228  0014EC  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6229  0014F0  0E02               	movlw	2
  6230  0014F2  26DE               	addwf	postinc2,f,c
  6231  0014F4  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6232  0014F8  0E00               	movlw	0
  6233  0014FA  22DD               	addwfc	postdec2,f,c
  6234  0014FC  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6235  001500  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6236  001504  CFDE F1B1          	movff	postinc2,_width
  6237  001508  CFDD F1B2          	movff	postdec2,_width+1
  6238  00150C                     
  6239                           ; BSR set to: 0
  6240                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  6241  00150C  0101               	movlb	1	; () banked
  6242  00150E  BFB2               	btfsc	(_width+1)& (0+255),7,b
  6243  001510  EF8E  F00A         	goto	u6620
  6244  001514  EF8C  F00A         	goto	u6621
  6245  001518                     u6621:
  6246  001518  EFDB  F00A         	goto	l5617
  6247  00151C                     u6620:
  6248  00151C                     
  6249                           ; BSR set to: 1
  6250                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  6251  00151C  0100               	movlb	0	; () banked
  6252  00151E  81F8               	bsf	_flags& (0+255),0,b
  6253                           
  6254                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  6255  001520  0101               	movlb	1	; () banked
  6256  001522  6DB1               	negf	_width& (0+255),b
  6257  001524  1FB2               	comf	(_width+1)& (0+255),f,b
  6258  001526  B0D8               	btfsc	status,0,c
  6259  001528  2BB2               	incf	(_width+1)& (0+255),f,b
  6260  00152A  EFDB  F00A         	goto	l5617
  6261  00152E                     l5607:
  6262                           
  6263                           ; BSR set to: 0
  6264                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  6265  00152E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6266  001532  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6267  001536  CFDE F008          	movff	postinc2,atoi@s
  6268  00153A  CFDD F009          	movff	postdec2,atoi@s+1
  6269  00153E  EC5E  F01C         	call	_atoi	;wreg free
  6270  001542  C008  F1B1         	movff	?_atoi,_width
  6271  001546  C009  F1B2         	movff	?_atoi+1,_width+1
  6272                           
  6273                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6274  00154A  EFAE  F00A         	goto	l5611
  6275  00154E                     l5609:
  6276                           
  6277                           ; BSR set to: 0
  6278                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  6279  00154E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6280  001552  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6281  001556  2ADE               	incf	postinc2,f,c
  6282  001558  0E00               	movlw	0
  6283  00155A  22DD               	addwfc	postdec2,f,c
  6284  00155C                     l5611:
  6285  00155C  0ED0               	movlw	208
  6286  00155E  0100               	movlb	0	; () banked
  6287  001560  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  6288  001562  0EFF               	movlw	255
  6289  001564  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6290  001566  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6291  00156A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6292  00156E  CFDE FFF6          	movff	postinc2,tblptrl
  6293  001572  CFDD FFF7          	movff	postdec2,tblptrh
  6294  001576                     	if	0	;tblptru may be non-zero
  6295  001576                     	endif
  6296  001576                     	if	0	;tblptru may be non-zero
  6297  001576                     	endif
  6298  001576  0008               	tblrd		*
  6299  001578  50F5               	movf	tablat,w,c
  6300  00157A  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6301  00157C  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  6302  00157E  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  6303  001580  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  6304  001582  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6305  001584  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  6306  001586  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  6307  001588  E10A               	bnz	u6630
  6308  00158A  0E0A               	movlw	10
  6309  00158C  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  6310  00158E  A0D8               	btfss	status,0,c
  6311  001590  EFCC  F00A         	goto	u6631
  6312  001594  EFCF  F00A         	goto	u6630
  6313  001598                     u6631:
  6314  001598  0E01               	movlw	1
  6315  00159A  EFD0  F00A         	goto	u6640
  6316  00159E                     u6630:
  6317  00159E  0E00               	movlw	0
  6318  0015A0                     u6640:
  6319  0015A0  6FB9               	movwf	_vfpfcnvrt$3008& (0+255),b
  6320  0015A2  6BBA               	clrf	(_vfpfcnvrt$3008+1)& (0+255),b
  6321  0015A4                     
  6322                           ; BSR set to: 0
  6323  0015A4  51B9               	movf	_vfpfcnvrt$3008& (0+255),w,b
  6324  0015A6  11BA               	iorwf	(_vfpfcnvrt$3008+1)& (0+255),w,b
  6325  0015A8  A4D8               	btfss	status,2,c
  6326  0015AA  EFD9  F00A         	goto	u6651
  6327  0015AE  EFDB  F00A         	goto	u6650
  6328  0015B2                     u6651:
  6329  0015B2  EFA7  F00A         	goto	l5609
  6330  0015B6                     u6650:
  6331  0015B6                     l5617:
  6332                           
  6333                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  6334  0015B6  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6335  0015BA  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6336  0015BE  CFDE FFF6          	movff	postinc2,tblptrl
  6337  0015C2  CFDD FFF7          	movff	postdec2,tblptrh
  6338  0015C6                     	if	0	;tblptru may be non-zero
  6339  0015C6                     	endif
  6340  0015C6                     	if	0	;tblptru may be non-zero
  6341  0015C6                     	endif
  6342  0015C6  0008               	tblrd		*
  6343  0015C8  50F5               	movf	tablat,w,c
  6344  0015CA  0A2E               	xorlw	46
  6345  0015CC  A4D8               	btfss	status,2,c
  6346  0015CE  EFEB  F00A         	goto	u6661
  6347  0015D2  EFED  F00A         	goto	u6660
  6348  0015D6                     u6661:
  6349  0015D6  EF6C  F00B         	goto	l5637
  6350  0015DA                     u6660:
  6351  0015DA                     
  6352                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  6353  0015DA  0E00               	movlw	0
  6354  0015DC  0100               	movlb	0	; () banked
  6355  0015DE  6FF7               	movwf	(_prec+1)& (0+255),b
  6356  0015E0  0E00               	movlw	0
  6357  0015E2  6FF6               	movwf	_prec& (0+255),b
  6358  0015E4                     
  6359                           ; BSR set to: 0
  6360                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  6361  0015E4  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6362  0015E8  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6363  0015EC  2ADE               	incf	postinc2,f,c
  6364  0015EE  0E00               	movlw	0
  6365  0015F0  22DD               	addwfc	postdec2,f,c
  6366  0015F2                     
  6367                           ; BSR set to: 0
  6368                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  6369  0015F2  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6370  0015F6  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6371  0015FA  CFDE FFF6          	movff	postinc2,tblptrl
  6372  0015FE  CFDD FFF7          	movff	postdec2,tblptrh
  6373  001602                     	if	0	;tblptru may be non-zero
  6374  001602                     	endif
  6375  001602                     	if	0	;tblptru may be non-zero
  6376  001602                     	endif
  6377  001602  0008               	tblrd		*
  6378  001604  50F5               	movf	tablat,w,c
  6379  001606  0A2A               	xorlw	42
  6380  001608  A4D8               	btfss	status,2,c
  6381  00160A  EF09  F00B         	goto	u6671
  6382  00160E  EF0B  F00B         	goto	u6670
  6383  001612                     u6671:
  6384  001612  EF28  F00B         	goto	l5627
  6385  001616                     u6670:
  6386  001616                     
  6387                           ; BSR set to: 0
  6388                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  6389  001616  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6390  00161A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6391  00161E  2ADE               	incf	postinc2,f,c
  6392  001620  0E00               	movlw	0
  6393  001622  22DD               	addwfc	postdec2,f,c
  6394                           
  6395                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  6396  001624  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6397  001628  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6398  00162C  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6399  001630  0E02               	movlw	2
  6400  001632  26DE               	addwf	postinc2,f,c
  6401  001634  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6402  001638  0E00               	movlw	0
  6403  00163A  22DD               	addwfc	postdec2,f,c
  6404  00163C  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6405  001640  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6406  001644  CFDE F0F6          	movff	postinc2,_prec
  6407  001648  CFDD F0F7          	movff	postdec2,_prec+1
  6408                           
  6409                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  6410  00164C  EF6C  F00B         	goto	l5637
  6411  001650                     l5627:
  6412                           
  6413                           ; BSR set to: 0
  6414                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  6415  001650  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6416  001654  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6417  001658  CFDE F008          	movff	postinc2,atoi@s
  6418  00165C  CFDD F009          	movff	postdec2,atoi@s+1
  6419  001660  EC5E  F01C         	call	_atoi	;wreg free
  6420  001664  C008  F0F6         	movff	?_atoi,_prec
  6421  001668  C009  F0F7         	movff	?_atoi+1,_prec+1
  6422                           
  6423                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6424  00166C  EF3F  F00B         	goto	l5631
  6425  001670                     l5629:
  6426                           
  6427                           ; BSR set to: 0
  6428                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  6429  001670  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6430  001674  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6431  001678  2ADE               	incf	postinc2,f,c
  6432  00167A  0E00               	movlw	0
  6433  00167C  22DD               	addwfc	postdec2,f,c
  6434  00167E                     l5631:
  6435  00167E  0ED0               	movlw	208
  6436  001680  0100               	movlb	0	; () banked
  6437  001682  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  6438  001684  0EFF               	movlw	255
  6439  001686  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6440  001688  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6441  00168C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6442  001690  CFDE FFF6          	movff	postinc2,tblptrl
  6443  001694  CFDD FFF7          	movff	postdec2,tblptrh
  6444  001698                     	if	0	;tblptru may be non-zero
  6445  001698                     	endif
  6446  001698                     	if	0	;tblptru may be non-zero
  6447  001698                     	endif
  6448  001698  0008               	tblrd		*
  6449  00169A  50F5               	movf	tablat,w,c
  6450  00169C  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6451  00169E  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  6452  0016A0  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  6453  0016A2  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  6454  0016A4  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6455  0016A6  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  6456  0016A8  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  6457  0016AA  E10A               	bnz	u6680
  6458  0016AC  0E0A               	movlw	10
  6459  0016AE  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  6460  0016B0  A0D8               	btfss	status,0,c
  6461  0016B2  EF5D  F00B         	goto	u6681
  6462  0016B6  EF60  F00B         	goto	u6680
  6463  0016BA                     u6681:
  6464  0016BA  0E01               	movlw	1
  6465  0016BC  EF61  F00B         	goto	u6690
  6466  0016C0                     u6680:
  6467  0016C0  0E00               	movlw	0
  6468  0016C2                     u6690:
  6469  0016C2  6FBB               	movwf	_vfpfcnvrt$3009& (0+255),b
  6470  0016C4  6BBC               	clrf	(_vfpfcnvrt$3009+1)& (0+255),b
  6471  0016C6                     
  6472                           ; BSR set to: 0
  6473  0016C6  51BB               	movf	_vfpfcnvrt$3009& (0+255),w,b
  6474  0016C8  11BC               	iorwf	(_vfpfcnvrt$3009+1)& (0+255),w,b
  6475  0016CA  A4D8               	btfss	status,2,c
  6476  0016CC  EF6A  F00B         	goto	u6701
  6477  0016D0  EF6C  F00B         	goto	u6700
  6478  0016D4                     u6701:
  6479  0016D4  EF38  F00B         	goto	l5629
  6480  0016D8                     u6700:
  6481  0016D8                     l5637:
  6482                           
  6483                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0
      +                          ] = tolower((int)(*fmt)[0]);
  6484  0016D8  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6485  0016DC  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6486  0016E0  CFDE FFF6          	movff	postinc2,tblptrl
  6487  0016E4  CFDD FFF7          	movff	postdec2,tblptrh
  6488  0016E8                     	if	0	;tblptru may be non-zero
  6489  0016E8                     	endif
  6490  0016E8                     	if	0	;tblptru may be non-zero
  6491  0016E8                     	endif
  6492  0016E8  0008               	tblrd		*
  6493  0016EA  50F5               	movf	tablat,w,c
  6494  0016EC  6E07               	movwf	tolower@c^0,c
  6495  0016EE  6A08               	clrf	(tolower@c+1)^0,c
  6496  0016F0  EC67  F028         	call	_tolower	;wreg free
  6497  0016F4  5007               	movf	?_tolower^0,w,c
  6498  0016F6  0100               	movlb	0	; () banked
  6499  0016F8  6FC3               	movwf	vfpfcnvrt@ct& (0+255),b
  6500  0016FA                     
  6501                           ; BSR set to: 0
  6502                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (
      +                          ct[0]) {
  6503  0016FA  51C3               	movf	vfpfcnvrt@ct& (0+255),w,b
  6504  0016FC  B4D8               	btfsc	status,2,c
  6505  0016FE  EF83  F00B         	goto	u6711
  6506  001702  EF85  F00B         	goto	u6710
  6507  001706                     u6711:
  6508  001706  EFBF  F00B         	goto	l5647
  6509  00170A                     u6710:
  6510  00170A                     
  6511                           ; BSR set to: 0
  6512                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             
      +                          ct[1] = tolower((int)(*fmt)[1]);
  6513  00170A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6514  00170E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6515  001712  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  6516  001716  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  6517  00171A  0E01               	movlw	1
  6518  00171C  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  6519  00171E  0E00               	movlw	0
  6520  001720  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6521  001722  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6522  001726  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6523  00172A                     	if	0	;tblptru may be non-zero
  6524  00172A                     	endif
  6525  00172A                     	if	0	;tblptru may be non-zero
  6526  00172A                     	endif
  6527  00172A  0008               	tblrd		*
  6528  00172C  50F5               	movf	tablat,w,c
  6529  00172E  6E07               	movwf	tolower@c^0,c
  6530  001730  6A08               	clrf	(tolower@c+1)^0,c
  6531  001732  EC67  F028         	call	_tolower	;wreg free
  6532  001736  5007               	movf	?_tolower^0,w,c
  6533  001738  0100               	movlb	0	; () banked
  6534  00173A  6FC4               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  6535  00173C                     
  6536                           ; BSR set to: 0
  6537                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             
      +                          if (ct[1]) {
  6538  00173C  51C4               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  6539  00173E  B4D8               	btfsc	status,2,c
  6540  001740  EFA4  F00B         	goto	u6721
  6541  001744  EFA6  F00B         	goto	u6720
  6542  001748                     u6721:
  6543  001748  EFBF  F00B         	goto	l5647
  6544  00174C                     u6720:
  6545  00174C                     
  6546                           ; BSR set to: 0
  6547                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:             
      +                              ct[2] = tolower((int)(*fmt)[2]);
  6548  00174C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6549  001750  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6550  001754  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  6551  001758  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  6552  00175C  0E02               	movlw	2
  6553  00175E  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  6554  001760  0E00               	movlw	0
  6555  001762  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6556  001764  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6557  001768  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6558  00176C                     	if	0	;tblptru may be non-zero
  6559  00176C                     	endif
  6560  00176C                     	if	0	;tblptru may be non-zero
  6561  00176C                     	endif
  6562  00176C  0008               	tblrd		*
  6563  00176E  50F5               	movf	tablat,w,c
  6564  001770  6E07               	movwf	tolower@c^0,c
  6565  001772  6A08               	clrf	(tolower@c+1)^0,c
  6566  001774  EC67  F028         	call	_tolower	;wreg free
  6567  001778  5007               	movf	?_tolower^0,w,c
  6568  00177A  0100               	movlb	0	; () banked
  6569  00177C  6FC5               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  6570  00177E                     l5647:
  6571                           
  6572                           ; BSR set to: 0
  6573                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6574  00177E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6575  001782  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6576  001786  CFDE FFF6          	movff	postinc2,tblptrl
  6577  00178A  CFDD FFF7          	movff	postdec2,tblptrh
  6578  00178E                     	if	0	;tblptru may be non-zero
  6579  00178E                     	endif
  6580  00178E                     	if	0	;tblptru may be non-zero
  6581  00178E                     	endif
  6582  00178E  0008               	tblrd		*
  6583  001790  50F5               	movf	tablat,w,c
  6584  001792  0A64               	xorlw	100
  6585  001794  B4D8               	btfsc	status,2,c
  6586  001796  EFCF  F00B         	goto	u6731
  6587  00179A  EFD1  F00B         	goto	u6730
  6588  00179E                     u6731:
  6589  00179E  EFE3  F00B         	goto	l5651
  6590  0017A2                     u6730:
  6591  0017A2                     
  6592                           ; BSR set to: 0
  6593  0017A2  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6594  0017A6  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6595  0017AA  CFDE FFF6          	movff	postinc2,tblptrl
  6596  0017AE  CFDD FFF7          	movff	postdec2,tblptrh
  6597  0017B2                     	if	0	;tblptru may be non-zero
  6598  0017B2                     	endif
  6599  0017B2                     	if	0	;tblptru may be non-zero
  6600  0017B2                     	endif
  6601  0017B2  0008               	tblrd		*
  6602  0017B4  50F5               	movf	tablat,w,c
  6603  0017B6  0A69               	xorlw	105
  6604  0017B8  A4D8               	btfss	status,2,c
  6605  0017BA  EFE1  F00B         	goto	u6741
  6606  0017BE  EFE3  F00B         	goto	u6740
  6607  0017C2                     u6741:
  6608  0017C2  EF23  F00C         	goto	l5657
  6609  0017C6                     u6740:
  6610  0017C6                     l5651:
  6611                           
  6612                           ; BSR set to: 0
  6613                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  6614  0017C6  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6615  0017CA  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6616  0017CE  2ADE               	incf	postinc2,f,c
  6617  0017D0  0E00               	movlw	0
  6618  0017D2  22DD               	addwfc	postdec2,f,c
  6619                           
  6620                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6621  0017D4  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6622  0017D8  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6623  0017DC  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6624  0017E0  0E02               	movlw	2
  6625  0017E2  26DE               	addwf	postinc2,f,c
  6626  0017E4  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6627  0017E8  0E00               	movlw	0
  6628  0017EA  22DD               	addwfc	postdec2,f,c
  6629  0017EC  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6630  0017F0  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6631  0017F4  CFDE F0B1          	movff	postinc2,vfpfcnvrt@ll
  6632  0017F8  CFDD F0B2          	movff	postdec2,vfpfcnvrt@ll+1
  6633  0017FC  0E00               	movlw	0
  6634  0017FE  BFB2               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  6635  001800  0EFF               	movlw	-1
  6636  001802  6FB3               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  6637  001804  6FB4               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  6638  001806  6FB5               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  6639  001808  6FB6               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  6640  00180A  6FB7               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  6641  00180C  6FB8               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  6642  00180E                     
  6643                           ; BSR set to: 0
  6644                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  6645  00180E  C0A7  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  6646  001812  C0A8  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6647  001816  C0B1  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  6648  00181A  C0B2  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  6649  00181E  C0B3  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  6650  001822  C0B4  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  6651  001826  C0B5  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  6652  00182A  C0B6  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  6653  00182E  C0B7  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  6654  001832  C0B8  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  6655  001836  EC08  F015         	call	_dtoa	;wreg free
  6656  00183A  C01C  F0A7         	movff	?_dtoa,?_vfpfcnvrt
  6657  00183E  C01D  F0A8         	movff	?_dtoa+1,?_vfpfcnvrt+1
  6658  001842  EF52  F00D         	goto	l1575
  6659  001846                     l5657:
  6660                           
  6661                           ; BSR set to: 0
  6662                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (
      +                          ct[0] == 'f') {
  6663  001846  0E66               	movlw	102
  6664  001848  19C3               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  6665  00184A  A4D8               	btfss	status,2,c
  6666  00184C  EF2A  F00C         	goto	u6751
  6667  001850  EF2C  F00C         	goto	u6750
  6668  001854                     u6751:
  6669  001854  EF6C  F00C         	goto	l5669
  6670  001858                     u6750:
  6671  001858                     
  6672                           ; BSR set to: 0
  6673                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             
      +                          c = (*fmt)[0];
  6674  001858  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6675  00185C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6676  001860  CFDE FFF6          	movff	postinc2,tblptrl
  6677  001864  CFDD FFF7          	movff	postdec2,tblptrh
  6678  001868                     	if	0	;tblptru may be non-zero
  6679  001868                     	endif
  6680  001868                     	if	0	;tblptru may be non-zero
  6681  001868                     	endif
  6682  001868  0008               	tblrd		*
  6683  00186A  CFF5 F0C6          	movff	tablat,vfpfcnvrt@c
  6684  00186E                     
  6685                           ; BSR set to: 0
  6686                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             
      +                          ++*fmt;
  6687  00186E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6688  001872  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6689  001876  2ADE               	incf	postinc2,f,c
  6690  001878  0E00               	movlw	0
  6691  00187A  22DD               	addwfc	postdec2,f,c
  6692  00187C                     
  6693                           ; BSR set to: 0
  6694                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  6695  00187C  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6696  001880  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6697  001884  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6698  001888  0E04               	movlw	4
  6699  00188A  26DE               	addwf	postinc2,f,c
  6700  00188C  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6701  001890  0E00               	movlw	0
  6702  001892  22DD               	addwfc	postdec2,f,c
  6703  001894  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6704  001898  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6705  00189C  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  6706  0018A0  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  6707  0018A4  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  6708  0018A8  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  6709  0018AC                     l5665:
  6710                           
  6711                           ; BSR set to: 0
  6712                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             
      +                          return efgtoa(fp, f, c);
  6713  0018AC  C0A7  F058         	movff	vfpfcnvrt@fp,efgtoa@fp
  6714  0018B0  C0A8  F059         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  6715  0018B4  C0BF  F05A         	movff	vfpfcnvrt@f,efgtoa@f
  6716  0018B8  C0C0  F05B         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  6717  0018BC  C0C1  F05C         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  6718  0018C0  C0C2  F05D         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  6719  0018C4  C0C6  F05E         	movff	vfpfcnvrt@c,efgtoa@c
  6720  0018C8  EC59  F000         	call	_efgtoa	;wreg free
  6721  0018CC  C058  F0A7         	movff	?_efgtoa,?_vfpfcnvrt
  6722  0018D0  C059  F0A8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  6723  0018D4  EF52  F00D         	goto	l1575
  6724  0018D8                     l5669:
  6725                           
  6726                           ; BSR set to: 0
  6727                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  6728  0018D8  0EC3               	movlw	low vfpfcnvrt@ct
  6729  0018DA  6E01               	movwf	strncmp@_l^0,c
  6730  0018DC  0E00               	movlw	high vfpfcnvrt@ct
  6731  0018DE  6E02               	movwf	(strncmp@_l+1)^0,c
  6732  0018E0  0EFB               	movlw	low STR_27
  6733  0018E2  6E03               	movwf	strncmp@_r^0,c
  6734  0018E4  0E7F               	movlw	high STR_27
  6735  0018E6  6E04               	movwf	(strncmp@_r+1)^0,c
  6736  0018E8  0E00               	movlw	0
  6737  0018EA  6E06               	movwf	(strncmp@n+1)^0,c
  6738  0018EC  0E02               	movlw	2
  6739  0018EE  6E05               	movwf	strncmp@n^0,c
  6740  0018F0  ECED  F022         	call	_strncmp	;wreg free
  6741  0018F4  5001               	movf	?_strncmp^0,w,c
  6742  0018F6  1002               	iorwf	(?_strncmp+1)^0,w,c
  6743  0018F8  A4D8               	btfss	status,2,c
  6744  0018FA  EF81  F00C         	goto	u6761
  6745  0018FE  EF83  F00C         	goto	u6760
  6746  001902                     u6761:
  6747  001902  EFFF  F00C         	goto	l5685
  6748  001906                     u6760:
  6749  001906                     
  6750                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  6751  001906  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6752  00190A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6753  00190E  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  6754  001912  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  6755  001916  0E01               	movlw	1
  6756  001918  0100               	movlb	0	; () banked
  6757  00191A  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  6758  00191C  0E00               	movlw	0
  6759  00191E  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6760  001920  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6761  001924  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6762  001928                     	if	0	;tblptru may be non-zero
  6763  001928                     	endif
  6764  001928                     	if	0	;tblptru may be non-zero
  6765  001928                     	endif
  6766  001928  0008               	tblrd		*
  6767  00192A  CFF5 F0C6          	movff	tablat,vfpfcnvrt@c
  6768  00192E  0EBF               	movlw	191
  6769  001930  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  6770  001932  0EFF               	movlw	255
  6771  001934  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6772  001936  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6773  00193A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6774  00193E  CFDE FFF6          	movff	postinc2,tblptrl
  6775  001942  CFDD FFF7          	movff	postdec2,tblptrh
  6776  001946                     	if	0	;tblptru may be non-zero
  6777  001946                     	endif
  6778  001946                     	if	0	;tblptru may be non-zero
  6779  001946                     	endif
  6780  001946  0008               	tblrd		*
  6781  001948  50F5               	movf	tablat,w,c
  6782  00194A  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6783  00194C  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  6784  00194E  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  6785  001950  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  6786  001952  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6787  001954  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  6788  001956  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  6789  001958  E10A               	bnz	u6770
  6790  00195A  0E1A               	movlw	26
  6791  00195C  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  6792  00195E  A0D8               	btfss	status,0,c
  6793  001960  EFB4  F00C         	goto	u6771
  6794  001964  EFB7  F00C         	goto	u6770
  6795  001968                     u6771:
  6796  001968  0E01               	movlw	1
  6797  00196A  EFB8  F00C         	goto	u6780
  6798  00196E                     u6770:
  6799  00196E  0E00               	movlw	0
  6800  001970                     u6780:
  6801  001970  6FBD               	movwf	_vfpfcnvrt$3014& (0+255),b
  6802  001972  6BBE               	clrf	(_vfpfcnvrt$3014+1)& (0+255),b
  6803  001974                     
  6804                           ; BSR set to: 0
  6805  001974  51BD               	movf	_vfpfcnvrt$3014& (0+255),w,b
  6806  001976  11BE               	iorwf	(_vfpfcnvrt$3014+1)& (0+255),w,b
  6807  001978  B4D8               	btfsc	status,2,c
  6808  00197A  EFC1  F00C         	goto	u6791
  6809  00197E  EFC3  F00C         	goto	u6790
  6810  001982                     u6791:
  6811  001982  EFDD  F00C         	goto	l5679
  6812  001986                     u6790:
  6813  001986                     
  6814                           ; BSR set to: 0
  6815                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  6816  001986  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6817  00198A  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6818  00198E  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6819  001992  0E04               	movlw	4
  6820  001994  26DE               	addwf	postinc2,f,c
  6821  001996  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6822  00199A  0E00               	movlw	0
  6823  00199C  22DD               	addwfc	postdec2,f,c
  6824  00199E  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6825  0019A2  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6826  0019A6  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  6827  0019AA  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  6828  0019AE  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  6829  0019B2  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  6830                           
  6831                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             
      +                          } else {
  6832  0019B6  EFF5  F00C         	goto	l1583
  6833  0019BA                     l5679:
  6834                           
  6835                           ; BSR set to: 0
  6836                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  6837  0019BA  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6838  0019BE  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6839  0019C2  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6840  0019C6  0E04               	movlw	4
  6841  0019C8  26DE               	addwf	postinc2,f,c
  6842  0019CA  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6843  0019CE  0E00               	movlw	0
  6844  0019D0  22DD               	addwfc	postdec2,f,c
  6845  0019D2  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6846  0019D6  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6847  0019DA  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  6848  0019DE  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  6849  0019E2  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  6850  0019E6  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  6851  0019EA                     l1583:
  6852                           
  6853                           ; BSR set to: 0
  6854                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  6855  0019EA  0E02               	movlw	2
  6856  0019EC  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6857  0019F0  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6858  0019F4  26DE               	addwf	postinc2,f,c
  6859  0019F6  0E00               	movlw	0
  6860  0019F8  22DD               	addwfc	postdec2,f,c
  6861  0019FA  EF56  F00C         	goto	l5665
  6862  0019FE                     l5685:
  6863                           
  6864                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  6865  0019FE  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6866  001A02  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6867  001A06  CFDE FFF6          	movff	postinc2,tblptrl
  6868  001A0A  CFDD FFF7          	movff	postdec2,tblptrh
  6869  001A0E                     	if	0	;tblptru may be non-zero
  6870  001A0E                     	endif
  6871  001A0E                     	if	0	;tblptru may be non-zero
  6872  001A0E                     	endif
  6873  001A0E  0008               	tblrd		*
  6874  001A10  50F5               	movf	tablat,w,c
  6875  001A12  0A25               	xorlw	37
  6876  001A14  A4D8               	btfss	status,2,c
  6877  001A16  EF0F  F00D         	goto	u6801
  6878  001A1A  EF11  F00D         	goto	u6800
  6879  001A1E                     u6801:
  6880  001A1E  EF29  F00D         	goto	l5695
  6881  001A22                     u6800:
  6882  001A22                     
  6883                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  6884  001A22  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6885  001A26  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6886  001A2A  2ADE               	incf	postinc2,f,c
  6887  001A2C  0E00               	movlw	0
  6888  001A2E  22DD               	addwfc	postdec2,f,c
  6889  001A30                     
  6890                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  6891  001A30  0E00               	movlw	0
  6892  001A32  6E02               	movwf	(fputc@c+1)^0,c
  6893  001A34  0E25               	movlw	37
  6894  001A36  6E01               	movwf	fputc@c^0,c
  6895  001A38  C0A7  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6896  001A3C  C0A8  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6897  001A40  ECC1  F023         	call	_fputc	;wreg free
  6898  001A44                     l5691:
  6899                           
  6900                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  6901  001A44  0E00               	movlw	0
  6902  001A46  0100               	movlb	0	; () banked
  6903  001A48  6FA8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  6904  001A4A  0E01               	movlw	1
  6905  001A4C  6FA7               	movwf	?_vfpfcnvrt& (0+255),b
  6906  001A4E  EF52  F00D         	goto	l1575
  6907  001A52                     l5695:
  6908                           
  6909                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  6910  001A52  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6911  001A56  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6912  001A5A  2ADE               	incf	postinc2,f,c
  6913  001A5C  0E00               	movlw	0
  6914  001A5E  22DD               	addwfc	postdec2,f,c
  6915  001A60                     
  6916                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  6917  001A60  0E00               	movlw	0
  6918  001A62  0100               	movlb	0	; () banked
  6919  001A64  6FA8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  6920  001A66  0E00               	movlw	0
  6921  001A68  6FA7               	movwf	?_vfpfcnvrt& (0+255),b
  6922  001A6A  EF52  F00D         	goto	l1575
  6923  001A6E                     l5701:
  6924                           
  6925                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  6926  001A6E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6927  001A72  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6928  001A76  CFDE FFF6          	movff	postinc2,tblptrl
  6929  001A7A  CFDD FFF7          	movff	postdec2,tblptrh
  6930  001A7E                     	if	0	;tblptru may be non-zero
  6931  001A7E                     	endif
  6932  001A7E                     	if	0	;tblptru may be non-zero
  6933  001A7E                     	endif
  6934  001A7E  0008               	tblrd		*
  6935  001A80  50F5               	movf	tablat,w,c
  6936  001A82  6E01               	movwf	fputc@c^0,c
  6937  001A84  6A02               	clrf	(fputc@c+1)^0,c
  6938  001A86  C0A7  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6939  001A8A  C0A8  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6940  001A8E  ECC1  F023         	call	_fputc	;wreg free
  6941  001A92                     
  6942                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  6943  001A92  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6944  001A96  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6945  001A9A  2ADE               	incf	postinc2,f,c
  6946  001A9C  0E00               	movlw	0
  6947  001A9E  22DD               	addwfc	postdec2,f,c
  6948  001AA0  EF22  F00D         	goto	l5691
  6949  001AA4                     l1575:
  6950  001AA4  0012               	return		;funcret
  6951  001AA6                     __end_of_vfpfcnvrt:
  6952                           	callstack 0
  6953                           
  6954 ;; *************** function _strncmp *****************
  6955 ;; Defined at:
  6956 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  6957 ;; Parameters:    Size  Location     Type
  6958 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  6959 ;;		 -> vfpfcnvrt@ct(3), 
  6960 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  6961 ;;		 -> STR_29(3), 
  6962 ;;  n               2    4[COMRAM] unsigned int 
  6963 ;; Auto vars:     Size  Location     Type
  6964 ;;  r               2    9[COMRAM] PTR const unsigned char 
  6965 ;;		 -> STR_29(3), 
  6966 ;;  l               2    7[COMRAM] PTR const unsigned char 
  6967 ;;		 -> vfpfcnvrt@ct(3), 
  6968 ;; Return value:  Size  Location     Type
  6969 ;;                  2    0[COMRAM] int 
  6970 ;; Registers used:
  6971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6972 ;; Tracked objects:
  6973 ;;		On entry : 0/0
  6974 ;;		On exit  : 0/0
  6975 ;;		Unchanged: 0/0
  6976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6977 ;;      Params:         6       0       0       0       0       0       0
  6978 ;;      Locals:         4       0       0       0       0       0       0
  6979 ;;      Temps:          1       0       0       0       0       0       0
  6980 ;;      Totals:        11       0       0       0       0       0       0
  6981 ;;Total ram usage:       11 bytes
  6982 ;; Hardware stack levels used:    1
  6983 ;; Hardware stack levels required when called:    1
  6984 ;; This function calls:
  6985 ;;		Nothing
  6986 ;; This function is called by:
  6987 ;;		_vfpfcnvrt
  6988 ;; This function uses a non-reentrant model
  6989 ;;
  6990                           
  6991                           	psect	text24
  6992  0045DA                     __ptext24:
  6993                           	callstack 0
  6994  0045DA                     _strncmp:
  6995                           	callstack 23
  6996  0045DA  C001  F008         	movff	strncmp@_l,strncmp@l
  6997  0045DE  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  6998  0045E2  C003  F00A         	movff	strncmp@_r,strncmp@r
  6999  0045E6  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  7000  0045EA  0605               	decf	strncmp@n^0,f,c
  7001  0045EC  A0D8               	btfss	status,0,c
  7002  0045EE  0606               	decf	(strncmp@n+1)^0,f,c
  7003  0045F0  2805               	incf	strncmp@n^0,w,c
  7004  0045F2  E106               	bnz	u6351
  7005  0045F4  2806               	incf	(strncmp@n+1)^0,w,c
  7006  0045F6  A4D8               	btfss	status,2,c
  7007  0045F8  EF00  F023         	goto	u6351
  7008  0045FC  EF02  F023         	goto	u6350
  7009  004600                     u6351:
  7010  004600  EF0F  F023         	goto	l5463
  7011  004604                     u6350:
  7012  004604  0E00               	movlw	0
  7013  004606  6E02               	movwf	(?_strncmp+1)^0,c
  7014  004608  0E00               	movlw	0
  7015  00460A  6E01               	movwf	?_strncmp^0,c
  7016  00460C  EF57  F023         	goto	l1711
  7017  004610                     l5461:
  7018  004610  4A08               	infsnz	strncmp@l^0,f,c
  7019  004612  2A09               	incf	(strncmp@l+1)^0,f,c
  7020  004614  4A0A               	infsnz	strncmp@r^0,f,c
  7021  004616  2A0B               	incf	(strncmp@r+1)^0,f,c
  7022  004618  0605               	decf	strncmp@n^0,f,c
  7023  00461A  A0D8               	btfss	status,0,c
  7024  00461C  0606               	decf	(strncmp@n+1)^0,f,c
  7025  00461E                     l5463:
  7026  00461E  C008  FFD9         	movff	strncmp@l,fsr2l
  7027  004622  C009  FFDA         	movff	strncmp@l+1,fsr2h
  7028  004626  50DF               	movf	indf2,w,c
  7029  004628  B4D8               	btfsc	status,2,c
  7030  00462A  EF19  F023         	goto	u6361
  7031  00462E  EF1B  F023         	goto	u6360
  7032  004632                     u6361:
  7033  004632  EF46  F023         	goto	l5471
  7034  004636                     u6360:
  7035  004636  C00A  FFF6         	movff	strncmp@r,tblptrl
  7036  00463A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7037  00463E                     	if	0	;tblptru may be non-zero
  7038  00463E                     	endif
  7039  00463E                     	if	0	;tblptru may be non-zero
  7040  00463E                     	endif
  7041  00463E  0008               	tblrd		*
  7042  004640  50F5               	movf	tablat,w,c
  7043  004642  0900               	iorlw	0
  7044  004644  B4D8               	btfsc	status,2,c
  7045  004646  EF27  F023         	goto	u6371
  7046  00464A  EF29  F023         	goto	u6370
  7047  00464E                     u6371:
  7048  00464E  EF46  F023         	goto	l5471
  7049  004652                     u6370:
  7050  004652  5005               	movf	strncmp@n^0,w,c
  7051  004654  1006               	iorwf	(strncmp@n+1)^0,w,c
  7052  004656  B4D8               	btfsc	status,2,c
  7053  004658  EF30  F023         	goto	u6381
  7054  00465C  EF32  F023         	goto	u6380
  7055  004660                     u6381:
  7056  004660  EF46  F023         	goto	l5471
  7057  004664                     u6380:
  7058  004664  C008  FFD9         	movff	strncmp@l,fsr2l
  7059  004668  C009  FFDA         	movff	strncmp@l+1,fsr2h
  7060  00466C  50DF               	movf	indf2,w,c
  7061  00466E  6E07               	movwf	??_strncmp^0,c
  7062  004670  C00A  FFF6         	movff	strncmp@r,tblptrl
  7063  004674  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7064  004678                     	if	0	;tblptru may be non-zero
  7065  004678                     	endif
  7066  004678                     	if	0	;tblptru may be non-zero
  7067  004678                     	endif
  7068  004678  0008               	tblrd		*
  7069  00467A  50F5               	movf	tablat,w,c
  7070  00467C  1807               	xorwf	??_strncmp^0,w,c
  7071  00467E  B4D8               	btfsc	status,2,c
  7072  004680  EF44  F023         	goto	u6391
  7073  004684  EF46  F023         	goto	u6390
  7074  004688                     u6391:
  7075  004688  EF08  F023         	goto	l5461
  7076  00468C                     u6390:
  7077  00468C                     l5471:
  7078  00468C  C008  FFD9         	movff	strncmp@l,fsr2l
  7079  004690  C009  FFDA         	movff	strncmp@l+1,fsr2h
  7080  004694  50DF               	movf	indf2,w,c
  7081  004696  6E07               	movwf	??_strncmp^0,c
  7082  004698  C00A  FFF6         	movff	strncmp@r,tblptrl
  7083  00469C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7084  0046A0                     	if	0	;tblptru may be non-zero
  7085  0046A0                     	endif
  7086  0046A0                     	if	0	;tblptru may be non-zero
  7087  0046A0                     	endif
  7088  0046A0  0008               	tblrd		*
  7089  0046A2  50F5               	movf	tablat,w,c
  7090  0046A4  5C07               	subwf	??_strncmp^0,w,c
  7091  0046A6  6E01               	movwf	?_strncmp^0,c
  7092  0046A8  6A02               	clrf	(?_strncmp+1)^0,c
  7093  0046AA  A0D8               	btfss	status,0,c
  7094  0046AC  0602               	decf	(?_strncmp+1)^0,f,c
  7095  0046AE                     l1711:
  7096  0046AE  0012               	return		;funcret
  7097  0046B0                     __end_of_strncmp:
  7098                           	callstack 0
  7099                           
  7100 ;; *************** function _efgtoa *****************
  7101 ;; Defined at:
  7102 ;;		line 319 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7103 ;; Parameters:    Size  Location     Type
  7104 ;;  fp              2   87[COMRAM] PTR struct _IO_FILE
  7105 ;;		 -> sprintf@f(6), 
  7106 ;;  f               4   89[COMRAM] PTR struct _IO_FILE
  7107 ;;  c               1   93[COMRAM] unsigned char 
  7108 ;; Auto vars:     Size  Location     Type
  7109 ;;  u               4   67[BANK0 ] unsigned char 
  7110 ;;  g               4   59[BANK0 ] unsigned char 
  7111 ;;  l               4   53[BANK0 ] unsigned char 
  7112 ;;  h               4   49[BANK0 ] unsigned char 
  7113 ;;  ou              4   15[BANK0 ] unsigned char 
  7114 ;;  n               2   65[BANK0 ] int 
  7115 ;;  e               2   63[BANK0 ] int 
  7116 ;;  i               2   57[BANK0 ] int 
  7117 ;;  w               2   46[BANK0 ] int 
  7118 ;;  p               2   43[BANK0 ] int 
  7119 ;;  sign            2   41[BANK0 ] int 
  7120 ;;  d               2   39[BANK0 ] int 
  7121 ;;  ne              2   37[BANK0 ] int 
  7122 ;;  m               2   35[BANK0 ] int 
  7123 ;;  pp              2   33[BANK0 ] int 
  7124 ;;  t               2   31[BANK0 ] int 
  7125 ;;  mode            1   48[BANK0 ] unsigned char 
  7126 ;;  nmode           1   45[BANK0 ] unsigned char 
  7127 ;; Return value:  Size  Location     Type
  7128 ;;                  2   87[COMRAM] int 
  7129 ;; Registers used:
  7130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7131 ;; Tracked objects:
  7132 ;;		On entry : 0/0
  7133 ;;		On exit  : 0/0
  7134 ;;		Unchanged: 0/0
  7135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7136 ;;      Params:         7       0       0       0       0       0       0
  7137 ;;      Locals:         0      56       0       0       0       0       0
  7138 ;;      Temps:          0       5       0       0       0       0       0
  7139 ;;      Totals:         7      61       0       0       0       0       0
  7140 ;;Total ram usage:       68 bytes
  7141 ;; Hardware stack levels used:    1
  7142 ;; Hardware stack levels required when called:    5
  7143 ;; This function calls:
  7144 ;;		___awdiv
  7145 ;;		___awmod
  7146 ;;		___fladd
  7147 ;;		___fldiv
  7148 ;;		___fleq
  7149 ;;		___flge
  7150 ;;		___flmul
  7151 ;;		___flneg
  7152 ;;		___flsub
  7153 ;;		___fltol
  7154 ;;		___fpclassifyf
  7155 ;;		_floorf
  7156 ;;		_isupper
  7157 ;;		_pad
  7158 ;;		_strcpy
  7159 ;;		_tolower
  7160 ;; This function is called by:
  7161 ;;		_vfpfcnvrt
  7162 ;; This function uses a non-reentrant model
  7163 ;;
  7164                           
  7165                           	psect	text25
  7166  0000B2                     __ptext25:
  7167                           	callstack 0
  7168  0000B2                     _efgtoa:
  7169                           	callstack 19
  7170  0000B2                     
  7171                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\
      +                          c99\common\doprnt.c: 320: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\
      +                          doprnt.c: 321:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c9
      +                          9\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;
  7172  0000B2  0E00               	movlw	0
  7173  0000B4  0100               	movlb	0	; () banked
  7174  0000B6  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  7175  0000B8  0E00               	movlw	0
  7176  0000BA  6F89               	movwf	efgtoa@sign& (0+255),b
  7177  0000BC                     
  7178                           ; BSR set to: 0
  7179                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  7180  0000BC  C05A  F09B         	movff	efgtoa@f,efgtoa@g
  7181  0000C0  C05B  F09C         	movff	efgtoa@f+1,efgtoa@g+1
  7182  0000C4  C05C  F09D         	movff	efgtoa@f+2,efgtoa@g+2
  7183  0000C8  C05D  F09E         	movff	efgtoa@f+3,efgtoa@g+3
  7184  0000CC                     
  7185                           ; BSR set to: 0
  7186                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 
      +                          0.0) {
  7187  0000CC  BF9E               	btfsc	(efgtoa@g+3)& (0+255),7,b
  7188  0000CE  EF6D  F000         	goto	u5760
  7189  0000D2  EF6B  F000         	goto	u5761
  7190  0000D6                     u5761:
  7191  0000D6  EF83  F000         	goto	l5125
  7192  0000DA                     u5760:
  7193  0000DA                     
  7194                           ; BSR set to: 0
  7195                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign
      +                           = 1;
  7196  0000DA  0E00               	movlw	0
  7197  0000DC  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  7198  0000DE  0E01               	movlw	1
  7199  0000E0  6F89               	movwf	efgtoa@sign& (0+255),b
  7200  0000E2                     
  7201                           ; BSR set to: 0
  7202                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = 
      +                          -g;
  7203  0000E2  C09B  F001         	movff	efgtoa@g,___flneg@f1
  7204  0000E6  C09C  F002         	movff	efgtoa@g+1,___flneg@f1+1
  7205  0000EA  C09D  F003         	movff	efgtoa@g+2,___flneg@f1+2
  7206  0000EE  C09E  F004         	movff	efgtoa@g+3,___flneg@f1+3
  7207  0000F2  ECB1  F02A         	call	___flneg	;wreg free
  7208  0000F6  C001  F09B         	movff	?___flneg,efgtoa@g
  7209  0000FA  C002  F09C         	movff	?___flneg+1,efgtoa@g+1
  7210  0000FE  C003  F09D         	movff	?___flneg+2,efgtoa@g+2
  7211  000102  C004  F09E         	movff	?___flneg+3,efgtoa@g+3
  7212  000106                     l5125:
  7213                           
  7214                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  7215  000106  0E00               	movlw	0
  7216  000108  0100               	movlb	0	; () banked
  7217  00010A  6FA2               	movwf	(efgtoa@n+1)& (0+255),b
  7218  00010C  0E00               	movlw	0
  7219  00010E  6FA1               	movwf	efgtoa@n& (0+255),b
  7220  000110                     
  7221                           ; BSR set to: 0
  7222                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = widt
      +                          h;
  7223  000110  C1B1  F08E         	movff	_width,efgtoa@w
  7224  000114  C1B2  F08F         	movff	_width+1,efgtoa@w+1
  7225  000118                     
  7226                           ; BSR set to: 0
  7227                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign
      +                           || (flags & (1 << 2))) {
  7228  000118  5189               	movf	efgtoa@sign& (0+255),w,b
  7229  00011A  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7230  00011C  A4D8               	btfss	status,2,c
  7231  00011E  EF93  F000         	goto	u5771
  7232  000122  EF95  F000         	goto	u5770
  7233  000126                     u5771:
  7234  000126  EF9C  F000         	goto	l5133
  7235  00012A                     u5770:
  7236  00012A                     
  7237                           ; BSR set to: 0
  7238  00012A  A5F8               	btfss	_flags& (0+255),2,b
  7239  00012C  EF9A  F000         	goto	u5781
  7240  000130  EF9C  F000         	goto	u5780
  7241  000134                     u5781:
  7242  000134  EFB6  F000         	goto	l5145
  7243  000138                     u5780:
  7244  000138                     l5133:
  7245                           
  7246                           ; BSR set to: 0
  7247                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf
      +                          [n] = sign ? '-' : '+';
  7248  000138  5189               	movf	efgtoa@sign& (0+255),w,b
  7249  00013A  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7250  00013C  A4D8               	btfss	status,2,c
  7251  00013E  EFA3  F000         	goto	u5791
  7252  000142  EFA5  F000         	goto	u5790
  7253  000146                     u5791:
  7254  000146  EFAB  F000         	goto	l5137
  7255  00014A                     u5790:
  7256  00014A                     
  7257                           ; BSR set to: 0
  7258  00014A  0E00               	movlw	0
  7259  00014C  6F74               	movwf	(_efgtoa$2983+1)& (0+255),b
  7260  00014E  0E2B               	movlw	43
  7261  000150  6F73               	movwf	_efgtoa$2983& (0+255),b
  7262  000152  EFAF  F000         	goto	l5139
  7263  000156                     l5137:
  7264                           
  7265                           ; BSR set to: 0
  7266  000156  0E00               	movlw	0
  7267  000158  6F74               	movwf	(_efgtoa$2983+1)& (0+255),b
  7268  00015A  0E2D               	movlw	45
  7269  00015C  6F73               	movwf	_efgtoa$2983& (0+255),b
  7270  00015E                     l5139:
  7271                           
  7272                           ; BSR set to: 0
  7273  00015E  C073  F260         	movff	_efgtoa$2983,_dbuf
  7274  000162                     
  7275                           ; BSR set to: 0
  7276                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  7277  000162  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  7278  000164  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  7279  000166                     
  7280                           ; BSR set to: 0
  7281                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  7282  000166  078E               	decf	efgtoa@w& (0+255),f,b
  7283  000168  A0D8               	btfss	status,0,c
  7284  00016A  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  7285  00016C                     l5145:
  7286                           
  7287                           ; BSR set to: 0
  7288                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  7289  00016C  C09B  F001         	movff	efgtoa@g,___fpclassifyf@x
  7290  000170  C09C  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7291  000174  C09D  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7292  000178  C09E  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7293  00017C  EC6E  F022         	call	___fpclassifyf	;wreg free
  7294  000180  0401               	decf	?___fpclassifyf^0,w,c
  7295  000182  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  7296  000184  A4D8               	btfss	status,2,c
  7297  000186  EFC7  F000         	goto	u5801
  7298  00018A  EFC9  F000         	goto	u5800
  7299  00018E                     u5801:
  7300  00018E  EF20  F001         	goto	l5163
  7301  000192                     u5800:
  7302  000192  0EBF               	movlw	191
  7303  000194  0100               	movlb	0	; () banked
  7304  000196  6F6A               	movwf	??_efgtoa& (0+255),b
  7305  000198  0EFF               	movlw	255
  7306  00019A  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  7307  00019C  505E               	movf	efgtoa@c^0,w,c
  7308  00019E  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  7309  0001A0  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  7310  0001A2  516A               	movf	??_efgtoa& (0+255),w,b
  7311  0001A4  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  7312  0001A6  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  7313  0001A8  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7314  0001AA  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  7315  0001AC  E10A               	bnz	u5810
  7316  0001AE  0E1A               	movlw	26
  7317  0001B0  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  7318  0001B2  A0D8               	btfss	status,0,c
  7319  0001B4  EFDE  F000         	goto	u5811
  7320  0001B8  EFE1  F000         	goto	u5810
  7321  0001BC                     u5811:
  7322  0001BC  0E01               	movlw	1
  7323  0001BE  EFE2  F000         	goto	u5820
  7324  0001C2                     u5810:
  7325  0001C2  0E00               	movlw	0
  7326  0001C4                     u5820:
  7327  0001C4  6F75               	movwf	_efgtoa$2984& (0+255),b
  7328  0001C6  6B76               	clrf	(_efgtoa$2984+1)& (0+255),b
  7329  0001C8                     
  7330                           ; BSR set to: 0
  7331  0001C8  5175               	movf	_efgtoa$2984& (0+255),w,b
  7332  0001CA  1176               	iorwf	(_efgtoa$2984+1)& (0+255),w,b
  7333  0001CC  B4D8               	btfsc	status,2,c
  7334  0001CE  EFEB  F000         	goto	u5831
  7335  0001D2  EFED  F000         	goto	u5830
  7336  0001D6                     u5831:
  7337  0001D6  EFFB  F000         	goto	l5155
  7338  0001DA                     u5830:
  7339  0001DA                     
  7340                           ; BSR set to: 0
  7341                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             
      +                          strcpy(&dbuf[n], "INF");
  7342  0001DA  0E60               	movlw	low _dbuf
  7343  0001DC  25A1               	addwf	efgtoa@n& (0+255),w,b
  7344  0001DE  6E01               	movwf	strcpy@dest^0,c
  7345  0001E0  0E02               	movlw	high _dbuf
  7346  0001E2  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7347  0001E4  6E02               	movwf	(strcpy@dest+1)^0,c
  7348  0001E6  0EEB               	movlw	low STR_19
  7349  0001E8  6E03               	movwf	strcpy@src^0,c
  7350  0001EA  0E7F               	movlw	high STR_19
  7351  0001EC  6E04               	movwf	(strcpy@src+1)^0,c
  7352  0001EE  EC97  F028         	call	_strcpy	;wreg free
  7353                           
  7354                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } el
      +                          se {
  7355  0001F2  EF07  F001         	goto	l5157
  7356  0001F6                     l5155:
  7357                           
  7358                           ; BSR set to: 0
  7359                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             
      +                          strcpy(&dbuf[n], "inf");
  7360  0001F6  0E60               	movlw	low _dbuf
  7361  0001F8  25A1               	addwf	efgtoa@n& (0+255),w,b
  7362  0001FA  6E01               	movwf	strcpy@dest^0,c
  7363  0001FC  0E02               	movlw	high _dbuf
  7364  0001FE  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7365  000200  6E02               	movwf	(strcpy@dest+1)^0,c
  7366  000202  0EF3               	movlw	low STR_20
  7367  000204  6E03               	movwf	strcpy@src^0,c
  7368  000206  0E7F               	movlw	high STR_20
  7369  000208  6E04               	movwf	(strcpy@src+1)^0,c
  7370  00020A  EC97  F028         	call	_strcpy	;wreg free
  7371  00020E                     l5157:
  7372                           
  7373                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  7374  00020E  0100               	movlb	0	; () banked
  7375  000210  0EFD               	movlw	253
  7376  000212  278E               	addwf	efgtoa@w& (0+255),f,b
  7377  000214  0EFF               	movlw	255
  7378  000216  238F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  7379  000218                     l5159:
  7380                           
  7381                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         retu
      +                          rn pad(fp, &dbuf[0], w);
  7382  000218  C058  F011         	movff	efgtoa@fp,pad@fp
  7383  00021C  C059  F012         	movff	efgtoa@fp+1,pad@fp+1
  7384  000220  0E60               	movlw	low _dbuf
  7385  000222  6E13               	movwf	pad@buf^0,c
  7386  000224  0E02               	movlw	high _dbuf
  7387  000226  6E14               	movwf	(pad@buf+1)^0,c
  7388  000228  C08E  F015         	movff	efgtoa@w,pad@p
  7389  00022C  C08F  F016         	movff	efgtoa@w+1,pad@p+1
  7390  000230  EC26  F024         	call	_pad	;wreg free
  7391  000234  C011  F058         	movff	?_pad,?_efgtoa
  7392  000238  C012  F059         	movff	?_pad+1,?_efgtoa+1
  7393  00023C  EF30  F006         	goto	l1473
  7394  000240                     l5163:
  7395                           
  7396                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  7397  000240  C09B  F001         	movff	efgtoa@g,___fpclassifyf@x
  7398  000244  C09C  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7399  000248  C09D  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7400  00024C  C09E  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7401  000250  EC6E  F022         	call	___fpclassifyf	;wreg free
  7402  000254  5001               	movf	?___fpclassifyf^0,w,c
  7403  000256  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  7404  000258  A4D8               	btfss	status,2,c
  7405  00025A  EF31  F001         	goto	u5841
  7406  00025E  EF33  F001         	goto	u5840
  7407  000262                     u5841:
  7408  000262  EF73  F001         	goto	l5181
  7409  000266                     u5840:
  7410  000266  0EBF               	movlw	191
  7411  000268  0100               	movlb	0	; () banked
  7412  00026A  6F6A               	movwf	??_efgtoa& (0+255),b
  7413  00026C  0EFF               	movlw	255
  7414  00026E  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  7415  000270  505E               	movf	efgtoa@c^0,w,c
  7416  000272  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  7417  000274  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  7418  000276  516A               	movf	??_efgtoa& (0+255),w,b
  7419  000278  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  7420  00027A  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  7421  00027C  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7422  00027E  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  7423  000280  E10A               	bnz	u5850
  7424  000282  0E1A               	movlw	26
  7425  000284  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  7426  000286  A0D8               	btfss	status,0,c
  7427  000288  EF48  F001         	goto	u5851
  7428  00028C  EF4B  F001         	goto	u5850
  7429  000290                     u5851:
  7430  000290  0E01               	movlw	1
  7431  000292  EF4C  F001         	goto	u5860
  7432  000296                     u5850:
  7433  000296  0E00               	movlw	0
  7434  000298                     u5860:
  7435  000298  6F77               	movwf	_efgtoa$2988& (0+255),b
  7436  00029A  6B78               	clrf	(_efgtoa$2988+1)& (0+255),b
  7437  00029C                     
  7438                           ; BSR set to: 0
  7439  00029C  5177               	movf	_efgtoa$2988& (0+255),w,b
  7440  00029E  1178               	iorwf	(_efgtoa$2988+1)& (0+255),w,b
  7441  0002A0  B4D8               	btfsc	status,2,c
  7442  0002A2  EF55  F001         	goto	u5871
  7443  0002A6  EF57  F001         	goto	u5870
  7444  0002AA                     u5871:
  7445  0002AA  EF65  F001         	goto	l5173
  7446  0002AE                     u5870:
  7447  0002AE                     
  7448                           ; BSR set to: 0
  7449                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             
      +                          strcpy(&dbuf[n], "NAN");
  7450  0002AE  0E60               	movlw	low _dbuf
  7451  0002B0  25A1               	addwf	efgtoa@n& (0+255),w,b
  7452  0002B2  6E01               	movwf	strcpy@dest^0,c
  7453  0002B4  0E02               	movlw	high _dbuf
  7454  0002B6  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7455  0002B8  6E02               	movwf	(strcpy@dest+1)^0,c
  7456  0002BA  0EEF               	movlw	low STR_23
  7457  0002BC  6E03               	movwf	strcpy@src^0,c
  7458  0002BE  0E7F               	movlw	high STR_23
  7459  0002C0  6E04               	movwf	(strcpy@src+1)^0,c
  7460  0002C2  EC97  F028         	call	_strcpy	;wreg free
  7461                           
  7462                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } el
      +                          se {
  7463  0002C6  EF07  F001         	goto	l5157
  7464  0002CA                     l5173:
  7465                           
  7466                           ; BSR set to: 0
  7467                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             
      +                          strcpy(&dbuf[n], "nan");
  7468  0002CA  0E60               	movlw	low _dbuf
  7469  0002CC  25A1               	addwf	efgtoa@n& (0+255),w,b
  7470  0002CE  6E01               	movwf	strcpy@dest^0,c
  7471  0002D0  0E02               	movlw	high _dbuf
  7472  0002D2  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7473  0002D4  6E02               	movwf	(strcpy@dest+1)^0,c
  7474  0002D6  0EF7               	movlw	low STR_24
  7475  0002D8  6E03               	movwf	strcpy@src^0,c
  7476  0002DA  0E7F               	movlw	high STR_24
  7477  0002DC  6E04               	movwf	(strcpy@src+1)^0,c
  7478  0002DE  EC97  F028         	call	_strcpy	;wreg free
  7479  0002E2  EF07  F001         	goto	l5157
  7480  0002E6                     l5181:
  7481                           
  7482                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  7483  0002E6  0E00               	movlw	0
  7484  0002E8  0100               	movlb	0	; () banked
  7485  0002EA  6FA3               	movwf	efgtoa@u& (0+255),b
  7486  0002EC  0E00               	movlw	0
  7487  0002EE  6FA4               	movwf	(efgtoa@u+1)& (0+255),b
  7488  0002F0  0E80               	movlw	128
  7489  0002F2  6FA5               	movwf	(efgtoa@u+2)& (0+255),b
  7490  0002F4  0E3F               	movlw	63
  7491  0002F6  6FA6               	movwf	(efgtoa@u+3)& (0+255),b
  7492                           
  7493                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  7494  0002F8  0E00               	movlw	0
  7495  0002FA  6FA0               	movwf	(efgtoa@e+1)& (0+255),b
  7496  0002FC  0E00               	movlw	0
  7497  0002FE  6F9F               	movwf	efgtoa@e& (0+255),b
  7498  000300                     
  7499                           ; BSR set to: 0
  7500                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g 
      +                          == 0.0)) {
  7501  000300  C09B  F001         	movff	efgtoa@g,___fleq@ff1
  7502  000304  C09C  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  7503  000308  C09D  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  7504  00030C  C09E  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  7505  000310  0E00               	movlw	0
  7506  000312  6E05               	movwf	___fleq@ff2^0,c
  7507  000314  0E00               	movlw	0
  7508  000316  6E06               	movwf	(___fleq@ff2+1)^0,c
  7509  000318  0E00               	movlw	0
  7510  00031A  6E07               	movwf	(___fleq@ff2+2)^0,c
  7511  00031C  0E00               	movlw	0
  7512  00031E  6E08               	movwf	(___fleq@ff2+3)^0,c
  7513  000320  EC9C  F025         	call	___fleq	;wreg free
  7514  000324  B0D8               	btfsc	status,0,c
  7515  000326  EF97  F001         	goto	u5881
  7516  00032A  EF99  F001         	goto	u5880
  7517  00032E                     u5881:
  7518  00032E  EF1C  F002         	goto	l5199
  7519  000332                     u5880:
  7520  000332  EFB8  F001         	goto	l5191
  7521  000336                     l5187:
  7522                           
  7523                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             
      +                          u = u*10.0;
  7524  000336  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  7525  00033A  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  7526  00033E  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  7527  000342  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  7528  000346  0E00               	movlw	0
  7529  000348  6E20               	movwf	___flmul@a^0,c
  7530  00034A  0E00               	movlw	0
  7531  00034C  6E21               	movwf	(___flmul@a+1)^0,c
  7532  00034E  0E20               	movlw	32
  7533  000350  6E22               	movwf	(___flmul@a+2)^0,c
  7534  000352  0E41               	movlw	65
  7535  000354  6E23               	movwf	(___flmul@a+3)^0,c
  7536  000356  ECB3  F00F         	call	___flmul	;wreg free
  7537  00035A  C01C  F0A3         	movff	?___flmul,efgtoa@u
  7538  00035E  C01D  F0A4         	movff	?___flmul+1,efgtoa@u+1
  7539  000362  C01E  F0A5         	movff	?___flmul+2,efgtoa@u+2
  7540  000366  C01F  F0A6         	movff	?___flmul+3,efgtoa@u+3
  7541  00036A                     
  7542                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             
      +                          ++e;
  7543  00036A  0100               	movlb	0	; () banked
  7544  00036C  4B9F               	infsnz	efgtoa@e& (0+255),f,b
  7545  00036E  2BA0               	incf	(efgtoa@e+1)& (0+255),f,b
  7546  000370                     l5191:
  7547                           
  7548                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         whil
      +                          e (!(g < (u*10.0))) {
  7549  000370  C09B  F035         	movff	efgtoa@g,___flge@ff1
  7550  000374  C09C  F036         	movff	efgtoa@g+1,___flge@ff1+1
  7551  000378  C09D  F037         	movff	efgtoa@g+2,___flge@ff1+2
  7552  00037C  C09E  F038         	movff	efgtoa@g+3,___flge@ff1+3
  7553  000380  0E00               	movlw	0
  7554  000382  6E20               	movwf	___flmul@a^0,c
  7555  000384  0E00               	movlw	0
  7556  000386  6E21               	movwf	(___flmul@a+1)^0,c
  7557  000388  0E20               	movlw	32
  7558  00038A  6E22               	movwf	(___flmul@a+2)^0,c
  7559  00038C  0E41               	movlw	65
  7560  00038E  6E23               	movwf	(___flmul@a+3)^0,c
  7561  000390  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  7562  000394  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  7563  000398  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  7564  00039C  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  7565  0003A0  ECB3  F00F         	call	___flmul	;wreg free
  7566  0003A4  C01C  F039         	movff	?___flmul,___flge@ff2
  7567  0003A8  C01D  F03A         	movff	?___flmul+1,___flge@ff2+1
  7568  0003AC  C01E  F03B         	movff	?___flmul+2,___flge@ff2+2
  7569  0003B0  C01F  F03C         	movff	?___flmul+3,___flge@ff2+3
  7570  0003B4  ECEC  F021         	call	___flge	;wreg free
  7571  0003B8  B0D8               	btfsc	status,0,c
  7572  0003BA  EFE1  F001         	goto	u5891
  7573  0003BE  EFE3  F001         	goto	u5890
  7574  0003C2                     u5891:
  7575  0003C2  EF9B  F001         	goto	l5187
  7576  0003C6                     u5890:
  7577  0003C6  EF03  F002         	goto	l5197
  7578  0003CA                     l5193:
  7579                           
  7580                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             
      +                          u = u/10.0;
  7581  0003CA  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  7582  0003CE  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  7583  0003D2  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  7584  0003D6  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  7585  0003DA  0E00               	movlw	0
  7586  0003DC  6E39               	movwf	___fldiv@a^0,c
  7587  0003DE  0E00               	movlw	0
  7588  0003E0  6E3A               	movwf	(___fldiv@a+1)^0,c
  7589  0003E2  0E20               	movlw	32
  7590  0003E4  6E3B               	movwf	(___fldiv@a+2)^0,c
  7591  0003E6  0E41               	movlw	65
  7592  0003E8  6E3C               	movwf	(___fldiv@a+3)^0,c
  7593  0003EA  ECC8  F011         	call	___fldiv	;wreg free
  7594  0003EE  C035  F0A3         	movff	?___fldiv,efgtoa@u
  7595  0003F2  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  7596  0003F6  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  7597  0003FA  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  7598  0003FE                     
  7599                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             
      +                          --e;
  7600  0003FE  0100               	movlb	0	; () banked
  7601  000400  079F               	decf	efgtoa@e& (0+255),f,b
  7602  000402  A0D8               	btfss	status,0,c
  7603  000404  07A0               	decf	(efgtoa@e+1)& (0+255),f,b
  7604  000406                     l5197:
  7605                           
  7606                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         whil
      +                          e (g < u) {
  7607  000406  C09B  F035         	movff	efgtoa@g,___flge@ff1
  7608  00040A  C09C  F036         	movff	efgtoa@g+1,___flge@ff1+1
  7609  00040E  C09D  F037         	movff	efgtoa@g+2,___flge@ff1+2
  7610  000412  C09E  F038         	movff	efgtoa@g+3,___flge@ff1+3
  7611  000416  C0A3  F039         	movff	efgtoa@u,___flge@ff2
  7612  00041A  C0A4  F03A         	movff	efgtoa@u+1,___flge@ff2+1
  7613  00041E  C0A5  F03B         	movff	efgtoa@u+2,___flge@ff2+2
  7614  000422  C0A6  F03C         	movff	efgtoa@u+3,___flge@ff2+3
  7615  000426  ECEC  F021         	call	___flge	;wreg free
  7616  00042A  A0D8               	btfss	status,0,c
  7617  00042C  EF1A  F002         	goto	u5901
  7618  000430  EF1C  F002         	goto	u5900
  7619  000434                     u5901:
  7620  000434  EFE5  F001         	goto	l5193
  7621  000438                     u5900:
  7622  000438                     l5199:
  7623                           
  7624                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = t
      +                          olower((int)c);
  7625  000438  C05E  F007         	movff	efgtoa@c,tolower@c
  7626  00043C  6A08               	clrf	(tolower@c+1)^0,c
  7627  00043E  EC67  F028         	call	_tolower	;wreg free
  7628  000442  5007               	movf	?_tolower^0,w,c
  7629  000444  0100               	movlb	0	; () banked
  7630  000446  6F90               	movwf	efgtoa@mode& (0+255),b
  7631  000448                     
  7632                           ; BSR set to: 0
  7633                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = 
      +                          mode;
  7634  000448  C090  F08D         	movff	efgtoa@mode,efgtoa@nmode
  7635  00044C                     
  7636                           ; BSR set to: 0
  7637                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode
      +                           == 'g') {
  7638  00044C  0E67               	movlw	103
  7639  00044E  1990               	xorwf	efgtoa@mode& (0+255),w,b
  7640  000450  A4D8               	btfss	status,2,c
  7641  000452  EF2D  F002         	goto	u5911
  7642  000456  EF2F  F002         	goto	u5910
  7643  00045A                     u5911:
  7644  00045A  EF55  F002         	goto	l5213
  7645  00045E                     u5910:
  7646  00045E                     
  7647                           ; BSR set to: 0
  7648                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec =
      +                          = 0) {
  7649  00045E  51F6               	movf	_prec& (0+255),w,b
  7650  000460  11F7               	iorwf	(_prec+1)& (0+255),w,b
  7651  000462  A4D8               	btfss	status,2,c
  7652  000464  EF36  F002         	goto	u5921
  7653  000468  EF38  F002         	goto	u5920
  7654  00046C                     u5921:
  7655  00046C  EF3C  F002         	goto	l5209
  7656  000470                     u5920:
  7657  000470                     
  7658                           ; BSR set to: 0
  7659                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  7660  000470  0E00               	movlw	0
  7661  000472  6FF7               	movwf	(_prec+1)& (0+255),b
  7662  000474  0E01               	movlw	1
  7663  000476  6FF6               	movwf	_prec& (0+255),b
  7664  000478                     l5209:
  7665                           
  7666                           ; BSR set to: 0
  7667                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = 
      +                          (0 < prec) ? prec : 6;
  7668  000478  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  7669  00047A  EF49  F002         	goto	u5930
  7670  00047E  51F7               	movf	(_prec+1)& (0+255),w,b
  7671  000480  E106               	bnz	u5931
  7672  000482  05F6               	decf	_prec& (0+255),w,b
  7673  000484  B0D8               	btfsc	status,0,c
  7674  000486  EF47  F002         	goto	u5931
  7675  00048A  EF49  F002         	goto	u5930
  7676  00048E                     u5931:
  7677  00048E  EF4F  F002         	goto	l1491
  7678  000492                     u5930:
  7679  000492                     l5211:
  7680                           
  7681                           ; BSR set to: 0
  7682  000492  0E00               	movlw	0
  7683  000494  6F8C               	movwf	(efgtoa@p+1)& (0+255),b
  7684  000496  0E06               	movlw	6
  7685  000498  6F8B               	movwf	efgtoa@p& (0+255),b
  7686  00049A  EF5E  F002         	goto	l5219
  7687  00049E                     l1491:
  7688                           
  7689                           ; BSR set to: 0
  7690  00049E  C0F6  F08B         	movff	_prec,efgtoa@p
  7691  0004A2  C0F7  F08C         	movff	_prec+1,efgtoa@p+1
  7692  0004A6  EF5E  F002         	goto	l5219
  7693  0004AA                     l5213:
  7694                           
  7695                           ; BSR set to: 0
  7696                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = 
      +                          (prec < 0) ? 6 : prec;
  7697  0004AA  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  7698  0004AC  EF5A  F002         	goto	u5941
  7699  0004B0  EF5C  F002         	goto	u5940
  7700  0004B4                     u5941:
  7701  0004B4  EF49  F002         	goto	l5211
  7702  0004B8                     u5940:
  7703  0004B8  EF4F  F002         	goto	l1491
  7704  0004BC                     l5219:
  7705                           
  7706                           ; BSR set to: 0
  7707                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode
      +                           == 'g') {
  7708  0004BC  0E67               	movlw	103
  7709  0004BE  1990               	xorwf	efgtoa@mode& (0+255),w,b
  7710  0004C0  A4D8               	btfss	status,2,c
  7711  0004C2  EF65  F002         	goto	u5951
  7712  0004C6  EF67  F002         	goto	u5950
  7713  0004CA                     u5951:
  7714  0004CA  EF96  F002         	goto	l5229
  7715  0004CE                     u5950:
  7716  0004CE                     
  7717                           ; BSR set to: 0
  7718                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  7719  0004CE  AFA0               	btfss	(efgtoa@e+1)& (0+255),7,b
  7720  0004D0  EF75  F002         	goto	u5960
  7721  0004D4  0EFC               	movlw	252
  7722  0004D6  5D9F               	subwf	efgtoa@e& (0+255),w,b
  7723  0004D8  0EFF               	movlw	255
  7724  0004DA  59A0               	subwfb	(efgtoa@e+1)& (0+255),w,b
  7725  0004DC  A0D8               	btfss	status,0,c
  7726  0004DE  EF73  F002         	goto	u5961
  7727  0004E2  EF75  F002         	goto	u5960
  7728  0004E6                     u5961:
  7729  0004E6  EF94  F002         	goto	l5227
  7730  0004EA                     u5960:
  7731  0004EA                     
  7732                           ; BSR set to: 0
  7733  0004EA  0EFF               	movlw	255
  7734  0004EC  6F6A               	movwf	??_efgtoa& (0+255),b
  7735  0004EE  0EFF               	movlw	255
  7736  0004F0  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  7737  0004F2  C08B  F06C         	movff	efgtoa@p,??_efgtoa+2
  7738  0004F6  C08C  F06D         	movff	efgtoa@p+1,??_efgtoa+3
  7739  0004FA  516A               	movf	??_efgtoa& (0+255),w,b
  7740  0004FC  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  7741  0004FE  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  7742  000500  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7743  000502  519F               	movf	efgtoa@e& (0+255),w,b
  7744  000504  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  7745  000506  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  7746  000508  0A80               	xorlw	128
  7747  00050A  6F6E               	movwf	(??_efgtoa+4)& (0+255),b
  7748  00050C  51A0               	movf	(efgtoa@e+1)& (0+255),w,b
  7749  00050E  0A80               	xorlw	128
  7750  000510  596E               	subwfb	(??_efgtoa+4)& (0+255),w,b
  7751  000512  A0D8               	btfss	status,0,c
  7752  000514  EF8E  F002         	goto	u5971
  7753  000518  EF90  F002         	goto	u5970
  7754  00051C                     u5971:
  7755  00051C  EF94  F002         	goto	l5227
  7756  000520                     u5970:
  7757  000520                     
  7758                           ; BSR set to: 0
  7759                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             
      +                          nmode = 'f';
  7760  000520  0E66               	movlw	102
  7761  000522  6F8D               	movwf	efgtoa@nmode& (0+255),b
  7762                           
  7763                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } el
      +                          se {
  7764  000524  EF96  F002         	goto	l5229
  7765  000528                     l5227:
  7766                           
  7767                           ; BSR set to: 0
  7768                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             
      +                          nmode = 'e';
  7769  000528  0E65               	movlw	101
  7770  00052A  6F8D               	movwf	efgtoa@nmode& (0+255),b
  7771  00052C                     l5229:
  7772                           
  7773                           ; BSR set to: 0
  7774                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  7775  00052C  C08B  F083         	movff	efgtoa@p,efgtoa@m
  7776  000530  C08C  F084         	movff	efgtoa@p+1,efgtoa@m+1
  7777  000534                     
  7778                           ; BSR set to: 0
  7779                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  7780  000534  0E67               	movlw	103
  7781  000536  1990               	xorwf	efgtoa@mode& (0+255),w,b
  7782  000538  A4D8               	btfss	status,2,c
  7783  00053A  EFA1  F002         	goto	u5981
  7784  00053E  EFA3  F002         	goto	u5980
  7785  000542                     u5981:
  7786  000542  EFB3  F002         	goto	l5237
  7787  000546                     u5980:
  7788  000546                     
  7789                           ; BSR set to: 0
  7790  000546  0E66               	movlw	102
  7791  000548  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  7792  00054A  A4D8               	btfss	status,2,c
  7793  00054C  EFAA  F002         	goto	u5991
  7794  000550  EFAC  F002         	goto	u5990
  7795  000554                     u5991:
  7796  000554  EFB5  F002         	goto	l5239
  7797  000558                     u5990:
  7798  000558                     
  7799                           ; BSR set to: 0
  7800  000558  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  7801  00055A  EFB3  F002         	goto	u6000
  7802  00055E  EFB1  F002         	goto	u6001
  7803  000562                     u6001:
  7804  000562  EFB5  F002         	goto	l5239
  7805  000566                     u6000:
  7806  000566                     l5237:
  7807                           
  7808                           ; BSR set to: 0
  7809                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  7810  000566  4B83               	infsnz	efgtoa@m& (0+255),f,b
  7811  000568  2B84               	incf	(efgtoa@m+1)& (0+255),f,b
  7812  00056A                     l5239:
  7813                           
  7814                           ; BSR set to: 0
  7815                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmod
      +                          e == 'f') {
  7816  00056A  0E66               	movlw	102
  7817  00056C  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  7818  00056E  A4D8               	btfss	status,2,c
  7819  000570  EFBC  F002         	goto	u6011
  7820  000574  EFBE  F002         	goto	u6010
  7821  000578                     u6011:
  7822  000578  EFDE  F002         	goto	l5249
  7823  00057C                     u6010:
  7824  00057C                     
  7825                           ; BSR set to: 0
  7826                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (
      +                          e < 0) {
  7827  00057C  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  7828  00057E  EFC5  F002         	goto	u6020
  7829  000582  EFC3  F002         	goto	u6021
  7830  000586                     u6021:
  7831  000586  EFD1  F002         	goto	l5245
  7832  00058A                     u6020:
  7833  00058A                     
  7834                           ; BSR set to: 0
  7835                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             
      +                          u = 1.0;
  7836  00058A  0E00               	movlw	0
  7837  00058C  6FA3               	movwf	efgtoa@u& (0+255),b
  7838  00058E  0E00               	movlw	0
  7839  000590  6FA4               	movwf	(efgtoa@u+1)& (0+255),b
  7840  000592  0E80               	movlw	128
  7841  000594  6FA5               	movwf	(efgtoa@u+2)& (0+255),b
  7842  000596  0E3F               	movlw	63
  7843  000598  6FA6               	movwf	(efgtoa@u+3)& (0+255),b
  7844                           
  7845                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             
      +                          e = 0;
  7846  00059A  0E00               	movlw	0
  7847  00059C  6FA0               	movwf	(efgtoa@e+1)& (0+255),b
  7848  00059E  0E00               	movlw	0
  7849  0005A0  6F9F               	movwf	efgtoa@e& (0+255),b
  7850  0005A2                     l5245:
  7851                           
  7852                           ; BSR set to: 0
  7853                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (
      +                          !(mode == 'g')) {
  7854  0005A2  0E67               	movlw	103
  7855  0005A4  1990               	xorwf	efgtoa@mode& (0+255),w,b
  7856  0005A6  B4D8               	btfsc	status,2,c
  7857  0005A8  EFD8  F002         	goto	u6031
  7858  0005AC  EFDA  F002         	goto	u6030
  7859  0005B0                     u6031:
  7860  0005B0  EFDE  F002         	goto	l5249
  7861  0005B4                     u6030:
  7862  0005B4                     
  7863                           ; BSR set to: 0
  7864                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             
      +                          m += e;
  7865  0005B4  519F               	movf	efgtoa@e& (0+255),w,b
  7866  0005B6  2783               	addwf	efgtoa@m& (0+255),f,b
  7867  0005B8  51A0               	movf	(efgtoa@e+1)& (0+255),w,b
  7868  0005BA  2384               	addwfc	(efgtoa@m+1)& (0+255),f,b
  7869  0005BC                     l5249:
  7870                           
  7871                           ; BSR set to: 0
  7872                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  7873  0005BC  0E00               	movlw	0
  7874  0005BE  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  7875  0005C0  0E00               	movlw	0
  7876  0005C2  6F99               	movwf	efgtoa@i& (0+255),b
  7877  0005C4                     
  7878                           ; BSR set to: 0
  7879                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  7880  0005C4  C09B  F091         	movff	efgtoa@g,efgtoa@h
  7881  0005C8  C09C  F092         	movff	efgtoa@g+1,efgtoa@h+1
  7882  0005CC  C09D  F093         	movff	efgtoa@g+2,efgtoa@h+2
  7883  0005D0  C09E  F094         	movff	efgtoa@g+3,efgtoa@h+3
  7884  0005D4                     
  7885                           ; BSR set to: 0
  7886                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  7887  0005D4  C0A3  F06F         	movff	efgtoa@u,efgtoa@ou
  7888  0005D8  C0A4  F070         	movff	efgtoa@u+1,efgtoa@ou+1
  7889  0005DC  C0A5  F071         	movff	efgtoa@u+2,efgtoa@ou+2
  7890  0005E0  C0A6  F072         	movff	efgtoa@u+3,efgtoa@ou+3
  7891                           
  7892                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  7893  0005E4  EF6F  F003         	goto	l5263
  7894  0005E8                     l5255:
  7895                           
  7896                           ; BSR set to: 0
  7897                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = 
      +                          floorf(h/u);
  7898  0005E8  C091  F035         	movff	efgtoa@h,___fldiv@b
  7899  0005EC  C092  F036         	movff	efgtoa@h+1,___fldiv@b+1
  7900  0005F0  C093  F037         	movff	efgtoa@h+2,___fldiv@b+2
  7901  0005F4  C094  F038         	movff	efgtoa@h+3,___fldiv@b+3
  7902  0005F8  C0A3  F039         	movff	efgtoa@u,___fldiv@a
  7903  0005FC  C0A4  F03A         	movff	efgtoa@u+1,___fldiv@a+1
  7904  000600  C0A5  F03B         	movff	efgtoa@u+2,___fldiv@a+2
  7905  000604  C0A6  F03C         	movff	efgtoa@u+3,___fldiv@a+3
  7906  000608  ECC8  F011         	call	___fldiv	;wreg free
  7907  00060C  C035  F04E         	movff	?___fldiv,floorf@x
  7908  000610  C036  F04F         	movff	?___fldiv+1,floorf@x+1
  7909  000614  C037  F050         	movff	?___fldiv+2,floorf@x+2
  7910  000618  C038  F051         	movff	?___fldiv+3,floorf@x+3
  7911  00061C  ECE6  F017         	call	_floorf	;wreg free
  7912  000620  C04E  F095         	movff	?_floorf,efgtoa@l
  7913  000624  C04F  F096         	movff	?_floorf+1,efgtoa@l+1
  7914  000628  C050  F097         	movff	?_floorf+2,efgtoa@l+2
  7915  00062C  C051  F098         	movff	?_floorf+3,efgtoa@l+3
  7916                           
  7917                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = 
      +                          (int)l;
  7918  000630  C095  F04E         	movff	efgtoa@l,___fltol@f1
  7919  000634  C096  F04F         	movff	efgtoa@l+1,___fltol@f1+1
  7920  000638  C097  F050         	movff	efgtoa@l+2,___fltol@f1+2
  7921  00063C  C098  F051         	movff	efgtoa@l+3,___fltol@f1+3
  7922  000640  EC69  F021         	call	___fltol	;wreg free
  7923  000644  C04E  F087         	movff	?___fltol,efgtoa@d
  7924  000648  C04F  F088         	movff	?___fltol+1,efgtoa@d+1
  7925  00064C                     
  7926                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -=
      +                           l*u;
  7927  00064C  C091  F045         	movff	efgtoa@h,___flsub@b
  7928  000650  C092  F046         	movff	efgtoa@h+1,___flsub@b+1
  7929  000654  C093  F047         	movff	efgtoa@h+2,___flsub@b+2
  7930  000658  C094  F048         	movff	efgtoa@h+3,___flsub@b+3
  7931  00065C  C0A3  F020         	movff	efgtoa@u,___flmul@a
  7932  000660  C0A4  F021         	movff	efgtoa@u+1,___flmul@a+1
  7933  000664  C0A5  F022         	movff	efgtoa@u+2,___flmul@a+2
  7934  000668  C0A6  F023         	movff	efgtoa@u+3,___flmul@a+3
  7935  00066C  C095  F01C         	movff	efgtoa@l,___flmul@b
  7936  000670  C096  F01D         	movff	efgtoa@l+1,___flmul@b+1
  7937  000674  C097  F01E         	movff	efgtoa@l+2,___flmul@b+2
  7938  000678  C098  F01F         	movff	efgtoa@l+3,___flmul@b+3
  7939  00067C  ECB3  F00F         	call	___flmul	;wreg free
  7940  000680  C01C  F049         	movff	?___flmul,___flsub@a
  7941  000684  C01D  F04A         	movff	?___flmul+1,___flsub@a+1
  7942  000688  C01E  F04B         	movff	?___flmul+2,___flsub@a+2
  7943  00068C  C01F  F04C         	movff	?___flmul+3,___flsub@a+3
  7944  000690  EC93  F029         	call	___flsub	;wreg free
  7945  000694  C045  F091         	movff	?___flsub,efgtoa@h
  7946  000698  C046  F092         	movff	?___flsub+1,efgtoa@h+1
  7947  00069C  C047  F093         	movff	?___flsub+2,efgtoa@h+2
  7948  0006A0  C048  F094         	movff	?___flsub+3,efgtoa@h+3
  7949  0006A4                     
  7950                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = 
      +                          u/10.0;
  7951  0006A4  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  7952  0006A8  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  7953  0006AC  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  7954  0006B0  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  7955  0006B4  0E00               	movlw	0
  7956  0006B6  6E39               	movwf	___fldiv@a^0,c
  7957  0006B8  0E00               	movlw	0
  7958  0006BA  6E3A               	movwf	(___fldiv@a+1)^0,c
  7959  0006BC  0E20               	movlw	32
  7960  0006BE  6E3B               	movwf	(___fldiv@a+2)^0,c
  7961  0006C0  0E41               	movlw	65
  7962  0006C2  6E3C               	movwf	(___fldiv@a+3)^0,c
  7963  0006C4  ECC8  F011         	call	___fldiv	;wreg free
  7964  0006C8  C035  F0A3         	movff	?___fldiv,efgtoa@u
  7965  0006CC  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  7966  0006D0  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  7967  0006D4  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  7968  0006D8                     
  7969                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  7970  0006D8  0100               	movlb	0	; () banked
  7971  0006DA  4B99               	infsnz	efgtoa@i& (0+255),f,b
  7972  0006DC  2B9A               	incf	(efgtoa@i+1)& (0+255),f,b
  7973  0006DE                     l5263:
  7974                           
  7975                           ; BSR set to: 0
  7976                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  7977  0006DE  5183               	movf	efgtoa@m& (0+255),w,b
  7978  0006E0  5D99               	subwf	efgtoa@i& (0+255),w,b
  7979  0006E2  519A               	movf	(efgtoa@i+1)& (0+255),w,b
  7980  0006E4  0A80               	xorlw	128
  7981  0006E6  6F6A               	movwf	??_efgtoa& (0+255),b
  7982  0006E8  5184               	movf	(efgtoa@m+1)& (0+255),w,b
  7983  0006EA  0A80               	xorlw	128
  7984  0006EC  596A               	subwfb	??_efgtoa& (0+255),w,b
  7985  0006EE  A0D8               	btfss	status,0,c
  7986  0006F0  EF7C  F003         	goto	u6041
  7987  0006F4  EF7E  F003         	goto	u6040
  7988  0006F8                     u6041:
  7989  0006F8  EFF4  F002         	goto	l5255
  7990  0006FC                     u6040:
  7991  0006FC                     
  7992                           ; BSR set to: 0
  7993                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.
      +                          0;
  7994  0006FC  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  7995  000700  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  7996  000704  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  7997  000708  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  7998  00070C  0E00               	movlw	0
  7999  00070E  6E20               	movwf	___flmul@a^0,c
  8000  000710  0E00               	movlw	0
  8001  000712  6E21               	movwf	(___flmul@a+1)^0,c
  8002  000714  0EA0               	movlw	160
  8003  000716  6E22               	movwf	(___flmul@a+2)^0,c
  8004  000718  0E40               	movlw	64
  8005  00071A  6E23               	movwf	(___flmul@a+3)^0,c
  8006  00071C  ECB3  F00F         	call	___flmul	;wreg free
  8007  000720  C01C  F095         	movff	?___flmul,efgtoa@l
  8008  000724  C01D  F096         	movff	?___flmul+1,efgtoa@l+1
  8009  000728  C01E  F097         	movff	?___flmul+2,efgtoa@l+2
  8010  00072C  C01F  F098         	movff	?___flmul+3,efgtoa@l+3
  8011  000730                     
  8012                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < 
      +                          l) {
  8013  000730  C091  F035         	movff	efgtoa@h,___flge@ff1
  8014  000734  C092  F036         	movff	efgtoa@h+1,___flge@ff1+1
  8015  000738  C093  F037         	movff	efgtoa@h+2,___flge@ff1+2
  8016  00073C  C094  F038         	movff	efgtoa@h+3,___flge@ff1+3
  8017  000740  C095  F039         	movff	efgtoa@l,___flge@ff2
  8018  000744  C096  F03A         	movff	efgtoa@l+1,___flge@ff2+1
  8019  000748  C097  F03B         	movff	efgtoa@l+2,___flge@ff2+2
  8020  00074C  C098  F03C         	movff	efgtoa@l+3,___flge@ff2+3
  8021  000750  ECEC  F021         	call	___flge	;wreg free
  8022  000754  B0D8               	btfsc	status,0,c
  8023  000756  EFAF  F003         	goto	u6051
  8024  00075A  EFB1  F003         	goto	u6050
  8025  00075E                     u6051:
  8026  00075E  EFBC  F003         	goto	l5271
  8027  000762                     u6050:
  8028  000762                     
  8029                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 
      +                          0.0;
  8030  000762  0E00               	movlw	0
  8031  000764  0100               	movlb	0	; () banked
  8032  000766  6F95               	movwf	efgtoa@l& (0+255),b
  8033  000768  0E00               	movlw	0
  8034  00076A  6F96               	movwf	(efgtoa@l+1)& (0+255),b
  8035  00076C  0E00               	movlw	0
  8036  00076E  6F97               	movwf	(efgtoa@l+2)& (0+255),b
  8037  000770  0E00               	movlw	0
  8038  000772  6F98               	movwf	(efgtoa@l+3)& (0+255),b
  8039                           
  8040                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  8041  000774  EFE5  F003         	goto	l5277
  8042  000778                     l5271:
  8043                           
  8044                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if (
      +                          (h == l) && !(d % 2)) {
  8045  000778  C091  F001         	movff	efgtoa@h,___fleq@ff1
  8046  00077C  C092  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  8047  000780  C093  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  8048  000784  C094  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  8049  000788  C095  F005         	movff	efgtoa@l,___fleq@ff2
  8050  00078C  C096  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  8051  000790  C097  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  8052  000794  C098  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  8053  000798  EC9C  F025         	call	___fleq	;wreg free
  8054  00079C  A0D8               	btfss	status,0,c
  8055  00079E  EFD3  F003         	goto	u6061
  8056  0007A2  EFD5  F003         	goto	u6060
  8057  0007A6                     u6061:
  8058  0007A6  EFE5  F003         	goto	l5277
  8059  0007AA                     u6060:
  8060  0007AA  0100               	movlb	0	; () banked
  8061  0007AC  B187               	btfsc	efgtoa@d& (0+255),0,b
  8062  0007AE  EFDB  F003         	goto	u6071
  8063  0007B2  EFDD  F003         	goto	u6070
  8064  0007B6                     u6071:
  8065  0007B6  EFE5  F003         	goto	l5277
  8066  0007BA                     u6070:
  8067  0007BA                     
  8068                           ; BSR set to: 0
  8069                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             
      +                          l = 0.0;
  8070  0007BA  0E00               	movlw	0
  8071  0007BC  6F95               	movwf	efgtoa@l& (0+255),b
  8072  0007BE  0E00               	movlw	0
  8073  0007C0  6F96               	movwf	(efgtoa@l+1)& (0+255),b
  8074  0007C2  0E00               	movlw	0
  8075  0007C4  6F97               	movwf	(efgtoa@l+2)& (0+255),b
  8076  0007C6  0E00               	movlw	0
  8077  0007C8  6F98               	movwf	(efgtoa@l+3)& (0+255),b
  8078  0007CA                     l5277:
  8079                           
  8080                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + 
      +                          l;
  8081  0007CA  C09B  F035         	movff	efgtoa@g,___fladd@b
  8082  0007CE  C09C  F036         	movff	efgtoa@g+1,___fladd@b+1
  8083  0007D2  C09D  F037         	movff	efgtoa@g+2,___fladd@b+2
  8084  0007D6  C09E  F038         	movff	efgtoa@g+3,___fladd@b+3
  8085  0007DA  C095  F039         	movff	efgtoa@l,___fladd@a
  8086  0007DE  C096  F03A         	movff	efgtoa@l+1,___fladd@a+1
  8087  0007E2  C097  F03B         	movff	efgtoa@l+2,___fladd@a+2
  8088  0007E6  C098  F03C         	movff	efgtoa@l+3,___fladd@a+3
  8089  0007EA  EC53  F00D         	call	___fladd	;wreg free
  8090  0007EE  C035  F091         	movff	?___fladd,efgtoa@h
  8091  0007F2  C036  F092         	movff	?___fladd+1,efgtoa@h+1
  8092  0007F6  C037  F093         	movff	?___fladd+2,efgtoa@h+2
  8093  0007FA  C038  F094         	movff	?___fladd+3,efgtoa@h+3
  8094  0007FE                     
  8095                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  8096  0007FE  C06F  F0A3         	movff	efgtoa@ou,efgtoa@u
  8097  000802  C070  F0A4         	movff	efgtoa@ou+1,efgtoa@u+1
  8098  000806  C071  F0A5         	movff	efgtoa@ou+2,efgtoa@u+2
  8099  00080A  C072  F0A6         	movff	efgtoa@ou+3,efgtoa@u+3
  8100  00080E                     
  8101                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  8102  00080E  0E65               	movlw	101
  8103  000810  0100               	movlb	0	; () banked
  8104  000812  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8105  000814  B4D8               	btfsc	status,2,c
  8106  000816  EF0F  F004         	goto	u6081
  8107  00081A  EF11  F004         	goto	u6080
  8108  00081E                     u6081:
  8109  00081E  EF17  F004         	goto	l5285
  8110  000822                     u6080:
  8111  000822                     
  8112                           ; BSR set to: 0
  8113  000822  C09F  F085         	movff	efgtoa@e,efgtoa@ne
  8114  000826  C0A0  F086         	movff	efgtoa@e+1,efgtoa@ne+1
  8115  00082A  EF1B  F004         	goto	l1517
  8116  00082E                     l5285:
  8117                           
  8118                           ; BSR set to: 0
  8119  00082E  0E00               	movlw	0
  8120  000830  6F86               	movwf	(efgtoa@ne+1)& (0+255),b
  8121  000832  0E00               	movlw	0
  8122  000834  6F85               	movwf	efgtoa@ne& (0+255),b
  8123  000836                     l1517:
  8124                           
  8125                           ; BSR set to: 0
  8126                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  8127  000836  0E00               	movlw	0
  8128  000838  6F82               	movwf	(efgtoa@pp+1)& (0+255),b
  8129  00083A  0E00               	movlw	0
  8130  00083C  6F81               	movwf	efgtoa@pp& (0+255),b
  8131                           
  8132                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  8133  00083E  0E00               	movlw	0
  8134  000840  6F80               	movwf	(efgtoa@t+1)& (0+255),b
  8135  000842  0E00               	movlw	0
  8136  000844  6F7F               	movwf	efgtoa@t& (0+255),b
  8137                           
  8138                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  8139  000846  0E00               	movlw	0
  8140  000848  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  8141  00084A  0E00               	movlw	0
  8142  00084C  6F99               	movwf	efgtoa@i& (0+255),b
  8143                           
  8144                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  8145  00084E  EF16  F005         	goto	l5335
  8146  000852                     l5287:
  8147                           
  8148                           ; BSR set to: 0
  8149                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = 
      +                          floorf(h/u);
  8150  000852  C091  F035         	movff	efgtoa@h,___fldiv@b
  8151  000856  C092  F036         	movff	efgtoa@h+1,___fldiv@b+1
  8152  00085A  C093  F037         	movff	efgtoa@h+2,___fldiv@b+2
  8153  00085E  C094  F038         	movff	efgtoa@h+3,___fldiv@b+3
  8154  000862  C0A3  F039         	movff	efgtoa@u,___fldiv@a
  8155  000866  C0A4  F03A         	movff	efgtoa@u+1,___fldiv@a+1
  8156  00086A  C0A5  F03B         	movff	efgtoa@u+2,___fldiv@a+2
  8157  00086E  C0A6  F03C         	movff	efgtoa@u+3,___fldiv@a+3
  8158  000872  ECC8  F011         	call	___fldiv	;wreg free
  8159  000876  C035  F04E         	movff	?___fldiv,floorf@x
  8160  00087A  C036  F04F         	movff	?___fldiv+1,floorf@x+1
  8161  00087E  C037  F050         	movff	?___fldiv+2,floorf@x+2
  8162  000882  C038  F051         	movff	?___fldiv+3,floorf@x+3
  8163  000886  ECE6  F017         	call	_floorf	;wreg free
  8164  00088A  C04E  F095         	movff	?_floorf,efgtoa@l
  8165  00088E  C04F  F096         	movff	?_floorf+1,efgtoa@l+1
  8166  000892  C050  F097         	movff	?_floorf+2,efgtoa@l+2
  8167  000896  C051  F098         	movff	?_floorf+3,efgtoa@l+3
  8168                           
  8169                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = 
      +                          (int)l;
  8170  00089A  C095  F04E         	movff	efgtoa@l,___fltol@f1
  8171  00089E  C096  F04F         	movff	efgtoa@l+1,___fltol@f1+1
  8172  0008A2  C097  F050         	movff	efgtoa@l+2,___fltol@f1+2
  8173  0008A6  C098  F051         	movff	efgtoa@l+3,___fltol@f1+3
  8174  0008AA  EC69  F021         	call	___fltol	;wreg free
  8175  0008AE  C04E  F087         	movff	?___fltol,efgtoa@d
  8176  0008B2  C04F  F088         	movff	?___fltol+1,efgtoa@d+1
  8177  0008B6                     
  8178                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  8179  0008B6  0100               	movlb	0	; () banked
  8180  0008B8  B9F8               	btfsc	_flags& (0+255),4,b
  8181  0008BA  EF61  F004         	goto	u6091
  8182  0008BE  EF63  F004         	goto	u6090
  8183  0008C2                     u6091:
  8184  0008C2  EF80  F004         	goto	l5299
  8185  0008C6                     u6090:
  8186  0008C6                     
  8187                           ; BSR set to: 0
  8188  0008C6  5187               	movf	efgtoa@d& (0+255),w,b
  8189  0008C8  1188               	iorwf	(efgtoa@d+1)& (0+255),w,b
  8190  0008CA  A4D8               	btfss	status,2,c
  8191  0008CC  EF6A  F004         	goto	u6101
  8192  0008D0  EF6C  F004         	goto	u6100
  8193  0008D4                     u6101:
  8194  0008D4  EF80  F004         	goto	l5299
  8195  0008D8                     u6100:
  8196  0008D8                     
  8197                           ; BSR set to: 0
  8198  0008D8  0E67               	movlw	103
  8199  0008DA  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8200  0008DC  A4D8               	btfss	status,2,c
  8201  0008DE  EF73  F004         	goto	u6111
  8202  0008E2  EF75  F004         	goto	u6110
  8203  0008E6                     u6111:
  8204  0008E6  EF80  F004         	goto	l5299
  8205  0008EA                     u6110:
  8206  0008EA                     
  8207                           ; BSR set to: 0
  8208  0008EA  BF86               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  8209  0008EC  EF7C  F004         	goto	u6120
  8210  0008F0  EF7A  F004         	goto	u6121
  8211  0008F4                     u6121:
  8212  0008F4  EF80  F004         	goto	l5299
  8213  0008F8                     u6120:
  8214  0008F8                     
  8215                           ; BSR set to: 0
  8216                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             
      +                          ++t;
  8217  0008F8  4B7F               	infsnz	efgtoa@t& (0+255),f,b
  8218  0008FA  2B80               	incf	(efgtoa@t+1)& (0+255),f,b
  8219                           
  8220                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } el
      +                          se {
  8221  0008FC  EFCA  F004         	goto	l5327
  8222  000900                     l5299:
  8223                           
  8224                           ; BSR set to: 0
  8225                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             
      +                          if (!pp && (ne < 0)) {
  8226  000900  5181               	movf	efgtoa@pp& (0+255),w,b
  8227  000902  1182               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  8228  000904  A4D8               	btfss	status,2,c
  8229  000906  EF87  F004         	goto	u6131
  8230  00090A  EF89  F004         	goto	u6130
  8231  00090E                     u6131:
  8232  00090E  EFB3  F004         	goto	l5319
  8233  000912                     u6130:
  8234  000912                     
  8235                           ; BSR set to: 0
  8236  000912  BF86               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  8237  000914  EF90  F004         	goto	u6140
  8238  000918  EF8E  F004         	goto	u6141
  8239  00091C                     u6141:
  8240  00091C  EFB3  F004         	goto	l5319
  8241  000920                     u6140:
  8242  000920                     
  8243                           ; BSR set to: 0
  8244                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:             
      +                              dbuf[n++] = '.';
  8245  000920  0E60               	movlw	low _dbuf
  8246  000922  25A1               	addwf	efgtoa@n& (0+255),w,b
  8247  000924  6ED9               	movwf	fsr2l,c
  8248  000926  0E02               	movlw	high _dbuf
  8249  000928  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8250  00092A  6EDA               	movwf	fsr2h,c
  8251  00092C  0E2E               	movlw	46
  8252  00092E  6EDF               	movwf	indf2,c
  8253  000930                     
  8254                           ; BSR set to: 0
  8255  000930  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8256  000932  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8257  000934                     
  8258                           ; BSR set to: 0
  8259                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:             
      +                              --w;
  8260  000934  078E               	decf	efgtoa@w& (0+255),f,b
  8261  000936  A0D8               	btfss	status,0,c
  8262  000938  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8263  00093A                     
  8264                           ; BSR set to: 0
  8265                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:             
      +                              pp = 1;
  8266  00093A  0E00               	movlw	0
  8267  00093C  6F82               	movwf	(efgtoa@pp+1)& (0+255),b
  8268  00093E  0E01               	movlw	1
  8269  000940  6F81               	movwf	efgtoa@pp& (0+255),b
  8270  000942  EFB3  F004         	goto	l5319
  8271  000946                     l5311:
  8272                           
  8273                           ; BSR set to: 0
  8274                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:             
      +                              dbuf[n++] = '0';
  8275  000946  0E60               	movlw	low _dbuf
  8276  000948  25A1               	addwf	efgtoa@n& (0+255),w,b
  8277  00094A  6ED9               	movwf	fsr2l,c
  8278  00094C  0E02               	movlw	high _dbuf
  8279  00094E  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8280  000950  6EDA               	movwf	fsr2h,c
  8281  000952  0E30               	movlw	48
  8282  000954  6EDF               	movwf	indf2,c
  8283  000956                     
  8284                           ; BSR set to: 0
  8285  000956  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8286  000958  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8287  00095A                     
  8288                           ; BSR set to: 0
  8289                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:             
      +                              --w;
  8290  00095A  078E               	decf	efgtoa@w& (0+255),f,b
  8291  00095C  A0D8               	btfss	status,0,c
  8292  00095E  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8293  000960                     
  8294                           ; BSR set to: 0
  8295                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:             
      +                              --t;
  8296  000960  077F               	decf	efgtoa@t& (0+255),f,b
  8297  000962  A0D8               	btfss	status,0,c
  8298  000964  0780               	decf	(efgtoa@t+1)& (0+255),f,b
  8299  000966                     l5319:
  8300                           
  8301                           ; BSR set to: 0
  8302                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             
      +                          while (t) {
  8303  000966  517F               	movf	efgtoa@t& (0+255),w,b
  8304  000968  1180               	iorwf	(efgtoa@t+1)& (0+255),w,b
  8305  00096A  A4D8               	btfss	status,2,c
  8306  00096C  EFBA  F004         	goto	u6151
  8307  000970  EFBC  F004         	goto	u6150
  8308  000974                     u6151:
  8309  000974  EFA3  F004         	goto	l5311
  8310  000978                     u6150:
  8311  000978                     
  8312                           ; BSR set to: 0
  8313                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             
      +                          dbuf[n++] = '0' + d;
  8314  000978  0E60               	movlw	low _dbuf
  8315  00097A  25A1               	addwf	efgtoa@n& (0+255),w,b
  8316  00097C  6ED9               	movwf	fsr2l,c
  8317  00097E  0E02               	movlw	high _dbuf
  8318  000980  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8319  000982  6EDA               	movwf	fsr2h,c
  8320  000984  5187               	movf	efgtoa@d& (0+255),w,b
  8321  000986  0F30               	addlw	48
  8322  000988  6EDF               	movwf	indf2,c
  8323  00098A                     
  8324                           ; BSR set to: 0
  8325  00098A  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8326  00098C  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8327  00098E                     
  8328                           ; BSR set to: 0
  8329                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             
      +                          --w;
  8330  00098E  078E               	decf	efgtoa@w& (0+255),f,b
  8331  000990  A0D8               	btfss	status,0,c
  8332  000992  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8333  000994                     l5327:
  8334                           
  8335                           ; BSR set to: 0
  8336                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -=
      +                           l*u;
  8337  000994  C091  F045         	movff	efgtoa@h,___flsub@b
  8338  000998  C092  F046         	movff	efgtoa@h+1,___flsub@b+1
  8339  00099C  C093  F047         	movff	efgtoa@h+2,___flsub@b+2
  8340  0009A0  C094  F048         	movff	efgtoa@h+3,___flsub@b+3
  8341  0009A4  C0A3  F020         	movff	efgtoa@u,___flmul@a
  8342  0009A8  C0A4  F021         	movff	efgtoa@u+1,___flmul@a+1
  8343  0009AC  C0A5  F022         	movff	efgtoa@u+2,___flmul@a+2
  8344  0009B0  C0A6  F023         	movff	efgtoa@u+3,___flmul@a+3
  8345  0009B4  C095  F01C         	movff	efgtoa@l,___flmul@b
  8346  0009B8  C096  F01D         	movff	efgtoa@l+1,___flmul@b+1
  8347  0009BC  C097  F01E         	movff	efgtoa@l+2,___flmul@b+2
  8348  0009C0  C098  F01F         	movff	efgtoa@l+3,___flmul@b+3
  8349  0009C4  ECB3  F00F         	call	___flmul	;wreg free
  8350  0009C8  C01C  F049         	movff	?___flmul,___flsub@a
  8351  0009CC  C01D  F04A         	movff	?___flmul+1,___flsub@a+1
  8352  0009D0  C01E  F04B         	movff	?___flmul+2,___flsub@a+2
  8353  0009D4  C01F  F04C         	movff	?___flmul+3,___flsub@a+3
  8354  0009D8  EC93  F029         	call	___flsub	;wreg free
  8355  0009DC  C045  F091         	movff	?___flsub,efgtoa@h
  8356  0009E0  C046  F092         	movff	?___flsub+1,efgtoa@h+1
  8357  0009E4  C047  F093         	movff	?___flsub+2,efgtoa@h+2
  8358  0009E8  C048  F094         	movff	?___flsub+3,efgtoa@h+3
  8359  0009EC                     
  8360                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = 
      +                          u/10.0;
  8361  0009EC  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  8362  0009F0  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  8363  0009F4  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  8364  0009F8  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  8365  0009FC  0E00               	movlw	0
  8366  0009FE  6E39               	movwf	___fldiv@a^0,c
  8367  000A00  0E00               	movlw	0
  8368  000A02  6E3A               	movwf	(___fldiv@a+1)^0,c
  8369  000A04  0E20               	movlw	32
  8370  000A06  6E3B               	movwf	(___fldiv@a+2)^0,c
  8371  000A08  0E41               	movlw	65
  8372  000A0A  6E3C               	movwf	(___fldiv@a+3)^0,c
  8373  000A0C  ECC8  F011         	call	___fldiv	;wreg free
  8374  000A10  C035  F0A3         	movff	?___fldiv,efgtoa@u
  8375  000A14  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  8376  000A18  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  8377  000A1C  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  8378  000A20                     
  8379                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne
      +                          ;
  8380  000A20  0100               	movlb	0	; () banked
  8381  000A22  0785               	decf	efgtoa@ne& (0+255),f,b
  8382  000A24  A0D8               	btfss	status,0,c
  8383  000A26  0786               	decf	(efgtoa@ne+1)& (0+255),f,b
  8384  000A28                     
  8385                           ; BSR set to: 0
  8386                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  8387  000A28  4B99               	infsnz	efgtoa@i& (0+255),f,b
  8388  000A2A  2B9A               	incf	(efgtoa@i+1)& (0+255),f,b
  8389  000A2C                     l5335:
  8390                           
  8391                           ; BSR set to: 0
  8392                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  8393  000A2C  5183               	movf	efgtoa@m& (0+255),w,b
  8394  000A2E  5D99               	subwf	efgtoa@i& (0+255),w,b
  8395  000A30  519A               	movf	(efgtoa@i+1)& (0+255),w,b
  8396  000A32  0A80               	xorlw	128
  8397  000A34  6F6A               	movwf	??_efgtoa& (0+255),b
  8398  000A36  5184               	movf	(efgtoa@m+1)& (0+255),w,b
  8399  000A38  0A80               	xorlw	128
  8400  000A3A  596A               	subwfb	??_efgtoa& (0+255),w,b
  8401  000A3C  B0D8               	btfsc	status,0,c
  8402  000A3E  EF23  F005         	goto	u6161
  8403  000A42  EF25  F005         	goto	u6160
  8404  000A46                     u6161:
  8405  000A46  EF33  F005         	goto	l5339
  8406  000A4A                     u6160:
  8407  000A4A                     
  8408                           ; BSR set to: 0
  8409  000A4A  BFA2               	btfsc	(efgtoa@n+1)& (0+255),7,b
  8410  000A4C  EF31  F005         	goto	u6171
  8411  000A50  51A2               	movf	(efgtoa@n+1)& (0+255),w,b
  8412  000A52  E109               	bnz	u6170
  8413  000A54  0E4B               	movlw	75
  8414  000A56  5DA1               	subwf	efgtoa@n& (0+255),w,b
  8415  000A58  A0D8               	btfss	status,0,c
  8416  000A5A  EF31  F005         	goto	u6171
  8417  000A5E  EF33  F005         	goto	u6170
  8418  000A62                     u6171:
  8419  000A62  EF29  F004         	goto	l5287
  8420  000A66                     u6170:
  8421  000A66                     l5339:
  8422                           
  8423                           ; BSR set to: 0
  8424                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp 
      +                          && (flags & (1 << 4))) {
  8425  000A66  5181               	movf	efgtoa@pp& (0+255),w,b
  8426  000A68  1182               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  8427  000A6A  A4D8               	btfss	status,2,c
  8428  000A6C  EF3A  F005         	goto	u6181
  8429  000A70  EF3C  F005         	goto	u6180
  8430  000A74                     u6181:
  8431  000A74  EF4D  F005         	goto	l5347
  8432  000A78                     u6180:
  8433  000A78                     
  8434                           ; BSR set to: 0
  8435  000A78  A9F8               	btfss	_flags& (0+255),4,b
  8436  000A7A  EF41  F005         	goto	u6191
  8437  000A7E  EF43  F005         	goto	u6190
  8438  000A82                     u6191:
  8439  000A82  EF4D  F005         	goto	l5347
  8440  000A86                     u6190:
  8441  000A86                     
  8442                           ; BSR set to: 0
  8443                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf
      +                          [n++] = '.';
  8444  000A86  0E60               	movlw	low _dbuf
  8445  000A88  25A1               	addwf	efgtoa@n& (0+255),w,b
  8446  000A8A  6ED9               	movwf	fsr2l,c
  8447  000A8C  0E02               	movlw	high _dbuf
  8448  000A8E  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8449  000A90  6EDA               	movwf	fsr2h,c
  8450  000A92  0E2E               	movlw	46
  8451  000A94  6EDF               	movwf	indf2,c
  8452  000A96                     
  8453                           ; BSR set to: 0
  8454  000A96  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8455  000A98  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8456  000A9A                     l5347:
  8457                           
  8458                           ; BSR set to: 0
  8459                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] 
      +                          = '\0';
  8460  000A9A  0E60               	movlw	low _dbuf
  8461  000A9C  25A1               	addwf	efgtoa@n& (0+255),w,b
  8462  000A9E  6ED9               	movwf	fsr2l,c
  8463  000AA0  0E02               	movlw	high _dbuf
  8464  000AA2  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8465  000AA4  6EDA               	movwf	fsr2h,c
  8466  000AA6  0E00               	movlw	0
  8467  000AA8  6EDF               	movwf	indf2,c
  8468  000AAA                     
  8469                           ; BSR set to: 0
  8470                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmod
      +                          e == 'e') {
  8471  000AAA  0E65               	movlw	101
  8472  000AAC  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8473  000AAE  A4D8               	btfss	status,2,c
  8474  000AB0  EF5C  F005         	goto	u6201
  8475  000AB4  EF5E  F005         	goto	u6200
  8476  000AB8                     u6201:
  8477  000AB8  EF0C  F001         	goto	l5159
  8478  000ABC                     u6200:
  8479  000ABC                     
  8480                           ; BSR set to: 0
  8481                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = 
      +                          sizeof(dbuf) - 1;
  8482  000ABC  0E00               	movlw	0
  8483  000ABE  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  8484  000AC0  0E4F               	movlw	79
  8485  000AC2  6F99               	movwf	efgtoa@i& (0+255),b
  8486  000AC4                     
  8487                           ; BSR set to: 0
  8488                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf
      +                          [i] = '\0';
  8489  000AC4  0E60               	movlw	low _dbuf
  8490  000AC6  2599               	addwf	efgtoa@i& (0+255),w,b
  8491  000AC8  6ED9               	movwf	fsr2l,c
  8492  000ACA  0E02               	movlw	high _dbuf
  8493  000ACC  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8494  000ACE  6EDA               	movwf	fsr2h,c
  8495  000AD0  0E00               	movlw	0
  8496  000AD2  6EDF               	movwf	indf2,c
  8497  000AD4                     
  8498                           ; BSR set to: 0
  8499                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign
      +                           = 0;
  8500  000AD4  0E00               	movlw	0
  8501  000AD6  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  8502  000AD8  0E00               	movlw	0
  8503  000ADA  6F89               	movwf	efgtoa@sign& (0+255),b
  8504  000ADC                     
  8505                           ; BSR set to: 0
  8506                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (
      +                          e < 0) {
  8507  000ADC  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8508  000ADE  EF75  F005         	goto	u6210
  8509  000AE2  EF73  F005         	goto	u6211
  8510  000AE6                     u6211:
  8511  000AE6  EF7D  F005         	goto	l5363
  8512  000AEA                     u6210:
  8513  000AEA                     
  8514                           ; BSR set to: 0
  8515                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             
      +                          sign = 1;
  8516  000AEA  0E00               	movlw	0
  8517  000AEC  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  8518  000AEE  0E01               	movlw	1
  8519  000AF0  6F89               	movwf	efgtoa@sign& (0+255),b
  8520  000AF2                     
  8521                           ; BSR set to: 0
  8522                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             
      +                          e = -e;
  8523  000AF2  6D9F               	negf	efgtoa@e& (0+255),b
  8524  000AF4  1FA0               	comf	(efgtoa@e+1)& (0+255),f,b
  8525  000AF6  B0D8               	btfsc	status,0,c
  8526  000AF8  2BA0               	incf	(efgtoa@e+1)& (0+255),f,b
  8527  000AFA                     l5363:
  8528                           
  8529                           ; BSR set to: 0
  8530                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 
      +                          2;
  8531  000AFA  0E00               	movlw	0
  8532  000AFC  6F8C               	movwf	(efgtoa@p+1)& (0+255),b
  8533  000AFE  0E02               	movlw	2
  8534  000B00  6F8B               	movwf	efgtoa@p& (0+255),b
  8535                           
  8536                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  8537  000B02  EFAE  F005         	goto	l5375
  8538  000B06                     l5365:
  8539                           
  8540                           ; BSR set to: 0
  8541                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             
      +                          --i;
  8542  000B06  0799               	decf	efgtoa@i& (0+255),f,b
  8543  000B08  A0D8               	btfss	status,0,c
  8544  000B0A  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  8545  000B0C                     
  8546                           ; BSR set to: 0
  8547                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             
      +                          dbuf[i] = '0' + (e % 10);
  8548  000B0C  0E60               	movlw	low _dbuf
  8549  000B0E  2599               	addwf	efgtoa@i& (0+255),w,b
  8550  000B10  6ED9               	movwf	fsr2l,c
  8551  000B12  0E02               	movlw	high _dbuf
  8552  000B14  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8553  000B16  6EDA               	movwf	fsr2h,c
  8554  000B18  C09F  F001         	movff	efgtoa@e,___awmod@dividend
  8555  000B1C  C0A0  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  8556  000B20  0E00               	movlw	0
  8557  000B22  6E04               	movwf	(___awmod@divisor+1)^0,c
  8558  000B24  0E0A               	movlw	10
  8559  000B26  6E03               	movwf	___awmod@divisor^0,c
  8560  000B28  EC44  F025         	call	___awmod	;wreg free
  8561  000B2C  5001               	movf	?___awmod^0,w,c
  8562  000B2E  0F30               	addlw	48
  8563  000B30  6EDF               	movwf	indf2,c
  8564  000B32                     
  8565                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             
      +                          e = e / 10;
  8566  000B32  C09F  F001         	movff	efgtoa@e,___awdiv@dividend
  8567  000B36  C0A0  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  8568  000B3A  0E00               	movlw	0
  8569  000B3C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  8570  000B3E  0E0A               	movlw	10
  8571  000B40  6E03               	movwf	___awdiv@divisor^0,c
  8572  000B42  EC89  F024         	call	___awdiv	;wreg free
  8573  000B46  C001  F09F         	movff	?___awdiv,efgtoa@e
  8574  000B4A  C002  F0A0         	movff	?___awdiv+1,efgtoa@e+1
  8575  000B4E                     
  8576                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             
      +                          --p;
  8577  000B4E  0100               	movlb	0	; () banked
  8578  000B50  078B               	decf	efgtoa@p& (0+255),f,b
  8579  000B52  A0D8               	btfss	status,0,c
  8580  000B54  078C               	decf	(efgtoa@p+1)& (0+255),f,b
  8581  000B56                     
  8582                           ; BSR set to: 0
  8583                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             
      +                          --w;
  8584  000B56  078E               	decf	efgtoa@w& (0+255),f,b
  8585  000B58  A0D8               	btfss	status,0,c
  8586  000B5A  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8587  000B5C                     l5375:
  8588                           
  8589                           ; BSR set to: 0
  8590                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  8591  000B5C  519F               	movf	efgtoa@e& (0+255),w,b
  8592  000B5E  11A0               	iorwf	(efgtoa@e+1)& (0+255),w,b
  8593  000B60  A4D8               	btfss	status,2,c
  8594  000B62  EFB5  F005         	goto	u6221
  8595  000B66  EFB7  F005         	goto	u6220
  8596  000B6A                     u6221:
  8597  000B6A  EF83  F005         	goto	l5365
  8598  000B6E                     u6220:
  8599  000B6E                     
  8600                           ; BSR set to: 0
  8601  000B6E  BF8C               	btfsc	(efgtoa@p+1)& (0+255),7,b
  8602  000B70  EFC4  F005         	goto	u6230
  8603  000B74  518C               	movf	(efgtoa@p+1)& (0+255),w,b
  8604  000B76  E106               	bnz	u6231
  8605  000B78  058B               	decf	efgtoa@p& (0+255),w,b
  8606  000B7A  B0D8               	btfsc	status,0,c
  8607  000B7C  EFC2  F005         	goto	u6231
  8608  000B80  EFC4  F005         	goto	u6230
  8609  000B84                     u6231:
  8610  000B84  EF83  F005         	goto	l5365
  8611  000B88                     u6230:
  8612  000B88                     
  8613                           ; BSR set to: 0
  8614                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  8615  000B88  0799               	decf	efgtoa@i& (0+255),f,b
  8616  000B8A  A0D8               	btfss	status,0,c
  8617  000B8C  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  8618  000B8E                     
  8619                           ; BSR set to: 0
  8620                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [i] = sign ? '-' : '+';
  8621  000B8E  5189               	movf	efgtoa@sign& (0+255),w,b
  8622  000B90  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8623  000B92  A4D8               	btfss	status,2,c
  8624  000B94  EFCE  F005         	goto	u6241
  8625  000B98  EFD0  F005         	goto	u6240
  8626  000B9C                     u6241:
  8627  000B9C  EFD6  F005         	goto	l5385
  8628  000BA0                     u6240:
  8629  000BA0                     
  8630                           ; BSR set to: 0
  8631  000BA0  0E00               	movlw	0
  8632  000BA2  6F7A               	movwf	(_efgtoa$2992+1)& (0+255),b
  8633  000BA4  0E2B               	movlw	43
  8634  000BA6  6F79               	movwf	_efgtoa$2992& (0+255),b
  8635  000BA8  EFDA  F005         	goto	l5387
  8636  000BAC                     l5385:
  8637                           
  8638                           ; BSR set to: 0
  8639  000BAC  0E00               	movlw	0
  8640  000BAE  6F7A               	movwf	(_efgtoa$2992+1)& (0+255),b
  8641  000BB0  0E2D               	movlw	45
  8642  000BB2  6F79               	movwf	_efgtoa$2992& (0+255),b
  8643  000BB4                     l5387:
  8644                           
  8645                           ; BSR set to: 0
  8646  000BB4  0E60               	movlw	low _dbuf
  8647  000BB6  2599               	addwf	efgtoa@i& (0+255),w,b
  8648  000BB8  6ED9               	movwf	fsr2l,c
  8649  000BBA  0E02               	movlw	high _dbuf
  8650  000BBC  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8651  000BBE  6EDA               	movwf	fsr2h,c
  8652  000BC0  C079  FFDF         	movff	_efgtoa$2992,indf2
  8653  000BC4                     
  8654                           ; BSR set to: 0
  8655                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  8656  000BC4  078E               	decf	efgtoa@w& (0+255),f,b
  8657  000BC6  A0D8               	btfss	status,0,c
  8658  000BC8  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8659  000BCA                     
  8660                           ; BSR set to: 0
  8661                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  8662  000BCA  0799               	decf	efgtoa@i& (0+255),f,b
  8663  000BCC  A0D8               	btfss	status,0,c
  8664  000BCE  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  8665  000BD0                     
  8666                           ; BSR set to: 0
  8667  000BD0  0EBF               	movlw	191
  8668  000BD2  6F6A               	movwf	??_efgtoa& (0+255),b
  8669  000BD4  0EFF               	movlw	255
  8670  000BD6  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  8671  000BD8  505E               	movf	efgtoa@c^0,w,c
  8672  000BDA  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  8673  000BDC  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  8674  000BDE  516A               	movf	??_efgtoa& (0+255),w,b
  8675  000BE0  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  8676  000BE2  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  8677  000BE4  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8678  000BE6  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  8679  000BE8  E10A               	bnz	u6250
  8680  000BEA  0E1A               	movlw	26
  8681  000BEC  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  8682  000BEE  A0D8               	btfss	status,0,c
  8683  000BF0  EFFC  F005         	goto	u6251
  8684  000BF4  EFFF  F005         	goto	u6250
  8685  000BF8                     u6251:
  8686  000BF8  0E01               	movlw	1
  8687  000BFA  EF00  F006         	goto	u6260
  8688  000BFE                     u6250:
  8689  000BFE  0E00               	movlw	0
  8690  000C00                     u6260:
  8691  000C00  6F7D               	movwf	_efgtoa$2994& (0+255),b
  8692  000C02  6B7E               	clrf	(_efgtoa$2994+1)& (0+255),b
  8693  000C04                     
  8694                           ; BSR set to: 0
  8695  000C04  517D               	movf	_efgtoa$2994& (0+255),w,b
  8696  000C06  117E               	iorwf	(_efgtoa$2994+1)& (0+255),w,b
  8697  000C08  A4D8               	btfss	status,2,c
  8698  000C0A  EF09  F006         	goto	u6271
  8699  000C0E  EF0B  F006         	goto	u6270
  8700  000C12                     u6271:
  8701  000C12  EF11  F006         	goto	l5401
  8702  000C16                     u6270:
  8703  000C16                     
  8704                           ; BSR set to: 0
  8705  000C16  0E00               	movlw	0
  8706  000C18  6F7C               	movwf	(_efgtoa$2993+1)& (0+255),b
  8707  000C1A  0E65               	movlw	101
  8708  000C1C  6F7B               	movwf	_efgtoa$2993& (0+255),b
  8709  000C1E  EF15  F006         	goto	l5403
  8710  000C22                     l5401:
  8711                           
  8712                           ; BSR set to: 0
  8713  000C22  0E00               	movlw	0
  8714  000C24  6F7C               	movwf	(_efgtoa$2993+1)& (0+255),b
  8715  000C26  0E45               	movlw	69
  8716  000C28  6F7B               	movwf	_efgtoa$2993& (0+255),b
  8717  000C2A                     l5403:
  8718                           
  8719                           ; BSR set to: 0
  8720  000C2A  0E60               	movlw	low _dbuf
  8721  000C2C  2599               	addwf	efgtoa@i& (0+255),w,b
  8722  000C2E  6ED9               	movwf	fsr2l,c
  8723  000C30  0E02               	movlw	high _dbuf
  8724  000C32  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8725  000C34  6EDA               	movwf	fsr2h,c
  8726  000C36  C07B  FFDF         	movff	_efgtoa$2993,indf2
  8727  000C3A                     
  8728                           ; BSR set to: 0
  8729                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  8730  000C3A  078E               	decf	efgtoa@w& (0+255),f,b
  8731  000C3C  A0D8               	btfss	status,0,c
  8732  000C3E  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8733  000C40                     
  8734                           ; BSR set to: 0
  8735                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  8736  000C40  0E60               	movlw	low _dbuf
  8737  000C42  25A1               	addwf	efgtoa@n& (0+255),w,b
  8738  000C44  6E01               	movwf	strcpy@dest^0,c
  8739  000C46  0E02               	movlw	high _dbuf
  8740  000C48  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8741  000C4A  6E02               	movwf	(strcpy@dest+1)^0,c
  8742  000C4C  0E60               	movlw	low _dbuf
  8743  000C4E  2599               	addwf	efgtoa@i& (0+255),w,b
  8744  000C50  6E03               	movwf	strcpy@src^0,c
  8745  000C52  0E02               	movlw	high _dbuf
  8746  000C54  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8747  000C56  6E04               	movwf	(strcpy@src+1)^0,c
  8748  000C58  EC97  F028         	call	_strcpy	;wreg free
  8749  000C5C  EF0C  F001         	goto	l5159
  8750  000C60                     l1473:
  8751  000C60  0012               	return		;funcret
  8752  000C62                     __end_of_efgtoa:
  8753                           	callstack 0
  8754                           
  8755 ;; *************** function _tolower *****************
  8756 ;; Defined at:
  8757 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\tolower.c"
  8758 ;; Parameters:    Size  Location     Type
  8759 ;;  c               2    6[COMRAM] int 
  8760 ;; Auto vars:     Size  Location     Type
  8761 ;;		None
  8762 ;; Return value:  Size  Location     Type
  8763 ;;                  2    6[COMRAM] int 
  8764 ;; Registers used:
  8765 ;;		wreg, status,2, status,0
  8766 ;; Tracked objects:
  8767 ;;		On entry : 0/0
  8768 ;;		On exit  : 0/0
  8769 ;;		Unchanged: 0/0
  8770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8771 ;;      Params:         2       0       0       0       0       0       0
  8772 ;;      Locals:         2       0       0       0       0       0       0
  8773 ;;      Temps:          4       0       0       0       0       0       0
  8774 ;;      Totals:         8       0       0       0       0       0       0
  8775 ;;Total ram usage:        8 bytes
  8776 ;; Hardware stack levels used:    1
  8777 ;; Hardware stack levels required when called:    2
  8778 ;; This function calls:
  8779 ;;		_isupper
  8780 ;; This function is called by:
  8781 ;;		_efgtoa
  8782 ;;		_vfpfcnvrt
  8783 ;; This function uses a non-reentrant model
  8784 ;;
  8785                           
  8786                           	psect	text26
  8787  0050CE                     __ptext26:
  8788                           	callstack 0
  8789  0050CE                     _tolower:
  8790                           	callstack 22
  8791  0050CE  0EBF               	movlw	191
  8792  0050D0  6E09               	movwf	??_tolower^0,c
  8793  0050D2  0EFF               	movlw	255
  8794  0050D4  6E0A               	movwf	(??_tolower+1)^0,c
  8795  0050D6  C007  F00B         	movff	tolower@c,??_tolower+2
  8796  0050DA  C008  F00C         	movff	tolower@c+1,??_tolower+3
  8797  0050DE  5009               	movf	??_tolower^0,w,c
  8798  0050E0  260B               	addwf	(??_tolower+2)^0,f,c
  8799  0050E2  500A               	movf	(??_tolower+1)^0,w,c
  8800  0050E4  220C               	addwfc	(??_tolower+3)^0,f,c
  8801  0050E6  500C               	movf	(??_tolower+3)^0,w,c
  8802  0050E8  E10A               	bnz	u5440
  8803  0050EA  0E1A               	movlw	26
  8804  0050EC  5C0B               	subwf	(??_tolower+2)^0,w,c
  8805  0050EE  A0D8               	btfss	status,0,c
  8806  0050F0  EF7C  F028         	goto	u5441
  8807  0050F4  EF7F  F028         	goto	u5440
  8808  0050F8                     u5441:
  8809  0050F8  0E01               	movlw	1
  8810  0050FA  EF80  F028         	goto	u5450
  8811  0050FE                     u5440:
  8812  0050FE  0E00               	movlw	0
  8813  005100                     u5450:
  8814  005100  6E0D               	movwf	_tolower$3145^0,c
  8815  005102  6A0E               	clrf	(_tolower$3145+1)^0,c
  8816  005104  500D               	movf	_tolower$3145^0,w,c
  8817  005106  100E               	iorwf	(_tolower$3145+1)^0,w,c
  8818  005108  B4D8               	btfsc	status,2,c
  8819  00510A  EF89  F028         	goto	u5461
  8820  00510E  EF8B  F028         	goto	u5460
  8821  005112                     u5461:
  8822  005112  EF92  F028         	goto	l1721
  8823  005116                     u5460:
  8824  005116  0E20               	movlw	32
  8825  005118  1007               	iorwf	tolower@c^0,w,c
  8826  00511A  6E07               	movwf	?_tolower^0,c
  8827  00511C  5008               	movf	(tolower@c+1)^0,w,c
  8828  00511E  6E08               	movwf	(?_tolower+1)^0,c
  8829  005120  EF96  F028         	goto	l1726
  8830  005124                     l1721:
  8831  005124  C007  F007         	movff	tolower@c,?_tolower
  8832  005128  C008  F008         	movff	tolower@c+1,?_tolower+1
  8833  00512C                     l1726:
  8834  00512C  0012               	return		;funcret
  8835  00512E                     __end_of_tolower:
  8836                           	callstack 0
  8837                           
  8838 ;; *************** function _isupper *****************
  8839 ;; Defined at:
  8840 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  8841 ;; Parameters:    Size  Location     Type
  8842 ;;  c               2    0[COMRAM] int 
  8843 ;; Auto vars:     Size  Location     Type
  8844 ;;		None
  8845 ;; Return value:  Size  Location     Type
  8846 ;;                  2    0[COMRAM] int 
  8847 ;; Registers used:
  8848 ;;		wreg, status,2, status,0
  8849 ;; Tracked objects:
  8850 ;;		On entry : 0/0
  8851 ;;		On exit  : 0/0
  8852 ;;		Unchanged: 0/0
  8853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8854 ;;      Params:         2       0       0       0       0       0       0
  8855 ;;      Locals:         0       0       0       0       0       0       0
  8856 ;;      Temps:          4       0       0       0       0       0       0
  8857 ;;      Totals:         6       0       0       0       0       0       0
  8858 ;;Total ram usage:        6 bytes
  8859 ;; Hardware stack levels used:    1
  8860 ;; Hardware stack levels required when called:    1
  8861 ;; This function calls:
  8862 ;;		Nothing
  8863 ;; This function is called by:
  8864 ;;		_efgtoa
  8865 ;;		_vfpfcnvrt
  8866 ;;		_tolower
  8867 ;; This function uses a non-reentrant model
  8868 ;;
  8869                           
  8870                           	psect	text27
  8871  00552A                     __ptext27:
  8872                           	callstack 0
  8873  00552A                     _isupper:
  8874                           	callstack 22
  8875  00552A  0EBF               	movlw	191
  8876  00552C  6E03               	movwf	??_isupper^0,c
  8877  00552E  0EFF               	movlw	255
  8878  005530  6E04               	movwf	(??_isupper+1)^0,c
  8879  005532  C001  F005         	movff	isupper@c,??_isupper+2
  8880  005536  C002  F006         	movff	isupper@c+1,??_isupper+3
  8881  00553A  5003               	movf	??_isupper^0,w,c
  8882  00553C  2605               	addwf	(??_isupper+2)^0,f,c
  8883  00553E  5004               	movf	(??_isupper+1)^0,w,c
  8884  005540  2206               	addwfc	(??_isupper+3)^0,f,c
  8885  005542  5006               	movf	(??_isupper+3)^0,w,c
  8886  005544  E10A               	bnz	u4450
  8887  005546  0E1A               	movlw	26
  8888  005548  5C05               	subwf	(??_isupper+2)^0,w,c
  8889  00554A  A0D8               	btfss	status,0,c
  8890  00554C  EFAA  F02A         	goto	u4451
  8891  005550  EFAD  F02A         	goto	u4450
  8892  005554                     u4451:
  8893  005554  0E01               	movlw	1
  8894  005556  EFAE  F02A         	goto	u4460
  8895  00555A                     u4450:
  8896  00555A  0E00               	movlw	0
  8897  00555C                     u4460:
  8898  00555C  6E01               	movwf	?_isupper^0,c
  8899  00555E  6A02               	clrf	(?_isupper+1)^0,c
  8900  005560  0012               	return		;funcret
  8901  005562                     __end_of_isupper:
  8902                           	callstack 0
  8903                           
  8904 ;; *************** function _strcpy *****************
  8905 ;; Defined at:
  8906 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  8907 ;; Parameters:    Size  Location     Type
  8908 ;;  dest            2    0[COMRAM] PTR unsigned char 
  8909 ;;		 -> dbuf(80), 
  8910 ;;  src             2    2[COMRAM] PTR const unsigned char 
  8911 ;;		 -> STR_24(4), STR_23(4), STR_20(4), STR_19(4), 
  8912 ;;		 -> dbuf(80), 
  8913 ;; Auto vars:     Size  Location     Type
  8914 ;;  d               2    8[COMRAM] PTR unsigned char 
  8915 ;;		 -> dbuf(80), 
  8916 ;;  s               2    6[COMRAM] PTR const unsigned char 
  8917 ;;		 -> STR_24(4), STR_23(4), STR_20(4), STR_19(4), 
  8918 ;;		 -> dbuf(80), 
  8919 ;; Return value:  Size  Location     Type
  8920 ;;                  2    0[COMRAM] PTR unsigned char 
  8921 ;; Registers used:
  8922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8923 ;; Tracked objects:
  8924 ;;		On entry : 0/0
  8925 ;;		On exit  : 0/0
  8926 ;;		Unchanged: 0/0
  8927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8928 ;;      Params:         4       0       0       0       0       0       0
  8929 ;;      Locals:         4       0       0       0       0       0       0
  8930 ;;      Temps:          2       0       0       0       0       0       0
  8931 ;;      Totals:        10       0       0       0       0       0       0
  8932 ;;Total ram usage:       10 bytes
  8933 ;; Hardware stack levels used:    1
  8934 ;; Hardware stack levels required when called:    1
  8935 ;; This function calls:
  8936 ;;		Nothing
  8937 ;; This function is called by:
  8938 ;;		_efgtoa
  8939 ;; This function uses a non-reentrant model
  8940 ;;
  8941                           
  8942                           	psect	text28
  8943  00512E                     __ptext28:
  8944                           	callstack 0
  8945  00512E                     _strcpy:
  8946                           	callstack 22
  8947  00512E  C003  F007         	movff	strcpy@src,strcpy@s
  8948  005132  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  8949  005136  C001  F009         	movff	strcpy@dest,strcpy@d
  8950  00513A  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  8951  00513E                     l4997:
  8952  00513E  5007               	movf	strcpy@s^0,w,c
  8953  005140  6E05               	movwf	??_strcpy^0,c
  8954  005142  5008               	movf	(strcpy@s+1)^0,w,c
  8955  005144  6E06               	movwf	(??_strcpy+1)^0,c
  8956  005146  4A07               	infsnz	strcpy@s^0,f,c
  8957  005148  2A08               	incf	(strcpy@s+1)^0,f,c
  8958  00514A  C005  FFF6         	movff	??_strcpy,tblptrl
  8959  00514E  C006  FFF7         	movff	??_strcpy+1,tblptrh
  8960  005152  6AF8               	clrf	tblptru,c
  8961  005154  C009  FFD9         	movff	strcpy@d,fsr2l
  8962  005158  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  8963  00515C  4A09               	infsnz	strcpy@d^0,f,c
  8964  00515E  2A0A               	incf	(strcpy@d+1)^0,f,c
  8965  005160  0E05               	movlw	(high __ramtop+-1)
  8966  005162  64F7               	cpfsgt	tblptrh,c
  8967  005164  D003               	bra	u5427
  8968  005166  0008               	tblrd		*
  8969  005168  50F5               	movf	tablat,w,c
  8970  00516A  D005               	bra	u5420
  8971  00516C                     u5427:
  8972  00516C  CFF6 FFE1          	movff	tblptrl,fsr1l
  8973  005170  CFF7 FFE2          	movff	tblptrh,fsr1h
  8974  005174  50E7               	movf	indf1,w,c
  8975  005176                     u5420:
  8976  005176  6EDF               	movwf	indf2,c
  8977  005178  50DF               	movf	indf2,w,c
  8978  00517A  A4D8               	btfss	status,2,c
  8979  00517C  EFC2  F028         	goto	u5431
  8980  005180  EFC4  F028         	goto	u5430
  8981  005184                     u5431:
  8982  005184  EF9F  F028         	goto	l4997
  8983  005188                     u5430:
  8984  005188  0012               	return		;funcret
  8985  00518A                     __end_of_strcpy:
  8986                           	callstack 0
  8987                           
  8988 ;; *************** function _floorf *****************
  8989 ;; Defined at:
  8990 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\floorf.c"
  8991 ;; Parameters:    Size  Location     Type
  8992 ;;  x               4   77[COMRAM] float 
  8993 ;; Auto vars:     Size  Location     Type
  8994 ;;  u               4    6[BANK0 ] struct .
  8995 ;;  m               4    0[BANK0 ] unsigned long 
  8996 ;;  e               2    4[BANK0 ] int 
  8997 ;; Return value:  Size  Location     Type
  8998 ;;                  4   77[COMRAM] float 
  8999 ;; Registers used:
  9000 ;;		wreg, status,2, status,0
  9001 ;; Tracked objects:
  9002 ;;		On entry : 0/0
  9003 ;;		On exit  : 0/0
  9004 ;;		Unchanged: 0/0
  9005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9006 ;;      Params:         4       0       0       0       0       0       0
  9007 ;;      Locals:         0      10       0       0       0       0       0
  9008 ;;      Temps:          6       0       0       0       0       0       0
  9009 ;;      Totals:        10      10       0       0       0       0       0
  9010 ;;Total ram usage:       20 bytes
  9011 ;; Hardware stack levels used:    1
  9012 ;; Hardware stack levels required when called:    1
  9013 ;; This function calls:
  9014 ;;		Nothing
  9015 ;; This function is called by:
  9016 ;;		_efgtoa
  9017 ;; This function uses a non-reentrant model
  9018 ;;
  9019                           
  9020                           	psect	text29
  9021  002FCC                     __ptext29:
  9022                           	callstack 0
  9023  002FCC                     _floorf:
  9024                           	callstack 22
  9025  002FCC  C1A3  F066         	movff	floorf@F524,floorf@u
  9026  002FD0  C1A4  F067         	movff	floorf@F524+1,floorf@u+1
  9027  002FD4  C1A5  F068         	movff	floorf@F524+2,floorf@u+2
  9028  002FD8  C1A6  F069         	movff	floorf@F524+3,floorf@u+3
  9029  002FDC  C04E  F066         	movff	floorf@x,floorf@u
  9030  002FE0  C04F  F067         	movff	floorf@x+1,floorf@u+1
  9031  002FE4  C050  F068         	movff	floorf@x+2,floorf@u+2
  9032  002FE8  C051  F069         	movff	floorf@x+3,floorf@u+3
  9033  002FEC  0E81               	movlw	129
  9034  002FEE  6E52               	movwf	??_floorf^0,c
  9035  002FF0  0EFF               	movlw	255
  9036  002FF2  6E53               	movwf	(??_floorf+1)^0,c
  9037  002FF4  C066  F054         	movff	floorf@u,??_floorf+2
  9038  002FF8  C067  F055         	movff	floorf@u+1,??_floorf+3
  9039  002FFC  C068  F056         	movff	floorf@u+2,??_floorf+4
  9040  003000  C069  F057         	movff	floorf@u+3,??_floorf+5
  9041  003004  0E18               	movlw	24
  9042  003006  EF0A  F018         	goto	u5470
  9043  00300A                     u5475:
  9044  00300A  90D8               	bcf	status,0,c
  9045  00300C  3257               	rrcf	(??_floorf+5)^0,f,c
  9046  00300E  3256               	rrcf	(??_floorf+4)^0,f,c
  9047  003010  3255               	rrcf	(??_floorf+3)^0,f,c
  9048  003012  3254               	rrcf	(??_floorf+2)^0,f,c
  9049  003014                     u5470:
  9050  003014  2EE8               	decfsz	wreg,f,c
  9051  003016  EF05  F018         	goto	u5475
  9052  00301A  5054               	movf	(??_floorf+2)^0,w,c
  9053  00301C  2452               	addwf	??_floorf^0,w,c
  9054  00301E  0100               	movlb	0	; () banked
  9055  003020  6F64               	movwf	floorf@e& (0+255),b
  9056  003022  0E00               	movlw	0
  9057  003024  2053               	addwfc	(??_floorf+1)^0,w,c
  9058  003026  6F65               	movwf	(floorf@e+1)& (0+255),b
  9059  003028  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  9060  00302A  EF20  F018         	goto	u5481
  9061  00302E  5165               	movf	(floorf@e+1)& (0+255),w,b
  9062  003030  E109               	bnz	u5480
  9063  003032  0E17               	movlw	23
  9064  003034  5D64               	subwf	floorf@e& (0+255),w,b
  9065  003036  A0D8               	btfss	status,0,c
  9066  003038  EF20  F018         	goto	u5481
  9067  00303C  EF22  F018         	goto	u5480
  9068  003040                     u5481:
  9069  003040  EF2C  F018         	goto	l5015
  9070  003044                     u5480:
  9071  003044                     l5013:
  9072                           
  9073                           ; BSR set to: 0
  9074  003044  C04E  F04E         	movff	floorf@x,?_floorf
  9075  003048  C04F  F04F         	movff	floorf@x+1,?_floorf+1
  9076  00304C  C050  F050         	movff	floorf@x+2,?_floorf+2
  9077  003050  C051  F051         	movff	floorf@x+3,?_floorf+3
  9078  003054  EFF0  F018         	goto	l1645
  9079  003058                     l5015:
  9080                           
  9081                           ; BSR set to: 0
  9082  003058  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  9083  00305A  EF31  F018         	goto	u5491
  9084  00305E  EF33  F018         	goto	u5490
  9085  003062                     u5491:
  9086  003062  EFA4  F018         	goto	l5025
  9087  003066                     u5490:
  9088  003066                     
  9089                           ; BSR set to: 0
  9090  003066  C064  F052         	movff	floorf@e,??_floorf
  9091  00306A  0EFF               	movlw	255
  9092  00306C  6E53               	movwf	(??_floorf+1)^0,c
  9093  00306E  0EFF               	movlw	255
  9094  003070  6E54               	movwf	(??_floorf+2)^0,c
  9095  003072  0E7F               	movlw	127
  9096  003074  6E55               	movwf	(??_floorf+3)^0,c
  9097  003076  0E00               	movlw	0
  9098  003078  6E56               	movwf	(??_floorf+4)^0,c
  9099  00307A                     u5505:
  9100  00307A  6652               	tstfsz	??_floorf^0,c
  9101  00307C  EF42  F018         	goto	u5506
  9102  003080  EF4A  F018         	goto	u5507
  9103  003084                     u5506:
  9104  003084  3456               	rlcf	(??_floorf+4)^0,w,c
  9105  003086  3256               	rrcf	(??_floorf+4)^0,f,c
  9106  003088  3255               	rrcf	(??_floorf+3)^0,f,c
  9107  00308A  3254               	rrcf	(??_floorf+2)^0,f,c
  9108  00308C  3253               	rrcf	(??_floorf+1)^0,f,c
  9109  00308E  2E52               	decfsz	??_floorf^0,f,c
  9110  003090  EF3D  F018         	goto	u5505
  9111  003094                     u5507:
  9112  003094  C053  F060         	movff	??_floorf+1,floorf@m
  9113  003098  C054  F061         	movff	??_floorf+2,floorf@m+1
  9114  00309C  C055  F062         	movff	??_floorf+3,floorf@m+2
  9115  0030A0  C056  F063         	movff	??_floorf+4,floorf@m+3
  9116  0030A4  0100               	movlb	0	; () banked
  9117  0030A6  5160               	movf	floorf@m& (0+255),w,b
  9118  0030A8  1566               	andwf	floorf@u& (0+255),w,b
  9119  0030AA  6E52               	movwf	??_floorf^0,c
  9120  0030AC  5161               	movf	(floorf@m+1)& (0+255),w,b
  9121  0030AE  1567               	andwf	(floorf@u+1)& (0+255),w,b
  9122  0030B0  6E53               	movwf	(??_floorf+1)^0,c
  9123  0030B2  5162               	movf	(floorf@m+2)& (0+255),w,b
  9124  0030B4  1568               	andwf	(floorf@u+2)& (0+255),w,b
  9125  0030B6  6E54               	movwf	(??_floorf+2)^0,c
  9126  0030B8  5163               	movf	(floorf@m+3)& (0+255),w,b
  9127  0030BA  1569               	andwf	(floorf@u+3)& (0+255),w,b
  9128  0030BC  6E55               	movwf	(??_floorf+3)^0,c
  9129  0030BE  5052               	movf	??_floorf^0,w,c
  9130  0030C0  1053               	iorwf	(??_floorf+1)^0,w,c
  9131  0030C2  1054               	iorwf	(??_floorf+2)^0,w,c
  9132  0030C4  1055               	iorwf	(??_floorf+3)^0,w,c
  9133  0030C6  A4D8               	btfss	status,2,c
  9134  0030C8  EF68  F018         	goto	u5511
  9135  0030CC  EF6A  F018         	goto	u5510
  9136  0030D0                     u5511:
  9137  0030D0  EF6C  F018         	goto	l5021
  9138  0030D4                     u5510:
  9139  0030D4  EF22  F018         	goto	l5013
  9140  0030D8                     l5021:
  9141                           
  9142                           ; BSR set to: 0
  9143  0030D8  C066  F052         	movff	floorf@u,??_floorf
  9144  0030DC  C067  F053         	movff	floorf@u+1,??_floorf+1
  9145  0030E0  C068  F054         	movff	floorf@u+2,??_floorf+2
  9146  0030E4  C069  F055         	movff	floorf@u+3,??_floorf+3
  9147  0030E8  0E20               	movlw	32
  9148  0030EA  EF7C  F018         	goto	u5520
  9149  0030EE                     u5525:
  9150  0030EE  90D8               	bcf	status,0,c
  9151  0030F0  3255               	rrcf	(??_floorf+3)^0,f,c
  9152  0030F2  3254               	rrcf	(??_floorf+2)^0,f,c
  9153  0030F4  3253               	rrcf	(??_floorf+1)^0,f,c
  9154  0030F6  3252               	rrcf	??_floorf^0,f,c
  9155  0030F8                     u5520:
  9156  0030F8  2EE8               	decfsz	wreg,f,c
  9157  0030FA  EF77  F018         	goto	u5525
  9158  0030FE  5052               	movf	??_floorf^0,w,c
  9159  003100  1053               	iorwf	(??_floorf+1)^0,w,c
  9160  003102  1054               	iorwf	(??_floorf+2)^0,w,c
  9161  003104  1055               	iorwf	(??_floorf+3)^0,w,c
  9162  003106  B4D8               	btfsc	status,2,c
  9163  003108  EF88  F018         	goto	u5531
  9164  00310C  EF8A  F018         	goto	u5530
  9165  003110                     u5531:
  9166  003110  EF92  F018         	goto	l1648
  9167  003114                     u5530:
  9168  003114                     
  9169                           ; BSR set to: 0
  9170  003114  5160               	movf	floorf@m& (0+255),w,b
  9171  003116  2766               	addwf	floorf@u& (0+255),f,b
  9172  003118  5161               	movf	(floorf@m+1)& (0+255),w,b
  9173  00311A  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  9174  00311C  5162               	movf	(floorf@m+2)& (0+255),w,b
  9175  00311E  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  9176  003120  5163               	movf	(floorf@m+3)& (0+255),w,b
  9177  003122  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  9178  003124                     l1648:
  9179                           
  9180                           ; BSR set to: 0
  9181  003124  1D60               	comf	floorf@m& (0+255),w,b
  9182  003126  6E52               	movwf	??_floorf^0,c
  9183  003128  1D61               	comf	(floorf@m+1)& (0+255),w,b
  9184  00312A  6E53               	movwf	(??_floorf+1)^0,c
  9185  00312C  1D62               	comf	(floorf@m+2)& (0+255),w,b
  9186  00312E  6E54               	movwf	(??_floorf+2)^0,c
  9187  003130  1D63               	comf	(floorf@m+3)& (0+255),w,b
  9188  003132  6E55               	movwf	(??_floorf+3)^0,c
  9189  003134  5052               	movf	??_floorf^0,w,c
  9190  003136  1766               	andwf	floorf@u& (0+255),f,b
  9191  003138  5053               	movf	(??_floorf+1)^0,w,c
  9192  00313A  1767               	andwf	(floorf@u+1)& (0+255),f,b
  9193  00313C  5054               	movf	(??_floorf+2)^0,w,c
  9194  00313E  1768               	andwf	(floorf@u+2)& (0+255),f,b
  9195  003140  5055               	movf	(??_floorf+3)^0,w,c
  9196  003142  1769               	andwf	(floorf@u+3)& (0+255),f,b
  9197  003144  EFE8  F018         	goto	l5033
  9198  003148                     l5025:
  9199                           
  9200                           ; BSR set to: 0
  9201  003148  C066  F052         	movff	floorf@u,??_floorf
  9202  00314C  C067  F053         	movff	floorf@u+1,??_floorf+1
  9203  003150  C068  F054         	movff	floorf@u+2,??_floorf+2
  9204  003154  C069  F055         	movff	floorf@u+3,??_floorf+3
  9205  003158  0E20               	movlw	32
  9206  00315A  EFB4  F018         	goto	u5540
  9207  00315E                     u5545:
  9208  00315E  90D8               	bcf	status,0,c
  9209  003160  3255               	rrcf	(??_floorf+3)^0,f,c
  9210  003162  3254               	rrcf	(??_floorf+2)^0,f,c
  9211  003164  3253               	rrcf	(??_floorf+1)^0,f,c
  9212  003166  3252               	rrcf	??_floorf^0,f,c
  9213  003168                     u5540:
  9214  003168  2EE8               	decfsz	wreg,f,c
  9215  00316A  EFAF  F018         	goto	u5545
  9216  00316E  5052               	movf	??_floorf^0,w,c
  9217  003170  1053               	iorwf	(??_floorf+1)^0,w,c
  9218  003172  1054               	iorwf	(??_floorf+2)^0,w,c
  9219  003174  1055               	iorwf	(??_floorf+3)^0,w,c
  9220  003176  A4D8               	btfss	status,2,c
  9221  003178  EFC0  F018         	goto	u5551
  9222  00317C  EFC2  F018         	goto	u5550
  9223  003180                     u5551:
  9224  003180  EFCC  F018         	goto	l5029
  9225  003184                     u5550:
  9226  003184                     
  9227                           ; BSR set to: 0
  9228  003184  0E00               	movlw	0
  9229  003186  6F66               	movwf	floorf@u& (0+255),b
  9230  003188  0E00               	movlw	0
  9231  00318A  6F67               	movwf	(floorf@u+1)& (0+255),b
  9232  00318C  0E00               	movlw	0
  9233  00318E  6F68               	movwf	(floorf@u+2)& (0+255),b
  9234  003190  0E00               	movlw	0
  9235  003192  6F69               	movwf	(floorf@u+3)& (0+255),b
  9236  003194  EFE8  F018         	goto	l5033
  9237  003198                     l5029:
  9238                           
  9239                           ; BSR set to: 0
  9240  003198  90D8               	bcf	status,0,c
  9241  00319A  3566               	rlcf	floorf@u& (0+255),w,b
  9242  00319C  6E52               	movwf	??_floorf^0,c
  9243  00319E  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  9244  0031A0  6E53               	movwf	(??_floorf+1)^0,c
  9245  0031A2  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  9246  0031A4  6E54               	movwf	(??_floorf+2)^0,c
  9247  0031A6  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  9248  0031A8  6E55               	movwf	(??_floorf+3)^0,c
  9249  0031AA  5052               	movf	??_floorf^0,w,c
  9250  0031AC  1053               	iorwf	(??_floorf+1)^0,w,c
  9251  0031AE  1054               	iorwf	(??_floorf+2)^0,w,c
  9252  0031B0  1055               	iorwf	(??_floorf+3)^0,w,c
  9253  0031B2  B4D8               	btfsc	status,2,c
  9254  0031B4  EFDE  F018         	goto	u5561
  9255  0031B8  EFE0  F018         	goto	u5560
  9256  0031BC                     u5561:
  9257  0031BC  EFE8  F018         	goto	l5033
  9258  0031C0                     u5560:
  9259  0031C0                     
  9260                           ; BSR set to: 0
  9261  0031C0  0E00               	movlw	0
  9262  0031C2  6F66               	movwf	floorf@u& (0+255),b
  9263  0031C4  0E00               	movlw	0
  9264  0031C6  6F67               	movwf	(floorf@u+1)& (0+255),b
  9265  0031C8  0E80               	movlw	128
  9266  0031CA  6F68               	movwf	(floorf@u+2)& (0+255),b
  9267  0031CC  0EBF               	movlw	191
  9268  0031CE  6F69               	movwf	(floorf@u+3)& (0+255),b
  9269  0031D0                     l5033:
  9270                           
  9271                           ; BSR set to: 0
  9272  0031D0  C066  F04E         	movff	floorf@u,?_floorf
  9273  0031D4  C067  F04F         	movff	floorf@u+1,?_floorf+1
  9274  0031D8  C068  F050         	movff	floorf@u+2,?_floorf+2
  9275  0031DC  C069  F051         	movff	floorf@u+3,?_floorf+3
  9276  0031E0                     l1645:
  9277                           
  9278                           ; BSR set to: 0
  9279  0031E0  0012               	return		;funcret
  9280  0031E2                     __end_of_floorf:
  9281                           	callstack 0
  9282                           
  9283 ;; *************** function ___fpclassifyf *****************
  9284 ;; Defined at:
  9285 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
  9286 ;; Parameters:    Size  Location     Type
  9287 ;;  x               4    0[COMRAM] float 
  9288 ;; Auto vars:     Size  Location     Type
  9289 ;;  u               4   10[COMRAM] struct .
  9290 ;;  e               2    8[COMRAM] int 
  9291 ;; Return value:  Size  Location     Type
  9292 ;;                  2    0[COMRAM] int 
  9293 ;; Registers used:
  9294 ;;		wreg, status,2, status,0
  9295 ;; Tracked objects:
  9296 ;;		On entry : 0/0
  9297 ;;		On exit  : 0/0
  9298 ;;		Unchanged: 0/0
  9299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9300 ;;      Params:         4       0       0       0       0       0       0
  9301 ;;      Locals:         6       0       0       0       0       0       0
  9302 ;;      Temps:          4       0       0       0       0       0       0
  9303 ;;      Totals:        14       0       0       0       0       0       0
  9304 ;;Total ram usage:       14 bytes
  9305 ;; Hardware stack levels used:    1
  9306 ;; Hardware stack levels required when called:    1
  9307 ;; This function calls:
  9308 ;;		Nothing
  9309 ;; This function is called by:
  9310 ;;		_efgtoa
  9311 ;; This function uses a non-reentrant model
  9312 ;;
  9313                           
  9314                           	psect	text30
  9315  0044DC                     __ptext30:
  9316                           	callstack 0
  9317  0044DC                     ___fpclassifyf:
  9318                           	callstack 22
  9319  0044DC  C1A7  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  9320  0044E0  C1A8  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  9321  0044E4  C1A9  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  9322  0044E8  C1AA  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  9323  0044EC  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  9324  0044F0  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  9325  0044F4  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  9326  0044F8  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  9327  0044FC  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  9328  004500  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9329  004504  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9330  004508  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9331  00450C  0E18               	movlw	24
  9332  00450E  EF8E  F022         	goto	u5350
  9333  004512                     u5355:
  9334  004512  90D8               	bcf	status,0,c
  9335  004514  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  9336  004516  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  9337  004518  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  9338  00451A  3205               	rrcf	??___fpclassifyf^0,f,c
  9339  00451C                     u5350:
  9340  00451C  2EE8               	decfsz	wreg,f,c
  9341  00451E  EF89  F022         	goto	u5355
  9342  004522  5005               	movf	??___fpclassifyf^0,w,c
  9343  004524  6E09               	movwf	___fpclassifyf@e^0,c
  9344  004526  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  9345  004528  5009               	movf	___fpclassifyf@e^0,w,c
  9346  00452A  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9347  00452C  A4D8               	btfss	status,2,c
  9348  00452E  EF9B  F022         	goto	u5361
  9349  004532  EF9D  F022         	goto	u5360
  9350  004536                     u5361:
  9351  004536  EFBD  F022         	goto	l4985
  9352  00453A                     u5360:
  9353  00453A  90D8               	bcf	status,0,c
  9354  00453C  340B               	rlcf	___fpclassifyf@u^0,w,c
  9355  00453E  6E05               	movwf	??___fpclassifyf^0,c
  9356  004540  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  9357  004542  6E06               	movwf	(??___fpclassifyf+1)^0,c
  9358  004544  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  9359  004546  6E07               	movwf	(??___fpclassifyf+2)^0,c
  9360  004548  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  9361  00454A  6E08               	movwf	(??___fpclassifyf+3)^0,c
  9362  00454C  5005               	movf	??___fpclassifyf^0,w,c
  9363  00454E  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  9364  004550  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  9365  004552  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  9366  004554  A4D8               	btfss	status,2,c
  9367  004556  EFAF  F022         	goto	u5371
  9368  00455A  EFB1  F022         	goto	u5370
  9369  00455E                     u5371:
  9370  00455E  EFB7  F022         	goto	l4981
  9371  004562                     u5370:
  9372  004562  0E00               	movlw	0
  9373  004564  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9374  004566  0E02               	movlw	2
  9375  004568  6E01               	movwf	?___fpclassifyf^0,c
  9376  00456A  EFEC  F022         	goto	l1600
  9377  00456E                     l4981:
  9378  00456E  0E00               	movlw	0
  9379  004570  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9380  004572  0E03               	movlw	3
  9381  004574  6E01               	movwf	?___fpclassifyf^0,c
  9382  004576  EFEC  F022         	goto	l1600
  9383  00457A                     l4985:
  9384  00457A  2809               	incf	___fpclassifyf@e^0,w,c
  9385  00457C  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9386  00457E  A4D8               	btfss	status,2,c
  9387  004580  EFC4  F022         	goto	u5381
  9388  004584  EFC6  F022         	goto	u5380
  9389  004588                     u5381:
  9390  004588  EFE8  F022         	goto	l4991
  9391  00458C                     u5380:
  9392  00458C  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  9393  004590  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9394  004594  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9395  004598  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9396  00459C  0E09               	movlw	9
  9397  00459E                     u5395:
  9398  00459E  90D8               	bcf	status,0,c
  9399  0045A0  3605               	rlcf	??___fpclassifyf^0,f,c
  9400  0045A2  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  9401  0045A4  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  9402  0045A6  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  9403  0045A8  2EE8               	decfsz	wreg,f,c
  9404  0045AA  EFCF  F022         	goto	u5395
  9405  0045AE  5005               	movf	??___fpclassifyf^0,w,c
  9406  0045B0  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  9407  0045B2  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  9408  0045B4  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  9409  0045B6  B4D8               	btfsc	status,2,c
  9410  0045B8  EFE0  F022         	goto	u5401
  9411  0045BC  EFE3  F022         	goto	u5400
  9412  0045C0                     u5401:
  9413  0045C0  0E01               	movlw	1
  9414  0045C2  EFE4  F022         	goto	u5410
  9415  0045C6                     u5400:
  9416  0045C6  0E00               	movlw	0
  9417  0045C8                     u5410:
  9418  0045C8  6E01               	movwf	?___fpclassifyf^0,c
  9419  0045CA  6A02               	clrf	(?___fpclassifyf+1)^0,c
  9420  0045CC  EFEC  F022         	goto	l1600
  9421  0045D0                     l4991:
  9422  0045D0  0E00               	movlw	0
  9423  0045D2  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9424  0045D4  0E04               	movlw	4
  9425  0045D6  6E01               	movwf	?___fpclassifyf^0,c
  9426  0045D8                     l1600:
  9427  0045D8  0012               	return		;funcret
  9428  0045DA                     __end_of___fpclassifyf:
  9429                           	callstack 0
  9430                           
  9431 ;; *************** function ___flsub *****************
  9432 ;; Defined at:
  9433 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  9434 ;; Parameters:    Size  Location     Type
  9435 ;;  b               4   68[COMRAM] int 
  9436 ;;  a               4   72[COMRAM] int 
  9437 ;; Auto vars:     Size  Location     Type
  9438 ;;		None
  9439 ;; Return value:  Size  Location     Type
  9440 ;;                  4   68[COMRAM] int 
  9441 ;; Registers used:
  9442 ;;		wreg, status,2, status,0, cstack
  9443 ;; Tracked objects:
  9444 ;;		On entry : 0/0
  9445 ;;		On exit  : 0/0
  9446 ;;		Unchanged: 0/0
  9447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9448 ;;      Params:         8       0       0       0       0       0       0
  9449 ;;      Locals:         0       0       0       0       0       0       0
  9450 ;;      Temps:          0       0       0       0       0       0       0
  9451 ;;      Totals:         8       0       0       0       0       0       0
  9452 ;;Total ram usage:        8 bytes
  9453 ;; Hardware stack levels used:    1
  9454 ;; Hardware stack levels required when called:    2
  9455 ;; This function calls:
  9456 ;;		___fladd
  9457 ;; This function is called by:
  9458 ;;		_secretMenu
  9459 ;;		_efgtoa
  9460 ;; This function uses a non-reentrant model
  9461 ;;
  9462                           
  9463                           	psect	text31
  9464  005326                     __ptext31:
  9465                           	callstack 0
  9466  005326                     ___flsub:
  9467                           	callstack 21
  9468  005326  0E00               	movlw	0
  9469  005328  1A49               	xorwf	___flsub@a^0,f,c
  9470  00532A  0E00               	movlw	0
  9471  00532C  1A4A               	xorwf	(___flsub@a+1)^0,f,c
  9472  00532E  0E00               	movlw	0
  9473  005330  1A4B               	xorwf	(___flsub@a+2)^0,f,c
  9474  005332  0E80               	movlw	128
  9475  005334  1A4C               	xorwf	(___flsub@a+3)^0,f,c
  9476  005336  C045  F035         	movff	___flsub@b,___fladd@b
  9477  00533A  C046  F036         	movff	___flsub@b+1,___fladd@b+1
  9478  00533E  C047  F037         	movff	___flsub@b+2,___fladd@b+2
  9479  005342  C048  F038         	movff	___flsub@b+3,___fladd@b+3
  9480  005346  C049  F039         	movff	___flsub@a,___fladd@a
  9481  00534A  C04A  F03A         	movff	___flsub@a+1,___fladd@a+1
  9482  00534E  C04B  F03B         	movff	___flsub@a+2,___fladd@a+2
  9483  005352  C04C  F03C         	movff	___flsub@a+3,___fladd@a+3
  9484  005356  EC53  F00D         	call	___fladd	;wreg free
  9485  00535A  C035  F045         	movff	?___fladd,?___flsub
  9486  00535E  C036  F046         	movff	?___fladd+1,?___flsub+1
  9487  005362  C037  F047         	movff	?___fladd+2,?___flsub+2
  9488  005366  C038  F048         	movff	?___fladd+3,?___flsub+3
  9489  00536A  0012               	return		;funcret
  9490  00536C                     __end_of___flsub:
  9491                           	callstack 0
  9492                           
  9493 ;; *************** function ___fladd *****************
  9494 ;; Defined at:
  9495 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  9496 ;; Parameters:    Size  Location     Type
  9497 ;;  b               4   52[COMRAM] int 
  9498 ;;  a               4   56[COMRAM] int 
  9499 ;; Auto vars:     Size  Location     Type
  9500 ;;  grs             1   67[COMRAM] unsigned char 
  9501 ;;  bexp            1   66[COMRAM] unsigned char 
  9502 ;;  aexp            1   65[COMRAM] unsigned char 
  9503 ;;  signs           1   64[COMRAM] unsigned char 
  9504 ;; Return value:  Size  Location     Type
  9505 ;;                  4   52[COMRAM] unsigned char 
  9506 ;; Registers used:
  9507 ;;		wreg, status,2, status,0
  9508 ;; Tracked objects:
  9509 ;;		On entry : 0/0
  9510 ;;		On exit  : 0/0
  9511 ;;		Unchanged: 0/0
  9512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9513 ;;      Params:         8       0       0       0       0       0       0
  9514 ;;      Locals:         4       0       0       0       0       0       0
  9515 ;;      Temps:          4       0       0       0       0       0       0
  9516 ;;      Totals:        16       0       0       0       0       0       0
  9517 ;;Total ram usage:       16 bytes
  9518 ;; Hardware stack levels used:    1
  9519 ;; Hardware stack levels required when called:    1
  9520 ;; This function calls:
  9521 ;;		Nothing
  9522 ;; This function is called by:
  9523 ;;		_secretMenu
  9524 ;;		_speedControl
  9525 ;;		___flsub
  9526 ;;		_efgtoa
  9527 ;; This function uses a non-reentrant model
  9528 ;;
  9529                           
  9530                           	psect	text32
  9531  001AA6                     __ptext32:
  9532                           	callstack 0
  9533  001AA6                     ___fladd:
  9534                           	callstack 21
  9535  001AA6  5038               	movf	(___fladd@b+3)^0,w,c
  9536  001AA8  0B80               	andlw	128
  9537  001AAA  6E41               	movwf	___fladd@signs^0,c
  9538  001AAC  5038               	movf	(___fladd@b+3)^0,w,c
  9539  001AAE  2438               	addwf	(___fladd@b+3)^0,w,c
  9540  001AB0  6E43               	movwf	___fladd@bexp^0,c
  9541  001AB2  AE37               	btfss	(___fladd@b+2)^0,7,c
  9542  001AB4  EF5E  F00D         	goto	u4041
  9543  001AB8  EF60  F00D         	goto	u4040
  9544  001ABC                     u4041:
  9545  001ABC  EF61  F00D         	goto	l4199
  9546  001AC0                     u4040:
  9547  001AC0  8043               	bsf	___fladd@bexp^0,0,c
  9548  001AC2                     l4199:
  9549  001AC2  5043               	movf	___fladd@bexp^0,w,c
  9550  001AC4  B4D8               	btfsc	status,2,c
  9551  001AC6  EF67  F00D         	goto	u4051
  9552  001ACA  EF69  F00D         	goto	u4050
  9553  001ACE                     u4051:
  9554  001ACE  EF7E  F00D         	goto	l4209
  9555  001AD2                     u4050:
  9556  001AD2  2843               	incf	___fladd@bexp^0,w,c
  9557  001AD4  A4D8               	btfss	status,2,c
  9558  001AD6  EF6F  F00D         	goto	u4061
  9559  001ADA  EF71  F00D         	goto	u4060
  9560  001ADE                     u4061:
  9561  001ADE  EF79  F00D         	goto	l4205
  9562  001AE2                     u4060:
  9563  001AE2  0E00               	movlw	0
  9564  001AE4  6E35               	movwf	___fladd@b^0,c
  9565  001AE6  0E00               	movlw	0
  9566  001AE8  6E36               	movwf	(___fladd@b+1)^0,c
  9567  001AEA  0E00               	movlw	0
  9568  001AEC  6E37               	movwf	(___fladd@b+2)^0,c
  9569  001AEE  0E00               	movlw	0
  9570  001AF0  6E38               	movwf	(___fladd@b+3)^0,c
  9571  001AF2                     l4205:
  9572  001AF2  8E37               	bsf	(___fladd@b+2)^0,7,c
  9573  001AF4  0E00               	movlw	0
  9574  001AF6  6E38               	movwf	(___fladd@b+3)^0,c
  9575  001AF8  EF86  F00D         	goto	l4211
  9576  001AFC                     l4209:
  9577  001AFC  0E00               	movlw	0
  9578  001AFE  6E35               	movwf	___fladd@b^0,c
  9579  001B00  0E00               	movlw	0
  9580  001B02  6E36               	movwf	(___fladd@b+1)^0,c
  9581  001B04  0E00               	movlw	0
  9582  001B06  6E37               	movwf	(___fladd@b+2)^0,c
  9583  001B08  0E00               	movlw	0
  9584  001B0A  6E38               	movwf	(___fladd@b+3)^0,c
  9585  001B0C                     l4211:
  9586  001B0C  503C               	movf	(___fladd@a+3)^0,w,c
  9587  001B0E  0B80               	andlw	128
  9588  001B10  6E42               	movwf	___fladd@aexp^0,c
  9589  001B12  5041               	movf	___fladd@signs^0,w,c
  9590  001B14  1842               	xorwf	___fladd@aexp^0,w,c
  9591  001B16  B4D8               	btfsc	status,2,c
  9592  001B18  EF90  F00D         	goto	u4071
  9593  001B1C  EF92  F00D         	goto	u4070
  9594  001B20                     u4071:
  9595  001B20  EF93  F00D         	goto	l4217
  9596  001B24                     u4070:
  9597  001B24  8C41               	bsf	___fladd@signs^0,6,c
  9598  001B26                     l4217:
  9599  001B26  503C               	movf	(___fladd@a+3)^0,w,c
  9600  001B28  243C               	addwf	(___fladd@a+3)^0,w,c
  9601  001B2A  6E42               	movwf	___fladd@aexp^0,c
  9602  001B2C  AE3B               	btfss	(___fladd@a+2)^0,7,c
  9603  001B2E  EF9B  F00D         	goto	u4081
  9604  001B32  EF9D  F00D         	goto	u4080
  9605  001B36                     u4081:
  9606  001B36  EF9E  F00D         	goto	l4223
  9607  001B3A                     u4080:
  9608  001B3A  8042               	bsf	___fladd@aexp^0,0,c
  9609  001B3C                     l4223:
  9610  001B3C  5042               	movf	___fladd@aexp^0,w,c
  9611  001B3E  B4D8               	btfsc	status,2,c
  9612  001B40  EFA4  F00D         	goto	u4091
  9613  001B44  EFA6  F00D         	goto	u4090
  9614  001B48                     u4091:
  9615  001B48  EFBB  F00D         	goto	l4233
  9616  001B4C                     u4090:
  9617  001B4C  2842               	incf	___fladd@aexp^0,w,c
  9618  001B4E  A4D8               	btfss	status,2,c
  9619  001B50  EFAC  F00D         	goto	u4101
  9620  001B54  EFAE  F00D         	goto	u4100
  9621  001B58                     u4101:
  9622  001B58  EFB6  F00D         	goto	l4229
  9623  001B5C                     u4100:
  9624  001B5C  0E00               	movlw	0
  9625  001B5E  6E39               	movwf	___fladd@a^0,c
  9626  001B60  0E00               	movlw	0
  9627  001B62  6E3A               	movwf	(___fladd@a+1)^0,c
  9628  001B64  0E00               	movlw	0
  9629  001B66  6E3B               	movwf	(___fladd@a+2)^0,c
  9630  001B68  0E00               	movlw	0
  9631  001B6A  6E3C               	movwf	(___fladd@a+3)^0,c
  9632  001B6C                     l4229:
  9633  001B6C  8E3B               	bsf	(___fladd@a+2)^0,7,c
  9634  001B6E  0E00               	movlw	0
  9635  001B70  6E3C               	movwf	(___fladd@a+3)^0,c
  9636  001B72  EFC3  F00D         	goto	l4235
  9637  001B76                     l4233:
  9638  001B76  0E00               	movlw	0
  9639  001B78  6E39               	movwf	___fladd@a^0,c
  9640  001B7A  0E00               	movlw	0
  9641  001B7C  6E3A               	movwf	(___fladd@a+1)^0,c
  9642  001B7E  0E00               	movlw	0
  9643  001B80  6E3B               	movwf	(___fladd@a+2)^0,c
  9644  001B82  0E00               	movlw	0
  9645  001B84  6E3C               	movwf	(___fladd@a+3)^0,c
  9646  001B86                     l4235:
  9647  001B86  5043               	movf	___fladd@bexp^0,w,c
  9648  001B88  5C42               	subwf	___fladd@aexp^0,w,c
  9649  001B8A  B0D8               	btfsc	status,0,c
  9650  001B8C  EFCA  F00D         	goto	u4111
  9651  001B90  EFCC  F00D         	goto	u4110
  9652  001B94                     u4111:
  9653  001B94  EFF3  F00D         	goto	l4271
  9654  001B98                     u4110:
  9655  001B98  AC41               	btfss	___fladd@signs^0,6,c
  9656  001B9A  EFD1  F00D         	goto	u4121
  9657  001B9E  EFD3  F00D         	goto	u4120
  9658  001BA2                     u4121:
  9659  001BA2  EFD5  F00D         	goto	l4241
  9660  001BA6                     u4120:
  9661  001BA6  0E80               	movlw	128
  9662  001BA8  1A41               	xorwf	___fladd@signs^0,f,c
  9663  001BAA                     l4241:
  9664  001BAA  C043  F044         	movff	___fladd@bexp,___fladd@grs
  9665  001BAE  C042  F043         	movff	___fladd@aexp,___fladd@bexp
  9666  001BB2  C044  F042         	movff	___fladd@grs,___fladd@aexp
  9667  001BB6  C035  F044         	movff	___fladd@b,___fladd@grs
  9668  001BBA  C039  F035         	movff	___fladd@a,___fladd@b
  9669  001BBE  C044  F039         	movff	___fladd@grs,___fladd@a
  9670  001BC2  C036  F044         	movff	___fladd@b+1,___fladd@grs
  9671  001BC6  C03A  F036         	movff	___fladd@a+1,___fladd@b+1
  9672  001BCA  C044  F03A         	movff	___fladd@grs,___fladd@a+1
  9673  001BCE  C037  F044         	movff	___fladd@b+2,___fladd@grs
  9674  001BD2  C03B  F037         	movff	___fladd@a+2,___fladd@b+2
  9675  001BD6  C044  F03B         	movff	___fladd@grs,___fladd@a+2
  9676  001BDA  C038  F044         	movff	___fladd@b+3,___fladd@grs
  9677  001BDE  C03C  F038         	movff	___fladd@a+3,___fladd@b+3
  9678  001BE2  C044  F03C         	movff	___fladd@grs,___fladd@a+3
  9679  001BE6                     l4271:
  9680  001BE6  0E00               	movlw	0
  9681  001BE8  6E44               	movwf	___fladd@grs^0,c
  9682  001BEA  5043               	movf	___fladd@bexp^0,w,c
  9683  001BEC  C042  F03D         	movff	___fladd@aexp,??___fladd
  9684  001BF0  6A3E               	clrf	(??___fladd+1)^0,c
  9685  001BF2  5E3D               	subwf	??___fladd^0,f,c
  9686  001BF4  0E00               	movlw	0
  9687  001BF6  5A3E               	subwfb	(??___fladd+1)^0,f,c
  9688  001BF8  BE3E               	btfsc	(??___fladd+1)^0,7,c
  9689  001BFA  EF08  F00E         	goto	u4131
  9690  001BFE  503E               	movf	(??___fladd+1)^0,w,c
  9691  001C00  E109               	bnz	u4130
  9692  001C02  0E1A               	movlw	26
  9693  001C04  5C3D               	subwf	??___fladd^0,w,c
  9694  001C06  A0D8               	btfss	status,0,c
  9695  001C08  EF08  F00E         	goto	u4131
  9696  001C0C  EF0A  F00E         	goto	u4130
  9697  001C10                     u4131:
  9698  001C10  EF41  F00E         	goto	l1227
  9699  001C14                     u4130:
  9700  001C14  5035               	movf	___fladd@b^0,w,c
  9701  001C16  1036               	iorwf	(___fladd@b+1)^0,w,c
  9702  001C18  1037               	iorwf	(___fladd@b+2)^0,w,c
  9703  001C1A  1038               	iorwf	(___fladd@b+3)^0,w,c
  9704  001C1C  A4D8               	btfss	status,2,c
  9705  001C1E  EF13  F00E         	goto	u4141
  9706  001C22  EF16  F00E         	goto	u4140
  9707  001C26                     u4141:
  9708  001C26  0E01               	movlw	1
  9709  001C28  EF17  F00E         	goto	u4150
  9710  001C2C                     u4140:
  9711  001C2C  0E00               	movlw	0
  9712  001C2E                     u4150:
  9713  001C2E  6E44               	movwf	___fladd@grs^0,c
  9714  001C30  0E00               	movlw	0
  9715  001C32  6E35               	movwf	___fladd@b^0,c
  9716  001C34  0E00               	movlw	0
  9717  001C36  6E36               	movwf	(___fladd@b+1)^0,c
  9718  001C38  0E00               	movlw	0
  9719  001C3A  6E37               	movwf	(___fladd@b+2)^0,c
  9720  001C3C  0E00               	movlw	0
  9721  001C3E  6E38               	movwf	(___fladd@b+3)^0,c
  9722  001C40  C042  F043         	movff	___fladd@aexp,___fladd@bexp
  9723  001C44  EF4A  F00E         	goto	l1226
  9724  001C48                     l1228:
  9725  001C48  A044               	btfss	___fladd@grs^0,0,c
  9726  001C4A  EF29  F00E         	goto	u4161
  9727  001C4E  EF2B  F00E         	goto	u4160
  9728  001C52                     u4161:
  9729  001C52  EF31  F00E         	goto	l4283
  9730  001C56                     u4160:
  9731  001C56  90D8               	bcf	status,0,c
  9732  001C58  3044               	rrcf	___fladd@grs^0,w,c
  9733  001C5A  0901               	iorlw	1
  9734  001C5C  6E44               	movwf	___fladd@grs^0,c
  9735  001C5E  EF33  F00E         	goto	l4285
  9736  001C62                     l4283:
  9737  001C62  90D8               	bcf	status,0,c
  9738  001C64  3244               	rrcf	___fladd@grs^0,f,c
  9739  001C66                     l4285:
  9740  001C66  A035               	btfss	___fladd@b^0,0,c
  9741  001C68  EF38  F00E         	goto	u4171
  9742  001C6C  EF3A  F00E         	goto	u4170
  9743  001C70                     u4171:
  9744  001C70  EF3B  F00E         	goto	l4289
  9745  001C74                     u4170:
  9746  001C74  8E44               	bsf	___fladd@grs^0,7,c
  9747  001C76                     l4289:
  9748  001C76  3438               	rlcf	(___fladd@b+3)^0,w,c
  9749  001C78  3238               	rrcf	(___fladd@b+3)^0,f,c
  9750  001C7A  3237               	rrcf	(___fladd@b+2)^0,f,c
  9751  001C7C  3236               	rrcf	(___fladd@b+1)^0,f,c
  9752  001C7E  3235               	rrcf	___fladd@b^0,f,c
  9753  001C80  2A43               	incf	___fladd@bexp^0,f,c
  9754  001C82                     l1227:
  9755  001C82  5042               	movf	___fladd@aexp^0,w,c
  9756  001C84  5C43               	subwf	___fladd@bexp^0,w,c
  9757  001C86  A0D8               	btfss	status,0,c
  9758  001C88  EF48  F00E         	goto	u4181
  9759  001C8C  EF4A  F00E         	goto	u4180
  9760  001C90                     u4181:
  9761  001C90  EF24  F00E         	goto	l1228
  9762  001C94                     u4180:
  9763  001C94                     l1226:
  9764  001C94  BC41               	btfsc	___fladd@signs^0,6,c
  9765  001C96  EF4F  F00E         	goto	u4191
  9766  001C9A  EF51  F00E         	goto	u4190
  9767  001C9E                     u4191:
  9768  001C9E  EF91  F00E         	goto	l4317
  9769  001CA2                     u4190:
  9770  001CA2  5043               	movf	___fladd@bexp^0,w,c
  9771  001CA4  A4D8               	btfss	status,2,c
  9772  001CA6  EF57  F00E         	goto	u4201
  9773  001CAA  EF59  F00E         	goto	u4200
  9774  001CAE                     u4201:
  9775  001CAE  EF63  F00E         	goto	l4299
  9776  001CB2                     u4200:
  9777  001CB2  0E00               	movlw	0
  9778  001CB4  6E35               	movwf	?___fladd^0,c
  9779  001CB6  0E00               	movlw	0
  9780  001CB8  6E36               	movwf	(?___fladd+1)^0,c
  9781  001CBA  0E00               	movlw	0
  9782  001CBC  6E37               	movwf	(?___fladd+2)^0,c
  9783  001CBE  0E00               	movlw	0
  9784  001CC0  6E38               	movwf	(?___fladd+3)^0,c
  9785  001CC2  EFB2  F00F         	goto	l1235
  9786  001CC6                     l4299:
  9787  001CC6  5039               	movf	___fladd@a^0,w,c
  9788  001CC8  2635               	addwf	___fladd@b^0,f,c
  9789  001CCA  503A               	movf	(___fladd@a+1)^0,w,c
  9790  001CCC  2236               	addwfc	(___fladd@b+1)^0,f,c
  9791  001CCE  503B               	movf	(___fladd@a+2)^0,w,c
  9792  001CD0  2237               	addwfc	(___fladd@b+2)^0,f,c
  9793  001CD2  503C               	movf	(___fladd@a+3)^0,w,c
  9794  001CD4  2238               	addwfc	(___fladd@b+3)^0,f,c
  9795  001CD6  A038               	btfss	(___fladd@b+3)^0,0,c
  9796  001CD8  EF70  F00E         	goto	u4211
  9797  001CDC  EF72  F00E         	goto	u4210
  9798  001CE0                     u4211:
  9799  001CE0  EF1E  F00F         	goto	l4353
  9800  001CE4                     u4210:
  9801  001CE4  A044               	btfss	___fladd@grs^0,0,c
  9802  001CE6  EF77  F00E         	goto	u4221
  9803  001CEA  EF79  F00E         	goto	u4220
  9804  001CEE                     u4221:
  9805  001CEE  EF7F  F00E         	goto	l4307
  9806  001CF2                     u4220:
  9807  001CF2  90D8               	bcf	status,0,c
  9808  001CF4  3044               	rrcf	___fladd@grs^0,w,c
  9809  001CF6  0901               	iorlw	1
  9810  001CF8  6E44               	movwf	___fladd@grs^0,c
  9811  001CFA  EF81  F00E         	goto	l4309
  9812  001CFE                     l4307:
  9813  001CFE  90D8               	bcf	status,0,c
  9814  001D00  3244               	rrcf	___fladd@grs^0,f,c
  9815  001D02                     l4309:
  9816  001D02  A035               	btfss	___fladd@b^0,0,c
  9817  001D04  EF86  F00E         	goto	u4231
  9818  001D08  EF88  F00E         	goto	u4230
  9819  001D0C                     u4231:
  9820  001D0C  EF89  F00E         	goto	l4313
  9821  001D10                     u4230:
  9822  001D10  8E44               	bsf	___fladd@grs^0,7,c
  9823  001D12                     l4313:
  9824  001D12  3438               	rlcf	(___fladd@b+3)^0,w,c
  9825  001D14  3238               	rrcf	(___fladd@b+3)^0,f,c
  9826  001D16  3237               	rrcf	(___fladd@b+2)^0,f,c
  9827  001D18  3236               	rrcf	(___fladd@b+1)^0,f,c
  9828  001D1A  3235               	rrcf	___fladd@b^0,f,c
  9829  001D1C  2A43               	incf	___fladd@bexp^0,f,c
  9830  001D1E  EF1E  F00F         	goto	l4353
  9831  001D22                     l4317:
  9832  001D22  5039               	movf	___fladd@a^0,w,c
  9833  001D24  5C35               	subwf	___fladd@b^0,w,c
  9834  001D26  503A               	movf	(___fladd@a+1)^0,w,c
  9835  001D28  5836               	subwfb	(___fladd@b+1)^0,w,c
  9836  001D2A  503B               	movf	(___fladd@a+2)^0,w,c
  9837  001D2C  5837               	subwfb	(___fladd@b+2)^0,w,c
  9838  001D2E  5038               	movf	(___fladd@b+3)^0,w,c
  9839  001D30  0A80               	xorlw	128
  9840  001D32  6E3D               	movwf	??___fladd^0,c
  9841  001D34  503C               	movf	(___fladd@a+3)^0,w,c
  9842  001D36  0A80               	xorlw	128
  9843  001D38  583D               	subwfb	??___fladd^0,w,c
  9844  001D3A  B0D8               	btfsc	status,0,c
  9845  001D3C  EFA2  F00E         	goto	u4241
  9846  001D40  EFA4  F00E         	goto	u4240
  9847  001D44                     u4241:
  9848  001D44  EFCF  F00E         	goto	l4327
  9849  001D48                     u4240:
  9850  001D48  5035               	movf	___fladd@b^0,w,c
  9851  001D4A  5C39               	subwf	___fladd@a^0,w,c
  9852  001D4C  6E3D               	movwf	??___fladd^0,c
  9853  001D4E  5036               	movf	(___fladd@b+1)^0,w,c
  9854  001D50  583A               	subwfb	(___fladd@a+1)^0,w,c
  9855  001D52  6E3E               	movwf	(??___fladd+1)^0,c
  9856  001D54  5037               	movf	(___fladd@b+2)^0,w,c
  9857  001D56  583B               	subwfb	(___fladd@a+2)^0,w,c
  9858  001D58  6E3F               	movwf	(??___fladd+2)^0,c
  9859  001D5A  5038               	movf	(___fladd@b+3)^0,w,c
  9860  001D5C  583C               	subwfb	(___fladd@a+3)^0,w,c
  9861  001D5E  6E40               	movwf	(??___fladd+3)^0,c
  9862  001D60  0EFF               	movlw	255
  9863  001D62  243D               	addwf	??___fladd^0,w,c
  9864  001D64  6E35               	movwf	___fladd@b^0,c
  9865  001D66  0EFF               	movlw	255
  9866  001D68  203E               	addwfc	(??___fladd+1)^0,w,c
  9867  001D6A  6E36               	movwf	(___fladd@b+1)^0,c
  9868  001D6C  0EFF               	movlw	255
  9869  001D6E  203F               	addwfc	(??___fladd+2)^0,w,c
  9870  001D70  6E37               	movwf	(___fladd@b+2)^0,c
  9871  001D72  0EFF               	movlw	255
  9872  001D74  2040               	addwfc	(??___fladd+3)^0,w,c
  9873  001D76  6E38               	movwf	(___fladd@b+3)^0,c
  9874  001D78  0E80               	movlw	128
  9875  001D7A  1A41               	xorwf	___fladd@signs^0,f,c
  9876  001D7C  6C44               	negf	___fladd@grs^0,c
  9877  001D7E  5044               	movf	___fladd@grs^0,w,c
  9878  001D80  A4D8               	btfss	status,2,c
  9879  001D82  EFC5  F00E         	goto	u4251
  9880  001D86  EFC7  F00E         	goto	u4250
  9881  001D8A                     u4251:
  9882  001D8A  EFD7  F00E         	goto	l1243
  9883  001D8E                     u4250:
  9884  001D8E  0E01               	movlw	1
  9885  001D90  2635               	addwf	___fladd@b^0,f,c
  9886  001D92  0E00               	movlw	0
  9887  001D94  2236               	addwfc	(___fladd@b+1)^0,f,c
  9888  001D96  2237               	addwfc	(___fladd@b+2)^0,f,c
  9889  001D98  2238               	addwfc	(___fladd@b+3)^0,f,c
  9890  001D9A  EFD7  F00E         	goto	l1243
  9891  001D9E                     l4327:
  9892  001D9E  5039               	movf	___fladd@a^0,w,c
  9893  001DA0  5E35               	subwf	___fladd@b^0,f,c
  9894  001DA2  503A               	movf	(___fladd@a+1)^0,w,c
  9895  001DA4  5A36               	subwfb	(___fladd@b+1)^0,f,c
  9896  001DA6  503B               	movf	(___fladd@a+2)^0,w,c
  9897  001DA8  5A37               	subwfb	(___fladd@b+2)^0,f,c
  9898  001DAA  503C               	movf	(___fladd@a+3)^0,w,c
  9899  001DAC  5A38               	subwfb	(___fladd@b+3)^0,f,c
  9900  001DAE                     l1243:
  9901  001DAE  5035               	movf	___fladd@b^0,w,c
  9902  001DB0  1036               	iorwf	(___fladd@b+1)^0,w,c
  9903  001DB2  1037               	iorwf	(___fladd@b+2)^0,w,c
  9904  001DB4  1038               	iorwf	(___fladd@b+3)^0,w,c
  9905  001DB6  A4D8               	btfss	status,2,c
  9906  001DB8  EFE0  F00E         	goto	u4261
  9907  001DBC  EFE2  F00E         	goto	u4260
  9908  001DC0                     u4261:
  9909  001DC0  EF17  F00F         	goto	l4351
  9910  001DC4                     u4260:
  9911  001DC4  5044               	movf	___fladd@grs^0,w,c
  9912  001DC6  A4D8               	btfss	status,2,c
  9913  001DC8  EFE8  F00E         	goto	u4271
  9914  001DCC  EFEA  F00E         	goto	u4270
  9915  001DD0                     u4271:
  9916  001DD0  EF17  F00F         	goto	l4351
  9917  001DD4                     u4270:
  9918  001DD4  0E00               	movlw	0
  9919  001DD6  6E35               	movwf	?___fladd^0,c
  9920  001DD8  0E00               	movlw	0
  9921  001DDA  6E36               	movwf	(?___fladd+1)^0,c
  9922  001DDC  0E00               	movlw	0
  9923  001DDE  6E37               	movwf	(?___fladd+2)^0,c
  9924  001DE0  0E00               	movlw	0
  9925  001DE2  6E38               	movwf	(?___fladd+3)^0,c
  9926  001DE4  EFB2  F00F         	goto	l1235
  9927  001DE8                     l4335:
  9928  001DE8  90D8               	bcf	status,0,c
  9929  001DEA  3635               	rlcf	___fladd@b^0,f,c
  9930  001DEC  3636               	rlcf	(___fladd@b+1)^0,f,c
  9931  001DEE  3637               	rlcf	(___fladd@b+2)^0,f,c
  9932  001DF0  3638               	rlcf	(___fladd@b+3)^0,f,c
  9933  001DF2  AE44               	btfss	___fladd@grs^0,7,c
  9934  001DF4  EFFE  F00E         	goto	u4281
  9935  001DF8  EF00  F00F         	goto	u4280
  9936  001DFC                     u4281:
  9937  001DFC  EF01  F00F         	goto	l4341
  9938  001E00                     u4280:
  9939  001E00  8035               	bsf	___fladd@b^0,0,c
  9940  001E02                     l4341:
  9941  001E02  A044               	btfss	___fladd@grs^0,0,c
  9942  001E04  EF06  F00F         	goto	u4291
  9943  001E08  EF08  F00F         	goto	u4290
  9944  001E0C                     u4291:
  9945  001E0C  EF0C  F00F         	goto	l4345
  9946  001E10                     u4290:
  9947  001E10  80D8               	bsf	status,0,c
  9948  001E12  3644               	rlcf	___fladd@grs^0,f,c
  9949  001E14  EF0E  F00F         	goto	l4347
  9950  001E18                     l4345:
  9951  001E18  90D8               	bcf	status,0,c
  9952  001E1A  3644               	rlcf	___fladd@grs^0,f,c
  9953  001E1C                     l4347:
  9954  001E1C  5043               	movf	___fladd@bexp^0,w,c
  9955  001E1E  B4D8               	btfsc	status,2,c
  9956  001E20  EF14  F00F         	goto	u4301
  9957  001E24  EF16  F00F         	goto	u4300
  9958  001E28                     u4301:
  9959  001E28  EF17  F00F         	goto	l4351
  9960  001E2C                     u4300:
  9961  001E2C  0643               	decf	___fladd@bexp^0,f,c
  9962  001E2E                     l4351:
  9963  001E2E  AE37               	btfss	(___fladd@b+2)^0,7,c
  9964  001E30  EF1C  F00F         	goto	u4311
  9965  001E34  EF1E  F00F         	goto	u4310
  9966  001E38                     u4311:
  9967  001E38  EFF4  F00E         	goto	l4335
  9968  001E3C                     u4310:
  9969  001E3C                     l4353:
  9970  001E3C  0E00               	movlw	0
  9971  001E3E  6E42               	movwf	___fladd@aexp^0,c
  9972  001E40  AE44               	btfss	___fladd@grs^0,7,c
  9973  001E42  EF25  F00F         	goto	u4321
  9974  001E46  EF27  F00F         	goto	u4320
  9975  001E4A                     u4321:
  9976  001E4A  EF3F  F00F         	goto	l1252
  9977  001E4E                     u4320:
  9978  001E4E  C044  F03D         	movff	___fladd@grs,??___fladd
  9979  001E52  0E7F               	movlw	127
  9980  001E54  163D               	andwf	??___fladd^0,f,c
  9981  001E56  B4D8               	btfsc	status,2,c
  9982  001E58  EF30  F00F         	goto	u4331
  9983  001E5C  EF32  F00F         	goto	u4330
  9984  001E60                     u4331:
  9985  001E60  EF36  F00F         	goto	l1253
  9986  001E64                     u4330:
  9987  001E64                     l4359:
  9988  001E64  0E01               	movlw	1
  9989  001E66  6E42               	movwf	___fladd@aexp^0,c
  9990  001E68  EF3F  F00F         	goto	l1252
  9991  001E6C                     l1253:
  9992  001E6C  A035               	btfss	___fladd@b^0,0,c
  9993  001E6E  EF3B  F00F         	goto	u4341
  9994  001E72  EF3D  F00F         	goto	u4340
  9995  001E76                     u4341:
  9996  001E76  EF3F  F00F         	goto	l1252
  9997  001E7A                     u4340:
  9998  001E7A  EF32  F00F         	goto	l4359
  9999  001E7E                     l1252:
 10000  001E7E  5042               	movf	___fladd@aexp^0,w,c
 10001  001E80  B4D8               	btfsc	status,2,c
 10002  001E82  EF45  F00F         	goto	u4351
 10003  001E86  EF47  F00F         	goto	u4350
 10004  001E8A                     u4351:
 10005  001E8A  EF72  F00F         	goto	l4371
 10006  001E8E                     u4350:
 10007  001E8E  0E01               	movlw	1
 10008  001E90  2635               	addwf	___fladd@b^0,f,c
 10009  001E92  0E00               	movlw	0
 10010  001E94  2236               	addwfc	(___fladd@b+1)^0,f,c
 10011  001E96  2237               	addwfc	(___fladd@b+2)^0,f,c
 10012  001E98  2238               	addwfc	(___fladd@b+3)^0,f,c
 10013  001E9A  A038               	btfss	(___fladd@b+3)^0,0,c
 10014  001E9C  EF52  F00F         	goto	u4361
 10015  001EA0  EF54  F00F         	goto	u4360
 10016  001EA4                     u4361:
 10017  001EA4  EF72  F00F         	goto	l4371
 10018  001EA8                     u4360:
 10019  001EA8  C035  F03D         	movff	___fladd@b,??___fladd
 10020  001EAC  C036  F03E         	movff	___fladd@b+1,??___fladd+1
 10021  001EB0  C037  F03F         	movff	___fladd@b+2,??___fladd+2
 10022  001EB4  C038  F040         	movff	___fladd@b+3,??___fladd+3
 10023  001EB8  3440               	rlcf	(??___fladd+3)^0,w,c
 10024  001EBA  3240               	rrcf	(??___fladd+3)^0,f,c
 10025  001EBC  323F               	rrcf	(??___fladd+2)^0,f,c
 10026  001EBE  323E               	rrcf	(??___fladd+1)^0,f,c
 10027  001EC0  323D               	rrcf	??___fladd^0,f,c
 10028  001EC2  C03D  F035         	movff	??___fladd,___fladd@b
 10029  001EC6  C03E  F036         	movff	??___fladd+1,___fladd@b+1
 10030  001ECA  C03F  F037         	movff	??___fladd+2,___fladd@b+2
 10031  001ECE  C040  F038         	movff	??___fladd+3,___fladd@b+3
 10032  001ED2  2843               	incf	___fladd@bexp^0,w,c
 10033  001ED4  B4D8               	btfsc	status,2,c
 10034  001ED6  EF6F  F00F         	goto	u4371
 10035  001EDA  EF71  F00F         	goto	u4370
 10036  001EDE                     u4371:
 10037  001EDE  EF72  F00F         	goto	l4371
 10038  001EE2                     u4370:
 10039  001EE2  2A43               	incf	___fladd@bexp^0,f,c
 10040  001EE4                     l4371:
 10041  001EE4  2843               	incf	___fladd@bexp^0,w,c
 10042  001EE6  B4D8               	btfsc	status,2,c
 10043  001EE8  EF78  F00F         	goto	u4381
 10044  001EEC  EF7A  F00F         	goto	u4380
 10045  001EF0                     u4381:
 10046  001EF0  EF82  F00F         	goto	l4375
 10047  001EF4                     u4380:
 10048  001EF4  5043               	movf	___fladd@bexp^0,w,c
 10049  001EF6  A4D8               	btfss	status,2,c
 10050  001EF8  EF80  F00F         	goto	u4391
 10051  001EFC  EF82  F00F         	goto	u4390
 10052  001F00                     u4391:
 10053  001F00  EF94  F00F         	goto	l4379
 10054  001F04                     u4390:
 10055  001F04                     l4375:
 10056  001F04  0E00               	movlw	0
 10057  001F06  6E35               	movwf	___fladd@b^0,c
 10058  001F08  0E00               	movlw	0
 10059  001F0A  6E36               	movwf	(___fladd@b+1)^0,c
 10060  001F0C  0E00               	movlw	0
 10061  001F0E  6E37               	movwf	(___fladd@b+2)^0,c
 10062  001F10  0E00               	movlw	0
 10063  001F12  6E38               	movwf	(___fladd@b+3)^0,c
 10064  001F14  5043               	movf	___fladd@bexp^0,w,c
 10065  001F16  A4D8               	btfss	status,2,c
 10066  001F18  EF90  F00F         	goto	u4401
 10067  001F1C  EF92  F00F         	goto	u4400
 10068  001F20                     u4401:
 10069  001F20  EF94  F00F         	goto	l4379
 10070  001F24                     u4400:
 10071  001F24  0E00               	movlw	0
 10072  001F26  6E41               	movwf	___fladd@signs^0,c
 10073  001F28                     l4379:
 10074  001F28  A043               	btfss	___fladd@bexp^0,0,c
 10075  001F2A  EF99  F00F         	goto	u4411
 10076  001F2E  EF9B  F00F         	goto	u4410
 10077  001F32                     u4411:
 10078  001F32  EF9E  F00F         	goto	l4383
 10079  001F36                     u4410:
 10080  001F36  8E37               	bsf	(___fladd@b+2)^0,7,c
 10081  001F38  EF9F  F00F         	goto	l4385
 10082  001F3C                     l4383:
 10083  001F3C  9E37               	bcf	(___fladd@b+2)^0,7,c
 10084  001F3E                     l4385:
 10085  001F3E  90D8               	bcf	status,0,c
 10086  001F40  3043               	rrcf	___fladd@bexp^0,w,c
 10087  001F42  6E38               	movwf	(___fladd@b+3)^0,c
 10088  001F44  AE41               	btfss	___fladd@signs^0,7,c
 10089  001F46  EFA7  F00F         	goto	u4421
 10090  001F4A  EFA9  F00F         	goto	u4420
 10091  001F4E                     u4421:
 10092  001F4E  EFAA  F00F         	goto	l4391
 10093  001F52                     u4420:
 10094  001F52  8E38               	bsf	(___fladd@b+3)^0,7,c
 10095  001F54                     l4391:
 10096  001F54  C035  F035         	movff	___fladd@b,?___fladd
 10097  001F58  C036  F036         	movff	___fladd@b+1,?___fladd+1
 10098  001F5C  C037  F037         	movff	___fladd@b+2,?___fladd+2
 10099  001F60  C038  F038         	movff	___fladd@b+3,?___fladd+3
 10100  001F64                     l1235:
 10101  001F64  0012               	return		;funcret
 10102  001F66                     __end_of___fladd:
 10103                           	callstack 0
 10104                           
 10105 ;; *************** function ___flneg *****************
 10106 ;; Defined at:
 10107 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
 10108 ;; Parameters:    Size  Location     Type
 10109 ;;  f1              4    0[COMRAM] unsigned char 
 10110 ;; Auto vars:     Size  Location     Type
 10111 ;;		None
 10112 ;; Return value:  Size  Location     Type
 10113 ;;                  4    0[COMRAM] unsigned char 
 10114 ;; Registers used:
 10115 ;;		wreg, status,2, status,0
 10116 ;; Tracked objects:
 10117 ;;		On entry : 0/0
 10118 ;;		On exit  : 0/0
 10119 ;;		Unchanged: 0/0
 10120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10121 ;;      Params:         4       0       0       0       0       0       0
 10122 ;;      Locals:         0       0       0       0       0       0       0
 10123 ;;      Temps:          0       0       0       0       0       0       0
 10124 ;;      Totals:         4       0       0       0       0       0       0
 10125 ;;Total ram usage:        4 bytes
 10126 ;; Hardware stack levels used:    1
 10127 ;; Hardware stack levels required when called:    1
 10128 ;; This function calls:
 10129 ;;		Nothing
 10130 ;; This function is called by:
 10131 ;;		_efgtoa
 10132 ;; This function uses a non-reentrant model
 10133 ;;
 10134                           
 10135                           	psect	text33
 10136  005562                     __ptext33:
 10137                           	callstack 0
 10138  005562                     ___flneg:
 10139                           	callstack 22
 10140  005562  5001               	movf	___flneg@f1^0,w,c
 10141  005564  1002               	iorwf	(___flneg@f1+1)^0,w,c
 10142  005566  1003               	iorwf	(___flneg@f1+2)^0,w,c
 10143  005568  1004               	iorwf	(___flneg@f1+3)^0,w,c
 10144  00556A  B4D8               	btfsc	status,2,c
 10145  00556C  EFBA  F02A         	goto	u5221
 10146  005570  EFBC  F02A         	goto	u5220
 10147  005574                     u5221:
 10148  005574  EFC4  F02A         	goto	l4899
 10149  005578                     u5220:
 10150  005578  0E00               	movlw	0
 10151  00557A  1A01               	xorwf	___flneg@f1^0,f,c
 10152  00557C  0E00               	movlw	0
 10153  00557E  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 10154  005580  0E00               	movlw	0
 10155  005582  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 10156  005584  0E80               	movlw	128
 10157  005586  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 10158  005588                     l4899:
 10159  005588  C001  F001         	movff	___flneg@f1,?___flneg
 10160  00558C  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 10161  005590  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 10162  005594  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 10163  005598  0012               	return		;funcret
 10164  00559A                     __end_of___flneg:
 10165                           	callstack 0
 10166                           
 10167 ;; *************** function ___flmul *****************
 10168 ;; Defined at:
 10169 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
 10170 ;; Parameters:    Size  Location     Type
 10171 ;;  b               4   27[COMRAM] unsigned char 
 10172 ;;  a               4   31[COMRAM] unsigned char 
 10173 ;; Auto vars:     Size  Location     Type
 10174 ;;  prod            4   46[COMRAM] struct .
 10175 ;;  grs             4   40[COMRAM] unsigned long 
 10176 ;;  temp            2   50[COMRAM] struct .
 10177 ;;  bexp            1   45[COMRAM] unsigned char 
 10178 ;;  aexp            1   44[COMRAM] unsigned char 
 10179 ;;  sign            1   39[COMRAM] unsigned char 
 10180 ;; Return value:  Size  Location     Type
 10181 ;;                  4   27[COMRAM] unsigned char 
 10182 ;; Registers used:
 10183 ;;		wreg, status,2, status,0, prodl, prodh
 10184 ;; Tracked objects:
 10185 ;;		On entry : 0/0
 10186 ;;		On exit  : 0/0
 10187 ;;		Unchanged: 0/0
 10188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10189 ;;      Params:         8       0       0       0       0       0       0
 10190 ;;      Locals:        13       0       0       0       0       0       0
 10191 ;;      Temps:          4       0       0       0       0       0       0
 10192 ;;      Totals:        25       0       0       0       0       0       0
 10193 ;;Total ram usage:       25 bytes
 10194 ;; Hardware stack levels used:    1
 10195 ;; Hardware stack levels required when called:    1
 10196 ;; This function calls:
 10197 ;;		Nothing
 10198 ;; This function is called by:
 10199 ;;		_scanAdcConversion
 10200 ;;		_speedControl
 10201 ;;		_efgtoa
 10202 ;; This function uses a non-reentrant model
 10203 ;;
 10204                           
 10205                           	psect	text34
 10206  001F66                     __ptext34:
 10207                           	callstack 0
 10208  001F66                     ___flmul:
 10209                           	callstack 22
 10210  001F66  501F               	movf	(___flmul@b+3)^0,w,c
 10211  001F68  0B80               	andlw	128
 10212  001F6A  6E28               	movwf	___flmul@sign^0,c
 10213  001F6C  501F               	movf	(___flmul@b+3)^0,w,c
 10214  001F6E  241F               	addwf	(___flmul@b+3)^0,w,c
 10215  001F70  6E2E               	movwf	___flmul@bexp^0,c
 10216  001F72  AE1E               	btfss	(___flmul@b+2)^0,7,c
 10217  001F74  EFBE  F00F         	goto	u4831
 10218  001F78  EFC0  F00F         	goto	u4830
 10219  001F7C                     u4831:
 10220  001F7C  EFC1  F00F         	goto	l4647
 10221  001F80                     u4830:
 10222  001F80  802E               	bsf	___flmul@bexp^0,0,c
 10223  001F82                     l4647:
 10224  001F82  502E               	movf	___flmul@bexp^0,w,c
 10225  001F84  B4D8               	btfsc	status,2,c
 10226  001F86  EFC7  F00F         	goto	u4841
 10227  001F8A  EFC9  F00F         	goto	u4840
 10228  001F8E                     u4841:
 10229  001F8E  EFDC  F00F         	goto	l4655
 10230  001F92                     u4840:
 10231  001F92  282E               	incf	___flmul@bexp^0,w,c
 10232  001F94  A4D8               	btfss	status,2,c
 10233  001F96  EFCF  F00F         	goto	u4851
 10234  001F9A  EFD1  F00F         	goto	u4850
 10235  001F9E                     u4851:
 10236  001F9E  EFD9  F00F         	goto	l4653
 10237  001FA2                     u4850:
 10238  001FA2  0E00               	movlw	0
 10239  001FA4  6E1C               	movwf	___flmul@b^0,c
 10240  001FA6  0E00               	movlw	0
 10241  001FA8  6E1D               	movwf	(___flmul@b+1)^0,c
 10242  001FAA  0E00               	movlw	0
 10243  001FAC  6E1E               	movwf	(___flmul@b+2)^0,c
 10244  001FAE  0E00               	movlw	0
 10245  001FB0  6E1F               	movwf	(___flmul@b+3)^0,c
 10246  001FB2                     l4653:
 10247  001FB2  8E1E               	bsf	(___flmul@b+2)^0,7,c
 10248  001FB4  EFE4  F00F         	goto	l4657
 10249  001FB8                     l4655:
 10250  001FB8  0E00               	movlw	0
 10251  001FBA  6E1C               	movwf	___flmul@b^0,c
 10252  001FBC  0E00               	movlw	0
 10253  001FBE  6E1D               	movwf	(___flmul@b+1)^0,c
 10254  001FC0  0E00               	movlw	0
 10255  001FC2  6E1E               	movwf	(___flmul@b+2)^0,c
 10256  001FC4  0E00               	movlw	0
 10257  001FC6  6E1F               	movwf	(___flmul@b+3)^0,c
 10258  001FC8                     l4657:
 10259  001FC8  5023               	movf	(___flmul@a+3)^0,w,c
 10260  001FCA  0B80               	andlw	128
 10261  001FCC  1A28               	xorwf	___flmul@sign^0,f,c
 10262  001FCE  5023               	movf	(___flmul@a+3)^0,w,c
 10263  001FD0  2423               	addwf	(___flmul@a+3)^0,w,c
 10264  001FD2  6E2D               	movwf	___flmul@aexp^0,c
 10265  001FD4  AE22               	btfss	(___flmul@a+2)^0,7,c
 10266  001FD6  EFEF  F00F         	goto	u4861
 10267  001FDA  EFF1  F00F         	goto	u4860
 10268  001FDE                     u4861:
 10269  001FDE  EFF2  F00F         	goto	l4665
 10270  001FE2                     u4860:
 10271  001FE2  802D               	bsf	___flmul@aexp^0,0,c
 10272  001FE4                     l4665:
 10273  001FE4  502D               	movf	___flmul@aexp^0,w,c
 10274  001FE6  B4D8               	btfsc	status,2,c
 10275  001FE8  EFF8  F00F         	goto	u4871
 10276  001FEC  EFFA  F00F         	goto	u4870
 10277  001FF0                     u4871:
 10278  001FF0  EF0D  F010         	goto	l4673
 10279  001FF4                     u4870:
 10280  001FF4  282D               	incf	___flmul@aexp^0,w,c
 10281  001FF6  A4D8               	btfss	status,2,c
 10282  001FF8  EF00  F010         	goto	u4881
 10283  001FFC  EF02  F010         	goto	u4880
 10284  002000                     u4881:
 10285  002000  EF0A  F010         	goto	l4671
 10286  002004                     u4880:
 10287  002004  0E00               	movlw	0
 10288  002006  6E20               	movwf	___flmul@a^0,c
 10289  002008  0E00               	movlw	0
 10290  00200A  6E21               	movwf	(___flmul@a+1)^0,c
 10291  00200C  0E00               	movlw	0
 10292  00200E  6E22               	movwf	(___flmul@a+2)^0,c
 10293  002010  0E00               	movlw	0
 10294  002012  6E23               	movwf	(___flmul@a+3)^0,c
 10295  002014                     l4671:
 10296  002014  8E22               	bsf	(___flmul@a+2)^0,7,c
 10297  002016  EF15  F010         	goto	l1312
 10298  00201A                     l4673:
 10299  00201A  0E00               	movlw	0
 10300  00201C  6E20               	movwf	___flmul@a^0,c
 10301  00201E  0E00               	movlw	0
 10302  002020  6E21               	movwf	(___flmul@a+1)^0,c
 10303  002022  0E00               	movlw	0
 10304  002024  6E22               	movwf	(___flmul@a+2)^0,c
 10305  002026  0E00               	movlw	0
 10306  002028  6E23               	movwf	(___flmul@a+3)^0,c
 10307  00202A                     l1312:
 10308  00202A  502D               	movf	___flmul@aexp^0,w,c
 10309  00202C  B4D8               	btfsc	status,2,c
 10310  00202E  EF1B  F010         	goto	u4891
 10311  002032  EF1D  F010         	goto	u4890
 10312  002036                     u4891:
 10313  002036  EF25  F010         	goto	l4677
 10314  00203A                     u4890:
 10315  00203A  502E               	movf	___flmul@bexp^0,w,c
 10316  00203C  A4D8               	btfss	status,2,c
 10317  00203E  EF23  F010         	goto	u4901
 10318  002042  EF25  F010         	goto	u4900
 10319  002046                     u4901:
 10320  002046  EF2F  F010         	goto	l4681
 10321  00204A                     u4900:
 10322  00204A                     l4677:
 10323  00204A  0E00               	movlw	0
 10324  00204C  6E1C               	movwf	?___flmul^0,c
 10325  00204E  0E00               	movlw	0
 10326  002050  6E1D               	movwf	(?___flmul+1)^0,c
 10327  002052  0E00               	movlw	0
 10328  002054  6E1E               	movwf	(?___flmul+2)^0,c
 10329  002056  0E00               	movlw	0
 10330  002058  6E1F               	movwf	(?___flmul+3)^0,c
 10331  00205A  EFC7  F011         	goto	l1316
 10332  00205E                     l4681:
 10333  00205E  5022               	movf	(___flmul@a+2)^0,w,c
 10334  002060  021C               	mulwf	___flmul@b^0,c
 10335  002062  CFF3 F033          	movff	prodl,___flmul@temp
 10336  002066  CFF4 F034          	movff	prodh,___flmul@temp+1
 10337  00206A  5033               	movf	___flmul@temp^0,w,c
 10338  00206C  6E29               	movwf	___flmul@grs^0,c
 10339  00206E  6A2A               	clrf	(___flmul@grs+1)^0,c
 10340  002070  6A2B               	clrf	(___flmul@grs+2)^0,c
 10341  002072  6A2C               	clrf	(___flmul@grs+3)^0,c
 10342  002074  5034               	movf	(___flmul@temp+1)^0,w,c
 10343  002076  6E2F               	movwf	___flmul@prod^0,c
 10344  002078  6A30               	clrf	(___flmul@prod+1)^0,c
 10345  00207A  6A31               	clrf	(___flmul@prod+2)^0,c
 10346  00207C  6A32               	clrf	(___flmul@prod+3)^0,c
 10347  00207E  5021               	movf	(___flmul@a+1)^0,w,c
 10348  002080  021D               	mulwf	(___flmul@b+1)^0,c
 10349  002082  CFF3 F033          	movff	prodl,___flmul@temp
 10350  002086  CFF4 F034          	movff	prodh,___flmul@temp+1
 10351  00208A  5033               	movf	___flmul@temp^0,w,c
 10352  00208C  2629               	addwf	___flmul@grs^0,f,c
 10353  00208E  0E00               	movlw	0
 10354  002090  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10355  002092  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10356  002094  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10357  002096  5034               	movf	(___flmul@temp+1)^0,w,c
 10358  002098  262F               	addwf	___flmul@prod^0,f,c
 10359  00209A  0E00               	movlw	0
 10360  00209C  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10361  00209E  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10362  0020A0  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10363  0020A2  5020               	movf	___flmul@a^0,w,c
 10364  0020A4  021E               	mulwf	(___flmul@b+2)^0,c
 10365  0020A6  CFF3 F033          	movff	prodl,___flmul@temp
 10366  0020AA  CFF4 F034          	movff	prodh,___flmul@temp+1
 10367  0020AE  5033               	movf	___flmul@temp^0,w,c
 10368  0020B0  2629               	addwf	___flmul@grs^0,f,c
 10369  0020B2  0E00               	movlw	0
 10370  0020B4  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10371  0020B6  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10372  0020B8  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10373  0020BA  5034               	movf	(___flmul@temp+1)^0,w,c
 10374  0020BC  262F               	addwf	___flmul@prod^0,f,c
 10375  0020BE  0E00               	movlw	0
 10376  0020C0  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10377  0020C2  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10378  0020C4  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10379  0020C6  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 10380  0020CA  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 10381  0020CE  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 10382  0020D2  6A29               	clrf	___flmul@grs^0,c
 10383  0020D4  5020               	movf	___flmul@a^0,w,c
 10384  0020D6  021D               	mulwf	(___flmul@b+1)^0,c
 10385  0020D8  CFF3 F033          	movff	prodl,___flmul@temp
 10386  0020DC  CFF4 F034          	movff	prodh,___flmul@temp+1
 10387  0020E0  5033               	movf	___flmul@temp^0,w,c
 10388  0020E2  2629               	addwf	___flmul@grs^0,f,c
 10389  0020E4  5034               	movf	(___flmul@temp+1)^0,w,c
 10390  0020E6  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10391  0020E8  0E00               	movlw	0
 10392  0020EA  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10393  0020EC  0E00               	movlw	0
 10394  0020EE  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10395  0020F0  5021               	movf	(___flmul@a+1)^0,w,c
 10396  0020F2  021C               	mulwf	___flmul@b^0,c
 10397  0020F4  CFF3 F033          	movff	prodl,___flmul@temp
 10398  0020F8  CFF4 F034          	movff	prodh,___flmul@temp+1
 10399  0020FC  5033               	movf	___flmul@temp^0,w,c
 10400  0020FE  2629               	addwf	___flmul@grs^0,f,c
 10401  002100  5034               	movf	(___flmul@temp+1)^0,w,c
 10402  002102  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10403  002104  0E00               	movlw	0
 10404  002106  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10405  002108  0E00               	movlw	0
 10406  00210A  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10407  00210C  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 10408  002110  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 10409  002114  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 10410  002118  6A29               	clrf	___flmul@grs^0,c
 10411  00211A  5020               	movf	___flmul@a^0,w,c
 10412  00211C  021C               	mulwf	___flmul@b^0,c
 10413  00211E  CFF3 F033          	movff	prodl,___flmul@temp
 10414  002122  CFF4 F034          	movff	prodh,___flmul@temp+1
 10415  002126  5033               	movf	___flmul@temp^0,w,c
 10416  002128  2629               	addwf	___flmul@grs^0,f,c
 10417  00212A  5034               	movf	(___flmul@temp+1)^0,w,c
 10418  00212C  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10419  00212E  0E00               	movlw	0
 10420  002130  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10421  002132  0E00               	movlw	0
 10422  002134  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10423  002136  5022               	movf	(___flmul@a+2)^0,w,c
 10424  002138  021D               	mulwf	(___flmul@b+1)^0,c
 10425  00213A  CFF3 F033          	movff	prodl,___flmul@temp
 10426  00213E  CFF4 F034          	movff	prodh,___flmul@temp+1
 10427  002142  5033               	movf	___flmul@temp^0,w,c
 10428  002144  262F               	addwf	___flmul@prod^0,f,c
 10429  002146  5034               	movf	(___flmul@temp+1)^0,w,c
 10430  002148  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10431  00214A  0E00               	movlw	0
 10432  00214C  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10433  00214E  0E00               	movlw	0
 10434  002150  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10435  002152  5021               	movf	(___flmul@a+1)^0,w,c
 10436  002154  021E               	mulwf	(___flmul@b+2)^0,c
 10437  002156  CFF3 F033          	movff	prodl,___flmul@temp
 10438  00215A  CFF4 F034          	movff	prodh,___flmul@temp+1
 10439  00215E  5033               	movf	___flmul@temp^0,w,c
 10440  002160  262F               	addwf	___flmul@prod^0,f,c
 10441  002162  5034               	movf	(___flmul@temp+1)^0,w,c
 10442  002164  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10443  002166  0E00               	movlw	0
 10444  002168  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10445  00216A  0E00               	movlw	0
 10446  00216C  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10447  00216E  5022               	movf	(___flmul@a+2)^0,w,c
 10448  002170  021E               	mulwf	(___flmul@b+2)^0,c
 10449  002172  CFF3 F033          	movff	prodl,___flmul@temp
 10450  002176  CFF4 F034          	movff	prodh,___flmul@temp+1
 10451  00217A  5033               	movf	___flmul@temp^0,w,c
 10452  00217C  6E24               	movwf	??___flmul^0,c
 10453  00217E  5034               	movf	(___flmul@temp+1)^0,w,c
 10454  002180  6E25               	movwf	(??___flmul+1)^0,c
 10455  002182  6A26               	clrf	(??___flmul+2)^0,c
 10456  002184  6A27               	clrf	(??___flmul+3)^0,c
 10457  002186  C026  F027         	movff	??___flmul+2,??___flmul+3
 10458  00218A  C025  F026         	movff	??___flmul+1,??___flmul+2
 10459  00218E  C024  F025         	movff	??___flmul,??___flmul+1
 10460  002192  6A24               	clrf	??___flmul^0,c
 10461  002194  5024               	movf	??___flmul^0,w,c
 10462  002196  262F               	addwf	___flmul@prod^0,f,c
 10463  002198  5025               	movf	(??___flmul+1)^0,w,c
 10464  00219A  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10465  00219C  5026               	movf	(??___flmul+2)^0,w,c
 10466  00219E  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10467  0021A0  5027               	movf	(??___flmul+3)^0,w,c
 10468  0021A2  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10469  0021A4  C029  F024         	movff	___flmul@grs,??___flmul
 10470  0021A8  C02A  F025         	movff	___flmul@grs+1,??___flmul+1
 10471  0021AC  C02B  F026         	movff	___flmul@grs+2,??___flmul+2
 10472  0021B0  C02C  F027         	movff	___flmul@grs+3,??___flmul+3
 10473  0021B4  0E19               	movlw	25
 10474  0021B6  EFE2  F010         	goto	u4910
 10475  0021BA                     u4915:
 10476  0021BA  90D8               	bcf	status,0,c
 10477  0021BC  3227               	rrcf	(??___flmul+3)^0,f,c
 10478  0021BE  3226               	rrcf	(??___flmul+2)^0,f,c
 10479  0021C0  3225               	rrcf	(??___flmul+1)^0,f,c
 10480  0021C2  3224               	rrcf	??___flmul^0,f,c
 10481  0021C4                     u4910:
 10482  0021C4  2EE8               	decfsz	wreg,f,c
 10483  0021C6  EFDD  F010         	goto	u4915
 10484  0021CA  5024               	movf	??___flmul^0,w,c
 10485  0021CC  262F               	addwf	___flmul@prod^0,f,c
 10486  0021CE  5025               	movf	(??___flmul+1)^0,w,c
 10487  0021D0  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10488  0021D2  5026               	movf	(??___flmul+2)^0,w,c
 10489  0021D4  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10490  0021D6  5027               	movf	(??___flmul+3)^0,w,c
 10491  0021D8  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10492  0021DA  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 10493  0021DE  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 10494  0021E2  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 10495  0021E6  6A29               	clrf	___flmul@grs^0,c
 10496  0021E8  502D               	movf	___flmul@aexp^0,w,c
 10497  0021EA  C02E  F024         	movff	___flmul@bexp,??___flmul
 10498  0021EE  6A25               	clrf	(??___flmul+1)^0,c
 10499  0021F0  2624               	addwf	??___flmul^0,f,c
 10500  0021F2  0E00               	movlw	0
 10501  0021F4  2225               	addwfc	(??___flmul+1)^0,f,c
 10502  0021F6  0E82               	movlw	130
 10503  0021F8  2424               	addwf	??___flmul^0,w,c
 10504  0021FA  6E33               	movwf	___flmul@temp^0,c
 10505  0021FC  0EFF               	movlw	255
 10506  0021FE  2025               	addwfc	(??___flmul+1)^0,w,c
 10507  002200  6E34               	movwf	(___flmul@temp+1)^0,c
 10508  002202  EF18  F011         	goto	l4729
 10509  002206                     l4723:
 10510  002206  90D8               	bcf	status,0,c
 10511  002208  362F               	rlcf	___flmul@prod^0,f,c
 10512  00220A  3630               	rlcf	(___flmul@prod+1)^0,f,c
 10513  00220C  3631               	rlcf	(___flmul@prod+2)^0,f,c
 10514  00220E  3632               	rlcf	(___flmul@prod+3)^0,f,c
 10515  002210  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 10516  002212  EF0D  F011         	goto	u4921
 10517  002216  EF0F  F011         	goto	u4920
 10518  00221A                     u4921:
 10519  00221A  EF10  F011         	goto	l1319
 10520  00221E                     u4920:
 10521  00221E  802F               	bsf	___flmul@prod^0,0,c
 10522  002220                     l1319:
 10523  002220  90D8               	bcf	status,0,c
 10524  002222  3629               	rlcf	___flmul@grs^0,f,c
 10525  002224  362A               	rlcf	(___flmul@grs+1)^0,f,c
 10526  002226  362B               	rlcf	(___flmul@grs+2)^0,f,c
 10527  002228  362C               	rlcf	(___flmul@grs+3)^0,f,c
 10528  00222A  0633               	decf	___flmul@temp^0,f,c
 10529  00222C  A0D8               	btfss	status,0,c
 10530  00222E  0634               	decf	(___flmul@temp+1)^0,f,c
 10531  002230                     l4729:
 10532  002230  AE31               	btfss	(___flmul@prod+2)^0,7,c
 10533  002232  EF1D  F011         	goto	u4931
 10534  002236  EF1F  F011         	goto	u4930
 10535  00223A                     u4931:
 10536  00223A  EF03  F011         	goto	l4723
 10537  00223E                     u4930:
 10538  00223E  0E00               	movlw	0
 10539  002240  6E2D               	movwf	___flmul@aexp^0,c
 10540  002242  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 10541  002244  EF26  F011         	goto	u4941
 10542  002248  EF28  F011         	goto	u4940
 10543  00224C                     u4941:
 10544  00224C  EF4C  F011         	goto	l1321
 10545  002250                     u4940:
 10546  002250  0EFF               	movlw	255
 10547  002252  1429               	andwf	___flmul@grs^0,w,c
 10548  002254  6E24               	movwf	??___flmul^0,c
 10549  002256  0EFF               	movlw	255
 10550  002258  142A               	andwf	(___flmul@grs+1)^0,w,c
 10551  00225A  6E25               	movwf	(??___flmul+1)^0,c
 10552  00225C  0EFF               	movlw	255
 10553  00225E  142B               	andwf	(___flmul@grs+2)^0,w,c
 10554  002260  6E26               	movwf	(??___flmul+2)^0,c
 10555  002262  0E7F               	movlw	127
 10556  002264  142C               	andwf	(___flmul@grs+3)^0,w,c
 10557  002266  6E27               	movwf	(??___flmul+3)^0,c
 10558  002268  5024               	movf	??___flmul^0,w,c
 10559  00226A  1025               	iorwf	(??___flmul+1)^0,w,c
 10560  00226C  1026               	iorwf	(??___flmul+2)^0,w,c
 10561  00226E  1027               	iorwf	(??___flmul+3)^0,w,c
 10562  002270  B4D8               	btfsc	status,2,c
 10563  002272  EF3D  F011         	goto	u4951
 10564  002276  EF3F  F011         	goto	u4950
 10565  00227A                     u4951:
 10566  00227A  EF43  F011         	goto	l1322
 10567  00227E                     u4950:
 10568  00227E                     l4737:
 10569  00227E  0E01               	movlw	1
 10570  002280  6E2D               	movwf	___flmul@aexp^0,c
 10571  002282  EF4C  F011         	goto	l1321
 10572  002286                     l1322:
 10573  002286  A02F               	btfss	___flmul@prod^0,0,c
 10574  002288  EF48  F011         	goto	u4961
 10575  00228C  EF4A  F011         	goto	u4960
 10576  002290                     u4961:
 10577  002290  EF4C  F011         	goto	l1321
 10578  002294                     u4960:
 10579  002294  EF3F  F011         	goto	l4737
 10580  002298                     l1321:
 10581  002298  502D               	movf	___flmul@aexp^0,w,c
 10582  00229A  B4D8               	btfsc	status,2,c
 10583  00229C  EF52  F011         	goto	u4971
 10584  0022A0  EF54  F011         	goto	u4970
 10585  0022A4                     u4971:
 10586  0022A4  EF78  F011         	goto	l4749
 10587  0022A8                     u4970:
 10588  0022A8  0E01               	movlw	1
 10589  0022AA  262F               	addwf	___flmul@prod^0,f,c
 10590  0022AC  0E00               	movlw	0
 10591  0022AE  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10592  0022B0  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10593  0022B2  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10594  0022B4  A032               	btfss	(___flmul@prod+3)^0,0,c
 10595  0022B6  EF5F  F011         	goto	u4981
 10596  0022BA  EF61  F011         	goto	u4980
 10597  0022BE                     u4981:
 10598  0022BE  EF78  F011         	goto	l4749
 10599  0022C2                     u4980:
 10600  0022C2  C02F  F024         	movff	___flmul@prod,??___flmul
 10601  0022C6  C030  F025         	movff	___flmul@prod+1,??___flmul+1
 10602  0022CA  C031  F026         	movff	___flmul@prod+2,??___flmul+2
 10603  0022CE  C032  F027         	movff	___flmul@prod+3,??___flmul+3
 10604  0022D2  3427               	rlcf	(??___flmul+3)^0,w,c
 10605  0022D4  3227               	rrcf	(??___flmul+3)^0,f,c
 10606  0022D6  3226               	rrcf	(??___flmul+2)^0,f,c
 10607  0022D8  3225               	rrcf	(??___flmul+1)^0,f,c
 10608  0022DA  3224               	rrcf	??___flmul^0,f,c
 10609  0022DC  C024  F02F         	movff	??___flmul,___flmul@prod
 10610  0022E0  C025  F030         	movff	??___flmul+1,___flmul@prod+1
 10611  0022E4  C026  F031         	movff	??___flmul+2,___flmul@prod+2
 10612  0022E8  C027  F032         	movff	??___flmul+3,___flmul@prod+3
 10613  0022EC  4A33               	infsnz	___flmul@temp^0,f,c
 10614  0022EE  2A34               	incf	(___flmul@temp+1)^0,f,c
 10615  0022F0                     l4749:
 10616  0022F0  BE34               	btfsc	(___flmul@temp+1)^0,7,c
 10617  0022F2  EF83  F011         	goto	u4991
 10618  0022F6  5034               	movf	(___flmul@temp+1)^0,w,c
 10619  0022F8  E108               	bnz	u4990
 10620  0022FA  2833               	incf	___flmul@temp^0,w,c
 10621  0022FC  A0D8               	btfss	status,0,c
 10622  0022FE  EF83  F011         	goto	u4991
 10623  002302  EF85  F011         	goto	u4990
 10624  002306                     u4991:
 10625  002306  EF8F  F011         	goto	l4753
 10626  00230A                     u4990:
 10627  00230A  0E00               	movlw	0
 10628  00230C  6E2F               	movwf	___flmul@prod^0,c
 10629  00230E  0E00               	movlw	0
 10630  002310  6E30               	movwf	(___flmul@prod+1)^0,c
 10631  002312  0E80               	movlw	128
 10632  002314  6E31               	movwf	(___flmul@prod+2)^0,c
 10633  002316  0E7F               	movlw	127
 10634  002318  6E32               	movwf	(___flmul@prod+3)^0,c
 10635  00231A  EFBD  F011         	goto	l4765
 10636  00231E                     l4753:
 10637  00231E  BE34               	btfsc	(___flmul@temp+1)^0,7,c
 10638  002320  EF9C  F011         	goto	u5000
 10639  002324  5034               	movf	(___flmul@temp+1)^0,w,c
 10640  002326  E106               	bnz	u5001
 10641  002328  0433               	decf	___flmul@temp^0,w,c
 10642  00232A  B0D8               	btfsc	status,0,c
 10643  00232C  EF9A  F011         	goto	u5001
 10644  002330  EF9C  F011         	goto	u5000
 10645  002334                     u5001:
 10646  002334  EFA8  F011         	goto	l1329
 10647  002338                     u5000:
 10648  002338  0E00               	movlw	0
 10649  00233A  6E2F               	movwf	___flmul@prod^0,c
 10650  00233C  0E00               	movlw	0
 10651  00233E  6E30               	movwf	(___flmul@prod+1)^0,c
 10652  002340  0E00               	movlw	0
 10653  002342  6E31               	movwf	(___flmul@prod+2)^0,c
 10654  002344  0E00               	movlw	0
 10655  002346  6E32               	movwf	(___flmul@prod+3)^0,c
 10656  002348  0E00               	movlw	0
 10657  00234A  6E28               	movwf	___flmul@sign^0,c
 10658  00234C  EFBD  F011         	goto	l4765
 10659  002350                     l1329:
 10660  002350  C033  F02E         	movff	___flmul@temp,___flmul@bexp
 10661  002354  0EFF               	movlw	255
 10662  002356  162F               	andwf	___flmul@prod^0,f,c
 10663  002358  0EFF               	movlw	255
 10664  00235A  1630               	andwf	(___flmul@prod+1)^0,f,c
 10665  00235C  0E7F               	movlw	127
 10666  00235E  1631               	andwf	(___flmul@prod+2)^0,f,c
 10667  002360  0E00               	movlw	0
 10668  002362  1632               	andwf	(___flmul@prod+3)^0,f,c
 10669  002364  A02E               	btfss	___flmul@bexp^0,0,c
 10670  002366  EFB7  F011         	goto	u5011
 10671  00236A  EFB9  F011         	goto	u5010
 10672  00236E                     u5011:
 10673  00236E  EFBA  F011         	goto	l4763
 10674  002372                     u5010:
 10675  002372  8E31               	bsf	(___flmul@prod+2)^0,7,c
 10676  002374                     l4763:
 10677  002374  90D8               	bcf	status,0,c
 10678  002376  302E               	rrcf	___flmul@bexp^0,w,c
 10679  002378  6E32               	movwf	(___flmul@prod+3)^0,c
 10680  00237A                     l4765:
 10681  00237A  5028               	movf	___flmul@sign^0,w,c
 10682  00237C  1232               	iorwf	(___flmul@prod+3)^0,f,c
 10683  00237E  C02F  F01C         	movff	___flmul@prod,?___flmul
 10684  002382  C030  F01D         	movff	___flmul@prod+1,?___flmul+1
 10685  002386  C031  F01E         	movff	___flmul@prod+2,?___flmul+2
 10686  00238A  C032  F01F         	movff	___flmul@prod+3,?___flmul+3
 10687  00238E                     l1316:
 10688  00238E  0012               	return		;funcret
 10689  002390                     __end_of___flmul:
 10690                           	callstack 0
 10691                           
 10692 ;; *************** function ___flge *****************
 10693 ;; Defined at:
 10694 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
 10695 ;; Parameters:    Size  Location     Type
 10696 ;;  ff1             4   52[COMRAM] unsigned char 
 10697 ;;  ff2             4   56[COMRAM] unsigned char 
 10698 ;; Auto vars:     Size  Location     Type
 10699 ;;		None
 10700 ;; Return value:  Size  Location     Type
 10701 ;;		None               void
 10702 ;; Registers used:
 10703 ;;		wreg, status,2, status,0
 10704 ;; Tracked objects:
 10705 ;;		On entry : 0/0
 10706 ;;		On exit  : 0/0
 10707 ;;		Unchanged: 0/0
 10708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10709 ;;      Params:         8       0       0       0       0       0       0
 10710 ;;      Locals:         0       0       0       0       0       0       0
 10711 ;;      Temps:          4       0       0       0       0       0       0
 10712 ;;      Totals:        12       0       0       0       0       0       0
 10713 ;;Total ram usage:       12 bytes
 10714 ;; Hardware stack levels used:    1
 10715 ;; Hardware stack levels required when called:    1
 10716 ;; This function calls:
 10717 ;;		Nothing
 10718 ;; This function is called by:
 10719 ;;		_secretMenu
 10720 ;;		_efgtoa
 10721 ;; This function uses a non-reentrant model
 10722 ;;
 10723                           
 10724                           	psect	text35
 10725  0043D8                     __ptext35:
 10726                           	callstack 0
 10727  0043D8                     ___flge:
 10728                           	callstack 22
 10729  0043D8  0E00               	movlw	0
 10730  0043DA  1435               	andwf	___flge@ff1^0,w,c
 10731  0043DC  6E3D               	movwf	??___flge^0,c
 10732  0043DE  0E00               	movlw	0
 10733  0043E0  1436               	andwf	(___flge@ff1+1)^0,w,c
 10734  0043E2  6E3E               	movwf	(??___flge+1)^0,c
 10735  0043E4  0E80               	movlw	128
 10736  0043E6  1437               	andwf	(___flge@ff1+2)^0,w,c
 10737  0043E8  6E3F               	movwf	(??___flge+2)^0,c
 10738  0043EA  0E7F               	movlw	127
 10739  0043EC  1438               	andwf	(___flge@ff1+3)^0,w,c
 10740  0043EE  6E40               	movwf	(??___flge+3)^0,c
 10741  0043F0  503D               	movf	??___flge^0,w,c
 10742  0043F2  103E               	iorwf	(??___flge+1)^0,w,c
 10743  0043F4  103F               	iorwf	(??___flge+2)^0,w,c
 10744  0043F6  1040               	iorwf	(??___flge+3)^0,w,c
 10745  0043F8  A4D8               	btfss	status,2,c
 10746  0043FA  EF01  F022         	goto	u5171
 10747  0043FE  EF03  F022         	goto	u5170
 10748  004402                     u5171:
 10749  004402  EF0B  F022         	goto	l4877
 10750  004406                     u5170:
 10751  004406  0E00               	movlw	0
 10752  004408  6E35               	movwf	___flge@ff1^0,c
 10753  00440A  0E00               	movlw	0
 10754  00440C  6E36               	movwf	(___flge@ff1+1)^0,c
 10755  00440E  0E00               	movlw	0
 10756  004410  6E37               	movwf	(___flge@ff1+2)^0,c
 10757  004412  0E00               	movlw	0
 10758  004414  6E38               	movwf	(___flge@ff1+3)^0,c
 10759  004416                     l4877:
 10760  004416  0E00               	movlw	0
 10761  004418  1439               	andwf	___flge@ff2^0,w,c
 10762  00441A  6E3D               	movwf	??___flge^0,c
 10763  00441C  0E00               	movlw	0
 10764  00441E  143A               	andwf	(___flge@ff2+1)^0,w,c
 10765  004420  6E3E               	movwf	(??___flge+1)^0,c
 10766  004422  0E80               	movlw	128
 10767  004424  143B               	andwf	(___flge@ff2+2)^0,w,c
 10768  004426  6E3F               	movwf	(??___flge+2)^0,c
 10769  004428  0E7F               	movlw	127
 10770  00442A  143C               	andwf	(___flge@ff2+3)^0,w,c
 10771  00442C  6E40               	movwf	(??___flge+3)^0,c
 10772  00442E  503D               	movf	??___flge^0,w,c
 10773  004430  103E               	iorwf	(??___flge+1)^0,w,c
 10774  004432  103F               	iorwf	(??___flge+2)^0,w,c
 10775  004434  1040               	iorwf	(??___flge+3)^0,w,c
 10776  004436  A4D8               	btfss	status,2,c
 10777  004438  EF20  F022         	goto	u5181
 10778  00443C  EF22  F022         	goto	u5180
 10779  004440                     u5181:
 10780  004440  EF2A  F022         	goto	l4881
 10781  004444                     u5180:
 10782  004444  0E00               	movlw	0
 10783  004446  6E39               	movwf	___flge@ff2^0,c
 10784  004448  0E00               	movlw	0
 10785  00444A  6E3A               	movwf	(___flge@ff2+1)^0,c
 10786  00444C  0E00               	movlw	0
 10787  00444E  6E3B               	movwf	(___flge@ff2+2)^0,c
 10788  004450  0E00               	movlw	0
 10789  004452  6E3C               	movwf	(___flge@ff2+3)^0,c
 10790  004454                     l4881:
 10791  004454  AE38               	btfss	(___flge@ff1+3)^0,7,c
 10792  004456  EF2F  F022         	goto	u5191
 10793  00445A  EF31  F022         	goto	u5190
 10794  00445E                     u5191:
 10795  00445E  EF3A  F022         	goto	l4885
 10796  004462                     u5190:
 10797  004462  6C35               	negf	___flge@ff1^0,c
 10798  004464  1E36               	comf	(___flge@ff1+1)^0,f,c
 10799  004466  B0D8               	btfsc	status,0,c
 10800  004468  2A36               	incf	(___flge@ff1+1)^0,f,c
 10801  00446A  1E37               	comf	(___flge@ff1+2)^0,f,c
 10802  00446C  B0D8               	btfsc	status,0,c
 10803  00446E  2A37               	incf	(___flge@ff1+2)^0,f,c
 10804  004470  0E80               	movlw	128
 10805  004472  5638               	subfwb	(___flge@ff1+3)^0,f,c
 10806  004474                     l4885:
 10807  004474  AE3C               	btfss	(___flge@ff2+3)^0,7,c
 10808  004476  EF3F  F022         	goto	u5201
 10809  00447A  EF41  F022         	goto	u5200
 10810  00447E                     u5201:
 10811  00447E  EF4A  F022         	goto	l963
 10812  004482                     u5200:
 10813  004482  6C39               	negf	___flge@ff2^0,c
 10814  004484  1E3A               	comf	(___flge@ff2+1)^0,f,c
 10815  004486  B0D8               	btfsc	status,0,c
 10816  004488  2A3A               	incf	(___flge@ff2+1)^0,f,c
 10817  00448A  1E3B               	comf	(___flge@ff2+2)^0,f,c
 10818  00448C  B0D8               	btfsc	status,0,c
 10819  00448E  2A3B               	incf	(___flge@ff2+2)^0,f,c
 10820  004490  0E80               	movlw	128
 10821  004492  563C               	subfwb	(___flge@ff2+3)^0,f,c
 10822  004494                     l963:
 10823  004494  0E00               	movlw	0
 10824  004496  1A35               	xorwf	___flge@ff1^0,f,c
 10825  004498  0E00               	movlw	0
 10826  00449A  1A36               	xorwf	(___flge@ff1+1)^0,f,c
 10827  00449C  0E00               	movlw	0
 10828  00449E  1A37               	xorwf	(___flge@ff1+2)^0,f,c
 10829  0044A0  0E80               	movlw	128
 10830  0044A2  1A38               	xorwf	(___flge@ff1+3)^0,f,c
 10831  0044A4  0E00               	movlw	0
 10832  0044A6  1A39               	xorwf	___flge@ff2^0,f,c
 10833  0044A8  0E00               	movlw	0
 10834  0044AA  1A3A               	xorwf	(___flge@ff2+1)^0,f,c
 10835  0044AC  0E00               	movlw	0
 10836  0044AE  1A3B               	xorwf	(___flge@ff2+2)^0,f,c
 10837  0044B0  0E80               	movlw	128
 10838  0044B2  1A3C               	xorwf	(___flge@ff2+3)^0,f,c
 10839  0044B4  5039               	movf	___flge@ff2^0,w,c
 10840  0044B6  5C35               	subwf	___flge@ff1^0,w,c
 10841  0044B8  503A               	movf	(___flge@ff2+1)^0,w,c
 10842  0044BA  5836               	subwfb	(___flge@ff1+1)^0,w,c
 10843  0044BC  503B               	movf	(___flge@ff2+2)^0,w,c
 10844  0044BE  5837               	subwfb	(___flge@ff1+2)^0,w,c
 10845  0044C0  503C               	movf	(___flge@ff2+3)^0,w,c
 10846  0044C2  5838               	subwfb	(___flge@ff1+3)^0,w,c
 10847  0044C4  B0D8               	btfsc	status,0,c
 10848  0044C6  EF67  F022         	goto	u5211
 10849  0044CA  EF69  F022         	goto	u5210
 10850  0044CE                     u5211:
 10851  0044CE  EF6C  F022         	goto	l4891
 10852  0044D2                     u5210:
 10853  0044D2  90D8               	bcf	status,0,c
 10854  0044D4  EF6D  F022         	goto	l968
 10855  0044D8                     l4891:
 10856  0044D8  80D8               	bsf	status,0,c
 10857  0044DA                     l968:
 10858  0044DA  0012               	return		;funcret
 10859  0044DC                     __end_of___flge:
 10860                           	callstack 0
 10861                           
 10862 ;; *************** function ___fleq *****************
 10863 ;; Defined at:
 10864 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fleq.c"
 10865 ;; Parameters:    Size  Location     Type
 10866 ;;  ff1             4    0[COMRAM] unsigned char 
 10867 ;;  ff2             4    4[COMRAM] unsigned char 
 10868 ;; Auto vars:     Size  Location     Type
 10869 ;;		None
 10870 ;; Return value:  Size  Location     Type
 10871 ;;		None               void
 10872 ;; Registers used:
 10873 ;;		wreg, status,2, status,0
 10874 ;; Tracked objects:
 10875 ;;		On entry : 0/0
 10876 ;;		On exit  : 0/0
 10877 ;;		Unchanged: 0/0
 10878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10879 ;;      Params:         8       0       0       0       0       0       0
 10880 ;;      Locals:         0       0       0       0       0       0       0
 10881 ;;      Temps:          4       0       0       0       0       0       0
 10882 ;;      Totals:        12       0       0       0       0       0       0
 10883 ;;Total ram usage:       12 bytes
 10884 ;; Hardware stack levels used:    1
 10885 ;; Hardware stack levels required when called:    1
 10886 ;; This function calls:
 10887 ;;		Nothing
 10888 ;; This function is called by:
 10889 ;;		_efgtoa
 10890 ;; This function uses a non-reentrant model
 10891 ;;
 10892                           
 10893                           	psect	text36
 10894  004B38                     __ptext36:
 10895                           	callstack 0
 10896  004B38                     ___fleq:
 10897                           	callstack 22
 10898  004B38  0E00               	movlw	0
 10899  004B3A  1401               	andwf	___fleq@ff1^0,w,c
 10900  004B3C  6E09               	movwf	??___fleq^0,c
 10901  004B3E  0E00               	movlw	0
 10902  004B40  1402               	andwf	(___fleq@ff1+1)^0,w,c
 10903  004B42  6E0A               	movwf	(??___fleq+1)^0,c
 10904  004B44  0E80               	movlw	128
 10905  004B46  1403               	andwf	(___fleq@ff1+2)^0,w,c
 10906  004B48  6E0B               	movwf	(??___fleq+2)^0,c
 10907  004B4A  0E7F               	movlw	127
 10908  004B4C  1404               	andwf	(___fleq@ff1+3)^0,w,c
 10909  004B4E  6E0C               	movwf	(??___fleq+3)^0,c
 10910  004B50  5009               	movf	??___fleq^0,w,c
 10911  004B52  100A               	iorwf	(??___fleq+1)^0,w,c
 10912  004B54  100B               	iorwf	(??___fleq+2)^0,w,c
 10913  004B56  100C               	iorwf	(??___fleq+3)^0,w,c
 10914  004B58  A4D8               	btfss	status,2,c
 10915  004B5A  EFB1  F025         	goto	u5141
 10916  004B5E  EFB3  F025         	goto	u5140
 10917  004B62                     u5141:
 10918  004B62  EFBB  F025         	goto	l4861
 10919  004B66                     u5140:
 10920  004B66  0E00               	movlw	0
 10921  004B68  6E01               	movwf	___fleq@ff1^0,c
 10922  004B6A  0E00               	movlw	0
 10923  004B6C  6E02               	movwf	(___fleq@ff1+1)^0,c
 10924  004B6E  0E00               	movlw	0
 10925  004B70  6E03               	movwf	(___fleq@ff1+2)^0,c
 10926  004B72  0E00               	movlw	0
 10927  004B74  6E04               	movwf	(___fleq@ff1+3)^0,c
 10928  004B76                     l4861:
 10929  004B76  0E00               	movlw	0
 10930  004B78  1405               	andwf	___fleq@ff2^0,w,c
 10931  004B7A  6E09               	movwf	??___fleq^0,c
 10932  004B7C  0E00               	movlw	0
 10933  004B7E  1406               	andwf	(___fleq@ff2+1)^0,w,c
 10934  004B80  6E0A               	movwf	(??___fleq+1)^0,c
 10935  004B82  0E80               	movlw	128
 10936  004B84  1407               	andwf	(___fleq@ff2+2)^0,w,c
 10937  004B86  6E0B               	movwf	(??___fleq+2)^0,c
 10938  004B88  0E7F               	movlw	127
 10939  004B8A  1408               	andwf	(___fleq@ff2+3)^0,w,c
 10940  004B8C  6E0C               	movwf	(??___fleq+3)^0,c
 10941  004B8E  5009               	movf	??___fleq^0,w,c
 10942  004B90  100A               	iorwf	(??___fleq+1)^0,w,c
 10943  004B92  100B               	iorwf	(??___fleq+2)^0,w,c
 10944  004B94  100C               	iorwf	(??___fleq+3)^0,w,c
 10945  004B96  A4D8               	btfss	status,2,c
 10946  004B98  EFD0  F025         	goto	u5151
 10947  004B9C  EFD2  F025         	goto	u5150
 10948  004BA0                     u5151:
 10949  004BA0  EFDA  F025         	goto	l4865
 10950  004BA4                     u5150:
 10951  004BA4  0E00               	movlw	0
 10952  004BA6  6E05               	movwf	___fleq@ff2^0,c
 10953  004BA8  0E00               	movlw	0
 10954  004BAA  6E06               	movwf	(___fleq@ff2+1)^0,c
 10955  004BAC  0E00               	movlw	0
 10956  004BAE  6E07               	movwf	(___fleq@ff2+2)^0,c
 10957  004BB0  0E00               	movlw	0
 10958  004BB2  6E08               	movwf	(___fleq@ff2+3)^0,c
 10959  004BB4                     l4865:
 10960  004BB4  5005               	movf	___fleq@ff2^0,w,c
 10961  004BB6  1801               	xorwf	___fleq@ff1^0,w,c
 10962  004BB8  E10F               	bnz	u5160
 10963  004BBA  5006               	movf	(___fleq@ff2+1)^0,w,c
 10964  004BBC  1802               	xorwf	(___fleq@ff1+1)^0,w,c
 10965  004BBE  E10C               	bnz	u5160
 10966  004BC0  5007               	movf	(___fleq@ff2+2)^0,w,c
 10967  004BC2  1803               	xorwf	(___fleq@ff1+2)^0,w,c
 10968  004BC4  E109               	bnz	u5160
 10969  004BC6  5008               	movf	(___fleq@ff2+3)^0,w,c
 10970  004BC8  1804               	xorwf	(___fleq@ff1+3)^0,w,c
 10971  004BCA  B4D8               	btfsc	status,2,c
 10972  004BCC  EFEA  F025         	goto	u5161
 10973  004BD0  EFEC  F025         	goto	u5160
 10974  004BD4                     u5161:
 10975  004BD4  EFEF  F025         	goto	l4869
 10976  004BD8                     u5160:
 10977  004BD8  90D8               	bcf	status,0,c
 10978  004BDA  EFF0  F025         	goto	l957
 10979  004BDE                     l4869:
 10980  004BDE  80D8               	bsf	status,0,c
 10981  004BE0                     l957:
 10982  004BE0  0012               	return		;funcret
 10983  004BE2                     __end_of___fleq:
 10984                           	callstack 0
 10985                           
 10986 ;; *************** function ___fldiv *****************
 10987 ;; Defined at:
 10988 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
 10989 ;; Parameters:    Size  Location     Type
 10990 ;;  b               4   52[COMRAM] unsigned char 
 10991 ;;  a               4   56[COMRAM] unsigned char 
 10992 ;; Auto vars:     Size  Location     Type
 10993 ;;  grs             4   71[COMRAM] unsigned long 
 10994 ;;  rem             4   64[COMRAM] unsigned long 
 10995 ;;  new_exp         2   69[COMRAM] short 
 10996 ;;  aexp            1   76[COMRAM] unsigned char 
 10997 ;;  bexp            1   75[COMRAM] unsigned char 
 10998 ;;  sign            1   68[COMRAM] unsigned char 
 10999 ;; Return value:  Size  Location     Type
 11000 ;;                  4   52[COMRAM] unsigned char 
 11001 ;; Registers used:
 11002 ;;		wreg, status,2, status,0
 11003 ;; Tracked objects:
 11004 ;;		On entry : 0/0
 11005 ;;		On exit  : 0/0
 11006 ;;		Unchanged: 0/0
 11007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11008 ;;      Params:         8       0       0       0       0       0       0
 11009 ;;      Locals:        13       0       0       0       0       0       0
 11010 ;;      Temps:          4       0       0       0       0       0       0
 11011 ;;      Totals:        25       0       0       0       0       0       0
 11012 ;;Total ram usage:       25 bytes
 11013 ;; Hardware stack levels used:    1
 11014 ;; Hardware stack levels required when called:    1
 11015 ;; This function calls:
 11016 ;;		Nothing
 11017 ;; This function is called by:
 11018 ;;		_scanAdcConversion
 11019 ;;		_efgtoa
 11020 ;; This function uses a non-reentrant model
 11021 ;;
 11022                           
 11023                           	psect	text37
 11024  002390                     __ptext37:
 11025                           	callstack 0
 11026  002390                     ___fldiv:
 11027                           	callstack 22
 11028  002390  5038               	movf	(___fldiv@b+3)^0,w,c
 11029  002392  0B80               	andlw	128
 11030  002394  6E45               	movwf	___fldiv@sign^0,c
 11031  002396  5038               	movf	(___fldiv@b+3)^0,w,c
 11032  002398  2438               	addwf	(___fldiv@b+3)^0,w,c
 11033  00239A  6E4C               	movwf	___fldiv@bexp^0,c
 11034  00239C  AE37               	btfss	(___fldiv@b+2)^0,7,c
 11035  00239E  EFD3  F011         	goto	u4601
 11036  0023A2  EFD5  F011         	goto	u4600
 11037  0023A6                     u4601:
 11038  0023A6  EFD6  F011         	goto	l4509
 11039  0023AA                     u4600:
 11040  0023AA  804C               	bsf	___fldiv@bexp^0,0,c
 11041  0023AC                     l4509:
 11042  0023AC  504C               	movf	___fldiv@bexp^0,w,c
 11043  0023AE  B4D8               	btfsc	status,2,c
 11044  0023B0  EFDC  F011         	goto	u4611
 11045  0023B4  EFDE  F011         	goto	u4610
 11046  0023B8                     u4611:
 11047  0023B8  EFF3  F011         	goto	l4519
 11048  0023BC                     u4610:
 11049  0023BC  284C               	incf	___fldiv@bexp^0,w,c
 11050  0023BE  A4D8               	btfss	status,2,c
 11051  0023C0  EFE4  F011         	goto	u4621
 11052  0023C4  EFE6  F011         	goto	u4620
 11053  0023C8                     u4621:
 11054  0023C8  EFEE  F011         	goto	l4515
 11055  0023CC                     u4620:
 11056  0023CC  0E00               	movlw	0
 11057  0023CE  6E35               	movwf	___fldiv@b^0,c
 11058  0023D0  0E00               	movlw	0
 11059  0023D2  6E36               	movwf	(___fldiv@b+1)^0,c
 11060  0023D4  0E00               	movlw	0
 11061  0023D6  6E37               	movwf	(___fldiv@b+2)^0,c
 11062  0023D8  0E00               	movlw	0
 11063  0023DA  6E38               	movwf	(___fldiv@b+3)^0,c
 11064  0023DC                     l4515:
 11065  0023DC  8E37               	bsf	(___fldiv@b+2)^0,7,c
 11066  0023DE  0E00               	movlw	0
 11067  0023E0  6E38               	movwf	(___fldiv@b+3)^0,c
 11068  0023E2  EFFB  F011         	goto	l4521
 11069  0023E6                     l4519:
 11070  0023E6  0E00               	movlw	0
 11071  0023E8  6E35               	movwf	___fldiv@b^0,c
 11072  0023EA  0E00               	movlw	0
 11073  0023EC  6E36               	movwf	(___fldiv@b+1)^0,c
 11074  0023EE  0E00               	movlw	0
 11075  0023F0  6E37               	movwf	(___fldiv@b+2)^0,c
 11076  0023F2  0E00               	movlw	0
 11077  0023F4  6E38               	movwf	(___fldiv@b+3)^0,c
 11078  0023F6                     l4521:
 11079  0023F6  503C               	movf	(___fldiv@a+3)^0,w,c
 11080  0023F8  0B80               	andlw	128
 11081  0023FA  1A45               	xorwf	___fldiv@sign^0,f,c
 11082  0023FC  503C               	movf	(___fldiv@a+3)^0,w,c
 11083  0023FE  243C               	addwf	(___fldiv@a+3)^0,w,c
 11084  002400  6E4D               	movwf	___fldiv@aexp^0,c
 11085  002402  AE3B               	btfss	(___fldiv@a+2)^0,7,c
 11086  002404  EF06  F012         	goto	u4631
 11087  002408  EF08  F012         	goto	u4630
 11088  00240C                     u4631:
 11089  00240C  EF09  F012         	goto	l4529
 11090  002410                     u4630:
 11091  002410  804D               	bsf	___fldiv@aexp^0,0,c
 11092  002412                     l4529:
 11093  002412  504D               	movf	___fldiv@aexp^0,w,c
 11094  002414  B4D8               	btfsc	status,2,c
 11095  002416  EF0F  F012         	goto	u4641
 11096  00241A  EF11  F012         	goto	u4640
 11097  00241E                     u4641:
 11098  00241E  EF26  F012         	goto	l4539
 11099  002422                     u4640:
 11100  002422  284D               	incf	___fldiv@aexp^0,w,c
 11101  002424  A4D8               	btfss	status,2,c
 11102  002426  EF17  F012         	goto	u4651
 11103  00242A  EF19  F012         	goto	u4650
 11104  00242E                     u4651:
 11105  00242E  EF21  F012         	goto	l4535
 11106  002432                     u4650:
 11107  002432  0E00               	movlw	0
 11108  002434  6E39               	movwf	___fldiv@a^0,c
 11109  002436  0E00               	movlw	0
 11110  002438  6E3A               	movwf	(___fldiv@a+1)^0,c
 11111  00243A  0E00               	movlw	0
 11112  00243C  6E3B               	movwf	(___fldiv@a+2)^0,c
 11113  00243E  0E00               	movlw	0
 11114  002440  6E3C               	movwf	(___fldiv@a+3)^0,c
 11115  002442                     l4535:
 11116  002442  8E3B               	bsf	(___fldiv@a+2)^0,7,c
 11117  002444  0E00               	movlw	0
 11118  002446  6E3C               	movwf	(___fldiv@a+3)^0,c
 11119  002448  EF2E  F012         	goto	l4541
 11120  00244C                     l4539:
 11121  00244C  0E00               	movlw	0
 11122  00244E  6E39               	movwf	___fldiv@a^0,c
 11123  002450  0E00               	movlw	0
 11124  002452  6E3A               	movwf	(___fldiv@a+1)^0,c
 11125  002454  0E00               	movlw	0
 11126  002456  6E3B               	movwf	(___fldiv@a+2)^0,c
 11127  002458  0E00               	movlw	0
 11128  00245A  6E3C               	movwf	(___fldiv@a+3)^0,c
 11129  00245C                     l4541:
 11130  00245C  5039               	movf	___fldiv@a^0,w,c
 11131  00245E  103A               	iorwf	(___fldiv@a+1)^0,w,c
 11132  002460  103B               	iorwf	(___fldiv@a+2)^0,w,c
 11133  002462  103C               	iorwf	(___fldiv@a+3)^0,w,c
 11134  002464  A4D8               	btfss	status,2,c
 11135  002466  EF37  F012         	goto	u4661
 11136  00246A  EF39  F012         	goto	u4660
 11137  00246E                     u4661:
 11138  00246E  EF51  F012         	goto	l4553
 11139  002472                     u4660:
 11140  002472  0E00               	movlw	0
 11141  002474  6E35               	movwf	___fldiv@b^0,c
 11142  002476  0E00               	movlw	0
 11143  002478  6E36               	movwf	(___fldiv@b+1)^0,c
 11144  00247A  0E00               	movlw	0
 11145  00247C  6E37               	movwf	(___fldiv@b+2)^0,c
 11146  00247E  0E00               	movlw	0
 11147  002480  6E38               	movwf	(___fldiv@b+3)^0,c
 11148  002482  0E80               	movlw	128
 11149  002484  1237               	iorwf	(___fldiv@b+2)^0,f,c
 11150  002486  0E7F               	movlw	127
 11151  002488  1238               	iorwf	(___fldiv@b+3)^0,f,c
 11152  00248A                     l4547:
 11153  00248A  5045               	movf	___fldiv@sign^0,w,c
 11154  00248C  1238               	iorwf	(___fldiv@b+3)^0,f,c
 11155  00248E  C035  F035         	movff	___fldiv@b,?___fldiv
 11156  002492  C036  F036         	movff	___fldiv@b+1,?___fldiv+1
 11157  002496  C037  F037         	movff	___fldiv@b+2,?___fldiv+2
 11158  00249A  C038  F038         	movff	___fldiv@b+3,?___fldiv+3
 11159  00249E  EF94  F013         	goto	l1280
 11160  0024A2                     l4553:
 11161  0024A2  504C               	movf	___fldiv@bexp^0,w,c
 11162  0024A4  A4D8               	btfss	status,2,c
 11163  0024A6  EF57  F012         	goto	u4671
 11164  0024AA  EF59  F012         	goto	u4670
 11165  0024AE                     u4671:
 11166  0024AE  EF63  F012         	goto	l4561
 11167  0024B2                     u4670:
 11168  0024B2  0E00               	movlw	0
 11169  0024B4  6E35               	movwf	?___fldiv^0,c
 11170  0024B6  0E00               	movlw	0
 11171  0024B8  6E36               	movwf	(?___fldiv+1)^0,c
 11172  0024BA  0E00               	movlw	0
 11173  0024BC  6E37               	movwf	(?___fldiv+2)^0,c
 11174  0024BE  0E00               	movlw	0
 11175  0024C0  6E38               	movwf	(?___fldiv+3)^0,c
 11176  0024C2  EF94  F013         	goto	l1280
 11177  0024C6                     l4561:
 11178  0024C6  504D               	movf	___fldiv@aexp^0,w,c
 11179  0024C8  C04C  F03D         	movff	___fldiv@bexp,??___fldiv
 11180  0024CC  6A3E               	clrf	(??___fldiv+1)^0,c
 11181  0024CE  5E3D               	subwf	??___fldiv^0,f,c
 11182  0024D0  0E00               	movlw	0
 11183  0024D2  5A3E               	subwfb	(??___fldiv+1)^0,f,c
 11184  0024D4  0E7F               	movlw	127
 11185  0024D6  243D               	addwf	??___fldiv^0,w,c
 11186  0024D8  6E46               	movwf	___fldiv@new_exp^0,c
 11187  0024DA  0E00               	movlw	0
 11188  0024DC  203E               	addwfc	(??___fldiv+1)^0,w,c
 11189  0024DE  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 11190  0024E0  C035  F041         	movff	___fldiv@b,___fldiv@rem
 11191  0024E4  C036  F042         	movff	___fldiv@b+1,___fldiv@rem+1
 11192  0024E8  C037  F043         	movff	___fldiv@b+2,___fldiv@rem+2
 11193  0024EC  C038  F044         	movff	___fldiv@b+3,___fldiv@rem+3
 11194  0024F0  0E00               	movlw	0
 11195  0024F2  6E35               	movwf	___fldiv@b^0,c
 11196  0024F4  0E00               	movlw	0
 11197  0024F6  6E36               	movwf	(___fldiv@b+1)^0,c
 11198  0024F8  0E00               	movlw	0
 11199  0024FA  6E37               	movwf	(___fldiv@b+2)^0,c
 11200  0024FC  0E00               	movlw	0
 11201  0024FE  6E38               	movwf	(___fldiv@b+3)^0,c
 11202  002500  0E00               	movlw	0
 11203  002502  6E48               	movwf	___fldiv@grs^0,c
 11204  002504  0E00               	movlw	0
 11205  002506  6E49               	movwf	(___fldiv@grs+1)^0,c
 11206  002508  0E00               	movlw	0
 11207  00250A  6E4A               	movwf	(___fldiv@grs+2)^0,c
 11208  00250C  0E00               	movlw	0
 11209  00250E  6E4B               	movwf	(___fldiv@grs+3)^0,c
 11210  002510  0E00               	movlw	0
 11211  002512  6E4D               	movwf	___fldiv@aexp^0,c
 11212  002514  EFC4  F012         	goto	l1282
 11213  002518                     l4571:
 11214  002518  504D               	movf	___fldiv@aexp^0,w,c
 11215  00251A  B4D8               	btfsc	status,2,c
 11216  00251C  EF92  F012         	goto	u4681
 11217  002520  EF94  F012         	goto	u4680
 11218  002524                     u4681:
 11219  002524  EFAB  F012         	goto	l4579
 11220  002528                     u4680:
 11221  002528  90D8               	bcf	status,0,c
 11222  00252A  3641               	rlcf	___fldiv@rem^0,f,c
 11223  00252C  3642               	rlcf	(___fldiv@rem+1)^0,f,c
 11224  00252E  3643               	rlcf	(___fldiv@rem+2)^0,f,c
 11225  002530  3644               	rlcf	(___fldiv@rem+3)^0,f,c
 11226  002532  90D8               	bcf	status,0,c
 11227  002534  3635               	rlcf	___fldiv@b^0,f,c
 11228  002536  3636               	rlcf	(___fldiv@b+1)^0,f,c
 11229  002538  3637               	rlcf	(___fldiv@b+2)^0,f,c
 11230  00253A  3638               	rlcf	(___fldiv@b+3)^0,f,c
 11231  00253C  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 11232  00253E  EFA3  F012         	goto	u4691
 11233  002542  EFA5  F012         	goto	u4690
 11234  002546                     u4691:
 11235  002546  EFA6  F012         	goto	l1285
 11236  00254A                     u4690:
 11237  00254A  8035               	bsf	___fldiv@b^0,0,c
 11238  00254C                     l1285:
 11239  00254C  90D8               	bcf	status,0,c
 11240  00254E  3648               	rlcf	___fldiv@grs^0,f,c
 11241  002550  3649               	rlcf	(___fldiv@grs+1)^0,f,c
 11242  002552  364A               	rlcf	(___fldiv@grs+2)^0,f,c
 11243  002554  364B               	rlcf	(___fldiv@grs+3)^0,f,c
 11244  002556                     l4579:
 11245  002556  5039               	movf	___fldiv@a^0,w,c
 11246  002558  5C41               	subwf	___fldiv@rem^0,w,c
 11247  00255A  503A               	movf	(___fldiv@a+1)^0,w,c
 11248  00255C  5842               	subwfb	(___fldiv@rem+1)^0,w,c
 11249  00255E  503B               	movf	(___fldiv@a+2)^0,w,c
 11250  002560  5843               	subwfb	(___fldiv@rem+2)^0,w,c
 11251  002562  503C               	movf	(___fldiv@a+3)^0,w,c
 11252  002564  5844               	subwfb	(___fldiv@rem+3)^0,w,c
 11253  002566  A0D8               	btfss	status,0,c
 11254  002568  EFB8  F012         	goto	u4701
 11255  00256C  EFBA  F012         	goto	u4700
 11256  002570                     u4701:
 11257  002570  EFC3  F012         	goto	l4585
 11258  002574                     u4700:
 11259  002574  8C4B               	bsf	(___fldiv@grs+3)^0,6,c
 11260  002576  5039               	movf	___fldiv@a^0,w,c
 11261  002578  5E41               	subwf	___fldiv@rem^0,f,c
 11262  00257A  503A               	movf	(___fldiv@a+1)^0,w,c
 11263  00257C  5A42               	subwfb	(___fldiv@rem+1)^0,f,c
 11264  00257E  503B               	movf	(___fldiv@a+2)^0,w,c
 11265  002580  5A43               	subwfb	(___fldiv@rem+2)^0,f,c
 11266  002582  503C               	movf	(___fldiv@a+3)^0,w,c
 11267  002584  5A44               	subwfb	(___fldiv@rem+3)^0,f,c
 11268  002586                     l4585:
 11269  002586  2A4D               	incf	___fldiv@aexp^0,f,c
 11270  002588                     l1282:
 11271  002588  0E19               	movlw	25
 11272  00258A  644D               	cpfsgt	___fldiv@aexp^0,c
 11273  00258C  EFCA  F012         	goto	u4711
 11274  002590  EFCC  F012         	goto	u4710
 11275  002594                     u4711:
 11276  002594  EF8C  F012         	goto	l4571
 11277  002598                     u4710:
 11278  002598  5041               	movf	___fldiv@rem^0,w,c
 11279  00259A  1042               	iorwf	(___fldiv@rem+1)^0,w,c
 11280  00259C  1043               	iorwf	(___fldiv@rem+2)^0,w,c
 11281  00259E  1044               	iorwf	(___fldiv@rem+3)^0,w,c
 11282  0025A0  B4D8               	btfsc	status,2,c
 11283  0025A2  EFD5  F012         	goto	u4721
 11284  0025A6  EFD7  F012         	goto	u4720
 11285  0025AA                     u4721:
 11286  0025AA  EFEF  F012         	goto	l4597
 11287  0025AE                     u4720:
 11288  0025AE  8048               	bsf	___fldiv@grs^0,0,c
 11289  0025B0  EFEF  F012         	goto	l4597
 11290  0025B4                     l4591:
 11291  0025B4  90D8               	bcf	status,0,c
 11292  0025B6  3635               	rlcf	___fldiv@b^0,f,c
 11293  0025B8  3636               	rlcf	(___fldiv@b+1)^0,f,c
 11294  0025BA  3637               	rlcf	(___fldiv@b+2)^0,f,c
 11295  0025BC  3638               	rlcf	(___fldiv@b+3)^0,f,c
 11296  0025BE  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 11297  0025C0  EFE4  F012         	goto	u4731
 11298  0025C4  EFE6  F012         	goto	u4730
 11299  0025C8                     u4731:
 11300  0025C8  EFE7  F012         	goto	l1291
 11301  0025CC                     u4730:
 11302  0025CC  8035               	bsf	___fldiv@b^0,0,c
 11303  0025CE                     l1291:
 11304  0025CE  90D8               	bcf	status,0,c
 11305  0025D0  3648               	rlcf	___fldiv@grs^0,f,c
 11306  0025D2  3649               	rlcf	(___fldiv@grs+1)^0,f,c
 11307  0025D4  364A               	rlcf	(___fldiv@grs+2)^0,f,c
 11308  0025D6  364B               	rlcf	(___fldiv@grs+3)^0,f,c
 11309  0025D8  0646               	decf	___fldiv@new_exp^0,f,c
 11310  0025DA  A0D8               	btfss	status,0,c
 11311  0025DC  0647               	decf	(___fldiv@new_exp+1)^0,f,c
 11312  0025DE                     l4597:
 11313  0025DE  AE37               	btfss	(___fldiv@b+2)^0,7,c
 11314  0025E0  EFF4  F012         	goto	u4741
 11315  0025E4  EFF6  F012         	goto	u4740
 11316  0025E8                     u4741:
 11317  0025E8  EFDA  F012         	goto	l4591
 11318  0025EC                     u4740:
 11319  0025EC  0E00               	movlw	0
 11320  0025EE  6E4D               	movwf	___fldiv@aexp^0,c
 11321  0025F0  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 11322  0025F2  EFFD  F012         	goto	u4751
 11323  0025F6  EFFF  F012         	goto	u4750
 11324  0025FA                     u4751:
 11325  0025FA  EF23  F013         	goto	l1293
 11326  0025FE                     u4750:
 11327  0025FE  0EFF               	movlw	255
 11328  002600  1448               	andwf	___fldiv@grs^0,w,c
 11329  002602  6E3D               	movwf	??___fldiv^0,c
 11330  002604  0EFF               	movlw	255
 11331  002606  1449               	andwf	(___fldiv@grs+1)^0,w,c
 11332  002608  6E3E               	movwf	(??___fldiv+1)^0,c
 11333  00260A  0EFF               	movlw	255
 11334  00260C  144A               	andwf	(___fldiv@grs+2)^0,w,c
 11335  00260E  6E3F               	movwf	(??___fldiv+2)^0,c
 11336  002610  0E7F               	movlw	127
 11337  002612  144B               	andwf	(___fldiv@grs+3)^0,w,c
 11338  002614  6E40               	movwf	(??___fldiv+3)^0,c
 11339  002616  503D               	movf	??___fldiv^0,w,c
 11340  002618  103E               	iorwf	(??___fldiv+1)^0,w,c
 11341  00261A  103F               	iorwf	(??___fldiv+2)^0,w,c
 11342  00261C  1040               	iorwf	(??___fldiv+3)^0,w,c
 11343  00261E  B4D8               	btfsc	status,2,c
 11344  002620  EF14  F013         	goto	u4761
 11345  002624  EF16  F013         	goto	u4760
 11346  002628                     u4761:
 11347  002628  EF1A  F013         	goto	l1294
 11348  00262C                     u4760:
 11349  00262C                     l4605:
 11350  00262C  0E01               	movlw	1
 11351  00262E  6E4D               	movwf	___fldiv@aexp^0,c
 11352  002630  EF23  F013         	goto	l1293
 11353  002634                     l1294:
 11354  002634  A035               	btfss	___fldiv@b^0,0,c
 11355  002636  EF1F  F013         	goto	u4771
 11356  00263A  EF21  F013         	goto	u4770
 11357  00263E                     u4771:
 11358  00263E  EF23  F013         	goto	l1293
 11359  002642                     u4770:
 11360  002642  EF16  F013         	goto	l4605
 11361  002646                     l1293:
 11362  002646  504D               	movf	___fldiv@aexp^0,w,c
 11363  002648  B4D8               	btfsc	status,2,c
 11364  00264A  EF29  F013         	goto	u4781
 11365  00264E  EF2B  F013         	goto	u4780
 11366  002652                     u4781:
 11367  002652  EF4F  F013         	goto	l4617
 11368  002656                     u4780:
 11369  002656  0E01               	movlw	1
 11370  002658  2635               	addwf	___fldiv@b^0,f,c
 11371  00265A  0E00               	movlw	0
 11372  00265C  2236               	addwfc	(___fldiv@b+1)^0,f,c
 11373  00265E  2237               	addwfc	(___fldiv@b+2)^0,f,c
 11374  002660  2238               	addwfc	(___fldiv@b+3)^0,f,c
 11375  002662  A038               	btfss	(___fldiv@b+3)^0,0,c
 11376  002664  EF36  F013         	goto	u4791
 11377  002668  EF38  F013         	goto	u4790
 11378  00266C                     u4791:
 11379  00266C  EF4F  F013         	goto	l4617
 11380  002670                     u4790:
 11381  002670  C035  F03D         	movff	___fldiv@b,??___fldiv
 11382  002674  C036  F03E         	movff	___fldiv@b+1,??___fldiv+1
 11383  002678  C037  F03F         	movff	___fldiv@b+2,??___fldiv+2
 11384  00267C  C038  F040         	movff	___fldiv@b+3,??___fldiv+3
 11385  002680  3440               	rlcf	(??___fldiv+3)^0,w,c
 11386  002682  3240               	rrcf	(??___fldiv+3)^0,f,c
 11387  002684  323F               	rrcf	(??___fldiv+2)^0,f,c
 11388  002686  323E               	rrcf	(??___fldiv+1)^0,f,c
 11389  002688  323D               	rrcf	??___fldiv^0,f,c
 11390  00268A  C03D  F035         	movff	??___fldiv,___fldiv@b
 11391  00268E  C03E  F036         	movff	??___fldiv+1,___fldiv@b+1
 11392  002692  C03F  F037         	movff	??___fldiv+2,___fldiv@b+2
 11393  002696  C040  F038         	movff	??___fldiv+3,___fldiv@b+3
 11394  00269A  4A46               	infsnz	___fldiv@new_exp^0,f,c
 11395  00269C  2A47               	incf	(___fldiv@new_exp+1)^0,f,c
 11396  00269E                     l4617:
 11397  00269E  BE47               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11398  0026A0  EF5A  F013         	goto	u4801
 11399  0026A4  5047               	movf	(___fldiv@new_exp+1)^0,w,c
 11400  0026A6  E108               	bnz	u4800
 11401  0026A8  2846               	incf	___fldiv@new_exp^0,w,c
 11402  0026AA  A0D8               	btfss	status,0,c
 11403  0026AC  EF5A  F013         	goto	u4801
 11404  0026B0  EF5C  F013         	goto	u4800
 11405  0026B4                     u4801:
 11406  0026B4  EF67  F013         	goto	l4621
 11407  0026B8                     u4800:
 11408  0026B8  0E00               	movlw	0
 11409  0026BA  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 11410  0026BC  6846               	setf	___fldiv@new_exp^0,c
 11411  0026BE  0E00               	movlw	0
 11412  0026C0  6E35               	movwf	___fldiv@b^0,c
 11413  0026C2  0E00               	movlw	0
 11414  0026C4  6E36               	movwf	(___fldiv@b+1)^0,c
 11415  0026C6  0E00               	movlw	0
 11416  0026C8  6E37               	movwf	(___fldiv@b+2)^0,c
 11417  0026CA  0E00               	movlw	0
 11418  0026CC  6E38               	movwf	(___fldiv@b+3)^0,c
 11419  0026CE                     l4621:
 11420  0026CE  BE47               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11421  0026D0  EF74  F013         	goto	u4810
 11422  0026D4  5047               	movf	(___fldiv@new_exp+1)^0,w,c
 11423  0026D6  E106               	bnz	u4811
 11424  0026D8  0446               	decf	___fldiv@new_exp^0,w,c
 11425  0026DA  B0D8               	btfsc	status,0,c
 11426  0026DC  EF72  F013         	goto	u4811
 11427  0026E0  EF74  F013         	goto	u4810
 11428  0026E4                     u4811:
 11429  0026E4  EF82  F013         	goto	l4625
 11430  0026E8                     u4810:
 11431  0026E8  0E00               	movlw	0
 11432  0026EA  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 11433  0026EC  0E00               	movlw	0
 11434  0026EE  6E46               	movwf	___fldiv@new_exp^0,c
 11435  0026F0  0E00               	movlw	0
 11436  0026F2  6E35               	movwf	___fldiv@b^0,c
 11437  0026F4  0E00               	movlw	0
 11438  0026F6  6E36               	movwf	(___fldiv@b+1)^0,c
 11439  0026F8  0E00               	movlw	0
 11440  0026FA  6E37               	movwf	(___fldiv@b+2)^0,c
 11441  0026FC  0E00               	movlw	0
 11442  0026FE  6E38               	movwf	(___fldiv@b+3)^0,c
 11443  002700  0E00               	movlw	0
 11444  002702  6E45               	movwf	___fldiv@sign^0,c
 11445  002704                     l4625:
 11446  002704  C046  F04C         	movff	___fldiv@new_exp,___fldiv@bexp
 11447  002708  A04C               	btfss	___fldiv@bexp^0,0,c
 11448  00270A  EF89  F013         	goto	u4821
 11449  00270E  EF8B  F013         	goto	u4820
 11450  002712                     u4821:
 11451  002712  EF8E  F013         	goto	l4631
 11452  002716                     u4820:
 11453  002716  8E37               	bsf	(___fldiv@b+2)^0,7,c
 11454  002718  EF8F  F013         	goto	l4633
 11455  00271C                     l4631:
 11456  00271C  9E37               	bcf	(___fldiv@b+2)^0,7,c
 11457  00271E                     l4633:
 11458  00271E  90D8               	bcf	status,0,c
 11459  002720  304C               	rrcf	___fldiv@bexp^0,w,c
 11460  002722  6E38               	movwf	(___fldiv@b+3)^0,c
 11461  002724  EF45  F012         	goto	l4547
 11462  002728                     l1280:
 11463  002728  0012               	return		;funcret
 11464  00272A                     __end_of___fldiv:
 11465                           	callstack 0
 11466                           
 11467 ;; *************** function ___awmod *****************
 11468 ;; Defined at:
 11469 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
 11470 ;; Parameters:    Size  Location     Type
 11471 ;;  dividend        2    0[COMRAM] int 
 11472 ;;  divisor         2    2[COMRAM] int 
 11473 ;; Auto vars:     Size  Location     Type
 11474 ;;  sign            1    5[COMRAM] unsigned char 
 11475 ;;  counter         1    4[COMRAM] unsigned char 
 11476 ;; Return value:  Size  Location     Type
 11477 ;;                  2    0[COMRAM] int 
 11478 ;; Registers used:
 11479 ;;		wreg, status,2, status,0
 11480 ;; Tracked objects:
 11481 ;;		On entry : 0/0
 11482 ;;		On exit  : 0/0
 11483 ;;		Unchanged: 0/0
 11484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11485 ;;      Params:         4       0       0       0       0       0       0
 11486 ;;      Locals:         2       0       0       0       0       0       0
 11487 ;;      Temps:          0       0       0       0       0       0       0
 11488 ;;      Totals:         6       0       0       0       0       0       0
 11489 ;;Total ram usage:        6 bytes
 11490 ;; Hardware stack levels used:    1
 11491 ;; Hardware stack levels required when called:    1
 11492 ;; This function calls:
 11493 ;;		Nothing
 11494 ;; This function is called by:
 11495 ;;		_efgtoa
 11496 ;; This function uses a non-reentrant model
 11497 ;;
 11498                           
 11499                           	psect	text38
 11500  004A88                     __ptext38:
 11501                           	callstack 0
 11502  004A88                     ___awmod:
 11503                           	callstack 22
 11504  004A88  0E00               	movlw	0
 11505  004A8A  6E06               	movwf	___awmod@sign^0,c
 11506  004A8C  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
 11507  004A8E  EF4D  F025         	goto	u5080
 11508  004A92  EF4B  F025         	goto	u5081
 11509  004A96                     u5081:
 11510  004A96  EF53  F025         	goto	l4829
 11511  004A9A                     u5080:
 11512  004A9A  6C01               	negf	___awmod@dividend^0,c
 11513  004A9C  1E02               	comf	(___awmod@dividend+1)^0,f,c
 11514  004A9E  B0D8               	btfsc	status,0,c
 11515  004AA0  2A02               	incf	(___awmod@dividend+1)^0,f,c
 11516  004AA2  0E01               	movlw	1
 11517  004AA4  6E06               	movwf	___awmod@sign^0,c
 11518  004AA6                     l4829:
 11519  004AA6  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
 11520  004AA8  EF5A  F025         	goto	u5090
 11521  004AAC  EF58  F025         	goto	u5091
 11522  004AB0                     u5091:
 11523  004AB0  EF5E  F025         	goto	l4833
 11524  004AB4                     u5090:
 11525  004AB4  6C03               	negf	___awmod@divisor^0,c
 11526  004AB6  1E04               	comf	(___awmod@divisor+1)^0,f,c
 11527  004AB8  B0D8               	btfsc	status,0,c
 11528  004ABA  2A04               	incf	(___awmod@divisor+1)^0,f,c
 11529  004ABC                     l4833:
 11530  004ABC  5003               	movf	___awmod@divisor^0,w,c
 11531  004ABE  1004               	iorwf	(___awmod@divisor+1)^0,w,c
 11532  004AC0  B4D8               	btfsc	status,2,c
 11533  004AC2  EF65  F025         	goto	u5101
 11534  004AC6  EF67  F025         	goto	u5100
 11535  004ACA                     u5101:
 11536  004ACA  EF8B  F025         	goto	l4849
 11537  004ACE                     u5100:
 11538  004ACE  0E01               	movlw	1
 11539  004AD0  6E05               	movwf	___awmod@counter^0,c
 11540  004AD2  EF6F  F025         	goto	l4839
 11541  004AD6                     l4837:
 11542  004AD6  90D8               	bcf	status,0,c
 11543  004AD8  3603               	rlcf	___awmod@divisor^0,f,c
 11544  004ADA  3604               	rlcf	(___awmod@divisor+1)^0,f,c
 11545  004ADC  2A05               	incf	___awmod@counter^0,f,c
 11546  004ADE                     l4839:
 11547  004ADE  AE04               	btfss	(___awmod@divisor+1)^0,7,c
 11548  004AE0  EF74  F025         	goto	u5111
 11549  004AE4  EF76  F025         	goto	u5110
 11550  004AE8                     u5111:
 11551  004AE8  EF6B  F025         	goto	l4837
 11552  004AEC                     u5110:
 11553  004AEC                     l4841:
 11554  004AEC  5003               	movf	___awmod@divisor^0,w,c
 11555  004AEE  5C01               	subwf	___awmod@dividend^0,w,c
 11556  004AF0  5004               	movf	(___awmod@divisor+1)^0,w,c
 11557  004AF2  5802               	subwfb	(___awmod@dividend+1)^0,w,c
 11558  004AF4  A0D8               	btfss	status,0,c
 11559  004AF6  EF7F  F025         	goto	u5121
 11560  004AFA  EF81  F025         	goto	u5120
 11561  004AFE                     u5121:
 11562  004AFE  EF85  F025         	goto	l4845
 11563  004B02                     u5120:
 11564  004B02  5003               	movf	___awmod@divisor^0,w,c
 11565  004B04  5E01               	subwf	___awmod@dividend^0,f,c
 11566  004B06  5004               	movf	(___awmod@divisor+1)^0,w,c
 11567  004B08  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
 11568  004B0A                     l4845:
 11569  004B0A  90D8               	bcf	status,0,c
 11570  004B0C  3204               	rrcf	(___awmod@divisor+1)^0,f,c
 11571  004B0E  3203               	rrcf	___awmod@divisor^0,f,c
 11572  004B10  2E05               	decfsz	___awmod@counter^0,f,c
 11573  004B12  EF76  F025         	goto	l4841
 11574  004B16                     l4849:
 11575  004B16  5006               	movf	___awmod@sign^0,w,c
 11576  004B18  B4D8               	btfsc	status,2,c
 11577  004B1A  EF91  F025         	goto	u5131
 11578  004B1E  EF93  F025         	goto	u5130
 11579  004B22                     u5131:
 11580  004B22  EF97  F025         	goto	l4853
 11581  004B26                     u5130:
 11582  004B26  6C01               	negf	___awmod@dividend^0,c
 11583  004B28  1E02               	comf	(___awmod@dividend+1)^0,f,c
 11584  004B2A  B0D8               	btfsc	status,0,c
 11585  004B2C  2A02               	incf	(___awmod@dividend+1)^0,f,c
 11586  004B2E                     l4853:
 11587  004B2E  C001  F001         	movff	___awmod@dividend,?___awmod
 11588  004B32  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
 11589  004B36  0012               	return		;funcret
 11590  004B38                     __end_of___awmod:
 11591                           	callstack 0
 11592                           
 11593 ;; *************** function ___awdiv *****************
 11594 ;; Defined at:
 11595 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
 11596 ;; Parameters:    Size  Location     Type
 11597 ;;  dividend        2    0[COMRAM] int 
 11598 ;;  divisor         2    2[COMRAM] int 
 11599 ;; Auto vars:     Size  Location     Type
 11600 ;;  quotient        2    6[COMRAM] int 
 11601 ;;  sign            1    5[COMRAM] unsigned char 
 11602 ;;  counter         1    4[COMRAM] unsigned char 
 11603 ;; Return value:  Size  Location     Type
 11604 ;;                  2    0[COMRAM] int 
 11605 ;; Registers used:
 11606 ;;		wreg, status,2, status,0
 11607 ;; Tracked objects:
 11608 ;;		On entry : 0/0
 11609 ;;		On exit  : 0/0
 11610 ;;		Unchanged: 0/0
 11611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11612 ;;      Params:         4       0       0       0       0       0       0
 11613 ;;      Locals:         4       0       0       0       0       0       0
 11614 ;;      Temps:          0       0       0       0       0       0       0
 11615 ;;      Totals:         8       0       0       0       0       0       0
 11616 ;;Total ram usage:        8 bytes
 11617 ;; Hardware stack levels used:    1
 11618 ;; Hardware stack levels required when called:    1
 11619 ;; This function calls:
 11620 ;;		Nothing
 11621 ;; This function is called by:
 11622 ;;		_efgtoa
 11623 ;; This function uses a non-reentrant model
 11624 ;;
 11625                           
 11626                           	psect	text39
 11627  004912                     __ptext39:
 11628                           	callstack 0
 11629  004912                     ___awdiv:
 11630                           	callstack 22
 11631  004912  0E00               	movlw	0
 11632  004914  6E06               	movwf	___awdiv@sign^0,c
 11633  004916  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 11634  004918  EF92  F024         	goto	u5020
 11635  00491C  EF90  F024         	goto	u5021
 11636  004920                     u5021:
 11637  004920  EF98  F024         	goto	l4785
 11638  004924                     u5020:
 11639  004924  6C03               	negf	___awdiv@divisor^0,c
 11640  004926  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 11641  004928  B0D8               	btfsc	status,0,c
 11642  00492A  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 11643  00492C  0E01               	movlw	1
 11644  00492E  6E06               	movwf	___awdiv@sign^0,c
 11645  004930                     l4785:
 11646  004930  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 11647  004932  EF9F  F024         	goto	u5030
 11648  004936  EF9D  F024         	goto	u5031
 11649  00493A                     u5031:
 11650  00493A  EFA5  F024         	goto	l4791
 11651  00493E                     u5030:
 11652  00493E  6C01               	negf	___awdiv@dividend^0,c
 11653  004940  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 11654  004942  B0D8               	btfsc	status,0,c
 11655  004944  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 11656  004946  0E01               	movlw	1
 11657  004948  1A06               	xorwf	___awdiv@sign^0,f,c
 11658  00494A                     l4791:
 11659  00494A  0E00               	movlw	0
 11660  00494C  6E08               	movwf	(___awdiv@quotient+1)^0,c
 11661  00494E  0E00               	movlw	0
 11662  004950  6E07               	movwf	___awdiv@quotient^0,c
 11663  004952  5003               	movf	___awdiv@divisor^0,w,c
 11664  004954  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 11665  004956  B4D8               	btfsc	status,2,c
 11666  004958  EFB0  F024         	goto	u5041
 11667  00495C  EFB2  F024         	goto	u5040
 11668  004960                     u5041:
 11669  004960  EFDA  F024         	goto	l4813
 11670  004964                     u5040:
 11671  004964  0E01               	movlw	1
 11672  004966  6E05               	movwf	___awdiv@counter^0,c
 11673  004968  EFBA  F024         	goto	l4799
 11674  00496C                     l4797:
 11675  00496C  90D8               	bcf	status,0,c
 11676  00496E  3603               	rlcf	___awdiv@divisor^0,f,c
 11677  004970  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 11678  004972  2A05               	incf	___awdiv@counter^0,f,c
 11679  004974                     l4799:
 11680  004974  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 11681  004976  EFBF  F024         	goto	u5051
 11682  00497A  EFC1  F024         	goto	u5050
 11683  00497E                     u5051:
 11684  00497E  EFB6  F024         	goto	l4797
 11685  004982                     u5050:
 11686  004982                     l4801:
 11687  004982  90D8               	bcf	status,0,c
 11688  004984  3607               	rlcf	___awdiv@quotient^0,f,c
 11689  004986  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 11690  004988  5003               	movf	___awdiv@divisor^0,w,c
 11691  00498A  5C01               	subwf	___awdiv@dividend^0,w,c
 11692  00498C  5004               	movf	(___awdiv@divisor+1)^0,w,c
 11693  00498E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 11694  004990  A0D8               	btfss	status,0,c
 11695  004992  EFCD  F024         	goto	u5061
 11696  004996  EFCF  F024         	goto	u5060
 11697  00499A                     u5061:
 11698  00499A  EFD4  F024         	goto	l4809
 11699  00499E                     u5060:
 11700  00499E  5003               	movf	___awdiv@divisor^0,w,c
 11701  0049A0  5E01               	subwf	___awdiv@dividend^0,f,c
 11702  0049A2  5004               	movf	(___awdiv@divisor+1)^0,w,c
 11703  0049A4  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 11704  0049A6  8007               	bsf	___awdiv@quotient^0,0,c
 11705  0049A8                     l4809:
 11706  0049A8  90D8               	bcf	status,0,c
 11707  0049AA  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 11708  0049AC  3203               	rrcf	___awdiv@divisor^0,f,c
 11709  0049AE  2E05               	decfsz	___awdiv@counter^0,f,c
 11710  0049B0  EFC1  F024         	goto	l4801
 11711  0049B4                     l4813:
 11712  0049B4  5006               	movf	___awdiv@sign^0,w,c
 11713  0049B6  B4D8               	btfsc	status,2,c
 11714  0049B8  EFE0  F024         	goto	u5071
 11715  0049BC  EFE2  F024         	goto	u5070
 11716  0049C0                     u5071:
 11717  0049C0  EFE6  F024         	goto	l4817
 11718  0049C4                     u5070:
 11719  0049C4  6C07               	negf	___awdiv@quotient^0,c
 11720  0049C6  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 11721  0049C8  B0D8               	btfsc	status,0,c
 11722  0049CA  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 11723  0049CC                     l4817:
 11724  0049CC  C007  F001         	movff	___awdiv@quotient,?___awdiv
 11725  0049D0  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 11726  0049D4  0012               	return		;funcret
 11727  0049D6                     __end_of___awdiv:
 11728                           	callstack 0
 11729                           
 11730 ;; *************** function _dtoa *****************
 11731 ;; Defined at:
 11732 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 11733 ;; Parameters:    Size  Location     Type
 11734 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
 11735 ;;		 -> sprintf@f(6), 
 11736 ;;  d               8   29[COMRAM] long long 
 11737 ;; Auto vars:     Size  Location     Type
 11738 ;;  n               8   53[COMRAM] long long 
 11739 ;;  i               2   61[COMRAM] int 
 11740 ;;  s               2   51[COMRAM] int 
 11741 ;;  w               2   49[COMRAM] int 
 11742 ;;  p               2   47[COMRAM] int 
 11743 ;; Return value:  Size  Location     Type
 11744 ;;                  2   27[COMRAM] int 
 11745 ;; Registers used:
 11746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11747 ;; Tracked objects:
 11748 ;;		On entry : 0/0
 11749 ;;		On exit  : 0/0
 11750 ;;		Unchanged: 0/0
 11751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11752 ;;      Params:        10       0       0       0       0       0       0
 11753 ;;      Locals:        18       0       0       0       0       0       0
 11754 ;;      Temps:          8       0       0       0       0       0       0
 11755 ;;      Totals:        36       0       0       0       0       0       0
 11756 ;;Total ram usage:       36 bytes
 11757 ;; Hardware stack levels used:    1
 11758 ;; Hardware stack levels required when called:    5
 11759 ;; This function calls:
 11760 ;;		___aodiv
 11761 ;;		___aomod
 11762 ;;		_abs
 11763 ;;		_pad
 11764 ;; This function is called by:
 11765 ;;		_vfpfcnvrt
 11766 ;; This function uses a non-reentrant model
 11767 ;;
 11768                           
 11769                           	psect	text40
 11770  002A10                     __ptext40:
 11771                           	callstack 0
 11772  002A10                     _dtoa:
 11773                           	callstack 19
 11774  002A10                     
 11775                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
 11776  002A10  C01E  F036         	movff	dtoa@d,dtoa@n
 11777  002A14  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
 11778  002A18  C020  F038         	movff	dtoa@d+2,dtoa@n+2
 11779  002A1C  C021  F039         	movff	dtoa@d+3,dtoa@n+3
 11780  002A20  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
 11781  002A24  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
 11782  002A28  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
 11783  002A2C  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
 11784  002A30                     
 11785                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
 11786  002A30  BE3D               	btfsc	(dtoa@n+7)^0,7,c
 11787  002A32  EF1D  F015         	goto	u5611
 11788  002A36  EF20  F015         	goto	u5610
 11789  002A3A                     u5611:
 11790  002A3A  0E01               	movlw	1
 11791  002A3C  EF21  F015         	goto	u5620
 11792  002A40                     u5610:
 11793  002A40  0E00               	movlw	0
 11794  002A42                     u5620:
 11795  002A42  6E34               	movwf	dtoa@s^0,c
 11796  002A44  6A35               	clrf	(dtoa@s+1)^0,c
 11797                           
 11798                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
 11799  002A46  5034               	movf	dtoa@s^0,w,c
 11800  002A48  1035               	iorwf	(dtoa@s+1)^0,w,c
 11801  002A4A  B4D8               	btfsc	status,2,c
 11802  002A4C  EF2A  F015         	goto	u5631
 11803  002A50  EF2C  F015         	goto	u5630
 11804  002A54                     u5631:
 11805  002A54  EF3C  F015         	goto	l5059
 11806  002A58                     u5630:
 11807  002A58                     
 11808                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
 11809  002A58  1E3D               	comf	(dtoa@n+7)^0,f,c
 11810  002A5A  1E3C               	comf	(dtoa@n+6)^0,f,c
 11811  002A5C  1E3B               	comf	(dtoa@n+5)^0,f,c
 11812  002A5E  1E3A               	comf	(dtoa@n+4)^0,f,c
 11813  002A60  1E39               	comf	(dtoa@n+3)^0,f,c
 11814  002A62  1E38               	comf	(dtoa@n+2)^0,f,c
 11815  002A64  1E37               	comf	(dtoa@n+1)^0,f,c
 11816  002A66  6C36               	negf	dtoa@n^0,c
 11817  002A68  0E00               	movlw	0
 11818  002A6A  2237               	addwfc	(dtoa@n+1)^0,f,c
 11819  002A6C  2238               	addwfc	(dtoa@n+2)^0,f,c
 11820  002A6E  2239               	addwfc	(dtoa@n+3)^0,f,c
 11821  002A70  223A               	addwfc	(dtoa@n+4)^0,f,c
 11822  002A72  223B               	addwfc	(dtoa@n+5)^0,f,c
 11823  002A74  223C               	addwfc	(dtoa@n+6)^0,f,c
 11824  002A76  223D               	addwfc	(dtoa@n+7)^0,f,c
 11825  002A78                     l5059:
 11826                           
 11827                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
 11828  002A78  0100               	movlb	0	; () banked
 11829  002A7A  BFF7               	btfsc	(_prec+1)& (0+255),7,b
 11830  002A7C  EF42  F015         	goto	u5641
 11831  002A80  EF44  F015         	goto	u5640
 11832  002A84                     u5641:
 11833  002A84  EF45  F015         	goto	l5063
 11834  002A88                     u5640:
 11835  002A88                     
 11836                           ; BSR set to: 0
 11837                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
 11838  002A88  93F8               	bcf	_flags& (0+255),1,b
 11839  002A8A                     l5063:
 11840                           
 11841                           ; BSR set to: 0
 11842                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
 11843  002A8A  BFF7               	btfsc	(_prec+1)& (0+255),7,b
 11844  002A8C  EF52  F015         	goto	u5650
 11845  002A90  51F7               	movf	(_prec+1)& (0+255),w,b
 11846  002A92  E106               	bnz	u5651
 11847  002A94  05F6               	decf	_prec& (0+255),w,b
 11848  002A96  B0D8               	btfsc	status,0,c
 11849  002A98  EF50  F015         	goto	u5651
 11850  002A9C  EF52  F015         	goto	u5650
 11851  002AA0                     u5651:
 11852  002AA0  EF58  F015         	goto	l1435
 11853  002AA4                     u5650:
 11854  002AA4                     
 11855                           ; BSR set to: 0
 11856  002AA4  0E00               	movlw	0
 11857  002AA6  6E31               	movwf	(dtoa@p+1)^0,c
 11858  002AA8  0E01               	movlw	1
 11859  002AAA  6E30               	movwf	dtoa@p^0,c
 11860  002AAC  EF5C  F015         	goto	l1437
 11861  002AB0                     l1435:
 11862                           
 11863                           ; BSR set to: 0
 11864  002AB0  C0F6  F030         	movff	_prec,dtoa@p
 11865  002AB4  C0F7  F031         	movff	_prec+1,dtoa@p+1
 11866  002AB8                     l1437:
 11867                           
 11868                           ; BSR set to: 0
 11869                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
 11870  002AB8  C1B1  F032         	movff	_width,dtoa@w
 11871  002ABC  C1B2  F033         	movff	_width+1,dtoa@w+1
 11872  002AC0                     
 11873                           ; BSR set to: 0
 11874                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
 11875  002AC0  5034               	movf	dtoa@s^0,w,c
 11876  002AC2  1035               	iorwf	(dtoa@s+1)^0,w,c
 11877  002AC4  A4D8               	btfss	status,2,c
 11878  002AC6  EF67  F015         	goto	u5661
 11879  002ACA  EF69  F015         	goto	u5660
 11880  002ACE                     u5661:
 11881  002ACE  EF70  F015         	goto	l5071
 11882  002AD2                     u5660:
 11883  002AD2                     
 11884                           ; BSR set to: 0
 11885  002AD2  A5F8               	btfss	_flags& (0+255),2,b
 11886  002AD4  EF6E  F015         	goto	u5671
 11887  002AD8  EF70  F015         	goto	u5670
 11888  002ADC                     u5671:
 11889  002ADC  EF73  F015         	goto	l5073
 11890  002AE0                     u5670:
 11891  002AE0                     l5071:
 11892                           
 11893                           ; BSR set to: 0
 11894                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
 11895  002AE0  0632               	decf	dtoa@w^0,f,c
 11896  002AE2  A0D8               	btfss	status,0,c
 11897  002AE4  0633               	decf	(dtoa@w+1)^0,f,c
 11898  002AE6                     l5073:
 11899                           
 11900                           ; BSR set to: 0
 11901                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
 11902  002AE6  0E00               	movlw	0
 11903  002AE8  6E3F               	movwf	(dtoa@i+1)^0,c
 11904  002AEA  0E4F               	movlw	79
 11905  002AEC  6E3E               	movwf	dtoa@i^0,c
 11906  002AEE                     
 11907                           ; BSR set to: 0
 11908                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
 11909  002AEE  0E00               	movlw	0
 11910  002AF0  0102               	movlb	2	; () banked
 11911  002AF2  6FAF               	movwf	(_dbuf+79)& (0+255),b
 11912                           
 11913                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11914  002AF4  EFF8  F015         	goto	l5087
 11915  002AF8                     l5077:
 11916                           
 11917                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
 11918  002AF8  063E               	decf	dtoa@i^0,f,c
 11919  002AFA  A0D8               	btfss	status,0,c
 11920  002AFC  063F               	decf	(dtoa@i+1)^0,f,c
 11921  002AFE                     
 11922                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
 11923  002AFE  0E60               	movlw	low _dbuf
 11924  002B00  243E               	addwf	dtoa@i^0,w,c
 11925  002B02  6ED9               	movwf	fsr2l,c
 11926  002B04  0E02               	movlw	high _dbuf
 11927  002B06  203F               	addwfc	(dtoa@i+1)^0,w,c
 11928  002B08  6EDA               	movwf	fsr2h,c
 11929  002B0A  C036  F001         	movff	dtoa@n,___aomod@dividend
 11930  002B0E  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
 11931  002B12  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
 11932  002B16  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
 11933  002B1A  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
 11934  002B1E  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
 11935  002B22  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
 11936  002B26  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
 11937  002B2A  0E0A               	movlw	10
 11938  002B2C  6E09               	movwf	___aomod@divisor^0,c
 11939  002B2E  0E00               	movlw	0
 11940  002B30  6E0A               	movwf	(___aomod@divisor+1)^0,c
 11941  002B32  0E00               	movlw	0
 11942  002B34  6E0B               	movwf	(___aomod@divisor+2)^0,c
 11943  002B36  0E00               	movlw	0
 11944  002B38  6E0C               	movwf	(___aomod@divisor+3)^0,c
 11945  002B3A  0E00               	movlw	0
 11946  002B3C  6E0D               	movwf	(___aomod@divisor+4)^0,c
 11947  002B3E  0E00               	movlw	0
 11948  002B40  6E0E               	movwf	(___aomod@divisor+5)^0,c
 11949  002B42  0E00               	movlw	0
 11950  002B44  6E0F               	movwf	(___aomod@divisor+6)^0,c
 11951  002B46  0E00               	movlw	0
 11952  002B48  6E10               	movwf	(___aomod@divisor+7)^0,c
 11953  002B4A  ECEA  F01D         	call	___aomod	;wreg free
 11954  002B4E  C001  F026         	movff	?___aomod,??_dtoa
 11955  002B52  C002  F027         	movff	?___aomod+1,??_dtoa+1
 11956  002B56  C003  F028         	movff	?___aomod+2,??_dtoa+2
 11957  002B5A  C004  F029         	movff	?___aomod+3,??_dtoa+3
 11958  002B5E  C005  F02A         	movff	?___aomod+4,??_dtoa+4
 11959  002B62  C006  F02B         	movff	?___aomod+5,??_dtoa+5
 11960  002B66  C007  F02C         	movff	?___aomod+6,??_dtoa+6
 11961  002B6A  C008  F02D         	movff	?___aomod+7,??_dtoa+7
 11962  002B6E  C026  F013         	movff	??_dtoa,abs@a
 11963  002B72  C028  F014         	movff	??_dtoa+2,abs@a+1
 11964  002B76  EC19  F02A         	call	_abs	;wreg free
 11965  002B7A  5013               	movf	?_abs^0,w,c
 11966  002B7C  0F30               	addlw	48
 11967  002B7E  6EDF               	movwf	indf2,c
 11968  002B80                     
 11969                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
 11970  002B80  0630               	decf	dtoa@p^0,f,c
 11971  002B82  A0D8               	btfss	status,0,c
 11972  002B84  0631               	decf	(dtoa@p+1)^0,f,c
 11973  002B86                     
 11974                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
 11975  002B86  0632               	decf	dtoa@w^0,f,c
 11976  002B88  A0D8               	btfss	status,0,c
 11977  002B8A  0633               	decf	(dtoa@w+1)^0,f,c
 11978  002B8C                     
 11979                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
 11980  002B8C  C036  F001         	movff	dtoa@n,___aodiv@dividend
 11981  002B90  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
 11982  002B94  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
 11983  002B98  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
 11984  002B9C  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
 11985  002BA0  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
 11986  002BA4  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
 11987  002BA8  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
 11988  002BAC  0E0A               	movlw	10
 11989  002BAE  6E09               	movwf	___aodiv@divisor^0,c
 11990  002BB0  0E00               	movlw	0
 11991  002BB2  6E0A               	movwf	(___aodiv@divisor+1)^0,c
 11992  002BB4  0E00               	movlw	0
 11993  002BB6  6E0B               	movwf	(___aodiv@divisor+2)^0,c
 11994  002BB8  0E00               	movlw	0
 11995  002BBA  6E0C               	movwf	(___aodiv@divisor+3)^0,c
 11996  002BBC  0E00               	movlw	0
 11997  002BBE  6E0D               	movwf	(___aodiv@divisor+4)^0,c
 11998  002BC0  0E00               	movlw	0
 11999  002BC2  6E0E               	movwf	(___aodiv@divisor+5)^0,c
 12000  002BC4  0E00               	movlw	0
 12001  002BC6  6E0F               	movwf	(___aodiv@divisor+6)^0,c
 12002  002BC8  0E00               	movlw	0
 12003  002BCA  6E10               	movwf	(___aodiv@divisor+7)^0,c
 12004  002BCC  EC26  F01D         	call	___aodiv	;wreg free
 12005  002BD0  C001  F036         	movff	?___aodiv,dtoa@n
 12006  002BD4  C002  F037         	movff	?___aodiv+1,dtoa@n+1
 12007  002BD8  C003  F038         	movff	?___aodiv+2,dtoa@n+2
 12008  002BDC  C004  F039         	movff	?___aodiv+3,dtoa@n+3
 12009  002BE0  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
 12010  002BE4  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
 12011  002BE8  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
 12012  002BEC  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
 12013  002BF0                     l5087:
 12014                           
 12015                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12016  002BF0  BE3F               	btfsc	(dtoa@i+1)^0,7,c
 12017  002BF2  EF03  F016         	goto	u5681
 12018  002BF6  503F               	movf	(dtoa@i+1)^0,w,c
 12019  002BF8  E108               	bnz	u5680
 12020  002BFA  043E               	decf	dtoa@i^0,w,c
 12021  002BFC  A0D8               	btfss	status,0,c
 12022  002BFE  EF03  F016         	goto	u5681
 12023  002C02  EF05  F016         	goto	u5680
 12024  002C06                     u5681:
 12025  002C06  EF36  F016         	goto	l5097
 12026  002C0A                     u5680:
 12027  002C0A  5036               	movf	dtoa@n^0,w,c
 12028  002C0C  1037               	iorwf	(dtoa@n+1)^0,w,c
 12029  002C0E  1038               	iorwf	(dtoa@n+2)^0,w,c
 12030  002C10  1039               	iorwf	(dtoa@n+3)^0,w,c
 12031  002C12  103A               	iorwf	(dtoa@n+4)^0,w,c
 12032  002C14  103B               	iorwf	(dtoa@n+5)^0,w,c
 12033  002C16  103C               	iorwf	(dtoa@n+6)^0,w,c
 12034  002C18  103D               	iorwf	(dtoa@n+7)^0,w,c
 12035  002C1A  A4D8               	btfss	status,2,c
 12036  002C1C  EF12  F016         	goto	u5691
 12037  002C20  EF14  F016         	goto	u5690
 12038  002C24                     u5691:
 12039  002C24  EF7C  F015         	goto	l5077
 12040  002C28                     u5690:
 12041  002C28  BE31               	btfsc	(dtoa@p+1)^0,7,c
 12042  002C2A  EF21  F016         	goto	u5700
 12043  002C2E  5031               	movf	(dtoa@p+1)^0,w,c
 12044  002C30  E106               	bnz	u5701
 12045  002C32  0430               	decf	dtoa@p^0,w,c
 12046  002C34  B0D8               	btfsc	status,0,c
 12047  002C36  EF1F  F016         	goto	u5701
 12048  002C3A  EF21  F016         	goto	u5700
 12049  002C3E                     u5701:
 12050  002C3E  EF7C  F015         	goto	l5077
 12051  002C42                     u5700:
 12052  002C42  BE33               	btfsc	(dtoa@w+1)^0,7,c
 12053  002C44  EF2C  F016         	goto	u5711
 12054  002C48  5033               	movf	(dtoa@w+1)^0,w,c
 12055  002C4A  E108               	bnz	u5710
 12056  002C4C  0432               	decf	dtoa@w^0,w,c
 12057  002C4E  A0D8               	btfss	status,0,c
 12058  002C50  EF2C  F016         	goto	u5711
 12059  002C54  EF2E  F016         	goto	u5710
 12060  002C58                     u5711:
 12061  002C58  EF36  F016         	goto	l5097
 12062  002C5C                     u5710:
 12063  002C5C  0100               	movlb	0	; () banked
 12064  002C5E  B3F8               	btfsc	_flags& (0+255),1,b
 12065  002C60  EF34  F016         	goto	u5721
 12066  002C64  EF36  F016         	goto	u5720
 12067  002C68                     u5721:
 12068  002C68  EF7C  F015         	goto	l5077
 12069  002C6C                     u5720:
 12070  002C6C                     l5097:
 12071                           
 12072                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
 12073  002C6C  5034               	movf	dtoa@s^0,w,c
 12074  002C6E  1035               	iorwf	(dtoa@s+1)^0,w,c
 12075  002C70  A4D8               	btfss	status,2,c
 12076  002C72  EF3D  F016         	goto	u5731
 12077  002C76  EF3F  F016         	goto	u5730
 12078  002C7A                     u5731:
 12079  002C7A  EF47  F016         	goto	l5101
 12080  002C7E                     u5730:
 12081  002C7E  0100               	movlb	0	; () banked
 12082  002C80  A5F8               	btfss	_flags& (0+255),2,b
 12083  002C82  EF45  F016         	goto	u5741
 12084  002C86  EF47  F016         	goto	u5740
 12085  002C8A                     u5741:
 12086  002C8A  EF65  F016         	goto	l5111
 12087  002C8E                     u5740:
 12088  002C8E                     l5101:
 12089                           
 12090                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
 12091  002C8E  063E               	decf	dtoa@i^0,f,c
 12092  002C90  A0D8               	btfss	status,0,c
 12093  002C92  063F               	decf	(dtoa@i+1)^0,f,c
 12094  002C94                     
 12095                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
 12096  002C94  5034               	movf	dtoa@s^0,w,c
 12097  002C96  1035               	iorwf	(dtoa@s+1)^0,w,c
 12098  002C98  A4D8               	btfss	status,2,c
 12099  002C9A  EF51  F016         	goto	u5751
 12100  002C9E  EF53  F016         	goto	u5750
 12101  002CA2                     u5751:
 12102  002CA2  EF59  F016         	goto	l5107
 12103  002CA6                     u5750:
 12104  002CA6  0E00               	movlw	0
 12105  002CA8  6E2F               	movwf	(_dtoa$2959+1)^0,c
 12106  002CAA  0E2B               	movlw	43
 12107  002CAC  6E2E               	movwf	_dtoa$2959^0,c
 12108  002CAE  EF5D  F016         	goto	l5109
 12109  002CB2                     l5107:
 12110  002CB2  0E00               	movlw	0
 12111  002CB4  6E2F               	movwf	(_dtoa$2959+1)^0,c
 12112  002CB6  0E2D               	movlw	45
 12113  002CB8  6E2E               	movwf	_dtoa$2959^0,c
 12114  002CBA                     l5109:
 12115  002CBA  0E60               	movlw	low _dbuf
 12116  002CBC  243E               	addwf	dtoa@i^0,w,c
 12117  002CBE  6ED9               	movwf	fsr2l,c
 12118  002CC0  0E02               	movlw	high _dbuf
 12119  002CC2  203F               	addwfc	(dtoa@i+1)^0,w,c
 12120  002CC4  6EDA               	movwf	fsr2h,c
 12121  002CC6  C02E  FFDF         	movff	_dtoa$2959,indf2
 12122  002CCA                     l5111:
 12123                           
 12124                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
 12125  002CCA  C01C  F011         	movff	dtoa@fp,pad@fp
 12126  002CCE  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
 12127  002CD2  0E60               	movlw	low _dbuf
 12128  002CD4  243E               	addwf	dtoa@i^0,w,c
 12129  002CD6  6E13               	movwf	pad@buf^0,c
 12130  002CD8  0E02               	movlw	high _dbuf
 12131  002CDA  203F               	addwfc	(dtoa@i+1)^0,w,c
 12132  002CDC  6E14               	movwf	(pad@buf+1)^0,c
 12133  002CDE  C032  F015         	movff	dtoa@w,pad@p
 12134  002CE2  C033  F016         	movff	dtoa@w+1,pad@p+1
 12135  002CE6  EC26  F024         	call	_pad	;wreg free
 12136  002CEA  C011  F01C         	movff	?_pad,?_dtoa
 12137  002CEE  C012  F01D         	movff	?_pad+1,?_dtoa+1
 12138  002CF2  0012               	return		;funcret
 12139  002CF4                     __end_of_dtoa:
 12140                           	callstack 0
 12141                           
 12142 ;; *************** function _pad *****************
 12143 ;; Defined at:
 12144 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 12145 ;; Parameters:    Size  Location     Type
 12146 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 12147 ;;		 -> sprintf@f(6), 
 12148 ;;  buf             2   18[COMRAM] PTR unsigned char 
 12149 ;;		 -> dbuf(80), 
 12150 ;;  p               2   20[COMRAM] int 
 12151 ;; Auto vars:     Size  Location     Type
 12152 ;;  w               2   25[COMRAM] int 
 12153 ;;  i               2   23[COMRAM] int 
 12154 ;; Return value:  Size  Location     Type
 12155 ;;                  2   16[COMRAM] int 
 12156 ;; Registers used:
 12157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12158 ;; Tracked objects:
 12159 ;;		On entry : 0/0
 12160 ;;		On exit  : 0/0
 12161 ;;		Unchanged: 0/0
 12162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12163 ;;      Params:         6       0       0       0       0       0       0
 12164 ;;      Locals:         4       0       0       0       0       0       0
 12165 ;;      Temps:          1       0       0       0       0       0       0
 12166 ;;      Totals:        11       0       0       0       0       0       0
 12167 ;;Total ram usage:       11 bytes
 12168 ;; Hardware stack levels used:    1
 12169 ;; Hardware stack levels required when called:    4
 12170 ;; This function calls:
 12171 ;;		_fputc
 12172 ;;		_fputs
 12173 ;;		_strlen
 12174 ;; This function is called by:
 12175 ;;		_dtoa
 12176 ;;		_efgtoa
 12177 ;; This function uses a non-reentrant model
 12178 ;;
 12179                           
 12180                           	psect	text41
 12181  00484C                     __ptext41:
 12182                           	callstack 0
 12183  00484C                     _pad:
 12184                           	callstack 19
 12185  00484C                     
 12186                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 12187  00484C  0100               	movlb	0	; () banked
 12188  00484E  A1F8               	btfss	_flags& (0+255),0,b
 12189  004850  EF2C  F024         	goto	u5301
 12190  004854  EF2E  F024         	goto	u5300
 12191  004858                     u5301:
 12192  004858  EF38  F024         	goto	l4951
 12193  00485C                     u5300:
 12194  00485C                     
 12195                           ; BSR set to: 0
 12196                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 12197  00485C  C013  F00A         	movff	pad@buf,fputs@s
 12198  004860  C014  F00B         	movff	pad@buf+1,fputs@s+1
 12199  004864  C011  F00C         	movff	pad@fp,fputs@fp
 12200  004868  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 12201  00486C  ECB6  F029         	call	_fputs	;wreg free
 12202  004870                     l4951:
 12203                           
 12204                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 12205  004870  BE16               	btfsc	(pad@p+1)^0,7,c
 12206  004872  EF3D  F024         	goto	u5311
 12207  004876  EF3F  F024         	goto	u5310
 12208  00487A                     u5311:
 12209  00487A  EF45  F024         	goto	l4955
 12210  00487E                     u5310:
 12211  00487E  C015  F01A         	movff	pad@p,pad@w
 12212  004882  C016  F01B         	movff	pad@p+1,pad@w+1
 12213  004886  EF49  F024         	goto	l1424
 12214  00488A                     l4955:
 12215  00488A  0E00               	movlw	0
 12216  00488C  6E1B               	movwf	(pad@w+1)^0,c
 12217  00488E  0E00               	movlw	0
 12218  004890  6E1A               	movwf	pad@w^0,c
 12219  004892                     l1424:
 12220                           
 12221                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 12222  004892  0E00               	movlw	0
 12223  004894  6E19               	movwf	(pad@i+1)^0,c
 12224  004896  0E00               	movlw	0
 12225  004898  6E18               	movwf	pad@i^0,c
 12226                           
 12227                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12228  00489A  EF5B  F024         	goto	l4961
 12229  00489E                     l4957:
 12230                           
 12231                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 12232  00489E  0E00               	movlw	0
 12233  0048A0  6E02               	movwf	(fputc@c+1)^0,c
 12234  0048A2  0E20               	movlw	32
 12235  0048A4  6E01               	movwf	fputc@c^0,c
 12236  0048A6  C011  F003         	movff	pad@fp,fputc@fp
 12237  0048AA  C012  F004         	movff	pad@fp+1,fputc@fp+1
 12238  0048AE  ECC1  F023         	call	_fputc	;wreg free
 12239  0048B2                     
 12240                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
 12241  0048B2  4A18               	infsnz	pad@i^0,f,c
 12242  0048B4  2A19               	incf	(pad@i+1)^0,f,c
 12243  0048B6                     l4961:
 12244                           
 12245                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12246  0048B6  501A               	movf	pad@w^0,w,c
 12247  0048B8  5C18               	subwf	pad@i^0,w,c
 12248  0048BA  5019               	movf	(pad@i+1)^0,w,c
 12249  0048BC  0A80               	xorlw	128
 12250  0048BE  6E17               	movwf	??_pad^0,c
 12251  0048C0  501B               	movf	(pad@w+1)^0,w,c
 12252  0048C2  0A80               	xorlw	128
 12253  0048C4  5817               	subwfb	??_pad^0,w,c
 12254  0048C6  A0D8               	btfss	status,0,c
 12255  0048C8  EF68  F024         	goto	u5321
 12256  0048CC  EF6A  F024         	goto	u5320
 12257  0048D0                     u5321:
 12258  0048D0  EF4F  F024         	goto	l4957
 12259  0048D4                     u5320:
 12260  0048D4                     
 12261                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 12262  0048D4  0100               	movlb	0	; () banked
 12263  0048D6  B1F8               	btfsc	_flags& (0+255),0,b
 12264  0048D8  EF70  F024         	goto	u5331
 12265  0048DC  EF72  F024         	goto	u5330
 12266  0048E0                     u5331:
 12267  0048E0  EF7C  F024         	goto	l4965
 12268  0048E4                     u5330:
 12269  0048E4                     
 12270                           ; BSR set to: 0
 12271                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 12272  0048E4  C013  F00A         	movff	pad@buf,fputs@s
 12273  0048E8  C014  F00B         	movff	pad@buf+1,fputs@s+1
 12274  0048EC  C011  F00C         	movff	pad@fp,fputs@fp
 12275  0048F0  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 12276  0048F4  ECB6  F029         	call	_fputs	;wreg free
 12277  0048F8                     l4965:
 12278                           
 12279                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
 12280  0048F8  C013  F001         	movff	pad@buf,strlen@s
 12281  0048FC  C014  F002         	movff	pad@buf+1,strlen@s+1
 12282  004900  EC20  F02B         	call	_strlen	;wreg free
 12283  004904  501A               	movf	pad@w^0,w,c
 12284  004906  2401               	addwf	?_strlen^0,w,c
 12285  004908  6E11               	movwf	?_pad^0,c
 12286  00490A  501B               	movf	(pad@w+1)^0,w,c
 12287  00490C  2002               	addwfc	(?_strlen+1)^0,w,c
 12288  00490E  6E12               	movwf	(?_pad+1)^0,c
 12289  004910  0012               	return		;funcret
 12290  004912                     __end_of_pad:
 12291                           	callstack 0
 12292                           
 12293 ;; *************** function _strlen *****************
 12294 ;; Defined at:
 12295 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
 12296 ;; Parameters:    Size  Location     Type
 12297 ;;  s               2    0[COMRAM] PTR const unsigned char 
 12298 ;;		 -> dbuf(80), 
 12299 ;; Auto vars:     Size  Location     Type
 12300 ;;  a               2    2[COMRAM] PTR const unsigned char 
 12301 ;;		 -> dbuf(80), 
 12302 ;; Return value:  Size  Location     Type
 12303 ;;                  2    0[COMRAM] unsigned int 
 12304 ;; Registers used:
 12305 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12306 ;; Tracked objects:
 12307 ;;		On entry : 0/0
 12308 ;;		On exit  : 0/0
 12309 ;;		Unchanged: 0/0
 12310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12311 ;;      Params:         2       0       0       0       0       0       0
 12312 ;;      Locals:         2       0       0       0       0       0       0
 12313 ;;      Temps:          0       0       0       0       0       0       0
 12314 ;;      Totals:         4       0       0       0       0       0       0
 12315 ;;Total ram usage:        4 bytes
 12316 ;; Hardware stack levels used:    1
 12317 ;; Hardware stack levels required when called:    1
 12318 ;; This function calls:
 12319 ;;		Nothing
 12320 ;; This function is called by:
 12321 ;;		_pad
 12322 ;; This function uses a non-reentrant model
 12323 ;;
 12324                           
 12325                           	psect	text42
 12326  005640                     __ptext42:
 12327                           	callstack 0
 12328  005640                     _strlen:
 12329                           	callstack 21
 12330  005640  C001  F003         	movff	strlen@s,strlen@a
 12331  005644  C002  F004         	movff	strlen@s+1,strlen@a+1
 12332  005648  EF28  F02B         	goto	l4407
 12333  00564C                     l4405:
 12334  00564C  4A01               	infsnz	strlen@s^0,f,c
 12335  00564E  2A02               	incf	(strlen@s+1)^0,f,c
 12336  005650                     l4407:
 12337  005650  C001  FFD9         	movff	strlen@s,fsr2l
 12338  005654  C002  FFDA         	movff	strlen@s+1,fsr2h
 12339  005658  50DF               	movf	indf2,w,c
 12340  00565A  A4D8               	btfss	status,2,c
 12341  00565C  EF32  F02B         	goto	u4441
 12342  005660  EF34  F02B         	goto	u4440
 12343  005664                     u4441:
 12344  005664  EF26  F02B         	goto	l4405
 12345  005668                     u4440:
 12346  005668  5003               	movf	strlen@a^0,w,c
 12347  00566A  5C01               	subwf	strlen@s^0,w,c
 12348  00566C  6E01               	movwf	?_strlen^0,c
 12349  00566E  5004               	movf	(strlen@a+1)^0,w,c
 12350  005670  5802               	subwfb	(strlen@s+1)^0,w,c
 12351  005672  6E02               	movwf	(?_strlen+1)^0,c
 12352  005674  0012               	return		;funcret
 12353  005676                     __end_of_strlen:
 12354                           	callstack 0
 12355                           
 12356 ;; *************** function _fputs *****************
 12357 ;; Defined at:
 12358 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
 12359 ;; Parameters:    Size  Location     Type
 12360 ;;  s               2    9[COMRAM] PTR const unsigned char 
 12361 ;;		 -> dbuf(80), 
 12362 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 12363 ;;		 -> sprintf@f(6), 
 12364 ;; Auto vars:     Size  Location     Type
 12365 ;;  i               2   14[COMRAM] int 
 12366 ;;  c               1   13[COMRAM] unsigned char 
 12367 ;; Return value:  Size  Location     Type
 12368 ;;                  2    9[COMRAM] int 
 12369 ;; Registers used:
 12370 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12371 ;; Tracked objects:
 12372 ;;		On entry : 0/0
 12373 ;;		On exit  : 0/0
 12374 ;;		Unchanged: 0/0
 12375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12376 ;;      Params:         4       0       0       0       0       0       0
 12377 ;;      Locals:         3       0       0       0       0       0       0
 12378 ;;      Temps:          0       0       0       0       0       0       0
 12379 ;;      Totals:         7       0       0       0       0       0       0
 12380 ;;Total ram usage:        7 bytes
 12381 ;; Hardware stack levels used:    1
 12382 ;; Hardware stack levels required when called:    3
 12383 ;; This function calls:
 12384 ;;		_fputc
 12385 ;; This function is called by:
 12386 ;;		_pad
 12387 ;; This function uses a non-reentrant model
 12388 ;;
 12389                           
 12390                           	psect	text43
 12391  00536C                     __ptext43:
 12392                           	callstack 0
 12393  00536C                     _fputs:
 12394                           	callstack 19
 12395  00536C  0E00               	movlw	0
 12396  00536E  6E10               	movwf	(fputs@i+1)^0,c
 12397  005370  0E00               	movlw	0
 12398  005372  6E0F               	movwf	fputs@i^0,c
 12399  005374  EFC7  F029         	goto	l4401
 12400  005378                     l4397:
 12401  005378  C00E  F001         	movff	fputs@c,fputc@c
 12402  00537C  6A02               	clrf	(fputc@c+1)^0,c
 12403  00537E  C00C  F003         	movff	fputs@fp,fputc@fp
 12404  005382  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
 12405  005386  ECC1  F023         	call	_fputc	;wreg free
 12406  00538A  4A0F               	infsnz	fputs@i^0,f,c
 12407  00538C  2A10               	incf	(fputs@i+1)^0,f,c
 12408  00538E                     l4401:
 12409  00538E  500F               	movf	fputs@i^0,w,c
 12410  005390  240A               	addwf	fputs@s^0,w,c
 12411  005392  6ED9               	movwf	fsr2l,c
 12412  005394  5010               	movf	(fputs@i+1)^0,w,c
 12413  005396  200B               	addwfc	(fputs@s+1)^0,w,c
 12414  005398  6EDA               	movwf	fsr2h,c
 12415  00539A  50DF               	movf	indf2,w,c
 12416  00539C  6E0E               	movwf	fputs@c^0,c
 12417  00539E  500E               	movf	fputs@c^0,w,c
 12418  0053A0  A4D8               	btfss	status,2,c
 12419  0053A2  EFD5  F029         	goto	u4431
 12420  0053A6  EFD7  F029         	goto	u4430
 12421  0053AA                     u4431:
 12422  0053AA  EFBC  F029         	goto	l4397
 12423  0053AE                     u4430:
 12424  0053AE  0012               	return		;funcret
 12425  0053B0                     __end_of_fputs:
 12426                           	callstack 0
 12427                           
 12428 ;; *************** function _fputc *****************
 12429 ;; Defined at:
 12430 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
 12431 ;; Parameters:    Size  Location     Type
 12432 ;;  c               2    0[COMRAM] int 
 12433 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 12434 ;;		 -> sprintf@f(6), 
 12435 ;; Auto vars:     Size  Location     Type
 12436 ;;		None
 12437 ;; Return value:  Size  Location     Type
 12438 ;;                  2    0[COMRAM] int 
 12439 ;; Registers used:
 12440 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12441 ;; Tracked objects:
 12442 ;;		On entry : 0/0
 12443 ;;		On exit  : 0/0
 12444 ;;		Unchanged: 0/0
 12445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12446 ;;      Params:         4       0       0       0       0       0       0
 12447 ;;      Locals:         0       0       0       0       0       0       0
 12448 ;;      Temps:          5       0       0       0       0       0       0
 12449 ;;      Totals:         9       0       0       0       0       0       0
 12450 ;;Total ram usage:        9 bytes
 12451 ;; Hardware stack levels used:    1
 12452 ;; Hardware stack levels required when called:    2
 12453 ;; This function calls:
 12454 ;;		_putch
 12455 ;; This function is called by:
 12456 ;;		_pad
 12457 ;;		_vfpfcnvrt
 12458 ;;		_fputs
 12459 ;; This function uses a non-reentrant model
 12460 ;;
 12461                           
 12462                           	psect	text44
 12463  004782                     __ptext44:
 12464                           	callstack 0
 12465  004782                     _fputc:
 12466                           	callstack 22
 12467  004782  5003               	movf	fputc@fp^0,w,c
 12468  004784  1004               	iorwf	(fputc@fp+1)^0,w,c
 12469  004786  B4D8               	btfsc	status,2,c
 12470  004788  EFC8  F023         	goto	u4001
 12471  00478C  EFCA  F023         	goto	u4000
 12472  004790                     u4001:
 12473  004790  EFD3  F023         	goto	l4183
 12474  004794                     u4000:
 12475  004794  5003               	movf	fputc@fp^0,w,c
 12476  004796  1004               	iorwf	(fputc@fp+1)^0,w,c
 12477  004798  A4D8               	btfss	status,2,c
 12478  00479A  EFD1  F023         	goto	u4011
 12479  00479E  EFD3  F023         	goto	u4010
 12480  0047A2                     u4011:
 12481  0047A2  EFD8  F023         	goto	l4185
 12482  0047A6                     u4010:
 12483  0047A6                     l4183:
 12484  0047A6  5001               	movf	fputc@c^0,w,c
 12485  0047A8  ECF8  F02B         	call	_putch
 12486  0047AC  EF25  F024         	goto	l1684
 12487  0047B0                     l4185:
 12488  0047B0  EE20 F004          	lfsr	2,4
 12489  0047B4  5003               	movf	fputc@fp^0,w,c
 12490  0047B6  26D9               	addwf	fsr2l,f,c
 12491  0047B8  5004               	movf	(fputc@fp+1)^0,w,c
 12492  0047BA  22DA               	addwfc	fsr2h,f,c
 12493  0047BC  50DE               	movf	postinc2,w,c
 12494  0047BE  10DE               	iorwf	postinc2,w,c
 12495  0047C0  B4D8               	btfsc	status,2,c
 12496  0047C2  EFE5  F023         	goto	u4021
 12497  0047C6  EFE7  F023         	goto	u4020
 12498  0047CA                     u4021:
 12499  0047CA  EF02  F024         	goto	l4189
 12500  0047CE                     u4020:
 12501  0047CE  EE20 F004          	lfsr	2,4
 12502  0047D2  5003               	movf	fputc@fp^0,w,c
 12503  0047D4  26D9               	addwf	fsr2l,f,c
 12504  0047D6  5004               	movf	(fputc@fp+1)^0,w,c
 12505  0047D8  22DA               	addwfc	fsr2h,f,c
 12506  0047DA  EE10 F002          	lfsr	1,2
 12507  0047DE  5003               	movf	fputc@fp^0,w,c
 12508  0047E0  26E1               	addwf	fsr1l,f,c
 12509  0047E2  5004               	movf	(fputc@fp+1)^0,w,c
 12510  0047E4  22E2               	addwfc	fsr1h,f,c
 12511  0047E6  50DE               	movf	postinc2,w,c
 12512  0047E8  5CE6               	subwf	postinc1,w,c
 12513  0047EA  50E6               	movf	postinc1,w,c
 12514  0047EC  0A80               	xorlw	128
 12515  0047EE  6E09               	movwf	(??_fputc+4)^0,c
 12516  0047F0  50DE               	movf	postinc2,w,c
 12517  0047F2  0A80               	xorlw	128
 12518  0047F4  5809               	subwfb	(??_fputc+4)^0,w,c
 12519  0047F6  B0D8               	btfsc	status,0,c
 12520  0047F8  EF00  F024         	goto	u4031
 12521  0047FC  EF02  F024         	goto	u4030
 12522  004800                     u4031:
 12523  004800  EF25  F024         	goto	l1684
 12524  004804                     u4030:
 12525  004804                     l4189:
 12526  004804  EE20 F002          	lfsr	2,2
 12527  004808  5003               	movf	fputc@fp^0,w,c
 12528  00480A  26D9               	addwf	fsr2l,f,c
 12529  00480C  5004               	movf	(fputc@fp+1)^0,w,c
 12530  00480E  22DA               	addwfc	fsr2h,f,c
 12531  004810  CFDE F005          	movff	postinc2,??_fputc
 12532  004814  CFDD F006          	movff	postdec2,??_fputc+1
 12533  004818  C003  FFD9         	movff	fputc@fp,fsr2l
 12534  00481C  C004  FFDA         	movff	fputc@fp+1,fsr2h
 12535  004820  CFDE F007          	movff	postinc2,??_fputc+2
 12536  004824  CFDD F008          	movff	postdec2,??_fputc+3
 12537  004828  5005               	movf	??_fputc^0,w,c
 12538  00482A  2407               	addwf	(??_fputc+2)^0,w,c
 12539  00482C  6ED9               	movwf	fsr2l,c
 12540  00482E  5006               	movf	(??_fputc+1)^0,w,c
 12541  004830  2008               	addwfc	(??_fputc+3)^0,w,c
 12542  004832  6EDA               	movwf	fsr2h,c
 12543  004834  C001  FFDF         	movff	fputc@c,indf2
 12544  004838  EE20 F002          	lfsr	2,2
 12545  00483C  5003               	movf	fputc@fp^0,w,c
 12546  00483E  26D9               	addwf	fsr2l,f,c
 12547  004840  5004               	movf	(fputc@fp+1)^0,w,c
 12548  004842  22DA               	addwfc	fsr2h,f,c
 12549  004844  2ADE               	incf	postinc2,f,c
 12550  004846  0E00               	movlw	0
 12551  004848  22DD               	addwfc	postdec2,f,c
 12552  00484A                     l1684:
 12553  00484A  0012               	return		;funcret
 12554  00484C                     __end_of_fputc:
 12555                           	callstack 0
 12556                           
 12557 ;; *************** function _putch *****************
 12558 ;; Defined at:
 12559 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
 12560 ;; Parameters:    Size  Location     Type
 12561 ;;  c               1    wreg     unsigned char 
 12562 ;; Auto vars:     Size  Location     Type
 12563 ;;  c               1    0[COMRAM] unsigned char 
 12564 ;; Return value:  Size  Location     Type
 12565 ;;                  1    wreg      void 
 12566 ;; Registers used:
 12567 ;;		wreg
 12568 ;; Tracked objects:
 12569 ;;		On entry : 0/0
 12570 ;;		On exit  : 0/0
 12571 ;;		Unchanged: 0/0
 12572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12573 ;;      Params:         0       0       0       0       0       0       0
 12574 ;;      Locals:         0       0       0       0       0       0       0
 12575 ;;      Temps:          0       0       0       0       0       0       0
 12576 ;;      Totals:         0       0       0       0       0       0       0
 12577 ;;Total ram usage:        0 bytes
 12578 ;; Hardware stack levels used:    1
 12579 ;; Hardware stack levels required when called:    1
 12580 ;; This function calls:
 12581 ;;		Nothing
 12582 ;; This function is called by:
 12583 ;;		_fputc
 12584 ;; This function uses a non-reentrant model
 12585 ;;
 12586                           
 12587                           	psect	text45
 12588  0057F0                     __ptext45:
 12589                           	callstack 0
 12590  0057F0                     _putch:
 12591                           	callstack 22
 12592  0057F0  0012               	return		;funcret
 12593  0057F2                     __end_of_putch:
 12594                           	callstack 0
 12595                           
 12596 ;; *************** function _abs *****************
 12597 ;; Defined at:
 12598 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
 12599 ;; Parameters:    Size  Location     Type
 12600 ;;  a               2   18[COMRAM] int 
 12601 ;; Auto vars:     Size  Location     Type
 12602 ;;		None
 12603 ;; Return value:  Size  Location     Type
 12604 ;;                  2   18[COMRAM] int 
 12605 ;; Registers used:
 12606 ;;		wreg, status,2, status,0
 12607 ;; Tracked objects:
 12608 ;;		On entry : 0/0
 12609 ;;		On exit  : 0/0
 12610 ;;		Unchanged: 0/0
 12611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12612 ;;      Params:         2       0       0       0       0       0       0
 12613 ;;      Locals:         0       0       0       0       0       0       0
 12614 ;;      Temps:          2       0       0       0       0       0       0
 12615 ;;      Totals:         4       0       0       0       0       0       0
 12616 ;;Total ram usage:        4 bytes
 12617 ;; Hardware stack levels used:    1
 12618 ;; Hardware stack levels required when called:    1
 12619 ;; This function calls:
 12620 ;;		Nothing
 12621 ;; This function is called by:
 12622 ;;		_dtoa
 12623 ;; This function uses a non-reentrant model
 12624 ;;
 12625                           
 12626                           	psect	text46
 12627  005432                     __ptext46:
 12628                           	callstack 0
 12629  005432                     _abs:
 12630                           	callstack 22
 12631  005432  BE14               	btfsc	(abs@a+1)^0,7,c
 12632  005434  EF26  F02A         	goto	u5340
 12633  005438  5014               	movf	(abs@a+1)^0,w,c
 12634  00543A  E106               	bnz	u5341
 12635  00543C  0413               	decf	abs@a^0,w,c
 12636  00543E  B0D8               	btfsc	status,0,c
 12637  005440  EF24  F02A         	goto	u5341
 12638  005444  EF26  F02A         	goto	u5340
 12639  005448                     u5341:
 12640  005448  EF34  F02A         	goto	l1605
 12641  00544C                     u5340:
 12642  00544C  C013  F015         	movff	abs@a,??_abs
 12643  005450  C014  F016         	movff	abs@a+1,??_abs+1
 12644  005454  1E15               	comf	??_abs^0,f,c
 12645  005456  1E16               	comf	(??_abs+1)^0,f,c
 12646  005458  4A15               	infsnz	??_abs^0,f,c
 12647  00545A  2A16               	incf	(??_abs+1)^0,f,c
 12648  00545C  C015  F013         	movff	??_abs,?_abs
 12649  005460  C016  F014         	movff	??_abs+1,?_abs+1
 12650  005464  EF38  F02A         	goto	l1608
 12651  005468                     l1605:
 12652  005468  C013  F013         	movff	abs@a,?_abs
 12653  00546C  C014  F014         	movff	abs@a+1,?_abs+1
 12654  005470                     l1608:
 12655  005470  0012               	return		;funcret
 12656  005472                     __end_of_abs:
 12657                           	callstack 0
 12658                           
 12659 ;; *************** function ___aomod *****************
 12660 ;; Defined at:
 12661 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
 12662 ;; Parameters:    Size  Location     Type
 12663 ;;  dividend        8    0[COMRAM] long long 
 12664 ;;  divisor         8    8[COMRAM] long long 
 12665 ;; Auto vars:     Size  Location     Type
 12666 ;;  sign            1   17[COMRAM] unsigned char 
 12667 ;;  counter         1   16[COMRAM] unsigned char 
 12668 ;; Return value:  Size  Location     Type
 12669 ;;                  8    0[COMRAM] long long 
 12670 ;; Registers used:
 12671 ;;		wreg, status,2, status,0
 12672 ;; Tracked objects:
 12673 ;;		On entry : 0/0
 12674 ;;		On exit  : 0/0
 12675 ;;		Unchanged: 0/0
 12676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12677 ;;      Params:        16       0       0       0       0       0       0
 12678 ;;      Locals:         2       0       0       0       0       0       0
 12679 ;;      Temps:          0       0       0       0       0       0       0
 12680 ;;      Totals:        18       0       0       0       0       0       0
 12681 ;;Total ram usage:       18 bytes
 12682 ;; Hardware stack levels used:    1
 12683 ;; Hardware stack levels required when called:    1
 12684 ;; This function calls:
 12685 ;;		Nothing
 12686 ;; This function is called by:
 12687 ;;		_dtoa
 12688 ;; This function uses a non-reentrant model
 12689 ;;
 12690                           
 12691                           	psect	text47
 12692  003BD4                     __ptext47:
 12693                           	callstack 0
 12694  003BD4                     ___aomod:
 12695                           	callstack 22
 12696  003BD4  0E00               	movlw	0
 12697  003BD6  6E12               	movwf	___aomod@sign^0,c
 12698  003BD8  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 12699  003BDA  EFF3  F01D         	goto	u4540
 12700  003BDE  EFF1  F01D         	goto	u4541
 12701  003BE2                     u4541:
 12702  003BE2  EF05  F01E         	goto	l4475
 12703  003BE6                     u4540:
 12704  003BE6  1E08               	comf	(___aomod@dividend+7)^0,f,c
 12705  003BE8  1E07               	comf	(___aomod@dividend+6)^0,f,c
 12706  003BEA  1E06               	comf	(___aomod@dividend+5)^0,f,c
 12707  003BEC  1E05               	comf	(___aomod@dividend+4)^0,f,c
 12708  003BEE  1E04               	comf	(___aomod@dividend+3)^0,f,c
 12709  003BF0  1E03               	comf	(___aomod@dividend+2)^0,f,c
 12710  003BF2  1E02               	comf	(___aomod@dividend+1)^0,f,c
 12711  003BF4  6C01               	negf	___aomod@dividend^0,c
 12712  003BF6  0E00               	movlw	0
 12713  003BF8  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 12714  003BFA  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 12715  003BFC  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 12716  003BFE  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 12717  003C00  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 12718  003C02  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 12719  003C04  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 12720  003C06  0E01               	movlw	1
 12721  003C08  6E12               	movwf	___aomod@sign^0,c
 12722  003C0A                     l4475:
 12723  003C0A  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 12724  003C0C  EF0C  F01E         	goto	u4550
 12725  003C10  EF0A  F01E         	goto	u4551
 12726  003C14                     u4551:
 12727  003C14  EF1C  F01E         	goto	l4479
 12728  003C18                     u4550:
 12729  003C18  1E10               	comf	(___aomod@divisor+7)^0,f,c
 12730  003C1A  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 12731  003C1C  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 12732  003C1E  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 12733  003C20  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 12734  003C22  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 12735  003C24  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 12736  003C26  6C09               	negf	___aomod@divisor^0,c
 12737  003C28  0E00               	movlw	0
 12738  003C2A  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 12739  003C2C  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 12740  003C2E  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 12741  003C30  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 12742  003C32  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 12743  003C34  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 12744  003C36  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 12745  003C38                     l4479:
 12746  003C38  5009               	movf	___aomod@divisor^0,w,c
 12747  003C3A  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 12748  003C3C  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 12749  003C3E  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 12750  003C40  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 12751  003C42  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 12752  003C44  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 12753  003C46  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 12754  003C48  B4D8               	btfsc	status,2,c
 12755  003C4A  EF29  F01E         	goto	u4561
 12756  003C4E  EF2B  F01E         	goto	u4560
 12757  003C52                     u4561:
 12758  003C52  EF73  F01E         	goto	l4495
 12759  003C56                     u4560:
 12760  003C56  0E01               	movlw	1
 12761  003C58  6E11               	movwf	___aomod@counter^0,c
 12762  003C5A  EF39  F01E         	goto	l4485
 12763  003C5E                     l4483:
 12764  003C5E  90D8               	bcf	status,0,c
 12765  003C60  3609               	rlcf	___aomod@divisor^0,f,c
 12766  003C62  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 12767  003C64  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 12768  003C66  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 12769  003C68  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 12770  003C6A  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 12771  003C6C  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 12772  003C6E  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 12773  003C70  2A11               	incf	___aomod@counter^0,f,c
 12774  003C72                     l4485:
 12775  003C72  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 12776  003C74  EF3E  F01E         	goto	u4571
 12777  003C78  EF40  F01E         	goto	u4570
 12778  003C7C                     u4571:
 12779  003C7C  EF2F  F01E         	goto	l4483
 12780  003C80                     u4570:
 12781  003C80                     l4487:
 12782  003C80  5009               	movf	___aomod@divisor^0,w,c
 12783  003C82  5C01               	subwf	___aomod@dividend^0,w,c
 12784  003C84  500A               	movf	(___aomod@divisor+1)^0,w,c
 12785  003C86  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 12786  003C88  500B               	movf	(___aomod@divisor+2)^0,w,c
 12787  003C8A  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 12788  003C8C  500C               	movf	(___aomod@divisor+3)^0,w,c
 12789  003C8E  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 12790  003C90  500D               	movf	(___aomod@divisor+4)^0,w,c
 12791  003C92  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 12792  003C94  500E               	movf	(___aomod@divisor+5)^0,w,c
 12793  003C96  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 12794  003C98  500F               	movf	(___aomod@divisor+6)^0,w,c
 12795  003C9A  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 12796  003C9C  5010               	movf	(___aomod@divisor+7)^0,w,c
 12797  003C9E  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 12798  003CA0  A0D8               	btfss	status,0,c
 12799  003CA2  EF55  F01E         	goto	u4581
 12800  003CA6  EF57  F01E         	goto	u4580
 12801  003CAA                     u4581:
 12802  003CAA  EF67  F01E         	goto	l4491
 12803  003CAE                     u4580:
 12804  003CAE  5009               	movf	___aomod@divisor^0,w,c
 12805  003CB0  5E01               	subwf	___aomod@dividend^0,f,c
 12806  003CB2  500A               	movf	(___aomod@divisor+1)^0,w,c
 12807  003CB4  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 12808  003CB6  500B               	movf	(___aomod@divisor+2)^0,w,c
 12809  003CB8  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 12810  003CBA  500C               	movf	(___aomod@divisor+3)^0,w,c
 12811  003CBC  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 12812  003CBE  500D               	movf	(___aomod@divisor+4)^0,w,c
 12813  003CC0  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 12814  003CC2  500E               	movf	(___aomod@divisor+5)^0,w,c
 12815  003CC4  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 12816  003CC6  500F               	movf	(___aomod@divisor+6)^0,w,c
 12817  003CC8  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 12818  003CCA  5010               	movf	(___aomod@divisor+7)^0,w,c
 12819  003CCC  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 12820  003CCE                     l4491:
 12821  003CCE  90D8               	bcf	status,0,c
 12822  003CD0  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 12823  003CD2  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 12824  003CD4  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 12825  003CD6  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 12826  003CD8  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 12827  003CDA  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 12828  003CDC  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 12829  003CDE  3209               	rrcf	___aomod@divisor^0,f,c
 12830  003CE0  2E11               	decfsz	___aomod@counter^0,f,c
 12831  003CE2  EF40  F01E         	goto	l4487
 12832  003CE6                     l4495:
 12833  003CE6  5012               	movf	___aomod@sign^0,w,c
 12834  003CE8  B4D8               	btfsc	status,2,c
 12835  003CEA  EF79  F01E         	goto	u4591
 12836  003CEE  EF7B  F01E         	goto	u4590
 12837  003CF2                     u4591:
 12838  003CF2  EF8B  F01E         	goto	l4499
 12839  003CF6                     u4590:
 12840  003CF6  1E08               	comf	(___aomod@dividend+7)^0,f,c
 12841  003CF8  1E07               	comf	(___aomod@dividend+6)^0,f,c
 12842  003CFA  1E06               	comf	(___aomod@dividend+5)^0,f,c
 12843  003CFC  1E05               	comf	(___aomod@dividend+4)^0,f,c
 12844  003CFE  1E04               	comf	(___aomod@dividend+3)^0,f,c
 12845  003D00  1E03               	comf	(___aomod@dividend+2)^0,f,c
 12846  003D02  1E02               	comf	(___aomod@dividend+1)^0,f,c
 12847  003D04  6C01               	negf	___aomod@dividend^0,c
 12848  003D06  0E00               	movlw	0
 12849  003D08  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 12850  003D0A  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 12851  003D0C  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 12852  003D0E  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 12853  003D10  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 12854  003D12  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 12855  003D14  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 12856  003D16                     l4499:
 12857  003D16  C001  F001         	movff	___aomod@dividend,?___aomod
 12858  003D1A  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 12859  003D1E  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 12860  003D22  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 12861  003D26  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 12862  003D2A  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 12863  003D2E  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 12864  003D32  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 12865  003D36  0012               	return		;funcret
 12866  003D38                     __end_of___aomod:
 12867                           	callstack 0
 12868                           
 12869 ;; *************** function ___aodiv *****************
 12870 ;; Defined at:
 12871 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
 12872 ;; Parameters:    Size  Location     Type
 12873 ;;  dividend        8    0[COMRAM] long long 
 12874 ;;  divisor         8    8[COMRAM] long long 
 12875 ;; Auto vars:     Size  Location     Type
 12876 ;;  quotient        8   18[COMRAM] long long 
 12877 ;;  sign            1   17[COMRAM] unsigned char 
 12878 ;;  counter         1   16[COMRAM] unsigned char 
 12879 ;; Return value:  Size  Location     Type
 12880 ;;                  8    0[COMRAM] long long 
 12881 ;; Registers used:
 12882 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12883 ;; Tracked objects:
 12884 ;;		On entry : 0/0
 12885 ;;		On exit  : 0/0
 12886 ;;		Unchanged: 0/0
 12887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12888 ;;      Params:        16       0       0       0       0       0       0
 12889 ;;      Locals:        10       0       0       0       0       0       0
 12890 ;;      Temps:          0       0       0       0       0       0       0
 12891 ;;      Totals:        26       0       0       0       0       0       0
 12892 ;;Total ram usage:       26 bytes
 12893 ;; Hardware stack levels used:    1
 12894 ;; Hardware stack levels required when called:    1
 12895 ;; This function calls:
 12896 ;;		Nothing
 12897 ;; This function is called by:
 12898 ;;		_dtoa
 12899 ;; This function uses a non-reentrant model
 12900 ;;
 12901                           
 12902                           	psect	text48
 12903  003A4C                     __ptext48:
 12904                           	callstack 0
 12905  003A4C                     ___aodiv:
 12906                           	callstack 22
 12907  003A4C  0E00               	movlw	0
 12908  003A4E  6E12               	movwf	___aodiv@sign^0,c
 12909  003A50  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 12910  003A52  EF2F  F01D         	goto	u4470
 12911  003A56  EF2D  F01D         	goto	u4471
 12912  003A5A                     u4471:
 12913  003A5A  EF41  F01D         	goto	l4431
 12914  003A5E                     u4470:
 12915  003A5E  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 12916  003A60  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 12917  003A62  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 12918  003A64  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 12919  003A66  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 12920  003A68  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 12921  003A6A  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 12922  003A6C  6C09               	negf	___aodiv@divisor^0,c
 12923  003A6E  0E00               	movlw	0
 12924  003A70  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 12925  003A72  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 12926  003A74  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 12927  003A76  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 12928  003A78  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 12929  003A7A  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 12930  003A7C  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 12931  003A7E  0E01               	movlw	1
 12932  003A80  6E12               	movwf	___aodiv@sign^0,c
 12933  003A82                     l4431:
 12934  003A82  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 12935  003A84  EF48  F01D         	goto	u4480
 12936  003A88  EF46  F01D         	goto	u4481
 12937  003A8C                     u4481:
 12938  003A8C  EF5A  F01D         	goto	l4437
 12939  003A90                     u4480:
 12940  003A90  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 12941  003A92  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 12942  003A94  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 12943  003A96  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 12944  003A98  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 12945  003A9A  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 12946  003A9C  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 12947  003A9E  6C01               	negf	___aodiv@dividend^0,c
 12948  003AA0  0E00               	movlw	0
 12949  003AA2  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 12950  003AA4  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 12951  003AA6  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 12952  003AA8  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 12953  003AAA  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 12954  003AAC  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 12955  003AAE  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 12956  003AB0  0E01               	movlw	1
 12957  003AB2  1A12               	xorwf	___aodiv@sign^0,f,c
 12958  003AB4                     l4437:
 12959  003AB4  EE20  F013         	lfsr	2,___aodiv@quotient
 12960  003AB8  0E07               	movlw	7
 12961  003ABA                     u4491:
 12962  003ABA  6ADE               	clrf	postinc2,c
 12963  003ABC  06E8               	decf	wreg,f,c
 12964  003ABE  E2FD               	bc	u4491
 12965  003AC0  5009               	movf	___aodiv@divisor^0,w,c
 12966  003AC2  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 12967  003AC4  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 12968  003AC6  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 12969  003AC8  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 12970  003ACA  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 12971  003ACC  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 12972  003ACE  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 12973  003AD0  B4D8               	btfsc	status,2,c
 12974  003AD2  EF6D  F01D         	goto	u4501
 12975  003AD6  EF6F  F01D         	goto	u4500
 12976  003ADA                     u4501:
 12977  003ADA  EFC1  F01D         	goto	l4459
 12978  003ADE                     u4500:
 12979  003ADE  0E01               	movlw	1
 12980  003AE0  6E11               	movwf	___aodiv@counter^0,c
 12981  003AE2  EF7D  F01D         	goto	l4445
 12982  003AE6                     l4443:
 12983  003AE6  90D8               	bcf	status,0,c
 12984  003AE8  3609               	rlcf	___aodiv@divisor^0,f,c
 12985  003AEA  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 12986  003AEC  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 12987  003AEE  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 12988  003AF0  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 12989  003AF2  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 12990  003AF4  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 12991  003AF6  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 12992  003AF8  2A11               	incf	___aodiv@counter^0,f,c
 12993  003AFA                     l4445:
 12994  003AFA  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 12995  003AFC  EF82  F01D         	goto	u4511
 12996  003B00  EF84  F01D         	goto	u4510
 12997  003B04                     u4511:
 12998  003B04  EF73  F01D         	goto	l4443
 12999  003B08                     u4510:
 13000  003B08                     l4447:
 13001  003B08  90D8               	bcf	status,0,c
 13002  003B0A  3613               	rlcf	___aodiv@quotient^0,f,c
 13003  003B0C  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 13004  003B0E  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 13005  003B10  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 13006  003B12  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 13007  003B14  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 13008  003B16  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 13009  003B18  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 13010  003B1A  5009               	movf	___aodiv@divisor^0,w,c
 13011  003B1C  5C01               	subwf	___aodiv@dividend^0,w,c
 13012  003B1E  500A               	movf	(___aodiv@divisor+1)^0,w,c
 13013  003B20  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 13014  003B22  500B               	movf	(___aodiv@divisor+2)^0,w,c
 13015  003B24  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 13016  003B26  500C               	movf	(___aodiv@divisor+3)^0,w,c
 13017  003B28  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 13018  003B2A  500D               	movf	(___aodiv@divisor+4)^0,w,c
 13019  003B2C  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 13020  003B2E  500E               	movf	(___aodiv@divisor+5)^0,w,c
 13021  003B30  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 13022  003B32  500F               	movf	(___aodiv@divisor+6)^0,w,c
 13023  003B34  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 13024  003B36  5010               	movf	(___aodiv@divisor+7)^0,w,c
 13025  003B38  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 13026  003B3A  A0D8               	btfss	status,0,c
 13027  003B3C  EFA2  F01D         	goto	u4521
 13028  003B40  EFA4  F01D         	goto	u4520
 13029  003B44                     u4521:
 13030  003B44  EFB5  F01D         	goto	l4455
 13031  003B48                     u4520:
 13032  003B48  5009               	movf	___aodiv@divisor^0,w,c
 13033  003B4A  5E01               	subwf	___aodiv@dividend^0,f,c
 13034  003B4C  500A               	movf	(___aodiv@divisor+1)^0,w,c
 13035  003B4E  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 13036  003B50  500B               	movf	(___aodiv@divisor+2)^0,w,c
 13037  003B52  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 13038  003B54  500C               	movf	(___aodiv@divisor+3)^0,w,c
 13039  003B56  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 13040  003B58  500D               	movf	(___aodiv@divisor+4)^0,w,c
 13041  003B5A  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 13042  003B5C  500E               	movf	(___aodiv@divisor+5)^0,w,c
 13043  003B5E  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 13044  003B60  500F               	movf	(___aodiv@divisor+6)^0,w,c
 13045  003B62  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 13046  003B64  5010               	movf	(___aodiv@divisor+7)^0,w,c
 13047  003B66  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 13048  003B68  8013               	bsf	___aodiv@quotient^0,0,c
 13049  003B6A                     l4455:
 13050  003B6A  90D8               	bcf	status,0,c
 13051  003B6C  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 13052  003B6E  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 13053  003B70  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 13054  003B72  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 13055  003B74  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 13056  003B76  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 13057  003B78  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 13058  003B7A  3209               	rrcf	___aodiv@divisor^0,f,c
 13059  003B7C  2E11               	decfsz	___aodiv@counter^0,f,c
 13060  003B7E  EF84  F01D         	goto	l4447
 13061  003B82                     l4459:
 13062  003B82  5012               	movf	___aodiv@sign^0,w,c
 13063  003B84  B4D8               	btfsc	status,2,c
 13064  003B86  EFC7  F01D         	goto	u4531
 13065  003B8A  EFC9  F01D         	goto	u4530
 13066  003B8E                     u4531:
 13067  003B8E  EFD9  F01D         	goto	l4463
 13068  003B92                     u4530:
 13069  003B92  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 13070  003B94  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 13071  003B96  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 13072  003B98  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 13073  003B9A  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 13074  003B9C  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 13075  003B9E  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 13076  003BA0  6C13               	negf	___aodiv@quotient^0,c
 13077  003BA2  0E00               	movlw	0
 13078  003BA4  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 13079  003BA6  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 13080  003BA8  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 13081  003BAA  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 13082  003BAC  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 13083  003BAE  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 13084  003BB0  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 13085  003BB2                     l4463:
 13086  003BB2  C013  F001         	movff	___aodiv@quotient,?___aodiv
 13087  003BB6  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 13088  003BBA  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 13089  003BBE  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 13090  003BC2  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 13091  003BC6  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 13092  003BCA  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 13093  003BCE  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 13094  003BD2  0012               	return		;funcret
 13095  003BD4                     __end_of___aodiv:
 13096                           	callstack 0
 13097                           
 13098 ;; *************** function _atoi *****************
 13099 ;; Defined at:
 13100 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
 13101 ;; Parameters:    Size  Location     Type
 13102 ;;  s               2    7[COMRAM] PTR const unsigned char 
 13103 ;;		 -> STR_18(18), STR_16(16), STR_14(18), STR_12(13), 
 13104 ;;		 -> STR_10(14), STR_8(16), STR_6(16), STR_4(15), 
 13105 ;; Auto vars:     Size  Location     Type
 13106 ;;  n               2   20[COMRAM] int 
 13107 ;;  neg             2   13[COMRAM] int 
 13108 ;; Return value:  Size  Location     Type
 13109 ;;                  2    7[COMRAM] int 
 13110 ;; Registers used:
 13111 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13112 ;; Tracked objects:
 13113 ;;		On entry : 0/0
 13114 ;;		On exit  : 0/0
 13115 ;;		Unchanged: 0/0
 13116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13117 ;;      Params:         2       0       0       0       0       0       0
 13118 ;;      Locals:         9       0       0       0       0       0       0
 13119 ;;      Temps:          4       0       0       0       0       0       0
 13120 ;;      Totals:        15       0       0       0       0       0       0
 13121 ;;Total ram usage:       15 bytes
 13122 ;; Hardware stack levels used:    1
 13123 ;; Hardware stack levels required when called:    2
 13124 ;; This function calls:
 13125 ;;		___wmul
 13126 ;;		_isdigit
 13127 ;;		_isspace
 13128 ;; This function is called by:
 13129 ;;		_vfpfcnvrt
 13130 ;; This function uses a non-reentrant model
 13131 ;;
 13132                           
 13133                           	psect	text49
 13134  0038BC                     __ptext49:
 13135                           	callstack 0
 13136  0038BC                     _atoi:
 13137                           	callstack 22
 13138  0038BC  0E00               	movlw	0
 13139  0038BE  6E16               	movwf	(atoi@n+1)^0,c
 13140  0038C0  0E00               	movlw	0
 13141  0038C2  6E15               	movwf	atoi@n^0,c
 13142  0038C4  0E00               	movlw	0
 13143  0038C6  6E0F               	movwf	(atoi@neg+1)^0,c
 13144  0038C8  0E00               	movlw	0
 13145  0038CA  6E0E               	movwf	atoi@neg^0,c
 13146  0038CC  EF6A  F01C         	goto	l5417
 13147  0038D0                     l5415:
 13148  0038D0  4A08               	infsnz	atoi@s^0,f,c
 13149  0038D2  2A09               	incf	(atoi@s+1)^0,f,c
 13150  0038D4                     l5417:
 13151  0038D4  0E01               	movlw	1
 13152  0038D6  6E14               	movwf	_atoi$3051^0,c
 13153  0038D8  C008  FFF6         	movff	atoi@s,tblptrl
 13154  0038DC  C009  FFF7         	movff	atoi@s+1,tblptrh
 13155  0038E0                     	if	0	;tblptru may be non-zero
 13156  0038E0                     	endif
 13157  0038E0                     	if	0	;tblptru may be non-zero
 13158  0038E0                     	endif
 13159  0038E0  0008               	tblrd		*
 13160  0038E2  50F5               	movf	tablat,w,c
 13161  0038E4  0A20               	xorlw	32
 13162  0038E6  B4D8               	btfsc	status,2,c
 13163  0038E8  EF78  F01C         	goto	u6281
 13164  0038EC  EF7A  F01C         	goto	u6280
 13165  0038F0                     u6281:
 13166  0038F0  EF97  F01C         	goto	l5425
 13167  0038F4                     u6280:
 13168  0038F4  0EF7               	movlw	247
 13169  0038F6  6E0A               	movwf	??_atoi^0,c
 13170  0038F8  0EFF               	movlw	255
 13171  0038FA  6E0B               	movwf	(??_atoi+1)^0,c
 13172  0038FC  C008  FFF6         	movff	atoi@s,tblptrl
 13173  003900  C009  FFF7         	movff	atoi@s+1,tblptrh
 13174  003904                     	if	0	;tblptru may be non-zero
 13175  003904                     	endif
 13176  003904                     	if	0	;tblptru may be non-zero
 13177  003904                     	endif
 13178  003904  0008               	tblrd		*
 13179  003906  50F5               	movf	tablat,w,c
 13180  003908  6E0C               	movwf	(??_atoi+2)^0,c
 13181  00390A  6A0D               	clrf	(??_atoi+3)^0,c
 13182  00390C  500A               	movf	??_atoi^0,w,c
 13183  00390E  260C               	addwf	(??_atoi+2)^0,f,c
 13184  003910  500B               	movf	(??_atoi+1)^0,w,c
 13185  003912  220D               	addwfc	(??_atoi+3)^0,f,c
 13186  003914  500D               	movf	(??_atoi+3)^0,w,c
 13187  003916  E109               	bnz	u6290
 13188  003918  0E05               	movlw	5
 13189  00391A  5C0C               	subwf	(??_atoi+2)^0,w,c
 13190  00391C  A0D8               	btfss	status,0,c
 13191  00391E  EF93  F01C         	goto	u6291
 13192  003922  EF95  F01C         	goto	u6290
 13193  003926                     u6291:
 13194  003926  EF97  F01C         	goto	l5425
 13195  00392A                     u6290:
 13196  00392A  0E00               	movlw	0
 13197  00392C  6E14               	movwf	_atoi$3051^0,c
 13198  00392E                     l5425:
 13199  00392E  C014  F010         	movff	_atoi$3051,_atoi$3050
 13200  003932  6A11               	clrf	(_atoi$3050+1)^0,c
 13201  003934  5010               	movf	_atoi$3050^0,w,c
 13202  003936  1011               	iorwf	(_atoi$3050+1)^0,w,c
 13203  003938  A4D8               	btfss	status,2,c
 13204  00393A  EFA1  F01C         	goto	u6301
 13205  00393E  EFA3  F01C         	goto	u6300
 13206  003942                     u6301:
 13207  003942  EF68  F01C         	goto	l5415
 13208  003946                     u6300:
 13209  003946  EFAD  F01C         	goto	l5435
 13210  00394A                     l5431:
 13211  00394A  0E00               	movlw	0
 13212  00394C  6E0F               	movwf	(atoi@neg+1)^0,c
 13213  00394E  0E01               	movlw	1
 13214  003950  6E0E               	movwf	atoi@neg^0,c
 13215  003952                     l5433:
 13216  003952  4A08               	infsnz	atoi@s^0,f,c
 13217  003954  2A09               	incf	(atoi@s+1)^0,f,c
 13218  003956  EFE2  F01C         	goto	l5441
 13219  00395A                     l5435:
 13220  00395A  C008  FFF6         	movff	atoi@s,tblptrl
 13221  00395E  C009  FFF7         	movff	atoi@s+1,tblptrh
 13222  003962                     	if	0	;tblptru may be non-zero
 13223  003962                     	endif
 13224  003962                     	if	0	;tblptru may be non-zero
 13225  003962                     	endif
 13226  003962  0008               	tblrd		*
 13227  003964  50F5               	movf	tablat,w,c
 13228  003966  6E0A               	movwf	??_atoi^0,c
 13229  003968  6A0B               	clrf	(??_atoi+1)^0,c
 13230                           
 13231                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13232                           ; Switch size 1, requested type "simple"
 13233                           ; Number of cases is 1, Range of values is 0 to 0
 13234                           ; switch strategies available:
 13235                           ; Name         Instructions Cycles
 13236                           ; simple_byte            4     3 (average)
 13237                           ;	Chosen strategy is simple_byte
 13238  00396A  500B               	movf	(??_atoi+1)^0,w,c
 13239  00396C  0A00               	xorlw	0	; case 0
 13240  00396E  B4D8               	btfsc	status,2,c
 13241  003970  EFBC  F01C         	goto	l6619
 13242  003974  EFE2  F01C         	goto	l5441
 13243  003978                     l6619:
 13244                           
 13245                           ; Switch size 1, requested type "simple"
 13246                           ; Number of cases is 2, Range of values is 43 to 45
 13247                           ; switch strategies available:
 13248                           ; Name         Instructions Cycles
 13249                           ; simple_byte            7     4 (average)
 13250                           ;	Chosen strategy is simple_byte
 13251  003978  500A               	movf	??_atoi^0,w,c
 13252  00397A  0A2B               	xorlw	43	; case 43
 13253  00397C  B4D8               	btfsc	status,2,c
 13254  00397E  EFA9  F01C         	goto	l5433
 13255  003982  0A06               	xorlw	6	; case 45
 13256  003984  B4D8               	btfsc	status,2,c
 13257  003986  EFA5  F01C         	goto	l5431
 13258  00398A  EFE2  F01C         	goto	l5441
 13259  00398E                     l5437:
 13260  00398E  C015  F001         	movff	atoi@n,___wmul@multiplier
 13261  003992  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 13262  003996  0E00               	movlw	0
 13263  003998  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 13264  00399A  0E0A               	movlw	10
 13265  00399C  6E03               	movwf	___wmul@multiplicand^0,c
 13266  00399E  EC94  F02B         	call	___wmul	;wreg free
 13267  0039A2  C008  FFF6         	movff	atoi@s,tblptrl
 13268  0039A6  C009  FFF7         	movff	atoi@s+1,tblptrh
 13269  0039AA                     	if	0	;tblptru may be non-zero
 13270  0039AA                     	endif
 13271  0039AA                     	if	0	;tblptru may be non-zero
 13272  0039AA                     	endif
 13273  0039AA  0008               	tblrd		*
 13274  0039AC  50F5               	movf	tablat,w,c
 13275  0039AE  5E01               	subwf	?___wmul^0,f,c
 13276  0039B0  0E00               	movlw	0
 13277  0039B2  5A02               	subwfb	(?___wmul+1)^0,f,c
 13278  0039B4  0E30               	movlw	48
 13279  0039B6  2401               	addwf	?___wmul^0,w,c
 13280  0039B8  6E15               	movwf	atoi@n^0,c
 13281  0039BA  0E00               	movlw	0
 13282  0039BC  2002               	addwfc	(?___wmul+1)^0,w,c
 13283  0039BE  6E16               	movwf	(atoi@n+1)^0,c
 13284  0039C0  EFA9  F01C         	goto	l5433
 13285  0039C4                     l5441:
 13286  0039C4  0ED0               	movlw	208
 13287  0039C6  6E0A               	movwf	??_atoi^0,c
 13288  0039C8  0EFF               	movlw	255
 13289  0039CA  6E0B               	movwf	(??_atoi+1)^0,c
 13290  0039CC  C008  FFF6         	movff	atoi@s,tblptrl
 13291  0039D0  C009  FFF7         	movff	atoi@s+1,tblptrh
 13292  0039D4                     	if	0	;tblptru may be non-zero
 13293  0039D4                     	endif
 13294  0039D4                     	if	0	;tblptru may be non-zero
 13295  0039D4                     	endif
 13296  0039D4  0008               	tblrd		*
 13297  0039D6  50F5               	movf	tablat,w,c
 13298  0039D8  6E0C               	movwf	(??_atoi+2)^0,c
 13299  0039DA  6A0D               	clrf	(??_atoi+3)^0,c
 13300  0039DC  500A               	movf	??_atoi^0,w,c
 13301  0039DE  260C               	addwf	(??_atoi+2)^0,f,c
 13302  0039E0  500B               	movf	(??_atoi+1)^0,w,c
 13303  0039E2  220D               	addwfc	(??_atoi+3)^0,f,c
 13304  0039E4  500D               	movf	(??_atoi+3)^0,w,c
 13305  0039E6  E10A               	bnz	u6310
 13306  0039E8  0E0A               	movlw	10
 13307  0039EA  5C0C               	subwf	(??_atoi+2)^0,w,c
 13308  0039EC  A0D8               	btfss	status,0,c
 13309  0039EE  EFFB  F01C         	goto	u6311
 13310  0039F2  EFFE  F01C         	goto	u6310
 13311  0039F6                     u6311:
 13312  0039F6  0E01               	movlw	1
 13313  0039F8  EFFF  F01C         	goto	u6320
 13314  0039FC                     u6310:
 13315  0039FC  0E00               	movlw	0
 13316  0039FE                     u6320:
 13317  0039FE  6E12               	movwf	_atoi$3052^0,c
 13318  003A00  6A13               	clrf	(_atoi$3052+1)^0,c
 13319  003A02  5012               	movf	_atoi$3052^0,w,c
 13320  003A04  1013               	iorwf	(_atoi$3052+1)^0,w,c
 13321  003A06  A4D8               	btfss	status,2,c
 13322  003A08  EF08  F01D         	goto	u6331
 13323  003A0C  EF0A  F01D         	goto	u6330
 13324  003A10                     u6331:
 13325  003A10  EFC7  F01C         	goto	l5437
 13326  003A14                     u6330:
 13327  003A14  500E               	movf	atoi@neg^0,w,c
 13328  003A16  100F               	iorwf	(atoi@neg+1)^0,w,c
 13329  003A18  A4D8               	btfss	status,2,c
 13330  003A1A  EF11  F01D         	goto	u6341
 13331  003A1E  EF13  F01D         	goto	u6340
 13332  003A22                     u6341:
 13333  003A22  EF21  F01D         	goto	l1636
 13334  003A26                     u6340:
 13335  003A26  C015  F00A         	movff	atoi@n,??_atoi
 13336  003A2A  C016  F00B         	movff	atoi@n+1,??_atoi+1
 13337  003A2E  1E0A               	comf	??_atoi^0,f,c
 13338  003A30  1E0B               	comf	(??_atoi+1)^0,f,c
 13339  003A32  4A0A               	infsnz	??_atoi^0,f,c
 13340  003A34  2A0B               	incf	(??_atoi+1)^0,f,c
 13341  003A36  C00A  F008         	movff	??_atoi,?_atoi
 13342  003A3A  C00B  F009         	movff	??_atoi+1,?_atoi+1
 13343  003A3E  EF25  F01D         	goto	l1639
 13344  003A42                     l1636:
 13345  003A42  C015  F008         	movff	atoi@n,?_atoi
 13346  003A46  C016  F009         	movff	atoi@n+1,?_atoi+1
 13347  003A4A                     l1639:
 13348  003A4A  0012               	return		;funcret
 13349  003A4C                     __end_of_atoi:
 13350                           	callstack 0
 13351                           
 13352 ;; *************** function _isspace *****************
 13353 ;; Defined at:
 13354 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
 13355 ;; Parameters:    Size  Location     Type
 13356 ;;  c               2    0[COMRAM] int 
 13357 ;; Auto vars:     Size  Location     Type
 13358 ;;		None
 13359 ;; Return value:  Size  Location     Type
 13360 ;;                  2    0[COMRAM] int 
 13361 ;; Registers used:
 13362 ;;		wreg, status,2, status,0
 13363 ;; Tracked objects:
 13364 ;;		On entry : 0/0
 13365 ;;		On exit  : 0/0
 13366 ;;		Unchanged: 0/0
 13367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13368 ;;      Params:         2       0       0       0       0       0       0
 13369 ;;      Locals:         1       0       0       0       0       0       0
 13370 ;;      Temps:          4       0       0       0       0       0       0
 13371 ;;      Totals:         7       0       0       0       0       0       0
 13372 ;;Total ram usage:        7 bytes
 13373 ;; Hardware stack levels used:    1
 13374 ;; Hardware stack levels required when called:    1
 13375 ;; This function calls:
 13376 ;;		Nothing
 13377 ;; This function is called by:
 13378 ;;		_atoi
 13379 ;; This function uses a non-reentrant model
 13380 ;;
 13381                           
 13382                           	psect	text50
 13383  00528A                     __ptext50:
 13384                           	callstack 0
 13385  00528A                     _isspace:
 13386                           	callstack 22
 13387  00528A  0E01               	movlw	1
 13388  00528C  6E07               	movwf	_isspace$3081^0,c
 13389  00528E  0E20               	movlw	32
 13390  005290  1801               	xorwf	isspace@c^0,w,c
 13391  005292  1002               	iorwf	(isspace@c+1)^0,w,c
 13392  005294  B4D8               	btfsc	status,2,c
 13393  005296  EF4F  F029         	goto	u5591
 13394  00529A  EF51  F029         	goto	u5590
 13395  00529E                     u5591:
 13396  00529E  EF6A  F029         	goto	l5049
 13397  0052A2                     u5590:
 13398  0052A2  0EF7               	movlw	247
 13399  0052A4  6E03               	movwf	??_isspace^0,c
 13400  0052A6  0EFF               	movlw	255
 13401  0052A8  6E04               	movwf	(??_isspace+1)^0,c
 13402  0052AA  C001  F005         	movff	isspace@c,??_isspace+2
 13403  0052AE  C002  F006         	movff	isspace@c+1,??_isspace+3
 13404  0052B2  5003               	movf	??_isspace^0,w,c
 13405  0052B4  2605               	addwf	(??_isspace+2)^0,f,c
 13406  0052B6  5004               	movf	(??_isspace+1)^0,w,c
 13407  0052B8  2206               	addwfc	(??_isspace+3)^0,f,c
 13408  0052BA  5006               	movf	(??_isspace+3)^0,w,c
 13409  0052BC  E109               	bnz	u5600
 13410  0052BE  0E05               	movlw	5
 13411  0052C0  5C05               	subwf	(??_isspace+2)^0,w,c
 13412  0052C2  A0D8               	btfss	status,0,c
 13413  0052C4  EF66  F029         	goto	u5601
 13414  0052C8  EF68  F029         	goto	u5600
 13415  0052CC                     u5601:
 13416  0052CC  EF6A  F029         	goto	l5049
 13417  0052D0                     u5600:
 13418  0052D0  0E00               	movlw	0
 13419  0052D2  6E07               	movwf	_isspace$3081^0,c
 13420  0052D4                     l5049:
 13421  0052D4  C007  F001         	movff	_isspace$3081,?_isspace
 13422  0052D8  6A02               	clrf	(?_isspace+1)^0,c
 13423  0052DA  0012               	return		;funcret
 13424  0052DC                     __end_of_isspace:
 13425                           	callstack 0
 13426                           
 13427 ;; *************** function _isdigit *****************
 13428 ;; Defined at:
 13429 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
 13430 ;; Parameters:    Size  Location     Type
 13431 ;;  c               2    0[COMRAM] int 
 13432 ;; Auto vars:     Size  Location     Type
 13433 ;;		None
 13434 ;; Return value:  Size  Location     Type
 13435 ;;                  2    0[COMRAM] int 
 13436 ;; Registers used:
 13437 ;;		wreg, status,2, status,0
 13438 ;; Tracked objects:
 13439 ;;		On entry : 0/0
 13440 ;;		On exit  : 0/0
 13441 ;;		Unchanged: 0/0
 13442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13443 ;;      Params:         2       0       0       0       0       0       0
 13444 ;;      Locals:         0       0       0       0       0       0       0
 13445 ;;      Temps:          4       0       0       0       0       0       0
 13446 ;;      Totals:         6       0       0       0       0       0       0
 13447 ;;Total ram usage:        6 bytes
 13448 ;; Hardware stack levels used:    1
 13449 ;; Hardware stack levels required when called:    1
 13450 ;; This function calls:
 13451 ;;		Nothing
 13452 ;; This function is called by:
 13453 ;;		_vfpfcnvrt
 13454 ;;		_atoi
 13455 ;; This function uses a non-reentrant model
 13456 ;;
 13457                           
 13458                           	psect	text51
 13459  00559A                     __ptext51:
 13460                           	callstack 0
 13461  00559A                     _isdigit:
 13462                           	callstack 23
 13463  00559A  0ED0               	movlw	208
 13464  00559C  6E03               	movwf	??_isdigit^0,c
 13465  00559E  0EFF               	movlw	255
 13466  0055A0  6E04               	movwf	(??_isdigit+1)^0,c
 13467  0055A2  C001  F005         	movff	isdigit@c,??_isdigit+2
 13468  0055A6  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 13469  0055AA  5003               	movf	??_isdigit^0,w,c
 13470  0055AC  2605               	addwf	(??_isdigit+2)^0,f,c
 13471  0055AE  5004               	movf	(??_isdigit+1)^0,w,c
 13472  0055B0  2206               	addwfc	(??_isdigit+3)^0,f,c
 13473  0055B2  5006               	movf	(??_isdigit+3)^0,w,c
 13474  0055B4  E10A               	bnz	u5570
 13475  0055B6  0E0A               	movlw	10
 13476  0055B8  5C05               	subwf	(??_isdigit+2)^0,w,c
 13477  0055BA  A0D8               	btfss	status,0,c
 13478  0055BC  EFE2  F02A         	goto	u5571
 13479  0055C0  EFE5  F02A         	goto	u5570
 13480  0055C4                     u5571:
 13481  0055C4  0E01               	movlw	1
 13482  0055C6  EFE6  F02A         	goto	u5580
 13483  0055CA                     u5570:
 13484  0055CA  0E00               	movlw	0
 13485  0055CC                     u5580:
 13486  0055CC  6E01               	movwf	?_isdigit^0,c
 13487  0055CE  6A02               	clrf	(?_isdigit+1)^0,c
 13488  0055D0  0012               	return		;funcret
 13489  0055D2                     __end_of_isdigit:
 13490                           	callstack 0
 13491                           
 13492 ;; *************** function ___wmul *****************
 13493 ;; Defined at:
 13494 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
 13495 ;; Parameters:    Size  Location     Type
 13496 ;;  multiplier      2    0[COMRAM] unsigned int 
 13497 ;;  multiplicand    2    2[COMRAM] unsigned int 
 13498 ;; Auto vars:     Size  Location     Type
 13499 ;;  product         2    4[COMRAM] unsigned int 
 13500 ;; Return value:  Size  Location     Type
 13501 ;;                  2    0[COMRAM] unsigned int 
 13502 ;; Registers used:
 13503 ;;		wreg, status,2, status,0, prodl, prodh
 13504 ;; Tracked objects:
 13505 ;;		On entry : 0/0
 13506 ;;		On exit  : 0/0
 13507 ;;		Unchanged: 0/0
 13508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13509 ;;      Params:         4       0       0       0       0       0       0
 13510 ;;      Locals:         2       0       0       0       0       0       0
 13511 ;;      Temps:          0       0       0       0       0       0       0
 13512 ;;      Totals:         6       0       0       0       0       0       0
 13513 ;;Total ram usage:        6 bytes
 13514 ;; Hardware stack levels used:    1
 13515 ;; Hardware stack levels required when called:    1
 13516 ;; This function calls:
 13517 ;;		Nothing
 13518 ;; This function is called by:
 13519 ;;		_atoi
 13520 ;; This function uses a non-reentrant model
 13521 ;;
 13522                           
 13523                           	psect	text52
 13524  005728                     __ptext52:
 13525                           	callstack 0
 13526  005728                     ___wmul:
 13527                           	callstack 22
 13528  005728  5001               	movf	___wmul@multiplier^0,w,c
 13529  00572A  0203               	mulwf	___wmul@multiplicand^0,c
 13530  00572C  CFF3 F005          	movff	prodl,___wmul@product
 13531  005730  CFF4 F006          	movff	prodh,___wmul@product+1
 13532  005734  5001               	movf	___wmul@multiplier^0,w,c
 13533  005736  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 13534  005738  50F3               	movf	243,w,c
 13535  00573A  2606               	addwf	(___wmul@product+1)^0,f,c
 13536  00573C  5002               	movf	(___wmul@multiplier+1)^0,w,c
 13537  00573E  0203               	mulwf	___wmul@multiplicand^0,c
 13538  005740  50F3               	movf	243,w,c
 13539  005742  2606               	addwf	(___wmul@product+1)^0,f,c
 13540  005744  C005  F001         	movff	___wmul@product,?___wmul
 13541  005748  C006  F002         	movff	___wmul@product+1,?___wmul+1
 13542  00574C  0012               	return		;funcret
 13543  00574E                     __end_of___wmul:
 13544                           	callstack 0
 13545                           
 13546 ;; *************** function _eepromWrite *****************
 13547 ;; Defined at:
 13548 ;;		line 69 in file "fs_eeprom.c"
 13549 ;; Parameters:    Size  Location     Type
 13550 ;;  address         1    wreg     unsigned char 
 13551 ;;  data            1    0[COMRAM] unsigned char 
 13552 ;; Auto vars:     Size  Location     Type
 13553 ;;  address         1    1[COMRAM] unsigned char 
 13554 ;; Return value:  Size  Location     Type
 13555 ;;                  1    wreg      void 
 13556 ;; Registers used:
 13557 ;;		wreg, status,2
 13558 ;; Tracked objects:
 13559 ;;		On entry : 0/0
 13560 ;;		On exit  : 0/0
 13561 ;;		Unchanged: 0/0
 13562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13563 ;;      Params:         1       0       0       0       0       0       0
 13564 ;;      Locals:         1       0       0       0       0       0       0
 13565 ;;      Temps:          0       0       0       0       0       0       0
 13566 ;;      Totals:         2       0       0       0       0       0       0
 13567 ;;Total ram usage:        2 bytes
 13568 ;; Hardware stack levels used:    1
 13569 ;; Hardware stack levels required when called:    1
 13570 ;; This function calls:
 13571 ;;		Nothing
 13572 ;; This function is called by:
 13573 ;;		_speedLimitSettingMenu
 13574 ;;		_stopTimeSettingMenu
 13575 ;;		_driverTimeSettingMenu
 13576 ;; This function uses a non-reentrant model
 13577 ;;
 13578                           
 13579                           	psect	text53
 13580  0056AA                     __ptext53:
 13581                           	callstack 0
 13582  0056AA                     _eepromWrite:
 13583                           	callstack 26
 13584                           
 13585                           ;incstack = 0
 13586                           ;eepromWrite@address stored from wreg
 13587  0056AA  6E02               	movwf	eepromWrite@address^0,c
 13588  0056AC                     
 13589                           ;fs_eeprom.c: 69: void eepromWrite(uint8_t address, uint8_t data);fs_eeprom.c: 70: {;fs_
      +                          eeprom.c: 73:     EEADR = (uint8_t)address;
 13590  0056AC  C002  FFA9         	movff	eepromWrite@address,4009	;volatile
 13591  0056B0                     
 13592                           ;fs_eeprom.c: 75:     EEDATA = data;
 13593  0056B0  C001  FFA8         	movff	eepromWrite@data,4008	;volatile
 13594  0056B4                     
 13595                           ;fs_eeprom.c: 76:     EECON1bits.EEPGD = 0;
 13596  0056B4  9EA6               	bcf	166,7,c	;volsfr
 13597  0056B6                     
 13598                           ;fs_eeprom.c: 77:     EECON1bits.CFGS = 0;
 13599  0056B6  9CA6               	bcf	166,6,c	;volsfr
 13600  0056B8                     
 13601                           ;fs_eeprom.c: 78:     EECON1bits.WREN = 1;
 13602  0056B8  84A6               	bsf	166,2,c	;volsfr
 13603  0056BA                     
 13604                           ;fs_eeprom.c: 82:     EECON2 = 0x55;
 13605  0056BA  0E55               	movlw	85
 13606  0056BC  6EA7               	movwf	167,c	;volsfr
 13607  0056BE                     
 13608                           ;fs_eeprom.c: 83:     EECON2 = 0xAA;
 13609  0056BE  0EAA               	movlw	170
 13610  0056C0  6EA7               	movwf	167,c	;volsfr
 13611  0056C2                     
 13612                           ;fs_eeprom.c: 84:     EECON1bits.WR = 1;
 13613  0056C2  82A6               	bsf	166,1,c	;volsfr
 13614  0056C4                     l98:
 13615                           
 13616                           ;fs_eeprom.c: 87:     while(PIR2bits.EEIF == 0)
 13617  0056C4  A8A1               	btfss	161,4,c	;volatile
 13618  0056C6  EF67  F02B         	goto	u6881
 13619  0056CA  EF69  F02B         	goto	u6880
 13620  0056CE                     u6881:
 13621  0056CE  EF62  F02B         	goto	l98
 13622  0056D2                     u6880:
 13623  0056D2                     
 13624                           ;fs_eeprom.c: 92:     PIR2bits.EEIF = 0;
 13625  0056D2  98A1               	bcf	161,4,c	;volatile
 13626                           
 13627                           ;fs_eeprom.c: 93:     EECON1bits.WREN = 0;
 13628  0056D4  94A6               	bcf	166,2,c	;volsfr
 13629  0056D6  0012               	return		;funcret
 13630  0056D8                     __end_of_eepromWrite:
 13631                           	callstack 0
 13632                           
 13633 ;; *************** function _buttonControlFlags *****************
 13634 ;; Defined at:
 13635 ;;		line 76 in file "fs_menu_controller.c"
 13636 ;; Parameters:    Size  Location     Type
 13637 ;;		None
 13638 ;; Auto vars:     Size  Location     Type
 13639 ;;		None
 13640 ;; Return value:  Size  Location     Type
 13641 ;;                  1    wreg      void 
 13642 ;; Registers used:
 13643 ;;		wreg, status,2, status,0
 13644 ;; Tracked objects:
 13645 ;;		On entry : 0/0
 13646 ;;		On exit  : 0/0
 13647 ;;		Unchanged: 0/0
 13648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13649 ;;      Params:         0       0       0       0       0       0       0
 13650 ;;      Locals:         0       0       0       0       0       0       0
 13651 ;;      Temps:          0       0       0       0       0       0       0
 13652 ;;      Totals:         0       0       0       0       0       0       0
 13653 ;;Total ram usage:        0 bytes
 13654 ;; Hardware stack levels used:    1
 13655 ;; Hardware stack levels required when called:    1
 13656 ;; This function calls:
 13657 ;;		Nothing
 13658 ;; This function is called by:
 13659 ;;		_loopTaskMenuControl
 13660 ;; This function uses a non-reentrant model
 13661 ;;
 13662                           
 13663                           	psect	text54
 13664  0031E2                     __ptext54:
 13665                           	callstack 0
 13666  0031E2                     _buttonControlFlags:
 13667                           	callstack 28
 13668  0031E2                     
 13669                           ;fs_menu_controller.c: 79:     if ((button_bounce_controller.menu == 0) && (PORTBbits.RB
      +                          7 == 0))
 13670  0031E2  0101               	movlb	1	; () banked
 13671  0031E4  519D               	movf	_button_bounce_controller& (0+255),w,b
 13672  0031E6  A4D8               	btfss	status,2,c
 13673  0031E8  EFF8  F018         	goto	u7571
 13674  0031EC  EFFA  F018         	goto	u7570
 13675  0031F0                     u7571:
 13676  0031F0  EF05  F019         	goto	l6355
 13677  0031F4                     u7570:
 13678  0031F4                     
 13679                           ; BSR set to: 1
 13680  0031F4  BE81               	btfsc	129,7,c	;volatile
 13681  0031F6  EFFF  F018         	goto	u7581
 13682  0031FA  EF01  F019         	goto	u7580
 13683  0031FE                     u7581:
 13684  0031FE  EF05  F019         	goto	l6355
 13685  003202                     u7580:
 13686  003202                     
 13687                           ; BSR set to: 1
 13688                           ;fs_menu_controller.c: 80:     {;fs_menu_controller.c: 81:         button_bounce_control
      +                          ler.menu = 1;
 13689  003202  0E01               	movlw	1
 13690  003204  6F9D               	movwf	_button_bounce_controller& (0+255),b
 13691                           
 13692                           ;fs_menu_controller.c: 82:         menu_flags.menu_input_flag = 1;
 13693  003206  0E01               	movlw	1
 13694  003208  6F97               	movwf	_menu_flags& (0+255),b
 13695  00320A                     l6355:
 13696                           
 13697                           ; BSR set to: 1
 13698                           ;fs_menu_controller.c: 85:     if ((PORTBbits.RB7 == 1) && (button_bounce_controller.men
      +                          u == 1))
 13699  00320A  AE81               	btfss	129,7,c	;volatile
 13700  00320C  EF0A  F019         	goto	u7591
 13701  003210  EF0C  F019         	goto	u7590
 13702  003214                     u7591:
 13703  003214  EF18  F019         	goto	l417
 13704  003218                     u7590:
 13705  003218                     
 13706                           ; BSR set to: 1
 13707  003218  059D               	decf	_button_bounce_controller& (0+255),w,b
 13708  00321A  A4D8               	btfss	status,2,c
 13709  00321C  EF12  F019         	goto	u7601
 13710  003220  EF14  F019         	goto	u7600
 13711  003224                     u7601:
 13712  003224  EF18  F019         	goto	l417
 13713  003228                     u7600:
 13714  003228                     
 13715                           ; BSR set to: 1
 13716                           ;fs_menu_controller.c: 86:     {;fs_menu_controller.c: 87:         button_bounce_control
      +                          ler.menu = 0;
 13717  003228  0E00               	movlw	0
 13718  00322A  6F9D               	movwf	_button_bounce_controller& (0+255),b
 13719                           
 13720                           ;fs_menu_controller.c: 88:         menu_flags.menu_input_flag = 0;
 13721  00322C  0E00               	movlw	0
 13722  00322E  6F97               	movwf	_menu_flags& (0+255),b
 13723  003230                     l417:
 13724                           
 13725                           ; BSR set to: 1
 13726                           ;fs_menu_controller.c: 92:     if ((button_bounce_controller.pause == 0) && (PORTDbits.R
      +                          D2 == 0))
 13727  003230  51A0               	movf	(_button_bounce_controller+3)& (0+255),w,b
 13728  003232  A4D8               	btfss	status,2,c
 13729  003234  EF1E  F019         	goto	u7611
 13730  003238  EF20  F019         	goto	u7610
 13731  00323C                     u7611:
 13732  00323C  EF2B  F019         	goto	l6365
 13733  003240                     u7610:
 13734  003240                     
 13735                           ; BSR set to: 1
 13736  003240  B483               	btfsc	131,2,c	;volatile
 13737  003242  EF25  F019         	goto	u7621
 13738  003246  EF27  F019         	goto	u7620
 13739  00324A                     u7621:
 13740  00324A  EF2B  F019         	goto	l6365
 13741  00324E                     u7620:
 13742  00324E                     
 13743                           ; BSR set to: 1
 13744                           ;fs_menu_controller.c: 93:     {;fs_menu_controller.c: 94:         button_bounce_control
      +                          ler.pause = 1;
 13745  00324E  0E01               	movlw	1
 13746  003250  6FA0               	movwf	(_button_bounce_controller+3)& (0+255),b
 13747                           
 13748                           ;fs_menu_controller.c: 95:         menu_flags.menu_pause_flag = 1;
 13749  003252  0E01               	movlw	1
 13750  003254  6F9A               	movwf	(_menu_flags+3)& (0+255),b
 13751  003256                     l6365:
 13752                           
 13753                           ; BSR set to: 1
 13754                           ;fs_menu_controller.c: 97:     if ((PORTDbits.RD2 == 1) && (button_bounce_controller.pau
      +                          se == 1))
 13755  003256  A483               	btfss	131,2,c	;volatile
 13756  003258  EF30  F019         	goto	u7631
 13757  00325C  EF32  F019         	goto	u7630
 13758  003260                     u7631:
 13759  003260  EF3E  F019         	goto	l419
 13760  003264                     u7630:
 13761  003264                     
 13762                           ; BSR set to: 1
 13763  003264  05A0               	decf	(_button_bounce_controller+3)& (0+255),w,b
 13764  003266  A4D8               	btfss	status,2,c
 13765  003268  EF38  F019         	goto	u7641
 13766  00326C  EF3A  F019         	goto	u7640
 13767  003270                     u7641:
 13768  003270  EF3E  F019         	goto	l419
 13769  003274                     u7640:
 13770  003274                     
 13771                           ; BSR set to: 1
 13772                           ;fs_menu_controller.c: 98:     {;fs_menu_controller.c: 99:         button_bounce_control
      +                          ler.pause = 0;
 13773  003274  0E00               	movlw	0
 13774  003276  6FA0               	movwf	(_button_bounce_controller+3)& (0+255),b
 13775                           
 13776                           ;fs_menu_controller.c: 100:         menu_flags.menu_pause_flag = 0;
 13777  003278  0E00               	movlw	0
 13778  00327A  6F9A               	movwf	(_menu_flags+3)& (0+255),b
 13779  00327C                     l419:
 13780                           
 13781                           ; BSR set to: 1
 13782                           ;fs_menu_controller.c: 104:     if ((button_bounce_controller.start == 0) && (PORTDbits.
      +                          RD0 == 0))
 13783  00327C  519E               	movf	(_button_bounce_controller+1)& (0+255),w,b
 13784  00327E  A4D8               	btfss	status,2,c
 13785  003280  EF44  F019         	goto	u7651
 13786  003284  EF46  F019         	goto	u7650
 13787  003288                     u7651:
 13788  003288  EF51  F019         	goto	l6375
 13789  00328C                     u7650:
 13790  00328C                     
 13791                           ; BSR set to: 1
 13792  00328C  B083               	btfsc	131,0,c	;volatile
 13793  00328E  EF4B  F019         	goto	u7661
 13794  003292  EF4D  F019         	goto	u7660
 13795  003296                     u7661:
 13796  003296  EF51  F019         	goto	l6375
 13797  00329A                     u7660:
 13798  00329A                     
 13799                           ; BSR set to: 1
 13800                           ;fs_menu_controller.c: 105:     {;fs_menu_controller.c: 106:         button_bounce_contr
      +                          oller.start = 1;
 13801  00329A  0E01               	movlw	1
 13802  00329C  6F9E               	movwf	(_button_bounce_controller+1)& (0+255),b
 13803                           
 13804                           ;fs_menu_controller.c: 107:         menu_flags.menu_start_flag = 1;
 13805  00329E  0E01               	movlw	1
 13806  0032A0  6F98               	movwf	(_menu_flags+1)& (0+255),b
 13807  0032A2                     l6375:
 13808                           
 13809                           ; BSR set to: 1
 13810                           ;fs_menu_controller.c: 109:     if ((PORTDbits.RD0 == 1) && (button_bounce_controller.st
      +                          art == 1))
 13811  0032A2  A083               	btfss	131,0,c	;volatile
 13812  0032A4  EF56  F019         	goto	u7671
 13813  0032A8  EF58  F019         	goto	u7670
 13814  0032AC                     u7671:
 13815  0032AC  EF64  F019         	goto	l421
 13816  0032B0                     u7670:
 13817  0032B0                     
 13818                           ; BSR set to: 1
 13819  0032B0  059E               	decf	(_button_bounce_controller+1)& (0+255),w,b
 13820  0032B2  A4D8               	btfss	status,2,c
 13821  0032B4  EF5E  F019         	goto	u7681
 13822  0032B8  EF60  F019         	goto	u7680
 13823  0032BC                     u7681:
 13824  0032BC  EF64  F019         	goto	l421
 13825  0032C0                     u7680:
 13826  0032C0                     
 13827                           ; BSR set to: 1
 13828                           ;fs_menu_controller.c: 110:     {;fs_menu_controller.c: 111:         button_bounce_contr
      +                          oller.start = 0;
 13829  0032C0  0E00               	movlw	0
 13830  0032C2  6F9E               	movwf	(_button_bounce_controller+1)& (0+255),b
 13831                           
 13832                           ;fs_menu_controller.c: 112:         menu_flags.menu_start_flag = 0;
 13833  0032C4  0E00               	movlw	0
 13834  0032C6  6F98               	movwf	(_menu_flags+1)& (0+255),b
 13835  0032C8                     l421:
 13836                           
 13837                           ; BSR set to: 1
 13838                           ;fs_menu_controller.c: 116:     if ((button_bounce_controller.stop == 0) && (PORTDbits.R
      +                          D1 == 0))
 13839  0032C8  519F               	movf	(_button_bounce_controller+2)& (0+255),w,b
 13840  0032CA  A4D8               	btfss	status,2,c
 13841  0032CC  EF6A  F019         	goto	u7691
 13842  0032D0  EF6C  F019         	goto	u7690
 13843  0032D4                     u7691:
 13844  0032D4  EF77  F019         	goto	l6385
 13845  0032D8                     u7690:
 13846  0032D8                     
 13847                           ; BSR set to: 1
 13848  0032D8  B283               	btfsc	131,1,c	;volatile
 13849  0032DA  EF71  F019         	goto	u7701
 13850  0032DE  EF73  F019         	goto	u7700
 13851  0032E2                     u7701:
 13852  0032E2  EF77  F019         	goto	l6385
 13853  0032E6                     u7700:
 13854  0032E6                     
 13855                           ; BSR set to: 1
 13856                           ;fs_menu_controller.c: 117:     {;fs_menu_controller.c: 118:         button_bounce_contr
      +                          oller.stop = 1;
 13857  0032E6  0E01               	movlw	1
 13858  0032E8  6F9F               	movwf	(_button_bounce_controller+2)& (0+255),b
 13859                           
 13860                           ;fs_menu_controller.c: 119:         menu_flags.menu_stop_flag = 1;
 13861  0032EA  0E01               	movlw	1
 13862  0032EC  6F99               	movwf	(_menu_flags+2)& (0+255),b
 13863  0032EE                     l6385:
 13864                           
 13865                           ; BSR set to: 1
 13866                           ;fs_menu_controller.c: 121:     if ((PORTDbits.RD1 == 1) && (button_bounce_controller.st
      +                          op == 1))
 13867  0032EE  A283               	btfss	131,1,c	;volatile
 13868  0032F0  EF7C  F019         	goto	u7711
 13869  0032F4  EF7E  F019         	goto	u7710
 13870  0032F8                     u7711:
 13871  0032F8  EF8A  F019         	goto	l423
 13872  0032FC                     u7710:
 13873  0032FC                     
 13874                           ; BSR set to: 1
 13875  0032FC  059F               	decf	(_button_bounce_controller+2)& (0+255),w,b
 13876  0032FE  A4D8               	btfss	status,2,c
 13877  003300  EF84  F019         	goto	u7721
 13878  003304  EF86  F019         	goto	u7720
 13879  003308                     u7721:
 13880  003308  EF8A  F019         	goto	l423
 13881  00330C                     u7720:
 13882  00330C                     
 13883                           ; BSR set to: 1
 13884                           ;fs_menu_controller.c: 122:     {;fs_menu_controller.c: 123:         button_bounce_contr
      +                          oller.stop = 0;
 13885  00330C  0E00               	movlw	0
 13886  00330E  6F9F               	movwf	(_button_bounce_controller+2)& (0+255),b
 13887                           
 13888                           ;fs_menu_controller.c: 124:         menu_flags.menu_stop_flag = 0;
 13889  003310  0E00               	movlw	0
 13890  003312  6F99               	movwf	(_menu_flags+2)& (0+255),b
 13891  003314                     l423:
 13892                           
 13893                           ; BSR set to: 1
 13894                           ;fs_menu_controller.c: 128:     if ((button_bounce_controller.increase == 0) && (PORTBbi
      +                          ts.RB6 == 0))
 13895  003314  51A2               	movf	(_button_bounce_controller+5)& (0+255),w,b
 13896  003316  A4D8               	btfss	status,2,c
 13897  003318  EF90  F019         	goto	u7731
 13898  00331C  EF92  F019         	goto	u7730
 13899  003320                     u7731:
 13900  003320  EF9D  F019         	goto	l6395
 13901  003324                     u7730:
 13902  003324                     
 13903                           ; BSR set to: 1
 13904  003324  BC81               	btfsc	129,6,c	;volatile
 13905  003326  EF97  F019         	goto	u7741
 13906  00332A  EF99  F019         	goto	u7740
 13907  00332E                     u7741:
 13908  00332E  EF9D  F019         	goto	l6395
 13909  003332                     u7740:
 13910  003332                     
 13911                           ; BSR set to: 1
 13912                           ;fs_menu_controller.c: 129:     {;fs_menu_controller.c: 130:         button_bounce_contr
      +                          oller.increase = 1;
 13913  003332  0E01               	movlw	1
 13914  003334  6FA2               	movwf	(_button_bounce_controller+5)& (0+255),b
 13915                           
 13916                           ;fs_menu_controller.c: 131:         menu_flags.menu_increase_flag = 1;
 13917  003336  0E01               	movlw	1
 13918  003338  6F9B               	movwf	(_menu_flags+4)& (0+255),b
 13919  00333A                     l6395:
 13920                           
 13921                           ; BSR set to: 1
 13922                           ;fs_menu_controller.c: 133:     if ((PORTBbits.RB6 == 1) && (button_bounce_controller.in
      +                          crease == 1))
 13923  00333A  AC81               	btfss	129,6,c	;volatile
 13924  00333C  EFA2  F019         	goto	u7751
 13925  003340  EFA4  F019         	goto	u7750
 13926  003344                     u7751:
 13927  003344  EFB0  F019         	goto	l425
 13928  003348                     u7750:
 13929  003348                     
 13930                           ; BSR set to: 1
 13931  003348  05A2               	decf	(_button_bounce_controller+5)& (0+255),w,b
 13932  00334A  A4D8               	btfss	status,2,c
 13933  00334C  EFAA  F019         	goto	u7761
 13934  003350  EFAC  F019         	goto	u7760
 13935  003354                     u7761:
 13936  003354  EFB0  F019         	goto	l425
 13937  003358                     u7760:
 13938  003358                     
 13939                           ; BSR set to: 1
 13940                           ;fs_menu_controller.c: 134:     {;fs_menu_controller.c: 135:         button_bounce_contr
      +                          oller.increase = 0;
 13941  003358  0E00               	movlw	0
 13942  00335A  6FA2               	movwf	(_button_bounce_controller+5)& (0+255),b
 13943                           
 13944                           ;fs_menu_controller.c: 136:         menu_flags.menu_increase_flag = 0;
 13945  00335C  0E00               	movlw	0
 13946  00335E  6F9B               	movwf	(_menu_flags+4)& (0+255),b
 13947  003360                     l425:
 13948                           
 13949                           ; BSR set to: 1
 13950                           ;fs_menu_controller.c: 140:     if ((button_bounce_controller.decrease == 0) && (PORTDbi
      +                          ts.RD4 == 0))
 13951  003360  51A1               	movf	(_button_bounce_controller+4)& (0+255),w,b
 13952  003362  A4D8               	btfss	status,2,c
 13953  003364  EFB6  F019         	goto	u7771
 13954  003368  EFB8  F019         	goto	u7770
 13955  00336C                     u7771:
 13956  00336C  EFC3  F019         	goto	l6405
 13957  003370                     u7770:
 13958  003370                     
 13959                           ; BSR set to: 1
 13960  003370  B883               	btfsc	131,4,c	;volatile
 13961  003372  EFBD  F019         	goto	u7781
 13962  003376  EFBF  F019         	goto	u7780
 13963  00337A                     u7781:
 13964  00337A  EFC3  F019         	goto	l6405
 13965  00337E                     u7780:
 13966  00337E                     
 13967                           ; BSR set to: 1
 13968                           ;fs_menu_controller.c: 141:     {;fs_menu_controller.c: 142:         button_bounce_contr
      +                          oller.decrease = 1;
 13969  00337E  0E01               	movlw	1
 13970  003380  6FA1               	movwf	(_button_bounce_controller+4)& (0+255),b
 13971                           
 13972                           ;fs_menu_controller.c: 143:         menu_flags.menu_decrease_flag = 1;
 13973  003382  0E01               	movlw	1
 13974  003384  6F9C               	movwf	(_menu_flags+5)& (0+255),b
 13975  003386                     l6405:
 13976                           
 13977                           ; BSR set to: 1
 13978                           ;fs_menu_controller.c: 145:     if ((PORTDbits.RD4 == 1) && (button_bounce_controller.de
      +                          crease == 1))
 13979  003386  A883               	btfss	131,4,c	;volatile
 13980  003388  EFC8  F019         	goto	u7791
 13981  00338C  EFCA  F019         	goto	u7790
 13982  003390                     u7791:
 13983  003390  EFD6  F019         	goto	l428
 13984  003394                     u7790:
 13985  003394                     
 13986                           ; BSR set to: 1
 13987  003394  05A1               	decf	(_button_bounce_controller+4)& (0+255),w,b
 13988  003396  A4D8               	btfss	status,2,c
 13989  003398  EFD0  F019         	goto	u7801
 13990  00339C  EFD2  F019         	goto	u7800
 13991  0033A0                     u7801:
 13992  0033A0  EFD6  F019         	goto	l428
 13993  0033A4                     u7800:
 13994  0033A4                     
 13995                           ; BSR set to: 1
 13996                           ;fs_menu_controller.c: 146:     {;fs_menu_controller.c: 147:         button_bounce_contr
      +                          oller.decrease = 0;
 13997  0033A4  0E00               	movlw	0
 13998  0033A6  6FA1               	movwf	(_button_bounce_controller+4)& (0+255),b
 13999                           
 14000                           ;fs_menu_controller.c: 148:         menu_flags.menu_decrease_flag = 0;
 14001  0033A8  0E00               	movlw	0
 14002  0033AA  6F9C               	movwf	(_menu_flags+5)& (0+255),b
 14003  0033AC                     l428:
 14004                           
 14005                           ; BSR set to: 1
 14006  0033AC  0012               	return		;funcret
 14007  0033AE                     __end_of_buttonControlFlags:
 14008                           	callstack 0
 14009                           
 14010 ;; *************** function _loopTaskInit *****************
 14011 ;; Defined at:
 14012 ;;		line 79 in file "fs_main.c"
 14013 ;; Parameters:    Size  Location     Type
 14014 ;;		None
 14015 ;; Auto vars:     Size  Location     Type
 14016 ;;		None
 14017 ;; Return value:  Size  Location     Type
 14018 ;;                  1    wreg      void 
 14019 ;; Registers used:
 14020 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14021 ;; Tracked objects:
 14022 ;;		On entry : 0/0
 14023 ;;		On exit  : 0/0
 14024 ;;		Unchanged: 0/0
 14025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14026 ;;      Params:         0       0       0       0       0       0       0
 14027 ;;      Locals:         0       0       0       0       0       0       0
 14028 ;;      Temps:          0       0       0       0       0       0       0
 14029 ;;      Totals:         0       0       0       0       0       0       0
 14030 ;;Total ram usage:        0 bytes
 14031 ;; Hardware stack levels used:    1
 14032 ;; Hardware stack levels required when called:    5
 14033 ;; This function calls:
 14034 ;;		_PWM1_setDC
 14035 ;;		_PWM2_setDC
 14036 ;;		_PWM_Init
 14037 ;;		_adcInit
 14038 ;;		_lcdClear
 14039 ;;		_lcdInit
 14040 ;;		_mcuInit
 14041 ;;		_menuInitialize
 14042 ;;		_openLCD_Script
 14043 ;;		_systemInit
 14044 ;;		_timer_0_init
 14045 ;; This function is called by:
 14046 ;;		_main
 14047 ;; This function uses a non-reentrant model
 14048 ;;
 14049                           
 14050                           	psect	text55
 14051  005472                     __ptext55:
 14052                           	callstack 0
 14053  005472                     _loopTaskInit:
 14054                           	callstack 25
 14055  005472                     
 14056                           ;fs_main.c: 81:     mcuInit();
 14057  005472  ECD2  F02B         	call	_mcuInit	;wreg free
 14058  005476                     
 14059                           ;fs_main.c: 82:     menuInitialize();
 14060  005476  EC6C  F02B         	call	_menuInitialize	;wreg free
 14061  00547A                     
 14062                           ;fs_main.c: 84:     adcInit();
 14063  00547A  EC58  F02A         	call	_adcInit	;wreg free
 14064  00547E                     
 14065                           ;fs_main.c: 86:     timer_0_init();
 14066  00547E  ECE7  F02B         	call	_timer_0_init	;wreg free
 14067  005482                     
 14068                           ;fs_main.c: 87:     lcdInit();
 14069  005482  EC43  F026         	call	_lcdInit	;wreg free
 14070  005486                     
 14071                           ;fs_main.c: 88:     systemInit();
 14072  005486  ECCF  F01F         	call	_systemInit	;wreg free
 14073  00548A                     
 14074                           ;fs_main.c: 89:     lcdClear();
 14075  00548A  ECF0  F02B         	call	_lcdClear	;wreg free
 14076  00548E                     
 14077                           ;fs_main.c: 91:     PWM_Init();
 14078  00548E  EC80  F02B         	call	_PWM_Init	;wreg free
 14079  005492                     
 14080                           ;fs_main.c: 92:     PWM1_setDC(0);
 14081  005492  0E00               	movlw	0
 14082  005494  6E59               	movwf	(PWM1_setDC@dutycycle+1)^0,c
 14083  005496  0E00               	movlw	0
 14084  005498  6E58               	movwf	PWM1_setDC@dutycycle^0,c
 14085  00549A  EC52  F027         	call	_PWM1_setDC	;wreg free
 14086  00549E                     
 14087                           ;fs_main.c: 93:     PWM2_setDC(0);
 14088  00549E  0E00               	movlw	0
 14089  0054A0  6E59               	movwf	(PWM2_setDC@dutycycle+1)^0,c
 14090  0054A2  0E00               	movlw	0
 14091  0054A4  6E58               	movwf	PWM2_setDC@dutycycle^0,c
 14092  0054A6  EC15  F027         	call	_PWM2_setDC	;wreg free
 14093  0054AA                     
 14094                           ;fs_main.c: 94:     openLCD_Script();
 14095  0054AA  EC6E  F029         	call	_openLCD_Script	;wreg free
 14096  0054AE  0012               	return		;funcret
 14097  0054B0                     __end_of_loopTaskInit:
 14098                           	callstack 0
 14099                           
 14100 ;; *************** function _timer_0_init *****************
 14101 ;; Defined at:
 14102 ;;		line 77 in file "fs_timer.c"
 14103 ;; Parameters:    Size  Location     Type
 14104 ;;		None
 14105 ;; Auto vars:     Size  Location     Type
 14106 ;;		None
 14107 ;; Return value:  Size  Location     Type
 14108 ;;                  1    wreg      void 
 14109 ;; Registers used:
 14110 ;;		wreg, status,2
 14111 ;; Tracked objects:
 14112 ;;		On entry : 0/0
 14113 ;;		On exit  : 0/0
 14114 ;;		Unchanged: 0/0
 14115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14116 ;;      Params:         0       0       0       0       0       0       0
 14117 ;;      Locals:         0       0       0       0       0       0       0
 14118 ;;      Temps:          0       0       0       0       0       0       0
 14119 ;;      Totals:         0       0       0       0       0       0       0
 14120 ;;Total ram usage:        0 bytes
 14121 ;; Hardware stack levels used:    1
 14122 ;; Hardware stack levels required when called:    1
 14123 ;; This function calls:
 14124 ;;		Nothing
 14125 ;; This function is called by:
 14126 ;;		_loopTaskInit
 14127 ;; This function uses a non-reentrant model
 14128 ;;
 14129                           
 14130                           	psect	text56
 14131  0057CE                     __ptext56:
 14132                           	callstack 0
 14133  0057CE                     _timer_0_init:
 14134                           	callstack 28
 14135  0057CE                     
 14136                           ;fs_timer.c: 79:   T0CON = 0x81;
 14137  0057CE  0E81               	movlw	129
 14138  0057D0  6ED5               	movwf	213,c	;volatile
 14139                           
 14140                           ;fs_timer.c: 80:   TMR0H = 0x63;
 14141  0057D2  0E63               	movlw	99
 14142  0057D4  6ED7               	movwf	215,c	;volatile
 14143                           
 14144                           ;fs_timer.c: 81:   TMR0L = 0xC0;
 14145  0057D6  0EC0               	movlw	192
 14146  0057D8  6ED6               	movwf	214,c	;volatile
 14147  0057DA                     
 14148                           ;fs_timer.c: 82:   INTCONbits.GIE = 1;
 14149  0057DA  8EF2               	bsf	242,7,c	;volatile
 14150  0057DC                     
 14151                           ;fs_timer.c: 83:   INTCONbits.TMR0IE = 1;
 14152  0057DC  8AF2               	bsf	242,5,c	;volatile
 14153  0057DE  0012               	return		;funcret
 14154  0057E0                     __end_of_timer_0_init:
 14155                           	callstack 0
 14156                           
 14157 ;; *************** function _systemInit *****************
 14158 ;; Defined at:
 14159 ;;		line 49 in file "fs_mcu.c"
 14160 ;; Parameters:    Size  Location     Type
 14161 ;;		None
 14162 ;; Auto vars:     Size  Location     Type
 14163 ;;		None
 14164 ;; Return value:  Size  Location     Type
 14165 ;;                  1    wreg      void 
 14166 ;; Registers used:
 14167 ;;		wreg, status,2, cstack
 14168 ;; Tracked objects:
 14169 ;;		On entry : 0/0
 14170 ;;		On exit  : 0/0
 14171 ;;		Unchanged: 0/0
 14172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14173 ;;      Params:         0       0       0       0       0       0       0
 14174 ;;      Locals:         0       0       0       0       0       0       0
 14175 ;;      Temps:          2       0       0       0       0       0       0
 14176 ;;      Totals:         2       0       0       0       0       0       0
 14177 ;;Total ram usage:        2 bytes
 14178 ;; Hardware stack levels used:    1
 14179 ;; Hardware stack levels required when called:    2
 14180 ;; This function calls:
 14181 ;;		_eepromRead
 14182 ;; This function is called by:
 14183 ;;		_loopTaskInit
 14184 ;; This function uses a non-reentrant model
 14185 ;;
 14186                           
 14187                           	psect	text57
 14188  003F9E                     __ptext57:
 14189                           	callstack 0
 14190  003F9E                     _systemInit:
 14191                           	callstack 27
 14192  003F9E                     
 14193                           ;fs_mcu.c: 51:     driver_limit.pay = 0;
 14194  003F9E  0E00               	movlw	0
 14195  003FA0  0101               	movlb	1	; () banked
 14196  003FA2  6F83               	movwf	_driver_limit& (0+255),b
 14197  003FA4  0E00               	movlw	0
 14198  003FA6  6F84               	movwf	(_driver_limit+1)& (0+255),b
 14199  003FA8  0E00               	movlw	0
 14200  003FAA  6F85               	movwf	(_driver_limit+2)& (0+255),b
 14201  003FAC  0E00               	movlw	0
 14202  003FAE  6F86               	movwf	(_driver_limit+3)& (0+255),b
 14203                           
 14204                           ;fs_mcu.c: 52:     driver_limit.payda = 0;
 14205  003FB0  0E00               	movlw	0
 14206  003FB2  6F87               	movwf	(_driver_limit+4)& (0+255),b
 14207  003FB4  0E00               	movlw	0
 14208  003FB6  6F88               	movwf	(_driver_limit+5)& (0+255),b
 14209  003FB8  0E00               	movlw	0
 14210  003FBA  6F89               	movwf	(_driver_limit+6)& (0+255),b
 14211  003FBC  0E00               	movlw	0
 14212  003FBE  6F8A               	movwf	(_driver_limit+7)& (0+255),b
 14213                           
 14214                           ;fs_mcu.c: 53:     driver_limit.ortalama = 0;
 14215  003FC0  0E00               	movlw	0
 14216  003FC2  6F8B               	movwf	(_driver_limit+8)& (0+255),b
 14217  003FC4  0E00               	movlw	0
 14218  003FC6  6F8C               	movwf	(_driver_limit+9)& (0+255),b
 14219  003FC8  0E00               	movlw	0
 14220  003FCA  6F8D               	movwf	(_driver_limit+10)& (0+255),b
 14221  003FCC  0E00               	movlw	0
 14222  003FCE  6F8E               	movwf	(_driver_limit+11)& (0+255),b
 14223                           
 14224                           ;fs_mcu.c: 54:     convert_data.convert_channel_0 = 0;
 14225  003FD0  0E00               	movlw	0
 14226  003FD2  6F00               	movwf	_convert_data& (0+255),b
 14227  003FD4  0E00               	movlw	0
 14228  003FD6  6F01               	movwf	(_convert_data+1)& (0+255),b
 14229  003FD8  0E00               	movlw	0
 14230  003FDA  6F02               	movwf	(_convert_data+2)& (0+255),b
 14231  003FDC  0E00               	movlw	0
 14232  003FDE  6F03               	movwf	(_convert_data+3)& (0+255),b
 14233                           
 14234                           ;fs_mcu.c: 55:     convert_data.convert_channel_1 = 0;
 14235  003FE0  0E00               	movlw	0
 14236  003FE2  6F04               	movwf	(_convert_data+4)& (0+255),b
 14237  003FE4  0E00               	movlw	0
 14238  003FE6  6F05               	movwf	(_convert_data+5)& (0+255),b
 14239  003FE8  0E00               	movlw	0
 14240  003FEA  6F06               	movwf	(_convert_data+6)& (0+255),b
 14241  003FEC  0E00               	movlw	0
 14242  003FEE  6F07               	movwf	(_convert_data+7)& (0+255),b
 14243                           
 14244                           ;fs_mcu.c: 56:     convert_data.convert_channel_2 = 0;
 14245  003FF0  0E00               	movlw	0
 14246  003FF2  6F08               	movwf	(_convert_data+8)& (0+255),b
 14247  003FF4  0E00               	movlw	0
 14248  003FF6  6F09               	movwf	(_convert_data+9)& (0+255),b
 14249  003FF8  0E00               	movlw	0
 14250  003FFA  6F0A               	movwf	(_convert_data+10)& (0+255),b
 14251  003FFC  0E00               	movlw	0
 14252  003FFE  6F0B               	movwf	(_convert_data+11)& (0+255),b
 14253                           
 14254                           ;fs_mcu.c: 57:     convert_data.convert_channel_3 = 0;
 14255  004000  0E00               	movlw	0
 14256  004002  6F0C               	movwf	(_convert_data+12)& (0+255),b
 14257  004004  0E00               	movlw	0
 14258  004006  6F0D               	movwf	(_convert_data+13)& (0+255),b
 14259  004008  0E00               	movlw	0
 14260  00400A  6F0E               	movwf	(_convert_data+14)& (0+255),b
 14261  00400C  0E00               	movlw	0
 14262  00400E  6F0F               	movwf	(_convert_data+15)& (0+255),b
 14263                           
 14264                           ;fs_mcu.c: 58:     convert_data.convert_channel_4 = 0;
 14265  004010  0E00               	movlw	0
 14266  004012  6F10               	movwf	(_convert_data+16)& (0+255),b
 14267  004014  0E00               	movlw	0
 14268  004016  6F11               	movwf	(_convert_data+17)& (0+255),b
 14269  004018  0E00               	movlw	0
 14270  00401A  6F12               	movwf	(_convert_data+18)& (0+255),b
 14271  00401C  0E00               	movlw	0
 14272  00401E  6F13               	movwf	(_convert_data+19)& (0+255),b
 14273                           
 14274                           ;fs_mcu.c: 59:     convert_data.convert_channel_5 = 0;
 14275  004020  0E00               	movlw	0
 14276  004022  6F14               	movwf	(_convert_data+20)& (0+255),b
 14277  004024  0E00               	movlw	0
 14278  004026  6F15               	movwf	(_convert_data+21)& (0+255),b
 14279  004028  0E00               	movlw	0
 14280  00402A  6F16               	movwf	(_convert_data+22)& (0+255),b
 14281  00402C  0E00               	movlw	0
 14282  00402E  6F17               	movwf	(_convert_data+23)& (0+255),b
 14283                           
 14284                           ;fs_mcu.c: 60:     convert_data.convert_channel_6 = 0;
 14285  004030  0E00               	movlw	0
 14286  004032  6F18               	movwf	(_convert_data+24)& (0+255),b
 14287  004034  0E00               	movlw	0
 14288  004036  6F19               	movwf	(_convert_data+25)& (0+255),b
 14289  004038  0E00               	movlw	0
 14290  00403A  6F1A               	movwf	(_convert_data+26)& (0+255),b
 14291  00403C  0E00               	movlw	0
 14292  00403E  6F1B               	movwf	(_convert_data+27)& (0+255),b
 14293                           
 14294                           ;fs_mcu.c: 61:     convert_data.convert_channel_7 = 0;
 14295  004040  0E00               	movlw	0
 14296  004042  6F1C               	movwf	(_convert_data+28)& (0+255),b
 14297  004044  0E00               	movlw	0
 14298  004046  6F1D               	movwf	(_convert_data+29)& (0+255),b
 14299  004048  0E00               	movlw	0
 14300  00404A  6F1E               	movwf	(_convert_data+30)& (0+255),b
 14301  00404C  0E00               	movlw	0
 14302  00404E  6F1F               	movwf	(_convert_data+31)& (0+255),b
 14303                           
 14304                           ;fs_mcu.c: 62:     controller.leftMotorSpeed = 0;
 14305  004050  0E00               	movlw	0
 14306  004052  6F57               	movwf	(_controller+7)& (0+255),b
 14307  004054  0E00               	movlw	0
 14308  004056  6F56               	movwf	(_controller+6)& (0+255),b
 14309                           
 14310                           ;fs_mcu.c: 63:     controller.rightMotorSpeed = 0;
 14311  004058  0E00               	movlw	0
 14312  00405A  6F59               	movwf	(_controller+9)& (0+255),b
 14313  00405C  0E00               	movlw	0
 14314  00405E  6F58               	movwf	(_controller+8)& (0+255),b
 14315                           
 14316                           ;fs_mcu.c: 64:     timer_value.adc_conversion_time = 0;
 14317  004060  0E00               	movlw	0
 14318  004062  6F94               	movwf	(_timer_value+5)& (0+255),b
 14319                           
 14320                           ;fs_mcu.c: 65:     controller.error = 0;
 14321  004064  0E00               	movlw	0
 14322  004066  6F51               	movwf	(_controller+1)& (0+255),b
 14323  004068  0E00               	movlw	0
 14324  00406A  6F50               	movwf	_controller& (0+255),b
 14325                           
 14326                           ;fs_mcu.c: 67:     button_bounce_controller.menu = 0;
 14327  00406C  0E00               	movlw	0
 14328  00406E  6F9D               	movwf	_button_bounce_controller& (0+255),b
 14329                           
 14330                           ;fs_mcu.c: 68:     button_bounce_controller.pause = 0;
 14331  004070  0E00               	movlw	0
 14332  004072  6FA0               	movwf	(_button_bounce_controller+3)& (0+255),b
 14333                           
 14334                           ;fs_mcu.c: 69:     button_bounce_controller.start = 0;
 14335  004074  0E00               	movlw	0
 14336  004076  6F9E               	movwf	(_button_bounce_controller+1)& (0+255),b
 14337                           
 14338                           ;fs_mcu.c: 70:     button_bounce_controller.stop = 0;
 14339  004078  0E00               	movlw	0
 14340  00407A  6F9F               	movwf	(_button_bounce_controller+2)& (0+255),b
 14341  00407C                     
 14342                           ; BSR set to: 1
 14343                           ;fs_mcu.c: 71:     menu_value.driver_time = (uint8_t)eepromRead(0x00);
 14344  00407C  0E00               	movlw	0
 14345  00407E  ECA7  F02B         	call	_eepromRead
 14346  004082  0100               	movlb	0	; () banked
 14347  004084  6FF3               	movwf	_menu_value& (0+255),b
 14348  004086                     
 14349                           ; BSR set to: 0
 14350                           ;fs_mcu.c: 72:     menu_value.stop_time = (uint8_t)eepromRead(0x01);
 14351  004086  0E01               	movlw	1
 14352  004088  ECA7  F02B         	call	_eepromRead
 14353  00408C  0100               	movlb	0	; () banked
 14354  00408E  6FF4               	movwf	(_menu_value+1)& (0+255),b
 14355  004090                     
 14356                           ; BSR set to: 0
 14357                           ;fs_mcu.c: 73:     menu_value.speed_limit = (uint8_t)eepromRead(0x02);
 14358  004090  0E02               	movlw	2
 14359  004092  ECA7  F02B         	call	_eepromRead
 14360  004096  0100               	movlb	0	; () banked
 14361  004098  6FF5               	movwf	(_menu_value+2)& (0+255),b
 14362  00409A                     
 14363                           ; BSR set to: 0
 14364                           ;fs_mcu.c: 75:     _delay((unsigned long)((700)*(64000000UL/4000.0)));
 14365  00409A  0E39               	movlw	57
 14366  00409C  6E03               	movwf	(??_systemInit+1)^0,c
 14367  00409E  0ED2               	movlw	210
 14368  0040A0  6E02               	movwf	??_systemInit^0,c
 14369  0040A2  0E4C               	movlw	76
 14370  0040A4                     u7987:
 14371  0040A4  2EE8               	decfsz	wreg,f,c
 14372  0040A6  D7FE               	bra	u7987
 14373  0040A8  2E02               	decfsz	??_systemInit^0,f,c
 14374  0040AA  D7FC               	bra	u7987
 14375  0040AC  2E03               	decfsz	(??_systemInit+1)^0,f,c
 14376  0040AE  D7FA               	bra	u7987
 14377  0040B0  D000               	nop2	
 14378  0040B2                     
 14379                           ;fs_mcu.c: 76:     timer_value.remainingMinute = menu_value.driver_time;
 14380  0040B2  C0F3  F192         	movff	_menu_value,_timer_value+3
 14381  0040B6                     
 14382                           ;fs_mcu.c: 77:     timer_value.remainingSecond = 0;
 14383  0040B6  0E00               	movlw	0
 14384  0040B8  0101               	movlb	1	; () banked
 14385  0040BA  6F91               	movwf	(_timer_value+2)& (0+255),b
 14386  0040BC                     
 14387                           ; BSR set to: 1
 14388  0040BC  0012               	return		;funcret
 14389  0040BE                     __end_of_systemInit:
 14390                           	callstack 0
 14391                           
 14392 ;; *************** function _eepromRead *****************
 14393 ;; Defined at:
 14394 ;;		line 36 in file "fs_eeprom.c"
 14395 ;; Parameters:    Size  Location     Type
 14396 ;;  address         1    wreg     unsigned char 
 14397 ;; Auto vars:     Size  Location     Type
 14398 ;;  address         1    0[COMRAM] unsigned char 
 14399 ;; Return value:  Size  Location     Type
 14400 ;;                  1    wreg      unsigned char 
 14401 ;; Registers used:
 14402 ;;		wreg, status,2
 14403 ;; Tracked objects:
 14404 ;;		On entry : 0/0
 14405 ;;		On exit  : 0/0
 14406 ;;		Unchanged: 0/0
 14407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14408 ;;      Params:         0       0       0       0       0       0       0
 14409 ;;      Locals:         1       0       0       0       0       0       0
 14410 ;;      Temps:          0       0       0       0       0       0       0
 14411 ;;      Totals:         1       0       0       0       0       0       0
 14412 ;;Total ram usage:        1 bytes
 14413 ;; Hardware stack levels used:    1
 14414 ;; Hardware stack levels required when called:    1
 14415 ;; This function calls:
 14416 ;;		Nothing
 14417 ;; This function is called by:
 14418 ;;		_systemInit
 14419 ;; This function uses a non-reentrant model
 14420 ;;
 14421                           
 14422                           	psect	text58
 14423  00574E                     __ptext58:
 14424                           	callstack 0
 14425  00574E                     _eepromRead:
 14426                           	callstack 27
 14427                           
 14428                           ; BSR set to: 1
 14429                           ;incstack = 0
 14430                           ;eepromRead@address stored from wreg
 14431  00574E  6E01               	movwf	eepromRead@address^0,c
 14432  005750                     
 14433                           ;fs_eeprom.c: 36: uint8_t eepromRead(uint8_t address);fs_eeprom.c: 37: {;fs_eeprom.c: 48
      +                          :     EEADR = (uint8_t)address;
 14434  005750  C001  FFA9         	movff	eepromRead@address,4009	;volatile
 14435  005754                     
 14436                           ;fs_eeprom.c: 50:     EECON1bits.EEPGD = 0;
 14437  005754  9EA6               	bcf	166,7,c	;volsfr
 14438  005756                     
 14439                           ;fs_eeprom.c: 51:     EECON1bits.CFGS = 0;
 14440  005756  9CA6               	bcf	166,6,c	;volsfr
 14441  005758                     
 14442                           ;fs_eeprom.c: 52:     EECON1bits.RD = 1;
 14443  005758  80A6               	bsf	166,0,c	;volsfr
 14444  00575A                     l92:
 14445  00575A  B0A6               	btfsc	166,0,c	;volsfr
 14446  00575C  EFB2  F02B         	goto	u6941
 14447  005760  EFB4  F02B         	goto	u6940
 14448  005764                     u6941:
 14449  005764  EFAD  F02B         	goto	l92
 14450  005768                     u6940:
 14451  005768                     
 14452                           ;fs_eeprom.c: 58:     return EEDATA;
 14453  005768  50A8               	movf	168,w,c	;volatile
 14454  00576A  0012               	return		;funcret
 14455  00576C                     __end_of_eepromRead:
 14456                           	callstack 0
 14457                           
 14458 ;; *************** function _openLCD_Script *****************
 14459 ;; Defined at:
 14460 ;;		line 87 in file "fs_mcu.c"
 14461 ;; Parameters:    Size  Location     Type
 14462 ;;		None
 14463 ;; Auto vars:     Size  Location     Type
 14464 ;;		None
 14465 ;; Return value:  Size  Location     Type
 14466 ;;                  1    wreg      void 
 14467 ;; Registers used:
 14468 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14469 ;; Tracked objects:
 14470 ;;		On entry : 0/0
 14471 ;;		On exit  : 0/0
 14472 ;;		Unchanged: 0/0
 14473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14474 ;;      Params:         0       0       0       0       0       0       0
 14475 ;;      Locals:         0       0       0       0       0       0       0
 14476 ;;      Temps:          2       0       0       0       0       0       0
 14477 ;;      Totals:         2       0       0       0       0       0       0
 14478 ;;Total ram usage:        2 bytes
 14479 ;; Hardware stack levels used:    1
 14480 ;; Hardware stack levels required when called:    4
 14481 ;; This function calls:
 14482 ;;		_lcdClear
 14483 ;;		_lcdSetCursor
 14484 ;;		_lcdWriteString
 14485 ;; This function is called by:
 14486 ;;		_loopTaskInit
 14487 ;; This function uses a non-reentrant model
 14488 ;;
 14489                           
 14490                           	psect	text59
 14491  0052DC                     __ptext59:
 14492                           	callstack 0
 14493  0052DC                     _openLCD_Script:
 14494                           	callstack 25
 14495  0052DC                     
 14496                           ;fs_mcu.c: 89:     lcdSetCursor(1,1);
 14497  0052DC  0E01               	movlw	1
 14498  0052DE  6E04               	movwf	lcdSetCursor@b^0,c
 14499  0052E0  0E01               	movlw	1
 14500  0052E2  EC34  F028         	call	_lcdSetCursor
 14501  0052E6                     
 14502                           ;fs_mcu.c: 90:     lcdWriteString("   Ergin Oyun  ");
 14503  0052E6  0EB1               	movlw	low STR_1
 14504  0052E8  6E05               	movwf	lcdWriteString@a^0,c
 14505  0052EA  0E7F               	movlw	high STR_1
 14506  0052EC  6E06               	movwf	(lcdWriteString@a+1)^0,c
 14507  0052EE  ECD6  F026         	call	_lcdWriteString	;wreg free
 14508  0052F2                     
 14509                           ;fs_mcu.c: 91:     lcdSetCursor(2,1);
 14510  0052F2  0E01               	movlw	1
 14511  0052F4  6E04               	movwf	lcdSetCursor@b^0,c
 14512  0052F6  0E02               	movlw	2
 14513  0052F8  EC34  F028         	call	_lcdSetCursor
 14514                           
 14515                           ;fs_mcu.c: 92:     lcdWriteString(" iYi Eglenceler ");
 14516  0052FC  0E80               	movlw	low STR_2
 14517  0052FE  6E05               	movwf	lcdWriteString@a^0,c
 14518  005300  0E7F               	movlw	high STR_2
 14519  005302  6E06               	movwf	(lcdWriteString@a+1)^0,c
 14520  005304  ECD6  F026         	call	_lcdWriteString	;wreg free
 14521  005308                     
 14522                           ;fs_mcu.c: 93:     _delay((unsigned long)((2500)*(64000000UL/4000.0)));
 14523  005308  0ECB               	movlw	203
 14524  00530A  6E0C               	movwf	(??_openLCD_Script+1)^0,c
 14525  00530C  0EEC               	movlw	236
 14526  00530E  6E0B               	movwf	??_openLCD_Script^0,c
 14527  005310  0E84               	movlw	132
 14528  005312                     u7997:
 14529  005312  2EE8               	decfsz	wreg,f,c
 14530  005314  D7FE               	bra	u7997
 14531  005316  2E0B               	decfsz	??_openLCD_Script^0,f,c
 14532  005318  D7FC               	bra	u7997
 14533  00531A  2E0C               	decfsz	(??_openLCD_Script+1)^0,f,c
 14534  00531C  D7FA               	bra	u7997
 14535  00531E  D000               	nop2	
 14536  005320                     
 14537                           ;fs_mcu.c: 94:     lcdClear();
 14538  005320  ECF0  F02B         	call	_lcdClear	;wreg free
 14539  005324  0012               	return		;funcret
 14540  005326                     __end_of_openLCD_Script:
 14541                           	callstack 0
 14542                           
 14543 ;; *************** function _lcdWriteString *****************
 14544 ;; Defined at:
 14545 ;;		line 176 in file "fs_lcd.c"
 14546 ;; Parameters:    Size  Location     Type
 14547 ;;  a               2    4[COMRAM] PTR unsigned char 
 14548 ;;		 -> STR_17(17), driverTimeSettingMenu@textCursor2(16), STR_15(17), stopTimeSettingMenu@textCursor2(16), 
 14549 ;;		 -> STR_13(17), speedLimitSettingMenu@textCursor2(16), STR_11(17), STR_9(17), 
 14550 ;;		 -> secretMenu@textCursor2(16), STR_7(17), pauseMenu@textCursor2(16), STR_5(17), 
 14551 ;;		 -> stopMenu@textCursor2(16), STR_3(17), mainMenu@textCursor2(16), STR_2(17), 
 14552 ;;		 -> STR_1(16), 
 14553 ;; Auto vars:     Size  Location     Type
 14554 ;;  i               2    8[COMRAM] int 
 14555 ;; Return value:  Size  Location     Type
 14556 ;;                  1    wreg      void 
 14557 ;; Registers used:
 14558 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14559 ;; Tracked objects:
 14560 ;;		On entry : 0/0
 14561 ;;		On exit  : 0/0
 14562 ;;		Unchanged: 0/0
 14563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14564 ;;      Params:         2       0       0       0       0       0       0
 14565 ;;      Locals:         2       0       0       0       0       0       0
 14566 ;;      Temps:          2       0       0       0       0       0       0
 14567 ;;      Totals:         6       0       0       0       0       0       0
 14568 ;;Total ram usage:        6 bytes
 14569 ;; Hardware stack levels used:    1
 14570 ;; Hardware stack levels required when called:    3
 14571 ;; This function calls:
 14572 ;;		_lcdWriteChar
 14573 ;; This function is called by:
 14574 ;;		_openLCD_Script
 14575 ;;		_mainMenu
 14576 ;;		_stopMenu
 14577 ;;		_pauseMenu
 14578 ;;		_secretMenu
 14579 ;;		_speedLimitSettingMenu
 14580 ;;		_stopTimeSettingMenu
 14581 ;;		_driverTimeSettingMenu
 14582 ;; This function uses a non-reentrant model
 14583 ;;
 14584                           
 14585                           	psect	text60
 14586  004DAC                     __ptext60:
 14587                           	callstack 0
 14588  004DAC                     _lcdWriteString:
 14589                           	callstack 24
 14590  004DAC                     
 14591                           ;fs_lcd.c: 176: void lcdWriteString(char *a);fs_lcd.c: 177: {;fs_lcd.c: 178:    int i;;f
      +                          s_lcd.c: 179:    for(i=0;a[i]!='\0';i++)
 14592  004DAC  0E00               	movlw	0
 14593  004DAE  6E0A               	movwf	(lcdWriteString@i+1)^0,c
 14594  004DB0  0E00               	movlw	0
 14595  004DB2  6E09               	movwf	lcdWriteString@i^0,c
 14596  004DB4  EFF6  F026         	goto	l5903
 14597  004DB8                     l5899:
 14598                           
 14599                           ;fs_lcd.c: 180:    lcdWriteChar(a[i]);
 14600  004DB8  5009               	movf	lcdWriteString@i^0,w,c
 14601  004DBA  2405               	addwf	lcdWriteString@a^0,w,c
 14602  004DBC  6E07               	movwf	??_lcdWriteString^0,c
 14603  004DBE  500A               	movf	(lcdWriteString@i+1)^0,w,c
 14604  004DC0  2006               	addwfc	(lcdWriteString@a+1)^0,w,c
 14605  004DC2  6E08               	movwf	(??_lcdWriteString+1)^0,c
 14606  004DC4  C007  FFF6         	movff	??_lcdWriteString,tblptrl
 14607  004DC8  C008  FFF7         	movff	??_lcdWriteString+1,tblptrh
 14608  004DCC  6AF8               	clrf	tblptru,c
 14609  004DCE  0E05               	movlw	(high __ramtop+-1)
 14610  004DD0  64F7               	cpfsgt	tblptrh,c
 14611  004DD2  D003               	bra	u6917
 14612  004DD4  0008               	tblrd		*
 14613  004DD6  50F5               	movf	tablat,w,c
 14614  004DD8  D005               	bra	u6910
 14615  004DDA                     u6917:
 14616  004DDA  CFF6 FFE1          	movff	tblptrl,fsr1l
 14617  004DDE  CFF7 FFE2          	movff	tblptrh,fsr1h
 14618  004DE2  50E7               	movf	indf1,w,c
 14619  004DE4                     u6910:
 14620  004DE4  ECE9  F02A         	call	_lcdWriteChar
 14621  004DE8  4A09               	infsnz	lcdWriteString@i^0,f,c
 14622  004DEA  2A0A               	incf	(lcdWriteString@i+1)^0,f,c
 14623  004DEC                     l5903:
 14624  004DEC  5009               	movf	lcdWriteString@i^0,w,c
 14625  004DEE  2405               	addwf	lcdWriteString@a^0,w,c
 14626  004DF0  6E07               	movwf	??_lcdWriteString^0,c
 14627  004DF2  500A               	movf	(lcdWriteString@i+1)^0,w,c
 14628  004DF4  2006               	addwfc	(lcdWriteString@a+1)^0,w,c
 14629  004DF6  6E08               	movwf	(??_lcdWriteString+1)^0,c
 14630  004DF8  C007  FFF6         	movff	??_lcdWriteString,tblptrl
 14631  004DFC  C008  FFF7         	movff	??_lcdWriteString+1,tblptrh
 14632  004E00  6AF8               	clrf	tblptru,c
 14633  004E02  0E05               	movlw	(high __ramtop+-1)
 14634  004E04  64F7               	cpfsgt	tblptrh,c
 14635  004E06  D003               	bra	u6927
 14636  004E08  0008               	tblrd		*
 14637  004E0A  50F5               	movf	tablat,w,c
 14638  004E0C  D005               	bra	u6920
 14639  004E0E                     u6927:
 14640  004E0E  CFF6 FFE1          	movff	tblptrl,fsr1l
 14641  004E12  CFF7 FFE2          	movff	tblptrh,fsr1h
 14642  004E16  50E7               	movf	indf1,w,c
 14643  004E18                     u6920:
 14644  004E18  0900               	iorlw	0
 14645  004E1A  A4D8               	btfss	status,2,c
 14646  004E1C  EF12  F027         	goto	u6931
 14647  004E20  EF14  F027         	goto	u6930
 14648  004E24                     u6931:
 14649  004E24  EFDC  F026         	goto	l5899
 14650  004E28                     u6930:
 14651  004E28  0012               	return		;funcret
 14652  004E2A                     __end_of_lcdWriteString:
 14653                           	callstack 0
 14654                           
 14655 ;; *************** function _lcdWriteChar *****************
 14656 ;; Defined at:
 14657 ;;		line 153 in file "fs_lcd.c"
 14658 ;; Parameters:    Size  Location     Type
 14659 ;;  a               1    wreg     unsigned char 
 14660 ;; Auto vars:     Size  Location     Type
 14661 ;;  a               1    3[COMRAM] unsigned char 
 14662 ;;  y               1    2[COMRAM] unsigned char 
 14663 ;;  temp            1    1[COMRAM] unsigned char 
 14664 ;; Return value:  Size  Location     Type
 14665 ;;                  1    wreg      void 
 14666 ;; Registers used:
 14667 ;;		wreg, status,2, status,0, cstack
 14668 ;; Tracked objects:
 14669 ;;		On entry : 0/0
 14670 ;;		On exit  : 0/0
 14671 ;;		Unchanged: 0/0
 14672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14673 ;;      Params:         0       0       0       0       0       0       0
 14674 ;;      Locals:         3       0       0       0       0       0       0
 14675 ;;      Temps:          0       0       0       0       0       0       0
 14676 ;;      Totals:         3       0       0       0       0       0       0
 14677 ;;Total ram usage:        3 bytes
 14678 ;; Hardware stack levels used:    1
 14679 ;; Hardware stack levels required when called:    2
 14680 ;; This function calls:
 14681 ;;		_lcdPort
 14682 ;; This function is called by:
 14683 ;;		_lcdWriteString
 14684 ;; This function uses a non-reentrant model
 14685 ;;
 14686                           
 14687                           	psect	text61
 14688  0055D2                     __ptext61:
 14689                           	callstack 0
 14690  0055D2                     _lcdWriteChar:
 14691                           	callstack 24
 14692                           
 14693                           ;incstack = 0
 14694                           ;lcdWriteChar@a stored from wreg
 14695  0055D2  6E04               	movwf	lcdWriteChar@a^0,c
 14696  0055D4                     
 14697                           ;fs_lcd.c: 153: void lcdWriteChar(char a);fs_lcd.c: 154: {;fs_lcd.c: 155:    char temp,y
      +                          ;;fs_lcd.c: 156:    temp = a&0x0F;
 14698  0055D4  5004               	movf	lcdWriteChar@a^0,w,c
 14699  0055D6  0B0F               	andlw	15
 14700  0055D8  6E02               	movwf	lcdWriteChar@temp^0,c
 14701                           
 14702                           ;fs_lcd.c: 157:    y = a&0xF0;
 14703  0055DA  5004               	movf	lcdWriteChar@a^0,w,c
 14704  0055DC  0BF0               	andlw	240
 14705  0055DE  6E03               	movwf	lcdWriteChar@y^0,c
 14706  0055E0                     
 14707                           ;fs_lcd.c: 158:    PORTDbits.RD6 = 1;
 14708  0055E0  8C83               	bsf	131,6,c	;volatile
 14709  0055E2                     
 14710                           ;fs_lcd.c: 159:    lcdPort(y>>4);
 14711  0055E2  3803               	swapf	lcdWriteChar@y^0,w,c
 14712  0055E4  0B0F               	andlw	15
 14713  0055E6  ECC5  F028         	call	_lcdPort
 14714  0055EA                     
 14715                           ;fs_lcd.c: 160:    PORTDbits.RD7 = 1;
 14716  0055EA  8E83               	bsf	131,7,c	;volatile
 14717  0055EC                     
 14718                           ;fs_lcd.c: 161:    _delay((unsigned long)((40)*(64000000UL/4000000.0)));
 14719  0055EC  0ED5               	movlw	213
 14720  0055EE                     u8007:
 14721  0055EE  2EE8               	decfsz	wreg,f,c
 14722  0055F0  D7FE               	bra	u8007
 14723  0055F2  F000               	nop	
 14724  0055F4                     
 14725                           ;fs_lcd.c: 162:    PORTDbits.RD7 = 0;
 14726  0055F4  9E83               	bcf	131,7,c	;volatile
 14727  0055F6                     
 14728                           ;fs_lcd.c: 163:    lcdPort(temp);
 14729  0055F6  5002               	movf	lcdWriteChar@temp^0,w,c
 14730  0055F8  ECC5  F028         	call	_lcdPort
 14731  0055FC                     
 14732                           ;fs_lcd.c: 164:    PORTDbits.RD7 = 1;
 14733  0055FC  8E83               	bsf	131,7,c	;volatile
 14734  0055FE                     
 14735                           ;fs_lcd.c: 165:    _delay((unsigned long)((40)*(64000000UL/4000000.0)));
 14736  0055FE  0ED5               	movlw	213
 14737  005600                     u8017:
 14738  005600  2EE8               	decfsz	wreg,f,c
 14739  005602  D7FE               	bra	u8017
 14740  005604  F000               	nop	
 14741  005606                     
 14742                           ;fs_lcd.c: 166:    PORTDbits.RD7 = 0;
 14743  005606  9E83               	bcf	131,7,c	;volatile
 14744  005608  0012               	return		;funcret
 14745  00560A                     __end_of_lcdWriteChar:
 14746                           	callstack 0
 14747                           
 14748 ;; *************** function _lcdSetCursor *****************
 14749 ;; Defined at:
 14750 ;;		line 83 in file "fs_lcd.c"
 14751 ;; Parameters:    Size  Location     Type
 14752 ;;  a               1    wreg     unsigned char 
 14753 ;;  b               1    3[COMRAM] unsigned char 
 14754 ;; Auto vars:     Size  Location     Type
 14755 ;;  a               1    4[COMRAM] unsigned char 
 14756 ;;  temp            1    7[COMRAM] unsigned char 
 14757 ;;  y               1    6[COMRAM] unsigned char 
 14758 ;;  z               1    5[COMRAM] unsigned char 
 14759 ;; Return value:  Size  Location     Type
 14760 ;;                  1    wreg      void 
 14761 ;; Registers used:
 14762 ;;		wreg, status,2, status,0, cstack
 14763 ;; Tracked objects:
 14764 ;;		On entry : 0/0
 14765 ;;		On exit  : 0/0
 14766 ;;		Unchanged: 0/0
 14767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14768 ;;      Params:         1       0       0       0       0       0       0
 14769 ;;      Locals:         4       0       0       0       0       0       0
 14770 ;;      Temps:          0       0       0       0       0       0       0
 14771 ;;      Totals:         5       0       0       0       0       0       0
 14772 ;;Total ram usage:        5 bytes
 14773 ;; Hardware stack levels used:    1
 14774 ;; Hardware stack levels required when called:    3
 14775 ;; This function calls:
 14776 ;;		_lcdCmd
 14777 ;; This function is called by:
 14778 ;;		_openLCD_Script
 14779 ;;		_mainMenu
 14780 ;;		_stopMenu
 14781 ;;		_pauseMenu
 14782 ;;		_secretMenu
 14783 ;;		_speedLimitSettingMenu
 14784 ;;		_stopTimeSettingMenu
 14785 ;;		_driverTimeSettingMenu
 14786 ;; This function uses a non-reentrant model
 14787 ;;
 14788                           
 14789                           	psect	text62
 14790  005068                     __ptext62:
 14791                           	callstack 0
 14792  005068                     _lcdSetCursor:
 14793                           	callstack 24
 14794                           
 14795                           ;incstack = 0
 14796                           ;lcdSetCursor@a stored from wreg
 14797  005068  6E05               	movwf	lcdSetCursor@a^0,c
 14798  00506A                     
 14799                           ;fs_lcd.c: 83: void lcdSetCursor(char a, char b);fs_lcd.c: 84: {;fs_lcd.c: 85:    char t
      +                          emp,z,y;;fs_lcd.c: 86:    if(a == 1)
 14800  00506A  0405               	decf	lcdSetCursor@a^0,w,c
 14801  00506C  A4D8               	btfss	status,2,c
 14802  00506E  EF3B  F028         	goto	u6891
 14803  005072  EF3D  F028         	goto	u6890
 14804  005076                     u6891:
 14805  005076  EF4E  F028         	goto	l5889
 14806  00507A                     u6890:
 14807  00507A                     
 14808                           ;fs_lcd.c: 87:    {;fs_lcd.c: 88:      temp = 0x80 + b - 1;
 14809  00507A  5004               	movf	lcdSetCursor@b^0,w,c
 14810  00507C  0F7F               	addlw	127
 14811  00507E  6E08               	movwf	lcdSetCursor@temp^0,c
 14812                           
 14813                           ;fs_lcd.c: 89:       z = temp>>4;
 14814  005080  3808               	swapf	lcdSetCursor@temp^0,w,c
 14815  005082  0B0F               	andlw	15
 14816  005084  6E06               	movwf	lcdSetCursor@z^0,c
 14817                           
 14818                           ;fs_lcd.c: 90:       y = temp & 0x0F;
 14819  005086  5008               	movf	lcdSetCursor@temp^0,w,c
 14820  005088  0B0F               	andlw	15
 14821  00508A  6E07               	movwf	lcdSetCursor@y^0,c
 14822  00508C                     
 14823                           ;fs_lcd.c: 91:       lcdCmd(z);
 14824  00508C  5006               	movf	lcdSetCursor@z^0,w,c
 14825  00508E  ECB6  F02B         	call	_lcdCmd
 14826  005092                     
 14827                           ;fs_lcd.c: 92:       lcdCmd(y);
 14828  005092  5007               	movf	lcdSetCursor@y^0,w,c
 14829  005094  ECB6  F02B         	call	_lcdCmd
 14830                           
 14831                           ;fs_lcd.c: 93:    }
 14832  005098  EF66  F028         	goto	l172
 14833  00509C                     l5889:
 14834  00509C  0E02               	movlw	2
 14835  00509E  1805               	xorwf	lcdSetCursor@a^0,w,c
 14836  0050A0  A4D8               	btfss	status,2,c
 14837  0050A2  EF55  F028         	goto	u6901
 14838  0050A6  EF57  F028         	goto	u6900
 14839  0050AA                     u6901:
 14840  0050AA  EF66  F028         	goto	l172
 14841  0050AE                     u6900:
 14842  0050AE                     
 14843                           ;fs_lcd.c: 95:    {;fs_lcd.c: 96:       temp = 0xC0 + b - 1;
 14844  0050AE  5004               	movf	lcdSetCursor@b^0,w,c
 14845  0050B0  0FBF               	addlw	191
 14846  0050B2  6E08               	movwf	lcdSetCursor@temp^0,c
 14847                           
 14848                           ;fs_lcd.c: 97:       z = temp>>4;
 14849  0050B4  3808               	swapf	lcdSetCursor@temp^0,w,c
 14850  0050B6  0B0F               	andlw	15
 14851  0050B8  6E06               	movwf	lcdSetCursor@z^0,c
 14852                           
 14853                           ;fs_lcd.c: 98:       y = temp & 0x0F;
 14854  0050BA  5008               	movf	lcdSetCursor@temp^0,w,c
 14855  0050BC  0B0F               	andlw	15
 14856  0050BE  6E07               	movwf	lcdSetCursor@y^0,c
 14857  0050C0                     
 14858                           ;fs_lcd.c: 99:       lcdCmd(z);
 14859  0050C0  5006               	movf	lcdSetCursor@z^0,w,c
 14860  0050C2  ECB6  F02B         	call	_lcdCmd
 14861  0050C6                     
 14862                           ;fs_lcd.c: 100:       lcdCmd(y);
 14863  0050C6  5007               	movf	lcdSetCursor@y^0,w,c
 14864  0050C8  ECB6  F02B         	call	_lcdCmd
 14865  0050CC                     l172:
 14866  0050CC  0012               	return		;funcret
 14867  0050CE                     __end_of_lcdSetCursor:
 14868                           	callstack 0
 14869                           
 14870 ;; *************** function _lcdClear *****************
 14871 ;; Defined at:
 14872 ;;		line 72 in file "fs_lcd.c"
 14873 ;; Parameters:    Size  Location     Type
 14874 ;;		None
 14875 ;; Auto vars:     Size  Location     Type
 14876 ;;		None
 14877 ;; Return value:  Size  Location     Type
 14878 ;;                  1    wreg      void 
 14879 ;; Registers used:
 14880 ;;		wreg, status,2, cstack
 14881 ;; Tracked objects:
 14882 ;;		On entry : 0/0
 14883 ;;		On exit  : 0/0
 14884 ;;		Unchanged: 0/0
 14885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14886 ;;      Params:         0       0       0       0       0       0       0
 14887 ;;      Locals:         0       0       0       0       0       0       0
 14888 ;;      Temps:          0       0       0       0       0       0       0
 14889 ;;      Totals:         0       0       0       0       0       0       0
 14890 ;;Total ram usage:        0 bytes
 14891 ;; Hardware stack levels used:    1
 14892 ;; Hardware stack levels required when called:    3
 14893 ;; This function calls:
 14894 ;;		_lcdCmd
 14895 ;; This function is called by:
 14896 ;;		_loopTaskInit
 14897 ;;		_openLCD_Script
 14898 ;; This function uses a non-reentrant model
 14899 ;;
 14900                           
 14901                           	psect	text63
 14902  0057E0                     __ptext63:
 14903                           	callstack 0
 14904  0057E0                     _lcdClear:
 14905                           	callstack 25
 14906  0057E0                     
 14907                           ;fs_lcd.c: 74:    lcdCmd(0);
 14908  0057E0  0E00               	movlw	0
 14909  0057E2  ECB6  F02B         	call	_lcdCmd
 14910                           
 14911                           ;fs_lcd.c: 75:    lcdCmd(1);
 14912  0057E6  0E01               	movlw	1
 14913  0057E8  ECB6  F02B         	call	_lcdCmd
 14914  0057EC  0012               	return		;funcret
 14915  0057EE                     __end_of_lcdClear:
 14916                           	callstack 0
 14917                           
 14918 ;; *************** function _menuInitialize *****************
 14919 ;; Defined at:
 14920 ;;		line 35 in file "fs_menu_controller.c"
 14921 ;; Parameters:    Size  Location     Type
 14922 ;;		None
 14923 ;; Auto vars:     Size  Location     Type
 14924 ;;		None
 14925 ;; Return value:  Size  Location     Type
 14926 ;;                  1    wreg      void 
 14927 ;; Registers used:
 14928 ;;		None
 14929 ;; Tracked objects:
 14930 ;;		On entry : 0/0
 14931 ;;		On exit  : 0/0
 14932 ;;		Unchanged: 0/0
 14933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14934 ;;      Params:         0       0       0       0       0       0       0
 14935 ;;      Locals:         0       0       0       0       0       0       0
 14936 ;;      Temps:          0       0       0       0       0       0       0
 14937 ;;      Totals:         0       0       0       0       0       0       0
 14938 ;;Total ram usage:        0 bytes
 14939 ;; Hardware stack levels used:    1
 14940 ;; Hardware stack levels required when called:    1
 14941 ;; This function calls:
 14942 ;;		Nothing
 14943 ;; This function is called by:
 14944 ;;		_loopTaskInit
 14945 ;; This function uses a non-reentrant model
 14946 ;;
 14947                           
 14948                           	psect	text64
 14949  0056D8                     __ptext64:
 14950                           	callstack 0
 14951  0056D8                     _menuInitialize:
 14952                           	callstack 28
 14953  0056D8                     
 14954                           ;fs_menu_controller.c: 38:     TRISBbits.RB6 = 1;
 14955  0056D8  8C93               	bsf	147,6,c	;volatile
 14956                           
 14957                           ;fs_menu_controller.c: 41:     TRISBbits.RB7 = 1;
 14958  0056DA  8E93               	bsf	147,7,c	;volatile
 14959                           
 14960                           ;fs_menu_controller.c: 43:     ANSELDbits.ANSD4 = 0;
 14961  0056DC  010F               	movlb	15	; () banked
 14962  0056DE  993B               	bcf	59,4,b	;volatile
 14963                           
 14964                           ;fs_menu_controller.c: 44:     TRISDbits.RD4 = 1;
 14965  0056E0  8895               	bsf	149,4,c	;volatile
 14966                           
 14967                           ;fs_menu_controller.c: 46:     ANSELDbits.ANSD0 = 0;
 14968  0056E2  913B               	bcf	59,0,b	;volatile
 14969                           
 14970                           ;fs_menu_controller.c: 47:     TRISDbits.RD0 = 1;
 14971  0056E4  8095               	bsf	149,0,c	;volatile
 14972                           
 14973                           ;fs_menu_controller.c: 49:     ANSELDbits.ANSD1 = 0;
 14974  0056E6  933B               	bcf	59,1,b	;volatile
 14975                           
 14976                           ;fs_menu_controller.c: 50:     TRISDbits.RD1 = 1;
 14977  0056E8  8295               	bsf	149,1,c	;volatile
 14978                           
 14979                           ;fs_menu_controller.c: 52:     ANSELDbits.ANSD2 = 0;
 14980  0056EA  953B               	bcf	59,2,b	;volatile
 14981                           
 14982                           ;fs_menu_controller.c: 53:     TRISDbits.RD2 = 1;
 14983  0056EC  8495               	bsf	149,2,c	;volatile
 14984                           
 14985                           ;fs_menu_controller.c: 55:     ANSELDbits.ANSD3 = 0;
 14986  0056EE  973B               	bcf	59,3,b	;volatile
 14987                           
 14988                           ;fs_menu_controller.c: 56:     TRISDbits.RD3 = 1;
 14989  0056F0  8695               	bsf	149,3,c	;volatile
 14990                           
 14991                           ;fs_menu_controller.c: 58:     ANSELDbits.ANSD5 = 0;
 14992  0056F2  9B3B               	bcf	59,5,b	;volatile
 14993                           
 14994                           ;fs_menu_controller.c: 59:     TRISDbits.RD5 = 0;
 14995  0056F4  9A95               	bcf	149,5,c	;volatile
 14996                           
 14997                           ;fs_menu_controller.c: 61:     ANSELCbits.ANSC5 = 0;
 14998  0056F6  9B3A               	bcf	58,5,b	;volatile
 14999                           
 15000                           ;fs_menu_controller.c: 62:     TRISCbits.RC5 = 0;
 15001  0056F8  9A94               	bcf	148,5,c	;volatile
 15002                           
 15003                           ;fs_menu_controller.c: 64:     ANSELCbits.ANSC4 = 0;
 15004  0056FA  993A               	bcf	58,4,b	;volatile
 15005                           
 15006                           ;fs_menu_controller.c: 65:     TRISCbits.RC4 = 0;
 15007  0056FC  9894               	bcf	148,4,c	;volatile
 15008  0056FE                     
 15009                           ; BSR set to: 15
 15010  0056FE  0012               	return		;funcret
 15011  005700                     __end_of_menuInitialize:
 15012                           	callstack 0
 15013                           
 15014 ;; *************** function _mcuInit *****************
 15015 ;; Defined at:
 15016 ;;		line 35 in file "fs_mcu.c"
 15017 ;; Parameters:    Size  Location     Type
 15018 ;;		None
 15019 ;; Auto vars:     Size  Location     Type
 15020 ;;		None
 15021 ;; Return value:  Size  Location     Type
 15022 ;;                  1    wreg      void 
 15023 ;; Registers used:
 15024 ;;		wreg, status,2
 15025 ;; Tracked objects:
 15026 ;;		On entry : 0/0
 15027 ;;		On exit  : 0/0
 15028 ;;		Unchanged: 0/0
 15029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15030 ;;      Params:         0       0       0       0       0       0       0
 15031 ;;      Locals:         0       0       0       0       0       0       0
 15032 ;;      Temps:          0       0       0       0       0       0       0
 15033 ;;      Totals:         0       0       0       0       0       0       0
 15034 ;;Total ram usage:        0 bytes
 15035 ;; Hardware stack levels used:    1
 15036 ;; Hardware stack levels required when called:    1
 15037 ;; This function calls:
 15038 ;;		Nothing
 15039 ;; This function is called by:
 15040 ;;		_loopTaskInit
 15041 ;; This function uses a non-reentrant model
 15042 ;;
 15043                           
 15044                           	psect	text65
 15045  0057A4                     __ptext65:
 15046                           	callstack 0
 15047  0057A4                     _mcuInit:
 15048                           	callstack 28
 15049  0057A4                     
 15050                           ;fs_mcu.c: 37:    OSCCONbits.IRCF = 0b111;
 15051  0057A4  0E70               	movlw	112
 15052  0057A6  12D3               	iorwf	211,f,c	;volatile
 15053  0057A8                     
 15054                           ;fs_mcu.c: 38:    OSCTUNEbits.PLLEN = 0b1;
 15055  0057A8  8C9B               	bsf	155,6,c	;volatile
 15056  0057AA                     l317:
 15057  0057AA  A4D3               	btfss	211,2,c	;volatile
 15058  0057AC  EFDA  F02B         	goto	u3581
 15059  0057B0  EFDC  F02B         	goto	u3580
 15060  0057B4                     u3581:
 15061  0057B4  EFD5  F02B         	goto	l317
 15062  0057B8                     u3580:
 15063  0057B8  0012               	return		;funcret
 15064  0057BA                     __end_of_mcuInit:
 15065                           	callstack 0
 15066                           
 15067 ;; *************** function _lcdInit *****************
 15068 ;; Defined at:
 15069 ;;		line 109 in file "fs_lcd.c"
 15070 ;; Parameters:    Size  Location     Type
 15071 ;;		None
 15072 ;; Auto vars:     Size  Location     Type
 15073 ;;		None
 15074 ;; Return value:  Size  Location     Type
 15075 ;;                  1    wreg      void 
 15076 ;; Registers used:
 15077 ;;		wreg, status,2, cstack
 15078 ;; Tracked objects:
 15079 ;;		On entry : 0/0
 15080 ;;		On exit  : 0/0
 15081 ;;		Unchanged: 0/0
 15082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15083 ;;      Params:         0       0       0       0       0       0       0
 15084 ;;      Locals:         0       0       0       0       0       0       0
 15085 ;;      Temps:          2       0       0       0       0       0       0
 15086 ;;      Totals:         2       0       0       0       0       0       0
 15087 ;;Total ram usage:        2 bytes
 15088 ;; Hardware stack levels used:    1
 15089 ;; Hardware stack levels required when called:    3
 15090 ;; This function calls:
 15091 ;;		_lcdCmd
 15092 ;;		_lcdPort
 15093 ;; This function is called by:
 15094 ;;		_loopTaskInit
 15095 ;; This function uses a non-reentrant model
 15096 ;;
 15097                           
 15098                           	psect	text66
 15099  004C86                     __ptext66:
 15100                           	callstack 0
 15101  004C86                     _lcdInit:
 15102                           	callstack 26
 15103  004C86                     
 15104                           ;fs_lcd.c: 111:     TRISDbits.RD6 = 0;
 15105  004C86  9C95               	bcf	149,6,c	;volatile
 15106                           
 15107                           ;fs_lcd.c: 112:     ANSELDbits.ANSD6 = 0;
 15108  004C88  010F               	movlb	15	; () banked
 15109  004C8A  9D3B               	bcf	59,6,b	;volatile
 15110                           
 15111                           ;fs_lcd.c: 114:     TRISDbits.RD7 = 0;
 15112  004C8C  9E95               	bcf	149,7,c	;volatile
 15113                           
 15114                           ;fs_lcd.c: 115:     ANSELDbits.ANSD7 = 0;
 15115  004C8E  9F3B               	bcf	59,7,b	;volatile
 15116                           
 15117                           ;fs_lcd.c: 117:     TRISBbits.RB0 = 0;
 15118  004C90  9093               	bcf	147,0,c	;volatile
 15119                           
 15120                           ;fs_lcd.c: 118:     ANSELBbits.ANSB0 = 0;
 15121  004C92  9139               	bcf	57,0,b	;volatile
 15122                           
 15123                           ;fs_lcd.c: 120:     TRISBbits.RB1 = 0;
 15124  004C94  9293               	bcf	147,1,c	;volatile
 15125                           
 15126                           ;fs_lcd.c: 121:     ANSELBbits.ANSB1 = 0;
 15127  004C96  9339               	bcf	57,1,b	;volatile
 15128                           
 15129                           ;fs_lcd.c: 123:     TRISBbits.RB2 = 0;
 15130  004C98  9493               	bcf	147,2,c	;volatile
 15131                           
 15132                           ;fs_lcd.c: 124:     ANSELBbits.ANSB2 = 0;
 15133  004C9A  9539               	bcf	57,2,b	;volatile
 15134                           
 15135                           ;fs_lcd.c: 126:     TRISBbits.RB3 = 0;
 15136  004C9C  9693               	bcf	147,3,c	;volatile
 15137                           
 15138                           ;fs_lcd.c: 127:     ANSELBbits.ANSB3 = 0;
 15139  004C9E  9739               	bcf	57,3,b	;volatile
 15140  004CA0                     
 15141                           ; BSR set to: 15
 15142                           ;fs_lcd.c: 130:     lcdPort(0x00);
 15143  004CA0  0E00               	movlw	0
 15144  004CA2  ECC5  F028         	call	_lcdPort
 15145  004CA6                     
 15146                           ;fs_lcd.c: 131:      _delay((unsigned long)((20)*(64000000UL/4000.0)));
 15147  004CA6  0E02               	movlw	2
 15148  004CA8  6E05               	movwf	(??_lcdInit+1)^0,c
 15149  004CAA  0EA0               	movlw	160
 15150  004CAC  6E04               	movwf	??_lcdInit^0,c
 15151  004CAE  0E92               	movlw	146
 15152  004CB0                     u8027:
 15153  004CB0  2EE8               	decfsz	wreg,f,c
 15154  004CB2  D7FE               	bra	u8027
 15155  004CB4  2E04               	decfsz	??_lcdInit^0,f,c
 15156  004CB6  D7FC               	bra	u8027
 15157  004CB8  2E05               	decfsz	(??_lcdInit+1)^0,f,c
 15158  004CBA  D7FA               	bra	u8027
 15159  004CBC  D000               	nop2	
 15160  004CBE                     
 15161                           ;fs_lcd.c: 132:     lcdCmd(0x03);
 15162  004CBE  0E03               	movlw	3
 15163  004CC0  ECB6  F02B         	call	_lcdCmd
 15164  004CC4                     
 15165                           ;fs_lcd.c: 133:      _delay((unsigned long)((5)*(64000000UL/4000.0)));
 15166  004CC4  0E68               	movlw	104
 15167  004CC6  6E04               	movwf	??_lcdInit^0,c
 15168  004CC8  0EE4               	movlw	228
 15169  004CCA                     u8037:
 15170  004CCA  2EE8               	decfsz	wreg,f,c
 15171  004CCC  D7FE               	bra	u8037
 15172  004CCE  2E04               	decfsz	??_lcdInit^0,f,c
 15173  004CD0  D7FC               	bra	u8037
 15174  004CD2  D000               	nop2	
 15175  004CD4                     
 15176                           ;fs_lcd.c: 134:     lcdCmd(0x03);
 15177  004CD4  0E03               	movlw	3
 15178  004CD6  ECB6  F02B         	call	_lcdCmd
 15179  004CDA                     
 15180                           ;fs_lcd.c: 135:      _delay((unsigned long)((11)*(64000000UL/4000.0)));
 15181  004CDA  0EE5               	movlw	229
 15182  004CDC  6E04               	movwf	??_lcdInit^0,c
 15183  004CDE  0E91               	movlw	145
 15184  004CE0                     u8047:
 15185  004CE0  2EE8               	decfsz	wreg,f,c
 15186  004CE2  D7FE               	bra	u8047
 15187  004CE4  2E04               	decfsz	??_lcdInit^0,f,c
 15188  004CE6  D7FC               	bra	u8047
 15189  004CE8  F000               	nop	
 15190  004CEA                     
 15191                           ;fs_lcd.c: 136:     lcdCmd(0x03);
 15192  004CEA  0E03               	movlw	3
 15193  004CEC  ECB6  F02B         	call	_lcdCmd
 15194  004CF0                     
 15195                           ;fs_lcd.c: 137:     lcdCmd(0x02);
 15196  004CF0  0E02               	movlw	2
 15197  004CF2  ECB6  F02B         	call	_lcdCmd
 15198  004CF6                     
 15199                           ;fs_lcd.c: 138:     lcdCmd(0x02);
 15200  004CF6  0E02               	movlw	2
 15201  004CF8  ECB6  F02B         	call	_lcdCmd
 15202  004CFC                     
 15203                           ;fs_lcd.c: 139:     lcdCmd(0x08);
 15204  004CFC  0E08               	movlw	8
 15205  004CFE  ECB6  F02B         	call	_lcdCmd
 15206  004D02                     
 15207                           ;fs_lcd.c: 140:     lcdCmd(0x00);
 15208  004D02  0E00               	movlw	0
 15209  004D04  ECB6  F02B         	call	_lcdCmd
 15210  004D08                     
 15211                           ;fs_lcd.c: 141:     lcdCmd(0x0C);
 15212  004D08  0E0C               	movlw	12
 15213  004D0A  ECB6  F02B         	call	_lcdCmd
 15214  004D0E                     
 15215                           ;fs_lcd.c: 142:     lcdCmd(0x00);
 15216  004D0E  0E00               	movlw	0
 15217  004D10  ECB6  F02B         	call	_lcdCmd
 15218  004D14                     
 15219                           ;fs_lcd.c: 143:     lcdCmd(0x06);
 15220  004D14  0E06               	movlw	6
 15221  004D16  ECB6  F02B         	call	_lcdCmd
 15222  004D1A  0012               	return		;funcret
 15223  004D1C                     __end_of_lcdInit:
 15224                           	callstack 0
 15225                           
 15226 ;; *************** function _lcdCmd *****************
 15227 ;; Defined at:
 15228 ;;		line 56 in file "fs_lcd.c"
 15229 ;; Parameters:    Size  Location     Type
 15230 ;;  a               1    wreg     unsigned char 
 15231 ;; Auto vars:     Size  Location     Type
 15232 ;;  a               1    2[COMRAM] unsigned char 
 15233 ;; Return value:  Size  Location     Type
 15234 ;;                  1    wreg      void 
 15235 ;; Registers used:
 15236 ;;		wreg, status,2, cstack
 15237 ;; Tracked objects:
 15238 ;;		On entry : 0/0
 15239 ;;		On exit  : 0/0
 15240 ;;		Unchanged: 0/0
 15241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15242 ;;      Params:         0       0       0       0       0       0       0
 15243 ;;      Locals:         1       0       0       0       0       0       0
 15244 ;;      Temps:          1       0       0       0       0       0       0
 15245 ;;      Totals:         2       0       0       0       0       0       0
 15246 ;;Total ram usage:        2 bytes
 15247 ;; Hardware stack levels used:    1
 15248 ;; Hardware stack levels required when called:    2
 15249 ;; This function calls:
 15250 ;;		_lcdPort
 15251 ;; This function is called by:
 15252 ;;		_lcdClear
 15253 ;;		_lcdSetCursor
 15254 ;;		_lcdInit
 15255 ;;		_lcdShiftRight
 15256 ;;		_lcdShiftLeft
 15257 ;; This function uses a non-reentrant model
 15258 ;;
 15259                           
 15260                           	psect	text67
 15261  00576C                     __ptext67:
 15262                           	callstack 0
 15263  00576C                     _lcdCmd:
 15264                           	callstack 24
 15265                           
 15266                           ;incstack = 0
 15267                           ;lcdCmd@a stored from wreg
 15268  00576C  6E03               	movwf	lcdCmd@a^0,c
 15269  00576E                     
 15270                           ;fs_lcd.c: 56: void lcdCmd(char a);fs_lcd.c: 57: {;fs_lcd.c: 58:    PORTDbits.RD6 = 0;
 15271  00576E  9C83               	bcf	131,6,c	;volatile
 15272  005770                     
 15273                           ;fs_lcd.c: 59:    lcdPort(a);
 15274  005770  5003               	movf	lcdCmd@a^0,w,c
 15275  005772  ECC5  F028         	call	_lcdPort
 15276  005776                     
 15277                           ;fs_lcd.c: 60:    PORTDbits.RD7 = 1;
 15278  005776  8E83               	bsf	131,7,c	;volatile
 15279  005778                     
 15280                           ;fs_lcd.c: 61:    _delay((unsigned long)((2)*(64000000UL/4000.0)));
 15281  005778  0E2A               	movlw	42
 15282  00577A  6E02               	movwf	??_lcdCmd^0,c
 15283  00577C  0E8E               	movlw	142
 15284  00577E                     u8057:
 15285  00577E  2EE8               	decfsz	wreg,f,c
 15286  005780  D7FE               	bra	u8057
 15287  005782  2E02               	decfsz	??_lcdCmd^0,f,c
 15288  005784  D7FC               	bra	u8057
 15289  005786                     
 15290                           ;fs_lcd.c: 62:    PORTDbits.RD7 = 0;
 15291  005786  9E83               	bcf	131,7,c	;volatile
 15292  005788  0012               	return		;funcret
 15293  00578A                     __end_of_lcdCmd:
 15294                           	callstack 0
 15295                           
 15296 ;; *************** function _lcdPort *****************
 15297 ;; Defined at:
 15298 ;;		line 33 in file "fs_lcd.c"
 15299 ;; Parameters:    Size  Location     Type
 15300 ;;  a               1    wreg     unsigned char 
 15301 ;; Auto vars:     Size  Location     Type
 15302 ;;  a               1    0[COMRAM] unsigned char 
 15303 ;; Return value:  Size  Location     Type
 15304 ;;                  1    wreg      void 
 15305 ;; Registers used:
 15306 ;;		wreg
 15307 ;; Tracked objects:
 15308 ;;		On entry : 0/0
 15309 ;;		On exit  : 0/0
 15310 ;;		Unchanged: 0/0
 15311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15312 ;;      Params:         0       0       0       0       0       0       0
 15313 ;;      Locals:         1       0       0       0       0       0       0
 15314 ;;      Temps:          0       0       0       0       0       0       0
 15315 ;;      Totals:         1       0       0       0       0       0       0
 15316 ;;Total ram usage:        1 bytes
 15317 ;; Hardware stack levels used:    1
 15318 ;; Hardware stack levels required when called:    1
 15319 ;; This function calls:
 15320 ;;		Nothing
 15321 ;; This function is called by:
 15322 ;;		_lcdCmd
 15323 ;;		_lcdInit
 15324 ;;		_lcdWriteChar
 15325 ;; This function uses a non-reentrant model
 15326 ;;
 15327                           
 15328                           	psect	text68
 15329  00518A                     __ptext68:
 15330                           	callstack 0
 15331  00518A                     _lcdPort:
 15332                           	callstack 24
 15333                           
 15334                           ;incstack = 0
 15335                           ;lcdPort@a stored from wreg
 15336  00518A  6E01               	movwf	lcdPort@a^0,c
 15337  00518C                     
 15338                           ;fs_lcd.c: 33: void lcdPort(char a);fs_lcd.c: 34: {;fs_lcd.c: 35:    if(a & 1) { PORTBbi
      +                          ts.RB0 = 1;}
 15339  00518C  A001               	btfss	lcdPort@a^0,0,c
 15340  00518E  EFCB  F028         	goto	u6411
 15341  005192  EFCD  F028         	goto	u6410
 15342  005196                     u6411:
 15343  005196  EFD0  F028         	goto	l152
 15344  00519A                     u6410:
 15345  00519A  8081               	bsf	129,0,c	;volatile
 15346  00519C  EFD1  F028         	goto	l5493
 15347  0051A0                     l152:
 15348  0051A0  9081               	bcf	129,0,c	;volatile
 15349  0051A2                     l5493:
 15350                           
 15351                           ;fs_lcd.c: 38:    if(a & 2) { PORTBbits.RB1 = 1;}
 15352  0051A2  A201               	btfss	lcdPort@a^0,1,c
 15353  0051A4  EFD6  F028         	goto	u6421
 15354  0051A8  EFD8  F028         	goto	u6420
 15355  0051AC                     u6421:
 15356  0051AC  EFDB  F028         	goto	l154
 15357  0051B0                     u6420:
 15358  0051B0  8281               	bsf	129,1,c	;volatile
 15359  0051B2  EFDC  F028         	goto	l5497
 15360  0051B6                     l154:
 15361  0051B6  9281               	bcf	129,1,c	;volatile
 15362  0051B8                     l5497:
 15363                           
 15364                           ;fs_lcd.c: 41:    if(a & 4) {PORTBbits.RB2 = 1;}
 15365  0051B8  A401               	btfss	lcdPort@a^0,2,c
 15366  0051BA  EFE1  F028         	goto	u6431
 15367  0051BE  EFE3  F028         	goto	u6430
 15368  0051C2                     u6431:
 15369  0051C2  EFE6  F028         	goto	l156
 15370  0051C6                     u6430:
 15371  0051C6  8481               	bsf	129,2,c	;volatile
 15372  0051C8  EFE7  F028         	goto	l5501
 15373  0051CC                     l156:
 15374  0051CC  9481               	bcf	129,2,c	;volatile
 15375  0051CE                     l5501:
 15376                           
 15377                           ;fs_lcd.c: 44:    if(a & 8) {PORTBbits.RB3 = 1;}
 15378  0051CE  A601               	btfss	lcdPort@a^0,3,c
 15379  0051D0  EFEC  F028         	goto	u6441
 15380  0051D4  EFEE  F028         	goto	u6440
 15381  0051D8                     u6441:
 15382  0051D8  EFF1  F028         	goto	l158
 15383  0051DC                     u6440:
 15384  0051DC  8681               	bsf	129,3,c	;volatile
 15385  0051DE  EFF2  F028         	goto	l160
 15386  0051E2                     l158:
 15387  0051E2  9681               	bcf	129,3,c	;volatile
 15388  0051E4                     l160:
 15389  0051E4  0012               	return		;funcret
 15390  0051E6                     __end_of_lcdPort:
 15391                           	callstack 0
 15392                           
 15393 ;; *************** function _adcInit *****************
 15394 ;; Defined at:
 15395 ;;		line 53 in file "fs_adc.c"
 15396 ;; Parameters:    Size  Location     Type
 15397 ;;		None
 15398 ;; Auto vars:     Size  Location     Type
 15399 ;;		None
 15400 ;; Return value:  Size  Location     Type
 15401 ;;                  1    wreg      void 
 15402 ;; Registers used:
 15403 ;;		wreg, status,2
 15404 ;; Tracked objects:
 15405 ;;		On entry : 0/0
 15406 ;;		On exit  : 0/0
 15407 ;;		Unchanged: 0/0
 15408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15409 ;;      Params:         0       0       0       0       0       0       0
 15410 ;;      Locals:         0       0       0       0       0       0       0
 15411 ;;      Temps:          0       0       0       0       0       0       0
 15412 ;;      Totals:         0       0       0       0       0       0       0
 15413 ;;Total ram usage:        0 bytes
 15414 ;; Hardware stack levels used:    1
 15415 ;; Hardware stack levels required when called:    1
 15416 ;; This function calls:
 15417 ;;		Nothing
 15418 ;; This function is called by:
 15419 ;;		_loopTaskInit
 15420 ;; This function uses a non-reentrant model
 15421 ;;
 15422                           
 15423                           	psect	text69
 15424  0054B0                     __ptext69:
 15425                           	callstack 0
 15426  0054B0                     _adcInit:
 15427                           	callstack 28
 15428  0054B0                     
 15429                           ;fs_adc.c: 55:     TRISAbits.TRISA0 = 1;
 15430  0054B0  8092               	bsf	146,0,c	;volatile
 15431                           
 15432                           ;fs_adc.c: 56:     ANSELAbits.ANSA0 = 1;
 15433  0054B2  010F               	movlb	15	; () banked
 15434  0054B4  8138               	bsf	56,0,b	;volatile
 15435                           
 15436                           ;fs_adc.c: 58:     TRISAbits.TRISA1 = 1;
 15437  0054B6  8292               	bsf	146,1,c	;volatile
 15438                           
 15439                           ;fs_adc.c: 59:     ANSELAbits.ANSA1 = 1;
 15440  0054B8  8338               	bsf	56,1,b	;volatile
 15441                           
 15442                           ;fs_adc.c: 61:     TRISAbits.TRISA2 = 1;
 15443  0054BA  8492               	bsf	146,2,c	;volatile
 15444                           
 15445                           ;fs_adc.c: 62:     ANSELAbits.ANSA2 = 1;
 15446  0054BC  8538               	bsf	56,2,b	;volatile
 15447                           
 15448                           ;fs_adc.c: 64:     TRISAbits.TRISA3 = 1;
 15449  0054BE  8692               	bsf	146,3,c	;volatile
 15450                           
 15451                           ;fs_adc.c: 65:     ANSELAbits.ANSA3 = 1;
 15452  0054C0  8738               	bsf	56,3,b	;volatile
 15453                           
 15454                           ;fs_adc.c: 67:     TRISAbits.TRISA5 = 1;
 15455  0054C2  8A92               	bsf	146,5,c	;volatile
 15456                           
 15457                           ;fs_adc.c: 68:     ANSELAbits.ANSA5 = 1;
 15458  0054C4  8B38               	bsf	56,5,b	;volatile
 15459                           
 15460                           ;fs_adc.c: 70:     TRISEbits.TRISE0 = 1;
 15461  0054C6  8096               	bsf	150,0,c	;volatile
 15462                           
 15463                           ;fs_adc.c: 71:     ANSELEbits.ANSE0 = 1;
 15464  0054C8  813C               	bsf	60,0,b	;volatile
 15465                           
 15466                           ;fs_adc.c: 73:     TRISEbits.TRISE1 = 1;
 15467  0054CA  8296               	bsf	150,1,c	;volatile
 15468                           
 15469                           ;fs_adc.c: 74:     ANSELEbits.ANSE1 = 1;
 15470  0054CC  833C               	bsf	60,1,b	;volatile
 15471                           
 15472                           ;fs_adc.c: 76:     TRISEbits.TRISE2 = 1;
 15473  0054CE  8496               	bsf	150,2,c	;volatile
 15474                           
 15475                           ;fs_adc.c: 77:     ANSELEbits.ANSE2 = 1;
 15476  0054D0  853C               	bsf	60,2,b	;volatile
 15477  0054D2                     
 15478                           ; BSR set to: 15
 15479                           ;fs_adc.c: 79:     ADCON0 = 0x01;
 15480  0054D2  0E01               	movlw	1
 15481  0054D4  6EC2               	movwf	194,c	;volatile
 15482                           
 15483                           ;fs_adc.c: 80:     ADCON1=0x00;
 15484  0054D6  0E00               	movlw	0
 15485  0054D8  6EC1               	movwf	193,c	;volatile
 15486  0054DA                     
 15487                           ; BSR set to: 15
 15488                           ;fs_adc.c: 81:  ADCON2bits.ADFM = 1;
 15489  0054DA  8EC0               	bsf	192,7,c	;volatile
 15490                           
 15491                           ;fs_adc.c: 82:     ADCON2bits.ACQT = 0b010;
 15492  0054DC  50C0               	movf	192,w,c	;volatile
 15493  0054DE  0BC7               	andlw	-57
 15494  0054E0  0910               	iorlw	16
 15495  0054E2  6EC0               	movwf	192,c	;volatile
 15496                           
 15497                           ;fs_adc.c: 83:     ADCON2bits.ADCS = 0b110;
 15498  0054E4  50C0               	movf	192,w,c	;volatile
 15499  0054E6  0BF8               	andlw	-8
 15500  0054E8  0906               	iorlw	6
 15501  0054EA  6EC0               	movwf	192,c	;volatile
 15502  0054EC                     
 15503                           ; BSR set to: 15
 15504  0054EC  0012               	return		;funcret
 15505  0054EE                     __end_of_adcInit:
 15506                           	callstack 0
 15507                           
 15508 ;; *************** function _PWM_Init *****************
 15509 ;; Defined at:
 15510 ;;		line 34 in file "fs_pwm.c"
 15511 ;; Parameters:    Size  Location     Type
 15512 ;;		None
 15513 ;; Auto vars:     Size  Location     Type
 15514 ;;		None
 15515 ;; Return value:  Size  Location     Type
 15516 ;;                  1    wreg      void 
 15517 ;; Registers used:
 15518 ;;		wreg, status,2
 15519 ;; Tracked objects:
 15520 ;;		On entry : 0/0
 15521 ;;		On exit  : 0/0
 15522 ;;		Unchanged: 0/0
 15523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15524 ;;      Params:         0       0       0       0       0       0       0
 15525 ;;      Locals:         0       0       0       0       0       0       0
 15526 ;;      Temps:          0       0       0       0       0       0       0
 15527 ;;      Totals:         0       0       0       0       0       0       0
 15528 ;;Total ram usage:        0 bytes
 15529 ;; Hardware stack levels used:    1
 15530 ;; Hardware stack levels required when called:    1
 15531 ;; This function calls:
 15532 ;;		Nothing
 15533 ;; This function is called by:
 15534 ;;		_loopTaskInit
 15535 ;; This function uses a non-reentrant model
 15536 ;;
 15537                           
 15538                           	psect	text70
 15539  005700                     __ptext70:
 15540                           	callstack 0
 15541  005700                     _PWM_Init:
 15542                           	callstack 28
 15543  005700                     
 15544                           ;fs_pwm.c: 36:     TRISCbits.RC2 = 0;
 15545  005700  9494               	bcf	148,2,c	;volatile
 15546                           
 15547                           ;fs_pwm.c: 37:     TRISCbits.RC1 = 0;
 15548  005702  9294               	bcf	148,1,c	;volatile
 15549  005704                     
 15550                           ;fs_pwm.c: 40:     CCP1CON = 0b00001100;
 15551  005704  0E0C               	movlw	12
 15552  005706  6EBD               	movwf	189,c	;volatile
 15553                           
 15554                           ;fs_pwm.c: 42:     CCP2CON = 0b00001100;
 15555  005708  0E0C               	movlw	12
 15556  00570A  6E66               	movwf	102,c	;volatile
 15557                           
 15558                           ;fs_pwm.c: 46:     T2CONbits.T2CKPS = 0b01;
 15559  00570C  50BA               	movf	186,w,c	;volatile
 15560  00570E  0BFC               	andlw	-4
 15561  005710  0901               	iorlw	1
 15562  005712  6EBA               	movwf	186,c	;volatile
 15563  005714                     
 15564                           ;fs_pwm.c: 47:     T2CONbits.TMR2ON = 1;
 15565  005714  84BA               	bsf	186,2,c	;volatile
 15566                           
 15567                           ;fs_pwm.c: 49:     TMR2 = 0;
 15568  005716  0E00               	movlw	0
 15569  005718  6EBC               	movwf	188,c	;volatile
 15570                           
 15571                           ;fs_pwm.c: 50:     PR2 = 199;
 15572  00571A  0EC7               	movlw	199
 15573  00571C  6EBB               	movwf	187,c	;volatile
 15574                           
 15575                           ;fs_pwm.c: 51:     CCPR1L = 0;
 15576  00571E  0E00               	movlw	0
 15577  005720  6EBE               	movwf	190,c	;volatile
 15578                           
 15579                           ;fs_pwm.c: 52:     CCPR2L = 0;
 15580  005722  0E00               	movlw	0
 15581  005724  6E67               	movwf	103,c	;volatile
 15582  005726  0012               	return		;funcret
 15583  005728                     __end_of_PWM_Init:
 15584                           	callstack 0
 15585                           
 15586 ;; *************** function _PWM2_setDC *****************
 15587 ;; Defined at:
 15588 ;;		line 76 in file "fs_pwm.c"
 15589 ;; Parameters:    Size  Location     Type
 15590 ;;  dutycycle       2   87[COMRAM] short 
 15591 ;; Auto vars:     Size  Location     Type
 15592 ;;  duty            2   91[COMRAM] unsigned short 
 15593 ;; Return value:  Size  Location     Type
 15594 ;;                  1    wreg      void 
 15595 ;; Registers used:
 15596 ;;		wreg, status,2, status,0, cstack
 15597 ;; Tracked objects:
 15598 ;;		On entry : 0/0
 15599 ;;		On exit  : 0/0
 15600 ;;		Unchanged: 0/0
 15601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15602 ;;      Params:         2       0       0       0       0       0       0
 15603 ;;      Locals:         2       0       0       0       0       0       0
 15604 ;;      Temps:          2       0       0       0       0       0       0
 15605 ;;      Totals:         6       0       0       0       0       0       0
 15606 ;;Total ram usage:        6 bytes
 15607 ;; Hardware stack levels used:    1
 15608 ;; Hardware stack levels required when called:    2
 15609 ;; This function calls:
 15610 ;;		___fltol
 15611 ;;		___xxtofl
 15612 ;;		_fabsf
 15613 ;; This function is called by:
 15614 ;;		_loopTaskInit
 15615 ;;		_stopMotor
 15616 ;;		_startMotor
 15617 ;; This function uses a non-reentrant model
 15618 ;;
 15619                           
 15620                           	psect	text71
 15621  004E2A                     __ptext71:
 15622                           	callstack 0
 15623  004E2A                     _PWM2_setDC:
 15624                           	callstack 24
 15625  004E2A                     
 15626                           ;fs_pwm.c: 80:     if (dutycycle <= 1023)
 15627  004E2A  BE59               	btfsc	(PWM2_setDC@dutycycle+1)^0,7,c
 15628  004E2C  EF21  F027         	goto	u6820
 15629  004E30  0E04               	movlw	4
 15630  004E32  5C59               	subwf	(PWM2_setDC@dutycycle+1)^0,w,c
 15631  004E34  B0D8               	btfsc	status,0,c
 15632  004E36  EF1F  F027         	goto	u6821
 15633  004E3A  EF21  F027         	goto	u6820
 15634  004E3E                     u6821:
 15635  004E3E  EF51  F027         	goto	l584
 15636  004E42                     u6820:
 15637  004E42                     
 15638                           ;fs_pwm.c: 81:     {;fs_pwm.c: 82:         duty = (uint16_t) fabsf(dutycycle);
 15639  004E42  C058  F00E         	movff	PWM2_setDC@dutycycle,___xxtofl@val
 15640  004E46  C059  F00F         	movff	PWM2_setDC@dutycycle+1,___xxtofl@val+1
 15641  004E4A  0E00               	movlw	0
 15642  004E4C  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
 15643  004E4E  0EFF               	movlw	-1
 15644  004E50  6E10               	movwf	(___xxtofl@val+2)^0,c
 15645  004E52  6E11               	movwf	(___xxtofl@val+3)^0,c
 15646  004E54  0E01               	movlw	1
 15647  004E56  ECB6  F01A         	call	___xxtofl
 15648  004E5A  C00E  F01C         	movff	?___xxtofl,fabsf@x
 15649  004E5E  C00F  F01D         	movff	?___xxtofl+1,fabsf@x+1
 15650  004E62  C010  F01E         	movff	?___xxtofl+2,fabsf@x+2
 15651  004E66  C011  F01F         	movff	?___xxtofl+3,fabsf@x+3
 15652  004E6A  EC3B  F02B         	call	_fabsf	;wreg free
 15653  004E6E  C01C  F04E         	movff	?_fabsf,___fltol@f1
 15654  004E72  C01D  F04F         	movff	?_fabsf+1,___fltol@f1+1
 15655  004E76  C01E  F050         	movff	?_fabsf+2,___fltol@f1+2
 15656  004E7A  C01F  F051         	movff	?_fabsf+3,___fltol@f1+3
 15657  004E7E  EC69  F021         	call	___fltol	;wreg free
 15658  004E82  C04E  F05C         	movff	?___fltol,PWM2_setDC@duty
 15659  004E86  C04F  F05D         	movff	?___fltol+1,PWM2_setDC@duty+1
 15660  004E8A                     
 15661                           ;fs_pwm.c: 83:         CCPR2L = duty>>2;
 15662  004E8A  C05C  F05A         	movff	PWM2_setDC@duty,??_PWM2_setDC
 15663  004E8E  C05D  F05B         	movff	PWM2_setDC@duty+1,??_PWM2_setDC+1
 15664  004E92  90D8               	bcf	status,0,c
 15665  004E94  325B               	rrcf	(??_PWM2_setDC+1)^0,f,c
 15666  004E96  325A               	rrcf	??_PWM2_setDC^0,f,c
 15667  004E98  90D8               	bcf	status,0,c
 15668  004E9A  325B               	rrcf	(??_PWM2_setDC+1)^0,f,c
 15669  004E9C  325A               	rrcf	??_PWM2_setDC^0,f,c
 15670  004E9E  505A               	movf	??_PWM2_setDC^0,w,c
 15671  004EA0  6E67               	movwf	103,c	;volatile
 15672  004EA2                     l584:
 15673  004EA2  0012               	return		;funcret
 15674  004EA4                     __end_of_PWM2_setDC:
 15675                           	callstack 0
 15676                           
 15677 ;; *************** function _PWM1_setDC *****************
 15678 ;; Defined at:
 15679 ;;		line 60 in file "fs_pwm.c"
 15680 ;; Parameters:    Size  Location     Type
 15681 ;;  dutycycle       2   87[COMRAM] short 
 15682 ;; Auto vars:     Size  Location     Type
 15683 ;;  duty            2   91[COMRAM] unsigned short 
 15684 ;; Return value:  Size  Location     Type
 15685 ;;                  1    wreg      void 
 15686 ;; Registers used:
 15687 ;;		wreg, status,2, status,0, cstack
 15688 ;; Tracked objects:
 15689 ;;		On entry : 0/0
 15690 ;;		On exit  : 0/0
 15691 ;;		Unchanged: 0/0
 15692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15693 ;;      Params:         2       0       0       0       0       0       0
 15694 ;;      Locals:         2       0       0       0       0       0       0
 15695 ;;      Temps:          2       0       0       0       0       0       0
 15696 ;;      Totals:         6       0       0       0       0       0       0
 15697 ;;Total ram usage:        6 bytes
 15698 ;; Hardware stack levels used:    1
 15699 ;; Hardware stack levels required when called:    2
 15700 ;; This function calls:
 15701 ;;		___fltol
 15702 ;;		___xxtofl
 15703 ;;		_fabsf
 15704 ;; This function is called by:
 15705 ;;		_loopTaskInit
 15706 ;;		_stopMotor
 15707 ;;		_startMotor
 15708 ;; This function uses a non-reentrant model
 15709 ;;
 15710                           
 15711                           	psect	text72
 15712  004EA4                     __ptext72:
 15713                           	callstack 0
 15714  004EA4                     _PWM1_setDC:
 15715                           	callstack 24
 15716  004EA4                     
 15717                           ;fs_pwm.c: 64:     if (dutycycle <= 1023)
 15718  004EA4  BE59               	btfsc	(PWM1_setDC@dutycycle+1)^0,7,c
 15719  004EA6  EF5E  F027         	goto	u6810
 15720  004EAA  0E04               	movlw	4
 15721  004EAC  5C59               	subwf	(PWM1_setDC@dutycycle+1)^0,w,c
 15722  004EAE  B0D8               	btfsc	status,0,c
 15723  004EB0  EF5C  F027         	goto	u6811
 15724  004EB4  EF5E  F027         	goto	u6810
 15725  004EB8                     u6811:
 15726  004EB8  EF8E  F027         	goto	l580
 15727  004EBC                     u6810:
 15728  004EBC                     
 15729                           ;fs_pwm.c: 65:     {;fs_pwm.c: 66:         duty = (uint16_t) fabsf(dutycycle);
 15730  004EBC  C058  F00E         	movff	PWM1_setDC@dutycycle,___xxtofl@val
 15731  004EC0  C059  F00F         	movff	PWM1_setDC@dutycycle+1,___xxtofl@val+1
 15732  004EC4  0E00               	movlw	0
 15733  004EC6  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
 15734  004EC8  0EFF               	movlw	-1
 15735  004ECA  6E10               	movwf	(___xxtofl@val+2)^0,c
 15736  004ECC  6E11               	movwf	(___xxtofl@val+3)^0,c
 15737  004ECE  0E01               	movlw	1
 15738  004ED0  ECB6  F01A         	call	___xxtofl
 15739  004ED4  C00E  F01C         	movff	?___xxtofl,fabsf@x
 15740  004ED8  C00F  F01D         	movff	?___xxtofl+1,fabsf@x+1
 15741  004EDC  C010  F01E         	movff	?___xxtofl+2,fabsf@x+2
 15742  004EE0  C011  F01F         	movff	?___xxtofl+3,fabsf@x+3
 15743  004EE4  EC3B  F02B         	call	_fabsf	;wreg free
 15744  004EE8  C01C  F04E         	movff	?_fabsf,___fltol@f1
 15745  004EEC  C01D  F04F         	movff	?_fabsf+1,___fltol@f1+1
 15746  004EF0  C01E  F050         	movff	?_fabsf+2,___fltol@f1+2
 15747  004EF4  C01F  F051         	movff	?_fabsf+3,___fltol@f1+3
 15748  004EF8  EC69  F021         	call	___fltol	;wreg free
 15749  004EFC  C04E  F05C         	movff	?___fltol,PWM1_setDC@duty
 15750  004F00  C04F  F05D         	movff	?___fltol+1,PWM1_setDC@duty+1
 15751  004F04                     
 15752                           ;fs_pwm.c: 67:         CCPR1L = duty>>2;
 15753  004F04  C05C  F05A         	movff	PWM1_setDC@duty,??_PWM1_setDC
 15754  004F08  C05D  F05B         	movff	PWM1_setDC@duty+1,??_PWM1_setDC+1
 15755  004F0C  90D8               	bcf	status,0,c
 15756  004F0E  325B               	rrcf	(??_PWM1_setDC+1)^0,f,c
 15757  004F10  325A               	rrcf	??_PWM1_setDC^0,f,c
 15758  004F12  90D8               	bcf	status,0,c
 15759  004F14  325B               	rrcf	(??_PWM1_setDC+1)^0,f,c
 15760  004F16  325A               	rrcf	??_PWM1_setDC^0,f,c
 15761  004F18  505A               	movf	??_PWM1_setDC^0,w,c
 15762  004F1A  6EBE               	movwf	190,c	;volatile
 15763  004F1C                     l580:
 15764  004F1C  0012               	return		;funcret
 15765  004F1E                     __end_of_PWM1_setDC:
 15766                           	callstack 0
 15767                           
 15768 ;; *************** function _fabsf *****************
 15769 ;; Defined at:
 15770 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fabsf.c"
 15771 ;; Parameters:    Size  Location     Type
 15772 ;;  x               4   27[COMRAM] float 
 15773 ;; Auto vars:     Size  Location     Type
 15774 ;;  u               4   31[COMRAM] struct .
 15775 ;; Return value:  Size  Location     Type
 15776 ;;                  4   27[COMRAM] float 
 15777 ;; Registers used:
 15778 ;;		status,2, status,0
 15779 ;; Tracked objects:
 15780 ;;		On entry : 0/0
 15781 ;;		On exit  : 0/0
 15782 ;;		Unchanged: 0/0
 15783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15784 ;;      Params:         4       0       0       0       0       0       0
 15785 ;;      Locals:         4       0       0       0       0       0       0
 15786 ;;      Temps:          0       0       0       0       0       0       0
 15787 ;;      Totals:         8       0       0       0       0       0       0
 15788 ;;Total ram usage:        8 bytes
 15789 ;; Hardware stack levels used:    1
 15790 ;; Hardware stack levels required when called:    1
 15791 ;; This function calls:
 15792 ;;		Nothing
 15793 ;; This function is called by:
 15794 ;;		_PWM1_setDC
 15795 ;;		_PWM2_setDC
 15796 ;; This function uses a non-reentrant model
 15797 ;;
 15798                           
 15799                           	psect	text73
 15800  005676                     __ptext73:
 15801                           	callstack 0
 15802  005676                     _fabsf:
 15803                           	callstack 24
 15804  005676  C1AB  F020         	movff	fabsf@F463,fabsf@u
 15805  00567A  C1AC  F021         	movff	fabsf@F463+1,fabsf@u+1
 15806  00567E  C1AD  F022         	movff	fabsf@F463+2,fabsf@u+2
 15807  005682  C1AE  F023         	movff	fabsf@F463+3,fabsf@u+3
 15808  005686  C01C  F020         	movff	fabsf@x,fabsf@u
 15809  00568A  C01D  F021         	movff	fabsf@x+1,fabsf@u+1
 15810  00568E  C01E  F022         	movff	fabsf@x+2,fabsf@u+2
 15811  005692  C01F  F023         	movff	fabsf@x+3,fabsf@u+3
 15812  005696  9E23               	bcf	(fabsf@u+3)^0,7,c
 15813  005698  C020  F01C         	movff	fabsf@u,?_fabsf
 15814  00569C  C021  F01D         	movff	fabsf@u+1,?_fabsf+1
 15815  0056A0  C022  F01E         	movff	fabsf@u+2,?_fabsf+2
 15816  0056A4  C023  F01F         	movff	fabsf@u+3,?_fabsf+3
 15817  0056A8  0012               	return		;funcret
 15818  0056AA                     __end_of_fabsf:
 15819                           	callstack 0
 15820                           
 15821 ;; *************** function ___xxtofl *****************
 15822 ;; Defined at:
 15823 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
 15824 ;; Parameters:    Size  Location     Type
 15825 ;;  sign            1    wreg     unsigned char 
 15826 ;;  val             4   13[COMRAM] long 
 15827 ;; Auto vars:     Size  Location     Type
 15828 ;;  sign            1   21[COMRAM] unsigned char 
 15829 ;;  arg             4   23[COMRAM] unsigned long 
 15830 ;;  exp             1   22[COMRAM] unsigned char 
 15831 ;; Return value:  Size  Location     Type
 15832 ;;                  4   13[COMRAM] unsigned char 
 15833 ;; Registers used:
 15834 ;;		wreg, status,2, status,0
 15835 ;; Tracked objects:
 15836 ;;		On entry : 0/0
 15837 ;;		On exit  : 0/0
 15838 ;;		Unchanged: 0/0
 15839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15840 ;;      Params:         4       0       0       0       0       0       0
 15841 ;;      Locals:         6       0       0       0       0       0       0
 15842 ;;      Temps:          4       0       0       0       0       0       0
 15843 ;;      Totals:        14       0       0       0       0       0       0
 15844 ;;Total ram usage:       14 bytes
 15845 ;; Hardware stack levels used:    1
 15846 ;; Hardware stack levels required when called:    1
 15847 ;; This function calls:
 15848 ;;		Nothing
 15849 ;; This function is called by:
 15850 ;;		_scanAdcConversion
 15851 ;;		_calculatedAverageValue
 15852 ;;		_PWM1_setDC
 15853 ;;		_PWM2_setDC
 15854 ;;		_speedControl
 15855 ;; This function uses a non-reentrant model
 15856 ;;
 15857                           
 15858                           	psect	text74
 15859  00356C                     __ptext74:
 15860                           	callstack 0
 15861  00356C                     ___xxtofl:
 15862                           	callstack 24
 15863                           
 15864                           ;incstack = 0
 15865                           ;___xxtofl@sign stored from wreg
 15866  00356C  6E16               	movwf	___xxtofl@sign^0,c
 15867  00356E  5016               	movf	___xxtofl@sign^0,w,c
 15868  003570  B4D8               	btfsc	status,2,c
 15869  003572  EFBD  F01A         	goto	u6501
 15870  003576  EFBF  F01A         	goto	u6500
 15871  00357A                     u6501:
 15872  00357A  EFE1  F01A         	goto	l1353
 15873  00357E                     u6500:
 15874  00357E  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
 15875  003580  EFC6  F01A         	goto	u6510
 15876  003584  EFC4  F01A         	goto	u6511
 15877  003588                     u6511:
 15878  003588  EFE1  F01A         	goto	l1353
 15879  00358C                     u6510:
 15880  00358C  C00E  F012         	movff	___xxtofl@val,??___xxtofl
 15881  003590  C00F  F013         	movff	___xxtofl@val+1,??___xxtofl+1
 15882  003594  C010  F014         	movff	___xxtofl@val+2,??___xxtofl+2
 15883  003598  C011  F015         	movff	___xxtofl@val+3,??___xxtofl+3
 15884  00359C  1E12               	comf	??___xxtofl^0,f,c
 15885  00359E  1E13               	comf	(??___xxtofl+1)^0,f,c
 15886  0035A0  1E14               	comf	(??___xxtofl+2)^0,f,c
 15887  0035A2  1E15               	comf	(??___xxtofl+3)^0,f,c
 15888  0035A4  2A12               	incf	??___xxtofl^0,f,c
 15889  0035A6  0E00               	movlw	0
 15890  0035A8  2213               	addwfc	(??___xxtofl+1)^0,f,c
 15891  0035AA  2214               	addwfc	(??___xxtofl+2)^0,f,c
 15892  0035AC  2215               	addwfc	(??___xxtofl+3)^0,f,c
 15893  0035AE  C012  F018         	movff	??___xxtofl,___xxtofl@arg
 15894  0035B2  C013  F019         	movff	??___xxtofl+1,___xxtofl@arg+1
 15895  0035B6  C014  F01A         	movff	??___xxtofl+2,___xxtofl@arg+2
 15896  0035BA  C015  F01B         	movff	??___xxtofl+3,___xxtofl@arg+3
 15897  0035BE  EFE9  F01A         	goto	l5551
 15898  0035C2                     l1353:
 15899  0035C2  C00E  F018         	movff	___xxtofl@val,___xxtofl@arg
 15900  0035C6  C00F  F019         	movff	___xxtofl@val+1,___xxtofl@arg+1
 15901  0035CA  C010  F01A         	movff	___xxtofl@val+2,___xxtofl@arg+2
 15902  0035CE  C011  F01B         	movff	___xxtofl@val+3,___xxtofl@arg+3
 15903  0035D2                     l5551:
 15904  0035D2  500E               	movf	___xxtofl@val^0,w,c
 15905  0035D4  100F               	iorwf	(___xxtofl@val+1)^0,w,c
 15906  0035D6  1010               	iorwf	(___xxtofl@val+2)^0,w,c
 15907  0035D8  1011               	iorwf	(___xxtofl@val+3)^0,w,c
 15908  0035DA  A4D8               	btfss	status,2,c
 15909  0035DC  EFF2  F01A         	goto	u6521
 15910  0035E0  EFF4  F01A         	goto	u6520
 15911  0035E4                     u6521:
 15912  0035E4  EFFE  F01A         	goto	l5557
 15913  0035E8                     u6520:
 15914  0035E8  0E00               	movlw	0
 15915  0035EA  6E0E               	movwf	?___xxtofl^0,c
 15916  0035EC  0E00               	movlw	0
 15917  0035EE  6E0F               	movwf	(?___xxtofl+1)^0,c
 15918  0035F0  0E00               	movlw	0
 15919  0035F2  6E10               	movwf	(?___xxtofl+2)^0,c
 15920  0035F4  0E00               	movlw	0
 15921  0035F6  6E11               	movwf	(?___xxtofl+3)^0,c
 15922  0035F8  EF8F  F01B         	goto	l1356
 15923  0035FC                     l5557:
 15924  0035FC  0E96               	movlw	150
 15925  0035FE  6E17               	movwf	___xxtofl@exp^0,c
 15926  003600  EF08  F01B         	goto	l5561
 15927  003604                     l5559:
 15928  003604  2A17               	incf	___xxtofl@exp^0,f,c
 15929  003606  90D8               	bcf	status,0,c
 15930  003608  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
 15931  00360A  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
 15932  00360C  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
 15933  00360E  3218               	rrcf	___xxtofl@arg^0,f,c
 15934  003610                     l5561:
 15935  003610  0E00               	movlw	0
 15936  003612  1418               	andwf	___xxtofl@arg^0,w,c
 15937  003614  6E12               	movwf	??___xxtofl^0,c
 15938  003616  0E00               	movlw	0
 15939  003618  1419               	andwf	(___xxtofl@arg+1)^0,w,c
 15940  00361A  6E13               	movwf	(??___xxtofl+1)^0,c
 15941  00361C  0E00               	movlw	0
 15942  00361E  141A               	andwf	(___xxtofl@arg+2)^0,w,c
 15943  003620  6E14               	movwf	(??___xxtofl+2)^0,c
 15944  003622  0EFE               	movlw	254
 15945  003624  141B               	andwf	(___xxtofl@arg+3)^0,w,c
 15946  003626  6E15               	movwf	(??___xxtofl+3)^0,c
 15947  003628  5012               	movf	??___xxtofl^0,w,c
 15948  00362A  1013               	iorwf	(??___xxtofl+1)^0,w,c
 15949  00362C  1014               	iorwf	(??___xxtofl+2)^0,w,c
 15950  00362E  1015               	iorwf	(??___xxtofl+3)^0,w,c
 15951  003630  A4D8               	btfss	status,2,c
 15952  003632  EF1D  F01B         	goto	u6531
 15953  003636  EF1F  F01B         	goto	u6530
 15954  00363A                     u6531:
 15955  00363A  EF02  F01B         	goto	l5559
 15956  00363E                     u6530:
 15957  00363E  EF2D  F01B         	goto	l1360
 15958  003642                     l5563:
 15959  003642  2A17               	incf	___xxtofl@exp^0,f,c
 15960  003644  0E01               	movlw	1
 15961  003646  2618               	addwf	___xxtofl@arg^0,f,c
 15962  003648  0E00               	movlw	0
 15963  00364A  2219               	addwfc	(___xxtofl@arg+1)^0,f,c
 15964  00364C  221A               	addwfc	(___xxtofl@arg+2)^0,f,c
 15965  00364E  221B               	addwfc	(___xxtofl@arg+3)^0,f,c
 15966  003650  90D8               	bcf	status,0,c
 15967  003652  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
 15968  003654  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
 15969  003656  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
 15970  003658  3218               	rrcf	___xxtofl@arg^0,f,c
 15971  00365A                     l1360:
 15972  00365A  0E00               	movlw	0
 15973  00365C  1418               	andwf	___xxtofl@arg^0,w,c
 15974  00365E  6E12               	movwf	??___xxtofl^0,c
 15975  003660  0E00               	movlw	0
 15976  003662  1419               	andwf	(___xxtofl@arg+1)^0,w,c
 15977  003664  6E13               	movwf	(??___xxtofl+1)^0,c
 15978  003666  0E00               	movlw	0
 15979  003668  141A               	andwf	(___xxtofl@arg+2)^0,w,c
 15980  00366A  6E14               	movwf	(??___xxtofl+2)^0,c
 15981  00366C  0EFF               	movlw	255
 15982  00366E  141B               	andwf	(___xxtofl@arg+3)^0,w,c
 15983  003670  6E15               	movwf	(??___xxtofl+3)^0,c
 15984  003672  5012               	movf	??___xxtofl^0,w,c
 15985  003674  1013               	iorwf	(??___xxtofl+1)^0,w,c
 15986  003676  1014               	iorwf	(??___xxtofl+2)^0,w,c
 15987  003678  1015               	iorwf	(??___xxtofl+3)^0,w,c
 15988  00367A  A4D8               	btfss	status,2,c
 15989  00367C  EF42  F01B         	goto	u6541
 15990  003680  EF44  F01B         	goto	u6540
 15991  003684                     u6541:
 15992  003684  EF21  F01B         	goto	l5563
 15993  003688                     u6540:
 15994  003688  EF4C  F01B         	goto	l5571
 15995  00368C                     l5569:
 15996  00368C  0617               	decf	___xxtofl@exp^0,f,c
 15997  00368E  90D8               	bcf	status,0,c
 15998  003690  3618               	rlcf	___xxtofl@arg^0,f,c
 15999  003692  3619               	rlcf	(___xxtofl@arg+1)^0,f,c
 16000  003694  361A               	rlcf	(___xxtofl@arg+2)^0,f,c
 16001  003696  361B               	rlcf	(___xxtofl@arg+3)^0,f,c
 16002  003698                     l5571:
 16003  003698  BE1A               	btfsc	(___xxtofl@arg+2)^0,7,c
 16004  00369A  EF51  F01B         	goto	u6551
 16005  00369E  EF53  F01B         	goto	u6550
 16006  0036A2                     u6551:
 16007  0036A2  EF5B  F01B         	goto	l1367
 16008  0036A6                     u6550:
 16009  0036A6  0E02               	movlw	2
 16010  0036A8  6017               	cpfslt	___xxtofl@exp^0,c
 16011  0036AA  EF59  F01B         	goto	u6561
 16012  0036AE  EF5B  F01B         	goto	u6560
 16013  0036B2                     u6561:
 16014  0036B2  EF46  F01B         	goto	l5569
 16015  0036B6                     u6560:
 16016  0036B6                     l1367:
 16017  0036B6  B017               	btfsc	___xxtofl@exp^0,0,c
 16018  0036B8  EF60  F01B         	goto	u6571
 16019  0036BC  EF62  F01B         	goto	u6570
 16020  0036C0                     u6571:
 16021  0036C0  EF63  F01B         	goto	l5577
 16022  0036C4                     u6570:
 16023  0036C4  9E1A               	bcf	(___xxtofl@arg+2)^0,7,c
 16024  0036C6                     l5577:
 16025  0036C6  90D8               	bcf	status,0,c
 16026  0036C8  3217               	rrcf	___xxtofl@exp^0,f,c
 16027  0036CA  C017  F012         	movff	___xxtofl@exp,??___xxtofl
 16028  0036CE  6A13               	clrf	(??___xxtofl+1)^0,c
 16029  0036D0  6A14               	clrf	(??___xxtofl+2)^0,c
 16030  0036D2  6A15               	clrf	(??___xxtofl+3)^0,c
 16031  0036D4  C012  F015         	movff	??___xxtofl,??___xxtofl+3
 16032  0036D8  6A14               	clrf	(??___xxtofl+2)^0,c
 16033  0036DA  6A13               	clrf	(??___xxtofl+1)^0,c
 16034  0036DC  6A12               	clrf	??___xxtofl^0,c
 16035  0036DE  5012               	movf	??___xxtofl^0,w,c
 16036  0036E0  1218               	iorwf	___xxtofl@arg^0,f,c
 16037  0036E2  5013               	movf	(??___xxtofl+1)^0,w,c
 16038  0036E4  1219               	iorwf	(___xxtofl@arg+1)^0,f,c
 16039  0036E6  5014               	movf	(??___xxtofl+2)^0,w,c
 16040  0036E8  121A               	iorwf	(___xxtofl@arg+2)^0,f,c
 16041  0036EA  5015               	movf	(??___xxtofl+3)^0,w,c
 16042  0036EC  121B               	iorwf	(___xxtofl@arg+3)^0,f,c
 16043  0036EE  5016               	movf	___xxtofl@sign^0,w,c
 16044  0036F0  B4D8               	btfsc	status,2,c
 16045  0036F2  EF7D  F01B         	goto	u6581
 16046  0036F6  EF7F  F01B         	goto	u6580
 16047  0036FA                     u6581:
 16048  0036FA  EF87  F01B         	goto	l5587
 16049  0036FE                     u6580:
 16050  0036FE  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
 16051  003700  EF86  F01B         	goto	u6590
 16052  003704  EF84  F01B         	goto	u6591
 16053  003708                     u6591:
 16054  003708  EF87  F01B         	goto	l5587
 16055  00370C                     u6590:
 16056  00370C  8E1B               	bsf	(___xxtofl@arg+3)^0,7,c
 16057  00370E                     l5587:
 16058  00370E  C018  F00E         	movff	___xxtofl@arg,?___xxtofl
 16059  003712  C019  F00F         	movff	___xxtofl@arg+1,?___xxtofl+1
 16060  003716  C01A  F010         	movff	___xxtofl@arg+2,?___xxtofl+2
 16061  00371A  C01B  F011         	movff	___xxtofl@arg+3,?___xxtofl+3
 16062  00371E                     l1356:
 16063  00371E  0012               	return		;funcret
 16064  003720                     __end_of___xxtofl:
 16065                           	callstack 0
 16066                           
 16067 ;; *************** function ___fltol *****************
 16068 ;; Defined at:
 16069 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
 16070 ;; Parameters:    Size  Location     Type
 16071 ;;  f1              4   77[COMRAM] unsigned char 
 16072 ;; Auto vars:     Size  Location     Type
 16073 ;;  exp1            1   86[COMRAM] unsigned char 
 16074 ;;  sign1           1   85[COMRAM] unsigned char 
 16075 ;; Return value:  Size  Location     Type
 16076 ;;                  4   77[COMRAM] long 
 16077 ;; Registers used:
 16078 ;;		wreg, status,2, status,0
 16079 ;; Tracked objects:
 16080 ;;		On entry : 0/0
 16081 ;;		On exit  : 0/0
 16082 ;;		Unchanged: 0/0
 16083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16084 ;;      Params:         4       0       0       0       0       0       0
 16085 ;;      Locals:         2       0       0       0       0       0       0
 16086 ;;      Temps:          4       0       0       0       0       0       0
 16087 ;;      Totals:        10       0       0       0       0       0       0
 16088 ;;Total ram usage:       10 bytes
 16089 ;; Hardware stack levels used:    1
 16090 ;; Hardware stack levels required when called:    1
 16091 ;; This function calls:
 16092 ;;		Nothing
 16093 ;; This function is called by:
 16094 ;;		_scanAdcConversion
 16095 ;;		_PWM1_setDC
 16096 ;;		_PWM2_setDC
 16097 ;;		_speedControl
 16098 ;;		_efgtoa
 16099 ;; This function uses a non-reentrant model
 16100 ;;
 16101                           
 16102                           	psect	text75
 16103  0042D2                     __ptext75:
 16104                           	callstack 0
 16105  0042D2                     ___fltol:
 16106                           	callstack 24
 16107  0042D2  3450               	rlcf	(___fltol@f1+2)^0,w,c
 16108  0042D4  3451               	rlcf	(___fltol@f1+3)^0,w,c
 16109  0042D6  6E57               	movwf	___fltol@exp1^0,c
 16110  0042D8  5057               	movf	___fltol@exp1^0,w,c
 16111  0042DA  A4D8               	btfss	status,2,c
 16112  0042DC  EF72  F021         	goto	u5231
 16113  0042E0  EF74  F021         	goto	u5230
 16114  0042E4                     u5231:
 16115  0042E4  EF7E  F021         	goto	l4909
 16116  0042E8                     u5230:
 16117  0042E8                     l4905:
 16118  0042E8  0E00               	movlw	0
 16119  0042EA  6E4E               	movwf	?___fltol^0,c
 16120  0042EC  0E00               	movlw	0
 16121  0042EE  6E4F               	movwf	(?___fltol+1)^0,c
 16122  0042F0  0E00               	movlw	0
 16123  0042F2  6E50               	movwf	(?___fltol+2)^0,c
 16124  0042F4  0E00               	movlw	0
 16125  0042F6  6E51               	movwf	(?___fltol+3)^0,c
 16126  0042F8  EFEB  F021         	goto	l995
 16127  0042FC                     l4909:
 16128  0042FC  C04E  F052         	movff	___fltol@f1,??___fltol
 16129  004300  C04F  F053         	movff	___fltol@f1+1,??___fltol+1
 16130  004304  C050  F054         	movff	___fltol@f1+2,??___fltol+2
 16131  004308  C051  F055         	movff	___fltol@f1+3,??___fltol+3
 16132  00430C  0E20               	movlw	32
 16133  00430E  EF8E  F021         	goto	u5240
 16134  004312                     u5245:
 16135  004312  90D8               	bcf	status,0,c
 16136  004314  3255               	rrcf	(??___fltol+3)^0,f,c
 16137  004316  3254               	rrcf	(??___fltol+2)^0,f,c
 16138  004318  3253               	rrcf	(??___fltol+1)^0,f,c
 16139  00431A  3252               	rrcf	??___fltol^0,f,c
 16140  00431C                     u5240:
 16141  00431C  2EE8               	decfsz	wreg,f,c
 16142  00431E  EF89  F021         	goto	u5245
 16143  004322  5052               	movf	??___fltol^0,w,c
 16144  004324  6E56               	movwf	___fltol@sign1^0,c
 16145  004326  8E50               	bsf	(___fltol@f1+2)^0,7,c
 16146  004328  0EFF               	movlw	255
 16147  00432A  164E               	andwf	___fltol@f1^0,f,c
 16148  00432C  0EFF               	movlw	255
 16149  00432E  164F               	andwf	(___fltol@f1+1)^0,f,c
 16150  004330  0EFF               	movlw	255
 16151  004332  1650               	andwf	(___fltol@f1+2)^0,f,c
 16152  004334  0E00               	movlw	0
 16153  004336  1651               	andwf	(___fltol@f1+3)^0,f,c
 16154  004338  0E96               	movlw	150
 16155  00433A  5E57               	subwf	___fltol@exp1^0,f,c
 16156  00433C  BE57               	btfsc	___fltol@exp1^0,7,c
 16157  00433E  EFA5  F021         	goto	u5250
 16158  004342  EFA3  F021         	goto	u5251
 16159  004346                     u5251:
 16160  004346  EFBB  F021         	goto	l4929
 16161  00434A                     u5250:
 16162  00434A  5057               	movf	___fltol@exp1^0,w,c
 16163  00434C  0A80               	xorlw	128
 16164  00434E  0F97               	addlw	151
 16165  004350  B0D8               	btfsc	status,0,c
 16166  004352  EFAD  F021         	goto	u5261
 16167  004356  EFAF  F021         	goto	u5260
 16168  00435A                     u5261:
 16169  00435A  EFB1  F021         	goto	l4925
 16170  00435E                     u5260:
 16171  00435E  EF74  F021         	goto	l4905
 16172  004362                     l4925:
 16173  004362  90D8               	bcf	status,0,c
 16174  004364  3251               	rrcf	(___fltol@f1+3)^0,f,c
 16175  004366  3250               	rrcf	(___fltol@f1+2)^0,f,c
 16176  004368  324F               	rrcf	(___fltol@f1+1)^0,f,c
 16177  00436A  324E               	rrcf	___fltol@f1^0,f,c
 16178  00436C  3E57               	incfsz	___fltol@exp1^0,f,c
 16179  00436E  EFB1  F021         	goto	l4925
 16180  004372  EFD3  F021         	goto	l4939
 16181  004376                     l4929:
 16182  004376  0E1F               	movlw	31
 16183  004378  6457               	cpfsgt	___fltol@exp1^0,c
 16184  00437A  EFC1  F021         	goto	u5271
 16185  00437E  EFC3  F021         	goto	u5270
 16186  004382                     u5271:
 16187  004382  EFCB  F021         	goto	l4937
 16188  004386                     u5270:
 16189  004386  EF74  F021         	goto	l4905
 16190  00438A                     l4935:
 16191  00438A  90D8               	bcf	status,0,c
 16192  00438C  364E               	rlcf	___fltol@f1^0,f,c
 16193  00438E  364F               	rlcf	(___fltol@f1+1)^0,f,c
 16194  004390  3650               	rlcf	(___fltol@f1+2)^0,f,c
 16195  004392  3651               	rlcf	(___fltol@f1+3)^0,f,c
 16196  004394  0657               	decf	___fltol@exp1^0,f,c
 16197  004396                     l4937:
 16198  004396  5057               	movf	___fltol@exp1^0,w,c
 16199  004398  A4D8               	btfss	status,2,c
 16200  00439A  EFD1  F021         	goto	u5281
 16201  00439E  EFD3  F021         	goto	u5280
 16202  0043A2                     u5281:
 16203  0043A2  EFC5  F021         	goto	l4935
 16204  0043A6                     u5280:
 16205  0043A6                     l4939:
 16206  0043A6  5056               	movf	___fltol@sign1^0,w,c
 16207  0043A8  B4D8               	btfsc	status,2,c
 16208  0043AA  EFD9  F021         	goto	u5291
 16209  0043AE  EFDB  F021         	goto	u5290
 16210  0043B2                     u5291:
 16211  0043B2  EFE3  F021         	goto	l4943
 16212  0043B6                     u5290:
 16213  0043B6  1E51               	comf	(___fltol@f1+3)^0,f,c
 16214  0043B8  1E50               	comf	(___fltol@f1+2)^0,f,c
 16215  0043BA  1E4F               	comf	(___fltol@f1+1)^0,f,c
 16216  0043BC  6C4E               	negf	___fltol@f1^0,c
 16217  0043BE  0E00               	movlw	0
 16218  0043C0  224F               	addwfc	(___fltol@f1+1)^0,f,c
 16219  0043C2  2250               	addwfc	(___fltol@f1+2)^0,f,c
 16220  0043C4  2251               	addwfc	(___fltol@f1+3)^0,f,c
 16221  0043C6                     l4943:
 16222  0043C6  C04E  F04E         	movff	___fltol@f1,?___fltol
 16223  0043CA  C04F  F04F         	movff	___fltol@f1+1,?___fltol+1
 16224  0043CE  C050  F050         	movff	___fltol@f1+2,?___fltol+2
 16225  0043D2  C051  F051         	movff	___fltol@f1+3,?___fltol+3
 16226  0043D6                     l995:
 16227  0043D6  0012               	return		;funcret
 16228  0043D8                     __end_of___fltol:
 16229                           	callstack 0
 16230                           
 16231 ;; *************** function _TIMER0 *****************
 16232 ;; Defined at:
 16233 ;;		line 33 in file "fs_timer.c"
 16234 ;; Parameters:    Size  Location     Type
 16235 ;;		None
 16236 ;; Auto vars:     Size  Location     Type
 16237 ;;		None
 16238 ;; Return value:  Size  Location     Type
 16239 ;;                  1    wreg      void 
 16240 ;; Registers used:
 16241 ;;		wreg, status,2, status,0
 16242 ;; Tracked objects:
 16243 ;;		On entry : 0/0
 16244 ;;		On exit  : 0/0
 16245 ;;		Unchanged: 0/0
 16246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16247 ;;      Params:         0       0       0       0       0       0       0
 16248 ;;      Locals:         0       0       0       0       0       0       0
 16249 ;;      Temps:          0       0       0       0       0       0       0
 16250 ;;      Totals:         0       0       0       0       0       0       0
 16251 ;;Total ram usage:        0 bytes
 16252 ;; Hardware stack levels used:    1
 16253 ;; This function calls:
 16254 ;;		Nothing
 16255 ;; This function is called by:
 16256 ;;		Interrupt level 2
 16257 ;; This function uses a non-reentrant model
 16258 ;;
 16259                           
 16260                           	psect	intcode
 16261  000008                     __pintcode:
 16262                           	callstack 0
 16263  000008                     _TIMER0:
 16264                           	callstack 19
 16265                           
 16266                           ;incstack = 0
 16267  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 16268  00000A                     
 16269                           ;fs_timer.c: 35:     if ((INTCONbits.TMR0IF)&&(INTCONbits.TMR0IE))
 16270  00000A  A4F2               	btfss	242,2,c	;volatile
 16271  00000C  EF0A  F000         	goto	i2u791_41
 16272  000010  EF0C  F000         	goto	i2u791_40
 16273  000014                     i2u791_41:
 16274  000014  EF55  F000         	goto	i2l692
 16275  000018                     i2u791_40:
 16276  000018  AAF2               	btfss	242,5,c	;volatile
 16277  00001A  EF11  F000         	goto	i2u792_41
 16278  00001E  EF13  F000         	goto	i2u792_40
 16279  000022                     i2u792_41:
 16280  000022  EF55  F000         	goto	i2l692
 16281  000026                     i2u792_40:
 16282  000026                     
 16283                           ;fs_timer.c: 36:     {;fs_timer.c: 37:         INTCONbits.TMR0IF = 0;
 16284  000026  94F2               	bcf	242,2,c	;volatile
 16285  000028                     
 16286                           ;fs_timer.c: 38:         TMR0H = 0x63;
 16287  000028  0E63               	movlw	99
 16288  00002A  6ED7               	movwf	215,c	;volatile
 16289                           
 16290                           ;fs_timer.c: 39:         TMR0L = 0xC0;
 16291  00002C  0EC0               	movlw	192
 16292  00002E  6ED6               	movwf	214,c	;volatile
 16293  000030                     
 16294                           ;fs_timer.c: 41:         timer_value.adc_conversion_time++;
 16295  000030  0101               	movlb	1	; () banked
 16296  000032  2B94               	incf	(_timer_value+5)& (0+255),f,b
 16297  000034                     
 16298                           ; BSR set to: 1
 16299                           ;fs_timer.c: 43:         if (timer_value.adc_conversion_time >8)
 16300  000034  0E08               	movlw	8
 16301  000036  6594               	cpfsgt	(_timer_value+5)& (0+255),b
 16302  000038  EF20  F000         	goto	i2u793_41
 16303  00003C  EF22  F000         	goto	i2u793_40
 16304  000040                     i2u793_41:
 16305  000040  EF24  F000         	goto	i2l6527
 16306  000044                     i2u793_40:
 16307  000044                     
 16308                           ; BSR set to: 1
 16309                           ;fs_timer.c: 44:         {;fs_timer.c: 45:             timer_value.adc_conversion_time =
      +                           0;
 16310  000044  0E00               	movlw	0
 16311  000046  6F94               	movwf	(_timer_value+5)& (0+255),b
 16312  000048                     i2l6527:
 16313                           
 16314                           ; BSR set to: 1
 16315                           ;fs_timer.c: 48:         if (startIsClick == 1)
 16316  000048  0100               	movlb	0	; () banked
 16317  00004A  05FE               	decf	_startIsClick& (0+255),w,b
 16318  00004C  A4D8               	btfss	status,2,c
 16319  00004E  EF2B  F000         	goto	i2u794_41
 16320  000052  EF2D  F000         	goto	i2u794_40
 16321  000056                     i2u794_41:
 16322  000056  EF30  F000         	goto	i2l6531
 16323  00005A                     i2u794_40:
 16324  00005A                     
 16325                           ; BSR set to: 0
 16326                           ;fs_timer.c: 49:         {;fs_timer.c: 50:             timer_value.second_counter++;
 16327  00005A  0101               	movlb	1	; () banked
 16328  00005C  4B95               	infsnz	(_timer_value+6)& (0+255),f,b
 16329  00005E  2B96               	incf	(_timer_value+7)& (0+255),f,b
 16330  000060                     i2l6531:
 16331                           
 16332                           ;fs_timer.c: 53:         if(button_bounce_controller.menu == 1)
 16333  000060  0101               	movlb	1	; () banked
 16334  000062  059D               	decf	_button_bounce_controller& (0+255),w,b
 16335  000064  A4D8               	btfss	status,2,c
 16336  000066  EF37  F000         	goto	i2u795_41
 16337  00006A  EF39  F000         	goto	i2u795_40
 16338  00006E                     i2u795_41:
 16339  00006E  EF3A  F000         	goto	i2l6535
 16340  000072                     i2u795_40:
 16341  000072                     
 16342                           ; BSR set to: 1
 16343                           ;fs_timer.c: 54:         {;fs_timer.c: 55:              timer_value.menu_login_delay++;
 16344  000072  2B93               	incf	(_timer_value+4)& (0+255),f,b
 16345  000074                     i2l6535:
 16346                           
 16347                           ; BSR set to: 1
 16348                           ;fs_timer.c: 57:         if(button_bounce_controller.menu == 0)
 16349  000074  519D               	movf	_button_bounce_controller& (0+255),w,b
 16350  000076  A4D8               	btfss	status,2,c
 16351  000078  EF40  F000         	goto	i2u796_41
 16352  00007C  EF42  F000         	goto	i2u796_40
 16353  000080                     i2u796_41:
 16354  000080  EF44  F000         	goto	i2l6539
 16355  000084                     i2u796_40:
 16356  000084                     
 16357                           ; BSR set to: 1
 16358                           ;fs_timer.c: 58:         {;fs_timer.c: 59:              timer_value.menu_login_delay = 0
      +                          ;
 16359  000084  0E00               	movlw	0
 16360  000086  6F93               	movwf	(_timer_value+4)& (0+255),b
 16361  000088                     i2l6539:
 16362                           
 16363                           ; BSR set to: 1
 16364                           ;fs_timer.c: 62:         if (timer_value.second_counter >= 100)
 16365  000088  5196               	movf	(_timer_value+7)& (0+255),w,b
 16366  00008A  E109               	bnz	i2u797_40
 16367  00008C  0E64               	movlw	100
 16368  00008E  5D95               	subwf	(_timer_value+6)& (0+255),w,b
 16369  000090  A0D8               	btfss	status,0,c
 16370  000092  EF4D  F000         	goto	i2u797_41
 16371  000096  EF4F  F000         	goto	i2u797_40
 16372  00009A                     i2u797_41:
 16373  00009A  EF55  F000         	goto	i2l692
 16374  00009E                     i2u797_40:
 16375  00009E                     
 16376                           ; BSR set to: 1
 16377                           ;fs_timer.c: 63:         {;fs_timer.c: 64:             timer_value.second_counter = 0;
 16378  00009E  0E00               	movlw	0
 16379  0000A0  6F96               	movwf	(_timer_value+7)& (0+255),b
 16380  0000A2  0E00               	movlw	0
 16381  0000A4  6F95               	movwf	(_timer_value+6)& (0+255),b
 16382  0000A6                     
 16383                           ; BSR set to: 1
 16384                           ;fs_timer.c: 65:             timer_counter_flag.one_second_flag = 1;
 16385  0000A6  0100               	movlb	0	; () banked
 16386  0000A8  81FA               	bsf	_timer_counter_flag& (0+255),0,b
 16387  0000AA                     i2l692:
 16388  0000AA  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 16389  0000AC  0011               	retfie		f
 16390  0000AE                     __end_of_TIMER0:
 16391                           	callstack 0
 16392                           
 16393                           	psect	rparam
 16394  0000                     
 16395                           	psect	temp
 16396  00005F                     btemp:
 16397                           	callstack 0
 16398  00005F                     	ds	1
 16399  0000                     int$flags	set	btemp
 16400  0000                     wtemp8	set	btemp+1
 16401  0000                     ttemp5	set	btemp+1
 16402  0000                     ttemp6	set	btemp+4
 16403  0000                     ttemp7	set	btemp+8
 16404                           
 16405                           	psect	idloc
 16406                           
 16407                           ;Config register IDLOC0 @ 0x200000
 16408                           ;	unspecified, using default values
 16409  200000                     	org	2097152
 16410  200000  FF                 	db	255
 16411                           
 16412                           ;Config register IDLOC1 @ 0x200001
 16413                           ;	unspecified, using default values
 16414  200001                     	org	2097153
 16415  200001  FF                 	db	255
 16416                           
 16417                           ;Config register IDLOC2 @ 0x200002
 16418                           ;	unspecified, using default values
 16419  200002                     	org	2097154
 16420  200002  FF                 	db	255
 16421                           
 16422                           ;Config register IDLOC3 @ 0x200003
 16423                           ;	unspecified, using default values
 16424  200003                     	org	2097155
 16425  200003  FF                 	db	255
 16426                           
 16427                           ;Config register IDLOC4 @ 0x200004
 16428                           ;	unspecified, using default values
 16429  200004                     	org	2097156
 16430  200004  FF                 	db	255
 16431                           
 16432                           ;Config register IDLOC5 @ 0x200005
 16433                           ;	unspecified, using default values
 16434  200005                     	org	2097157
 16435  200005  FF                 	db	255
 16436                           
 16437                           ;Config register IDLOC6 @ 0x200006
 16438                           ;	unspecified, using default values
 16439  200006                     	org	2097158
 16440  200006  FF                 	db	255
 16441                           
 16442                           ;Config register IDLOC7 @ 0x200007
 16443                           ;	unspecified, using default values
 16444  200007                     	org	2097159
 16445  200007  FF                 	db	255
 16446                           
 16447                           	psect	config
 16448                           
 16449                           ; Padding undefined space
 16450  300000                     	org	3145728
 16451  300000  FF                 	db	255
 16452                           
 16453                           ;Config register CONFIG1H @ 0x300001
 16454                           ;	Oscillator Selection bits
 16455                           ;	FOSC = INTIO67, Internal oscillator block
 16456                           ;	4X PLL Enable
 16457                           ;	PLLCFG = ON, Oscillator multiplied by 4
 16458                           ;	Primary clock enable bit
 16459                           ;	PRICLKEN = ON, Primary clock is always enabled
 16460                           ;	Fail-Safe Clock Monitor Enable bit
 16461                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 16462                           ;	Internal/External Oscillator Switchover bit
 16463                           ;	IESO = ON, Oscillator Switchover mode enabled
 16464  300001                     	org	3145729
 16465  300001  B8                 	db	184
 16466                           
 16467                           ;Config register CONFIG2L @ 0x300002
 16468                           ;	Power-up Timer Enable bit
 16469                           ;	PWRTEN = OFF, Power up timer disabled
 16470                           ;	Brown-out Reset Enable bits
 16471                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 16472                           ;	Brown Out Reset Voltage bits
 16473                           ;	BORV = 190, VBOR set to 1.90 V nominal
 16474  300002                     	org	3145730
 16475  300002  1F                 	db	31
 16476                           
 16477                           ;Config register CONFIG2H @ 0x300003
 16478                           ;	Watchdog Timer Enable bits
 16479                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 16480                           ;	Watchdog Timer Postscale Select bits
 16481                           ;	WDTPS = 32768, 1:32768
 16482  300003                     	org	3145731
 16483  300003  3C                 	db	60
 16484                           
 16485                           ; Padding undefined space
 16486  300004                     	org	3145732
 16487  300004  FF                 	db	255
 16488                           
 16489                           ;Config register CONFIG3H @ 0x300005
 16490                           ;	CCP2 MUX bit
 16491                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 16492                           ;	PORTB A/D Enable bit
 16493                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
 16494                           ;	P3A/CCP3 Mux bit
 16495                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 16496                           ;	HFINTOSC Fast Start-up
 16497                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 16498                           ;	Timer3 Clock input mux bit
 16499                           ;	T3CMX = PORTC0, T3CKI is on RC0
 16500                           ;	ECCP2 B output mux bit
 16501                           ;	P2BMX = PORTD2, P2B is on RD2
 16502                           ;	MCLR Pin Enable bit
 16503                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 16504  300005                     	org	3145733
 16505  300005  BD                 	db	189
 16506                           
 16507                           ;Config register CONFIG4L @ 0x300006
 16508                           ;	Stack Full/Underflow Reset Enable bit
 16509                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
 16510                           ;	Single-Supply ICSP Enable bit
 16511                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 16512                           ;	Extended Instruction Set Enable bit
 16513                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 16514                           ;	Background Debug
 16515                           ;	DEBUG = 0x1, unprogrammed default
 16516  300006                     	org	3145734
 16517  300006  84                 	db	132
 16518                           
 16519                           ; Padding undefined space
 16520  300007                     	org	3145735
 16521  300007  FF                 	db	255
 16522                           
 16523                           ;Config register CONFIG5L @ 0x300008
 16524                           ;	Code Protection Block 0
 16525                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 16526                           ;	Code Protection Block 1
 16527                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 16528                           ;	Code Protection Block 2
 16529                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 16530                           ;	Code Protection Block 3
 16531                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 16532  300008                     	org	3145736
 16533  300008  0F                 	db	15
 16534                           
 16535                           ;Config register CONFIG5H @ 0x300009
 16536                           ;	Boot Block Code Protection bit
 16537                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 16538                           ;	Data EEPROM Code Protection bit
 16539                           ;	CPD = OFF, Data EEPROM not code-protected
 16540  300009                     	org	3145737
 16541  300009  C0                 	db	192
 16542                           
 16543                           ;Config register CONFIG6L @ 0x30000A
 16544                           ;	Write Protection Block 0
 16545                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 16546                           ;	Write Protection Block 1
 16547                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 16548                           ;	Write Protection Block 2
 16549                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 16550                           ;	Write Protection Block 3
 16551                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 16552  30000A                     	org	3145738
 16553  30000A  0F                 	db	15
 16554                           
 16555                           ;Config register CONFIG6H @ 0x30000B
 16556                           ;	Configuration Register Write Protection bit
 16557                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 16558                           ;	Boot Block Write Protection bit
 16559                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 16560                           ;	Data EEPROM Write Protection bit
 16561                           ;	WRTD = OFF, Data EEPROM not write-protected
 16562  30000B                     	org	3145739
 16563  30000B  E0                 	db	224
 16564                           
 16565                           ;Config register CONFIG7L @ 0x30000C
 16566                           ;	Table Read Protection Block 0
 16567                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 16568                           ;	Table Read Protection Block 1
 16569                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 16570                           ;	Table Read Protection Block 2
 16571                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 16572                           ;	Table Read Protection Block 3
 16573                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 16574  30000C                     	org	3145740
 16575  30000C  0F                 	db	15
 16576                           
 16577                           ;Config register CONFIG7H @ 0x30000D
 16578                           ;	Boot Block Table Read Protection bit
 16579                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 16580  30000D                     	org	3145741
 16581  30000D  40                 	db	64
 16582                           tosu	equ	0xFFF
 16583                           tosh	equ	0xFFE
 16584                           tosl	equ	0xFFD
 16585                           stkptr	equ	0xFFC
 16586                           pclatu	equ	0xFFB
 16587                           pclath	equ	0xFFA
 16588                           pcl	equ	0xFF9
 16589                           tblptru	equ	0xFF8
 16590                           tblptrh	equ	0xFF7
 16591                           tblptrl	equ	0xFF6
 16592                           tablat	equ	0xFF5
 16593                           prodh	equ	0xFF4
 16594                           prodl	equ	0xFF3
 16595                           indf0	equ	0xFEF
 16596                           postinc0	equ	0xFEE
 16597                           postdec0	equ	0xFED
 16598                           preinc0	equ	0xFEC
 16599                           plusw0	equ	0xFEB
 16600                           fsr0h	equ	0xFEA
 16601                           fsr0l	equ	0xFE9
 16602                           wreg	equ	0xFE8
 16603                           indf1	equ	0xFE7
 16604                           postinc1	equ	0xFE6
 16605                           postdec1	equ	0xFE5
 16606                           preinc1	equ	0xFE4
 16607                           plusw1	equ	0xFE3
 16608                           fsr1h	equ	0xFE2
 16609                           fsr1l	equ	0xFE1
 16610                           bsr	equ	0xFE0
 16611                           indf2	equ	0xFDF
 16612                           postinc2	equ	0xFDE
 16613                           postdec2	equ	0xFDD
 16614                           preinc2	equ	0xFDC
 16615                           plusw2	equ	0xFDB
 16616                           fsr2h	equ	0xFDA
 16617                           fsr2l	equ	0xFD9
 16618                           status	equ	0xFD8

Data Sizes:
    Strings     263
    Constant    0
    Data        64
    BSS         368
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    147     160
    BANK1           256      0     243
    BANK2           256      0     176
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_29(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_29(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_24(CODE[4]), STR_23(CODE[4]), STR_20(CODE[4]), STR_19(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_24(CODE[4]), STR_23(CODE[4]), STR_20(CODE[4]), STR_19(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> driverTimeSettingMenu@textCursor2(BANK0[16]), stopTimeSettingMenu@textCursor2(BANK0[16]), speedLimitSettingMenu@textCursor2(BANK0[16]), secretMenu@textCursor2(BANK0[16]), 
		 -> pauseMenu@textCursor2(BANK0[16]), stopMenu@textCursor2(BANK0[16]), mainMenu@textCursor2(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_18(CODE[18]), STR_16(CODE[16]), STR_14(CODE[18]), STR_12(CODE[13]), 
		 -> STR_10(CODE[14]), STR_8(CODE[16]), STR_6(CODE[16]), STR_4(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_18(CODE[18]), STR_16(CODE[16]), STR_14(CODE[18]), STR_12(CODE[13]), 
		 -> STR_10(CODE[14]), STR_8(CODE[16]), STR_6(CODE[16]), STR_4(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_18(CODE[18]), STR_16(CODE[16]), STR_14(CODE[18]), STR_12(CODE[13]), 
		 -> STR_10(CODE[14]), STR_8(CODE[16]), STR_6(CODE[16]), STR_4(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_18(CODE[18]), STR_16(CODE[16]), STR_14(CODE[18]), STR_12(CODE[13]), 
		 -> STR_10(CODE[14]), STR_8(CODE[16]), STR_6(CODE[16]), STR_4(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> driverTimeSettingMenu@textCursor2(BANK0[16]), stopTimeSettingMenu@textCursor2(BANK0[16]), speedLimitSettingMenu@textCursor2(BANK0[16]), secretMenu@textCursor2(BANK0[16]), 
		 -> pauseMenu@textCursor2(BANK0[16]), stopMenu@textCursor2(BANK0[16]), mainMenu@textCursor2(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2843_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> driverTimeSettingMenu@textCursor2(BANK0[16]), stopTimeSettingMenu@textCursor2(BANK0[16]), speedLimitSettingMenu@textCursor2(BANK0[16]), secretMenu@textCursor2(BANK0[16]), 
		 -> pauseMenu@textCursor2(BANK0[16]), stopMenu@textCursor2(BANK0[16]), mainMenu@textCursor2(BANK0[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> driverTimeSettingMenu@textCursor2(BANK0[16]), stopTimeSettingMenu@textCursor2(BANK0[16]), speedLimitSettingMenu@textCursor2(BANK0[16]), secretMenu@textCursor2(BANK0[16]), 
		 -> pauseMenu@textCursor2(BANK0[16]), stopMenu@textCursor2(BANK0[16]), mainMenu@textCursor2(BANK0[16]), 

    lcdWriteString@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_17(CODE[17]), driverTimeSettingMenu@textCursor2(BANK0[16]), STR_15(CODE[17]), stopTimeSettingMenu@textCursor2(BANK0[16]), 
		 -> STR_13(CODE[17]), speedLimitSettingMenu@textCursor2(BANK0[16]), STR_11(CODE[17]), STR_9(CODE[17]), 
		 -> secretMenu@textCursor2(BANK0[16]), STR_7(CODE[17]), pauseMenu@textCursor2(BANK0[16]), STR_5(CODE[17]), 
		 -> stopMenu@textCursor2(BANK0[16]), STR_3(CODE[17]), mainMenu@textCursor2(BANK0[16]), STR_2(CODE[17]), 
		 -> STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _startMotor->_PWM1_setDC
    _startMotor->_PWM2_setDC
    _startMotor->_speedControl
    _speedControl->___fltol
    _scanAdcConversion->___fltol
    _calculatedAverageValue->___xxtofl
    _stopMotor->_PWM1_setDC
    _stopMotor->_PWM2_setDC
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _loopTaskInit->_PWM1_setDC
    _loopTaskInit->_PWM2_setDC
    _systemInit->_eepromRead
    _openLCD_Script->_lcdWriteString
    _lcdWriteString->_lcdWriteChar
    _lcdWriteChar->_lcdPort
    _lcdSetCursor->_lcdCmd
    _lcdClear->_lcdCmd
    _lcdInit->_lcdCmd
    _lcdCmd->_lcdPort
    _PWM2_setDC->___fltol
    _PWM1_setDC->___fltol
    _fabsf->___xxtofl
    ___xxtofl->___lldiv
    ___fltol->___fldiv

Critical Paths under _TIMER0 in COMRAM

    None.

Critical Paths under _main in BANK0

    _loopTaskMenuControl->_stateMachine
    _stateMachine->_driverTimeSettingMenu
    _stateMachine->_mainMenu
    _stateMachine->_pauseMenu
    _stateMachine->_secretMenu
    _stateMachine->_speedLimitSettingMenu
    _stateMachine->_stopMenu
    _stateMachine->_stopTimeSettingMenu
    _stopTimeSettingMenu->_sprintf
    _stopMenu->_sprintf
    _speedLimitSettingMenu->_sprintf
    _secretMenu->_sprintf
    _pauseMenu->_sprintf
    _mainMenu->_sprintf
    _startMotor->_speedControl
    _driverTimeSettingMenu->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _TIMER0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TIMER0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TIMER0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TIMER0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TIMER0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TIMER0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  414325
                       _loopTaskInit
                _loopTaskMenuControl
                _loopTaskTimeMachine
 ---------------------------------------------------------------------------------
 (1) _loopTaskTimeMachine                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loopTaskMenuControl                                  0     0      0  404153
                 _buttonControlFlags
                       _stateMachine
 ---------------------------------------------------------------------------------
 (2) _stateMachine                                         2     2      0  404153
                                            145 BANK0      2     2      0
              _driverTimeSettingMenu
                           _exitLine
                           _mainMenu
                          _pauseMenu
                         _secretMenu
              _speedLimitSettingMenu
                          _startMenu
                           _stopMenu
                _stopTimeSettingMenu
 ---------------------------------------------------------------------------------
 (3) _stopTimeSettingMenu                                 16    16      0   53117
                                            129 BANK0     16    16      0
                        _eepromWrite
                       _lcdSetCursor
                     _lcdWriteString
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _stopMenu                                            16    16      0   52617
                                            129 BANK0     16    16      0
                       _lcdSetCursor
                     _lcdWriteString
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _startMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _speedLimitSettingMenu                               16    16      0   53117
                                            129 BANK0     16    16      0
                        _eepromWrite
                       _lcdSetCursor
                     _lcdWriteString
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _secretMenu                                          16    16      0   60426
                                            129 BANK0     16    16      0
                            ___fladd
                             ___flge
                            ___flsub
                       _lcdSetCursor
                     _lcdWriteString
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _pauseMenu                                           16    16      0   52617
                                            129 BANK0     16    16      0
                       _lcdSetCursor
                     _lcdWriteString
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _mainMenu                                            16    16      0   79142
                                            129 BANK0     16    16      0
                       _lcdSetCursor
                     _lcdWriteString
                            _sprintf
                         _startMotor
 ---------------------------------------------------------------------------------
 (4) _startMotor                                           0     0      0   32873
                         _PWM1_setDC
                         _PWM2_setDC
             _calculatedAverageValue
                  _scanAdcConversion
                       _speedControl
 ---------------------------------------------------------------------------------
 (5) _speedControl                                        10     6      4   11063
                                             87 COMRAM     6     2      4
                                              0 BANK0      4     4      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) _scanAdcConversion                                    2     2      0   12556
                                             87 COMRAM     2     2      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                       _readAdcValue
 ---------------------------------------------------------------------------------
 (6) _readAdcValue                                         7     5      2      46
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _calculatedAverageValue                              24    24      0    2906
                                             27 COMRAM    24    24      0
                            ___lldiv
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8    1282
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) _exitLine                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _driverTimeSettingMenu                               16    16      0   53117
                                            129 BANK0     16    16      0
                        _eepromWrite
                       _lcdSetCursor
                     _lcdWriteString
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (4) _stopMotor                                            0     0      0    6348
                         _PWM1_setDC
                         _PWM2_setDC
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             18    10      8   42834
                                            111 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   41409
                                            103 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           50    44      6   41025
                                             71 BANK0     32    26      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              68    61      7   30053
                                             87 COMRAM     7     0      7
                                             10 BANK0     61    61      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (8) _floorf                                              20    16      4     490
                                             77 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    3801
                                             68 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             16     8      8    3022
                                             52 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             25    17      8    5240
                                             27 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flge                                              12     4      8     942
                                             52 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             25    17      8    4591
                                             52 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                36    26     10    5042
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (8) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (7) _atoi                                                15    13      2    1396
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _eepromWrite                                          2     1      1     500
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _buttonControlFlags                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loopTaskInit                                         0     0      0   10172
                         _PWM1_setDC
                         _PWM2_setDC
                           _PWM_Init
                            _adcInit
                           _lcdClear
                            _lcdInit
                            _mcuInit
                     _menuInitialize
                     _openLCD_Script
                         _systemInit
                       _timer_0_init
 ---------------------------------------------------------------------------------
 (2) _timer_0_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _systemInit                                           2     2      0      22
                                              1 COMRAM     2     2      0
                         _eepromRead
 ---------------------------------------------------------------------------------
 (3) _eepromRead                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _openLCD_Script                                       2     2      0    3494
                                             10 COMRAM     2     2      0
                           _lcdClear
                       _lcdSetCursor
                     _lcdWriteString
 ---------------------------------------------------------------------------------
 (4) _lcdWriteString                                       6     4      2    1636
                                              4 COMRAM     6     4      2
                       _lcdWriteChar
 ---------------------------------------------------------------------------------
 (5) _lcdWriteChar                                         3     3      0     178
                                              1 COMRAM     3     3      0
                            _lcdPort
 ---------------------------------------------------------------------------------
 (4) _lcdSetCursor                                         5     4      1    1748
                                              3 COMRAM     5     4      1
                             _lcdCmd
 ---------------------------------------------------------------------------------
 (3) _lcdClear                                             0     0      0     110
                             _lcdCmd
 ---------------------------------------------------------------------------------
 (2) _menuInitialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _mcuInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lcdInit                                              2     2      0     198
                                              3 COMRAM     2     2      0
                             _lcdCmd
                            _lcdPort
 ---------------------------------------------------------------------------------
 (5) _lcdCmd                                               2     2      0     110
                                              1 COMRAM     2     2      0
                            _lcdPort
 ---------------------------------------------------------------------------------
 (6) _lcdPort                                              1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PWM2_setDC                                           6     4      2    3174
                                             87 COMRAM     6     4      2
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (5) _PWM1_setDC                                           6     4      2    3174
                                             87 COMRAM     6     4      2
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (6) _fabsf                                                8     4      4     199
                                             27 COMRAM     8     4      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4    1310
                                             13 COMRAM    14    10      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4    1369
                                             77 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _fabsf (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TIMER0                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loopTaskInit
     _PWM1_setDC
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
         _fabsf (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
       ___xxtofl
         ___lldiv (ARG)
       _fabsf
         ___xxtofl (ARG)
           ___lldiv (ARG)
     _PWM2_setDC
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
         _fabsf (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
       ___xxtofl
         ___lldiv (ARG)
       _fabsf
         ___xxtofl (ARG)
           ___lldiv (ARG)
     _PWM_Init
     _adcInit
     _lcdClear
       _lcdCmd
         _lcdPort
     _lcdInit
       _lcdCmd
         _lcdPort
       _lcdPort
     _mcuInit
     _menuInitialize
     _openLCD_Script
       _lcdClear
         _lcdCmd
           _lcdPort
       _lcdSetCursor
         _lcdCmd
           _lcdPort
       _lcdWriteString
         _lcdWriteChar
           _lcdPort
     _systemInit
       _eepromRead
     _timer_0_init
   _loopTaskMenuControl
     _buttonControlFlags
     _stateMachine
       _driverTimeSettingMenu
         _eepromWrite
         _lcdSetCursor
           _lcdCmd
             _lcdPort
         _lcdWriteString
           _lcdWriteChar
             _lcdPort
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _exitLine
       _mainMenu
         _lcdSetCursor
           _lcdCmd
             _lcdPort
         _lcdWriteString
           _lcdWriteChar
             _lcdPort
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _startMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _calculatedAverageValue
             ___lldiv
             ___lmul
             ___xxtofl
               ___lldiv (ARG)
           _scanAdcConversion
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _readAdcValue
           _speedControl
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
       _pauseMenu
         _lcdSetCursor
           _lcdCmd
             _lcdPort
         _lcdWriteString
           _lcdWriteChar
             _lcdPort
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _secretMenu
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
         _lcdSetCursor
           _lcdCmd
             _lcdPort
         _lcdWriteString
           _lcdWriteChar
             _lcdPort
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _speedLimitSettingMenu
         _eepromWrite
         _lcdSetCursor
           _lcdCmd
             _lcdPort
         _lcdWriteString
           _lcdWriteChar
             _lcdPort
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _startMenu
       _stopMenu
         _lcdSetCursor
           _lcdCmd
             _lcdPort
         _lcdWriteString
           _lcdWriteChar
             _lcdPort
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _stopTimeSettingMenu
         _eepromWrite
         _lcdSetCursor
           _lcdCmd
             _lcdPort
         _lcdWriteString
           _lcdWriteChar
             _lcdPort
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
   _loopTaskTimeMachine

 _TIMER0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      B0       8       68.8%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      F3       6       94.9%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     93      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2A1       9        0.0%
DATA                 0      0     2A1      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Aug 21 15:57:25 2020

                    ___fldiv@aexp 004D                      ___fldiv@bexp 004C  
              __end_of_systemInit 40BE                      ___fldiv@sign 0045  
                              l60 53F0                                l63 54EC  
                              l57 53C8                                l92 575A  
                              l76 1466                                l94 5768  
                              _KD 01EB                                l95 576A  
                              l79 2A0E                                l98 56C4  
                              _KP 01EF                      ___awdiv@sign 0006  
             ___wmul@multiplicand 0003                               l100 56D2  
                             l101 56D6          ??_calculatedAverageValue 001C  
                             l160 51E4                               l152 51A0  
                             l320 57B8                               l154 51B6  
                             l163 5788                               l323 40BC  
                             l156 51CC                               l172 50CC  
                             l500 42D0                               l317 57AA  
                             l413 56FE                               l421 32C8  
                             l158 51E2                               l166 57EC  
                             l326 5324                               l175 4D1A  
                             l423 3314                               l255 4DAA  
                             l184 4E28                               l425 3360  
                             l417 3230                               l521 57EE  
                             l178 5608                               l258 54AE  
                             l434 4F92                               l419 327C  
                             l507 415E                               l428 33AC  
                             l509 41C8                               l518 3F9C  
                             l710 4FFC                               l454 37D6  
                             l470 3DCC                               l455 3826  
                    _startIsClick 00FE                               l448 4A86  
                             l633 356A                               l465 4780  
                             l458 38BA                               l474 3E70  
                             l491 2FCA                               l580 4F1C  
                             l812 3BD2                               l636 5528  
                             l732 4C84                               l725 4C74  
                             l709 4FEC                               l477 57A2  
                             l639 563E                               l584 4EA2  
                             l576 5726                               l825 3D36  
                             l942 4B36                               l695 57DE  
                             l929 49D4                               l698 574C  
                             l963 4494                               l972 5598  
                             l957 4BE0                               l968 44DA  
                             l995 43D6                               _PR2 000FBB  
                 ?_openLCD_Script 0001                               _abs 5432  
                             _pad 484C                      ___awmod@sign 0006  
                             wreg 000FE8                      ___flmul@aexp 002D  
                    ___flmul@bexp 002E               stopMenu@textCursor2 00E1  
    __size_of_loopTaskTimeMachine 0090                      ___flmul@sign 0028  
                    ___flmul@temp 0033                      ___flmul@prod 002F  
                     _stopIsClick 00FD                    ??_lcdWriteChar 0002  
                   lcdWriteChar@a 0004                     lcdWriteChar@y 0003  
                    ___fltol@exp1 0057                              ?_abs 0013  
                            l1312 202A                              l1321 2298  
                            l1322 2286                              l1226 1C94  
                            l1243 1DAE                              l1235 1F64  
                            l1227 1C82                              l1316 238E  
                            l1252 1E7E                              l1228 1C48  
                            l1253 1E6C                              l1319 2220  
                            l1360 365A                              l1424 4892  
                            l1280 2728                              l1600 45D8  
                            l1353 35C2                              l1329 2350  
                            l1282 2588                              l1427 48D4  
                            l1435 2AB0                              l1291 25CE  
                            l1356 371E                              l1268 536A  
                            l1605 5468                              l1429 4910  
                            l1437 2AB8                              l1293 2646  
                            l1285 254C                              l1701 5188  
                            l1517 0836                              l1381 5288  
                            l1374 56A8                              l1294 2634  
                            l1367 36B6                              l1455 2CF2  
                            l1711 46AE                              l1608 5470  
                            l4201 1AD2                              l1721 5124  
                            l1473 0C60                              l1707 5674  
                            l4211 1B0C                              l4203 1AE2  
                            l5011 2FEC                              l5003 5104  
                            l1491 049E                              l1636 3A42  
                            l5101 2C8E                              l4301 1CD6  
                            l4221 1B3A                              l4213 1B12  
                            l4205 1AF2                              l5021 30D8  
                            l1645 31E0                              l5013 3044  
                            l5005 5116                              l1726 512C  
                            l1590 5066                              l1655 55D0  
                            l1663 52DA                              l1639 3A4A  
                            l5103 2C94                              l5111 2CCA  
                            l4311 1D10                              l4303 1CE4  
                            l4231 1B6E                              l4223 1B3C  
                            l4215 1B24                              l4207 1AF4  
                            l5031 31C0                              l5023 3114  
                            l5015 3058                              l1583 19EA  
                            l1575 1AA4                              l1648 3124  
                            l5041 528A                              l4401 538E  
                            l5105 2CA6                              l4321 1D7C  
                            l4313 1D12                              l4305 1CF2  
                            l4241 1BAA                              l4225 1B4C  
                            l4233 1B76                              l4217 1B26  
                            l4209 1AFC                              l5033 31D0  
                            l5017 3066                              l5025 3148  
                            l5009 2FCC                              l5201 0448  
                            l5121 00DA                              l6001 38B6  
                            l5043 528E                              l4403 5640  
                            l5107 2CB2                              l4331 1DD4  
                            l4323 1D7E                              l4315 1D1C  
                            l4307 1CFE                              l4251 1BBE  
                            l4243 1BAE                              l4235 1B86  
                            l4227 1B5C                              l4219 1B2C  
                            l5027 3184                              l5211 0492  
                            l5203 044C                              l5131 012A  
                            l5123 00E2                              l5115 00B2  
                            l6011 3E94                              l6003 38B8  
                            l1684 484A                              l1692 53AE  
                            l5037 559A                              l5045 52A2  
                            l4181 4794                              l4405 564C  
                            l5109 2CBA                              l5061 2A88  
                            l5053 2A10                              l4341 1E02  
                            l4325 1D8E                              l4309 1D02  
                            l4317 1D22                              l4261 1BD2  
                            l4253 1BC2                              l4245 1BB2  
                            l4237 1B98                              l4229 1B6C  
                            l5029 3198                              l1669 5560  
                            l4413 552A                              l5301 0912  
                            l5221 04CE                              l5205 045E  
                            l5213 04AA                              l5141 0162  
                            l5133 0138                              l5125 0106  
                            l5117 00BC                              l1589 505E  
                            l6021 3ECC                              l6013 3E9E  
                            l6005 3E72                              l6101 41BA  
                            l5047 52D0                              l4431 3A82  
                            l4423 3A4C                              l1695 57F0  
                            l4183 47A6                              l4407 5650  
                            l5071 2AE0                              l5063 2A8A  
                            l5055 2A30                              l4511 23BC  
                            l4503 2390                              l4343 1E10  
                            l4335 1DE8                              l4351 1E2E  
                            l4319 1D48                              l4327 1D9E  
                            l4263 1BD6                              l4255 1BC6  
                            l4247 1BB6                              l4239 1BA6  
                            l4271 1BE6                              l5311 0946  
                            l5303 0920                              l5231 0534  
                            l5223 04EA                              l5207 0470  
                            l5151 01C8                              l5143 0166  
                            l5135 014A                              l5127 0110  
                            l5119 00CC                              l6023 3ED6  
                            l6015 3EB0                              l6031 3EE8  
                            l6007 3E7E                              l6111 41F6  
                            l6103 41CA                              l4417 5728  
                            l5049 52D4                              l4441 3ADE  
                            l4433 3A90                              l4425 3A50  
                            l4185 47B0                              l4409 5668  
                            l5081 2B80                              l5073 2AE6  
                            l5065 2AA4                              l5057 2A58  
                            l4601 25F0                              l4521 23F6  
                            l4513 23CC                              l4505 239C  
                            l4345 1E18                              l4337 1DF2  
                            l4329 1DC4                              l4353 1E3C  
                            l4281 1C56                              l4273 1BEA  
                            l4265 1BDA                              l4257 1BCA  
                            l4249 1BBA                              l4193 1AA6  
                            l5401 0C22                              l5321 0978  
                            l5313 0956                              l5305 0930  
                            l5241 057C                              l5233 0546  
                            l5225 0520                              l5209 0478  
                            l5153 01DA                              l5137 0156  
                            l5145 016C                              l5129 0118  
                            l6041 3F20                              l6033 3EFA  
                            l6025 3EDC                              l6017 3EC2  
                            l6009 3E82                              l6201 3DDE  
                            l6113 4208                              l6121 422E  
                            l6105 41D6                              l4419 5744  
                            l4451 3B48                              l4443 3AE6  
                            l4435 3AB0                              l4427 3A5E  
                            l4187 47CE                              l4179 4782  
                            l5091 2C28                              l5083 2B86  
                            l5075 2AEE                              l5067 2AC0  
                            l5059 2A78                              l4611 2662  
                            l4603 25FE                              l4531 2422  
                            l4523 23FC                              l4515 23DC  
                            l4507 23AA                              l4363 1E8E  
                            l4371 1EE4                              l4355 1E40  
                            l4347 1E1C                              l4339 1E00  
                            l4291 1C80                              l4283 1C62  
                            l4275 1C14                              l4267 1BDE  
                            l4259 1BCE                              l4195 1AB2  
                            l5403 0C2A                              l5331 0A20  
                            l5323 098A                              l5315 095A  
                            l5307 0934                              l5251 05C4  
                            l5243 058A                              l5235 0558  
                            l5227 0528                              l5219 04BC  
                            l5171 02AE                              l5155 01F6  
                            l5147 0192                              l5163 0240  
                            l5139 015E                              l6051 3F3C  
                            l6043 3F26                              l6035 3F0C  
                            l6027 3EE0                              l6019 3EC8  
                            l6203 3DEE                              l6211 3E22  
                            l6123 4240                              l6131 4266  
                            l6115 421A                              l6107 41DA  
                            l5501 51CE                              l6301 4CBE  
                            l5421 38F4                              l5413 38BC  
                            l4461 3B92                              l4453 3B68  
                            l4445 3AFA                              l4437 3AB4  
                            l4429 3A7E                              l4189 4804  
                            l5093 2C42                              l5085 2B8C  
                            l5077 2AF8                              l5069 2AD2  
                            l4621 26CE                              l4613 2670  
                            l4605 262C                              l4541 245C  
                            l4533 2432                              l4525 2402  
                            l4517 23DE                              l4509 23AC  
                            l4701 20F0                              l4381 1F36  
                            l4373 1EF4                              l4365 1E9A  
                            l4357 1E4E                              l4349 1E2C  
                            l4293 1CA2                              l4285 1C66  
                            l4277 1C30                              l4269 1BE2  
                            l4197 1AC0                              l5405 0C3A  
                            l5341 0A78                              l5333 0A28  
                            l5325 098E                              l5317 0960  
                            l5309 093A                              l5261 06D8  
                            l5253 05D4                              l5245 05A2  
                            l5237 0566                              l5229 052C  
                            l5173 02CA                              l5165 0266  
                            l5181 02E6                              l5157 020E  
                            l6061 3F8E                              l6053 3F48  
                            l6045 3F2A                              l6037 3F12  
                            l6029 3EE4                              l6213 3E36  
                            l6205 3DFE                              l6221 2CF4  
                            l6141 42AE                              l6133 4270  
                            l6125 4252                              l6117 4220  
                            l6109 41EC                              ?_pad 0011  
                            l3911 5714                              l5503 51DC  
                            l6311 4CF0                              l6303 4CC4  
                            l5431 394A                              l5423 392A  
                            l5415 38D0                              l4463 3BB2  
                            l4455 3B6A                              l4447 3B08  
                            l4439 3AC0                              l4471 3BE6  
                            l5095 2C5C                              l5079 2AFE  
                            l5087 2BF0                              l4631 271C  
                            l4623 26E8                              l4615 269A  
                            l4543 2472                              l4535 2442  
                            l4527 2410                              l4519 23E6  
                            l4711 2152                              l4703 20FC  
                            l4391 1F54                              l4383 1F3C  
                            l4375 1F04                              l4367 1EA8  
                            l4359 1E64                              l4295 1CB2  
                            l4287 1C74                              l4279 1C40  
                            l4199 1AC2                              l5407 0C40  
                            l5351 0ABC                              l5343 0A86  
                            l5319 0966                              l5327 0994  
                            l5335 0A2C                              l5271 0778  
                            l5255 05E8                              l5263 06DE  
                            l5247 05B4                              l5239 056A  
                            l5191 0370                              l5183 0300  
                            l5159 0218                              l6055 3F52  
                            l6047 3F2E                              l6039 3F16  
                            l6215 3E44                              l6207 3E10  
                            l6231 2D1E                              l6223 2D00  
                            l6143 42C2                              l6135 427C  
                            l6127 4258                              l6119 4224  
                            l6151 46C6                              l6071 40EA  
                            l6063 40BE                              l5505 5676  
                            l6321 4D0E                              l6313 4CF6  
                            l6305 4CD4                              l6401 3370  
                            l5441 39C4                              l5433 3952  
                            l5425 392E                              l5417 38D4  
                            l4457 3B7C                              l4449 3B1A  
                            l4481 3C56                              l4473 3C06  
                            l5089 2C0A                              l5097 2C6C  
                            l4801 4982                              l4633 271E  
                            l4625 2704                              l4609 2656  
                            l4617 269E                              l4561 24C6  
                            l4545 2482                              l4553 24A2  
                            l4537 2444                              l4529 2412  
                            l4721 21E8                              l4713 215E  
                            l4705 210C                              l4641 1F66  
                            l4385 1F3E                              l4377 1F24  
                            l4369 1EE2                              l4289 1C76  
                            l5361 0AF2                              l5353 0AC4  
                            l5345 0A96                              l5337 0A4A  
                            l5329 09EC                              l5281 080E  
                            l5273 07AA                              l5265 06FC  
                            l5257 064C                              l5249 05BC  
                            l5193 03CA                              l5169 029C  
                            l5601 14D6                              l6057 3F6E  
                            l6049 3F32                              l5521 4FCC  
                            l5513 4F94                              l6217 3E56  
                            l6209 3E14                              l6241 2D5A  
                            l6233 2D2E                              l6225 2D04  
                            l6137 4286                              l6129 425C  
                            l6161 46EA                              l6153 46CA  
                            l6145 46B0                              l6073 40FC  
                            l6081 4124                              l6065 40CA  
                            l5507 5696                              l3907 5700  
                            l6323 4D14                              l6315 4CFC  
                            l6307 4CDA                              l6331 4090  
                            l6403 337E                              l5435 395A  
                            l5419 38D8                              l4459 3B82  
                            l4491 3CCE                              l4483 3C5E  
                            l4475 3C0A                              l4467 3BD4  
                            l4395 536C                              l5099 2C7E  
                            l4811 49AE                              l4803 4988  
                            l4627 2708                              l4619 26B8  
                            l4571 2518                              l4563 24E0  
                            l4555 24B2                              l4547 248A  
                            l4539 244C                              l4731 223E  
                            l4723 2206                              l4715 217A  
                            l4707 2126                              l4651 1FA2  
                            l4643 1F72                              l4387 1F44  
                            l4379 1F28                              l4299 1CC6  
                            l5371 0B4E                              l5363 0AFA  
                            l5355 0AD4                              l5347 0A9A  
                            l5339 0A66                              l5291 08C6  
                            l5283 0822                              l5275 07BA  
                            l5267 0730                              l5259 06A4  
                            l5195 03FE                              l5187 0336  
                            l5611 155C                              l5603 150C  
                            l6059 3F7A                              l5531 4C1C  
                            l5523 4BE2                              l5515 4FA4  
                            l6219 3E66                              l6251 2DDA  
                            l6243 2D64                              l6227 2D16  
                            l6235 2D32                              l6139 42A2  
                            l6171 4740                              l6163 46EE  
                            l6155 46CE                              l6147 46BC  
                            l6091 4168                              l6083 4136  
                            l6075 410E                              l6067 40CE  
                            l6411 49D6                              l5509 5698  
                            l3909 5704                              l3845 54B0  
                            l6317 4D02                              l6309 4CEA  
                            l6341 52E6                              l6333 409A  
                            l6325 3F9E                              l6405 3386  
                            l5445 3A02                              l5437 398E  
                            l5429 3934                              l4493 3CE0  
                            l4485 3C72                              l4477 3C18  
                            l4469 3BD8                              l4397 5378  
                            l4805 499E                              l4813 49B4  
                            l4821 4A88                              l4629 2716  
                            l4581 2574                              l4573 2528  
                            l4565 24F0                              l4557 24B2  
                            l4549 248E                              l4741 22A8  
                            l4733 2242                              l4725 2210  
                            l4717 21A4                              l4709 2136  
                            l4661 1FD4                              l4653 1FB2  
                            l4645 1F80                              l4389 1F52  
                            l5381 0B8E                              l5373 0B56  
                            l5365 0B06                              l5357 0ADC  
                            l5349 0AAA                              l5293 08D8  
                            l5285 082E                              l5277 07CA  
                            l5269 0762                              l5197 0406  
                            l5189 036A                              l5461 4610  
                            l5621 15E4                              l5605 151C  
                            l5701 1A6E                              l5541 4C64  
                            l5533 4C2A                              l5525 4BF2  
                            l5517 4FB2                              l6181 3D38  
                            l6261 2E38                              l6253 2DE0  
                            l6245 2D8A                              l6237 2D44  
                            l6229 2D1A                              l6173 4760  
                            l6165 46F8                              l6157 46D8  
                            l6149 46C0                              l6093 4174  
                            l6085 4148                              l6077 4114  
                            l6069 40E0                              l6421 49FA  
                            l6413 49DA                              l6501 4F80  
                            l4911 4326                              l4903 42D2  
                            l5551 35D2                              l3847 54D2  
                            l6319 4D08                              l6343 52F2  
                            l6335 40B2                              l6327 407C  
                            l6407 3394                              l6351 31F4  
                            l5447 3A14                              l4487 3C80  
                            l4495 3CE6                              l4479 3C38  
                            l4399 538A                              l4815 49C4  
                            l4807 49A6                              l4831 4AB4  
                            l4823 4A8C                              l4591 25B4  
                            l4583 2576                              l4575 253C  
                            l4567 2500                              l4751 230A  
                            l4743 22B4                              l4735 2250  
                            l4727 221E                              l4719 21DA  
                            l4671 2014                              l4663 1FE2  
                            l4655 1FB8                              l4647 1F82  
                            l5391 0BCA                              l5383 0BA0  
                            l5367 0B0C                              l5375 0B5C  
                            l5359 0AEA                              l5295 08EA  
                            l5287 0852                              l5279 07FE  
                            l5199 0438                              l5471 468C  
                            l5463 461E                              l5455 45DA  
                            l5703 1A92                              l5631 167E  
                            l5623 15F2                              l5615 15A4  
                            l5607 152E                              l5543 4C6E  
                            l5535 4C34                              l5527 4C08  
                            l5519 4FC2                              l5711 0C66  
                            l6191 3D64                              l6183 3D44  
                            l6271 2EA0                              l6255 2E14  
                            l6247 2D96                              l6239 2D4E  
                            l6263 2E6C                              l6175 4772  
                            l6167 4722                              l6159 46E4  
                            l6095 417E                              l6087 414E  
                            l6079 411A                              l6423 4A02  
                            l6415 49E2                              l6511 57C2  
                            l4913 4328                              l4905 42E8  
                            l5561 3610                              l5553 35E8  
                            l5545 356E                              l3849 54DA  
                            l3881 57A4                              l5801 55F4  
                            l6345 5308                              l6337 40B6  
                            l6329 4086                              l6409 33A4  
                            l6361 3240                              l6353 3202  
                            l5449 3A26                              l4497 3CF6  
                            l4489 3CAE                              l4817 49CC  
                            l4809 49A8                              l4841 4AEC  
                            l4833 4ABC                              l4825 4A9A  
                            l4593 25BE                              l4585 2586  
                            l4577 254A                              l4569 2510  
                            l4761 2372                              l4753 231E  
                            l4745 22C2                              l4737 227E  
                            l4729 2230                              l4681 205E  
                            l4673 201A                              l4665 1FE4  
                            l4657 1FC8                              l4649 1F92  
                            l5393 0BD0                              l5385 0BAC  
                            l5377 0B6E                              l5369 0B32  
                            l5297 08F8                              l5289 08B6  
                            l5465 4636                              l5457 4604  
                            l5641 170A                              l5625 1616  
                            l5609 154E                              l5617 15B6  
                            l5537 4C52                              l5529 4C10  
                            l5481 53C6                              l5721 0DC6  
                            l5713 0C74                              l6193 3D6E  
                            l6185 3D4A                              l6281 2F1C  
                            l6273 2EC6                              l6265 2E80  
                            l6257 2E26                              l6249 2DA8  
                            l6177 578A                              l6169 472E  
                            l6097 419A                              l6089 4154  
                            l6425 4A0A                              l6417 49EA  
                            l6433 4A22                              l6441 4D2C  
                            l4915 4338                              l5571 3698  
                            l5563 3642                              l5547 357E  
                            l5811 4EA4                              l5491 519A  
                            l3883 57A8                              l5803 55F6  
                            l6347 5320                              l6339 52DC  
                            l3891 57DC                              l6371 328C  
                            l6363 324E                              l6355 320A  
                            l4499 3D16                              l4851 4B26  
                            l4843 4B02                              l4835 4ACE  
                            l4827 4AA2                              l4595 25CC  
                            l4587 2598                              l4579 2556  
                            l4763 2374                              l4755 2338  
                            l4747 22EC                              l4691 20AE  
                            l4683 206A                              l4675 203A  
                            l4667 1FF4                              l4659 1FCE  
                            l4771 5326                              l5387 0BB4  
                            l5379 0B88                              l5299 0900  
                            l5467 4652                              l5651 17C6  
                            l5643 173C                              l5635 16C6  
                            l5627 1650                              l5619 15DA  
                            l5539 4C62                              l5483 53D6  
                            l5475 53B2                              l5731 0F82  
                            l5723 0E36                              l5715 0CDE  
                            l6195 3D98                              l6187 3D4E  
                            l6283 2F50                              l6275 2ED2  
                            l6267 2E8A                              l6291 2FA8  
                            l6259 2E34                              l6179 578E  
                            l6099 41A6                              l6427 4A12  
                            l6419 49F2                              l6451 4D6E  
                            l6443 4D2E                              l6507 57BA  
                            l4941 43B6                              l4925 4362  
                            l4917 433C                              l4909 42FC  
                            l5581 36EE                              l5573 36A6  
                            l5565 3644                              l5557 35FC  
                            l5549 358C                              l5813 4EA4  
                            l5821 4E2A                              l5493 51A2  
                            l3885 56D8                              l5805 55FC  
                            l5901 4DE8                              l6381 32D8  
                            l6373 329A                              l6365 3256  
                            l6357 3218                              l6349 31E2  
                            l4781 4924                              l4853 4B2E  
                            l4845 4B0A                              l4837 4AD6  
                            l4829 4AA6                              l4589 25AE  
                            l4597 25DE                              l4861 4B76  
                            l4757 2354                              l4765 237A  
                            l4749 22F0                              l4693 20BA  
                            l4685 2074                              l4677 204A  
                            l4669 2004                              l4773 5336  
                            l5397 0C04                              l5389 0BC4  
                            l5469 4664                              l5661 186E  
                            l5653 180E                              l5645 174C  
                            l5629 1670                              l5637 16D8  
                            l5485 53E8                              l5477 53B2  
                            l5741 10E2                              l5733 0F90  
                            l5725 0E44                              l5717 0D4E  
                            l5709 0C62                              l6197 3DA4  
                            l6189 3D58                              l6293 2FBC  
                            l6285 2F62                              l6277 2EE4  
                            l6269 2E96                              l6429 4A1A  
                            l6461 4D96                              l6453 4D72  
                            l6445 4D3E                              l6509 57BE  
                            l4943 43C6                              l4935 438A  
                            l4927 436C                              l4919 434A  
                            l5583 36FE                              l5575 36C4  
                            l5567 3650                              l5559 3604  
                            l5815 4EBC                              l5823 4E42  
                            l5495 51B0                              l6295 4C86  
                            l5807 55FE                              l5903 4DEC  
                            l3887 57CE                              l6471 547E  
                            l6391 3324                              l6383 32E6  
                            l6375 32A2                              l6367 3264  
                            l6359 3228                              l4951 4870  
                            l4791 494A                              l4783 492C  
                            l4847 4B10                              l4839 4ADE  
                            l4599 25EC                              l4863 4BA4  
                            l4767 237E                              l4759 2364  
                            l4695 20C6                              l4687 208A  
                            l5399 0C16                              l5671 1906  
                            l5663 187C                              l5647 177E  
                            l5639 16FA                              l5591 1468  
                            l5911 525A                              l5479 53C4  
                            l5751 1248                              l5743 1152  
                            l5735 0FFA                              l5727 0EAE  
                            l5719 0D5C                              l5831 33AE  
                            l6199 3DB6                              l6287 2F70  
                            l6279 2F16                              l6615 4A38  
                            l6463 4DA6                              l6455 4D78  
                            l6447 4D4E                              l6439 4D1C  
                            l4937 4396                              l4929 4376  
                            l5585 370C                              l5577 36C6  
                            l5569 368C                              l5817 4F04  
                            l5825 4E8A                              l5497 51B8  
                            l5489 518C                              l6297 4CA0  
                            l5809 5606                              l3889 57DA  
                            l6481 5492                              l6473 5482  
                            l6465 5472                              l6393 3332  
                            l6385 32EE                              l6377 32B0  
                            l6369 3274                              l4961 48B6  
                            l4953 487E                              l4793 4952  
                            l4785 4930                              l4777 4912  
                            l4849 4B16                              l4865 4BB4  
                            l4857 4B38                              l4881 4454  
                            l4873 43D8                              l4697 20D4  
                            l4689 2096                              l5665 18AC  
                            l5657 1846                              l5649 17A2  
                            l5593 148C                              l5913 5276  
                            l5905 5238                              l6617 1420  
                            l5753 12B2                              l5745 1160  
                            l5737 106A                              l5729 0F1A  
                            l5841 34DA                              l5833 33EE  
                            l5921 5612                              l6289 2F74  
                            l6457 4D8A                              l6449 4D5E  
                            l4939 43A6                              l5587 370E  
                            l5579 36CA                              l5819 4E2A  
                            l5499 51C6                              l6299 4CA6  
                            l5931 5754                              l6483 549E  
                            l6475 5486                              l6467 5476  
                            l6395 333A                              l6387 32FC  
                            l6379 32C0                              l6619 3978  
                            l4971 544C                              l4963 48E4  
                            l4955 488A                              l4947 484C  
                            l4795 4964                              l4787 493E  
                            l4779 4916                              l4867 4BD8  
                            l4859 4B66                              l4891 44D8  
                            l4883 4462                              l4875 4406  
                            l4699 20E0                              l5691 1A44  
                            l5675 1974                              l5659 1858  
                            l5595 149A                              l5907 524A  
                            l5923 54EE                              l5771 272A  
                            l5755 1322                              l5747 11CA  
                            l5739 1078                              l5763 140A  
                            l5851 353E                              l5843 34F6  
                            l5835 34B4                              l5827 33AE  
                            l6491 4F26                              l6459 4D8C  
                            l5781 576E                              l5933 5756  
                            l6485 54AA                              l6477 548A  
                            l6469 547A                              l6397 3348  
                            l6389 330C                              l4965 48F8  
                            l4957 489E                              l4949 485C  
                            l4797 496C                              l4789 4946  
                            l4869 4BDE                              l4885 4474  
                            l4877 4416                              l4981 456E  
                            l4973 44DC                              l5677 1986  
                            l5685 19FE                              l5669 18D8  
                            l5597 14AC                              l5861 5014  
                            l5909 5252                              l5925 5510  
                            l5773 275C                              l5757 1330  
                            l5749 123A                              l5853 3546  
                            l5845 34FE                              l5837 34BC  
                            l5829 33AE                              l5917 560A  
                            l5941 372C                              l6493 4F38  
                            l5783 5770                              l5791 55D4  
                            l5935 5758                              l6479 548E  
                            l6399 3358                              l5871 56B6  
                            l4959 48B2                              l4799 4974  
                            l4887 4482                              l4879 4444  
                            l4895 5562                              l4991 45D0  
                            l4975 44FC                              l5687 1A22  
                            l5695 1A52                              l5679 19BA  
                            l5599 14B2                              l5863 5042  
                            l5927 551C                              l5775 2822  
                            l5759 139A                              l5855 3562  
                            l5847 351A                              l5839 34CA  
                            l5919 560E                              l5951 3782  
                            l5943 3736                              l6495 4F4A  
                            l6487 4F1E                              l5785 5776  
                            l5937 57E0                              l5881 506A  
                            l5793 55E0                              l5929 5750  
                            l5873 56B8                              l5865 56AC  
                            l4969 5432                              l4889 44D2  
                            l4897 5578                              l4977 453A  
                            l4985 457A                              l5697 1A60  
                            l5689 1A30                              l5857 4FFE  
                            l5777 291C                              l5849 3522  
                            l5961 37E8                              l5953 3796  
                            l5945 3742                              l6497 4F5C  
                            l6489 4F22                              l5787 5778  
                            l5891 50AE                              l5883 507A  
                            l5795 55E2                              l5875 56BA  
                            l5867 56B0                              l4899 5588  
                            l4987 458C                              l4979 4562  
                            l4995 512E                              l5859 5006  
                            l5779 29C4                              l5971 381E  
                            l5963 37F8                              l5955 37A4  
                            l5947 374C                              l5939 3720  
                            l6499 4F6E                              l5789 5786  
                            l5893 50C0                              l5885 508C  
                            l5797 55EA                              l5877 56BE  
                            l5869 56B4                              l4997 513E  
                            l5981 3866                              l5973 3820  
                            l5965 3808                              l5957 37BA  
                            l5949 3776                              l5895 50C6  
                            l5887 5092                              l5799 55EC  
                            l5879 56C2                              l4999 50CE  
                            l5983 386A                              l5975 3836  
                            l5991 387E                              l5967 3818  
                            l5959 37CA                              l5889 509C  
                            l5897 4DAC                              l5993 3890  
                            l5985 3878                              l5977 3846  
                            l5969 381C                              l5899 4DB8  
                            l5995 38A0                              l5987 387A  
                            l5979 3856                              l5997 38B0  
                            l5989 387C                              l5999 38B4  
                            STR_1 7FB1                              STR_2 7F80  
                            STR_3 7F2B                              STR_4 7FC1  
                            STR_5 7F3C                              STR_6 7FA1  
                            STR_7 7F4D                              STR_8 7FA1  
                            STR_9 7F09                              u4000 4794  
                            u4001 4790                              u4010 47A6  
                            u4011 47A2                              u4020 47CE  
                            u4100 1B5C                              u4021 47CA  
                            u4101 1B58                              u4030 4804  
                            u4110 1B98                              u4031 4800  
                            u4111 1B94                              u5000 2338  
                            u4200 1CB2                              u4120 1BA6  
                            u4040 1AC0                              u5001 2334  
                            u4201 1CAE                              u4121 1BA2  
                            u4041 1ABC                              u5010 2372  
                            u4210 1CE4                              u4130 1C14  
                            u4050 1AD2                              u5011 236E  
                            u4211 1CE0                              u4131 1C10  
                            u4051 1ACE                              u5020 4924  
                            u5100 4ACE                              u4300 1E2C  
                            u4220 1CF2                              u4140 1C2C  
                            u4060 1AE2                              u5021 4920  
                            u5101 4ACA                              u4301 1E28  
                            u4221 1CEE                              u4141 1C26  
                            u4061 1ADE                              u5030 493E  
                            u5110 4AEC                              u4310 1E3C  
                            u4230 1D10                              u4150 1C2E  
                            u4070 1B24                              u5031 493A  
                            u5111 4AE8                              u4311 1E38  
                            u4231 1D0C                              u4071 1B20  
                            u5040 4964                              u5120 4B02  
                            u5200 4482                              u4400 1F24  
                            u4320 1E4E                              u4240 1D48  
                            u4160 1C56                              u4080 1B3A  
                            u6000 0566                              u5041 4960  
                            u5121 4AFE                              u5201 447E  
                            u4401 1F20                              u4321 1E4A  
                            u4241 1D44                              u4161 1C52  
                            u4081 1B36                              u6001 0562  
                            u5050 4982                              u5130 4B26  
                            u5210 44D2                              u4410 1F36  
                            u4330 1E64                              u4250 1D8E  
                            u4170 1C74                              u4090 1B4C  
                            u6010 057C                              u5051 497E  
                            u5131 4B22                              u5211 44CE  
                            u4411 1F32                              u4331 1E60  
                            u4251 1D8A                              u4171 1C70  
                            u4091 1B48                              u6011 0578  
                            u4500 3ADE                              u5300 485C  
                            u5060 499E                              u5140 4B66  
                            u5220 5578                              u4420 1F52  
                            u4340 1E7A                              u4260 1DC4  
                            u4180 1C94                              u6100 08D8  
                            u6020 058A                              u4501 3ADA  
                            u5301 4858                              u5061 499A  
                            u5141 4B62                              u5221 5574  
                            u4421 1F4E                              u4341 1E76  
                            u4261 1DC0                              u4181 1C90  
                            u6101 08D4                              u6021 0586  
                            u5230 42E8                              u4510 3B08  
                            u4430 53AE                              u5310 487E  
                            u5070 49C4                              u5150 4BA4  
                            u4350 1E8E                              u4270 1DD4  
                            u4190 1CA2                              u6110 08EA  
                            u6030 05B4                              u5231 42E4  
                            u4511 3B04                              u4431 53AA  
                            u5311 487A                              u5071 49C0  
                            u5151 4BA0                              u4351 1E8A  
                            u4271 1DD0                              u4191 1C9E  
                            u6111 08E6                              u6031 05B0  
                            u5240 431C                              u4520 3B48  
                            u4440 5668                              u5320 48D4  
                            u5080 4A9A                              u4600 23AA  
                            u5160 4BD8                              u4360 1EA8  
                            u4280 1E00                              u5400 45C6  
                            u6200 0ABC                              u6120 08F8  
                            u6040 06FC                              u7000 37F8  
                            u4521 3B44                              u4441 5664  
                            u5321 48D0                              u5081 4A96  
                            u4601 23A6                              u5161 4BD4  
                            u4361 1EA4                              u4281 1DFC  
                            u5401 45C0                              u6201 0AB8  
                            u6121 08F4                              u6041 06F8  
                            u7001 37F4                              u5250 434A  
                            u4530 3B92                              u5330 48E4  
                            u5090 4AB4                              u4610 23BC  
                            u5170 4406                              u4370 1EE2  
                            u4290 1E10                              u5410 45C8  
                            u4450 555A                              u6210 0AEA  
                            u6130 0912                              u6050 0762  
                            u7010 3808                              u5251 4346  
                            u4531 3B8E                              u5331 48E0  
                            u5091 4AB0                              u4611 23B8  
                            u5171 4402                              u4371 1EDE  
                            u4291 1E0C                              u4451 5554  
                            u6211 0AE6                              u6131 090E  
                            u6051 075E                              u7011 3804  
                            u5260 435E                              u3580 57B8  
                            u6300 3946                              u4540 3BE6  
                            u5340 544C                              u4700 2574  
                            u4620 23CC                              u5180 4444  
                            u4380 1EF4                              u5420 5176  
                            u4460 555C                              u6220 0B6E  
                            u6140 0920                              u6060 07AA  
                            u7020 3818                              u5261 435A  
                            u5245 4312                              u3581 57B4  
                            u6301 3942                              u4541 3BE2  
                            u5341 5448                              u4701 2570  
                            u4621 23C8                              u5181 4440  
                            u4381 1EF0                              u6221 0B6A  
                            u6141 091C                              u6061 07A6  
                            u7101 3E78                              u7021 3814  
                            u5270 4386                              u6310 39FC  
                            u4470 3A5E                              u4550 3C18  
                            u4710 2598                              u4630 2410  
                            u5190 4462                              u4390 1F04  
                            u5350 451C                              u5510 30D4  
                            u5430 5188                              u6230 0B88  
                            u6150 0978                              u6070 07BA  
                            u7110 3E94                              u7030 3836  
                            u5271 4382                              u6311 39F6  
                            u4471 3A5A                              u4551 3C14  
                            u4711 2594                              u4631 240C  
                            u5191 445E                              u4391 1F00  
                            u5511 30D0                              u5431 5184  
                            u6231 0B84                              u6151 0974  
                            u6071 07B6                              u7111 3E90  
                            u7031 3832                              u5280 43A6  
                            u5600 52D0                              u6320 39FE  
                            u4480 3A90                              u4560 3C56  
                            u4800 26B8                              u4720 25AE  
                            u4640 2422                              u5360 453A  
                            u5520 30F8                              u5440 50FE  
                            u6240 0BA0                              u6160 0A4A  
                            u6080 0822                              u7120 3EB0  
                            u6400 53D6                              u7040 3846  
                            u7200 410E                              u5281 43A2  
                            u5601 52CC                              u4481 3A8C  
                            u4561 3C52                              u4801 26B4  
                            u4721 25AA                              u4641 241E  
                            u5361 4536                              u5505 307A  
                            u5441 50F8                              u6241 0B9C  
                            u6161 0A46                              u6081 081E  
                            u7121 3EAC                              u6401 53D2  
                            u7041 3842                              u7201 410A  
                            u5290 43B6                              u6410 519A  
                            u6330 3A14                              u4570 3C80  
                            u5610 2A40                              u4810 26E8  
                            u4730 25CC                              u4650 2432  
                            u5370 4562                              u5530 3114  
                            u5506 3084                              u5450 5100  
                            u6250 0BFE                              u6170 0A66  
                            u6090 08C6                              u7130 3EC2  
                            u7050 3856                              u7210 4136  
                            u5291 43B2                              u6411 5196  
                            u6331 3A10                              u4491 3ABA  
                            u4571 3C7C                              u5611 2A3A  
                            u4811 26E4                              u4731 25C8  
                            u4651 242E                              u5371 455E  
                            u5355 4512                              u5531 3110  
                            u5507 3094                              u5427 516C  
                            u6251 0BF8                              u6171 0A62  
                            u6091 08C2                              u7131 3EBE  
                            u7051 3852                              u7211 4132  
                            u6500 357E                              u6420 51B0  
                            u6340 3A26                              u4580 3CAE  
                            u5700 2C42                              u5620 2A42  
                            u4820 2716                              u4740 25EC  
                            u4660 2472                              u4900 204A  
                            u5380 458C                              u5540 3168  
                            u5460 5116                              u6260 0C00  
                            u6180 0A78                              u7140 3EFA  
                            u7060 3866                              u7300 42C2  
                            u7220 4148                              u6501 357A  
                            u6421 51AC                              u6341 3A22  
                            u4581 3CAA                              u5701 2C3E  
                            u4821 2712                              u4741 25E8  
                            u4661 246E                              u4901 2046  
                            u5381 4588                              u5525 30EE  
                            u5461 5112                              u6181 0A74  
                            u7141 3EF6                              u7061 3862  
                            u7301 42BE                              u7221 4144  
                            u6510 358C                              u6430 51C6  
                            u4590 3CF6                              u5710 2C5C  
                            u5630 2A58                              u4750 25FE  
                            u4670 24B2                              u4910 21C4  
                            u4830 1F80                              u5550 3184  
                            u5470 3014                              u6270 0C16  
                            u6190 0A86                              u6350 4604  
                            u7150 3F0C                              u7070 3890  
                            u7230 41BA                              u6511 3588  
                            u6431 51C2                              u8007 55EE  
                            u4591 3CF2                              u5711 2C58  
                            u5631 2A54                              u4751 25FA  
                            u4671 24AE                              u4831 1F7C  
                            u5551 3180                              u6271 0C12  
                            u6191 0A82                              u6351 4600  
                            u7151 3F08                              u7071 388C  
                            u7311 46B6                              u7231 41B6  
                            u6520 35E8                              u6440 51DC  
                            u6280 38F4                              u5720 2C6C  
                            u5640 2A88                              u4760 262C  
                            u4680 2528                              u4920 221E  
                            u4840 1F92                              u5560 31C0  
                            u5480 3044                              u5800 0192  
                            u6360 4636                              u6600 148C  
                            u7160 3F8E                              u7080 38A0  
                            u7400 3E36                              u7320 4740  
                            u6521 35E4                              u6441 51D8  
                            u8017 5600                              u6281 38F0  
                            u5721 2C68                              u5641 2A84  
                            u4761 2628                              u4681 2524  
                            u4921 221A                              u4841 1F8E  
                            u5561 31BC                              u5545 315E  
                            u5481 3040                              u5801 018E  
                            u6361 4632                              u6601 1488  
                            u7161 3F8A                              u7081 389C  
                            u7401 3E32                              u7241 41D0  
                            u7321 473C                              u6530 363E  
                            u5570 55CA                              u6290 392A  
                            u5730 2C7E                              u5650 2AA4  
                            u4770 2642                              u4690 254A  
                            u4930 223E                              u4850 1FA2  
                            u5490 3066                              u5810 01C2  
                            u6370 4652                              u6610 14D6  
                            u6450 4FB2                              u7090 38B0  
                            u7410 3E56                              u7250 41EC  
                            u7330 4772                              u6531 363A  
                            u8027 4CB0                              u5571 55C4  
                            u6291 3926                              u5731 2C7A  
                            u5651 2AA0                              u4771 263E  
                            u4691 2546                              u4931 223A  
                            u4915 21BA                              u4851 1F9E  
                            u5395 459E                              u5491 3062  
                            u5475 300A                              u5811 01BC  
                            u6371 464E                              u6611 14D2  
                            u6451 4FAE                              u7091 38AC  
                            u7411 3E52                              u7251 41E8  
                            u7331 476E                              u7171 40C4  
                            u6540 3688                              u5580 55CC  
                            u5740 2C8E                              u5660 2AD2  
                            u4780 2656                              u4940 2250  
                            u4860 1FE2                              u5900 0438  
                            u5820 01C4                              u6380 4664  
                            u6700 16D8                              u6620 151C  
                            u6460 4FEC                              u7420 3E66  
                            u7500 2E34                              u7260 4208  
                            u7180 40E0                              u6541 3684  
                            u8037 4CCA                              u5741 2C8A  
                            u5661 2ACE                              u4781 2652  
                            u4941 224C                              u4861 1FDE  
                            u5901 0434                              u6381 4660  
                            u6701 16D4                              u6621 1518  
                            u6461 4FE8                              u7421 3E62  
                            u7341 3D3E                              u7501 2E30  
                            u7261 4204                              u7181 40DC  
                            u6550 36A6                              u5590 52A2  
                            u5750 2CA6                              u5670 2AE0  
                            u4790 2670                              u4950 227E  
                            u4870 1FF4                              u5910 045E  
                            u5830 01DA                              u6390 468C  
                            u6710 170A                              u6630 159E  
                            u6470 4C08                              u7350 3DB6  
                            u7510 2E80                              u7270 421A  
                            u7190 40FC                              u6551 36A2  
                            u8047 4CE0                              u5591 529E  
                            u5751 2CA2                              u5671 2ADC  
                            u4791 266C                              u4951 227A  
                            u4871 1FF0                              u5911 045A  
                            u5831 01D6                              u6391 4688  
                            u6711 1706                              u6631 1598  
                            u6471 4C04                              u7351 3DB2  
                            u7511 2E7C                              u7431 2CFA  
                            u7271 4216                              u7191 40F8  
                            u6560 36B6                              u7600 3228  
                            u5680 2C0A                              u4960 2294  
                            u4880 2004                              u5920 0470  
                            u5840 0266                              u5760 00DA  
                            u6800 1A22                              u6720 174C  
                            u6640 15A0                              u6480 4C2A  
                            u7360 3DDE                              u7520 2EE4  
                            u7440 2D16                              u7280 4240  
                            u6561 36B2                              u8057 577E  
                            u7601 3224                              u5681 2C06  
                            u4961 2290                              u4881 2000  
                            u5921 046C                              u5841 0262  
                            u5761 00D6                              u6801 1A1E  
                            u6721 1748                              u6481 4C26  
                            u7361 3DDA                              u7521 2EE0  
                            u7441 2D12                              u7281 423C  
                            u6570 36C4                              u6810 4EBC  
                            u7610 3240                              u5690 2C28  
                            u4970 22A8                              u4890 203A  
                            u5930 0492                              u5850 0296  
                            u5770 012A                              u6730 17A2  
                            u6650 15B6                              u6490 4C52  
                            u7370 3DEE                              u7530 2F16  
                            u7450 2D2E                              u7290 4252  
                            u6571 36C0                              u6811 4EB8  
                            u7611 323C                              u5691 2C24  
                            u4971 22A4                              u4891 2036  
                            u5931 048E                              u5851 0290  
                            u5771 0126                              u6731 179E  
                            u6651 15B2                              u6491 4C4E  
                            u7371 3DEA                              u7531 2F12  
                            u7451 2D2A                              u7291 424E  
                            u6580 36FE                              u6820 4E42  
                            u6900 50AE                              u7700 32E6  
                            u7620 324E                              u4980 22C2  
                            u5940 04B8                              u5860 0298  
                            u5780 0138                              u6740 17C6  
                            u6660 15DA                              u7380 3DFE  
                            u7540 2F62                              u7460 2D44  
                            u6581 36FA                              u6821 4E3E  
                            u6901 50AA                              u7701 32E2  
                            u7621 324A                              u4981 22BE  
                            u5941 04B4                              u5781 0134  
                            u6741 17C2                              u6661 15D6  
                            u7381 3DFA                              u7541 2F5E  
                            u7461 2D40                              u6590 370C  
                            u6910 4DE4                              u7710 32FC  
                            u7630 3264                              u4990 230A  
                            u5950 04CE                              u5870 02AE  
                            u5790 014A                              u6750 1858  
                            u6670 1616                              u6830 34F6  
                            u7390 3E10                              u7550 2F70  
                            u7470 2DA8                              u6591 3708  
                            u7711 32F8                              u7631 3260  
                            u4991 2306                              u5951 04CA  
                            u5871 02AA                              u5791 0146  
                            u6751 1854                              u6671 1612  
                            u6831 34F2                              u7391 3E0C  
                            u7551 2F6C                              u7471 2DA4  
                            u6920 4E18                              u7800 33A4  
                            u7720 330C                              u7640 3274  
                            u5960 04EA                              u5880 0332  
                            u6760 1906                              u6680 16C0  
                            u6840 351A                              u7560 2FBC  
                            u7480 2DDA                              u7801 33A0  
                            u7721 3308                              u7641 3270  
                            u5961 04E6                              u5881 032E  
                            u6761 1902                              u6681 16BA  
                            u6841 3516                              u7561 2FB8  
                            u7481 2DD6                              u6930 4E28  
                            u7730 3324                              u7650 328C  
                            u7570 31F4                              u5970 0520  
                            u5890 03C6                              u6770 196E  
                            u6690 16C2                              u6850 353E  
                            u7490 2E26                              u7810 4D2C  
                            u6931 4E24                              u7731 3320  
                            u7651 3288                              u7571 31F0  
                            u5971 051C                              u5891 03C2  
                            u6771 1968                              u6851 353A  
                            u7491 2E22                              u7811 4D28  
                            u6940 5768                              u7740 3332  
                            u7660 329A                              u7580 3202  
                            u5980 0546                              u6780 1970  
                            u6860 3562                              u7900 4F80  
                            u7820 4D3E                              u6917 4DDA  
                            u6941 5764                              u7741 332E  
                            u7661 3296                              u7581 31FE  
                            u5981 0542                              u6861 355E  
                            u7901 4F7C                              u7821 4D3A  
                            u7750 3348                              u7670 32B0  
                            u7590 3218                              u5990 0558  
                            u6790 1986                              u6870 505E  
                            u7830 4D4E                              u6927 4E0E  
                            u7751 3344                              u7671 32AC  
                            u7591 3214                              u5991 0554  
                            u6791 1982                              u6871 505A  
                            u6951 3726                              u7831 4D4A  
                            u7760 3358                              u7680 32C0  
                            u6880 56D2                              u6960 3796  
                            u7840 4D5E                              u7761 3354  
                            u7681 32BC                              u6881 56CE  
                            u6961 3792                              u7841 4D5A  
                            u6890 507A                              u7770 3370  
                            u7690 32D8                              u6970 37BA  
                            u7850 4D6E                              u6891 5076  
                            u7771 336C                              u7691 32D4  
                            u6971 37B6                              u7851 4D6A  
                            u7780 337E                              u6980 37CA  
                            u7860 4D8A                              u7781 337A  
                            u6981 37C6                              u7861 4D86  
                            u7790 3394                              u6990 37E8  
                            u7870 4DA6                              u7791 3390  
                            u6991 37E4                              u7871 4DA2  
                            u7880 4F38                              u7881 4F34  
                            u7890 4F5C                              u7891 4F58  
                            u7987 40A4                              u7997 5312  
                            _TMR2 000FBC             ??_stopTimeSettingMenu 005F  
                            abs@a 0013                              _dbuf 0260  
                            _atoi 38BC                              _main 57BA  
                            _dtoa 2A10                              _prec 00F6  
                            _nout 01AF                              pad@i 0018  
                            pad@p 0015                              fsr1h 000FE2  
                            fsr2h 000FDA                              indf1 000FE7  
                            indf2 000FDF                              fsr1l 000FE1  
                            pad@w 001A                              fsr2l 000FD9  
                            btemp 005F                     ___fpclassifyf 44DC  
                            prodh 000FF4                              prodl 000FF3  
                            start 00AE                   ___fldiv@new_exp 0046  
                    _tolower$3145 000D                      ___param_bank 000000  
         ??_driverTimeSettingMenu 005F                             ??_abs 0015  
                           ??_pad 0017  speedLimitSettingMenu@textCursor2 00E1  
                   ___fltol@sign1 0056                   __end_of___aodiv 3BD4  
                           ?_atoi 0008                   __end_of___fladd 1F66  
                           ?_main 0001                             ?_dtoa 001C  
                 __end_of___aomod 3D38                   __end_of_adcInit 54EE  
                 __end_of___fldiv 272A                   __end_of___awdiv 49D6  
                 __end_of___flneg 559A                             _EEADR 000FA9  
                           STR_10 7FD0                             STR_11 7F09  
                           STR_20 7FF3                             STR_12 7FDE  
                           STR_13 7F1A                             STR_14 7EF7  
                           STR_23 7FEF                             STR_15 7F6F  
                           STR_24 7FF7                             STR_16 7F91  
                           STR_17 7F5E                             STR_18 7EF7  
                           STR_27 7FFB                             STR_19 7FEB  
                 __end_of___awmod 4B38                             STR_29 7FFB  
                 __end_of___flmul 2390                   __end_of___flsub 536C  
                 __end_of___fltol 43D8                   __end_of___lldiv 4C86  
                           _T0CON 000FD5                   ___awdiv@divisor 0003  
                           i2l692 00AA                   ___awdiv@counter 0005  
                    vfpfcnvrt@fmt 00A9                             _TMR0H 000FD7  
                           _TMR0L 000FD6               ___lmul@multiplicand 0005  
                 __end_of_lcdInit 4D1C                   __end_of_lcdPort 51E6  
                           _fabsf 5676                   __end_of_mcuInit 57BA  
                           _flags 00F8                             _fputc 4782  
                           _fputs 536C                   __end_of_isdigit 55D2  
                     ?_PWM1_setDC 0058                      _adc_raw_data 0173  
                     ?_PWM2_setDC 0058                             atoi@n 0015  
                           pad@fp 0011                             atoi@s 0008  
                           _width 01B1                             _putch 57F0  
                           dtoa@d 001E                             dtoa@i 003E  
                           dtoa@n 0036                             dtoa@p 0030  
                           dtoa@s 0034                             dtoa@w 0032  
                 __end_of_isspace 52DC                   __end_of_isupper 5562  
                __end_of_PWM_Init 5728                             tablat 000FF5  
                           ttemp5 0060                             ttemp6 0063  
                           ttemp7 0067                             status 000FD8  
          ?_speedLimitSettingMenu 0001                             wtemp8 0060  
                 __end_of_sprintf 528A                    ?___fpclassifyf 0001  
                 __end_of_tolower 512E                   __end_of_strncmp 46B0  
                   ?_readAdcValue 0001                   __initialization 51E6  
                    __end_of_atoi 3A4C                      __end_of_main 57CE  
                    __end_of_dtoa 2CF4       _KP@fs_speed_controller$F949 01E7  
                          ??_atoi 000A                            ??_main 005F  
                          ??_dtoa 0026               _loopTaskMenuControl 4F1E  
                   __activetblptr 000002   __size_of_calculatedAverageValue 02E6  
            __end_of_lcdSetCursor 50CE                  ??_lcdWriteString 0007  
        stopTimeSettingMenu@F6912 0210                            ?_fabsf 001C  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          ?_fputc 0001                            ?_fputs 000A  
                          _ADRESH 000FC4                            _ADRESL 000FC3  
                          _EEDATA 000FA8                            _CCPR1L 000FBE  
                          _CCPR2L 000F67                            _EECON2 000FA7  
                ___awdiv@dividend 0001                            ?_putch 0001  
                          i2l6521 0030                            i2l6513 000A  
                          i2l6531 0060                            i2l6523 0034  
                          i2l6515 0018                            i2l6541 009E  
                          i2l6533 0072                            i2l6525 0044  
                          i2l6517 0026                            i2l6543 00A6  
                          i2l6535 0074                            i2l6527 0048  
                          i2l6519 0028                            i2l6537 0084  
                          i2l6529 005A                            i2l6539 0088  
                          _TIMER0 0008                    ??_readAdcValue 0003  
            ?_loopTaskMenuControl 0001                  __end_of___xxtofl 3720  
               _scanAdcConversion 0C62                _timer_counter_flag 00FA  
                __end_of_lcdClear 57EE                ?_scanAdcConversion 0001  
            __size_of_eepromWrite 002E                      vfprintf@cfmt 00CD  
                          ___flge 43D8                            ___fleq 4B38  
                __end_of_mainMenu 38BC                            ___lmul 4F94  
                       ??___aodiv 0011                         ??___fladd 003D  
                       ??___aomod 0011                            ___wmul 5728  
                       ??_adcInit 0001                         ??___fldiv 003D  
                       ??___awdiv 0005              __end_of_lcdWriteChar 560A  
                       ??___flneg 0005                   lcdWriteString@a 0005  
                       ??___awmod 0005                   lcdWriteString@i 0009  
                       ??___flmul 0024                         ??___flsub 004D  
                       ??___fltol 0052                         ??___lldiv 0009  
                          _lcdCmd 576C                            _efgtoa 00B2  
                          _floorf 2FCC               __size_of_PWM1_setDC 007A  
                          fabsf@u 0020                            fabsf@x 001C  
                __end_of_exitLine 57F0               __size_of_PWM2_setDC 007A  
               _secretMenuCounter 00FC               ??_scanAdcConversion 0058  
                          clear_0 520C                            clear_1 5218  
                          clear_2 5224                   eepromWrite@data 0001  
                ___awdiv@quotient 0007                   ___awmod@divisor 0003  
                       ??_lcdInit 0004                   ___awmod@counter 0005  
                          pad@buf 0013                         ??_lcdPort 0001  
                          dtoa@fp 001C                            _strcpy 512E  
                          _strlen 5640                         ??_mcuInit 0001  
                          fputc@c 0001              readAdcValue@adcValue 0006  
                          fputs@c 000E                            fputs@i 000F  
                          fputs@s 000A                         ??_isdigit 0003  
                 ___fpclassifyf@e 0009                   ___fpclassifyf@u 000B  
                 ___fpclassifyf@x 0001                      __mediumconst 7EF6  
                       ??_isspace 0003                            tblptrh 000FF7  
                       ??_isupper 0003                            tblptrl 000FF6  
                          tblptru 000FF8                            putch@c 0001  
                __end_of_vfprintf 5068                         ??_sprintf 005F  
                       ??_tolower 0009                  __end_of_stopMenu 4782  
                       ??_strncmp 0007        __end_of_buttonControlFlags 33AE  
                      ___flge@ff1 0035                        ___flge@ff2 0039  
                 ??___fpclassifyf 0005                      ___xxtofl@arg 0018  
                    ___xxtofl@exp 0017                      ___xxtofl@val 000E  
                      ___fleq@ff1 0001                        ___fleq@ff2 0005  
                   mainMenu@F6896 0163         __end_of_scanAdcConversion 1468  
                      __accesstop 0060           __end_of__initialization 522A  
           ??_loopTaskMenuControl 005F                        ___flneg@f1 0001  
          _calculatedAverageValue 272A                     ___rparam_used 000001  
                      ___fltol@f1 004E               _loopTaskTimeMachine 4D1C  
                  __pcstackCOMRAM 0001                      __pidataBANK1 53F2  
      driverTimeSettingMenu@F6915 0200                     __end_of_fabsf 56AA  
                ??_openLCD_Script 000B                     __end_of_fputc 484C  
                   __end_of_fputs 53B0                     __end_of_putch 57F2  
                       ?_PWM_Init 0001      _KP@fs_speed_controller$F1163 01DF  
    _KP@fs_speed_controller$F1342 01D7      _KP@fs_speed_controller$F2207 01BF  
    _KP@fs_speed_controller$F2076 01C7      _KP@fs_speed_controller$F2360 01B7  
    _KP@fs_speed_controller$F1842 01CF                 eepromRead@address 0001  
            ?_loopTaskTimeMachine 0001                  lcdWriteChar@temp 0002  
                         ??_fabsf 0020                     ?_loopTaskInit 0001  
                         ??_fputc 0005                           ??_fputs 000E  
                         ??_putch 0001                        __pbssBANK0 00F3  
                      __pbssBANK1 0100                        __pbssBANK2 0200  
             PWM1_setDC@dutycycle 0058                           ?_TIMER0 0001  
                         ?___flge 0035                           ?___fleq 0001  
              __size_of_pauseMenu 013A                           ?___lmul 0001  
                         ?___wmul 0001                           ?_lcdCmd 0001  
                         ?_efgtoa 0058    __size_of_driverTimeSettingMenu 012C  
                         _CCP1CON 000FBD                           _CCP2CON 000F66  
                         ?_floorf 004E             __size_of_lcdSetCursor 0066  
   __end_of_driverTimeSettingMenu 3F9E                    ___lmul@product 0009  
                      ??_PWM_Init 0001                           ?_strcpy 0001  
                         ?_strlen 0001              __end_of_readAdcValue 53F2  
                      _eepromRead 574E                         ?___xxtofl 000E  
           ??_loopTaskTimeMachine 0001    stopTimeSettingMenu@textCursor2 00E1  
              __size_of_vfpfcnvrt 063E                         ?_lcdClear 0001  
     __end_of_stopTimeSettingMenu 41CA                    ??_loopTaskInit 005E  
              __size_of_startMenu 001A                      ??_PWM1_setDC 005A  
                    ??_PWM2_setDC 005A           __size_of_menuInitialize 0028  
         ??_speedLimitSettingMenu 005F                         ?_mainMenu 0001  
                   _menu_selected 00FB                __size_of_stopMotor 003C  
      __size_of_scanAdcConversion 0806                         ?_exitLine 0001  
                 __size_of_TIMER0 00A6                        _controller 0150  
           __size_of_lcdWriteChar 0038                      _lcdSetCursor 5068  
                         __Hparam 0000                           __Lparam 0000  
             PWM2_setDC@dutycycle 0058                   __size_of___flge 0104  
                 __size_of___fleq 00AA                           ___aodiv 3A4C  
                         ___fladd 1AA6                           ___aomod 3BD4  
                         _adcInit 54B0                           ___fldiv 2390  
                         ___awdiv 4912                           ___flneg 5562  
                 __size_of___lmul 006A                           ___awmod 4A88  
                         ___flmul 1F66                           ___flsub 5326  
                         ___fltol 42D2                           ___lldiv 4BE2  
                 __size_of___wmul 0026                         ?_vfprintf 00C7  
                 __size_of_lcdCmd 001E                   __size_of_efgtoa 0BB0  
                       ?_stopMenu 0001                   __size_of_floorf 0216  
                         __pcinit 51E6                __end_of_PWM1_setDC 4F1E  
                         __ramtop 0600                __end_of_PWM2_setDC 4EA4  
                         _lcdInit 4C86                           __ptext0 57BA  
                         __ptext1 4D1C                           __ptext2 4F1E  
                         __ptext3 49D6                           __ptext4 40BE  
                         __ptext5 46B0                           __ptext6 578A  
                         __ptext7 41CA                           __ptext8 2CF4  
                         __ptext9 3D38                           _lcdPort 518A  
                      _menu_flags 0197                        _menu_value 00F3  
                 __size_of_strcpy 005C                   __size_of_strlen 0036  
                         _mcuInit 57A4                         _T2CONbits 000FBA  
                    __size_of_abs 0040                      __size_of_pad 00C6  
                         _isdigit 559A                        ??___xxtofl 0012  
                ___awmod@dividend 0001                           lcdCmd@a 0003  
                         _isspace 528A                           _isupper 552A  
                      ??_lcdClear 0004                           efgtoa@c 005E  
                         efgtoa@d 0087                           efgtoa@e 009F  
                         efgtoa@f 005A                           efgtoa@g 009B  
                         efgtoa@h 0091                           efgtoa@i 0099  
                         efgtoa@l 0095                           efgtoa@m 0083  
                         efgtoa@n 00A1                           efgtoa@p 008B  
                         efgtoa@t 007F                           efgtoa@u 00A3  
                         efgtoa@w 008E                     ?_speedControl 0058  
                         atoi@neg 000E                     ?_timer_0_init 0001  
               __end_of_pauseMenu 3E72                           _sprintf 5238  
                         _tolower 50CE                      _lcdWriteChar 55D2  
                         _strncmp 45DA              end_of_initialization 522A  
                      ??_mainMenu 005F              speedControl@position 0058  
                         floorf@e 0064                           floorf@m 0060  
                         floorf@u 0066                           floorf@x 004E  
                      _secretMenu 2CF4                           fputc@fp 0003  
                      ??_exitLine 0001                     __Lmediumconst 7EF6  
                         fputs@fp 000C                   ___lldiv@divisor 0005  
                 ___lldiv@counter 000D                 __end_of_vfpfcnvrt 1AA6  
                      efgtoa@mode 0090                        efgtoa@sign 0089  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                 __end_of_startMenu 57A4  
                      ??_vfprintf 005F                        ??_stopMenu 005F  
                         strcpy@d 0009                           strlen@a 0003  
                         strcpy@s 0007                           strlen@s 0001  
               __end_of_stopMotor 552A                         _PORTBbits 000F81  
                       _PORTDbits 000F83                       ?_eepromRead 0001  
                     ___fladd@grs 0044                     ___xxtofl@sign 0016  
                  pauseMenu@F6902 0240                         _TRISAbits 000F92  
                  ??_speedControl 005C                         _TRISBbits 000F93  
                       _TRISCbits 000F94                         _TRISDbits 000F95  
                       _TRISEbits 000F96                    ??_timer_0_init 0001  
            pauseMenu@textCursor2 00E1                       ___fldiv@grs 0048  
                     ___fldiv@rem 0041                        _startMotor 560A  
         ?_calculatedAverageValue 0001                       ___flmul@grs 0029  
                   ??_eepromWrite 0002          _button_bounce_controller 019D  
                  __end_of_TIMER0 00AE               mainMenu@textCursor2 00E1  
                   ?_stateMachine 0001                _buttonControlFlags 31E2  
            __end_of_loopTaskInit 54B0                      _convert_data 0100  
           __size_of_readAdcValue 0042                    __end_of___flge 44DC  
                  __end_of___fleq 4BE2                    __end_of___lmul 4FFE  
                     vfpfcnvrt@ap 00AB                       vfpfcnvrt@ct 00C3  
                     vfpfcnvrt@fp 00A7                       vfpfcnvrt@ll 00B1  
                  __end_of___wmul 574E                    __end_of_lcdCmd 578A  
                  __end_of_efgtoa 0C62               ?_buttonControlFlags 0001  
                  __end_of_floorf 31E2                        floorf@F524 01A3  
                  __end_of_strcpy 518A                    __end_of_strlen 5676  
               __size_of_PWM_Init 0028               start_initialization 51E6  
                      _systemInit 3F9E                       __end_of_abs 5472  
                     __end_of_pad 4912       __end_of_loopTaskMenuControl 4F94  
  __end_of_calculatedAverageValue 2A10                    _menuInitialize 56D8  
                    _driver_limit 0183                       ?_secretMenu 0001  
            ??_buttonControlFlags 0001                          ??_TIMER0 0001  
         __size_of_lcdWriteString 007E                     stopMenu@F6899 0250  
           __end_of___fpclassifyf 45DA                      _readAdcValue 53B0  
                  ??_stateMachine 00F1               __size_of_eepromRead 001E  
                     vfprintf@fmt 00C9                          ??___flge 003D  
                        ??___fleq 0009                          ??___lmul 0009  
             __end_of_eepromWrite 56D8                          ??___wmul 0005  
                        ??_lcdCmd 0002                          ??_efgtoa 006A  
                     __pdataBANK1 01B3                          ??_floorf 0052  
                        ??_strcpy 0005                          ??_strlen 0003  
                       ___fladd@a 0039                         ___fladd@b 0035  
                       ___fldiv@a 0039                         ___fldiv@b 0035  
                       ___flmul@a 0020                         ___flmul@b 001C  
                       ___flsub@a 0049                         ___flsub@b 0045  
          __end_of_menuInitialize 5700                     __pcstackBANK0 0060  
                ___aodiv@dividend 0001                 __size_of___xxtofl 01B4  
                     ?_startMotor 0001                 __size_of_lcdClear 000E  
  __size_of_speedLimitSettingMenu 0108     __end_of_speedLimitSettingMenu 42D2  
               __size_of_mainMenu 019C                         _atoi$3050 0010  
                       _atoi$3051 0014                         _atoi$3052 0012  
                 secretMenu@F6906 0230                 __size_of_exitLine 0002  
                     _efgtoa$2983 0073                       _efgtoa$2992 0079  
                     _efgtoa$2984 0075                       _efgtoa$2993 007B  
                     _efgtoa$2994 007D                       _efgtoa$2988 0077  
                       _dtoa$2959 002E              __end_of_speedControl 356C  
                       __pintcode 0008                     __pmediumconst 7EF6  
            __end_of_timer_0_init 57E0                          ?___aodiv 0001  
                        ?___fladd 0035                          ?___aomod 0001  
                        ?_adcInit 0001                          ?___fldiv 0035  
                        ?___awdiv 0001                  ___aodiv@quotient 0013  
                        ?___flneg 0001                          ?___awmod 0001  
                        ?___flmul 001C                          ?___flsub 0045  
                        ?___fltol 004E                          ?___lldiv 0001  
     __end_of_loopTaskTimeMachine 4DAC                          ?_lcdInit 0001  
             __size_of_secretMenu 02D8                          ?_lcdPort 0001  
               __size_of_vfprintf 006A             _driverTimeSettingMenu 3E72  
               __size_of_stopMenu 00D2                          ?_mcuInit 0001  
                       fabsf@F463 01AB                          ?_isdigit 0001  
                        ?_isspace 0001                   ?_menuInitialize 0001  
                     ?_systemInit 0001                          ?_isupper 0001  
         __size_of_openLCD_Script 004A                    __size_of_fabsf 0034  
                        ?_sprintf 00CF                          ?_tolower 0007  
                  __size_of_fputc 00CA                    __size_of_fputs 0044  
                        ?_strncmp 0001                    __size_of_putch 0002  
              eepromWrite@address 0002                         _pauseMenu 3D38  
                  ___wmul@product 0005      __size_of_stopTimeSettingMenu 010C  
                        _LATCbits 000F8B                          _LATDbits 000F8C  
                     _eepromWrite 56AA             __size_of_loopTaskInit 003E  
                  PWM1_setDC@duty 005C                          _PIR2bits 000FA1  
                        i2u791_40 0018                          i2u791_41 0014  
                        i2u792_40 0026                          i2u792_41 0022  
                        i2u793_40 0044                          i2u793_41 0040  
                        i2u794_40 005A                          i2u794_41 0056  
                        i2u795_40 0072                          i2u795_41 006E  
                        i2u796_40 0084                          i2u796_41 0080  
                        i2u797_40 009E                          i2u797_41 009A  
                    _pauseIsClick 00FF               __size_of_startMotor 0036  
                       _vfpfcnvrt 1468                        _ADCON0bits 000FC2  
                      _ADCON2bits 000FC0                          _PWM_Init 5700  
               ___wmul@multiplier 0001                         _startMenu 578A  
driverTimeSettingMenu@textCursor2 00E1                      ??_eepromRead 0001  
                  PWM2_setDC@duty 005C                         _stopMotor 54EE  
      speedLimitSettingMenu@F6909 0220              __end_of_stateMachine 4A88  
                    _isspace$3081 0007                        vfpfcnvrt@c 00C6  
                      vfpfcnvrt@f 00BF                 ___lmul@multiplier 0001  
                    _loopTaskInit 5472                         copy_data0 51FA  
                  _lcdWriteString 4DAC                        ?_pauseMenu 0001  
                      _EECON1bits 000FA6                  lcdSetCursor@temp 0008  
                        __Hrparam 0000                        vfprintf@ap 00CB  
                        __Lrparam 0000                        vfprintf@fp 00C7  
              __end_of_eepromRead 576C               __size_of_systemInit 0120  
                __size_of___aodiv 0188                  __size_of___fladd 04C0  
                __size_of___aomod 0164                  __size_of_adcInit 003E  
                __size_of___fldiv 039A                  __size_of___awdiv 00C4  
                __size_of___flneg 0038                  __size_of___awmod 00B0  
                __size_of___flmul 042A                  __size_of___flsub 0046  
                __size_of___fltol 0106                  __size_of___lldiv 00A4  
                      ?_vfpfcnvrt 00A7            ?_driverTimeSettingMenu 0001  
                 ___aodiv@divisor 0009                   ___aodiv@counter 0011  
                      ?_startMenu 0001                        _ANSELAbits 000F38  
                      _ANSELBbits 000F39                        _ANSELCbits 000F3A  
                      _ANSELDbits 000F3B                        _ANSELEbits 000F3C  
                __size_of_lcdInit 0096                ___fpclassifyf@F463 01A7  
                __size_of_lcdPort 005C                        sprintf@fmt 00D1  
                        ___xxtofl 356C                  __size_of_mcuInit 0016  
                      ?_stopMotor 0001                  __size_of_isdigit 0038  
                        _lcdClear 57E0                  __size_of_isspace 0052  
                        __ptext10 3720                          __ptext11 560A  
                        __ptext20 54EE                          __ptext12 33AE  
                        __ptext21 5238                          __ptext13 0C62  
                        __ptext30 44DC                          __ptext22 4FFE  
                        __ptext14 53B0                          __ptext31 5326  
                        __ptext23 1468                          __ptext15 272A  
                        __ptext40 2A10                          __ptext32 1AA6  
                        __ptext24 45DA                          __ptext16 4F94  
                        __ptext41 484C                          __ptext33 5562  
                        __ptext25 00B2                          __ptext17 4BE2  
                        __ptext50 528A                          __ptext42 5640  
                        __ptext34 1F66                          __ptext26 50CE  
                        __ptext18 57EE                          __ptext51 559A  
                        __ptext43 536C                          __ptext35 43D8  
                        __ptext27 552A                          __ptext19 3E72  
                        __ptext60 4DAC                          __ptext52 5728  
                        __ptext44 4782                          __ptext36 4B38  
                        __ptext28 512E                          __ptext61 55D2  
                        __ptext53 56AA                          __ptext45 57F0  
                        __ptext37 2390                          __ptext29 2FCC  
                        __ptext70 5700                          __ptext62 5068  
                        __ptext54 31E2                          __ptext46 5432  
                        __ptext38 4A88                          __ptext71 4E2A  
                        __ptext63 57E0                          __ptext55 5472  
                        __ptext47 3BD4                          __ptext39 4912  
                        __ptext72 4EA4                          __ptext64 56D8  
                        __ptext56 57CE                          __ptext48 3A4C  
                        __ptext73 5676                          __ptext65 57A4  
                        __ptext57 3F9E                          __ptext49 38BC  
                        __ptext74 356C                          __ptext66 4C86  
                        __ptext58 574E                          __ptext75 42D2  
                        __ptext67 576C                          __ptext59 52DC  
                        __ptext68 518A                          __ptext69 54B0  
                __size_of_isupper 0038            __end_of_lcdWriteString 4E2A  
                        _mainMenu 3720                  __size_of_sprintf 0052  
                __size_of_tolower 0060                      ??_secretMenu 005F  
                      strcpy@dest 0001                  __size_of_strncmp 00D6  
                   lcdSetCursor@a 0005                     lcdSetCursor@b 0004  
                   lcdSetCursor@y 0007                     lcdSetCursor@z 0006  
                        _exitLine 57EE                     __size_of_atoi 0190  
                   __size_of_main 0014                     __size_of_dtoa 02E4  
           __size_of_speedControl 01BE             __size_of_timer_0_init 0012  
           secretMenu@textCursor2 00E1                          efgtoa@fp 0058  
                        efgtoa@ne 0085                          efgtoa@pp 0081  
                        efgtoa@ou 006F                          lcdPort@a 0001  
                        int$flags 005F                          _vfprintf 4FFE  
                        _stopMenu 46B0            readAdcValue@adcChannel 0005  
                ___aomod@dividend 0001                __end_of_secretMenu 2FCC  
                  _vfpfcnvrt$3014 00BD                    _vfpfcnvrt$3008 00B9  
                  _vfpfcnvrt$3009 00BB                       _OSCTUNEbits 000F9B  
                      _INTCONbits 000FF2                    _openLCD_Script 52DC  
    _KD@fs_speed_controller$F1164 01DB      _KD@fs_speed_controller$F1343 01D3  
    _KD@fs_speed_controller$F2208 01BB      _KD@fs_speed_controller$F2077 01C3  
    _KD@fs_speed_controller$F2361 01B3      _KD@fs_speed_controller$F1843 01CB  
                        isdigit@c 0001                      _speedControl 33AE  
                    _timer_0_init 57CE                   ?_lcdWriteString 0005  
                    ??_startMotor 005E                          intlevel2 0000  
                       sprintf@ap 00D9                       ??_pauseMenu 005F  
     __size_of_buttonControlFlags 01CC                          isspace@c 0001  
                ___lldiv@dividend 0001      __size_of_loopTaskMenuControl 0076  
                       strcpy@src 0003                     ?_lcdSetCursor 0004  
                        isupper@c 0001                         strncmp@_l 0001  
                       strncmp@_r 0003                        _OSCCONbits 000FD3  
                     efgtoa@nmode 008D                      _procces_data 0130  
                 ___aomod@divisor 0009                       ??_vfpfcnvrt 00AD  
                 ___aomod@counter 0011                  ??_menuInitialize 0001  
              __end_of_startMotor 5640       _KD@fs_speed_controller$F950 01E3  
           __size_of_stateMachine 00B2                       ??_startMenu 0001  
             _stopTimeSettingMenu 40BE            __end_of_openLCD_Script 5326  
                        sprintf@f 00DB                          tolower@c 0007  
                        sprintf@s 00CF            __size_of___fpclassifyf 00FE  
                ___lldiv@quotient 0009                       ??_stopMotor 005E  
                    ??_systemInit 0002                          strncmp@l 0008  
                        strncmp@n 0005                          strncmp@r 000A  
                     _timer_value 018F                     ?_lcdWriteChar 0001  
                   ___fladd@signs 0041                        _PWM1_setDC 4EA4  
                      _PWM2_setDC 4E2A                      ___aodiv@sign 0012  
                    ___fladd@aexp 0042                      ___fladd@bexp 0043  
            ?_stopTimeSettingMenu 0001                      ?_eepromWrite 0001  
                  ??_lcdSetCursor 0005             _speedLimitSettingMenu 41CA  
                    ___aomod@sign 0012                      _stateMachine 49D6  
